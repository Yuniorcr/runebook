<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="3223a115f7489184588192122ef37abd18d9b404" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setbykey&quot;&gt;Memcached::setByKey&lt;/a&gt; &amp;mdash; Store an item on a specific server</source>
          <target state="translated">&lt;a href=&quot;memcached.setbykey&quot;&gt;Memcached :: setByKey&lt;/a&gt; &amp;mdash; 특정 서버에 항목을 저장</target>
        </trans-unit>
        <trans-unit id="71d26b8acb310228563843b041a9d05e3f541fff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached::setMulti()&lt;/a&gt; - Store multiple items</source>
          <target state="translated">&lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached :: setMulti ()&lt;/a&gt; -여러 항목 저장</target>
        </trans-unit>
        <trans-unit id="9979b42d7838764f174d7e2c3c40fecc5eb84346" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached::setMulti&lt;/a&gt; &amp;mdash; Store multiple items</source>
          <target state="translated">&lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached :: setMulti-&lt;/a&gt; 여러 항목 저장</target>
        </trans-unit>
        <trans-unit id="f42fb715baddd2a73b68d25c772ef144ad6c4427" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setmultibykey&quot;&gt;Memcached::setMultiByKey()&lt;/a&gt; - Store multiple items on a specific server</source>
          <target state="translated">&lt;a href=&quot;memcached.setmultibykey&quot;&gt;Memcached :: setMultiByKey ()&lt;/a&gt; -특정 서버에 여러 항목 저장</target>
        </trans-unit>
        <trans-unit id="002755889a509a7a495f898c948482e6cd3024b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setmultibykey&quot;&gt;Memcached::setMultiByKey&lt;/a&gt; &amp;mdash; Store multiple items on a specific server</source>
          <target state="translated">&lt;a href=&quot;memcached.setmultibykey&quot;&gt;Memcached :: setMultiByKey&lt;/a&gt; &amp;mdash; 특정 서버에 여러 항목을 저장</target>
        </trans-unit>
        <trans-unit id="91a50e9c7bb8e458c3cd5bf2c89d64001cf765e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setoption&quot;&gt;Memcached::setOption()&lt;/a&gt; - Set a Memcached option</source>
          <target state="translated">&lt;a href=&quot;memcached.setoption&quot;&gt;Memcached :: setOption ()&lt;/a&gt; -Memcached 옵션 설정</target>
        </trans-unit>
        <trans-unit id="14f3bf816e3106492fe7e0d06fbf282e69f98e81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setoption&quot;&gt;Memcached::setOption&lt;/a&gt; &amp;mdash; Set a Memcached option</source>
          <target state="translated">&lt;a href=&quot;memcached.setoption&quot;&gt;Memcached :: setOption&lt;/a&gt; &amp;mdash; Memcached 옵션 설정</target>
        </trans-unit>
        <trans-unit id="818154be77f8f9162b9f5c7b2358b1d5b6a87c55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setoptions&quot;&gt;Memcached::setOptions()&lt;/a&gt; - Set Memcached options</source>
          <target state="translated">&lt;a href=&quot;memcached.setoptions&quot;&gt;Memcached :: setOptions ()&lt;/a&gt; -Memcached 옵션 설정</target>
        </trans-unit>
        <trans-unit id="b66fc6792f65a07996c7b284ea46c44d5fe71af3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setoptions&quot;&gt;Memcached::setOptions&lt;/a&gt; &amp;mdash; Set Memcached options</source>
          <target state="translated">&lt;a href=&quot;memcached.setoptions&quot;&gt;Memcached :: setOptions&lt;/a&gt; &amp;mdash; Memcached 옵션 설정</target>
        </trans-unit>
        <trans-unit id="660727151b1c902d722c64e3874616c8806cb9e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.setsaslauthdata&quot;&gt;Memcached::setSaslAuthData&lt;/a&gt; &amp;mdash; Set the credentials to use for authentication</source>
          <target state="translated">&lt;a href=&quot;memcached.setsaslauthdata&quot;&gt;Memcached :: setSaslAuthData&lt;/a&gt; &amp;mdash; 인증에 사용할 자격 증명을 설정합니다</target>
        </trans-unit>
        <trans-unit id="53fe910eb863b656b1afccdff89276f55a0db501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.touch&quot;&gt;Memcached::touch()&lt;/a&gt; - Set a new expiration on an item</source>
          <target state="translated">&lt;a href=&quot;memcached.touch&quot;&gt;Memcached :: touch ()&lt;/a&gt; -항목에 새로운 만료 설정</target>
        </trans-unit>
        <trans-unit id="3b6bd46922255c0afc591045b5ae66ea591aa69f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.touch&quot;&gt;Memcached::touch&lt;/a&gt; &amp;mdash; Set a new expiration on an item</source>
          <target state="translated">&lt;a href=&quot;memcached.touch&quot;&gt;Memcached :: touch&lt;/a&gt; &amp;mdash; 항목에 새로운 만료를 설정합니다</target>
        </trans-unit>
        <trans-unit id="68c9dcfd5bfbbf290c2125256b846d3d2b44ce36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.touchbykey&quot;&gt;Memcached::touchByKey()&lt;/a&gt; - Set a new expiration on an item on a specific server</source>
          <target state="translated">&lt;a href=&quot;memcached.touchbykey&quot;&gt;Memcached :: touchByKey ()&lt;/a&gt; -특정 서버의 항목에서 새 만료 설정</target>
        </trans-unit>
        <trans-unit id="c0d56404b80a87566441a8394bd13e4c68237e45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;memcached.touchbykey&quot;&gt;Memcached::touchByKey&lt;/a&gt; &amp;mdash; Set a new expiration on an item on a specific server</source>
          <target state="translated">&lt;a href=&quot;memcached.touchbykey&quot;&gt;Memcached :: touchByKey&lt;/a&gt; &amp;mdash; 특정 서버의 항목에서 새 만료를 설정합니다</target>
        </trans-unit>
        <trans-unit id="c59abcd3f77d56c22633bc65e06df4276120673c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.create&quot;&gt;MessageFormatter::create&lt;/a&gt; &amp;mdash; Constructs a new Message Formatter</source>
          <target state="translated">&lt;a href=&quot;messageformatter.create&quot;&gt;MessageFormatter :: create&lt;/a&gt; &amp;mdash; 새로운 메시지 포맷터를 구성합니다</target>
        </trans-unit>
        <trans-unit id="f61427724d70b63e97d5e4d2ce668697074b92f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.create&quot;&gt;msgfmt_create()&lt;/a&gt; - Constructs a new Message Formatter</source>
          <target state="translated">&lt;a href=&quot;messageformatter.create&quot;&gt;msgfmt_create ()&lt;/a&gt; -새로운 메시지 포맷터를 구성</target>
        </trans-unit>
        <trans-unit id="593e1fa07108857d309c971a78fe0bd6e4ba57fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.format&quot;&gt;MessageFormatter::format&lt;/a&gt; &amp;mdash; Format the message</source>
          <target state="translated">&lt;a href=&quot;messageformatter.format&quot;&gt;MessageFormatter :: format&lt;/a&gt; &amp;mdash; 메시지 형식</target>
        </trans-unit>
        <trans-unit id="bfa7255fa63cb37b2edde2d612378bb02b64e6ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.format&quot;&gt;msgfmt_format()&lt;/a&gt; - Format the message</source>
          <target state="translated">&lt;a href=&quot;messageformatter.format&quot;&gt;msgfmt_format ()&lt;/a&gt; -메시지 포맷</target>
        </trans-unit>
        <trans-unit id="fa93313d8051d6b18caa95fe69eafc2f1545fc55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.formatmessage&quot;&gt;MessageFormatter::formatMessage&lt;/a&gt; &amp;mdash; Quick format message</source>
          <target state="translated">&lt;a href=&quot;messageformatter.formatmessage&quot;&gt;MessageFormatter :: formatMessage&lt;/a&gt; &amp;mdash; 빠른 형식 메시지</target>
        </trans-unit>
        <trans-unit id="7e187ce4a9a052b5dd4c0fcf6b0885d8ba0dd187" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.formatmessage&quot;&gt;msgfmt_format_message()&lt;/a&gt; - Quick format message</source>
          <target state="translated">&lt;a href=&quot;messageformatter.formatmessage&quot;&gt;msgfmt_format_message ()&lt;/a&gt; -빠른 형식 메시지</target>
        </trans-unit>
        <trans-unit id="55963beccdb6581c991f9413a6ff8d5b9a94e5cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.geterrorcode&quot;&gt;MessageFormatter::getErrorCode&lt;/a&gt; &amp;mdash; Get the error code from last operation</source>
          <target state="translated">&lt;a href=&quot;messageformatter.geterrorcode&quot;&gt;MessageFormatter :: getErrorCode&lt;/a&gt; &amp;mdash; 마지막 작업에서 오류 코드를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="4f154fbd6a5fd2df15b4c838dbb0439fcc4c1693" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.geterrorcode&quot;&gt;msgfmt_get_error_code()&lt;/a&gt; - Get the error code from last operation</source>
          <target state="translated">&lt;a href=&quot;messageformatter.geterrorcode&quot;&gt;msgfmt_get_error_code ()&lt;/a&gt; -마지막 작업에서 오류 코드를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="32a628da12a85aa4de072198e9b0ba741dc8575e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.geterrormessage&quot;&gt;MessageFormatter::getErrorMessage&lt;/a&gt; &amp;mdash; Get the error text from the last operation</source>
          <target state="translated">&lt;a href=&quot;messageformatter.geterrormessage&quot;&gt;MessageFormatter :: getErrorMessage-&lt;/a&gt; 마지막 작업에서 오류 텍스트를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="ed316d2203a4a54bc40cc2ca54c44a30daa78694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.geterrormessage&quot;&gt;msgfmt_get_error_message()&lt;/a&gt; - Get the error text from the last operation</source>
          <target state="translated">&lt;a href=&quot;messageformatter.geterrormessage&quot;&gt;msgfmt_get_error_message ()&lt;/a&gt; -마지막 작업에서 오류 텍스트를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="62cfd3aa59b3d9670201d7fe084fd982c990dc00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.getlocale&quot;&gt;MessageFormatter::getLocale&lt;/a&gt; &amp;mdash; Get the locale for which the formatter was created</source>
          <target state="translated">&lt;a href=&quot;messageformatter.getlocale&quot;&gt;MessageFormatter :: getLocale&lt;/a&gt; &amp;mdash; 포맷터가 작성된 로케일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="96ca5ea7beb12739260b4e118c66617e34377706" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.getpattern&quot;&gt;MessageFormatter::getPattern&lt;/a&gt; &amp;mdash; Get the pattern used by the formatter</source>
          <target state="translated">&lt;a href=&quot;messageformatter.getpattern&quot;&gt;MessageFormatter :: getPattern&lt;/a&gt; &amp;mdash; 포맷터가 사용하는 패턴을 얻는다</target>
        </trans-unit>
        <trans-unit id="b007ec6b0e4a7c18671c38e16d035faa07a25e75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.getpattern&quot;&gt;msgfmt_get_pattern()&lt;/a&gt; - Get the pattern used by the formatter</source>
          <target state="translated">&lt;a href=&quot;messageformatter.getpattern&quot;&gt;msgfmt_get_pattern ()&lt;/a&gt; -포맷터가 사용하는 패턴을 얻습니다</target>
        </trans-unit>
        <trans-unit id="b4717403ef4e3df26842e8e71afe1aaf2876e3ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.parse&quot;&gt;MessageFormatter::parse&lt;/a&gt; &amp;mdash; Parse input string according to pattern</source>
          <target state="translated">&lt;a href=&quot;messageformatter.parse&quot;&gt;MessageFormatter :: parse&lt;/a&gt; &amp;mdash; 패턴에 따라 입력 문자열을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="ccbb3d14d755bae5dac1f8a23d65318890a9f9d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.parse&quot;&gt;msgfmt_parse()&lt;/a&gt; - Parse input string according to pattern</source>
          <target state="translated">&lt;a href=&quot;messageformatter.parse&quot;&gt;msgfmt_parse ()&lt;/a&gt; -패턴에 따라 입력 문자열 구문 분석</target>
        </trans-unit>
        <trans-unit id="b353cc94be6b760bcf3f4246be1666584b01e47d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.parsemessage&quot;&gt;MessageFormatter::parseMessage&lt;/a&gt; &amp;mdash; Quick parse input string</source>
          <target state="translated">&lt;a href=&quot;messageformatter.parsemessage&quot;&gt;MessageFormatter :: parseMessage&lt;/a&gt; &amp;mdash; 빠른 구문 분석 입력 문자열</target>
        </trans-unit>
        <trans-unit id="e06cb3fa00ec20ee36c8afb8854743376d84a7f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.parsemessage&quot;&gt;msgfmt_parse_message()&lt;/a&gt; - Quick parse input string</source>
          <target state="translated">&lt;a href=&quot;messageformatter.parsemessage&quot;&gt;msgfmt_parse_message ()&lt;/a&gt; -빠른 구문 분석 입력 문자열</target>
        </trans-unit>
        <trans-unit id="32c33c659de433acaf353953a128fc4f45417a3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.setpattern&quot;&gt;MessageFormatter::setPattern&lt;/a&gt; &amp;mdash; Set the pattern used by the formatter</source>
          <target state="translated">&lt;a href=&quot;messageformatter.setpattern&quot;&gt;MessageFormatter :: setPattern&lt;/a&gt; &amp;mdash; 포맷터가 사용하는 패턴을 설정</target>
        </trans-unit>
        <trans-unit id="a46368fd885cadbf711fc455fa2f08564218af02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;messageformatter.setpattern&quot;&gt;msgfmt_set_pattern()&lt;/a&gt; - Set the pattern used by the formatter</source>
          <target state="translated">&lt;a href=&quot;messageformatter.setpattern&quot;&gt;msgfmt_set_pattern ()&lt;/a&gt; -포맷터가 사용하는 패턴을 설정</target>
        </trans-unit>
        <trans-unit id="7dbc447eaf4cca0cb8dec0e449449a4311d0d369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.attachiterator&quot;&gt;MultipleIterator::attachIterator()&lt;/a&gt; - Attaches iterator information</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.attachiterator&quot;&gt;MultipleIterator :: attachIterator ()&lt;/a&gt; -반복자 정보를 첨부</target>
        </trans-unit>
        <trans-unit id="aef65b5f12fdfd00a0fff10a6fa0a9e9df57f89b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.attachiterator&quot;&gt;MultipleIterator::attachIterator&lt;/a&gt; &amp;mdash; Attaches iterator information</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.attachiterator&quot;&gt;MultipleIterator :: attachIterator&lt;/a&gt; &amp;mdash; 반복자 정보를 첨부</target>
        </trans-unit>
        <trans-unit id="19ce4a4c0af395f025dbaf369f9311b3a8fa3a04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.construct&quot;&gt;MultipleIterator::__construct()&lt;/a&gt; - Constructs a new MultipleIterator</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.construct&quot;&gt;MultipleIterator :: __ construct ()&lt;/a&gt; -새로운 MultipleIterator를 구축</target>
        </trans-unit>
        <trans-unit id="8db432130e719b671d630a1099e3a14dd81900c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.construct&quot;&gt;MultipleIterator::__construct&lt;/a&gt; &amp;mdash; Constructs a new MultipleIterator</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.construct&quot;&gt;MultipleIterator :: __ construct&lt;/a&gt; &amp;mdash; 새로운 MultipleIterator를 구축</target>
        </trans-unit>
        <trans-unit id="bcd8a16c864b4ffbe1f815afc123c91bca19498c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.containsiterator&quot;&gt;MultipleIterator::containsIterator()&lt;/a&gt; - Checks if an iterator is attached</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.containsiterator&quot;&gt;MultipleIterator :: containsIterator ()&lt;/a&gt; -이터레이터가 연결되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="409bc6b9e49df18ad5a20d78133fcdff99575ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.containsiterator&quot;&gt;MultipleIterator::containsIterator&lt;/a&gt; &amp;mdash; Checks if an iterator is attached</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.containsiterator&quot;&gt;MultipleIterator :: containsIterator&lt;/a&gt; &amp;mdash; 이터레이터가 연결되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="e8212a6fa1ec8c65a678beca88ec5595f699eac6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.countiterators&quot;&gt;MultipleIterator::countIterators&lt;/a&gt; &amp;mdash; Gets the number of attached iterator instances</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.countiterators&quot;&gt;MultipleIterator :: countIterators&lt;/a&gt; &amp;mdash; 연결된 반복자 인스턴스 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="89846ed2513fe0a3806d7d9d3fd6bcecb6e0b63c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.current&quot;&gt;MultipleIterator::current()&lt;/a&gt; - Gets the registered iterator instances</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.current&quot;&gt;MultipleIterator :: current ()&lt;/a&gt; -등록 된 반복자 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4c2d0539db06cee488aa1b40c85d6904fed1d846" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.current&quot;&gt;MultipleIterator::current&lt;/a&gt; &amp;mdash; Gets the registered iterator instances</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.current&quot;&gt;MultipleIterator :: current&lt;/a&gt; &amp;mdash; 등록 된 반복자 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cdd21d7739bad763f89774521fce5642623112a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.detachiterator&quot;&gt;MultipleIterator::detachIterator&lt;/a&gt; &amp;mdash; Detaches an iterator</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.detachiterator&quot;&gt;MultipleIterator :: detachIterator&lt;/a&gt; &amp;mdash; 이터레이터를 분리한다</target>
        </trans-unit>
        <trans-unit id="ec6b32533cfdd16597acfb7e93b17cd00ee7f962" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.getflags&quot;&gt;MultipleIterator::getFlags()&lt;/a&gt; - Gets the flag information</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.getflags&quot;&gt;MultipleIterator :: getFlags ()&lt;/a&gt; -플래그 정보를 얻는다</target>
        </trans-unit>
        <trans-unit id="9ca5191f8b6174ec0883136f8f147935292bdab0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.getflags&quot;&gt;MultipleIterator::getFlags&lt;/a&gt; &amp;mdash; Gets the flag information</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.getflags&quot;&gt;MultipleIterator :: getFlags&lt;/a&gt; &amp;mdash; 플래그 정보를 얻는다</target>
        </trans-unit>
        <trans-unit id="1e74c6faf284ac27aae2332a94c0807bf61d71b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.key&quot;&gt;MultipleIterator::key&lt;/a&gt; &amp;mdash; Gets the registered iterator instances</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.key&quot;&gt;MultipleIterator :: key&lt;/a&gt; &amp;mdash; 등록 된 반복자 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bb9c9fe9d1b205fefece772ffff59687a4135467" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.next&quot;&gt;MultipleIterator::next()&lt;/a&gt; - Moves all attached iterator instances forward</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.next&quot;&gt;MultipleIterator :: next ()&lt;/a&gt; -연결된 모든 반복자 인스턴스를 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="8bff94b94ec9d2a47d1cca9caad8824457640cd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.next&quot;&gt;MultipleIterator::next&lt;/a&gt; &amp;mdash; Moves all attached iterator instances forward</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.next&quot;&gt;MultipleIterator :: next&lt;/a&gt; &amp;mdash; 첨부 된 모든 반복자 인스턴스를 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="ae54fa6f6870de4ee0b38cc5144a7c564eb8ffe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.rewind&quot;&gt;MultipleIterator::rewind()&lt;/a&gt; - Rewinds all attached iterator instances</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.rewind&quot;&gt;MultipleIterator :: rewind ()&lt;/a&gt; -연결된 모든 반복자 인스턴스를 되감습니다.</target>
        </trans-unit>
        <trans-unit id="e223cda120fd2ece6e4cc9b91193ec24e9b5f26d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.rewind&quot;&gt;MultipleIterator::rewind&lt;/a&gt; &amp;mdash; Rewinds all attached iterator instances</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.rewind&quot;&gt;MultipleIterator :: rewind&lt;/a&gt; &amp;mdash; 연결된 모든 반복자 인스턴스를 되감습니다.</target>
        </trans-unit>
        <trans-unit id="9a6af466b2d20244b778c1c919d743d81b2b5279" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.setflags&quot;&gt;MultipleIterator::setFlags()&lt;/a&gt; - Sets flags</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.setflags&quot;&gt;MultipleIterator :: setFlags ()&lt;/a&gt; -플래그를 설정합니다</target>
        </trans-unit>
        <trans-unit id="e4a9d05de3a9974b0c4f18ac628d3ff36c0255d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.setflags&quot;&gt;MultipleIterator::setFlags&lt;/a&gt; &amp;mdash; Sets flags</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.setflags&quot;&gt;MultipleIterator :: setFlags&lt;/a&gt; &amp;mdash; 플래그를 설정한다</target>
        </trans-unit>
        <trans-unit id="26772446d4fe63b82aefb70d9ccbb57506438d70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.valid&quot;&gt;MultipleIterator::valid()&lt;/a&gt; - Checks the validity of sub iterators</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.valid&quot;&gt;MultipleIterator :: valid ()&lt;/a&gt; -하위 반복기의 유효성을 검사합니다</target>
        </trans-unit>
        <trans-unit id="55d29882a2b288334d26c0c8214b8cd63a0159b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;multipleiterator.valid&quot;&gt;MultipleIterator::valid&lt;/a&gt; &amp;mdash; Checks the validity of sub iterators</source>
          <target state="translated">&lt;a href=&quot;multipleiterator.valid&quot;&gt;MultipleIterator :: valid&lt;/a&gt; &amp;mdash; 하위 이터레이터의 유효성을 검사합니다</target>
        </trans-unit>
        <trans-unit id="fbc33c853d34f5846ee4b6dd2ac7b037f8cffd7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex.create&quot;&gt;Mutex::create&lt;/a&gt; &amp;mdash; Create a Mutex</source>
          <target state="translated">&lt;a href=&quot;mutex.create&quot;&gt;Mutex :: create&lt;/a&gt; &amp;mdash; 뮤텍스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="e97a75a719026accd5f5b162bd77ef1271df8daf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex.destroy&quot;&gt;Mutex::destroy&lt;/a&gt; &amp;mdash; Destroy Mutex</source>
          <target state="translated">&lt;a href=&quot;mutex.destroy&quot;&gt;뮤텍스 :: 파괴&lt;/a&gt; &amp;mdash; 뮤텍스 파괴</target>
        </trans-unit>
        <trans-unit id="ce46941af0ffb807fcf4a5d8cfa69e50ff67d4e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex.lock&quot;&gt;Mutex::lock&lt;/a&gt; &amp;mdash; Acquire Mutex</source>
          <target state="translated">&lt;a href=&quot;mutex.lock&quot;&gt;Mutex ::&lt;/a&gt; lock-뮤텍스 획득</target>
        </trans-unit>
        <trans-unit id="e909aa4bd0d692708265d45b759cb280cac78321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex.trylock&quot;&gt;Mutex::trylock&lt;/a&gt; &amp;mdash; Attempt to Acquire Mutex</source>
          <target state="translated">&lt;a href=&quot;mutex.trylock&quot;&gt;Mutex :: trylock&lt;/a&gt; &amp;mdash; 뮤텍스 획득 시도</target>
        </trans-unit>
        <trans-unit id="ba229c455d910eff844c95669b32238c175d582d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mutex.unlock&quot;&gt;Mutex::unlock&lt;/a&gt; &amp;mdash; Release Mutex</source>
          <target state="translated">&lt;a href=&quot;mutex.unlock&quot;&gt;Mutex :: unlock&lt;/a&gt; &amp;mdash; 뮤텍스 해제</target>
        </trans-unit>
        <trans-unit id="d91cd3ed7aed4d426c5ca1832d70288ec1f47f7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-driver.embedded-server-end&quot;&gt;mysqli_driver::embedded_server_end&lt;/a&gt; &amp;mdash; Stop embedded server</source>
          <target state="translated">&lt;a href=&quot;mysqli-driver.embedded-server-end&quot;&gt;mysqli_driver :: embedded_server_end&lt;/a&gt; &amp;mdash; 내장 서버 중지</target>
        </trans-unit>
        <trans-unit id="00b7708d58d51e9a189e22a94bd05563ee7e483e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-driver.embedded-server-start&quot;&gt;mysqli_driver::embedded_server_start&lt;/a&gt; &amp;mdash; Initialize and start embedded server</source>
          <target state="translated">&lt;a href=&quot;mysqli-driver.embedded-server-start&quot;&gt;mysqli_driver :: embedded_server_start&lt;/a&gt; &amp;mdash; 내장 서버 초기화 및 시작</target>
        </trans-unit>
        <trans-unit id="627920c070641db157450b2e0fa079e5b2b17a2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-driver.report-mode&quot;&gt;mysqli_driver::$report_mode&lt;/a&gt; &amp;mdash; Enables or disables internal report functions</source>
          <target state="translated">&lt;a href=&quot;mysqli-driver.report-mode&quot;&gt;mysqli_driver :: $ report_mode&lt;/a&gt; &amp;mdash; 내부 보고서 기능을 활성화 또는 비활성화</target>
        </trans-unit>
        <trans-unit id="dd7d96b215a35d1adca6f0cc2bc330debf65d3b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.current-field&quot;&gt;mysqli_result::$current_field&lt;/a&gt; &amp;mdash; Get current field offset of a result pointer</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.current-field&quot;&gt;mysqli_result :: $ current_field&lt;/a&gt; &amp;mdash; 결과 포인터의 현재 필드 오프셋을 얻는다</target>
        </trans-unit>
        <trans-unit id="7e7f64ab2335d34b1ce01f4125753c4dbade91df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.data-seek&quot;&gt;mysqli_data_seek()&lt;/a&gt; - Adjusts the result pointer to an arbitrary row in the result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.data-seek&quot;&gt;mysqli_data_seek ()&lt;/a&gt; -결과에서 임의의 행으로 결과 포인터를 조정</target>
        </trans-unit>
        <trans-unit id="c40365da1da4038052b262c61c4a163c29e7e03b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.data-seek&quot;&gt;mysqli_result::data_seek&lt;/a&gt; &amp;mdash; Adjusts the result pointer to an arbitrary row in the result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.data-seek&quot;&gt;mysqli_result :: data_seek&lt;/a&gt; &amp;mdash; 결과의 임의의 행에 대한 결과 포인터를 조정</target>
        </trans-unit>
        <trans-unit id="bfa69f5f0caca67bff94e286d2ffe7499f879a43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-all&quot;&gt;mysqli_result::fetch_all&lt;/a&gt; &amp;mdash; Fetches all result rows as an associative array, a numeric array, or both</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-all&quot;&gt;mysqli_result :: fetch_all&lt;/a&gt; &amp;mdash; 모든 결과 행을 연관 배열, 숫자 배열 또는 둘 다로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8449e2c61457bb980550b791f1cb227ee591ae9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;mysqli_fetch_array()&lt;/a&gt; - Fetch a result row as an associative, a numeric array, or both</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;mysqli_fetch_array ()&lt;/a&gt; -결과 행을 연관, 숫자 배열 또는 둘 다로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d83a35ffec338585ed24ec6b6f287048d31f7b19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;mysqli_result::fetch_array&lt;/a&gt; &amp;mdash; Fetch a result row as an associative, a numeric array, or both</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;mysqli_result :: fetch_array&lt;/a&gt; &amp;mdash; 결과 행을 연관, 숫자 배열 또는 둘 다로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c507259e52dffa441b65a3f7e072edbf41b454c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc()&lt;/a&gt; - Fetch a result row as an associative array</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc ()&lt;/a&gt; -연관 배열로 결과 행 가져 오기</target>
        </trans-unit>
        <trans-unit id="0b9dc64aee20354bdbfe5062e0fffc34404f524f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_result::fetch_assoc&lt;/a&gt; &amp;mdash; Fetch a result row as an associative array</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_result :: fetch_assoc&lt;/a&gt; &amp;mdash; 결과 배열을 연관 배열로 가져 오기</target>
        </trans-unit>
        <trans-unit id="0671ac47342ce6b344c07458044a7385f1be57c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-field&quot;&gt;mysqli_fetch_field()&lt;/a&gt; - Returns the next field in the result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-field&quot;&gt;mysqli_fetch_field ()&lt;/a&gt; -결과 집합에서 다음 필드를 반환</target>
        </trans-unit>
        <trans-unit id="4042c78f39ffc1e08b4436f362e16075e52e4e5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-field&quot;&gt;mysqli_result::fetch_field&lt;/a&gt; &amp;mdash; Returns the next field in the result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-field&quot;&gt;mysqli_result :: fetch_field&lt;/a&gt; &amp;mdash; 결과 세트에서 다음 필드를 반환</target>
        </trans-unit>
        <trans-unit id="27d1b77fa30caa19372fb3941d0b9bf81ac89e26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-field-direct&quot;&gt;mysqli_fetch_field_direct()&lt;/a&gt; - Fetch meta-data for a single field</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-field-direct&quot;&gt;mysqli_fetch_field_direct ()&lt;/a&gt; -단일 필드에 대한 메타 데이터 가져 오기</target>
        </trans-unit>
        <trans-unit id="889d526afbfe9a8db2d1b3034f93877d2f26d881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-field-direct&quot;&gt;mysqli_result::fetch_field_direct&lt;/a&gt; &amp;mdash; Fetch meta-data for a single field</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-field-direct&quot;&gt;mysqli_result :: fetch_field_direct&lt;/a&gt; &amp;mdash; 단일 필드에 대한 메타 데이터를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="bd709351b17f814ca35c4652d9c1b3c45c619305" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-fields&quot;&gt;mysqli_fetch_fields()&lt;/a&gt; - Returns an array of objects representing the fields in a result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-fields&quot;&gt;mysqli_fetch_fields ()&lt;/a&gt; -결과 집합의 필드를 나타내는 객체의 배열을 반환</target>
        </trans-unit>
        <trans-unit id="e688c79b9c43a35e51e5c23246ba6b85a39e92a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-fields&quot;&gt;mysqli_result::fetch_fields&lt;/a&gt; &amp;mdash; Returns an array of objects representing the fields in a result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-fields&quot;&gt;mysqli_result :: fetch_fields&lt;/a&gt; &amp;mdash; 결과 세트의 필드를 나타내는 객체 배열을 반환</target>
        </trans-unit>
        <trans-unit id="64a9cd17e0582d7b1992e6cb931471842531b3e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-object&quot;&gt;mysqli_fetch_object()&lt;/a&gt; - Returns the current row of a result set as an object</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-object&quot;&gt;mysqli_fetch_object ()&lt;/a&gt; -결과 집합의 현재 행을 객체로 반환</target>
        </trans-unit>
        <trans-unit id="3623f8d7079df61ce0fda3aa4dd48a19afc1a1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-object&quot;&gt;mysqli_result::fetch_object&lt;/a&gt; &amp;mdash; Returns the current row of a result set as an object</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-object&quot;&gt;mysqli_result :: fetch_object&lt;/a&gt; &amp;mdash; 결과 집합의 현재 행을 객체로 반환</target>
        </trans-unit>
        <trans-unit id="d1c563ad40a4237a3eece4212dcc3eb54096e388" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row()&lt;/a&gt; - Get a result row as an enumerated array</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row ()&lt;/a&gt; -열거 형 배열로 결과 행 가져 오기</target>
        </trans-unit>
        <trans-unit id="f5afe4199012fe33a2a04a326dae393230967af5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_result::fetch_row&lt;/a&gt; &amp;mdash; Get a result row as an enumerated array</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_result :: fetch_row&lt;/a&gt; &amp;mdash; 열거 된 배열로 결과 행을 얻는다</target>
        </trans-unit>
        <trans-unit id="660ea98af35a08e8b917051088aa7c4b118ed44c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.field-count&quot;&gt;mysqli_num_fields()&lt;/a&gt; - Get the number of fields in a result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.field-count&quot;&gt;mysqli_num_fields ()&lt;/a&gt; -결과의 필드 수를 얻는다</target>
        </trans-unit>
        <trans-unit id="ddd5e4a9169c8dcf06008ef12cc49f7d350623fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.field-count&quot;&gt;mysqli_result::$field_count&lt;/a&gt; &amp;mdash; Get the number of fields in a result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.field-count&quot;&gt;mysqli_result :: $ field_count&lt;/a&gt; &amp;mdash; 결과의 필드 수를 얻는다</target>
        </trans-unit>
        <trans-unit id="44abbd103906ba38c77ddf2a1de061babff38213" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.field-seek&quot;&gt;mysqli_field_seek()&lt;/a&gt; - Set result pointer to a specified field offset</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.field-seek&quot;&gt;mysqli_field_seek ()&lt;/a&gt; -결과 포인터를 지정된 필드 오프셋으로 설정</target>
        </trans-unit>
        <trans-unit id="63ca5aa68be360485a63b8fcb8915560c3ebdbf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.field-seek&quot;&gt;mysqli_result::field_seek&lt;/a&gt; &amp;mdash; Set result pointer to a specified field offset</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.field-seek&quot;&gt;mysqli_result :: field_seek&lt;/a&gt; &amp;mdash; 결과 포인터를 지정된 필드 오프셋으로 설정</target>
        </trans-unit>
        <trans-unit id="1c2a3cbc3c6fc7057c7a2180f582efd5fab56d3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.free&quot;&gt;mysqli_free_result()&lt;/a&gt; - Frees the memory associated with a result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.free&quot;&gt;mysqli_free_result ()&lt;/a&gt; -결과와 관련된 메모리를 해제</target>
        </trans-unit>
        <trans-unit id="ec1a98f0a7c8364776b1441b91db559e1ef21b0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.free&quot;&gt;mysqli_result::free&lt;/a&gt; &amp;mdash; Frees the memory associated with a result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.free&quot;&gt;mysqli_result :: free&lt;/a&gt; &amp;mdash; 결과와 관련된 메모리를 해제합니다</target>
        </trans-unit>
        <trans-unit id="e8983429e6f440225bc792d111072cdb5065b1a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.lengths&quot;&gt;mysqli_result::$lengths&lt;/a&gt; &amp;mdash; Returns the lengths of the columns of the current row in the result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.lengths&quot;&gt;mysqli_result :: $ lengths&lt;/a&gt; &amp;mdash; 결과 집합에서 현재 행의 열 길이를 반환</target>
        </trans-unit>
        <trans-unit id="7624bede71d346025848e5e08285704c83dd769b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.num-rows&quot;&gt;mysqli_num_rows()&lt;/a&gt; - Gets the number of rows in a result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.num-rows&quot;&gt;mysqli_num_rows ()&lt;/a&gt; -결과의 행 수를 얻는다</target>
        </trans-unit>
        <trans-unit id="f1dbfd324bb3f03f872c5a4283739fcaec80bd85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-result.num-rows&quot;&gt;mysqli_result::$num_rows&lt;/a&gt; &amp;mdash; Gets the number of rows in a result</source>
          <target state="translated">&lt;a href=&quot;mysqli-result.num-rows&quot;&gt;mysqli_result :: $ num_rows&lt;/a&gt; &amp;mdash; 결과의 행 수를 얻는다</target>
        </trans-unit>
        <trans-unit id="824c8c59c78b7ab8be9cb54d3bb6325d1767b5ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.affected-rows&quot;&gt;mysqli_stmt::$affected_rows&lt;/a&gt; &amp;mdash; Returns the total number of rows changed, deleted, or inserted by the last executed statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.affected-rows&quot;&gt;mysqli_stmt :: $ affected_rows&lt;/a&gt; &amp;mdash; 마지막으로 실행 된 명령문에 의해 변경, 삭제 또는 삽입 된 총 행 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="80528c91f92e02a513fda13d7a7fa4bd30910342" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.affected-rows&quot;&gt;mysqli_stmt_affected_rows()&lt;/a&gt; - Returns the total number of rows changed, deleted, or inserted by the last executed statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.affected-rows&quot;&gt;mysqli_stmt_affected_rows ()&lt;/a&gt; -마지막으로 실행 된 명령문에 의해 변경, 삭제 또는 삽입 된 총 행 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="efc68cc1e4181679a00801beab7c76af974e3d07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.attr-get&quot;&gt;mysqli_stmt::attr_get&lt;/a&gt; &amp;mdash; Used to get the current value of a statement attribute</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.attr-get&quot;&gt;mysqli_stmt :: attr_get&lt;/a&gt; &amp;mdash; 명령문 속성의 현재 값을 얻는 데 사용</target>
        </trans-unit>
        <trans-unit id="07a0358496253f3d4cb94449c21011c68e44fb53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.attr-set&quot;&gt;mysqli_stmt::attr_set&lt;/a&gt; &amp;mdash; Used to modify the behavior of a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.attr-set&quot;&gt;mysqli_stmt :: attr_set&lt;/a&gt; &amp;mdash; 준비된 명령문의 동작을 수정하는 데 사용</target>
        </trans-unit>
        <trans-unit id="ddcb7dc4862ed44080c312b8a36cd8cb9394c8f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.bind-param&quot;&gt;mysqli_stmt::bind_param&lt;/a&gt; &amp;mdash; Binds variables to a prepared statement as parameters</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.bind-param&quot;&gt;mysqli_stmt :: bind_param&lt;/a&gt; &amp;mdash; 변수를 준비된 명령문에 매개 변수로 바인드</target>
        </trans-unit>
        <trans-unit id="05572de19dd57579f00603426cf359647ee0d095" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.bind-param&quot;&gt;mysqli_stmt_bind_param()&lt;/a&gt; - Binds variables to a prepared statement as parameters</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.bind-param&quot;&gt;mysqli_stmt_bind_param ()&lt;/a&gt; -변수를 준비된 명령문에 매개 변수로 바인드</target>
        </trans-unit>
        <trans-unit id="a4508f166e012c1029e1ab34bf329239ddf1904b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.bind-result&quot;&gt;mysqli_stmt::bind_result&lt;/a&gt; &amp;mdash; Binds variables to a prepared statement for result storage</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.bind-result&quot;&gt;mysqli_stmt :: bind_result&lt;/a&gt; &amp;mdash; 결과 저장을 위해 준비된 명령문에 변수를 바인딩</target>
        </trans-unit>
        <trans-unit id="a1d4505cb94176fc3609ffd67a762b4d9e9a9ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.bind-result&quot;&gt;mysqli_stmt_bind_result()&lt;/a&gt; - Binds variables to a prepared statement for result storage</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.bind-result&quot;&gt;mysqli_stmt_bind_result ()&lt;/a&gt; -변수를 결과 저장을 위해 준비된 명령문에 바인드</target>
        </trans-unit>
        <trans-unit id="24bc965a581902564ecc17037856241861494a1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.close&quot;&gt;mysqli_stmt::close&lt;/a&gt; &amp;mdash; Closes a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.close&quot;&gt;mysqli_stmt :: close&lt;/a&gt; &amp;mdash; 준비된 문장을 닫는다</target>
        </trans-unit>
        <trans-unit id="c79097bbd86b6ef6c4a07131b7feecc6e84e02c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.close&quot;&gt;mysqli_stmt_close()&lt;/a&gt; - Closes a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.close&quot;&gt;mysqli_stmt_close ()&lt;/a&gt; -준비된 문장을 닫는다</target>
        </trans-unit>
        <trans-unit id="8effa67c2a7208e86037c9bb401e6c326cbd0fbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.construct&quot;&gt;__construct&lt;/a&gt; ( &lt;a href=&quot;class.mysqli&quot;&gt;mysqli&lt;/a&gt;&lt;code&gt;$link&lt;/code&gt; [, string&lt;code&gt;$query&lt;/code&gt; ] )</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.construct&quot;&gt;__construct&lt;/a&gt; ( &lt;a href=&quot;class.mysqli&quot;&gt;mysqli &lt;/a&gt; &lt;code&gt;$link&lt;/code&gt; [, 문자열 &lt;code&gt;$query&lt;/code&gt; ])</target>
        </trans-unit>
        <trans-unit id="d34fedf0a4d2431d1104a593f62539c32b0bd52d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.construct&quot;&gt;mysqli_stmt::__construct&lt;/a&gt; &amp;mdash; Constructs a new mysqli_stmt object</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.construct&quot;&gt;mysqli_stmt :: __ construct&lt;/a&gt; &amp;mdash; 새로운 mysqli_stmt 객체를 생성</target>
        </trans-unit>
        <trans-unit id="9ef8f020c6b2a6699342704da237d1055411a391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.data-seek&quot;&gt;mysqli_stmt::data_seek&lt;/a&gt; &amp;mdash; Seeks to an arbitrary row in statement result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.data-seek&quot;&gt;mysqli_stmt :: data_seek&lt;/a&gt; &amp;mdash; 명령문 결과 세트에서 임의의 행을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f83d71067436808298d9af3ba76a98a4886313ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.errno&quot;&gt;mysqli_stmt::$errno&lt;/a&gt; &amp;mdash; Returns the error code for the most recent statement call</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.errno&quot;&gt;mysqli_stmt :: $ errno&lt;/a&gt; &amp;mdash; 가장 최근 명령문 호출에 대한 에러 코드를 반환</target>
        </trans-unit>
        <trans-unit id="d546e8a7c5c4ae4ab1bdb2db664ef36683afdb9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.errno&quot;&gt;mysqli_stmt_errno()&lt;/a&gt; - Returns the error code for the most recent statement call</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.errno&quot;&gt;mysqli_stmt_errno ()&lt;/a&gt; -가장 최근의 명령문 호출에 대한 오류 코드를 반환</target>
        </trans-unit>
        <trans-unit id="becb8394af50c0925d66f14249b5d98d36d66441" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.error&quot;&gt;mysqli_stmt::$error&lt;/a&gt; &amp;mdash; Returns a string description for last statement error</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.error&quot;&gt;mysqli_stmt :: $ error&lt;/a&gt; &amp;mdash; 마지막 문장 오류에 대한 문자열 설명을 반환</target>
        </trans-unit>
        <trans-unit id="2c5b58cd052af8f8de89bce3ae97b8732e69637e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.error&quot;&gt;mysqli_stmt_error()&lt;/a&gt; - Returns a string description for last statement error</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.error&quot;&gt;mysqli_stmt_error ()&lt;/a&gt; -마지막 문장 오류에 대한 문자열 설명을 반환</target>
        </trans-unit>
        <trans-unit id="a8ae9b22fd8c380cbc04b8a7326438460dff870c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.error-list&quot;&gt;mysqli_stmt::$error_list&lt;/a&gt; &amp;mdash; Returns a list of errors from the last statement executed</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.error-list&quot;&gt;mysqli_stmt :: $ error_list&lt;/a&gt; &amp;mdash; 마지막으로 실행 된 명령문에서 오류 목록을 반환</target>
        </trans-unit>
        <trans-unit id="2104f285aa5154c7a856b3915bc82aaae8729466" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.execute&quot;&gt;mysqli_stmt::execute&lt;/a&gt; &amp;mdash; Executes a prepared Query</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.execute&quot;&gt;mysqli_stmt :: execute&lt;/a&gt; &amp;mdash; 준비된 쿼리를 실행</target>
        </trans-unit>
        <trans-unit id="21f7a1e5dc890796fcbaad1adf6df7281f10019f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.execute&quot;&gt;mysqli_stmt_execute()&lt;/a&gt; - Executes a prepared Query</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.execute&quot;&gt;mysqli_stmt_execute ()&lt;/a&gt; -준비된 쿼리를 실행</target>
        </trans-unit>
        <trans-unit id="12fd0b3bf2ca1ca1c68814b21564191849168adc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt::fetch&lt;/a&gt; &amp;mdash; Fetch results from a prepared statement into the bound variables</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt :: fetch&lt;/a&gt; &amp;mdash; 준비된 명령문의 결과를 바인딩 된 변수로 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="927a77ffc09353ba4894ef966683978ba2eec11a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch()&lt;/a&gt; - Fetch results from a prepared statement into the bound variables</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch ()&lt;/a&gt; -준비된 명령문의 결과를 바인딩 된 변수로 가져 오기</target>
        </trans-unit>
        <trans-unit id="fb32e5e74d239c6705ca12211efbefc085f31b71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.field-count&quot;&gt;mysqli_stmt::$field_count&lt;/a&gt; &amp;mdash; Returns the number of columns in the given statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.field-count&quot;&gt;mysqli_stmt :: $ field_count&lt;/a&gt; &amp;mdash; 주어진 명령문의 열 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ef17590309225e4a9904a1ff821565a24441b29b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.field-count&quot;&gt;mysqli_stmt::$field_count&lt;/a&gt; &amp;mdash; Returns the number of field in the given statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.field-count&quot;&gt;mysqli_stmt :: $ field_count&lt;/a&gt; &amp;mdash; 주어진 문장의 필드 수를 반환</target>
        </trans-unit>
        <trans-unit id="94b30c49229b20c9e65974a450da09ecbc985fcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.free-result&quot;&gt;mysqli_stmt::free_result&lt;/a&gt; &amp;mdash; Frees stored result memory for the given statement handle</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.free-result&quot;&gt;mysqli_stmt :: free_result&lt;/a&gt; &amp;mdash; 주어진 명령문 핸들에 대해 저장된 결과 메모리를 해제</target>
        </trans-unit>
        <trans-unit id="d5efedbbba96ccf007409a3f3fafe6b402597d56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.get-result&quot;&gt;mysqli_stmt::get_result&lt;/a&gt; &amp;mdash; Gets a result set from a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.get-result&quot;&gt;mysqli_stmt :: get_result&lt;/a&gt; &amp;mdash; 준비된 문장에서 결과 집합을 얻는다</target>
        </trans-unit>
        <trans-unit id="ce333651af977de661a95cca8829e73aed782b95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.get-result&quot;&gt;mysqli_stmt_get_result()&lt;/a&gt; - Gets a result set from a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.get-result&quot;&gt;mysqli_stmt_get_result ()&lt;/a&gt; -준비된 명령문에서 결과 세트를 얻는다</target>
        </trans-unit>
        <trans-unit id="ad3f7b4f90014de78248d8f13231f0d45c45b37c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.get-warnings&quot;&gt;mysqli_stmt::get_warnings&lt;/a&gt; &amp;mdash; Get result of SHOW WARNINGS</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.get-warnings&quot;&gt;mysqli_stmt :: get_warnings&lt;/a&gt; &amp;mdash; SHOW WARNINGS의 결과를 얻습니다</target>
        </trans-unit>
        <trans-unit id="fd568dd4dfd7258377694747f89f12ffc928c238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.insert-id&quot;&gt;mysqli_stmt::$insert_id&lt;/a&gt; &amp;mdash; Get the ID generated from the previous INSERT operation</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.insert-id&quot;&gt;mysqli_stmt :: $ insert_id&lt;/a&gt; &amp;mdash; 이전 INSERT 작업에서 생성 된 ID를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8eb9aee9ea06d3b523f7df59e99f45bc17a8e470" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.more-results&quot;&gt;mysqli_stmt::more_results()&lt;/a&gt; - Check if there are more query results from a multiple query</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.more-results&quot;&gt;mysqli_stmt :: more_results ()&lt;/a&gt; -여러 쿼리에서 더 많은 쿼리 결과가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="7638335fa0e7fac16a43c501d05bb4efd69d4968" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.more-results&quot;&gt;mysqli_stmt::more_results&lt;/a&gt; &amp;mdash; Check if there are more query results from a multiple query</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.more-results&quot;&gt;mysqli_stmt :: more_results&lt;/a&gt; &amp;mdash; 여러 쿼리에서 더 많은 쿼리 결과가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="94c94fc088b30195a7bf098c64dab27600d7652a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.next-result&quot;&gt;mysqli_stmt::next_result()&lt;/a&gt; - Reads the next result from a multiple query</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.next-result&quot;&gt;mysqli_stmt :: next_result ()&lt;/a&gt; -여러 쿼리에서 다음 결과를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="9d70727e038395ef4de2d724fee6903c801b6fdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.next-result&quot;&gt;mysqli_stmt::next_result&lt;/a&gt; &amp;mdash; Reads the next result from a multiple query</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.next-result&quot;&gt;mysqli_stmt :: next_result&lt;/a&gt; &amp;mdash; 여러 쿼리에서 다음 결과를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="06ef1788867a039e12f9d4344760962c866293a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.num-rows&quot;&gt;mysqli_stmt::$num_rows&lt;/a&gt; &amp;mdash; Return the number of rows in statements result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.num-rows&quot;&gt;mysqli_stmt :: $ num_rows&lt;/a&gt; &amp;mdash; 명령문 결과 집합의 행 수를 반환</target>
        </trans-unit>
        <trans-unit id="33a4107440df78a2c32cb45340d232ebb5ad4401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.num-rows&quot;&gt;mysqli_stmt_num_rows()&lt;/a&gt; - Return the number of rows in statements result set</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.num-rows&quot;&gt;mysqli_stmt_num_rows ()&lt;/a&gt; -명령문 결과 세트의 행 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9289f12caab1c780d40a537f409363f0051a096c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.param-count&quot;&gt;mysqli_stmt::$param_count&lt;/a&gt; &amp;mdash; Returns the number of parameter for the given statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.param-count&quot;&gt;mysqli_stmt :: $ param_count&lt;/a&gt; &amp;mdash; 주어진 문장에 대한 매개 변수의 개수를 반환</target>
        </trans-unit>
        <trans-unit id="fde58824077abaf60a395c7508ce59fc2d14755f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.param-count&quot;&gt;mysqli_stmt::$param_count&lt;/a&gt; &amp;mdash; Returns the number of parameters for the given statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.param-count&quot;&gt;mysqli_stmt :: $ param_count&lt;/a&gt; &amp;mdash; 주어진 명령문에 대한 매개 변수 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c5856971c4871eaedeb3e9e3af9c637ef1ad63a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.param-count&quot;&gt;mysqli_stmt_param_count()&lt;/a&gt; - Returns the number of parameter for the given statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.param-count&quot;&gt;mysqli_stmt_param_count ()&lt;/a&gt; -주어진 문장에 대한 매개 변수의 개수를 반환</target>
        </trans-unit>
        <trans-unit id="401024399da7b8a6f3b28f2a8cc4dfe2a9e64174" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.prepare&quot;&gt;mysqli_stmt::prepare&lt;/a&gt; &amp;mdash; Prepare an SQL statement for execution</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.prepare&quot;&gt;mysqli_stmt :: prepare&lt;/a&gt; &amp;mdash; 실행을위한 SQL 문 준비</target>
        </trans-unit>
        <trans-unit id="335531360cd09eda565bc7da7443dc37760abb2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.prepare&quot;&gt;mysqli_stmt_prepare()&lt;/a&gt; - Prepare an SQL statement for execution</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.prepare&quot;&gt;mysqli_stmt_prepare ()&lt;/a&gt; -실행할 SQL 문 준비</target>
        </trans-unit>
        <trans-unit id="3f834e49a61b75629d89526fe00fae22506c3d59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.reset&quot;&gt;mysqli_stmt::reset&lt;/a&gt; &amp;mdash; Resets a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.reset&quot;&gt;mysqli_stmt :: reset&lt;/a&gt; &amp;mdash; 준비된 문장을 리셋</target>
        </trans-unit>
        <trans-unit id="063395279ef2e6eab411daa5f7562b18b4c3c2e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.result-metadata&quot;&gt;mysqli_stmt::result_metadata&lt;/a&gt; &amp;mdash; Returns result set metadata from a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.result-metadata&quot;&gt;mysqli_stmt :: result_metadata&lt;/a&gt; &amp;mdash; 준비된 명령문에서 결과 세트 메타 데이터를 반환</target>
        </trans-unit>
        <trans-unit id="5dcd25197ad54f114271e45ca2cd072046375b52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.result-metadata&quot;&gt;mysqli_stmt_result_metadata()&lt;/a&gt; - Returns result set metadata from a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.result-metadata&quot;&gt;mysqli_stmt_result_metadata ()&lt;/a&gt; -준비된 명령문에서 결과 세트 메타 데이터를 리턴</target>
        </trans-unit>
        <trans-unit id="c4dc962a7162b2af3e30daa61470819f6934d913" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.send-long-data&quot;&gt;mysqli_stmt::send_long_data&lt;/a&gt; &amp;mdash; Send data in blocks</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.send-long-data&quot;&gt;mysqli_stmt :: send_long_data&lt;/a&gt; &amp;mdash; 블록 단위로 데이터 전송</target>
        </trans-unit>
        <trans-unit id="5d166f86030cf1eb42539c7cd65a3546797ee151" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.send-long-data&quot;&gt;mysqli_stmt_send_long_data()&lt;/a&gt; - Send data in blocks</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.send-long-data&quot;&gt;mysqli_stmt_send_long_data ()&lt;/a&gt; -블록 단위로 데이터 전송</target>
        </trans-unit>
        <trans-unit id="a3417a8c00aeae44548c54f61446a03d2557871d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.sqlstate&quot;&gt;mysqli_stmt::$sqlstate&lt;/a&gt; &amp;mdash; Returns SQLSTATE error from previous statement operation</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.sqlstate&quot;&gt;mysqli_stmt :: $ sqlstate&lt;/a&gt; &amp;mdash; 이전 명령문 작업에서 SQLSTATE 오류를 반환</target>
        </trans-unit>
        <trans-unit id="ff6d6f83b5f46b54b07496ff566a2c41bf35ff6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.sqlstate&quot;&gt;mysqli_stmt_sqlstate()&lt;/a&gt; - Returns SQLSTATE error from previous statement operation</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.sqlstate&quot;&gt;mysqli_stmt_sqlstate ()&lt;/a&gt; -이전 명령문 조작에서 SQLSTATE 오류를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="84125bd0620128fdb87737884b6c4385ed20503a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.store-result&quot;&gt;mysqli_stmt::store_result&lt;/a&gt; &amp;mdash; Transfers a result set from a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.store-result&quot;&gt;mysqli_stmt :: store_result&lt;/a&gt; &amp;mdash; 준비된 명령문에서 결과 세트를 전송</target>
        </trans-unit>
        <trans-unit id="2891e1f7f05e301b5e54eecc73bae0804009b107" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.store-result&quot;&gt;mysqli_stmt_store_result()&lt;/a&gt; - Transfers a result set from a prepared statement</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.store-result&quot;&gt;mysqli_stmt_store_result ()&lt;/a&gt; -준비된 명령문에서 결과 세트를 전송</target>
        </trans-unit>
        <trans-unit id="4182e062e713de358ea2c9fe6ebab80a53175727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-stmt.store-result&quot;&gt;mysqli_stmt_store_result()&lt;/a&gt; must be called prior to &lt;strong&gt;mysqli_stmt_data_seek()&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;mysqli-stmt.store-result&quot;&gt;mysqli_stmt_data_seek ()&lt;/a&gt; 전에 &lt;strong&gt;mysqli_stmt_store_result ()&lt;/strong&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8f27372b587a4671645f5aee82aab3e164397955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-warning.construct&quot;&gt;mysqli_warning::__construct&lt;/a&gt; &amp;mdash; The __construct purpose</source>
          <target state="translated">&lt;a href=&quot;mysqli-warning.construct&quot;&gt;mysqli_warning :: __ construct&lt;/a&gt; &amp;mdash; __construct 목적</target>
        </trans-unit>
        <trans-unit id="68708f32a4a4d543765b09c3fafd320f17aa8012" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-warning.next&quot;&gt;mysqli_warning::next&lt;/a&gt; &amp;mdash; Fetch next warning</source>
          <target state="translated">&lt;a href=&quot;mysqli-warning.next&quot;&gt;mysqli_warning :: next&lt;/a&gt; &amp;mdash; 다음 경고 가져 오기</target>
        </trans-unit>
        <trans-unit id="35496ecd898f3b5e1589f53af40da8e4f427043f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli-warning.next&quot;&gt;mysqli_warning::next&lt;/a&gt; &amp;mdash; The next purpose</source>
          <target state="translated">&lt;a href=&quot;mysqli-warning.next&quot;&gt;mysqli_warning :: next&lt;/a&gt; &amp;mdash; 다음 목적</target>
        </trans-unit>
        <trans-unit id="25fe4257d26c244c22f7a75c3ad9fb750fd86718" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.affected-rows&quot;&gt;mysqli::$affected_rows&lt;/a&gt; &amp;mdash; Gets the number of affected rows in a previous MySQL operation</source>
          <target state="translated">&lt;a href=&quot;mysqli.affected-rows&quot;&gt;mysqli :: $ affected_rows&lt;/a&gt; &amp;mdash; 이전 MySQL 작업에서 영향을받는 행 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b94a5a9b859bb9dbf1e47d5b0130f18ca6e2cc17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.affected-rows&quot;&gt;mysqli_affected_rows()&lt;/a&gt; - Gets the number of affected rows in a previous MySQL operation</source>
          <target state="translated">&lt;a href=&quot;mysqli.affected-rows&quot;&gt;mysqli_affected_rows ()&lt;/a&gt; -이전 MySQL 작업에서 영향을받는 행 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="53e77a4d31a50cbb69d7d6163d4236ad7cf7c833" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.autocommit&quot;&gt;mysqli::autocommit&lt;/a&gt; &amp;mdash; Turns on or off auto-committing database modifications</source>
          <target state="translated">&lt;a href=&quot;mysqli.autocommit&quot;&gt;mysqli :: autocommit&lt;/a&gt; &amp;mdash; 자동 커밋 데이터베이스 수정 기능을 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="e42ed627dfac4c6a050b2aac25169338b8507e45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.autocommit&quot;&gt;mysqli_autocommit()&lt;/a&gt; - Turns on or off auto-committing database modifications</source>
          <target state="translated">&lt;a href=&quot;mysqli.autocommit&quot;&gt;mysqli_autocommit ()&lt;/a&gt; -자동 커밋 데이터베이스 수정 기능을 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="1cab578ccadb8d8c50c23d53cab1011da718116f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.begin-transaction&quot;&gt;mysqli::begin_transaction&lt;/a&gt; &amp;mdash; Starts a transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.begin-transaction&quot;&gt;mysqli :: begin_transaction&lt;/a&gt; &amp;mdash; 트랜잭션을 시작한다</target>
        </trans-unit>
        <trans-unit id="d76c25a61011f08e0b66766d4eff8caacf3435e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.begin-transaction&quot;&gt;mysqli_begin_transaction()&lt;/a&gt; - Starts a transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.begin-transaction&quot;&gt;mysqli_begin_transaction ()&lt;/a&gt; -트랜잭션을 시작</target>
        </trans-unit>
        <trans-unit id="7b9cea14f15a0f129664d4eece87a37c408ff595" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.change-user&quot;&gt;mysqli::change_user&lt;/a&gt; &amp;mdash; Changes the user of the specified database connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.change-user&quot;&gt;mysqli :: change_user&lt;/a&gt; &amp;mdash; 지정된 데이터베이스 연결의 사용자를 변경</target>
        </trans-unit>
        <trans-unit id="d5f994a22d8a9b01cd15e93c0264257cb2d59d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.character-set-name&quot;&gt;mysqli::character_set_name&lt;/a&gt; &amp;mdash; Returns the default character set for the database connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.character-set-name&quot;&gt;mysqli :: character_set_name&lt;/a&gt; &amp;mdash; 데이터베이스 연결을위한 기본 문자 집합을 반환</target>
        </trans-unit>
        <trans-unit id="bfc8a4b93fd81077c7e1c6d91f9976c0415e97c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.character-set-name&quot;&gt;mysqli_character_set_name()&lt;/a&gt; - Returns the default character set for the database connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.character-set-name&quot;&gt;mysqli_character_set_name ()&lt;/a&gt; -데이터베이스 연결을위한 기본 문자 집합을 반환</target>
        </trans-unit>
        <trans-unit id="a43ef7d76ca9e6773bbfdbf2569418fea0e2a55c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.close&quot;&gt;mysqli::close&lt;/a&gt; &amp;mdash; Closes a previously opened database connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.close&quot;&gt;mysqli :: close&lt;/a&gt; &amp;mdash; 이전에 열린 데이터베이스 연결을 닫는다</target>
        </trans-unit>
        <trans-unit id="cee1d22588a3af84e5579d07939252e5ce93930f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.close&quot;&gt;mysqli_close()&lt;/a&gt; - Closes a previously opened database connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.close&quot;&gt;mysqli_close ()&lt;/a&gt; -이전에 열린 데이터베이스 연결을 닫는다</target>
        </trans-unit>
        <trans-unit id="63ef7e9ddaba4e40db887dc0a1ee134308b8f301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.commit&quot;&gt;mysqli::commit&lt;/a&gt; &amp;mdash; Commits the current transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.commit&quot;&gt;mysqli :: commit&lt;/a&gt; &amp;mdash; 현재 트랜잭션을 커밋</target>
        </trans-unit>
        <trans-unit id="d7356c420bf9b504fae78f6a11f332408f6d1a64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.commit&quot;&gt;mysqli_commit()&lt;/a&gt; - Commits the current transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.commit&quot;&gt;mysqli_commit ()&lt;/a&gt; -현재 트랜잭션을 커밋</target>
        </trans-unit>
        <trans-unit id="f3f6a86d57290f07849e6d37929cc30ad0905fe3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.connect-errno&quot;&gt;mysqli::$connect_errno&lt;/a&gt; &amp;mdash; Returns the error code from last connect call</source>
          <target state="translated">&lt;a href=&quot;mysqli.connect-errno&quot;&gt;mysqli :: $ connect_errno&lt;/a&gt; &amp;mdash; 마지막 연결 호출에서 오류 코드를 반환</target>
        </trans-unit>
        <trans-unit id="75ef915d85c50e7e104c60a715d3bb83fef3532f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.connect-errno&quot;&gt;mysqli_connect_errno()&lt;/a&gt; - Returns the error code from last connect call</source>
          <target state="translated">&lt;a href=&quot;mysqli.connect-errno&quot;&gt;mysqli_connect_errno ()&lt;/a&gt; -마지막 연결 호출에서 오류 코드를 반환</target>
        </trans-unit>
        <trans-unit id="5c9a6b3dc08c2ffd95048b5dedcf53a09e9ce386" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.connect-error&quot;&gt;mysqli::$connect_error&lt;/a&gt; &amp;mdash; Returns a string description of the last connect error</source>
          <target state="translated">&lt;a href=&quot;mysqli.connect-error&quot;&gt;mysqli :: $ connect_error&lt;/a&gt; &amp;mdash; 마지막 연결 오류에 대한 문자열 설명을 반환</target>
        </trans-unit>
        <trans-unit id="22a3a90ec3d7861771ed76c70246e3d8b1a63a0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.connect-error&quot;&gt;mysqli_connect_error()&lt;/a&gt; - Returns a string description of the last connect error</source>
          <target state="translated">&lt;a href=&quot;mysqli.connect-error&quot;&gt;mysqli_connect_error ()&lt;/a&gt; -마지막 연결 오류에 대한 문자열 설명을 반환</target>
        </trans-unit>
        <trans-unit id="f1f222824dd0d4ee41f5b6d439db5c7831432dd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.construct&quot;&gt;__construct&lt;/a&gt; ([ string&lt;code&gt;$host&lt;/code&gt; = ini_get(&quot;mysqli.default_host&quot;) [, string&lt;code&gt;$username&lt;/code&gt; = ini_get(&quot;mysqli.default_user&quot;) [, string&lt;code&gt;$passwd&lt;/code&gt; = ini_get(&quot;mysqli.default_pw&quot;) [, string&lt;code&gt;$dbname&lt;/code&gt; = &quot;&quot; [, int&lt;code&gt;$port&lt;/code&gt; = ini_get(&quot;mysqli.default_port&quot;) [, string&lt;code&gt;$socket&lt;/code&gt; = ini_get(&quot;mysqli.default_socket&quot;) ]]]]]] )</source>
          <target state="translated">&lt;a href=&quot;mysqli.construct&quot;&gt;__construct&lt;/a&gt; ([문자열 &lt;code&gt;$host&lt;/code&gt; = ini_get ( &quot;mysqli.default_host&quot;) [, 문자열 &lt;code&gt;$username&lt;/code&gt; = ini_get ( &quot;mysqli.default_user&quot;) [, 문자열 &lt;code&gt;$passwd&lt;/code&gt; = ini_get ( &quot;mysqli.default_pw&quot;) [, 문자열 &lt;code&gt;$dbname&lt;/code&gt; = &quot; &quot;[, int &lt;code&gt;$port&lt;/code&gt; = ini_get (&quot;mysqli.default_port &quot;) [, 문자열 &lt;code&gt;$socket&lt;/code&gt; = ini_get (&quot;mysqli.default_socket &quot;)]]]]]]]])</target>
        </trans-unit>
        <trans-unit id="baaf794d4765e9904e056dc8dca5ba4327fd7d80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.construct&quot;&gt;mysqli::__construct()&lt;/a&gt; - Open a new connection to the MySQL server</source>
          <target state="translated">&lt;a href=&quot;mysqli.construct&quot;&gt;mysqli :: __ construct ()-MySQL&lt;/a&gt; 서버에 대한 새로운 연결을 엽니 다</target>
        </trans-unit>
        <trans-unit id="8139b393a778913f04e9101c300c41951b459b87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.construct&quot;&gt;mysqli::__construct&lt;/a&gt; &amp;mdash; Open a new connection to the MySQL server</source>
          <target state="translated">&lt;a href=&quot;mysqli.construct&quot;&gt;mysqli :: __ construct&lt;/a&gt; &amp;mdash; MySQL 서버에 대한 새로운 연결을 엽니 다</target>
        </trans-unit>
        <trans-unit id="223ecb10dd19b275e5e43dc192b132a9a78d72ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.debug&quot;&gt;mysqli::debug&lt;/a&gt; &amp;mdash; Performs debugging operations</source>
          <target state="translated">&lt;a href=&quot;mysqli.debug&quot;&gt;mysqli :: debug&lt;/a&gt; &amp;mdash; 디버깅 작업을 수행</target>
        </trans-unit>
        <trans-unit id="a77b95514fdf6f2d601da4c02652bf55aa6d7780" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.debug&quot;&gt;mysqli_debug()&lt;/a&gt; - Performs debugging operations</source>
          <target state="translated">&lt;a href=&quot;mysqli.debug&quot;&gt;mysqli_debug ()&lt;/a&gt; -디버깅 작업을 수행</target>
        </trans-unit>
        <trans-unit id="e8b8028b27fee8fe01f7eb351c6f2caadb0e860f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.dump-debug-info&quot;&gt;mysqli::dump_debug_info&lt;/a&gt; &amp;mdash; Dump debugging information into the log</source>
          <target state="translated">&lt;a href=&quot;mysqli.dump-debug-info&quot;&gt;mysqli :: dump_debug_info&lt;/a&gt; &amp;mdash; 디버깅 정보를 로그에 덤프</target>
        </trans-unit>
        <trans-unit id="4ff7f7e0ab0e45e2a852e946277619d10b752942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.dump-debug-info&quot;&gt;mysqli_dump_debug_info()&lt;/a&gt; - Dump debugging information into the log</source>
          <target state="translated">&lt;a href=&quot;mysqli.dump-debug-info&quot;&gt;mysqli_dump_debug_info ()&lt;/a&gt; -디버깅 정보를 로그에 덤프</target>
        </trans-unit>
        <trans-unit id="c557b94da808bc7e979a74e27f996b9944c8ad21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.errno&quot;&gt;mysqli::$errno&lt;/a&gt; &amp;mdash; Returns the error code for the most recent function call</source>
          <target state="translated">&lt;a href=&quot;mysqli.errno&quot;&gt;mysqli :: $ errno&lt;/a&gt; &amp;mdash; 가장 최근의 함수 호출에 대한 에러 코드를 반환</target>
        </trans-unit>
        <trans-unit id="47615b73445c4edfe7fdbbc90d6ce21f5d2fcff0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.errno&quot;&gt;mysqli_errno()&lt;/a&gt; - Returns the error code for the most recent function call</source>
          <target state="translated">&lt;a href=&quot;mysqli.errno&quot;&gt;mysqli_errno ()&lt;/a&gt; -가장 최근의 함수 호출에 대한 에러 코드를 반환</target>
        </trans-unit>
        <trans-unit id="5040ad62702280b5ecd5a4e0da5f7e9077ac90fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.error&quot;&gt;mysqli::$error&lt;/a&gt; &amp;mdash; Returns a string description of the last error</source>
          <target state="translated">&lt;a href=&quot;mysqli.error&quot;&gt;mysqli :: $ error&lt;/a&gt; &amp;mdash; 마지막 오류에 대한 문자열 설명을 반환</target>
        </trans-unit>
        <trans-unit id="0b8cd20ec3c2bc9ce2d56fbadf4e2958c0440572" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.error&quot;&gt;mysqli_error()&lt;/a&gt; - Returns a string description of the last error</source>
          <target state="translated">&lt;a href=&quot;mysqli.error&quot;&gt;mysqli_error ()&lt;/a&gt; -마지막 오류에 대한 문자열 설명을 반환</target>
        </trans-unit>
        <trans-unit id="f619259727bbf4ee86b169207415f1663aeeb25a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.error-list&quot;&gt;mysqli::$error_list&lt;/a&gt; &amp;mdash; Returns a list of errors from the last command executed</source>
          <target state="translated">&lt;a href=&quot;mysqli.error-list&quot;&gt;mysqli :: $ error_list&lt;/a&gt; &amp;mdash; 마지막으로 실행 된 명령에서 오류 목록을 반환</target>
        </trans-unit>
        <trans-unit id="5fa980a7d73cd29c1ea5d23523103b2344dad488" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli::$field_count&lt;/a&gt; &amp;mdash; Returns the number of columns for the most recent query</source>
          <target state="translated">&lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli :: $ field_count&lt;/a&gt; &amp;mdash; 가장 최근 쿼리의 열 수를 반환</target>
        </trans-unit>
        <trans-unit id="5bcfe247132e65e7742e2780a3ab1f9ce366c2f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-charset&quot;&gt;mysqli::get_charset&lt;/a&gt; &amp;mdash; Returns a character set object</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-charset&quot;&gt;mysqli :: get_charset&lt;/a&gt; &amp;mdash; 문자 집합 객체를 반환</target>
        </trans-unit>
        <trans-unit id="346983cb72609460103ab2cd0fc1bf0d53286f17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-client-info&quot;&gt;mysqli::$client_info&lt;/a&gt; &amp;mdash; Get MySQL client info</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-client-info&quot;&gt;mysqli :: $ client_info&lt;/a&gt; &amp;mdash; MySQL 클라이언트 정보를 얻는다</target>
        </trans-unit>
        <trans-unit id="e27dbe45c3fce6a00c02ee712877c9ab2ba33b7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-client-info&quot;&gt;mysqli_get_client_info()&lt;/a&gt; - Get MySQL client info</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-client-info&quot;&gt;mysqli_get_client_info ()-MySQL&lt;/a&gt; 클라이언트 정보 얻기</target>
        </trans-unit>
        <trans-unit id="553627c23a1f38b0ed8e0292c5e1adecf97957fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-client-version&quot;&gt;mysqli::$client_version&lt;/a&gt; &amp;mdash; Returns the MySQL client version as an integer</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-client-version&quot;&gt;mysqli :: $ client_version&lt;/a&gt; &amp;mdash; MySQL 클라이언트 버전을 정수로 반환</target>
        </trans-unit>
        <trans-unit id="ffb5d3caf7e3997df09e61e2f2aa6830dbb80910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-client-version&quot;&gt;mysqli_get_client_version()&lt;/a&gt; - Returns the MySQL client version as an integer</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-client-version&quot;&gt;mysqli_get_client_version ()-MySQL&lt;/a&gt; 클라이언트 버전을 정수로 반환</target>
        </trans-unit>
        <trans-unit id="b3fc7eceb4623f79b2ae69dbfef91019c5a3c434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-connection-stats&quot;&gt;mysqli::get_connection_stats&lt;/a&gt; &amp;mdash; Returns statistics about the client connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-connection-stats&quot;&gt;mysqli :: get_connection_stats&lt;/a&gt; &amp;mdash; 클라이언트 연결에 대한 통계를 반환</target>
        </trans-unit>
        <trans-unit id="60d7e7bc7a0948e6fb1aba71397ee4da279b2d35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-host-info&quot;&gt;mysqli::$host_info&lt;/a&gt; &amp;mdash; Returns a string representing the type of connection used</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-host-info&quot;&gt;mysqli :: $ host_info&lt;/a&gt; &amp;mdash; 사용 된 연결 유형을 나타내는 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="59b45fc48b472bbea51d610d60dfed7fa4f06eb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-host-info&quot;&gt;mysqli_get_host_info()&lt;/a&gt; - Returns a string representing the type of connection used</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-host-info&quot;&gt;mysqli_get_host_info ()&lt;/a&gt; -사용 된 연결 유형을 나타내는 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="01dc4438953507816b49a857a218540b4f49eaae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-proto-info&quot;&gt;mysqli::$protocol_version&lt;/a&gt; &amp;mdash; Returns the version of the MySQL protocol used</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-proto-info&quot;&gt;mysqli :: $ protocol_version&lt;/a&gt; &amp;mdash; 사용 된 MySQL 프로토콜의 버전을 반환</target>
        </trans-unit>
        <trans-unit id="7c1ff42624d777d6d5aa8a6cd485009240f6fec4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-proto-info&quot;&gt;mysqli_get_proto_info()&lt;/a&gt; - Returns the version of the MySQL protocol used</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-proto-info&quot;&gt;mysqli_get_proto_info ()&lt;/a&gt; -사용 된 MySQL 프로토콜의 버전을 반환</target>
        </trans-unit>
        <trans-unit id="25335c79c66cfadbe731946856ee664931361eaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-server-info&quot;&gt;mysqli::$server_info&lt;/a&gt; &amp;mdash; Returns the version of the MySQL server</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-server-info&quot;&gt;mysqli :: $ server_info&lt;/a&gt; &amp;mdash; MySQL 서버의 버전을 반환</target>
        </trans-unit>
        <trans-unit id="e09165efe8d3e9e843c139ca989f90b87dc45a49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-server-info&quot;&gt;mysqli_get_server_info()&lt;/a&gt; - Returns the version of the MySQL server</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-server-info&quot;&gt;mysqli_get_server_info ()-MySQL&lt;/a&gt; 서버의 버전을 반환</target>
        </trans-unit>
        <trans-unit id="de68276b478875ae73d3336711d76835f27d5fd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-server-version&quot;&gt;mysqli::$server_version&lt;/a&gt; &amp;mdash; Returns the version of the MySQL server as an integer</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-server-version&quot;&gt;mysqli :: $ server_version&lt;/a&gt; &amp;mdash; MySQL 서버의 버전을 정수로 반환</target>
        </trans-unit>
        <trans-unit id="002b16a280a5d13ba9c17a8c9d347eefd440fb52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-server-version&quot;&gt;mysqli_get_server_version()&lt;/a&gt; - Returns the version of the MySQL server as an integer</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-server-version&quot;&gt;mysqli_get_server_version ()-MySQL&lt;/a&gt; 서버의 버전을 정수로 반환</target>
        </trans-unit>
        <trans-unit id="a1fc526cca2f2ac2c9029cbbc37ac6221c0aaa12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.get-warnings&quot;&gt;mysqli::get_warnings&lt;/a&gt; &amp;mdash; Get result of SHOW WARNINGS</source>
          <target state="translated">&lt;a href=&quot;mysqli.get-warnings&quot;&gt;mysqli :: get_warnings&lt;/a&gt; &amp;mdash; SHOW WARNINGS의 결과를 얻는다</target>
        </trans-unit>
        <trans-unit id="7f9eab3f4d1b6e77e0f2eac83a703406810476bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.info&quot;&gt;mysqli::$info&lt;/a&gt; &amp;mdash; Retrieves information about the most recently executed query</source>
          <target state="translated">&lt;a href=&quot;mysqli.info&quot;&gt;mysqli :: $ info&lt;/a&gt; &amp;mdash; 가장 최근에 실행 된 쿼리에 대한 정보를 검색</target>
        </trans-unit>
        <trans-unit id="7152342b84faca896738bab925e916d6ce4c6a4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.info&quot;&gt;mysqli_info()&lt;/a&gt; - Retrieves information about the most recently executed query</source>
          <target state="translated">&lt;a href=&quot;mysqli.info&quot;&gt;mysqli_info ()&lt;/a&gt; -가장 최근에 실행 된 쿼리에 대한 정보를 검색</target>
        </trans-unit>
        <trans-unit id="d0b9aa3069faef4c080962d30b8bf1c3161e3670" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.init&quot;&gt;mysqli::init&lt;/a&gt; &amp;mdash; Initializes MySQLi and returns a resource for use with mysqli_real_connect()</source>
          <target state="translated">&lt;a href=&quot;mysqli.init&quot;&gt;mysqli :: init&lt;/a&gt; &amp;mdash; MySQLi를 초기화하고 mysqli_real_connect ()와 함께 사용할 리소스를 반환</target>
        </trans-unit>
        <trans-unit id="dd8872e047a576cc2eed06c71bb02973ef9ed611" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.init&quot;&gt;mysqli::init&lt;/a&gt; &amp;mdash; Initializes MySQLi and returns an object for use with mysqli_real_connect()</source>
          <target state="translated">&lt;a href=&quot;mysqli.init&quot;&gt;mysqli :: init&lt;/a&gt; &amp;mdash; MySQLi를 초기화하고 mysqli_real_connect ()와 함께 사용할 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="37369425c6c408532a160a9108d5e76b610885de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt; - Initializes MySQLi and returns a resource for use with mysqli_real_connect()</source>
          <target state="translated">&lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init ()-MySQLi를&lt;/a&gt; 초기화하고 mysqli_real_connect ()와 함께 사용할 리소스를 반환</target>
        </trans-unit>
        <trans-unit id="53928de516871f8de937ebbc6114c26e18684a12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt; - Initializes MySQLi and returns an object for use with mysqli_real_connect()</source>
          <target state="translated">&lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init ()-MySQLi를&lt;/a&gt; 초기화하고 mysqli_real_connect ()와 함께 사용할 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="585dedc8ca74aee520c8f6230a7d43df300f0dd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.insert-id&quot;&gt;mysqli::$insert_id&lt;/a&gt; &amp;mdash; Returns the auto generated id used in the latest query</source>
          <target state="translated">&lt;a href=&quot;mysqli.insert-id&quot;&gt;mysqli :: $ insert_id&lt;/a&gt; &amp;mdash; 최신 쿼리에 사용 된 자동 생성 된 id를 반환</target>
        </trans-unit>
        <trans-unit id="9d90c111e4a09a11565fa2ac741bc405edede7e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.kill&quot;&gt;mysqli::kill&lt;/a&gt; &amp;mdash; Asks the server to kill a MySQL thread</source>
          <target state="translated">&lt;a href=&quot;mysqli.kill&quot;&gt;mysqli :: kill&lt;/a&gt; &amp;mdash; 서버가 MySQL 스레드를 죽 이도록 요청</target>
        </trans-unit>
        <trans-unit id="5bcbb8df5613dd45f0cc90f5c528a9f91fc77f04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.kill&quot;&gt;mysqli_kill()&lt;/a&gt; - Asks the server to kill a MySQL thread</source>
          <target state="translated">&lt;a href=&quot;mysqli.kill&quot;&gt;mysqli_kill ()&lt;/a&gt; -서버에 MySQL 스레드를 강제 종료 하도록 요청</target>
        </trans-unit>
        <trans-unit id="611af9e02cfc3c33ff486930412e661664b3a72c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.more-results&quot;&gt;mysqli::more_results&lt;/a&gt; &amp;mdash; Check if there are any more query results from a multi query</source>
          <target state="translated">&lt;a href=&quot;mysqli.more-results&quot;&gt;mysqli :: more_results&lt;/a&gt; &amp;mdash; 다중 쿼리에서 더 많은 쿼리 결과가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="27903e2672d1131e139d0166d3d40abf675f4d6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.more-results&quot;&gt;mysqli_more_results()&lt;/a&gt; - Check if there are any more query results from a multi query</source>
          <target state="translated">&lt;a href=&quot;mysqli.more-results&quot;&gt;mysqli_more_results ()&lt;/a&gt; -다중 쿼리의 쿼리 결과가 더 있는지 확인</target>
        </trans-unit>
        <trans-unit id="5d5923ee96805550eb541a115bf612e39d32deff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli::multi_query()&lt;/a&gt; - Performs a query on the database</source>
          <target state="translated">&lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli :: multi_query ()&lt;/a&gt; -데이터베이스에서 질의를 수행</target>
        </trans-unit>
        <trans-unit id="e435589c7a3c3f76b503d5f51a92fc6af7e9a243" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli::multi_query&lt;/a&gt; &amp;mdash; Performs a query on the database</source>
          <target state="translated">&lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli :: multi_query&lt;/a&gt; &amp;mdash; 데이터베이스에서 쿼리를 수행</target>
        </trans-unit>
        <trans-unit id="f45b4f74348e341f3fc59718847de03d50a20c56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli_multi_query()&lt;/a&gt; - Performs a query on the database</source>
          <target state="translated">&lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli_multi_query ()&lt;/a&gt; -데이터베이스에서 질의를 수행</target>
        </trans-unit>
        <trans-unit id="35a878edc00b598733e0df7c6c4b4e8fba71b65e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.next-result&quot;&gt;mysqli::next_result&lt;/a&gt; &amp;mdash; Prepare next result from multi_query</source>
          <target state="translated">&lt;a href=&quot;mysqli.next-result&quot;&gt;mysqli :: next_result&lt;/a&gt; &amp;mdash; multi_query에서 다음 결과 준비</target>
        </trans-unit>
        <trans-unit id="7cf1ee0be0574f9f3f4de8d588e1382fe2b5bab5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.next-result&quot;&gt;mysqli_next_result()&lt;/a&gt; - Prepare next result from multi_query</source>
          <target state="translated">&lt;a href=&quot;mysqli.next-result&quot;&gt;mysqli_next_result ()&lt;/a&gt; -multi_query에서 다음 결과 준비</target>
        </trans-unit>
        <trans-unit id="dc10fe44a2e73b43d0319ebbe17482a46e290f8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.options&quot;&gt;mysqli::options&lt;/a&gt; &amp;mdash; Set options</source>
          <target state="translated">&lt;a href=&quot;mysqli.options&quot;&gt;mysqli :: options&lt;/a&gt; &amp;mdash; 옵션 설정</target>
        </trans-unit>
        <trans-unit id="c123a4ab89030a2d16c5abc6aadfae6b1ba2373f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.options&quot;&gt;mysqli_options()&lt;/a&gt; - Set options</source>
          <target state="translated">&lt;a href=&quot;mysqli.options&quot;&gt;mysqli_options ()&lt;/a&gt; -옵션 설정</target>
        </trans-unit>
        <trans-unit id="c648c3556b9682d385952d57e343630b878292fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.ping&quot;&gt;mysqli::ping&lt;/a&gt; &amp;mdash; Pings a server connection, or tries to reconnect if the connection has gone down</source>
          <target state="translated">&lt;a href=&quot;mysqli.ping&quot;&gt;mysqli :: ping&lt;/a&gt; &amp;mdash; 서버 연결을 핑 (Ping)하거나 연결이 끊어진 경우 다시 연결을 시도합니다</target>
        </trans-unit>
        <trans-unit id="f81710fa93f471211ca3252a7cd4687b67bea797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.poll&quot;&gt;mysqli::poll&lt;/a&gt; &amp;mdash; Poll connections</source>
          <target state="translated">&lt;a href=&quot;mysqli.poll&quot;&gt;mysqli :: poll&lt;/a&gt; &amp;mdash; 설문 조사 연결</target>
        </trans-unit>
        <trans-unit id="177a06cc569a3b4b604d3cc777490b3c66cf0fd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.poll&quot;&gt;mysqli_poll()&lt;/a&gt; - Poll connections</source>
          <target state="translated">&lt;a href=&quot;mysqli.poll&quot;&gt;mysqli_poll ()&lt;/a&gt; -폴링 연결</target>
        </trans-unit>
        <trans-unit id="25ae53671bc1d2a3bf3f9bce299887c448539434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli::prepare&lt;/a&gt; &amp;mdash; Prepare an SQL statement for execution</source>
          <target state="translated">&lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli :: prepare&lt;/a&gt; &amp;mdash; 실행을위한 SQL 문 준비</target>
        </trans-unit>
        <trans-unit id="f4043c1e0ca59d83bf7a536b9f138d9a03bd38f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare()&lt;/a&gt; - Prepare an SQL statement for execution</source>
          <target state="translated">&lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare ()&lt;/a&gt; -실행할 SQL 문 준비</target>
        </trans-unit>
        <trans-unit id="f3311ddf00e79c1b51e3d0eed6aa2a46df24232c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.query&quot;&gt;mysqli::query&lt;/a&gt; &amp;mdash; Performs a query on the database</source>
          <target state="translated">&lt;a href=&quot;mysqli.query&quot;&gt;mysqli :: query&lt;/a&gt; &amp;mdash; 데이터베이스에서 쿼리를 수행</target>
        </trans-unit>
        <trans-unit id="9ffdb2aa5108534749c0b2ff43bbe3c3b3c00e63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.query&quot;&gt;mysqli_query()&lt;/a&gt; - Performs a query on the database</source>
          <target state="translated">&lt;a href=&quot;mysqli.query&quot;&gt;mysqli_query ()&lt;/a&gt; -데이터베이스에서 질의를 수행</target>
        </trans-unit>
        <trans-unit id="cd7980c533c7e2708e30800ea19342525f530b8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli::real_connect&lt;/a&gt; &amp;mdash; Opens a connection to a mysql server</source>
          <target state="translated">&lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli :: real_connect&lt;/a&gt; &amp;mdash; mysql 서버와의 연결을 연다</target>
        </trans-unit>
        <trans-unit id="3f53ecd294729d965239d86bbba1ffc5490f21f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli_real_connect()&lt;/a&gt; - Opens a connection to a mysql server</source>
          <target state="translated">&lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli_real_connect ()-MySQL&lt;/a&gt; 서버와의 연결을 엽니 다</target>
        </trans-unit>
        <trans-unit id="145fbcd1c0adc43395e02ed2066b499da4f81c4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.real-escape-string&quot;&gt;mysqli::real_escape_string&lt;/a&gt; &amp;mdash; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.real-escape-string&quot;&gt;mysqli :: real_escape_string&lt;/a&gt; &amp;mdash; 연결의 현재 문자셋을 고려하여 SQL 문에서 사용하기 위해 문자열에서 특수 문자를 이스케이프</target>
        </trans-unit>
        <trans-unit id="30234126585a61a77e3efb17854c98d13ea3f130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.real-escape-string&quot;&gt;mysqli_real_escape_string()&lt;/a&gt; - Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.real-escape-string&quot;&gt;mysqli_real_escape_string ()&lt;/a&gt; -연결의 현재 문자셋을 고려하여 SQL 문에서 사용하기 위해 문자열에서 특수 문자를 이스케이프</target>
        </trans-unit>
        <trans-unit id="f19b73ae25e0c7b671b19a7eb5aad96749c1cba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.real-query&quot;&gt;mysqli::real_query&lt;/a&gt; &amp;mdash; Execute an SQL query</source>
          <target state="translated">&lt;a href=&quot;mysqli.real-query&quot;&gt;mysqli :: real_query&lt;/a&gt; -SQL 쿼리를 실행</target>
        </trans-unit>
        <trans-unit id="abf194286245270584ce2ca7dbda61379825ddc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.real-query&quot;&gt;mysqli_real_query()&lt;/a&gt; - Execute an SQL query</source>
          <target state="translated">&lt;a href=&quot;mysqli.real-query&quot;&gt;mysqli_real_query ()&lt;/a&gt; -SQL 쿼리 실행</target>
        </trans-unit>
        <trans-unit id="f4f1893453c541a465fd987a362d82f628930919" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.reap-async-query&quot;&gt;mysqli::reap_async_query&lt;/a&gt; &amp;mdash; Get result from async query</source>
          <target state="translated">&lt;a href=&quot;mysqli.reap-async-query&quot;&gt;mysqli :: reap_async_query&lt;/a&gt; &amp;mdash; 비동기 쿼리에서 결과 가져 오기</target>
        </trans-unit>
        <trans-unit id="7bc8cc5ead3a666b2727ecb34b02788330194d87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.reap-async-query&quot;&gt;mysqli_reap_async_query()&lt;/a&gt; - Get result from async query</source>
          <target state="translated">&lt;a href=&quot;mysqli.reap-async-query&quot;&gt;mysqli_reap_async_query ()&lt;/a&gt; -비동기 쿼리에서 결과 가져 오기</target>
        </trans-unit>
        <trans-unit id="d034ea7192df5fd4b8a9fe408014b4b37de86ca3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.refresh&quot;&gt;mysqli::refresh&lt;/a&gt; &amp;mdash; Refreshes</source>
          <target state="translated">&lt;a href=&quot;mysqli.refresh&quot;&gt;mysqli :: refresh&lt;/a&gt; &amp;mdash; 새로 고침</target>
        </trans-unit>
        <trans-unit id="fbd4f906675d81517a686dab7eace7d32d4f37fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.release-savepoint&quot;&gt;mysqli::release_savepoint&lt;/a&gt; &amp;mdash; Removes the named savepoint from the set of savepoints of the current transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.release-savepoint&quot;&gt;mysqli :: release_savepoint&lt;/a&gt; &amp;mdash; 현재 트랜잭션의 세이브 포인트 세트에서 명명 된 세이브 포인트를 제거</target>
        </trans-unit>
        <trans-unit id="7f8e17718d4bf0e88bd1202e17368478b264dac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.release-savepoint&quot;&gt;mysqli_release_savepoint()&lt;/a&gt; - Removes the named savepoint from the set of savepoints of the current transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.release-savepoint&quot;&gt;mysqli_release_savepoint ()&lt;/a&gt; -현재 트랜잭션의 세이브 포인트 세트에서 명명 된 세이브 포인트를 제거</target>
        </trans-unit>
        <trans-unit id="4c95b331b6db7df3325aec25018a0dc766d134ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.rollback&quot;&gt;mysqli::rollback&lt;/a&gt; &amp;mdash; Rolls back current transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.rollback&quot;&gt;mysqli :: rollback&lt;/a&gt; &amp;mdash; 현재 트랜잭션을 롤백</target>
        </trans-unit>
        <trans-unit id="e70dba78a26df901a9f9ca7be06fe717abfce5e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.rollback&quot;&gt;mysqli_rollback()&lt;/a&gt; - Rolls back current transaction</source>
          <target state="translated">&lt;a href=&quot;mysqli.rollback&quot;&gt;mysqli_rollback ()&lt;/a&gt; -현재 트랜잭션을 롤백</target>
        </trans-unit>
        <trans-unit id="92935660240942017a0929d3d8c55d4f15118f6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.rpl-query-type&quot;&gt;mysqli::rpl_query_type&lt;/a&gt; &amp;mdash; Returns RPL query type</source>
          <target state="translated">&lt;a href=&quot;mysqli.rpl-query-type&quot;&gt;mysqli :: rpl_query_type&lt;/a&gt; &amp;mdash; RPL 쿼리 타입을 반환</target>
        </trans-unit>
        <trans-unit id="4d323c4c1acdc10e25863285a85f3c8d72795b11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.savepoint&quot;&gt;mysqli::savepoint&lt;/a&gt; &amp;mdash; Set a named transaction savepoint</source>
          <target state="translated">&lt;a href=&quot;mysqli.savepoint&quot;&gt;mysqli :: savepoint&lt;/a&gt; &amp;mdash; 명명 된 트랜잭션 세이브 포인트 설정</target>
        </trans-unit>
        <trans-unit id="8e037ed830bb4b0eda0b1432426002cf806c285d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.savepoint&quot;&gt;mysqli_savepoint()&lt;/a&gt; - Set a named transaction savepoint</source>
          <target state="translated">&lt;a href=&quot;mysqli.savepoint&quot;&gt;mysqli_savepoint ()&lt;/a&gt; -명명 된 트랜잭션 세이브 포인트 설정</target>
        </trans-unit>
        <trans-unit id="66254d5527a57c1cbd2402c164063f96b390d7be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.select-db&quot;&gt;mysqli::select_db&lt;/a&gt; &amp;mdash; Selects the default database for database queries</source>
          <target state="translated">&lt;a href=&quot;mysqli.select-db&quot;&gt;mysqli :: select_db&lt;/a&gt; &amp;mdash; 데이터베이스 쿼리를위한 기본 데이터베이스를 선택</target>
        </trans-unit>
        <trans-unit id="c0005c224ddfec840cc80243218a82cd737bddcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.select-db&quot;&gt;mysqli_select_db()&lt;/a&gt; - Selects the default database for database queries</source>
          <target state="translated">&lt;a href=&quot;mysqli.select-db&quot;&gt;mysqli_select_db ()&lt;/a&gt; -데이터베이스 쿼리를위한 기본 데이터베이스를 선택</target>
        </trans-unit>
        <trans-unit id="e66d7c476d6ccbddffd36a037f45884af79a751f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.send-query&quot;&gt;mysqli::send_query&lt;/a&gt; &amp;mdash; Send the query and return</source>
          <target state="translated">&lt;a href=&quot;mysqli.send-query&quot;&gt;mysqli :: send_query&lt;/a&gt; &amp;mdash; 쿼리를 보내고 리턴</target>
        </trans-unit>
        <trans-unit id="22369d92d22b03919e953a168ba09ef223d60530" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.set-charset&quot;&gt;mysqli::set_charset&lt;/a&gt; &amp;mdash; Sets the default client character set</source>
          <target state="translated">&lt;a href=&quot;mysqli.set-charset&quot;&gt;mysqli :: set_charset&lt;/a&gt; &amp;mdash; 기본 클라이언트 문자 집합을 설정</target>
        </trans-unit>
        <trans-unit id="220d567722d1784b2735f090751116d7f750d7f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.set-charset&quot;&gt;mysqli_set_charset()&lt;/a&gt; - Sets the default client character set</source>
          <target state="translated">&lt;a href=&quot;mysqli.set-charset&quot;&gt;mysqli_set_charset ()&lt;/a&gt; -기본 클라이언트 문자 집합을 설정</target>
        </trans-unit>
        <trans-unit id="f63276a3f64ef0bd0e4b40a85b2d18589d3d9717" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.set-local-infile-default&quot;&gt;mysqli::set_local_infile_default&lt;/a&gt; &amp;mdash; Unsets user defined handler for load local infile command</source>
          <target state="translated">&lt;a href=&quot;mysqli.set-local-infile-default&quot;&gt;mysqli :: set_local_infile_default&lt;/a&gt; &amp;mdash; 로컬 파일로드 명령에 대한 사용자 정의 처리기를 설정 해제합니다</target>
        </trans-unit>
        <trans-unit id="44b64cdd892b5d442b03344edf17edd39e343358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.set-local-infile-default&quot;&gt;mysqli_set_local_infile_default()&lt;/a&gt; - Unsets user defined handler for load local infile command</source>
          <target state="translated">&lt;a href=&quot;mysqli.set-local-infile-default&quot;&gt;mysqli_set_local_infile_default ()&lt;/a&gt; -로컬 파일로드 명령에 대한 사용자 정의 처리기 설정 해제</target>
        </trans-unit>
        <trans-unit id="49e3df54d5e97d60c9d1269c084fdbcae7d5aa32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.set-local-infile-handler&quot;&gt;mysqli::set_local_infile_handler&lt;/a&gt; &amp;mdash; Set callback function for LOAD DATA LOCAL INFILE command</source>
          <target state="translated">&lt;a href=&quot;mysqli.set-local-infile-handler&quot;&gt;mysqli :: set_local_infile_handler&lt;/a&gt; &amp;mdash; LOAD DATA LOCAL INFILE 명령에 대한 콜백 함수 설정</target>
        </trans-unit>
        <trans-unit id="b61a53a594b4cd4b5095fb29ca4eab0a7f23a849" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.set-local-infile-handler&quot;&gt;mysqli_set_local_infile_handler()&lt;/a&gt; - Set callback function for LOAD DATA LOCAL INFILE command</source>
          <target state="translated">&lt;a href=&quot;mysqli.set-local-infile-handler&quot;&gt;mysqli_set_local_infile_handler ()-LOAD&lt;/a&gt; DATA LOCAL INFILE 명령에 대한 콜백 함수 설정</target>
        </trans-unit>
        <trans-unit id="e64d707608850659e7818d2d8c056c70095abe1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.sqlstate&quot;&gt;mysqli::$sqlstate&lt;/a&gt; &amp;mdash; Returns the SQLSTATE error from previous MySQL operation</source>
          <target state="translated">&lt;a href=&quot;mysqli.sqlstate&quot;&gt;mysqli :: $ sqlstate&lt;/a&gt; &amp;mdash; 이전 MySQL 작업에서 SQLSTATE 오류를 반환</target>
        </trans-unit>
        <trans-unit id="18d39b3a0832ea18c8a0c3a28b553ff811b434ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.sqlstate&quot;&gt;mysqli_sqlstate()&lt;/a&gt; - Returns the SQLSTATE error from previous MySQL operation</source>
          <target state="translated">&lt;a href=&quot;mysqli.sqlstate&quot;&gt;mysqli_sqlstate ()&lt;/a&gt; -이전 MySQL 작업에서 SQLSTATE 오류를 반환</target>
        </trans-unit>
        <trans-unit id="37115dede2dd4d807b5e8bf13f6ce79fcb5803c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.ssl-set&quot;&gt;mysqli::ssl_set&lt;/a&gt; &amp;mdash; Used for establishing secure connections using SSL</source>
          <target state="translated">&lt;a href=&quot;mysqli.ssl-set&quot;&gt;mysqli :: ssl_set&lt;/a&gt; &amp;mdash; SSL을 사용하여 보안 연결을 설정하는 데 사용</target>
        </trans-unit>
        <trans-unit id="671cc8604de7e2661d83d11cb480924753b99cec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.ssl-set&quot;&gt;mysqli_ssl_set()&lt;/a&gt; - Used for establishing secure connections using SSL</source>
          <target state="translated">&lt;a href=&quot;mysqli.ssl-set&quot;&gt;mysqli_ssl_set ()-SSL을&lt;/a&gt; 사용하여 보안 연결을 설정하는 데 사용</target>
        </trans-unit>
        <trans-unit id="6c23a674ac5128e1bab1cf3c2ec4f08150a7befd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.stat&quot;&gt;mysqli::stat&lt;/a&gt; &amp;mdash; Gets the current system status</source>
          <target state="translated">&lt;a href=&quot;mysqli.stat&quot;&gt;mysqli :: stat&lt;/a&gt; &amp;mdash; 현재 시스템 상태를 얻는다</target>
        </trans-unit>
        <trans-unit id="c5d0a7fec4540158f887fc46e29912e4aa227a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.stmt-init&quot;&gt;mysqli::stmt_init&lt;/a&gt; &amp;mdash; Initializes a statement and returns an object for use with mysqli_stmt_prepare</source>
          <target state="translated">&lt;a href=&quot;mysqli.stmt-init&quot;&gt;mysqli :: stmt_init&lt;/a&gt; &amp;mdash; 명령문을 초기화하고 mysqli_stmt_prepare와 함께 사용할 객체를 반환</target>
        </trans-unit>
        <trans-unit id="ba2239f789fb8ec34b4f9c018e10b150fc964dc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.stmt-init&quot;&gt;mysqli_stmt_init()&lt;/a&gt; - Initializes a statement and returns an object for use with mysqli_stmt_prepare</source>
          <target state="translated">&lt;a href=&quot;mysqli.stmt-init&quot;&gt;mysqli_stmt_init ()&lt;/a&gt; -문장을 초기화하고 mysqli_stmt_prepare와 함께 사용할 객체를 반환</target>
        </trans-unit>
        <trans-unit id="a7599ab8cee78135ac7b07c36e845f6ac717264d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli::store_result&lt;/a&gt; &amp;mdash; Transfers a result set from the last query</source>
          <target state="translated">&lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli :: store_result&lt;/a&gt; &amp;mdash; 마지막 쿼리에서 결과 세트를 전송</target>
        </trans-unit>
        <trans-unit id="a6caf6f440e4364d259ce2b1dafe47a300c2fd30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli_store_result()&lt;/a&gt; - Transfers a result set from the last query</source>
          <target state="translated">&lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli_store_result ()&lt;/a&gt; -마지막 쿼리에서 결과 세트를 전송</target>
        </trans-unit>
        <trans-unit id="08f30b490cf77a19d00642b2f9580369ecd9eb13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.thread-id&quot;&gt;mysqli::$thread_id&lt;/a&gt; &amp;mdash; Returns the thread ID for the current connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.thread-id&quot;&gt;mysqli :: $ thread_id&lt;/a&gt; &amp;mdash; 현재 연결의 스레드 ID를 반환</target>
        </trans-unit>
        <trans-unit id="1da0c9d184e8a4014fe5f4bd64a878be2035cc2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.thread-id&quot;&gt;mysqli_thread_id()&lt;/a&gt; - Returns the thread ID for the current connection</source>
          <target state="translated">&lt;a href=&quot;mysqli.thread-id&quot;&gt;mysqli_thread_id ()&lt;/a&gt; -현재 연결의 스레드 ID를 반환</target>
        </trans-unit>
        <trans-unit id="3c26d420fb65d53d61efe7b4def246dd6f70a0a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.thread-safe&quot;&gt;mysqli::thread_safe&lt;/a&gt; &amp;mdash; Returns whether thread safety is given or not</source>
          <target state="translated">&lt;a href=&quot;mysqli.thread-safe&quot;&gt;mysqli :: thread_safe&lt;/a&gt; &amp;mdash; 스레드 안전성이 제공되는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="58c46bded5c9d046378712b132b5a071bfcc8db9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli::use_result&lt;/a&gt; &amp;mdash; Initiate a result set retrieval</source>
          <target state="translated">&lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli :: use_result&lt;/a&gt; &amp;mdash; 결과 세트 검색을 시작</target>
        </trans-unit>
        <trans-unit id="e045ac4c5c0dd2f727a39ad58098eafb4c942829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli_use_result()&lt;/a&gt; - Initiate a result set retrieval</source>
          <target state="translated">&lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli_use_result ()&lt;/a&gt; -결과 세트 검색 시작</target>
        </trans-unit>
        <trans-unit id="65fbc4a31af487800aca498e56c0230acc13cdfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.warning-count&quot;&gt;mysqli::$warning_count&lt;/a&gt; &amp;mdash; Returns the number of warnings from the last query for the given link</source>
          <target state="translated">&lt;a href=&quot;mysqli.warning-count&quot;&gt;mysqli :: $ warning_count&lt;/a&gt; &amp;mdash; 주어진 링크에 대한 마지막 쿼리로부터 경고 수를 반환</target>
        </trans-unit>
        <trans-unit id="553ac46295222148a632edf76a8a4f2c09439043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mysqli.warning-count&quot;&gt;mysqli_warning_count()&lt;/a&gt; - Returns the number of warnings from the last query for the given link</source>
          <target state="translated">&lt;a href=&quot;mysqli.warning-count&quot;&gt;mysqli_warning_count ()&lt;/a&gt; -주어진 링크에 대한 마지막 쿼리로부터 경고 수를 반환</target>
        </trans-unit>
        <trans-unit id="c5646f2af923d363fa6d5e0621bfc4649207fd2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.construct&quot;&gt;NoRewindIterator::__construct&lt;/a&gt; &amp;mdash; Construct a NoRewindIterator</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.construct&quot;&gt;NoRewindIterator :: __ construct&lt;/a&gt; &amp;mdash; NoRewindIterator를 생성</target>
        </trans-unit>
        <trans-unit id="f00327403c526989cfcf5412d8a55087872615de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.current&quot;&gt;NoRewindIterator::current&lt;/a&gt; &amp;mdash; Get the current value</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.current&quot;&gt;NoRewindIterator :: current&lt;/a&gt; &amp;mdash; 현재 값을 얻는다</target>
        </trans-unit>
        <trans-unit id="07d05dccfe8e839da1eded07ef814d37023b476c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.getinneriterator&quot;&gt;NoRewindIterator::getInnerIterator()&lt;/a&gt; - Get the inner iterator</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.getinneriterator&quot;&gt;NoRewindIterator :: getInnerIterator ()&lt;/a&gt; -내부 이터레이터를 얻는다</target>
        </trans-unit>
        <trans-unit id="0ccac75ef8e78344bfebcb19c8437041464f2839" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.getinneriterator&quot;&gt;NoRewindIterator::getInnerIterator&lt;/a&gt; &amp;mdash; Get the inner iterator</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.getinneriterator&quot;&gt;NoRewindIterator :: getInnerIterator&lt;/a&gt; &amp;mdash; 내부 이터레이터를 얻는다</target>
        </trans-unit>
        <trans-unit id="1997e9b44446ec567583ab13dd1084459bab893f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.key&quot;&gt;NoRewindIterator::key()&lt;/a&gt; - Get the current key</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.key&quot;&gt;NoRewindIterator :: key ()&lt;/a&gt; -현재 키를 얻습니다</target>
        </trans-unit>
        <trans-unit id="861e3497badc893682a807e1e7a07f3f4b775801" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.key&quot;&gt;NoRewindIterator::key&lt;/a&gt; &amp;mdash; Get the current key</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.key&quot;&gt;NoRewindIterator :: key&lt;/a&gt; &amp;mdash; 현재 키를 얻는다</target>
        </trans-unit>
        <trans-unit id="60decb5757ba74dc003b772e029beb969658ea73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.next&quot;&gt;NoRewindIterator::next()&lt;/a&gt; - Forward to the next element</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.next&quot;&gt;NoRewindIterator :: next ()&lt;/a&gt; -다음 요소로 전달</target>
        </trans-unit>
        <trans-unit id="909755b57ae1333bea7274c0f8a2ca8456718e2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.next&quot;&gt;NoRewindIterator::next&lt;/a&gt; &amp;mdash; Forward to the next element</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.next&quot;&gt;NoRewindIterator :: next&lt;/a&gt; &amp;mdash; 다음 요소로 전달</target>
        </trans-unit>
        <trans-unit id="bc87a070cc8db308ac7ea4b0fef5b1e582ffa297" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.rewind&quot;&gt;NoRewindIterator::rewind()&lt;/a&gt; - Prevents the rewind operation on the inner iterator</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.rewind&quot;&gt;NoRewindIterator :: rewind ()&lt;/a&gt; -내부 반복기에서 되감기 작업을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="aebb41a52470baf7ffc03794515b6c70b410b96f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.rewind&quot;&gt;NoRewindIterator::rewind&lt;/a&gt; &amp;mdash; Prevents the rewind operation on the inner iterator</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.rewind&quot;&gt;NoRewindIterator :: rewind&lt;/a&gt; &amp;mdash; 내부 반복기에서 되감기 작업을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="599d420edc3494163272034cd322d8db08e4009d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.valid&quot;&gt;NoRewindIterator::valid()&lt;/a&gt; - Validates the iterator</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.valid&quot;&gt;NoRewindIterator :: valid ()&lt;/a&gt; -이터레이터의 유효성을 검사합니다</target>
        </trans-unit>
        <trans-unit id="f94c265d227b7f247012098fce6615b147dd2af7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;norewinditerator.valid&quot;&gt;NoRewindIterator::valid&lt;/a&gt; &amp;mdash; Validates the iterator</source>
          <target state="translated">&lt;a href=&quot;norewinditerator.valid&quot;&gt;NoRewindIterator :: valid&lt;/a&gt; &amp;mdash; 이터레이터의 유효성을 검사합니다</target>
        </trans-unit>
        <trans-unit id="7eecebf6a479bd502917a183f0b95a0056549408" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;normalizer.getrawdecomposition&quot;&gt;Normalizer::getRawDecomposition&lt;/a&gt; &amp;mdash; Gets the Decomposition_Mapping property for the given UTF-8 encoded code point</source>
          <target state="translated">&lt;a href=&quot;normalizer.getrawdecomposition&quot;&gt;Normalizer :: getRawDecomposition&lt;/a&gt; &amp;mdash; 주어진 UTF-8 인코딩 코드 포인트에 대한 Decomposition_Mapping 속성을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="1accafd0cfa07dcaea89f65a12adec9831fd7619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;normalizer.isnormalized&quot;&gt;Normalizer::isNormalized()&lt;/a&gt; - Checks if the provided string is already in the specified normalization form</source>
          <target state="translated">&lt;a href=&quot;normalizer.isnormalized&quot;&gt;Normalizer :: isNormalized ()&lt;/a&gt; -제공된 문자열이 이미 지정된 정규화 형식인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="79e442981721542ccd6be74730068fd30a474b2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;normalizer.isnormalized&quot;&gt;Normalizer::isNormalized&lt;/a&gt; &amp;mdash; Checks if the provided string is already in the specified normalization form</source>
          <target state="translated">&lt;a href=&quot;normalizer.isnormalized&quot;&gt;Normalizer :: isNormalized&lt;/a&gt; &amp;mdash; 제공된 문자열이 이미 지정된 정규화 형식인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7fa146a0cbdaa8b1af206e59f4098fe2584c1314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;normalizer.isnormalized&quot;&gt;normalizer_is_normalized()&lt;/a&gt; - Checks if the provided string is already in the specified normalization form</source>
          <target state="translated">&lt;a href=&quot;normalizer.isnormalized&quot;&gt;normalizer_is_normalized ()&lt;/a&gt; -제공된 문자열이 이미 지정된 정규화 형식인지 확인</target>
        </trans-unit>
        <trans-unit id="dbb6cb0c0f6d6327fa146486a631e5d03eddc8b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;normalizer.normalize&quot;&gt;Normalizer::normalize()&lt;/a&gt; - Normalizes the input provided and returns the normalized string</source>
          <target state="translated">&lt;a href=&quot;normalizer.normalize&quot;&gt;Normalizer :: normalize ()&lt;/a&gt; -제공된 입력을 정규화하고 정규화 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5ff8858b39082d51565a4ed53e1e3ba706e59ac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;normalizer.normalize&quot;&gt;Normalizer::normalize&lt;/a&gt; &amp;mdash; Normalizes the input provided and returns the normalized string</source>
          <target state="translated">&lt;a href=&quot;normalizer.normalize&quot;&gt;Normalizer :: normalize&lt;/a&gt; &amp;mdash; 제공된 입력을 정규화하고 정규화 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dffdf5a5b0e7399a2762ad271d0ca81ed2242521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;normalizer.normalize&quot;&gt;normalizer_normalize()&lt;/a&gt; - Normalizes the input provided and returns the normalized string</source>
          <target state="translated">&lt;a href=&quot;normalizer.normalize&quot;&gt;normalizer_normalize ()&lt;/a&gt; -제공된 입력을 정규화하고 정규화 된 문자열을 반환합니다</target>
        </trans-unit>
        <trans-unit id="6058aba01896f1593a3c66312e828beff51818a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.create&quot;&gt;NumberFormatter::create&lt;/a&gt; &amp;mdash; Create a number formatter</source>
          <target state="translated">&lt;a href=&quot;numberformatter.create&quot;&gt;NumberFormatter :: create&lt;/a&gt; &amp;mdash; 숫자 포맷터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8194661700425de6e6e1b996ac43b21bfa6dd93c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.create&quot;&gt;numfmt_create()&lt;/a&gt; - Create a number formatter</source>
          <target state="translated">&lt;a href=&quot;numberformatter.create&quot;&gt;numfmt_create ()&lt;/a&gt; -숫자 포맷터 작성</target>
        </trans-unit>
        <trans-unit id="5b9a87a13b67f73388ff10fefcdc1f5f91a0cc73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.format&quot;&gt;NumberFormatter::format&lt;/a&gt; &amp;mdash; Format a number</source>
          <target state="translated">&lt;a href=&quot;numberformatter.format&quot;&gt;NumberFormatter :: format&lt;/a&gt; &amp;mdash; 숫자 형식</target>
        </trans-unit>
        <trans-unit id="4bc5d599dcb1584d777f447e41c1ffeaf2fc84e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.format&quot;&gt;numfmt_format()&lt;/a&gt; - Format a number</source>
          <target state="translated">&lt;a href=&quot;numberformatter.format&quot;&gt;numfmt_format ()&lt;/a&gt; -숫자 형식</target>
        </trans-unit>
        <trans-unit id="1300c3c26690bd34dad22ea3c327b6184e9c3de1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.formatcurrency&quot;&gt;NumberFormatter::formatCurrency&lt;/a&gt; &amp;mdash; Format a currency value</source>
          <target state="translated">&lt;a href=&quot;numberformatter.formatcurrency&quot;&gt;NumberFormatter :: formatCurrency&lt;/a&gt; &amp;mdash; 통화 값의 형식을 지정합니다</target>
        </trans-unit>
        <trans-unit id="1e31fa54ca15b307dd83cafcb672a641d2e0145a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.formatcurrency&quot;&gt;numfmt_format_currency()&lt;/a&gt; - Format a currency value</source>
          <target state="translated">&lt;a href=&quot;numberformatter.formatcurrency&quot;&gt;numfmt_format_currency ()&lt;/a&gt; -통화 값 형식</target>
        </trans-unit>
        <trans-unit id="c0959a2f7d5406b2fca958b5614536bd8aefdd46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.getattribute&quot;&gt;NumberFormatter::getAttribute&lt;/a&gt; &amp;mdash; Get an attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.getattribute&quot;&gt;NumberFormatter :: getAttribute&lt;/a&gt; &amp;mdash; 속성을 얻는다</target>
        </trans-unit>
        <trans-unit id="de52378acc0aefbab4b13998ea0c65654d81f7ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.getattribute&quot;&gt;numfmt_get_attribute()&lt;/a&gt; - Get an attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.getattribute&quot;&gt;numfmt_get_attribute ()&lt;/a&gt; -속성 얻기</target>
        </trans-unit>
        <trans-unit id="ae12a94d58b52b5457005e7e6479e5f05bbc6449" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.geterrorcode&quot;&gt;NumberFormatter::getErrorCode&lt;/a&gt; &amp;mdash; Get formatter's last error code</source>
          <target state="translated">&lt;a href=&quot;numberformatter.geterrorcode&quot;&gt;NumberFormatter :: getErrorCode&lt;/a&gt; &amp;mdash; 포맷터의 마지막 오류 코드를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="d7bd819b70b3494c2aa35dfd538004509875f398" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.geterrorcode&quot;&gt;numfmt_get_error_code()&lt;/a&gt; - Get formatter's last error code</source>
          <target state="translated">&lt;a href=&quot;numberformatter.geterrorcode&quot;&gt;numfmt_get_error_code ()&lt;/a&gt; -포맷터의 마지막 오류 코드 가져 오기</target>
        </trans-unit>
        <trans-unit id="b858351e7d225706d5651c54854fb4d26a20d57b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.geterrormessage&quot;&gt;NumberFormatter::getErrorMessage&lt;/a&gt; &amp;mdash; Get formatter's last error message</source>
          <target state="translated">&lt;a href=&quot;numberformatter.geterrormessage&quot;&gt;NumberFormatter :: getErrorMessage&lt;/a&gt; &amp;mdash; 포맷터의 마지막 오류 메시지를 얻는다</target>
        </trans-unit>
        <trans-unit id="2a5a93eab6a9ec4a9ffb97aed8a3542704b0a72a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.geterrormessage&quot;&gt;numfmt_get_error_message()&lt;/a&gt; - Get formatter's last error message</source>
          <target state="translated">&lt;a href=&quot;numberformatter.geterrormessage&quot;&gt;numfmt_get_error_message ()&lt;/a&gt; -포맷터의 마지막 오류 메시지를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="3a8cf4d9008e2c5db71ef5fb8f35748990dd0682" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.getlocale&quot;&gt;NumberFormatter::getLocale&lt;/a&gt; &amp;mdash; Get formatter locale</source>
          <target state="translated">&lt;a href=&quot;numberformatter.getlocale&quot;&gt;NumberFormatter :: getLocale&lt;/a&gt; &amp;mdash; 포맷터 로케일 가져 오기</target>
        </trans-unit>
        <trans-unit id="a1f0517436f1e460e48486039c89c0f0bacd90a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.getpattern&quot;&gt;NumberFormatter::getPattern&lt;/a&gt; &amp;mdash; Get formatter pattern</source>
          <target state="translated">&lt;a href=&quot;numberformatter.getpattern&quot;&gt;NumberFormatter :: getPattern&lt;/a&gt; &amp;mdash; 포맷터 패턴을 얻는다</target>
        </trans-unit>
        <trans-unit id="1713494848e212584d05bdec6db73cc3a9cf25cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.getpattern&quot;&gt;numfmt_get_pattern()&lt;/a&gt; - Get formatter pattern</source>
          <target state="translated">&lt;a href=&quot;numberformatter.getpattern&quot;&gt;numfmt_get_pattern ()&lt;/a&gt; -포맷터 패턴 가져 오기</target>
        </trans-unit>
        <trans-unit id="1146b479e09c3d6caefb98e4df15db38b819147a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.getsymbol&quot;&gt;NumberFormatter::getSymbol&lt;/a&gt; &amp;mdash; Get a symbol value</source>
          <target state="translated">&lt;a href=&quot;numberformatter.getsymbol&quot;&gt;NumberFormatter :: getSymbol&lt;/a&gt; &amp;mdash; 심벌 값을 얻는다</target>
        </trans-unit>
        <trans-unit id="b92cd65ee82e6815ffa392b5859b5cc5d2756a11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.getsymbol&quot;&gt;numfmt_get_symbol()&lt;/a&gt; - Get a symbol value</source>
          <target state="translated">&lt;a href=&quot;numberformatter.getsymbol&quot;&gt;numfmt_get_symbol ()&lt;/a&gt; -기호 값을 얻습니다</target>
        </trans-unit>
        <trans-unit id="b15115e1dd1cbd7c771026134473f355ed6fe144" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.gettextattribute&quot;&gt;NumberFormatter::getTextAttribute&lt;/a&gt; &amp;mdash; Get a text attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.gettextattribute&quot;&gt;NumberFormatter :: getTextAttribute&lt;/a&gt; &amp;mdash; 텍스트 속성을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="738b25663caf11f64f61a03c767930475a8ffda0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.gettextattribute&quot;&gt;numfmt_get_text_attribute()&lt;/a&gt; - Get a text attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.gettextattribute&quot;&gt;numfmt_get_text_attribute ()&lt;/a&gt; -텍스트 속성 얻기</target>
        </trans-unit>
        <trans-unit id="2758d228d0d5cd8e1d21fd216d85b4cd8ea2a90f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.parse&quot;&gt;NumberFormatter::parse&lt;/a&gt; &amp;mdash; Parse a number</source>
          <target state="translated">&lt;a href=&quot;numberformatter.parse&quot;&gt;NumberFormatter :: parse&lt;/a&gt; &amp;mdash; 숫자 구문 분석</target>
        </trans-unit>
        <trans-unit id="8d4d4fa0c7c9098a52a7c8af9423fe07064763a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.parse&quot;&gt;numfmt_parse()&lt;/a&gt; - Parse a number</source>
          <target state="translated">&lt;a href=&quot;numberformatter.parse&quot;&gt;numfmt_parse ()&lt;/a&gt; -숫자 구문 분석</target>
        </trans-unit>
        <trans-unit id="8eb95f8a5c9b1bff5c942a68387606fd902401b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.parsecurrency&quot;&gt;NumberFormatter::parseCurrency&lt;/a&gt; &amp;mdash; Parse a currency number</source>
          <target state="translated">&lt;a href=&quot;numberformatter.parsecurrency&quot;&gt;NumberFormatter :: parseCurrency&lt;/a&gt; &amp;mdash; 통화 번호를 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="2d408e7e330b9eafaf2d60132ee6f2871749a693" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.parsecurrency&quot;&gt;numfmt_parse_currency()&lt;/a&gt; - Parse a currency number</source>
          <target state="translated">&lt;a href=&quot;numberformatter.parsecurrency&quot;&gt;numfmt_parse_currency ()&lt;/a&gt; -통화 번호 구문 분석</target>
        </trans-unit>
        <trans-unit id="5abbcf8d6ff7e0e3e560be91415019e2165edf85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.setattribute&quot;&gt;NumberFormatter::setAttribute&lt;/a&gt; &amp;mdash; Set an attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.setattribute&quot;&gt;NumberFormatter :: setAttribute&lt;/a&gt; &amp;mdash; 속성을 설정합니다</target>
        </trans-unit>
        <trans-unit id="2e97926278808fea2a58a746246f3936d8c34ca3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.setattribute&quot;&gt;numfmt_set_attribute()&lt;/a&gt; - Set an attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.setattribute&quot;&gt;numfmt_set_attribute ()&lt;/a&gt; -속성 설정</target>
        </trans-unit>
        <trans-unit id="e2f180a1c236cb85f6d0e4e7f79cbae54866e008" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.setpattern&quot;&gt;NumberFormatter::setPattern&lt;/a&gt; &amp;mdash; Set formatter pattern</source>
          <target state="translated">&lt;a href=&quot;numberformatter.setpattern&quot;&gt;NumberFormatter :: setPattern&lt;/a&gt; &amp;mdash; 포맷터 패턴 설정</target>
        </trans-unit>
        <trans-unit id="023a6f263c691bd291af5aa367ce0c7ab63390cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.setpattern&quot;&gt;numfmt_set_pattern()&lt;/a&gt; - Set formatter pattern</source>
          <target state="translated">&lt;a href=&quot;numberformatter.setpattern&quot;&gt;numfmt_set_pattern ()&lt;/a&gt; -포맷터 패턴 설정</target>
        </trans-unit>
        <trans-unit id="308e37dbdd58e364e39a35e99a5e71eabf43af0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.setsymbol&quot;&gt;NumberFormatter::setSymbol&lt;/a&gt; &amp;mdash; Set a symbol value</source>
          <target state="translated">&lt;a href=&quot;numberformatter.setsymbol&quot;&gt;NumberFormatter :: setSymbol&lt;/a&gt; &amp;mdash; 기호 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="fb3d0e007139870fe900c0d50451aed89c00d3c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.setsymbol&quot;&gt;numfmt_set_symbol()&lt;/a&gt; - Set a symbol value</source>
          <target state="translated">&lt;a href=&quot;numberformatter.setsymbol&quot;&gt;numfmt_set_symbol ()&lt;/a&gt; -심볼 값 설정</target>
        </trans-unit>
        <trans-unit id="843265504b071724e400cb8df2b8d65dd4ba5ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.settextattribute&quot;&gt;NumberFormatter::setTextAttribute&lt;/a&gt; &amp;mdash; Set a text attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.settextattribute&quot;&gt;NumberFormatter :: setTextAttribute&lt;/a&gt; &amp;mdash; 텍스트 속성을 설정합니다</target>
        </trans-unit>
        <trans-unit id="125fe58faf84e8465ad7234e86d33f86902febf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;numberformatter.settextattribute&quot;&gt;numfmt_set_text_attribute()&lt;/a&gt; - Set a text attribute</source>
          <target state="translated">&lt;a href=&quot;numberformatter.settextattribute&quot;&gt;numfmt_set_text_attribute ()&lt;/a&gt; -텍스트 속성 설정</target>
        </trans-unit>
        <trans-unit id="1f73ec24b2fdac671f7983c2414bb9516eb6c913" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.construct&quot;&gt;OAuth::__construct()&lt;/a&gt; - Create a new OAuth object</source>
          <target state="translated">&lt;a href=&quot;oauth.construct&quot;&gt;OAuth :: __ construct ()&lt;/a&gt; -새로운 OAuth 객체 생성</target>
        </trans-unit>
        <trans-unit id="a62d2ed9db60460a370badb56d4d307950243f64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.construct&quot;&gt;OAuth::__construct&lt;/a&gt; &amp;mdash; Create a new OAuth object</source>
          <target state="translated">&lt;a href=&quot;oauth.construct&quot;&gt;OAuth :: __ construct&lt;/a&gt; &amp;mdash; 새로운 OAuth 객체 생성</target>
        </trans-unit>
        <trans-unit id="5c46136298bb7a0b04431f4dec000433a1109aac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.destruct&quot;&gt;OAuth::__destruct&lt;/a&gt; &amp;mdash; The destructor</source>
          <target state="translated">&lt;a href=&quot;oauth.destruct&quot;&gt;OAuth :: __ destruct&lt;/a&gt; &amp;mdash; 소멸자</target>
        </trans-unit>
        <trans-unit id="ca41d67b6845ea06b1557335c3f182ce44f2e81c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.disabledebug&quot;&gt;OAuth::disableDebug()&lt;/a&gt; - Turn off verbose debugging</source>
          <target state="translated">&lt;a href=&quot;oauth.disabledebug&quot;&gt;OAuth :: disableDebug ()&lt;/a&gt; -자세한 디버깅 끄기</target>
        </trans-unit>
        <trans-unit id="9c5e98a6cac495c62bc0837899686bf4d2d617ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.disabledebug&quot;&gt;OAuth::disableDebug&lt;/a&gt; &amp;mdash; Turn off verbose debugging</source>
          <target state="translated">&lt;a href=&quot;oauth.disabledebug&quot;&gt;OAuth :: disableDebug-&lt;/a&gt; 자세한 디버깅 끄기</target>
        </trans-unit>
        <trans-unit id="7f2d29e3df9f180b8c7146f8513d7c2652522cee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.disableredirects&quot;&gt;OAuth::disableRedirects()&lt;/a&gt; - Turn off redirects</source>
          <target state="translated">&lt;a href=&quot;oauth.disableredirects&quot;&gt;OAuth :: disableRedirects ()&lt;/a&gt; -리디렉션 비활성화</target>
        </trans-unit>
        <trans-unit id="66581c1b1ab24d19585656b4cd23d61d107a67a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.disableredirects&quot;&gt;OAuth::disableRedirects&lt;/a&gt; &amp;mdash; Turn off redirects</source>
          <target state="translated">&lt;a href=&quot;oauth.disableredirects&quot;&gt;OAuth :: disableRedirects&lt;/a&gt; &amp;mdash; 리디렉션을 끕니다</target>
        </trans-unit>
        <trans-unit id="565ec82732b44d8b0ab69a97dc6c97df49aa2fa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.disablesslchecks&quot;&gt;OAuth::disableSSLChecks()&lt;/a&gt; - Turn off SSL checks</source>
          <target state="translated">&lt;a href=&quot;oauth.disablesslchecks&quot;&gt;OAuth :: disableSSLChecks ()&lt;/a&gt; -SSL 검사 끄기</target>
        </trans-unit>
        <trans-unit id="9189db7bfc3dd425c00a0e1b0ca8d154bbf93a32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.disablesslchecks&quot;&gt;OAuth::disableSSLChecks&lt;/a&gt; &amp;mdash; Turn off SSL checks</source>
          <target state="translated">&lt;a href=&quot;oauth.disablesslchecks&quot;&gt;OAuth :: disableSSLChecks&lt;/a&gt; &amp;mdash; SSL 검사 끄기</target>
        </trans-unit>
        <trans-unit id="80a4a904d286cea5a67d7fde230984647d12e2d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.enabledebug&quot;&gt;OAuth::enableDebug()&lt;/a&gt; - Turn on verbose debugging</source>
          <target state="translated">&lt;a href=&quot;oauth.enabledebug&quot;&gt;OAuth :: enableDebug ()&lt;/a&gt; -자세한 디버깅 설정</target>
        </trans-unit>
        <trans-unit id="437a4336e57b7bc1be6d7031fec77762489b0960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.enabledebug&quot;&gt;OAuth::enableDebug&lt;/a&gt; &amp;mdash; Turn on verbose debugging</source>
          <target state="translated">&lt;a href=&quot;oauth.enabledebug&quot;&gt;OAuth :: enableDebug&lt;/a&gt; &amp;mdash; 자세한 디버깅을 켭니다</target>
        </trans-unit>
        <trans-unit id="05d64035271bdd23a79254028ae5ff469c2a36dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.enableredirects&quot;&gt;OAuth::enableRedirects()&lt;/a&gt; - Turn on redirects</source>
          <target state="translated">&lt;a href=&quot;oauth.enableredirects&quot;&gt;OAuth :: enableRedirects ()&lt;/a&gt; -리디렉션을 켭니다</target>
        </trans-unit>
        <trans-unit id="ec7ebef4e73a16467c5edd0fc128840379cc5ad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.enableredirects&quot;&gt;OAuth::enableRedirects&lt;/a&gt; &amp;mdash; Turn on redirects</source>
          <target state="translated">&lt;a href=&quot;oauth.enableredirects&quot;&gt;OAuth :: enableRedirects&lt;/a&gt; &amp;mdash; 리디렉션을 켭니다</target>
        </trans-unit>
        <trans-unit id="c3cc372a24b17f23979c387daeaa83515e7cb327" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.enablesslchecks&quot;&gt;OAuth::enableSSLChecks()&lt;/a&gt; - Turn on SSL checks</source>
          <target state="translated">&lt;a href=&quot;oauth.enablesslchecks&quot;&gt;OAuth :: enableSSLChecks ()&lt;/a&gt; -SSL 검사 켜기</target>
        </trans-unit>
        <trans-unit id="ad3cca65b68ec208a02fe4ffdd33e04e6b1a5224" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.enablesslchecks&quot;&gt;OAuth::enableSSLChecks&lt;/a&gt; &amp;mdash; Turn on SSL checks</source>
          <target state="translated">&lt;a href=&quot;oauth.enablesslchecks&quot;&gt;OAuth :: enableSSLChecks&lt;/a&gt; &amp;mdash; SSL 검사 켜기</target>
        </trans-unit>
        <trans-unit id="298e3bbf7d2231eb3e64fe23243b91a1ddaa4c6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.fetch&quot;&gt;OAuth::fetch()&lt;/a&gt; - Fetch an OAuth protected resource</source>
          <target state="translated">&lt;a href=&quot;oauth.fetch&quot;&gt;OAuth :: fetch ()&lt;/a&gt; -OAuth로 보호 된 리소스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="7b8fffc1999385ed42caa6d17657d2568aea209f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.fetch&quot;&gt;OAuth::fetch&lt;/a&gt; &amp;mdash; Fetch an OAuth protected resource</source>
          <target state="translated">&lt;a href=&quot;oauth.fetch&quot;&gt;OAuth :: fetch&lt;/a&gt; &amp;mdash; OAuth로 보호 된 리소스를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="9f7edcddbd065d0d59307e95cc32b7744003a3c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.generatesignature&quot;&gt;OAuth::generateSignature&lt;/a&gt; &amp;mdash; Generate a signature</source>
          <target state="translated">&lt;a href=&quot;oauth.generatesignature&quot;&gt;OAuth :: generateSignature&lt;/a&gt; &amp;mdash; 서명 생성</target>
        </trans-unit>
        <trans-unit id="d2f3273b6108540fb4c0403ebd793d970e0cf227" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getaccesstoken&quot;&gt;OAuth::getAccessToken&lt;/a&gt; &amp;mdash; Fetch an access token</source>
          <target state="translated">&lt;a href=&quot;oauth.getaccesstoken&quot;&gt;OAuth :: getAccessToken&lt;/a&gt; &amp;mdash; 액세스 토큰을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="55ee907b948ae1ed64a130e5bdf46b9a3ec5584a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getcapath&quot;&gt;OAuth::getCAPath&lt;/a&gt; &amp;mdash; Gets CA information</source>
          <target state="translated">&lt;a href=&quot;oauth.getcapath&quot;&gt;OAuth :: getCAPath&lt;/a&gt; &amp;mdash; CA 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="02442d1410982a92a294e58ec0981722f1e1f0a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getcapath&quot;&gt;OAuth::getCaPath()&lt;/a&gt; - Gets CA information</source>
          <target state="translated">&lt;a href=&quot;oauth.getcapath&quot;&gt;OAuth :: getCaPath ()&lt;/a&gt; -CA 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b17a95a1b448caea87a3e28b20ff9200515efd0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getlastresponse&quot;&gt;OAuth::getLastResponse()&lt;/a&gt; - Get the last response</source>
          <target state="translated">&lt;a href=&quot;oauth.getlastresponse&quot;&gt;OAuth :: getLastResponse ()&lt;/a&gt; -마지막 응답 받기</target>
        </trans-unit>
        <trans-unit id="c2ccbbc00c39905f83eb01b34b9819a64d927ce0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getlastresponse&quot;&gt;OAuth::getLastResponse&lt;/a&gt; &amp;mdash; Get the last response</source>
          <target state="translated">&lt;a href=&quot;oauth.getlastresponse&quot;&gt;OAuth :: getLastResponse&lt;/a&gt; &amp;mdash; 마지막 응답 받기</target>
        </trans-unit>
        <trans-unit id="938b61ff088908f15c13665759a28caee7adce4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getlastresponseheaders&quot;&gt;OAuth::getLastResponseHeaders&lt;/a&gt; &amp;mdash; Get headers for last response</source>
          <target state="translated">&lt;a href=&quot;oauth.getlastresponseheaders&quot;&gt;OAuth :: getLastResponseHeaders&lt;/a&gt; &amp;mdash; 마지막 응답을위한 헤더 가져 오기</target>
        </trans-unit>
        <trans-unit id="98a24dc2b71843c6bea4a2ee34625e015f050835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getlastresponseinfo&quot;&gt;OAuth::getLastResponseInfo()&lt;/a&gt; - Get HTTP information about the last response</source>
          <target state="translated">&lt;a href=&quot;oauth.getlastresponseinfo&quot;&gt;OAuth :: getLastResponseInfo ()&lt;/a&gt; -마지막 응답에 대한 HTTP 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="d3c81410f27489e7dc570fd13c6cb2499cb75cfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getlastresponseinfo&quot;&gt;OAuth::getLastResponseInfo&lt;/a&gt; &amp;mdash; Get HTTP information about the last response</source>
          <target state="translated">&lt;a href=&quot;oauth.getlastresponseinfo&quot;&gt;OAuth :: getLastResponseInfo&lt;/a&gt; &amp;mdash; 마지막 응답에 대한 HTTP 정보를 얻습니다</target>
        </trans-unit>
        <trans-unit id="77b9f1a93a33ca2217f7d2745e899a0ba9e5c101" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getrequestheader&quot;&gt;OAuth::getRequestHeader&lt;/a&gt; &amp;mdash; Generate OAuth header string signature</source>
          <target state="translated">&lt;a href=&quot;oauth.getrequestheader&quot;&gt;OAuth :: getRequestHeader&lt;/a&gt; &amp;mdash; OAuth 헤더 문자열 서명 생성</target>
        </trans-unit>
        <trans-unit id="aed717c9a1864b6fde194215dffa4bff359c80ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.getrequesttoken&quot;&gt;OAuth::getRequestToken&lt;/a&gt; &amp;mdash; Fetch a request token</source>
          <target state="translated">&lt;a href=&quot;oauth.getrequesttoken&quot;&gt;OAuth :: getRequestToken&lt;/a&gt; &amp;mdash; 요청 토큰을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="ef489a9a3561e68a33d2a87eedb7508001aa4b45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setauthtype&quot;&gt;OAuth::setAuthType()&lt;/a&gt; - Set authorization type</source>
          <target state="translated">&lt;a href=&quot;oauth.setauthtype&quot;&gt;OAuth :: setAuthType ()&lt;/a&gt; -인증 유형 설정</target>
        </trans-unit>
        <trans-unit id="b0912175f2a8df9f8b2914f8bfdf7920563c92e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setauthtype&quot;&gt;OAuth::setAuthType&lt;/a&gt; &amp;mdash; Set authorization type</source>
          <target state="translated">&lt;a href=&quot;oauth.setauthtype&quot;&gt;OAuth :: setAuthType&lt;/a&gt; &amp;mdash; 인증 유형 설정</target>
        </trans-unit>
        <trans-unit id="45640e194a1ef78a7bb8c968360f5e81f0659adb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setcapath&quot;&gt;OAuth::setCAPath()&lt;/a&gt; - Set CA path and info</source>
          <target state="translated">&lt;a href=&quot;oauth.setcapath&quot;&gt;OAuth :: setCAPath ()&lt;/a&gt; -CA 경로 및 정보 설정</target>
        </trans-unit>
        <trans-unit id="37fc7d6de985650d463d88d0032de48591d4cc8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setcapath&quot;&gt;OAuth::setCAPath&lt;/a&gt; &amp;mdash; Set CA path and info</source>
          <target state="translated">&lt;a href=&quot;oauth.setcapath&quot;&gt;OAuth :: setCAPath&lt;/a&gt; &amp;mdash; CA 경로 및 정보 설정</target>
        </trans-unit>
        <trans-unit id="fd428ad33238d8083077e23131036392d409933a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setcapath&quot;&gt;OAuth::setCaPath()&lt;/a&gt; - Set CA path and info</source>
          <target state="translated">&lt;a href=&quot;oauth.setcapath&quot;&gt;OAuth :: setCaPath ()&lt;/a&gt; -CA 경로 및 정보 설정</target>
        </trans-unit>
        <trans-unit id="c937471011e57f97351a1e4293fd116abc1ad2ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setnonce&quot;&gt;OAuth::setNonce()&lt;/a&gt; - Set the nonce for subsequent requests</source>
          <target state="translated">&lt;a href=&quot;oauth.setnonce&quot;&gt;OAuth :: setNonce ()&lt;/a&gt; -후속 요청에 대한 nonce 설정</target>
        </trans-unit>
        <trans-unit id="967a8a4922d3f824be1b9bf50f4047ec358c4b8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setnonce&quot;&gt;OAuth::setNonce&lt;/a&gt; &amp;mdash; Set the nonce for subsequent requests</source>
          <target state="translated">&lt;a href=&quot;oauth.setnonce&quot;&gt;OAuth :: setNonce&lt;/a&gt; &amp;mdash; 후속 요청에 대한 nonce 설정</target>
        </trans-unit>
        <trans-unit id="fbae9982b8978b0eed7be41c541e4d3ca55fdb5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setrequestengine&quot;&gt;OAuth::setRequestEngine&lt;/a&gt; &amp;mdash; The setRequestEngine purpose</source>
          <target state="translated">&lt;a href=&quot;oauth.setrequestengine&quot;&gt;OAuth :: setRequestEngine&lt;/a&gt; &amp;mdash; setRequestEngine 목적</target>
        </trans-unit>
        <trans-unit id="5a391480dc2b47bc8a1befe1f5cd35576196abf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setrsacertificate&quot;&gt;OAuth::setRSACertificate&lt;/a&gt; &amp;mdash; Set the RSA certificate</source>
          <target state="translated">&lt;a href=&quot;oauth.setrsacertificate&quot;&gt;OAuth :: setRSACertificate&lt;/a&gt; &amp;mdash; RSA 인증서 설정</target>
        </trans-unit>
        <trans-unit id="5478133144ff3961eb594092aac3393f18adf307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setsslchecks&quot;&gt;OAuth::setSSLChecks&lt;/a&gt; &amp;mdash; Tweak specific SSL checks for requests</source>
          <target state="translated">&lt;a href=&quot;oauth.setsslchecks&quot;&gt;OAuth :: setSSLChecks&lt;/a&gt; &amp;mdash; 요청에 대한 특정 SSL 검사 조정</target>
        </trans-unit>
        <trans-unit id="2d8a9bc7204e74665234e2b6aa0b593e66d475f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.settimestamp&quot;&gt;OAuth::setTimestamp&lt;/a&gt; &amp;mdash; Set the timestamp</source>
          <target state="translated">&lt;a href=&quot;oauth.settimestamp&quot;&gt;OAuth :: setTimestamp&lt;/a&gt; &amp;mdash; 타임 스탬프 설정</target>
        </trans-unit>
        <trans-unit id="b1c41be98910fda2a851b05015a0d7b4a47b3087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.settoken&quot;&gt;OAuth::setToken()&lt;/a&gt; - Sets the token and secret</source>
          <target state="translated">&lt;a href=&quot;oauth.settoken&quot;&gt;OAuth :: setToken ()&lt;/a&gt; -토큰과 비밀을 설정합니다</target>
        </trans-unit>
        <trans-unit id="e48242cfea1349e111122c1a7dfdcc21b5cc4ae4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.settoken&quot;&gt;OAuth::setToken&lt;/a&gt; &amp;mdash; Sets the token and secret</source>
          <target state="translated">&lt;a href=&quot;oauth.settoken&quot;&gt;OAuth :: setToken&lt;/a&gt; &amp;mdash; 토큰과 비밀을 설정합니다</target>
        </trans-unit>
        <trans-unit id="f48b8a752bd525598e1a0d4d4d5bbb60227ec469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setversion&quot;&gt;OAuth::setVersion()&lt;/a&gt; - Set the OAuth version</source>
          <target state="translated">&lt;a href=&quot;oauth.setversion&quot;&gt;OAuth :: setVersion ()-OAuth&lt;/a&gt; 버전 설정</target>
        </trans-unit>
        <trans-unit id="d2a8673b1e1d19ef0e9d9d0ab52813d9bfeea804" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauth.setversion&quot;&gt;OAuth::setVersion&lt;/a&gt; &amp;mdash; Set the OAuth version</source>
          <target state="translated">&lt;a href=&quot;oauth.setversion&quot;&gt;OAuth :: setVersion&lt;/a&gt; &amp;mdash; OAuth 버전 설정</target>
        </trans-unit>
        <trans-unit id="139f6bf27925fd6f8d94abe668c6d7bf40a0ea26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.addrequiredparameter&quot;&gt;OAuthProvider::addRequiredParameter()&lt;/a&gt; - Add required parameters</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.addrequiredparameter&quot;&gt;OAuthProvider :: addRequiredParameter ()&lt;/a&gt; -필수 매개 변수 추가</target>
        </trans-unit>
        <trans-unit id="2cefed55bb50b76f9a4472012d4dc833670f2d1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.addrequiredparameter&quot;&gt;OAuthProvider::addRequiredParameter&lt;/a&gt; &amp;mdash; Add required parameters</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.addrequiredparameter&quot;&gt;OAuthProvider :: addRequiredParameter&lt;/a&gt; &amp;mdash; 필수 매개 변수 추가</target>
        </trans-unit>
        <trans-unit id="c39c0f3797d5a1bc4a42865eb6d6671d1e977ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.callconsumerhandler&quot;&gt;OAuthProvider::callConsumerHandler()&lt;/a&gt; - Calls the consumerNonceHandler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.callconsumerhandler&quot;&gt;OAuthProvider :: callConsumerHandler ()-consumerNonceHandler&lt;/a&gt; 콜백을 호출</target>
        </trans-unit>
        <trans-unit id="acefb5610e427e293ba9b16eb13ce20a8ef7d6c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.callconsumerhandler&quot;&gt;OAuthProvider::callconsumerHandler&lt;/a&gt; &amp;mdash; Calls the consumerNonceHandler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.callconsumerhandler&quot;&gt;OAuthProvider :: callconsumerHandler&lt;/a&gt; &amp;mdash; consumerNonceHandler 콜백을 호출</target>
        </trans-unit>
        <trans-unit id="1f369ddd2beac7d8ca04c19156d03e9bed99b6c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.calltimestampnoncehandler&quot;&gt;OAuthProvider::callTimestampNonceHandler()&lt;/a&gt; - Calls the timestampNonceHandler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.calltimestampnoncehandler&quot;&gt;OAuthProvider :: callTimestampNonceHandler ()-timestampNonceHandler&lt;/a&gt; 콜백을 호출합니다</target>
        </trans-unit>
        <trans-unit id="cfc0c7220605c47733f28b70a0e28fffa31b6594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.calltimestampnoncehandler&quot;&gt;OAuthProvider::callTimestampNonceHandler&lt;/a&gt; &amp;mdash; Calls the timestampNonceHandler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.calltimestampnoncehandler&quot;&gt;OAuthProvider :: callTimestampNonceHandler&lt;/a&gt; &amp;mdash; timestampNonceHandler 콜백을 호출</target>
        </trans-unit>
        <trans-unit id="61a049a9f8bdb254b830f47d98c800cf198d1052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.calltokenhandler&quot;&gt;OAuthProvider::callTokenHandler()&lt;/a&gt; - Calls the tokenNonceHandler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.calltokenhandler&quot;&gt;OAuthProvider :: callTokenHandler ()&lt;/a&gt; -tokenNonceHandler 콜백을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="9df12cb2d43140a335a8a367122845295038aab0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.calltokenhandler&quot;&gt;OAuthProvider::calltokenHandler&lt;/a&gt; &amp;mdash; Calls the tokenNonceHandler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.calltokenhandler&quot;&gt;OAuthProvider :: calltokenHandler&lt;/a&gt; &amp;mdash; tokenNonceHandler 콜백을 호출</target>
        </trans-unit>
        <trans-unit id="c4040fb102dd99689edddef8a65be94a6e5372f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.checkoauthrequest&quot;&gt;OAuthProvider::checkOAuthRequest()&lt;/a&gt; - Check an oauth request</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.checkoauthrequest&quot;&gt;OAuthProvider :: checkOAuthRequest ()-oauth&lt;/a&gt; 요청 확인</target>
        </trans-unit>
        <trans-unit id="6973309e6c72e81dd19ad3445ddee37f9a48a9f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.checkoauthrequest&quot;&gt;OAuthProvider::checkOAuthRequest&lt;/a&gt; &amp;mdash; Check an oauth request</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.checkoauthrequest&quot;&gt;OAuthProvider :: checkOAuthRequest&lt;/a&gt; &amp;mdash; oauth 요청 확인</target>
        </trans-unit>
        <trans-unit id="9aed5acd8832522e0b046b994de4c46c78b6b70d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.construct&quot;&gt;OAuthProvider::__construct()&lt;/a&gt; - Constructs a new OAuthProvider object</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.construct&quot;&gt;OAuthProvider :: __ construct ()&lt;/a&gt; -새로운 OAuthProvider 객체를 생성</target>
        </trans-unit>
        <trans-unit id="791b164175d4aae98cc6df89421ab4e8fed69a88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.construct&quot;&gt;OAuthProvider::__construct&lt;/a&gt; &amp;mdash; Constructs a new OAuthProvider object</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.construct&quot;&gt;OAuthProvider :: __ construct&lt;/a&gt; &amp;mdash; 새로운 OAuthProvider 객체를 생성</target>
        </trans-unit>
        <trans-unit id="0a0fbdb11203545150e7a0028917792c74dddb24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.consumerhandler&quot;&gt;OAuthProvider::consumerHandler()&lt;/a&gt; - Set the consumerHandler handler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.consumerhandler&quot;&gt;OAuthProvider :: consumerHandler ()-consumerHandler&lt;/a&gt; 핸들러 콜백 설정</target>
        </trans-unit>
        <trans-unit id="a991b5247abff031c06ed1e504aeb2969a11617b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.consumerhandler&quot;&gt;OAuthProvider::consumerHandler&lt;/a&gt; &amp;mdash; Set the consumerHandler handler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.consumerhandler&quot;&gt;OAuthProvider :: consumerHandler&lt;/a&gt; &amp;mdash; consumerHandler 핸들러 콜백 설정</target>
        </trans-unit>
        <trans-unit id="d2291a3d94130cbdab196a2fd46bb0e53269aaef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.generatetoken&quot;&gt;OAuthProvider::generateToken&lt;/a&gt; &amp;mdash; Generate a random token</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.generatetoken&quot;&gt;OAuthProvider :: generateToken-&lt;/a&gt; 랜덤 토큰 생성</target>
        </trans-unit>
        <trans-unit id="686f534515ece3f898d118d01a7e6c8c3699d9ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.is2leggedendpoint&quot;&gt;OAuthProvider::is2LeggedEndpoint&lt;/a&gt; &amp;mdash; is2LeggedEndpoint</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.is2leggedendpoint&quot;&gt;OAuthProvider :: is2LeggedEndpoint&lt;/a&gt; &amp;mdash; is2LeggedEndpoint</target>
        </trans-unit>
        <trans-unit id="97b311f43b6cf9074ff82934115aa45427795a05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.isrequesttokenendpoint&quot;&gt;OAuthProvider::isRequestTokenEndpoint()&lt;/a&gt; - Sets isRequestTokenEndpoint</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.isrequesttokenendpoint&quot;&gt;OAuthProvider :: isRequestTokenEndpoint ()-isRequestTokenEndpoint를&lt;/a&gt; 설정합니다</target>
        </trans-unit>
        <trans-unit id="544c9d6f9cbdc14fee4d5f6c6161c583ed77affa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.isrequesttokenendpoint&quot;&gt;OAuthProvider::isRequestTokenEndpoint&lt;/a&gt; &amp;mdash; Sets isRequestTokenEndpoint</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.isrequesttokenendpoint&quot;&gt;OAuthProvider :: isRequestTokenEndpoint&lt;/a&gt; &amp;mdash; isRequestTokenEndpoint를 설정합니다</target>
        </trans-unit>
        <trans-unit id="3a452fe75c33c0a35b1000d3f389fa41612f0678" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.removerequiredparameter&quot;&gt;OAuthProvider::removeRequiredParameter()&lt;/a&gt; - Remove a required parameter</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.removerequiredparameter&quot;&gt;OAuthProvider :: removeRequiredParameter ()&lt;/a&gt; -필수 매개 변수 제거</target>
        </trans-unit>
        <trans-unit id="9c1edd55bd08a1b5cd6bc449fd603fead0a0f608" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.removerequiredparameter&quot;&gt;OAuthProvider::removeRequiredParameter&lt;/a&gt; &amp;mdash; Remove a required parameter</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.removerequiredparameter&quot;&gt;OAuthProvider :: removeRequiredParameter&lt;/a&gt; &amp;mdash; 필수 매개 변수 제거</target>
        </trans-unit>
        <trans-unit id="9e4643703991d4d426d3b18b3862ad325f7c0380" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.reportproblem&quot;&gt;OAuthProvider::reportProblem()&lt;/a&gt; - Report a problem</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.reportproblem&quot;&gt;OAuthProvider :: reportProblem ()&lt;/a&gt; -문제보고</target>
        </trans-unit>
        <trans-unit id="05496a966938c5c0ab1ea2a49031cd46d4da4a44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.reportproblem&quot;&gt;OAuthProvider::reportProblem&lt;/a&gt; &amp;mdash; Report a problem</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.reportproblem&quot;&gt;OAuthProvider :: reportProblem&lt;/a&gt; &amp;mdash; 문제보고</target>
        </trans-unit>
        <trans-unit id="18b8d8b7e926570d9125b281535e65c9d9fd49d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.setparam&quot;&gt;OAuthProvider::setParam()&lt;/a&gt; - Set a parameter</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.setparam&quot;&gt;OAuthProvider :: setParam ()&lt;/a&gt; -매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="1207aec4650ffaa4727cca52e9cdeca2a648bbc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.setparam&quot;&gt;OAuthProvider::setParam&lt;/a&gt; &amp;mdash; Set a parameter</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.setparam&quot;&gt;OAuthProvider :: setParam&lt;/a&gt; &amp;mdash; 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="f69913a0b3fc7b091eff7b238af0463a4ac28027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.setrequesttokenpath&quot;&gt;OAuthProvider::setRequestTokenPath()&lt;/a&gt; - Set request token path</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.setrequesttokenpath&quot;&gt;OAuthProvider :: setRequestTokenPath ()&lt;/a&gt; -요청 토큰 경로 설정</target>
        </trans-unit>
        <trans-unit id="74ec1a732747ded0d80d9193623a47b1a08c7ace" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.setrequesttokenpath&quot;&gt;OAuthProvider::setRequestTokenPath&lt;/a&gt; &amp;mdash; Set request token path</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.setrequesttokenpath&quot;&gt;OAuthProvider :: setRequestTokenPath&lt;/a&gt; &amp;mdash; 요청 토큰 경로 설정</target>
        </trans-unit>
        <trans-unit id="41a4da0eb1e1fb9a5811b2bedc6752cb61f3148d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.timestampnoncehandler&quot;&gt;OAuthProvider::timestampNonceHandler()&lt;/a&gt; - Set the timestampNonceHandler handler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.timestampnoncehandler&quot;&gt;OAuthProvider :: timestampNonceHandler ()-timestampNonceHandler&lt;/a&gt; 핸들러 콜백 설정</target>
        </trans-unit>
        <trans-unit id="8d22148dae089b3effc7ee301df9a2b57166f919" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.timestampnoncehandler&quot;&gt;OAuthProvider::timestampNonceHandler&lt;/a&gt; &amp;mdash; Set the timestampNonceHandler handler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.timestampnoncehandler&quot;&gt;OAuthProvider :: timestampNonceHandler&lt;/a&gt; &amp;mdash; timestampNonceHandler 핸들러 콜백 설정</target>
        </trans-unit>
        <trans-unit id="f8dd691cd9b547249f49c7d9b9ac9bc5bb1ef536" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.tokenhandler&quot;&gt;OAuthProvider::tokenHandler()&lt;/a&gt; - Set the tokenHandler handler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.tokenhandler&quot;&gt;OAuthProvider :: tokenHandler ()&lt;/a&gt; -tokenHandler 핸들러 콜백 설정</target>
        </trans-unit>
        <trans-unit id="976dbef28b28e9d50a26d728823f0c40a4e74562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;oauthprovider.tokenhandler&quot;&gt;OAuthProvider::tokenHandler&lt;/a&gt; &amp;mdash; Set the tokenHandler handler callback</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.tokenhandler&quot;&gt;OAuthProvider :: tokenHandler&lt;/a&gt; &amp;mdash; tokenHandler 핸들러 콜백 설정</target>
        </trans-unit>
        <trans-unit id="94352f8d41a1f23a6fa0ddffb3f850fada20e954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;outeriterator.getinneriterator&quot;&gt;OuterIterator::getInnerIterator&lt;/a&gt; &amp;mdash; Returns the inner iterator for the current entry</source>
          <target state="translated">&lt;a href=&quot;outeriterator.getinneriterator&quot;&gt;OuterIterator :: getInnerIterator&lt;/a&gt; &amp;mdash; 현재 엔트리의 내부 이터레이터를 반환</target>
        </trans-unit>
        <trans-unit id="33a724f86edfcacc4ab3213dcb20da53b9915468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parentiterator.accept&quot;&gt;ParentIterator::accept&lt;/a&gt; &amp;mdash; Determines acceptability</source>
          <target state="translated">&lt;a href=&quot;parentiterator.accept&quot;&gt;ParentIterator :: accept&lt;/a&gt; &amp;mdash; 허용 여부를 결정합니다</target>
        </trans-unit>
        <trans-unit id="524b5ff3a011b40474efb503519f59340dc3197a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parentiterator.construct&quot;&gt;ParentIterator::__construct&lt;/a&gt; &amp;mdash; Constructs a ParentIterator</source>
          <target state="translated">&lt;a href=&quot;parentiterator.construct&quot;&gt;ParentIterator :: __ construct&lt;/a&gt; &amp;mdash; ParentIterator를 생성합니다</target>
        </trans-unit>
        <trans-unit id="321164d0dc34f0c0399740e79272d9597309c3f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parentiterator.getchildren&quot;&gt;ParentIterator::getChildren&lt;/a&gt; &amp;mdash; Return the inner iterator's children contained in a ParentIterator</source>
          <target state="translated">&lt;a href=&quot;parentiterator.getchildren&quot;&gt;ParentIterator :: getChildren&lt;/a&gt; &amp;mdash; ParentIterator에 포함 된 내부 반복자의 자식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="13d01983732991df54efc2b44926fae6f351fe65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parentiterator.haschildren&quot;&gt;ParentIterator::hasChildren()&lt;/a&gt; - Check whether the inner iterator's current element has children</source>
          <target state="translated">&lt;a href=&quot;parentiterator.haschildren&quot;&gt;ParentIterator :: hasChildren ()&lt;/a&gt; -내부 반복자의 현재 요소에 자식이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="c8ac8d4bbb01af964afb59ba943e99f6630c5dba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parentiterator.haschildren&quot;&gt;ParentIterator::hasChildren&lt;/a&gt; &amp;mdash; Check whether the inner iterator's current element has children</source>
          <target state="translated">&lt;a href=&quot;parentiterator.haschildren&quot;&gt;ParentIterator :: hasChildren&lt;/a&gt; &amp;mdash; 내부 반복자의 현재 요소에 자식이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="c5de82de1d69c12d405090fcc9b4827d28065668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parentiterator.next&quot;&gt;ParentIterator::next&lt;/a&gt; &amp;mdash; Move the iterator forward</source>
          <target state="translated">&lt;a href=&quot;parentiterator.next&quot;&gt;ParentIterator :: next&lt;/a&gt; &amp;mdash; 반복자를 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="a8f6782bbfbd384c0b7a4b845a5af495bf2e9217" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parentiterator.rewind&quot;&gt;ParentIterator::rewind&lt;/a&gt; &amp;mdash; Rewind the iterator</source>
          <target state="translated">&lt;a href=&quot;parentiterator.rewind&quot;&gt;ParentIterator :: rewind&lt;/a&gt; &amp;mdash; 반복자를 되감습니다.</target>
        </trans-unit>
        <trans-unit id="81501f20144338743144abbd67a4d8cf1adb097b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.advance&quot;&gt;Parle\Lexer::advance&lt;/a&gt; &amp;mdash; Process next lexer rule</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.advance&quot;&gt;Parle \ Lexer :: advance&lt;/a&gt; &amp;mdash; 다음 어휘 분석기 규칙 처리</target>
        </trans-unit>
        <trans-unit id="c4ddf64f4abdb489112707cf54fab5868f55c9c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.build&quot;&gt;Parle\Lexer::build&lt;/a&gt; &amp;mdash; Finalize the lexer rule set</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.build&quot;&gt;Parle \ Lexer :: build&lt;/a&gt; &amp;mdash; 어휘 분석기 규칙 세트 마무리</target>
        </trans-unit>
        <trans-unit id="1d237139f8761b77a46b77ed53f8f9ce46e686a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.callout&quot;&gt;Parle\Lexer::callout&lt;/a&gt; &amp;mdash; Define token callback</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.callout&quot;&gt;Parle \ Lexer :: callout&lt;/a&gt; &amp;mdash; 토큰 콜백 정의</target>
        </trans-unit>
        <trans-unit id="c3b32796e2f0078870772919083b311675e37543" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.consume&quot;&gt;Parle\Lexer::consume&lt;/a&gt; &amp;mdash; Pass the data for processing</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.consume&quot;&gt;Parle \ Lexer :: consume&lt;/a&gt; &amp;mdash; 처리 ​​할 데이터 전달</target>
        </trans-unit>
        <trans-unit id="9ff97374cc0927637a16a9777e58372092f83700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.dump&quot;&gt;Parle\Lexer::dump&lt;/a&gt; &amp;mdash; Dump the state machine</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.dump&quot;&gt;Parle \ Lexer :: dump&lt;/a&gt; &amp;mdash; 상태 머신 덤프</target>
        </trans-unit>
        <trans-unit id="147745b9942057703e10afadf671c5636fd8160e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.gettoken&quot;&gt;Parle\Lexer::getToken&lt;/a&gt; &amp;mdash; Retrieve the current token</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.gettoken&quot;&gt;Parle \ Lexer :: getToken&lt;/a&gt; &amp;mdash; 현재 토큰 검색</target>
        </trans-unit>
        <trans-unit id="d4883e16cb96c7e6fe8603cb7f15c1519f7adc2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.insertmacro&quot;&gt;Parle\Lexer::insertMacro&lt;/a&gt; &amp;mdash; Insert regex macro</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.insertmacro&quot;&gt;Parle \ Lexer :: insertMacro&lt;/a&gt; &amp;mdash; 정규식 매크로 삽입</target>
        </trans-unit>
        <trans-unit id="1d2c59440d24ff44778ad6400f3d7f91cc00afc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.push&quot;&gt;Parle\Lexer::push&lt;/a&gt; &amp;mdash; Add a lexer rule</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.push&quot;&gt;Parle \ Lexer :: push&lt;/a&gt; &amp;mdash; 렉서 규칙 추가</target>
        </trans-unit>
        <trans-unit id="074c1a79c5101dcbb2d604550a0c24623a889d2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-lexer.reset&quot;&gt;Parle\Lexer::reset&lt;/a&gt; &amp;mdash; Reset lexer</source>
          <target state="translated">&lt;a href=&quot;parle-lexer.reset&quot;&gt;Parle \ Lexer :: reset&lt;/a&gt; &amp;mdash; 렉서 재설정</target>
        </trans-unit>
        <trans-unit id="efc13324610300836a4872d673529e7662dd7ebb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.advance&quot;&gt;Parle\Parser::advance&lt;/a&gt; &amp;mdash; Process next parser rule</source>
          <target state="translated">&lt;a href=&quot;parle-parser.advance&quot;&gt;Parle \ Parser :: advance&lt;/a&gt; &amp;mdash; 다음 파서 규칙 처리</target>
        </trans-unit>
        <trans-unit id="c9bd0daaeaf8295108cd7ad692f11a85810a0bc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.build&quot;&gt;Parle\Parser::build&lt;/a&gt; &amp;mdash; Finalize the grammar rules</source>
          <target state="translated">&lt;a href=&quot;parle-parser.build&quot;&gt;Parle \ Parser :: build&lt;/a&gt; &amp;mdash; 문법 규칙 마무리</target>
        </trans-unit>
        <trans-unit id="9670476e31ceeab5edb575869a9834787b94a7ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.consume&quot;&gt;Parle\Parser::consume&lt;/a&gt; &amp;mdash; Consume the data for processing</source>
          <target state="translated">&lt;a href=&quot;parle-parser.consume&quot;&gt;Parle \ Parser :: consume&lt;/a&gt; &amp;mdash; 처리를 위해 데이터를 소비합니다.</target>
        </trans-unit>
        <trans-unit id="bd0b512ea2806eabac0dee6b6e993edf63fdcbb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.dump&quot;&gt;Parle\Parser::dump&lt;/a&gt; &amp;mdash; Dump the grammar</source>
          <target state="translated">&lt;a href=&quot;parle-parser.dump&quot;&gt;Parle \ Parser :: dump&lt;/a&gt; &amp;mdash; 문법 덤프</target>
        </trans-unit>
        <trans-unit id="81a9f5f10b188e9a9d0c4413f12d94f417437f51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.errorinfo&quot;&gt;Parle\Parser::errorInfo&lt;/a&gt; &amp;mdash; Retrieve the error information</source>
          <target state="translated">&lt;a href=&quot;parle-parser.errorinfo&quot;&gt;Parle \ Parser :: errorInfo&lt;/a&gt; &amp;mdash; 오류 정보 검색</target>
        </trans-unit>
        <trans-unit id="ae6271d312c054e4354154f89d65791004dcb7f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.left&quot;&gt;Parle\Parser::left&lt;/a&gt; &amp;mdash; Declare a token with left-associativity</source>
          <target state="translated">&lt;a href=&quot;parle-parser.left&quot;&gt;Parle \ Parser :: left&lt;/a&gt; &amp;mdash; 왼쪽 연관성을 가진 토큰 선언</target>
        </trans-unit>
        <trans-unit id="0deb39174de6e1db9b0ba68422eab66280678bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.nonassoc&quot;&gt;Parle\Parser::nonassoc&lt;/a&gt; &amp;mdash; Declare a token with no associativity</source>
          <target state="translated">&lt;a href=&quot;parle-parser.nonassoc&quot;&gt;Parle \ Parser :: nonassoc&lt;/a&gt; &amp;mdash; 연관성이없는 토큰 선언</target>
        </trans-unit>
        <trans-unit id="7d7c74d57637b9741eb24601fd098f0fdcb9277e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.precedence&quot;&gt;Parle\Parser::precedence&lt;/a&gt; &amp;mdash; Declare a precedence rule</source>
          <target state="translated">&lt;a href=&quot;parle-parser.precedence&quot;&gt;Parle \ Parser :: precedence&lt;/a&gt; &amp;mdash; 우선 순위 규칙을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="9912395079b0c7597131fcc946074ff26e1317ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.push&quot;&gt;Parle\Parser::push&lt;/a&gt; &amp;mdash; Add a grammar rule</source>
          <target state="translated">&lt;a href=&quot;parle-parser.push&quot;&gt;Parle \ Parser :: push&lt;/a&gt; &amp;mdash; 문법 규칙 추가</target>
        </trans-unit>
        <trans-unit id="f256e7ef336463192d0c42073164df0252c4a58e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.reset&quot;&gt;Parle\Parser::reset&lt;/a&gt; &amp;mdash; Reset parser state</source>
          <target state="translated">&lt;a href=&quot;parle-parser.reset&quot;&gt;Parle \ Parser :: reset&lt;/a&gt; &amp;mdash; 파서 상태 재설정</target>
        </trans-unit>
        <trans-unit id="f227bc7218d756c2b2fe1db68ee6642047bee3b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.right&quot;&gt;Parle\Parser::right&lt;/a&gt; &amp;mdash; Declare a token with right-associativity</source>
          <target state="translated">&lt;a href=&quot;parle-parser.right&quot;&gt;Parle \ Parser :: right&lt;/a&gt; &amp;mdash; 오른쪽 연관성을 가진 토큰 선언</target>
        </trans-unit>
        <trans-unit id="f0d03dcbc266f554d9870319045cfd8cce51bbd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.sigil&quot;&gt;Parle\Parser::sigil&lt;/a&gt; &amp;mdash; Retrieve a matching part of a rule</source>
          <target state="translated">&lt;a href=&quot;parle-parser.sigil&quot;&gt;Parle \ Parser :: sigil&lt;/a&gt; &amp;mdash; 규칙에서 일치하는 부분을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b26fd88dd7cc869c1e75bc39f5622e9a1f97403c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.token&quot;&gt;Parle\Parser::token&lt;/a&gt; &amp;mdash; Declare a token</source>
          <target state="translated">&lt;a href=&quot;parle-parser.token&quot;&gt;Parle \ Parser :: token&lt;/a&gt; &amp;mdash; 토큰 선언</target>
        </trans-unit>
        <trans-unit id="0ba6e58c23dc4815506c4fabc0fdc5b1530092a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.tokenid&quot;&gt;Parle\Parser::tokenId&lt;/a&gt; &amp;mdash; Get token id</source>
          <target state="translated">&lt;a href=&quot;parle-parser.tokenid&quot;&gt;Parle \ Parser :: tokenId&lt;/a&gt; &amp;mdash; 토큰 ID 가져 오기</target>
        </trans-unit>
        <trans-unit id="589616187a9ad843a134e3be5cffa5d2becb948e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.trace&quot;&gt;Parle\Parser::trace&lt;/a&gt; &amp;mdash; Trace the parser operation</source>
          <target state="translated">&lt;a href=&quot;parle-parser.trace&quot;&gt;Parle \ Parser :: trace&lt;/a&gt; &amp;mdash; 파서 작업 추적</target>
        </trans-unit>
        <trans-unit id="671b153ad28092b53252f386d43c6172ca6d1eb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-parser.validate&quot;&gt;Parle\Parser::validate&lt;/a&gt; &amp;mdash; Validate input</source>
          <target state="translated">&lt;a href=&quot;parle-parser.validate&quot;&gt;Parle \ Parser :: validate&lt;/a&gt; &amp;mdash; 입력 유효성 검사</target>
        </trans-unit>
        <trans-unit id="579df89acbfe55a55605f9b02f30cec9b0be43de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.advance&quot;&gt;Parle\RLexer::advance&lt;/a&gt; &amp;mdash; Process next lexer rule</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.advance&quot;&gt;Parle \ RLexer :: advance&lt;/a&gt; &amp;mdash; 다음 어휘 분석기 규칙 처리</target>
        </trans-unit>
        <trans-unit id="043005406d8e0b6d2810ce2c46d7adae1e20d07f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.build&quot;&gt;Parle\RLexer::build&lt;/a&gt; &amp;mdash; Finalize the lexer rule set</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.build&quot;&gt;Parle \ RLexer :: build&lt;/a&gt; &amp;mdash; 어휘 분석기 규칙 세트 마무리</target>
        </trans-unit>
        <trans-unit id="788ffcf76007de4b890fe89f08a6386ef19194c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.callout&quot;&gt;Parle\RLexer::callout&lt;/a&gt; &amp;mdash; Define token callback</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.callout&quot;&gt;Parle \ RLexer :: callout&lt;/a&gt; &amp;mdash; 토큰 콜백 정의</target>
        </trans-unit>
        <trans-unit id="89185c5b180347ca686c203ec70ec891b3a08314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.consume&quot;&gt;Parle\RLexer::consume&lt;/a&gt; &amp;mdash; Pass the data for processing</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.consume&quot;&gt;Parle \ RLexer :: consume&lt;/a&gt; &amp;mdash; 처리 ​​할 데이터 전달</target>
        </trans-unit>
        <trans-unit id="9c1e558f580ba804650b5230bacebb079345da0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.dump&quot;&gt;Parle\RLexer::dump&lt;/a&gt; &amp;mdash; Dump the state machine</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.dump&quot;&gt;Parle \ RLexer :: dump&lt;/a&gt; &amp;mdash; 상태 머신 덤프</target>
        </trans-unit>
        <trans-unit id="b1b11dff1af3e6c1785f936f557ae7bce852b0c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.gettoken&quot;&gt;Parle\RLexer::getToken&lt;/a&gt; &amp;mdash; Retrieve the current token</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.gettoken&quot;&gt;Parle \ RLexer :: getToken&lt;/a&gt; &amp;mdash; 현재 토큰 검색</target>
        </trans-unit>
        <trans-unit id="b9b44471c5410dd20fd822a9b44efba723cdf425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.insertmacro&quot;&gt;Parle\RLexer::insertMacro&lt;/a&gt; &amp;mdash; Insert regex macro</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.insertmacro&quot;&gt;Parle \ RLexer :: insertMacro&lt;/a&gt; &amp;mdash; 정규식 매크로 삽입</target>
        </trans-unit>
        <trans-unit id="f055666370c49e358bcd483178e781ef46d2b400" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.push&quot;&gt;Parle\RLexer::push&lt;/a&gt; &amp;mdash; Add a lexer rule</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.push&quot;&gt;Parle \ RLexer :: push&lt;/a&gt; &amp;mdash; 어휘 분석기 규칙 추가</target>
        </trans-unit>
        <trans-unit id="a2b98062d8152ed8a31ee485da9a9ca1b3c14c96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.pushstate&quot;&gt;Parle\RLexer::pushState&lt;/a&gt; &amp;mdash; Push a new start state</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.pushstate&quot;&gt;Parle \ RLexer :: pushState&lt;/a&gt; &amp;mdash; 새 시작 상태 푸시</target>
        </trans-unit>
        <trans-unit id="5433d70316867400903c385d9a88177b7b3d8f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rlexer.reset&quot;&gt;Parle\RLexer::reset&lt;/a&gt; &amp;mdash; Reset lexer</source>
          <target state="translated">&lt;a href=&quot;parle-rlexer.reset&quot;&gt;Parle \ RLexer :: reset&lt;/a&gt; &amp;mdash; 렉서 재설정</target>
        </trans-unit>
        <trans-unit id="eff76daca538a413421d39d3947e048f43c07100" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.advance&quot;&gt;Parle\RParser::advance&lt;/a&gt; &amp;mdash; Process next parser rule</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.advance&quot;&gt;Parle \ RParser :: advance&lt;/a&gt; &amp;mdash; 다음 파서 규칙 처리</target>
        </trans-unit>
        <trans-unit id="bf435a92992524a15c5119943a1c407bc21255b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.build&quot;&gt;Parle\RParser::build&lt;/a&gt; &amp;mdash; Finalize the grammar rules</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.build&quot;&gt;Parle \ RParser :: build&lt;/a&gt; &amp;mdash; 문법 규칙 마무리</target>
        </trans-unit>
        <trans-unit id="2cec16af3218f4dc303da854143c5e4ff01b36b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.consume&quot;&gt;Parle\RParser::consume&lt;/a&gt; &amp;mdash; Consume the data for processing</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.consume&quot;&gt;Parle \ RParser :: consume&lt;/a&gt; &amp;mdash; 처리를 위해 데이터를 소비합니다.</target>
        </trans-unit>
        <trans-unit id="c6493908ce30d99b2fa739b64901f7144e8dc6d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.dump&quot;&gt;Parle\RParser::dump&lt;/a&gt; &amp;mdash; Dump the grammar</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.dump&quot;&gt;Parle \ RParser :: dump&lt;/a&gt; &amp;mdash; 문법 덤프</target>
        </trans-unit>
        <trans-unit id="a396aace9c58c0bb6d70f043b7f5908d2af7b537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.errorinfo&quot;&gt;Parle\RParser::errorInfo&lt;/a&gt; &amp;mdash; Retrieve the error information</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.errorinfo&quot;&gt;Parle \ RParser :: errorInfo&lt;/a&gt; &amp;mdash; 오류 정보 검색</target>
        </trans-unit>
        <trans-unit id="9cf244e7060cf65a3a32fdf7c5126eea069c6c13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.left&quot;&gt;Parle\RParser::left&lt;/a&gt; &amp;mdash; Declare a token with left-associativity</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.left&quot;&gt;Parle \ RParser :: left&lt;/a&gt; &amp;mdash; 왼쪽 연관성을 가진 토큰 선언</target>
        </trans-unit>
        <trans-unit id="5db59f69b176c7e29f91327d70410b4a1bc8934c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.nonassoc&quot;&gt;Parle\RParser::nonassoc&lt;/a&gt; &amp;mdash; Declare a token with no associativity</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.nonassoc&quot;&gt;Parle \ RParser :: nonassoc&lt;/a&gt; &amp;mdash; 연관성이없는 토큰 선언</target>
        </trans-unit>
        <trans-unit id="3d80fd329491867cbd7df6b02e541201653d828b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.precedence&quot;&gt;Parle\RParser::precedence&lt;/a&gt; &amp;mdash; Declare a precedence rule</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.precedence&quot;&gt;Parle \ RParser :: precedence&lt;/a&gt; &amp;mdash; 우선 순위 규칙을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="66451c0b48816cafd1f0de130e0e1f6c6bf109fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.push&quot;&gt;Parle\RParser::push&lt;/a&gt; &amp;mdash; Add a grammar rule</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.push&quot;&gt;Parle \ RParser :: push&lt;/a&gt; &amp;mdash; 문법 규칙 추가</target>
        </trans-unit>
        <trans-unit id="1c6e61ffe0bbb96093283f75f92be65e66cc15e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.reset&quot;&gt;Parle\RParser::reset&lt;/a&gt; &amp;mdash; Reset parser state</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.reset&quot;&gt;Parle \ RParser :: reset&lt;/a&gt; &amp;mdash; 파서 상태 재설정</target>
        </trans-unit>
        <trans-unit id="524ded95fc35fbb2be6f4e96555303214fee0fff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.right&quot;&gt;Parle\RParser::right&lt;/a&gt; &amp;mdash; Declare a token with right-associativity</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.right&quot;&gt;Parle \ RParser :: right&lt;/a&gt; &amp;mdash; 오른쪽 연관성을 가진 토큰 선언</target>
        </trans-unit>
        <trans-unit id="78f780d9a98fdcc527a02c27161fa83c6fc240e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.sigil&quot;&gt;Parle\RParser::sigil&lt;/a&gt; &amp;mdash; Retrieve a matching part of a rule</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.sigil&quot;&gt;Parle \ RParser :: sigil&lt;/a&gt; &amp;mdash; 규칙에서 일치하는 부분을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b098dac702bdc80cbcfbcea6b66686e7fce58e98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.token&quot;&gt;Parle\RParser::token&lt;/a&gt; &amp;mdash; Declare a token</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.token&quot;&gt;Parle \ RParser :: token&lt;/a&gt; &amp;mdash; 토큰 선언</target>
        </trans-unit>
        <trans-unit id="9c7070a9c1855e6c05fcda0e92a98954794bb7a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.tokenid&quot;&gt;Parle\RParser::tokenId&lt;/a&gt; &amp;mdash; Get token id</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.tokenid&quot;&gt;Parle \ RParser :: tokenId&lt;/a&gt; &amp;mdash; 토큰 ID 가져 오기</target>
        </trans-unit>
        <trans-unit id="e24b8df1439678662390115528dae0ad085e68d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.trace&quot;&gt;Parle\RParser::trace&lt;/a&gt; &amp;mdash; Trace the parser operation</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.trace&quot;&gt;Parle \ RParser :: trace&lt;/a&gt; &amp;mdash; 파서 작업 추적</target>
        </trans-unit>
        <trans-unit id="eda82ddc83847d27113285cddc6bcd634b6675bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-rparser.validate&quot;&gt;Parle\RParser::validate&lt;/a&gt; &amp;mdash; Validate input</source>
          <target state="translated">&lt;a href=&quot;parle-rparser.validate&quot;&gt;Parle \ RParser :: validate&lt;/a&gt; &amp;mdash; 입력 유효성 검사</target>
        </trans-unit>
        <trans-unit id="32a25fcb4f3529aa256f9f66f9216a5c51ab5420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-stack.pop&quot;&gt;Parle\Stack::pop&lt;/a&gt; &amp;mdash; Pop an item from the stack</source>
          <target state="translated">&lt;a href=&quot;parle-stack.pop&quot;&gt;Parle \ Stack :: pop&lt;/a&gt; &amp;mdash; 스택에서 항목을 팝합니다.</target>
        </trans-unit>
        <trans-unit id="bf5b8133273a3912b3b133b247e4b9435a49bcf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parle-stack.push&quot;&gt;Parle\Stack::push&lt;/a&gt; &amp;mdash; Push an item into the stack</source>
          <target state="translated">&lt;a href=&quot;parle-stack.push&quot;&gt;Parle \ Stack :: push&lt;/a&gt; &amp;mdash; 항목을 스택으로 푸시</target>
        </trans-unit>
        <trans-unit id="6b1ff70989241918c4312e528eb2f4b8222b10d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.begintransaction&quot;&gt;PDO::beginTransaction()&lt;/a&gt; - Initiates a transaction</source>
          <target state="translated">&lt;a href=&quot;pdo.begintransaction&quot;&gt;PDO :: beginTransaction ()&lt;/a&gt; -트랜잭션을 시작합니다</target>
        </trans-unit>
        <trans-unit id="cb5c602c3c3350d624dfb9ff797448986c87c9c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.begintransaction&quot;&gt;PDO::beginTransaction&lt;/a&gt; &amp;mdash; Initiates a transaction</source>
          <target state="translated">&lt;a href=&quot;pdo.begintransaction&quot;&gt;PDO :: beginTransaction&lt;/a&gt; &amp;mdash; 트랜잭션을 시작합니다</target>
        </trans-unit>
        <trans-unit id="3f44b60aeecf9d21177c4ae1d93fe1870a2ce1e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.commit&quot;&gt;PDO::commit()&lt;/a&gt; - Commits a transaction</source>
          <target state="translated">&lt;a href=&quot;pdo.commit&quot;&gt;PDO :: commit ()&lt;/a&gt; -트랜잭션 커밋</target>
        </trans-unit>
        <trans-unit id="d0ca171bca73f61a11c0daa88fe860d771c41144" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.commit&quot;&gt;PDO::commit&lt;/a&gt; &amp;mdash; Commits a transaction</source>
          <target state="translated">&lt;a href=&quot;pdo.commit&quot;&gt;PDO :: commit&lt;/a&gt; &amp;mdash; 트랜잭션을 커밋</target>
        </trans-unit>
        <trans-unit id="bb1dc2f5927ddbcf67d905a5e67710018d1becc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.construct&quot;&gt;PDO::__construct&lt;/a&gt; &amp;mdash; Creates a PDO instance representing a connection to a database</source>
          <target state="translated">&lt;a href=&quot;pdo.construct&quot;&gt;PDO :: __ construct&lt;/a&gt; &amp;mdash; 데이터베이스에 대한 연결을 나타내는 PDO 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4a6146dad4ec6be1084adff17db615c49bc7f601" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.errorcode&quot;&gt;PDO::errorCode()&lt;/a&gt; - Fetch the SQLSTATE associated with the last operation on the database handle</source>
          <target state="translated">&lt;a href=&quot;pdo.errorcode&quot;&gt;PDO :: errorCode ()&lt;/a&gt; -데이터베이스 핸들의 마지막 조작과 연관된 SQLSTATE를 페치</target>
        </trans-unit>
        <trans-unit id="a40ec3f8cb5ea8d2f825dee63f1d0b7560fa1593" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.errorcode&quot;&gt;PDO::errorCode&lt;/a&gt; &amp;mdash; Fetch the SQLSTATE associated with the last operation on the database handle</source>
          <target state="translated">&lt;a href=&quot;pdo.errorcode&quot;&gt;PDO :: errorCode&lt;/a&gt; &amp;mdash; 데이터베이스 핸들의 마지막 작업과 관련된 SQLSTATE를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9b9dee4d3801028c5c5d228fd8a5a760fb3267d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.errorinfo&quot;&gt;PDO::errorInfo()&lt;/a&gt; - Fetch extended error information associated with the last operation on the database handle</source>
          <target state="translated">&lt;a href=&quot;pdo.errorinfo&quot;&gt;PDO :: errorInfo ()&lt;/a&gt; -데이터베이스 핸들의 마지막 조작과 연관된 확장 오류 정보를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="df7482307dec1f91dfdbc902165df89d637fff2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.errorinfo&quot;&gt;PDO::errorInfo&lt;/a&gt; &amp;mdash; Fetch extended error information associated with the last operation on the database handle</source>
          <target state="translated">&lt;a href=&quot;pdo.errorinfo&quot;&gt;PDO :: errorInfo&lt;/a&gt; &amp;mdash; 데이터베이스 핸들의 마지막 작업과 관련된 확장 된 오류 정보를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c838b53c6976674b7512f57ef124134363da1056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.exec&quot;&gt;PDO::exec()&lt;/a&gt; - Execute an SQL statement and return the number of affected rows</source>
          <target state="translated">&lt;a href=&quot;pdo.exec&quot;&gt;PDO :: exec ()&lt;/a&gt; -SQL 문을 실행하고 영향을받는 행 수를 반환</target>
        </trans-unit>
        <trans-unit id="954d79fa8f4b58b6c3cdb160d0e7d46c44a2c3c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.exec&quot;&gt;PDO::exec&lt;/a&gt; &amp;mdash; Execute an SQL statement and return the number of affected rows</source>
          <target state="translated">&lt;a href=&quot;pdo.exec&quot;&gt;PDO :: exec&lt;/a&gt; &amp;mdash; SQL 문을 실행하고 영향을받는 행 수를 반환</target>
        </trans-unit>
        <trans-unit id="d8c17048443d5ecd4242cbe93cfb00b247f4c1c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.getattribute&quot;&gt;PDO::getAttribute()&lt;/a&gt; - Retrieve a database connection attribute</source>
          <target state="translated">&lt;a href=&quot;pdo.getattribute&quot;&gt;PDO :: getAttribute ()&lt;/a&gt; -데이터베이스 연결 속성 검색</target>
        </trans-unit>
        <trans-unit id="38a07e4736080ac8416475f12e29ffc0c722cfa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.getattribute&quot;&gt;PDO::getAttribute&lt;/a&gt; &amp;mdash; Retrieve a database connection attribute</source>
          <target state="translated">&lt;a href=&quot;pdo.getattribute&quot;&gt;PDO :: getAttribute&lt;/a&gt; &amp;mdash; 데이터베이스 연결 속성을 검색</target>
        </trans-unit>
        <trans-unit id="8a916642bc500dc91e727c01df5ec88903444c12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.getavailabledrivers&quot;&gt;PDO::getAvailableDrivers&lt;/a&gt; &amp;mdash; Return an array of available PDO drivers</source>
          <target state="translated">&lt;a href=&quot;pdo.getavailabledrivers&quot;&gt;PDO :: getAvailableDrivers&lt;/a&gt; &amp;mdash; 사용 가능한 PDO 드라이버 배열을 반환</target>
        </trans-unit>
        <trans-unit id="6f0c3f65811f246e4a2d1d22b641125356007bd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.intransaction&quot;&gt;PDO::inTransaction&lt;/a&gt; &amp;mdash; Checks if inside a transaction</source>
          <target state="translated">&lt;a href=&quot;pdo.intransaction&quot;&gt;PDO :: inTransaction&lt;/a&gt; &amp;mdash; 트랜잭션 내부에 있는지 확인</target>
        </trans-unit>
        <trans-unit id="f914b8a0e0b2b05b40cef32fb3eda8900d6f95aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.lastinsertid&quot;&gt;PDO::lastInsertId&lt;/a&gt; &amp;mdash; Returns the ID of the last inserted row or sequence value</source>
          <target state="translated">&lt;a href=&quot;pdo.lastinsertid&quot;&gt;PDO :: lastInsertId&lt;/a&gt; &amp;mdash; 마지막으로 삽입 된 행 또는 시퀀스 값의 ID를 반환합니다</target>
        </trans-unit>
        <trans-unit id="729e3df85fa895b261f8b33fec5f0071705c4397" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; - Prepares a statement for execution and returns a statement object</source>
          <target state="translated">&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare ()&lt;/a&gt; -실행할 명령문을 준비하고 명령문 오브젝트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="af267a9a8211ffe3f9ee1de512e8a41d381ec246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare&lt;/a&gt; &amp;mdash; Prepares a statement for execution and returns a statement object</source>
          <target state="translated">&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare&lt;/a&gt; &amp;mdash; 실행할 문장을 준비하고 문장 객체를 반환</target>
        </trans-unit>
        <trans-unit id="c13801431ca5b46087ca73ab33daf158076110a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; - Executes an SQL statement, returning a result set as a PDOStatement object</source>
          <target state="translated">&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query ()&lt;/a&gt; -SQL 문을 실행하고 결과 세트를 PDOStatement 오브젝트로 리턴</target>
        </trans-unit>
        <trans-unit id="069a9706d83cabc34dd813b99ec73f31b39d657a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.query&quot;&gt;PDO::query&lt;/a&gt; &amp;mdash; Executes an SQL statement, returning a result set as a PDOStatement object</source>
          <target state="translated">&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query&lt;/a&gt; &amp;mdash; SQL 문을 실행하고 결과 집합을 PDOStatement 객체로 반환</target>
        </trans-unit>
        <trans-unit id="3f0389a55c23b9a8039b194d37d6f350bcee6835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.quote&quot;&gt;PDO::quote&lt;/a&gt; &amp;mdash; Quotes a string for use in a query</source>
          <target state="translated">&lt;a href=&quot;pdo.quote&quot;&gt;PDO :: quote&lt;/a&gt; &amp;mdash; 쿼리에 사용할 문자열을 인용합니다</target>
        </trans-unit>
        <trans-unit id="b251da221cbf7a344fbbf2ba13d986bc829f620c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.rollback&quot;&gt;PDO::rollBack()&lt;/a&gt; - Rolls back a transaction</source>
          <target state="translated">&lt;a href=&quot;pdo.rollback&quot;&gt;PDO :: rollBack ()&lt;/a&gt; -트랜잭션 롤백</target>
        </trans-unit>
        <trans-unit id="529c977327af092889ad288cd1285b00c923d333" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.rollback&quot;&gt;PDO::rollBack&lt;/a&gt; &amp;mdash; Rolls back a transaction</source>
          <target state="translated">&lt;a href=&quot;pdo.rollback&quot;&gt;PDO :: rollBack&lt;/a&gt; &amp;mdash; 트랜잭션 롤백</target>
        </trans-unit>
        <trans-unit id="068b05d44ca74f50b32bf0b4ff79d966f38f4f2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.setattribute&quot;&gt;PDO::setAttribute()&lt;/a&gt; - Set an attribute</source>
          <target state="translated">&lt;a href=&quot;pdo.setattribute&quot;&gt;PDO :: setAttribute ()&lt;/a&gt; -속성 설정</target>
        </trans-unit>
        <trans-unit id="43f383cc10af0f1c3bbe215e1e15e00e3f30b0ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdo.setattribute&quot;&gt;PDO::setAttribute&lt;/a&gt; &amp;mdash; Set an attribute</source>
          <target state="translated">&lt;a href=&quot;pdo.setattribute&quot;&gt;PDO :: setAttribute&lt;/a&gt; &amp;mdash; 속성 설정</target>
        </trans-unit>
        <trans-unit id="b67f9103b35c7e8b614197462c75a86b6b902c9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.bindcolumn&quot;&gt;PDOStatement::bindColumn&lt;/a&gt; &amp;mdash; Bind a column to a PHP variable</source>
          <target state="translated">&lt;a href=&quot;pdostatement.bindcolumn&quot;&gt;PDOStatement :: bindColumn&lt;/a&gt; &amp;mdash; 열을 PHP 변수에 바인딩</target>
        </trans-unit>
        <trans-unit id="f1194e1bd9f0c8dcfd5c530bd09a4177dba82502" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.bindparam&quot;&gt;PDOStatement::bindParam()&lt;/a&gt; - Binds a parameter to the specified variable name</source>
          <target state="translated">&lt;a href=&quot;pdostatement.bindparam&quot;&gt;PDOStatement :: bindParam ()&lt;/a&gt; -매개 변수를 지정된 변수 이름에 바인딩</target>
        </trans-unit>
        <trans-unit id="14d5da284d5c6162d24ba48e29ee1445d781aa93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.bindparam&quot;&gt;PDOStatement::bindParam()&lt;/a&gt; and/or &lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement::bindValue()&lt;/a&gt; has to be called to bind either variables or values (respectively) to the parameter markers. Bound variables pass their value as input and receive the output value, if any, of their associated parameter markers</source>
          <target state="translated">&lt;a href=&quot;pdostatement.bindparam&quot;&gt;&lt;/a&gt;변수 또는 값을 (각각) 매개 변수 표시 문자에 바인드하려면 PDOStatement :: bindParam () 및 / 또는 &lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement :: bindValue ()&lt;/a&gt; 를 호출해야합니다. 바운드 변수는 값을 입력으로 전달하고 연관된 매개 변수 마커의 출력 값을받습니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="e79020a7467f1c96a4d9d0eb62ecac35532ea48d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.bindparam&quot;&gt;PDOStatement::bindParam&lt;/a&gt; &amp;mdash; Binds a parameter to the specified variable name</source>
          <target state="translated">&lt;a href=&quot;pdostatement.bindparam&quot;&gt;PDOStatement :: bindParam&lt;/a&gt; &amp;mdash; 매개 변수를 지정된 변수 이름에 바인딩</target>
        </trans-unit>
        <trans-unit id="8479d578048d54e60001b8313f56bfc915cdec84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement::bindValue()&lt;/a&gt; - Binds a value to a parameter</source>
          <target state="translated">&lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement :: bindValue ()&lt;/a&gt; -값을 매개 변수에 바인드</target>
        </trans-unit>
        <trans-unit id="25af01fe422efca43e594742771f67b815b66cfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement::bindValue&lt;/a&gt; &amp;mdash; Binds a value to a parameter</source>
          <target state="translated">&lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement :: bindValue&lt;/a&gt; &amp;mdash; 값을 매개 변수에 바인딩</target>
        </trans-unit>
        <trans-unit id="e809fe22b5ea7eedaf5cb1ffa58ce10b0c50bb88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.closecursor&quot;&gt;PDOStatement::closeCursor&lt;/a&gt; &amp;mdash; Closes the cursor, enabling the statement to be executed again</source>
          <target state="translated">&lt;a href=&quot;pdostatement.closecursor&quot;&gt;PDOStatement :: closeCursor&lt;/a&gt; &amp;mdash; 커서를 닫고 명령문을 다시 실행할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="4fa336e58e9f6e5d15e019630cfaa78befcb1665" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.columncount&quot;&gt;PDOStatement::columnCount()&lt;/a&gt; - Returns the number of columns in the result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.columncount&quot;&gt;PDOStatement :: columnCount ()&lt;/a&gt; -결과 집합의 열 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="36891ba855bfc96bb1c47b0fcd4d89f1176cd57f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.columncount&quot;&gt;PDOStatement::columnCount&lt;/a&gt; &amp;mdash; Returns the number of columns in the result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.columncount&quot;&gt;PDOStatement :: columnCount&lt;/a&gt; &amp;mdash; 결과 집합의 열 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="d5e99126fdec2b7ea6171b0dc620faeee9da8f41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.debugdumpparams&quot;&gt;PDOStatement::debugDumpParams&lt;/a&gt; &amp;mdash; Dump an SQL prepared command</source>
          <target state="translated">&lt;a href=&quot;pdostatement.debugdumpparams&quot;&gt;PDOStatement :: debugDumpParams&lt;/a&gt; &amp;mdash; SQL 준비 명령 덤프</target>
        </trans-unit>
        <trans-unit id="87384f89aa67c1f5f683f6cfec1fef7cfc4525fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement::errorCode()&lt;/a&gt; - Fetch the SQLSTATE associated with the last operation on the statement handle</source>
          <target state="translated">&lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement :: errorCode ()&lt;/a&gt; -명령문 핸들의 마지막 조작과 연관된 SQLSTATE를 페치</target>
        </trans-unit>
        <trans-unit id="c967af96aff1429d5b6b804c3944c3643c8e05ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement::errorCode&lt;/a&gt; &amp;mdash; Fetch the SQLSTATE associated with the last operation on the statement handle</source>
          <target state="translated">&lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement :: errorCode&lt;/a&gt; &amp;mdash; 명령문 핸들의 마지막 조작과 연관된 SQLSTATE를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1909cfbec5daa2e9cdf415fe523f7d35b241036c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement::errorInfo()&lt;/a&gt; - Fetch extended error information associated with the last operation on the statement handle</source>
          <target state="translated">&lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement :: errorInfo ()&lt;/a&gt; -명령문 핸들의 마지막 조작과 연관된 확장 오류 정보를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e0ee55f43fb3947d116e03c7a7fea778887b6a49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement::errorInfo&lt;/a&gt; &amp;mdash; Fetch extended error information associated with the last operation on the statement handle</source>
          <target state="translated">&lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement :: errorInfo&lt;/a&gt; &amp;mdash; 명령문 핸들의 마지막 조작과 연관된 확장 오류 정보를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="67161116c86ee04341437a2570c28c9602e0e763" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt; - Executes a prepared statement</source>
          <target state="translated">&lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute ()&lt;/a&gt; -준비된 명령문을 실행</target>
        </trans-unit>
        <trans-unit id="fc73d3d6d4dcb92510c6b52a919b46c4d81bc657" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute&lt;/a&gt; &amp;mdash; Executes a prepared statement</source>
          <target state="translated">&lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute-&lt;/a&gt; 준비된 명령문을 실행</target>
        </trans-unit>
        <trans-unit id="3583dac0308638dfb4eba19d26d8c58f36b1a123" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; - Fetches the next row from a result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch ()&lt;/a&gt; -결과 세트에서 다음 행을 페치</target>
        </trans-unit>
        <trans-unit id="54de0043e51c408911283cef71c6808098a8040b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch&lt;/a&gt; &amp;mdash; Fetches the next row from a result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch&lt;/a&gt; &amp;mdash; 결과 집합에서 다음 행을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b13fd8d23544abdf309c39139be2bd956d66038e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement::fetchAll()&lt;/a&gt; - Returns an array containing all of the result set rows</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement :: fetchAll ()&lt;/a&gt; -모든 결과 집합 행을 포함하는 배열을 반환</target>
        </trans-unit>
        <trans-unit id="cfbdc8f79df8346f7d1fba35baa066bff0edfd29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement::fetchAll&lt;/a&gt; &amp;mdash; Returns an array containing all of the result set rows</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement :: fetchAll&lt;/a&gt; &amp;mdash; 모든 결과 집합 행을 포함하는 배열을 반환</target>
        </trans-unit>
        <trans-unit id="93d0e05dfba415f99fe7f80ad0c131abc93c081c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetchcolumn&quot;&gt;PDOStatement::fetchColumn()&lt;/a&gt; - Returns a single column from the next row of a result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetchcolumn&quot;&gt;PDOStatement :: fetchColumn ()&lt;/a&gt; -결과 세트의 다음 행에서 단일 열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="37a5de8984a4b9f915fb6a2b8601e3f7cb38a81a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetchcolumn&quot;&gt;PDOStatement::fetchColumn&lt;/a&gt; &amp;mdash; Returns a single column from the next row of a result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetchcolumn&quot;&gt;PDOStatement :: fetchColumn&lt;/a&gt; &amp;mdash; 결과 집합의 다음 행에서 단일 열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="38bc1c9e3e648115044f4116a719c1a0617890eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetchobject&quot;&gt;PDOStatement::fetchObject()&lt;/a&gt; - Fetches the next row and returns it as an object</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetchobject&quot;&gt;PDOStatement :: fetchObject ()&lt;/a&gt; -다음 행을 가져 와서 객체로 반환</target>
        </trans-unit>
        <trans-unit id="b9876f37c2c8f035b11f689bb937618b5b150325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.fetchobject&quot;&gt;PDOStatement::fetchObject&lt;/a&gt; &amp;mdash; Fetches the next row and returns it as an object</source>
          <target state="translated">&lt;a href=&quot;pdostatement.fetchobject&quot;&gt;PDOStatement :: fetchObject&lt;/a&gt; &amp;mdash; 다음 행을 가져 와서 객체로 반환</target>
        </trans-unit>
        <trans-unit id="eea002e08f1517f569fb2624f8f81c6331714579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.getattribute&quot;&gt;PDOStatement::getAttribute()&lt;/a&gt; - Retrieve a statement attribute</source>
          <target state="translated">&lt;a href=&quot;pdostatement.getattribute&quot;&gt;PDOStatement :: getAttribute ()&lt;/a&gt; -명령문 속성 검색</target>
        </trans-unit>
        <trans-unit id="f5c6b8f1a05d1742e04a991579d09d8f476164e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.getattribute&quot;&gt;PDOStatement::getAttribute&lt;/a&gt; &amp;mdash; Retrieve a statement attribute</source>
          <target state="translated">&lt;a href=&quot;pdostatement.getattribute&quot;&gt;PDOStatement :: getAttribute&lt;/a&gt; &amp;mdash; 문장 속성을 얻어 온다</target>
        </trans-unit>
        <trans-unit id="a84f0998059138418657c29734c88309ec826f73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.getcolumnmeta&quot;&gt;PDOStatement::getColumnMeta()&lt;/a&gt; - Returns metadata for a column in a result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.getcolumnmeta&quot;&gt;PDOStatement :: getColumnMeta ()&lt;/a&gt; -결과 세트의 열에 대한 메타 데이터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="527b9eba37034520a9873ed78c5ffa01ddb3fe80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.getcolumnmeta&quot;&gt;PDOStatement::getColumnMeta&lt;/a&gt; &amp;mdash; Returns metadata for a column in a result set</source>
          <target state="translated">&lt;a href=&quot;pdostatement.getcolumnmeta&quot;&gt;PDOStatement :: getColumnMeta&lt;/a&gt; &amp;mdash; 결과 집합의 열에 대한 메타 데이터를 반환</target>
        </trans-unit>
        <trans-unit id="36022dd65622e2556ce4c7e3379668d078e3c9c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.nextrowset&quot;&gt;PDOStatement::nextRowset&lt;/a&gt; &amp;mdash; Advances to the next rowset in a multi-rowset statement handle</source>
          <target state="translated">&lt;a href=&quot;pdostatement.nextrowset&quot;&gt;PDOStatement :: nextRowset&lt;/a&gt; &amp;mdash; 다중 행 집합 명령문 핸들에서 다음 행 집합으로 진행</target>
        </trans-unit>
        <trans-unit id="f6c3ece6b3d08097bdbdc6daec083e156376f747" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.rowcount&quot;&gt;PDOStatement::rowCount()&lt;/a&gt; - Returns the number of rows affected by the last SQL statement</source>
          <target state="translated">&lt;a href=&quot;pdostatement.rowcount&quot;&gt;PDOStatement :: rowCount ()&lt;/a&gt; -마지막 SQL 문의 영향을받는 행 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a92b78908202ba0df6ef800cedbd1d82f933d3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.rowcount&quot;&gt;PDOStatement::rowCount&lt;/a&gt; &amp;mdash; Returns the number of rows affected by the last SQL statement</source>
          <target state="translated">&lt;a href=&quot;pdostatement.rowcount&quot;&gt;PDOStatement :: rowCount&lt;/a&gt; &amp;mdash; 마지막 SQL 문의 영향을받는 행 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a73830e49a9f714cfd2730fce102ec5c9bc55f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.setattribute&quot;&gt;PDOStatement::setAttribute()&lt;/a&gt; - Set a statement attribute</source>
          <target state="translated">&lt;a href=&quot;pdostatement.setattribute&quot;&gt;PDOStatement :: setAttribute ()&lt;/a&gt; -명령문 속성 설정</target>
        </trans-unit>
        <trans-unit id="a75e79274713c64a240df0368dffd2aaf5b85039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.setattribute&quot;&gt;PDOStatement::setAttribute&lt;/a&gt; &amp;mdash; Set a statement attribute</source>
          <target state="translated">&lt;a href=&quot;pdostatement.setattribute&quot;&gt;PDOStatement :: setAttribute&lt;/a&gt; &amp;mdash; 명령문 속성을 설정한다</target>
        </trans-unit>
        <trans-unit id="32026cfd6c66b68985586f69de43264093d53702" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.setfetchmode&quot;&gt;PDOStatement::setFetchMode()&lt;/a&gt; - Set the default fetch mode for this statement</source>
          <target state="translated">&lt;a href=&quot;pdostatement.setfetchmode&quot;&gt;PDOStatement :: setFetchMode ()&lt;/a&gt; -이 명령문에 대한 기본 페치 모드 설정</target>
        </trans-unit>
        <trans-unit id="3d17acee41794b31cc4805bd539249125b2f8e11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pdostatement.setfetchmode&quot;&gt;PDOStatement::setFetchMode&lt;/a&gt; &amp;mdash; Set the default fetch mode for this statement</source>
          <target state="translated">&lt;a href=&quot;pdostatement.setfetchmode&quot;&gt;PDOStatement :: setFetchMode&lt;/a&gt; &amp;mdash;이 문장에 대한 기본 페치 모드를 설정</target>
        </trans-unit>
        <trans-unit id="6de32ecc51347dc44809670cbf50d026a6472771" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.addemptydir&quot;&gt;Phar::addEmptyDir()&lt;/a&gt; - Add an empty directory to the phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.addemptydir&quot;&gt;Phar :: addEmptyDir ()-phar&lt;/a&gt; 아카이브에 빈 디렉토리 추가</target>
        </trans-unit>
        <trans-unit id="1313a2279a2469327959b7c407cbd5e21d30520f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.addemptydir&quot;&gt;Phar::addEmptyDir&lt;/a&gt; &amp;mdash; Add an empty directory to the phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.addemptydir&quot;&gt;Phar :: addEmptyDir&lt;/a&gt; &amp;mdash; phar 아카이브에 빈 디렉토리를 추가합니다</target>
        </trans-unit>
        <trans-unit id="165fe673160f3b479444677085f47f64e2ab8a15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.addfile&quot;&gt;Phar::addFile()&lt;/a&gt; - Add a file from the filesystem to the phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.addfile&quot;&gt;Phar :: addFile ()&lt;/a&gt; -파일 시스템에서 phar 아카이브로 파일 추가</target>
        </trans-unit>
        <trans-unit id="3c04df4cffc65238f7197e1620e4433343dd1262" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.addfile&quot;&gt;Phar::addFile&lt;/a&gt; &amp;mdash; Add a file from the filesystem to the phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.addfile&quot;&gt;Phar :: addFile&lt;/a&gt; &amp;mdash; 파일 시스템에서 phar 아카이브로 파일을 추가합니다</target>
        </trans-unit>
        <trans-unit id="fb65d67f930c04e2dd0054539c6ff13a89e42a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.addfromstring&quot;&gt;Phar::addFromString()&lt;/a&gt; - Add a file from a string to the phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.addfromstring&quot;&gt;Phar :: addFromString ()&lt;/a&gt; -문자열에서 phar 아카이브로 파일 추가</target>
        </trans-unit>
        <trans-unit id="8b8efabad3f8023e586b2753c857af34e69fb94f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.addfromstring&quot;&gt;Phar::addFromString&lt;/a&gt; &amp;mdash; Add a file from a string to the phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.addfromstring&quot;&gt;Phar :: addFromString&lt;/a&gt; &amp;mdash; 문자열에서 phar 아카이브로 파일을 추가합니다</target>
        </trans-unit>
        <trans-unit id="769285967a77399c7e42842129b9002636f86ea5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.apiversion&quot;&gt;Phar::apiVersion()&lt;/a&gt; - Returns the api version</source>
          <target state="translated">&lt;a href=&quot;phar.apiversion&quot;&gt;Phar :: apiVersion ()-API&lt;/a&gt; 버전을 반환합니다</target>
        </trans-unit>
        <trans-unit id="85d907cd1fe54d4bb50b14093d6073323b601292" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.apiversion&quot;&gt;Phar::apiVersion&lt;/a&gt; &amp;mdash; Returns the api version</source>
          <target state="translated">&lt;a href=&quot;phar.apiversion&quot;&gt;Phar :: apiVersion&lt;/a&gt; &amp;mdash; api 버전을 반환합니다</target>
        </trans-unit>
        <trans-unit id="0550f1146ea6a0f03a7630e554599d2f95fa4057" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.buildfromdirectory&quot;&gt;Phar::buildFromDirectory()&lt;/a&gt; - Construct a phar archive from the files within a directory</source>
          <target state="translated">&lt;a href=&quot;phar.buildfromdirectory&quot;&gt;Phar :: buildFromDirectory ()&lt;/a&gt; -디렉토리 내의 파일에서 phar 아카이브를 구성</target>
        </trans-unit>
        <trans-unit id="1e2b8ec7c62e4bd262cd372764ca7fa8859cd881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.buildfromdirectory&quot;&gt;Phar::buildFromDirectory()&lt;/a&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;a href=&quot;phar.buildfromdirectory&quot;&gt;Phar :: buildFromDirectory ()&lt;/a&gt; 는 파일의 내부 경로를 파일 시스템에있는 파일의 전체 경로에 매핑하는 연관 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="92e2eaf42d599fee6108ef914f1185d7fa08e694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.buildfromdirectory&quot;&gt;Phar::buildFromDirectory&lt;/a&gt; &amp;mdash; Construct a phar archive from the files within a directory</source>
          <target state="translated">&lt;a href=&quot;phar.buildfromdirectory&quot;&gt;Phar :: buildFromDirectory&lt;/a&gt; &amp;mdash; 디렉토리 내의 파일에서 phar 아카이브를 구성합니다</target>
        </trans-unit>
        <trans-unit id="6edc4cd0ec603b0603afe0aa01dac0d5d5dcaa28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.buildfromiterator&quot;&gt;Phar::buildFromIterator()&lt;/a&gt; - Construct a phar archive from an iterator</source>
          <target state="translated">&lt;a href=&quot;phar.buildfromiterator&quot;&gt;Phar :: buildFromIterator ()&lt;/a&gt; -이터레이터에서 phar 아카이브를 생성</target>
        </trans-unit>
        <trans-unit id="68e30874a1c56b0d08373a7bc1aa6bc01c2829a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.buildfromiterator&quot;&gt;Phar::buildFromIterator&lt;/a&gt; &amp;mdash; Construct a phar archive from an iterator</source>
          <target state="translated">&lt;a href=&quot;phar.buildfromiterator&quot;&gt;Phar :: buildFromIterator&lt;/a&gt; &amp;mdash; 이터레이터에서 phar 아카이브를 구성</target>
        </trans-unit>
        <trans-unit id="fe494f1c514f7870a1d8ad2977fc4f4b51f1218a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.cancompress&quot;&gt;Phar::canCompress()&lt;/a&gt; - Returns whether phar extension supports compression using either zlib or bzip2</source>
          <target state="translated">&lt;a href=&quot;phar.cancompress&quot;&gt;Phar :: canCompress ()-phar&lt;/a&gt; 확장자가 zlib 또는 bzip2를 사용하여 압축을 지원하는지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="59ac139470e10de9ec1a8e3e2b88f503ad82a89e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.cancompress&quot;&gt;Phar::canCompress&lt;/a&gt; &amp;mdash; Returns whether phar extension supports compression using either zlib or bzip2</source>
          <target state="translated">&lt;a href=&quot;phar.cancompress&quot;&gt;Phar :: canCompress&lt;/a&gt; &amp;mdash; phar 확장자가 zlib 또는 bzip2를 사용하여 압축을 지원하는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c8d74184dba38322def62c9e146ee2720fa35e0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.canwrite&quot;&gt;Phar::canWrite()&lt;/a&gt; - Returns whether phar extension supports writing and creating phars</source>
          <target state="translated">&lt;a href=&quot;phar.canwrite&quot;&gt;Phar :: canWrite ()&lt;/a&gt; -phar 확장이 phar 작성 및 작성을 지원하는지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e0ee697c7666a50ab05d5dfba014b7614bf9e0e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.canwrite&quot;&gt;Phar::canWrite&lt;/a&gt; &amp;mdash; Returns whether phar extension supports writing and creating phars</source>
          <target state="translated">&lt;a href=&quot;phar.canwrite&quot;&gt;Phar :: canWrite&lt;/a&gt; &amp;mdash; phar 확장이 phar 작성 및 작성을 지원하는지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a45fc236dd8c71312d33aa5ab8910699f016ead0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compress&quot;&gt;Phar::compress()&lt;/a&gt; - Compresses the entire Phar archive using Gzip or Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;phar.compress&quot;&gt;Phar :: compress ()&lt;/a&gt; -Gzip 또는 Bzip2 압축을 사용하여 전체 Phar 아카이브를 압축합니다.</target>
        </trans-unit>
        <trans-unit id="fee55903e7d8fdb07fe82a3a4847650db027303f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compress&quot;&gt;Phar::compress&lt;/a&gt; &amp;mdash; Compresses the entire Phar archive using Gzip or Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;phar.compress&quot;&gt;Phar :: compress&lt;/a&gt; &amp;mdash; Gzip 또는 Bzip2 압축을 사용하여 전체 Phar 아카이브를 압축합니다</target>
        </trans-unit>
        <trans-unit id="93d7dcc67dcc786559b940bc5ac63a1e8ae3e2fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compressallfilesbzip2&quot;&gt;Phar::compressAllFilesBZIP2()&lt;/a&gt; - Compresses all files in the current Phar archive using Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;phar.compressallfilesbzip2&quot;&gt;Phar :: compressAllFilesBZIP2 ()&lt;/a&gt; -Bzip2 압축을 사용하여 현재 Phar 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="2dff412be6566f31750b4dfb50d5b759d7f78b2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compressallfilesbzip2&quot;&gt;Phar::compressAllFilesBZIP2&lt;/a&gt; &amp;mdash; Compresses all files in the current Phar archive using Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;phar.compressallfilesbzip2&quot;&gt;Phar :: compressAllFilesBZIP2&lt;/a&gt; &amp;mdash; Bzip2 압축을 사용하여 현재 Phar 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="3495fd4538f84987fb55e1bbcfb6a82dd4518376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compressallfilesgz&quot;&gt;Phar::compressAllFilesGZ()&lt;/a&gt; - Compresses all files in the current Phar archive using Gzip compression</source>
          <target state="translated">&lt;a href=&quot;phar.compressallfilesgz&quot;&gt;Phar :: compressAllFilesGZ ()&lt;/a&gt; -Gzip 압축을 사용하여 현재 Phar 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="0f71b102b4a46369541e6e07f5ac355b05435760" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compressallfilesgz&quot;&gt;Phar::compressAllFilesGZ&lt;/a&gt; &amp;mdash; Compresses all files in the current Phar archive using Gzip compression</source>
          <target state="translated">&lt;a href=&quot;phar.compressallfilesgz&quot;&gt;Phar :: compressAllFilesGZ&lt;/a&gt; &amp;mdash; Gzip 압축을 사용하여 현재 Phar 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="9cb295ebf718a7159ada8c3e04a8a3fde66e488d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compressfiles&quot;&gt;Phar::compressFiles()&lt;/a&gt; - Compresses all files in the current Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.compressfiles&quot;&gt;Phar :: compressFiles ()&lt;/a&gt; -현재 Phar 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="0591ab1148002f63c16ca4543f6a7bb64546ca87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.compressfiles&quot;&gt;Phar::compressFiles&lt;/a&gt; &amp;mdash; Compresses all files in the current Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.compressfiles&quot;&gt;Phar :: compressFiles&lt;/a&gt; &amp;mdash; 현재 Phar 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="856f04dc0c374eddd36cd610923d47b631719f1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.construct&quot;&gt;Phar::__construct()&lt;/a&gt; - Construct a Phar archive object</source>
          <target state="translated">&lt;a href=&quot;phar.construct&quot;&gt;Phar :: __ construct ()&lt;/a&gt; -Phar 아카이브 객체 생성</target>
        </trans-unit>
        <trans-unit id="cc16d77a33bfc457cd0209ff41a504c56b2c4773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.construct&quot;&gt;Phar::__construct&lt;/a&gt; &amp;mdash; Construct a Phar archive object</source>
          <target state="translated">&lt;a href=&quot;phar.construct&quot;&gt;Phar :: __ construct&lt;/a&gt; &amp;mdash; Phar 아카이브 객체 생성</target>
        </trans-unit>
        <trans-unit id="453bb753bd14316905237fc3d5c4de94dfa7dc33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.converttodata&quot;&gt;Phar::convertToData()&lt;/a&gt; - Convert a phar archive to a non-executable tar or zip file</source>
          <target state="translated">&lt;a href=&quot;phar.converttodata&quot;&gt;Phar :: convertToData ()&lt;/a&gt; -phar 아카이브를 실행 불가능한 tar 또는 zip 파일로 변환</target>
        </trans-unit>
        <trans-unit id="bebd79b456b89a9e956b4a9677dac86dd15a0fd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.converttodata&quot;&gt;Phar::convertToData&lt;/a&gt; &amp;mdash; Convert a phar archive to a non-executable tar or zip file</source>
          <target state="translated">&lt;a href=&quot;phar.converttodata&quot;&gt;Phar :: convertToData&lt;/a&gt; &amp;mdash; phar 아카이브를 실행 불가능한 tar 또는 zip 파일로 변환</target>
        </trans-unit>
        <trans-unit id="39b2f5723de777c7ab384b7f2715d4a935d2a872" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.converttoexecutable&quot;&gt;Phar::convertToExecutable()&lt;/a&gt; - Convert a phar archive to another executable phar archive file format</source>
          <target state="translated">&lt;a href=&quot;phar.converttoexecutable&quot;&gt;Phar :: convertToExecutable ()&lt;/a&gt; -phar 아카이브를 다른 실행 가능한 phar 아카이브 파일 형식으로 변환</target>
        </trans-unit>
        <trans-unit id="4a209ac7a13dc6004bb50fa60ebffee97b78f6d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.converttoexecutable&quot;&gt;Phar::convertToExecutable&lt;/a&gt; &amp;mdash; Convert a phar archive to another executable phar archive file format</source>
          <target state="translated">&lt;a href=&quot;phar.converttoexecutable&quot;&gt;Phar :: convertToExecutable&lt;/a&gt; &amp;mdash; phar 아카이브를 다른 실행 가능한 phar 아카이브 파일 형식으로 변환</target>
        </trans-unit>
        <trans-unit id="cc55af7815129261965c599ad73348e5e8f3ffd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.copy&quot;&gt;Phar::copy&lt;/a&gt; &amp;mdash; Copy a file internal to the phar archive to another new file within the phar</source>
          <target state="translated">&lt;a href=&quot;phar.copy&quot;&gt;Phar :: copy&lt;/a&gt; &amp;mdash; phar 아카이브 내부의 파일을 phar 내의 다른 새 파일로 복사</target>
        </trans-unit>
        <trans-unit id="9c8d1649dfcc89aa300b99d7b96a3d671d2f2a96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.count&quot;&gt;Phar::count&lt;/a&gt; &amp;mdash; Returns the number of entries (files) in the Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.count&quot;&gt;Phar :: count&lt;/a&gt; &amp;mdash; Phar 아카이브의 항목 (파일) 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="ba173bdd6d320fedbc7d41af3fbcf14be344ee3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.createdefaultstub&quot;&gt;Phar::createDefaultStub()&lt;/a&gt; - Create a phar-file format specific stub</source>
          <target state="translated">&lt;a href=&quot;phar.createdefaultstub&quot;&gt;Phar :: createDefaultStub ()&lt;/a&gt; -phar 파일 형식 별 스텁 작성</target>
        </trans-unit>
        <trans-unit id="0d5c6604b844ee9fd1ee88f0f35304fad764faed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.createdefaultstub&quot;&gt;Phar::createDefaultStub&lt;/a&gt; &amp;mdash; Create a phar-file format specific stub</source>
          <target state="translated">&lt;a href=&quot;phar.createdefaultstub&quot;&gt;Phar :: createDefaultStub&lt;/a&gt; &amp;mdash; 파일 형식의 스텁을 작성합니다</target>
        </trans-unit>
        <trans-unit id="6a2190941eb49a1f8fded247af96c5155db8f76b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.decompress&quot;&gt;Phar::decompress()&lt;/a&gt; - Decompresses the entire Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.decompress&quot;&gt;Phar :: decompress ()&lt;/a&gt; -전체 Phar 아카이브를 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="608fe263c9d2d0f8a6631c2a6333d811a686e26e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.decompress&quot;&gt;Phar::decompress&lt;/a&gt; &amp;mdash; Decompresses the entire Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.decompress&quot;&gt;Phar :: decompress&lt;/a&gt; &amp;mdash; 전체 Phar 아카이브를 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="265edaf8f8dbf9248262e9102c3abf52f00816ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.decompressfiles&quot;&gt;Phar::decompressFiles()&lt;/a&gt; - Decompresses all files in the current Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.decompressfiles&quot;&gt;Phar :: decompressFiles ()&lt;/a&gt; -현재 Phar 아카이브의 모든 파일을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="9626f0734810049086fa4e94810c1db198c8f2e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.decompressfiles&quot;&gt;Phar::decompressFiles&lt;/a&gt; &amp;mdash; Decompresses all files in the current Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.decompressfiles&quot;&gt;Phar :: decompressFiles&lt;/a&gt; &amp;mdash; 현재 Phar 아카이브의 모든 파일을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="1b05e9619522a0963bca091feb9d8a9e9c4d8ffb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.delete&quot;&gt;Phar::delete()&lt;/a&gt; - Delete a file within a phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.delete&quot;&gt;Phar :: delete ()&lt;/a&gt; -phar 아카이브 내의 파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="5e9c2adbc251ea7406f75084b8e5cbe4f7edf956" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.delete&quot;&gt;Phar::delete&lt;/a&gt; &amp;mdash; Delete a file within a phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.delete&quot;&gt;Phar :: delete&lt;/a&gt; &amp;mdash; phar 아카이브 내의 파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="5cc44184fd375a8d3478ac42143d50dd3de77c75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.delmetadata&quot;&gt;Phar::delMetadata()&lt;/a&gt; - Deletes the global metadata of the phar</source>
          <target state="translated">&lt;a href=&quot;phar.delmetadata&quot;&gt;Phar :: delMetadata ()-phar&lt;/a&gt; 의 글로벌 메타 데이터를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="ab89fa5d9ae514301d42fa8dac734af6e1799975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.delmetadata&quot;&gt;Phar::delMetadata&lt;/a&gt; &amp;mdash; Deletes the global metadata of the phar</source>
          <target state="translated">&lt;a href=&quot;phar.delmetadata&quot;&gt;Phar :: delMetadata&lt;/a&gt; &amp;mdash; phar의 글로벌 메타 데이터를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="8e65a9f2f0292a838ce33140986783d93bedd044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.extractto&quot;&gt;Phar::extractTo()&lt;/a&gt; - Extract the contents of a phar archive to a directory</source>
          <target state="translated">&lt;a href=&quot;phar.extractto&quot;&gt;Phar :: extractTo ()-phar&lt;/a&gt; 아카이브의 내용을 디렉토리로 추출</target>
        </trans-unit>
        <trans-unit id="6f8c0cbcedb0e97d76f6b0ac73da6f5d72f390c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.extractto&quot;&gt;Phar::extractTo&lt;/a&gt; &amp;mdash; Extract the contents of a phar archive to a directory</source>
          <target state="translated">&lt;a href=&quot;phar.extractto&quot;&gt;Phar :: extractTo&lt;/a&gt; &amp;mdash; phar 아카이브의 내용을 디렉토리로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="e47496300b947792f3531085b28d070ce18030e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getalias&quot;&gt;Phar::getAlias&lt;/a&gt; &amp;mdash; Get the alias for Phar</source>
          <target state="translated">&lt;a href=&quot;phar.getalias&quot;&gt;Phar :: getAlias&lt;/a&gt; &amp;mdash; Phar 의 별명을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="1857a3027829263fd2f5fbba850034aa23f55a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getmetadata&quot;&gt;Phar::getMetadata()&lt;/a&gt; - Returns phar archive meta-data</source>
          <target state="translated">&lt;a href=&quot;phar.getmetadata&quot;&gt;Phar :: getMetadata ()&lt;/a&gt; -phar 아카이브 메타 데이터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c11fb6bef41f0a1a1405926df0c8216eb058cafe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getmetadata&quot;&gt;Phar::getMetadata&lt;/a&gt; &amp;mdash; Returns phar archive meta-data</source>
          <target state="translated">&lt;a href=&quot;phar.getmetadata&quot;&gt;Phar :: getMetadata&lt;/a&gt; &amp;mdash; phar 아카이브 메타 데이터를 반환합니다</target>
        </trans-unit>
        <trans-unit id="935af6fde4e8523033e5862eb930c375130c9880" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getmodified&quot;&gt;Phar::getModified&lt;/a&gt; &amp;mdash; Return whether phar was modified</source>
          <target state="translated">&lt;a href=&quot;phar.getmodified&quot;&gt;Phar :: getModified&lt;/a&gt; &amp;mdash; phar가 수정되었는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="10e14ef40e0f8c2fc1e985e0eaf704a57eb44db8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getpath&quot;&gt;Phar::getPath&lt;/a&gt; &amp;mdash; Get the real path to the Phar archive on disk</source>
          <target state="translated">&lt;a href=&quot;phar.getpath&quot;&gt;Phar :: getPath&lt;/a&gt; &amp;mdash; 디스크의 Phar 아카이브에 대한 실제 경로를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f6ca1bc77c18adec3fc42c6465c161df838594d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getsignature&quot;&gt;Phar::getSignature()&lt;/a&gt; - Return MD5/SHA1/SHA256/SHA512/OpenSSL signature of a Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.getsignature&quot;&gt;Phar :: getSignature ()-Phar 아카이브의&lt;/a&gt; MD5 / SHA1 / SHA256 / SHA512 / OpenSSL 서명을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4bf20168f42bf8cce21b4f5030e1d3960b7cfee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getsignature&quot;&gt;Phar::getSignature&lt;/a&gt; &amp;mdash; Return MD5/SHA1/SHA256/SHA512/OpenSSL signature of a Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.getsignature&quot;&gt;Phar :: getSignature&lt;/a&gt; &amp;mdash; Phar 아카이브의 MD5 / SHA1 / SHA256 / SHA512 / OpenSSL 서명을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b90a72099e1ddb0e9e7efc1af6275bcfca262f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getstub&quot;&gt;Phar::getStub()&lt;/a&gt; - Return the PHP loader or bootstrap stub of a Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.getstub&quot;&gt;Phar :: getStub ()-Phar&lt;/a&gt; 아카이브의 PHP 로더 또는 부트 스트랩 스터브를 반환</target>
        </trans-unit>
        <trans-unit id="35f867357d0500b6d88782604753009ce25f7538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getstub&quot;&gt;Phar::getStub&lt;/a&gt; &amp;mdash; Return the PHP loader or bootstrap stub of a Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.getstub&quot;&gt;Phar :: getStub&lt;/a&gt; &amp;mdash; Phar 아카이브의 PHP 로더 또는 부트 스트랩 스터브를 돌려줍니다</target>
        </trans-unit>
        <trans-unit id="b8203060a0d8359e4cf96bda696a15ee1fdb757d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getsupportedcompression&quot;&gt;Phar::getSupportedCompression()&lt;/a&gt; - Return array of supported compression algorithms</source>
          <target state="translated">&lt;a href=&quot;phar.getsupportedcompression&quot;&gt;Phar :: getSupportedCompression ()&lt;/a&gt; -지원되는 압축 알고리즘의 배열을 반환</target>
        </trans-unit>
        <trans-unit id="e1852231c1146fba1c4ee7d8580f1cb14de833ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getsupportedcompression&quot;&gt;Phar::getSupportedCompression&lt;/a&gt; &amp;mdash; Return array of supported compression algorithms</source>
          <target state="translated">&lt;a href=&quot;phar.getsupportedcompression&quot;&gt;Phar :: getSupportedCompression&lt;/a&gt; &amp;mdash; 지원되는 압축 알고리즘의 배열을 반환</target>
        </trans-unit>
        <trans-unit id="ea95c54e3b48c757957ab5da302447b32975b3d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getsupportedsignatures&quot;&gt;Phar::getSupportedSignatures()&lt;/a&gt; - Return array of supported signature types</source>
          <target state="translated">&lt;a href=&quot;phar.getsupportedsignatures&quot;&gt;Phar :: getSupportedSignatures ()&lt;/a&gt; -지원되는 서명 유형의 배열을 반환</target>
        </trans-unit>
        <trans-unit id="e4c5aad8512f9dfd5d9bf365ad7fd3832bab5fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getsupportedsignatures&quot;&gt;Phar::getSupportedSignatures&lt;/a&gt; &amp;mdash; Return array of supported signature types</source>
          <target state="translated">&lt;a href=&quot;phar.getsupportedsignatures&quot;&gt;Phar :: getSupportedSignatures&lt;/a&gt; &amp;mdash; 지원되는 서명 유형의 배열을 반환</target>
        </trans-unit>
        <trans-unit id="9428d5e8041f4018181a7f7b6e97015cfa6ec210" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.getversion&quot;&gt;Phar::getVersion&lt;/a&gt; &amp;mdash; Return version info of Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.getversion&quot;&gt;Phar :: getVersion&lt;/a&gt; &amp;mdash; Phar 아카이브의 버전 정보를 반환</target>
        </trans-unit>
        <trans-unit id="fa703cef91e220610b6a304e296c80b618108cc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.hasmetadata&quot;&gt;Phar::hasMetadata()&lt;/a&gt; - Returns whether phar has global meta-data</source>
          <target state="translated">&lt;a href=&quot;phar.hasmetadata&quot;&gt;Phar :: hasMetadata ()-phar에&lt;/a&gt; 전역 메타 데이터가 있는지 여부를 반환합니다</target>
        </trans-unit>
        <trans-unit id="d1b8884e804e1fa437349965bce46880c7c6c1b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.hasmetadata&quot;&gt;Phar::hasMetadata&lt;/a&gt; &amp;mdash; Returns whether phar has global meta-data</source>
          <target state="translated">&lt;a href=&quot;phar.hasmetadata&quot;&gt;Phar :: hasMetadata&lt;/a&gt; &amp;mdash; phar에 전역 메타 데이터가 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f881f4b95486c0285291eb7a672c9e4d3a4f283" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;Phar::interceptFileFuncs()&lt;/a&gt; - Instructs phar to intercept fopen, file_get_contents, opendir, and all of the stat-related functions</source>
          <target state="translated">&lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;Phar :: interceptFileFuncs ()&lt;/a&gt; -phar가 fopen, file_get_contents, opendir 및 모든 통계 관련 함수를 가로 채도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="1c8027628bb7066ce2cd039779b697454e2dbcb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;Phar::interceptFileFuncs&lt;/a&gt; &amp;mdash; Instructs phar to intercept fopen, file_get_contents, opendir, and all of the stat-related functions</source>
          <target state="translated">&lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;Phar :: interceptFileFuncs&lt;/a&gt; &amp;mdash; phar가 fopen, file_get_contents, opendir 및 모든 통계 관련 함수를 가로 채도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="7c064aad25e2477a8a01b47064c694f226ba8d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.isbuffering&quot;&gt;Phar::isBuffering()&lt;/a&gt; - Used to determine whether Phar write operations are being buffered, or are flushing directly to disk</source>
          <target state="translated">&lt;a href=&quot;phar.isbuffering&quot;&gt;Phar :: isBuffering ()&lt;/a&gt; -Phar 쓰기 조작이 버퍼링되는지 또는 디스크로 직접 플러시되는지 판별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="de4a3ddb3797469376470c842aa15eadd80322af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.isbuffering&quot;&gt;Phar::isBuffering&lt;/a&gt; &amp;mdash; Used to determine whether Phar write operations are being buffered, or are flushing directly to disk</source>
          <target state="translated">&lt;a href=&quot;phar.isbuffering&quot;&gt;Phar :: isBuffering&lt;/a&gt; &amp;mdash; Phar 쓰기 작업이 버퍼링되는지 또는 디스크로 직접 플러시되고 있는지 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8b980ed45e9bd9e1ef7c7f0fa30f87028d073086" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.iscompressed&quot;&gt;Phar::isCompressed()&lt;/a&gt; - Returns Phar::GZ or PHAR::BZ2 if the entire phar archive is compressed (.tar.gz/tar.bz and so on)</source>
          <target state="translated">&lt;a href=&quot;phar.iscompressed&quot;&gt;Phar :: isCompressed ()&lt;/a&gt; -전체 phar 아카이브가 압축 된 경우 Phar :: GZ 또는 PHAR :: BZ2를 반환합니다 (.tar.gz / tar.bz 등).</target>
        </trans-unit>
        <trans-unit id="bb9a6e0dae4539cfea4bcfc0ac1af41a2a1a4e2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.iscompressed&quot;&gt;Phar::isCompressed&lt;/a&gt; &amp;mdash; Returns Phar::GZ or PHAR::BZ2 if the entire phar archive is compressed (.tar.gz/tar.bz and so on)</source>
          <target state="translated">&lt;a href=&quot;phar.iscompressed&quot;&gt;Phar :: isCompressed&lt;/a&gt; &amp;mdash; 전체 phar 아카이브가 압축 된 경우 Phar :: GZ 또는 PHAR :: BZ2를 반환합니다 (.tar.gz / tar.bz 등).</target>
        </trans-unit>
        <trans-unit id="cbd2a70b0860e68f96ac5842d49f30c9e0abb549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.isfileformat&quot;&gt;Phar::isFileFormat&lt;/a&gt; &amp;mdash; Returns true if the phar archive is based on the tar/phar/zip file format depending on the parameter</source>
          <target state="translated">&lt;a href=&quot;phar.isfileformat&quot;&gt;Phar :: isFileFormat&lt;/a&gt; &amp;mdash; phar 아카이브가 매개 변수에 따라 tar / phar / zip 파일 형식을 기반으로하는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d35c39aa33672d1ed7b281041c52ebc04b6aad77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.isvalidpharfilename&quot;&gt;Phar::isValidPharFilename&lt;/a&gt; &amp;mdash; Returns whether the given filename is a valid phar filename</source>
          <target state="translated">&lt;a href=&quot;phar.isvalidpharfilename&quot;&gt;Phar :: isValidPharFilename&lt;/a&gt; &amp;mdash; 주어진 파일 이름이 유효한 phar 파일 이름인지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="b2582f082ab68254da60c34e0e7ad698bae908ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.iswritable&quot;&gt;Phar::isWritable()&lt;/a&gt; - Returns true if the phar archive can be modified</source>
          <target state="translated">&lt;a href=&quot;phar.iswritable&quot;&gt;Phar :: isWritable ()&lt;/a&gt; -phar 아카이브를 수정할 수있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="dfcb1375fd1b9587fa7d11d7376ea25bb7c3a9c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.iswritable&quot;&gt;Phar::isWritable&lt;/a&gt; &amp;mdash; Returns true if the phar archive can be modified</source>
          <target state="translated">&lt;a href=&quot;phar.iswritable&quot;&gt;Phar :: isWritable&lt;/a&gt; &amp;mdash; phar 아카이브를 수정할 수있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fc08f1e3ae8a89bfcded11ebe389c323a556a1b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.loadphar&quot;&gt;Phar::loadPhar()&lt;/a&gt; - Loads any phar archive with an alias</source>
          <target state="translated">&lt;a href=&quot;phar.loadphar&quot;&gt;Phar :: loadPhar ()&lt;/a&gt; -별명을 가진 모든 phar 아카이브를로드합니다</target>
        </trans-unit>
        <trans-unit id="37e42a3f5e8bc34a157a041eef7daa351308bdf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.loadphar&quot;&gt;Phar::loadPhar&lt;/a&gt; &amp;mdash; Loads any phar archive with an alias</source>
          <target state="translated">&lt;a href=&quot;phar.loadphar&quot;&gt;Phar :: loadPhar&lt;/a&gt; &amp;mdash; 별명을 가진 모든 phar 아카이브를로드합니다</target>
        </trans-unit>
        <trans-unit id="fb4f9b90e3d06bc70b498aef0e2872e4104fc677" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.mapphar&quot;&gt;Phar::mapPhar()&lt;/a&gt; - Reads the currently executed file (a phar) and registers its manifest</source>
          <target state="translated">&lt;a href=&quot;phar.mapphar&quot;&gt;Phar :: mapPhar ()&lt;/a&gt; -현재 실행 된 파일 (phar)을 읽고 해당 매니페스트를 등록합니다</target>
        </trans-unit>
        <trans-unit id="183082e4365961cd77795ab5efc96378966d0fbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.mapphar&quot;&gt;Phar::mapPhar()&lt;/a&gt; for web-based phars. This method parses &lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['REQUEST_URI']&lt;/a&gt;&lt;/var&gt; and routes a request from a web browser to an internal file within the phar archive. In essence, it simulates a web server, routing requests to the correct file, echoing the correct headers and parsing PHP files as needed. This powerful method is part of what makes it easy to convert an existing PHP application into a phar archive. Combined with &lt;a href=&quot;phar.mungserver&quot;&gt;Phar::mungServer()&lt;/a&gt; and &lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;Phar::interceptFileFuncs()&lt;/a&gt;, any web application can be used unmodified from a phar archive.</source>
          <target state="translated">&lt;a href=&quot;phar.mapphar&quot;&gt;&lt;/a&gt;웹 기반 phars의 경우 Phar :: mapPhar () . 이 메소드는 &lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['REQUEST_URI']&lt;/a&gt;&lt;/var&gt; 구문 분석 하고 웹 브라우저의 요청을 phar 아카이브 내의 내부 파일로 라우팅합니다. 본질적으로 웹 서버를 시뮬레이션하고 요청을 올바른 파일로 라우팅하고 올바른 헤더를 에코하고 필요에 따라 PHP 파일을 구문 분석합니다. 이 강력한 방법은 기존 PHP 애플리케이션을 phar 아카이브로 쉽게 변환 할 수있게 해주는 기능의 일부입니다. &lt;a href=&quot;phar.mungserver&quot;&gt;Phar :: mungServer ()&lt;/a&gt; 및 &lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;Phar :: interceptFileFuncs &lt;/a&gt;() 와 결합 하면 모든 웹 애플리케이션을 phar 아카이브에서 수정하지 않고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65830199c4ea1c704aa286886543b5d08455a350" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.mapphar&quot;&gt;Phar::mapPhar()&lt;/a&gt; for web-based phars. This method parses &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['REQUEST_URI']&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; and routes a request from a web browser to an internal file within the phar archive. In essence, it simulates a web server, routing requests to the correct file, echoing the correct headers and parsing PHP files as needed. This powerful method is part of what makes it easy to convert an existing PHP application into a phar archive. Combined with &lt;a href=&quot;phar.mungserver&quot;&gt;Phar::mungServer()&lt;/a&gt; and &lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;Phar::interceptFileFuncs()&lt;/a&gt;, any web application can be used unmodified from a phar archive.</source>
          <target state="translated">&lt;a href=&quot;phar.mapphar&quot;&gt;&lt;/a&gt;웹 기반 Phar의 경우 Phar :: mapPhar () . 이 메소드는 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['REQUEST_URI']&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; 구문 분석 하고 웹 브라우저에서 phar 아카이브 내의 내부 파일로 요청을 라우팅합니다. 본질적으로 웹 서버를 시뮬레이션하여 요청을 올바른 파일로 라우팅하고 올바른 헤더를 에코하고 필요에 따라 PHP 파일을 구문 분석합니다. 이 강력한 방법은 기존 PHP 응용 프로그램을 phar 아카이브로 쉽게 변환 할 수 있도록하는 일부입니다. 결합 &lt;a href=&quot;phar.mungserver&quot;&gt;의 Phar :: mungServer ()&lt;/a&gt; 과 &lt;a href=&quot;phar.interceptfilefuncs&quot;&gt;의 Phar :: interceptFileFuncs ()&lt;/a&gt; , 모든 웹 응용 프로그램은의 Phar 아카이브에서 수정되지 않은 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8023d2131c29bf8362e9e95a9928a17d7ed3875f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.mapphar&quot;&gt;Phar::mapPhar&lt;/a&gt; &amp;mdash; Reads the currently executed file (a phar) and registers its manifest</source>
          <target state="translated">&lt;a href=&quot;phar.mapphar&quot;&gt;Phar :: mapPhar&lt;/a&gt; &amp;mdash; 현재 실행 된 파일 (phar)을 읽고 해당 매니페스트를 등록합니다</target>
        </trans-unit>
        <trans-unit id="4acda58240cbaaa2086d5fceeb0ee1588d7b8c93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.mount&quot;&gt;Phar::mount&lt;/a&gt; &amp;mdash; Mount an external path or file to a virtual location within the phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.mount&quot;&gt;Phar :: mount&lt;/a&gt; &amp;mdash; phar 아카이브 내의 가상 위치에 외부 경로 또는 파일을 마운트합니다</target>
        </trans-unit>
        <trans-unit id="4f468ce0b2d0ad864ab1a8ed9716d76ede5e76e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.mungserver&quot;&gt;Phar::mungServer()&lt;/a&gt; - Defines a list of up to 4 $_SERVER variables that should be modified for execution</source>
          <target state="translated">&lt;a href=&quot;phar.mungserver&quot;&gt;Phar :: mungServer ()&lt;/a&gt; -실행을 위해 수정해야하는 최대 4 개의 $ _SERVER 변수 목록을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="186c1290d8908aeeafd13263d3703c580ba8766f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.mungserver&quot;&gt;Phar::mungServer&lt;/a&gt; &amp;mdash; Defines a list of up to 4 $_SERVER variables that should be modified for execution</source>
          <target state="translated">&lt;a href=&quot;phar.mungserver&quot;&gt;Phar :: mungServer&lt;/a&gt; &amp;mdash; 실행을 위해 수정해야하는 최대 4 개의 $ _SERVER 변수 목록을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="148eb7f4010b45327e8ac84d77768566c61af1d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetexists&quot;&gt;Phar::offsetExists()&lt;/a&gt; - Determines whether a file exists in the phar</source>
          <target state="translated">&lt;a href=&quot;phar.offsetexists&quot;&gt;Phar :: offsetExists ()&lt;/a&gt; -파일이 파일에 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="86293723b6ed5511bed10fd5cde1668128935550" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetexists&quot;&gt;Phar::offsetExists&lt;/a&gt; &amp;mdash; Determines whether a file exists in the phar</source>
          <target state="translated">&lt;a href=&quot;phar.offsetexists&quot;&gt;Phar :: offsetExists&lt;/a&gt; &amp;mdash; 파일이 phar에 있는지 여부를 결정합니다</target>
        </trans-unit>
        <trans-unit id="217f167aa79f0203fef20c5f01525e9b13165eff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetget&quot;&gt;Phar::offsetGet()&lt;/a&gt; - Gets a PharFileInfo object for a specific file</source>
          <target state="translated">&lt;a href=&quot;phar.offsetget&quot;&gt;Phar :: offsetGet ()&lt;/a&gt; -특정 파일에 대한 PharFileInfo 객체를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="9032a2e8690bce47f00dde0673b7581c8e167b79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetget&quot;&gt;Phar::offsetGet&lt;/a&gt; &amp;mdash; Gets a PharFileInfo object for a specific file</source>
          <target state="translated">&lt;a href=&quot;phar.offsetget&quot;&gt;Phar :: offsetGet&lt;/a&gt; &amp;mdash; 특정 파일에 대한 PharFileInfo 객체를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="4106544b9fc259dae2b35e20edb7ee09671a7d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetset&quot;&gt;Phar::offsetSet()&lt;/a&gt; - Set the contents of an internal file to those of an external file</source>
          <target state="translated">&lt;a href=&quot;phar.offsetset&quot;&gt;Phar :: offsetSet ()&lt;/a&gt; -내부 파일의 내용을 외부 파일의 내용으로 설정</target>
        </trans-unit>
        <trans-unit id="0235a06513984506deefc09c42482b3760964239" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetset&quot;&gt;Phar::offsetSet&lt;/a&gt; &amp;mdash; Set the contents of an internal file to those of an external file</source>
          <target state="translated">&lt;a href=&quot;phar.offsetset&quot;&gt;Phar :: offsetSet&lt;/a&gt; &amp;mdash; 내부 파일의 내용을 외부 파일의 내용으로 설정</target>
        </trans-unit>
        <trans-unit id="3d3af306a815e1c5af28b1bc6381acaa99ce2e0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetunset&quot;&gt;Phar::offsetUnset()&lt;/a&gt; - Remove a file from a phar</source>
          <target state="translated">&lt;a href=&quot;phar.offsetunset&quot;&gt;Phar :: offsetUnset ()-Phar&lt;/a&gt; 에서 파일 제거</target>
        </trans-unit>
        <trans-unit id="9e73da2eca0119894a011ed623044d5b5a93641b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.offsetunset&quot;&gt;Phar::offsetUnset&lt;/a&gt; &amp;mdash; Remove a file from a phar</source>
          <target state="translated">&lt;a href=&quot;phar.offsetunset&quot;&gt;Phar :: offsetUnset-파&lt;/a&gt; 에서 파일을 제거</target>
        </trans-unit>
        <trans-unit id="b275c1655fff22ae5eaf1e4a85e86680cfaaf63b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.running&quot;&gt;Phar::running&lt;/a&gt; &amp;mdash; Returns the full path on disk or full phar URL to the currently executing Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.running&quot;&gt;Phar :: running&lt;/a&gt; &amp;mdash; 디스크의 전체 경로 또는 현재 실행중인 Phar 아카이브에 대한 전체 phar URL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9ef45e0aad804dbd75c4e6acef80ebcbb58ee19b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setalias&quot;&gt;Phar::setAlias()&lt;/a&gt; - Set the alias for the Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.setalias&quot;&gt;Phar :: setAlias ​​()-Phar&lt;/a&gt; 아카이브의 별명 설정</target>
        </trans-unit>
        <trans-unit id="3808331c7fc90c6cd4265e555fc4993ef7dbcda9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setalias&quot;&gt;Phar::setAlias&lt;/a&gt; &amp;mdash; Set the alias for the Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.setalias&quot;&gt;Phar :: setAlias&lt;/a&gt; &amp;mdash; Phar 아카이브의 별명을 설정합니다</target>
        </trans-unit>
        <trans-unit id="ab283ff970e0282739662bb3cdeda20e430d3c0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setdefaultstub&quot;&gt;Phar::setDefaultStub()&lt;/a&gt; - Used to set the PHP loader or bootstrap stub of a Phar archive to the default loader</source>
          <target state="translated">&lt;a href=&quot;phar.setdefaultstub&quot;&gt;Phar :: setDefaultStub ()&lt;/a&gt; -Phar 아카이브의 PHP 로더 또는 부트 스트랩 스텁을 기본 로더로 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6a01437b03b3f5fd6776134b8f67206d75166987" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setdefaultstub&quot;&gt;Phar::setDefaultStub&lt;/a&gt; &amp;mdash; Used to set the PHP loader or bootstrap stub of a Phar archive to the default loader</source>
          <target state="translated">&lt;a href=&quot;phar.setdefaultstub&quot;&gt;Phar :: setDefaultStub&lt;/a&gt; &amp;mdash; Phar 아카이브의 PHP 로더 또는 부트 스트랩 스터브를 기본 로더로 설정하는 데 사용됩니다</target>
        </trans-unit>
        <trans-unit id="1d51b911f97e8cc85b056c59977864f491443381" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setmetadata&quot;&gt;Phar::setMetadata()&lt;/a&gt; - Sets phar archive meta-data</source>
          <target state="translated">&lt;a href=&quot;phar.setmetadata&quot;&gt;Phar :: setMetadata ()-phar&lt;/a&gt; 아카이브 메타 데이터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d87cb70ca4710f23be1520db8d92e0105f89b20c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setmetadata&quot;&gt;Phar::setMetadata()&lt;/a&gt; should be used to store customized data that describes something about the phar archive as a complete entity. &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo::setMetadata()&lt;/a&gt; should be used for file-specific meta-data. Meta-data can slow down the performance of loading a phar archive if the data is large.</source>
          <target state="translated">&lt;a href=&quot;phar.setmetadata&quot;&gt;Phar :: setMetadata ()&lt;/a&gt; 는 완전한 엔티티로서 phar 아카이브에 대해 설명하는 사용자 정의 데이터를 저장하는 데 사용되어야합니다. &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo :: setMetadata ()&lt;/a&gt; 는 파일 별 메타 데이터에 사용되어야합니다. 메타 데이터는 데이터가 큰 경우 phar 아카이브로드 성능을 저하시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c418f2384875a79491e976764f67b876f0cbb0ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setmetadata&quot;&gt;Phar::setMetadata&lt;/a&gt; &amp;mdash; Sets phar archive meta-data</source>
          <target state="translated">&lt;a href=&quot;phar.setmetadata&quot;&gt;Phar :: setMetadata&lt;/a&gt; &amp;mdash; phar 아카이브 메타 데이터를 설정합니다</target>
        </trans-unit>
        <trans-unit id="c066a9dc6ccc16041990269abddfda6cc5f06993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setsignaturealgorithm&quot;&gt;Phar::setSignatureAlgorithm()&lt;/a&gt; - Set the signature algorithm for a phar and apply it</source>
          <target state="translated">&lt;a href=&quot;phar.setsignaturealgorithm&quot;&gt;Phar :: setSignatureAlgorithm ()-phar에&lt;/a&gt; 대한 서명 알고리즘을 설정하고 적용합니다.</target>
        </trans-unit>
        <trans-unit id="e833607a68264b2259da35e87efa27006f5b1e68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setsignaturealgorithm&quot;&gt;Phar::setSignatureAlgorithm&lt;/a&gt; &amp;mdash; Set the signature algorithm for a phar and apply it</source>
          <target state="translated">&lt;a href=&quot;phar.setsignaturealgorithm&quot;&gt;Phar :: setSignatureAlgorithm&lt;/a&gt; &amp;mdash; phar에 대한 서명 알고리즘을 설정하고 적용합니다</target>
        </trans-unit>
        <trans-unit id="20b574948bcebec78fb5056516ebc11b4a0701cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setstub&quot;&gt;Phar::setStub()&lt;/a&gt; - Used to set the PHP loader or bootstrap stub of a Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.setstub&quot;&gt;Phar :: setStub ()-Phar&lt;/a&gt; 아카이브의 PHP 로더 또는 부트 스트랩 스텁을 설정하는 데 사용됩니다</target>
        </trans-unit>
        <trans-unit id="1260f6cb13092781a045399128f4fe3387e2296f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.setstub&quot;&gt;Phar::setStub&lt;/a&gt; &amp;mdash; Used to set the PHP loader or bootstrap stub of a Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.setstub&quot;&gt;Phar :: setStub&lt;/a&gt; &amp;mdash; Phar 아카이브의 PHP 로더 또는 부트 스트랩 스텁을 설정하는 데 사용됩니다</target>
        </trans-unit>
        <trans-unit id="3af2ff0eb0a0ad96fc9a96e1daa667a814b8940a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering()&lt;/a&gt; - Start buffering Phar write operations, do not modify the Phar object on disk</source>
          <target state="translated">&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering ()-Phar&lt;/a&gt; 쓰기 조작 버퍼링 시작, 디스크에서 Phar 오브젝트를 수정하지 마십시오</target>
        </trans-unit>
        <trans-unit id="9f931724d5a8ee1d41eb034f6394af26f4f2106e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering&lt;/a&gt; &amp;mdash; Start buffering Phar write operations, do not modify the Phar object on disk</source>
          <target state="translated">&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering&lt;/a&gt; &amp;mdash; Phar 쓰기 작업 버퍼링을 시작합니다. 디스크에서 Phar 객체를 수정하지 마십시오</target>
        </trans-unit>
        <trans-unit id="b78627a1d182b99f28ba1f5d6ba21978afec692a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.stopbuffering&quot;&gt;Phar::stopBuffering()&lt;/a&gt; - Stop buffering write requests to the Phar archive, and save changes to disk</source>
          <target state="translated">&lt;a href=&quot;phar.stopbuffering&quot;&gt;Phar :: stopBuffering ()-Phar&lt;/a&gt; 아카이브에 대한 쓰기 요청 버퍼링을 중지하고 변경 사항을 디스크에 저장</target>
        </trans-unit>
        <trans-unit id="b547cf57016d64af6b4d7fee4b2e53b4ad7009cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.stopbuffering&quot;&gt;Phar::stopBuffering&lt;/a&gt; &amp;mdash; Stop buffering write requests to the Phar archive, and save changes to disk</source>
          <target state="translated">&lt;a href=&quot;phar.stopbuffering&quot;&gt;Phar :: stopBuffering&lt;/a&gt; &amp;mdash; Phar 아카이브에 대한 쓰기 요청 버퍼링을 중지하고 변경 사항을 디스크에 저장</target>
        </trans-unit>
        <trans-unit id="c4456131a7bf2409dbd047fc35bc5809cf3342f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.uncompressallfiles&quot;&gt;Phar::uncompressAllFiles()&lt;/a&gt; - Uncompresses all files in the current Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.uncompressallfiles&quot;&gt;Phar :: uncompressAllFiles ()&lt;/a&gt; -현재 Phar 아카이브의 모든 파일을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="5f219f2c7f0c2ba7d65f6ec3dd7cefdf76ba3cdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.uncompressallfiles&quot;&gt;Phar::uncompressAllFiles&lt;/a&gt; &amp;mdash; Uncompresses all files in the current Phar archive</source>
          <target state="translated">&lt;a href=&quot;phar.uncompressallfiles&quot;&gt;Phar :: uncompressAllFiles&lt;/a&gt; &amp;mdash; 현재 Phar 아카이브의 모든 파일을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="e1427ce94d19e1ee18cf266eb82187c5d6d4a369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.unlinkarchive&quot;&gt;Phar::unlinkArchive()&lt;/a&gt; - Completely remove a phar archive from disk and from memory</source>
          <target state="translated">&lt;a href=&quot;phar.unlinkarchive&quot;&gt;Phar :: unlinkArchive ()&lt;/a&gt; -디스크와 메모리에서 phar 아카이브를 완전히 제거</target>
        </trans-unit>
        <trans-unit id="45607bae1d1a71592acd5e4c3a55c3b3ec10647b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.unlinkarchive&quot;&gt;Phar::unlinkArchive&lt;/a&gt; &amp;mdash; Completely remove a phar archive from disk and from memory</source>
          <target state="translated">&lt;a href=&quot;phar.unlinkarchive&quot;&gt;Phar :: unlinkArchive&lt;/a&gt; &amp;mdash; 디스크와 메모리에서 phar 아카이브를 완전히 제거</target>
        </trans-unit>
        <trans-unit id="ff767763cb280f3baa182c6afbdf4cc56c3b8803" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.webphar&quot;&gt;Phar::webPhar()&lt;/a&gt; - mapPhar for web-based phars. front controller for web applications</source>
          <target state="translated">&lt;a href=&quot;phar.webphar&quot;&gt;Phar :: webPhar ()&lt;/a&gt; -웹 기반 Phar 용 mapPhar 웹 애플리케이션을위한 프론트 컨트롤러</target>
        </trans-unit>
        <trans-unit id="683c7da364b208443d887bfb9b59eb2fe7fdb910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phar.webphar&quot;&gt;Phar::webPhar&lt;/a&gt; &amp;mdash; mapPhar for web-based phars. front controller for web applications</source>
          <target state="translated">&lt;a href=&quot;phar.webphar&quot;&gt;Phar :: webPhar&lt;/a&gt; &amp;mdash; 웹 기반 Phar 용 mapPhar입니다. 웹 애플리케이션을위한 프론트 컨트롤러</target>
        </trans-unit>
        <trans-unit id="1bdf99790209141fc0427da9abb12d9f88328b79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.addemptydir&quot;&gt;PharData::addEmptyDir()&lt;/a&gt; - Add an empty directory to the tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.addemptydir&quot;&gt;PharData :: addEmptyDir ()-tar&lt;/a&gt; / zip 아카이브에 빈 디렉토리 추가</target>
        </trans-unit>
        <trans-unit id="5e4d2615dd8c2689d374f787b3709e440fb49239" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.addemptydir&quot;&gt;PharData::addEmptyDir&lt;/a&gt; &amp;mdash; Add an empty directory to the tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.addemptydir&quot;&gt;PharData :: addEmptyDir&lt;/a&gt; &amp;mdash; tar / zip 아카이브에 빈 디렉토리를 추가합니다</target>
        </trans-unit>
        <trans-unit id="c8b35d6093e1eacb159eedec2ff5276823396001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.addfile&quot;&gt;PharData::addFile()&lt;/a&gt; - Add a file from the filesystem to the tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.addfile&quot;&gt;PharData :: addFile ()&lt;/a&gt; -파일 시스템에서 tar / zip 아카이브로 파일 추가</target>
        </trans-unit>
        <trans-unit id="d4e81a99e2c25c9b0fa793907d592dc819babe36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.addfile&quot;&gt;PharData::addFile&lt;/a&gt; &amp;mdash; Add a file from the filesystem to the tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.addfile&quot;&gt;PharData :: addFile&lt;/a&gt; &amp;mdash; 파일 시스템에서 tar / zip 아카이브로 파일을 추가합니다</target>
        </trans-unit>
        <trans-unit id="158b8e62641ba73fbec1156ed3d742ae506f33fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.addfromstring&quot;&gt;PharData::addFromString()&lt;/a&gt; - Add a file from the filesystem to the tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.addfromstring&quot;&gt;PharData :: addFromString ()&lt;/a&gt; -파일 시스템에서 tar / zip 아카이브로 파일 추가</target>
        </trans-unit>
        <trans-unit id="49b30e0033daedf57af2da1f7517277a64d0a139" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.addfromstring&quot;&gt;PharData::addFromString&lt;/a&gt; &amp;mdash; Add a file from the filesystem to the tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.addfromstring&quot;&gt;PharData :: addFromString&lt;/a&gt; &amp;mdash; 파일 시스템에서 tar / zip 아카이브로 파일을 추가합니다</target>
        </trans-unit>
        <trans-unit id="64ae183ed2617cf375e2b8816eda2a68b6c43345" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.buildfromdirectory&quot;&gt;PharData::buildFromDirectory&lt;/a&gt; &amp;mdash; Construct a tar/zip archive from the files within a directory</source>
          <target state="translated">&lt;a href=&quot;phardata.buildfromdirectory&quot;&gt;PharData :: buildFromDirectory&lt;/a&gt; &amp;mdash; 디렉토리 내의 파일에서 tar / zip 아카이브를 구성합니다</target>
        </trans-unit>
        <trans-unit id="04cd304aa5e440cb20a78a290a829eeba5d9d9c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.buildfromiterator&quot;&gt;PharData::buildFromIterator()&lt;/a&gt; - Construct a tar or zip archive from an iterator</source>
          <target state="translated">&lt;a href=&quot;phardata.buildfromiterator&quot;&gt;PharData :: buildFromIterator ()&lt;/a&gt; -반복자에서 tar 또는 zip 아카이브 구성</target>
        </trans-unit>
        <trans-unit id="2859825e45d45526ccd870dfae2076311dc1ada3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.buildfromiterator&quot;&gt;PharData::buildFromIterator&lt;/a&gt; &amp;mdash; Construct a tar or zip archive from an iterator</source>
          <target state="translated">&lt;a href=&quot;phardata.buildfromiterator&quot;&gt;PharData :: buildFromIterator&lt;/a&gt; &amp;mdash; 반복자에서 tar 또는 zip 아카이브를 생성</target>
        </trans-unit>
        <trans-unit id="7242825615b7b1793090e4a17056c9860d724ee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.compress&quot;&gt;PharData::compress()&lt;/a&gt; - Compresses the entire tar/zip archive using Gzip or Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;phardata.compress&quot;&gt;PharData :: compress ()-Gzip&lt;/a&gt; 또는 Bzip2 압축을 사용하여 전체 tar / zip 아카이브를 압축합니다</target>
        </trans-unit>
        <trans-unit id="5c2ad80529daff218da349ff1416a9fff5853ab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.compress&quot;&gt;PharData::compress&lt;/a&gt; &amp;mdash; Compresses the entire tar/zip archive using Gzip or Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;phardata.compress&quot;&gt;PharData :: compress&lt;/a&gt; &amp;mdash; Gzip 또는 Bzip2 압축을 사용하여 전체 tar / zip 아카이브를 압축합니다</target>
        </trans-unit>
        <trans-unit id="e679e942b0391c1a0f8919d5b9766f625ca4a977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.compressfiles&quot;&gt;PharData::compressFiles()&lt;/a&gt; - Compresses all files in the current tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.compressfiles&quot;&gt;PharData :: compressFiles ()&lt;/a&gt; -현재 tar / zip 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="d0b2355fdda1a17691387f5daf008d9af9877bd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.compressfiles&quot;&gt;PharData::compressFiles&lt;/a&gt; &amp;mdash; Compresses all files in the current tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.compressfiles&quot;&gt;PharData :: compressFiles&lt;/a&gt; &amp;mdash; 현재 tar / zip 아카이브의 모든 파일을 압축합니다</target>
        </trans-unit>
        <trans-unit id="dc1a4605f997c38ec98b03ad56dc009384c52613" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.construct&quot;&gt;PharData::__construct&lt;/a&gt; &amp;mdash; Construct a non-executable tar or zip archive object</source>
          <target state="translated">&lt;a href=&quot;phardata.construct&quot;&gt;PharData :: __ construct&lt;/a&gt; &amp;mdash; 실행 불가능한 tar 또는 zip 아카이브 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="aaf60a0992379004d8c6871c3c709ce23cc73614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.converttodata&quot;&gt;PharData::convertToData()&lt;/a&gt; - Convert a phar archive to a non-executable tar or zip file</source>
          <target state="translated">&lt;a href=&quot;phardata.converttodata&quot;&gt;PharData :: convertToData ()-phar&lt;/a&gt; 아카이브를 실행 불가능한 tar 또는 zip 파일로 변환</target>
        </trans-unit>
        <trans-unit id="7f3e92d2fff2f981c0a609dd65b62f3933b2a165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.converttodata&quot;&gt;PharData::convertToData&lt;/a&gt; &amp;mdash; Convert a phar archive to a non-executable tar or zip file</source>
          <target state="translated">&lt;a href=&quot;phardata.converttodata&quot;&gt;PharData :: convertToData&lt;/a&gt; &amp;mdash; phar 아카이브를 실행 불가능한 tar 또는 zip 파일로 변환</target>
        </trans-unit>
        <trans-unit id="4ddcb0fcb4f703600d260e553a6e43a116d7ccf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.converttoexecutable&quot;&gt;PharData::convertToExecutable()&lt;/a&gt; - Convert a non-executable tar/zip archive to an executable phar archive</source>
          <target state="translated">&lt;a href=&quot;phardata.converttoexecutable&quot;&gt;PharData :: convertToExecutable ()&lt;/a&gt; -실행 불가능한 tar / zip 아카이브를 실행 가능한 phar 아카이브로 변환</target>
        </trans-unit>
        <trans-unit id="5034839c64402cdb51b0edf6d92e982361e0b80c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.converttoexecutable&quot;&gt;PharData::convertToExecutable&lt;/a&gt; &amp;mdash; Convert a non-executable tar/zip archive to an executable phar archive</source>
          <target state="translated">&lt;a href=&quot;phardata.converttoexecutable&quot;&gt;PharData :: convertToExecutable&lt;/a&gt; &amp;mdash; 실행 불가능한 tar / zip 아카이브를 실행 가능한 phar 아카이브로 변환</target>
        </trans-unit>
        <trans-unit id="3781951ed3c626f0f4c2193468510314877f6d18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.copy&quot;&gt;PharData::copy&lt;/a&gt; &amp;mdash; Copy a file internal to the phar archive to another new file within the phar</source>
          <target state="translated">&lt;a href=&quot;phardata.copy&quot;&gt;PharData :: copy&lt;/a&gt; &amp;mdash; phar 아카이브 내부의 파일을 phar 내의 다른 새 파일로 복사</target>
        </trans-unit>
        <trans-unit id="cc2a722cf0f88bbd88ee982c0827d4881afeda33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.decompress&quot;&gt;PharData::decompress()&lt;/a&gt; - Decompresses the entire Phar archive</source>
          <target state="translated">&lt;a href=&quot;phardata.decompress&quot;&gt;PharData :: decompress ()&lt;/a&gt; -전체 Phar 아카이브를 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="1a2fb918c609f9270a92b69c805413ff268b5749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.decompress&quot;&gt;PharData::decompress&lt;/a&gt; &amp;mdash; Decompresses the entire Phar archive</source>
          <target state="translated">&lt;a href=&quot;phardata.decompress&quot;&gt;PharData :: decompress&lt;/a&gt; &amp;mdash; 전체 Phar 아카이브를 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="d828d7371b798cf4ea69be4fa67f0471a5ee41b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.decompressfiles&quot;&gt;PharData::decompressFiles()&lt;/a&gt; - Decompresses all files in the current zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.decompressfiles&quot;&gt;PharData :: decompressFiles ()&lt;/a&gt; -현재 zip 아카이브의 모든 파일을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="73f22e9fad486cb7be374977dff2ea6c61a62a4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.decompressfiles&quot;&gt;PharData::decompressFiles&lt;/a&gt; &amp;mdash; Decompresses all files in the current zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.decompressfiles&quot;&gt;PharData :: decompressFiles&lt;/a&gt; &amp;mdash; 현재 zip 아카이브의 모든 파일을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="96c91a0e74c34b0779077353202b0fbc0da477bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.delete&quot;&gt;PharData::delete()&lt;/a&gt; - Delete a file within a tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.delete&quot;&gt;PharData :: delete ()-tar&lt;/a&gt; / zip 아카이브 내의 파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="df0df99487836ae18644e0afac957ab3ebadc70c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.delete&quot;&gt;PharData::delete&lt;/a&gt; &amp;mdash; Delete a file within a tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.delete&quot;&gt;PharData :: delete&lt;/a&gt; &amp;mdash; tar / zip 아카이브 내의 파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="2112360f8d2a8e6b09ff2374aa66feddb1c3e359" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.delmetadata&quot;&gt;PharData::delMetadata&lt;/a&gt; &amp;mdash; Deletes the global metadata of a zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.delmetadata&quot;&gt;PharData :: delMetadata&lt;/a&gt; &amp;mdash; Zip 아카이브의 글로벌 메타 데이터를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="98231006fbbc292c07194b5e02eff83c1e28940c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.extractto&quot;&gt;PharData::extractTo()&lt;/a&gt; - Extract the contents of a tar/zip archive to a directory</source>
          <target state="translated">&lt;a href=&quot;phardata.extractto&quot;&gt;PharData :: extractTo ()-tar&lt;/a&gt; / zip 아카이브의 내용을 디렉토리로 추출</target>
        </trans-unit>
        <trans-unit id="dd6f19ba91a36358ef8af49dc206e58b1d92f87f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.extractto&quot;&gt;PharData::extractTo&lt;/a&gt; &amp;mdash; Extract the contents of a tar/zip archive to a directory</source>
          <target state="translated">&lt;a href=&quot;phardata.extractto&quot;&gt;PharData :: extractTo&lt;/a&gt; &amp;mdash; tar / zip 아카이브의 내용을 디렉토리로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="b86c8ec14d7644802b66ad64c5116259eced337f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.iswritable&quot;&gt;PharData::isWritable()&lt;/a&gt; - Returns true if the tar/zip archive can be modified</source>
          <target state="translated">&lt;a href=&quot;phardata.iswritable&quot;&gt;PharData :: isWritable ()-tar&lt;/a&gt; / zip 아카이브를 수정할 수있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0d7f4ca3f243399a9912ec5543c3fc6878a7f8ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.iswritable&quot;&gt;PharData::isWritable&lt;/a&gt; &amp;mdash; Returns true if the tar/zip archive can be modified</source>
          <target state="translated">&lt;a href=&quot;phardata.iswritable&quot;&gt;PharData :: isWritable&lt;/a&gt; &amp;mdash; tar / zip 아카이브를 수정할 수있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ea284bcf9c352641cc79f869db352e914958f5c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.offsetset&quot;&gt;PharData::offsetSet()&lt;/a&gt; - Set the contents of a file within the tar/zip to those of an external file or string</source>
          <target state="translated">&lt;a href=&quot;phardata.offsetset&quot;&gt;PharData :: offsetSet ()-tar&lt;/a&gt; / zip 내의 파일 내용을 외부 파일 또는 문자열의 내용으로 설정</target>
        </trans-unit>
        <trans-unit id="fd659102604aec0f0d3d3ec9e27c6713663a2a40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.offsetset&quot;&gt;PharData::offsetSet&lt;/a&gt; &amp;mdash; Set the contents of a file within the tar/zip to those of an external file or string</source>
          <target state="translated">&lt;a href=&quot;phardata.offsetset&quot;&gt;PharData :: offsetSet&lt;/a&gt; &amp;mdash; tar / zip 내의 파일 내용을 외부 파일 또는 문자열의 내용으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="84c6ee3d561b47d3473c0c72e9d703c50b95089d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.offsetunset&quot;&gt;PharData::offsetUnset&lt;/a&gt; &amp;mdash; Remove a file from a tar/zip archive</source>
          <target state="translated">&lt;a href=&quot;phardata.offsetunset&quot;&gt;PharData :: offsetUnset&lt;/a&gt; &amp;mdash; tar / zip 아카이브에서 파일을 제거합니다</target>
        </trans-unit>
        <trans-unit id="c06a3d587fbee8ec00338418d1215686badea4fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setalias&quot;&gt;PharData::setAlias&lt;/a&gt; &amp;mdash; Dummy function (Phar::setAlias is not valid for PharData)</source>
          <target state="translated">&lt;a href=&quot;phardata.setalias&quot;&gt;PharData :: setAlias&lt;/a&gt; &amp;mdash; 더미 함수 (Phar :: setAlias는 PharData에 유효하지 않습니다)</target>
        </trans-unit>
        <trans-unit id="190286ff83d535c8e210fa970e03091aed970a3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setdefaultstub&quot;&gt;PharData::setDefaultStub&lt;/a&gt; &amp;mdash; Dummy function (Phar::setDefaultStub is not valid for PharData)</source>
          <target state="translated">&lt;a href=&quot;phardata.setdefaultstub&quot;&gt;PharData :: setDefaultStub&lt;/a&gt; &amp;mdash; 더미 함수 (Phar :: setDefaultStub은 PharData에 유효하지 않습니다)</target>
        </trans-unit>
        <trans-unit id="688d4f4a1f7f4fdac7bfe0380071bfa555a43add" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setmetadata&quot;&gt;Phar::setMetadata()&lt;/a&gt; - Sets phar archive meta-data</source>
          <target state="translated">&lt;a href=&quot;phardata.setmetadata&quot;&gt;Phar :: setMetadata ()-Phar&lt;/a&gt; 아카이브 메타 데이터 설정</target>
        </trans-unit>
        <trans-unit id="7a1e660a4638d11d409cab8c9cbe06742ef43141" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setmetadata&quot;&gt;Phar::setMetadata()&lt;/a&gt; should be used to store customized data that describes something about the phar archive as a complete entity. &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo::setMetadata()&lt;/a&gt; should be used for file-specific meta-data. Meta-data can slow down the performance of loading a phar archive if the data is large.</source>
          <target state="translated">&lt;a href=&quot;phardata.setmetadata&quot;&gt;Phar :: setMetadata ()&lt;/a&gt; 를 사용하여 phar 아카이브에 대해 설명하는 사용자 정의 데이터를 완전한 엔티티로 저장해야합니다. 파일 특정 메타 데이터에는 &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo :: setMetadata ()를&lt;/a&gt; 사용해야합니다. 메타 데이터는 데이터가 큰 경우 phar 아카이브로드 성능을 저하시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1d737bf07e52157ab6890dd6fe1f8518c11979a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setmetadata&quot;&gt;Phar::setMetadata&lt;/a&gt; &amp;mdash; Sets phar archive meta-data</source>
          <target state="translated">&lt;a href=&quot;phardata.setmetadata&quot;&gt;Phar :: setMetadata&lt;/a&gt; &amp;mdash; phar 아카이브 메타 데이터를 설정합니다</target>
        </trans-unit>
        <trans-unit id="88251b43a3ba0257b60f6830ffcc99d0a0e63b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setmetadata&quot;&gt;PharData::setMetadata&lt;/a&gt; &amp;mdash; Sets phar archive meta-data</source>
          <target state="translated">&lt;a href=&quot;phardata.setmetadata&quot;&gt;PharData :: setMetadata&lt;/a&gt; &amp;mdash; phar 아카이브 메타 데이터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="25b31eff27fcab8228935d90d1c2cf377d10859c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setsignaturealgorithm&quot;&gt;Phar::setSignatureAlgorithm()&lt;/a&gt; - Set the signature algorithm for a phar and apply it</source>
          <target state="translated">&lt;a href=&quot;phardata.setsignaturealgorithm&quot;&gt;Phar :: setSignatureAlgorithm ()-phar에&lt;/a&gt; 대한 서명 알고리즘을 설정하고 적용합니다</target>
        </trans-unit>
        <trans-unit id="10867bb3936f6270414c35380568f0353dfa0d91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setsignaturealgorithm&quot;&gt;Phar::setSignatureAlgorithm&lt;/a&gt; &amp;mdash; Set the signature algorithm for a phar and apply it</source>
          <target state="translated">&lt;a href=&quot;phardata.setsignaturealgorithm&quot;&gt;Phar :: setSignatureAlgorithm&lt;/a&gt; &amp;mdash; phar에 대한 서명 알고리즘을 설정하고 적용합니다</target>
        </trans-unit>
        <trans-unit id="1461171af20e8141f5881ef222c4fefca0557068" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setsignaturealgorithm&quot;&gt;PharData::setSignatureAlgorithm&lt;/a&gt; &amp;mdash; Set the signature algorithm for a phar and apply it</source>
          <target state="translated">&lt;a href=&quot;phardata.setsignaturealgorithm&quot;&gt;PharData :: setSignatureAlgorithm&lt;/a&gt; &amp;mdash; phar에 대한 서명 알고리즘을 설정하고 적용합니다.</target>
        </trans-unit>
        <trans-unit id="82439bf43cbfa01fbf339dc797ae3183e76469da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phardata.setstub&quot;&gt;PharData::setStub&lt;/a&gt; &amp;mdash; Dummy function (Phar::setStub is not valid for PharData)</source>
          <target state="translated">&lt;a href=&quot;phardata.setstub&quot;&gt;PharData :: setStub&lt;/a&gt; &amp;mdash; 더미 함수 (Phar :: setStub은 PharData에 유효하지 않습니다)</target>
        </trans-unit>
        <trans-unit id="3115a639c88a911a6dc2289712a2cc688fab0f22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharexception.intro.unused&quot;&gt;PharException&lt;/a&gt; &amp;mdash; The PharException class provides a phar-specific exception class for try/catch blocks</source>
          <target state="translated">&lt;a href=&quot;pharexception.intro.unused&quot;&gt;PharException&lt;/a&gt; &amp;mdash; PharException 클래스는 try / catch 블록을위한 phar 특정 예외 클래스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="422239ac4188b683e35c9a7e863ca2be071552a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo::chmod&lt;/a&gt; &amp;mdash; Sets file-specific permission bits</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo :: chmod&lt;/a&gt; &amp;mdash; 파일 별 권한 비트를 설정합니다</target>
        </trans-unit>
        <trans-unit id="78bdc3dd5d9c247efccae2a4cdff9343c51eeb09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.compress&quot;&gt;PharFileInfo::compress()&lt;/a&gt; - Compresses the current Phar entry with either zlib or bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.compress&quot;&gt;PharFileInfo :: compress ()-zlib&lt;/a&gt; 또는 bzip2 압축으로 현재 Phar 항목을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="c3adb71f64733270270e1cd2194ff60cd89a89d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.compress&quot;&gt;PharFileInfo::compress&lt;/a&gt; &amp;mdash; Compresses the current Phar entry with either zlib or bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.compress&quot;&gt;PharFileInfo :: compress&lt;/a&gt; &amp;mdash; zlib 또는 bzip2 압축으로 현재 Phar 항목을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="2f597a2037a5f44e631219da0b50d649d1fd1d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.construct&quot;&gt;PharFileInfo::__construct&lt;/a&gt; &amp;mdash; Construct a Phar entry object</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.construct&quot;&gt;PharFileInfo :: __ construct&lt;/a&gt; &amp;mdash; Phar 엔트리 객체를 생성</target>
        </trans-unit>
        <trans-unit id="ab0a6cdb6a3708225817f11965f372d5dd090fb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.decompress&quot;&gt;PharFileInfo::decompress()&lt;/a&gt; - Decompresses the current Phar entry within the phar</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.decompress&quot;&gt;PharFileInfo :: decompress ()-phar&lt;/a&gt; 내의 현재 Phar 항목을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="350b7b72d1f2e0e5425a9fb59d313a45418285a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.decompress&quot;&gt;PharFileInfo::decompress&lt;/a&gt; &amp;mdash; Decompresses the current Phar entry within the phar</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.decompress&quot;&gt;PharFileInfo :: decompress&lt;/a&gt; &amp;mdash; phar 내의 현재 Phar 항목을 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="ac587403749e996465612c8fa5fe3e91752a23f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.delmetadata&quot;&gt;PharFileInfo::delMetadata()&lt;/a&gt; - Deletes the metadata of the entry</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.delmetadata&quot;&gt;PharFileInfo :: delMetadata ()&lt;/a&gt; -항목의 메타 데이터를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="acd8a0ea617a11aee9c9ac46b0962001439b860f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.delmetadata&quot;&gt;PharFileInfo::delMetadata&lt;/a&gt; &amp;mdash; Deletes the metadata of the entry</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.delmetadata&quot;&gt;PharFileInfo :: delMetadata&lt;/a&gt; &amp;mdash; 항목의 메타 데이터를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="aa042039e087b54d9030824488ea3e9abf438477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.getcompressedsize&quot;&gt;PharFileInfo::getCompressedSize()&lt;/a&gt; - Returns the actual size of the file (with compression) inside the Phar archive</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.getcompressedsize&quot;&gt;PharFileInfo :: getCompressedSize ()-Phar&lt;/a&gt; 아카이브 내에서 파일의 실제 크기 (압축 포함)를 리턴합니다</target>
        </trans-unit>
        <trans-unit id="d6334a9ee20f534c48e114fa996281e53962ef3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.getcompressedsize&quot;&gt;PharFileInfo::getCompressedSize&lt;/a&gt; &amp;mdash; Returns the actual size of the file (with compression) inside the Phar archive</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.getcompressedsize&quot;&gt;PharFileInfo :: getCompressedSize&lt;/a&gt; &amp;mdash; Phar 아카이브 내에서 파일의 실제 크기 (압축 포함)를 반환합니다</target>
        </trans-unit>
        <trans-unit id="fac97c54469aa78efc7904d4866a3b68dfdd242e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.getcontent&quot;&gt;PharFileInfo::getContent&lt;/a&gt; &amp;mdash; Get the complete file contents of the entry</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.getcontent&quot;&gt;PharFileInfo :: getContent-&lt;/a&gt; 항목의 전체 파일 내용을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="f30a27b18a61f2c8b0ca5c60fa4a3227b4059da5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.getcrc32&quot;&gt;PharFileInfo::getCRC32&lt;/a&gt; &amp;mdash; Returns CRC32 code or throws an exception if CRC has not been verified</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.getcrc32&quot;&gt;PharFileInfo :: getCRC32&lt;/a&gt; &amp;mdash; CRC가 확인되지 않은 경우 CRC32 코드를 반환하거나 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="4c86e68836be74f3664ce2ca4057b2a1eccc8af0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.getmetadata&quot;&gt;PharFileInfo::getMetadata()&lt;/a&gt; - Returns file-specific meta-data saved with a file</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.getmetadata&quot;&gt;PharFileInfo :: getMetadata ()&lt;/a&gt; -파일과 함께 저장된 파일 특정 메타 데이터를 반환합니다</target>
        </trans-unit>
        <trans-unit id="d2f356a98773744606a825e6e9a2fd469c44e70c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.getmetadata&quot;&gt;PharFileInfo::getMetadata&lt;/a&gt; &amp;mdash; Returns file-specific meta-data saved with a file</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.getmetadata&quot;&gt;PharFileInfo :: getMetadata&lt;/a&gt; &amp;mdash; 파일과 함께 저장된 파일 별 메타 데이터를 반환</target>
        </trans-unit>
        <trans-unit id="89739b2a2cc40108e316ee3dbc3a320b63914ecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.getpharflags&quot;&gt;PharFileInfo::getPharFlags&lt;/a&gt; &amp;mdash; Returns the Phar file entry flags</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.getpharflags&quot;&gt;PharFileInfo :: getPharFlags&lt;/a&gt; &amp;mdash; Phar 파일 엔트리 플래그를 반환</target>
        </trans-unit>
        <trans-unit id="48a0a5552ceb71c7949fea011df6be4fdf5ed1eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.hasmetadata&quot;&gt;PharFileInfo::hasMetadata()&lt;/a&gt; - Returns the metadata of the entry</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.hasmetadata&quot;&gt;PharFileInfo :: hasMetadata ()&lt;/a&gt; -항목의 메타 데이터를 반환합니다</target>
        </trans-unit>
        <trans-unit id="6fcdbea735fb5a936e4cc6eb776797b544d6469b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.hasmetadata&quot;&gt;PharFileInfo::hasMetadata&lt;/a&gt; &amp;mdash; Returns the metadata of the entry</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.hasmetadata&quot;&gt;PharFileInfo :: hasMetadata&lt;/a&gt; &amp;mdash; 항목의 메타 데이터를 반환합니다</target>
        </trans-unit>
        <trans-unit id="2e8abf6fc4379d2907953d1b694d80a266b2e549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.iscompressed&quot;&gt;PharFileInfo::isCompressed()&lt;/a&gt; - Returns whether the entry is compressed</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.iscompressed&quot;&gt;PharFileInfo :: isCompressed ()&lt;/a&gt; -항목의 압축 여부를 반환</target>
        </trans-unit>
        <trans-unit id="78b62d9bdc98b6f35a3051146832ac65d5d534be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.iscompressed&quot;&gt;PharFileInfo::isCompressed&lt;/a&gt; &amp;mdash; Returns whether the entry is compressed</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.iscompressed&quot;&gt;PharFileInfo :: isCompressed&lt;/a&gt; &amp;mdash; 항목의 압축 여부를 반환</target>
        </trans-unit>
        <trans-unit id="167362c82094cf062106656bc59d15bfbd85d468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.iscompressedbzip2&quot;&gt;PharFileInfo::isCompressedBZIP2()&lt;/a&gt; - Returns whether the entry is compressed using bzip2</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.iscompressedbzip2&quot;&gt;PharFileInfo :: isCompressedBZIP2 ()-bzip2를&lt;/a&gt; 사용하여 항목이 압축되는지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="dc496cb220f69a6f0f7b922932e082b99991bd6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.iscompressedbzip2&quot;&gt;PharFileInfo::isCompressedBZIP2&lt;/a&gt; &amp;mdash; Returns whether the entry is compressed using bzip2</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.iscompressedbzip2&quot;&gt;PharFileInfo :: isCompressedBZIP2&lt;/a&gt; &amp;mdash; bzip2를 사용하여 항목을 압축할지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08e1eb091cb313c63ed91210357cd3ca0c4ac796" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.iscompressedgz&quot;&gt;PharFileInfo::isCompressedGZ()&lt;/a&gt; - Returns whether the entry is compressed using gz</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.iscompressedgz&quot;&gt;PharFileInfo :: isCompressedGZ ()-gz를&lt;/a&gt; 사용하여 항목이 압축되는지 여부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8a13b0c0b956db2c923b46bc9d6e0ec2d61cdaed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.iscompressedgz&quot;&gt;PharFileInfo::isCompressedGZ&lt;/a&gt; &amp;mdash; Returns whether the entry is compressed using gz</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.iscompressedgz&quot;&gt;PharFileInfo :: isCompressedGZ&lt;/a&gt; &amp;mdash; gz를 사용하여 항목을 압축할지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="b5150ad05ffc70aa1bc0a175f659494ee6c615d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.iscrcchecked&quot;&gt;PharFileInfo::isCRCChecked&lt;/a&gt; &amp;mdash; Returns whether file entry has had its CRC verified</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.iscrcchecked&quot;&gt;PharFileInfo :: isCRCChecked&lt;/a&gt; &amp;mdash; 파일 항목의 CRC 확인 여부를 반환</target>
        </trans-unit>
        <trans-unit id="959e2c6af0ef1a3b7d51674645642c385d785447" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setcompressedbzip2&quot;&gt;PharFileInfo::setCompressedBZIP2()&lt;/a&gt; - Compresses the current Phar entry within the phar using Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setcompressedbzip2&quot;&gt;PharFileInfo :: setCompressedBZIP2 ()-Bzip2&lt;/a&gt; 압축을 사용하여 phar 내의 현재 Phar 항목을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="8e465e5fccd96d768bb1e3885d2967be0a996ec6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setcompressedbzip2&quot;&gt;PharFileInfo::setCompressedBZIP2&lt;/a&gt; &amp;mdash; Compresses the current Phar entry within the phar using Bzip2 compression</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setcompressedbzip2&quot;&gt;PharFileInfo :: setCompressedBZIP2&lt;/a&gt; &amp;mdash; Bzip2 압축을 사용하여 phar 내의 현재 Phar 항목을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="259fffa96b7bb661e121d75a5b85ffa9be010836" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setcompressedgz&quot;&gt;PharFileInfo::setCompressedGZ()&lt;/a&gt; - Compresses the current Phar entry within the phar using gz compression</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setcompressedgz&quot;&gt;PharFileInfo :: setCompressedGZ ()-gz&lt;/a&gt; 압축을 사용하여 phar 내의 현재 Phar 항목을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="02e8888e7c2ba340af7cbe503d30a90aa14ebaa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setcompressedgz&quot;&gt;PharFileInfo::setCompressedGZ&lt;/a&gt; &amp;mdash; Compresses the current Phar entry within the phar using gz compression</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setcompressedgz&quot;&gt;PharFileInfo :: setCompressedGZ&lt;/a&gt; &amp;mdash; gz 압축을 사용하여 phar 내의 현재 Phar 항목을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="bd01d06e2b79ebe9080ffc3dd7fb59cd3460e484" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo::setMetadata()&lt;/a&gt; - Sets file-specific meta-data saved with a file</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo :: setMetadata ()&lt;/a&gt; -파일과 함께 저장된 파일 특정 메타 데이터를 설정합니다</target>
        </trans-unit>
        <trans-unit id="f9af7075f0730a6e0c3774927f4267b3d5b369a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo::setMetadata&lt;/a&gt; &amp;mdash; Sets file-specific meta-data saved with a file</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo :: setMetadata&lt;/a&gt; &amp;mdash; 파일과 함께 저장된 파일 특정 메타 데이터를 설정합니다</target>
        </trans-unit>
        <trans-unit id="25c3d3ee657e72bc82c2a83e72e58158062c64d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setuncompressed&quot;&gt;PharFileInfo::setUncompressed()&lt;/a&gt; - Uncompresses the current Phar entry within the phar, if it is compressed</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setuncompressed&quot;&gt;PharFileInfo :: setUncompressed ()-phar&lt;/a&gt; 내에서 현재 Phar 항목이 압축 된 경우 압축 해제합니다</target>
        </trans-unit>
        <trans-unit id="96174af987f26353f225b987919cf8db7facdfb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pharfileinfo.setuncompressed&quot;&gt;PharFileInfo::setUncompressed&lt;/a&gt; &amp;mdash; Uncompresses the current Phar entry within the phar, if it is compressed</source>
          <target state="translated">&lt;a href=&quot;pharfileinfo.setuncompressed&quot;&gt;PharFileInfo :: setUncompressed&lt;/a&gt; &amp;mdash; phar 내에서 현재 Phar 항목이 압축 된 경우 압축을 해제합니다</target>
        </trans-unit>
        <trans-unit id="7290cf03384955a3dda618499b562a72d0b0e1b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;php-user-filter.filter&quot;&gt;php_user_filter::filter&lt;/a&gt; &amp;mdash; Called when applying the filter</source>
          <target state="translated">&lt;a href=&quot;php-user-filter.filter&quot;&gt;php_user_filter :: filter&lt;/a&gt; &amp;mdash; 필터를 적용 할 때 호출</target>
        </trans-unit>
        <trans-unit id="cec86054ea5e4d2dbd477acb54acaf1657adc895" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;php-user-filter.onclose&quot;&gt;php_user_filter::onClose&lt;/a&gt; &amp;mdash; Called when closing the filter</source>
          <target state="translated">&lt;a href=&quot;php-user-filter.onclose&quot;&gt;php_user_filter :: onClose&lt;/a&gt; &amp;mdash; 필터를 닫을 때 호출</target>
        </trans-unit>
        <trans-unit id="4542d76c39ce13c60c8e83125b4ddbf867c69173" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;php-user-filter.oncreate&quot;&gt;php_user_filter::onCreate&lt;/a&gt; &amp;mdash; Called when creating the filter</source>
          <target state="translated">&lt;a href=&quot;php-user-filter.oncreate&quot;&gt;php_user_filter :: onCreate&lt;/a&gt; &amp;mdash; 필터를 만들 때 호출</target>
        </trans-unit>
        <trans-unit id="bec6b35ecd2d2ab5834ba954c9cadd1e1772865e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.construct&quot;&gt;PhpToken::__construct&lt;/a&gt; &amp;mdash; Returns a new PhpToken object</source>
          <target state="translated">&lt;a href=&quot;phptoken.construct&quot;&gt;PhpToken :: __ construct&lt;/a&gt; &amp;mdash; 새로운 PhpToken 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b5108bc180353297ebd4a0b786c8042d21d39a16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.gettokenname&quot;&gt;PhpToken::getTokenName()&lt;/a&gt; - Returns the name of the token.</source>
          <target state="translated">&lt;a href=&quot;phptoken.gettokenname&quot;&gt;PhpToken :: getTokenName ()&lt;/a&gt; -토큰의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c9436987067c630a81039bb67c2fb38553949250" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.gettokenname&quot;&gt;PhpToken::getTokenName&lt;/a&gt; &amp;mdash; Returns the name of the token.</source>
          <target state="translated">&lt;a href=&quot;phptoken.gettokenname&quot;&gt;PhpToken :: getTokenName&lt;/a&gt; &amp;mdash; 토큰의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8ad440ab145ae2c5e5df0134619fbb9856712e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.is&quot;&gt;PhpToken::is&lt;/a&gt; &amp;mdash; Tells whether the token is of given kind.</source>
          <target state="translated">&lt;a href=&quot;phptoken.is&quot;&gt;PhpToken :: is&lt;/a&gt; &amp;mdash; 토큰이 주어진 종류인지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="11d1752600c9c407cb4dfab44e4a04098159df13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.isignorable&quot;&gt;PhpToken::isIgnorable&lt;/a&gt; &amp;mdash; Tells whether the token would be ignored by the PHP parser.</source>
          <target state="translated">&lt;a href=&quot;phptoken.isignorable&quot;&gt;PhpToken :: isIgnorable&lt;/a&gt; &amp;mdash; PHP 파서가 토큰을 무시할지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="c14f7030cda2e90a9c7939a1557e1c6bcaa2e777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.tokenize&quot;&gt;PhpToken::tokenize()&lt;/a&gt; - Splits given source into PHP tokens, represented by PhpToken objects.</source>
          <target state="translated">&lt;a href=&quot;phptoken.tokenize&quot;&gt;PhpToken :: tokenize ()&lt;/a&gt; -주어진 소스를 PhpToken 객체로 표현되는 PHP 토큰으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="d6ce8daabb2c647a3fc7b7b2fc8463d3c3726a04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.tokenize&quot;&gt;PhpToken::tokenize&lt;/a&gt; &amp;mdash; Splits given source into PHP tokens, represented by PhpToken objects.</source>
          <target state="translated">&lt;a href=&quot;phptoken.tokenize&quot;&gt;PhpToken :: tokenize&lt;/a&gt; &amp;mdash; 주어진 소스를 PhpToken 객체로 표현되는 PHP 토큰으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="47d0f70780a0ca981a97aa15fafffef8bef859b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;phptoken.tostring&quot;&gt;PhpToken::__toString&lt;/a&gt; &amp;mdash; Returns the textual content of the token.</source>
          <target state="translated">&lt;a href=&quot;phptoken.tostring&quot;&gt;PhpToken :: __ toString&lt;/a&gt; &amp;mdash; 토큰의 텍스트 내용을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20169bcc51ebed5c038de003d170eb3f72c47250" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pool.collect&quot;&gt;Pool::collect()&lt;/a&gt; - Collect references to completed tasks</source>
          <target state="translated">&lt;a href=&quot;pool.collect&quot;&gt;Pool :: collect ()&lt;/a&gt; -완료된 작업에 대한 참조를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="22cb4ae697676834e67153990bc241761486c0cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pool.collect&quot;&gt;Pool::collect&lt;/a&gt; &amp;mdash; Collect references to completed tasks</source>
          <target state="translated">&lt;a href=&quot;pool.collect&quot;&gt;Pool :: collect&lt;/a&gt; &amp;mdash; 완료된 작업에 대한 참조를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="4d9efbec93b8d1467646385a9d412186d18cdf00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pool.construct&quot;&gt;Pool::__construct&lt;/a&gt; &amp;mdash; Creates a new Pool of Workers</source>
          <target state="translated">&lt;a href=&quot;pool.construct&quot;&gt;Pool :: __ construct&lt;/a&gt; &amp;mdash; 새로운 작업자 풀을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d073f913c06d536b92c2bb5662ba34bfa8852540" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pool.resize&quot;&gt;Pool::resize&lt;/a&gt; &amp;mdash; Resize the Pool</source>
          <target state="translated">&lt;a href=&quot;pool.resize&quot;&gt;Pool :: resize&lt;/a&gt; &amp;mdash; 풀 크기 조정</target>
        </trans-unit>
        <trans-unit id="e5a323286cc320801320a30b2843644adecf3888" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pool.shutdown&quot;&gt;Pool::shutdown&lt;/a&gt; &amp;mdash; Shutdown all workers</source>
          <target state="translated">&lt;a href=&quot;pool.shutdown&quot;&gt;Pool :: shutdown&lt;/a&gt; &amp;mdash; 모든 작업자를 종료합니다</target>
        </trans-unit>
        <trans-unit id="18c4888bba15dcddec59e4e6d3408d399c7545af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pool.submit&quot;&gt;Pool::submit&lt;/a&gt; &amp;mdash; Submits an object for execution</source>
          <target state="translated">&lt;a href=&quot;pool.submit&quot;&gt;Pool :: submit&lt;/a&gt; &amp;mdash; 실행할 객체를 제출합니다.</target>
        </trans-unit>
        <trans-unit id="b6ea51a04ebd03753a712f728a009caa079ddafc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pool.submitto&quot;&gt;Pool::submitTo&lt;/a&gt; &amp;mdash; Submits a task to a specific worker for execution</source>
          <target state="translated">&lt;a href=&quot;pool.submitto&quot;&gt;Pool :: submitTo&lt;/a&gt; &amp;mdash; 특정 작업자에게 작업을 제출하여 실행</target>
        </trans-unit>
        <trans-unit id="116fdaed485e78277c93a8f66751469f652f926e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.add&quot;&gt;QuickHashIntHash::add&lt;/a&gt; &amp;mdash; This method adds a new entry to the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.add&quot;&gt;QuickHashIntHash :: add&lt;/a&gt; &amp;mdash;이 메소드는 해시에 새로운 엔트리를 추가합니다</target>
        </trans-unit>
        <trans-unit id="50dd69fac0c6793830724ec33a6b9f507f535eff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.construct&quot;&gt;QuickHashIntHash::__construct&lt;/a&gt; &amp;mdash; Creates a new QuickHashIntHash object</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.construct&quot;&gt;QuickHashIntHash :: __ construct&lt;/a&gt; &amp;mdash; 새로운 QuickHashIntHash 객체를 생성</target>
        </trans-unit>
        <trans-unit id="ef4fb222a28a03916b97587219aec235768e842c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.delete&quot;&gt;QuickHashIntHash::delete&lt;/a&gt; &amp;mdash; This method deletes am entry from the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.delete&quot;&gt;QuickHashIntHash :: delete&lt;/a&gt; &amp;mdash;이 메소드는 해시에서 am 항목을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="782b94ec2cddb75b94eacfc401027783bf64ac62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.exists&quot;&gt;QuickHashIntHash::exists&lt;/a&gt; &amp;mdash; This method checks whether a key is part of the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.exists&quot;&gt;QuickHashIntHash :: exists&lt;/a&gt; &amp;mdash;이 메소드는 키가 해시의 일부인지 확인합니다</target>
        </trans-unit>
        <trans-unit id="84f8f3eab8fc96719a2f42435d7acb227bbd67f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.get&quot;&gt;QuickHashIntHash::get&lt;/a&gt; &amp;mdash; This method retrieves a value from the hash by its key</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.get&quot;&gt;QuickHashIntHash :: get&lt;/a&gt; &amp;mdash;이 메소드는 키로 해시에서 값을 검색합니다</target>
        </trans-unit>
        <trans-unit id="a8afbf0a454cb3170ebd88d57f78b8b5ece3fc73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.getsize&quot;&gt;QuickHashIntHash::getSize&lt;/a&gt; &amp;mdash; Returns the number of elements in the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.getsize&quot;&gt;QuickHashIntHash :: getSize&lt;/a&gt; &amp;mdash; 해시의 요소 수를 반환</target>
        </trans-unit>
        <trans-unit id="59974cc5e67a90d08cce5edb4561df0bf3d4109d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.loadfromfile&quot;&gt;QuickHashIntHash::loadFromFile&lt;/a&gt; &amp;mdash; This factory method creates a hash from a file</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.loadfromfile&quot;&gt;QuickHashIntHash :: loadFromFile&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 파일에서 해시를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f102025d5e92b11d0e2dd4fde47e0c4d6fcab6a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.loadfromstring&quot;&gt;QuickHashIntHash::loadFromString&lt;/a&gt; &amp;mdash; This factory method creates a hash from a string</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.loadfromstring&quot;&gt;QuickHashIntHash :: loadFromString&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 문자열에서 해시를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8777c33978a671f4a39d59227443e95e89d76b05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.savetofile&quot;&gt;QuickHashIntHash::saveToFile&lt;/a&gt; &amp;mdash; This method stores an in-memory hash to disk</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.savetofile&quot;&gt;QuickHashIntHash :: saveToFile&lt;/a&gt; &amp;mdash;이 메소드는 메모리에 해시를 디스크에 저장합니다</target>
        </trans-unit>
        <trans-unit id="151cd00d9fbf43aa67a4bf589648aa3fd753ce9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.savetostring&quot;&gt;QuickHashIntHash::saveToString&lt;/a&gt; &amp;mdash; This method returns a serialized version of the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.savetostring&quot;&gt;QuickHashIntHash :: saveToString&lt;/a&gt; &amp;mdash;이 메소드는 직렬화 된 버전의 해시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d542b48ce511d78649cc56d2db8e753837523e26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.set&quot;&gt;QuickHashIntHash::set&lt;/a&gt; &amp;mdash; This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.set&quot;&gt;QuickHashIntHash :: set&lt;/a&gt; &amp;mdash;이 메소드는 해시의 항목을 새 값으로 업데이트하거나 해당 항목이 없으면 새 항목을 추가합니다</target>
        </trans-unit>
        <trans-unit id="81acd1de2a49a764cba80e86ea0b8752bdd0be16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashinthash.update&quot;&gt;QuickHashIntHash::update&lt;/a&gt; &amp;mdash; This method updates an entry in the hash with a new value</source>
          <target state="translated">&lt;a href=&quot;quickhashinthash.update&quot;&gt;QuickHashIntHash :: update&lt;/a&gt; &amp;mdash;이 메소드는 해시의 엔트리를 새로운 값으로 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="9c148a42028b1ab4bd7d1711e5329e40a65f0406" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.add&quot;&gt;QuickHashIntSet::add&lt;/a&gt; &amp;mdash; This method adds a new entry to the set</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.add&quot;&gt;QuickHashIntSet :: add&lt;/a&gt; &amp;mdash;이 메소드는 세트에 새로운 엔트리를 추가합니다</target>
        </trans-unit>
        <trans-unit id="1c14bc92d89cdd98ee5204254a82dc7e645e43b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.construct&quot;&gt;QuickHashIntSet::__construct&lt;/a&gt; &amp;mdash; Creates a new QuickHashIntSet object</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.construct&quot;&gt;QuickHashIntSet :: __ construct&lt;/a&gt; &amp;mdash; 새로운 QuickHashIntSet 객체를 생성</target>
        </trans-unit>
        <trans-unit id="63c574dea99bf50fd7106ab9e591ca0d821701c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.delete&quot;&gt;QuickHashIntSet::delete&lt;/a&gt; &amp;mdash; This method deletes an entry from the set</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.delete&quot;&gt;QuickHashIntSet :: delete&lt;/a&gt; &amp;mdash;이 메소드는 세트에서 엔트리를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="8256ddfdfeaabdafaba519bfc4f0f0db7d3d4e3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.exists&quot;&gt;QuickHashIntSet::exists&lt;/a&gt; &amp;mdash; This method checks whether a key is part of the set</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.exists&quot;&gt;QuickHashIntSet :: exists&lt;/a&gt; &amp;mdash;이 메소드는 키가 세트의 일부인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1cfc4edc4b45bb1a606d9e3cdfcbf473b68116dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.getsize&quot;&gt;QuickHashIntSet::getSize&lt;/a&gt; &amp;mdash; Returns the number of elements in the set</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.getsize&quot;&gt;QuickHashIntSet :: getSize&lt;/a&gt; &amp;mdash; 세트의 요소 수를 반환</target>
        </trans-unit>
        <trans-unit id="e5551fcd6c567e5002f4c3da204cda1881ba6673" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.loadfromfile&quot;&gt;QuickHashIntSet::loadFromFile&lt;/a&gt; &amp;mdash; This factory method creates a set from a file</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.loadfromfile&quot;&gt;QuickHashIntSet :: loadFromFile&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 파일에서 세트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="faa2afd22bb3bbf37e755448378f1d33d631b3e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.loadfromstring&quot;&gt;QuickHashIntSet::loadFromString&lt;/a&gt; &amp;mdash; This factory method creates a set from a string</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.loadfromstring&quot;&gt;QuickHashIntSet :: loadFromString&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 문자열에서 세트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b1abcf6bf7929280f16decf490e30928d00dee24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.savetofile&quot;&gt;QuickHashIntSet::saveToFile&lt;/a&gt; &amp;mdash; This method stores an in-memory set to disk</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.savetofile&quot;&gt;QuickHashIntSet :: saveToFile&lt;/a&gt; &amp;mdash;이 메소드는 인 메모리 세트를 디스크에 저장합니다</target>
        </trans-unit>
        <trans-unit id="581ec9c82d1255bbba86c1a07c4db15be2dcfe46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintset.savetostring&quot;&gt;QuickHashIntSet::saveToString&lt;/a&gt; &amp;mdash; This method returns a serialized version of the set</source>
          <target state="translated">&lt;a href=&quot;quickhashintset.savetostring&quot;&gt;QuickHashIntSet :: saveToString&lt;/a&gt; &amp;mdash;이 메소드는 직렬화 된 버전의 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="942625b740ea8b822d5cde18436e03af0df1ac4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.add&quot;&gt;QuickHashIntStringHash::add&lt;/a&gt; &amp;mdash; This method adds a new entry to the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.add&quot;&gt;QuickHashIntStringHash :: add&lt;/a&gt; &amp;mdash;이 메소드는 해시에 새로운 엔트리를 추가합니다</target>
        </trans-unit>
        <trans-unit id="f5aa7b149980edb8e9abe73dc4580671d482c33f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.construct&quot;&gt;QuickHashIntStringHash::__construct&lt;/a&gt; &amp;mdash; Creates a new QuickHashIntStringHash object</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.construct&quot;&gt;QuickHashIntStringHash :: __ construct&lt;/a&gt; &amp;mdash; 새로운 QuickHashIntStringHash 객체를 생성</target>
        </trans-unit>
        <trans-unit id="ddc3ca1f7a229120256628b6a78487f8afec4a57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.delete&quot;&gt;QuickHashIntStringHash::delete&lt;/a&gt; &amp;mdash; This method deletes am entry from the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.delete&quot;&gt;QuickHashIntStringHash :: delete&lt;/a&gt; &amp;mdash;이 메소드는 해시에서 am 항목을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="bfea1650d099dc69029e0134bbcbae589e60c8a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.exists&quot;&gt;QuickHashIntStringHash::exists&lt;/a&gt; &amp;mdash; This method checks whether a key is part of the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.exists&quot;&gt;QuickHashIntStringHash :: exists&lt;/a&gt; &amp;mdash;이 메소드는 키가 해시의 일부인지 확인합니다</target>
        </trans-unit>
        <trans-unit id="e0deda852812205d91d628b36d2365cb20f7856c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.get&quot;&gt;QuickHashIntStringHash::get&lt;/a&gt; &amp;mdash; This method retrieves a value from the hash by its key</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.get&quot;&gt;QuickHashIntStringHash :: get&lt;/a&gt; &amp;mdash;이 메소드는 키로 해시에서 값을 검색합니다</target>
        </trans-unit>
        <trans-unit id="5de06c169911fdfd67fd31abfa4678b7e5c30391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.getsize&quot;&gt;QuickHashIntStringHash::getSize&lt;/a&gt; &amp;mdash; Returns the number of elements in the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.getsize&quot;&gt;QuickHashIntStringHash :: getSize&lt;/a&gt; &amp;mdash; 해시의 요소 수를 반환</target>
        </trans-unit>
        <trans-unit id="204a48f925032fd6b1272f662349a3a4e8e644b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.loadfromfile&quot;&gt;QuickHashIntStringHash::loadFromFile&lt;/a&gt; &amp;mdash; This factory method creates a hash from a file</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.loadfromfile&quot;&gt;QuickHashIntStringHash :: loadFromFile&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 파일에서 해시를 작성합니다</target>
        </trans-unit>
        <trans-unit id="f1fdfae77c8870177bf4eaf7e091de1eca121350" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.loadfromstring&quot;&gt;QuickHashIntStringHash::loadFromString&lt;/a&gt; &amp;mdash; This factory method creates a hash from a string</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.loadfromstring&quot;&gt;QuickHashIntStringHash :: loadFromString&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 문자열에서 해시를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9e472f717970b344c7bf0ce50014ef4b7637f253" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.savetofile&quot;&gt;QuickHashIntStringHash::saveToFile&lt;/a&gt; &amp;mdash; This method stores an in-memory hash to disk</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.savetofile&quot;&gt;QuickHashIntStringHash :: saveToFile&lt;/a&gt; &amp;mdash;이 메소드는 메모리에 해시를 디스크에 저장합니다</target>
        </trans-unit>
        <trans-unit id="016e2b704ea5d56ed7dea0370ea118529d81436a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.savetostring&quot;&gt;QuickHashIntStringHash::saveToString&lt;/a&gt; &amp;mdash; This method returns a serialized version of the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.savetostring&quot;&gt;QuickHashIntStringHash :: saveToString&lt;/a&gt; &amp;mdash;이 메소드는 직렬화 된 버전의 해시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="99ab4cfb19fd5fe8f6b49053d4992adc23ab39ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.set&quot;&gt;QuickHashIntStringHash::set&lt;/a&gt; &amp;mdash; This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.set&quot;&gt;QuickHashIntStringHash :: set&lt;/a&gt; &amp;mdash;이 메소드는 해시의 항목을 새 값으로 업데이트하거나 해당 항목이 없으면 새 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="d446ebd9bdf0a66cee01d2abb294d3d6ce7235d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashintstringhash.update&quot;&gt;QuickHashIntStringHash::update&lt;/a&gt; &amp;mdash; This method updates an entry in the hash with a new value</source>
          <target state="translated">&lt;a href=&quot;quickhashintstringhash.update&quot;&gt;QuickHashIntStringHash :: update&lt;/a&gt; &amp;mdash;이 메소드는 해시의 엔트리를 새로운 값으로 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="7f66ab5424c4f20bdb44da26074cd6e4de01d773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.add&quot;&gt;QuickHashStringIntHash::add&lt;/a&gt; &amp;mdash; This method adds a new entry to the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.add&quot;&gt;QuickHashStringIntHash :: add&lt;/a&gt; &amp;mdash;이 메소드는 해시에 새로운 엔트리를 추가합니다</target>
        </trans-unit>
        <trans-unit id="52a14ef7cb1f3758824330a201319848a2563fbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.construct&quot;&gt;QuickHashStringIntHash::__construct&lt;/a&gt; &amp;mdash; Creates a new QuickHashStringIntHash object</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.construct&quot;&gt;QuickHashStringIntHash :: __ construct&lt;/a&gt; &amp;mdash; 새로운 QuickHashStringIntHash 객체를 생성</target>
        </trans-unit>
        <trans-unit id="43dd2b41bb8058da9e848f46573fab36ce296218" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.delete&quot;&gt;QuickHashStringIntHash::delete&lt;/a&gt; &amp;mdash; This method deletes am entry from the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.delete&quot;&gt;QuickHashStringIntHash :: delete&lt;/a&gt; &amp;mdash;이 메소드는 해시에서 am 항목을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="71cc57bea1960135dcd814bd4e2b6eb5a46cd017" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.exists&quot;&gt;QuickHashStringIntHash::exists&lt;/a&gt; &amp;mdash; This method checks whether a key is part of the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.exists&quot;&gt;QuickHashStringIntHash :: exists&lt;/a&gt; &amp;mdash;이 메소드는 키가 해시의 일부인지 확인합니다</target>
        </trans-unit>
        <trans-unit id="d689687f135a2f7cdb37d9eca7473210605cf173" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.get&quot;&gt;QuickHashStringIntHash::get&lt;/a&gt; &amp;mdash; This method retrieves a value from the hash by its key</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.get&quot;&gt;QuickHashStringIntHash :: get&lt;/a&gt; &amp;mdash;이 메소드는 키로 해시에서 값을 검색합니다</target>
        </trans-unit>
        <trans-unit id="2fd3a26383883a403ebae6d969dd8812de000fa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.getsize&quot;&gt;QuickHashStringIntHash::getSize&lt;/a&gt; &amp;mdash; Returns the number of elements in the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.getsize&quot;&gt;QuickHashStringIntHash :: getSize&lt;/a&gt; &amp;mdash; 해시의 요소 수를 반환</target>
        </trans-unit>
        <trans-unit id="cd20f3425ef4a72c60879ab50b28d1fed51560ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.loadfromfile&quot;&gt;QuickHashStringIntHash::loadFromFile&lt;/a&gt; &amp;mdash; This factory method creates a hash from a file</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.loadfromfile&quot;&gt;QuickHashStringIntHash :: loadFromFile&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 파일에서 해시를 작성합니다</target>
        </trans-unit>
        <trans-unit id="ebe50969777e0133f4d2dd1294af1bf57d256262" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.loadfromstring&quot;&gt;QuickHashStringIntHash::loadFromString&lt;/a&gt; &amp;mdash; This factory method creates a hash from a string</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.loadfromstring&quot;&gt;QuickHashStringIntHash :: loadFromString&lt;/a&gt; &amp;mdash;이 팩토리 메소드는 문자열에서 해시를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="0b30350796bd858d0156abdb263b9c16fa0f11c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.savetofile&quot;&gt;QuickHashStringIntHash::saveToFile&lt;/a&gt; &amp;mdash; This method stores an in-memory hash to disk</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.savetofile&quot;&gt;QuickHashStringIntHash :: saveToFile&lt;/a&gt; &amp;mdash;이 메소드는 메모리에 해시를 디스크에 저장합니다</target>
        </trans-unit>
        <trans-unit id="bffd6e5e4f2d712d44bc31bca82225c6f7c98ea9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.savetostring&quot;&gt;QuickHashStringIntHash::saveToString&lt;/a&gt; &amp;mdash; This method returns a serialized version of the hash</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.savetostring&quot;&gt;QuickHashStringIntHash :: saveToString&lt;/a&gt; &amp;mdash;이 메소드는 직렬화 된 버전의 해시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ec711fbcbec74a563136fb734143eac53add9360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.set&quot;&gt;QuickHashStringIntHash::set&lt;/a&gt; &amp;mdash; This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.set&quot;&gt;QuickHashStringIntHash :: set&lt;/a&gt; &amp;mdash;이 메소드는 해시의 항목을 새로운 값으로 업데이트하거나 해당 항목이없는 경우 새 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="c43d6ab3d6fff1987c8d10d15a43f57f5ed6c384" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quickhashstringinthash.update&quot;&gt;QuickHashStringIntHash::update&lt;/a&gt; &amp;mdash; This method updates an entry in the hash with a new value</source>
          <target state="translated">&lt;a href=&quot;quickhashstringinthash.update&quot;&gt;QuickHashStringIntHash :: update&lt;/a&gt; &amp;mdash;이 메소드는 해시의 엔트리를 새로운 값으로 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="0f290ffd22582dd3d37d2469a981f87f22302203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.close&quot;&gt;RarArchive::close&lt;/a&gt; &amp;mdash; Close RAR archive and free all resources</source>
          <target state="translated">&lt;a href=&quot;rararchive.close&quot;&gt;RarArchive :: close&lt;/a&gt; &amp;mdash; RAR 아카이브를 닫고 모든 리소스를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="82e44e2285bdb62a82553af10a150a946d570419" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.getcomment&quot;&gt;RarArchive::getComment&lt;/a&gt; &amp;mdash; Get comment text from the RAR archive</source>
          <target state="translated">&lt;a href=&quot;rararchive.getcomment&quot;&gt;RarArchive :: getComment&lt;/a&gt; &amp;mdash; RAR 아카이브에서 주석 텍스트 가져 오기</target>
        </trans-unit>
        <trans-unit id="becb95b0b62659a4b15b05e4f7a1ed6733f99b9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.getentries&quot;&gt;RarArchive::getEntries()&lt;/a&gt; - Get full list of entries from the RAR archive</source>
          <target state="translated">&lt;a href=&quot;rararchive.getentries&quot;&gt;RarArchive :: getEntries ()-RAR&lt;/a&gt; 아카이브에서 전체 항목 목록 가져 오기</target>
        </trans-unit>
        <trans-unit id="8de185d8a9fc2acb4c96c0d86e9adebd60e6a652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.getentries&quot;&gt;RarArchive::getEntries&lt;/a&gt; &amp;mdash; Get full list of entries from the RAR archive</source>
          <target state="translated">&lt;a href=&quot;rararchive.getentries&quot;&gt;RarArchive :: getEntries&lt;/a&gt; &amp;mdash; RAR 아카이브에서 전체 항목 목록 가져 오기</target>
        </trans-unit>
        <trans-unit id="b94e199826d22ba15c8b73f8bc683006fbe570da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.getentry&quot;&gt;RarArchive::getEntry()&lt;/a&gt; - Get entry object from the RAR archive</source>
          <target state="translated">&lt;a href=&quot;rararchive.getentry&quot;&gt;RarArchive :: getEntry ()-RAR&lt;/a&gt; 아카이브에서 항목 객체 가져 오기</target>
        </trans-unit>
        <trans-unit id="784c9d5b91a2c2ee102256097d66f7c5ca37c875" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.getentry&quot;&gt;RarArchive::getEntry&lt;/a&gt; &amp;mdash; Get entry object from the RAR archive</source>
          <target state="translated">&lt;a href=&quot;rararchive.getentry&quot;&gt;RarArchive :: getEntry&lt;/a&gt; &amp;mdash; RAR 아카이브에서 항목 객체 가져 오기</target>
        </trans-unit>
        <trans-unit id="5076d57272502e20e07c2b7ec9e61d957ac900e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.isbroken&quot;&gt;RarArchive::isBroken()&lt;/a&gt; - Test whether an archive is broken (incomplete)</source>
          <target state="translated">&lt;a href=&quot;rararchive.isbroken&quot;&gt;RarArchive :: isBroken ()&lt;/a&gt; -아카이브가 손상되었는지 테스트합니다 (불완전).</target>
        </trans-unit>
        <trans-unit id="863474b88f2843a3184070e146c6e8cc0555b54a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.isbroken&quot;&gt;RarArchive::isBroken&lt;/a&gt; &amp;mdash; Test whether an archive is broken (incomplete)</source>
          <target state="translated">&lt;a href=&quot;rararchive.isbroken&quot;&gt;RarArchive :: isBroken&lt;/a&gt; &amp;mdash; 아카이브가 손상되었는지 여부를 테스트합니다 (불완전).</target>
        </trans-unit>
        <trans-unit id="38455d877bcc350f09009d4e9fa5303fdba527a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.issolid&quot;&gt;RarArchive::isSolid&lt;/a&gt; &amp;mdash; Check whether the RAR archive is solid</source>
          <target state="translated">&lt;a href=&quot;rararchive.issolid&quot;&gt;RarArchive :: isSolid&lt;/a&gt; &amp;mdash; RAR 아카이브가 솔리드인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9b6873b503bcd58985a69f523d58be1a51fea531" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.open&quot;&gt;RarArchive::open&lt;/a&gt; &amp;mdash; Open RAR archive</source>
          <target state="translated">&lt;a href=&quot;rararchive.open&quot;&gt;RarArchive :: open&lt;/a&gt; &amp;mdash; RAR 아카이브 열기</target>
        </trans-unit>
        <trans-unit id="df2bb99f08e40be6743ca89d859d33465fc1746d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.setallowbroken&quot;&gt;RarArchive::setAllowBroken()&lt;/a&gt; - Whether opening broken archives is allowed</source>
          <target state="translated">&lt;a href=&quot;rararchive.setallowbroken&quot;&gt;RarArchive :: setAllowBroken ()&lt;/a&gt; -깨진 아카이브 열기 허용 여부</target>
        </trans-unit>
        <trans-unit id="521d65b6af295fa3bca37584fe56cff92c13c7d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.setallowbroken&quot;&gt;RarArchive::setAllowBroken&lt;/a&gt; &amp;mdash; Whether opening broken archives is allowed</source>
          <target state="translated">&lt;a href=&quot;rararchive.setallowbroken&quot;&gt;RarArchive :: setAllowBroken&lt;/a&gt; &amp;mdash; 깨진 아카이브 열기 허용 여부</target>
        </trans-unit>
        <trans-unit id="d8aeb3066cab4a7daeb10734dcb9a00062522ca2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rararchive.tostring&quot;&gt;RarArchive::__toString&lt;/a&gt; &amp;mdash; Get text representation</source>
          <target state="translated">&lt;a href=&quot;rararchive.tostring&quot;&gt;RarArchive :: __ toString&lt;/a&gt; &amp;mdash; 텍스트 표현 얻기</target>
        </trans-unit>
        <trans-unit id="0d0a927db4553b86251da4ed81832d36931c1e28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.extract&quot;&gt;RarEntry::extract()&lt;/a&gt; - Extract entry from the archive</source>
          <target state="translated">&lt;a href=&quot;rarentry.extract&quot;&gt;RarEntry :: extract ()&lt;/a&gt; -아카이브에서 항목 추출</target>
        </trans-unit>
        <trans-unit id="b1d50956457ca88a623ccddefa0a13a8e4bb092b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.extract&quot;&gt;RarEntry::extract&lt;/a&gt; &amp;mdash; Extract entry from the archive</source>
          <target state="translated">&lt;a href=&quot;rarentry.extract&quot;&gt;RarEntry :: extract&lt;/a&gt; &amp;mdash; 아카이브에서 항목 추출</target>
        </trans-unit>
        <trans-unit id="915fcab71ff76c479a8d106d4cc788cbb885c582" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr&lt;/a&gt; &amp;mdash; Get attributes of the entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr&lt;/a&gt; &amp;mdash; 항목의 속성 가져 오기</target>
        </trans-unit>
        <trans-unit id="97865f6a13c967092d83a7b9c9e470b650e68086" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getcrc&quot;&gt;RarEntry::getCrc&lt;/a&gt; &amp;mdash; Get CRC of the entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getcrc&quot;&gt;RarEntry :: getCrc&lt;/a&gt; &amp;mdash; 항목의 CRC 가져 오기</target>
        </trans-unit>
        <trans-unit id="c01cfff8ead4ea725a71c82e251b315a033edd19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getfiletime&quot;&gt;RarEntry::getFileTime&lt;/a&gt; &amp;mdash; Get entry last modification time</source>
          <target state="translated">&lt;a href=&quot;rarentry.getfiletime&quot;&gt;RarEntry :: getFileTime&lt;/a&gt; &amp;mdash; 마지막 수정 시간 항목 가져 오기</target>
        </trans-unit>
        <trans-unit id="abd2abd86158110203fe00c1b412fd09f6679da4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.gethostos&quot;&gt;RarEntry::getHostOs()&lt;/a&gt; - Get entry host OS</source>
          <target state="translated">&lt;a href=&quot;rarentry.gethostos&quot;&gt;RarEntry :: getHostOs ()&lt;/a&gt; -항목 호스트 OS 가져 오기</target>
        </trans-unit>
        <trans-unit id="c68cff88a8842abac00f09e22a2e0e57e6168580" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.gethostos&quot;&gt;RarEntry::getHostOs&lt;/a&gt; &amp;mdash; Get entry host OS</source>
          <target state="translated">&lt;a href=&quot;rarentry.gethostos&quot;&gt;RarEntry :: getHostOs&lt;/a&gt; &amp;mdash; 엔트리 호스트 OS 얻기</target>
        </trans-unit>
        <trans-unit id="ebe6b34a299fd0cadac94d6c91c5517cf04410d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getmethod&quot;&gt;RarEntry::getMethod&lt;/a&gt; &amp;mdash; Get pack method of the entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getmethod&quot;&gt;RarEntry :: getMethod&lt;/a&gt; &amp;mdash; 항목의 팩 메소드 가져 오기</target>
        </trans-unit>
        <trans-unit id="38a522014bafc21d75e4195fd074994374a1f389" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getname&quot;&gt;RarEntry::getName&lt;/a&gt; &amp;mdash; Get name of the entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getname&quot;&gt;RarEntry :: getName&lt;/a&gt; &amp;mdash; 항목 이름 가져 오기</target>
        </trans-unit>
        <trans-unit id="abf224082d93ea521c09d587564cd0024f93628d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getpackedsize&quot;&gt;RarEntry::getPackedSize&lt;/a&gt; &amp;mdash; Get packed size of the entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getpackedsize&quot;&gt;RarEntry :: getPackedSize&lt;/a&gt; &amp;mdash; 항목의 압축 된 크기 가져 오기</target>
        </trans-unit>
        <trans-unit id="cbeb6a64b4224176eb730c32f01a1d5592266d07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getstream&quot;&gt;RarEntry::getStream()&lt;/a&gt; - Get file handler for entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getstream&quot;&gt;RarEntry :: getStream ()&lt;/a&gt; -항목에 대한 파일 핸들러 가져 오기</target>
        </trans-unit>
        <trans-unit id="46908cd2c512841a998651572eeda8f1f2bc2d88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getstream&quot;&gt;RarEntry::getStream&lt;/a&gt; &amp;mdash; Get file handler for entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getstream&quot;&gt;RarEntry :: getStream&lt;/a&gt; &amp;mdash; 항목에 대한 파일 핸들러 가져 오기</target>
        </trans-unit>
        <trans-unit id="0afd354a6560625e32b3939f351e3145409c2937" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getunpackedsize&quot;&gt;RarEntry::getUnpackedSize&lt;/a&gt; &amp;mdash; Get unpacked size of the entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getunpackedsize&quot;&gt;RarEntry :: getUnpackedSize&lt;/a&gt; &amp;mdash; 항목의 압축을 푼 크기를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="71070f936ee9fa4b030b309452fa182d2b826f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.getversion&quot;&gt;RarEntry::getVersion&lt;/a&gt; &amp;mdash; Get minimum version of RAR program required to unpack the entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.getversion&quot;&gt;RarEntry :: getVersion&lt;/a&gt; &amp;mdash; 항목의 압축을 푸는 데 필요한 최소 버전의 RAR 프로그램을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d97f2ad02d04e8feb783fa9ed008aed490ba8777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry::isDirectory&lt;/a&gt; &amp;mdash; Test whether an entry represents a directory</source>
          <target state="translated">&lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry :: isDirectory&lt;/a&gt; &amp;mdash; 항목이 디렉토리를 나타내는 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="814bdfe7f8f32a7f7b9615539b328b0db670b6aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.isencrypted&quot;&gt;RarEntry::isEncrypted&lt;/a&gt; &amp;mdash; Test whether an entry is encrypted</source>
          <target state="translated">&lt;a href=&quot;rarentry.isencrypted&quot;&gt;RarEntry :: isEncrypted&lt;/a&gt; &amp;mdash; 항목이 암호화되었는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="b74e3b664a9a25ae392be56fdcf2428c8cff2d11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarentry.tostring&quot;&gt;RarEntry::__toString&lt;/a&gt; &amp;mdash; Get text representation of entry</source>
          <target state="translated">&lt;a href=&quot;rarentry.tostring&quot;&gt;RarEntry :: __ toString&lt;/a&gt; &amp;mdash; 항목의 텍스트 표현 가져 오기</target>
        </trans-unit>
        <trans-unit id="816743a23dcb67348c15e24e1c5698179122578a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarexception.isusingexceptions&quot;&gt;RarException::isUsingExceptions()&lt;/a&gt; - Check whether error handling with exceptions is in use</source>
          <target state="translated">&lt;a href=&quot;rarexception.isusingexceptions&quot;&gt;RarException :: isUsingExceptions ()&lt;/a&gt; -예외가있는 오류 처리가 사용 중인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4e3ac7b38999ae7051f69f347148b43ba4d902ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarexception.isusingexceptions&quot;&gt;RarException::isUsingExceptions&lt;/a&gt; &amp;mdash; Check whether error handling with exceptions is in use</source>
          <target state="translated">&lt;a href=&quot;rarexception.isusingexceptions&quot;&gt;RarException :: isUsingExceptions&lt;/a&gt; &amp;mdash; 예외가있는 오류 처리가 사용 중인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="152aa80cf6f02d0c8aeda95fb7b7ff11f77da613" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarexception.setusingexceptions&quot;&gt;RarException::setUsingExceptions()&lt;/a&gt; - Activate and deactivate error handling with exceptions</source>
          <target state="translated">&lt;a href=&quot;rarexception.setusingexceptions&quot;&gt;RarException :: setUsingExceptions ()&lt;/a&gt; -예외가있는 오류 처리 활성화 및 비활성화</target>
        </trans-unit>
        <trans-unit id="be8a7fed141129671df37412483defe8f2d205a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rarexception.setusingexceptions&quot;&gt;RarException::setUsingExceptions&lt;/a&gt; &amp;mdash; Activate and deactivate error handling with exceptions</source>
          <target state="translated">&lt;a href=&quot;rarexception.setusingexceptions&quot;&gt;RarException :: setUsingExceptions&lt;/a&gt; &amp;mdash; 예외가있는 오류 처리 활성화 및 비활성화</target>
        </trans-unit>
        <trans-unit id="ef7a1d4d49f0de2b0940436f390ee095f4629349" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivearrayiterator.getchildren&quot;&gt;RecursiveArrayIterator::getChildren()&lt;/a&gt; - Returns an iterator for the current entry if it is an array or an object</source>
          <target state="translated">&lt;a href=&quot;recursivearrayiterator.getchildren&quot;&gt;RecursiveArrayIterator :: getChildren ()&lt;/a&gt; -배열 또는 객체 인 경우 현재 항목의 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="be1ed3cbc288f43b25718016ec83af2b63e17511" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivearrayiterator.getchildren&quot;&gt;RecursiveArrayIterator::getChildren&lt;/a&gt; &amp;mdash; Returns an iterator for the current entry if it is an array or an object</source>
          <target state="translated">&lt;a href=&quot;recursivearrayiterator.getchildren&quot;&gt;RecursiveArrayIterator :: getChildren&lt;/a&gt; &amp;mdash; 배열 또는 객체 인 경우 현재 항목의 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1f840332f983ff1dd6d41718009cdd2a5262072" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivearrayiterator.haschildren&quot;&gt;RecursiveArrayIterator::hasChildren()&lt;/a&gt; - Returns whether current entry is an array or an object</source>
          <target state="translated">&lt;a href=&quot;recursivearrayiterator.haschildren&quot;&gt;RecursiveArrayIterator :: hasChildren ()&lt;/a&gt; -현재 엔트리가 배열인지 객체인지를 반환</target>
        </trans-unit>
        <trans-unit id="c38f31f63187ad397f3688a43d90bbb38fed3ec7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivearrayiterator.haschildren&quot;&gt;RecursiveArrayIterator::hasChildren&lt;/a&gt; &amp;mdash; Returns whether current entry is an array or an object</source>
          <target state="translated">&lt;a href=&quot;recursivearrayiterator.haschildren&quot;&gt;RecursiveArrayIterator :: hasChildren&lt;/a&gt; &amp;mdash; 현재 엔트리가 배열인지 객체인지를 반환</target>
        </trans-unit>
        <trans-unit id="db90f7fe4434e186ca104777407b2b6e312b56b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecachingiterator.construct&quot;&gt;RecursiveCachingIterator::__construct&lt;/a&gt; &amp;mdash; Construct</source>
          <target state="translated">&lt;a href=&quot;recursivecachingiterator.construct&quot;&gt;RecursiveCachingIterator :: __ construct&lt;/a&gt; &amp;mdash; 구성</target>
        </trans-unit>
        <trans-unit id="6ae44fec96dd48607a83569518205e7589f9015d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecachingiterator.getchildren&quot;&gt;RecursiveCachingIterator::getChildren&lt;/a&gt; &amp;mdash; Return the inner iterator's children as a RecursiveCachingIterator</source>
          <target state="translated">&lt;a href=&quot;recursivecachingiterator.getchildren&quot;&gt;RecursiveCachingIterator :: getChildren&lt;/a&gt; &amp;mdash; 내부 반복자의 자식을 RecursiveCachingIterator로 반환</target>
        </trans-unit>
        <trans-unit id="70fa361ece53ee93516a289851eb61fa5b5c5788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecachingiterator.haschildren&quot;&gt;RecursiveCachingIterator::hasChildren&lt;/a&gt; &amp;mdash; Check whether the current element of the inner iterator has children</source>
          <target state="translated">&lt;a href=&quot;recursivecachingiterator.haschildren&quot;&gt;RecursiveCachingIterator :: hasChildren&lt;/a&gt; &amp;mdash; 내부 이터레이터의 현재 요소에 자식이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="4e6e3f9434063836a34e7f74fbff25d97744bae1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.construct&quot;&gt;RecursiveCallbackFilterIterator::__construct()&lt;/a&gt; - Create a RecursiveCallbackFilterIterator from a RecursiveIterator</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.construct&quot;&gt;RecursiveCallbackFilterIterator :: __ construct ()&lt;/a&gt; -RecursiveIterator에서 RecursiveCallbackFilterIterator 만들기</target>
        </trans-unit>
        <trans-unit id="8b5ddac654a9a78b0c793ce88b3b2b0e5a97308d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.construct&quot;&gt;RecursiveCallbackFilterIterator::__construct&lt;/a&gt; &amp;mdash; Create a RecursiveCallbackFilterIterator from a RecursiveIterator</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.construct&quot;&gt;RecursiveCallbackFilterIterator :: __ construct&lt;/a&gt; &amp;mdash; RecursiveIterator에서 RecursiveCallbackFilterIterator를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a4ef8064c4db03c37eb64f4e35712039fae9331d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.getchildren&quot;&gt;RecursiveCallbackFilterIterator::getChildren()&lt;/a&gt; - Return the inner iterator's children contained in a RecursiveCallbackFilterIterator</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.getchildren&quot;&gt;RecursiveCallbackFilterIterator :: getChildren ()-RecursiveCallbackFilterIterator에&lt;/a&gt; 포함 된 내부 반복자의 자식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8ff5e315ccfb72097acb63df5056a0d6bdb1c052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.getchildren&quot;&gt;RecursiveCallbackFilterIterator::getChildren&lt;/a&gt; &amp;mdash; Return the inner iterator's children contained in a RecursiveCallbackFilterIterator</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.getchildren&quot;&gt;RecursiveCallbackFilterIterator :: getChildren&lt;/a&gt; &amp;mdash; RecursiveCallbackFilterIterator에 포함 된 내부 반복자의 자식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="206e799b1934af0f8340d6c55c5f0c7174a85107" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.getchildren&quot;&gt;RecursiveCallbackFilteriterator::getChildren()&lt;/a&gt; - Return the inner iterator's children contained in a RecursiveCallbackFilterIterator</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.getchildren&quot;&gt;RecursiveCallbackFilteriterator :: getChildren ()-RecursiveCallbackFilterIterator에&lt;/a&gt; 포함 된 내부 반복자의 자식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f628641e9a1820d6520d6b7010017b52c2d1fef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.haschildren&quot;&gt;RecursiveCallbackFilterIterator::hasChildren()&lt;/a&gt; should be used to determine if there are children to be fetched.</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.haschildren&quot;&gt;&lt;/a&gt;가져올 하위 항목이 있는지 확인하려면 RecursiveCallbackFilterIterator :: hasChildren ()을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="abc8162669460cbbcd2830235f81c5e95bf74b21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.haschildren&quot;&gt;RecursiveCallbackFilterIterator::hasChildren&lt;/a&gt; &amp;mdash; Check whether the inner iterator's current element has children</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.haschildren&quot;&gt;RecursiveCallbackFilterIterator :: hasChildren&lt;/a&gt; &amp;mdash; 내부 이터레이터의 현재 요소에 자식이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="df30f1897b77006f8c979242f57977faee8ead5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivecallbackfilteriterator.haschildren&quot;&gt;RecursiveCallbackFilteriterator::hasChildren()&lt;/a&gt; - Check whether the inner iterator's current element has children</source>
          <target state="translated">&lt;a href=&quot;recursivecallbackfilteriterator.haschildren&quot;&gt;RecursiveCallbackFilteriterator :: hasChildren ()&lt;/a&gt; -내부 이터레이터의 현재 요소에 자식이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="9fec032a7943846223e7a5ee7819de8c13276308" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.construct&quot;&gt;RecursiveDirectoryIterator::__construct&lt;/a&gt; &amp;mdash; Constructs a RecursiveDirectoryIterator</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.construct&quot;&gt;RecursiveDirectoryIterator :: __ construct&lt;/a&gt; &amp;mdash; RecursiveDirectoryIterator를 생성</target>
        </trans-unit>
        <trans-unit id="d3e13155f66977b9b7e8e1ebf5c123b15798ac64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.getchildren&quot;&gt;RecursiveDirectoryIterator::getChildren&lt;/a&gt; &amp;mdash; Returns an iterator for the current entry if it is a directory</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.getchildren&quot;&gt;RecursiveDirectoryIterator :: getChildren&lt;/a&gt; &amp;mdash; 디렉토리 인 경우 현재 항목의 반복자를 반환</target>
        </trans-unit>
        <trans-unit id="1cc1723a765bbe86d743c86a049f7e7215323ca1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.getsubpath&quot;&gt;RecursiveDirectoryIterator::getSubPath()&lt;/a&gt; - Get sub path</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.getsubpath&quot;&gt;RecursiveDirectoryIterator :: getSubPath ()&lt;/a&gt; -하위 경로 가져 오기</target>
        </trans-unit>
        <trans-unit id="268ef08c27f5fe7680cd72f2edd05d80a66f10f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.getsubpath&quot;&gt;RecursiveDirectoryIterator::getSubPath&lt;/a&gt; &amp;mdash; Get sub path</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.getsubpath&quot;&gt;RecursiveDirectoryIterator :: getSubPath&lt;/a&gt; &amp;mdash; 하위 경로 얻기</target>
        </trans-unit>
        <trans-unit id="7b58f1e5704f3d8d747c3015948b3d2e32905f40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.getsubpathname&quot;&gt;RecursiveDirectoryIterator::getSubPathName()&lt;/a&gt; - Get sub path and name</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.getsubpathname&quot;&gt;RecursiveDirectoryIterator :: getSubPathName ()&lt;/a&gt; -하위 경로 및 이름 가져 오기</target>
        </trans-unit>
        <trans-unit id="3e0cfaf043313218f6a4345dc6be7e27a48f36c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.getsubpathname&quot;&gt;RecursiveDirectoryIterator::getSubPathname&lt;/a&gt; &amp;mdash; Get sub path and name</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.getsubpathname&quot;&gt;RecursiveDirectoryIterator :: getSubPathname&lt;/a&gt; &amp;mdash; 서브 경로와 이름을 얻는다</target>
        </trans-unit>
        <trans-unit id="53b54f0672fb01df84a2dd1a8c51cdb94bac3916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.haschildren&quot;&gt;RecursiveDirectoryIterator::hasChildren&lt;/a&gt; &amp;mdash; Returns whether current entry is a directory and not '.' or '..'</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.haschildren&quot;&gt;RecursiveDirectoryIterator :: hasChildren&lt;/a&gt; &amp;mdash; 현재 항목이 '.'이 아닌 디렉토리인지 여부를 반환합니다. 또는 '..'</target>
        </trans-unit>
        <trans-unit id="a1b6d4fe5f0258ae80b76041e62d2fcfd83f1d6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.key&quot;&gt;RecursiveDirectoryIterator::key()&lt;/a&gt; - Return path and filename of current dir entry</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.key&quot;&gt;RecursiveDirectoryIterator :: key ()&lt;/a&gt; -현재 디렉토리 항목의 리턴 경로 및 파일 이름</target>
        </trans-unit>
        <trans-unit id="c387dd68e10ebd6f97d3cefd35dc6f081a615b8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.key&quot;&gt;RecursiveDirectoryIterator::key&lt;/a&gt; &amp;mdash; Return path and filename of current dir entry</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.key&quot;&gt;RecursiveDirectoryIterator :: key&lt;/a&gt; &amp;mdash; 현재 디렉토리 엔트리의 경로와 파일 이름을 반환</target>
        </trans-unit>
        <trans-unit id="13647cbffd7a7e76ec29e3f675d366b34943d903" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.next&quot;&gt;RecursiveDirectoryIterator::next&lt;/a&gt; &amp;mdash; Move to next entry</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.next&quot;&gt;RecursiveDirectoryIterator :: next&lt;/a&gt; &amp;mdash; 다음 항목으로 이동</target>
        </trans-unit>
        <trans-unit id="6eee78e8f1f10b8c0a96222ac345a42c428c35e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivedirectoryiterator.rewind&quot;&gt;RecursiveDirectoryIterator::rewind&lt;/a&gt; &amp;mdash; Rewind dir back to the start</source>
          <target state="translated">&lt;a href=&quot;recursivedirectoryiterator.rewind&quot;&gt;RecursiveDirectoryIterator :: rewind&lt;/a&gt; &amp;mdash; 디렉토리를 처음으로 되감기</target>
        </trans-unit>
        <trans-unit id="691868cdb0bb67b7938fbe5d09e18d8bd07623cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivefilteriterator.construct&quot;&gt;RecursiveFilterIterator::__construct&lt;/a&gt; &amp;mdash; Create a RecursiveFilterIterator from a RecursiveIterator</source>
          <target state="translated">&lt;a href=&quot;recursivefilteriterator.construct&quot;&gt;RecursiveFilterIterator :: __ construct&lt;/a&gt; &amp;mdash; RecursiveIterator에서 RecursiveFilterIterator를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="be133744c5d332cb2cad006686450cf726b2417a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivefilteriterator.getchildren&quot;&gt;RecursiveFilterIterator::getChildren()&lt;/a&gt; - Return the inner iterator's children contained in a RecursiveFilterIterator</source>
          <target state="translated">&lt;a href=&quot;recursivefilteriterator.getchildren&quot;&gt;RecursiveFilterIterator :: getChildren ()-RecursiveFilterIterator에&lt;/a&gt; 포함 된 내부 반복자의 자식을 반환</target>
        </trans-unit>
        <trans-unit id="dd0357f3f82bd67efcebda2397d5eeacdd841c5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivefilteriterator.getchildren&quot;&gt;RecursiveFilterIterator::getChildren&lt;/a&gt; &amp;mdash; Return the inner iterator's children contained in a RecursiveFilterIterator</source>
          <target state="translated">&lt;a href=&quot;recursivefilteriterator.getchildren&quot;&gt;RecursiveFilterIterator :: getChildren&lt;/a&gt; &amp;mdash; RecursiveFilterIterator에 포함 된 내부 반복자의 자식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af64a5e09ab746727e1ade3de4f360d56b4bd899" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivefilteriterator.haschildren&quot;&gt;RecursiveFilterIterator::hasChildren()&lt;/a&gt; - Check whether the inner iterator's current element has children</source>
          <target state="translated">&lt;a href=&quot;recursivefilteriterator.haschildren&quot;&gt;RecursiveFilterIterator :: hasChildren ()&lt;/a&gt; -내부 반복자의 현재 요소에 자식이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="7dc9af30bc5714a0d350730df937d3f319a9de6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivefilteriterator.haschildren&quot;&gt;RecursiveFilterIterator::hasChildren&lt;/a&gt; &amp;mdash; Check whether the inner iterator's current element has children</source>
          <target state="translated">&lt;a href=&quot;recursivefilteriterator.haschildren&quot;&gt;RecursiveFilterIterator :: hasChildren&lt;/a&gt; &amp;mdash; 내부 이터레이터의 현재 요소에 자식이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="cfca488dc1161a9b5bce3bd67a3d4b74afb5e28e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiterator.getchildren&quot;&gt;RecursiveIterator::getChildren()&lt;/a&gt; - Returns an iterator for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveiterator.getchildren&quot;&gt;RecursiveIterator :: getChildren ()&lt;/a&gt; -현재 항목의 반복자를 반환</target>
        </trans-unit>
        <trans-unit id="23fca5f1553c58fb6d7b980d99f74acb838f4d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiterator.getchildren&quot;&gt;RecursiveIterator::getChildren&lt;/a&gt; &amp;mdash; Returns an iterator for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveiterator.getchildren&quot;&gt;RecursiveIterator :: getChildren&lt;/a&gt; &amp;mdash; 현재 항목의 반복자를 반환</target>
        </trans-unit>
        <trans-unit id="4e7a7c938b919d239efc613407b6175ce11eed44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiterator.haschildren&quot;&gt;RecursiveIterator::hasChildren()&lt;/a&gt; - Returns if an iterator can be created for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveiterator.haschildren&quot;&gt;RecursiveIterator :: hasChildren ()&lt;/a&gt; -현재 항목에 대해 반복자를 만들 수 있는지 여부를 반환합니다</target>
        </trans-unit>
        <trans-unit id="2846323d407ed6df5b8ed4ba678ad108cab8870f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiterator.haschildren&quot;&gt;RecursiveIterator::hasChildren&lt;/a&gt; &amp;mdash; Returns if an iterator can be created for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveiterator.haschildren&quot;&gt;RecursiveIterator :: hasChildren&lt;/a&gt; &amp;mdash; 현재 항목에 대해 반복자를 만들 수 있는지 여부를 반환합니다</target>
        </trans-unit>
        <trans-unit id="adab9c6f943b14091398e0362c2734ddd68504d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.beginchildren&quot;&gt;RecursiveIteratorIterator::beginChildren&lt;/a&gt; &amp;mdash; Begin children</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.beginchildren&quot;&gt;RecursiveIteratorIterator :: beginChildren&lt;/a&gt; &amp;mdash; 어린이 시작</target>
        </trans-unit>
        <trans-unit id="d3780592bc7087e6dc9be1cb25a2e851b060515b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.beginiteration&quot;&gt;RecursiveIteratorIterator::beginIteration&lt;/a&gt; &amp;mdash; Begin Iteration</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.beginiteration&quot;&gt;RecursiveIteratorIterator :: beginIteration&lt;/a&gt; &amp;mdash; 반복 시작</target>
        </trans-unit>
        <trans-unit id="e20a5e48662abea38a89c9c0f0a5bc57a53fa362" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.callgetchildren&quot;&gt;RecursiveIteratorIterator::callGetChildren&lt;/a&gt; &amp;mdash; Get children</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.callgetchildren&quot;&gt;RecursiveIteratorIterator :: callGetChildren&lt;/a&gt; &amp;mdash; 자식을 얻는다</target>
        </trans-unit>
        <trans-unit id="2095dcf6abf4c4720eaa3d0ddbe025a7e248e5a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.callhaschildren&quot;&gt;RecursiveIteratorIterator::callHasChildren&lt;/a&gt; &amp;mdash; Has children</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.callhaschildren&quot;&gt;RecursiveIteratorIterator :: callHasChildren&lt;/a&gt; &amp;mdash; 자식이 있습니다</target>
        </trans-unit>
        <trans-unit id="97dac7d2c3e4ec3a139f8fb950c757fc2cb78802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.construct&quot;&gt;RecursiveIteratorIterator::__construct()&lt;/a&gt; - Construct a RecursiveIteratorIterator</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.construct&quot;&gt;RecursiveIteratorIterator :: __ construct ()&lt;/a&gt; -재귀 적 IteratorIterator 구성</target>
        </trans-unit>
        <trans-unit id="04668ff1cb3864a09decea830e0a0ef75d068b1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.construct&quot;&gt;RecursiveIteratorIterator::__construct&lt;/a&gt; &amp;mdash; Construct a RecursiveIteratorIterator</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.construct&quot;&gt;RecursiveIteratorIterator :: __ construct&lt;/a&gt; &amp;mdash; RecursiveIteratorIterator를 생성한다</target>
        </trans-unit>
        <trans-unit id="63922318239079e7c50d08a2dc381b53f32374f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.current&quot;&gt;RecursiveIteratorIterator::current&lt;/a&gt; &amp;mdash; Access the current element value</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.current&quot;&gt;RecursiveIteratorIterator :: current&lt;/a&gt; &amp;mdash; 현재 요소 값에 액세스</target>
        </trans-unit>
        <trans-unit id="7e4ddb3e404826aa33e9a1f19d7420ad4f26f403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.endchildren&quot;&gt;RecursiveIteratorIterator::endChildren&lt;/a&gt; &amp;mdash; End children</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.endchildren&quot;&gt;RecursiveIteratorIterator :: endChildren&lt;/a&gt; &amp;mdash; 최종 자식</target>
        </trans-unit>
        <trans-unit id="3845d1d6ff63194e0525e190cc7ea21ef10efd4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.enditeration&quot;&gt;RecursiveIteratorIterator::endIteration&lt;/a&gt; &amp;mdash; End Iteration</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.enditeration&quot;&gt;RecursiveIteratorIterator :: endIteration&lt;/a&gt; &amp;mdash; 종료 반복</target>
        </trans-unit>
        <trans-unit id="00669fa40b4c586c86544dfb1917baa23bb1e597" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.getdepth&quot;&gt;RecursiveIteratorIterator::getDepth&lt;/a&gt; &amp;mdash; Get the current depth of the recursive iteration</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.getdepth&quot;&gt;RecursiveIteratorIterator :: getDepth&lt;/a&gt; &amp;mdash; 재귀 반복의 현재 깊이를 얻는다</target>
        </trans-unit>
        <trans-unit id="c190a5a745862b78826963fc6a0862454fad5a70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.getinneriterator&quot;&gt;RecursiveIteratorIterator::getInnerIterator&lt;/a&gt; &amp;mdash; Get inner iterator</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.getinneriterator&quot;&gt;RecursiveIteratorIterator :: getInnerIterator&lt;/a&gt; &amp;mdash; 내부 이터레이터 얻기</target>
        </trans-unit>
        <trans-unit id="581811c273cf91655e4661853d884164c01df5f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.getmaxdepth&quot;&gt;RecursiveIteratorIterator::getMaxDepth&lt;/a&gt; &amp;mdash; Get max depth</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.getmaxdepth&quot;&gt;RecursiveIteratorIterator :: getMaxDepth&lt;/a&gt; &amp;mdash; 최대 깊이 얻기</target>
        </trans-unit>
        <trans-unit id="d7297f4d907523ba70d5c02968b37c2eb16b6397" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.getsubiterator&quot;&gt;RecursiveIteratorIterator::getSubIterator&lt;/a&gt; &amp;mdash; The current active sub iterator</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.getsubiterator&quot;&gt;RecursiveIteratorIterator :: getSubIterator&lt;/a&gt; &amp;mdash; 현재 활성화 된 서브 이터레이터</target>
        </trans-unit>
        <trans-unit id="e8900a9729fb2ef54bbb2a942aeef650fc58c559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.key&quot;&gt;RecursiveIteratorIterator::key&lt;/a&gt; &amp;mdash; Access the current key</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.key&quot;&gt;RecursiveIteratorIterator :: key&lt;/a&gt; &amp;mdash; 현재 키에 액세스</target>
        </trans-unit>
        <trans-unit id="48f0b30e31c98b6d939765f484d2d7fc82a29486" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.next&quot;&gt;RecursiveIteratorIterator::next&lt;/a&gt; &amp;mdash; Move forward to the next element</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.next&quot;&gt;RecursiveIteratorIterator :: next&lt;/a&gt; &amp;mdash; 다음 요소로 이동</target>
        </trans-unit>
        <trans-unit id="cc40d640f259b8362a82ec813e7aa5befab93a87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.nextelement&quot;&gt;RecursiveIteratorIterator::nextElement&lt;/a&gt; &amp;mdash; Next element</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.nextelement&quot;&gt;RecursiveIteratorIterator :: nextElement&lt;/a&gt; &amp;mdash; 다음 요소</target>
        </trans-unit>
        <trans-unit id="b11dda18a3c16a1cc91ba22f3c28f699147ee945" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.rewind&quot;&gt;RecursiveIteratorIterator::rewind&lt;/a&gt; &amp;mdash; Rewind the iterator to the first element of the top level inner iterator</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.rewind&quot;&gt;RecursiveIteratorIterator :: rewind&lt;/a&gt; &amp;mdash; 이터레이터를 최상위 내부 이터레이터의 첫 번째 요소로 되감습니다.</target>
        </trans-unit>
        <trans-unit id="b8d6004d1fa8947fd0089dd2e0a6321265446dff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.setmaxdepth&quot;&gt;RecursiveIteratorIterator::setMaxDepth()&lt;/a&gt; - Set max depth</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.setmaxdepth&quot;&gt;RecursiveIteratorIterator :: setMaxDepth ()&lt;/a&gt; -최대 깊이 설정</target>
        </trans-unit>
        <trans-unit id="100f9181fc53f000c935cbeef51b8471f822417a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.setmaxdepth&quot;&gt;RecursiveIteratorIterator::setMaxDepth&lt;/a&gt; &amp;mdash; Set max depth</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.setmaxdepth&quot;&gt;RecursiveIteratorIterator :: setMaxDepth&lt;/a&gt; &amp;mdash; 최대 깊이 설정</target>
        </trans-unit>
        <trans-unit id="1f6e45c9188da03fb0ecc0aa84dc6b72dc5787b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveiteratoriterator.valid&quot;&gt;RecursiveIteratorIterator::valid&lt;/a&gt; &amp;mdash; Check whether the current position is valid</source>
          <target state="translated">&lt;a href=&quot;recursiveiteratoriterator.valid&quot;&gt;RecursiveIteratorIterator :: valid&lt;/a&gt; &amp;mdash; 현재 위치가 유효한지 확인</target>
        </trans-unit>
        <trans-unit id="29c15c55245345c2b390ea19d0ebb83b74cfd889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveregexiterator.construct&quot;&gt;RecursiveRegexIterator::__construct&lt;/a&gt; &amp;mdash; Creates a new RecursiveRegexIterator</source>
          <target state="translated">&lt;a href=&quot;recursiveregexiterator.construct&quot;&gt;RecursiveRegexIterator :: __ construct&lt;/a&gt; &amp;mdash; 새로운 RecursiveRegexIterator를 생성</target>
        </trans-unit>
        <trans-unit id="69d3c4c8524aca11b29994cc9e5264010f39d2dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveregexiterator.getchildren&quot;&gt;RecursiveRegexIterator::getChildren()&lt;/a&gt; - Returns an iterator for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveregexiterator.getchildren&quot;&gt;RecursiveRegexIterator :: getChildren ()&lt;/a&gt; -현재 항목의 반복자를 반환</target>
        </trans-unit>
        <trans-unit id="5c0d0c54fc49b5a25d4ff8165db2418f0e3856c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveregexiterator.getchildren&quot;&gt;RecursiveRegexIterator::getChildren&lt;/a&gt; &amp;mdash; Returns an iterator for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveregexiterator.getchildren&quot;&gt;RecursiveRegexIterator :: getChildren&lt;/a&gt; &amp;mdash; 현재 항목의 반복자를 반환</target>
        </trans-unit>
        <trans-unit id="be939e88fe4dd2f89fdffc51a4154809d6eeb6c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveregexiterator.haschildren&quot;&gt;RecursiveRegexIterator::hasChildren()&lt;/a&gt; - Returns whether an iterator can be obtained for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveregexiterator.haschildren&quot;&gt;RecursiveRegexIterator :: hasChildren ()&lt;/a&gt; -현재 항목에 대해 반복자를 얻을 수 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5b17bfe833ec549104ce56915e17bfd4cc64f6cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursiveregexiterator.haschildren&quot;&gt;RecursiveRegexIterator::hasChildren&lt;/a&gt; &amp;mdash; Returns whether an iterator can be obtained for the current entry</source>
          <target state="translated">&lt;a href=&quot;recursiveregexiterator.haschildren&quot;&gt;RecursiveRegexIterator :: hasChildren&lt;/a&gt; &amp;mdash; 현재 항목에 대해 반복자를 얻을 수 있는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5e4b1a00734dfdc1686ff55c735f4274792f50df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.beginchildren&quot;&gt;RecursiveTreeIterator::beginChildren&lt;/a&gt; &amp;mdash; Begin children</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.beginchildren&quot;&gt;RecursiveTreeIterator :: beginChildren&lt;/a&gt; &amp;mdash; 어린이 시작</target>
        </trans-unit>
        <trans-unit id="c382b0a3e51bcb4676be5c70e37c1b2bf7414314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.beginiteration&quot;&gt;RecursiveTreeIterator::beginIteration&lt;/a&gt; &amp;mdash; Begin iteration</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.beginiteration&quot;&gt;RecursiveTreeIterator :: beginIteration&lt;/a&gt; &amp;mdash; 반복 시작</target>
        </trans-unit>
        <trans-unit id="d9bbf800c99d78b33183116fe0655caf517cb7b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.callgetchildren&quot;&gt;RecursiveTreeIterator::callGetChildren&lt;/a&gt; &amp;mdash; Get children</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.callgetchildren&quot;&gt;RecursiveTreeIterator :: callGetChildren&lt;/a&gt; &amp;mdash; 자식을 얻는다</target>
        </trans-unit>
        <trans-unit id="735586d1f5d4fc8ee2c7d5eaa624cc45b3c4f45c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.callhaschildren&quot;&gt;RecursiveTreeIterator::callHasChildren&lt;/a&gt; &amp;mdash; Has children</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.callhaschildren&quot;&gt;RecursiveTreeIterator :: callHasChildren&lt;/a&gt; &amp;mdash; 자식이 있습니다</target>
        </trans-unit>
        <trans-unit id="ba1193fe5f84095810509757b8f7212ecbfd88cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.construct&quot;&gt;RecursiveTreeIterator::__construct&lt;/a&gt; &amp;mdash; Construct a RecursiveTreeIterator</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.construct&quot;&gt;RecursiveTreeIterator :: __ construct&lt;/a&gt; &amp;mdash; 재귀 적 TreeIterator 구성</target>
        </trans-unit>
        <trans-unit id="755ab36d87a025c38339fd098da698912453aa8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.current&quot;&gt;RecursiveTreeIterator::current&lt;/a&gt; &amp;mdash; Get current element</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.current&quot;&gt;RecursiveTreeIterator :: current&lt;/a&gt; &amp;mdash; 현재 요소를 얻는다</target>
        </trans-unit>
        <trans-unit id="af25cbb74e9a1cf60debb7a552de75503fd90fc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.endchildren&quot;&gt;RecursiveTreeIterator::endChildren&lt;/a&gt; &amp;mdash; End children</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.endchildren&quot;&gt;RecursiveTreeIterator :: endChildren&lt;/a&gt; &amp;mdash; 최종 자녀</target>
        </trans-unit>
        <trans-unit id="0b781be2252f30276a4e43c749d4ea6b0985bb15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.enditeration&quot;&gt;RecursiveTreeIterator::endIteration&lt;/a&gt; &amp;mdash; End iteration</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.enditeration&quot;&gt;RecursiveTreeIterator :: endIteration&lt;/a&gt; &amp;mdash; 반복 종료</target>
        </trans-unit>
        <trans-unit id="9132ed8ac06b685081e5d9e179f66f96926ffa70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.getentry&quot;&gt;RecursiveTreeIterator::getEntry&lt;/a&gt; &amp;mdash; Get current entry</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.getentry&quot;&gt;RecursiveTreeIterator :: getEntry&lt;/a&gt; &amp;mdash; 현재 엔트리를 얻는다</target>
        </trans-unit>
        <trans-unit id="24ebf07c6b45d7ff4756446c1c9e5907fbeab264" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.getpostfix&quot;&gt;RecursiveTreeIterator::getPostfix&lt;/a&gt; &amp;mdash; Get the postfix</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.getpostfix&quot;&gt;RecursiveTreeIterator :: getPostfix&lt;/a&gt; &amp;mdash; 접미사를 얻는다</target>
        </trans-unit>
        <trans-unit id="3335768d87d532806b61e746b23cd3a62347e238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.getprefix&quot;&gt;RecursiveTreeIterator::getPrefix&lt;/a&gt; &amp;mdash; Get the prefix</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.getprefix&quot;&gt;RecursiveTreeIterator :: getPrefix&lt;/a&gt; &amp;mdash; 접두사를 얻는다</target>
        </trans-unit>
        <trans-unit id="cb52cb678ae25839a7ad05dd528517b3333ffe28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.key&quot;&gt;RecursiveTreeIterator::key&lt;/a&gt; &amp;mdash; Get the key of the current element</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.key&quot;&gt;RecursiveTreeIterator :: key&lt;/a&gt; &amp;mdash; 현재 요소의 키를 얻는다</target>
        </trans-unit>
        <trans-unit id="387d78a5caf100f71d3bf8db626ae4a738ae1f60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.next&quot;&gt;RecursiveTreeIterator::next&lt;/a&gt; &amp;mdash; Move to next element</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.next&quot;&gt;RecursiveTreeIterator :: next&lt;/a&gt; &amp;mdash; 다음 요소로 이동</target>
        </trans-unit>
        <trans-unit id="bfe117a01f683197a3b18b5992dcacf4ca76c990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.nextelement&quot;&gt;RecursiveTreeIterator::nextElement&lt;/a&gt; &amp;mdash; Next element</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.nextelement&quot;&gt;RecursiveTreeIterator :: nextElement&lt;/a&gt; &amp;mdash; 다음 요소</target>
        </trans-unit>
        <trans-unit id="3b3b8b6e4a255714b41d81979fde3f12cf0342a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.rewind&quot;&gt;RecursiveTreeIterator::rewind&lt;/a&gt; &amp;mdash; Rewind iterator</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.rewind&quot;&gt;RecursiveTreeIterator :: rewind&lt;/a&gt; &amp;mdash; 되감기 반복기</target>
        </trans-unit>
        <trans-unit id="42212a1552f4d4e27a5aa107b812faa782caaace" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.setpostfix&quot;&gt;RecursiveTreeIterator::setPostfix&lt;/a&gt; &amp;mdash; Set postfix</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.setpostfix&quot;&gt;RecursiveTreeIterator :: setPostfix&lt;/a&gt; &amp;mdash; 접미사 설정</target>
        </trans-unit>
        <trans-unit id="28846197e2524ab300ad82f8db3e7502f39cc8dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.setprefixpart&quot;&gt;RecursiveTreeIterator::setPrefixPart&lt;/a&gt; &amp;mdash; Set a part of the prefix</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.setprefixpart&quot;&gt;RecursiveTreeIterator :: setPrefixPart&lt;/a&gt; &amp;mdash; 접두사의 일부를 설정</target>
        </trans-unit>
        <trans-unit id="5c1bee8102610aa783107cb2e1df63c29601ac07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;recursivetreeiterator.valid&quot;&gt;RecursiveTreeIterator::valid&lt;/a&gt; &amp;mdash; Check validity</source>
          <target state="translated">&lt;a href=&quot;recursivetreeiterator.valid&quot;&gt;RecursiveTreeIterator :: valid&lt;/a&gt; &amp;mdash; 유효성 검사</target>
        </trans-unit>
        <trans-unit id="2dd4688be657fa6136c21c75c37d448019a2f63d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflection.export&quot;&gt;Reflection::export&lt;/a&gt; &amp;mdash; Exports</source>
          <target state="translated">&lt;a href=&quot;reflection.export&quot;&gt;Reflection :: export&lt;/a&gt; &amp;mdash; 수출</target>
        </trans-unit>
        <trans-unit id="d1e5e5bfb0dfd5d05228d070a5f10d38321c8e09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflection.getmodifiernames&quot;&gt;Reflection::getModifierNames()&lt;/a&gt; - Gets modifier names</source>
          <target state="translated">&lt;a href=&quot;reflection.getmodifiernames&quot;&gt;Reflection :: getModifierNames ()&lt;/a&gt; -수정 자 이름을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="3b8e6d526da75a8026d4ae8fd667a5ff1e4813a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflection.getmodifiernames&quot;&gt;Reflection::getModifierNames&lt;/a&gt; &amp;mdash; Gets modifier names</source>
          <target state="translated">&lt;a href=&quot;reflection.getmodifiernames&quot;&gt;Reflection :: getModifierNames&lt;/a&gt; &amp;mdash; 수정 자 이름을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="730885eac184c7834fdd3d1ebb478eb0b21a25c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.construct&quot;&gt;ReflectionClass::__construct()&lt;/a&gt; - Constructs a ReflectionClass</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.construct&quot;&gt;ReflectionClass :: __ 구조 ()&lt;/a&gt; - 구성하는 ReflectionClass</target>
        </trans-unit>
        <trans-unit id="711c3f1f7b0d68c839c5d8cda7cbf49cf319028a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.construct&quot;&gt;ReflectionClass::__construct&lt;/a&gt; &amp;mdash; Constructs a ReflectionClass</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.construct&quot;&gt;ReflectionClass :: __ construct&lt;/a&gt; &amp;mdash; ReflectionClass를 생성합니다</target>
        </trans-unit>
        <trans-unit id="875bd3039cefd66ac4cb9560d75ae5697a7d201f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.export&quot;&gt;ReflectionClass::export()&lt;/a&gt; - Exports a class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.export&quot;&gt;ReflectionClass :: export ()&lt;/a&gt; -클래스를 내 보냅니다</target>
        </trans-unit>
        <trans-unit id="3b3e5ed6d834e059bd9b3b42e64c5ff49ba6bd3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.export&quot;&gt;ReflectionClass::export&lt;/a&gt; &amp;mdash; Exports a class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.export&quot;&gt;ReflectionClass :: export&lt;/a&gt; &amp;mdash; 클래스를 내 보냅니다</target>
        </trans-unit>
        <trans-unit id="96b25bf88d206e39cd072928cd5f615e337ff741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getconstant&quot;&gt;ReflectionClass::getConstant()&lt;/a&gt; - Gets defined constant</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getconstant&quot;&gt;ReflectionClass :: getConstant ()&lt;/a&gt; -정의 된 상수를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="77a8508b8f8c8dcfc287c5ed5cf7409959b1a84b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getconstant&quot;&gt;ReflectionClass::getConstant&lt;/a&gt; &amp;mdash; Gets defined constant</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getconstant&quot;&gt;ReflectionClass :: getConstant&lt;/a&gt; &amp;mdash; 정의 된 상수를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="386d9d7a8d0a8b106c23e4f5aaf2c4477fa3a39c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getconstants&quot;&gt;ReflectionClass::getConstants()&lt;/a&gt; - Gets constants</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getconstants&quot;&gt;ReflectionClass :: getConstants ()&lt;/a&gt; -상수를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="3fc89d2abaafda86a861526a4aedb46275c90289" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getconstants&quot;&gt;ReflectionClass::getConstants&lt;/a&gt; &amp;mdash; Gets constants</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getconstants&quot;&gt;ReflectionClass :: getConstants&lt;/a&gt; &amp;mdash; 상수를 얻습니다</target>
        </trans-unit>
        <trans-unit id="749fa8858cf22f7ce05cc04cd8c34232af872242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getconstructor&quot;&gt;ReflectionClass::getConstructor&lt;/a&gt; &amp;mdash; Gets the constructor of the class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getconstructor&quot;&gt;ReflectionClass :: getConstructor&lt;/a&gt; &amp;mdash; 클래스의 생성자를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="066f64432a373dc7db8de6e39026436e5c3197ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getdefaultproperties&quot;&gt;ReflectionClass::getDefaultProperties()&lt;/a&gt; - Gets default properties</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getdefaultproperties&quot;&gt;ReflectionClass :: getDefaultProperties ()&lt;/a&gt; -기본 속성을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="5fde2edd01a092ea5fbf76a3f196d78c916984bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getdefaultproperties&quot;&gt;ReflectionClass::getDefaultProperties&lt;/a&gt; &amp;mdash; Gets default properties</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getdefaultproperties&quot;&gt;ReflectionClass :: getDefaultProperties&lt;/a&gt; &amp;mdash; 기본 속성을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="a2a6e1de4a7fab7b1cecfd275fd142068d71d0cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getdoccomment&quot;&gt;ReflectionClass::getDocComment&lt;/a&gt; &amp;mdash; Gets doc comments</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getdoccomment&quot;&gt;ReflectionClass :: getDocComment&lt;/a&gt; &amp;mdash; 문서 주석을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="f1bd11435cb8a1a0dce80fac312800bc006dce82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getendline&quot;&gt;ReflectionClass::getEndLine()&lt;/a&gt; - Gets end line</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getendline&quot;&gt;ReflectionClass :: getEndLine ()&lt;/a&gt; -엔드 라인을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="650151f18725a8075914682a33da0d9b612b53a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getendline&quot;&gt;ReflectionClass::getEndLine&lt;/a&gt; &amp;mdash; Gets end line</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getendline&quot;&gt;ReflectionClass :: getEndLine&lt;/a&gt; &amp;mdash; 엔드 라인을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="73067db5129d8e0543fed0ec057a1b0f30eb2499" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getextension&quot;&gt;ReflectionClass::getExtension()&lt;/a&gt; - Gets a ReflectionExtension object for the extension which defined the class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getextension&quot;&gt;ReflectionClass :: getExtension ()&lt;/a&gt; -클래스를 정의한 확장에 대한 ReflectionExtension 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cb8c46cf2423cdc5366c97590e7e284f0d729544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getextension&quot;&gt;ReflectionClass::getExtension&lt;/a&gt; &amp;mdash; Gets a ReflectionExtension object for the extension which defined the class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getextension&quot;&gt;ReflectionClass :: getExtension&lt;/a&gt; &amp;mdash; 클래스를 정의한 확장명에 대한 ReflectionExtension 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="593a6ca087ab25984c1ee0b9a86aebf7ec60979e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getextensionname&quot;&gt;ReflectionClass::getExtensionName()&lt;/a&gt; - Gets the name of the extension which defined the class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getextensionname&quot;&gt;ReflectionClass :: getExtensionName ()&lt;/a&gt; -클래스를 정의한 확장명을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="069a1008a282e9414356bf5e6d6d910415a2bf96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getextensionname&quot;&gt;ReflectionClass::getExtensionName&lt;/a&gt; &amp;mdash; Gets the name of the extension which defined the class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getextensionname&quot;&gt;ReflectionClass :: getExtensionName&lt;/a&gt; &amp;mdash; 클래스를 정의한 확장명을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1c0c6349c4bfaaefea96a88a188ee0170d5315c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getfilename&quot;&gt;ReflectionClass::getFileName&lt;/a&gt; &amp;mdash; Gets the filename of the file in which the class has been defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getfilename&quot;&gt;ReflectionClass :: getFileName&lt;/a&gt; &amp;mdash; 클래스가 정의 된 파일의 파일 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8b96e4750860cf361a565c37f83fdf71128265bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getinterfacenames&quot;&gt;ReflectionClass::getInterfaceNames()&lt;/a&gt; - Gets the interface names</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getinterfacenames&quot;&gt;ReflectionClass :: getInterfaceNames ()&lt;/a&gt; -인터페이스 이름을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="a7cfd0b07ee91ff895bed451421182ef30d5642c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getinterfacenames&quot;&gt;ReflectionClass::getInterfaceNames&lt;/a&gt; &amp;mdash; Gets the interface names</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getinterfacenames&quot;&gt;ReflectionClass :: getInterfaceNames&lt;/a&gt; &amp;mdash; 인터페이스 이름을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="d11fa5627e82207ed03fb0c4fe16c0d41bca6f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getinterfaces&quot;&gt;ReflectionClass::getInterfaces()&lt;/a&gt; - Gets the interfaces</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getinterfaces&quot;&gt;ReflectionClass :: getInterfaces ()&lt;/a&gt; -인터페이스를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="4c482479980f842a103f736059c9f51c73519c84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getinterfaces&quot;&gt;ReflectionClass::getInterfaces&lt;/a&gt; &amp;mdash; Gets the interfaces</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getinterfaces&quot;&gt;ReflectionClass :: getInterfaces&lt;/a&gt; &amp;mdash; 인터페이스를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="94e5045d30a4abecea184d9f7e8cc6590aae70bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getmethod&quot;&gt;ReflectionClass::getMethod()&lt;/a&gt; - Gets a ReflectionMethod for a class method</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getmethod&quot;&gt;ReflectionClass :: getMethod ()&lt;/a&gt; -클래스 메서드의 ReflectionMethod를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="5b7f242327cf471a6d86e5b5b19b0d0fa0bf59f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getmethod&quot;&gt;ReflectionClass::getMethod&lt;/a&gt; &amp;mdash; Gets a ReflectionMethod for a class method</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getmethod&quot;&gt;ReflectionClass :: getMethod&lt;/a&gt; &amp;mdash; 클래스 메서드의 ReflectionMethod를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="c7b2977e87a1dff74656acbb0884dae84964edf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getmethods&quot;&gt;ReflectionClass::getMethods()&lt;/a&gt; - Gets an array of methods</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getmethods&quot;&gt;ReflectionClass :: getMethods ()&lt;/a&gt; -메소드의 배열을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="574713e7e94194c500a6dfbcfe516408c05ec1e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getmethods&quot;&gt;ReflectionClass::getMethods&lt;/a&gt; &amp;mdash; Gets an array of methods</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getmethods&quot;&gt;ReflectionClass :: getMethods&lt;/a&gt; &amp;mdash; 메소드의 배열을 얻는다</target>
        </trans-unit>
        <trans-unit id="c2da50e5872393b62776aa698f7a5d0573a6e0db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getmodifiers&quot;&gt;ReflectionClass::getModifiers()&lt;/a&gt; - Gets the class modifiers</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getmodifiers&quot;&gt;ReflectionClass :: getModifiers ()&lt;/a&gt; -클래스 수정자를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="aac67c91420a65c7e0b8e2bc98e19a5b8cc21f67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getmodifiers&quot;&gt;ReflectionClass::getModifiers&lt;/a&gt; &amp;mdash; Gets the class modifiers</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getmodifiers&quot;&gt;ReflectionClass :: getModifiers&lt;/a&gt; &amp;mdash; 클래스 수정자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="82d8dbfda8b98fe017ab592826031cac9806ea2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getname&quot;&gt;ReflectionClass::getName()&lt;/a&gt; - Gets class name</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getname&quot;&gt;ReflectionClass :: getName ()&lt;/a&gt; -클래스 이름을 얻습니다</target>
        </trans-unit>
        <trans-unit id="2004f512c7fc4eb72035817969a3c5c4e760f86b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getname&quot;&gt;ReflectionClass::getName&lt;/a&gt; &amp;mdash; Gets class name</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getname&quot;&gt;ReflectionClass :: getName&lt;/a&gt; &amp;mdash; 클래스 이름을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="67fbcbeccc521fa90a4e46f668edd32196edba81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getnamespacename&quot;&gt;ReflectionClass::getNamespaceName()&lt;/a&gt; - Gets namespace name</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getnamespacename&quot;&gt;ReflectionClass :: getNamespaceName ()&lt;/a&gt; -네임 스페이스 이름을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="5d5321d01a427abe43a136d3c5671b3fe1155076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getnamespacename&quot;&gt;ReflectionClass::getNamespaceName&lt;/a&gt; &amp;mdash; Gets namespace name</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getnamespacename&quot;&gt;ReflectionClass :: getNamespaceName&lt;/a&gt; &amp;mdash; 네임 스페이스 이름을 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="90f7ff6d7784fffd255ca0f5d4d0fe8466887198" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getparentclass&quot;&gt;ReflectionClass::getParentClass()&lt;/a&gt; - Gets parent class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getparentclass&quot;&gt;ReflectionClass :: getParentClass ()&lt;/a&gt; -부모 클래스를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="859f457c70938ad83d9bfc67fc0608ac02b49d98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getparentclass&quot;&gt;ReflectionClass::getParentClass&lt;/a&gt; &amp;mdash; Gets parent class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getparentclass&quot;&gt;ReflectionClass :: getParentClass&lt;/a&gt; &amp;mdash; 부모 클래스를 얻는다</target>
        </trans-unit>
        <trans-unit id="bd9cfa77be39d08d842099a0207145c57b103291" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getproperties&quot;&gt;ReflectionClass::getProperties()&lt;/a&gt; - Gets properties</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getproperties&quot;&gt;ReflectionClass :: getProperties ()&lt;/a&gt; -속성을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="0cbe87de034485f980529698721da6835a1706ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getproperties&quot;&gt;ReflectionClass::getProperties&lt;/a&gt; &amp;mdash; Gets properties</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getproperties&quot;&gt;ReflectionClass :: getProperties&lt;/a&gt; &amp;mdash; 속성을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="bdcf899ea25bf06a0de9355379359ec1a6f66c0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getproperty&quot;&gt;ReflectionClass::getProperty()&lt;/a&gt; - Gets a ReflectionProperty for a class's property</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getproperty&quot;&gt;ReflectionClass :: getProperty ()&lt;/a&gt; -클래스의 속성에 대한 ReflectionProperty를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="6e2b297e67cef400e119be79997c93fc2748447d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getproperty&quot;&gt;ReflectionClass::getProperty&lt;/a&gt; &amp;mdash; Gets a ReflectionProperty for a class's property</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getproperty&quot;&gt;ReflectionClass :: getProperty&lt;/a&gt; &amp;mdash; 클래스의 속성에 대한 ReflectionProperty를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="f3f79fbb7c9f8a3080473ba8eb49cddb5fe05b1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getreflectionconstant&quot;&gt;ReflectionClass::getReflectionConstant()&lt;/a&gt; - Gets a ReflectionClassConstant for a class's constant</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getreflectionconstant&quot;&gt;ReflectionClass :: getReflectionConstant ()&lt;/a&gt; -클래스 상수에 대한 ReflectionClassConstant를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="cb763ac1e0947c0df1bb36a00e2cd85a6f44a06d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getreflectionconstant&quot;&gt;ReflectionClass::getReflectionConstant&lt;/a&gt; &amp;mdash; Gets a ReflectionClassConstant for a class's constant</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getreflectionconstant&quot;&gt;ReflectionClass :: getReflectionConstant&lt;/a&gt; &amp;mdash; 클래스 상수에 대한 ReflectionClassConstant를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="fe9698ca01b6d0deda3ae8c0acf7d0e8a94ee7fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getreflectionconstants&quot;&gt;ReflectionClass::getReflectionConstants()&lt;/a&gt; - Gets class constants</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getreflectionconstants&quot;&gt;ReflectionClass :: getReflectionConstants ()&lt;/a&gt; -클래스 상수를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="a0bed2b2fb6a68a79b3b44a9e3473242ffdbcf95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getreflectionconstants&quot;&gt;ReflectionClass::getReflectionConstants&lt;/a&gt; &amp;mdash; Gets class constants</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getreflectionconstants&quot;&gt;ReflectionClass :: getReflectionConstants&lt;/a&gt; &amp;mdash; 클래스 상수를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="ebb28017ff766084b33bb82b56a66e3f800e8dfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getshortname&quot;&gt;ReflectionClass::getShortName&lt;/a&gt; &amp;mdash; Gets short name</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getshortname&quot;&gt;ReflectionClass :: getShortName&lt;/a&gt; &amp;mdash; 짧은 ​​이름을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="dcf25d31ff2cc5753f59978f87fa180565ac71f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getstartline&quot;&gt;ReflectionClass::getStartLine()&lt;/a&gt; - Gets starting line number</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getstartline&quot;&gt;ReflectionClass :: getStartLine ()&lt;/a&gt; -출발 선 번호를 얻습니다</target>
        </trans-unit>
        <trans-unit id="4f680526abf6e131d2363bd4da48937fc79dc3b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getstartline&quot;&gt;ReflectionClass::getStartLine&lt;/a&gt; &amp;mdash; Gets starting line number</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getstartline&quot;&gt;ReflectionClass :: getStartLine&lt;/a&gt; &amp;mdash; 시작 줄 번호를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="d53fd7cf489cdfe7c144b8154b8eeddf57191a01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getstaticproperties&quot;&gt;ReflectionClass::getStaticProperties()&lt;/a&gt; - Gets static properties</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getstaticproperties&quot;&gt;ReflectionClass :: getStaticProperties ()&lt;/a&gt; -정적 속성을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="8826672b25e6115e9cbc52135d2830255f9ebb97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getstaticproperties&quot;&gt;ReflectionClass::getStaticProperties&lt;/a&gt; &amp;mdash; Gets static properties</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getstaticproperties&quot;&gt;ReflectionClass :: getStaticProperties&lt;/a&gt; &amp;mdash; 정적 속성을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="c864c190667004db3103aa7228536e6d47814c93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getstaticpropertyvalue&quot;&gt;ReflectionClass::getStaticPropertyValue()&lt;/a&gt; - Gets static property value</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getstaticpropertyvalue&quot;&gt;ReflectionClass :: getStaticPropertyValue ()&lt;/a&gt; -정적 속성 값을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="5818104241d93231dc70e877bab916af53c0f332" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.getstaticpropertyvalue&quot;&gt;ReflectionClass::getStaticPropertyValue&lt;/a&gt; &amp;mdash; Gets static property value</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.getstaticpropertyvalue&quot;&gt;ReflectionClass :: getStaticPropertyValue&lt;/a&gt; &amp;mdash; 정적 속성 값을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="02699f1f2382211378b79fc1cf6ea9912c54bdcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.gettraitaliases&quot;&gt;ReflectionClass::getTraitAliases&lt;/a&gt; &amp;mdash; Returns an array of trait aliases</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.gettraitaliases&quot;&gt;ReflectionClass :: getTraitAliases&lt;/a&gt; &amp;mdash; 특성 별칭 배열을 반환합니다</target>
        </trans-unit>
        <trans-unit id="fcba1085de2fb96af0bd8fdcc5374ba57edd7602" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.gettraitnames&quot;&gt;ReflectionClass::getTraitNames&lt;/a&gt; &amp;mdash; Returns an array of names of traits used by this class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.gettraitnames&quot;&gt;ReflectionClass :: getTraitNames&lt;/a&gt; &amp;mdash;이 클래스에서 사용하는 특성 이름의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2bb78bff129ed5ebf786da736bea014ead96a159" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.gettraits&quot;&gt;ReflectionClass::getTraits&lt;/a&gt; &amp;mdash; Returns an array of traits used by this class</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.gettraits&quot;&gt;ReflectionClass :: getTraits&lt;/a&gt; &amp;mdash;이 클래스에서 사용하는 특성 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="988c39311e9c46d8abb5a7655420a06ba900ee4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.hasconstant&quot;&gt;ReflectionClass::hasConstant()&lt;/a&gt; - Checks if constant is defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.hasconstant&quot;&gt;ReflectionClass :: hasConstant ()&lt;/a&gt; -상수가 정의되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="daa9917be9906a483e8ce06a142dacf10658bd5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.hasconstant&quot;&gt;ReflectionClass::hasConstant&lt;/a&gt; &amp;mdash; Checks if constant is defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.hasconstant&quot;&gt;ReflectionClass :: hasConstant&lt;/a&gt; &amp;mdash; 상수가 정의되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="9df582c782067fd10556e49c3e21a48b668053bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.hasmethod&quot;&gt;ReflectionClass::hasMethod()&lt;/a&gt; - Checks if method is defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.hasmethod&quot;&gt;ReflectionClass :: hasMethod ()&lt;/a&gt; -메소드가 정의되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="fb69b80a7e32b2e59e51d1eaabd79ac747c8ce04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.hasmethod&quot;&gt;ReflectionClass::hasMethod&lt;/a&gt; &amp;mdash; Checks if method is defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.hasmethod&quot;&gt;ReflectionClass :: hasMethod&lt;/a&gt; &amp;mdash; 메소드가 정의되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="74d109f5e7ae960bcea950e840e3142631a1ac58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.hasproperty&quot;&gt;ReflectionClass::hasProperty()&lt;/a&gt; - Checks if property is defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.hasproperty&quot;&gt;ReflectionClass :: hasProperty ()&lt;/a&gt; -속성이 정의되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="d5df20ab8df3df24a839d789f4ce506f2109f350" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.hasproperty&quot;&gt;ReflectionClass::hasProperty&lt;/a&gt; &amp;mdash; Checks if property is defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.hasproperty&quot;&gt;ReflectionClass :: hasProperty&lt;/a&gt; &amp;mdash; 속성이 정의되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="79ac09157ada3130873cad1190f7f62f6c40ce21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.implementsinterface&quot;&gt;ReflectionClass::implementsInterface()&lt;/a&gt; - Implements interface</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.implementsinterface&quot;&gt;ReflectionClass :: implementsInterface ()&lt;/a&gt; -인터페이스 구현</target>
        </trans-unit>
        <trans-unit id="38d71352b1fc525113944f7c0e7cfad9bee52da8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.implementsinterface&quot;&gt;ReflectionClass::implementsInterface&lt;/a&gt; &amp;mdash; Implements interface</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.implementsinterface&quot;&gt;ReflectionClass :: implementsInterface&lt;/a&gt; &amp;mdash; 인터페이스 구현</target>
        </trans-unit>
        <trans-unit id="b7037cfe99019f298f6cd075f7c12f30228bb7cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.innamespace&quot;&gt;ReflectionClass::inNamespace&lt;/a&gt; &amp;mdash; Checks if in namespace</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.innamespace&quot;&gt;ReflectionClass :: inNamespace&lt;/a&gt; &amp;mdash; 네임 스페이스에 있는지 확인</target>
        </trans-unit>
        <trans-unit id="2940917ecb95531fd4cd5fee1b28eb5142a16936" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isabstract&quot;&gt;ReflectionClass::isAbstract()&lt;/a&gt; - Checks if class is abstract</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isabstract&quot;&gt;ReflectionClass :: isAbstract ()&lt;/a&gt; -클래스가 추상인지 확인</target>
        </trans-unit>
        <trans-unit id="5dfcfd00ed4b9eb0ca3eb1bb1d1dfc3a200a67b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isabstract&quot;&gt;ReflectionClass::isAbstract&lt;/a&gt; &amp;mdash; Checks if class is abstract</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isabstract&quot;&gt;ReflectionClass :: isAbstract&lt;/a&gt; &amp;mdash; 클래스가 추상인지 확인</target>
        </trans-unit>
        <trans-unit id="a5e1f2ad011ad255dc06032e1f518f2028f380c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isanonymous&quot;&gt;ReflectionClass::isAnonymous&lt;/a&gt; &amp;mdash; Checks if class is anonymous</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isanonymous&quot;&gt;ReflectionClass :: isAnonymous&lt;/a&gt; &amp;mdash; 클래스가 익명인지 확인</target>
        </trans-unit>
        <trans-unit id="76962c783537d756ddf7688304d8e92aafe63732" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.iscloneable&quot;&gt;ReflectionClass::isCloneable&lt;/a&gt; &amp;mdash; Returns whether this class is cloneable</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.iscloneable&quot;&gt;ReflectionClass :: isCloneable&lt;/a&gt; &amp;mdash;이 클래스가 복제 가능한지 여부를 반환합니다</target>
        </trans-unit>
        <trans-unit id="93fb25f2fbda4770376cb8489e6d341184479335" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isfinal&quot;&gt;ReflectionClass::isFinal()&lt;/a&gt; - Checks if class is final</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isfinal&quot;&gt;ReflectionClass :: isFinal ()&lt;/a&gt; -클래스가 최종인지 확인</target>
        </trans-unit>
        <trans-unit id="963855aa2e94acfc66a19d766835eaac4aa2cd55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isfinal&quot;&gt;ReflectionClass::isFinal&lt;/a&gt; &amp;mdash; Checks if class is final</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isfinal&quot;&gt;ReflectionClass :: isFinal&lt;/a&gt; &amp;mdash; 클래스가 마지막인지 확인</target>
        </trans-unit>
        <trans-unit id="a6dff6b950cbe0d47dc62b8003ac2ae2300db29b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isinstance&quot;&gt;ReflectionClass::isInstance()&lt;/a&gt; - Checks class for instance</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isinstance&quot;&gt;ReflectionClass :: isInstance ()&lt;/a&gt; -인스턴스를 확인합니다</target>
        </trans-unit>
        <trans-unit id="ac5d7b7e97ddf1f19b42dd2fdd6ba31effcbac8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isinstance&quot;&gt;ReflectionClass::isInstance&lt;/a&gt; &amp;mdash; Checks class for instance</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isinstance&quot;&gt;ReflectionClass :: isInstance&lt;/a&gt; &amp;mdash; 클래스를 확인합니다</target>
        </trans-unit>
        <trans-unit id="e096cd1080a8d99a7744387b4fec56aecb2dacfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isinstantiable&quot;&gt;ReflectionClass::isInstantiable&lt;/a&gt; &amp;mdash; Checks if the class is instantiable</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isinstantiable&quot;&gt;ReflectionClass :: isInstantiable&lt;/a&gt; &amp;mdash; 클래스가 인스턴스화 가능한지 검사</target>
        </trans-unit>
        <trans-unit id="93294e859cbca9e56fe523c385ade87990a8dd48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isinterface&quot;&gt;ReflectionClass::isInterface()&lt;/a&gt; - Checks if the class is an interface</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isinterface&quot;&gt;ReflectionClass :: isInterface ()&lt;/a&gt; -클래스가 인터페이스인지 확인</target>
        </trans-unit>
        <trans-unit id="41a3a20b224ff4798cef5f01d16b65b6904f34bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isinterface&quot;&gt;ReflectionClass::isInterface&lt;/a&gt; &amp;mdash; Checks if the class is an interface</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isinterface&quot;&gt;ReflectionClass :: isInterface&lt;/a&gt; &amp;mdash; 클래스가 인터페이스인지 확인</target>
        </trans-unit>
        <trans-unit id="4501778c5ed6d8581571acf1460d7d65b1e0ca32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isinternal&quot;&gt;ReflectionClass::isInternal()&lt;/a&gt; - Checks if class is defined internally by an extension, or the core</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isinternal&quot;&gt;ReflectionClass :: isInternal ()&lt;/a&gt; -클래스가 확장 또는 코어에 의해 내부적으로 정의되었는지 확인</target>
        </trans-unit>
        <trans-unit id="3f3537b4ec036dbb17b4b8c322598fb6db8111a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isinternal&quot;&gt;ReflectionClass::isInternal&lt;/a&gt; &amp;mdash; Checks if class is defined internally by an extension, or the core</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isinternal&quot;&gt;ReflectionClass :: isInternal&lt;/a&gt; &amp;mdash; 클래스가 확장 또는 핵심에 의해 내부적으로 정의되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="3337f942a52be81e1f86ceff7512318fd0ced227" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isiterable&quot;&gt;ReflectionClass::isIterable&lt;/a&gt; &amp;mdash; Check whether this class is iterable</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isiterable&quot;&gt;ReflectionClass :: isIterable&lt;/a&gt; &amp;mdash;이 클래스가 반복 가능한지 확인합니다</target>
        </trans-unit>
        <trans-unit id="1ab8d4c88e7ff1c8dc6e4517b3d394d68aae83bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isiterateable&quot;&gt;ReflectionClass::isIterateable&lt;/a&gt; &amp;mdash; Alias of ReflectionClass::isIterable</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isiterateable&quot;&gt;ReflectionClass :: isIterateable&lt;/a&gt; &amp;mdash; ReflectionClass :: isIterable의 별칭</target>
        </trans-unit>
        <trans-unit id="867bb2063f68a63f8a92942eda00b1736e862365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isiterateable&quot;&gt;ReflectionClass::isIterateable&lt;/a&gt; &amp;mdash; Checks if iterateable</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isiterateable&quot;&gt;ReflectionClass :: isIterateable&lt;/a&gt; &amp;mdash; 반복 가능한지 검사</target>
        </trans-unit>
        <trans-unit id="16a7351743a3f95f9ff3b8157f0cc3d5cb219214" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.issubclassof&quot;&gt;ReflectionClass::isSubclassOf()&lt;/a&gt; - Checks if a subclass</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.issubclassof&quot;&gt;ReflectionClass :: isSubclassOf ()&lt;/a&gt; -서브 클래스인지 확인</target>
        </trans-unit>
        <trans-unit id="5a7ce81fb732763ffbd88cee7334427e1d098f3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.issubclassof&quot;&gt;ReflectionClass::isSubclassOf&lt;/a&gt; &amp;mdash; Checks if a subclass</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.issubclassof&quot;&gt;ReflectionClass :: isSubclassOf&lt;/a&gt; &amp;mdash; 서브 클래스인지 확인</target>
        </trans-unit>
        <trans-unit id="3f0b252fbac757acfc931db5f10737f9d4c87573" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.istrait&quot;&gt;ReflectionClass::isTrait&lt;/a&gt; &amp;mdash; Returns whether this is a trait</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.istrait&quot;&gt;ReflectionClass :: isTrait&lt;/a&gt; &amp;mdash; 이것이 특성인지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="32277ca8b5461b614afd85ffd7dca9323a8cf659" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isuserdefined&quot;&gt;ReflectionClass::isUserDefined()&lt;/a&gt; - Checks if user defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isuserdefined&quot;&gt;ReflectionClass :: isUserDefined ()&lt;/a&gt; -사용자 정의 여부를 확인</target>
        </trans-unit>
        <trans-unit id="d4941ec6b405859228643b15b2728749c94e5381" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.isuserdefined&quot;&gt;ReflectionClass::isUserDefined&lt;/a&gt; &amp;mdash; Checks if user defined</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.isuserdefined&quot;&gt;ReflectionClass :: isUserDefined&lt;/a&gt; &amp;mdash; 사용자 정의 여부를 확인합니다</target>
        </trans-unit>
        <trans-unit id="cfd75f84e0cdc77c6f9ef368bcf2d39264e94f33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.newinstance&quot;&gt;ReflectionClass::newInstance()&lt;/a&gt; - Creates a new class instance from given arguments</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.newinstance&quot;&gt;ReflectionClass :: newInstance ()&lt;/a&gt; -주어진 인수에서 새 클래스 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="567e4c3d10b86200b87439a109563e6f3259e1ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.newinstance&quot;&gt;ReflectionClass::newInstance&lt;/a&gt; &amp;mdash; Creates a new class instance from given arguments</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.newinstance&quot;&gt;ReflectionClass :: newInstance&lt;/a&gt; &amp;mdash; 주어진 인수에서 새 클래스 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fc62b12442b5b5229dfbce2c19fca37e6e22b2e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.newinstanceargs&quot;&gt;ReflectionClass::newInstanceArgs()&lt;/a&gt; - Creates a new class instance from given arguments</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.newinstanceargs&quot;&gt;ReflectionClass :: newInstanceArgs ()&lt;/a&gt; -주어진 인수에서 새 클래스 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ec2168e3bf8d2e8de46c285971101f1c2f9d4ba4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.newinstanceargs&quot;&gt;ReflectionClass::newInstanceArgs&lt;/a&gt; &amp;mdash; Creates a new class instance from given arguments</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.newinstanceargs&quot;&gt;ReflectionClass :: newInstanceArgs&lt;/a&gt; &amp;mdash; 주어진 인수에서 새 클래스 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0e4b303105f34c456114c3343ddc1c7cef61de2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.newinstancewithoutconstructor&quot;&gt;ReflectionClass::newInstanceWithoutConstructor()&lt;/a&gt; - Creates a new class instance without invoking the constructor</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.newinstancewithoutconstructor&quot;&gt;ReflectionClass :: newInstanceWithoutConstructor ()&lt;/a&gt; -생성자를 호출하지 않고 새 클래스 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e2c6908a365de85d70073136e8f13c162c85a8fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.newinstancewithoutconstructor&quot;&gt;ReflectionClass::newInstanceWithoutConstructor&lt;/a&gt; &amp;mdash; Creates a new class instance without invoking the constructor</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.newinstancewithoutconstructor&quot;&gt;ReflectionClass :: newInstanceWithoutConstructor&lt;/a&gt; &amp;mdash; 생성자를 호출하지 않고 새 클래스 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9ac70f5a9bdc461e7fa09262fe3b55ee4e1b9091" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.setstaticpropertyvalue&quot;&gt;ReflectionClass::setStaticPropertyValue()&lt;/a&gt; - Sets static property value</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.setstaticpropertyvalue&quot;&gt;ReflectionClass :: setStaticPropertyValue ()&lt;/a&gt; -정적 속성 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="8b7f9fd64a43babcd1afcac5a9a80fb12ddebe69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.setstaticpropertyvalue&quot;&gt;ReflectionClass::setStaticPropertyValue&lt;/a&gt; &amp;mdash; Sets static property value</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.setstaticpropertyvalue&quot;&gt;ReflectionClass :: setStaticPropertyValue&lt;/a&gt; &amp;mdash; 정적 속성 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="ec4ade509ad12a4c731a4b4177ad838758553732" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.tostring&quot;&gt;ReflectionClass::__toString()&lt;/a&gt; - Returns the string representation of the ReflectionClass object</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.tostring&quot;&gt;ReflectionClass :: __ toString ()&lt;/a&gt; -ReflectionClass 객체의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03aa1a0ece892bac1bfd31adda9f75324e67f2ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclass.tostring&quot;&gt;ReflectionClass::__toString&lt;/a&gt; &amp;mdash; Returns the string representation of the ReflectionClass object</source>
          <target state="translated">&lt;a href=&quot;reflectionclass.tostring&quot;&gt;ReflectionClass :: __ toString&lt;/a&gt; &amp;mdash; ReflectionClass 객체의 문자열 표현을 반환합니다</target>
        </trans-unit>
        <trans-unit id="547768c8abb4c90d3765005f0a9f8d44a0780076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.construct&quot;&gt;ReflectionClassConstant::__construct&lt;/a&gt; &amp;mdash; Constructs a ReflectionClassConstant</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.construct&quot;&gt;ReflectionClassConstant :: __ construct&lt;/a&gt; &amp;mdash; ReflectionClassConstant를 생성합니다</target>
        </trans-unit>
        <trans-unit id="dfbedf3b22f6c8473f85f1fd669cd8d5b8a2d089" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.export&quot;&gt;ReflectionClassConstant::export()&lt;/a&gt; - Export</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.export&quot;&gt;ReflectionClassConstant :: export ()&lt;/a&gt; -내보내기</target>
        </trans-unit>
        <trans-unit id="b474cbf4623e1c163535a0116e1f390c6f3ecae8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.export&quot;&gt;ReflectionClassConstant::export&lt;/a&gt; &amp;mdash; Export</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.export&quot;&gt;ReflectionClassConstant :: export&lt;/a&gt; &amp;mdash; 내보내기</target>
        </trans-unit>
        <trans-unit id="941986460a3e283b9a5dcd41ca43b5a5bc3d8ecb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.getdeclaringclass&quot;&gt;ReflectionClassConstant::getDeclaringClass&lt;/a&gt; &amp;mdash; Gets declaring class</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.getdeclaringclass&quot;&gt;ReflectionClassConstant :: getDeclaringClass&lt;/a&gt; &amp;mdash; 선언 클래스를 얻는다</target>
        </trans-unit>
        <trans-unit id="63496cbb1f7e02380aa6d7c95bc3bb39771fbcf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.getdoccomment&quot;&gt;ReflectionClassConstant::getDocComment&lt;/a&gt; &amp;mdash; Gets doc comments</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.getdoccomment&quot;&gt;ReflectionClassConstant :: getDocComment&lt;/a&gt; &amp;mdash; 문서 주석을 얻는다</target>
        </trans-unit>
        <trans-unit id="76248d59123fc5d0f5e2fdd21cdb77c2d7f4d69e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.getmodifiers&quot;&gt;ReflectionClassConstant::getModifiers()&lt;/a&gt; - Gets the class constant modifiers</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.getmodifiers&quot;&gt;ReflectionClassConstant :: getModifiers ()&lt;/a&gt; -클래스 상수 수정자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a880fc3f807c21ee3a0176e2cf3af36a6b24499d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.getmodifiers&quot;&gt;ReflectionClassConstant::getModifiers&lt;/a&gt; &amp;mdash; Gets the class constant modifiers</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.getmodifiers&quot;&gt;ReflectionClassConstant :: getModifiers&lt;/a&gt; &amp;mdash; 클래스 상수 수정자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="60a89722ca65598e946774dfecb459001fe9e7e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.getname&quot;&gt;ReflectionClassConstant::getName&lt;/a&gt; &amp;mdash; Get name of the constant</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.getname&quot;&gt;ReflectionClassConstant :: getName&lt;/a&gt; &amp;mdash; 상수의 이름을 얻는다</target>
        </trans-unit>
        <trans-unit id="cb0a5e56940eaea2dc0f980ec065610ab1c24c0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.getvalue&quot;&gt;ReflectionClassConstant::getValue&lt;/a&gt; &amp;mdash; Gets value</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.getvalue&quot;&gt;ReflectionClassConstant :: getValue&lt;/a&gt; &amp;mdash; 값을 얻는다</target>
        </trans-unit>
        <trans-unit id="c955f6696ef48bae3a23a2d05d0a5d93c5affb3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.isprivate&quot;&gt;ReflectionClassConstant::isPrivate()&lt;/a&gt; - Checks if class constant is private</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.isprivate&quot;&gt;ReflectionClassConstant :: isPrivate ()&lt;/a&gt; -클래스 상수가 비공개인지 확인</target>
        </trans-unit>
        <trans-unit id="cd2eaa2f079a4c19822bdb828c9529a08315747c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.isprivate&quot;&gt;ReflectionClassConstant::isPrivate&lt;/a&gt; &amp;mdash; Checks if class constant is private</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.isprivate&quot;&gt;ReflectionClassConstant :: isPrivate&lt;/a&gt; &amp;mdash; 클래스 상수가 private인지 확인</target>
        </trans-unit>
        <trans-unit id="e377ee008558f49b3a80f377bbfdfaa95097582f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.isprotected&quot;&gt;ReflectionClassConstant::isProtected()&lt;/a&gt; - Checks if class constant is protected</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.isprotected&quot;&gt;ReflectionClassConstant :: isProtected ()&lt;/a&gt; -클래스 상수가 보호되는지 확인</target>
        </trans-unit>
        <trans-unit id="01de83bb63f1511badec788cfc43415c1e96c5fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.isprotected&quot;&gt;ReflectionClassConstant::isProtected&lt;/a&gt; &amp;mdash; Checks if class constant is protected</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.isprotected&quot;&gt;ReflectionClassConstant :: isProtected&lt;/a&gt; &amp;mdash; 클래스 상수가 보호되는지 확인</target>
        </trans-unit>
        <trans-unit id="8ffbdeed56bd076d27579389fe084b1e074007f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.ispublic&quot;&gt;ReflectionClassConstant::isPublic()&lt;/a&gt; - Checks if class constant is public</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.ispublic&quot;&gt;ReflectionClassConstant :: isPublic ()&lt;/a&gt; -클래스 상수가 public인지 확인</target>
        </trans-unit>
        <trans-unit id="27cb873e4cc1b2050140a0e420aab13cd0cf0aa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.ispublic&quot;&gt;ReflectionClassConstant::isPublic&lt;/a&gt; &amp;mdash; Checks if class constant is public</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.ispublic&quot;&gt;ReflectionClassConstant :: isPublic&lt;/a&gt; &amp;mdash; 클래스 상수가 public인지 확인</target>
        </trans-unit>
        <trans-unit id="2ba78de8e6d57ce77d1db28f350e271a0dfc9649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.tostring&quot;&gt;ReflectionClassConstant::__toString()&lt;/a&gt; - Returns the string representation of the ReflectionClassConstant object</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.tostring&quot;&gt;ReflectionClassConstant :: __ toString ()&lt;/a&gt; -ReflectionClassConstant 객체의 문자열 표현을 반환합니다</target>
        </trans-unit>
        <trans-unit id="7f59ae5289e2477620c34fb117a96ada7c7a580f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionclassconstant.tostring&quot;&gt;ReflectionClassConstant::__toString&lt;/a&gt; &amp;mdash; Returns the string representation of the ReflectionClassConstant object</source>
          <target state="translated">&lt;a href=&quot;reflectionclassconstant.tostring&quot;&gt;ReflectionClassConstant :: __ toString&lt;/a&gt; &amp;mdash; ReflectionClassConstant 객체의 문자열 표현을 반환합니다</target>
        </trans-unit>
        <trans-unit id="0e40077cf1968050057e05311a095fc5aaca45dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.clone&quot;&gt;ReflectionExtension::__clone&lt;/a&gt; &amp;mdash; Clones</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.clone&quot;&gt;ReflectionExtension :: __ clone&lt;/a&gt; &amp;mdash; 클론</target>
        </trans-unit>
        <trans-unit id="a35a86d1d74f6f6f8b02ccd42a0964d17fb00559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.construct&quot;&gt;ReflectionExtension::__construct()&lt;/a&gt; - Constructs a ReflectionExtension</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.construct&quot;&gt;ReflectionExtension :: __ 구조 ()&lt;/a&gt; - 구성하는 ReflectionExtension</target>
        </trans-unit>
        <trans-unit id="3fd6d48b770a68ec84505c28dc0470fda15d9b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.construct&quot;&gt;ReflectionExtension::__construct&lt;/a&gt; &amp;mdash; Constructs a ReflectionExtension</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.construct&quot;&gt;ReflectionExtension :: __ construct&lt;/a&gt; &amp;mdash; ReflectionExtension을 구성합니다</target>
        </trans-unit>
        <trans-unit id="534a1e8a33e89c82c5e65d1520fe35415c3b84d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.export&quot;&gt;ReflectionExtension::export()&lt;/a&gt; - Export</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.export&quot;&gt;ReflectionExtension :: export ()&lt;/a&gt; -내보내기</target>
        </trans-unit>
        <trans-unit id="ebc3ea5a9a8beba567ed4840568dec753b17a754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.export&quot;&gt;ReflectionExtension::export&lt;/a&gt; &amp;mdash; Export</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.export&quot;&gt;ReflectionExtension :: export&lt;/a&gt; &amp;mdash; 내보내기</target>
        </trans-unit>
        <trans-unit id="1e689eef9c5822b28d2c1596a611eb8a3d9acb77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getclasses&quot;&gt;ReflectionExtension::getClasses()&lt;/a&gt; - Gets classes</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getclasses&quot;&gt;ReflectionExtension :: getClasses ()&lt;/a&gt; -클래스를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="5df94c54b47272a704c3aaeb3069aac2668f6d97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getclasses&quot;&gt;ReflectionExtension::getClasses&lt;/a&gt; &amp;mdash; Gets classes</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getclasses&quot;&gt;ReflectionExtension :: getClasses&lt;/a&gt; &amp;mdash; 클래스를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="48b2ba0c869d8ba718a5dc99969717606870c6bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getclassnames&quot;&gt;ReflectionExtension::getClassNames()&lt;/a&gt; - Gets class names</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getclassnames&quot;&gt;ReflectionExtension :: getClassNames ()&lt;/a&gt; -클래스 이름을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="32d2665d7f724146b6c80a7bc21144b06b70e0ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getclassnames&quot;&gt;ReflectionExtension::getClassNames&lt;/a&gt; &amp;mdash; Gets class names</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getclassnames&quot;&gt;ReflectionExtension :: getClassNames&lt;/a&gt; &amp;mdash; 클래스 이름을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="e7f72bb0c8d05450ce0c01db0e8f1317398919df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getconstants&quot;&gt;ReflectionExtension::getConstants()&lt;/a&gt; - Gets constants</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getconstants&quot;&gt;ReflectionExtension :: getConstants ()&lt;/a&gt; -상수를 얻습니다</target>
        </trans-unit>
        <trans-unit id="8c5f410675675644424c0ed4d7fd241858a84e1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getconstants&quot;&gt;ReflectionExtension::getConstants&lt;/a&gt; &amp;mdash; Gets constants</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getconstants&quot;&gt;ReflectionExtension :: getConstants&lt;/a&gt; &amp;mdash; 상수를 얻습니다</target>
        </trans-unit>
        <trans-unit id="947023ea406f400e66bcbfa0b44bf9747a2045ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getdependencies&quot;&gt;ReflectionExtension::getDependencies&lt;/a&gt; &amp;mdash; Gets dependencies</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getdependencies&quot;&gt;ReflectionExtension :: getDependencies&lt;/a&gt; &amp;mdash; 의존성을 얻는다</target>
        </trans-unit>
        <trans-unit id="a3886847269a81fe0015e15363f15dcf5e2f5994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getfunctions&quot;&gt;ReflectionExtension::getFunctions()&lt;/a&gt; - Gets extension functions</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getfunctions&quot;&gt;ReflectionExtension :: getFunctions ()&lt;/a&gt; -확장 함수를 얻는다</target>
        </trans-unit>
        <trans-unit id="bc73b56e47ce0f473929a85aa19119e37f8600d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getfunctions&quot;&gt;ReflectionExtension::getFunctions&lt;/a&gt; &amp;mdash; Gets extension functions</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getfunctions&quot;&gt;ReflectionExtension :: getFunctions&lt;/a&gt; &amp;mdash; 확장 함수를 얻는다</target>
        </trans-unit>
        <trans-unit id="c1d773b06ba72f9d8c09f8eab388211145b417f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getinientries&quot;&gt;ReflectionExtension::getINIEntries()&lt;/a&gt; - Gets extension ini entries</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getinientries&quot;&gt;ReflectionExtension :: getINIEntries ()&lt;/a&gt; -확장 ini 항목을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="189c95988357ef03524d330d2e87c4d9fd85fe35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getinientries&quot;&gt;ReflectionExtension::getINIEntries&lt;/a&gt; &amp;mdash; Gets extension ini entries</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getinientries&quot;&gt;ReflectionExtension :: getINIEntries&lt;/a&gt; &amp;mdash; 확장 ini 엔트리를 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="1256cf76774d8644be05a435de36cbc3dfa926d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getname&quot;&gt;ReflectionExtension::getName()&lt;/a&gt; - Gets extension name</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getname&quot;&gt;ReflectionExtension :: getName ()&lt;/a&gt; -확장명을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="7950cf061215ed5e569ac6c721e665fe53e762be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getname&quot;&gt;ReflectionExtension::getName&lt;/a&gt; &amp;mdash; Gets extension name</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getname&quot;&gt;ReflectionExtension :: getName&lt;/a&gt; &amp;mdash; 확장명을 얻는다</target>
        </trans-unit>
        <trans-unit id="9cb1d5981ac499c2e345f009c7a46b6bcb7237c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.getversion&quot;&gt;ReflectionExtension::getVersion&lt;/a&gt; &amp;mdash; Gets extension version</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.getversion&quot;&gt;ReflectionExtension :: getVersion&lt;/a&gt; &amp;mdash; 확장 버전을 얻는다</target>
        </trans-unit>
        <trans-unit id="7380d36a59b89ecdefee266691d10bd1e0a31f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.info&quot;&gt;ReflectionExtension::info()&lt;/a&gt; - Print extension info</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.info&quot;&gt;ReflectionExtension :: info ()&lt;/a&gt; -인쇄 확장 정보</target>
        </trans-unit>
        <trans-unit id="c09ca1ecc73780ce97003454b9e9175b2fec8ae1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.info&quot;&gt;ReflectionExtension::info&lt;/a&gt; &amp;mdash; Print extension info</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.info&quot;&gt;ReflectionExtension :: info&lt;/a&gt; &amp;mdash; 확장 정보 인쇄</target>
        </trans-unit>
        <trans-unit id="859cffe998fcd82f353cb21a94a185602b887727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.ispersistent&quot;&gt;ReflectionExtension::isPersistent()&lt;/a&gt; - Returns whether this extension is persistent</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.ispersistent&quot;&gt;ReflectionExtension :: isPersistent ()&lt;/a&gt; -이 확장이 영구적인지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="6c7f0810f13cab9c83b217896d9617763cc130a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.ispersistent&quot;&gt;ReflectionExtension::isPersistent&lt;/a&gt; &amp;mdash; Returns whether this extension is persistent</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.ispersistent&quot;&gt;ReflectionExtension :: isPersistent&lt;/a&gt; &amp;mdash;이 확장이 영구적인지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="d08a2dc96c984bc9be8f5d997610137388de87fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.istemporary&quot;&gt;ReflectionExtension::isTemporary()&lt;/a&gt; - Returns whether this extension is temporary</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.istemporary&quot;&gt;ReflectionExtension :: isTemporary ()&lt;/a&gt; -이 확장이 임시인지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="6f7c4761b2dbac1612225726067c6dcc91f16999" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.istemporary&quot;&gt;ReflectionExtension::isTemporary&lt;/a&gt; &amp;mdash; Returns whether this extension is temporary</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.istemporary&quot;&gt;ReflectionExtension :: isTemporary&lt;/a&gt; &amp;mdash;이 확장이 임시인지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="231c3bbf3c279d4c33c49cdd170199a9756974fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.tostring&quot;&gt;ReflectionExtension::__toString()&lt;/a&gt; - To string</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.tostring&quot;&gt;ReflectionExtension :: __ toString ()&lt;/a&gt; -문자열로</target>
        </trans-unit>
        <trans-unit id="c542d45b9ef7dc805be746be128ca1dada7ca361" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionextension.tostring&quot;&gt;ReflectionExtension::__toString&lt;/a&gt; &amp;mdash; To string</source>
          <target state="translated">&lt;a href=&quot;reflectionextension.tostring&quot;&gt;ReflectionExtension :: __ toString&lt;/a&gt; &amp;mdash; 문자열로</target>
        </trans-unit>
        <trans-unit id="920685b13016fffa9118c000a2b0fc11120a06e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionfunction.construct&quot;&gt;ReflectionFunction::__construct()&lt;/a&gt; - Constructs a ReflectionFunction object</source>
          <target state="translated">&lt;a href=&quot;reflectionfunction.construct&quot;&gt;ReflectionFunction :: __ construct ()&lt;/a&gt; -ReflectionFunction 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="b5b4689802300a6284bbf33879d9e7f770bd52e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reflectionfunction.construct&quot;&gt;ReflectionFunction::__construct&lt;/a&gt; &amp;mdash; Constructs a ReflectionFunction object</source>
          <target state="translated">&lt;a href=&quot;reflectionfunction.construct&quot;&gt;ReflectionFunction :: __ construct&lt;/a&gt; &amp;mdash; ReflectionFunction 객체를 생성합니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
