<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="32aaf46745d3d47e85fd3810cea3fe3570bb8a6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.last&quot;&gt;Ds\Deque::last&lt;/a&gt; &amp;mdash; Returns the last value</source>
          <target state="translated">&lt;a href=&quot;ds-deque.last&quot;&gt;Ds \ Deque :: last&lt;/a&gt; &amp;mdash; 마지막 값을 반환</target>
        </trans-unit>
        <trans-unit id="10e54bbf6ee5c9d072705e0b6c22a3878a543c37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.map&quot;&gt;Ds\Deque::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="translated">&lt;a href=&quot;ds-deque.map&quot;&gt;Ds \ Deque :: map&lt;/a&gt; &amp;mdash; 각 값에 콜백을 적용한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="c3e6662143a870ad96d0c4c0436783070dc7392c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.merge&quot;&gt;Ds\Deque::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the deque</source>
          <target state="translated">&lt;a href=&quot;ds-deque.merge&quot;&gt;Ds \ Deque :: merge&lt;/a&gt; &amp;mdash; 지정된 모든 값을 deque에 추가 한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="c40602d86a4ca6b79ba1b812a8ed08765bcdb30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.pop&quot;&gt;Ds\Deque::pop&lt;/a&gt; &amp;mdash; Removes and returns the last value</source>
          <target state="translated">&lt;a href=&quot;ds-deque.pop&quot;&gt;Ds \ Deque :: pop&lt;/a&gt; &amp;mdash; 마지막 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="cfdcdd1541f5686a5d660315780b28a48ed084a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.push&quot;&gt;Ds\Deque::push&lt;/a&gt; &amp;mdash; Adds values to the end of the deque</source>
          <target state="translated">&lt;a href=&quot;ds-deque.push&quot;&gt;Ds \ Deque :: push&lt;/a&gt; &amp;mdash; deque의 끝에 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="7a65210e891746d6a5a3ed77104c04ca0abdbf2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.reduce&quot;&gt;Ds\Deque::reduce&lt;/a&gt; &amp;mdash; Reduces the deque to a single value using a callback function</source>
          <target state="translated">&lt;a href=&quot;ds-deque.reduce&quot;&gt;Ds \ Deque :: reduce&lt;/a&gt; &amp;mdash; 콜백 함수를 사용하여 deque를 단일 값으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="d989056c28b4bff1dd62ea8aea788c435edacf80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.remove&quot;&gt;Ds\Deque::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by index</source>
          <target state="translated">&lt;a href=&quot;ds-deque.remove&quot;&gt;Ds \ Deque :: remove&lt;/a&gt; &amp;mdash; 인덱스로 값을 제거하고 반환</target>
        </trans-unit>
        <trans-unit id="2af3d2b5d0dc0b6661f199fc8a8538b08b3956a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.reverse&quot;&gt;Ds\Deque::reverse&lt;/a&gt; &amp;mdash; Reverses the deque in-place</source>
          <target state="translated">&lt;a href=&quot;ds-deque.reverse&quot;&gt;Ds \ Deque ::&lt;/a&gt; reverse-현재 위치에서 deque를 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="bdd6d08b009ff2b54714d452c90abbd940862ce8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.reversed&quot;&gt;Ds\Deque::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="translated">&lt;a href=&quot;ds-deque.reversed&quot;&gt;Ds \ Deque :: reversed&lt;/a&gt; &amp;mdash; 역전 된 복사본을 반환</target>
        </trans-unit>
        <trans-unit id="d7de0da1e98c46bad5afcce8f1a8b2ad77843662" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.rotate&quot;&gt;Ds\Deque::rotate&lt;/a&gt; &amp;mdash; Rotates the deque by a given number of rotations</source>
          <target state="translated">&lt;a href=&quot;ds-deque.rotate&quot;&gt;Ds \ Deque :: rotate&lt;/a&gt; &amp;mdash; 주어진 회전 수만큼 deque를 회전시킵니다</target>
        </trans-unit>
        <trans-unit id="c8eb7ff170765daeac96c253f804d602490e13ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.set&quot;&gt;Ds\Deque::set&lt;/a&gt; &amp;mdash; Updates a value at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-deque.set&quot;&gt;Ds \ Deque :: set&lt;/a&gt; &amp;mdash; 주어진 인덱스에서 값을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="ea60ac1eadb118b6f96c3211bb17a2e91e16719e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.shift&quot;&gt;Ds\Deque::shift&lt;/a&gt; &amp;mdash; Removes and returns the first value</source>
          <target state="translated">&lt;a href=&quot;ds-deque.shift&quot;&gt;Ds \ Deque :: shift&lt;/a&gt; &amp;mdash; 첫 번째 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="95bc086ab444b3619ebd437b643e5198158201e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.slice&quot;&gt;Ds\Deque::slice&lt;/a&gt; &amp;mdash; Returns a sub-deque of a given range</source>
          <target state="translated">&lt;a href=&quot;ds-deque.slice&quot;&gt;Ds \ Deque :: slice&lt;/a&gt; &amp;mdash; 주어진 범위의 서브 데크를 반환</target>
        </trans-unit>
        <trans-unit id="3671df939fc3796d363baf3213b44314c2ee7419" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.sort&quot;&gt;Ds\Deque::sort&lt;/a&gt; &amp;mdash; Sorts the deque in-place</source>
          <target state="translated">&lt;a href=&quot;ds-deque.sort&quot;&gt;Ds \ Deque :: sort&lt;/a&gt; &amp;mdash; 내부에서 deque를 정렬합니다</target>
        </trans-unit>
        <trans-unit id="630a71321dadfea59106ef2896e69d5bff819476" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.sorted&quot;&gt;Ds\Deque::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="translated">&lt;a href=&quot;ds-deque.sorted&quot;&gt;Ds \ Deque :: sorted&lt;/a&gt; &amp;mdash; 정렬 된 사본을 반환</target>
        </trans-unit>
        <trans-unit id="7ab205325224a550a37105a4d483820f4c1d20ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.sum&quot;&gt;Ds\Deque::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the deque</source>
          <target state="translated">&lt;a href=&quot;ds-deque.sum&quot;&gt;Ds \ Deque :: sum&lt;/a&gt; &amp;mdash; deque에있는 모든 값의 합을 반환</target>
        </trans-unit>
        <trans-unit id="70f9497b10e70a314abaf68312fa043fcf5b794f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.toarray&quot;&gt;Ds\Deque::toArray&lt;/a&gt; &amp;mdash; Converts the deque to an array</source>
          <target state="translated">&lt;a href=&quot;ds-deque.toarray&quot;&gt;Ds \ Deque :: toArray&lt;/a&gt; &amp;mdash; deque를 배열로 변환</target>
        </trans-unit>
        <trans-unit id="e4383fe457c27d92f258f7f71f3608a39ca1d8cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.unshift&quot;&gt;Ds\Deque::unshift&lt;/a&gt; &amp;mdash; Adds values to the front of the deque</source>
          <target state="translated">&lt;a href=&quot;ds-deque.unshift&quot;&gt;Ds \ Deque :: unshift&lt;/a&gt; &amp;mdash; deque 앞에 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="a1829d1f8f54888320115b57ad419ad8633563b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-hashable.equals&quot;&gt;Ds\Hashable::equals&lt;/a&gt; &amp;mdash; Determines whether an object is equal to the current instance</source>
          <target state="translated">&lt;a href=&quot;ds-hashable.equals&quot;&gt;Ds \ Hashable :: equals&lt;/a&gt; &amp;mdash; 객체가 현재 인스턴스와 같은지 확인</target>
        </trans-unit>
        <trans-unit id="46398217f867ae903bdbf6bae04b6afd27e44206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-hashable.hash&quot;&gt;Ds\Hashable::hash&lt;/a&gt; &amp;mdash; Returns a scalar value to be used as a hash value</source>
          <target state="translated">&lt;a href=&quot;ds-hashable.hash&quot;&gt;Ds \ Hashable :: hash&lt;/a&gt; &amp;mdash; 해시 값으로 사용될 스칼라 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="69adb8ca67bdb9f890a9a2a2c70c55dfa7277339" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.allocate&quot;&gt;Ds\Map::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="translated">&lt;a href=&quot;ds-map.allocate&quot;&gt;Ds \ Map :: allocate&lt;/a&gt; &amp;mdash; 필요한 용량에 충분한 메모리를 할당합니다</target>
        </trans-unit>
        <trans-unit id="0b14cc25e2f69bf63e487677a705f380cdabceff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.apply&quot;&gt;Ds\Map::apply&lt;/a&gt; &amp;mdash; Updates all values by applying a callback function to each value</source>
          <target state="translated">&lt;a href=&quot;ds-map.apply&quot;&gt;Ds \ Map :: apply&lt;/a&gt; &amp;mdash; 각 값에 콜백 함수를 적용하여 모든 값을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="f553d605902a879590c142afead55234c2a16175" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.capacity&quot;&gt;Ds\Map::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="translated">&lt;a href=&quot;ds-map.capacity&quot;&gt;Ds \ Map :: capacity&lt;/a&gt; &amp;mdash; 현재 용량을 반환</target>
        </trans-unit>
        <trans-unit id="5152e4ff7b2e34fb317c8d92843d5e4899229eef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.clear&quot;&gt;Ds\Map::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="translated">&lt;a href=&quot;ds-map.clear&quot;&gt;Ds \ Map ::&lt;/a&gt; clear-모든 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="f65bf1347cabd6901c9243f385329182bc316163" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.construct&quot;&gt;Ds\Map::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="translated">&lt;a href=&quot;ds-map.construct&quot;&gt;Ds \ Map :: __ construct&lt;/a&gt; &amp;mdash; 새 인스턴스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="0ac19a8ae9f5ac4371f26e8e830d44b57c858fdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.copy&quot;&gt;Ds\Map::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the map</source>
          <target state="translated">&lt;a href=&quot;ds-map.copy&quot;&gt;Ds \ Map :: copy-지도&lt;/a&gt; 의 얕은 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="e88562e6dada255f825356cc4352aa6e8b9c7cef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.count&quot;&gt;Ds\Map::count&lt;/a&gt; &amp;mdash; Returns the number of values in the map</source>
          <target state="translated">&lt;a href=&quot;ds-map.count&quot;&gt;Ds \ Map :: count&lt;/a&gt; &amp;mdash; 지도 의 값 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="1688acfec6a16ad1627bf1e751f906dbb4390b62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.diff&quot;&gt;Ds\Map::diff&lt;/a&gt; &amp;mdash; Creates a new map using keys that aren't in another map</source>
          <target state="translated">&lt;a href=&quot;ds-map.diff&quot;&gt;Ds \ Map :: diff&lt;/a&gt; &amp;mdash; 다른지도에없는 키를 사용하여 새지도를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a0200a58faeef57a3175eb038a3f360ae7454611" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.filter&quot;&gt;Ds\Map::filter&lt;/a&gt; &amp;mdash; Creates a new map using a callable to determine which pairs to include</source>
          <target state="translated">&lt;a href=&quot;ds-map.filter&quot;&gt;Ds \ Map :: filter&lt;/a&gt; &amp;mdash; 포함 할 쌍을 결정하기 위해 callable을 사용하여 새 맵을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c32e858763d3fc014a315d76902d444d0d04ebb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.first&quot;&gt;Ds\Map::first&lt;/a&gt; &amp;mdash; Returns the first pair in the map</source>
          <target state="translated">&lt;a href=&quot;ds-map.first&quot;&gt;Ds \ Map :: first&lt;/a&gt; &amp;mdash; 지도 의 첫 번째 쌍을 반환합니다</target>
        </trans-unit>
        <trans-unit id="71f5caf062578b4bc88befef4e5de386a30381b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.get&quot;&gt;Ds\Map::get&lt;/a&gt; &amp;mdash; Returns the value for a given key</source>
          <target state="translated">&lt;a href=&quot;ds-map.get&quot;&gt;Ds \ Map :: get&lt;/a&gt; &amp;mdash; 주어진 키의 값을 반환</target>
        </trans-unit>
        <trans-unit id="adc31308974e2647699e37ba9d66b55458945fd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.haskey&quot;&gt;Ds\Map::hasKey&lt;/a&gt; &amp;mdash; Determines whether the map contains a given key</source>
          <target state="translated">&lt;a href=&quot;ds-map.haskey&quot;&gt;Ds \ Map :: hasKey&lt;/a&gt; &amp;mdash;지도에 주어진 키가 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="a65493c4fcd9ee21d5cf32a7343b0c0c8ce6c17d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.hasvalue&quot;&gt;Ds\Map::hasValue&lt;/a&gt; &amp;mdash; Determines whether the map contains a given value</source>
          <target state="translated">&lt;a href=&quot;ds-map.hasvalue&quot;&gt;Ds \ Map :: hasValue&lt;/a&gt; &amp;mdash;지도에 주어진 값이 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="9bf8bb19b40c6e7a4671cae1838bc900ab5321ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.intersect&quot;&gt;Ds\Map::intersect&lt;/a&gt; &amp;mdash; Creates a new map by intersecting keys with another map</source>
          <target state="translated">&lt;a href=&quot;ds-map.intersect&quot;&gt;Ds \ Map :: intersect&lt;/a&gt; &amp;mdash; 다른지도와 키를 교차시켜 새지도를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d879f33d60536aed553ee3ec0c6817282aa8b2d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.isempty&quot;&gt;Ds\Map::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the map is empty</source>
          <target state="translated">&lt;a href=&quot;ds-map.isempty&quot;&gt;Ds \ Map :: isEmpty&lt;/a&gt; &amp;mdash;지도가 비어 있는지 여부를 반환합니다</target>
        </trans-unit>
        <trans-unit id="e6233fe01579a99e24d29d97d75aa01bf83bcdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.jsonserialize&quot;&gt;Ds\Map::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="translated">&lt;a href=&quot;ds-map.jsonserialize&quot;&gt;Ds \ Map :: jsonSerialize&lt;/a&gt; &amp;mdash; JSON으로 변환 할 수있는 표현을 반환</target>
        </trans-unit>
        <trans-unit id="75cd5851502375197873295e310ece368ae3b147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.keys&quot;&gt;Ds\Map::keys&lt;/a&gt; &amp;mdash; Returns a set of the map's keys</source>
          <target state="translated">&lt;a href=&quot;ds-map.keys&quot;&gt;Ds \ Map :: keys&lt;/a&gt; &amp;mdash;지도의 키 집합을 반환합니다</target>
        </trans-unit>
        <trans-unit id="576478632d7378c4d03e14ffc5ff6c9998d34c33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.ksort&quot;&gt;Ds\Map::ksort&lt;/a&gt; &amp;mdash; Sorts the map in-place by key</source>
          <target state="translated">&lt;a href=&quot;ds-map.ksort&quot;&gt;Ds \ Map :: ksort&lt;/a&gt; &amp;mdash; 키를 기준으로 현재 위치를 정렬합니다</target>
        </trans-unit>
        <trans-unit id="63b7ba77732b7f09e9e225109cabb59d6a4a3f10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.ksorted&quot;&gt;Ds\Map::ksorted&lt;/a&gt; &amp;mdash; Returns a copy, sorted by key</source>
          <target state="translated">&lt;a href=&quot;ds-map.ksorted&quot;&gt;Ds \ Map :: ksorted&lt;/a&gt; &amp;mdash; 키별로 정렬하여 사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e5ee46b506f486fd029d8e555cf9e92f94bd591e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.last&quot;&gt;Ds\Map::last&lt;/a&gt; &amp;mdash; Returns the last pair of the map</source>
          <target state="translated">&lt;a href=&quot;ds-map.last&quot;&gt;Ds \ Map :: last&lt;/a&gt; &amp;mdash; 지도 의 마지막 쌍을 반환합니다</target>
        </trans-unit>
        <trans-unit id="9ce43b0bdded61cd72bbbdc575a46a41addf3316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.map&quot;&gt;Ds\Map::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="translated">&lt;a href=&quot;ds-map.map&quot;&gt;Ds \ Map :: map&lt;/a&gt; &amp;mdash; 각 값에 콜백을 적용한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="31d21eddb60723a08c6a5df3af6e67b37d3779b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.merge&quot;&gt;Ds\Map::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given associations</source>
          <target state="translated">&lt;a href=&quot;ds-map.merge&quot;&gt;Ds \ Map :: merge&lt;/a&gt; &amp;mdash; 주어진 모든 연관을 추가 한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="8e6ff3b9cd4826c59589ccc2b77ce2610a1f30d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.pairs&quot;&gt;Ds\Map::pairs&lt;/a&gt; &amp;mdash; Returns a sequence containing all the pairs of the map</source>
          <target state="translated">&lt;a href=&quot;ds-map.pairs&quot;&gt;Ds \ Map :: pairs&lt;/a&gt; &amp;mdash; 지도의 모든 쌍을 포함하는 시퀀스를 반환합니다</target>
        </trans-unit>
        <trans-unit id="e5e0df55ad9072cb17877bfd729b83ada7d6ecbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.put&quot;&gt;Ds\Map::put&lt;/a&gt; &amp;mdash; Associates a key with a value</source>
          <target state="translated">&lt;a href=&quot;ds-map.put&quot;&gt;Ds \ Map :: put&lt;/a&gt; &amp;mdash; 키를 값과 연결</target>
        </trans-unit>
        <trans-unit id="26f09b71000c2431f7266521c136d4db08fbd58a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.putall&quot;&gt;Ds\Map::putAll&lt;/a&gt; &amp;mdash; Associates all key-value pairs of a traversable object or array</source>
          <target state="translated">&lt;a href=&quot;ds-map.putall&quot;&gt;Ds \ Map :: putAll&lt;/a&gt; &amp;mdash; 순회 가능한 객체 또는 배열의 모든 키-값 쌍을 연결합니다</target>
        </trans-unit>
        <trans-unit id="40dcb8a198868a5460eb93b2333807b5e340601d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.reduce&quot;&gt;Ds\Map::reduce&lt;/a&gt; &amp;mdash; Reduces the map to a single value using a callback function</source>
          <target state="translated">&lt;a href=&quot;ds-map.reduce&quot;&gt;Ds \ Map :: reduce&lt;/a&gt; &amp;mdash; 콜백 함수를 사용하여 맵을 단일 값으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="98e1e3c0fe98047842e2e7cf81c86735d960039b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.remove&quot;&gt;Ds\Map::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by key</source>
          <target state="translated">&lt;a href=&quot;ds-map.remove&quot;&gt;Ds \ Map :: remove-&lt;/a&gt; 키로 값을 제거하고 반환</target>
        </trans-unit>
        <trans-unit id="eeb83e7505e631629aec8f504036e26901ce3e03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.reverse&quot;&gt;Ds\Map::reverse&lt;/a&gt; &amp;mdash; Reverses the map in-place</source>
          <target state="translated">&lt;a href=&quot;ds-map.reverse&quot;&gt;Ds \ Map ::&lt;/a&gt; reverse-지도를 원래 위치로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="f2f7bf74020610492df160c333b30bed6ca89177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.reversed&quot;&gt;Ds\Map::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="translated">&lt;a href=&quot;ds-map.reversed&quot;&gt;Ds \ Map :: reversed&lt;/a&gt; &amp;mdash; 반전 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="3497ac5c749acb45e97d349a96f23108707aa806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.skip&quot;&gt;Ds\Map::skip&lt;/a&gt; &amp;mdash; Returns the pair at a given positional index</source>
          <target state="translated">&lt;a href=&quot;ds-map.skip&quot;&gt;Ds \ Map :: skip&lt;/a&gt; &amp;mdash; 주어진 위치 인덱스에서 쌍을 반환</target>
        </trans-unit>
        <trans-unit id="578e93e46e4681129704e3808efcb29195778c49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.slice&quot;&gt;Ds\Map::slice&lt;/a&gt; &amp;mdash; Returns a subset of the map defined by a starting index and length</source>
          <target state="translated">&lt;a href=&quot;ds-map.slice&quot;&gt;Ds \ Map :: slice&lt;/a&gt; &amp;mdash; 시작 색인과 길이로 정의 된지도의 하위 집합을 반환합니다</target>
        </trans-unit>
        <trans-unit id="e3d2f904687265bf3f0ff8658e24e2772a3a4347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.sort&quot;&gt;Ds\Map::sort&lt;/a&gt; &amp;mdash; Sorts the map in-place by value</source>
          <target state="translated">&lt;a href=&quot;ds-map.sort&quot;&gt;Ds \ Map :: sort&lt;/a&gt; &amp;mdash; 값을 기준으로 적절한 위치에지도를 정렬합니다</target>
        </trans-unit>
        <trans-unit id="fb0cec0e3a6c85571b9d3e3f6e62224bfa929fa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.sorted&quot;&gt;Ds\Map::sorted&lt;/a&gt; &amp;mdash; Returns a copy, sorted by value</source>
          <target state="translated">&lt;a href=&quot;ds-map.sorted&quot;&gt;Ds \ Map :: sorted&lt;/a&gt; &amp;mdash; 값별로 정렬 된 사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0cd8cd166e70c011b7f0c99eb14c6283b5740db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.sum&quot;&gt;Ds\Map::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the map</source>
          <target state="translated">&lt;a href=&quot;ds-map.sum&quot;&gt;Ds \ Map :: sum&lt;/a&gt; &amp;mdash;지도에있는 모든 값의 합을 반환합니다</target>
        </trans-unit>
        <trans-unit id="e3bd3e978be5f8d1043b1df21ee19938c41406e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.toarray&quot;&gt;Ds\Map::toArray&lt;/a&gt; &amp;mdash; Converts the map to an array</source>
          <target state="translated">&lt;a href=&quot;ds-map.toarray&quot;&gt;Ds \ Map :: toArray&lt;/a&gt; &amp;mdash;지도를 배열로 변환</target>
        </trans-unit>
        <trans-unit id="4a7983a4515570cbdaaa95a79791150e0d002c72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.union&quot;&gt;Ds\Map::union&lt;/a&gt; &amp;mdash; Creates a new map using values from the current instance and another map</source>
          <target state="translated">&lt;a href=&quot;ds-map.union&quot;&gt;Ds \ Map :: union&lt;/a&gt; &amp;mdash; 현재 인스턴스의 값과 다른 맵을 사용하여 새 맵을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="086e3dbf78ab46661151a5eca9cf3b46b20424ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.values&quot;&gt;Ds\Map::values&lt;/a&gt; &amp;mdash; Returns a sequence of the map's values</source>
          <target state="translated">&lt;a href=&quot;ds-map.values&quot;&gt;Ds \ Map :: values&lt;/a&gt; &amp;mdash; 지도 값 의 시퀀스를 반환합니다</target>
        </trans-unit>
        <trans-unit id="062bb7a909074f9e79408db604826e5b52169c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.xor&quot;&gt;Ds\Map::xor&lt;/a&gt; &amp;mdash; Creates a new map using keys of either the current instance or of another map, but not of both</source>
          <target state="translated">&lt;a href=&quot;ds-map.xor&quot;&gt;Ds \ Map :: xor&lt;/a&gt; &amp;mdash; 현재 인스턴스 또는 다른 맵의 키를 사용하여 새 맵을 작성하지만 둘 다 사용하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="086ad6b6c557605d5da1eff1e11932edfdb1ca72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.clear&quot;&gt;Ds\Pair::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="translated">&lt;a href=&quot;ds-pair.clear&quot;&gt;Ds \ Pair ::&lt;/a&gt; clear-모든 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="a6948bd5f14c482bb260fb3e22160ea24c6bab0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.construct&quot;&gt;Ds\Pair::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="translated">&lt;a href=&quot;ds-pair.construct&quot;&gt;Ds \ Pair :: __ construct&lt;/a&gt; &amp;mdash; 새 인스턴스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="af13b4f350278df79c23f2141ee094ca8861497a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.copy&quot;&gt;Ds\Pair::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the pair</source>
          <target state="translated">&lt;a href=&quot;ds-pair.copy&quot;&gt;Ds \ Pair :: copy-쌍&lt;/a&gt; 의 얕은 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="50feb3fefa76915d5d94fbaefc753ac6a6ebf118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.isempty&quot;&gt;Ds\Pair::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the pair is empty</source>
          <target state="translated">&lt;a href=&quot;ds-pair.isempty&quot;&gt;Ds \ Pair :: isEmpty&lt;/a&gt; &amp;mdash; 쌍이 비어 있는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="30d9ff7175c815419371f12d220fb6264cfb8dcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.jsonserialize&quot;&gt;Ds\Pair::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="translated">&lt;a href=&quot;ds-pair.jsonserialize&quot;&gt;Ds \ Pair :: jsonSerialize&lt;/a&gt; &amp;mdash; JSON으로 변환 할 수있는 표현을 반환</target>
        </trans-unit>
        <trans-unit id="78f28b3f9f95768e27bec1a8b67da6f8dad68849" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.toarray&quot;&gt;Ds\Pair::toArray&lt;/a&gt; &amp;mdash; Converts the pair to an array</source>
          <target state="translated">&lt;a href=&quot;ds-pair.toarray&quot;&gt;Ds \ Pair :: toArray&lt;/a&gt; &amp;mdash; 쌍을 배열로 변환</target>
        </trans-unit>
        <trans-unit id="b396557b5c19ec9add0827a4535d873ba40d7414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.allocate&quot;&gt;Ds\PriorityQueue::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.allocate&quot;&gt;Ds \ PriorityQueue :: allocate&lt;/a&gt; &amp;mdash; 필요한 용량에 충분한 메모리를 할당합니다</target>
        </trans-unit>
        <trans-unit id="6f7f20ced44ada02b15e6cf98e8417abab40f7c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.capacity&quot;&gt;Ds\PriorityQueue::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.capacity&quot;&gt;Ds \ PriorityQueue :: capacity&lt;/a&gt; &amp;mdash; 현재 용량을 반환합니다</target>
        </trans-unit>
        <trans-unit id="c9a2ddecf5490d272ddfe3e815f56d01f249f93d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.clear&quot;&gt;Ds\PriorityQueue::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.clear&quot;&gt;Ds \ PriorityQueue ::&lt;/a&gt; clear-모든 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="d446b35727ca7844518d7cf64c33c8a42e9f970a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.construct&quot;&gt;Ds\PriorityQueue::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.construct&quot;&gt;Ds \ PriorityQueue :: __ construct&lt;/a&gt; &amp;mdash; 새 인스턴스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="59deb09b2b6329c5edaf0b30468822e88c710a2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.copy&quot;&gt;Ds\PriorityQueue::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the queue</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.copy&quot;&gt;Ds \ PriorityQueue :: copy&lt;/a&gt; &amp;mdash; 대기열의 얕은 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="b33c4e2f1e44db634aaed258ad24cb5888ec0e01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.count&quot;&gt;Ds\PriorityQueue::count&lt;/a&gt; &amp;mdash; Returns the number of values in the queue</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.count&quot;&gt;Ds \ PriorityQueue :: count&lt;/a&gt; &amp;mdash; 큐의 값 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="54796bd5e64449d23e5b121691abd3308420e055" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.isempty&quot;&gt;Ds\PriorityQueue::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the queue is empty</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.isempty&quot;&gt;Ds \ PriorityQueue :: isEmpty&lt;/a&gt; &amp;mdash; 대기열이 비어 있는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="7121f437ee64b961945ced823d99c94754e7d04c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.jsonserialize&quot;&gt;Ds\PriorityQueue::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.jsonserialize&quot;&gt;Ds \ PriorityQueue :: jsonSerialize&lt;/a&gt; &amp;mdash; JSON으로 변환 할 수있는 표현을 반환</target>
        </trans-unit>
        <trans-unit id="9be4be868268d16f7d939274b74eccfb817410b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.peek&quot;&gt;Ds\PriorityQueue::peek&lt;/a&gt; &amp;mdash; Returns the value at the front of the queue</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.peek&quot;&gt;Ds \ PriorityQueue :: peek&lt;/a&gt; &amp;mdash; 대기열의 앞에 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="9876bbd02896b59b96ce610b5e2bde1e431ac89f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.pop&quot;&gt;Ds\PriorityQueue::pop&lt;/a&gt; &amp;mdash; Removes and returns the value with the highest priority</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.pop&quot;&gt;Ds \ PriorityQueue :: pop&lt;/a&gt; &amp;mdash; 우선 순위가 가장 높은 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="4cc4617dfdf54ce67eb75354200e98851c6fba1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.push&quot;&gt;Ds\PriorityQueue::push&lt;/a&gt; &amp;mdash; Pushes values into the queue</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.push&quot;&gt;Ds \ PriorityQueue :: push&lt;/a&gt; &amp;mdash; 값을 대기열로 푸시합니다</target>
        </trans-unit>
        <trans-unit id="4e9654bcb559463e99fa749d3c93f4deb56ca2b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.toarray&quot;&gt;Ds\PriorityQueue::toArray&lt;/a&gt; &amp;mdash; Converts the queue to an array</source>
          <target state="translated">&lt;a href=&quot;ds-priorityqueue.toarray&quot;&gt;Ds \ PriorityQueue :: toArray&lt;/a&gt; &amp;mdash; 대기열을 배열로 변환</target>
        </trans-unit>
        <trans-unit id="fc84d823fa852852dad5c7f2feec18f02ad0f7bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.allocate&quot;&gt;Ds\Queue::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="translated">&lt;a href=&quot;ds-queue.allocate&quot;&gt;Ds \ Queue :: allocate&lt;/a&gt; &amp;mdash; 필요한 용량에 충분한 메모리를 할당합니다</target>
        </trans-unit>
        <trans-unit id="619e7b5afe80c42442d4c11304720cd8146f9978" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.capacity&quot;&gt;Ds\Queue::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="translated">&lt;a href=&quot;ds-queue.capacity&quot;&gt;Ds \ Queue :: capacity&lt;/a&gt; &amp;mdash; 현재 용량을 반환합니다</target>
        </trans-unit>
        <trans-unit id="87c778fd98c163324d802e0a9a1ae032ad11d07f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.clear&quot;&gt;Ds\Queue::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="translated">&lt;a href=&quot;ds-queue.clear&quot;&gt;Ds \ Queue ::&lt;/a&gt; clear-모든 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="dca3e79d2710b92945cb6a86e5d541104910297b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.construct&quot;&gt;Ds\Queue::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="translated">&lt;a href=&quot;ds-queue.construct&quot;&gt;Ds \ Queue :: __ construct&lt;/a&gt; &amp;mdash; 새 인스턴스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="65b9209e1a680c379fbd3289181193429128e898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.copy&quot;&gt;Ds\Queue::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the queue</source>
          <target state="translated">&lt;a href=&quot;ds-queue.copy&quot;&gt;Ds \ Queue :: copy&lt;/a&gt; &amp;mdash; 대기열 의 얕은 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="7740f61200544bd0fd4e54b4c49691d20f6e0157" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.count&quot;&gt;Ds\Queue::count&lt;/a&gt; &amp;mdash; Returns the number of values in the queue</source>
          <target state="translated">&lt;a href=&quot;ds-queue.count&quot;&gt;Ds \ Queue :: count&lt;/a&gt; &amp;mdash; 대기열 의 값 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="a945d4cfbabd77d6f2f18f8b83d9b600118216f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.isempty&quot;&gt;Ds\Queue::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the queue is empty</source>
          <target state="translated">&lt;a href=&quot;ds-queue.isempty&quot;&gt;Ds \ Queue :: isEmpty&lt;/a&gt; &amp;mdash; 대기열이 비어 있는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="05f1448d54841bc210b69189599be757e86c9212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.jsonserialize&quot;&gt;Ds\Queue::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="translated">&lt;a href=&quot;ds-queue.jsonserialize&quot;&gt;Ds \ Queue :: jsonSerialize&lt;/a&gt; &amp;mdash; JSON으로 변환 할 수있는 표현을 반환</target>
        </trans-unit>
        <trans-unit id="dadcac3aa42168d405c0639c237e490b684926fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.peek&quot;&gt;Ds\Queue::peek&lt;/a&gt; &amp;mdash; Returns the value at the front of the queue</source>
          <target state="translated">&lt;a href=&quot;ds-queue.peek&quot;&gt;Ds \ Queue :: peek&lt;/a&gt; &amp;mdash; 대기열 전면의 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="0a46ac8d95ea543021ba490fd576fd3313597fed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.pop&quot;&gt;Ds\Queue::pop&lt;/a&gt; &amp;mdash; Removes and returns the value at the front of the queue</source>
          <target state="translated">&lt;a href=&quot;ds-queue.pop&quot;&gt;Ds \ Queue :: pop&lt;/a&gt; &amp;mdash; 대기열 앞의 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="b07833992d24164d2fa06553dac68cc61f8f7aa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.push&quot;&gt;Ds\Queue::push&lt;/a&gt; &amp;mdash; Pushes values into the queue</source>
          <target state="translated">&lt;a href=&quot;ds-queue.push&quot;&gt;Ds \ Queue :: push&lt;/a&gt; &amp;mdash; 값을 대기열로 푸시합니다</target>
        </trans-unit>
        <trans-unit id="152a5f894e8bad8c38dd406bd0655aa4a83e66f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.toarray&quot;&gt;Ds\Queue::toArray&lt;/a&gt; &amp;mdash; Converts the queue to an array</source>
          <target state="translated">&lt;a href=&quot;ds-queue.toarray&quot;&gt;Ds \ Queue :: toArray&lt;/a&gt; &amp;mdash; 대기열을 배열로 변환</target>
        </trans-unit>
        <trans-unit id="52c0b13a4c179056e3d15c427c542f01b0c53b97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.allocate&quot;&gt;Ds\Sequence::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.allocate&quot;&gt;Ds \ Sequence :: allocate&lt;/a&gt; &amp;mdash; 필요한 용량에 충분한 메모리를 할당합니다</target>
        </trans-unit>
        <trans-unit id="4047f3254b07ef669d9f5e6e1ff4871f212684db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.apply&quot;&gt;Ds\Sequence::apply&lt;/a&gt; &amp;mdash; Updates all values by applying a callback function to each value</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.apply&quot;&gt;Ds \ Sequence :: apply&lt;/a&gt; &amp;mdash; 각 값에 콜백 함수를 적용하여 모든 값을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="a3ba8099f10b0987a6348e4dd22c3768f3abc8f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.capacity&quot;&gt;Ds\Sequence::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.capacity&quot;&gt;Ds \ Sequence :: capacity&lt;/a&gt; &amp;mdash; 현재 용량을 반환</target>
        </trans-unit>
        <trans-unit id="ca3e234a040148940774cf6d5b5ca587850deadb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.contains&quot;&gt;Ds\Sequence::contains&lt;/a&gt; &amp;mdash; Determines if the sequence contains given values</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.contains&quot;&gt;Ds \ Sequence :: contains&lt;/a&gt; &amp;mdash; 시퀀스에 주어진 값이 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="c987c6144f4b0a46d1bd659ccc423b8d4efa37eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.filter&quot;&gt;Ds\Sequence::filter&lt;/a&gt; &amp;mdash; Creates a new sequence using a callable to determine which values to include</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.filter&quot;&gt;Ds \ Sequence :: filter&lt;/a&gt; &amp;mdash; 포함 할 값을 결정하기 위해 callable을 사용하여 새 시퀀스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b0964286d5cf61d0dedb8dfa549ced9c1a29de03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.find&quot;&gt;Ds\Sequence::find&lt;/a&gt; &amp;mdash; Attempts to find a value's index</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.find&quot;&gt;Ds \ Sequence :: find&lt;/a&gt; &amp;mdash; 값의 인덱스를 찾으려고합니다</target>
        </trans-unit>
        <trans-unit id="8e34fc77fca5cd91f266a14e8883cd9d32948a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.first&quot;&gt;Ds\Sequence::first&lt;/a&gt; &amp;mdash; Returns the first value in the sequence</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.first&quot;&gt;Ds \ Sequence :: first&lt;/a&gt; &amp;mdash; 시퀀스 의 첫 번째 값을 반환</target>
        </trans-unit>
        <trans-unit id="05124cd37ad9b7bc2a6f064eb84012ffa7641185" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.get&quot;&gt;Ds\Sequence::get&lt;/a&gt; &amp;mdash; Returns the value at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.get&quot;&gt;Ds \ Sequence :: get&lt;/a&gt; &amp;mdash; 주어진 인덱스에서 값을 반환</target>
        </trans-unit>
        <trans-unit id="c7e12738f4f9ae6973828782dc939c846604b219" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.insert&quot;&gt;Ds\Sequence::insert&lt;/a&gt; &amp;mdash; Inserts values at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.insert&quot;&gt;Ds \ Sequence :: insert&lt;/a&gt; &amp;mdash; 주어진 인덱스에 값을 삽입합니다</target>
        </trans-unit>
        <trans-unit id="5bd568bc9bfd66d175c02ceb94fdbbc913efd4fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.join&quot;&gt;Ds\Sequence::join&lt;/a&gt; &amp;mdash; Joins all values together as a string</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.join&quot;&gt;Ds \ Sequence :: join&lt;/a&gt; &amp;mdash; 모든 값을 문자열로 결합</target>
        </trans-unit>
        <trans-unit id="a94a2c72f8732a83b5908720380b0ec5c92c0417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.last&quot;&gt;Ds\Sequence::last&lt;/a&gt; &amp;mdash; Returns the last value</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.last&quot;&gt;Ds \ Sequence :: last&lt;/a&gt; &amp;mdash; 마지막 값을 반환</target>
        </trans-unit>
        <trans-unit id="93bc3c6d9b7fe84fdabb458a91bb44988401c759" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.map&quot;&gt;Ds\Sequence::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.map&quot;&gt;Ds \ Sequence :: map&lt;/a&gt; &amp;mdash; 각 값에 콜백을 적용한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="8ed0d04f2a802c2fe1bce135f45c1827d217a0d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.merge&quot;&gt;Ds\Sequence::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the sequence</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.merge&quot;&gt;Ds \ Sequence :: merge&lt;/a&gt; &amp;mdash; 주어진 모든 값을 시퀀스에 추가 한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="4d12a5ab1a3e97982f4bf1d361155382fed2d12b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.pop&quot;&gt;Ds\Sequence::pop&lt;/a&gt; &amp;mdash; Removes and returns the last value</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.pop&quot;&gt;Ds \ Sequence :: pop&lt;/a&gt; &amp;mdash; 마지막 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="0c3bda553776695d16633a2be927aeb735f7b73a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.push&quot;&gt;Ds\Sequence::push&lt;/a&gt; &amp;mdash; Adds values to the end of the sequence</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.push&quot;&gt;Ds \ Sequence :: push&lt;/a&gt; &amp;mdash; 시퀀스 의 끝에 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="cb2ae84318aa67b506549294922a490a0ea87a7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.reduce&quot;&gt;Ds\Sequence::reduce&lt;/a&gt; &amp;mdash; Reduces the sequence to a single value using a callback function</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.reduce&quot;&gt;Ds \ Sequence :: reduce&lt;/a&gt; &amp;mdash; 콜백 함수를 사용하여 시퀀스를 단일 값으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="891c537fd9c273678101257fd7d6eb8cfefdafd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.remove&quot;&gt;Ds\Sequence::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by index</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.remove&quot;&gt;Ds \ Sequence :: remove&lt;/a&gt; &amp;mdash; 인덱스로 값을 제거하고 반환</target>
        </trans-unit>
        <trans-unit id="0b4fa7ca6ada903d627fe1b3bca07cd03c5f6a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.reverse&quot;&gt;Ds\Sequence::reverse&lt;/a&gt; &amp;mdash; Reverses the sequence in-place</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.reverse&quot;&gt;Ds \ Sequence ::&lt;/a&gt; reverse-시퀀스를 현재 위치로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="9a6887b4b1e01b0738ff0baf2f10b27d9eb58421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.reversed&quot;&gt;Ds\Sequence::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.reversed&quot;&gt;Ds \ Sequence :: reversed&lt;/a&gt; &amp;mdash; 역전 된 복사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="f4e31126dd4c9c09df21c351d41e907dfdcfbf80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.rotate&quot;&gt;Ds\Sequence::rotate&lt;/a&gt; &amp;mdash; Rotates the sequence by a given number of rotations</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.rotate&quot;&gt;Ds \ Sequence :: rotate&lt;/a&gt; &amp;mdash; 주어진 회전 수만큼 시퀀스를 회전시킵니다</target>
        </trans-unit>
        <trans-unit id="751b7c2f77994e0cdcae9508b4a82f3ecb914df4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.set&quot;&gt;Ds\Sequence::set&lt;/a&gt; &amp;mdash; Updates a value at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.set&quot;&gt;Ds \ Sequence :: set&lt;/a&gt; &amp;mdash; 주어진 인덱스에서 값을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="eb48bf1867bbe36d7dfc329ff18d587a77afa298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.shift&quot;&gt;Ds\Sequence::shift&lt;/a&gt; &amp;mdash; Removes and returns the first value</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.shift&quot;&gt;Ds \ Sequence :: shift&lt;/a&gt; &amp;mdash; 첫 번째 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="71e268760428e517c32b4f6dc2a81de20689004f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.slice&quot;&gt;Ds\Sequence::slice&lt;/a&gt; &amp;mdash; Returns a sub-sequence of a given range</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.slice&quot;&gt;Ds \ Sequence :: slice&lt;/a&gt; &amp;mdash; 주어진 범위의 하위 시퀀스를 반환합니다</target>
        </trans-unit>
        <trans-unit id="f649f353ba3784038c4f05b1fd63398fcb8ae362" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.sort&quot;&gt;Ds\Sequence::sort&lt;/a&gt; &amp;mdash; Sorts the sequence in-place</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.sort&quot;&gt;Ds \ Sequence :: sort&lt;/a&gt; &amp;mdash; 시퀀스를 그 자리에서 정렬합니다</target>
        </trans-unit>
        <trans-unit id="c6c693999ac989c4b52fd60997ba1255dbba736a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.sorted&quot;&gt;Ds\Sequence::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.sorted&quot;&gt;Ds \ Sequence :: sorted&lt;/a&gt; &amp;mdash; 정렬 된 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="79c71fff36fa558caead319ed785148d2d6c9eb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.sum&quot;&gt;Ds\Sequence::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the sequence</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.sum&quot;&gt;Ds \ Sequence :: sum&lt;/a&gt; &amp;mdash; 시퀀스 의 모든 값의 합을 반환</target>
        </trans-unit>
        <trans-unit id="d929f91943d04fbc4b2ecef655526f1a4e00bfc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.unshift&quot;&gt;Ds\Sequence::unshift&lt;/a&gt; &amp;mdash; Adds values to the front of the sequence</source>
          <target state="translated">&lt;a href=&quot;ds-sequence.unshift&quot;&gt;Ds \ Sequence :: unshift&lt;/a&gt; &amp;mdash; 시퀀스 앞에 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="dbcd1e7b4725d298d35630ef7badf1a0381b17b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.add&quot;&gt;Ds\Set::add&lt;/a&gt; &amp;mdash; Adds values to the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.add&quot;&gt;Ds \ Set :: add&lt;/a&gt; &amp;mdash; 집합에 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="293d0dd771d3295d35819305ba10266504ddd9a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.allocate&quot;&gt;Ds\Set::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="translated">&lt;a href=&quot;ds-set.allocate&quot;&gt;Ds \ Set :: allocate&lt;/a&gt; &amp;mdash; 필요한 용량에 충분한 메모리를 할당합니다</target>
        </trans-unit>
        <trans-unit id="3989b44c44af72f1bc5621836fa87baccdf574e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.capacity&quot;&gt;Ds\Set::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="translated">&lt;a href=&quot;ds-set.capacity&quot;&gt;Ds \ Set :: capacity&lt;/a&gt; &amp;mdash; 현재 용량을 반환합니다</target>
        </trans-unit>
        <trans-unit id="cdb13a8f953c7ecf7dba8a4f8debaa61f4b465ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.clear&quot;&gt;Ds\Set::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="translated">&lt;a href=&quot;ds-set.clear&quot;&gt;Ds \ Set ::&lt;/a&gt; clear-모든 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="b8cb5bad78ae2695587bea435d09f4ff5beefaf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.construct&quot;&gt;Ds\Set::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="translated">&lt;a href=&quot;ds-set.construct&quot;&gt;Ds \ Set :: __ construct&lt;/a&gt; &amp;mdash; 새 인스턴스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="8b2d472f1f3fb80a60acdeaa47e65175ec5af509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.contains&quot;&gt;Ds\Set::contains&lt;/a&gt; &amp;mdash; Determines if the set contains all values</source>
          <target state="translated">&lt;a href=&quot;ds-set.contains&quot;&gt;Ds \ Set :: contains&lt;/a&gt; &amp;mdash; 집합에 모든 값이 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="3a76bef2ed2be5350707fd39ff0b0752b1ae33cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.copy&quot;&gt;Ds\Set::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.copy&quot;&gt;Ds \ Set :: copy-세트&lt;/a&gt; 의 얕은 사본을 반환</target>
        </trans-unit>
        <trans-unit id="b5943750721ae2a84b3e61133d349e6ebb78c83b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.count&quot;&gt;Ds\Set::count&lt;/a&gt; &amp;mdash; Returns the number of values in the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.count&quot;&gt;Ds \ Set :: count&lt;/a&gt; &amp;mdash; 집합 의 값 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="cfe952b15c29e4c2075d739f89929f13f5d9064f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.diff&quot;&gt;Ds\Set::diff&lt;/a&gt; &amp;mdash; Creates a new set using values that aren't in another set</source>
          <target state="translated">&lt;a href=&quot;ds-set.diff&quot;&gt;Ds \ Set :: diff&lt;/a&gt; &amp;mdash; 다른 세트에없는 값을 사용하여 새 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2047e231b4c1b5b4ec7e27a96ca5b9054459a251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.filter&quot;&gt;Ds\Set::filter&lt;/a&gt; &amp;mdash; Creates a new set using a callable to determine which values to include</source>
          <target state="translated">&lt;a href=&quot;ds-set.filter&quot;&gt;Ds \ Set :: filter&lt;/a&gt; &amp;mdash; 포함 할 값을 결정하기 위해 callable을 사용하여 새 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="caf2a9f0a00d7caac0abdf0061c754703797d85a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.first&quot;&gt;Ds\Set::first&lt;/a&gt; &amp;mdash; Returns the first value in the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.first&quot;&gt;Ds \ Set :: first&lt;/a&gt; &amp;mdash; 집합 의 첫 번째 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="214e5d65238a4ea1729f8f983edec18e7fbb4492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.get&quot;&gt;Ds\Set::get&lt;/a&gt; &amp;mdash; Returns the value at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-set.get&quot;&gt;Ds \ Set :: get&lt;/a&gt; &amp;mdash; 주어진 인덱스에서 값을 반환</target>
        </trans-unit>
        <trans-unit id="727bc7b1d1220c2a4e459dfed122936f611965cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.intersect&quot;&gt;Ds\Set::intersect&lt;/a&gt; &amp;mdash; Creates a new set by intersecting values with another set</source>
          <target state="translated">&lt;a href=&quot;ds-set.intersect&quot;&gt;Ds \ Set :: intersect&lt;/a&gt; &amp;mdash; 다른 세트와 값을 교차시켜 새 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e77429c5f039b6ee8a5a80e0bfb5203a6c3f9f0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.isempty&quot;&gt;Ds\Set::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the set is empty</source>
          <target state="translated">&lt;a href=&quot;ds-set.isempty&quot;&gt;Ds \ Set :: isEmpty&lt;/a&gt; &amp;mdash; 집합이 비어 있는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="98fd1447562c50a6eb066c0ea48f0346a2bf7dfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.join&quot;&gt;Ds\Set::join&lt;/a&gt; &amp;mdash; Joins all values together as a string</source>
          <target state="translated">&lt;a href=&quot;ds-set.join&quot;&gt;Ds \ Set :: join&lt;/a&gt; &amp;mdash; 모든 값을 문자열로 결합</target>
        </trans-unit>
        <trans-unit id="aa8986ab505c5977efffe520aeca2431c0efdd09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.jsonserialize&quot;&gt;Ds\Set::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="translated">&lt;a href=&quot;ds-set.jsonserialize&quot;&gt;Ds \ Set :: jsonSerialize&lt;/a&gt; &amp;mdash; JSON으로 변환 할 수있는 표현을 반환</target>
        </trans-unit>
        <trans-unit id="089908f58db80b5c85249af3ff300a6353d7204f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.last&quot;&gt;Ds\Set::last&lt;/a&gt; &amp;mdash; Returns the last value in the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.last&quot;&gt;Ds \ Set :: last&lt;/a&gt; &amp;mdash; 집합 의 마지막 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="572d745cf81bb89a5a7477f2cdb015e708194f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.merge&quot;&gt;Ds\Set::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.merge&quot;&gt;Ds \ Set :: merge&lt;/a&gt; &amp;mdash; 주어진 모든 값을 세트에 추가 한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="f13bab616c46a51e43b61368a69c575de347b5f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.reduce&quot;&gt;Ds\Set::reduce&lt;/a&gt; &amp;mdash; Reduces the set to a single value using a callback function</source>
          <target state="translated">&lt;a href=&quot;ds-set.reduce&quot;&gt;Ds \ Set :: reduce-&lt;/a&gt; 콜백 함수를 사용하여 집합을 단일 값으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="14337b571e9568bc39cc09eabb3057a0435673d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.remove&quot;&gt;Ds\Set::remove&lt;/a&gt; &amp;mdash; Removes all given values from the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.remove&quot;&gt;Ds \ Set :: remove-세트&lt;/a&gt; 에서 모든 주어진 값을 제거</target>
        </trans-unit>
        <trans-unit id="0768698834b006a18e9f5ea3bc54010bb8b81595" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.reverse&quot;&gt;Ds\Set::reverse&lt;/a&gt; &amp;mdash; Reverses the set in-place</source>
          <target state="translated">&lt;a href=&quot;ds-set.reverse&quot;&gt;Ds \ Set ::&lt;/a&gt; reverse-설정을 원래대로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="9e9f9afa7db37e12580ba25b86b641a6e3c81a1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.reversed&quot;&gt;Ds\Set::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="translated">&lt;a href=&quot;ds-set.reversed&quot;&gt;Ds \ Set :: reversed&lt;/a&gt; &amp;mdash; 역 복사를 반환</target>
        </trans-unit>
        <trans-unit id="aee33976960f91a41f229d4cd689183592f53d4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.slice&quot;&gt;Ds\Set::slice&lt;/a&gt; &amp;mdash; Returns a sub-set of a given range</source>
          <target state="translated">&lt;a href=&quot;ds-set.slice&quot;&gt;Ds \ Set :: slice&lt;/a&gt; &amp;mdash; 주어진 범위의 부분 집합을 반환</target>
        </trans-unit>
        <trans-unit id="dbc2dbc9252a8f69ad5716f6aea6d11f2e676a35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.sort&quot;&gt;Ds\Set::sort&lt;/a&gt; &amp;mdash; Sorts the set in-place</source>
          <target state="translated">&lt;a href=&quot;ds-set.sort&quot;&gt;Ds \ Set :: sort&lt;/a&gt; &amp;mdash; 세트를 그 자리에서 정렬합니다</target>
        </trans-unit>
        <trans-unit id="7c255dc027553c821c5e260593bd0760f2d1b8f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.sorted&quot;&gt;Ds\Set::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="translated">&lt;a href=&quot;ds-set.sorted&quot;&gt;Ds \ Set :: sorted&lt;/a&gt; &amp;mdash; 정렬 된 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="4fe467eba1f16836cbd11afa691150fa71767549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.sum&quot;&gt;Ds\Set::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the set</source>
          <target state="translated">&lt;a href=&quot;ds-set.sum&quot;&gt;Ds \ Set :: sum&lt;/a&gt; &amp;mdash; 집합 의 모든 값의 합을 반환</target>
        </trans-unit>
        <trans-unit id="50d0e3a511f27965eaf66508ee0eadeb1db106ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.toarray&quot;&gt;Ds\Set::toArray&lt;/a&gt; &amp;mdash; Converts the set to an array</source>
          <target state="translated">&lt;a href=&quot;ds-set.toarray&quot;&gt;Ds \ Set :: toArray&lt;/a&gt; &amp;mdash; 집합을 배열로 변환</target>
        </trans-unit>
        <trans-unit id="f73689a5b48ba52e06a9bcb7ff833dd6ef2622a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.union&quot;&gt;Ds\Set::union&lt;/a&gt; &amp;mdash; Creates a new set using values from the current instance and another set</source>
          <target state="translated">&lt;a href=&quot;ds-set.union&quot;&gt;Ds \ Set :: union&lt;/a&gt; &amp;mdash; 현재 인스턴스의 값과 다른 세트를 사용하여 새 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8acf087b9b252482a941e1f4550c27cfd409c840" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.xor&quot;&gt;Ds\Set::xor&lt;/a&gt; &amp;mdash; Creates a new set using values in either the current instance or in another set, but not in both</source>
          <target state="translated">&lt;a href=&quot;ds-set.xor&quot;&gt;Ds \ Set :: xor&lt;/a&gt; &amp;mdash; 현재 인스턴스 또는 다른 세트의 값을 사용하여 새 세트를 작성하지만 둘다는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0ebfd1adef46a45cfd3d669d1f924330d97561cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.allocate&quot;&gt;Ds\Stack::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="translated">&lt;a href=&quot;ds-stack.allocate&quot;&gt;Ds \ Stack :: allocate&lt;/a&gt; &amp;mdash; 필요한 용량에 충분한 메모리를 할당합니다</target>
        </trans-unit>
        <trans-unit id="87122e7e908f01e88a9b38ad399774e8d8c89ba6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.capacity&quot;&gt;Ds\Stack::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="translated">&lt;a href=&quot;ds-stack.capacity&quot;&gt;Ds \ Stack :: capacity&lt;/a&gt; &amp;mdash; 현재 용량을 반환</target>
        </trans-unit>
        <trans-unit id="5f6c1d5c0ca8de3be2366827f93feb971903bd2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.clear&quot;&gt;Ds\Stack::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="translated">&lt;a href=&quot;ds-stack.clear&quot;&gt;Ds \ Stack ::&lt;/a&gt; clear-모든 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="d3ddc9c6a8fd2d8698f4b0196af8257d6e55e6c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.construct&quot;&gt;Ds\Stack::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="translated">&lt;a href=&quot;ds-stack.construct&quot;&gt;Ds \ Stack :: __ construct&lt;/a&gt; &amp;mdash; 새 인스턴스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="8ed809e9d001290bb052e1e52b5c3b2d27d0fe39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.copy&quot;&gt;Ds\Stack::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the stack</source>
          <target state="translated">&lt;a href=&quot;ds-stack.copy&quot;&gt;Ds \ Stack :: copy-스택&lt;/a&gt; 의 얕은 복사본을 반환</target>
        </trans-unit>
        <trans-unit id="7adae5a40efac8896cfbec5da936274366df4a38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.count&quot;&gt;Ds\Stack::count&lt;/a&gt; &amp;mdash; Returns the number of values in the stack</source>
          <target state="translated">&lt;a href=&quot;ds-stack.count&quot;&gt;Ds \ Stack :: count&lt;/a&gt; &amp;mdash; 스택 의 값 개수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="6e3eedc7a8055eb5fb8a38024f099afd60bbecca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.isempty&quot;&gt;Ds\Stack::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the stack is empty</source>
          <target state="translated">&lt;a href=&quot;ds-stack.isempty&quot;&gt;Ds \ Stack :: isEmpty&lt;/a&gt; &amp;mdash; 스택이 비어 있는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="e192169c552fca40f7e566e9424304064b590a66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.jsonserialize&quot;&gt;Ds\Stack::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="translated">&lt;a href=&quot;ds-stack.jsonserialize&quot;&gt;Ds \ Stack :: jsonSerialize&lt;/a&gt; &amp;mdash; JSON으로 변환 할 수있는 표현을 반환</target>
        </trans-unit>
        <trans-unit id="ab1c6b2b038b47e30f71301a987da10572a5e8f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.peek&quot;&gt;Ds\Stack::peek&lt;/a&gt; &amp;mdash; Returns the value at the top of the stack</source>
          <target state="translated">&lt;a href=&quot;ds-stack.peek&quot;&gt;Ds \ Stack :: peek&lt;/a&gt; &amp;mdash; 스택 의 맨 위에있는 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="e5fa1511aee1ea53d0b83ff218030a9a0d50d5d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.pop&quot;&gt;Ds\Stack::pop&lt;/a&gt; &amp;mdash; Removes and returns the value at the top of the stack</source>
          <target state="translated">&lt;a href=&quot;ds-stack.pop&quot;&gt;Ds \ Stack :: pop&lt;/a&gt; &amp;mdash; 스택 의 맨 위에있는 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="39f0d70a60c6697a4b09d6cfc797a7bd160584da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.push&quot;&gt;Ds\Stack::push&lt;/a&gt; &amp;mdash; Pushes values onto the stack</source>
          <target state="translated">&lt;a href=&quot;ds-stack.push&quot;&gt;Ds \ Stack :: push&lt;/a&gt; &amp;mdash; 스택으로 값을 푸시합니다</target>
        </trans-unit>
        <trans-unit id="45af0e8dc48b0903214a73ee177761af62712eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.toarray&quot;&gt;Ds\Stack::toArray&lt;/a&gt; &amp;mdash; Converts the stack to an array</source>
          <target state="translated">&lt;a href=&quot;ds-stack.toarray&quot;&gt;Ds \ Stack :: toArray&lt;/a&gt; &amp;mdash; 스택을 배열로 변환</target>
        </trans-unit>
        <trans-unit id="684a6c2bf775328ab6f0cf833b52d8a75e227242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.allocate&quot;&gt;Ds\Vector::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="translated">&lt;a href=&quot;ds-vector.allocate&quot;&gt;Ds \ Vector :: allocate&lt;/a&gt; &amp;mdash; 필요한 용량에 충분한 메모리를 할당합니다</target>
        </trans-unit>
        <trans-unit id="95135a0a79a85ecd3495e930c7d3cb8655ac5042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.apply&quot;&gt;Ds\Vector::apply&lt;/a&gt; &amp;mdash; Updates all values by applying a callback function to each value</source>
          <target state="translated">&lt;a href=&quot;ds-vector.apply&quot;&gt;Ds \ Vector :: apply-&lt;/a&gt; 각 값에 콜백 함수를 적용하여 모든 값을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="9568acf0f4e713d05bef9df6c83bf6942b7045d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.capacity&quot;&gt;Ds\Vector::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="translated">&lt;a href=&quot;ds-vector.capacity&quot;&gt;Ds \ Vector :: capacity&lt;/a&gt; &amp;mdash; 현재 용량을 반환합니다</target>
        </trans-unit>
        <trans-unit id="86df7a43e241f2c95919515a70ea358814648d1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.clear&quot;&gt;Ds\Vector::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="translated">&lt;a href=&quot;ds-vector.clear&quot;&gt;Ds \ Vector ::&lt;/a&gt; clear-모든 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="19b1bf74a8048e20d83cb76dfd945f96857def35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.construct&quot;&gt;Ds\Vector::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="translated">&lt;a href=&quot;ds-vector.construct&quot;&gt;Ds \ Vector :: __ construct&lt;/a&gt; &amp;mdash; 새 인스턴스를 만듭니다</target>
        </trans-unit>
        <trans-unit id="8c80964abda25ca305e630c5090b6e561d16e740" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.contains&quot;&gt;Ds\Vector::contains&lt;/a&gt; &amp;mdash; Determines if the vector contains given values</source>
          <target state="translated">&lt;a href=&quot;ds-vector.contains&quot;&gt;Ds \ Vector :: contains&lt;/a&gt; &amp;mdash; 벡터에 주어진 값이 들어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="1c1f8c9d56b5a1c4a510deaf27d69d8403b51426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.copy&quot;&gt;Ds\Vector::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the vector</source>
          <target state="translated">&lt;a href=&quot;ds-vector.copy&quot;&gt;Ds \ Vector :: copy-벡터&lt;/a&gt; 의 얕은 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="10f08acf1612425ff83ae83ef86f911c252b9a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.count&quot;&gt;Ds\Vector::count&lt;/a&gt; &amp;mdash; Returns the number of values in the collection</source>
          <target state="translated">&lt;a href=&quot;ds-vector.count&quot;&gt;Ds \ Vector :: count&lt;/a&gt; &amp;mdash; 컬렉션의 값 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="1ceba1dc6e788bed0560631bab5e961fb12f2d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.filter&quot;&gt;Ds\Vector::filter&lt;/a&gt; &amp;mdash; Creates a new vector using a callable to determine which values to include</source>
          <target state="translated">&lt;a href=&quot;ds-vector.filter&quot;&gt;Ds \ Vector :: filter&lt;/a&gt; &amp;mdash; 포함 할 값을 결정하기 위해 callable을 사용하여 새 벡터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bf0165efa543ba45f095afd8c0e3ff7da8bf2ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.find&quot;&gt;Ds\Vector::find&lt;/a&gt; &amp;mdash; Attempts to find a value's index</source>
          <target state="translated">&lt;a href=&quot;ds-vector.find&quot;&gt;Ds \ Vector :: find&lt;/a&gt; &amp;mdash; 값의 인덱스를 찾으려고합니다</target>
        </trans-unit>
        <trans-unit id="9986bf94cb7d58c1ea810901d87c28c525e7da91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.first&quot;&gt;Ds\Vector::first&lt;/a&gt; &amp;mdash; Returns the first value in the vector</source>
          <target state="translated">&lt;a href=&quot;ds-vector.first&quot;&gt;Ds \ Vector :: first&lt;/a&gt; &amp;mdash; 벡터 의 첫 번째 값을 반환</target>
        </trans-unit>
        <trans-unit id="09e6282c9b5402d1b148f9ce7c062c483d2ae5dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.get&quot;&gt;Ds\Vector::get&lt;/a&gt; &amp;mdash; Returns the value at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-vector.get&quot;&gt;Ds \ Vector :: get&lt;/a&gt; &amp;mdash; 주어진 인덱스에서 값을 반환</target>
        </trans-unit>
        <trans-unit id="6c7a7188caa3ab5629af8857bae257e868b7384b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.insert&quot;&gt;Ds\Vector::insert&lt;/a&gt; &amp;mdash; Inserts values at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-vector.insert&quot;&gt;Ds \ Vector :: insert&lt;/a&gt; &amp;mdash; 주어진 인덱스에 값을 삽입합니다</target>
        </trans-unit>
        <trans-unit id="0d92d8f3d81fc27089b43d919ff42116864ece89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.isempty&quot;&gt;Ds\Vector::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the vector is empty</source>
          <target state="translated">&lt;a href=&quot;ds-vector.isempty&quot;&gt;Ds \ Vector :: isEmpty&lt;/a&gt; &amp;mdash; 벡터가 비어 있는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="16effd1a86c1480e1ab2dd6e871a786eaf28727d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.join&quot;&gt;Ds\Vector::join&lt;/a&gt; &amp;mdash; Joins all values together as a string</source>
          <target state="translated">&lt;a href=&quot;ds-vector.join&quot;&gt;Ds \ Vector :: join&lt;/a&gt; &amp;mdash; 모든 값을 문자열로 결합</target>
        </trans-unit>
        <trans-unit id="a1630ce82e8667f6005857a418bdc796ccb5335a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.jsonserialize&quot;&gt;Ds\Vector::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="translated">&lt;a href=&quot;ds-vector.jsonserialize&quot;&gt;Ds \ Vector :: jsonSerialize&lt;/a&gt; &amp;mdash; JSON으로 변환 할 수있는 표현을 반환</target>
        </trans-unit>
        <trans-unit id="1440fe4194d5ef8db3ca8fd05e66e848a5668ff6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.last&quot;&gt;Ds\Vector::last&lt;/a&gt; &amp;mdash; Returns the last value</source>
          <target state="translated">&lt;a href=&quot;ds-vector.last&quot;&gt;Ds \ Vector :: last&lt;/a&gt; &amp;mdash; 마지막 값을 반환</target>
        </trans-unit>
        <trans-unit id="4a9cee30c172871c02d013bf4e7d1096e477ad2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.map&quot;&gt;Ds\Vector::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="translated">&lt;a href=&quot;ds-vector.map&quot;&gt;Ds \ Vector :: map&lt;/a&gt; &amp;mdash; 각 값에 콜백을 적용한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="564f6c55bda545c98ea40c39db1485317b8417b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.merge&quot;&gt;Ds\Vector::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the vector</source>
          <target state="translated">&lt;a href=&quot;ds-vector.merge&quot;&gt;Ds \ Vector :: merge&lt;/a&gt; &amp;mdash; 주어진 모든 값을 벡터에 더한 결과를 반환합니다</target>
        </trans-unit>
        <trans-unit id="719fb4c653a057843e6535fb6d068b6527c9acc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.pop&quot;&gt;Ds\Vector::pop&lt;/a&gt; &amp;mdash; Removes and returns the last value</source>
          <target state="translated">&lt;a href=&quot;ds-vector.pop&quot;&gt;Ds \ Vector :: pop&lt;/a&gt; &amp;mdash; 마지막 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="0e4bb15d39d5bfab43a6f01fadbe5f5f699fdfc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.push&quot;&gt;Ds\Vector::push&lt;/a&gt; &amp;mdash; Adds values to the end of the vector</source>
          <target state="translated">&lt;a href=&quot;ds-vector.push&quot;&gt;Ds \ Vector :: push&lt;/a&gt; &amp;mdash; 벡터 끝에 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="7016f0fbf903fb1a78eb1778f32a051607060488" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.reduce&quot;&gt;Ds\Vector::reduce&lt;/a&gt; &amp;mdash; Reduces the vector to a single value using a callback function</source>
          <target state="translated">&lt;a href=&quot;ds-vector.reduce&quot;&gt;Ds \ Vector :: reduce&lt;/a&gt; &amp;mdash; 콜백 함수를 사용하여 벡터를 단일 값으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="5fd0a1263f28671a51be7b9be0269f7146b12f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.remove&quot;&gt;Ds\Vector::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by index</source>
          <target state="translated">&lt;a href=&quot;ds-vector.remove&quot;&gt;Ds \ Vector :: remove-&lt;/a&gt; 인덱스로 값을 제거하고 반환</target>
        </trans-unit>
        <trans-unit id="3ff19b9fe9e3ae95a03246be59bf0c05f609418f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.reverse&quot;&gt;Ds\Vector::reverse&lt;/a&gt; &amp;mdash; Reverses the vector in-place</source>
          <target state="translated">&lt;a href=&quot;ds-vector.reverse&quot;&gt;Ds \ Vector ::&lt;/a&gt; reverse-벡터를 제자리로 반전시킵니다</target>
        </trans-unit>
        <trans-unit id="d09d00bd9d813dca224e86d858bf470c2cabc62f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.reversed&quot;&gt;Ds\Vector::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="translated">&lt;a href=&quot;ds-vector.reversed&quot;&gt;Ds \ Vector :: reversed&lt;/a&gt; &amp;mdash; 반전 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="8c6a639902fc9eff5aa2e5f582c939c06f4813b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.rotate&quot;&gt;Ds\Vector::rotate&lt;/a&gt; &amp;mdash; Rotates the vector by a given number of rotations</source>
          <target state="translated">&lt;a href=&quot;ds-vector.rotate&quot;&gt;Ds \ Vector :: rotate&lt;/a&gt; &amp;mdash; 주어진 회전 수만큼 벡터를 회전시킵니다</target>
        </trans-unit>
        <trans-unit id="5bf8fb51f3c9a068294405ad9ff6cf5403dbcb6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.set&quot;&gt;Ds\Vector::set&lt;/a&gt; &amp;mdash; Updates a value at a given index</source>
          <target state="translated">&lt;a href=&quot;ds-vector.set&quot;&gt;Ds \ Vector :: set&lt;/a&gt; &amp;mdash; 주어진 인덱스에서 값을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="a7a448995945a242366b25f6cd0c02aa90b28dcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.shift&quot;&gt;Ds\Vector::shift&lt;/a&gt; &amp;mdash; Removes and returns the first value</source>
          <target state="translated">&lt;a href=&quot;ds-vector.shift&quot;&gt;Ds \ Vector :: shift&lt;/a&gt; &amp;mdash; 첫 번째 값을 제거하고 반환합니다</target>
        </trans-unit>
        <trans-unit id="9d312031e84504c87843b5e8d2f37af5ccc71a7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.slice&quot;&gt;Ds\Vector::slice&lt;/a&gt; &amp;mdash; Returns a sub-vector of a given range</source>
          <target state="translated">&lt;a href=&quot;ds-vector.slice&quot;&gt;Ds \ Vector :: slice&lt;/a&gt; &amp;mdash; 주어진 범위의 하위 벡터를 반환합니다</target>
        </trans-unit>
        <trans-unit id="4f895f622f0410cf37fcd3486c13464360d97be3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.sort&quot;&gt;Ds\Vector::sort&lt;/a&gt; &amp;mdash; Sorts the vector in-place</source>
          <target state="translated">&lt;a href=&quot;ds-vector.sort&quot;&gt;Ds \ Vector :: sort&lt;/a&gt; &amp;mdash; 벡터를 제자리에 정렬합니다</target>
        </trans-unit>
        <trans-unit id="247b68ca4b716e6686863c2ff92977bfaf4a0d28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.sorted&quot;&gt;Ds\Vector::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="translated">&lt;a href=&quot;ds-vector.sorted&quot;&gt;Ds \ Vector :: sorted&lt;/a&gt; &amp;mdash; 정렬 된 사본을 반환합니다</target>
        </trans-unit>
        <trans-unit id="e59d89e658f41b0b65cd93cd325455ccccec3e18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.sum&quot;&gt;Ds\Vector::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the vector</source>
          <target state="translated">&lt;a href=&quot;ds-vector.sum&quot;&gt;Ds \ Vector :: sum&lt;/a&gt; &amp;mdash; 벡터에있는 모든 값의 합을 반환</target>
        </trans-unit>
        <trans-unit id="da81b6705236a359d39049f4eb85405dc1f22176" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.toarray&quot;&gt;Ds\Vector::toArray&lt;/a&gt; &amp;mdash; Converts the vector to an array</source>
          <target state="translated">&lt;a href=&quot;ds-vector.toarray&quot;&gt;Ds \ Vector :: toArray&lt;/a&gt; &amp;mdash; 벡터를 배열로 변환</target>
        </trans-unit>
        <trans-unit id="c135f9508695bd93de3d4808f028a95d3d2db6b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.unshift&quot;&gt;Ds\Vector::unshift&lt;/a&gt; &amp;mdash; Adds values to the front of the vector</source>
          <target state="translated">&lt;a href=&quot;ds-vector.unshift&quot;&gt;Ds \ Vector :: unshift&lt;/a&gt; &amp;mdash; 벡터 앞에 값을 추가합니다</target>
        </trans-unit>
        <trans-unit id="30cf99151852f1a3225b8c3a1c0efc8c35d53e58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.current&quot;&gt;EmptyIterator::current&lt;/a&gt; &amp;mdash; The current() method</source>
          <target state="translated">&lt;a href=&quot;emptyiterator.current&quot;&gt;EmptyIterator :: current&lt;/a&gt; &amp;mdash; current () 메서드</target>
        </trans-unit>
        <trans-unit id="5740ffef0f934f897105180fe7491b4c3d0c54d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.key&quot;&gt;EmptyIterator::key&lt;/a&gt; &amp;mdash; The key() method</source>
          <target state="translated">&lt;a href=&quot;emptyiterator.key&quot;&gt;EmptyIterator :: key&lt;/a&gt; &amp;mdash; key () 메소드</target>
        </trans-unit>
        <trans-unit id="df08ed4d6bc23c2ef391fc8dd24408586c06d11c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.next&quot;&gt;EmptyIterator::next&lt;/a&gt; &amp;mdash; The next() method</source>
          <target state="translated">&lt;a href=&quot;emptyiterator.next&quot;&gt;EmptyIterator :: next&lt;/a&gt; &amp;mdash; next () 메소드</target>
        </trans-unit>
        <trans-unit id="8f11f5cdfce8cea67fa129fab29a58799e1dbbf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.rewind&quot;&gt;EmptyIterator::rewind&lt;/a&gt; &amp;mdash; The rewind() method</source>
          <target state="translated">&lt;a href=&quot;emptyiterator.rewind&quot;&gt;EmptyIterator :: rewind&lt;/a&gt; &amp;mdash; rewind () 메서드</target>
        </trans-unit>
        <trans-unit id="9c3a3ea0c43681b28a3f69ad8a7dd02298a247e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.valid&quot;&gt;EmptyIterator::valid&lt;/a&gt; &amp;mdash; The valid() method</source>
          <target state="translated">&lt;a href=&quot;emptyiterator.valid&quot;&gt;EmptyIterator :: valid&lt;/a&gt; &amp;mdash; valid () 메소드</target>
        </trans-unit>
        <trans-unit id="06a7abafc57d717a238c63af3a3d8d26cbad8544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.clone&quot;&gt;Error::__clone&lt;/a&gt; &amp;mdash; Clone the error</source>
          <target state="translated">&lt;a href=&quot;error.clone&quot;&gt;Error :: __ clone&lt;/a&gt; &amp;mdash; 오류 복제</target>
        </trans-unit>
        <trans-unit id="b91725cd3af1d986b130dbac28dd92efa91f6771" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.construct&quot;&gt;Error::__construct&lt;/a&gt; &amp;mdash; Construct the error object</source>
          <target state="translated">&lt;a href=&quot;error.construct&quot;&gt;Error :: __ construct&lt;/a&gt; &amp;mdash; 에러 객체를 생성</target>
        </trans-unit>
        <trans-unit id="cfb0b2bab51f076b3f23665d05d47ca8f33d4e62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getcode&quot;&gt;Error::getCode&lt;/a&gt; &amp;mdash; Gets the error code</source>
          <target state="translated">&lt;a href=&quot;error.getcode&quot;&gt;Error :: getCode&lt;/a&gt; &amp;mdash; 오류 코드를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="59142429cffd6e899b158a791075bedff060e8c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getfile&quot;&gt;Error::getFile&lt;/a&gt; &amp;mdash; Gets the file in which the error occurred</source>
          <target state="translated">&lt;a href=&quot;error.getfile&quot;&gt;Error :: getFile&lt;/a&gt; &amp;mdash; 오류가 발생한 파일을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="65844394a209089a776db60d000a9fd533154c53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getline&quot;&gt;Error::getLine&lt;/a&gt; &amp;mdash; Gets the line in which the error occurred</source>
          <target state="translated">&lt;a href=&quot;error.getline&quot;&gt;Error :: getLine&lt;/a&gt; &amp;mdash; 오류가 발생한 줄을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7c22485d6065b761ab29261cf9fbde699f6234fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getmessage&quot;&gt;Error::getMessage&lt;/a&gt; &amp;mdash; Gets the error message</source>
          <target state="translated">&lt;a href=&quot;error.getmessage&quot;&gt;Error :: getMessage&lt;/a&gt; &amp;mdash; 오류 메시지를 얻는다</target>
        </trans-unit>
        <trans-unit id="353b3b87f0f7b8558ba5d848b2bbac8286026f6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getprevious&quot;&gt;Error::getPrevious&lt;/a&gt; &amp;mdash; Returns previous Throwable</source>
          <target state="translated">&lt;a href=&quot;error.getprevious&quot;&gt;Error :: getPrevious&lt;/a&gt; &amp;mdash; 이전 Throwable을 반환합니다</target>
        </trans-unit>
        <trans-unit id="e5d17bf0c6bdff371cbdd4a13af46d3679dc248c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.gettrace&quot;&gt;Error::getTrace&lt;/a&gt; &amp;mdash; Gets the stack trace</source>
          <target state="translated">&lt;a href=&quot;error.gettrace&quot;&gt;Error :: getTrace&lt;/a&gt; &amp;mdash; 스택 추적을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="dc7b437e09901d0418493a684b874307f7a1e3bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.gettraceasstring&quot;&gt;Error::getTraceAsString&lt;/a&gt; &amp;mdash; Gets the stack trace as a string</source>
          <target state="translated">&lt;a href=&quot;error.gettraceasstring&quot;&gt;Error :: getTraceAsString&lt;/a&gt; &amp;mdash; 스택 추적을 문자열로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d9767763a7083c3e47a019f122fe4cdf28c0e830" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.tostring&quot;&gt;Error::__toString&lt;/a&gt; &amp;mdash; String representation of the error</source>
          <target state="translated">&lt;a href=&quot;error.tostring&quot;&gt;Error :: __ toString&lt;/a&gt; &amp;mdash; 오류의 문자열 표현</target>
        </trans-unit>
        <trans-unit id="ee98ab4405c88dfd603f96118fbeb5f9846d6e5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;errorexception.construct&quot;&gt;ErrorException::__construct&lt;/a&gt; &amp;mdash; Constructs the exception</source>
          <target state="translated">&lt;a href=&quot;errorexception.construct&quot;&gt;ErrorException :: __ construct&lt;/a&gt; &amp;mdash; 예외를 구성합니다</target>
        </trans-unit>
        <trans-unit id="ef31954e679a2c6152aab9a7e8f3d228c0cf16cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;errorexception.getseverity&quot;&gt;ErrorException::getSeverity&lt;/a&gt; &amp;mdash; Gets the exception severity</source>
          <target state="translated">&lt;a href=&quot;errorexception.getseverity&quot;&gt;ErrorException :: getSeverity&lt;/a&gt; &amp;mdash; 예외 심각도를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="dc94bdca39691bb9d0c66d127f108a335d8d24aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.backend&quot;&gt;Ev::backend()&lt;/a&gt; - Returns an integer describing the backend used by libev</source>
          <target state="translated">&lt;a href=&quot;ev.backend&quot;&gt;Ev :: backend ()&lt;/a&gt; -libev가 사용하는 백엔드를 설명하는 정수를 반환</target>
        </trans-unit>
        <trans-unit id="373a78ef679a5fe1353c41e61dc9fc4f98844714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.backend&quot;&gt;Ev::backend&lt;/a&gt; &amp;mdash; Returns an integer describing the backend used by libev</source>
          <target state="translated">&lt;a href=&quot;ev.backend&quot;&gt;Ev :: backend&lt;/a&gt; &amp;mdash; libev에서 사용하는 백엔드를 설명하는 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3420bced19899692339f5d223ce822bb64c9a06a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.depth&quot;&gt;Ev::depth()&lt;/a&gt; - Returns recursion depth</source>
          <target state="translated">&lt;a href=&quot;ev.depth&quot;&gt;Ev :: depth ()&lt;/a&gt; -재귀 깊이를 반환합니다</target>
        </trans-unit>
        <trans-unit id="dc87f3e2a8d87dc5160d6c06b9a8081067809ec6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.depth&quot;&gt;Ev::depth&lt;/a&gt; &amp;mdash; Returns recursion depth</source>
          <target state="translated">&lt;a href=&quot;ev.depth&quot;&gt;Ev :: depth&lt;/a&gt; &amp;mdash; 재귀 깊이를 반환합니다</target>
        </trans-unit>
        <trans-unit id="5350ec2047d75a21224c54318b7662580a6f4241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.embeddablebackends&quot;&gt;Ev::embeddableBackends()&lt;/a&gt; - Returns the set of backends that are embeddable in other event loops</source>
          <target state="translated">&lt;a href=&quot;ev.embeddablebackends&quot;&gt;Ev :: embeddableBackends ()&lt;/a&gt; -다른 이벤트 루프에 포함 할 수있는 백엔드 세트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ae37d5b898358861e592c185d155b5403e0bfc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.embeddablebackends&quot;&gt;Ev::embeddableBackends&lt;/a&gt; &amp;mdash; Returns the set of backends that are embeddable in other event loops</source>
          <target state="translated">&lt;a href=&quot;ev.embeddablebackends&quot;&gt;Ev :: embeddableBackends&lt;/a&gt; &amp;mdash; 다른 이벤트 루프에 포함 할 수있는 백엔드 세트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9b5c8016372475e80479b8752d72a6219c78a963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignal&quot;&gt;Ev::feedSignal()&lt;/a&gt; - Feed a signal event info Ev</source>
          <target state="translated">&lt;a href=&quot;ev.feedsignal&quot;&gt;Ev :: feedSignal ()&lt;/a&gt; -신호 이벤트 정보를 공급합니다 Ev</target>
        </trans-unit>
        <trans-unit id="d7f9abffae2e3b144179b132ae81aedbbd5bf350" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignal&quot;&gt;Ev::feedSignal&lt;/a&gt; &amp;mdash; Feed a signal event info Ev</source>
          <target state="translated">&lt;a href=&quot;ev.feedsignal&quot;&gt;Ev :: feedSignal&lt;/a&gt; &amp;mdash; 신호 이벤트 정보를 제공합니다. Ev</target>
        </trans-unit>
        <trans-unit id="f0324306b16d3e87cc997120cebf0f812d381104" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignalevent&quot;&gt;Ev::feedSignalEvent()&lt;/a&gt; - Feed signal event into the default loop</source>
          <target state="translated">&lt;a href=&quot;ev.feedsignalevent&quot;&gt;Ev :: feedSignalEvent ()&lt;/a&gt; -신호 이벤트를 기본 루프로 피드</target>
        </trans-unit>
        <trans-unit id="a347befc7b6f3bf4e1680d0110a3ed143e83f9d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignalevent&quot;&gt;Ev::feedSignalEvent&lt;/a&gt; &amp;mdash; Feed signal event into the default loop</source>
          <target state="translated">&lt;a href=&quot;ev.feedsignalevent&quot;&gt;Ev :: feedSignalEvent&lt;/a&gt; &amp;mdash; 기본 루프에 신호 이벤트를 공급</target>
        </trans-unit>
        <trans-unit id="d8c47f2773f8d0427703a594ff7cd8162fd75d5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.iteration&quot;&gt;Ev::iteration()&lt;/a&gt; - Return the number of times the default event loop has polled for new events</source>
          <target state="translated">&lt;a href=&quot;ev.iteration&quot;&gt;Ev :: iteration ()&lt;/a&gt; -기본 이벤트 루프가 새 이벤트를 폴링 한 횟수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8cc3561806c14981d3a8683bd88591edaca60ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.iteration&quot;&gt;Ev::iteration&lt;/a&gt; &amp;mdash; Return the number of times the default event loop has polled for new events</source>
          <target state="translated">&lt;a href=&quot;ev.iteration&quot;&gt;Ev :: iteration&lt;/a&gt; &amp;mdash; 기본 이벤트 루프가 새 이벤트를 폴링 한 횟수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d26a340892962e994bccad315ea6bc2d9a61bbba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.now&quot;&gt;Ev::now()&lt;/a&gt; - Returns the time when the last iteration of the default event loop has started</source>
          <target state="translated">&lt;a href=&quot;ev.now&quot;&gt;Ev :: now ()&lt;/a&gt; -기본 이벤트 루프의 마지막 반복이 시작된 시간을 반환합니다</target>
        </trans-unit>
        <trans-unit id="f8826409f61ac855a28dbf9da28c43eaddae3da0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.now&quot;&gt;Ev::now&lt;/a&gt; &amp;mdash; Returns the time when the last iteration of the default event loop has started</source>
          <target state="translated">&lt;a href=&quot;ev.now&quot;&gt;Ev :: now&lt;/a&gt; &amp;mdash; 기본 이벤트 루프의 마지막 반복이 시작된 시간을 반환합니다</target>
        </trans-unit>
        <trans-unit id="69977622b3acc3354361283750878da2eaf7cbdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.nowupdate&quot;&gt;Ev::nowUpdate()&lt;/a&gt; - Establishes the current time by querying the kernel, updating the time returned by Ev::now in the progress</source>
          <target state="translated">&lt;a href=&quot;ev.nowupdate&quot;&gt;Ev :: nowUpdate ()&lt;/a&gt; -커널을 쿼리하여 현재 시간을 설정하고 진행 중 Ev :: now에 의해 반환 된 시간을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="720e15fe8a885df9f01be3cd44985e76c1f923c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.nowupdate&quot;&gt;Ev::nowUpdate&lt;/a&gt; &amp;mdash; Establishes the current time by querying the kernel, updating the time returned by Ev::now in the progress</source>
          <target state="translated">&lt;a href=&quot;ev.nowupdate&quot;&gt;Ev :: nowUpdate&lt;/a&gt; &amp;mdash; 진행 상황에서 Ev :: now가 반환 한 시간을 업데이트하여 커널을 쿼리하여 현재 시간을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9a03cca40dc80e4d55085702b43b17b202ff4b1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.recommendedbackends&quot;&gt;Ev::recommendedBackends()&lt;/a&gt; - Returns a bit mask of recommended backends for current platform</source>
          <target state="translated">&lt;a href=&quot;ev.recommendedbackends&quot;&gt;Ev :: recommendedBackends ()&lt;/a&gt; -현재 플랫폼에 권장되는 백엔드의 비트 마스크를 반환합니다</target>
        </trans-unit>
        <trans-unit id="c239193752c0423f2e29563af083b2573a525b8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.recommendedbackends&quot;&gt;Ev::recommendedBackends&lt;/a&gt; &amp;mdash; Returns a bit mask of recommended backends for current platform</source>
          <target state="translated">&lt;a href=&quot;ev.recommendedbackends&quot;&gt;Ev :: recommendedBackends&lt;/a&gt; &amp;mdash; 현재 플랫폼에 권장되는 백엔드의 비트 마스크를 반환합니다</target>
        </trans-unit>
        <trans-unit id="fa53c192ef7301d13a1f2eac1f3cdd40fbaba42d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.resume&quot;&gt;Ev::resume()&lt;/a&gt; - Resume previously suspended default event loop</source>
          <target state="translated">&lt;a href=&quot;ev.resume&quot;&gt;Ev :: resume ()&lt;/a&gt; -이전에 일시 중단 된 기본 이벤트 루프를 재개</target>
        </trans-unit>
        <trans-unit id="dd82753e70a888fcb6f6ec410ccc6edc439ac9f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.resume&quot;&gt;Ev::resume&lt;/a&gt; &amp;mdash; Resume previously suspended default event loop</source>
          <target state="translated">&lt;a href=&quot;ev.resume&quot;&gt;Ev :: resume&lt;/a&gt; &amp;mdash; 이전에 일시 중단 된 기본 이벤트 루프를 재개</target>
        </trans-unit>
        <trans-unit id="f352499258b6aa9f32434280f8f451549920aa90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; - Begin checking for events and calling callbacks for the default loop</source>
          <target state="translated">&lt;a href=&quot;ev.run&quot;&gt;Ev :: run ()&lt;/a&gt; -기본 루프에 대한 이벤트 확인 및 콜백 호출 시작</target>
        </trans-unit>
        <trans-unit id="559fc1613256c56dd60ed9398e24139dfa0d1b77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.run&quot;&gt;Ev::run&lt;/a&gt; &amp;mdash; Begin checking for events and calling callbacks for the default loop</source>
          <target state="translated">&lt;a href=&quot;ev.run&quot;&gt;Ev :: run&lt;/a&gt; &amp;mdash; 기본 루프에 대한 이벤트 확인 및 콜백 호출 시작</target>
        </trans-unit>
        <trans-unit id="ce6a376743107e04b6b6e1eb8fcf8f8a0b789760" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.sleep&quot;&gt;Ev::sleep&lt;/a&gt; &amp;mdash; Block the process for the given number of seconds</source>
          <target state="translated">&lt;a href=&quot;ev.sleep&quot;&gt;Ev :: sleep&lt;/a&gt; &amp;mdash; 주어진 시간 (초) 동안 프로세스를 차단합니다</target>
        </trans-unit>
        <trans-unit id="c8b75dbbbfa547a18f898656dde7b7c79c1012ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; - Stops the default event loop</source>
          <target state="translated">&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop ()&lt;/a&gt; -기본 이벤트 루프를 중지합니다</target>
        </trans-unit>
        <trans-unit id="d2da754fb0874ea957bb9c92238ee46bc75e69dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.stop&quot;&gt;Ev::stop&lt;/a&gt; &amp;mdash; Stops the default event loop</source>
          <target state="translated">&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop&lt;/a&gt; &amp;mdash; 기본 이벤트 루프를 중지합니다</target>
        </trans-unit>
        <trans-unit id="97c1b8ad2604d02b7b463b36ada2cc4a57b663f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.supportedbackends&quot;&gt;Ev::supportedBackends()&lt;/a&gt; - Returns the set of backends supported by current libev configuration</source>
          <target state="translated">&lt;a href=&quot;ev.supportedbackends&quot;&gt;Ev :: supportedBackends ()&lt;/a&gt; -현재 libev 구성에서 지원되는 백엔드 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a45a93183b59b416ebfda37abdd862314172d6b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.supportedbackends&quot;&gt;Ev::supportedBackends&lt;/a&gt; &amp;mdash; Returns the set of backends supported by current libev configuration</source>
          <target state="translated">&lt;a href=&quot;ev.supportedbackends&quot;&gt;Ev :: supportedBackends&lt;/a&gt; &amp;mdash; 현재 libev 구성에서 지원하는 백엔드 세트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8509c30035f19eaa01021bd12e3706d4792b166a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.suspend&quot;&gt;Ev::suspend()&lt;/a&gt; - Suspend the default event loop</source>
          <target state="translated">&lt;a href=&quot;ev.suspend&quot;&gt;Ev :: suspend ()&lt;/a&gt; -기본 이벤트 루프를 일시 중단</target>
        </trans-unit>
        <trans-unit id="adf53e2ef45e58e64fe46cf4ade33698f78dbb26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.suspend&quot;&gt;Ev::suspend()&lt;/a&gt; and &lt;strong&gt;Ev::resume()&lt;/strong&gt; methods suspend and resume a loop correspondingly.</source>
          <target state="translated">&lt;a href=&quot;ev.suspend&quot;&gt;Ev :: suspend ()&lt;/a&gt; 및 &lt;strong&gt;Ev :: resume ()&lt;/strong&gt; 메소드는 해당 루프를 일시 중단하고 재개합니다.</target>
        </trans-unit>
        <trans-unit id="3825a501433f56637ba407e8076b0d37b2453c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.suspend&quot;&gt;Ev::suspend&lt;/a&gt; &amp;mdash; Suspend the default event loop</source>
          <target state="translated">&lt;a href=&quot;ev.suspend&quot;&gt;Ev :: suspend&lt;/a&gt; &amp;mdash; 기본 이벤트 루프를 일시 중단합니다</target>
        </trans-unit>
        <trans-unit id="33fa93c7f97476b48af0c958587b76d28e59e5b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.time&quot;&gt;Ev::time&lt;/a&gt; &amp;mdash; Returns the current time in fractional seconds since the epoch</source>
          <target state="translated">&lt;a href=&quot;ev.time&quot;&gt;Ev :: time&lt;/a&gt; &amp;mdash; 에포크 (epoch) 이후 현재 시간을 소수 초 단위로 반환합니다</target>
        </trans-unit>
        <trans-unit id="3e31e9aa10da432665a3ad040c4b26aded188991" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.verify&quot;&gt;Ev::verify()&lt;/a&gt; - Performs internal consistency checks(for debugging)</source>
          <target state="translated">&lt;a href=&quot;ev.verify&quot;&gt;Ev :: verify ()&lt;/a&gt; -내부 일관성 검사 수행 (디버깅)</target>
        </trans-unit>
        <trans-unit id="9a003ce55364239d5329ebe7f6dbc71e9bfc5ab3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.verify&quot;&gt;Ev::verify&lt;/a&gt; &amp;mdash; Performs internal consistency checks(for debugging)</source>
          <target state="translated">&lt;a href=&quot;ev.verify&quot;&gt;Ev :: verify&lt;/a&gt; &amp;mdash; 디버깅을 위해 내부 일관성 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1ed561edde16ec777e27d06edd5615b75bbd5227" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evcheck.construct&quot;&gt;EvCheck::__construct()&lt;/a&gt; - Constructs the EvCheck watcher object</source>
          <target state="translated">&lt;a href=&quot;evcheck.construct&quot;&gt;EvCheck :: __ construct ()&lt;/a&gt; -EvCheck 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="72518820ce1734ed5fc93549362d2c420a811701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evcheck.construct&quot;&gt;EvCheck::__construct&lt;/a&gt; &amp;mdash; Constructs the EvCheck watcher object</source>
          <target state="translated">&lt;a href=&quot;evcheck.construct&quot;&gt;EvCheck :: __ construct&lt;/a&gt; &amp;mdash; EvCheck 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="4ef8b96a2ee54b72691c46ebc6e4f787ff34d087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evcheck.createstopped&quot;&gt;EvCheck::createStopped&lt;/a&gt; &amp;mdash; Create instance of a stopped EvCheck watcher</source>
          <target state="translated">&lt;a href=&quot;evcheck.createstopped&quot;&gt;EvCheck :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvCheck 감시자의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4fc4597b4551d594249cec3209d6787945ea6fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.construct&quot;&gt;EvChild::__construct()&lt;/a&gt; - Constructs the EvChild watcher object</source>
          <target state="translated">&lt;a href=&quot;evchild.construct&quot;&gt;EvChild :: __ construct ()&lt;/a&gt; -EvChild 감시자 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="1479b745cca3c024fea04579b381a2c4e0a63596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.construct&quot;&gt;EvChild::__construct&lt;/a&gt; &amp;mdash; Constructs the EvChild watcher object</source>
          <target state="translated">&lt;a href=&quot;evchild.construct&quot;&gt;EvChild :: __ construct&lt;/a&gt; &amp;mdash; EvChild 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="5cf41b3ebeaa1c8be141883c275d44ceba0f143c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.createstopped&quot;&gt;EvChild::createStopped&lt;/a&gt; &amp;mdash; Create instance of a stopped EvCheck watcher</source>
          <target state="translated">&lt;a href=&quot;evchild.createstopped&quot;&gt;EvChild :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvCheck 감시자의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ca25624d8650eb8b1c1f8b74f0ae4d302457d415" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.set&quot;&gt;EvChild::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="translated">&lt;a href=&quot;evchild.set&quot;&gt;EvChild :: set&lt;/a&gt; &amp;mdash; 감시자를 구성합니다</target>
        </trans-unit>
        <trans-unit id="9918be6a292804fe5576fb7ab3b21536cce5ea6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed::__construct()&lt;/a&gt; - Constructs the EvEmbed object</source>
          <target state="translated">&lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed :: __ construct ()&lt;/a&gt; -EvEmbed 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="8ed936801bc610e1c045801588f37b3e3980d37f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed::__construct&lt;/a&gt; &amp;mdash; Constructs the EvEmbed object</source>
          <target state="translated">&lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed :: __ construct&lt;/a&gt; &amp;mdash; EvEmbed 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="114f0ff6679a7d29ff526e3682a9456461f44b23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.createstopped&quot;&gt;EvEmbed::createStopped&lt;/a&gt; &amp;mdash; Create stopped EvEmbed watcher object</source>
          <target state="translated">&lt;a href=&quot;evembed.createstopped&quot;&gt;EvEmbed :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvEmbed 감시자 객체 만들기</target>
        </trans-unit>
        <trans-unit id="fdec70c13bce36916e6d66943729e249801d4b98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.set&quot;&gt;EvEmbed::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="translated">&lt;a href=&quot;evembed.set&quot;&gt;EvEmbed :: set&lt;/a&gt; &amp;mdash; 감시자를 구성합니다</target>
        </trans-unit>
        <trans-unit id="5633e1a5c4a7ffc23a2f7352eca7d4c2bf035d51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.sweep&quot;&gt;EvEmbed::sweep&lt;/a&gt; &amp;mdash; Make a single, non-blocking sweep over the embedded loop</source>
          <target state="translated">&lt;a href=&quot;evembed.sweep&quot;&gt;EvEmbed :: sweep&lt;/a&gt; &amp;mdash; 내장 된 루프에서 단일 비 차단 스윕을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b2395aedf486d23c3861aa9c22fcc9f368c6ad79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;Event::add()&lt;/a&gt; - Makes event pending</source>
          <target state="translated">&lt;a href=&quot;event.add&quot;&gt;Event :: add ()&lt;/a&gt; -이벤트 보류 중</target>
        </trans-unit>
        <trans-unit id="4755ab022f07f9583ba528e1fd9362242f9cd6c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;Event::add&lt;/a&gt; &amp;mdash; Makes event pending</source>
          <target state="translated">&lt;a href=&quot;event.add&quot;&gt;Event :: add&lt;/a&gt; &amp;mdash; 이벤트를 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dbe6fadffb13f37d669778123576db35f1a0f161" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;event_add()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;a href=&quot;event.add&quot;&gt;event_add ()&lt;/a&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 오류 이면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b9fced1830ee4b8c7177980becb8515188c04a30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;event_add()&lt;/a&gt; schedules the execution of the &lt;code&gt;event&lt;/code&gt; when the event specified in &lt;a href=&quot;event.set&quot;&gt;event_set()&lt;/a&gt; occurs or in at least the time specified by the &lt;code&gt;timeout&lt;/code&gt; argument. If &lt;code&gt;timeout&lt;/code&gt; was not specified, not timeout is set. The &lt;code&gt;event&lt;/code&gt; must be already initalized by &lt;a href=&quot;event.set&quot;&gt;event_set()&lt;/a&gt; and &lt;a href=&quot;function.event-base-set&quot;&gt;event_base_set()&lt;/a&gt; functions. If the &lt;code&gt;event&lt;/code&gt; already has a timeout set, it is replaced by the new one.</source>
          <target state="translated">&lt;a href=&quot;event.add&quot;&gt;event_add ()&lt;/a&gt; 는 &lt;a href=&quot;event.set&quot;&gt;event_set ()에&lt;/a&gt; 지정된 이벤트 가 발생하거나 최소한 &lt;code&gt;timeout&lt;/code&gt; 인수에 의해 지정된 시간에 &lt;code&gt;event&lt;/code&gt; 실행을 예약합니다 . 경우 &lt;code&gt;timeout&lt;/code&gt; 지정되지 않았습니다이 아닌 제한 시간이 설정됩니다. &lt;code&gt;event&lt;/code&gt; 이미 의해 initalized해야 &lt;a href=&quot;event.set&quot;&gt;event_set ()&lt;/a&gt; 및 &lt;a href=&quot;function.event-base-set&quot;&gt;event_base_set ()&lt;/a&gt; 함수. 경우 &lt;code&gt;event&lt;/code&gt; 이미 제한 시간이 설정되어, 새로운 속성으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="5e5b42bfec3c1df10e075f89d1759284c14b0425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addsignal&quot;&gt;Event::addSignal()&lt;/a&gt; - Makes signal event pending</source>
          <target state="translated">&lt;a href=&quot;event.addsignal&quot;&gt;Event :: addSignal ()&lt;/a&gt; -신호 이벤트를 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3805795a5ea3cd4de7409e08bd86a8c6b4d7c1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addsignal&quot;&gt;Event::addSignal&lt;/a&gt; &amp;mdash; Makes signal event pending</source>
          <target state="translated">&lt;a href=&quot;event.addsignal&quot;&gt;Event :: addSignal&lt;/a&gt; &amp;mdash; 신호 이벤트를 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="73c530ebd4bf8819880dfeab77fa3932c9894b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addtimer&quot;&gt;Event::addTimer()&lt;/a&gt; - Makes timer event pending</source>
          <target state="translated">&lt;a href=&quot;event.addtimer&quot;&gt;Event :: addTimer ()&lt;/a&gt; -타이머 이벤트를 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a07d74cb68198b9fe1668ce6aef772b36538a427" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addtimer&quot;&gt;Event::addTimer&lt;/a&gt; &amp;mdash; Makes timer event pending</source>
          <target state="translated">&lt;a href=&quot;event.addtimer&quot;&gt;Event :: addTimer&lt;/a&gt; &amp;mdash; 타이머 이벤트를 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a96285f01f6b7e529509da91fc1682b08572957e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.construct&quot;&gt;Event::__construct()&lt;/a&gt; - Constructs Event object</source>
          <target state="translated">&lt;a href=&quot;event.construct&quot;&gt;Event :: __ construct ()&lt;/a&gt; -이벤트 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="73a85cb743ece5fbb9186e37c7549b74719e32b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.construct&quot;&gt;Event::__construct&lt;/a&gt; &amp;mdash; Constructs Event object</source>
          <target state="translated">&lt;a href=&quot;event.construct&quot;&gt;Event :: __ construct&lt;/a&gt; &amp;mdash; Event 객체를 생성 합니다</target>
        </trans-unit>
        <trans-unit id="90ce3a0c16b8ff5ae737ac504da513ef30dd45d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.del&quot;&gt;Event::del()&lt;/a&gt; - Makes event non-pending</source>
          <target state="translated">&lt;a href=&quot;event.del&quot;&gt;Event :: del ()&lt;/a&gt; -이벤트를 비 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b6257f19100e226de57fb95a7b272d85fe2861b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.del&quot;&gt;Event::del&lt;/a&gt; &amp;mdash; Makes event non-pending</source>
          <target state="translated">&lt;a href=&quot;event.del&quot;&gt;Event :: del&lt;/a&gt; &amp;mdash; 이벤트를 비 보류 상태로 만듭니다</target>
        </trans-unit>
        <trans-unit id="3724009945c6f827349922cc891713f409cee4ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.del&quot;&gt;event_del()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;a href=&quot;event.del&quot;&gt;event_del ()&lt;/a&gt; 은 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 오류 이면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="371da667ff7c44e11d321363e8a87a837268a9e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.delsignal&quot;&gt;Event::delSignal()&lt;/a&gt; - Makes signal event non-pending</source>
          <target state="translated">&lt;a href=&quot;event.delsignal&quot;&gt;Event :: delSignal ()&lt;/a&gt; -신호 이벤트를 비 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f9a79c1bb061e235bbcbd23e71348986687c4096" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.delsignal&quot;&gt;Event::delSignal&lt;/a&gt; &amp;mdash; Makes signal event non-pending</source>
          <target state="translated">&lt;a href=&quot;event.delsignal&quot;&gt;Event :: delSignal&lt;/a&gt; &amp;mdash; 신호 이벤트를 비 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b27b16b5c588efbc8d1417fca82e12a6175bcde8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.deltimer&quot;&gt;Event::delTimer()&lt;/a&gt; - Makes timer event non-pending</source>
          <target state="translated">&lt;a href=&quot;event.deltimer&quot;&gt;Event :: delTimer ()&lt;/a&gt; -타이머 이벤트를 비 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8c9f8f220b4233ad598829021729ce961b39cb0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.deltimer&quot;&gt;Event::delTimer&lt;/a&gt; &amp;mdash; Makes timer event non-pending</source>
          <target state="translated">&lt;a href=&quot;event.deltimer&quot;&gt;Event :: delTimer&lt;/a&gt; &amp;mdash; 타이머 이벤트를 비 보류 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b23bf099d84880ae71bd29a5b9fa71a09cb773f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.free&quot;&gt;Event::free&lt;/a&gt; &amp;mdash; Make event non-pending and free resources allocated for this event</source>
          <target state="translated">&lt;a href=&quot;event.free&quot;&gt;Event :: free&lt;/a&gt; &amp;mdash;이 이벤트에 대해 이벤트를 비 보류 및 무료 리소스로 할당합니다</target>
        </trans-unit>
        <trans-unit id="ddcfe205c3fd81181a9ecfff9122af8340666898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.getsupportedmethods&quot;&gt;Event::getSupportedMethods&lt;/a&gt; &amp;mdash; Returns array with of the names of the methods supported in this version of Libevent</source>
          <target state="translated">&lt;a href=&quot;event.getsupportedmethods&quot;&gt;Event :: getSupportedMethods&lt;/a&gt; &amp;mdash;이 버전의 Libevent에서 지원되는 메서드 이름이 포함 된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e69e67d8ee7e62c1ca8c9ae9fcb4d404a70ae49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.pending&quot;&gt;Event::pending&lt;/a&gt; &amp;mdash; Detects whether event is pending or scheduled</source>
          <target state="translated">&lt;a href=&quot;event.pending&quot;&gt;Event :: pending&lt;/a&gt; &amp;mdash; 이벤트가 보류 중인지 또는 예약되어 있는지 감지합니다.</target>
        </trans-unit>
        <trans-unit id="439a282dbc80ee97f6ca5ad324a1af26962cacb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.set&quot;&gt;Event::set&lt;/a&gt; &amp;mdash; Re-configures event</source>
          <target state="translated">&lt;a href=&quot;event.set&quot;&gt;Event :: set&lt;/a&gt; &amp;mdash; 이벤트를 재구성합니다</target>
        </trans-unit>
        <trans-unit id="5d6dfa802827508018bdf88c147e938977e81881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.set&quot;&gt;event_set()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;a href=&quot;event.set&quot;&gt;event_set ()&lt;/a&gt; 은 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 오류 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ba136661bb2c6b52213e217ef6dcc69f5e379ddb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.setpriority&quot;&gt;Event::setPriority()&lt;/a&gt; - Set event priority</source>
          <target state="translated">&lt;a href=&quot;event.setpriority&quot;&gt;Event :: setPriority ()&lt;/a&gt; -이벤트 우선 순위 설정</target>
        </trans-unit>
        <trans-unit id="5a935a98fed5bfc3b4f265bc9bc4e1ba411b74c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.setpriority&quot;&gt;Event::setPriority&lt;/a&gt; &amp;mdash; Set event priority</source>
          <target state="translated">&lt;a href=&quot;event.setpriority&quot;&gt;Event :: setPriority&lt;/a&gt; &amp;mdash; 이벤트 우선 순위 설정</target>
        </trans-unit>
        <trans-unit id="8f5dbddc75a479e076763b017e56c86d891ae03c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.settimer&quot;&gt;Event::setTimer&lt;/a&gt; &amp;mdash; Re-configures timer event</source>
          <target state="translated">&lt;a href=&quot;event.settimer&quot;&gt;Event :: setTimer&lt;/a&gt; &amp;mdash; 타이머 이벤트를 재구성합니다</target>
        </trans-unit>
        <trans-unit id="37b460735c9c6133826cae554bcc8e149441c39d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.signal&quot;&gt;Event::signal()&lt;/a&gt; - Constructs signal event object</source>
          <target state="translated">&lt;a href=&quot;event.signal&quot;&gt;Event :: signal ()&lt;/a&gt; -신호 이벤트 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="cfd5d51ce84cf3c76987aa53108d6f7e6cdcfc28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.signal&quot;&gt;Event::signal&lt;/a&gt; &amp;mdash; Constructs signal event object</source>
          <target state="translated">&lt;a href=&quot;event.signal&quot;&gt;Event :: signal&lt;/a&gt; &amp;mdash; 신호 이벤트 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="281bf2b905a8ccd337dde8493de24a4fcb5a0625" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.timer&quot;&gt;Event::timer()&lt;/a&gt; - Constructs timer event object</source>
          <target state="translated">&lt;a href=&quot;event.timer&quot;&gt;Event :: timer ()&lt;/a&gt; -타이머 이벤트 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="dd11c0396f7ba6d306306f59d618aa46d5ab8509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.timer&quot;&gt;Event::timer&lt;/a&gt; &amp;mdash; Constructs timer event object</source>
          <target state="translated">&lt;a href=&quot;event.timer&quot;&gt;Event :: timer&lt;/a&gt; &amp;mdash; 타이머 이벤트 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="de3f87662caad5d0bdb5df129bc4e5c610205449" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.construct&quot;&gt;EventBase::__construct()&lt;/a&gt; - Constructs EventBase object</source>
          <target state="translated">&lt;a href=&quot;eventbase.construct&quot;&gt;EventBase :: __ construct ()&lt;/a&gt; -EventBase 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="2faa103d305d5207b3f66ae83db67e3bd0d073a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.construct&quot;&gt;EventBase::__construct&lt;/a&gt; &amp;mdash; Constructs EventBase object</source>
          <target state="translated">&lt;a href=&quot;eventbase.construct&quot;&gt;EventBase :: __ construct&lt;/a&gt; &amp;mdash; EventBase 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="1786165b8375b4fc3d897a7027426e3324430319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.dispatch&quot;&gt;EventBase::dispatch()&lt;/a&gt; - Dispatch pending events</source>
          <target state="translated">&lt;a href=&quot;eventbase.dispatch&quot;&gt;EventBase :: dispatch ()&lt;/a&gt; -디스패치 보류 이벤트</target>
        </trans-unit>
        <trans-unit id="fa021b7f6a4399cdd8c6972f2f7b15e5d24cd2ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.dispatch&quot;&gt;EventBase::dispatch&lt;/a&gt; &amp;mdash; Dispatch pending events</source>
          <target state="translated">&lt;a href=&quot;eventbase.dispatch&quot;&gt;EventBase :: dispatch&lt;/a&gt; &amp;mdash; 디스패치 보류 이벤트</target>
        </trans-unit>
        <trans-unit id="45eeaf091f3d48f2fa2c1584e217cac41619c306" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.exit&quot;&gt;EventBase::exit()&lt;/a&gt; - Stop dispatching events</source>
          <target state="translated">&lt;a href=&quot;eventbase.exit&quot;&gt;EventBase :: exit ()&lt;/a&gt; -이벤트 전달 중지</target>
        </trans-unit>
        <trans-unit id="f0bfd16297161ae0b94d03e1c7daea59ba165c02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.exit&quot;&gt;EventBase::exit&lt;/a&gt; &amp;mdash; Stop dispatching events</source>
          <target state="translated">&lt;a href=&quot;eventbase.exit&quot;&gt;EventBase :: exit&lt;/a&gt; &amp;mdash; 이벤트 발송 중지</target>
        </trans-unit>
        <trans-unit id="8323199b75b1bd51501e2efa1efcf99a42ab6b9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.free&quot;&gt;EventBase::free&lt;/a&gt; &amp;mdash; Free resources allocated for this event base</source>
          <target state="translated">&lt;a href=&quot;eventbase.free&quot;&gt;EventBase :: free&lt;/a&gt; &amp;mdash;이 이벤트 기반에 할당 된 무료 리소스</target>
        </trans-unit>
        <trans-unit id="51a04079779cee5aa80fca7f7ce51897d3db1ea9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getfeatures&quot;&gt;EventBase::getFeatures()&lt;/a&gt; - Returns bitmask of features supported</source>
          <target state="translated">&lt;a href=&quot;eventbase.getfeatures&quot;&gt;EventBase :: getFeatures ()&lt;/a&gt; -지원되는 기능의 비트 마스크를 반환</target>
        </trans-unit>
        <trans-unit id="62ee6ecdcabddee96c3921fa8077c145a0fc8c73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getfeatures&quot;&gt;EventBase::getFeatures&lt;/a&gt; &amp;mdash; Returns bitmask of features supported</source>
          <target state="translated">&lt;a href=&quot;eventbase.getfeatures&quot;&gt;EventBase :: getFeatures&lt;/a&gt; &amp;mdash; 지원되는 기능의 비트 마스크를 반환</target>
        </trans-unit>
        <trans-unit id="0f877dbd8cfb0df348ea059d4a00fcc729d40e8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getmethod&quot;&gt;EventBase::getMethod()&lt;/a&gt; - Returns event method in use</source>
          <target state="translated">&lt;a href=&quot;eventbase.getmethod&quot;&gt;EventBase :: getMethod ()&lt;/a&gt; -사용중인 이벤트 메소드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="670b40f5376d6cb0f6086b7101073e13884369b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getmethod&quot;&gt;EventBase::getMethod&lt;/a&gt; &amp;mdash; Returns event method in use</source>
          <target state="translated">&lt;a href=&quot;eventbase.getmethod&quot;&gt;EventBase :: getMethod&lt;/a&gt; &amp;mdash; 사용중인 이벤트 메소드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="64e27ef2d7a7a5ff6f8dc75f1e769c7cb419e54f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gettimeofdaycached&quot;&gt;EventBase::getTimeOfDayCached&lt;/a&gt; &amp;mdash; Returns the current event base time</source>
          <target state="translated">&lt;a href=&quot;eventbase.gettimeofdaycached&quot;&gt;EventBase :: getTimeOfDayCached&lt;/a&gt; &amp;mdash; 현재 이벤트 기본 시간을 반환</target>
        </trans-unit>
        <trans-unit id="afd2303a977d56ceb2e77f0046a816b986479951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotexit&quot;&gt;EventBase::gotExit()&lt;/a&gt; - Checks if the event loop was told to exit</source>
          <target state="translated">&lt;a href=&quot;eventbase.gotexit&quot;&gt;EventBase :: gotExit ()&lt;/a&gt; -이벤트 루프가 종료하라는 메시지를 표시합니다</target>
        </trans-unit>
        <trans-unit id="5c65d83c06a5fdd89e130abce201bc51ed342246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotexit&quot;&gt;EventBase::gotExit&lt;/a&gt; &amp;mdash; Checks if the event loop was told to exit</source>
          <target state="translated">&lt;a href=&quot;eventbase.gotexit&quot;&gt;EventBase :: gotExit&lt;/a&gt; &amp;mdash; 이벤트 루프가 종료하라는 메시지가 표시되는지 확인</target>
        </trans-unit>
        <trans-unit id="8a769f961f65b64cfff4b937abdc4ac1ef1395db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotstop&quot;&gt;EventBase::gotStop()&lt;/a&gt; - Checks if the event loop was told to exit</source>
          <target state="translated">&lt;a href=&quot;eventbase.gotstop&quot;&gt;EventBase :: gotStop ()&lt;/a&gt; -이벤트 루프가 종료하라는 메시지를 표시합니다</target>
        </trans-unit>
        <trans-unit id="386f21f948b466e64a4a7eae9b87ebadb7abd5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotstop&quot;&gt;EventBase::gotStop&lt;/a&gt; &amp;mdash; Checks if the event loop was told to exit</source>
          <target state="translated">&lt;a href=&quot;eventbase.gotstop&quot;&gt;EventBase :: gotStop&lt;/a&gt; &amp;mdash; 이벤트 루프가 종료하라는 메시지가 표시되는지 확인</target>
        </trans-unit>
        <trans-unit id="b7ec41db955d4dd8b0776705dee1e0eec624b96f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.loop&quot;&gt;EventBase::loop()&lt;/a&gt; - Dispatch pending events</source>
          <target state="translated">&lt;a href=&quot;eventbase.loop&quot;&gt;EventBase :: loop ()&lt;/a&gt; -디스패치 보류 이벤트</target>
        </trans-unit>
        <trans-unit id="ff870152f90b87e819669ecc0d6bcbaf86b11a0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.loop&quot;&gt;EventBase::loop&lt;/a&gt; &amp;mdash; Dispatch pending events</source>
          <target state="translated">&lt;a href=&quot;eventbase.loop&quot;&gt;EventBase :: loop&lt;/a&gt; &amp;mdash; 디스패치 보류 이벤트</target>
        </trans-unit>
        <trans-unit id="e62e724a9a38ef49173b59340501eec2fc77de18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.priorityinit&quot;&gt;EventBase::priorityInit&lt;/a&gt; &amp;mdash; Sets number of priorities per event base</source>
          <target state="translated">&lt;a href=&quot;eventbase.priorityinit&quot;&gt;EventBase :: priorityInit&lt;/a&gt; &amp;mdash; 이벤트 기반 당 우선 순위 수를 설정합니다</target>
        </trans-unit>
        <trans-unit id="89ba55ebfbef7de404bce67de90702f3cebfe9f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.reinit&quot;&gt;EventBase::reInit&lt;/a&gt; &amp;mdash; Re-initialize event base(after a fork)</source>
          <target state="translated">&lt;a href=&quot;eventbase.reinit&quot;&gt;EventBase :: reInit&lt;/a&gt; &amp;mdash; 이벤트 기반을 다시 초기화합니다 (포크 후)</target>
        </trans-unit>
        <trans-unit id="7b4a22ac050694ab258ec79128893606e0a10b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.stop&quot;&gt;EventBase::stop()&lt;/a&gt; - Tells event_base to stop dispatching events</source>
          <target state="translated">&lt;a href=&quot;eventbase.stop&quot;&gt;EventBase :: stop ()&lt;/a&gt; -이벤트 전달을 중지하도록 event_base에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="32523527bde8181026bab9a1c6b22c32efdf91ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.stop&quot;&gt;EventBase::stop&lt;/a&gt; &amp;mdash; Tells event_base to stop dispatching events</source>
          <target state="translated">&lt;a href=&quot;eventbase.stop&quot;&gt;EventBase :: stop&lt;/a&gt; &amp;mdash; event_base에게 이벤트 전달을 중지하도록 지시</target>
        </trans-unit>
        <trans-unit id="7fc7bc325a66a9ca98da608f1cb7d7475bad1a53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.add&quot;&gt;EventBuffer::add()&lt;/a&gt; - Append data to the end of an event buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.add&quot;&gt;EventBuffer :: add ()&lt;/a&gt; -이벤트 버퍼 끝에 데이터 추가</target>
        </trans-unit>
        <trans-unit id="8c04d39ef99dd1d96fc59fa7dff51e9d89a9ecc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.add&quot;&gt;EventBuffer::add&lt;/a&gt; &amp;mdash; Append data to the end of an event buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.add&quot;&gt;EventBuffer :: add&lt;/a&gt; &amp;mdash; 이벤트 버퍼의 끝에 데이터를 추가합니다</target>
        </trans-unit>
        <trans-unit id="1e9d20fd50798f096ade4da929d1d03c5b414e59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer::addBuffer()&lt;/a&gt; - Move all data from a buffer provided to the current instance of EventBuffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer :: addBuffer ()&lt;/a&gt; -제공된 버퍼의 모든 데이터를 EventBuffer의 현재 인스턴스로 이동</target>
        </trans-unit>
        <trans-unit id="b6831a25d7f301420c8876454a5c14ab57d92a57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer::addBuffer&lt;/a&gt; &amp;mdash; Move all data from a buffer provided to the current instance of EventBuffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer :: addBuffer&lt;/a&gt; &amp;mdash; 제공 한 버퍼의 모든 데이터를 EventBuffer의 현재 인스턴스로 이동</target>
        </trans-unit>
        <trans-unit id="012010807be5ee5f138193345c5cf2338db10904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.appendfrom&quot;&gt;EventBuffer::appendFrom()&lt;/a&gt; - Moves the specified number of bytes from a source buffer to the end of the current buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.appendfrom&quot;&gt;EventBuffer :: appendFrom ()&lt;/a&gt; -지정된 바이트 수를 소스 버퍼에서 현재 버퍼의 끝으로 이동</target>
        </trans-unit>
        <trans-unit id="4c0d08ccea471348311ba3f62c880bcf51a00d81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.appendfrom&quot;&gt;EventBuffer::appendFrom&lt;/a&gt; &amp;mdash; Moves the specified number of bytes from a source buffer to the end of the current buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.appendfrom&quot;&gt;EventBuffer :: appendFrom&lt;/a&gt; &amp;mdash; 지정된 바이트 수를 소스 버퍼에서 현재 버퍼의 끝으로 이동</target>
        </trans-unit>
        <trans-unit id="961443ad548757bcd1458d7b02e1b004b0ebef84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.construct&quot;&gt;EventBuffer::__construct&lt;/a&gt; &amp;mdash; Constructs EventBuffer object</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.construct&quot;&gt;EventBuffer :: __ construct&lt;/a&gt; &amp;mdash; EventBuffer 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="d08c3b1ab63f3df82fc8d8b62f5ccbdfaed354ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.copyout&quot;&gt;EventBuffer::copyout()&lt;/a&gt; - Copies out specified number of bytes from the front of the buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.copyout&quot;&gt;EventBuffer :: copyout ()&lt;/a&gt; -버퍼 앞쪽에서 지정된 바이트 수를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="62dfe4bc1abdcbcb3dd38526aa9016ccf2a48184" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.copyout&quot;&gt;EventBuffer::copyout&lt;/a&gt; &amp;mdash; Copies out specified number of bytes from the front of the buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.copyout&quot;&gt;EventBuffer :: copyout&lt;/a&gt; &amp;mdash; 버퍼 앞쪽에서 지정된 바이트 수를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="1a53be6e6255993ce1c0073f316358b1706e18a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.drain&quot;&gt;EventBuffer::drain()&lt;/a&gt; - Removes specified number of bytes from the front of the buffer without copying it anywhere</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.drain&quot;&gt;EventBuffer :: drain ()&lt;/a&gt; -버퍼 앞쪽에서 지정된 수의 바이트를 복사하지 않고 제거합니다.</target>
        </trans-unit>
        <trans-unit id="0538c47b12ee6a77eb3a84d361d043fa021c1426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.drain&quot;&gt;EventBuffer::drain&lt;/a&gt; &amp;mdash; Removes specified number of bytes from the front of the buffer without copying it anywhere</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.drain&quot;&gt;EventBuffer :: drain&lt;/a&gt; &amp;mdash; 아무 곳이나 복사하지 않고 버퍼 앞쪽에서 지정된 바이트 수를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="80a9b0756ec1a70105e7630fcec32e1f4b402867" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.enablelocking&quot;&gt;EventBuffer::enableLocking&lt;/a&gt; &amp;mdash; Description</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.enablelocking&quot;&gt;EventBuffer :: enableLocking&lt;/a&gt; &amp;mdash; 설명</target>
        </trans-unit>
        <trans-unit id="656a9efec6b6a61fed077b927f1c5a499efbcc95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.expand&quot;&gt;EventBuffer::expand&lt;/a&gt; &amp;mdash; Reserves space in buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.expand&quot;&gt;EventBuffer :: expand&lt;/a&gt; &amp;mdash; 버퍼에 공간을 확보</target>
        </trans-unit>
        <trans-unit id="6ef322f0c282fe3a7d27bb595b5190284b612ae2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.freeze&quot;&gt;EventBuffer::freeze()&lt;/a&gt; - Prevent calls that modify an event buffer from succeeding</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.freeze&quot;&gt;EventBuffer :: freeze ()&lt;/a&gt; -이벤트 버퍼를 수정하는 호출이 성공하지 못하도록 방지</target>
        </trans-unit>
        <trans-unit id="5c2727409011836722cb2f346638a64cd50c333a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.freeze&quot;&gt;EventBuffer::freeze&lt;/a&gt; &amp;mdash; Prevent calls that modify an event buffer from succeeding</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.freeze&quot;&gt;EventBuffer :: freeze&lt;/a&gt; &amp;mdash; 이벤트 버퍼를 수정하는 호출이 성공하지 못하도록 방지</target>
        </trans-unit>
        <trans-unit id="e2fcba68cdd400a93e824ef530836eee32eeb749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer::lock()&lt;/a&gt; - Acquires a lock on buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer :: lock ()&lt;/a&gt; -버퍼 잠금을 획득 합니다.</target>
        </trans-unit>
        <trans-unit id="69740e1d98855fc11cf267f2f772e249f12087a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer::lock&lt;/a&gt; &amp;mdash; Acquires a lock on buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer :: lock-&lt;/a&gt; 버퍼 잠금을 획득</target>
        </trans-unit>
        <trans-unit id="127c3ee43afa8b733e69af4a03c2fd660391eab7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prepend&quot;&gt;EventBuffer::prepend()&lt;/a&gt; - Prepend data to the front of the buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.prepend&quot;&gt;EventBuffer :: prepend ()&lt;/a&gt; -버퍼 앞에 데이터를 추가합니다</target>
        </trans-unit>
        <trans-unit id="ee3d97486ef9f69608f35eec09e2aa3a137fdae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prepend&quot;&gt;EventBuffer::prepend&lt;/a&gt; &amp;mdash; Prepend data to the front of the buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.prepend&quot;&gt;EventBuffer :: prepend&lt;/a&gt; &amp;mdash; 버퍼 앞에 데이터를 추가합니다</target>
        </trans-unit>
        <trans-unit id="7b26a7c0755cd8c2e7b03545580b1bf6c5c9c477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prependbuffer&quot;&gt;EventBuffer::prependBuffer()&lt;/a&gt; - Moves all data from source buffer to the front of current buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.prependbuffer&quot;&gt;EventBuffer :: prependBuffer ()&lt;/a&gt; -모든 데이터를 소스 버퍼에서 현재 버퍼의 맨 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="98d7b61459762af354fc905259be986f122487df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prependbuffer&quot;&gt;EventBuffer::prependBuffer&lt;/a&gt; &amp;mdash; Moves all data from source buffer to the front of current buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.prependbuffer&quot;&gt;EventBuffer :: prependBuffer&lt;/a&gt; &amp;mdash; 모든 데이터를 소스 버퍼에서 현재 버퍼의 맨 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="be08e5ffe74d497744b8e6f2d77177941bcaf76b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.pullup&quot;&gt;EventBuffer::pullup()&lt;/a&gt; - Linearizes data within buffer and returns it's contents as a string</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.pullup&quot;&gt;EventBuffer :: pullup ()&lt;/a&gt; -버퍼 내에서 데이터를 선형화하고 그 내용을 문자열로 반환</target>
        </trans-unit>
        <trans-unit id="b64652d1a7e3e1f3dbf95e1ff9c863a063a72d79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.pullup&quot;&gt;EventBuffer::pullup&lt;/a&gt; &amp;mdash; Linearizes data within buffer and returns it's contents as a string</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.pullup&quot;&gt;EventBuffer :: pullup&lt;/a&gt; &amp;mdash; 버퍼 내의 데이터를 선형화하고 그 내용을 문자열로 반환</target>
        </trans-unit>
        <trans-unit id="353da6bcc9fc3b25ba6bca0830d7defb92719cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; - Read data from an evbuffer and drain the bytes read</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer :: read ()&lt;/a&gt; -evbuffer에서 데이터를 읽고 읽은 바이트를 비 웁니다</target>
        </trans-unit>
        <trans-unit id="5bbf69a0a9f02717628d9fe89dc4ae39a6211252" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read&lt;/a&gt; &amp;mdash; Read data from an evbuffer and drain the bytes read</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer :: read&lt;/a&gt; &amp;mdash; evbuffer에서 데이터를 읽고 읽은 바이트를 비 웁니다</target>
        </trans-unit>
        <trans-unit id="2bc8c56533eab7f823f270593a6c04fbae03a6ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.readfrom&quot;&gt;EventBuffer::readFrom&lt;/a&gt; &amp;mdash; Read data from a file onto the end of the buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.readfrom&quot;&gt;EventBuffer :: readFrom&lt;/a&gt; &amp;mdash; 파일에서 버퍼 끝까지 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="4816d28f21b8e4f2d43b8b5174f113d1c010b71f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.readline&quot;&gt;EventBuffer::readLine()&lt;/a&gt; - Extracts a line from the front of the buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.readline&quot;&gt;EventBuffer :: readLine ()&lt;/a&gt; -버퍼의 정면에서 라인을 추출</target>
        </trans-unit>
        <trans-unit id="4ca6842af5f74b6da86a69f7f865ebe8a5752dca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.readline&quot;&gt;EventBuffer::readLine&lt;/a&gt; &amp;mdash; Extracts a line from the front of the buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.readline&quot;&gt;EventBuffer :: readLine&lt;/a&gt; &amp;mdash; 버퍼의 정면에서 라인을 추출</target>
        </trans-unit>
        <trans-unit id="3b435b5a471d98f570ec11f59b8372e428942e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.search&quot;&gt;EventBuffer::search()&lt;/a&gt; - Scans the buffer for an occurrence of a string</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.search&quot;&gt;EventBuffer :: search ()&lt;/a&gt; -문자열이 있는지 버퍼를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="6d84cbb3d735dc98d13c4a50de5d81aad4d7ba48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.search&quot;&gt;EventBuffer::search&lt;/a&gt; &amp;mdash; Scans the buffer for an occurrence of a string</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.search&quot;&gt;EventBuffer :: search&lt;/a&gt; &amp;mdash; 버퍼에서 문자열의 발생을 스캔합니다</target>
        </trans-unit>
        <trans-unit id="921478f1696cc74e95bf915dcbc747264e60b665" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.searcheol&quot;&gt;EventBuffer::searchEol()&lt;/a&gt; - Scans the buffer for an occurrence of an end of line</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.searcheol&quot;&gt;EventBuffer :: searchEol ()&lt;/a&gt; -줄 끝이 발생 했는지 버퍼를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="fb1240706ad4cea4a402eb86fda0af1df9a6395f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.searcheol&quot;&gt;EventBuffer::searchEol&lt;/a&gt; &amp;mdash; Scans the buffer for an occurrence of an end of line</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.searcheol&quot;&gt;EventBuffer :: searchEol&lt;/a&gt; &amp;mdash; 줄 끝이 발생 했는지 버퍼를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="d1b740444600923974fd190df61311728d94fb9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.substr&quot;&gt;EventBuffer::substr&lt;/a&gt; &amp;mdash; Substracts a portion of the buffer data</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.substr&quot;&gt;EventBuffer :: substr&lt;/a&gt; &amp;mdash; 버퍼 데이터의 일부를 뺍니다</target>
        </trans-unit>
        <trans-unit id="02d3e0c157a452f9d925cfe7d48028390b0bac35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.unfreeze&quot;&gt;EventBuffer::unfreeze()&lt;/a&gt; - Re-enable calls that modify an event buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.unfreeze&quot;&gt;EventBuffer :: unfreeze ()&lt;/a&gt; -이벤트 버퍼를 수정하는 호출을 다시 활성화</target>
        </trans-unit>
        <trans-unit id="7c17a7d6920359e63bb83a21726ac704e7349a9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.unfreeze&quot;&gt;EventBuffer::unfreeze&lt;/a&gt; &amp;mdash; Re-enable calls that modify an event buffer</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.unfreeze&quot;&gt;EventBuffer :: unfreeze&lt;/a&gt; &amp;mdash; 이벤트 버퍼를 수정하는 호출을 다시 활성화합니다</target>
        </trans-unit>
        <trans-unit id="6f7864dc31914ac9500161f832d9a4d589099683" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.unlock&quot;&gt;EventBuffer::unlock()&lt;/a&gt; - Releases lock acquired by EventBuffer::lock</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.unlock&quot;&gt;EventBuffer :: unlock ()&lt;/a&gt; -EventBuffer :: lock에 의해 획득 된 잠금을 해제합니다</target>
        </trans-unit>
        <trans-unit id="334c3fa8568e86f01f578a15b77190612caebd30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.unlock&quot;&gt;EventBuffer::unlock&lt;/a&gt; &amp;mdash; Releases lock acquired by EventBuffer::lock</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.unlock&quot;&gt;EventBuffer :: unlock&lt;/a&gt; &amp;mdash; EventBuffer :: lock에 의해 획득 된 잠금을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="13dd61d8d371adfb804ddbd05df6c8e40be91321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.write&quot;&gt;EventBuffer::write&lt;/a&gt; &amp;mdash; Write contents of the buffer to a file or socket</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.write&quot;&gt;EventBuffer :: write&lt;/a&gt; &amp;mdash; 버퍼의 내용을 파일이나 소켓에 씁니다</target>
        </trans-unit>
        <trans-unit id="c6ba11c63c1af4eb7cdcb9c93d81a9b5c4b1885c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.close&quot;&gt;EventBufferEvent::close&lt;/a&gt; &amp;mdash; Closes file descriptor associated with the current buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.close&quot;&gt;EventBufferEvent :: close&lt;/a&gt; &amp;mdash; 현재 버퍼 이벤트와 관련된 파일 디스크립터를 닫습니다</target>
        </trans-unit>
        <trans-unit id="b3873e3d2f985e8208af2790b89cf4851cadc195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent::connect()&lt;/a&gt; - Connect buffer event's file descriptor to given address or UNIX socket</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent :: connect ()&lt;/a&gt; -버퍼 이벤트의 파일 디스크립터를 주어진 주소 또는 UNIX 소켓에 연결</target>
        </trans-unit>
        <trans-unit id="7b903a6578193bceedc768f4b3236e06a959e97c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent::connect&lt;/a&gt; &amp;mdash; Connect buffer event's file descriptor to given address or UNIX socket</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.connect&quot;&gt;EventBufferEvent :: connect&lt;/a&gt; &amp;mdash; 버퍼 이벤트의 파일 디스크립터를 주어진 주소 또는 UNIX 소켓에 연결</target>
        </trans-unit>
        <trans-unit id="e947e166fabfbc8ce7e57c3f57ccebc38f6ed9a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.connecthost&quot;&gt;EventBufferEvent::connectHost()&lt;/a&gt; - Connects to a hostname with optionally asyncronous DNS resolving</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.connecthost&quot;&gt;EventBufferEvent :: connectHost ()&lt;/a&gt; -선택적으로 비동기 DNS 분석을 통해 호스트 이름에 연결</target>
        </trans-unit>
        <trans-unit id="07744e486a492c08d88181dc06129a50615b7721" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.connecthost&quot;&gt;EventBufferEvent::connectHost&lt;/a&gt; &amp;mdash; Connects to a hostname with optionally asyncronous DNS resolving</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.connecthost&quot;&gt;EventBufferEvent :: connectHost&lt;/a&gt; &amp;mdash; 선택적으로 비동기 DNS 해석을 사용하여 호스트 이름에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="c4405e4a1f0c78d734e0a678ad07f6bd4b7d58ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.construct&quot;&gt;EventBufferEvent::__construct()&lt;/a&gt; - Constructs EventBufferEvent object</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.construct&quot;&gt;EventBufferEvent :: __ construct ()&lt;/a&gt; -EventBufferEvent 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="a162cd88b434e0c6bae3de624121e2850b0319fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.construct&quot;&gt;EventBufferEvent::__construct&lt;/a&gt; &amp;mdash; Constructs EventBufferEvent object</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.construct&quot;&gt;EventBufferEvent :: __ construct&lt;/a&gt; &amp;mdash; EventBufferEvent 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="30debc5a9786d09831d37f6bd854460f8208a487" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.createpair&quot;&gt;EventBufferEvent::OPT_* constants&lt;/a&gt; combined with bitwise &lt;code&gt;OR&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b45d9399cb379c7eda2cbb44a12508748962c13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.createpair&quot;&gt;EventBufferEvent::OPT_* constants&lt;/a&gt; combined with bitwise &lt;em&gt;OR&lt;/em&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.createpair&quot;&gt;&lt;/a&gt;비트 단위 &lt;em&gt;OR&lt;/em&gt; 연산자 와 결합 된 EventBufferEvent :: OPT_ * 상수 .</target>
        </trans-unit>
        <trans-unit id="30ea45d64b26dce072787db3d3926e417bef7247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.createpair&quot;&gt;EventBufferEvent::createPair&lt;/a&gt; &amp;mdash; Creates two buffer events connected to each other</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.createpair&quot;&gt;EventBufferEvent :: createPair&lt;/a&gt; &amp;mdash; 서로 연결된 두 개의 버퍼 이벤트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a80977948523e3128778863d014a4d444f9c9b58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.disable&quot;&gt;EventBufferEvent::disable()&lt;/a&gt; - Disable events read, write, or both on a buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.disable&quot;&gt;EventBufferEvent :: disable ()&lt;/a&gt; -버퍼 이벤트에서 이벤트 읽기, 쓰기 또는 둘 다 비활성화</target>
        </trans-unit>
        <trans-unit id="d23564cdc81e9ed887fb679d7831313235cf9646" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.disable&quot;&gt;EventBufferEvent::disable&lt;/a&gt; &amp;mdash; Disable events read, write, or both on a buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.disable&quot;&gt;EventBufferEvent :: disable&lt;/a&gt; &amp;mdash; 버퍼 이벤트에서 이벤트 읽기, 쓰기 또는 둘 다를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="5e849db2cb9525eae8134df34d38b2f54c2fcd5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.enable&quot;&gt;EventBufferEvent::enable()&lt;/a&gt; - Enable events read, write, or both on a buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.enable&quot;&gt;EventBufferEvent :: enable ()&lt;/a&gt; -버퍼 이벤트에서 이벤트 읽기, 쓰기 또는 둘 다 사용</target>
        </trans-unit>
        <trans-unit id="580a5ed2ebc40c1be6826f716058412265f9a923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.enable&quot;&gt;EventBufferEvent::enable&lt;/a&gt; &amp;mdash; Enable events read, write, or both on a buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.enable&quot;&gt;EventBufferEvent :: enable&lt;/a&gt; &amp;mdash; 버퍼 이벤트에서 이벤트 읽기, 쓰기 또는 둘 다 활성화</target>
        </trans-unit>
        <trans-unit id="e5c99cbb9ee641875d0b1defe062dfa01ecab52d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.free&quot;&gt;EventBufferEvent::free&lt;/a&gt; &amp;mdash; Free a buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.free&quot;&gt;EventBufferEvent :: free&lt;/a&gt; &amp;mdash; 버퍼 이벤트를 해제합니다</target>
        </trans-unit>
        <trans-unit id="7764bd21687e15a5f873ec7cff061f0a46819539" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.getdnserrorstring&quot;&gt;EventBufferEvent::getDnsErrorString&lt;/a&gt; &amp;mdash; Returns string describing the last failed DNS lookup attempt</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.getdnserrorstring&quot;&gt;EventBufferEvent :: getDnsErrorString&lt;/a&gt; &amp;mdash; 마지막으로 실패한 DNS 조회 시도를 설명하는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3215185a7a0b08164e5c9e111a3e8f785d352036" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.getenabled&quot;&gt;EventBufferEvent::getEnabled&lt;/a&gt; &amp;mdash; Returns bitmask of events currently enabled on the buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.getenabled&quot;&gt;EventBufferEvent :: getEnabled&lt;/a&gt; &amp;mdash; 버퍼 이벤트에서 현재 활성화 된 이벤트의 비트 마스크를 반환합니다</target>
        </trans-unit>
        <trans-unit id="ff61b032ab6452b54c9b06b174834aa47b74eb27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.getinput&quot;&gt;EventBufferEvent::getInput()&lt;/a&gt; - Returns underlying input buffer associated with current buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.getinput&quot;&gt;EventBufferEvent :: getInput ()&lt;/a&gt; -현재 버퍼 이벤트와 관련된 기본 입력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="4096bb8efa776c4022448525c0146d83376b48b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.getinput&quot;&gt;EventBufferEvent::getInput&lt;/a&gt; &amp;mdash; Returns underlying input buffer associated with current buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.getinput&quot;&gt;EventBufferEvent :: getInput&lt;/a&gt; &amp;mdash; 현재 버퍼 이벤트와 관련된 기본 입력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="a5426c57fd155b47b824d2e6fc83ee287d15164a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.getoutput&quot;&gt;EventBufferEvent::getOutput()&lt;/a&gt; - Returns underlying output buffer associated with current buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.getoutput&quot;&gt;EventBufferEvent :: getOutput ()&lt;/a&gt; -현재 버퍼 이벤트와 관련된 기본 출력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="c95b75929eca532d58d1b22d69754247ed37123e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.getoutput&quot;&gt;EventBufferEvent::getOutput&lt;/a&gt; &amp;mdash; Returns underlying output buffer associated with current buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.getoutput&quot;&gt;EventBufferEvent :: getOutput&lt;/a&gt; &amp;mdash; 현재 버퍼 이벤트와 관련된 기본 출력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="c01bb86e6090e8306eae6bda0d944d24860c15e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.read&quot;&gt;EventBufferEvent::read()&lt;/a&gt; - Read buffer's data</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.read&quot;&gt;EventBufferEvent :: read ()&lt;/a&gt; -버퍼 데이터 읽기</target>
        </trans-unit>
        <trans-unit id="14442cac13f0fcef7ef7eee06a6d7ace376ef33b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.read&quot;&gt;EventBufferEvent::read&lt;/a&gt; &amp;mdash; Read buffer's data</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.read&quot;&gt;EventBufferEvent :: read&lt;/a&gt; &amp;mdash; 버퍼의 데이터를 읽는다</target>
        </trans-unit>
        <trans-unit id="c2f07b6709a4173f52bc92a27160999059968572" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.readbuffer&quot;&gt;EventBufferEvent::readBuffer()&lt;/a&gt; - Drains the entire contents of the input buffer and places them into buf</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.readbuffer&quot;&gt;EventBufferEvent :: readBuffer ()&lt;/a&gt; -입력 버퍼의 전체 내용을 버리고 buf에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="2239d9f33803352c04dbc0d1e072877b56724fce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.readbuffer&quot;&gt;EventBufferEvent::readBuffer&lt;/a&gt; &amp;mdash; Drains the entire contents of the input buffer and places them into buf</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.readbuffer&quot;&gt;EventBufferEvent :: readBuffer&lt;/a&gt; &amp;mdash; 입력 버퍼의 전체 내용을 버리고 buf에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="5c94a5a07dabf761da4333695e84a69f336e33f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.setcallbacks&quot;&gt;EventBufferEvent::setCallbacks&lt;/a&gt; &amp;mdash; Assigns read, write and event(status) callbacks</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.setcallbacks&quot;&gt;EventBufferEvent :: setCallbacks&lt;/a&gt; &amp;mdash; 읽기, 쓰기 및 이벤트 (상태) 콜백을 할당합니다</target>
        </trans-unit>
        <trans-unit id="dfaa05c869c0d5041006a009eb2ed51c86e9ab98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.setpriority&quot;&gt;EventBufferEvent::setPriority&lt;/a&gt; &amp;mdash; Assign a priority to a bufferevent</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.setpriority&quot;&gt;EventBufferEvent :: setPriority&lt;/a&gt; &amp;mdash; 버퍼 이벤트 에 우선 순위를 할당</target>
        </trans-unit>
        <trans-unit id="67f2c9feebb584d0914dad47c2acf7b1d19635a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.settimeouts&quot;&gt;EventBufferEvent::setTimeouts&lt;/a&gt; &amp;mdash; Set the read and write timeout for a buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.settimeouts&quot;&gt;EventBufferEvent :: setTimeouts&lt;/a&gt; &amp;mdash; 버퍼 이벤트의 읽기 및 쓰기 시간 초과를 설정합니다</target>
        </trans-unit>
        <trans-unit id="97ec38af9763efd65485e18415d93d98682e3c3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.setwatermark&quot;&gt;EventBufferEvent::setWatermark&lt;/a&gt; &amp;mdash; Adjusts read and/or write watermarks</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.setwatermark&quot;&gt;EventBufferEvent :: setWatermark&lt;/a&gt; &amp;mdash; 읽기 및 / 또는 쓰기 워터 마크를 조정합니다</target>
        </trans-unit>
        <trans-unit id="c833b786bcbd843bd6228e483578c2fe87991ee5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslerror&quot;&gt;EventBufferEvent::sslError&lt;/a&gt; &amp;mdash; Returns most recent OpenSSL error reported on the buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslerror&quot;&gt;EventBufferEvent :: sslError&lt;/a&gt; &amp;mdash; 버퍼 이벤트에보고 된 가장 최근의 OpenSSL 오류를 반환합니다</target>
        </trans-unit>
        <trans-unit id="5034968ce5b6cd7a267d3fcc9ce5e55ca15a6328" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslfilter&quot;&gt;EventBufferEvent::sslFilter()&lt;/a&gt; - Create a new SSL buffer event to send its data over another buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslfilter&quot;&gt;EventBufferEvent :: sslFilter ()&lt;/a&gt; -새 SSL 버퍼 이벤트를 만들어 다른 버퍼 이벤트를 통해 데이터를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="6668d58b9e5b8c913f4e22de379a912e5cad8f8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslfilter&quot;&gt;EventBufferEvent::sslFilter&lt;/a&gt; &amp;mdash; Create a new SSL buffer event to send its data over another buffer event</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslfilter&quot;&gt;EventBufferEvent :: sslFilter&lt;/a&gt; &amp;mdash; 새 SSL 버퍼 이벤트를 만들어 다른 버퍼 이벤트를 통해 데이터를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d00095a83102073ad9607610687106b2f84333ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslgetcipherinfo&quot;&gt;EventBufferEvent::sslGetCipherInfo&lt;/a&gt; &amp;mdash; Returns a textual description of the cipher</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslgetcipherinfo&quot;&gt;EventBufferEvent :: sslGetCipherInfo&lt;/a&gt; &amp;mdash; 암호에 대한 텍스트 설명을 반환합니다</target>
        </trans-unit>
        <trans-unit id="e0bd435bc11d1ee6c521eae4bae713290adccaa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslgetciphername&quot;&gt;EventBufferEvent::sslGetCipherName&lt;/a&gt; &amp;mdash; Returns the current cipher name of the SSL connection</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslgetciphername&quot;&gt;EventBufferEvent :: sslGetCipherName&lt;/a&gt; &amp;mdash; SSL 연결의 현재 암호 이름을 반환합니다</target>
        </trans-unit>
        <trans-unit id="b0eff0dd46b522fe8c246687263213253d9f7ba1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslgetcipherversion&quot;&gt;EventBufferEvent::sslGetCipherVersion&lt;/a&gt; &amp;mdash; Returns version of cipher used by current SSL connection</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslgetcipherversion&quot;&gt;EventBufferEvent :: sslGetCipherVersion&lt;/a&gt; &amp;mdash; 현재 SSL 연결에 사용 된 암호 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="371d2538fb8a6591e42941decfe279b28e7aae50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslgetprotocol&quot;&gt;EventBufferEvent::sslGetProtocol&lt;/a&gt; &amp;mdash; Returns the name of the protocol used for current SSL connection</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslgetprotocol&quot;&gt;EventBufferEvent :: sslGetProtocol&lt;/a&gt; &amp;mdash; 현재 SSL 연결에 사용 된 프로토콜 이름을 반환</target>
        </trans-unit>
        <trans-unit id="2d307c4efa4b159726c6e886de9bf9f3e2992f8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslrenegotiate&quot;&gt;EventBufferEvent::sslRenegotiate()&lt;/a&gt; - Tells a bufferevent to begin SSL renegotiation</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslrenegotiate&quot;&gt;EventBufferEvent :: sslRenegotiate ()&lt;/a&gt; -SSL 이벤트 재협상을 시작하도록 버퍼 이벤트에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="e745b91468a333311e15007a060e73f6ede0a891" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslrenegotiate&quot;&gt;EventBufferEvent::sslRenegotiate&lt;/a&gt; &amp;mdash; Tells a bufferevent to begin SSL renegotiation</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslrenegotiate&quot;&gt;EventBufferEvent :: sslRenegotiate&lt;/a&gt; &amp;mdash; SSL 이벤트 재협상을 시작하도록 버퍼 이벤트에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="52524b1d0eaf181d536bd8a5eca426ce3277945e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslsocket&quot;&gt;EventBufferEvent::sslSocket()&lt;/a&gt; - Creates a new SSL buffer event to send its data over an SSL on a socket</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslsocket&quot;&gt;EventBufferEvent :: sslSocket ()&lt;/a&gt; -새 SSL 버퍼 이벤트를 작성하여 소켓의 SSL을 통해 데이터를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="1155a9879783a2b638b2f8e178df70cb466ccefc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.sslsocket&quot;&gt;EventBufferEvent::sslSocket&lt;/a&gt; &amp;mdash; Creates a new SSL buffer event to send its data over an SSL on a socket</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.sslsocket&quot;&gt;EventBufferEvent :: sslSocket&lt;/a&gt; &amp;mdash; 소켓의 SSL을 통해 데이터를 전송하기 위해 새 SSL 버퍼 이벤트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4fccd8e2314482f3316b2deeb17d97e7d1622252" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.write&quot;&gt;EventBufferEvent::write()&lt;/a&gt; - Adds data to a buffer event's output buffer</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.write&quot;&gt;EventBufferEvent :: write ()&lt;/a&gt; -버퍼 이벤트의 출력 버퍼에 데이터를 추가합니다</target>
        </trans-unit>
        <trans-unit id="da721656e508baed6dea6c1a1acc0100438bab1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.write&quot;&gt;EventBufferEvent::write&lt;/a&gt; &amp;mdash; Adds data to a buffer event's output buffer</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.write&quot;&gt;EventBufferEvent :: write&lt;/a&gt; &amp;mdash; 버퍼 이벤트의 출력 버퍼에 데이터를 추가합니다</target>
        </trans-unit>
        <trans-unit id="a3c5612575cffdac872efd1c3a9b4dc0d8828cb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.writebuffer&quot;&gt;EventBufferEvent::writeBuffer()&lt;/a&gt; - Adds contents of the entire buffer to a buffer event's output buffer</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.writebuffer&quot;&gt;EventBufferEvent :: writeBuffer ()&lt;/a&gt; -전체 버퍼의 내용을 버퍼 이벤트의 출력 버퍼에 추가합니다</target>
        </trans-unit>
        <trans-unit id="4879785e1b522cbf7c5baedd35427e6e8b98dd40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbufferevent.writebuffer&quot;&gt;EventBufferEvent::writeBuffer&lt;/a&gt; &amp;mdash; Adds contents of the entire buffer to a buffer event's output buffer</source>
          <target state="translated">&lt;a href=&quot;eventbufferevent.writebuffer&quot;&gt;EventBufferEvent :: writeBuffer&lt;/a&gt; &amp;mdash; 전체 버퍼의 내용을 버퍼 이벤트의 출력 버퍼에 추가합니다</target>
        </trans-unit>
        <trans-unit id="b71037ef5d89397906e1a9fc42da156fccc62651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventconfig.avoidmethod&quot;&gt;EventConfig::avoidMethod&lt;/a&gt; &amp;mdash; Tells libevent to avoid specific event method</source>
          <target state="translated">&lt;a href=&quot;eventconfig.avoidmethod&quot;&gt;EventConfig :: avoidMethod&lt;/a&gt; &amp;mdash; 특정 이벤트 메소드를 피하도록 libevent에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="e8cdca6fec07797e47f05593293e18d4c1f0e437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventconfig.construct&quot;&gt;EventConfig::__construct&lt;/a&gt; &amp;mdash; Constructs EventConfig object</source>
          <target state="translated">&lt;a href=&quot;eventconfig.construct&quot;&gt;EventConfig :: __ construct&lt;/a&gt; &amp;mdash; EventConfig 객체를 생성 합니다</target>
        </trans-unit>
        <trans-unit id="be04d3baaf39a62f089d107ac084e11946131340" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventconfig.requirefeatures&quot;&gt;EventConfig::requireFeatures&lt;/a&gt; &amp;mdash; Enters a required event method feature that the application demands</source>
          <target state="translated">&lt;a href=&quot;eventconfig.requirefeatures&quot;&gt;EventConfig :: requireFeatures&lt;/a&gt; &amp;mdash; 응용 프로그램에 필요한 필수 이벤트 방법 기능을 입력합니다</target>
        </trans-unit>
        <trans-unit id="17073941d6d90b9bd67efc62c021734238bb31f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventconfig.setmaxdispatchinterval&quot;&gt;EventConfig::setMaxDispatchInterval&lt;/a&gt; &amp;mdash; Prevents priority inversion</source>
          <target state="translated">&lt;a href=&quot;eventconfig.setmaxdispatchinterval&quot;&gt;EventConfig :: setMaxDispatchInterval&lt;/a&gt; &amp;mdash; 우선 순위 반전 방지</target>
        </trans-unit>
        <trans-unit id="5d9dabd8ba38c7e33e387bf22ea3d42e407f174a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.addnameserverip&quot;&gt;EventDnsBase::addNameserverIp&lt;/a&gt; &amp;mdash; Adds a nameserver to the DNS base</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.addnameserverip&quot;&gt;EventDnsBase :: addNameserverIp&lt;/a&gt; &amp;mdash; DNS 서버에 네임 서버를 추가합니다</target>
        </trans-unit>
        <trans-unit id="0fac40c387477b3228fe9fec92cf9d7d2550830a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.addsearch&quot;&gt;EventDnsBase::addSearch()&lt;/a&gt; - Adds a domain to the list of search domains</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.addsearch&quot;&gt;EventDnsBase :: addSearch ()&lt;/a&gt; -검색 도메인 목록에 도메인을 추가합니다</target>
        </trans-unit>
        <trans-unit id="c7c93de80a480faadfc91e07bdb14a3c0f78a7da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.addsearch&quot;&gt;EventDnsBase::addSearch&lt;/a&gt; &amp;mdash; Adds a domain to the list of search domains</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.addsearch&quot;&gt;EventDnsBase :: addSearch&lt;/a&gt; &amp;mdash; 검색 도메인 목록에 도메인을 추가합니다</target>
        </trans-unit>
        <trans-unit id="9eb02f43caeecdb33584bc51ee559358fc5510e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.clearsearch&quot;&gt;EventDnsBase::clearSearch&lt;/a&gt; &amp;mdash; Removes all current search suffixes</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.clearsearch&quot;&gt;EventDnsBase :: clearSearch&lt;/a&gt; &amp;mdash; 모든 현재 검색 접미사를 제거합니다</target>
        </trans-unit>
        <trans-unit id="60789c286d9f162f2a8cddd2fcbae69d855fc00f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.construct&quot;&gt;EventDnsBase::__construct&lt;/a&gt; &amp;mdash; Constructs EventDnsBase object</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.construct&quot;&gt;EventDnsBase :: __ construct&lt;/a&gt; &amp;mdash; EventDnsBase 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="398a87b12f51f0b0f6a551f5f95fe5ba3aaf4b98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.countnameservers&quot;&gt;EventDnsBase::countNameservers&lt;/a&gt; &amp;mdash; Gets the number of configured nameservers</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.countnameservers&quot;&gt;EventDnsBase :: countNameservers&lt;/a&gt; &amp;mdash; 구성된 네임 서버 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="77330a1b37729c03d59324552d8c13fba1264024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.loadhosts&quot;&gt;EventDnsBase::loadHosts&lt;/a&gt; &amp;mdash; Loads a hosts file (in the same format as /etc/hosts) from hosts file</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.loadhosts&quot;&gt;EventDnsBase :: loadHosts&lt;/a&gt; &amp;mdash; 호스트 파일에서 / etc / hosts와 같은 형식으로 호스트 파일을로드합니다.</target>
        </trans-unit>
        <trans-unit id="0185863798fc378269860bce3d5da39fbf2332de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.parseresolvconf&quot;&gt;EventDnsBase::parseResolvConf&lt;/a&gt; &amp;mdash; Scans the resolv.conf-formatted file</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.parseresolvconf&quot;&gt;EventDnsBase :: parseResolvConf&lt;/a&gt; &amp;mdash; resolv.conf 형식의 파일을 검사합니다</target>
        </trans-unit>
        <trans-unit id="a8ddbb88f18f41a964dde6ab0807518fa4aba607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.setoption&quot;&gt;EventDnsBase::setOption&lt;/a&gt; &amp;mdash; Set the value of a configuration option</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.setoption&quot;&gt;EventDnsBase :: setOption&lt;/a&gt; &amp;mdash; 구성 옵션의 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="298728cbae233b952d24b1ecb47009132b9dda3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventdnsbase.setsearchndots&quot;&gt;EventDnsBase::setSearchNdots&lt;/a&gt; &amp;mdash; Set the 'ndots' parameter for searches</source>
          <target state="translated">&lt;a href=&quot;eventdnsbase.setsearchndots&quot;&gt;EventDnsBase :: setSearchNdots&lt;/a&gt; &amp;mdash; 검색을위한 'ndots'매개 변수를 설정합니다</target>
        </trans-unit>
        <trans-unit id="95631f9f6bf1563f1b793485db5fc4928db9e749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.accept&quot;&gt;EventHttp::accept()&lt;/a&gt; - Makes an HTTP server accept connections on the specified socket stream or resource</source>
          <target state="translated">&lt;a href=&quot;eventhttp.accept&quot;&gt;EventHttp :: accept ()&lt;/a&gt; -HTTP 서버가 지정된 소켓 스트림 또는 리소스에서 연결을 수락하도록합니다.</target>
        </trans-unit>
        <trans-unit id="c808e254b9424f9fad5643aa5567fe9ebf11bd19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.accept&quot;&gt;EventHttp::accept&lt;/a&gt; &amp;mdash; Makes an HTTP server accept connections on the specified socket stream or resource</source>
          <target state="translated">&lt;a href=&quot;eventhttp.accept&quot;&gt;EventHttp :: accept&lt;/a&gt; &amp;mdash; HTTP 서버가 지정된 소켓 스트림 또는 리소스에서 연결을 수락하도록합니다.</target>
        </trans-unit>
        <trans-unit id="936d2427a135b65f606c06fe6f314b3ea933a1ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.addserveralias&quot;&gt;EventHttp::addServerAlias()&lt;/a&gt; - Adds a server alias to the HTTP server object</source>
          <target state="translated">&lt;a href=&quot;eventhttp.addserveralias&quot;&gt;EventHttp :: addServerAlias ​​()&lt;/a&gt; -HTTP 서버 오브젝트에 서버 별명을 추가합니다</target>
        </trans-unit>
        <trans-unit id="fe06327124abee0b95a6441cd9cb2071f02565e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.addserveralias&quot;&gt;EventHttp::addServerAlias&lt;/a&gt; &amp;mdash; Adds a server alias to the HTTP server object</source>
          <target state="translated">&lt;a href=&quot;eventhttp.addserveralias&quot;&gt;EventHttp :: addServerAlias&lt;/a&gt; &amp;mdash; HTTP 서버 객체에 서버 별칭을 추가합니다</target>
        </trans-unit>
        <trans-unit id="ebde4beb3184f3e0bcfb12a9fd4de51299af205b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.bind&quot;&gt;EventHttp::bind()&lt;/a&gt; - Binds an HTTP server on the specified address and port</source>
          <target state="translated">&lt;a href=&quot;eventhttp.bind&quot;&gt;EventHttp :: bind ()&lt;/a&gt; -지정된 주소와 포트에 HTTP 서버를 바인딩</target>
        </trans-unit>
        <trans-unit id="6cb66f6fa50cec214bbcdb7c23232141c43c92c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.bind&quot;&gt;EventHttp::bind&lt;/a&gt; &amp;mdash; Binds an HTTP server on the specified address and port</source>
          <target state="translated">&lt;a href=&quot;eventhttp.bind&quot;&gt;EventHttp :: bind&lt;/a&gt; &amp;mdash; 지정된 주소와 포트에 HTTP 서버를 바인딩합니다</target>
        </trans-unit>
        <trans-unit id="bbd9a9755bad8e2aa3702cef121743478425b7cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.construct&quot;&gt;EventHttp::__construct&lt;/a&gt; &amp;mdash; Constructs EventHttp object(the HTTP server)</source>
          <target state="translated">&lt;a href=&quot;eventhttp.construct&quot;&gt;EventHttp :: __ construct&lt;/a&gt; &amp;mdash; EventHttp 객체 (HTTP 서버)를 생성합니다</target>
        </trans-unit>
        <trans-unit id="676f2b5773e6bb1784cc9ae09882e5f53c660eb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.removeserveralias&quot;&gt;EventHttp::removeServerAlias()&lt;/a&gt; - Removes server alias</source>
          <target state="translated">&lt;a href=&quot;eventhttp.removeserveralias&quot;&gt;EventHttp :: removeServerAlias ​​()&lt;/a&gt; -서버 별명을 제거합니다</target>
        </trans-unit>
        <trans-unit id="c34980035d44cafb8063f28add1bbb11c4fa38fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.removeserveralias&quot;&gt;EventHttp::removeServerAlias&lt;/a&gt; &amp;mdash; Removes server alias</source>
          <target state="translated">&lt;a href=&quot;eventhttp.removeserveralias&quot;&gt;EventHttp :: removeServerAlias&lt;/a&gt; &amp;mdash; 서버 별칭을 제거합니다</target>
        </trans-unit>
        <trans-unit id="001f7aac956e6baa7b48c2d806076f3fad9440d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setallowedmethods&quot;&gt;EventHttp::setAllowedMethods&lt;/a&gt; &amp;mdash; Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setallowedmethods&quot;&gt;EventHttp :: setAllowedMethods&lt;/a&gt; &amp;mdash;이 서버가 수락하고 사용자 콜백에 전달 된 요청에서 지원되는 HTTP 메소드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="72026a37388c1e61c0a5db0c5a4442cdc4ace29e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setcallback&quot;&gt;EventHttp::setCallback()&lt;/a&gt; - Sets a callback for specified URI</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setcallback&quot;&gt;EventHttp :: setCallback ()&lt;/a&gt; -지정된 URI에 대한 콜백을 설정합니다</target>
        </trans-unit>
        <trans-unit id="c31471358f777899332c35c50d0c9f6e723af2dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setcallback&quot;&gt;EventHttp::setCallback&lt;/a&gt; &amp;mdash; Sets a callback for specified URI</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setcallback&quot;&gt;EventHttp :: setCallback&lt;/a&gt; &amp;mdash; 지정된 URI에 대한 콜백을 설정합니다</target>
        </trans-unit>
        <trans-unit id="e67518818b2216a75b9a25cd2359fc7e69ade2d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setdefaultcallback&quot;&gt;EventHttp::setDefaultCallback()&lt;/a&gt; - Sets default callback to handle requests that are not caught by specific callbacks</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setdefaultcallback&quot;&gt;EventHttp :: setDefaultCallback ()&lt;/a&gt; -특정 콜백에서 잡지 않은 요청을 처리하도록 기본 콜백을 설정합니다</target>
        </trans-unit>
        <trans-unit id="941fd8463299542477afaa786d363c58d854fce2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setdefaultcallback&quot;&gt;EventHttp::setDefaultCallback&lt;/a&gt; &amp;mdash; Sets default callback to handle requests that are not caught by specific callbacks</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setdefaultcallback&quot;&gt;EventHttp :: setDefaultCallback&lt;/a&gt; &amp;mdash; 특정 콜백에 걸리지 않는 요청을 처리하도록 기본 콜백을 설정합니다</target>
        </trans-unit>
        <trans-unit id="1e3249e508a3db0a0528febf0ba95857543de120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setmaxbodysize&quot;&gt;EventHttp::setMaxBodySize&lt;/a&gt; &amp;mdash; Sets maximum request body size</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setmaxbodysize&quot;&gt;EventHttp :: setMaxBodySize&lt;/a&gt; &amp;mdash; 최대 요청 본문 크기를 설정합니다</target>
        </trans-unit>
        <trans-unit id="1ebf0618b6d236a710a24b94148968555815e7a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setmaxheaderssize&quot;&gt;EventHttp::setMaxHeadersSize()&lt;/a&gt; - Sets maximum HTTP header size</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setmaxheaderssize&quot;&gt;EventHttp :: setMaxHeadersSize ()&lt;/a&gt; -최대 HTTP 헤더 크기를 설정합니다</target>
        </trans-unit>
        <trans-unit id="07dced4ae5edd6f3bcc15b369323cf533651e982" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.setmaxheaderssize&quot;&gt;EventHttp::setMaxHeadersSize&lt;/a&gt; &amp;mdash; Sets maximum HTTP header size</source>
          <target state="translated">&lt;a href=&quot;eventhttp.setmaxheaderssize&quot;&gt;EventHttp :: setMaxHeadersSize&lt;/a&gt; &amp;mdash; 최대 HTTP 헤더 크기를 설정합니다</target>
        </trans-unit>
        <trans-unit id="81b0d70051bc9702ac3cf1fde3fb82224ee5877c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttp.settimeout&quot;&gt;EventHttp::setTimeout&lt;/a&gt; &amp;mdash; Sets the timeout for an HTTP request</source>
          <target state="translated">&lt;a href=&quot;eventhttp.settimeout&quot;&gt;EventHttp :: setTimeout&lt;/a&gt; &amp;mdash; HTTP 요청의 시간 초과를 설정합니다</target>
        </trans-unit>
        <trans-unit id="2c4bf33363eb434cd537676098f169cf252fc77a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.construct&quot;&gt;EventHttpConnection::__construct&lt;/a&gt; &amp;mdash; Constructs EventHttpConnection object</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.construct&quot;&gt;EventHttpConnection :: __ construct&lt;/a&gt; &amp;mdash; EventHttpConnection 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="2ae92d65fcd239bc9abd4dc8803ea405f81e1fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.getbase&quot;&gt;EventHttpConnection::getBase&lt;/a&gt; &amp;mdash; Returns event base associated with the connection</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.getbase&quot;&gt;EventHttpConnection :: getBase&lt;/a&gt; &amp;mdash; 연결과 관련된 이벤트베이스를 반환</target>
        </trans-unit>
        <trans-unit id="1a7717cc2da571521af38ee6d4d3d78c7415fe90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.getpeer&quot;&gt;EventHttpConnection::getPeer&lt;/a&gt; &amp;mdash; Gets the remote address and port associated with the connection</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.getpeer&quot;&gt;EventHttpConnection :: getPeer&lt;/a&gt; &amp;mdash; 연결과 관련된 원격 주소와 포트를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="51eba3bc45eab5df42f45f0d61f1b6232e6156ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.makerequest&quot;&gt;EventHttpConnection::makeRequest&lt;/a&gt; &amp;mdash; Makes an HTTP request over the specified connection</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.makerequest&quot;&gt;EventHttpConnection :: makeRequest&lt;/a&gt; &amp;mdash; 지정된 연결을 통해 HTTP 요청을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1bb3dbc885a34b852a96ef4f3acf940d490b2136" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setclosecallback&quot;&gt;EventHttpConnection::setCloseCallback()&lt;/a&gt; - Set callback for connection close</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setclosecallback&quot;&gt;EventHttpConnection :: setCloseCallback ()&lt;/a&gt; -연결 종료를위한 콜백 설정</target>
        </trans-unit>
        <trans-unit id="3453921065be9809c61e1a8f98d8c0e02fa91815" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setclosecallback&quot;&gt;EventHttpConnection::setCloseCallback&lt;/a&gt; &amp;mdash; Set callback for connection close</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setclosecallback&quot;&gt;EventHttpConnection :: setCloseCallback&lt;/a&gt; &amp;mdash; 연결 종료를위한 콜백 설정</target>
        </trans-unit>
        <trans-unit id="178fbd02f5224043aa9668f254d1bacd0b59806b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setlocaladdress&quot;&gt;EventHttpConnection::setLocalAddress()&lt;/a&gt; - Sets the IP address from which HTTP connections are made</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setlocaladdress&quot;&gt;EventHttpConnection :: setLocalAddress ()&lt;/a&gt; -HTTP 연결을 만드는 IP 주소를 설정합니다</target>
        </trans-unit>
        <trans-unit id="28a3f40ee29fa929d6e5aed4482cee3a38fc1ea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setlocaladdress&quot;&gt;EventHttpConnection::setLocalAddress&lt;/a&gt; &amp;mdash; Sets the IP address from which HTTP connections are made</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setlocaladdress&quot;&gt;EventHttpConnection :: setLocalAddress&lt;/a&gt; &amp;mdash; HTTP 연결이 만들어지는 IP 주소를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e80986a7602f5db9d7987b3114ad898fd15c5fde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setlocalport&quot;&gt;EventHttpConnection::setLocalPort()&lt;/a&gt; - Sets the local port from which connections are made</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setlocalport&quot;&gt;EventHttpConnection :: setLocalPort ()&lt;/a&gt; -연결되는 로컬 포트를 설정합니다</target>
        </trans-unit>
        <trans-unit id="c2c482a3c79bdb63a6799e136f6e2009a9409836" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setlocalport&quot;&gt;EventHttpConnection::setLocalPort&lt;/a&gt; &amp;mdash; Sets the local port from which connections are made</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setlocalport&quot;&gt;EventHttpConnection :: setLocalPort&lt;/a&gt; &amp;mdash; 연결이 이루어지는 로컬 포트를 설정합니다</target>
        </trans-unit>
        <trans-unit id="0d58e636d0d84aeee9171bb6e650d186838287ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setmaxbodysize&quot;&gt;EventHttpConnection::setMaxBodySize()&lt;/a&gt; - Sets maximum body size for the connection</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setmaxbodysize&quot;&gt;EventHttpConnection :: setMaxBodySize ()&lt;/a&gt; -연결의 최대 본문 크기를 설정합니다</target>
        </trans-unit>
        <trans-unit id="4abd1622971bdcc02887f892d4c6ba53ebb6cbd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setmaxbodysize&quot;&gt;EventHttpConnection::setMaxBodySize&lt;/a&gt; &amp;mdash; Sets maximum body size for the connection</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setmaxbodysize&quot;&gt;EventHttpConnection :: setMaxBodySize&lt;/a&gt; &amp;mdash; 연결의 최대 본문 크기를 설정합니다</target>
        </trans-unit>
        <trans-unit id="0202c1fd945f8511a3d1a4686c5876f2307efb40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setmaxheaderssize&quot;&gt;EventHttpConnection::setMaxHeadersSize()&lt;/a&gt; - Sets maximum header size</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setmaxheaderssize&quot;&gt;EventHttpConnection :: setMaxHeadersSize ()&lt;/a&gt; -최대 헤더 크기를 설정합니다</target>
        </trans-unit>
        <trans-unit id="125ec4bb4f174fab744dd2b8a7b4e197e3a4c050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setmaxheaderssize&quot;&gt;EventHttpConnection::setMaxHeadersSize&lt;/a&gt; &amp;mdash; Sets maximum header size</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setmaxheaderssize&quot;&gt;EventHttpConnection :: setMaxHeadersSize&lt;/a&gt; &amp;mdash; 최대 헤더 크기를 설정합니다</target>
        </trans-unit>
        <trans-unit id="7b6c1c7aad7974e2fa4b67db08ab108a811a8583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.setretries&quot;&gt;EventHttpConnection::setRetries&lt;/a&gt; &amp;mdash; Sets the retry limit for the connection</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.setretries&quot;&gt;EventHttpConnection :: setRetries&lt;/a&gt; &amp;mdash; 연결에 대한 재시도 제한을 설정합니다</target>
        </trans-unit>
        <trans-unit id="b668e25ae9e91e2086d6157a83d2586932e24c63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttpconnection.settimeout&quot;&gt;EventHttpConnection::setTimeout&lt;/a&gt; &amp;mdash; Sets the timeout for the connection</source>
          <target state="translated">&lt;a href=&quot;eventhttpconnection.settimeout&quot;&gt;EventHttpConnection :: setTimeout&lt;/a&gt; &amp;mdash; 연결 시간 초과를 설정합니다</target>
        </trans-unit>
        <trans-unit id="908dd36771b3045ce434e01c7ac256f8ab12d742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.addheader&quot;&gt;EventHttpRequest::addHeader()&lt;/a&gt; - Adds an HTTP header to the headers of the request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.addheader&quot;&gt;EventHttpRequest :: addHeader ()&lt;/a&gt; -요청 헤더에 HTTP 헤더를 추가합니다</target>
        </trans-unit>
        <trans-unit id="fcab77a287fae31945eb46a2856a4ac6a27cfda6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.addheader&quot;&gt;EventHttpRequest::addHeader&lt;/a&gt; &amp;mdash; Adds an HTTP header to the headers of the request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.addheader&quot;&gt;EventHttpRequest :: addHeader&lt;/a&gt; &amp;mdash; 요청 헤더에 HTTP 헤더를 추가합니다</target>
        </trans-unit>
        <trans-unit id="d64d11f75bc1615aeafb247f66c0957e1b3756d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.cancel&quot;&gt;EventHttpRequest::cancel()&lt;/a&gt; - Cancels a pending HTTP request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.cancel&quot;&gt;EventHttpRequest :: cancel ()&lt;/a&gt; -보류중인 HTTP 요청을 취소합니다</target>
        </trans-unit>
        <trans-unit id="c359f7785edfcc1cdc1724f4a8beb1ab60a4b5cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.cancel&quot;&gt;EventHttpRequest::cancel&lt;/a&gt; &amp;mdash; Cancels a pending HTTP request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.cancel&quot;&gt;EventHttpRequest :: cancel-&lt;/a&gt; 보류중인 HTTP 요청을 취소</target>
        </trans-unit>
        <trans-unit id="920d7aa1f2531a4f2aa1321b23cfb5d56e69420c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.clearheaders&quot;&gt;EventHttpRequest::clearHeaders&lt;/a&gt; &amp;mdash; Removes all output headers from the header list of the request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.clearheaders&quot;&gt;EventHttpRequest :: clearHeaders&lt;/a&gt; &amp;mdash; 요청의 헤더 목록에서 모든 출력 헤더를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="a4d3d691692812507ed2282f76f127f7265f84e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.closeconnection&quot;&gt;EventHttpRequest::closeConnection&lt;/a&gt; &amp;mdash; Closes associated HTTP connection</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.closeconnection&quot;&gt;EventHttpRequest :: closeConnection-&lt;/a&gt; 관련 HTTP 연결을 닫습니다</target>
        </trans-unit>
        <trans-unit id="86025f8182f9b98cd2010dc266f8c89adadcb316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.construct&quot;&gt;EventHttpRequest::__construct&lt;/a&gt; &amp;mdash; Constructs EventHttpRequest object</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.construct&quot;&gt;EventHttpRequest :: __ construct&lt;/a&gt; &amp;mdash; EventHttpRequest 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="9afc69b53180a5e8fac518c3f3113554556cfeaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.findheader&quot;&gt;EventHttpRequest::findHeader&lt;/a&gt; &amp;mdash; Finds the value belonging a header</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.findheader&quot;&gt;EventHttpRequest :: findHeader&lt;/a&gt; &amp;mdash; 헤더에 속하는 값을 찾습니다</target>
        </trans-unit>
        <trans-unit id="d1c9567207581439cac1123bd0032459c6198b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.free&quot;&gt;EventHttpRequest::free&lt;/a&gt; &amp;mdash; Frees the object and removes associated events</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.free&quot;&gt;EventHttpRequest :: free&lt;/a&gt; &amp;mdash; 객체를 해제하고 연관된 이벤트를 제거합니다</target>
        </trans-unit>
        <trans-unit id="59318d6ace6ee61b3b495fb8400c21e6a69e8de4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getbufferevent&quot;&gt;EventHttpRequest::getBufferEvent()&lt;/a&gt; - Returns EventBufferEvent object</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getbufferevent&quot;&gt;EventHttpRequest :: getBufferEvent ()&lt;/a&gt; -EventBufferEvent 객체를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0862c9376098927f73963cc7755a386836746167" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getbufferevent&quot;&gt;EventHttpRequest::getBufferEvent&lt;/a&gt; &amp;mdash; Returns EventBufferEvent object</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getbufferevent&quot;&gt;EventHttpRequest :: getBufferEvent&lt;/a&gt; &amp;mdash; EventBufferEvent 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d5d1d22dd04c1ba2165e997954fd43fb4fe702ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getcommand&quot;&gt;EventHttpRequest::getCommand()&lt;/a&gt; - Returns the request command(method)</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getcommand&quot;&gt;EventHttpRequest :: getCommand ()&lt;/a&gt; -요청 명령을 반환합니다 (방법)</target>
        </trans-unit>
        <trans-unit id="4f5da8c270f0987e325cd477dbba8b51381ee72e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getcommand&quot;&gt;EventHttpRequest::getCommand&lt;/a&gt; &amp;mdash; Returns the request command(method)</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getcommand&quot;&gt;EventHttpRequest :: getCommand&lt;/a&gt; &amp;mdash; 요청 명령을 반환합니다 (방법)</target>
        </trans-unit>
        <trans-unit id="3a7a3e70ed842334c2c204c1fd826c0d0e7cc2cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getconnection&quot;&gt;EventHttpRequest::getConnection()&lt;/a&gt; - Returns EventHttpConnection object</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getconnection&quot;&gt;EventHttpRequest :: getConnection ()&lt;/a&gt; -EventHttpConnection 객체를 반환</target>
        </trans-unit>
        <trans-unit id="1732d8797b22717e10110ba96ad8dec717f43f76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getconnection&quot;&gt;EventHttpRequest::getConnection&lt;/a&gt; &amp;mdash; Returns EventHttpConnection object</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getconnection&quot;&gt;EventHttpRequest :: getConnection&lt;/a&gt; -EventHttpConnection 객체를 반환</target>
        </trans-unit>
        <trans-unit id="f2318fddf60eaf580beb10e1a499756294c15753" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.gethost&quot;&gt;EventHttpRequest::getHost()&lt;/a&gt; - Returns the request host</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.gethost&quot;&gt;EventHttpRequest :: getHost ()&lt;/a&gt; -요청 호스트를 반환</target>
        </trans-unit>
        <trans-unit id="3f1fb6792d8017225e2fa8c435d342ed2308e6e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.gethost&quot;&gt;EventHttpRequest::getHost&lt;/a&gt; &amp;mdash; Returns the request host</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.gethost&quot;&gt;EventHttpRequest :: getHost&lt;/a&gt; &amp;mdash; 요청 호스트를 반환</target>
        </trans-unit>
        <trans-unit id="8c4c33abc085cab7bda1e22859d84a5da14ba8ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getinputbuffer&quot;&gt;EventHttpRequest::getInputBuffer()&lt;/a&gt; - Returns the input buffer</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getinputbuffer&quot;&gt;EventHttpRequest :: getInputBuffer ()&lt;/a&gt; -입력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="ce890e7217edf441ebb0d70926fb2de27696378b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getinputbuffer&quot;&gt;EventHttpRequest::getInputBuffer&lt;/a&gt; &amp;mdash; Returns the input buffer</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getinputbuffer&quot;&gt;EventHttpRequest :: getInputBuffer&lt;/a&gt; &amp;mdash; 입력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="b1ef99fc9498e8c201ec3e704e474c589fc31018" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getinputheaders&quot;&gt;EventHttpRequest::getInputHeaders()&lt;/a&gt; - Returns associative array of the input headers</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getinputheaders&quot;&gt;EventHttpRequest :: getInputHeaders ()&lt;/a&gt; -입력 헤더의 연관 배열을 리턴합니다</target>
        </trans-unit>
        <trans-unit id="42bb1f448d32e1cde353b7c207c7337782c95b55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getinputheaders&quot;&gt;EventHttpRequest::getInputHeaders&lt;/a&gt; &amp;mdash; Returns associative array of the input headers</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getinputheaders&quot;&gt;EventHttpRequest :: getInputHeaders&lt;/a&gt; &amp;mdash; 입력 헤더의 연관 배열을 반환</target>
        </trans-unit>
        <trans-unit id="000a7eab2e2e6394e6fbbd21feb7d8c3ce75ca36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getoutputbuffer&quot;&gt;EventHttpRequest::getOutputBuffer()&lt;/a&gt; - Returns the output buffer of the request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getoutputbuffer&quot;&gt;EventHttpRequest :: getOutputBuffer ()&lt;/a&gt; -요청의 출력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="03d27a522a49919d2905c759609f9a86c014498c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getoutputbuffer&quot;&gt;EventHttpRequest::getOutputBuffer&lt;/a&gt; &amp;mdash; Returns the output buffer of the request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getoutputbuffer&quot;&gt;EventHttpRequest :: getOutputBuffer&lt;/a&gt; &amp;mdash; 요청의 출력 버퍼를 반환</target>
        </trans-unit>
        <trans-unit id="01c05bb38227456d8a0c1791479190d6f19481e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getoutputheaders&quot;&gt;EventHttpRequest::getOutputHeaders()&lt;/a&gt; - Returns associative array of the output headers</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getoutputheaders&quot;&gt;EventHttpRequest :: getOutputHeaders ()&lt;/a&gt; -출력 헤더의 연관 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fc1c3f5a53152ebd7cae9fb3577cafca9456fca6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getoutputheaders&quot;&gt;EventHttpRequest::getOutputHeaders&lt;/a&gt; &amp;mdash; Returns associative array of the output headers</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getoutputheaders&quot;&gt;EventHttpRequest :: getOutputHeaders&lt;/a&gt; &amp;mdash; 출력 헤더의 연관 배열을 반환</target>
        </trans-unit>
        <trans-unit id="5d60e475ca524a197298572be93073394f439322" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getresponsecode&quot;&gt;EventHttpRequest::getResponseCode()&lt;/a&gt; - Returns the response code</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getresponsecode&quot;&gt;EventHttpRequest :: getResponseCode ()&lt;/a&gt; -응답 코드를 반환</target>
        </trans-unit>
        <trans-unit id="b10d42efc5af037f5192e60ea8d291e92b0b5736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.getresponsecode&quot;&gt;EventHttpRequest::getResponseCode&lt;/a&gt; &amp;mdash; Returns the response code</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.getresponsecode&quot;&gt;EventHttpRequest :: getResponseCode&lt;/a&gt; &amp;mdash; 응답 코드를 반환</target>
        </trans-unit>
        <trans-unit id="39a04a8396e0e1b8d62143e10c6986b4338a5cd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.geturi&quot;&gt;EventHttpRequest::getUri()&lt;/a&gt; - Returns the request URI</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.geturi&quot;&gt;EventHttpRequest :: getUri ()&lt;/a&gt; -요청 URI를 반환</target>
        </trans-unit>
        <trans-unit id="124c913ee4cdeae0eef20320dfa0564c3318277c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.geturi&quot;&gt;EventHttpRequest::getUri&lt;/a&gt; &amp;mdash; Returns the request URI</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.geturi&quot;&gt;EventHttpRequest :: getUri-&lt;/a&gt; 요청 URI를 반환</target>
        </trans-unit>
        <trans-unit id="ca85aa6fc3ebe05f6b43ec78b8983b842ac36cdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.removeheader&quot;&gt;EventHttpRequest::removeHeader()&lt;/a&gt; - Removes an HTTP header from the headers of the request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.removeheader&quot;&gt;EventHttpRequest :: removeHeader ()&lt;/a&gt; -요청 헤더에서 HTTP 헤더를 제거합니다</target>
        </trans-unit>
        <trans-unit id="117b129b1a3d1a0de44b591395e1aae02a70e46d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.removeheader&quot;&gt;EventHttpRequest::removeHeader&lt;/a&gt; &amp;mdash; Removes an HTTP header from the headers of the request</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.removeheader&quot;&gt;EventHttpRequest :: removeHeader&lt;/a&gt; &amp;mdash; 요청의 헤더에서 HTTP 헤더를 제거합니다</target>
        </trans-unit>
        <trans-unit id="cff3ed5850305fe16e30bc28d63b0a0b48e237e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.senderror&quot;&gt;EventHttpRequest::sendError()&lt;/a&gt; - Send an HTML error message to the client</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.senderror&quot;&gt;EventHttpRequest :: sendError ()&lt;/a&gt; -클라이언트에게 HTML 오류 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="ef6e0c357a16d12ec5d6ab7a702655da71b2f687" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.senderror&quot;&gt;EventHttpRequest::sendError&lt;/a&gt; &amp;mdash; Send an HTML error message to the client</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.senderror&quot;&gt;EventHttpRequest :: sendError&lt;/a&gt; &amp;mdash; 클라이언트에게 HTML 오류 메시지를 보낸다</target>
        </trans-unit>
        <trans-unit id="14770b40765697bf8e73bded7364b071d27aab0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreply&quot;&gt;EventHttpRequest::sendReply()&lt;/a&gt; - Send an HTML reply to the client</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreply&quot;&gt;EventHttpRequest :: sendReply ()&lt;/a&gt; -클라이언트에 HTML 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4457e0a6f517f974b2115e21cd0105983c315f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreply&quot;&gt;EventHttpRequest::sendReply&lt;/a&gt; &amp;mdash; Send an HTML reply to the client</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreply&quot;&gt;EventHttpRequest :: sendReply&lt;/a&gt; &amp;mdash; 클라이언트에게 HTML 응답을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c2b528ac6f9256a8f9a1e307e5ecc4c426e59ce8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreplychunk&quot;&gt;EventHttpRequest::sendReplyChunk()&lt;/a&gt; - Send another data chunk as part of an ongoing chunked reply</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreplychunk&quot;&gt;EventHttpRequest :: sendReplyChunk ()&lt;/a&gt; -진행중인 청크 응답의 일부로 다른 데이터 청크를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="bec34d69559b485165aa41ec32fd4d8fb0be7bda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreplychunk&quot;&gt;EventHttpRequest::sendReplyChunk&lt;/a&gt; &amp;mdash; Send another data chunk as part of an ongoing chunked reply</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreplychunk&quot;&gt;EventHttpRequest :: sendReplyChunk&lt;/a&gt; &amp;mdash; 진행중인 청크 응답의 일부로 다른 데이터 청크를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a2d4110e6953569bbaa3701c2ebceffa925041b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreplyend&quot;&gt;EventHttpRequest::sendReplyEnd()&lt;/a&gt; - Complete a chunked reply, freeing the request as appropriate</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreplyend&quot;&gt;EventHttpRequest :: sendReplyEnd ()&lt;/a&gt; -청크 응답을 완료하여 요청을 적절하게 해제합니다.</target>
        </trans-unit>
        <trans-unit id="9adce80461df04f34f97cd5750cb8c83a58c46b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreplyend&quot;&gt;EventHttpRequest::sendReplyEnd&lt;/a&gt; &amp;mdash; Complete a chunked reply, freeing the request as appropriate</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreplyend&quot;&gt;EventHttpRequest :: sendReplyEnd&lt;/a&gt; &amp;mdash; 청크 응답을 완료하여 요청을 적절하게 해제합니다.</target>
        </trans-unit>
        <trans-unit id="99482ffb51a24965c03b1c8c3bcb3ba670147a7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreplystart&quot;&gt;EventHttpRequest::sendReplyStart()&lt;/a&gt; - Initiate a chunked reply</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreplystart&quot;&gt;EventHttpRequest :: sendReplyStart ()&lt;/a&gt; -청크 응답을 시작합니다</target>
        </trans-unit>
        <trans-unit id="e38fdf60bd78a4acc241813e3ac6bf19ca83851f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventhttprequest.sendreplystart&quot;&gt;EventHttpRequest::sendReplyStart&lt;/a&gt; &amp;mdash; Initiate a chunked reply</source>
          <target state="translated">&lt;a href=&quot;eventhttprequest.sendreplystart&quot;&gt;EventHttpRequest :: sendReplyStart&lt;/a&gt; &amp;mdash; 청크 응답을 시작합니다</target>
        </trans-unit>
        <trans-unit id="2f655b165742971568b2da193166634b2931a3c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.construct&quot;&gt;EventListener::__construct&lt;/a&gt; &amp;mdash; Creates new connection listener associated with an event base</source>
          <target state="translated">&lt;a href=&quot;eventlistener.construct&quot;&gt;EventListener :: __ construct&lt;/a&gt; &amp;mdash; 이벤트베이스와 관련된 새로운 연결 리스너를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6ba2af1cc7220f1544591ad88304f4e8ffc35d70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.disable&quot;&gt;EventListener::disable()&lt;/a&gt; - Disables an event connect listener object</source>
          <target state="translated">&lt;a href=&quot;eventlistener.disable&quot;&gt;EventListener :: disable ()&lt;/a&gt; -이벤트 연결 리스너 객체를 비활성화합니다</target>
        </trans-unit>
        <trans-unit id="883b7e5f1f040a69068e4cdace5cfec24238dcd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.disable&quot;&gt;EventListener::disable&lt;/a&gt; &amp;mdash; Disables an event connect listener object</source>
          <target state="translated">&lt;a href=&quot;eventlistener.disable&quot;&gt;EventListener :: disable&lt;/a&gt; &amp;mdash; 이벤트 연결 리스너 객체를 비활성화합니다</target>
        </trans-unit>
        <trans-unit id="10164d2919214edc3111708fa62bed99b14ff957" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.enable&quot;&gt;EventListener::enable()&lt;/a&gt; - Enables an event connect listener object</source>
          <target state="translated">&lt;a href=&quot;eventlistener.enable&quot;&gt;EventListener :: enable ()&lt;/a&gt; -이벤트 연결 리스너 객체를 활성화합니다</target>
        </trans-unit>
        <trans-unit id="fed6822594f49ea8d2849dafbe1be35832dc8edb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.enable&quot;&gt;EventListener::enable&lt;/a&gt; &amp;mdash; Enables an event connect listener object</source>
          <target state="translated">&lt;a href=&quot;eventlistener.enable&quot;&gt;EventListener :: enable&lt;/a&gt; &amp;mdash; 이벤트 연결 리스너 객체를 활성화합니다</target>
        </trans-unit>
        <trans-unit id="f99ae31629559098f88cff3eb396d7ebce5e2cfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.getbase&quot;&gt;EventListener::getBase&lt;/a&gt; &amp;mdash; Returns event base associated with the event listener</source>
          <target state="translated">&lt;a href=&quot;eventlistener.getbase&quot;&gt;EventListener :: getBase&lt;/a&gt; &amp;mdash; 이벤트 리스너와 관련된 이벤트베이스를 반환</target>
        </trans-unit>
        <trans-unit id="f45535330843f83b7ed1ddbac002eff71d2780a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.getsocketname&quot;&gt;EventListener::getSocketName&lt;/a&gt; &amp;mdash; Retreives the current address to which the listener's socket is bound</source>
          <target state="translated">&lt;a href=&quot;eventlistener.getsocketname&quot;&gt;EventListener :: getSocketName&lt;/a&gt; &amp;mdash; 리스너의 소켓이 바인딩 된 현재 주소를 검색합니다</target>
        </trans-unit>
        <trans-unit id="32b9645e1c6d122b93fa49782c68d4f36ccfd643" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.setcallback&quot;&gt;EventListener::setCallback()&lt;/a&gt; - The setCallback purpose</source>
          <target state="translated">&lt;a href=&quot;eventlistener.setcallback&quot;&gt;EventListener :: setCallback ()&lt;/a&gt; -setCallback 목적</target>
        </trans-unit>
        <trans-unit id="cd2fd9c114502a9e8481243151a15ec7cbe5887a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.setcallback&quot;&gt;EventListener::setCallback&lt;/a&gt; &amp;mdash; The setCallback purpose</source>
          <target state="translated">&lt;a href=&quot;eventlistener.setcallback&quot;&gt;EventListener :: setCallback&lt;/a&gt; &amp;mdash; setCallback 목적</target>
        </trans-unit>
        <trans-unit id="fb4f7af7a5a379187c0140b49711f70c7895ed37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventlistener.seterrorcallback&quot;&gt;EventListener::setErrorCallback&lt;/a&gt; &amp;mdash; Set event listener's error callback</source>
          <target state="translated">&lt;a href=&quot;eventlistener.seterrorcallback&quot;&gt;EventListener :: setErrorCallback&lt;/a&gt; &amp;mdash; 이벤트 리스너의 오류 콜백 설정</target>
        </trans-unit>
        <trans-unit id="d62e7eee7289d6320af51064077ca810233c7566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct&lt;/a&gt; &amp;mdash; Constructs an OpenSSL context for use with Event classes</source>
          <target state="translated">&lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext :: __ construct&lt;/a&gt; &amp;mdash; 이벤트 클래스와 함께 사용할 OpenSSL 컨텍스트를 구성합니다</target>
        </trans-unit>
        <trans-unit id="f90969d61593d13cb89778107397f58b8f7fd5e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.construct&quot;&gt;EventUtil::__construct&lt;/a&gt; &amp;mdash; The abstract constructor</source>
          <target state="translated">&lt;a href=&quot;eventutil.construct&quot;&gt;EventUtil :: __ construct&lt;/a&gt; &amp;mdash; 추상 생성자</target>
        </trans-unit>
        <trans-unit id="ca4b7c0277fc1d621fcd6a2a188b4f5e7bbfe0fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.getlastsocketerrno&quot;&gt;EventUtil::getLastSocketErrno()&lt;/a&gt; - Returns the most recent socket error number</source>
          <target state="translated">&lt;a href=&quot;eventutil.getlastsocketerrno&quot;&gt;EventUtil :: getLastSocketErrno ()&lt;/a&gt; -가장 최근의 소켓 오류 번호를 반환합니다</target>
        </trans-unit>
        <trans-unit id="c946238e76b7cc9d32ad5e3657445a2ad69c3b99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.getlastsocketerrno&quot;&gt;EventUtil::getLastSocketErrno&lt;/a&gt; &amp;mdash; Returns the most recent socket error number</source>
          <target state="translated">&lt;a href=&quot;eventutil.getlastsocketerrno&quot;&gt;EventUtil :: getLastSocketErrno&lt;/a&gt; &amp;mdash; 가장 최근의 소켓 오류 번호를 반환합니다</target>
        </trans-unit>
        <trans-unit id="99da682cb9de8fe0ce3a9a1306a269ab867a54a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.getlastsocketerror&quot;&gt;EventUtil::getLastSocketError()&lt;/a&gt; - Returns the most recent socket error</source>
          <target state="translated">&lt;a href=&quot;eventutil.getlastsocketerror&quot;&gt;EventUtil :: getLastSocketError ()&lt;/a&gt; -가장 최근의 소켓 오류를 반환합니다</target>
        </trans-unit>
        <trans-unit id="4144f9c2bd125a31c46d8ab0f8ba310590057d5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.getlastsocketerror&quot;&gt;EventUtil::getLastSocketError&lt;/a&gt; &amp;mdash; Returns the most recent socket error</source>
          <target state="translated">&lt;a href=&quot;eventutil.getlastsocketerror&quot;&gt;EventUtil :: getLastSocketError&lt;/a&gt; &amp;mdash; 가장 최근의 소켓 오류를 반환합니다</target>
        </trans-unit>
        <trans-unit id="611588ae1f2c4159c85aa22b4688671c787f5d2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.getsocketfd&quot;&gt;EventUtil::getSocketFd&lt;/a&gt; &amp;mdash; Returns numeric file descriptor of a socket, or stream</source>
          <target state="translated">&lt;a href=&quot;eventutil.getsocketfd&quot;&gt;EventUtil :: getSocketFd&lt;/a&gt; &amp;mdash; 소켓 또는 스트림의 숫자 파일 디스크립터를 반환합니다</target>
        </trans-unit>
        <trans-unit id="73a6438dfefe9ad2d8de81ca3d57a5a5895276ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.getsocketname&quot;&gt;EventUtil::getSocketName&lt;/a&gt; &amp;mdash; Retreives the current address to which the socket is bound</source>
          <target state="translated">&lt;a href=&quot;eventutil.getsocketname&quot;&gt;EventUtil :: getSocketName&lt;/a&gt; &amp;mdash; 소켓이 바인딩 된 현재 주소를 검색합니다</target>
        </trans-unit>
        <trans-unit id="23e3acda48bd85f05558bec69fee91c6749623a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.setsocketoption&quot;&gt;EventUtil::setSocketOption&lt;/a&gt; &amp;mdash; Sets socket options</source>
          <target state="translated">&lt;a href=&quot;eventutil.setsocketoption&quot;&gt;EventUtil :: setSocketOption&lt;/a&gt; &amp;mdash; 소켓 옵션을 설정합니다</target>
        </trans-unit>
        <trans-unit id="1de007f08d15873acc0586f606e4e5818d5aefc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventutil.sslrandpoll&quot;&gt;EventUtil::sslRandPoll&lt;/a&gt; &amp;mdash; Generates entropy by means of OpenSSL's RAND_poll()</source>
          <target state="translated">&lt;a href=&quot;eventutil.sslrandpoll&quot;&gt;EventUtil :: sslRandPoll&lt;/a&gt; &amp;mdash; OpenSSL의 RAND_poll ()을 통해 엔트로피를 생성합니다</target>
        </trans-unit>
        <trans-unit id="b950b770bc248576788eb99a406d7d3fcca33f91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evfork.construct&quot;&gt;EvFork::__construct()&lt;/a&gt; - Constructs the EvFork watcher object</source>
          <target state="translated">&lt;a href=&quot;evfork.construct&quot;&gt;EvFork :: __ construct ()&lt;/a&gt; -EvFork 감시자 객체를 생성</target>
        </trans-unit>
        <trans-unit id="4c0c8955efe3188b75361fab77835445f86da224" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evfork.construct&quot;&gt;EvFork::__construct&lt;/a&gt; &amp;mdash; Constructs the EvFork watcher object</source>
          <target state="translated">&lt;a href=&quot;evfork.construct&quot;&gt;EvFork :: __ construct&lt;/a&gt; &amp;mdash; EvFork 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="111457094d20244d1345efb7ceb02bd30e32e8ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evfork.createstopped&quot;&gt;EvFork::createStopped&lt;/a&gt; &amp;mdash; Creates a stopped instance of EvFork watcher class</source>
          <target state="translated">&lt;a href=&quot;evfork.createstopped&quot;&gt;EvFork :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvFork 감시자 클래스 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="252126807708599323f24ca38e9433d8f41d1818" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evidle.construct&quot;&gt;EvIdle::__construct()&lt;/a&gt; - Constructs the EvIdle watcher object</source>
          <target state="translated">&lt;a href=&quot;evidle.construct&quot;&gt;EvIdle :: __ construct ()&lt;/a&gt; -EvIdle 감시자 객체를 생성</target>
        </trans-unit>
        <trans-unit id="2549c1bab724e52e716f4d539dc5b81d35c7a6f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evidle.construct&quot;&gt;EvIdle::__construct&lt;/a&gt; &amp;mdash; Constructs the EvIdle watcher object</source>
          <target state="translated">&lt;a href=&quot;evidle.construct&quot;&gt;EvIdle :: __ construct&lt;/a&gt; &amp;mdash; EvIdle 감시자 객체를 구성합니다</target>
        </trans-unit>
        <trans-unit id="89bd69fc4712ac4ff37ce9242b99cf6f60a87ff8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evidle.createstopped&quot;&gt;EvIdle::createStopped()&lt;/a&gt; - Creates instance of a stopped EvIdle watcher object</source>
          <target state="translated">&lt;a href=&quot;evidle.createstopped&quot;&gt;EvIdle :: createStopped ()&lt;/a&gt; -중지 된 EvIdle 감시자 객체의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7dbadb199a63f798c508b17913da92286cd65890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evidle.createstopped&quot;&gt;EvIdle::createStopped&lt;/a&gt; &amp;mdash; Creates instance of a stopped EvIdle watcher object</source>
          <target state="translated">&lt;a href=&quot;evidle.createstopped&quot;&gt;EvIdle :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvIdle 감시자 객체의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="344245a416d42e249e97d2b62a4cb01eceb54163" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evio.construct&quot;&gt;EvIo::__construct()&lt;/a&gt; - Constructs EvIo watcher object</source>
          <target state="translated">&lt;a href=&quot;evio.construct&quot;&gt;EvIo :: __ construct ()&lt;/a&gt; -EvIo 감시자 객체 생성</target>
        </trans-unit>
        <trans-unit id="d5416548842bc332c4e95a954bcd6c60ff05d24d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evio.construct&quot;&gt;EvIo::__construct&lt;/a&gt; &amp;mdash; Constructs EvIo watcher object</source>
          <target state="translated">&lt;a href=&quot;evio.construct&quot;&gt;EvIo :: __ construct&lt;/a&gt; &amp;mdash; EvIo 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="46d0c58407859ea30c53f45b7cf8d780e5640da1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evio.createstopped&quot;&gt;EvIo::createStopped()&lt;/a&gt; - Create stopped EvIo watcher object</source>
          <target state="translated">&lt;a href=&quot;evio.createstopped&quot;&gt;EvIo :: createStopped ()&lt;/a&gt; -중지 된 EvIo 감시자 오브젝트 작성</target>
        </trans-unit>
        <trans-unit id="46f001c0f0c5108d00076f8965e95acd4657844a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evio.createstopped&quot;&gt;EvIo::createStopped&lt;/a&gt; &amp;mdash; Create stopped EvIo watcher object</source>
          <target state="translated">&lt;a href=&quot;evio.createstopped&quot;&gt;EvIo :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvIo 감시자 객체 만들기</target>
        </trans-unit>
        <trans-unit id="78ea16004c1d23b71ba27ad11e1e1c7113cfe9d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evio.set&quot;&gt;EvIo::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="translated">&lt;a href=&quot;evio.set&quot;&gt;EvIo :: set&lt;/a&gt; &amp;mdash; 감시자를 구성합니다</target>
        </trans-unit>
        <trans-unit id="22bcbcb272344b7bcc685d319549e2bfdaf09368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.backend&quot;&gt;EvLoop::backend&lt;/a&gt; &amp;mdash; Returns an integer describing the backend used by libev</source>
          <target state="translated">&lt;a href=&quot;evloop.backend&quot;&gt;EvLoop :: backend&lt;/a&gt; &amp;mdash; libev에서 사용하는 백엔드를 설명하는 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c85aa6bc5bc6f86c1b2365b428196df1a987e88c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.check&quot;&gt;EvLoop::check()&lt;/a&gt; - Creates EvCheck object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.check&quot;&gt;EvLoop :: check ()&lt;/a&gt; -현재 이벤트 루프 인스턴스와 관련된 EvCheck 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6b3b707140a508c9d3fbc62acf231fc99b48f990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.check&quot;&gt;EvLoop::check&lt;/a&gt; &amp;mdash; Creates EvCheck object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.check&quot;&gt;EvLoop :: check&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvCheck 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="add10826f8ffce1e2467f4bfc63a030de3a81a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.child&quot;&gt;EvLoop::child()&lt;/a&gt; - Creates EvChild object associated with the current event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.child&quot;&gt;EvLoop :: child ()&lt;/a&gt; -현재 이벤트 루프와 관련된 EvChild 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6bd0662d76616fcf4d684837d0fc5ee7fde2b346" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.child&quot;&gt;EvLoop::child&lt;/a&gt; &amp;mdash; Creates EvChild object associated with the current event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.child&quot;&gt;EvLoop :: child&lt;/a&gt; &amp;mdash; 현재 이벤트 루프와 관련된 EvChild 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f76b90571960a7a7254c54f6b2fd96219f579d7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.construct&quot;&gt;EvLoop::__construct()&lt;/a&gt; - Constructs the event loop object</source>
          <target state="translated">&lt;a href=&quot;evloop.construct&quot;&gt;EvLoop :: __ construct ()&lt;/a&gt; -이벤트 루프 객체를 생성</target>
        </trans-unit>
        <trans-unit id="12482e47e8f7f8404acb10a40a56d611e6225a94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.construct&quot;&gt;EvLoop::__construct&lt;/a&gt; &amp;mdash; Constructs the event loop object</source>
          <target state="translated">&lt;a href=&quot;evloop.construct&quot;&gt;EvLoop :: __ construct&lt;/a&gt; &amp;mdash; 이벤트 루프 객체를 생성합니다</target>
        </trans-unit>
        <trans-unit id="cd333de954275b6746839fd6a4e6609f7cfd1970" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.defaultloop&quot;&gt;EvLoop::defaultLoop()&lt;/a&gt; - Returns or creates the default event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.defaultloop&quot;&gt;EvLoop :: defaultLoop ()&lt;/a&gt; -기본 이벤트 루프를 반환하거나 생성합니다</target>
        </trans-unit>
        <trans-unit id="2677e99f96f15477ff608ecf88a9f330aaa4676e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.defaultloop&quot;&gt;EvLoop::defaultLoop&lt;/a&gt; &amp;mdash; Returns or creates the default event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.defaultloop&quot;&gt;EvLoop :: defaultLoop&lt;/a&gt; &amp;mdash; 기본 이벤트 루프를 반환하거나 만듭니다</target>
        </trans-unit>
        <trans-unit id="a747e7b7c6d444332dd9e65e1ca3d3c4ada85286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.embed&quot;&gt;EvLoop::embed&lt;/a&gt; &amp;mdash; Creates an instance of EvEmbed watcher associated with the current EvLoop object</source>
          <target state="translated">&lt;a href=&quot;evloop.embed&quot;&gt;EvLoop :: embed&lt;/a&gt; &amp;mdash; 현재 EvLoop 객체와 연결된 EvEmbed 감시자의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a654089a7e2a890cef77f206559dd68ac0ae3a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.fork&quot;&gt;EvLoop::fork()&lt;/a&gt; - Creates EvFork watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.fork&quot;&gt;EvLoop :: fork ()&lt;/a&gt; -현재 이벤트 루프 인스턴스와 관련된 EvFork 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0e0f1cdfe83905a35642019ae4bd38fc3d6440b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.fork&quot;&gt;EvLoop::fork&lt;/a&gt; &amp;mdash; Creates EvFork watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.fork&quot;&gt;EvLoop :: fork&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvFork 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0045fb54db8fe18aac44addc60e6fdedf5ff4301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.idle&quot;&gt;EvLoop::idle()&lt;/a&gt; - Creates EvIdle watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.idle&quot;&gt;EvLoop :: idle ()&lt;/a&gt; -현재 이벤트 루프 인스턴스와 관련된 EvIdle 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c2ec5d032d95129f362df888db8a9a8cf4b522ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.idle&quot;&gt;EvLoop::idle&lt;/a&gt; &amp;mdash; Creates EvIdle watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.idle&quot;&gt;EvLoop :: idle&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvIdle 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="41036285f8aaf8ac423c75bb9be7527dd1c2edce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.invokepending&quot;&gt;EvLoop::invokePending&lt;/a&gt; &amp;mdash; Invoke all pending watchers while resetting their pending state</source>
          <target state="translated">&lt;a href=&quot;evloop.invokepending&quot;&gt;EvLoop :: invokePending&lt;/a&gt; &amp;mdash; 보류 상태를 재설정하면서 보류중인 모든 감시자를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="81b7917f1c146ad756868bef8bd8077d549bc44d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.io&quot;&gt;EvLoop::io()&lt;/a&gt; - Create EvIo watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.io&quot;&gt;EvLoop :: io ()&lt;/a&gt; -현재 이벤트 루프 인스턴스와 관련된 EvIo 감시자 객체 생성</target>
        </trans-unit>
        <trans-unit id="1dbe2446761a6d0ff59855dced83ed6becbe721f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.io&quot;&gt;EvLoop::io&lt;/a&gt; &amp;mdash; Create EvIo watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.io&quot;&gt;EvLoop :: io&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvIo 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5900844303311a352d78009ce50effe2f8099af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.loopfork&quot;&gt;EvLoop::loopFork&lt;/a&gt; &amp;mdash; Must be called after a fork</source>
          <target state="translated">&lt;a href=&quot;evloop.loopfork&quot;&gt;EvLoop :: loopFork&lt;/a&gt; &amp;mdash; 포크 후에 호출해야합니다</target>
        </trans-unit>
        <trans-unit id="a799843ac9f683a2a1399ef2a415f705b4c3cd95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.now&quot;&gt;EvLoop::now()&lt;/a&gt; - Returns the current &quot;event loop time&quot;</source>
          <target state="translated">&lt;a href=&quot;evloop.now&quot;&gt;EvLoop :: now ()&lt;/a&gt; -현재 &quot;이벤트 루프 시간&quot;을 반환합니다</target>
        </trans-unit>
        <trans-unit id="2276c4d150bf5b26881ae96cd375ceb9092f82c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.now&quot;&gt;EvLoop::now&lt;/a&gt; &amp;mdash; Returns the current &quot;event loop time&quot;</source>
          <target state="translated">&lt;a href=&quot;evloop.now&quot;&gt;EvLoop :: now&lt;/a&gt; &amp;mdash; 현재 &quot;이벤트 루프 시간&quot;을 반환</target>
        </trans-unit>
        <trans-unit id="98e4c0731942f0dc635f6ee719ef0d2577c35da1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.nowupdate&quot;&gt;EvLoop::nowUpdate&lt;/a&gt; &amp;mdash; Establishes the current time by querying the kernel, updating the time returned by EvLoop::now in the progress</source>
          <target state="translated">&lt;a href=&quot;evloop.nowupdate&quot;&gt;EvLoop :: nowUpdate&lt;/a&gt; &amp;mdash; 진행 상황에서 EvLoop :: now가 반환 한 시간을 업데이트하여 커널을 쿼리하여 현재 시간을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fc543258ad53a3e7d2b91277ed3695ed8b7e751f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.periodic&quot;&gt;EvLoop::periodic&lt;/a&gt; &amp;mdash; Creates EvPeriodic watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.periodic&quot;&gt;EvLoop :: periodic&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvPeriodic 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="60139310b31ce87db6013f88d18ff9d0fd1aaeb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.prepare&quot;&gt;EvLoop::prepare&lt;/a&gt; &amp;mdash; Creates EvPrepare watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.prepare&quot;&gt;EvLoop :: prepare&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvPrepare 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0d16cd7de91340d3d21d2ebf61c6f019cca2cfe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.resume&quot;&gt;EvLoop::resume()&lt;/a&gt; - Resume previously suspended default event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.resume&quot;&gt;EvLoop :: resume ()&lt;/a&gt; -이전에 일시 중단 된 기본 이벤트 루프를 재개</target>
        </trans-unit>
        <trans-unit id="7fe7df742d456a363955cbf1bef067e4a7cfd537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.resume&quot;&gt;EvLoop::resume&lt;/a&gt; &amp;mdash; Resume previously suspended default event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.resume&quot;&gt;EvLoop :: resume&lt;/a&gt; &amp;mdash; 이전에 일시 중단 된 기본 이벤트 루프를 재개</target>
        </trans-unit>
        <trans-unit id="17c123db0ced8460a307b01d955eb182062cfbd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; - Begin checking for events and calling callbacks for the loop</source>
          <target state="translated">&lt;a href=&quot;evloop.run&quot;&gt;EvLoop :: run ()&lt;/a&gt; -이벤트 확인 및 루프에 대한 콜백 호출 시작</target>
        </trans-unit>
        <trans-unit id="4e6a4d3faccac37a989f0af1645bb95d4fba18a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run&lt;/a&gt; &amp;mdash; Begin checking for events and calling callbacks for the loop</source>
          <target state="translated">&lt;a href=&quot;evloop.run&quot;&gt;EvLoop :: run&lt;/a&gt; &amp;mdash; 루프에 대한 이벤트 확인 및 콜백 호출 시작</target>
        </trans-unit>
        <trans-unit id="d3f8ca0c6b896617f81d5b8c2cad3120f967813c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.signal&quot;&gt;EvLoop::signal&lt;/a&gt; &amp;mdash; Creates EvSignal watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.signal&quot;&gt;EvLoop :: signal&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvSignal 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ee0ca1488684eac9a70c2a851389b5b116aaa58b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.stat&quot;&gt;EvLoop::stat&lt;/a&gt; &amp;mdash; Creates EvStat watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.stat&quot;&gt;EvLoop :: stat&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvStat 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e52a7a22586fe53e831734970b046346101b9655" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.stop&quot;&gt;EvLoop::stop()&lt;/a&gt; - Stops the event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.stop&quot;&gt;EvLoop :: stop ()&lt;/a&gt; -이벤트 루프를 중지합니다</target>
        </trans-unit>
        <trans-unit id="16621fea3d263a66c55a4493d43d9a77d3c9690b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.stop&quot;&gt;EvLoop::stop&lt;/a&gt; &amp;mdash; Stops the event loop</source>
          <target state="translated">&lt;a href=&quot;evloop.stop&quot;&gt;EvLoop :: stop&lt;/a&gt; &amp;mdash; 이벤트 루프를 중지합니다</target>
        </trans-unit>
        <trans-unit id="650cf800b2d116f6eacd465758b1a3ee4681682a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.suspend&quot;&gt;EvLoop::suspend()&lt;/a&gt; - Suspend the loop</source>
          <target state="translated">&lt;a href=&quot;evloop.suspend&quot;&gt;EvLoop :: suspend ()&lt;/a&gt; -루프 일시 중단</target>
        </trans-unit>
        <trans-unit id="44d458fb366d4cf7a8c9d75768192e0fd840c817" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.suspend&quot;&gt;EvLoop::suspend()&lt;/a&gt; and &lt;strong&gt;EvLoop::resume()&lt;/strong&gt; methods suspend and resume a loop correspondingly.</source>
          <target state="translated">&lt;a href=&quot;evloop.suspend&quot;&gt;EvLoop :: suspend ()&lt;/a&gt; 및 &lt;strong&gt;EvLoop :: resume ()&lt;/strong&gt; 메서드는 해당 루프를 일시 중단하고 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="22affd17bf9058df666bc3a5e3465ca7f6f4e6d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.suspend&quot;&gt;EvLoop::suspend&lt;/a&gt; &amp;mdash; Suspend the loop</source>
          <target state="translated">&lt;a href=&quot;evloop.suspend&quot;&gt;EvLoop :: suspend&lt;/a&gt; &amp;mdash; 루프를 일시 중단</target>
        </trans-unit>
        <trans-unit id="2d6f68350836a2bfd9cd08c2800d3f6337668a9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.timer&quot;&gt;EvLoop::timer&lt;/a&gt; &amp;mdash; Creates EvTimer watcher object associated with the current event loop instance</source>
          <target state="translated">&lt;a href=&quot;evloop.timer&quot;&gt;EvLoop :: timer&lt;/a&gt; &amp;mdash; 현재 이벤트 루프 인스턴스와 관련된 EvTimer 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5834b943435dfb714b00f3ab627120178ee20576" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evloop.verify&quot;&gt;EvLoop::verify&lt;/a&gt; &amp;mdash; Performs internal consistency checks(for debugging)</source>
          <target state="translated">&lt;a href=&quot;evloop.verify&quot;&gt;EvLoop :: verify&lt;/a&gt; &amp;mdash; 디버깅을 위해 내부 일관성 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ce60b4515f116f2270d0f119f52a3c237db6bf04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evperiodic.again&quot;&gt;EvPeriodic::again&lt;/a&gt; &amp;mdash; Simply stops and restarts the periodic watcher again</source>
          <target state="translated">&lt;a href=&quot;evperiodic.again&quot;&gt;EvPeriodic :: again&lt;/a&gt; &amp;mdash; 정기 감시자를 다시 중지하고 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="95171ecf2b41956a8d3ea13f029f8e010912e5ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evperiodic.at&quot;&gt;EvPeriodic::at&lt;/a&gt; &amp;mdash; Returns the absolute time that this watcher is supposed to trigger next</source>
          <target state="translated">&lt;a href=&quot;evperiodic.at&quot;&gt;EvPeriodic :: at&lt;/a&gt; &amp;mdash;이 감시자가 다음에 트리거해야하는 절대 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f61d4c3ca8749a47f644368254ff68d7141ac0d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evperiodic.construct&quot;&gt;EvPeriodic::__construct()&lt;/a&gt; - Constructs EvPeriodic watcher object</source>
          <target state="translated">&lt;a href=&quot;evperiodic.construct&quot;&gt;EvPeriodic :: __ construct ()&lt;/a&gt; -EvPeriodic 감시자 객체 생성</target>
        </trans-unit>
        <trans-unit id="81290889c342ae2becfd10c10e0a8be7269f9618" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evperiodic.construct&quot;&gt;EvPeriodic::__construct&lt;/a&gt; &amp;mdash; Constructs EvPeriodic watcher object</source>
          <target state="translated">&lt;a href=&quot;evperiodic.construct&quot;&gt;EvPeriodic :: __ construct&lt;/a&gt; &amp;mdash; EvPeriodic 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="946588b9a9455203c7cc7d1ba597e6adf026bbdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evperiodic.createstopped&quot;&gt;EvPeriodic::createStopped()&lt;/a&gt; - Create a stopped EvPeriodic watcher</source>
          <target state="translated">&lt;a href=&quot;evperiodic.createstopped&quot;&gt;EvPeriodic :: createStopped ()&lt;/a&gt; -중지 된 EvPeriodic 감시자를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dd092cbc408aa1bbd12e8258c9c510f98fe65705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evperiodic.createstopped&quot;&gt;EvPeriodic::createStopped&lt;/a&gt; &amp;mdash; Create a stopped EvPeriodic watcher</source>
          <target state="translated">&lt;a href=&quot;evperiodic.createstopped&quot;&gt;EvPeriodic :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvPeriodic 감시자를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1d0d229871607376085ce2b4593af1e94522fd0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evperiodic.set&quot;&gt;EvPeriodic::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="translated">&lt;a href=&quot;evperiodic.set&quot;&gt;EvPeriodic :: set&lt;/a&gt; &amp;mdash; 감시자를 구성합니다</target>
        </trans-unit>
        <trans-unit id="94ef55a2aadf7bc4a829bf9ba45b7dcefc9ac7f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evprepare.construct&quot;&gt;EvPrepare::__construct()&lt;/a&gt; - Constructs EvPrepare watcher object</source>
          <target state="translated">&lt;a href=&quot;evprepare.construct&quot;&gt;EvPrepare :: __ construct ()&lt;/a&gt; -EvPrepare 감시자 객체 생성</target>
        </trans-unit>
        <trans-unit id="34605004e0f6f869bf48347011cd6870797fd881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evprepare.construct&quot;&gt;EvPrepare::__construct&lt;/a&gt; &amp;mdash; Constructs EvPrepare watcher object</source>
          <target state="translated">&lt;a href=&quot;evprepare.construct&quot;&gt;EvPrepare :: __ construct&lt;/a&gt; &amp;mdash; EvPrepare 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="554310e6bcf4481757d39506dc18d9f4adf52f20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evprepare.createstopped&quot;&gt;EvPrepare::createStopped&lt;/a&gt; &amp;mdash; Creates a stopped instance of EvPrepare watcher</source>
          <target state="translated">&lt;a href=&quot;evprepare.createstopped&quot;&gt;EvPrepare :: createStopped&lt;/a&gt; &amp;mdash; EvPrepare 감시자의 중지 된 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dc9ebde4de05018341f63ec9a1b763e4ed8930a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evsignal.construct&quot;&gt;EvSignal::__construct()&lt;/a&gt; - Constructs EvSignal watcher object</source>
          <target state="translated">&lt;a href=&quot;evsignal.construct&quot;&gt;EvSignal :: __ construct ()&lt;/a&gt; -EvSignal 감시자 객체 생성</target>
        </trans-unit>
        <trans-unit id="fc3ecc4bc34f27a9d95d2ab3a06033afd6255f8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evsignal.construct&quot;&gt;EvSignal::__construct&lt;/a&gt; &amp;mdash; Constructs EvSignal watcher object</source>
          <target state="translated">&lt;a href=&quot;evsignal.construct&quot;&gt;EvSignal :: __ construct&lt;/a&gt; &amp;mdash; EvSignal 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="3ae4411ecfba56eab7c63c7ab4e9854b0c4e6a4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evsignal.createstopped&quot;&gt;EvSignal::createStopped()&lt;/a&gt; - Create stopped EvSignal watcher object</source>
          <target state="translated">&lt;a href=&quot;evsignal.createstopped&quot;&gt;EvSignal :: createStopped ()&lt;/a&gt; -중지 된 EvSignal 감시자 객체 만들기</target>
        </trans-unit>
        <trans-unit id="20017d607880ad806d5172a58f8aff594df1f2c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evsignal.createstopped&quot;&gt;EvSignal::createStopped&lt;/a&gt; &amp;mdash; Create stopped EvSignal watcher object</source>
          <target state="translated">&lt;a href=&quot;evsignal.createstopped&quot;&gt;EvSignal :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvSignal 감시자 객체 만들기</target>
        </trans-unit>
        <trans-unit id="f7ad823ed3edddcd3fa9f224afcbd64feb253d2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evsignal.set&quot;&gt;EvSignal::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="translated">&lt;a href=&quot;evsignal.set&quot;&gt;EvSignal :: set&lt;/a&gt; &amp;mdash; 감시자를 구성합니다</target>
        </trans-unit>
        <trans-unit id="e758e85b7d8886e8ab6b774247df0f8c560f2b02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.attr&quot;&gt;EvStat::attr()&lt;/a&gt; - Returns the values most recently detected by Ev</source>
          <target state="translated">&lt;a href=&quot;evstat.attr&quot;&gt;EvStat :: attr ()-Ev에&lt;/a&gt; 의해 가장 최근에 감지 된 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="8d425bb6440b63afa5eaea44d98007761514b478" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.attr&quot;&gt;EvStat::attr&lt;/a&gt; &amp;mdash; Returns the values most recently detected by Ev</source>
          <target state="translated">&lt;a href=&quot;evstat.attr&quot;&gt;EvStat :: attr&lt;/a&gt; &amp;mdash; Ev가 가장 최근에 감지 한 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="f1fe382828cccecbe84b45a2249b49d506d68114" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.construct&quot;&gt;EvStat::__construct()&lt;/a&gt; - Constructs EvStat watcher object</source>
          <target state="translated">&lt;a href=&quot;evstat.construct&quot;&gt;EvStat :: __ construct ()&lt;/a&gt; -EvStat 감시자 객체를 생성</target>
        </trans-unit>
        <trans-unit id="74854196685f0298bd57b49cf76a2ee31b4d9406" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.construct&quot;&gt;EvStat::__construct&lt;/a&gt; &amp;mdash; Constructs EvStat watcher object</source>
          <target state="translated">&lt;a href=&quot;evstat.construct&quot;&gt;EvStat :: __ construct&lt;/a&gt; &amp;mdash; EvStat 감시자 객체를 생성</target>
        </trans-unit>
        <trans-unit id="85aa15dcc123bb26c2907f35891b4b2e1cd18758" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.createstopped&quot;&gt;EvStat::createStopped&lt;/a&gt; &amp;mdash; Create a stopped EvStat watcher object</source>
          <target state="translated">&lt;a href=&quot;evstat.createstopped&quot;&gt;EvStat :: createStopped&lt;/a&gt; &amp;mdash; 중지 된 EvStat 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="26f2fc859f0125fba46797332da317da1bdfdce7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.prev&quot;&gt;EvStat::prev()&lt;/a&gt; - Returns the previous set of values returned by EvStat::attr</source>
          <target state="translated">&lt;a href=&quot;evstat.prev&quot;&gt;EvStat :: prev ()&lt;/a&gt; -EvStat :: attr에 의해 리턴 된 이전 값 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="03f7a419b271f9bd47ac690f5953a57a34103b4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.prev&quot;&gt;EvStat::prev&lt;/a&gt; &amp;mdash; Returns the previous set of values returned by EvStat::attr</source>
          <target state="translated">&lt;a href=&quot;evstat.prev&quot;&gt;EvStat :: prev&lt;/a&gt; &amp;mdash; EvStat :: attr에 의해 반환 된 이전 값 집합을 반환합니다</target>
        </trans-unit>
        <trans-unit id="ae1b0d587541b5970fc1fe3012f2d5f5977c3285" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.set&quot;&gt;EvStat::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="translated">&lt;a href=&quot;evstat.set&quot;&gt;EvStat :: set&lt;/a&gt; &amp;mdash; 감시자를 구성합니다</target>
        </trans-unit>
        <trans-unit id="0adb1a1af9795c17c3327508ec908a4a4a8075f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.stat&quot;&gt;EvStat::stat()&lt;/a&gt; - Initiates the stat call</source>
          <target state="translated">&lt;a href=&quot;evstat.stat&quot;&gt;EvStat :: stat ()&lt;/a&gt; -통계 호출을 시작합니다</target>
        </trans-unit>
        <trans-unit id="d342a1a173e91f5d8e05e2bff2613cc7f44c601f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evstat.stat&quot;&gt;EvStat::stat&lt;/a&gt; &amp;mdash; Initiates the stat call</source>
          <target state="translated">&lt;a href=&quot;evstat.stat&quot;&gt;EvStat :: stat&lt;/a&gt; &amp;mdash; 통계 호출을 시작합니다</target>
        </trans-unit>
        <trans-unit id="708f12c45b60bff4b90967352f8bd65d8ee35e88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evtimer.again&quot;&gt;EvTimer::again()&lt;/a&gt; - Restarts the timer watcher</source>
          <target state="translated">&lt;a href=&quot;evtimer.again&quot;&gt;EvTimer :: again ()&lt;/a&gt; -타이머 감시자를 다시 시작합니다</target>
        </trans-unit>
        <trans-unit id="d8c8deb4fa948850e43c08166d62302fe0faf1f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evtimer.again&quot;&gt;EvTimer::again&lt;/a&gt; &amp;mdash; Restarts the timer watcher</source>
          <target state="translated">&lt;a href=&quot;evtimer.again&quot;&gt;EvTimer :: again&lt;/a&gt; &amp;mdash; 타이머 감시자를 다시 시작합니다</target>
        </trans-unit>
        <trans-unit id="507324fe308bd84db4b4999cac45e8002d43df83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evtimer.construct&quot;&gt;EvTimer::__construct()&lt;/a&gt; - Constructs an EvTimer watcher object</source>
          <target state="translated">&lt;a href=&quot;evtimer.construct&quot;&gt;EvTimer :: __ construct ()&lt;/a&gt; -EvTimer 감시자 객체를 생성</target>
        </trans-unit>
        <trans-unit id="48abdaf758473caf8c51508e0c0343cde1e3b940" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evtimer.construct&quot;&gt;EvTimer::__construct&lt;/a&gt; &amp;mdash; Constructs an EvTimer watcher object</source>
          <target state="translated">&lt;a href=&quot;evtimer.construct&quot;&gt;EvTimer :: __ construct&lt;/a&gt; &amp;mdash; EvTimer 감시자 객체를 구성</target>
        </trans-unit>
        <trans-unit id="b5d968bfd174b929ec4cfa91dfff129653079ed9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evtimer.createstopped&quot;&gt;EvTimer::createStopped()&lt;/a&gt; - Creates EvTimer stopped watcher object</source>
          <target state="translated">&lt;a href=&quot;evtimer.createstopped&quot;&gt;EvTimer :: createStopped ()&lt;/a&gt; -EvTimer 중지 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fa0349eb473f08cfb1ce65514c7bfd9ae601b0fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evtimer.createstopped&quot;&gt;EvTimer::createStopped&lt;/a&gt; &amp;mdash; Creates EvTimer stopped watcher object</source>
          <target state="translated">&lt;a href=&quot;evtimer.createstopped&quot;&gt;EvTimer :: createStopped&lt;/a&gt; &amp;mdash; EvTimer 중지 감시자 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="48006bd5757460b76f482b03729128fdd6626acd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evtimer.set&quot;&gt;EvTimer::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="translated">&lt;a href=&quot;evtimer.set&quot;&gt;EvTimer :: set&lt;/a&gt; &amp;mdash; 감시자를 구성합니다</target>
        </trans-unit>
        <trans-unit id="c9e2762e897d575a14a189fe53fcf119df21b1cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.clear&quot;&gt;EvWatcher::clear&lt;/a&gt; &amp;mdash; Clear watcher pending status</source>
          <target state="translated">&lt;a href=&quot;evwatcher.clear&quot;&gt;EvWatcher :: clear&lt;/a&gt; &amp;mdash; 감시자 보류 상태를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="d341febd6641c2c6304a9008616115ad82f1f3c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.construct&quot;&gt;EvWatcher::__construct&lt;/a&gt; &amp;mdash; Abstract constructor of a watcher object</source>
          <target state="translated">&lt;a href=&quot;evwatcher.construct&quot;&gt;EvWatcher :: __ construct&lt;/a&gt; &amp;mdash; 감시자 객체의 추상 생성자</target>
        </trans-unit>
        <trans-unit id="49052a5e3a3263aaa49fcb6131aad3696b61d49a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.feed&quot;&gt;EvWatcher::feed&lt;/a&gt; &amp;mdash; Feeds the given revents set into the event loop</source>
          <target state="translated">&lt;a href=&quot;evwatcher.feed&quot;&gt;EvWatcher :: feed-&lt;/a&gt; 주어진 revents를 이벤트 루프로 피드</target>
        </trans-unit>
        <trans-unit id="7f62538285366ddafed095d1b21cddfc5c466bb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.getloop&quot;&gt;EvWatcher::getLoop&lt;/a&gt; &amp;mdash; Returns the loop responsible for the watcher</source>
          <target state="translated">&lt;a href=&quot;evwatcher.getloop&quot;&gt;EvWatcher :: getLoop&lt;/a&gt; &amp;mdash; 감시자를 담당하는 루프를 반환</target>
        </trans-unit>
        <trans-unit id="a79884a81e85cc407268dae2d10706b4ce1fb46a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.invoke&quot;&gt;EvWatcher::invoke&lt;/a&gt; &amp;mdash; Invokes the watcher callback with the given received events bit mask</source>
          <target state="translated">&lt;a href=&quot;evwatcher.invoke&quot;&gt;EvWatcher :: invoke&lt;/a&gt; &amp;mdash; 주어진 수신 된 이벤트 비트 마스크를 사용하여 감시자 콜백을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="6902c5daa192e94ae126ba80cd923ba307f4af5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive&lt;/a&gt; &amp;mdash; Configures whether to keep the loop from returning</source>
          <target state="translated">&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive&lt;/a&gt; &amp;mdash; 루프가 반환되지 않도록 구성합니다</target>
        </trans-unit>
        <trans-unit id="e0474b64a9468339b67c506b925222d0f25633f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.setcallback&quot;&gt;EvWatcher::setCallback&lt;/a&gt; &amp;mdash; Sets new callback for the watcher</source>
          <target state="translated">&lt;a href=&quot;evwatcher.setcallback&quot;&gt;EvWatcher :: setCallback&lt;/a&gt; &amp;mdash; 감시자의 새로운 콜백을 설정합니다</target>
        </trans-unit>
        <trans-unit id="a57cc791e7bf8011f3728ab6830990b658022fab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.start&quot;&gt;EvWatcher::start()&lt;/a&gt; - Starts the watcher</source>
          <target state="translated">&lt;a href=&quot;evwatcher.start&quot;&gt;EvWatcher :: start ()&lt;/a&gt; -감시자를 시작합니다</target>
        </trans-unit>
        <trans-unit id="d0278e1a3fabf1c0d1ab5a01d5e90a87910fe2cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.start&quot;&gt;EvWatcher::start&lt;/a&gt; &amp;mdash; Starts the watcher</source>
          <target state="translated">&lt;a href=&quot;evwatcher.start&quot;&gt;EvWatcher :: start&lt;/a&gt; &amp;mdash; 감시자를 시작합니다</target>
        </trans-unit>
        <trans-unit id="807e3fe245379c4aa0ca20664e19ad04c78ac48c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.stop&quot;&gt;EvWatcher::stop()&lt;/a&gt; - Stops the watcher</source>
          <target state="translated">&lt;a href=&quot;evwatcher.stop&quot;&gt;EvWatcher :: stop ()&lt;/a&gt; -감시자를 중지합니다</target>
        </trans-unit>
        <trans-unit id="f3a2e8957d1394c352b5eab65b2e5515f7e47b96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evwatcher.stop&quot;&gt;EvWatcher::stop&lt;/a&gt; &amp;mdash; Stops the watcher</source>
          <target state="translated">&lt;a href=&quot;evwatcher.stop&quot;&gt;EvWatcher :: stop&lt;/a&gt; &amp;mdash; 감시자를 중지합니다</target>
        </trans-unit>
        <trans-unit id="bb479c1c6ea16d2dcef9ca94592624f72527ca35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.clone&quot;&gt;Exception::__clone&lt;/a&gt; &amp;mdash; Clone the exception</source>
          <target state="translated">&lt;a href=&quot;exception.clone&quot;&gt;Exception :: __ clone&lt;/a&gt; &amp;mdash; 예외 복제</target>
        </trans-unit>
        <trans-unit id="657a3f6d818e2fdf06ca0b2269b924ace793f219" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.construct&quot;&gt;Exception::__construct&lt;/a&gt; &amp;mdash; Construct the exception</source>
          <target state="translated">&lt;a href=&quot;exception.construct&quot;&gt;Exception :: __ construct&lt;/a&gt; &amp;mdash; 예외를 구성</target>
        </trans-unit>
        <trans-unit id="7970405c44409cde3b695d825264bd0b23f478df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getcode&quot;&gt;Exception::getCode()&lt;/a&gt; - Gets the Exception code</source>
          <target state="translated">&lt;a href=&quot;exception.getcode&quot;&gt;예외 :: getCode ()&lt;/a&gt; -예외 코드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="75d73e85f51d75ece083445a992179f33e4b9275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getcode&quot;&gt;Exception::getCode&lt;/a&gt; &amp;mdash; Gets the Exception code</source>
          <target state="translated">&lt;a href=&quot;exception.getcode&quot;&gt;Exception :: getCode&lt;/a&gt; &amp;mdash; 예외 코드를 얻는다</target>
        </trans-unit>
        <trans-unit id="a90290e3dd5b11030f63a77926288df60cb6bef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getfile&quot;&gt;Exception::getFile()&lt;/a&gt; - Gets the file in which the exception was created</source>
          <target state="translated">&lt;a href=&quot;exception.getfile&quot;&gt;예외 :: getFile ()&lt;/a&gt; -예외가 작성된 파일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e8ac5a88e3a29fe115b0dde02a4d77c647592b7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getfile&quot;&gt;Exception::getFile&lt;/a&gt; &amp;mdash; Gets the file in which the exception was created</source>
          <target state="translated">&lt;a href=&quot;exception.getfile&quot;&gt;Exception :: getFile&lt;/a&gt; &amp;mdash; 예외가 작성된 파일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="52ec3a0312c9b06a076d7faaf33a2c0da7059c36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getline&quot;&gt;Exception::getLine()&lt;/a&gt; - Gets the line in which the exception was created</source>
          <target state="translated">&lt;a href=&quot;exception.getline&quot;&gt;예외 :: getLine ()&lt;/a&gt; -예외가 생성 된 줄을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e5dd1413949b20daaa2e4c8fdfd9e7eb9de2d619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getline&quot;&gt;Exception::getLine&lt;/a&gt; &amp;mdash; Gets the line in which the exception was created</source>
          <target state="translated">&lt;a href=&quot;exception.getline&quot;&gt;Exception :: getLine&lt;/a&gt; &amp;mdash; 예외가 만들어진 줄을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="64e9f9fea4fbe38d9c0bdf0b1af44b00ac66bfed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getmessage&quot;&gt;Exception::getMessage()&lt;/a&gt; - Gets the Exception message</source>
          <target state="translated">&lt;a href=&quot;exception.getmessage&quot;&gt;예외 :: getMessage ()&lt;/a&gt; -예외 메시지를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="01a12baef3efbcf611638548ff7d10d72aac2eec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getmessage&quot;&gt;Exception::getMessage&lt;/a&gt; &amp;mdash; Gets the Exception message</source>
          <target state="translated">&lt;a href=&quot;exception.getmessage&quot;&gt;Exception :: getMessage&lt;/a&gt; &amp;mdash; 예외 메시지를 얻는다</target>
        </trans-unit>
        <trans-unit id="3bf39fad60d8db0e212930256108a98db7ce71bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getprevious&quot;&gt;Exception::getPrevious()&lt;/a&gt; - Returns previous Exception</source>
          <target state="translated">&lt;a href=&quot;exception.getprevious&quot;&gt;예외 :: getPrevious ()&lt;/a&gt; -이전 예외를 반환</target>
        </trans-unit>
        <trans-unit id="37245c2b6283f2824d45f813a0191c139b7478dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.getprevious&quot;&gt;Exception::getPrevious&lt;/a&gt; &amp;mdash; Returns previous Exception</source>
          <target state="translated">&lt;a href=&quot;exception.getprevious&quot;&gt;Exception :: getPrevious&lt;/a&gt; &amp;mdash; 이전 예외를 반환</target>
        </trans-unit>
        <trans-unit id="666da73da7f6ca5c0eb16d2e68509ff5ab8165d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.gettrace&quot;&gt;Exception::getTrace()&lt;/a&gt; - Gets the stack trace</source>
          <target state="translated">&lt;a href=&quot;exception.gettrace&quot;&gt;예외 :: getTrace ()&lt;/a&gt; -스택 추적을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0645d13ca79d6cdd2708f82553517a6ac88bffc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.gettrace&quot;&gt;Exception::getTrace&lt;/a&gt; &amp;mdash; Gets the stack trace</source>
          <target state="translated">&lt;a href=&quot;exception.gettrace&quot;&gt;예외 :: getTrace&lt;/a&gt; &amp;mdash; 스택 추적을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c2d1c1fc465b7e21dd02c6b4f6fbe75167241cb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.gettraceasstring&quot;&gt;Exception::getTraceAsString()&lt;/a&gt; - Gets the stack trace as a string</source>
          <target state="translated">&lt;a href=&quot;exception.gettraceasstring&quot;&gt;예외 :: getTraceAsString ()&lt;/a&gt; -스택 추적을 문자열로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7fde022f11450768e6748441a701f99a19433f6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.gettraceasstring&quot;&gt;Exception::getTraceAsString&lt;/a&gt; &amp;mdash; Gets the stack trace as a string</source>
          <target state="translated">&lt;a href=&quot;exception.gettraceasstring&quot;&gt;Exception :: getTraceAsString&lt;/a&gt; &amp;mdash; 스택 추적을 문자열로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="faf08f437b7bfb168215c3913325a914bb03604e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.tostring&quot;&gt;Exception::__toString()&lt;/a&gt; - String representation of the exception</source>
          <target state="translated">&lt;a href=&quot;exception.tostring&quot;&gt;예외 :: __ toString ()&lt;/a&gt; -예외의 문자열 표현</target>
        </trans-unit>
        <trans-unit id="ecae4b8cc8e25aad485012144e82311ba9150e6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception.tostring&quot;&gt;Exception::__toString&lt;/a&gt; &amp;mdash; String representation of the exception</source>
          <target state="translated">&lt;a href=&quot;exception.tostring&quot;&gt;Exception :: __ toString&lt;/a&gt; &amp;mdash; 예외의 문자열 표현</target>
        </trans-unit>
        <trans-unit id="98fd869a0cfcc78aec7e19bd26af1261e2c015c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.construct&quot;&gt;FilesystemIterator::__construct()&lt;/a&gt; - Constructs a new filesystem iterator</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.construct&quot;&gt;FilesystemIterator :: __ construct ()&lt;/a&gt; -새로운 파일 시스템 반복자를 구성</target>
        </trans-unit>
        <trans-unit id="9a8efa4c6f8c1955cf3b3e68340f67c20f06b29d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.construct&quot;&gt;FilesystemIterator::__construct&lt;/a&gt; &amp;mdash; Constructs a new filesystem iterator</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.construct&quot;&gt;FilesystemIterator :: __ construct&lt;/a&gt; &amp;mdash; 새로운 파일 시스템 이터레이터를 구성</target>
        </trans-unit>
        <trans-unit id="deb5927b1846ac3b85e9062c2eb1d8b0aa223e48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.current&quot;&gt;FilesystemIterator::current&lt;/a&gt; &amp;mdash; The current file</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.current&quot;&gt;FilesystemIterator :: current&lt;/a&gt; &amp;mdash; 현재 파일</target>
        </trans-unit>
        <trans-unit id="31ce94d826eb90543818117e85e0ca0d2b26df0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.getflags&quot;&gt;FilesystemIterator::getFlags()&lt;/a&gt; - Get the handling flags</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.getflags&quot;&gt;FilesystemIterator :: getFlags ()&lt;/a&gt; -처리 플래그를 얻는다</target>
        </trans-unit>
        <trans-unit id="6bfc08016e7c027400fcd41c9bc73ea9fd8f556e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.getflags&quot;&gt;FilesystemIterator::getFlags&lt;/a&gt; &amp;mdash; Get the handling flags</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.getflags&quot;&gt;FilesystemIterator :: getFlags&lt;/a&gt; &amp;mdash; 처리 ​​플래그를 얻는다</target>
        </trans-unit>
        <trans-unit id="162f0fdc14232fef396997988d3a2e1e4a1a9d46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.key&quot;&gt;FilesystemIterator::key&lt;/a&gt; &amp;mdash; Retrieve the key for the current file</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.key&quot;&gt;FilesystemIterator :: key&lt;/a&gt; &amp;mdash; 현재 파일의 키를 검색</target>
        </trans-unit>
        <trans-unit id="4d03d44654b02343812e8c72d958edabd5fc69a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.next&quot;&gt;FilesystemIterator::next&lt;/a&gt; &amp;mdash; Move to the next file</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.next&quot;&gt;FilesystemIterator :: next&lt;/a&gt; &amp;mdash; 다음 파일로 이동</target>
        </trans-unit>
        <trans-unit id="ee8f8e47790d03e2f28cb7e06b3bf0312609c487" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.rewind&quot;&gt;FilesystemIterator::rewind&lt;/a&gt; &amp;mdash; Rewinds back to the beginning</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.rewind&quot;&gt;FilesystemIterator :: rewind&lt;/a&gt; &amp;mdash; 처음으로 되감기</target>
        </trans-unit>
        <trans-unit id="e4157d74c96790f309fa131fe7398b1b248ed9d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.setflags&quot;&gt;FilesystemIterator::setFlags()&lt;/a&gt; - Sets handling flags</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.setflags&quot;&gt;FilesystemIterator :: setFlags ()&lt;/a&gt; -처리 플래그를 설정합니다</target>
        </trans-unit>
        <trans-unit id="aefb97d2881ec0a54557595a54a3c826923059b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filesystemiterator.setflags&quot;&gt;FilesystemIterator::setFlags&lt;/a&gt; &amp;mdash; Sets handling flags</source>
          <target state="translated">&lt;a href=&quot;filesystemiterator.setflags&quot;&gt;FilesystemIterator :: setFlags&lt;/a&gt; &amp;mdash; 처리 ​​플래그를 설정합니다</target>
        </trans-unit>
        <trans-unit id="fd5b996f7f57f1cfdb1f63b16ceeff3f84bda45a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.accept&quot;&gt;FilterIterator::accept()&lt;/a&gt; - Check whether the current element of the iterator is acceptable</source>
          <target state="translated">&lt;a href=&quot;filteriterator.accept&quot;&gt;FilterIterator :: accept ()&lt;/a&gt; -반복자의 현재 요소가 허용 가능한지 확인</target>
        </trans-unit>
        <trans-unit id="f28569218f20846c6d0b338b34bf40bda2599065" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.accept&quot;&gt;FilterIterator::accept&lt;/a&gt; &amp;mdash; Check whether the current element of the iterator is acceptable</source>
          <target state="translated">&lt;a href=&quot;filteriterator.accept&quot;&gt;FilterIterator :: accept&lt;/a&gt; &amp;mdash; 반복자의 현재 요소가 허용되는지 확인</target>
        </trans-unit>
        <trans-unit id="d58d48d39f7b3fcd1daf10b89fab90d791297a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.construct&quot;&gt;FilterIterator::__construct&lt;/a&gt; &amp;mdash; Construct a filterIterator</source>
          <target state="translated">&lt;a href=&quot;filteriterator.construct&quot;&gt;FilterIterator :: __ construct&lt;/a&gt; &amp;mdash; filterIterator를 구성한다</target>
        </trans-unit>
        <trans-unit id="22050fe1e2e358290905b30d8ba012895a84dcbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.current&quot;&gt;FilterIterator::current()&lt;/a&gt; - Get the current element value</source>
          <target state="translated">&lt;a href=&quot;filteriterator.current&quot;&gt;FilterIterator :: current ()&lt;/a&gt; -현재 요소 값을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="ccbf434842cacc8fbf74ace083cf701bce211f79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.current&quot;&gt;FilterIterator::current&lt;/a&gt; &amp;mdash; Get the current element value</source>
          <target state="translated">&lt;a href=&quot;filteriterator.current&quot;&gt;FilterIterator :: current&lt;/a&gt; &amp;mdash; 현재 요소 값을 얻는다</target>
        </trans-unit>
        <trans-unit id="e6642a9e36b65fd11f6dfd7d6502ecf695e9eeae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.getinneriterator&quot;&gt;FilterIterator::getInnerIterator&lt;/a&gt; &amp;mdash; Get the inner iterator</source>
          <target state="translated">&lt;a href=&quot;filteriterator.getinneriterator&quot;&gt;FilterIterator :: getInnerIterator&lt;/a&gt; &amp;mdash; 내부 이터레이터를 얻는다</target>
        </trans-unit>
        <trans-unit id="3ee0785dc7949320c34fbcffb4732338f018edcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.key&quot;&gt;FilterIterator::key()&lt;/a&gt; - Get the current key</source>
          <target state="translated">&lt;a href=&quot;filteriterator.key&quot;&gt;FilterIterator :: key ()&lt;/a&gt; -현재 키 가져 오기</target>
        </trans-unit>
        <trans-unit id="31c0527124065fbdefa1c18840eb53c3baa12413" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.key&quot;&gt;FilterIterator::key&lt;/a&gt; &amp;mdash; Get the current key</source>
          <target state="translated">&lt;a href=&quot;filteriterator.key&quot;&gt;FilterIterator :: key&lt;/a&gt; &amp;mdash; 현재 키를 얻는다</target>
        </trans-unit>
        <trans-unit id="b2042393c8e3c0f77a9bf8762127fba044c5e6bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.next&quot;&gt;FilterIterator::next()&lt;/a&gt; - Move the iterator forward</source>
          <target state="translated">&lt;a href=&quot;filteriterator.next&quot;&gt;FilterIterator :: next ()&lt;/a&gt; -반복자를 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="b76a3cbcb5ddf3d49d9b69fda220383f47032c47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.next&quot;&gt;FilterIterator::next&lt;/a&gt; &amp;mdash; Move the iterator forward</source>
          <target state="translated">&lt;a href=&quot;filteriterator.next&quot;&gt;FilterIterator :: next&lt;/a&gt; &amp;mdash; 반복자를 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="6285f0616dbe5713e6d9e97f065b7edbf30e7084" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.rewind&quot;&gt;FilterIterator::rewind&lt;/a&gt; &amp;mdash; Rewind the iterator</source>
          <target state="translated">&lt;a href=&quot;filteriterator.rewind&quot;&gt;FilterIterator :: rewind&lt;/a&gt; &amp;mdash; 반복자를 되감습니다.</target>
        </trans-unit>
        <trans-unit id="14393a0229f4a26257d77d6b591f7a477255cf40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;filteriterator.valid&quot;&gt;FilterIterator::valid&lt;/a&gt; &amp;mdash; Check whether the current element is valid</source>
          <target state="translated">&lt;a href=&quot;filteriterator.valid&quot;&gt;FilterIterator :: valid&lt;/a&gt; &amp;mdash; 현재 요소가 유효한지 확인</target>
        </trans-unit>
        <trans-unit id="c1bae1be69d18d383e9e1ea180a733b992adb65a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;finfo.buffer&quot;&gt;finfo::buffer&lt;/a&gt; &amp;mdash; Alias of finfo_buffer()</source>
          <target state="translated">&lt;a href=&quot;finfo.buffer&quot;&gt;finfo :: buffer&lt;/a&gt; &amp;mdash; finfo_buffer ()의 별명</target>
        </trans-unit>
        <trans-unit id="1df5a6243c37def7f4a68a4e18ecff8ef7f8070d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;finfo.buffer&quot;&gt;finfo_buffer()&lt;/a&gt; - Alias of finfo_buffer()</source>
          <target state="translated">&lt;a href=&quot;finfo.buffer&quot;&gt;finfo_buffer ()-finfo_buffer ()의&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="9eaf059d1a31d84e04893dcc5a92109409a56a91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;finfo.construct&quot;&gt;finfo::__construct&lt;/a&gt; &amp;mdash; Alias of finfo_open</source>
          <target state="translated">&lt;a href=&quot;finfo.construct&quot;&gt;finfo :: __ construct&lt;/a&gt; &amp;mdash; finfo_open의 별명</target>
        </trans-unit>
        <trans-unit id="8a4497000cd7c6ee82632ec295b4db7e16ed3816" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;finfo.file&quot;&gt;finfo::file&lt;/a&gt; &amp;mdash; Alias of finfo_file()</source>
          <target state="translated">&lt;a href=&quot;finfo.file&quot;&gt;finfo :: file&lt;/a&gt; &amp;mdash; finfo_file ()의 별칭</target>
        </trans-unit>
        <trans-unit id="a8d30b6f9c94774cc67dd52dabd8f5c4d2b1a30e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;finfo.file&quot;&gt;finfo_file()&lt;/a&gt; - Alias of finfo_file()</source>
          <target state="translated">&lt;a href=&quot;finfo.file&quot;&gt;finfo_file ()-finfo_file ()의&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="5af483e0c8c155a434c3910c605640637f39de0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;finfo.set-flags&quot;&gt;finfo::set_flags&lt;/a&gt; &amp;mdash; Alias of finfo_set_flags()</source>
          <target state="translated">&lt;a href=&quot;finfo.set-flags&quot;&gt;finfo :: set_flags&lt;/a&gt; &amp;mdash; finfo_set_flags ()의 별칭</target>
        </trans-unit>
        <trans-unit id="3c544aedf761c16bd7f2c5498972d2b378fa6694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.abs&quot;&gt;abs()&lt;/a&gt; - Absolute value</source>
          <target state="translated">&lt;a href=&quot;function.abs&quot;&gt;abs ()&lt;/a&gt; -절대 값</target>
        </trans-unit>
        <trans-unit id="dc8911769cc2aea7073224d5b30ff85d9712ac92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.acos&quot;&gt;acos()&lt;/a&gt; - Arc cosine</source>
          <target state="translated">&lt;a href=&quot;function.acos&quot;&gt;acos ()&lt;/a&gt; -아크 코사인</target>
        </trans-unit>
        <trans-unit id="cb1c96a9165b508e8f5e4778e4411af27babfcad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.acosh&quot;&gt;acosh()&lt;/a&gt; - Inverse hyperbolic cosine</source>
          <target state="translated">&lt;a href=&quot;function.acosh&quot;&gt;acosh ()&lt;/a&gt; -역 쌍곡 코사인</target>
        </trans-unit>
        <trans-unit id="2b2f739bce10692ab2af3d7ce1e4af91af44069a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.addcslashes&quot;&gt;addcslashes()&lt;/a&gt; - Quote string with slashes in a C style</source>
          <target state="translated">&lt;a href=&quot;function.addcslashes&quot;&gt;addcslashes ()&lt;/a&gt; -C 스타일에서 슬래시가있는 인용 문자열</target>
        </trans-unit>
        <trans-unit id="5021103939ddbebf6babb3cb05cf34a31c3141d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.addslashes&quot;&gt;addslashes()&lt;/a&gt; - Quote string with slashes</source>
          <target state="translated">&lt;a href=&quot;function.addslashes&quot;&gt;addslashes ()&lt;/a&gt; -슬래시가있는 인용 문자열</target>
        </trans-unit>
        <trans-unit id="158f63aa81564946adaafc085bec937b6bfd8744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.addslashes&quot;&gt;addslashes()&lt;/a&gt; should &lt;em&gt;NOT&lt;/em&gt; be used to quote your strings for SQLite queries; it will lead to strange results when retrieving your data.</source>
          <target state="translated">&lt;a href=&quot;function.addslashes&quot;&gt;addslashes ()는&lt;/a&gt; 해야 &lt;em&gt;하지&lt;/em&gt; SQLite는 쿼리에 대한 문자열을 인용하는 데 사용; 데이터를 검색 할 때 이상한 결과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="38b03970049812274e13120fb23e999192a18e65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apache-getenv&quot;&gt;apache_getenv()&lt;/a&gt; - Get an Apache subprocess_env variable</source>
          <target state="translated">&lt;a href=&quot;function.apache-getenv&quot;&gt;apache_getenv ()-Apache&lt;/a&gt; subprocess_env 변수 가져 오기</target>
        </trans-unit>
        <trans-unit id="1d5b7a50d10165f3640a2e5cdc475c50b35db056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apache-note&quot;&gt;apache_note()&lt;/a&gt; - Get and set apache request notes</source>
          <target state="translated">&lt;a href=&quot;function.apache-note&quot;&gt;apache_note ()&lt;/a&gt; -아파치 요청 노트 가져 오기 및 설정</target>
        </trans-unit>
        <trans-unit id="8c34ec29f54ec6f006e23e0077f01be1892b9f63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apache-request-headers&quot;&gt;apache_request_headers()&lt;/a&gt; - Fetch all HTTP request headers</source>
          <target state="translated">&lt;a href=&quot;function.apache-request-headers&quot;&gt;apache_request_headers ()&lt;/a&gt; -모든 HTTP 요청 헤더를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="07fd51a7aef3feb733aba436339054535f16bc17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apache-response-headers&quot;&gt;apache_response_headers()&lt;/a&gt; - Fetch all HTTP response headers</source>
          <target state="translated">&lt;a href=&quot;function.apache-response-headers&quot;&gt;apache_response_headers ()&lt;/a&gt; -모든 HTTP 응답 헤더를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="e3ba996b2506231f213ad2e5a379c48c817bd062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apache-setenv&quot;&gt;apache_setenv()&lt;/a&gt; - Set an Apache subprocess_env variable</source>
          <target state="translated">&lt;a href=&quot;function.apache-setenv&quot;&gt;apache_setenv ()-Apache&lt;/a&gt; subprocess_env 변수 설정</target>
        </trans-unit>
        <trans-unit id="78b5cda91d82e6a38c541ef3346a99c7abf9dab2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-add&quot;&gt;apc_add()&lt;/a&gt; - Cache a new variable in the data store</source>
          <target state="translated">&lt;a href=&quot;function.apc-add&quot;&gt;apc_add ()&lt;/a&gt; -데이터 저장소에 새 변수를 캐시</target>
        </trans-unit>
        <trans-unit id="feb20161449a004a0cee0c82f931fb20ea9ccced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-bin-dump&quot;&gt;apc_bin_dump()&lt;/a&gt; - Get a binary dump of the given files and user variables</source>
          <target state="translated">&lt;a href=&quot;function.apc-bin-dump&quot;&gt;apc_bin_dump ()&lt;/a&gt; -주어진 파일과 사용자 변수의 이진 덤프를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="2495db43d8c1c73bd0da262ab042af328e35f9f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-bin-dumpfile&quot;&gt;apc_bin_dumpfile()&lt;/a&gt; - Output a binary dump of cached files and user variables to a file</source>
          <target state="translated">&lt;a href=&quot;function.apc-bin-dumpfile&quot;&gt;apc_bin_dumpfile ()&lt;/a&gt; -캐시 된 파일 및 사용자 변수의 이진 덤프를 파일로 출력</target>
        </trans-unit>
        <trans-unit id="e157d3e99c0f019cf4d4626a693fc437d003ac2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-bin-load&quot;&gt;apc_bin_load()&lt;/a&gt; - Load a binary dump into the APC file/user cache</source>
          <target state="translated">&lt;a href=&quot;function.apc-bin-load&quot;&gt;apc_bin_load ()&lt;/a&gt; -바이너리 덤프를 APC 파일 / 사용자 캐시에로드</target>
        </trans-unit>
        <trans-unit id="e61d661ae4da38d796634237c8d6b1b2ee65ecbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-bin-loadfile&quot;&gt;apc_bin_loadfile()&lt;/a&gt; - Load a binary dump from a file into the APC file/user cache</source>
          <target state="translated">&lt;a href=&quot;function.apc-bin-loadfile&quot;&gt;apc_bin_loadfile ()&lt;/a&gt; -파일에서 APC 파일 / 사용자 캐시로 바이너리 덤프로드</target>
        </trans-unit>
        <trans-unit id="a9b11e086197272e898142c05040f34885010ac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-cache-info&quot;&gt;apc_cache_info()&lt;/a&gt; - Retrieves cached information from APC's data store</source>
          <target state="translated">&lt;a href=&quot;function.apc-cache-info&quot;&gt;apc_cache_info ()&lt;/a&gt; -APC의 데이터 저장소에서 캐시 된 정보를 검색합니다</target>
        </trans-unit>
        <trans-unit id="58d9e43ae6a2645e5202e4c9f5974b858e6d92d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-clear-cache&quot;&gt;apc_clear_cache()&lt;/a&gt; - Clears the APC cache</source>
          <target state="translated">&lt;a href=&quot;function.apc-clear-cache&quot;&gt;apc_clear_cache ()&lt;/a&gt; -APC 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="25a553ce118d8c86aa1ebd3fe684189dee2a2921" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-dec&quot;&gt;apc_dec()&lt;/a&gt; - Decrease a stored number</source>
          <target state="translated">&lt;a href=&quot;function.apc-dec&quot;&gt;apc_dec ()&lt;/a&gt; -저장된 숫자를 줄입니다</target>
        </trans-unit>
        <trans-unit id="f26c477189f83145bbbde494c6bbdef2211b9069" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-define-constants&quot;&gt;apc_define_constants()&lt;/a&gt; - Defines a set of constants for retrieval and mass-definition</source>
          <target state="translated">&lt;a href=&quot;function.apc-define-constants&quot;&gt;apc_define_constants ()&lt;/a&gt; -검색 및 대량 정의를위한 상수 세트를 정의합니다</target>
        </trans-unit>
        <trans-unit id="9caf1828055be06b78618716025039205dc79c90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-delete&quot;&gt;apc_delete()&lt;/a&gt; - Removes a stored variable from the cache</source>
          <target state="translated">&lt;a href=&quot;function.apc-delete&quot;&gt;apc_delete ()&lt;/a&gt; -캐시에서 저장된 변수를 제거합니다</target>
        </trans-unit>
        <trans-unit id="b8fb522184951e76f28ccbabc6de82d80d164b20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-exists&quot;&gt;apc_exists()&lt;/a&gt; - Checks if APC key exists</source>
          <target state="translated">&lt;a href=&quot;function.apc-exists&quot;&gt;apc_exists ()&lt;/a&gt; -APC 키가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="4332f2cd08759938497082b836bd7cbb348c2914" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-fetch&quot;&gt;apc_fetch()&lt;/a&gt; - Fetch a stored variable from the cache</source>
          <target state="translated">&lt;a href=&quot;function.apc-fetch&quot;&gt;apc_fetch ()&lt;/a&gt; -캐시에서 저장된 변수를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="9cae41a1a90a2aeb3361f39d33ecddd129bf810b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-inc&quot;&gt;apc_inc()&lt;/a&gt; - Increase a stored number</source>
          <target state="translated">&lt;a href=&quot;function.apc-inc&quot;&gt;apc_inc ()&lt;/a&gt; -저장된 숫자를 증가시킵니다</target>
        </trans-unit>
        <trans-unit id="b147a3d446957ec93d948f59b649c7290b16c2e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-load-constants&quot;&gt;apc_load_constants()&lt;/a&gt; - Loads a set of constants from the cache</source>
          <target state="translated">&lt;a href=&quot;function.apc-load-constants&quot;&gt;apc_load_constants ()&lt;/a&gt; -캐시에서 상수 세트를로드합니다</target>
        </trans-unit>
        <trans-unit id="bab41eb4d33a75c68ba3d01d59842f429f51aecd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apc-store&quot;&gt;apc_store()&lt;/a&gt; - Cache a variable in the data store</source>
          <target state="translated">&lt;a href=&quot;function.apc-store&quot;&gt;apc_store ()&lt;/a&gt; -데이터 저장소에 변수 캐시</target>
        </trans-unit>
        <trans-unit id="3c9cda33ec6c5bbd134a0cba6613cd14a236b587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-add&quot;&gt;apcu_add()&lt;/a&gt; - Cache a new variable in the data store</source>
          <target state="translated">&lt;a href=&quot;function.apcu-add&quot;&gt;apcu_add ()&lt;/a&gt; -데이터 저장소에 새 변수를 캐시</target>
        </trans-unit>
        <trans-unit id="1246e02a93798815f9f72fcf00df9e22c7e64751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-cache-info&quot;&gt;apcu_cache_info()&lt;/a&gt; - Retrieves cached information from APCu's data store</source>
          <target state="translated">&lt;a href=&quot;function.apcu-cache-info&quot;&gt;apcu_cache_info ()&lt;/a&gt; -APCu의 데이터 저장소에서 캐시 된 정보를 검색합니다</target>
        </trans-unit>
        <trans-unit id="21f8bb473e1890d787da213fc7d8b4b7cb1499bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-clear-cache&quot;&gt;apcu_clear_cache()&lt;/a&gt; - Clears the APCu cache</source>
          <target state="translated">&lt;a href=&quot;function.apcu-clear-cache&quot;&gt;apcu_clear_cache ()&lt;/a&gt; -APCu 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="6762cc46940756f32478b897303054f8bcb1e964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-dec&quot;&gt;apcu_dec()&lt;/a&gt; - Decrease a stored number</source>
          <target state="translated">&lt;a href=&quot;function.apcu-dec&quot;&gt;apcu_dec ()&lt;/a&gt; -저장된 숫자를 줄입니다</target>
        </trans-unit>
        <trans-unit id="da0da47751cf3fd098676682395c131a947d84ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-delete&quot;&gt;apcu_delete()&lt;/a&gt; - Removes a stored variable from the cache</source>
          <target state="translated">&lt;a href=&quot;function.apcu-delete&quot;&gt;apcu_delete ()&lt;/a&gt; -캐시에서 저장된 변수를 제거</target>
        </trans-unit>
        <trans-unit id="9992d2f1fc24a66f18923938d174e44097909240" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-exists&quot;&gt;apcu_exists()&lt;/a&gt; - Checks if entry exists</source>
          <target state="translated">&lt;a href=&quot;function.apcu-exists&quot;&gt;apcu_exists ()&lt;/a&gt; -항목이 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="384bdcfff07077bf3c82003135342c689d58821f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-fetch&quot;&gt;apcu_fetch()&lt;/a&gt; - Fetch a stored variable from the cache</source>
          <target state="translated">&lt;a href=&quot;function.apcu-fetch&quot;&gt;apcu_fetch ()&lt;/a&gt; -캐시에서 저장된 변수를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="9c811ed270833fa4af75725bc496c711357b4acf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-inc&quot;&gt;apcu_inc()&lt;/a&gt; - Increase a stored number</source>
          <target state="translated">&lt;a href=&quot;function.apcu-inc&quot;&gt;apcu_inc ()&lt;/a&gt; -저장된 숫자를 증가시킵니다</target>
        </trans-unit>
        <trans-unit id="b5172c90489f76c9ad2c2d12bbd13c87ccb2df28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.apcu-store&quot;&gt;apcu_store()&lt;/a&gt; - Cache a variable in the data store</source>
          <target state="translated">&lt;a href=&quot;function.apcu-store&quot;&gt;apcu_store ()&lt;/a&gt; -데이터 저장소에 변수 캐시</target>
        </trans-unit>
        <trans-unit id="27beaed191af250db4994bdb6aa4798670221bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array&quot;&gt;array()&lt;/a&gt; - Create an array</source>
          <target state="translated">&lt;a href=&quot;function.array&quot;&gt;array ()&lt;/a&gt; -배열 만들기</target>
        </trans-unit>
        <trans-unit id="92526524a579274da4dda1d02586a6df7175b810" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-chunk&quot;&gt;array_chunk()&lt;/a&gt; - Split an array into chunks</source>
          <target state="translated">&lt;a href=&quot;function.array-chunk&quot;&gt;array_chunk ()&lt;/a&gt; -배열을 청크로 나눕니다</target>
        </trans-unit>
        <trans-unit id="3a391a0c9ca9ed214b47f7dea862ae5a964f9b77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-combine&quot;&gt;array_combine()&lt;/a&gt; - Creates an array by using one array for keys and another for its values</source>
          <target state="translated">&lt;a href=&quot;function.array-combine&quot;&gt;array_combine ()&lt;/a&gt; -키에 하나의 배열을 사용하고 값에 다른 배열을 사용하여 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c0a9a772f63304816babcf80977ab8c452e26b15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-count-values&quot;&gt;array_count_values()&lt;/a&gt; - Counts all the values of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-count-values&quot;&gt;array_count_values ​​()&lt;/a&gt; -배열의 모든 값을 센다</target>
        </trans-unit>
        <trans-unit id="f24a07d476cd5d0328f0182cf95bbc75db7293ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-diff&quot;&gt;array_diff()&lt;/a&gt; - Computes the difference of arrays</source>
          <target state="translated">&lt;a href=&quot;function.array-diff&quot;&gt;array_diff ()&lt;/a&gt; -배열의 차이를 계산</target>
        </trans-unit>
        <trans-unit id="186f6bbffe166aa54c56aadf975ddfb9e8191d3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-diff-assoc&quot;&gt;array_diff_assoc()&lt;/a&gt; - Computes the difference of arrays with additional index check</source>
          <target state="translated">&lt;a href=&quot;function.array-diff-assoc&quot;&gt;array_diff_assoc ()&lt;/a&gt; -추가 인덱스 검사로 배열의 차이를 계산합니다</target>
        </trans-unit>
        <trans-unit id="1a8862a21b3bfd2219d197b53273533ee2d43567" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-diff-key&quot;&gt;array_diff_key()&lt;/a&gt; - Computes the difference of arrays using keys for comparison</source>
          <target state="translated">&lt;a href=&quot;function.array-diff-key&quot;&gt;array_diff_key ()&lt;/a&gt; -비교를 위해 키를 사용하여 배열의 차이를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b3f7c26b82b4f18bebd8e5e841a3d292012edfd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-diff-uassoc&quot;&gt;array_diff_uassoc()&lt;/a&gt; - Computes the difference of arrays with additional index check which is performed by a user supplied callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-diff-uassoc&quot;&gt;array_diff_uassoc ()&lt;/a&gt; -사용자가 제공 한 콜백 함수에 의해 수행되는 추가 인덱스 확인으로 배열의 차이를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="31afe329cbde7ec098cf2056fe37f527103c45e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-diff-ukey&quot;&gt;array_diff_ukey()&lt;/a&gt; - Computes the difference of arrays using a callback function on the keys for comparison</source>
          <target state="translated">&lt;a href=&quot;function.array-diff-ukey&quot;&gt;array_diff_ukey ()&lt;/a&gt; -비교를 위해 키의 콜백 함수를 사용하여 배열의 차이를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="10c89f86db047aee8e4d4b9fb556c7ae611ba628" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-fill&quot;&gt;array_fill()&lt;/a&gt; - Fill an array with values</source>
          <target state="translated">&lt;a href=&quot;function.array-fill&quot;&gt;array_fill ()&lt;/a&gt; -값으로 배열을 채 웁니다</target>
        </trans-unit>
        <trans-unit id="51751ae42a73058aa10807313c60b22d929b66a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-fill-keys&quot;&gt;array_fill_keys()&lt;/a&gt; - Fill an array with values, specifying keys</source>
          <target state="translated">&lt;a href=&quot;function.array-fill-keys&quot;&gt;array_fill_keys ()&lt;/a&gt; -키를 지정하여 값으로 배열을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="bf289e898cea4f0d29e1974186bf20a29fd10fc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-filter&quot;&gt;array_filter()&lt;/a&gt; - Filters elements of an array using a callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-filter&quot;&gt;array_filter ()&lt;/a&gt; -콜백 함수를 사용하여 배열의 요소를 필터링 합니다.</target>
        </trans-unit>
        <trans-unit id="872cb5e8eda2bdfd5feb31c4e97c46574c4a84f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-flip&quot;&gt;array_flip()&lt;/a&gt; - Exchanges all keys with their associated values in an array</source>
          <target state="translated">&lt;a href=&quot;function.array-flip&quot;&gt;array_flip ()&lt;/a&gt; -모든 키를 배열의 관련 값과 교환</target>
        </trans-unit>
        <trans-unit id="c34e416b8a76f6eb6a1ee8de7576ef3f28fce3c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect()&lt;/a&gt; - Computes the intersection of arrays</source>
          <target state="translated">&lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect ()&lt;/a&gt; -배열의 교집합을 계산</target>
        </trans-unit>
        <trans-unit id="370432e81b9f6908526b8206b5babc41c9422e62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-intersect-assoc&quot;&gt;array_intersect_assoc()&lt;/a&gt; - Computes the intersection of arrays with additional index check</source>
          <target state="translated">&lt;a href=&quot;function.array-intersect-assoc&quot;&gt;array_intersect_assoc ()&lt;/a&gt; -추가 인덱스 검사로 배열의 교집합을 계산합니다</target>
        </trans-unit>
        <trans-unit id="202117ed863011c076ec36efb84f4710ab09164c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-intersect-key&quot;&gt;array_intersect_key()&lt;/a&gt; - Computes the intersection of arrays using keys for comparison</source>
          <target state="translated">&lt;a href=&quot;function.array-intersect-key&quot;&gt;array_intersect_key ()&lt;/a&gt; -비교를 위해 키를 사용하여 배열의 교집합을 계산합니다</target>
        </trans-unit>
        <trans-unit id="850d60e5414b2626deb1a5fac95847664eb7c813" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-intersect-uassoc&quot;&gt;array_intersect_uassoc()&lt;/a&gt; - Computes the intersection of arrays with additional index check, compares indexes by a callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-intersect-uassoc&quot;&gt;array_intersect_uassoc ()&lt;/a&gt; -추가 인덱스 검사로 배열의 교집합을 계산하고 콜백 함수로 인덱스를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="d13d6c32b53be21f86b1b5736a6c13b4db805c55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-intersect-ukey&quot;&gt;array_intersect_ukey()&lt;/a&gt; - Computes the intersection of arrays using a callback function on the keys for comparison</source>
          <target state="translated">&lt;a href=&quot;function.array-intersect-ukey&quot;&gt;array_intersect_ukey ()&lt;/a&gt; -비교를 위해 키의 콜백 함수를 사용하여 배열의 교집합을 계산합니다</target>
        </trans-unit>
        <trans-unit id="27e85dc3a00e0ef7fa9c67fe95579e4bf7868bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-key-exists&quot;&gt;array_key_exists()&lt;/a&gt; - Checks if the given key or index exists in the array</source>
          <target state="translated">&lt;a href=&quot;function.array-key-exists&quot;&gt;array_key_exists ()&lt;/a&gt; -주어진 키 또는 인덱스가 배열에 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="67e5a878a435797b632a0c64263d10e5c339a82e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-key-first&quot;&gt;array_key_first()&lt;/a&gt; - Gets the first key of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-key-first&quot;&gt;array_key_first ()&lt;/a&gt; -배열의 첫 번째 키를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="b226d4df8cc74dde50d83f4e10ab0df082925317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-key-last&quot;&gt;array_key_last()&lt;/a&gt; - Gets the last key of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-key-last&quot;&gt;array_key_last ()&lt;/a&gt; -배열의 마지막 키를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="6d1010319308827183b7d7b5e5e5ab1fef684470" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-keys&quot;&gt;array_keys()&lt;/a&gt; - Return all the keys or a subset of the keys of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-keys&quot;&gt;array_keys ()&lt;/a&gt; -배열의 모든 키 또는 키의 하위 집합을 반환</target>
        </trans-unit>
        <trans-unit id="1472e8b9afcaa93079d0a974b94e640093659594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-map&quot;&gt;array_map()&lt;/a&gt; - Applies the callback to the elements of the given arrays</source>
          <target state="translated">&lt;a href=&quot;function.array-map&quot;&gt;array_map ()&lt;/a&gt; -주어진 배열의 요소에 콜백을 적용합니다</target>
        </trans-unit>
        <trans-unit id="7dbec49e432600b8943e8012df95d9eacee32dfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-merge&quot;&gt;array_merge()&lt;/a&gt; - Merge one or more arrays</source>
          <target state="translated">&lt;a href=&quot;function.array-merge&quot;&gt;array_merge ()&lt;/a&gt; -하나 이상의 배열 병합</target>
        </trans-unit>
        <trans-unit id="f2d0f5ce14a75367c3b7998797ee8dd1105bf09e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-merge-recursive&quot;&gt;array_merge_recursive()&lt;/a&gt; - Merge one or more arrays recursively</source>
          <target state="translated">&lt;a href=&quot;function.array-merge-recursive&quot;&gt;array_merge_recursive ()&lt;/a&gt; -하나 이상의 배열을 재귀 적으로 병합</target>
        </trans-unit>
        <trans-unit id="12e1e2fee037850578b0b8638db2a6a7a16d501d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-pad&quot;&gt;array_pad()&lt;/a&gt; - Pad array to the specified length with a value</source>
          <target state="translated">&lt;a href=&quot;function.array-pad&quot;&gt;array_pad ()&lt;/a&gt; -값으로 지정된 길이까지 배열을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="57f567e40911b5f9ad52a8488ae50c479430f156" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-pop&quot;&gt;array_pop()&lt;/a&gt; - Pop the element off the end of array</source>
          <target state="translated">&lt;a href=&quot;function.array-pop&quot;&gt;array_pop ()&lt;/a&gt; -배열의 끝에서 요소를 팝</target>
        </trans-unit>
        <trans-unit id="8bbd17e113d411acc75e5b26404898e1349decb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-push&quot;&gt;array_push()&lt;/a&gt; - Push one or more elements onto the end of array</source>
          <target state="translated">&lt;a href=&quot;function.array-push&quot;&gt;array_push ()&lt;/a&gt; -하나 이상의 요소를 배열의 끝에 푸시</target>
        </trans-unit>
        <trans-unit id="c60b5774e523e164541574e39c332f5bfe999869" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-rand&quot;&gt;array_rand()&lt;/a&gt; - Pick one or more random keys out of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-rand&quot;&gt;array_rand ()&lt;/a&gt; - 배열에서 하나 이상의 임의의 키를 선택</target>
        </trans-unit>
        <trans-unit id="1c94af8be890703a2fb136bbda97778b0a7a99e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-reduce&quot;&gt;array_reduce()&lt;/a&gt; - Iteratively reduce the array to a single value using a callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-reduce&quot;&gt;array_reduce ()&lt;/a&gt; -콜백 함수를 사용하여 배열을 단일 값으로 반복적으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="1fe07ced7d8a2b810d608c94f2c51e6aa7a13841" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-replace&quot;&gt;array_replace()&lt;/a&gt; - Replaces elements from passed arrays into the first array</source>
          <target state="translated">&lt;a href=&quot;function.array-replace&quot;&gt;array_replace ()&lt;/a&gt; -전달 된 배열의 요소를 첫 번째 배열로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="a8be72a0f0b2efbb16d478e40b7dbd4afb2dab4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-replace-recursive&quot;&gt;array_replace_recursive()&lt;/a&gt; - Replaces elements from passed arrays into the first array recursively</source>
          <target state="translated">&lt;a href=&quot;function.array-replace-recursive&quot;&gt;array_replace_recursive ()&lt;/a&gt; -전달 된 배열의 요소를 첫 번째 배열로 재귀 적으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="544810c9f7fbd481359784acf11c5efd8f12164e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-reverse&quot;&gt;array_reverse()&lt;/a&gt; - Return an array with elements in reverse order</source>
          <target state="translated">&lt;a href=&quot;function.array-reverse&quot;&gt;array_reverse ()&lt;/a&gt; -요소를 역순으로 배열을 반환</target>
        </trans-unit>
        <trans-unit id="83326eb7c58e760f515292d9de48fe0f9a12eb4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-search&quot;&gt;array_search()&lt;/a&gt; - Searches the array for a given value and returns the first corresponding key if successful</source>
          <target state="translated">&lt;a href=&quot;function.array-search&quot;&gt;array_search ()&lt;/a&gt; -주어진 값에 대한 배열을 검색하고 성공하면 첫 번째 해당 키를 반환</target>
        </trans-unit>
        <trans-unit id="bfeb4b332f90d9c0599d29a63bbdc0cb350a70e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-shift&quot;&gt;array_shift()&lt;/a&gt; - Shift an element off the beginning of array</source>
          <target state="translated">&lt;a href=&quot;function.array-shift&quot;&gt;array_shift ()&lt;/a&gt; -배열의 시작 부분에서 요소를 이동</target>
        </trans-unit>
        <trans-unit id="e411abedcbd2fa2ca6e1a7f57f446400dd293576" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-slice&quot;&gt;array_slice()&lt;/a&gt; - Extract a slice of the array</source>
          <target state="translated">&lt;a href=&quot;function.array-slice&quot;&gt;array_slice ()&lt;/a&gt; -배열의 슬라이스를 추출</target>
        </trans-unit>
        <trans-unit id="fe98f4250394c187f2f0f9a3acc6717f38a6e133" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-splice&quot;&gt;array_splice()&lt;/a&gt; - Remove a portion of the array and replace it with something else</source>
          <target state="translated">&lt;a href=&quot;function.array-splice&quot;&gt;array_splice ()&lt;/a&gt; -배열의 일부를 제거하고 다른 것으로 대체</target>
        </trans-unit>
        <trans-unit id="0ff912b3ef221a8d7e1134c7330c4053c6460b19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-udiff&quot;&gt;array_udiff()&lt;/a&gt; - Computes the difference of arrays by using a callback function for data comparison</source>
          <target state="translated">&lt;a href=&quot;function.array-udiff&quot;&gt;array_udiff ()&lt;/a&gt; -데이터 비교를 위해 콜백 함수를 사용하여 배열의 차이를 계산</target>
        </trans-unit>
        <trans-unit id="b6e703422393752d8610c638bc1c23fe9f81f6dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-udiff-assoc&quot;&gt;array_udiff_assoc()&lt;/a&gt; - Computes the difference of arrays with additional index check, compares data by a callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-udiff-assoc&quot;&gt;array_udiff_assoc ()&lt;/a&gt; -추가 인덱스 검사로 배열의 차이를 계산하고 콜백 함수로 데이터를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="7b0e6f294f12f9c619c3f961cb4784fa6c492ba2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-udiff-uassoc&quot;&gt;array_udiff_uassoc()&lt;/a&gt; - Computes the difference of arrays with additional index check, compares data and indexes by a callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-udiff-uassoc&quot;&gt;array_udiff_uassoc ()&lt;/a&gt; -추가 인덱스 검사로 배열의 차이를 계산하고 콜백 함수로 데이터와 인덱스를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="79e7106ed7de5e11af778403a1f6679b6a2988d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-uintersect&quot;&gt;array_uintersect()&lt;/a&gt; - Computes the intersection of arrays, compares data by a callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-uintersect&quot;&gt;array_uintersect ()&lt;/a&gt; -배열의 교집합을 계산하고 콜백 함수로 데이터를 비교합니다</target>
        </trans-unit>
        <trans-unit id="e45328a4354193da6253d49458d8374efff22ca2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-uintersect-assoc&quot;&gt;array_uintersect_assoc()&lt;/a&gt; - Computes the intersection of arrays with additional index check, compares data by a callback function</source>
          <target state="translated">&lt;a href=&quot;function.array-uintersect-assoc&quot;&gt;array_uintersect_assoc ()&lt;/a&gt; -추가 인덱스 검사로 배열의 교집합을 계산하고 콜백 함수로 데이터를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="2f8a02cb6b69efe9b9b486751651d6250d10fd20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-uintersect-uassoc&quot;&gt;array_uintersect_uassoc()&lt;/a&gt; - Computes the intersection of arrays with additional index check, compares data and indexes by separate callback functions</source>
          <target state="translated">&lt;a href=&quot;function.array-uintersect-uassoc&quot;&gt;array_uintersect_uassoc ()&lt;/a&gt; -추가 인덱스 확인으로 배열의 교집합을 계산하고 별도의 콜백 함수로 데이터와 인덱스를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="f39e212d9b74715bf88e33abf36af76932ec387e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-unique&quot;&gt;array_unique()&lt;/a&gt; - Removes duplicate values from an array</source>
          <target state="translated">&lt;a href=&quot;function.array-unique&quot;&gt;array_unique ()&lt;/a&gt; -배열에서 중복 값을 제거합니다</target>
        </trans-unit>
        <trans-unit id="fd3f6424c9f0e47fff924317347b47adb83b60f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-unshift&quot;&gt;array_unshift()&lt;/a&gt; - Prepend one or more elements to the beginning of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-unshift&quot;&gt;array_unshift ()&lt;/a&gt; -배열의 시작 부분에 하나 이상의 요소를 추가</target>
        </trans-unit>
        <trans-unit id="df64d74c7316e528efe06f4d2d2fe37ca8085b58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-values&quot;&gt;array_values()&lt;/a&gt; - Return all the values of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-values&quot;&gt;array_values ​​()&lt;/a&gt; -배열의 모든 값을 반환</target>
        </trans-unit>
        <trans-unit id="d13a90e926c8010ab5e17678f69bbadfdb177fc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-walk&quot;&gt;array_walk()&lt;/a&gt; - Apply a user supplied function to every member of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-walk&quot;&gt;array_walk ()&lt;/a&gt; -사용자가 제공 한 함수를 배열의 모든 멤버에 적용</target>
        </trans-unit>
        <trans-unit id="ec612fa715ba3b788c997a0902a8199e1ed5ec43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.array-walk-recursive&quot;&gt;array_walk_recursive()&lt;/a&gt; - Apply a user function recursively to every member of an array</source>
          <target state="translated">&lt;a href=&quot;function.array-walk-recursive&quot;&gt;array_walk_recursive ()&lt;/a&gt; -배열의 모든 멤버에 사용자 함수를 재귀 적으로 적용</target>
        </trans-unit>
        <trans-unit id="25e53bd7489f9a6b17e658d81f9848ca72e143d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.arsort&quot;&gt;arsort()&lt;/a&gt; - Sort an array in reverse order and maintain index association</source>
          <target state="translated">&lt;a href=&quot;function.arsort&quot;&gt;arsort ()&lt;/a&gt; -배열을 역순으로 정렬하고 인덱스 연관을 유지</target>
        </trans-unit>
        <trans-unit id="481b176d1b48ccc0a738c4c213d3691fdce84c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.asin&quot;&gt;asin()&lt;/a&gt; - Arc sine</source>
          <target state="translated">&lt;a href=&quot;function.asin&quot;&gt;asin ()&lt;/a&gt; -아크 사인</target>
        </trans-unit>
        <trans-unit id="30bc3bdef8f191dcffac6d9c88cbdf3934f8f0ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.asinh&quot;&gt;asinh()&lt;/a&gt; - Inverse hyperbolic sine</source>
          <target state="translated">&lt;a href=&quot;function.asinh&quot;&gt;asinh ()&lt;/a&gt; -역 쌍곡 사인</target>
        </trans-unit>
        <trans-unit id="b01a94960c130d5c9355b0788d4ae5b16910574c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.asort&quot;&gt;asort()&lt;/a&gt; - Sort an array and maintain index association</source>
          <target state="translated">&lt;a href=&quot;function.asort&quot;&gt;asort ()&lt;/a&gt; -배열 정렬 및 인덱스 연관 유지</target>
        </trans-unit>
        <trans-unit id="c6b8347604240c95806086ee1ddc44d16c92bd8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.assert&quot;&gt;assert()&lt;/a&gt; - Checks if assertion is FALSE</source>
          <target state="translated">&lt;a href=&quot;function.assert&quot;&gt;assert ()&lt;/a&gt; -어설 션이 FALSE인지 확인</target>
        </trans-unit>
        <trans-unit id="9364bc18a63d99b58fc001e4e1ac8dc9e6ed5505" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.assert&quot;&gt;assert()&lt;/a&gt; - Checks if assertion is false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed2c4752182b2b344cfce7d5ffd100853707d3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.assert-options&quot;&gt;assert_options()&lt;/a&gt; - Set/get the various assert flags</source>
          <target state="translated">&lt;a href=&quot;function.assert-options&quot;&gt;assert_options ()&lt;/a&gt; -다양한 assert 플래그를 설정 / 취득</target>
        </trans-unit>
        <trans-unit id="fae5ff7ae74b7c904958fb34f5a09222d48d327e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.atan&quot;&gt;atan()&lt;/a&gt; - Arc tangent</source>
          <target state="translated">&lt;a href=&quot;function.atan&quot;&gt;atan ()&lt;/a&gt; -아크 탄젠트</target>
        </trans-unit>
        <trans-unit id="ab1f30fd9c373f5a5120660e39f4343e89ddabcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.atan2&quot;&gt;atan2()&lt;/a&gt; - Arc tangent of two variables</source>
          <target state="translated">&lt;a href=&quot;function.atan2&quot;&gt;atan2 ()&lt;/a&gt; -두 변수의 아크 탄젠트</target>
        </trans-unit>
        <trans-unit id="3780e1676b10adcc9fe9f0c9eafbd1da32f92abf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.atanh&quot;&gt;atanh()&lt;/a&gt; - Inverse hyperbolic tangent</source>
          <target state="translated">&lt;a href=&quot;function.atanh&quot;&gt;atanh ()&lt;/a&gt; -역 쌍곡 탄젠트</target>
        </trans-unit>
        <trans-unit id="a97ed5f4b8400be644e620dd87a3770f2d9bf597" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.autoload&quot;&gt;__autoload()&lt;/a&gt; - Attempt to load undefined class</source>
          <target state="translated">&lt;a href=&quot;function.autoload&quot;&gt;__autoload ()&lt;/a&gt; -정의되지 않은 클래스를로드하려고 시도</target>
        </trans-unit>
        <trans-unit id="b2d0d08d9a094fbc2bca4947276a169322106701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.base-convert&quot;&gt;base_convert()&lt;/a&gt; - Convert a number between arbitrary bases</source>
          <target state="translated">&lt;a href=&quot;function.base-convert&quot;&gt;base_convert ()&lt;/a&gt; -임의의 밑 사이의 숫자를 변환</target>
        </trans-unit>
        <trans-unit id="f51a1f4a7628a647f9493562ab751ad457def342" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.base64-decode&quot;&gt;base64_decode()&lt;/a&gt; - Decodes data encoded with MIME base64</source>
          <target state="translated">&lt;a href=&quot;function.base64-decode&quot;&gt;base64_decode ()-MIME&lt;/a&gt; base64로 인코딩 된 데이터를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="a9b8b8080e88ad69e9f58cfbf100f407b906a354" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.base64-encode&quot;&gt;base64_encode()&lt;/a&gt; - Encodes data with MIME base64</source>
          <target state="translated">&lt;a href=&quot;function.base64-encode&quot;&gt;base64_encode ()-MIME&lt;/a&gt; base64로 데이터를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="cfb382f0e846dd1fd19945684be6da412a13c49f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.basename&quot;&gt;basename()&lt;/a&gt; - Returns trailing name component of path</source>
          <target state="translated">&lt;a href=&quot;function.basename&quot;&gt;basename ()&lt;/a&gt; -경로의 후행 이름 구성 요소를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d7436459ba3be8c6d582d74271d250fffffb5f9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcadd&quot;&gt;bcadd()&lt;/a&gt; - Add two arbitrary precision numbers</source>
          <target state="translated">&lt;a href=&quot;function.bcadd&quot;&gt;bcadd ()&lt;/a&gt; -임의의 정밀도 숫자 두 개 추가</target>
        </trans-unit>
        <trans-unit id="60e9cf97e3dc678a1b1be52502353af4eee0903f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcdiv&quot;&gt;bcdiv()&lt;/a&gt; - Divide two arbitrary precision numbers</source>
          <target state="translated">&lt;a href=&quot;function.bcdiv&quot;&gt;bcdiv ()&lt;/a&gt; -두 개의 임의 정밀도 수를 나눕니다.</target>
        </trans-unit>
        <trans-unit id="7c7e027b791d4fc6fb1372946abf4733563b2020" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcmod&quot;&gt;bcmod()&lt;/a&gt; - Get modulus of an arbitrary precision number</source>
          <target state="translated">&lt;a href=&quot;function.bcmod&quot;&gt;bcmod ()&lt;/a&gt; -임의 정밀도 수의 계수를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="67ab09d261b12119223e87bf7303854b5b0416c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcmul&quot;&gt;bcmul()&lt;/a&gt; - Multiply two arbitrary precision numbers</source>
          <target state="translated">&lt;a href=&quot;function.bcmul&quot;&gt;bcmul ()&lt;/a&gt; -두 개의 임의 정밀도 수를 곱합니다</target>
        </trans-unit>
        <trans-unit id="1ff86f651ab34f077601f13abfedacffc6f23084" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcpow&quot;&gt;bcpow()&lt;/a&gt; - Raise an arbitrary precision number to another</source>
          <target state="translated">&lt;a href=&quot;function.bcpow&quot;&gt;bcpow ()&lt;/a&gt; -임의의 정밀도 숫자를 다른 숫자로 올립니다.</target>
        </trans-unit>
        <trans-unit id="aa378a9def0679d55bc325fc27cba80ac84372ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcpowmod&quot;&gt;bcpowmod()&lt;/a&gt; - Raise an arbitrary precision number to another, reduced by a specified modulus</source>
          <target state="translated">&lt;a href=&quot;function.bcpowmod&quot;&gt;bcpowmod ()&lt;/a&gt; -임의의 정밀도를 다른 계수로 올림</target>
        </trans-unit>
        <trans-unit id="21e1968b5b48daea59c5350a2a475a21888585e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcsqrt&quot;&gt;bcsqrt()&lt;/a&gt; - Get the square root of an arbitrary precision number</source>
          <target state="translated">&lt;a href=&quot;function.bcsqrt&quot;&gt;bcsqrt ()&lt;/a&gt; -임의 정밀도 수의 제곱근을 구합니다</target>
        </trans-unit>
        <trans-unit id="7f12eb5a0ee2640db7d45ccb651c09b173f06082" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bcsub&quot;&gt;bcsub()&lt;/a&gt; - Subtract one arbitrary precision number from another</source>
          <target state="translated">&lt;a href=&quot;function.bcsub&quot;&gt;bcsub ()&lt;/a&gt; -임의의 정밀도 숫자를 다른 숫자에서 빼기</target>
        </trans-unit>
        <trans-unit id="64d46bbd15be9ce4400ddf44a615dd8575d7336d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bin2hex&quot;&gt;bin2hex()&lt;/a&gt; - Convert binary data into hexadecimal representation</source>
          <target state="translated">&lt;a href=&quot;function.bin2hex&quot;&gt;bin2hex ()&lt;/a&gt; -이진 데이터를 16 진수 표현으로 변환</target>
        </trans-unit>
        <trans-unit id="161f83e3a17a0e2a146d0e3a8a55f5c230bf0a05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bindec&quot;&gt;bindec()&lt;/a&gt; - Binary to decimal</source>
          <target state="translated">&lt;a href=&quot;function.bindec&quot;&gt;bindec ()&lt;/a&gt; -이진수를 십진수로</target>
        </trans-unit>
        <trans-unit id="117d5f213df863ff970da518c4363f8f93aa1eb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.boolval&quot;&gt;boolval()&lt;/a&gt; - Get the boolean value of a variable</source>
          <target state="translated">&lt;a href=&quot;function.boolval&quot;&gt;boolval ()&lt;/a&gt; -변수의 부울 값 가져 오기</target>
        </trans-unit>
        <trans-unit id="50b0521e345d3fee5a7eae41f262e59785771c17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzclose&quot;&gt;bzclose()&lt;/a&gt; - Close a bzip2 file</source>
          <target state="translated">&lt;a href=&quot;function.bzclose&quot;&gt;bzclose ()-bzip2&lt;/a&gt; 파일을 닫습니다</target>
        </trans-unit>
        <trans-unit id="52c0445767a25d8bb5a66469be85289547a68120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzcompress&quot;&gt;bzcompress()&lt;/a&gt; - Compress a string into bzip2 encoded data</source>
          <target state="translated">&lt;a href=&quot;function.bzcompress&quot;&gt;bzcompress ()&lt;/a&gt; -문자열을 bzip2 인코딩 데이터로 압축</target>
        </trans-unit>
        <trans-unit id="62fce0c8ccaab434e26a5db98cbf60aec49fff08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzdecompress&quot;&gt;bzdecompress()&lt;/a&gt; - Decompresses bzip2 encoded data</source>
          <target state="translated">&lt;a href=&quot;function.bzdecompress&quot;&gt;bzdecompress ()&lt;/a&gt; -bzip2 인코딩 데이터 압축 해제</target>
        </trans-unit>
        <trans-unit id="5f46308af25c5b2e398ffa8c2351d62ff7180a70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzerrno&quot;&gt;bzerrno()&lt;/a&gt; - Returns a bzip2 error number</source>
          <target state="translated">&lt;a href=&quot;function.bzerrno&quot;&gt;bzerrno ()-bzip2&lt;/a&gt; 오류 번호를 반환합니다</target>
        </trans-unit>
        <trans-unit id="b3786d2a80a3964556cf3fcff71513c0f6cec1dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzerror&quot;&gt;bzerror()&lt;/a&gt; - Returns the bzip2 error number and error string in an array</source>
          <target state="translated">&lt;a href=&quot;function.bzerror&quot;&gt;bzerror ()&lt;/a&gt; -배열의 bzip2 오류 번호와 오류 문자열을 반환합니다</target>
        </trans-unit>
        <trans-unit id="fefcab295b7925f9660d49bc8f57bc3c5b470136" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzerrstr&quot;&gt;bzerrstr()&lt;/a&gt; - Returns a bzip2 error string</source>
          <target state="translated">&lt;a href=&quot;function.bzerrstr&quot;&gt;bzerrstr ()-bzip2&lt;/a&gt; 오류 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="067193e8917aa46d89cb059c20ed97238b335acf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzopen&quot;&gt;bzopen()&lt;/a&gt; - Opens a bzip2 compressed file</source>
          <target state="translated">&lt;a href=&quot;function.bzopen&quot;&gt;bzopen ()-bzip2&lt;/a&gt; 압축 파일을 엽니 다</target>
        </trans-unit>
        <trans-unit id="f205f1861abd49c7ba2b8d609541bb819a9e2bbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzread&quot;&gt;bzread()&lt;/a&gt; - Binary safe bzip2 file read</source>
          <target state="translated">&lt;a href=&quot;function.bzread&quot;&gt;bzread ()&lt;/a&gt; -이진 안전 bzip2 파일 읽기</target>
        </trans-unit>
        <trans-unit id="f8bcfe39654e17ab49fe9bf58436590afb1a14bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.bzwrite&quot;&gt;bzwrite()&lt;/a&gt; - Binary safe bzip2 file write</source>
          <target state="translated">&lt;a href=&quot;function.bzwrite&quot;&gt;bzwrite ()&lt;/a&gt; -이진 안전 bzip2 파일 쓰기</target>
        </trans-unit>
        <trans-unit id="c87d5be43cae5884e1ad2912887fdcaa452a62f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.cal-from-jd&quot;&gt;cal_from_jd()&lt;/a&gt; - Converts from Julian Day Count to a supported calendar</source>
          <target state="translated">&lt;a href=&quot;function.cal-from-jd&quot;&gt;cal_from_jd ()-Julian&lt;/a&gt; Day Count에서 지원되는 달력으로 변환</target>
        </trans-unit>
        <trans-unit id="fcdbb2e2089a4521df9de60e60efdabb191f6112" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.cal-to-jd&quot;&gt;cal_to_jd()&lt;/a&gt; - Converts from a supported calendar to Julian Day Count</source>
          <target state="translated">&lt;a href=&quot;function.cal-to-jd&quot;&gt;cal_to_jd ()&lt;/a&gt; -지원되는 캘린더에서 Julian Day Count로 변환</target>
        </trans-unit>
        <trans-unit id="6974e50d9191471511c077ca3f4a50041057301c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; - Call the callback given by the first parameter</source>
          <target state="translated">&lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func ()&lt;/a&gt; -첫 번째 매개 변수가 제공 한 콜백을 호출</target>
        </trans-unit>
        <trans-unit id="0c4109e8cc1892e9bbcd2143df2c88d6fc7c4a0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array()&lt;/a&gt; - Call a callback with an array of parameters</source>
          <target state="translated">&lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array ()&lt;/a&gt; -매개 변수 배열로 콜백 호출</target>
        </trans-unit>
        <trans-unit id="2ae8f9a813b365eb4907535ad0257c62087fd655" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ceil&quot;&gt;ceil()&lt;/a&gt; - Round fractions up</source>
          <target state="translated">&lt;a href=&quot;function.ceil&quot;&gt;ceil ()&lt;/a&gt; -반올림</target>
        </trans-unit>
        <trans-unit id="f6b1cac7ca01c0f3dc0bae18734a00170a160b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.chdir&quot;&gt;chdir()&lt;/a&gt; - Change directory</source>
          <target state="translated">&lt;a href=&quot;function.chdir&quot;&gt;chdir ()&lt;/a&gt; -디렉토리 변경</target>
        </trans-unit>
        <trans-unit id="fb0d9662850557873592183a202b1ceeecbec7b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.checkdate&quot;&gt;checkdate()&lt;/a&gt; - Validate a Gregorian date</source>
          <target state="translated">&lt;a href=&quot;function.checkdate&quot;&gt;checkdate ()&lt;/a&gt; -그레고리력 날짜 확인</target>
        </trans-unit>
        <trans-unit id="76c4c535be557d5c6faf95311472908f560abb96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.checkdnsrr&quot;&gt;checkdnsrr()&lt;/a&gt; - Check DNS records corresponding to a given Internet host name or IP address</source>
          <target state="translated">&lt;a href=&quot;function.checkdnsrr&quot;&gt;checkdnsrr ()&lt;/a&gt; -주어진 인터넷 호스트 이름 또는 IP 주소에 해당하는 DNS 레코드 확인</target>
        </trans-unit>
        <trans-unit id="bc0ce9562d452b09289ad48a2b29a72cf2d4d5b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.chgrp&quot;&gt;chgrp()&lt;/a&gt; - Changes file group</source>
          <target state="translated">&lt;a href=&quot;function.chgrp&quot;&gt;chgrp ()&lt;/a&gt; -파일 그룹을 변경합니다</target>
        </trans-unit>
        <trans-unit id="e2e92d844aad12bab4434f10e674dab8381c55cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.chmod&quot;&gt;chmod()&lt;/a&gt; (only when &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe_mode&lt;/a&gt; is enabled)</source>
          <target state="translated">&lt;a href=&quot;function.chmod&quot;&gt;chmod ()&lt;/a&gt; ( &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe_mode&lt;/a&gt; 가 활성화 된 경우에만 )</target>
        </trans-unit>
        <trans-unit id="698bf435f155d86a807c87d72a815928af5afec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.chmod&quot;&gt;chmod()&lt;/a&gt; - Changes file mode</source>
          <target state="translated">&lt;a href=&quot;function.chmod&quot;&gt;chmod ()&lt;/a&gt; -파일 모드를 변경합니다</target>
        </trans-unit>
        <trans-unit id="5c5232f0ff54c7d55ebdde6d50d163689e8c4c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.chown&quot;&gt;chown()&lt;/a&gt; - Changes file owner</source>
          <target state="translated">&lt;a href=&quot;function.chown&quot;&gt;chown ()&lt;/a&gt; -파일 소유자를 변경합니다</target>
        </trans-unit>
        <trans-unit id="10b0b09858a23d6b59ed18530c555b9c209d6670" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.chr&quot;&gt;chr()&lt;/a&gt; - Generate a single-byte string from a number</source>
          <target state="translated">&lt;a href=&quot;function.chr&quot;&gt;chr ()&lt;/a&gt; -숫자에서 1 바이트 문자열 생성</target>
        </trans-unit>
        <trans-unit id="44de35f104fcd7522ef592b8ad87816ca1d0655b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.chunk-split&quot;&gt;chunk_split()&lt;/a&gt; - Split a string into smaller chunks</source>
          <target state="translated">&lt;a href=&quot;function.chunk-split&quot;&gt;chunk_split ()&lt;/a&gt; -문자열을 작은 청크로 나눕니다</target>
        </trans-unit>
        <trans-unit id="590856f4f1204c04d64bbc283eca01ff7386338a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.class-exists&quot;&gt;class_exists()&lt;/a&gt; - Checks if the class has been defined</source>
          <target state="translated">&lt;a href=&quot;function.class-exists&quot;&gt;class_exists ()&lt;/a&gt; -클래스가 정의 되었는지 확인</target>
        </trans-unit>
        <trans-unit id="9f396aad7fc07f8f8526917ba65159ee198d2be8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.class-implements&quot;&gt;class_implements()&lt;/a&gt; - Return the interfaces which are implemented by the given class or interface</source>
          <target state="translated">&lt;a href=&quot;function.class-implements&quot;&gt;class_implements ()&lt;/a&gt; -주어진 클래스 또는 인터페이스에 의해 구현 된 인터페이스를 반환</target>
        </trans-unit>
        <trans-unit id="39b04f29a03453e14c6dde59ec7f26b5a78782ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.class-parents&quot;&gt;class_parents()&lt;/a&gt; - Return the parent classes of the given class</source>
          <target state="translated">&lt;a href=&quot;function.class-parents&quot;&gt;class_parents ()&lt;/a&gt; -주어진 클래스의 부모 클래스를 반환</target>
        </trans-unit>
        <trans-unit id="0655d0172b3eb0d97921f23ff1feb94e1c0e3225" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.class-uses&quot;&gt;class_uses()&lt;/a&gt; - Return the traits used by the given class</source>
          <target state="translated">&lt;a href=&quot;function.class-uses&quot;&gt;class_uses ()&lt;/a&gt; -주어진 클래스가 사용하는 특성을 반환</target>
        </trans-unit>
        <trans-unit id="22158d8bbf3348d4d22089a58cb355f245bfcb1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache()&lt;/a&gt; - Clears file status cache</source>
          <target state="translated">&lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache ()&lt;/a&gt; -파일 상태 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="42f978bf3d6334b5187dc3910dd4359eba5c8cd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.cli-get-process-title&quot;&gt;cli_get_process_title()&lt;/a&gt; - Returns the current process title</source>
          <target state="translated">&lt;a href=&quot;function.cli-get-process-title&quot;&gt;cli_get_process_title ()&lt;/a&gt; -현재 프로세스 제목을 반환</target>
        </trans-unit>
        <trans-unit id="0dc8662e9f07905d1c467446bfbc7863069b4649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.cli-set-process-title&quot;&gt;cli_set_process_title()&lt;/a&gt; - Sets the process title</source>
          <target state="translated">&lt;a href=&quot;function.cli-set-process-title&quot;&gt;cli_set_process_title ()&lt;/a&gt; -프로세스 제목을 설정합니다</target>
        </trans-unit>
        <trans-unit id="70c06eb61d8c9e329494278b87ea5c844a840916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.closedir&quot;&gt;closedir()&lt;/a&gt; - Close directory handle</source>
          <target state="translated">&lt;a href=&quot;function.closedir&quot;&gt;closedir ()&lt;/a&gt; -디렉토리 핸들 닫기</target>
        </trans-unit>
        <trans-unit id="db8379f80ef22ec885d9f3814b6c9aa99f4885d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.closelog&quot;&gt;closelog()&lt;/a&gt; - Close connection to system logger</source>
          <target state="translated">&lt;a href=&quot;function.closelog&quot;&gt;closelog ()&lt;/a&gt; -시스템 로거와의 연결을 닫습니다</target>
        </trans-unit>
        <trans-unit id="46f191c701d49096d6113db77cae93b7ab9ebc70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.compact&quot;&gt;compact()&lt;/a&gt; - Create array containing variables and their values</source>
          <target state="translated">&lt;a href=&quot;function.compact&quot;&gt;compact ()&lt;/a&gt; -변수와 값을 포함하는 배열 만들기</target>
        </trans-unit>
        <trans-unit id="1d39d46b8a63953bbb413dc306f44862994e00d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.connection-aborted&quot;&gt;connection_aborted()&lt;/a&gt; - Check whether client disconnected</source>
          <target state="translated">&lt;a href=&quot;function.connection-aborted&quot;&gt;connection_aborted ()&lt;/a&gt; -클라이언트 연결이 끊어 졌는지 확인</target>
        </trans-unit>
        <trans-unit id="c5cb399ba6c688113ccd9970b2d2554fa830e5d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.connection-status&quot;&gt;connection_status()&lt;/a&gt; - Returns connection status bitfield</source>
          <target state="translated">&lt;a href=&quot;function.connection-status&quot;&gt;connection_status ()&lt;/a&gt; -연결 상태 비트 필드를 반환</target>
        </trans-unit>
        <trans-unit id="a1a6082b6a6a663fcc5f9c5b00bd2964c1226e34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.constant&quot;&gt;constant()&lt;/a&gt; - Returns the value of a constant</source>
          <target state="translated">&lt;a href=&quot;function.constant&quot;&gt;constant ()&lt;/a&gt; - 상수 값을 반환</target>
        </trans-unit>
        <trans-unit id="60c1492bec46497cd0583406ed88ec35aaf6d639" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.convert-uudecode&quot;&gt;convert_uudecode()&lt;/a&gt; - Decode a uuencoded string</source>
          <target state="translated">&lt;a href=&quot;function.convert-uudecode&quot;&gt;convert_uudecode ()&lt;/a&gt; -uuencoded 문자열을 디코딩</target>
        </trans-unit>
        <trans-unit id="1df3bb83474d6125101ee14fcf19857e5e86f6bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.convert-uuencode&quot;&gt;convert_uuencode()&lt;/a&gt; - Uuencode a string</source>
          <target state="translated">&lt;a href=&quot;function.convert-uuencode&quot;&gt;convert_uuencode ()&lt;/a&gt; -문자열을 Uuencode</target>
        </trans-unit>
        <trans-unit id="6edc7bc92adf246c9236dd5a9936deee7cde4580" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.copy&quot;&gt;copy()&lt;/a&gt; - Copies file</source>
          <target state="translated">&lt;a href=&quot;function.copy&quot;&gt;copy ()&lt;/a&gt; -파일 복사</target>
        </trans-unit>
        <trans-unit id="f8070615436a97bcdab3f9632b3c19c733df40a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.cos&quot;&gt;cos()&lt;/a&gt; - Cosine</source>
          <target state="translated">&lt;a href=&quot;function.cos&quot;&gt;cos ()&lt;/a&gt; -코사인</target>
        </trans-unit>
        <trans-unit id="39d32255528ac17089289d9d1eef06ab7f735c5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.cosh&quot;&gt;cosh()&lt;/a&gt; - Hyperbolic cosine</source>
          <target state="translated">&lt;a href=&quot;function.cosh&quot;&gt;cosh ()&lt;/a&gt; -쌍곡 코사인</target>
        </trans-unit>
        <trans-unit id="2fa14f16ae11db0af087bbeec0a452d6fac1cf48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; - Count all elements in an array, or something in an object</source>
          <target state="translated">&lt;a href=&quot;function.count&quot;&gt;count ()&lt;/a&gt; -배열의 모든 요소 또는 객체의 무언가를 계산</target>
        </trans-unit>
        <trans-unit id="bd087b36bb81bc99024d1c3e73bed1355c720c9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.count-chars&quot;&gt;count_chars()&lt;/a&gt; - Return information about characters used in a string</source>
          <target state="translated">&lt;a href=&quot;function.count-chars&quot;&gt;count_chars ()&lt;/a&gt; -문자열에 사용 된 문자에 대한 정보를 반환</target>
        </trans-unit>
        <trans-unit id="d5c50c33cb00bdd5b49cea373e9b08b394bca4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.crc32&quot;&gt;crc32()&lt;/a&gt; - Calculates the crc32 polynomial of a string</source>
          <target state="translated">&lt;a href=&quot;function.crc32&quot;&gt;crc32 ()&lt;/a&gt; -문자열의 crc32 다항식을 계산합니다</target>
        </trans-unit>
        <trans-unit id="d773042f5c43ce53ee4d3cd207facfef2cdcc84e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.create-function&quot;&gt;create_function()&lt;/a&gt; - Create an anonymous (lambda-style) function</source>
          <target state="translated">&lt;a href=&quot;function.create-function&quot;&gt;create_function ()&lt;/a&gt; -익명 (람다 스타일) 함수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="87b3e4477dd9f3d5ec8547f3ae00da45278592f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.crypt&quot;&gt;crypt()&lt;/a&gt; - One-way string hashing</source>
          <target state="translated">&lt;a href=&quot;function.crypt&quot;&gt;crypt ()&lt;/a&gt; -단방향 문자열 해싱</target>
        </trans-unit>
        <trans-unit id="e0c9bc0c477a0f8bc5f27eaacb45b8c03e83f448" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-alnum&quot;&gt;ctype_alnum()&lt;/a&gt; - Check for alphanumeric character(s)</source>
          <target state="translated">&lt;a href=&quot;function.ctype-alnum&quot;&gt;ctype_alnum ()&lt;/a&gt; -영숫자 문자 확인</target>
        </trans-unit>
        <trans-unit id="499ef007bc98705f7c169d7f5e7aa99bbd0d73c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-alpha&quot;&gt;ctype_alpha()&lt;/a&gt; - Check for alphabetic character(s)</source>
          <target state="translated">&lt;a href=&quot;function.ctype-alpha&quot;&gt;ctype_alpha ()&lt;/a&gt; -알파벳 문자 확인</target>
        </trans-unit>
        <trans-unit id="97fc5dcebb024116ead409fe1043bd9823e595e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-cntrl&quot;&gt;ctype_cntrl()&lt;/a&gt; - Check for control character(s)</source>
          <target state="translated">&lt;a href=&quot;function.ctype-cntrl&quot;&gt;ctype_cntrl ()&lt;/a&gt; -제어 문자 확인</target>
        </trans-unit>
        <trans-unit id="72348dbd913b848133afe8472ecb3c5ebfa303b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-digit&quot;&gt;ctype_digit()&lt;/a&gt; - Check for numeric character(s)</source>
          <target state="translated">&lt;a href=&quot;function.ctype-digit&quot;&gt;ctype_digit ()&lt;/a&gt; -숫자 확인</target>
        </trans-unit>
        <trans-unit id="b2509de64582ff15a98a76c2598d06531c3c0f34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-graph&quot;&gt;ctype_graph()&lt;/a&gt; - Check for any printable character(s) except space</source>
          <target state="translated">&lt;a href=&quot;function.ctype-graph&quot;&gt;ctype_graph ()&lt;/a&gt; -공백을 제외한 인쇄 가능한 문자가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="3cd4ecaee636031d8931da1112d58f4d19ad84aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-lower&quot;&gt;ctype_lower()&lt;/a&gt; - Check for lowercase character(s)</source>
          <target state="translated">&lt;a href=&quot;function.ctype-lower&quot;&gt;ctype_lower ()&lt;/a&gt; -소문자 확인</target>
        </trans-unit>
        <trans-unit id="b5f903c794e823efbd816f65a274f6a9e131847a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-print&quot;&gt;ctype_print()&lt;/a&gt; - Check for printable character(s)</source>
          <target state="translated">&lt;a href=&quot;function.ctype-print&quot;&gt;ctype_print ()&lt;/a&gt; -인쇄 가능한 문자 확인</target>
        </trans-unit>
        <trans-unit id="5214914b2dafadb838cc4df07ac57ed2e9046f05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-punct&quot;&gt;ctype_punct()&lt;/a&gt; - Check for any printable character which is not whitespace or an alphanumeric character</source>
          <target state="translated">&lt;a href=&quot;function.ctype-punct&quot;&gt;ctype_punct ()&lt;/a&gt; -공백이나 영숫자가 아닌 인쇄 가능한 문자가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="fb9cc044cc0a8e20b5e40b93a13967609faf235c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-upper&quot;&gt;ctype_upper()&lt;/a&gt; - Check for uppercase character(s)</source>
          <target state="translated">&lt;a href=&quot;function.ctype-upper&quot;&gt;ctype_upper ()&lt;/a&gt; -대문자 확인</target>
        </trans-unit>
        <trans-unit id="ff064885230ed79131f2cc8ef3b63cacf0ace3c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ctype-xdigit&quot;&gt;ctype_xdigit()&lt;/a&gt; - Check for character(s) representing a hexadecimal digit</source>
          <target state="translated">&lt;a href=&quot;function.ctype-xdigit&quot;&gt;ctype_xdigit ()-16&lt;/a&gt; 진수를 나타내는 문자 확인</target>
        </trans-unit>
        <trans-unit id="67e72bb1b6c064f88a538b4637c92519e7bc165a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-close&quot;&gt;curl_close()&lt;/a&gt; - Close a cURL session</source>
          <target state="translated">&lt;a href=&quot;function.curl-close&quot;&gt;curl_close ()-cURL&lt;/a&gt; 세션을 닫습니다</target>
        </trans-unit>
        <trans-unit id="eee5bdbe7750235d29766620a4d3ea7c65245a15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-errno&quot;&gt;curl_errno()&lt;/a&gt; - Return the last error number</source>
          <target state="translated">&lt;a href=&quot;function.curl-errno&quot;&gt;curl_errno ()&lt;/a&gt; -마지막 오류 번호를 반환</target>
        </trans-unit>
        <trans-unit id="f341e351a9fa3d7455d7905eb45204617e3f72ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-error&quot;&gt;curl_error()&lt;/a&gt; - Return a string containing the last error for the current session</source>
          <target state="translated">&lt;a href=&quot;function.curl-error&quot;&gt;curl_error ()&lt;/a&gt; -현재 세션의 마지막 오류가 포함 된 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="3d02026e35dfbafb9894d8bbfda2462b638b721d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-escape&quot;&gt;curl_escape()&lt;/a&gt; - URL encodes the given string</source>
          <target state="translated">&lt;a href=&quot;function.curl-escape&quot;&gt;curl_escape ()&lt;/a&gt; -주어진 문자열을 URL 인코딩</target>
        </trans-unit>
        <trans-unit id="ec37e93f450f4f7ff93277fcdc701d3411645d74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec()&lt;/a&gt; - Perform a cURL session</source>
          <target state="translated">&lt;a href=&quot;function.curl-exec&quot;&gt;curl_exec ()-cURL&lt;/a&gt; 세션 수행</target>
        </trans-unit>
        <trans-unit id="6378945917089356124b1a321befec7844db2713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-init&quot;&gt;curl_init()&lt;/a&gt; - Initialize a cURL session</source>
          <target state="translated">&lt;a href=&quot;function.curl-init&quot;&gt;curl_init ()-cURL&lt;/a&gt; 세션 초기화</target>
        </trans-unit>
        <trans-unit id="631aca2116ba1ae341606ff5f60636ba9ba63380" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-multi-add-handle&quot;&gt;curl_multi_add_handle()&lt;/a&gt; - Add a normal cURL handle to a cURL multi handle</source>
          <target state="translated">&lt;a href=&quot;function.curl-multi-add-handle&quot;&gt;curl_multi_add_handle ()-cURL&lt;/a&gt; 멀티 핸들에 일반 cURL 핸들 추가</target>
        </trans-unit>
        <trans-unit id="8f0862abff296020239919ee8b7b7a5e2d005401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-multi-close&quot;&gt;curl_multi_close()&lt;/a&gt; - Close a set of cURL handles</source>
          <target state="translated">&lt;a href=&quot;function.curl-multi-close&quot;&gt;curl_multi_close ()-cURL&lt;/a&gt; 핸들 세트를 닫습니다</target>
        </trans-unit>
        <trans-unit id="376e88c402f7e08eeb9374cec43f41bd53e97c9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-multi-exec&quot;&gt;curl_multi_exec()&lt;/a&gt; - Run the sub-connections of the current cURL handle</source>
          <target state="translated">&lt;a href=&quot;function.curl-multi-exec&quot;&gt;curl_multi_exec ()&lt;/a&gt; -현재 cURL 핸들의 하위 연결을 실행합니다</target>
        </trans-unit>
        <trans-unit id="8c0eb6cdf782baa77150b07af49440a0736c254e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-multi-init&quot;&gt;curl_multi_init()&lt;/a&gt; - Returns a new cURL multi handle</source>
          <target state="translated">&lt;a href=&quot;function.curl-multi-init&quot;&gt;curl_multi_init ()&lt;/a&gt; -새로운 cURL 멀티 핸들을 반환</target>
        </trans-unit>
        <trans-unit id="45de531f45659069b098649df4541036daf60480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-multi-remove-handle&quot;&gt;curl_multi_remove_handle()&lt;/a&gt; - Remove a multi handle from a set of cURL handles</source>
          <target state="translated">&lt;a href=&quot;function.curl-multi-remove-handle&quot;&gt;curl_multi_remove_handle ()-cURL&lt;/a&gt; 핸들 세트에서 다중 핸들 제거</target>
        </trans-unit>
        <trans-unit id="150bfd567a082275934d2a4fb0593ae2a4e15ba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-multi-select&quot;&gt;curl_multi_select()&lt;/a&gt; - Wait for activity on any curl_multi connection</source>
          <target state="translated">&lt;a href=&quot;function.curl-multi-select&quot;&gt;curl_multi_select ()&lt;/a&gt; -curl_multi 연결에서 활동 대기</target>
        </trans-unit>
        <trans-unit id="d1ba19a4f669e5f5596d4f08530344cff1cfad6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt()&lt;/a&gt; - Set an option for a cURL transfer</source>
          <target state="translated">&lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt ()-cURL&lt;/a&gt; 전송을위한 옵션 설정</target>
        </trans-unit>
        <trans-unit id="2b92fc8dc97f90b8de1599c65a12569b9f39d2b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-setopt-array&quot;&gt;curl_setopt_array()&lt;/a&gt; - Set multiple options for a cURL transfer</source>
          <target state="translated">&lt;a href=&quot;function.curl-setopt-array&quot;&gt;curl_setopt_array ()-cURL&lt;/a&gt; 전송을위한 여러 옵션 설정</target>
        </trans-unit>
        <trans-unit id="4d01d3f995223e1d85bf46b1638d459dd90888b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-share-close&quot;&gt;curl_share_close()&lt;/a&gt; - Close a cURL share handle</source>
          <target state="translated">&lt;a href=&quot;function.curl-share-close&quot;&gt;curl_share_close ()-cURL&lt;/a&gt; 공유 핸들을 닫습니다</target>
        </trans-unit>
        <trans-unit id="565b57e47fc49d2f9a806c5a082709b8d6476916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-share-errno&quot;&gt;curl_share_errno()&lt;/a&gt; - Return the last share curl error number</source>
          <target state="translated">&lt;a href=&quot;function.curl-share-errno&quot;&gt;curl_share_errno ()&lt;/a&gt; -마지막 공유 컬 오류 번호를 반환</target>
        </trans-unit>
        <trans-unit id="6471e819ac2fe40eb0cbed9179a7e753039cc9b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-share-init&quot;&gt;curl_share_init()&lt;/a&gt; - Initialize a cURL share handle</source>
          <target state="translated">&lt;a href=&quot;function.curl-share-init&quot;&gt;curl_share_init ()-cURL&lt;/a&gt; 공유 핸들 초기화</target>
        </trans-unit>
        <trans-unit id="30752a7d916aac00c5f86feb13d99a1c9eb2cbd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-share-setopt&quot;&gt;curl_share_setopt()&lt;/a&gt; - Set an option for a cURL share handle</source>
          <target state="translated">&lt;a href=&quot;function.curl-share-setopt&quot;&gt;curl_share_setopt ()-cURL&lt;/a&gt; 공유 핸들에 대한 옵션 설정</target>
        </trans-unit>
        <trans-unit id="6b79341593288f56959b20fe52a0e5fa6f049729" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-strerror&quot;&gt;curl_strerror()&lt;/a&gt; - Return string describing the given error code</source>
          <target state="translated">&lt;a href=&quot;function.curl-strerror&quot;&gt;curl_strerror ()&lt;/a&gt; -주어진 오류 코드를 설명하는 반환 문자열</target>
        </trans-unit>
        <trans-unit id="4496ebd28ac9250d3f92437a470b0a79306480e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.curl-unescape&quot;&gt;curl_unescape()&lt;/a&gt; - Decodes the given URL encoded string</source>
          <target state="translated">&lt;a href=&quot;function.curl-unescape&quot;&gt;curl_unescape ()&lt;/a&gt; -주어진 URL 인코딩 문자열을 디코딩합니다</target>
        </trans-unit>
        <trans-unit id="dcac9475e311bfe986e8a7f4b281d4fd126939f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.current&quot;&gt;current()&lt;/a&gt; - Return the current element in an array</source>
          <target state="translated">&lt;a href=&quot;function.current&quot;&gt;current ()&lt;/a&gt; -배열의 현재 요소를 반환</target>
        </trans-unit>
        <trans-unit id="a138c334213b3b81616bf15884cd6de3d9f012fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.date&quot;&gt;date()&lt;/a&gt; - Format a local time/date</source>
          <target state="translated">&lt;a href=&quot;function.date&quot;&gt;date ()&lt;/a&gt; -현지 시간 / 날짜 형식</target>
        </trans-unit>
        <trans-unit id="b5911c277b0fee77fcb1c386374d1c422d00c6b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.date-default-timezone-get&quot;&gt;date_default_timezone_get()&lt;/a&gt; - Gets the default timezone used by all date/time functions in a script</source>
          <target state="translated">&lt;a href=&quot;function.date-default-timezone-get&quot;&gt;date_default_timezone_get ()&lt;/a&gt; -스크립트의 모든 날짜 / 시간 함수가 사용하는 기본 시간대를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="e2f72325f9b1cf5a439ac3fe883a547930853ae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.date-default-timezone-set&quot;&gt;date_default_timezone_set()&lt;/a&gt; - Sets the default timezone used by all date/time functions in a script</source>
          <target state="translated">&lt;a href=&quot;function.date-default-timezone-set&quot;&gt;date_default_timezone_set ()&lt;/a&gt; -스크립트의 모든 날짜 / 시간 함수가 사용하는 기본 시간대를 설정합니다</target>
        </trans-unit>
        <trans-unit id="8dde2125040d78c6b21ba131f2ca581b4322e71c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.date-parse-from-format&quot;&gt;date_parse_from_format()&lt;/a&gt; - Get info about given date formatted according to the specified format</source>
          <target state="translated">&lt;a href=&quot;function.date-parse-from-format&quot;&gt;date_parse_from_format ()&lt;/a&gt; -지정된 형식에 따라 지정된 날짜에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="17898d9802eecfe4c17e580244a6c6da12c7395d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.date-sun-info&quot;&gt;date_sun_info()&lt;/a&gt; - Returns an array with information about sunset/sunrise and twilight begin/end</source>
          <target state="translated">&lt;a href=&quot;function.date-sun-info&quot;&gt;date_sun_info ()&lt;/a&gt; -일몰 / 일출 및 황혼 시작 / 종료에 대한 정보가있는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a416461e2c614bb645e6aef5bfdddf78763783c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.date-sunrise&quot;&gt;date_sunrise()&lt;/a&gt; - Returns time of sunrise for a given day and location</source>
          <target state="translated">&lt;a href=&quot;function.date-sunrise&quot;&gt;date_sunrise ()&lt;/a&gt; -특정 요일 및 위치의 일출 시간을 반환합니다</target>
        </trans-unit>
        <trans-unit id="ad9a0ffdff91f41989436134968a9d461041007e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.date-sunset&quot;&gt;date_sunset()&lt;/a&gt; - Returns time of sunset for a given day and location</source>
          <target state="translated">&lt;a href=&quot;function.date-sunset&quot;&gt;date_sunset ()&lt;/a&gt; -특정 요일 및 위치에 대한 일몰 시간을 반환합니다</target>
        </trans-unit>
        <trans-unit id="3dc3d6bfa112e92f13e6e5b5854f084b7a8f14ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-close&quot;&gt;dba_close()&lt;/a&gt; - Close a DBA database</source>
          <target state="translated">&lt;a href=&quot;function.dba-close&quot;&gt;dba_close ()-DBA&lt;/a&gt; 데이터베이스를 닫습니다</target>
        </trans-unit>
        <trans-unit id="9d135ea39704c34b2568399f924ed8d0d53dc6ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-delete&quot;&gt;dba_delete()&lt;/a&gt; - Delete DBA entry specified by key</source>
          <target state="translated">&lt;a href=&quot;function.dba-delete&quot;&gt;dba_delete ()&lt;/a&gt; -키로 지정된 DBA 항목 삭제</target>
        </trans-unit>
        <trans-unit id="5f220e44779ac3f060625507947745b064f0bfa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-exists&quot;&gt;dba_exists()&lt;/a&gt; - Check whether key exists</source>
          <target state="translated">&lt;a href=&quot;function.dba-exists&quot;&gt;dba_exists ()&lt;/a&gt; -키가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="88e757b7852d5fdcde113b5d286118effbdc750e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-fetch&quot;&gt;dba_fetch()&lt;/a&gt; - Fetch data specified by key</source>
          <target state="translated">&lt;a href=&quot;function.dba-fetch&quot;&gt;dba_fetch ()&lt;/a&gt; -키로 지정된 데이터 페치</target>
        </trans-unit>
        <trans-unit id="4af02473e255ad63aee513f90e997b5c877c58fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-firstkey&quot;&gt;dba_firstkey()&lt;/a&gt; - Fetch first key</source>
          <target state="translated">&lt;a href=&quot;function.dba-firstkey&quot;&gt;dba_firstkey ()&lt;/a&gt; -첫 번째 키 페치</target>
        </trans-unit>
        <trans-unit id="a0d365c5edb383a596c9a1734283be3a0f08450b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-insert&quot;&gt;dba_insert()&lt;/a&gt; - Insert entry</source>
          <target state="translated">&lt;a href=&quot;function.dba-insert&quot;&gt;dba_insert ()&lt;/a&gt; -항목 삽입</target>
        </trans-unit>
        <trans-unit id="da885d730ce8add2193010cbdd3d73d7c69e228f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-key-split&quot;&gt;dba_key_split()&lt;/a&gt; - Splits a key in string representation into array representation</source>
          <target state="translated">&lt;a href=&quot;function.dba-key-split&quot;&gt;dba_key_split ()&lt;/a&gt; -문자열 표현의 키를 배열 표현으로 분할</target>
        </trans-unit>
        <trans-unit id="f5ac672239dbe336fec892264b18f89260c26b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-nextkey&quot;&gt;dba_nextkey()&lt;/a&gt; - Fetch next key</source>
          <target state="translated">&lt;a href=&quot;function.dba-nextkey&quot;&gt;dba_nextkey ()&lt;/a&gt; -다음 키 페치</target>
        </trans-unit>
        <trans-unit id="1121862593e756dab45ade20b10fa770522301b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-open&quot;&gt;dba_open()&lt;/a&gt; - Open database</source>
          <target state="translated">&lt;a href=&quot;function.dba-open&quot;&gt;dba_open ()&lt;/a&gt; -데이터베이스 열기</target>
        </trans-unit>
        <trans-unit id="498c5e4ec36ccfc28d5d791afc77fe122e8afb14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-optimize&quot;&gt;dba_optimize()&lt;/a&gt; - Optimize database</source>
          <target state="translated">&lt;a href=&quot;function.dba-optimize&quot;&gt;dba_optimize ()&lt;/a&gt; -데이터베이스 최적화</target>
        </trans-unit>
        <trans-unit id="b58b77ddd359353043fdaf4f6e9e7bee285b418b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-popen&quot;&gt;dba_popen()&lt;/a&gt; - Open database persistently</source>
          <target state="translated">&lt;a href=&quot;function.dba-popen&quot;&gt;dba_popen ()&lt;/a&gt; -지속적으로 데이터베이스 열기</target>
        </trans-unit>
        <trans-unit id="13895e71a1e23adc97e8e176d6736304d68dc939" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-replace&quot;&gt;dba_replace()&lt;/a&gt; - Replace or insert entry</source>
          <target state="translated">&lt;a href=&quot;function.dba-replace&quot;&gt;dba_replace ()&lt;/a&gt; -항목 교체 또는 삽입</target>
        </trans-unit>
        <trans-unit id="52124d17df19cdd39219efbf65ee737c25884e68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dba-sync&quot;&gt;dba_sync()&lt;/a&gt; - Synchronize database</source>
          <target state="translated">&lt;a href=&quot;function.dba-sync&quot;&gt;dba_sync ()&lt;/a&gt; -데이터베이스 동기화</target>
        </trans-unit>
        <trans-unit id="4ea10d45ccf11acb08d8fe7d9c2685ee101503da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dbx-close&quot;&gt;dbx_close()&lt;/a&gt; - Close an open connection/database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95232a1138458395efcc7ea32f006ed5240a19ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dbx-compare&quot;&gt;dbx_compare()&lt;/a&gt; - Compare two rows for sorting purposes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e78520ec6455790e55a78b668648d266e945ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dbx-connect&quot;&gt;dbx_connect()&lt;/a&gt; - Open a connection/database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485a2539f0a4415e43defbab118f76ca7dc812ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dbx-escape-string&quot;&gt;dbx_escape_string()&lt;/a&gt; - Escape a string so it can safely be used in an sql-statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d38ae0ef54f53a6f2599284d02a08b0d2c88456" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dbx-fetch-row&quot;&gt;dbx_fetch_row()&lt;/a&gt; - Fetches rows from a query-result that had the DBX_RESULT_UNBUFFERED flag set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750241a4da19dd2471f67366ce5282297368cd04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dbx-query&quot;&gt;dbx_query()&lt;/a&gt; - Send a query and fetch all results (if any)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab16c465aeaf74fe5fd89dfc7039e57734c88ce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dbx-sort&quot;&gt;dbx_sort()&lt;/a&gt; - Sort a result from a dbx_query by a custom sort function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26508cac2d1d631603096ec973d4a836a111e81a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.debug-backtrace&quot;&gt;debug_backtrace()&lt;/a&gt; - Generates a backtrace</source>
          <target state="translated">&lt;a href=&quot;function.debug-backtrace&quot;&gt;debug_backtrace ()&lt;/a&gt; -역 추적 생성</target>
        </trans-unit>
        <trans-unit id="726db001702f2029e22ce4c02ab61397823456c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.debug-print-backtrace&quot;&gt;debug_print_backtrace()&lt;/a&gt; - Prints a backtrace</source>
          <target state="translated">&lt;a href=&quot;function.debug-print-backtrace&quot;&gt;debug_print_backtrace ()&lt;/a&gt; -역 추적을 인쇄합니다</target>
        </trans-unit>
        <trans-unit id="48e487dc3c5e9aa7339175bb5d53d41088bda053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.debug-zval-dump&quot;&gt;debug_zval_dump()&lt;/a&gt; - Dumps a string representation of an internal zend value to output</source>
          <target state="translated">&lt;a href=&quot;function.debug-zval-dump&quot;&gt;debug_zval_dump ()&lt;/a&gt; -내부 zend 값의 문자열 표현을 덤프하여 출력</target>
        </trans-unit>
        <trans-unit id="d9cd58ab82766b3acddce91c9de493999518995b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.decbin&quot;&gt;decbin()&lt;/a&gt; - Decimal to binary</source>
          <target state="translated">&lt;a href=&quot;function.decbin&quot;&gt;decbin ()-10&lt;/a&gt; 진수를 2 진수로</target>
        </trans-unit>
        <trans-unit id="5ee1bb62237be6976de98c203f1a28755d004b13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dechex&quot;&gt;dechex()&lt;/a&gt; - Decimal to hexadecimal</source>
          <target state="translated">&lt;a href=&quot;function.dechex&quot;&gt;dechex ()-10&lt;/a&gt; 진수를 16 진수로</target>
        </trans-unit>
        <trans-unit id="7ba852b2173ad30152a1ebd3c3693a2b469b7134" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.decoct&quot;&gt;decoct()&lt;/a&gt; - Decimal to octal</source>
          <target state="translated">&lt;a href=&quot;function.decoct&quot;&gt;decoct ()-10&lt;/a&gt; 진수를 8 진수로</target>
        </trans-unit>
        <trans-unit id="429eb26f7d55e74fb82f5d3dc3262811a87d4df7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.define&quot;&gt;define()&lt;/a&gt; - Defines a named constant</source>
          <target state="translated">&lt;a href=&quot;function.define&quot;&gt;define ()&lt;/a&gt; -명명 된 상수를 정의</target>
        </trans-unit>
        <trans-unit id="abd8d5faee886e0ad327bf0db579a757fc0013a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.define&quot;&gt;define()&lt;/a&gt; is notoriously slow. Since the main benefit of APC is to increase the performance of scripts/applications, this mechanism is provided to streamline the process of mass constant definition. However, this function does not perform as well as anticipated.</source>
          <target state="translated">&lt;a href=&quot;function.define&quot;&gt;define ()&lt;/a&gt; 이 너무 느리다. APC의 주요 이점은 스크립트 / 애플리케이션의 성능을 높이는 것이므로이 메커니즘은 대량 상수 정의 프로세스를 간소화하기 위해 제공됩니다. 그러나이 기능은 예상대로 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a824c7844b16499dfb3adce2494cbd10352c83d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.defined&quot;&gt;defined()&lt;/a&gt; - Checks whether a given named constant exists</source>
          <target state="translated">&lt;a href=&quot;function.defined&quot;&gt;defined ()&lt;/a&gt; -주어진 명명 된 상수가 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="874075279cba392ff3ca1816d27971dd3c7a4532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.deflate-add&quot;&gt;deflate_add()&lt;/a&gt; - Incrementally deflate data</source>
          <target state="translated">&lt;a href=&quot;function.deflate-add&quot;&gt;deflate_add ()&lt;/a&gt; -증분 적으로 데이터 디플레이션</target>
        </trans-unit>
        <trans-unit id="f7e68c6046a8915fba62d75bbba0d1ba39744fc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.deflate-init&quot;&gt;deflate_init()&lt;/a&gt; - Initialize an incremental deflate context</source>
          <target state="translated">&lt;a href=&quot;function.deflate-init&quot;&gt;deflate_init ()&lt;/a&gt; -증분 수축 컨텍스트 초기화</target>
        </trans-unit>
        <trans-unit id="f046bea061b0aed2b39a5074dbb36d63bdd54b12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.deg2rad&quot;&gt;deg2rad()&lt;/a&gt; - Converts the number in degrees to the radian equivalent</source>
          <target state="translated">&lt;a href=&quot;function.deg2rad&quot;&gt;deg2rad ()&lt;/a&gt; -숫자를도 단위로 라디안으로 변환합니다</target>
        </trans-unit>
        <trans-unit id="cebce771786c61b33e86618bb4ea135ab9ace3c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dio-close&quot;&gt;dio_close()&lt;/a&gt; - Closes the file descriptor given by fd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84b54f939bc3d7b10a3faf645909c494e62a7df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dio-open&quot;&gt;dio_open()&lt;/a&gt; - Opens a file (creating it if necessary) at a lower level than the C library input/ouput stream functions allow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf6977177e45074c065aecdb76f8cd78e65148c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dio-read&quot;&gt;dio_read()&lt;/a&gt; - Reads bytes from a file descriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432e4d4aef056c7830e51316661832098aa53bc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dio-write&quot;&gt;dio_write()&lt;/a&gt; - Writes data to fd with optional truncation at length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79f9d9b7b84a8de47364c5a3ac56a94926f4a3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dir&quot;&gt;dir()&lt;/a&gt; - Return an instance of the Directory class</source>
          <target state="translated">&lt;a href=&quot;function.dir&quot;&gt;dir ()-Directory&lt;/a&gt; 클래스의 인스턴스를 반환</target>
        </trans-unit>
        <trans-unit id="7d82384f9fe8c95fb646c54fd8be48c26b58a5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dirname&quot;&gt;dirname()&lt;/a&gt; - Returns a parent directory's path</source>
          <target state="translated">&lt;a href=&quot;function.dirname&quot;&gt;dirname ()&lt;/a&gt; -부모 디렉토리의 경로를 반환</target>
        </trans-unit>
        <trans-unit id="b9903bf3d9a9f9a240dbabfef303bd724437207a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.disk-free-space&quot;&gt;disk_free_space()&lt;/a&gt; - Returns available space on filesystem or disk partition</source>
          <target state="translated">&lt;a href=&quot;function.disk-free-space&quot;&gt;disk_free_space ()&lt;/a&gt; -파일 시스템 또는 디스크 파티션에서 사용 가능한 공간을 반환합니다</target>
        </trans-unit>
        <trans-unit id="a712b7946f305d51bdd01e698bab7d2ea1fd58ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.disk-total-space&quot;&gt;disk_total_space()&lt;/a&gt; - Returns the total size of a filesystem or disk partition</source>
          <target state="translated">&lt;a href=&quot;function.disk-total-space&quot;&gt;disk_total_space ()&lt;/a&gt; -파일 시스템 또는 디스크 파티션의 전체 크기를 반환합니다</target>
        </trans-unit>
        <trans-unit id="f5173cc1e3a3fe1dc1be2b9ae6a107d240233d22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dl&quot;&gt;dl()&lt;/a&gt; - Loads a PHP extension at runtime</source>
          <target state="translated">&lt;a href=&quot;function.dl&quot;&gt;dl ()&lt;/a&gt; -런타임에 PHP 확장을로드합니다</target>
        </trans-unit>
        <trans-unit id="cd007ac176eefb23ad175d01b9f61d13f8f4f2c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dns-check-record&quot;&gt;dns_check_record()&lt;/a&gt; - Alias of checkdnsrr</source>
          <target state="translated">&lt;a href=&quot;function.dns-check-record&quot;&gt;dns_check_record ()-checkdnsrr의&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="d340fb7560c744e0226d48019cbcccd3638f9955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dns-get-mx&quot;&gt;dns_get_mx()&lt;/a&gt; - Alias of getmxrr</source>
          <target state="translated">&lt;a href=&quot;function.dns-get-mx&quot;&gt;dns_get_mx ()-getmxrr의&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="4eec82d8e64197bf3b3ae53985d37057ab48453e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dns-get-record&quot;&gt;dns_get_record()&lt;/a&gt; - Fetch DNS Resource Records associated with a hostname</source>
          <target state="translated">&lt;a href=&quot;function.dns-get-record&quot;&gt;dns_get_record ()&lt;/a&gt; -호스트 이름과 관련된 DNS 리소스 레코드를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="85e64d343ec411f731fab635b264cb324b638fd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.dom-import-simplexml&quot;&gt;dom_import_simplexml()&lt;/a&gt; - Gets a DOMElement object from a SimpleXMLElement object</source>
          <target state="translated">&lt;a href=&quot;function.dom-import-simplexml&quot;&gt;dom_import_simplexml ()-SimpleXMLElement&lt;/a&gt; 객체에서 DOMElement 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="191e84e4a1014adcd6ec495de6a26b0bcd50ce25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.each&quot;&gt;each()&lt;/a&gt; - Return the current key and value pair from an array and advance the array cursor</source>
          <target state="translated">&lt;a href=&quot;function.each&quot;&gt;each ()&lt;/a&gt; -배열에서 현재 키와 값 쌍을 반환하고 배열 커서를 전진시킵니다.</target>
        </trans-unit>
        <trans-unit id="8cfe5db3b59d6959febc40f02f6a947964b19714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.easter-date&quot;&gt;easter_date()&lt;/a&gt; - Get Unix timestamp for midnight on Easter of a given year</source>
          <target state="translated">&lt;a href=&quot;function.easter-date&quot;&gt;easter_date ()&lt;/a&gt; -주어진 부활절에 자정에 대한 유닉스 타임 스탬프를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="34b8181e5cd5522bb95faa1a94cdf7a195ab1742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.easter-days&quot;&gt;easter_days()&lt;/a&gt; - Get number of days after March 21 on which Easter falls for a given year for calculating Easter before 1970 or after 2037</source>
          <target state="translated">&lt;a href=&quot;function.easter-days&quot;&gt;easter_days ()&lt;/a&gt; -3 월 21 일 이후 부활절이 1970 년 이전 또는 2037 년 이후에 부활절을 계산하기 위해 주어진 해에 해당하는 일 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a8525ffc3d46cadae46cfff7c3570ab14d5c2dd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; - Output one or more strings</source>
          <target state="translated">&lt;a href=&quot;function.echo&quot;&gt;echo-&lt;/a&gt; 하나 이상의 문자열을 출력</target>
        </trans-unit>
        <trans-unit id="cc1379bb7562e2890cda581fc28c7487a2ce6a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-busy&quot;&gt;eio_busy()&lt;/a&gt; - Artificially increase load. Could be useful in tests, benchmarking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1af433f25aadcaa464bf7ef16df19f894217b4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-busy&quot;&gt;eio_busy()&lt;/a&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;a href=&quot;function.eio-busy&quot;&gt;eio_busy ()&lt;/a&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9d5a1e05eb5e6847b1663be3ba67021924c73469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-busy&quot;&gt;eio_busy()&lt;/a&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba3ad0be1797a6db14b6d1c8470a37e6a5b6a45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-chmod&quot;&gt;eio_chmod()&lt;/a&gt; - Change file/directory permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbccd0003ff2fd4c5cb3ba4a95977733640289ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-chown&quot;&gt;eio_chown()&lt;/a&gt; - Change file/directory permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2728b8f38ddfb37fea70f8517970bb2845c8a422" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-close&quot;&gt;eio_close()&lt;/a&gt; - Close file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d920a28db34cae797ed13b6bfd0f8883f08852e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-event-loop&quot;&gt;eio_event_loop()&lt;/a&gt; - Polls libeio until all requests proceeded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e491ac0b7492960c9a16af9eb4afe23151f0b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-fchmod&quot;&gt;eio_fchmod()&lt;/a&gt; - Change file permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39496238408acfe2de74bc1bdfba423ffc89fa6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-fchown&quot;&gt;eio_fchown()&lt;/a&gt; - Change file ownership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d60c9e7b0bdcaffa4868b896ed9d7667770dcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-fstat&quot;&gt;eio_fstat()&lt;/a&gt; - Get file status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1170ecf1cd2e7fa9a6fcb0d5b237c7cac6dbdcf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-ftruncate&quot;&gt;eio_ftruncate()&lt;/a&gt; - Truncate a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b9c5bd920eb8ddf5b70927c0de23b1ef16f5cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-futime&quot;&gt;eio_futime()&lt;/a&gt; - Change file last access and modification times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bfbb29dc5c692fbf0523ccca8c08444eeac853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-grp&quot;&gt;eio_grp()&lt;/a&gt; - Creates a request group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423970c1755e5784b30c9d83c68437f2a016bd39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-grp-add&quot;&gt;eio_grp_add()&lt;/a&gt; - Adds a request to the request group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15604e1c2dfbbf745f71324f0a5ca4207eef4d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-grp-cancel&quot;&gt;eio_grp_cancel()&lt;/a&gt; - Cancels a request group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9db8b6ae28ef4041c631d25b20b258593acd3a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-grp-limit&quot;&gt;eio_grp_limit()&lt;/a&gt; - Set group limit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8ca9b52579bd15ee481dea7b0f6d33b0c6acdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-link&quot;&gt;eio_link()&lt;/a&gt; - Create a hardlink for file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e43419b4cdfc4fb290dc3c1cb0f3cdad67f969" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-lstat&quot;&gt;eio_lstat()&lt;/a&gt; - Get file status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93919adac2e919fdf36b2c0a3a3b8f601fd7f5a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-mkdir&quot;&gt;eio_mkdir()&lt;/a&gt; - Create directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b72dc3fed93bae5bf88563b540332d6be3d1ac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-mknod&quot;&gt;eio_mknod()&lt;/a&gt; - Create a special or ordinary file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9041188410908f25db9a3b62eaf9032c3ccf7edb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-nop&quot;&gt;eio_nop()&lt;/a&gt; - Does nothing, except go through the whole request cycle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14fdcbba5afe89d81e5c94930b85fcc299ae615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-npending&quot;&gt;eio_npending()&lt;/a&gt; - Returns number of finished, but unhandled requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e77813a2e71a28a99432c8e77dceb262414852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-nready&quot;&gt;eio_nready()&lt;/a&gt; - Returns number of not-yet handled requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94b71287a39fbc38c5912bdd8690713b9a8723e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-nreqs&quot;&gt;eio_nreqs()&lt;/a&gt; - Returns number of requests to be processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681b423134b6742e4345003ce18cd6af0f5fdc53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-nthreads&quot;&gt;eio_nthreads()&lt;/a&gt; - Returns number of threads currently in use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e011bf054da9538cbc5c39d80e3a366e2f5ebb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-open&quot;&gt;eio_open()&lt;/a&gt; - Opens a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dbd4dfd3768d1b7b6cb5df6577db85eae25c86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-poll&quot;&gt;eio_poll()&lt;/a&gt; - Can be to be called whenever there are pending requests that need finishing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f0197f5d730fb1f33ddfe24f84dce17ea9186b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-rmdir&quot;&gt;eio_rmdir()&lt;/a&gt; - Remove a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b622246fc936101d3fee3af49f91560a362420f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-set-max-idle&quot;&gt;eio_set_max_idle()&lt;/a&gt; - Set maximum number of idle threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44e900fa43c10abf87d52907d08cd7e0b757d32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-set-max-parallel&quot;&gt;eio_set_max_parallel()&lt;/a&gt; - Set maximum parallel threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0cdd19cc1b0a392c52636bc9354ed0f1ba5b20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-set-min-parallel&quot;&gt;eio_set_min_parallel()&lt;/a&gt; - Set minimum parallel thread number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eaf9b741493f37d4f51667c81539c77c945e6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-stat&quot;&gt;eio_stat()&lt;/a&gt; - Get file status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf367b15ac954da3ba8fdc7f5b0304b3c3391c05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-statvfs&quot;&gt;eio_statvfs()&lt;/a&gt; - Get file system statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a097850c1da269c497d85386fe8c80d20ea640" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-symlink&quot;&gt;eio_symlink()&lt;/a&gt; - Create a symbolic link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd60b74052a042f1a30b325d10c824d4436ff2c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-sync&quot;&gt;eio_sync()&lt;/a&gt; - Commit buffer cache to disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fc51f381ea1d57d313097474e31425320bc8e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-truncate&quot;&gt;eio_truncate()&lt;/a&gt; - Truncate a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313e3369247eb1cb412e8e70057ba2b061432552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-utime&quot;&gt;eio_utime()&lt;/a&gt; - Change file last access and modification times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f616d2090adc0470e0f455e3e40d38f68053235c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eio-write&quot;&gt;eio_write()&lt;/a&gt; - Write to file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbf89d1c2806726f988da395c6e6d7f9819def0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.empty&quot;&gt;empty()&lt;/a&gt; - Determine whether a variable is empty</source>
          <target state="translated">&lt;a href=&quot;function.empty&quot;&gt;empty ()&lt;/a&gt; -변수가 비어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="452b7d62e8085defcf82a19753d2441c0217a180" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-describe&quot;&gt;enchant_broker_describe()&lt;/a&gt; - Enumerates the Enchant providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28aa017a299ca8c7f1d5773b16ff162e27034502" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-dict-exists&quot;&gt;enchant_broker_dict_exists()&lt;/a&gt; - Whether a dictionary exists or not. Using non-empty tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8330144f06291fcede45749535576cca19f963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-free&quot;&gt;enchant_broker_free()&lt;/a&gt; - Free the broker resource and its dictionaries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4db726559c1157211d117b3591cb2382b57c7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-free-dict&quot;&gt;enchant_broker_free_dict()&lt;/a&gt; - Free a dictionary resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd1942eef7e4a7dcfc084a6b530685085f2a164" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-get-dict-path&quot;&gt;enchant_broker_get_dict_path()&lt;/a&gt; - Get the directory path for a given backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157dd899ebceeab3df8b2b99c1aacf1831498758" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-init&quot;&gt;enchant_broker_init()&lt;/a&gt; - Create a new broker object capable of requesting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6846c8881e662f5a909c3d3a4b67135b78efcae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-request-dict&quot;&gt;enchant_broker_request_dict()&lt;/a&gt; - Create a new dictionary using a tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb40dd830c5f648957919b86234c0b37f3224271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-request-pwl-dict&quot;&gt;enchant_broker_request_pwl_dict()&lt;/a&gt; - Creates a dictionary using a PWL file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe782299eb72a3d3c6b13a350d71863a0234743f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-broker-set-dict-path&quot;&gt;enchant_broker_set_dict_path()&lt;/a&gt; - Set the directory path for a given backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305cd7f878a616f9ebb356a5d7666228c9f019bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-dict-add-to-session&quot;&gt;enchant_dict_add_to_session()&lt;/a&gt; - Add 'word' to this spell-checking session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3eee356c8cb587cc54c9bb1e45ff0f74e4168b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-dict-check&quot;&gt;enchant_dict_check()&lt;/a&gt; - Check whether a word is correctly spelled or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9e15ab0b53c405675f0dbc8195ace945cfeb1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-dict-describe&quot;&gt;enchant_dict_describe()&lt;/a&gt; - Describes an individual dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4c1d2277d360e43ace8013ebe8f76b382a5fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-dict-quick-check&quot;&gt;enchant_dict_quick_check()&lt;/a&gt; - Check the word is correctly spelled and provide suggestions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846cac2fbc536814d828d335342c938c79eb9ffc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.enchant-dict-suggest&quot;&gt;enchant_dict_suggest()&lt;/a&gt; - Will return a list of values if any of those pre-conditions are not met</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b562047bb057e1741608edc139b2c51460a84a11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.end&quot;&gt;end()&lt;/a&gt; - Set the internal pointer of an array to its last element</source>
          <target state="translated">&lt;a href=&quot;function.end&quot;&gt;end ()&lt;/a&gt; -배열의 내부 포인터를 마지막 요소로 설정</target>
        </trans-unit>
        <trans-unit id="dcf1730d8acc72b20f21ffe3493a0863ab932ec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ereg&quot;&gt;ereg()&lt;/a&gt; - Regular expression match</source>
          <target state="translated">&lt;a href=&quot;function.ereg&quot;&gt;ereg ()&lt;/a&gt; -정규식 일치</target>
        </trans-unit>
        <trans-unit id="14266c1cc6d63a4e79fd6d3ef29a7699cad272cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.ereg-replace&quot;&gt;ereg_replace()&lt;/a&gt; - Replace regular expression</source>
          <target state="translated">&lt;a href=&quot;function.ereg-replace&quot;&gt;ereg_replace ()&lt;/a&gt; -정규식 바꾸기</target>
        </trans-unit>
        <trans-unit id="051cffc34ceeeeb8ada96f4c270e97c17df79ffa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eregi&quot;&gt;eregi()&lt;/a&gt; - Case insensitive regular expression match</source>
          <target state="translated">&lt;a href=&quot;function.eregi&quot;&gt;eregi ()&lt;/a&gt; -대소 문자를 구분하지 않는 정규식 일치</target>
        </trans-unit>
        <trans-unit id="03d811abcab45941e3d290577aa86d25ab2e7627" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eregi-replace&quot;&gt;eregi_replace()&lt;/a&gt; - Replace regular expression case insensitive</source>
          <target state="translated">&lt;a href=&quot;function.eregi-replace&quot;&gt;eregi_replace ()&lt;/a&gt; -대소 문자를 구분하지 않는 정규식 바꾸기</target>
        </trans-unit>
        <trans-unit id="07ed97ad676f565eb80b04e117d51e935bd99df0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.error-clear-last&quot;&gt;error_clear_last()&lt;/a&gt; - Clear the most recent error</source>
          <target state="translated">&lt;a href=&quot;function.error-clear-last&quot;&gt;error_clear_last ()&lt;/a&gt; -가장 최근의 오류를 지 웁니다</target>
        </trans-unit>
        <trans-unit id="128ae125d289182a7e5cbb2f76fe4a83ad2e2125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.error-get-last&quot;&gt;error_get_last()&lt;/a&gt; - Get the last occurred error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47191352189b7cf084c3f1515d0ae76ac05e8702" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.error-reporting&quot;&gt;error_reporting()&lt;/a&gt; - Sets which PHP errors are reported</source>
          <target state="translated">&lt;a href=&quot;function.error-reporting&quot;&gt;error_reporting ()&lt;/a&gt; -보고되는 PHP 오류를 설정합니다</target>
        </trans-unit>
        <trans-unit id="58615ec2cace062c5aab6f4234a61c5f6b74a263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.escapeshellarg&quot;&gt;escapeshellarg()&lt;/a&gt; - Escape a string to be used as a shell argument</source>
          <target state="translated">&lt;a href=&quot;function.escapeshellarg&quot;&gt;escapeshellarg ()&lt;/a&gt; -쉘 인수로 사용될 문자열을 이스케이프</target>
        </trans-unit>
        <trans-unit id="627cfe5f7e9db376b4fd37c17cca758dbd4f9734" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.escapeshellcmd&quot;&gt;escapeshellcmd()&lt;/a&gt; - Escape shell metacharacters</source>
          <target state="translated">&lt;a href=&quot;function.escapeshellcmd&quot;&gt;escapeshellcmd ()&lt;/a&gt; -이스케이프 쉘 메타 문자</target>
        </trans-unit>
        <trans-unit id="303549e8049929b38d3ff9b308cb0a12ee26b236" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.eval&quot;&gt;eval()&lt;/a&gt; resulting code</source>
          <target state="translated">&lt;a href=&quot;function.eval&quot;&gt;eval ()&lt;/a&gt; 결과 코드</target>
        </trans-unit>
        <trans-unit id="2b45d5f91292900466869cc73b54cd6a007374f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.exec&quot;&gt;exec()&lt;/a&gt; - Execute an external program</source>
          <target state="translated">&lt;a href=&quot;function.exec&quot;&gt;exec ()&lt;/a&gt; -외부 프로그램 실행</target>
        </trans-unit>
        <trans-unit id="b3f71d74175f895d9b42a1f94fe7af3bfeb4b7b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.exif-imagetype&quot;&gt;exif_imagetype()&lt;/a&gt; - Determine the type of an image</source>
          <target state="translated">&lt;a href=&quot;function.exif-imagetype&quot;&gt;exif_imagetype ()&lt;/a&gt; -이미지 유형 결정</target>
        </trans-unit>
        <trans-unit id="9b3ccf759ded9eb78a9f40d59ec6b50c9bbdcba1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.exif-read-data&quot;&gt;exif_read_data()&lt;/a&gt; - Reads the EXIF headers from an image file</source>
          <target state="translated">&lt;a href=&quot;function.exif-read-data&quot;&gt;exif_read_data ()&lt;/a&gt; -이미지 파일에서 EXIF ​​헤더를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="6ca78feabe1692c69fb1e149f6c0cb7814437c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.exif-thumbnail&quot;&gt;exif_thumbnail()&lt;/a&gt; - Retrieve the embedded thumbnail of an image</source>
          <target state="translated">&lt;a href=&quot;function.exif-thumbnail&quot;&gt;exif_thumbnail ()&lt;/a&gt; -이미지의 포함 된 썸네일 검색</target>
        </trans-unit>
        <trans-unit id="23b5afdf9409258b5ab8dc4cd5a678e161246ab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; - Output a message and terminate the current script</source>
          <target state="translated">&lt;a href=&quot;function.exit&quot;&gt;exit ()&lt;/a&gt; -메시지를 출력하고 현재 스크립트를 종료</target>
        </trans-unit>
        <trans-unit id="22b0ab1951f4eab2f8d28c9aea9f4c804885e0a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.exp&quot;&gt;exp()&lt;/a&gt; - Calculates the exponent of e</source>
          <target state="translated">&lt;a href=&quot;function.exp&quot;&gt;exp ()&lt;/a&gt; -e의 지수를 계산합니다</target>
        </trans-unit>
        <trans-unit id="bb183935765678335cacdbcaf9aabc4230495bbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.explode&quot;&gt;explode()&lt;/a&gt; - Split a string by a string</source>
          <target state="translated">&lt;a href=&quot;function.explode&quot;&gt;explode ()&lt;/a&gt; -문자열을 문자열로 나누기</target>
        </trans-unit>
        <trans-unit id="ab943d7f1174b08865cc743fdc6a4ffeda519a47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.expm1&quot;&gt;expm1()&lt;/a&gt; - Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero</source>
          <target state="translated">&lt;a href=&quot;function.expm1&quot;&gt;expm1 ()&lt;/a&gt; -exp (number ) -1을 반환합니다. number의 값이 0에 가까워도 정확한 방식으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="f2522a91dbcc9adcaa9d78ad983d7922e6e34cf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.extension-loaded&quot;&gt;extension_loaded()&lt;/a&gt; - Find out whether an extension is loaded</source>
          <target state="translated">&lt;a href=&quot;function.extension-loaded&quot;&gt;extension_loaded ()&lt;/a&gt; -확장이로드되었는지 확인</target>
        </trans-unit>
        <trans-unit id="6079ee4c482862ea06940a0750f2d82675bb0da9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.extract&quot;&gt;extract()&lt;/a&gt; - Import variables into the current symbol table from an array</source>
          <target state="translated">&lt;a href=&quot;function.extract&quot;&gt;extract ()&lt;/a&gt; -배열에서 변수를 현재 기호 테이블로 가져 오기</target>
        </trans-unit>
        <trans-unit id="87c04eb9031cab5ab87c8f8eb5c4dacf056fda5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-add-user&quot;&gt;fbird_add_user()&lt;/a&gt; - Alias of ibase_add_user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beffff21e49e50beeb2474e50d41510ea782ce11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-add&quot;&gt;fbird_blob_add()&lt;/a&gt; - Alias of ibase_blob_add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d941a3442f4da7c9c0519b338a73c7fa6339d8fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-cancel&quot;&gt;fbird_blob_cancel()&lt;/a&gt; - Cancel creating blob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d06e5af069229aea851fc52005db0be57ed2910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-close&quot;&gt;fbird_blob_close()&lt;/a&gt; - Alias of ibase_blob_close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505016c3114458316d1eb20e9228c0145dc49c3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-create&quot;&gt;fbird_blob_create()&lt;/a&gt; - Alias of ibase_blob_create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c1ba7dd24e49a5cccc99c21a39cc78c3b1466f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-echo&quot;&gt;fbird_blob_echo()&lt;/a&gt; - Alias of ibase_blob_echo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e227b1c01fa9c66fae290c2b035e668b6541c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-get&quot;&gt;fbird_blob_get()&lt;/a&gt; - Alias of ibase_blob_get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dc0403905c4b12a9166903efd81a8095cab699" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-import&quot;&gt;fbird_blob_import()&lt;/a&gt; - Alias of ibase_blob_import</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c57945e0792b6abaadeb5f298c3c933a7756a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-blob-open&quot;&gt;fbird_blob_open()&lt;/a&gt; - Alias of ibase_blob_open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11eeafbc809c8cbd147538d4a9e2bf0a76312de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-close&quot;&gt;fbird_close()&lt;/a&gt; - Alias of ibase_close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b092a927089782e76707ed5a24cd807dbeb13b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-connect&quot;&gt;fbird_connect()&lt;/a&gt; - Alias of ibase_connect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4cd1f6f73e1665ddc2e7fd6ef099fac1e8b691" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-delete-user&quot;&gt;fbird_delete_user()&lt;/a&gt; - Alias of ibase_delete_user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d6e6f93bd3722cb3b7edba55fa2a71d2a34434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-errcode&quot;&gt;fbird_errcode()&lt;/a&gt; - Alias of ibase_errcode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b381d4e9dd0ff017295791e43f4f8db9b5a0b76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-errmsg&quot;&gt;fbird_errmsg()&lt;/a&gt; - Alias of ibase_errmsg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38eef3ea66f9e59fa382e0f45fad4f3165ca044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-execute&quot;&gt;fbird_execute()&lt;/a&gt; - Alias of ibase_execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cc7adc5ab2201eadd6d0348c7d03dbf4d78658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-fetch-assoc&quot;&gt;fbird_fetch_assoc()&lt;/a&gt; - Alias of ibase_fetch_assoc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec507d446d933797070d093e052865db5f135bef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-fetch-object&quot;&gt;fbird_fetch_object()&lt;/a&gt; - Alias of ibase_fetch_object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e94f20c6159c34c0df1bc2b43314b23f0f877c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-fetch-row&quot;&gt;fbird_fetch_row()&lt;/a&gt; - Alias of ibase_fetch_row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee28614183317acd4b2c0cfc6817d72465c5a50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-field-info&quot;&gt;fbird_field_info()&lt;/a&gt; - Alias of ibase_field_info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54cb995f2b51101fad752ade3a07193781e7fca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-free-event-handler&quot;&gt;fbird_free_event_handler()&lt;/a&gt; - Alias of ibase_free_event_handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d79128f675dcdfac0c8e94dec4299ab798a79a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-free-result&quot;&gt;fbird_free_result()&lt;/a&gt; - Alias of ibase_free_result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bede2eee6671635b2a785f7c0404bc53211fffa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-modify-user&quot;&gt;fbird_modify_user()&lt;/a&gt; - Alias of ibase_modify_user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59833279000f330d2ba74b64019f2c65d7f132ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-num-fields&quot;&gt;fbird_num_fields()&lt;/a&gt; - Alias of ibase_num_fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4dc0c63ee6b38cf5ee25e9ea2621ceb10fc887" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-num-params&quot;&gt;fbird_num_params()&lt;/a&gt; - Alias of ibase_num_params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224ac719c73976d1db523bf923b7a6164880fe42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-param-info&quot;&gt;fbird_param_info()&lt;/a&gt; - Alias of ibase_param_info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d35c6310d437ac4e8869cfa540056a53b55009c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-pconnect&quot;&gt;fbird_pconnect()&lt;/a&gt; - Alias of ibase_pconnect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133b62422f62de9b37f32c83afd4601e44c02344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-prepare&quot;&gt;fbird_prepare()&lt;/a&gt; - Alias of ibase_prepare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb17bd1f09915daade3075dc07e3f2a9e88b183b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-query&quot;&gt;fbird_query()&lt;/a&gt; - Alias of ibase_query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39f3a3195293c2c2c73d9871c563bf6cb80c0ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-set-event-handler&quot;&gt;fbird_set_event_handler()&lt;/a&gt; - Alias of ibase_set_event_handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6fd14f38b360fd576a87f0c2c5998d09a14714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fbird-wait-event&quot;&gt;fbird_wait_event()&lt;/a&gt; - Alias of ibase_wait_event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33f037e2c46588f781137ed6b97a89cf9e9fefa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fclose&quot;&gt;fclose()&lt;/a&gt; - Closes an open file pointer</source>
          <target state="translated">&lt;a href=&quot;function.fclose&quot;&gt;fclose ()&lt;/a&gt; -열린 파일 포인터를 닫습니다</target>
        </trans-unit>
        <trans-unit id="a3c084a3284422849270a9816f274dfe913e95a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-add-doc-javascript&quot;&gt;fdf_add_doc_javascript()&lt;/a&gt; - Adds javascript code to the FDF document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721728aa13b591eaacdb57cc73d94954348bf086" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-close&quot;&gt;fdf_close()&lt;/a&gt; - Close an FDF document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685112260be479256d320a617af82b5b444dabd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-create&quot;&gt;fdf_create()&lt;/a&gt; - Create a new FDF document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a2b3663cf4c8ba8bda56ae9df0d0a49f3fdf2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-errno&quot;&gt;fdf_errno()&lt;/a&gt; - Return error code for last fdf operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d759e2be039a60593ee546cafccaaa935adbb17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-error&quot;&gt;fdf_error()&lt;/a&gt; - Return error description for FDF error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e9dd381d7b5db6f97720fe4c96c9e32374c247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-get-file&quot;&gt;fdf_get_file()&lt;/a&gt; - Get the value of the /F key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bae38f5e34967c476b8ddb0b58975a2d9643cff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-get-status&quot;&gt;fdf_get_status()&lt;/a&gt; - Get the value of the /STATUS key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb804e7b3fa87f97c5f3856c8d55bbfc7d38a0a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-get-value&quot;&gt;fdf_get_value()&lt;/a&gt; - Get the value of a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883a123743dfa82ece2ec929ab22d1ddc5082540" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-get-version&quot;&gt;fdf_get_version()&lt;/a&gt; - Gets version number for FDF API or file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b909c501c028a218b2b1edec5d0edb332689de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-open&quot;&gt;fdf_open()&lt;/a&gt; - Open a FDF document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf618eaa3b4e9cd3d6206a0c5731a24df3fc5a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-open-string&quot;&gt;fdf_open_string()&lt;/a&gt; - Read a FDF document from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397a12cffe22583e76178ba7153a841b6d50167b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-remove-item&quot;&gt;fdf_remove_item()&lt;/a&gt; - Sets target frame for form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93ca8902ab8cf0489947d8776f35aa2130bf26f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-save&quot;&gt;fdf_save()&lt;/a&gt; - Save a FDF document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c4463c4ebb34cac9eadcf70b75177d22a1ba4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-save-string&quot;&gt;fdf_save_string()&lt;/a&gt; - Returns the FDF document as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3d5d00b1c5dbb646c08cbf643f7942df62021b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-encoding&quot;&gt;fdf_set_encoding()&lt;/a&gt; - Sets FDF character encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694978e7cbc35303106b2588bb1a877658313d39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-file&quot;&gt;fdf_set_file()&lt;/a&gt; - Set PDF document to display FDF data in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff2a37397a755f5450f4c37961791afaa45e41d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-flags&quot;&gt;fdf_set_flags()&lt;/a&gt; - Sets a flag of a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffeda189a629429d7342d90ae2210b833553a88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-javascript-action&quot;&gt;fdf_set_javascript_action()&lt;/a&gt; - Sets an javascript action of a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16dd4676137428f2916f8a4151006c3db04b3d26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-opt&quot;&gt;fdf_set_opt()&lt;/a&gt; - Sets an option of a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d675e6422e5ce78d7c89d05b4a74f0433c3cadf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-status&quot;&gt;fdf_set_status()&lt;/a&gt; - Set the value of the /STATUS key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d97c5a0c405e2d50f8a94470d37460a98d764b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-submit-form-action&quot;&gt;fdf_set_submit_form_action()&lt;/a&gt; - Sets a submit form action of a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098f2b3c4858fb191a4ebb09db1e185fd591dc16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function.fdf-set-target-frame&quot;&gt;fdf_set_target_frame()&lt;/a&gt; - Set target frame for form display</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
