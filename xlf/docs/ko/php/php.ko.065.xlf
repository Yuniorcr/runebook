<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="f5ae18965915cc3bd39b1f864eed88524bb3f89a" translate="yes" xml:space="preserve">
          <source>V8JsException::getJsTrace</source>
          <target state="translated">V8JsException::getJsTrace</target>
        </trans-unit>
        <trans-unit id="43f0d4b895a4bd8186936b9df715441def777b0c" translate="yes" xml:space="preserve">
          <source>V8JsException::getJsTrace &amp;mdash; The getJsTrace purpose</source>
          <target state="translated">V8JsException :: getJsTrace &amp;mdash; getJsTrace 목적</target>
        </trans-unit>
        <trans-unit id="dbd09ab628a4062b7fe6eb6e58bfaad1db6463ed" translate="yes" xml:space="preserve">
          <source>V8JsException::getJsTrace &amp;rarr;</source>
          <target state="translated">V8JsException :: getJsTrace &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7f5b14bad0e6327323b86a9b550aff15c790f619" translate="yes" xml:space="preserve">
          <source>V8js &amp;rarr;</source>
          <target state="translated">V8js &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7f95fc54eb27ecca09795eebe38715f1f360d7de" translate="yes" xml:space="preserve">
          <source>Valid PHP code to be evaluated.</source>
          <target state="translated">평가할 유효한 PHP 코드.</target>
        </trans-unit>
        <trans-unit id="3325047102b341842421064879e1c796970d41af" translate="yes" xml:space="preserve">
          <source>Valid PHP stream resource. Must be castable to file descriptor.</source>
          <target state="translated">유효한 PHP 스트림 리소스. 파일 디스크립터로 캐스트 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="b62c9e689752a8c98a9571934fa8f793f7c59390" translate="yes" xml:space="preserve">
          <source>Valid PHP stream resource. The stream must be castable to file descriptor, so you most likely won't be able to use any of filtered streams.</source>
          <target state="translated">유효한 PHP 스트림 리소스. 스트림은 파일 디스크립터로 캐스트 가능해야하므로 필터링 된 스트림을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="29eccc1ff0263176dac874b265bd5f21e658dc02" translate="yes" xml:space="preserve">
          <source>Valid PHP stream, must be castable to file descriptor.</source>
          <target state="translated">유효한 PHP 스트림은 파일 디스크립터로 캐스트 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="da09f389e89ea8d2b1ef2d73dfa2673dee99f1c2" translate="yes" xml:space="preserve">
          <source>Valid Range for Julian Calendar 4713 B.C. to 9999 A.D.</source>
          <target state="translated">Julian Calendar 4713 BC ~ 9999 AD의 유효 범위</target>
        </trans-unit>
        <trans-unit id="2d4a53fd396af32bc96f5c7a2101a6ec3c78342b" translate="yes" xml:space="preserve">
          <source>Valid buffered event resource.</source>
          <target state="translated">유효한 버퍼 이벤트 자원.</target>
        </trans-unit>
        <trans-unit id="6bdfb2752b5ecd746838cc072b2b81d05780312f" translate="yes" xml:space="preserve">
          <source>Valid event base resource that needs to be re-initialized.</source>
          <target state="translated">다시 초기화해야하는 유효한 이벤트 기반 자원.</target>
        </trans-unit>
        <trans-unit id="7a731bbda702352c4580e5b020eefba04207a2af" translate="yes" xml:space="preserve">
          <source>Valid event base resource.</source>
          <target state="translated">유효한 이벤트 기반 자원.</target>
        </trans-unit>
        <trans-unit id="4daf7553591a0ce2773c07e890806ceeba9b798a" translate="yes" xml:space="preserve">
          <source>Valid event resource.</source>
          <target state="translated">유효한 이벤트 자원.</target>
        </trans-unit>
        <trans-unit id="21ac8f2056fac05926f631bb6ebba49a9791963a" translate="yes" xml:space="preserve">
          <source>Valid flags are:</source>
          <target state="translated">유효한 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5fe988c47717b6a4cea0b5ac9eb57c890052ab0b" translate="yes" xml:space="preserve">
          <source>Valid flags:</source>
          <target state="translated">유효한 플래그 :</target>
        </trans-unit>
        <trans-unit id="53160456f43239830f4d1753d64b303caf2abdfb" translate="yes" xml:space="preserve">
          <source>Valid property types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabbb10a2e3ac3d708e37562691fc4eae3841d04" translate="yes" xml:space="preserve">
          <source>Valid protocol options are: &lt;code&gt;CURLPROTO_HTTP&lt;/code&gt;, &lt;code&gt;CURLPROTO_HTTPS&lt;/code&gt;, &lt;code&gt;CURLPROTO_FTP&lt;/code&gt;, &lt;code&gt;CURLPROTO_FTPS&lt;/code&gt;, &lt;code&gt;CURLPROTO_SCP&lt;/code&gt;, &lt;code&gt;CURLPROTO_SFTP&lt;/code&gt;, &lt;code&gt;CURLPROTO_TELNET&lt;/code&gt;, &lt;code&gt;CURLPROTO_LDAP&lt;/code&gt;, &lt;code&gt;CURLPROTO_LDAPS&lt;/code&gt;, &lt;code&gt;CURLPROTO_DICT&lt;/code&gt;, &lt;code&gt;CURLPROTO_FILE&lt;/code&gt;, &lt;code&gt;CURLPROTO_TFTP&lt;/code&gt;, &lt;code&gt;CURLPROTO_ALL&lt;/code&gt;</source>
          <target state="translated">유효한 프로토콜 옵션은 다음과 같습니다 &lt;code&gt;CURLPROTO_HTTP&lt;/code&gt; , &lt;code&gt;CURLPROTO_HTTPS&lt;/code&gt; , &lt;code&gt;CURLPROTO_FTP&lt;/code&gt; , &lt;code&gt;CURLPROTO_FTPS&lt;/code&gt; , &lt;code&gt;CURLPROTO_SCP&lt;/code&gt; , &lt;code&gt;CURLPROTO_SFTP&lt;/code&gt; , &lt;code&gt;CURLPROTO_TELNET&lt;/code&gt; , &lt;code&gt;CURLPROTO_LDAP&lt;/code&gt; , &lt;code&gt;CURLPROTO_LDAPS&lt;/code&gt; , &lt;code&gt;CURLPROTO_DICT&lt;/code&gt; , &lt;code&gt;CURLPROTO_FILE&lt;/code&gt; , &lt;code&gt;CURLPROTO_TFTP&lt;/code&gt; , &lt;code&gt;CURLPROTO_ALL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70c5d8a507aab28372488ea4f55a733fec53abe7" translate="yes" xml:space="preserve">
          <source>Valid protocol options are: &lt;strong&gt;&lt;code&gt;CURLPROTO_HTTP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_HTTPS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_FTP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_FTPS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_SCP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_SFTP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_TELNET&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_LDAP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_LDAPS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_DICT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_FILE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_TFTP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_ALL&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681646fb9b84a2c215c71c06a6d065e0e56ad9a3" translate="yes" xml:space="preserve">
          <source>Valid types</source>
          <target state="translated">유효한 유형</target>
        </trans-unit>
        <trans-unit id="bf1d03ded40655b84831e5067855552774ae68a0" translate="yes" xml:space="preserve">
          <source>Valid values for &lt;code&gt;options&lt;/code&gt; are &lt;strong&gt;&lt;code&gt;SE_UID&lt;/code&gt;&lt;/strong&gt;, which causes the returned array to contain UIDs instead of messages sequence numbers.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 유효한 값 은 &lt;strong&gt; &lt;code&gt;SE_UID&lt;/code&gt; &lt;/strong&gt; 이며, 이로 인해 반환 된 배열에 메시지 순서 번호 대신 UID가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4f58e67064e38c7ad6cd3ffa709246a29a307245" translate="yes" xml:space="preserve">
          <source>Validate an input string. The string is parsed internally, thus this method is useful for the quick input validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2984d924c2168bef2e9cfa2a6db0187ff5cfc8" translate="yes" xml:space="preserve">
          <source>Validates a document based on a schema defined in the given string.</source>
          <target state="translated">주어진 문자열에 정의 된 스키마를 기반으로 문서의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="c046fe8919b4447a61974f3a6f089c0c5afe262f" translate="yes" xml:space="preserve">
          <source>Validates a document based on the given schema file.</source>
          <target state="translated">주어진 스키마 파일을 기반으로 문서의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="0627811679a1a92054bdf67061fcea755ee865b0" translate="yes" xml:space="preserve">
          <source>Validates a given session ID. A session ID is valid, if a session with that ID already exists. This function is automatically executed when a session is to be started, a session ID is supplied and &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode&quot;&gt;session.use_strict_mode&lt;/a&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418f6819c5ffb1211c975c3ecfb2ae0c443a6959" translate="yes" xml:space="preserve">
          <source>Validates an existing signed public key and challenge</source>
          <target state="translated">기존의 서명 된 공개 키 및 챌린지를 검증합니다.</target>
        </trans-unit>
        <trans-unit id="2e17429a69b06cdbfa2ded4ea072b427fa0e7e8e" translate="yes" xml:space="preserve">
          <source>Validates an existing signed public key and challenge issued from the &amp;lt;keygen&amp;gt; element</source>
          <target state="translated">&amp;lt;keygen&amp;gt; 요소에서 발행 된 기존의 서명 된 공개 키 및 인증 확인</target>
        </trans-unit>
        <trans-unit id="b4d9033c3d937423bdd6254f1b853dfc9dc76888" translate="yes" xml:space="preserve">
          <source>Validates the document based on its DTD.</source>
          <target state="translated">DTD를 기반으로 문서의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="1ae1b8e5576a90fb31296c5347c2a7f3f3e5ff86" translate="yes" xml:space="preserve">
          <source>Validates the supplied signed public key and challenge</source>
          <target state="translated">제공된 서명 된 공개 키 및 인증 확인</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="68cbc83afcfbf3493da828a916e45f40c348b86a" translate="yes" xml:space="preserve">
          <source>Value description</source>
          <target state="translated">값 설명</target>
        </trans-unit>
        <trans-unit id="fce9afe3889cf30a986d96bfd0b5749023f13ab8" translate="yes" xml:space="preserve">
          <source>Value of &lt;code&gt;quick_print&lt;/code&gt; within the NET-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c74eb751a5f1f9679f9e4cf514d1101b5c3c80" translate="yes" xml:space="preserve">
          <source>Value of a variable to store. &lt;code&gt;Value&lt;/code&gt; supports all data types except resources, such as file handles. This paramter is ignored if first argument is an array. A general guidance is to pass &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; as &lt;code&gt;value&lt;/code&gt; while using array as &lt;code&gt;key&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is an object, or an array containing objects, then the objects will be serialized. See &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; for details on serializing objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1834f00f3861f921aeba4b89754ef47632604ae4" translate="yes" xml:space="preserve">
          <source>Value of alpha component.</source>
          <target state="translated">알파 성분의 값.</target>
        </trans-unit>
        <trans-unit id="a54ded7e40da38f8c6c98f6eb4fae037328404a8" translate="yes" xml:space="preserve">
          <source>Value of blue component.</source>
          <target state="translated">청색 성분의 값.</target>
        </trans-unit>
        <trans-unit id="4000d9420187faf70e3d2ed631b56b599b769016" translate="yes" xml:space="preserve">
          <source>Value of errno in the case of a GEARMAN_ERRNO return value.</source>
          <target state="translated">GEARMAN_ERRNO 리턴 값의 경우 errno 값.</target>
        </trans-unit>
        <trans-unit id="16fd3ac7f470313649de4f3d1d9f3fc359d12e0d" translate="yes" xml:space="preserve">
          <source>Value of green component.</source>
          <target state="translated">녹색 성분의 가치.</target>
        </trans-unit>
        <trans-unit id="d6658aee4c906df33050aa490e035f1aa689fcbb" translate="yes" xml:space="preserve">
          <source>Value of parameter</source>
          <target state="translated">매개 변수의 값</target>
        </trans-unit>
        <trans-unit id="1b7ccd121635e2945b5a908e7613a836bab8f5c4" translate="yes" xml:space="preserve">
          <source>Value of red component.</source>
          <target state="translated">적색 성분의 값.</target>
        </trans-unit>
        <trans-unit id="1662a5a415aff631fd4d9522aa182c1067bb61db" translate="yes" xml:space="preserve">
          <source>Value of the &lt;code&gt;actor&lt;/code&gt; attribute of the SOAP header element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce1c33c1a3e36f41c1b151293c2f5c807e15cdd" translate="yes" xml:space="preserve">
          <source>Value of the &lt;code&gt;mustUnderstand&lt;/code&gt; attribute of the SOAP header element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed2b3ea55558386985a57db2a6a3971cb62f718" translate="yes" xml:space="preserve">
          <source>Value of the &lt;em&gt;actor&lt;/em&gt; attribute of the SOAP header element.</source>
          <target state="translated">SOAP 헤더 요소 의 &lt;em&gt;액터&lt;/em&gt; 속성 값</target>
        </trans-unit>
        <trans-unit id="fa1eae74f3414de52c3a2c02b4948af5f9703b4b" translate="yes" xml:space="preserve">
          <source>Value of the &lt;em&gt;mustUnderstand&lt;/em&gt; attribute of the SOAP header element.</source>
          <target state="translated">SOAP 헤더 요소 의 &lt;em&gt;mustUnderstand&lt;/em&gt; 속성 값</target>
        </trans-unit>
        <trans-unit id="612b3460868a4b0c621208594340361c73ffd003" translate="yes" xml:space="preserve">
          <source>Value of the constant with the name &lt;code&gt;name&lt;/code&gt;. Returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the constant was not found in the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414f94c4f7fca72ce02c2d614cc1d9a1fb5a7249" translate="yes" xml:space="preserve">
          <source>Value of the constant.</source>
          <target state="translated">상수 값.</target>
        </trans-unit>
        <trans-unit id="cfd7041f9dbd11a16e90cb4fc9da6d3fe7b3e9d5" translate="yes" xml:space="preserve">
          <source>Value of the parameter</source>
          <target state="translated">매개 변수의 값</target>
        </trans-unit>
        <trans-unit id="b3d9219b8263ef99378a682bd45b10d23a907380" translate="yes" xml:space="preserve">
          <source>Value of the requested variable on success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the filter fails, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if the &lt;code&gt;variable_name&lt;/code&gt; variable is not set. If the flag &lt;strong&gt;&lt;code&gt;FILTER_NULL_ON_FAILURE&lt;/code&gt;&lt;/strong&gt; is used, it returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the variable is not set and &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if the filter fails.</source>
          <target state="translated">성공시 요청 된 변수의 값 , 필터가 실패하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; , &lt;code&gt;variable_name&lt;/code&gt; 변수가 설정되지 않은 경우 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FILTER_NULL_ON_FAILURE&lt;/code&gt; &lt;/strong&gt; 플래그 가 사용되면 변수가 설정되지 않으면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; , 필터가 실패하면 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을 리턴&lt;/strong&gt; 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="932bd228083feaab286e939af09b686afb0a8dc2" translate="yes" xml:space="preserve">
          <source>Value of the requested variable on success, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the filter fails, or &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; if the &lt;code&gt;var_name&lt;/code&gt; variable is not set. If the flag &lt;strong&gt;&lt;code&gt;FILTER_NULL_ON_FAILURE&lt;/code&gt;&lt;/strong&gt; is used, it returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the variable is not set and &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; if the filter fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240cab1058b19493dacd00b27b6145f10fecf38f" translate="yes" xml:space="preserve">
          <source>Value to assign to specified &lt;code&gt;property&lt;/code&gt;. Refer to the description of &lt;code&gt;property&lt;/code&gt; for a description of the value(s) expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f921724281f7ac6ebb7a170d8f79956e750b48" translate="yes" xml:space="preserve">
          <source>Value to assign to the constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dac4d340683484fde8c5d00c6af1bdb0a3b15d" translate="yes" xml:space="preserve">
          <source>Value to check.</source>
          <target state="translated">확인할 값입니다.</target>
        </trans-unit>
        <trans-unit id="bf173a326df9ec4d357089865d31df2c58fc311d" translate="yes" xml:space="preserve">
          <source>Value to filter. Note that scalar values are &lt;a href=&quot;language.types.string#language.types.string.casting&quot;&gt;converted to string&lt;/a&gt; internally before they are filtered.</source>
          <target state="translated">필터링 할 값입니다. 스칼라 값 은 필터링되기 전에 내부적 &lt;a href=&quot;language.types.string#language.types.string.casting&quot;&gt;으로 문자열로 변환됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1f779f4287b22d1e3f7e4abacbb95f51b6e20be" translate="yes" xml:space="preserve">
          <source>Value to format. This may be a &lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt; object, an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object, a numeric type representing a (possibly fractional) number of seconds since epoch or an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; in the format output by &lt;a href=&quot;function.localtime&quot;&gt;localtime()&lt;/a&gt;.</source>
          <target state="translated">형식화 할 값입니다. 이것은 &lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt; 객체, &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; 객체, epoch 이후의 초 수를 나타내는 숫자 유형 또는 &lt;a href=&quot;function.localtime&quot;&gt;localtime ()에&lt;/a&gt; 의해 출력되는 형식 의 &lt;a href=&quot;language.types.array&quot;&gt;배열 일 수&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="3683e8dc309af35cd71e9db09b914b44f5a474fd" translate="yes" xml:space="preserve">
          <source>Value to format. This may be a &lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt; object, an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object, a numeric type representing a (possibly fractional) number of seconds since epoch or an array in the format output by &lt;a href=&quot;function.localtime&quot;&gt;localtime()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0f56dcfa18a599bfe04002849c473fd9ca7514" translate="yes" xml:space="preserve">
          <source>Value to pad if &lt;code&gt;array&lt;/code&gt; is less than &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb90ba5231e4c96dc023d8cb495dc5e28abf388f" translate="yes" xml:space="preserve">
          <source>Value to pad if &lt;code&gt;array&lt;/code&gt; is less than &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 이 &lt;code&gt;size&lt;/code&gt; 보다 작은 경우 채울 값 입니다.</target>
        </trans-unit>
        <trans-unit id="0297d6ed8211f6965dd504b2fc27fff82e04e50c" translate="yes" xml:space="preserve">
          <source>Value to send into the generator. This value will be the return value of the &lt;a href=&quot;language.generators.syntax#control-structures.yield&quot;&gt;yield&lt;/a&gt; expression the generator is currently at.</source>
          <target state="translated">생성기로 보낼 값입니다. 이 값은 생성기가 현재 있는 &lt;a href=&quot;language.generators.syntax#control-structures.yield&quot;&gt;항복&lt;/a&gt; 식의 반환 값입니다 .</target>
        </trans-unit>
        <trans-unit id="df1f9101edc12a5c3fc5d3bf84871342cf478afb" translate="yes" xml:space="preserve">
          <source>Value to set the type</source>
          <target state="translated">유형을 설정하는 값</target>
        </trans-unit>
        <trans-unit id="01c81955df1d65cecd4bef8bc3e2f65489b4adeb" translate="yes" xml:space="preserve">
          <source>Value to set, either float, or an array of floats as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2bd0d87fcfe1d4c84f4e843cc03debf8dc001b" translate="yes" xml:space="preserve">
          <source>Value to use for filling</source>
          <target state="translated">충전에 사용할 가치</target>
        </trans-unit>
        <trans-unit id="2139d78e43cf42b8c7904885f78e1c7edc3cb901" translate="yes" xml:space="preserve">
          <source>Value:</source>
          <target state="translated">Value:</target>
        </trans-unit>
        <trans-unit id="ca5e1888f7ff9f4679a3377b455596a48d014681" translate="yes" xml:space="preserve">
          <source>ValueError</source>
          <target state="translated">ValueError</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="9ae8e9e5dc658bbd4434e228ed50d89cdc9a6254" translate="yes" xml:space="preserve">
          <source>Values are returned by using the optional return statement. Any type may be returned, including arrays and objects. This causes the function to end its execution immediately and pass control back to the line from which it was called. See &lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt; for more information.</source>
          <target state="translated">선택적 return 문을 사용하여 값을 반환합니다. 배열과 객체를 포함한 모든 유형이 반환 될 수 있습니다. 이로 인해 함수가 즉시 실행을 종료하고 호출 된 라인으로 제어권을 다시 전달합니다. 자세한 내용은 &lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1171bfb01d6d174dda7454605e2dd593c78b7f8d" translate="yes" xml:space="preserve">
          <source>Values can be any type, including objects.</source>
          <target state="translated">값은 객체를 포함한 모든 유형이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b63925d22cc7faea6e84850935accaf093683dce" translate="yes" xml:space="preserve">
          <source>Values enclosed in double quotes can contain new lines.</source>
          <target state="translated">큰 따옴표로 묶은 값은 줄 바꾸기를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b8a1d25b6be25521b64323c1b4f37b3021a35c5" translate="yes" xml:space="preserve">
          <source>Values from the current instance will be kept.</source>
          <target state="translated">현재 인스턴스의 값이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="e4a60d05f4c6da4daeefbaf6ffee7d1009f4ce29" translate="yes" xml:space="preserve">
          <source>Values in the input array with numeric keys will be renumbered with incrementing keys starting from zero in the result array.</source>
          <target state="translated">숫자 배열이있는 입력 배열의 값은 결과 배열에서 0부터 시작하는 증분 키로 번호가 다시 매겨집니다.</target>
        </trans-unit>
        <trans-unit id="31be3cbe5f879807ce7b81c544fd6a8cfad2553b" translate="yes" xml:space="preserve">
          <source>Values in the input arrays with numeric keys will be renumbered with incrementing keys starting from zero in the result array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5f839cf91f33428f5ffbcd2d407ed121e2885e" translate="yes" xml:space="preserve">
          <source>Values intended for &lt;code&gt;bytea&lt;/code&gt; fields are not supported as parameters. Use &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea()&lt;/a&gt; instead, or use the large object functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debdbd60015052b5262a85a0a952efbf68c69635" translate="yes" xml:space="preserve">
          <source>Values intended for &lt;em&gt;bytea&lt;/em&gt; fields are not supported as parameters. Use &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea()&lt;/a&gt; instead, or use the large object functions.</source>
          <target state="translated">&lt;em&gt;bytea&lt;/em&gt; 필드 용 값 은 매개 변수로 지원되지 않습니다. 사용 &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea ()&lt;/a&gt; 대신에, 또는 대형 오브젝트 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5dbb58e12c6cb6ac20c4dcd560fa82a7e33b2dc7" translate="yes" xml:space="preserve">
          <source>Values of different types will be compared using the &lt;a href=&quot;language.operators.comparison&quot;&gt; standard comparison rules&lt;/a&gt;. For instance, a non-numeric &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; will be compared to an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; as though it were &lt;em&gt;0&lt;/em&gt;, but multiple non-numeric &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; values will be compared alphanumerically. The actual value returned will be of the original type with no conversion applied.</source>
          <target state="translated">다른 유형의 값은 &lt;a href=&quot;language.operators.comparison&quot;&gt;표준 비교 규칙을&lt;/a&gt; 사용하여 비교됩니다 . 예를 들어, 숫자가 아닌 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 은 &lt;em&gt;0&lt;/em&gt; 인 것처럼 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 와 비교 되지만 여러 숫자가 아닌 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 값은 영숫자로 비교됩니다. 반환 된 실제 값은 변환이 적용되지 않은 원래 유형입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a936d1a0dcda064e6ae8bdb3d94887129c3a0423" translate="yes" xml:space="preserve">
          <source>Values of different types will be compared using the &lt;a href=&quot;language.operators.comparison&quot;&gt; standard comparison rules&lt;/a&gt;. For instance, a non-numeric string will be compared to an int as though it were &lt;code&gt;0&lt;/code&gt;, but multiple non-numeric string values will be compared alphanumerically. The actual value returned will be of the original type with no conversion applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565a884b6e498c4327b5e53cea6026bfece7565a" translate="yes" xml:space="preserve">
          <source>Values of the current instance will be overwritten by those provided where keys are equal.</source>
          <target state="translated">키가 같은 경우 현재 인스턴스의 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="2b089b5e4ce06133e749632fa2960747bcda3de6" translate="yes" xml:space="preserve">
          <source>Values of type &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; are supported. If an object implements &lt;strong&gt;Ds\Hashable&lt;/strong&gt;, equality will be determined by the object's &lt;code&gt;equals&lt;/code&gt; function. If an object does not implement &lt;strong&gt;Ds\Hashable&lt;/strong&gt;, objects must be references to the same instance to be considered equal.</source>
          <target state="translated">&lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; 유형의 값 이 지원됩니다. 객체가 &lt;strong&gt;Ds \ Hashable을&lt;/strong&gt; 구현 하는 경우 객체의 &lt;code&gt;equals&lt;/code&gt; 함수에 의해 동등성이 결정됩니다 . 객체가 &lt;strong&gt;Ds \ Hashable을&lt;/strong&gt; 구현하지 않으면 동일한 인스턴스에 대한 참조가 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="6f0d800f4c9786656dea0dec2486a5acf8d0a375" translate="yes" xml:space="preserve">
          <source>Values of type object are supported. If an object implements &lt;strong&gt;Ds\Hashable&lt;/strong&gt;, equality will be determined by the object's &lt;code&gt;equals&lt;/code&gt; function. If an object does not implement &lt;strong&gt;Ds\Hashable&lt;/strong&gt;, objects must be references to the same instance to be considered equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8f825972ad06df69b99a28bcf7d663e544faf6" translate="yes" xml:space="preserve">
          <source>Values outside the valid range (0..255) will be bitwise and'ed with 255, which is equivalent to the following algorithm:</source>
          <target state="translated">유효한 범위 (0..255)를 벗어난 값은 비트 단위로 255로 지정되며 다음 알고리즘과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d30a47d37b8febfd59fdc1175f688528c67bbaa" translate="yes" xml:space="preserve">
          <source>Values passed to the constructor of the specified class. If the constructor of the specified class takes parameters, the ctorParams array must be supplied.</source>
          <target state="translated">지정된 클래스의 생성자에 전달 된 값입니다. 지정된 클래스의 생성자가 매개 변수를 사용하는 경우 ctorParams 배열을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9c216482c1c188bf640badc3c9e83a852ae8f9c" translate="yes" xml:space="preserve">
          <source>Values to add to the set.</source>
          <target state="translated">세트에 추가 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="0d50d3e3526173cec78db6f4eb1adad6befff92a" translate="yes" xml:space="preserve">
          <source>Values to check.</source>
          <target state="translated">확인할 값입니다.</target>
        </trans-unit>
        <trans-unit id="4dec07826947357fbcfb6297a825e7c91d25e02f" translate="yes" xml:space="preserve">
          <source>Values will always be indexed as [0, 1, 2, &amp;hellip;, size - 1].</source>
          <target state="translated">값은 항상 [0, 1, 2,&amp;hellip;, size-1]로 색인됩니다.</target>
        </trans-unit>
        <trans-unit id="7bcbc5ede52a3917dbc4b333d49d60ec317d408e" translate="yes" xml:space="preserve">
          <source>Values will be compared by value and by type.</source>
          <target state="translated">값은 값과 유형별로 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="8f0a54d5cde6e441e00f43dbc1ba8ab388fba9f5" translate="yes" xml:space="preserve">
          <source>Values with equal priority fall back to FIFO (first in first out).</source>
          <target state="translated">우선 순위가 같은 값은 선입 선출 (FIFO)로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="8e5bca04a7250830f023b99ceeff32b4a919c2d2" translate="yes" xml:space="preserve">
          <source>Variable &lt;var&gt;&lt;a href=&quot;reserved.variables.phperrormsg&quot;&gt;$php_errormsg&lt;/a&gt;&lt;/var&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7530537613a1f85f44a02776c7576049557ee43" translate="yes" xml:space="preserve">
          <source>Variable &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.phperrormsg&quot;&gt;$php_errormsg&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;</source>
          <target state="translated">변수 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.phperrormsg&quot;&gt;$php_errormsg&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="b280dc1f4f1b58422609af96e60af9910ffc1aac" translate="yes" xml:space="preserve">
          <source>Variable Scope</source>
          <target state="translated">변수 범위</target>
        </trans-unit>
        <trans-unit id="6f2f9b9488a91e036840d17f9d5b3fb62e649bfe" translate="yes" xml:space="preserve">
          <source>Variable functions</source>
          <target state="translated">변수 함수</target>
        </trans-unit>
        <trans-unit id="8407794943aecaa5d2fbdf5e19abe82f46a8044a" translate="yes" xml:space="preserve">
          <source>Variable functions &amp;rarr;</source>
          <target state="translated">가변 기능 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e68006f647ada716ae683ce999aac2f8a967e958" translate="yes" xml:space="preserve">
          <source>Variable functions won't work with language constructs such as &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt;, &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt;, &lt;a href=&quot;function.unset&quot;&gt;unset()&lt;/a&gt;, &lt;a href=&quot;function.isset&quot;&gt;isset()&lt;/a&gt;, &lt;a href=&quot;function.empty&quot;&gt;empty()&lt;/a&gt;, &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt;, &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt; and the like. Utilize wrapper functions to make use of any of these constructs as variable functions.</source>
          <target state="translated">변수 함수는 &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; , &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt; , &lt;a href=&quot;function.unset&quot;&gt;unset ()&lt;/a&gt; , &lt;a href=&quot;function.isset&quot;&gt;isset ()&lt;/a&gt; , &lt;a href=&quot;function.empty&quot;&gt;empty ()&lt;/a&gt; , &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; , &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt; 등과 같은 언어 구성에서는 작동하지 않습니다 . 랩퍼 함수를 ​​사용하여 이러한 구문 중 하나를 변수 함수로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e2b07a3d9de2d3c4d9597814525f9ccebeb21802" translate="yes" xml:space="preserve">
          <source>Variable handling &amp;rarr;</source>
          <target state="translated">변수 처리 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d7d3cc6e8dc7ee32d651df9d117444e10e38349d" translate="yes" xml:space="preserve">
          <source>Variable length list of arguments to use as function arguments to the block</source>
          <target state="translated">블록에 대한 함수 인수로 사용할 가변 길이 인수 목록</target>
        </trans-unit>
        <trans-unit id="7d2b56e166787d9877c27b7226e183afbd851754" translate="yes" xml:space="preserve">
          <source>Variable list of array arguments to compare keys against.</source>
          <target state="translated">키를 비교할 배열 인수의 변수 목록.</target>
        </trans-unit>
        <trans-unit id="afd8d17fec9a66b9faa8150006265caa036e865b" translate="yes" xml:space="preserve">
          <source>Variable list of array arguments to compare values against.</source>
          <target state="translated">값을 비교할 배열 인수의 변수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e6f1edfd5e38f4dd82fae7287f6a581858eadb2c" translate="yes" xml:space="preserve">
          <source>Variable list of array arguments to run through the &lt;code&gt;callback&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 함수를 통해 실행할 배열 인수의 변수 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="6e16cc074a61ec75e06b5c80db2ab39a6bc18279" translate="yes" xml:space="preserve">
          <source>Variable list of arrays to merge.</source>
          <target state="translated">병합 할 변수의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5a0436f09421de6c9c7613098b3b1226689eb795" translate="yes" xml:space="preserve">
          <source>Variable list of arrays to recursively merge.</source>
          <target state="translated">재귀 적으로 병합 할 변수 배열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d81a99334632e88444e53a1da4ba6db127a9f301" translate="yes" xml:space="preserve">
          <source>Variable name prefix, prepended before all variable's name imported into the global scope. So if you have a GET value named &quot;&lt;em&gt;userid&lt;/em&gt;&quot;, and provide a prefix &quot;&lt;em&gt;pref_&lt;/em&gt;&quot;, then you'll get a global variable named &lt;var&gt;&lt;var&gt;$pref_userid&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="translated">변수 이름 접두사로, 모든 변수 이름이 전역 범위로 가져 오기 전에 추가됩니다. 따라서 &quot; &lt;em&gt;userid&lt;/em&gt; &quot; 라는 GET 값이 있고 접두어 &quot; &lt;em&gt;pref_&lt;/em&gt; &quot;를 제공하면 &lt;var&gt;&lt;var&gt;$pref_userid&lt;/var&gt;&lt;/var&gt; 라는 전역 변수를 얻게 됩니다.</target>
        </trans-unit>
        <trans-unit id="9ab461e86ea9b74ba465cf9cdfb5caf96f0d5250" translate="yes" xml:space="preserve">
          <source>Variable names follow the same rules as other labels in PHP. A valid variable name starts with a letter or underscore, followed by any number of letters, numbers, or underscores. As a regular expression, it would be expressed thus: '&lt;em&gt;[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*&lt;/em&gt;'</source>
          <target state="translated">변수 이름은 PHP의 다른 레이블과 동일한 규칙을 따릅니다. 유효한 변수 이름은 문자 또는 밑줄로 시작하고 그 뒤에 여러 문자, 숫자 또는 밑줄이옵니다. 정규식으로 다음과 같이 표현됩니다. ' &lt;em&gt;[a-zA-Z_ \ x7f- \ xff] [a-zA-Z0-9_ \ x7f- \ xff] *&lt;/em&gt; '</target>
        </trans-unit>
        <trans-unit id="d7f70fefca4f75fecc4be4193b231266b80a7b5d" translate="yes" xml:space="preserve">
          <source>Variable names follow the same rules as other labels in PHP. A valid variable name starts with a letter or underscore, followed by any number of letters, numbers, or underscores. As a regular expression, it would be expressed thus: &lt;code&gt;^[a-zA-Z_\x80-\xff][a-zA-Z0-9_\x80-\xff]*$&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa943025b61aec22a2044569d4b7fbb9b4e5634c" translate="yes" xml:space="preserve">
          <source>Variable parsing</source>
          <target state="translated">변수 파싱</target>
        </trans-unit>
        <trans-unit id="69cd2e4d36065246c043d32da81f65b5ec76feab" translate="yes" xml:space="preserve">
          <source>Variable scope</source>
          <target state="translated">변수 범위</target>
        </trans-unit>
        <trans-unit id="7bfa8577d91999948cbcee37fe50bd13ca9d4d33" translate="yes" xml:space="preserve">
          <source>Variable scope &amp;rarr;</source>
          <target state="translated">변수 범위 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="00d0e96514fcb6415bc5eb92b2d512572522b4c8" translate="yes" xml:space="preserve">
          <source>Variable to be checked</source>
          <target state="translated">확인할 변수</target>
        </trans-unit>
        <trans-unit id="b6821e943fda5ff838e1109cc51c54c5bf171c9a" translate="yes" xml:space="preserve">
          <source>Variable to be pushed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1111297a60c966ce00ac9226ebd21bbc6545475e" translate="yes" xml:space="preserve">
          <source>Variable variables</source>
          <target state="translated">변수 변수</target>
        </trans-unit>
        <trans-unit id="bd1f94f5f19a48d6c39290d69bcb253770926935" translate="yes" xml:space="preserve">
          <source>Variable variables &amp;rarr;</source>
          <target state="translated">변수 변수 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="34c2e2dc4cbca6dfbb374d854ece0b68626e42c8" translate="yes" xml:space="preserve">
          <source>Variable-length argument lists</source>
          <target state="translated">가변 길이 인수 목록</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="c82b16e7cb503316dcbe021e1c444815457add33" translate="yes" xml:space="preserve">
          <source>Variables &amp;rarr;</source>
          <target state="translated">변수 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8405688284c327d0495e5a4cd2c6388314361ff1" translate="yes" xml:space="preserve">
          <source>Variables From External Sources</source>
          <target state="translated">외부 소스의 변수</target>
        </trans-unit>
        <trans-unit id="663cd4ea4d879d0ae2f98f5aea0652ef873a3c6f" translate="yes" xml:space="preserve">
          <source>Variables From External Sources &amp;rarr;</source>
          <target state="translated">외부 소스의 변수 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ce4935a6fa0971c51cb907a79b421e1044a1ddd2" translate="yes" xml:space="preserve">
          <source>Variables in PHP are represented by a dollar sign followed by the name of the variable. The variable name is case-sensitive.</source>
          <target state="translated">PHP의 변수는 달러 기호와 변수 이름으로 표시됩니다. 변수 이름은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="c7172983cce19459d19895e93314e796b10d24bc" translate="yes" xml:space="preserve">
          <source>Variables must be passed as reference, so they are updated when the user changes the terminal size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adf18126b86e69c37a7653ad1d65e4346a6eb66" translate="yes" xml:space="preserve">
          <source>Variables of type &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; couldn't be exported by this function.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; 유형의 변수를 내보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="22cdb202f0a19605ee64102559561b5548db989c" translate="yes" xml:space="preserve">
          <source>Variables of type resource couldn't be exported by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcc0e763199570c36dbfe5a9ab6ea49ebab31af" translate="yes" xml:space="preserve">
          <source>Variables will be co-erced to a suitable type for the specifier:</source>
          <target state="translated">변수는 지정자에 적합한 유형으로 강제 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="5df8583e7c1ed1922d453aca521beccced3f8516" translate="yes" xml:space="preserve">
          <source>Variables, i.e. &lt;code&gt;foo($a)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1202b22fb36064804b25666b86b42ab6c9a7cb12" translate="yes" xml:space="preserve">
          <source>Variables, i.e. &lt;em&gt;foo($a)&lt;/em&gt;</source>
          <target state="translated">변수, 즉 &lt;em&gt;foo ($ a)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56c28563e5b5b32e2e25bda08a4bc2b82c782343" translate="yes" xml:space="preserve">
          <source>Variant subtag</source>
          <target state="translated">변형 하위 태그</target>
        </trans-unit>
        <trans-unit id="c9ceded6e318dd519f5046ce64bfc7ee59ca4fd7" translate="yes" xml:space="preserve">
          <source>Varnish</source>
          <target state="translated">Varnish</target>
        </trans-unit>
        <trans-unit id="8b97de3852a8bbc949aad1775e0fab9224c7556f" translate="yes" xml:space="preserve">
          <source>Varnish VCL expression. It's based on the varnish ban command.</source>
          <target state="translated">니스 VCL 식 varnish ban 명령을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="0b99bb5d92ee99363d6c6a0d733b874c421ee519" translate="yes" xml:space="preserve">
          <source>Varnish compatibility option.</source>
          <target state="translated">광택 호환성 옵션.</target>
        </trans-unit>
        <trans-unit id="67ddbaad51b593aeabb42dc2edae298f936b4a48" translate="yes" xml:space="preserve">
          <source>Varnish configuration param name.</source>
          <target state="translated">니스 구성 매개 변수 이름.</target>
        </trans-unit>
        <trans-unit id="084d8cbdefc789d22ecca86010342e498daf095a" translate="yes" xml:space="preserve">
          <source>Varnish configuration param value.</source>
          <target state="translated">니스 구성 매개 변수 값.</target>
        </trans-unit>
        <trans-unit id="4befb20b5e13cc94f081ee9ea85a23a306316b89" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::__construct</source>
          <target state="translated">VarnishAdmin::__construct</target>
        </trans-unit>
        <trans-unit id="c5791364afadac579944f47b01e50697009831c4" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::__construct &amp;mdash; VarnishAdmin constructor</source>
          <target state="translated">VarnishAdmin :: __ construct &amp;mdash; VarnishAdmin 생성자</target>
        </trans-unit>
        <trans-unit id="44b1643c674a30a5d6c7b2cb1db0ca36cb252ee0" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::__construct &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="86aac593b9590757b6400a8a38324b5060ff8c22" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::auth</source>
          <target state="translated">VarnishAdmin::auth</target>
        </trans-unit>
        <trans-unit id="ca7d8bb105d8e0e2dd157bee695931b112c3bcac" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::auth &amp;mdash; Authenticate on a varnish instance</source>
          <target state="translated">VarnishAdmin :: auth &amp;mdash; 니스 인스턴스에서 인증</target>
        </trans-unit>
        <trans-unit id="182a5abf938d5c1b2150600ed9b648eae04bc20f" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::auth &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: auth &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c7f8693c703a78e5817e3bd0a8c27f8388fa6f3d" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::ban</source>
          <target state="translated">VarnishAdmin::ban</target>
        </trans-unit>
        <trans-unit id="0c9bbe96c06f9049e26080812dd57256fbe45ed6" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::ban &amp;mdash; Ban URLs using a VCL expression</source>
          <target state="translated">VarnishAdmin :: ban &amp;mdash; VCL 표현식을 사용하는 URL 금지</target>
        </trans-unit>
        <trans-unit id="5c315e6e82c8dcf2a543841e814231146c605019" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::ban &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: ban &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="706611aa6335d3c9c20b6d93b7d9316dd645bb56" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::banUrl</source>
          <target state="translated">VarnishAdmin::banUrl</target>
        </trans-unit>
        <trans-unit id="ed7d957c974333630d21734e6013d1f7db9527ea" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::banUrl &amp;mdash; Ban an URL using a VCL expression</source>
          <target state="translated">VarnishAdmin :: banUrl &amp;mdash; VCL 표현식을 사용하여 URL 금지</target>
        </trans-unit>
        <trans-unit id="e69374b21cfd22b48592f5ef5d0aa7d58fa7b71a" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::banUrl &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: banUrl &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="72babebe55667a93a2159b6b6593ec164b4dfe80" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::clearPanic</source>
          <target state="translated">VarnishAdmin::clearPanic</target>
        </trans-unit>
        <trans-unit id="867498bfb3e70b5c89efa2785cbaafa25ed3671c" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::clearPanic &amp;mdash; Clear varnish instance panic messages</source>
          <target state="translated">VarnishAdmin :: clearPanic &amp;mdash; 니스 인스턴스 패닉 메시지 지우기</target>
        </trans-unit>
        <trans-unit id="7b1b6dc4a4f8b1862ae2b9f5a539ef7a8ad249ed" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::clearPanic &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: clearPanic &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6f43e746c3903d867a9162b76e2cff4c6858bc96" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::connect</source>
          <target state="translated">VarnishAdmin::connect</target>
        </trans-unit>
        <trans-unit id="13f45579a05e39d12d68e9ad5baaaa6b0d6dea94" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::connect &amp;mdash; Connect to a varnish instance administration interface</source>
          <target state="translated">VarnishAdmin :: connect &amp;mdash; 니스 인스턴스 관리 인터페이스에 연결</target>
        </trans-unit>
        <trans-unit id="10da3cabec6954b50daf9ed8f3436aeea0b5c1e6" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::connect &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: connect &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3bb11127bb457ec2a4ed2b7cac55b08bf80705d3" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::disconnect</source>
          <target state="translated">VarnishAdmin::disconnect</target>
        </trans-unit>
        <trans-unit id="a3cad2eca80230398adcfb332b18a2f90808d6ff" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::disconnect &amp;mdash; Disconnect from a varnish instance administration interface</source>
          <target state="translated">VarnishAdmin :: disconnect &amp;mdash; 니스 인스턴스 관리 인터페이스에서 연결 끊기</target>
        </trans-unit>
        <trans-unit id="6668c76aa2abf3c3fa1442d264c2b96aa2bcb110" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::disconnect &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: 연결 끊기 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="025f42ad6804aaa5b097f00bc76f7f69d33f2d1f" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::getPanic</source>
          <target state="translated">VarnishAdmin::getPanic</target>
        </trans-unit>
        <trans-unit id="10033b481842ca67ed5c7426558052b4764e2f37" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::getPanic &amp;mdash; Get the last panic message on a varnish instance</source>
          <target state="translated">VarnishAdmin :: getPanic &amp;mdash; 니스 인스턴스에서 마지막 패닉 메시지를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a0da47aa9a8ed05f1804ce4dfe5db0c1fd20e886" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::getPanic &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: getPanic &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="53a87ec0f713960a0eda8c1ed713662d61ece8ee" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::getParams</source>
          <target state="translated">VarnishAdmin::getParams</target>
        </trans-unit>
        <trans-unit id="2096cc0b6ab5748ee9c3c1c6c6097eb62fed1447" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::getParams &amp;mdash; Fetch current varnish instance configuration parameters</source>
          <target state="translated">VarnishAdmin :: getParams &amp;mdash; 현재 광택 인스턴스 구성 매개 변수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="86c6a11290d57bb1f75dea03ebeaf3d2bb5971f8" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::getParams &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: getParams &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="29dc03153915410288de8e7b692f93c70ded2b3c" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::isRunning</source>
          <target state="translated">VarnishAdmin::isRunning</target>
        </trans-unit>
        <trans-unit id="dcd25d8136d216c6b1b797f17af3ab1dd86a1439" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::isRunning &amp;mdash; Check if the varnish slave process is currently running</source>
          <target state="translated">VarnishAdmin :: isRunning &amp;mdash; 니스 슬레이브 프로세스가 현재 실행 중인지 확인</target>
        </trans-unit>
        <trans-unit id="9cae71090387e1adbf69ef46404806d08c45798d" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::isRunning &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: isRunning &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="131098e064e1b499046356db38a6e57305793ff8" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setCompat</source>
          <target state="translated">VarnishAdmin::setCompat</target>
        </trans-unit>
        <trans-unit id="df59ccf5ad56f82c3fa9f8cadc3320dee49b39cd" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setCompat &amp;mdash; Set the class compat configuration param</source>
          <target state="translated">VarnishAdmin :: setCompat &amp;mdash; 클래스 compat 구성 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="ba0c00d53309d4741ad402c0971942e6c252eb1d" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setCompat &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: setCompat &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c049fc697f73cb866edcee5be18e9a9c82872395" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setHost</source>
          <target state="translated">VarnishAdmin::setHost</target>
        </trans-unit>
        <trans-unit id="67f9c0d11abc522651ca4ef082c2868b74b95395" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setHost &amp;mdash; Set the class host configuration param</source>
          <target state="translated">VarnishAdmin :: setHost &amp;mdash; 클래스 호스트 구성 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="ec42c03ec2a8b08aa2250478b1203a88aef3b3e2" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setHost &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: setHost &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="883b3070cec0d1ab71d4a35cd0cd9b7278653c6c" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setIdent</source>
          <target state="translated">VarnishAdmin::setIdent</target>
        </trans-unit>
        <trans-unit id="55d702dd14608a7cc8e7a559d5cba2713e30849a" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setIdent &amp;mdash; Set the class ident configuration param</source>
          <target state="translated">VarnishAdmin :: setIdent &amp;mdash; 클래스 아이디 구성 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="9433987920891109d79d63860bd1650e39b3d52e" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setIdent &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: setIdent &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="65bd02a12c3800fb2406c6dbf74c5ab8a44621c5" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setParam</source>
          <target state="translated">VarnishAdmin::setParam</target>
        </trans-unit>
        <trans-unit id="fea3b88509a9b4f779d2a2a2c86e6f26d19cb157" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setParam &amp;mdash; Set configuration param on the current varnish instance</source>
          <target state="translated">VarnishAdmin :: setParam &amp;mdash; 현재 광택 인스턴스에서 구성 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="7578dfab95eeae716256ec372880e935c01dcfb9" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setParam &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: setParam &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5a7576836ba47ca8cf6ff92262c925b522c400bf" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setPort</source>
          <target state="translated">VarnishAdmin::setPort</target>
        </trans-unit>
        <trans-unit id="8f8e03134d0ea38fde7bcb699703596a938dcaba" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setPort &amp;mdash; Set the class port configuration param</source>
          <target state="translated">VarnishAdmin :: setPort &amp;mdash; 클래스 포트 구성 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="63f39445b7a828e2bc25146006cd5eabb41f7d0f" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setPort &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: setPort &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="55e288d39e7b60dc2abfdd5fa8e9cbd775052b86" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setSecret</source>
          <target state="translated">VarnishAdmin::setSecret</target>
        </trans-unit>
        <trans-unit id="5bf29777a0e61436dce6f9b90b20e0d0bda8ea82" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setSecret &amp;mdash; Set the class secret configuration param</source>
          <target state="translated">VarnishAdmin :: setSecret &amp;mdash; 클래스 비밀 구성 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="61b94e7144903baa7d288e7c7dd373a4187a873d" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setSecret &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: setSecret &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="21e34f9e7417e3e10d6f54a69557dad3e463a579" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setTimeout</source>
          <target state="translated">VarnishAdmin::setTimeout</target>
        </trans-unit>
        <trans-unit id="da0237e0add57d6ea36f6d7c0184bbb9a5583bdb" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setTimeout &amp;mdash; Set the class timeout configuration param</source>
          <target state="translated">VarnishAdmin :: setTimeout &amp;mdash; 클래스 타임 아웃 구성 매개 변수 설정</target>
        </trans-unit>
        <trans-unit id="04448e8610286e6aa54e958068713473cccb39de" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::setTimeout &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: setTimeout &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b63f0ad1d3378293e401f73742990392606e0846" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::start</source>
          <target state="translated">VarnishAdmin::start</target>
        </trans-unit>
        <trans-unit id="c4e8a5389986fbed8e7591589615bb9318f7ede3" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::start &amp;mdash; Start varnish worker process</source>
          <target state="translated">VarnishAdmin :: start &amp;mdash; 니스 작업자 프로세스 시작</target>
        </trans-unit>
        <trans-unit id="0872644c2edc0bd1916c6dc36734110977f72762" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::start &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: 시작 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="690159873c5ac015147ada8cdd0eb3239f92a4dc" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::stop</source>
          <target state="translated">VarnishAdmin::stop</target>
        </trans-unit>
        <trans-unit id="50b8361a8faebb0530b770813f63e7789a84783e" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::stop &amp;mdash; Stop varnish worker process</source>
          <target state="translated">VarnishAdmin :: stop &amp;mdash; 니스 작업자 프로세스 중지</target>
        </trans-unit>
        <trans-unit id="13e14b0f006668d845fafc45b7cafa4d4e0f9206" translate="yes" xml:space="preserve">
          <source>VarnishAdmin::stop &amp;rarr;</source>
          <target state="translated">VarnishAdmin :: 중지 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ebb7e04e71981824f6fcf5a73c26bf341f9b41d1" translate="yes" xml:space="preserve">
          <source>VarnishLog &amp;rarr;</source>
          <target state="translated">광택 로그 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="9217b4a5e86f283a223c38cca054be633f383911" translate="yes" xml:space="preserve">
          <source>VarnishLog::__construct</source>
          <target state="translated">VarnishLog::__construct</target>
        </trans-unit>
        <trans-unit id="8307fb5fc33f76dbbe983bb3efd4c88fa9d32935" translate="yes" xml:space="preserve">
          <source>VarnishLog::__construct &amp;mdash; Varnishlog constructor</source>
          <target state="translated">VarnishLog :: __ construct &amp;mdash; Varnishlog 생성자</target>
        </trans-unit>
        <trans-unit id="38af704d6c253a90e5001d4a03fd8f29b5306991" translate="yes" xml:space="preserve">
          <source>VarnishLog::__construct &amp;rarr;</source>
          <target state="translated">VarnishLog :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e53a9be90a8772d240db23720d8459878942a5e3" translate="yes" xml:space="preserve">
          <source>VarnishLog::getLine</source>
          <target state="translated">VarnishLog::getLine</target>
        </trans-unit>
        <trans-unit id="d63de2319acaf2998c6c11ced1c5973f9e1ec413" translate="yes" xml:space="preserve">
          <source>VarnishLog::getLine &amp;mdash; Get next log line</source>
          <target state="translated">VarnishLog :: getLine &amp;mdash; 다음 로그 라인을 얻는다</target>
        </trans-unit>
        <trans-unit id="7c92aebee4781435afbc53281be34885d05dbb13" translate="yes" xml:space="preserve">
          <source>VarnishLog::getLine &amp;rarr;</source>
          <target state="translated">VarnishLog :: getLine &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d6ae45c9094835a35cc384b1c91c823d73189ab9" translate="yes" xml:space="preserve">
          <source>VarnishLog::getTagName</source>
          <target state="translated">VarnishLog::getTagName</target>
        </trans-unit>
        <trans-unit id="a54de2c1446892b6174333bcadccebc687bb3359" translate="yes" xml:space="preserve">
          <source>VarnishLog::getTagName &amp;mdash; Get the log tag string representation by its index</source>
          <target state="translated">VarnishLog :: getTagName &amp;mdash; 인덱스별로 로그 태그 문자열 표현을 얻는다</target>
        </trans-unit>
        <trans-unit id="ada30f18c07a1b9b73d4cabc3174a2e8ac3b57c7" translate="yes" xml:space="preserve">
          <source>VarnishLog::getTagName &amp;rarr;</source>
          <target state="translated">VarnishLog :: getTagName &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e42585315f7e14199bf39a231e3395579b7fba0f" translate="yes" xml:space="preserve">
          <source>VarnishStat &amp;rarr;</source>
          <target state="translated">VarnishStat &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5e2ef5c9a6591cba3147b09b903dc5cbaf2f4b8b" translate="yes" xml:space="preserve">
          <source>VarnishStat::__construct</source>
          <target state="translated">VarnishStat::__construct</target>
        </trans-unit>
        <trans-unit id="2d4dca26b4143d796021f576e09ed90fa9c93f5e" translate="yes" xml:space="preserve">
          <source>VarnishStat::__construct &amp;mdash; VarnishStat constructor</source>
          <target state="translated">VarnishStat :: __ construct &amp;mdash; VarnishStat 생성자</target>
        </trans-unit>
        <trans-unit id="bd97f5ebfa70c118abc8ac80fb7147fb2d935ca6" translate="yes" xml:space="preserve">
          <source>VarnishStat::__construct &amp;rarr;</source>
          <target state="translated">VarnishStat :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4d47574384f0af2ae7ecf83433ac11ed32850307" translate="yes" xml:space="preserve">
          <source>VarnishStat::getSnapshot</source>
          <target state="translated">VarnishStat::getSnapshot</target>
        </trans-unit>
        <trans-unit id="58ed48ed8e7fabd7b237b43ad3eba04678c37083" translate="yes" xml:space="preserve">
          <source>VarnishStat::getSnapshot &amp;mdash; Get the current varnish instance statistics snapshot</source>
          <target state="translated">VarnishStat :: getSnapshot &amp;mdash; 현재 광택 인스턴스 통계 스냅 샷을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="aaa0b789e31780af861a718305845654013c8cd8" translate="yes" xml:space="preserve">
          <source>VarnishStat::getSnapshot &amp;rarr;</source>
          <target state="translated">VarnishStat :: getSnapshot &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="4cee42e9d84b86ba6c7311bc60865f5d07dfda00" translate="yes" xml:space="preserve">
          <source>Vector &amp;rarr;</source>
          <target state="translated">벡터 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="bd5a97dcf60ed4d4bfb8bf75ac3e71d0e6f40f0f" translate="yes" xml:space="preserve">
          <source>Vector (class)</source>
          <target state="translated">벡터 (클래스)</target>
        </trans-unit>
        <trans-unit id="7708413caca932190daa867bcfd7a28ff652a274" translate="yes" xml:space="preserve">
          <source>Vendemiaire, Brumaire, Frimaire, Nivose, Pluviose, Ventose, Germinal, Floreal, Prairial, Messidor, Thermidor, Fructidor, Extra</source>
          <target state="translated">Vendemiaire, Brumaire, Frimaire, Nivose, Pluviose, Ventose, Germinal, Floreal, Prairial, Messidor, 서미스터, Fructidor, 엑스트라</target>
        </trans-unit>
        <trans-unit id="b7f8e2655ffad4c3043367b9b2c1ab7b486f5725" translate="yes" xml:space="preserve">
          <source>Verifies that the given hash matches the given password.</source>
          <target state="translated">주어진 해시가 주어진 암호와 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9c307aeaaf41da2ea0d24843422a201310bf5d4c" translate="yes" xml:space="preserve">
          <source>Verifies the given &lt;code&gt;signed_text&lt;/code&gt; and returns information about the signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982df64cd4df6c7d27285762981db24e2eb2ade0" translate="yes" xml:space="preserve">
          <source>Verify that a value is a &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd88721ff6e7e13d39b227b6cccdd312ffac22de" translate="yes" xml:space="preserve">
          <source>Verify that the contents of a variable can be called as a function. This can check that a simple variable contains the name of a valid function, or that an array contains a properly encoded object and function name.</source>
          <target state="translated">변수의 내용을 함수로 호출 할 수 있는지 확인하십시오. 이를 통해 간단한 변수에 유효한 함수의 이름이 포함되어 있는지 또는 배열에 올바르게 인코딩 된 객체 및 함수 이름이 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adc377353f406b8f92c27416cc9c69d82b61a260" translate="yes" xml:space="preserve">
          <source>Verify that the contents of a variable is accepted by the &lt;a href=&quot;language.types.iterable&quot;&gt;iterable&lt;/a&gt; pseudo-type, i.e. that it is either an array or an object implementing &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4861006e77cd631129fd5c51319fcd70006fe8b9" translate="yes" xml:space="preserve">
          <source>Verify that the contents of a variable is accepted by the iterable pseudo-type, i.e. that it is an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or an object implementing &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;</source>
          <target state="translated">변수의 내용이 반복 가능한 의사 유형에 의해 허용되는지, 즉 변수가 &lt;a href=&quot;class.traversable&quot;&gt;Traversable을&lt;/a&gt; 구현 하는 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 또는 객체인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="281fea3b8a8c971bf6feeb0d6243d6d2e3374c7f" translate="yes" xml:space="preserve">
          <source>Verify that the contents of a variable is an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or an object implementing &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;</source>
          <target state="translated">변수의 내용이 &lt;a href=&quot;class.countable&quot;&gt;Countable을&lt;/a&gt; 구현 하는 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 또는 객체인지 확인</target>
        </trans-unit>
        <trans-unit id="551619321bc2385d6d3b81c774569a4bbbcc93a0" translate="yes" xml:space="preserve">
          <source>Verify that the contents of a variable is an array or an object implementing &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="f701dbba493b0c834e5643aedecbaeddbddaeac2" translate="yes" xml:space="preserve">
          <source>Version conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216d591865b23f21a21cbd933fb60c540972448a" translate="yes" xml:space="preserve">
          <source>Versions of PHP 5, prior to PHP 5.3.0 do not support nesting of exceptions. The following code fragment can be used as a replacement MyException class if you wish to run this example.</source>
          <target state="translated">PHP 5.3.0 이전의 PHP 5 버전은 예외 중첩을 지원하지 않습니다. 이 예제를 실행하려면 다음 코드 조각을 대체 MyException 클래스로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="794a5a4df3143f18b5f51ce202d7fe11a90771b9" translate="yes" xml:space="preserve">
          <source>Vertical bar characters are used to separate alternative patterns. For example, the pattern &lt;code&gt;gilbert|sullivan&lt;/code&gt; matches either &quot;gilbert&quot; or &quot;sullivan&quot;. Any number of alternatives may appear, and an empty alternative is permitted (matching the empty string). The matching process tries each alternative in turn, from left to right, and the first one that succeeds is used. If the alternatives are within a subpattern (defined below), &quot;succeeds&quot; means matching the rest of the main pattern as well as the alternative in the subpattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1158f7218475aff9422f0cdca312d19fbabc63f9" translate="yes" xml:space="preserve">
          <source>Vertical bar characters are used to separate alternative patterns. For example, the pattern &lt;em&gt;gilbert|sullivan&lt;/em&gt; matches either &quot;gilbert&quot; or &quot;sullivan&quot;. Any number of alternatives may appear, and an empty alternative is permitted (matching the empty string). The matching process tries each alternative in turn, from left to right, and the first one that succeeds is used. If the alternatives are within a subpattern (defined below), &quot;succeeds&quot; means matching the rest of the main pattern as well as the alternative in the subpattern.</source>
          <target state="translated">세로 막대 문자는 대체 패턴을 구분하는 데 사용됩니다. 예를 들어, 패턴 &lt;em&gt;gilbert | sullivan&lt;/em&gt; 은 &quot;gilbert&quot;또는 &quot;sullivan&quot;과 일치합니다. 여러 대안이 나타날 수 있으며 빈 대안이 허용됩니다 (빈 문자열과 일치). 일치 프로세스는 각 대안을 왼쪽에서 오른쪽으로 차례로 시도하며 성공한 첫 번째 프로세스가 사용됩니다. 대안이 하위 패턴 (아래 정의 됨) 내에있는 경우 &quot;성공&quot;은 나머지 주요 패턴과 하위 패턴의 대안을 일치시키는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a29cebfd83f9a42fdfb9755600e312df01f6831f" translate="yes" xml:space="preserve">
          <source>Vertical offset in pixels to the baseline of text</source>
          <target state="translated">텍스트 기준선까지의 픽셀 단위의 수직 오프셋</target>
        </trans-unit>
        <trans-unit id="bf0400b0f3aafc0bb49249e45dc8694f8cdb7fdb" translate="yes" xml:space="preserve">
          <source>View Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="translated">Visibility</target>
        </trans-unit>
        <trans-unit id="d29c3f04e4d8b6ef1dec262fa3dad9f63526dfaa" translate="yes" xml:space="preserve">
          <source>Visibility &amp;rarr;</source>
          <target state="translated">가시성 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0b9dd4710b6171324ae50778cb44a06d445302c4" translate="yes" xml:space="preserve">
          <source>Visibility from other objects</source>
          <target state="translated">다른 물체의 가시성</target>
        </trans-unit>
        <trans-unit id="b8e415b5e6fa805cf05d9acb590fdc0e632f5068" translate="yes" xml:space="preserve">
          <source>Visibility of the constant, for class constants. Public by default. One of the &lt;strong&gt;&lt;code&gt;RUNKIT7_ACC_*&lt;/code&gt;&lt;/strong&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba4e16f51660911b9a5e356a4082c0ad962627f" translate="yes" xml:space="preserve">
          <source>Volatile &amp;rarr;</source>
          <target state="translated">휘발성 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="dd67e2fc1d589688ad7430a13e8b85b83c73e557" translate="yes" xml:space="preserve">
          <source>Volatile (class)</source>
          <target state="translated">휘발성 (클래스)</target>
        </trans-unit>
        <trans-unit id="762dd6a7da550e7b6fdc00b417847fd608d3d449" translate="yes" xml:space="preserve">
          <source>WBMP</source>
          <target state="translated">WBMP</target>
        </trans-unit>
        <trans-unit id="ab49b15e33551bf0c1b5bfb8f9561ebc71acc533" translate="yes" xml:space="preserve">
          <source>WBMP Support</source>
          <target state="translated">WBMP 지원</target>
        </trans-unit>
        <trans-unit id="237c00019acae36160814c9f86029c99d93a40da" translate="yes" xml:space="preserve">
          <source>WDDX &amp;rarr;</source>
          <target state="translated">WDDX &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b804da3ce1031c6f981388abca68fac44081d0b4" translate="yes" xml:space="preserve">
          <source>WEBP is supported now (if supported by the libgd in use).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0b8ba6d641bb08bf546a0c91bafb52a2c1d1f3" translate="yes" xml:space="preserve">
          <source>Wait for a signal on a Condition Variable, optionally specifying a timeout to limit waiting time.</source>
          <target state="translated">선택적으로 대기 시간을 제한하기 위해 제한 시간을 지정하여 조건 변수에서 신호를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="ac131c3b8c349189dafdecc246291d5315b9fb25" translate="yes" xml:space="preserve">
          <source>Wait for events to become active, and run their callbacks.</source>
          <target state="translated">이벤트가 활성화 될 때까지 기다린 후 콜백을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="36db53172c253989ad68ae5c9817504786f733e2" translate="yes" xml:space="preserve">
          <source>Wait for events to become active, and run their callbacks. The same as &lt;a href=&quot;eventbase.loop&quot;&gt;EventBase::loop()&lt;/a&gt; with no flags set.</source>
          <target state="translated">이벤트가 활성화 될 때까지 기다린 후 콜백을 실행하십시오. 플래그가 설정되지 않은 &lt;a href=&quot;eventbase.loop&quot;&gt;EventBase :: loop ()&lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="309f6545ef4eeafe11b16fdac9341b6a635dc055" translate="yes" xml:space="preserve">
          <source>Wait for status changes of process PID(or any process if PID is specified as &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; ).</source>
          <target state="translated">프로세스 PID (또는 PID가 &lt;strong&gt; &lt;code&gt;0&lt;/code&gt; &lt;/strong&gt; 으로 지정된 경우 프로세스)의 상태 변경을 기다 립니다.</target>
        </trans-unit>
        <trans-unit id="ea12d95865457785b2dcfc289a3d056de6f19528" translate="yes" xml:space="preserve">
          <source>Wait for the connection to become writable</source>
          <target state="translated">연결이 쓰기 가능할 때까지 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="26eb333088100daf7e18623a979205639cc21f9b" translate="yes" xml:space="preserve">
          <source>Waits for a job to be assigned and then calls the appropriate callback function. Issues an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; with the last Gearman error if the return code is not one of &lt;strong&gt;&lt;code&gt;GEARMAN_SUCCESS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;GEARMAN_IO_WAIT&lt;/code&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;code&gt;GEARMAN_WORK_FAIL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">작업이 할당 될 때까지 기다린 다음 적절한 콜백 함수를 호출합니다. 리턴 코드가 &lt;strong&gt; &lt;code&gt;GEARMAN_SUCCESS&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;GEARMAN_IO_WAIT&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;GEARMAN_WORK_FAIL&lt;/code&gt; &lt;/strong&gt; 중 하나가 아닌 경우 마지막 Gearman 오류와 함께 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 을 발행합니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfd475aebbf9b864c69bda6b0f5439629f142992" translate="yes" xml:space="preserve">
          <source>Waits for the SyncEvent object to be fired.</source>
          <target state="translated">SyncEvent 객체가 시작될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="4ef63d68ae3dca38ca83c60ee1468113ee14a69b" translate="yes" xml:space="preserve">
          <source>Warnings (&lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level) will be issued if &lt;code&gt;shm&lt;/code&gt; is not a valid SysV shared memory index or if there was not enough shared memory remaining to complete your request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9c1199304da95e66f7c3e1e051767a01f28481" translate="yes" xml:space="preserve">
          <source>Warnings (&lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level) will be issued if &lt;code&gt;shm_identifier&lt;/code&gt; is not a valid SysV shared memory index or if there was not enough shared memory remaining to complete your request.</source>
          <target state="translated">&lt;code&gt;shm_identifier&lt;/code&gt; 가 유효한 SysV 공유 메모리 인덱스가 아니거나 요청을 완료하기에 충분한 공유 메모리가 남아 있지 않으면 경고 ( &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 레벨)가 발행됩니다 .</target>
        </trans-unit>
        <trans-unit id="8341f59991dc354cf75baacae43bc707bb3d93ee" translate="yes" xml:space="preserve">
          <source>WarningsReturnAsErrors</source>
          <target state="translated">WarningsReturnAsErrors</target>
        </trans-unit>
        <trans-unit id="1ca6aa81b1679ace7b6363da925c6a906054bea1" translate="yes" xml:space="preserve">
          <source>Was there an error during the request</source>
          <target state="translated">요청하는 동안 오류가 있었습니까</target>
        </trans-unit>
        <trans-unit id="e073552bd52ed11fb78347ff094b1a6fdca296e1" translate="yes" xml:space="preserve">
          <source>Watch Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbca700ada736976456fb80b30dd292faaca6f6c" translate="yes" xml:space="preserve">
          <source>Watch to remove from the instance</source>
          <target state="translated">인스턴스에서 제거하는 것을 지켜보십시오.</target>
        </trans-unit>
        <trans-unit id="829cccf277f268db6aeccaadd2774537a17d678d" translate="yes" xml:space="preserve">
          <source>Watcher priorities:</source>
          <target state="translated">감시자 우선 순위 :</target>
        </trans-unit>
        <trans-unit id="019b8318d75981dab2b5332b37633750de4528cf" translate="yes" xml:space="preserve">
          <source>Watcher priority</source>
          <target state="translated">감시자 우선 순위</target>
        </trans-unit>
        <trans-unit id="ce8053b726ca33a75c518b0f4c4794df1a4cd3bb" translate="yes" xml:space="preserve">
          <source>Watchers have keepalive &lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; by default.</source>
          <target state="translated">감시자는 기본적으로 keepalive &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5eb9b0824902ae68e44bb1e94eccfbfaecc3c535" translate="yes" xml:space="preserve">
          <source>Watchers have keepalive &lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c6807f4cc76a27f04e0c4228051d5cf4888130" translate="yes" xml:space="preserve">
          <source>We can also use the &lt;code&gt;contextnode&lt;/code&gt; parameter to shorten our expression:</source>
          <target state="translated">&lt;code&gt;contextnode&lt;/code&gt; 를 사용할 수도 있습니다 매개 변수를 표현식을 단축 .</target>
        </trans-unit>
        <trans-unit id="3c3411d7a57213dc2d30df7025f6048129e707ff" translate="yes" xml:space="preserve">
          <source>We have an array of rows, but &lt;strong&gt;array_multisort()&lt;/strong&gt; requires an array of columns, so we use the below code to obtain the columns, then perform the sorting.</source>
          <target state="translated">우리는 행의 배열을 가지고 있지만 &lt;strong&gt;array_multisort ()&lt;/strong&gt; 에는 열 배열이 필요하므로 아래 코드를 사용하여 열을 얻은 다음 정렬을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f56e6bfbd29bf4cbc03b3a2bdabc12d1d772c323" translate="yes" xml:space="preserve">
          <source>We now have a problem. The order of the placeholders in the format string does not match the order of the arguments in the code. We would like to leave the code as is and simply indicate in the format string which arguments the placeholders refer to. We would write the format string like this instead:</source>
          <target state="translated">문제가 생겼습니다. 형식 문자열에서 자리 표시 자의 순서가 코드의 인수 순서와 일치하지 않습니다. 우리는 코드를 그대로두고 자리 표시자가 참조하는 인수를 형식 문자열로 표시하고 싶습니다. 대신 다음과 같이 형식 문자열을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="fa2b73f03a92dac297d2bc57596766eb747fd379" translate="yes" xml:space="preserve">
          <source>We will use different locales and format specifications to illustrate the use of this function.</source>
          <target state="translated">이 기능의 사용법을 설명하기 위해 다른 로케일과 형식 스펙을 사용할 것입니다.</target>
        </trans-unit>
        <trans-unit id="ada4821ef23e4cb054641fbf445860bfa5fdcc36" translate="yes" xml:space="preserve">
          <source>We're assuming that error_reporting is disabled for this example; otherwise the following code would trigger deprecated and strict notices, respectively, depending on the PHP version.</source>
          <target state="translated">이 예에서는 error_reporting이 비활성화되어 있다고 가정합니다. 그렇지 않으면 다음 코드는 PHP 버전에 따라 더 이상 사용되지 않고 엄격한 알림을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="ac747dcef584bbf61f9b054ef1646e127d63f089" translate="yes" xml:space="preserve">
          <source>Weak references allow the programmer to retain a reference to an object which does not prevent the object from being destroyed. They are useful for implementing cache like structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadae35c85dd863f2fa8116682bc9d25d9bcaaf6" translate="yes" xml:space="preserve">
          <source>WeakMap &amp;rarr;</source>
          <target state="translated">약한지도 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="079ab461bdde86f071557402023d773143cc1a84" translate="yes" xml:space="preserve">
          <source>WeakMap (class)</source>
          <target state="translated">WeakMap (클래스)</target>
        </trans-unit>
        <trans-unit id="dde20a153c79a1ca4aaf0e78e341eb1988948e01" translate="yes" xml:space="preserve">
          <source>WeakMap::__construct</source>
          <target state="translated">WeakMap::__construct</target>
        </trans-unit>
        <trans-unit id="1631ab71c771e75076602b2a61083b8a2dd33965" translate="yes" xml:space="preserve">
          <source>WeakMap::__construct &amp;mdash; Constructs a new map</source>
          <target state="translated">WeakMap :: __ construct &amp;mdash; 새로운 맵을 만듭니다</target>
        </trans-unit>
        <trans-unit id="712fa82621493390681fa68f246ba0d0677173d9" translate="yes" xml:space="preserve">
          <source>WeakMap::__construct &amp;rarr;</source>
          <target state="translated">WeakMap :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7317c14cc8bd193ea27cd7a3e58bf037a6e2d1fb" translate="yes" xml:space="preserve">
          <source>WeakMap::count</source>
          <target state="translated">WeakMap::count</target>
        </trans-unit>
        <trans-unit id="c96c7e900be3f188521d06dabf7bba68a67b3177" translate="yes" xml:space="preserve">
          <source>WeakMap::count &amp;mdash; Counts the number of live entries in the map</source>
          <target state="translated">WeakMap :: count &amp;mdash;지도의 실시간 항목 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ae70d573cede4ae1e67daa13ccc384a163ed1011" translate="yes" xml:space="preserve">
          <source>WeakMap::count &amp;rarr;</source>
          <target state="translated">WeakMap :: count &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="d99f7703fd36d0387a1c7635664135fc9e14ed42" translate="yes" xml:space="preserve">
          <source>WeakMap::current</source>
          <target state="translated">WeakMap::current</target>
        </trans-unit>
        <trans-unit id="65594c1ccdd404d055af5fc42fcccaacbc085bbd" translate="yes" xml:space="preserve">
          <source>WeakMap::current &amp;mdash; Returns the current value under iteration</source>
          <target state="translated">WeakMap :: current &amp;mdash; 반복에서 현재 값을 반환</target>
        </trans-unit>
        <trans-unit id="66b42fe89a6edeb49d796f6745f600ffa1c57a52" translate="yes" xml:space="preserve">
          <source>WeakMap::current &amp;rarr;</source>
          <target state="translated">WeakMap :: 현재 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="44816283eaf101655be7f51652d62efb05c1e91d" translate="yes" xml:space="preserve">
          <source>WeakMap::key</source>
          <target state="translated">WeakMap::key</target>
        </trans-unit>
        <trans-unit id="f50870f0a856a46f76c23c98f98cdbed47601713" translate="yes" xml:space="preserve">
          <source>WeakMap::key &amp;mdash; Returns the current key under iteration</source>
          <target state="translated">WeakMap :: key &amp;mdash; 반복중인 현재 키를 반환합니다</target>
        </trans-unit>
        <trans-unit id="3e93c18769437899a1b71cdc730437b5cbde30e7" translate="yes" xml:space="preserve">
          <source>WeakMap::key &amp;rarr;</source>
          <target state="translated">약한지도 :: 키 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e0534fa83e726131c4e11bf4172c5e8f88773a2e" translate="yes" xml:space="preserve">
          <source>WeakMap::next</source>
          <target state="translated">WeakMap::next</target>
        </trans-unit>
        <trans-unit id="407eea3e49926ed67266ada7d30287b0737d619a" translate="yes" xml:space="preserve">
          <source>WeakMap::next &amp;mdash; Advances to the next map element</source>
          <target state="translated">WeakMap :: next &amp;mdash; 다음 맵 요소로 진행</target>
        </trans-unit>
        <trans-unit id="ee557ee0a64cf5a34e2dced2ce4946bc65348103" translate="yes" xml:space="preserve">
          <source>WeakMap::next &amp;rarr;</source>
          <target state="translated">WeakMap :: 다음 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5204b328dc8c3c2fe8b340cd70b22dfb8a32f024" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetExists</source>
          <target state="translated">WeakMap::offsetExists</target>
        </trans-unit>
        <trans-unit id="23eb85027cab7e71476d5472ec0ba171b2d33194" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetExists &amp;mdash; Checks whether a certain object is in the map</source>
          <target state="translated">WeakMap :: offsetExists &amp;mdash;지도에 특정 물체가 있는지 확인합니다</target>
        </trans-unit>
        <trans-unit id="96289e648a78082cff2b0b4d7229017f24530dd8" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetExists &amp;rarr;</source>
          <target state="translated">WeakMap :: offsetExists &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="67e2fcea0a411d16a3f843d258c847e3b8182830" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetGet</source>
          <target state="translated">WeakMap::offsetGet</target>
        </trans-unit>
        <trans-unit id="7e087c543543e38fc10305dd96f292cfc0131729" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetGet &amp;mdash; Returns the value pointed to by a certain object</source>
          <target state="translated">WeakMap :: offsetGet &amp;mdash; 특정 객체가 가리키는 값을 반환</target>
        </trans-unit>
        <trans-unit id="6abced49078e3b5b81bc4e7f711a484342d3e67d" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetGet &amp;rarr;</source>
          <target state="translated">WeakMap :: offsetGet &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7989e55d50142d997d31bc762c179d8f861fcdb2" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetSet</source>
          <target state="translated">WeakMap::offsetSet</target>
        </trans-unit>
        <trans-unit id="50f4c3932dfb5f8a12a92437a41daff434dd41d0" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetSet &amp;mdash; Updates the map with a new key-value pair</source>
          <target state="translated">WeakMap :: offsetSet &amp;mdash; 새로운 키-값 쌍으로지도를 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="feff7069866164d6d0c328919153bd956f9ae5f8" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetSet &amp;rarr;</source>
          <target state="translated">WeakMap :: offsetSet &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="13a0b8df9e4742e56206a067d8a40f2d383fb14f" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetUnset</source>
          <target state="translated">WeakMap::offsetUnset</target>
        </trans-unit>
        <trans-unit id="0966dc8539a939244c226243eda43ff5b77c0762" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetUnset &amp;mdash; Removes an entry from the map</source>
          <target state="translated">WeakMap :: offsetUnset-지도에서 항목을 제거합니다</target>
        </trans-unit>
        <trans-unit id="ba7220b7fd95593806ebb50240de79e2e0f97c83" translate="yes" xml:space="preserve">
          <source>WeakMap::offsetUnset &amp;rarr;</source>
          <target state="translated">WeakMap :: offsetUnset &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6e8404a5ce61fe517a2c031d07ce3afb6ef0b43c" translate="yes" xml:space="preserve">
          <source>WeakMap::rewind</source>
          <target state="translated">WeakMap::rewind</target>
        </trans-unit>
        <trans-unit id="2915899dea6e0c6f5b048b620233e1e6489fc74c" translate="yes" xml:space="preserve">
          <source>WeakMap::rewind &amp;mdash; Rewinds the iterator to the beginning of the map</source>
          <target state="translated">WeakMap :: rewind &amp;mdash; 반복기를 맵의 시작 부분으로 되감습니다.</target>
        </trans-unit>
        <trans-unit id="d3622bee16d1f25ea4113d1ea48d1ccf5f06e853" translate="yes" xml:space="preserve">
          <source>WeakMap::rewind &amp;rarr;</source>
          <target state="translated">WeakMap :: 되감기 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="64cb1566f6b125a443c03d061a65389478079edd" translate="yes" xml:space="preserve">
          <source>WeakMap::valid</source>
          <target state="translated">WeakMap::valid</target>
        </trans-unit>
        <trans-unit id="4a54bfb528224740739db42045a5bb2a2473b1ed" translate="yes" xml:space="preserve">
          <source>WeakMap::valid &amp;mdash; Returns whether the iterator is still on a valid map element</source>
          <target state="translated">WeakMap :: valid &amp;mdash; 이터레이터가 여전히 유효한 맵 요소에 있는지 여부를 반환</target>
        </trans-unit>
        <trans-unit id="4497247ee7781bf747b2fa240c706c0ad8ffe2dc" translate="yes" xml:space="preserve">
          <source>WeakMap::valid &amp;rarr;</source>
          <target state="translated">WeakMap :: 유효한 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="755bfe35247cd09b3ebeac36897ffd1534866f01" translate="yes" xml:space="preserve">
          <source>WeakRef (class)</source>
          <target state="translated">WeakRef (클래스)</target>
        </trans-unit>
        <trans-unit id="906bdbeff98084e3a58fc5baa677500a0fca16d6" translate="yes" xml:space="preserve">
          <source>WeakReference Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5622b9aba00fb9c4439c09279c322270693d4a20" translate="yes" xml:space="preserve">
          <source>WeakReference::__construct</source>
          <target state="translated">WeakReference::__construct</target>
        </trans-unit>
        <trans-unit id="2d477a7e2f3cb92377a418d48c2a0ad89b086828" translate="yes" xml:space="preserve">
          <source>WeakReference::__construct &amp;mdash; Constructor that disallows instantiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53afa14f4f389378375bd89355b3df5e64e1339f" translate="yes" xml:space="preserve">
          <source>WeakReference::create</source>
          <target state="translated">WeakReference::create</target>
        </trans-unit>
        <trans-unit id="82af0b595f8c59f45f1e564906fda65ba832d5d2" translate="yes" xml:space="preserve">
          <source>WeakReference::create &amp;mdash; Create a new weak reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3b5b19bb39e872eae4ef501286c08b1d07439d" translate="yes" xml:space="preserve">
          <source>WeakReference::get</source>
          <target state="translated">WeakReference::get</target>
        </trans-unit>
        <trans-unit id="92139858c2ef09f390bd86652936dc1f8b8433eb" translate="yes" xml:space="preserve">
          <source>WeakReference::get &amp;mdash; Get a weakly referenced Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164229223b3dc3c2756fee31fd2aa2274bb441af" translate="yes" xml:space="preserve">
          <source>Weaknesses</source>
          <target state="translated">Weaknesses</target>
        </trans-unit>
        <trans-unit id="6d78031203a1534986b193ab2a1f1cda67ffd1f7" translate="yes" xml:space="preserve">
          <source>Weakref</source>
          <target state="translated">Weakref</target>
        </trans-unit>
        <trans-unit id="198ea921eb6d46e32760c4f09a586d803c85d987" translate="yes" xml:space="preserve">
          <source>Weakref::__construct</source>
          <target state="translated">Weakref::__construct</target>
        </trans-unit>
        <trans-unit id="2135974abd1102d56d81bcb389194addd048ca16" translate="yes" xml:space="preserve">
          <source>Weakref::__construct &amp;mdash; Constructs a new weak reference</source>
          <target state="translated">Weakref :: __ construct &amp;mdash; 새로운 약한 참조를 만듭니다</target>
        </trans-unit>
        <trans-unit id="087897d7063d75b22093e397b7e1968f3e8be04d" translate="yes" xml:space="preserve">
          <source>Weakref::__construct &amp;rarr;</source>
          <target state="translated">Weakref :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="02a8c6e849cd12ce56d964546b55a8a501fa8cc1" translate="yes" xml:space="preserve">
          <source>Weakref::acquire</source>
          <target state="translated">Weakref::acquire</target>
        </trans-unit>
        <trans-unit id="e657e593cc6779f72288a0745b3e98544ade4621" translate="yes" xml:space="preserve">
          <source>Weakref::acquire &amp;mdash; Acquires a strong reference on that object</source>
          <target state="translated">Weakref :: acquire &amp;mdash; 해당 객체에 대한 강력한 참조를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="da3f63b046d52ab8f929edc6dc692c5fb022fdf3" translate="yes" xml:space="preserve">
          <source>Weakref::acquire &amp;rarr;</source>
          <target state="translated">약점 :: 취득 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0e5d0f61fbb853555fcd3bef5a233c2149e880b5" translate="yes" xml:space="preserve">
          <source>Weakref::get</source>
          <target state="translated">Weakref::get</target>
        </trans-unit>
        <trans-unit id="96419e77394f27ef9872f8536aadf63b7854822a" translate="yes" xml:space="preserve">
          <source>Weakref::get &amp;mdash; Returns the object pointed to by the weak reference</source>
          <target state="translated">Weakref :: get &amp;mdash; 약한 참조가 가리키는 객체를 반환</target>
        </trans-unit>
        <trans-unit id="9f54a80f18c23449fdfde9b00ff94244557491d9" translate="yes" xml:space="preserve">
          <source>Weakref::get &amp;rarr;</source>
          <target state="translated">Weakref :: get &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="12d4a9fe6ce8d6283d1d9e39df22155963321258" translate="yes" xml:space="preserve">
          <source>Weakref::release</source>
          <target state="translated">Weakref::release</target>
        </trans-unit>
        <trans-unit id="f505e9de90f967329fc958e3945626e4c917a3ad" translate="yes" xml:space="preserve">
          <source>Weakref::release &amp;mdash; Releases a previously acquired reference</source>
          <target state="translated">Weakref :: release &amp;mdash; 이전에 획득 한 참조를 해제</target>
        </trans-unit>
        <trans-unit id="0a3dd279e7d14e56d124d24d20bca5e51badd3a5" translate="yes" xml:space="preserve">
          <source>Weakref::release &amp;rarr;</source>
          <target state="translated">Weakref :: release &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="143ca284b581706b184b150d9fb170c6be26833d" translate="yes" xml:space="preserve">
          <source>Weakref::valid</source>
          <target state="translated">Weakref::valid</target>
        </trans-unit>
        <trans-unit id="1f53d87876899bb7c0fd3612cba8ed633ea3b57d" translate="yes" xml:space="preserve">
          <source>Weakref::valid &amp;mdash; Checks whether the object referenced still exists</source>
          <target state="translated">Weakref :: valid &amp;mdash; 참조 된 객체가 여전히 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="fb650c282453a8f197e6e80d95c59689ff95ad6f" translate="yes" xml:space="preserve">
          <source>Weakref::valid &amp;rarr;</source>
          <target state="translated">약한 참조 :: 유효한 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e80805083ea9c8568a9aa46f0885b43318f66b9c" translate="yes" xml:space="preserve">
          <source>Web Services &amp;rarr;</source>
          <target state="translated">웹 서비스 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7a9fe4926f27ca26ad09c60006889c894f588cc2" translate="yes" xml:space="preserve">
          <source>WebP Support</source>
          <target state="translated">WebP 지원</target>
        </trans-unit>
        <trans-unit id="b0fcf8fa503da4e77eeb3f89103a94545a235679" translate="yes" xml:space="preserve">
          <source>Wednesday.</source>
          <target state="translated">Wednesday.</target>
        </trans-unit>
        <trans-unit id="4b57f1621241ed16f6420cf00a8f0e1ffa609b46" translate="yes" xml:space="preserve">
          <source>Week number of the given year, starting with the first Sunday as the first week</source>
          <target state="translated">첫 번째 일요일부터 첫 번째 주부터 시작하여 주어진 연도의 주 번호</target>
        </trans-unit>
        <trans-unit id="a5cce1680cb8961ad65012c1094cce2fb7e714df" translate="yes" xml:space="preserve">
          <source>Week of the date.</source>
          <target state="translated">날짜의 주</target>
        </trans-unit>
        <trans-unit id="4db1c6eee229a062a1fe90b79a00c13d792f1d47" translate="yes" xml:space="preserve">
          <source>Weights are an optional set of weighting parameters for the different classes, to help account for unbalanced training sets. For example, if the classes were 1 and -1, and -1 had significantly more example than one, the weight for -1 could be 0.5. Weights should be in the range 0-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc048b98ac5c8f92cdb500f6a7ae3760b40c287" translate="yes" xml:space="preserve">
          <source>Western European, Latin-1.</source>
          <target state="translated">서유럽 어, 라틴 -1.</target>
        </trans-unit>
        <trans-unit id="4f6e1b15162fe15a990f076d7d4b1230936ec11b" translate="yes" xml:space="preserve">
          <source>Western European, Latin-9. Adds the Euro sign, French and Finnish letters missing in Latin-1 (ISO-8859-1).</source>
          <target state="translated">서유럽 어, 라틴 -9. 라틴 -1 (ISO-8859-1)에서 누락 된 유로 기호, 프랑스어 및 핀란드 문자를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a818ff92cfd1e268b4de83e0b926af42deb1ce3f" translate="yes" xml:space="preserve">
          <source>What PHP does with these errors depends on two further php.ini directives. &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; controls whether the error is shown as part of the script's output. This should always be disabled in a production environment, as it can include confidential information such as database passwords, but is often useful to enable in development, as it ensures immediate reporting of issues.</source>
          <target state="translated">PHP가이 에러들을 처리하는 것은 두 개의 php.ini 지시문에 따라 다릅니다. &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt; &lt;code&gt;display_errors&lt;/code&gt; &lt;/a&gt; 는 오류가 스크립트 출력의 일부로 표시되는지 여부를 제어합니다. 데이터베이스 암호와 같은 기밀 정보를 포함 할 수 있으므로 프로덕션 환경에서는 항상 비활성화해야하지만 문제를 즉시보고 할 수 있으므로 개발시 유용하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37fb42c5434309c79518153c6524c79c5eb21728" translate="yes" xml:space="preserve">
          <source>What PHP does with these errors depends on two further php.ini directives. &lt;a href=&quot;https://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; controls whether the error is shown as part of the script's output. This should always be disabled in a production environment, as it can include confidential information such as database passwords, but is often useful to enable in development, as it ensures immediate reporting of issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c47d817b4e5189780176de99bd413d7f13bdf6" translate="yes" xml:space="preserve">
          <source>What References Are</source>
          <target state="translated">어떤 참조</target>
        </trans-unit>
        <trans-unit id="fdecff9b6c22d689d7c2abfc3dfe7d3d73024828" translate="yes" xml:space="preserve">
          <source>What References Are Not</source>
          <target state="translated">참조가 아닌 것</target>
        </trans-unit>
        <trans-unit id="6d7b6c6140fbe71886c7c45ed10826cb7389bc71" translate="yes" xml:space="preserve">
          <source>What References Are Not &amp;rarr;</source>
          <target state="translated">참조가 아닌 것 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3bf04eca56fea473ac9bcb9ebdca621934e16a7c" translate="yes" xml:space="preserve">
          <source>What References Do</source>
          <target state="translated">참고 문헌</target>
        </trans-unit>
        <trans-unit id="cf1081c5da62d7bf83a88e4405b56f2268967b53" translate="yes" xml:space="preserve">
          <source>What References Do &amp;rarr;</source>
          <target state="translated">참조 사항 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="71d99c89e58e305b4ce38ffac7ff29abc868b6d1" translate="yes" xml:space="preserve">
          <source>What are namespaces? In the broadest definition namespaces are a way of encapsulating items. This can be seen as an abstract concept in many places. For example, in any operating system directories serve to group related files, and act as a namespace for the files within them. As a concrete example, the file &lt;code&gt;foo.txt&lt;/code&gt; can exist in both directory &lt;code&gt;/home/greg&lt;/code&gt; and in &lt;code&gt;/home/other&lt;/code&gt;, but two copies of &lt;code&gt;foo.txt&lt;/code&gt; cannot co-exist in the same directory. In addition, to access the &lt;code&gt;foo.txt&lt;/code&gt; file outside of the &lt;code&gt;/home/greg&lt;/code&gt; directory, we must prepend the directory name to the file name using the directory separator to get &lt;code&gt;/home/greg/foo.txt&lt;/code&gt;. This same principle extends to namespaces in the programming world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091c0a9e66d7ec1a59cd819688b95d279ac11ec2" translate="yes" xml:space="preserve">
          <source>What are namespaces? In the broadest definition namespaces are a way of encapsulating items. This can be seen as an abstract concept in many places. For example, in any operating system directories serve to group related files, and act as a namespace for the files within them. As a concrete example, the file &lt;em&gt;foo.txt&lt;/em&gt; can exist in both directory &lt;em&gt;/home/greg&lt;/em&gt; and in &lt;em&gt;/home/other&lt;/em&gt;, but two copies of &lt;em&gt;foo.txt&lt;/em&gt; cannot co-exist in the same directory. In addition, to access the &lt;em&gt;foo.txt&lt;/em&gt; file outside of the &lt;em&gt;/home/greg&lt;/em&gt; directory, we must prepend the directory name to the file name using the directory separator to get &lt;em&gt;/home/greg/foo.txt&lt;/em&gt;. This same principle extends to namespaces in the programming world.</source>
          <target state="translated">네임 스페이스 란 무엇입니까? 가장 넓은 정의에서 네임 스페이스는 항목을 캡슐화하는 방법입니다. 이것은 많은 곳에서 추상적 개념으로 볼 수 있습니다. 예를 들어, 모든 운영 체제 디렉토리에서 관련 파일을 그룹화하고 그 안의 파일에 대한 네임 스페이스 역할을합니다. 구체적인 예로서, &lt;em&gt;foo.txt&lt;/em&gt; 파일 은 &lt;em&gt;/ home / greg&lt;/em&gt; 디렉토리 와 &lt;em&gt;/ home / other&lt;/em&gt; 디렉토리에 존재할 수 있지만 &lt;em&gt;foo.txt의&lt;/em&gt; 두 사본은 동일한 디렉토리에 공존 할 수 없습니다. 또한 &lt;em&gt;/ home / greg&lt;/em&gt; 디렉토리 외부의 &lt;em&gt;foo.txt&lt;/em&gt; 파일 에 액세스 하려면 디렉토리 구분 기호를 사용하여 파일 이름 앞에 디렉토리 이름을 추가해야합니다 . 이 같은 원리는 프로그래밍 세계의 네임 스페이스에도 적용됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt; /home/greg/foo.txt를 가져와야합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eaf4b8e9ee912ce9faa0d6aef4d218ab64690900" translate="yes" xml:space="preserve">
          <source>What happens is that &lt;var&gt;$var&lt;/var&gt; in &lt;var&gt;foo&lt;/var&gt; will be bound with &lt;var&gt;$bar&lt;/var&gt; in the caller, but then re-bound with &lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS[&quot;baz&quot;]&lt;/a&gt;&lt;/var&gt;. There's no way to bind &lt;var&gt;$bar&lt;/var&gt; in the calling scope to something else using the reference mechanism, since &lt;var&gt;$bar&lt;/var&gt; is not available in the function &lt;var&gt;foo&lt;/var&gt; (it is represented by &lt;var&gt;$var&lt;/var&gt;, but &lt;var&gt;$var&lt;/var&gt; has only variable contents and not name-to-value binding in the calling symbol table). You can use &lt;a href=&quot;language.references.return&quot;&gt;returning references&lt;/a&gt; to reference variables selected by the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b077f006d219ba5aa5bb763875a4eeddbdd4476" translate="yes" xml:space="preserve">
          <source>What happens is that &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt; in &lt;var&gt;&lt;var&gt;foo&lt;/var&gt;&lt;/var&gt; will be bound with &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; in the caller, but then re-bound with &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS[&quot;baz&quot;]&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;. There's no way to bind &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; in the calling scope to something else using the reference mechanism, since &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; is not available in the function &lt;var&gt;&lt;var&gt;foo&lt;/var&gt;&lt;/var&gt; (it is represented by &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt;, but &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt; has only variable contents and not name-to-value binding in the calling symbol table). You can use &lt;a href=&quot;language.references.return&quot;&gt;returning references&lt;/a&gt; to reference variables selected by the function.</source>
          <target state="translated">무슨 일 것입니다 &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt; 의 &lt;var&gt;&lt;var&gt;foo&lt;/var&gt;&lt;/var&gt; 는이 함께 결합됩니다 &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; 발신자에 있지만, 다음과 바인딩을 다시 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS[&quot;baz&quot;]&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; . 바인드 할 수있는 방법이 없다 &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; 있기 때문에 뭔가 다른 참조 메커니즘을 사용하는 호출 범위는 &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; 기능에서 사용할 수 없습니다 &lt;var&gt;&lt;var&gt;foo&lt;/var&gt;&lt;/var&gt; 는 (가로 표시됩니다 &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt; 있지만, &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt; 유일한 변수 내용이 아닌 이름을 대 호출 기호 테이블의 값 바인딩). &lt;a href=&quot;language.references.return&quot;&gt;반환 참조&lt;/a&gt; 를 사용 하여 함수에 의해 선택된 변수를 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="147ff31c6423c33e3ea36de680643c8740a2dd7a" translate="yes" xml:space="preserve">
          <source>What revision of the CGI specification the server is using; e.g. '&lt;code&gt;CGI/1.1&lt;/code&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbebaee3a83ff2385568e485f87a67a6e4cdb1ba" translate="yes" xml:space="preserve">
          <source>What revision of the CGI specification the server is using; i.e. '&lt;em&gt;CGI/1.1&lt;/em&gt;'.</source>
          <target state="translated">서버가 사용중인 CGI 사양의 개정판 즉 ' &lt;em&gt;CGI / 1.1&lt;/em&gt; '.</target>
        </trans-unit>
        <trans-unit id="fac0aeeb77e1995e22e4589ae8b56dbe97ff3fdc" translate="yes" xml:space="preserve">
          <source>What scope will parental property access look at? 0 == Global scope, 1 == Calling scope, 2 == Scope preceding calling scope, 3 == The scope before that, etc..., etc...</source>
          <target state="translated">부모의 재산 액세스는 어떤 범위를 볼 수 있습니까? 0 == 전역 범위, 1 == 호출 범위, 2 == 선행 호출 범위, 3 == 그 이전의 범위 등 ...</target>
        </trans-unit>
        <trans-unit id="85aa1801581444cbfb8ceee3d44f040a1516da28" translate="yes" xml:space="preserve">
          <source>What the function returns, first on success, then on failure. See also the &amp;amp;return.success; entity</source>
          <target state="translated">성공시, 실패시 함수가 반환하는 것. &amp;amp; return.success;도 참조하십시오. 실재</target>
        </trans-unit>
        <trans-unit id="d2a4ff29e1e98d2838be401b2ecc61db5ea42505" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; is set to show &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; level errors (by setting it to &lt;strong&gt;&lt;code&gt;E_ALL&lt;/code&gt;&lt;/strong&gt;, for example), such uses will become immediately visible. By default, &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; is set not to show notices.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; 이 &lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt; 레벨 오류 를 표시하도록 설정 되면 ( 예 : &lt;strong&gt; &lt;code&gt;E_ALL&lt;/code&gt; &lt;/strong&gt; 로 설정하여 ) 이러한 사용이 즉시 표시됩니다. 기본적으로 &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; 은 통지를 표시하지 않도록 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4d0fa30aa3d8e2fbc653f186008dd8aeae8e6a6" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt; is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed. In addition, you cannot set the SUID, SGID and sticky bits.</source>
          <target state="translated">때 &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;안전 모드가&lt;/a&gt; 활성화되어, 당신은 파일이나 디렉토리가 작동 여부를 PHP 검사가 실행중인 스크립트와 같은 UID (owner)를 가지고 있는지 확인합니다. 또한 SUID, SGID 및 고정 비트를 설정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ebbd6b6678c4ab7ad9678a3b3c4b3e716270c491" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode&quot;&gt;session.use_strict_mode&lt;/a&gt; is enabled. You do not have to remove obsolete session ID cookie because session module will not accept session ID cookie when there is no data associated to the session ID and set new session ID cookie. Enabling &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode&quot;&gt;session.use_strict_mode&lt;/a&gt; is recommended for all sites.</source>
          <target state="translated">때 &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode&quot;&gt;session.use_strict_mode이&lt;/a&gt; 활성화됩니다. 세션 ID와 연관된 데이터가없고 새 세션 ID 쿠키를 설정하면 세션 모듈이 세션 ID 쿠키를 허용하지 않으므로 사용하지 않는 세션 ID 쿠키를 제거 할 필요가 없습니다. 사용 &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode&quot;&gt;session.use_strict_mode는&lt;/a&gt; 모든 사이트에 대해 권장합니다.</target>
        </trans-unit>
        <trans-unit id="3d2397c5dfde37a434bb11f4ac3a1a29fc4bf1b2" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-trans-sid&quot;&gt;session.use_trans_sid&lt;/a&gt; is enabled, output must be started after &lt;strong&gt;session_regenerate_id()&lt;/strong&gt; call. Otherwise, old session ID is used.</source>
          <target state="translated">시 &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-trans-sid&quot;&gt;으로 session.use_trans_sid가&lt;/a&gt; 활성화되어, 출력 후 시작해야합니다 &lt;strong&gt;에도 session_regenerate_id ()&lt;/strong&gt; 호출. 그렇지 않으면 이전 세션 ID가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d55a433046460eb1bf1a5f16289f500ad97a8cdd" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-trans-sid&quot;&gt;session.use_trans_sid&lt;/a&gt; is enabled, the &lt;strong&gt;session_start()&lt;/strong&gt; function will register an internal output handler for URL rewriting.</source>
          <target state="translated">경우 &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.use-trans-sid&quot;&gt;session.use_trans_sid는이&lt;/a&gt; 활성화되면, &lt;strong&gt;으로 session_start ()&lt;/strong&gt; 함수는 URL을 재 작성하기위한 내부 출력 핸들러를 등록한다.</target>
        </trans-unit>
        <trans-unit id="2b699570a6367e846b651af430d274689d7868a7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; is set to show &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; level errors (by setting it to &lt;strong&gt;&lt;code&gt;E_ALL&lt;/code&gt;&lt;/strong&gt;, for example), such uses will become immediately visible. By default, &lt;a href=&quot;https://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; is set not to show notices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f035445cd04614858147618ee2545c78bcd0938e" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode&quot;&gt;session.use_strict_mode&lt;/a&gt; is enabled. You do not have to remove obsolete session ID cookie because session module will not accept session ID cookie when there is no data associated to the session ID and set new session ID cookie. Enabling &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode&quot;&gt;session.use_strict_mode&lt;/a&gt; is recommended for all sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504b8c8ea7b5e5485af0130deba9507f57260083" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.use-trans-sid&quot;&gt;session.use_trans_sid&lt;/a&gt; is enabled, output must be started after &lt;strong&gt;session_regenerate_id()&lt;/strong&gt; call. Otherwise, old session ID is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b2bc1896b6adc827a2cadca776877eb72cc953" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.use-trans-sid&quot;&gt;session.use_trans_sid&lt;/a&gt; is enabled, the &lt;strong&gt;session_start()&lt;/strong&gt; function will register an internal output handler for URL rewriting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd8d40e9e1b1ff7590aa52ebc0c4de263f1b484" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch()&lt;/a&gt; is called to fetch data, the MySQL client/server protocol places the data for the bound columns into the specified variables &lt;code&gt;var1, ...&lt;/code&gt;.</source>
          <target state="translated">때 &lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch ()가&lt;/a&gt; 데이터를 가져 오기 위해라고, MySQL 클라이언트 / 서버 프로토콜이 지정된 변수에 바인딩 된 열에 대한 데이터 배치 &lt;code&gt;var1, ...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f15ac75592fa152f5bd31bc035ce7ff91f95b7a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch()&lt;/a&gt; is called to fetch data, the MySQL client/server protocol places the data for the bound columns into the specified variables &lt;code&gt;var&lt;/code&gt;/&lt;code&gt;vars&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ee09afcbdf262e6384fd282de3bee06ee0a8ac" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;details&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; the value will be the current value of the option.</source>
          <target state="translated">때 &lt;code&gt;details&lt;/code&gt; 입니다 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 값은 옵션의 현재 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="87b73a3fb2d3f1b6cbe7ebfd4c1bd3eb1e4cbc6e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;details&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; (default) the array will contain &lt;em&gt;global_value&lt;/em&gt; (set in &lt;var&gt;php.ini&lt;/var&gt;), &lt;em&gt;local_value&lt;/em&gt; (perhaps set with &lt;a href=&quot;function.ini-set&quot;&gt;ini_set()&lt;/a&gt; or &lt;var&gt;.htaccess&lt;/var&gt;), and &lt;em&gt;access&lt;/em&gt; (the access level).</source>
          <target state="translated">때 &lt;code&gt;details&lt;/code&gt; 입니다 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; (기본값) 배열이 포함됩니다 &lt;em&gt;global_value&lt;/em&gt; (에서 설정 &lt;var&gt;php.ini&lt;/var&gt; 파일 ), &lt;em&gt;local_value&lt;/em&gt; (아마도 설정 &lt;a href=&quot;function.ini-set&quot;&gt;위해서는 ini_set ()&lt;/a&gt; 또는 &lt;var&gt;.htaccess&lt;/var&gt; ), 및 &lt;em&gt;액세스&lt;/em&gt; (액세스 수준을).</target>
        </trans-unit>
        <trans-unit id="7efc5cb8f6a9afff48446c96713232fb00092aab" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;details&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; the value will be the current value of the option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f5321ef73b01a1166e5105dcd4706fca8add56" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;details&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; (default) the array will contain &lt;code&gt;global_value&lt;/code&gt; (set in &lt;var&gt;php.ini&lt;/var&gt;), &lt;code&gt;local_value&lt;/code&gt; (perhaps set with &lt;a href=&quot;function.ini-set&quot;&gt;ini_set()&lt;/a&gt; or &lt;var&gt;.htaccess&lt;/var&gt;), and &lt;code&gt;access&lt;/code&gt; (the access level).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6916f9764fee532b5968d35ec4fd1181b0f12ac1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;double_encode&lt;/code&gt; is turned off PHP will not encode existing html entities, the default is to convert everything.</source>
          <target state="translated">&lt;code&gt;double_encode&lt;/code&gt; 가 꺼져 있으면 PHP는 기존 HTML 엔터티를 인코딩하지 않습니다. 기본값은 모든 것을 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="aaed849fee8316b0256b435cede2ead294ec74f7" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;double_encode&lt;/code&gt; is turned off PHP will not encode existing html entities. The default is to convert everything.</source>
          <target state="translated">&lt;code&gt;double_encode&lt;/code&gt; 가 해제 되면 PHP는 기존 HTML 엔티티를 인코딩하지 않습니다. 기본값은 모든 것을 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ae9f704fff0fa7a2c94ab9706e62fb0226cc7996" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;object_id&lt;/code&gt; is a array and &lt;code&gt;preserve_keys&lt;/code&gt; set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; keys in results will be taken exactly as in &lt;code&gt;object_id&lt;/code&gt;, otherwise &lt;var&gt;SNMP::oid_output_format&lt;/var&gt; property is used to determinate the form of keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5083bcebd3cd3fee1998b9521a00098e22d2412" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;strict_types&lt;/code&gt; is not enabled, scalar type declarations are subject to limited implicit type coercions. If the exact type of the value is not part of the union, then the target type is chosen in the following order of preference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef082e739c5322b9af13b6273d5665a050eba11" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;parent_scope&lt;/em&gt; is set to a string value, it refers to a named array variable in the global scope. If the named variable does not exist at the time of access it will be created as an empty array. If the variable exists but it not an array, a dummy array will be created containing a reference to the named global variable.</source>
          <target state="translated">&lt;em&gt;parent_scope&lt;/em&gt; 가 문자열 값으로 설정 되면 전역 범위에서 명명 된 배열 변수를 나타냅니다. 명명 된 변수가 액세스시 존재하지 않으면 빈 배열로 작성됩니다. 변수가 존재하지만 배열이 아닌 경우 명명 된 전역 변수에 대한 참조를 포함하는 더미 배열이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="8498179e3e8d69ed1e671da2424dc72727e52551" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, the &lt;a href=&quot;class.sqlite3&quot;&gt;SQLite3&lt;/a&gt; instance, and &lt;a href=&quot;class.sqlite3stmt&quot;&gt;SQLite3Stmt&lt;/a&gt; and &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; instances derived from it, will raise warnings on error.</source>
          <target state="translated">때 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 는 &lt;a href=&quot;class.sqlite3&quot;&gt;sqlite3를의&lt;/a&gt; 인스턴스 및 &lt;a href=&quot;class.sqlite3stmt&quot;&gt;SQLite3Stmt&lt;/a&gt; 및 &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; 인스턴스가 그것에서 파생 된 오류에 대한 경고를 올릴 것이다.</target>
        </trans-unit>
        <trans-unit id="0fc1ebaf5726e49837469d9fe106a74ac817adb9" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;HASH_HMAC&lt;/code&gt;&lt;/strong&gt; is specified for &lt;code&gt;flags&lt;/code&gt;, a shared secret key to be used with the HMAC hashing method must be supplied in this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e03a6bf2ab72f7778bbfbd6ba84c6a650afd28d" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;HASH_HMAC&lt;/code&gt;&lt;/strong&gt; is specified for &lt;code&gt;options&lt;/code&gt;, a shared secret key to be used with the HMAC hashing method must be supplied in this parameter.</source>
          <target state="translated">때 &lt;strong&gt; &lt;code&gt;HASH_HMAC&lt;/code&gt; 가&lt;/strong&gt; 지정되어 &lt;code&gt;options&lt;/code&gt; , 공유 비밀 키는이 매개 변수에 제공해야하는 HMAC 해시 방법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="417505c6d60faed727ab6a5a1b203e06ed94d35e" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; the cookie will be made accessible only through the HTTP protocol. This means that the cookie won't be accessible by scripting languages, such as JavaScript. It has been suggested that this setting can effectively help to reduce identity theft through XSS attacks (although it is not supported by all browsers), but that claim is often disputed. Added in PHP 5.2.0. &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">때 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 쿠키는 HTTP 프로토콜을 통해 액세스 될 것이다. 이는 JavaScript와 같은 스크립팅 언어로 쿠키에 액세스 할 수 없음을 의미합니다. 이 설정은 XSS 공격을 통해 ID 도용을 효과적으로 줄이는 데 도움이 될 수 있다고 제안되었지만 (모든 브라우저에서 지원하지는 않지만)이 주장은 종종 논쟁의 여지가 있습니다. PHP 5.2.0에서 추가되었습니다. &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61310f8c850b04dd7c9f5f19b2a0d7021c0cd9a2" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, returned &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;s will be converted into associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;s.</source>
          <target state="translated">때 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 반환 &lt;a href=&quot;language.types.object&quot;&gt;객체&lt;/a&gt; 들 연합으로 변환됩니다 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 의.</target>
        </trans-unit>
        <trans-unit id="d41df91f7bc5c7604548da41f2c2b0569c57689c" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, returns the digest in raw binary format with a length of 16.</source>
          <target state="translated">때 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 반환은 (16)의 길이와 원시 이진 형식으로 소화.</target>
        </trans-unit>
        <trans-unit id="64ce52402baa77edf4f39c0a8123dd0f0550f4a7" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, returns the digest in raw binary format with a length of 20.</source>
          <target state="translated">때 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 반환은 (20)의 길이와 원시 이진 형식으로 소화.</target>
        </trans-unit>
        <trans-unit id="616f6d3c463f7ba34905361f3b913da543426ad7" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, the &lt;a href=&quot;class.sqlite3&quot;&gt;SQLite3&lt;/a&gt; instance, and &lt;a href=&quot;class.sqlite3stmt&quot;&gt;SQLite3Stmt&lt;/a&gt; and &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; instances derived from it, will throw exceptions on error.</source>
          <target state="translated">때 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 는 &lt;a href=&quot;class.sqlite3&quot;&gt;sqlite3를의&lt;/a&gt; 인스턴스 및 &lt;a href=&quot;class.sqlite3stmt&quot;&gt;SQLite3Stmt&lt;/a&gt; 및 &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; 인스턴스가 그것에서 파생 된 오류에 대한 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="0d9a5bf9a9ccefa096d0790b4cf3eca62acccbfc" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;, the &lt;a href=&quot;class.sqlite3&quot;&gt;SQLite3&lt;/a&gt; instance, and &lt;a href=&quot;class.sqlite3stmt&quot;&gt;SQLite3Stmt&lt;/a&gt; and &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; instances derived from it, will raise warnings on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad64ae04aa3dde5a9805a6faede2bab3b5df2da" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; the cookie will be made accessible only through the HTTP protocol. This means that the cookie won't be accessible by scripting languages, such as JavaScript. It has been suggested that this setting can effectively help to reduce identity theft through XSS attacks (although it is not supported by all browsers), but that claim is often disputed. &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6370b6ed696c5eeed75e5abb9ac6c0112df9404f" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, JSON objects will be returned as associative arrays; when &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;, JSON objects will be returned as objects. When &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;, JSON objects will be returned as associative arrays or objects depending on whether &lt;strong&gt;&lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt;&lt;/strong&gt; is set in the &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38aa2880ad41e1b6785ad75e837f793a5ef5741a" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, returns the digest in raw binary format with a length of 16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ad6204171670e2c36c3c56b033c2bb9cb2dd19" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, returns the digest in raw binary format with a length of 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150d689b74a8054d230c7474e5fe3545d1e6d4ad" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, the &lt;a href=&quot;class.sqlite3&quot;&gt;SQLite3&lt;/a&gt; instance, and &lt;a href=&quot;class.sqlite3stmt&quot;&gt;SQLite3Stmt&lt;/a&gt; and &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; instances derived from it, will throw exceptions on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0106c21e7055e6969c5c9d65146719abca7873" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;imap_alerts()&lt;/strong&gt; is called, the alert stack is subsequently cleared. The</source>
          <target state="translated">때 &lt;strong&gt;imap_alerts ()가&lt;/strong&gt; 호출되면 경고 스택은 이후 삭제됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="1685fa1eebb3c8c31d193f5e57ebd028b651a6f9" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;imap_errors()&lt;/strong&gt; is called, the error stack is subsequently cleared.</source>
          <target state="translated">때 &lt;strong&gt;imap_errors ()가&lt;/strong&gt; 호출 오류 스택은 이후 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="a3f2786a231d8dfc29dd80b579f53b49737cffc6" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;serialize()&lt;/strong&gt; serializes objects, the leading backslash is not included in the class name of namespaced classes for maximum compatibility.</source>
          <target state="translated">&lt;strong&gt;serialize ()가&lt;/strong&gt; 객체를 &lt;strong&gt;직렬화&lt;/strong&gt; 하면 호환성을 극대화하기 위해 네임 스페이스가있는 클래스의 클래스 이름에 선행 백 슬래시가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e04663d3841ab50b1248bf886f918f1148f1fbbc" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;session_start()&lt;/strong&gt; is called or when a session auto starts, PHP will call the open and read session save handlers. These will either be a built-in save handler provided by default or by PHP extensions (such as SQLite or Memcached); or can be custom handler as defined by &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt;. The read callback will retrieve any existing session data (stored in a special serialized format) and will be unserialized and used to automatically populate the $_SESSION superglobal when the read callback returns the saved session data back to PHP session handling.</source>
          <target state="translated">시 &lt;strong&gt;으로 session_start ()는&lt;/strong&gt; 세션 자동 시작은, PHP는 핸들러 저장 개방 및 읽기 세션을 호출 할 때 호출이나된다. 이것들은 기본적으로 또는 PHP 확장 (SQLite 또는 Memcached와 같은)에 의해 제공되는 내장 저장 핸들러입니다. 또는 &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler ()에&lt;/a&gt; 의해 정의 된 사용자 정의 핸들러 일 수 있습니다 . 읽기 콜백은 기존의 세션 데이터 (특수 직렬화 된 형식으로 저장 됨)를 검색하고 직렬화 해제되어 읽기 콜백이 저장된 세션 데이터를 다시 PHP 세션 처리로 반환 할 때 $ _SESSION 슈퍼 글로벌을 채우는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="30828ec0a9008947515f4ee35d77b90d59c86d3f" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;stream_select()&lt;/strong&gt; returns, the arrays &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; are modified to indicate which stream resource(s) actually changed status.</source>
          <target state="translated">때 &lt;strong&gt;stream_select ()&lt;/strong&gt; 반환, 배열은 &lt;code&gt;read&lt;/code&gt; , &lt;code&gt;write&lt;/code&gt; 및 &lt;code&gt;except&lt;/code&gt; 되는 스트림 자원 (들) 실제로 변경 상태를 표시하도록 수정된다.</target>
        </trans-unit>
        <trans-unit id="949137c9932e83db7065aecc798eb1623a3737dd" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;stream_select()&lt;/strong&gt; returns, the arrays &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; are modified to indicate which stream resource(s) actually changed status. The original keys of the arrays are preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15e766b60b789578deec6d1563c660b3e3db72c" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;var_export()&lt;/strong&gt; exports objects, the leading backslash is not included in the class name of namespaced classes for maximum compatibility.</source>
          <target state="translated">언제 &lt;strong&gt; var_export ()&lt;/strong&gt; 수출 객체는, 선두 백 슬래시는 최대의 호환성을위한 네임 스페이스 클래스의 클래스 명에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9ccb0d0c2be0fc2a238ba4094fc9201ab3f4852d" translate="yes" xml:space="preserve">
          <source>When PHP parses a file, it looks for opening and closing tags, which are &lt;code&gt;&amp;lt;?php&lt;/code&gt; and &lt;code&gt;?&amp;gt;&lt;/code&gt; which tell PHP to start and stop interpreting the code between them. Parsing in this manner allows PHP to be embedded in all sorts of different documents, as everything outside of a pair of opening and closing tags is ignored by the PHP parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d8ab47108394f4f575cad62d6674e0b288dfb6" translate="yes" xml:space="preserve">
          <source>When PHP parses a file, it looks for opening and closing tags, which are &lt;em&gt;&amp;lt;?php&lt;/em&gt; and &lt;em&gt;?&amp;gt;&lt;/em&gt; which tell PHP to start and stop interpreting the code between them. Parsing in this manner allows PHP to be embedded in all sorts of different documents, as everything outside of a pair of opening and closing tags is ignored by the PHP parser.</source>
          <target state="translated">PHP는 파일을 파싱 할 때 &lt;em&gt;&amp;lt;? php&lt;/em&gt; and &lt;em&gt;?&amp;gt;&lt;/em&gt; 태그를 열고 닫는 것을 찾습니다.&lt;em&gt;&lt;/em&gt; 는 PHP에게 코드 간의 해석을 시작하고 중지하도록 지시합니다. 이러한 방식으로 구문 분석하면 PHP 구문 분석기가 한 쌍의 열기 및 닫기 태그 외부의 모든 항목을 무시하므로 PHP를 모든 종류의 다른 문서에 포함시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad28ef947a1e6c52f331fb8a20000d01184ad40d" translate="yes" xml:space="preserve">
          <source>When a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is evaluated in a numeric context, the resulting value and type are determined as follows.</source>
          <target state="translated">때 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 숫자 컨텍스트에서 계산된다 다음, 얻어진 값 유형이 결정된다.</target>
        </trans-unit>
        <trans-unit id="a75e6ba10b16e45a1017e547a107d249e7d12661" translate="yes" xml:space="preserve">
          <source>When a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is specified in double quotes or with heredoc, &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt; are parsed within it.</source>
          <target state="translated">큰 따옴표 나 heredoc 로 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 을 지정 하면 &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;변수&lt;/a&gt; 가 그 안에서 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="43bba02de1a6bf56bd57406ed960ad11d8c1f2b0" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;offset&lt;/code&gt; parameter is set, the returned length is counted starting from this position, not from the beginning of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc7cbd43824bcbc1ea796ec40bc78b4e9e72b07" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;start&lt;/code&gt; parameter is set, the returned length is counted starting from this position, not from the beginning of &lt;code&gt;subject&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;start&lt;/code&gt; 매개 변수가 설정되고, 반환 된 길이는하지의 시작 부분에서,이 위치에서 시작하여 계산됩니다 &lt;code&gt;subject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb8179291b82e974d118c60e321c8c8e7840c55" translate="yes" xml:space="preserve">
          <source>When a Patch is destroyed it is reverted, so that instances that were patched during the lifetime of the Patch are restored to their formal type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7799fc26492fd2f307f9517c787aea95caedce" translate="yes" xml:space="preserve">
          <source>When a Worker is started, the run method will be executed, but the Thread will not leave until one of the following conditions are met:</source>
          <target state="translated">Worker가 시작되면 run 메소드가 실행되지만 다음 조건 중 하나가 충족 될 때까지 스레드는 종료되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ccdc2e92c21f93c21f31c009ef3cf20dde1fba5" translate="yes" xml:space="preserve">
          <source>When a capturing subpattern is repeated, the value captured is the substring that matched the final iteration. For example, after &lt;code&gt;(tweedle[dume]{3}\s*)+&lt;/code&gt; has matched &quot;tweedledum tweedledee&quot; the value of the captured substring is &quot;tweedledee&quot;. However, if there are nested capturing subpatterns, the corresponding captured values may have been set in previous iterations. For example, after &lt;code&gt;/(a|(b))+/&lt;/code&gt; matches &quot;aba&quot; the value of the second captured substring is &quot;b&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0842a78423840398897901b6408ca175cf3f8a9b" translate="yes" xml:space="preserve">
          <source>When a capturing subpattern is repeated, the value captured is the substring that matched the final iteration. For example, after &lt;em&gt;(tweedle[dume]{3}\s*)+&lt;/em&gt; has matched &quot;tweedledum tweedledee&quot; the value of the captured substring is &quot;tweedledee&quot;. However, if there are nested capturing subpatterns, the corresponding captured values may have been set in previous iterations. For example, after &lt;em&gt;/(a|(b))+/&lt;/em&gt; matches &quot;aba&quot; the value of the second captured substring is &quot;b&quot;.</source>
          <target state="translated">캡처 하위 패턴이 반복되면 캡처 된 값은 최종 반복과 일치하는 하위 문자열입니다. 예를 들어, &lt;em&gt;(tweedle [dume] {3} \ s *) +&lt;/em&gt; 가 &quot;tweedledum tweedledee&quot;와 일치 한 후 캡처 된 하위 문자열의 값은 &quot;tweedledee&quot;입니다. 그러나 중첩 캡처 하위 패턴이있는 경우 해당 캡처 값이 이전 반복에서 설정되었을 수 있습니다. 예를 들어, &lt;em&gt;/ (a | (b)) + /&lt;/em&gt; 가 &quot;aba&quot;와 일치 한 후 캡처 된 두 번째 하위 문자열의 값은 &quot;b&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="c1033eae5dcfef96b775c658a1d91dcba455f49e" translate="yes" xml:space="preserve">
          <source>When a constructor argument includes a visibility modifier, PHP will interpret it as both an object property and a constructor argument, and assign the argument value to the property. The constructor body may then be empty or may contain other statements. Any additional statements will be executed after the argument values have been assigned to the corresponding properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98dd1006a23d763b0f30b24c48860d1060451f68" translate="yes" xml:space="preserve">
          <source>When a correct signature is found, the appropriate constant value will be returned otherwise the return value is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. The return value is the same value that &lt;a href=&quot;function.getimagesize&quot;&gt;getimagesize()&lt;/a&gt; returns in index 2 but &lt;strong&gt;exif_imagetype()&lt;/strong&gt; is much faster.</source>
          <target state="translated">올바른 서명이 발견되면 적절한 상수 값이 리턴되고 그렇지 않으면 리턴 값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 입니다. 반환 값은 &lt;a href=&quot;function.getimagesize&quot;&gt;getimagesize ()&lt;/a&gt; 가 인덱스 2에서 반환 하는 값과 같지만 &lt;strong&gt;exif_imagetype ()&lt;/strong&gt; 이 훨씬 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="0c3d6a544087bf90e194e9634f5863bb41096253" translate="yes" xml:space="preserve">
          <source>When a correct signature is found, the appropriate constant value will be returned otherwise the return value is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. The return value is the same value that &lt;a href=&quot;function.getimagesize&quot;&gt;getimagesize()&lt;/a&gt; returns in index 2 but &lt;strong&gt;exif_imagetype()&lt;/strong&gt; is much faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2488020760c0ba7d1b58d79db9d80de43ef61db" translate="yes" xml:space="preserve">
          <source>When a file is included, parsing drops out of PHP mode and into HTML mode at the beginning of the target file, and resumes again at the end. For this reason, any code inside the target file which should be executed as PHP code must be enclosed within &lt;a href=&quot;language.basic-syntax.phpmode&quot;&gt;valid PHP start and end tags&lt;/a&gt;.</source>
          <target state="translated">파일이 포함되면 구문 분석은 대상 파일의 시작 부분에서 PHP 모드와 HTML 모드에서 제외되고 끝에서 다시 시작됩니다. 이러한 이유로, PHP 파일로 실행되어야하는 대상 파일 내부의 모든 코드는 &lt;a href=&quot;language.basic-syntax.phpmode&quot;&gt;유효한 PHP 시작 및 종료 태그&lt;/a&gt; 안에 포함되어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="bd3cf007cf1af09cdc25bf2c5c0ff0a9706cb483" translate="yes" xml:space="preserve">
          <source>When a file is included, the code it contains inherits the &lt;a href=&quot;language.variables.scope&quot;&gt;variable scope&lt;/a&gt; of the line on which the include occurs. Any variables available at that line in the calling file will be available within the called file, from that point forward. However, all functions and classes defined in the included file have the global scope.</source>
          <target state="translated">파일이 포함되면 파일에 포함 된 코드는 포함 이 발생한 행 의 &lt;a href=&quot;language.variables.scope&quot;&gt;변수 범위&lt;/a&gt; 를 상속 합니다. 호출 파일의 해당 라인에서 사용 가능한 모든 변수는 그 시점부터 호출 된 파일 내에서 사용 가능합니다. 그러나 포함 된 파일에 정의 된 모든 함수와 클래스는 전역 범위를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="33bcc6cd7b523f9fe8ed5df311e46c2255a9e9ab" translate="yes" xml:space="preserve">
          <source>When a file is set to be added to the archive, PHP will lock the file. The lock is only released once the &lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt; object has been closed, either via &lt;a href=&quot;ziparchive.close&quot;&gt;ZipArchive::close()&lt;/a&gt; or the &lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt; object being destroyed. This may prevent you from being able to delete the file being added until after the lock has been released.</source>
          <target state="translated">파일이 아카이브에 추가되도록 설정되면 PHP는 파일을 잠급니다. &lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt; 객체가 닫힌 후에는 &lt;a href=&quot;ziparchive.close&quot;&gt;ZipArchive :: close ()&lt;/a&gt; 또는 ZipArchive 를 통해 잠금이 해제 &lt;a href=&quot;class.ziparchive&quot;&gt;됩니다.&lt;/a&gt; 객체 됩니다. 잠금이 해제 될 때까지 추가중인 파일을 삭제하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9863bb72f146ee290958f0922b98d4bcdcffdd1" translate="yes" xml:space="preserve">
          <source>When a form is submitted to a PHP script, the information from that form is automatically made available to the script. There are few ways to access this information, for example:</source>
          <target state="translated">양식을 PHP 스크립트에 제출하면 해당 양식의 정보가 자동으로 스크립트에 제공됩니다. 이 정보에 액세스하는 방법은 몇 가지가 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ed4f02c713760328689f107621b8f850e70f4d9c" translate="yes" xml:space="preserve">
          <source>When a function is defined in a conditional manner such as the two examples shown. Its definition must be processed &lt;em&gt;prior&lt;/em&gt; to being called.</source>
          <target state="translated">함수가 표시된 두 예와 같은 조건부 방식으로 정의 된 경우 정의를 호출 &lt;em&gt;하기 전에&lt;/em&gt; 처리해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c3141b4f28a73a6725b854f401904845821e62a1" translate="yes" xml:space="preserve">
          <source>When a generator function is called, a new object of the internal &lt;a href=&quot;class.generator&quot;&gt;Generator&lt;/a&gt; class is returned. This object implements the &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; interface in much the same way as a forward-only iterator object would, and provides methods that can be called to manipulate the state of the generator, including sending values to and returning values from it.</source>
          <target state="translated">생성기 함수가 호출되면 내부 &lt;a href=&quot;class.generator&quot;&gt;생성기&lt;/a&gt; 클래스 의 새 객체 가 반환됩니다. 이 객체는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator를&lt;/a&gt; 구현합니다. 는 순방향 전용 반복기 객체와 거의 같은 방식으로 인터페이스를 값을 보내고받는 것을 포함하여 생성기의 상태를 조작하기 위해 호출 할 수있는 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1e4257975198f39a98128f9f8b37a284b596b381" translate="yes" xml:space="preserve">
          <source>When a generator function is called, it returns an object that can be iterated over. When you iterate over that object (for instance, via a &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; loop), PHP will call the object's iteration methods each time it needs a value, then saves the state of the generator when the generator yields a value so that it can be resumed when the next value is required.</source>
          <target state="translated">생성기 함수가 호출되면 반복 될 수있는 객체를 반환합니다. 해당 객체를 반복 할 때 (예를 들어, &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; 루프 를 통해 ), PHP는 값이 필요할 때마다 객체의 반복 메소드를 호출 한 다음 생성기가 값을 생성 할 때 생성기의 상태를 저장하여 다음 값이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f7c92a8b8f9ae84eb91c5a4a6cd8c1cf6eb1342a" translate="yes" xml:space="preserve">
          <source>When a parenthesized subpattern is quantified with a minimum repeat count that is greater than 1 or with a limited maximum, more store is required for the compiled pattern, in proportion to the size of the minimum or maximum.</source>
          <target state="translated">괄호로 묶인 하위 패턴을 최소 반복 횟수가 1보다 크거나 제한된 최대 값으로 수량화하면 최소 또는 최대 크기에 비례하여 컴파일 된 패턴에 더 많은 저장이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6a0ad9ff629e51eb58ed7f41c03d81a389352f07" translate="yes" xml:space="preserve">
          <source>When a pattern begins with .* and the &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; option is set, the pattern is implicitly anchored by PCRE, since it can match only at the start of a subject string. However, if &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; is not set, PCRE cannot make this optimization, because the . metacharacter does not then match a newline, and if the subject string contains newlines, the pattern may match from the character immediately following one of them instead of from the very start. For example, the pattern &lt;code&gt;(.*) second&lt;/code&gt; matches the subject &quot;first\nand second&quot; (where \n stands for a newline character) with the first captured substring being &quot;and&quot;. In order to do this, PCRE has to retry the match starting after every newline in the subject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6608c1c91e18e36d3d139581f7a58e080c0ebf0" translate="yes" xml:space="preserve">
          <source>When a pattern begins with .* and the &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; option is set, the pattern is implicitly anchored by PCRE, since it can match only at the start of a subject string. However, if &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; is not set, PCRE cannot make this optimization, because the . metacharacter does not then match a newline, and if the subject string contains newlines, the pattern may match from the character immediately following one of them instead of from the very start. For example, the pattern &lt;em&gt;(.*) second&lt;/em&gt; matches the subject &quot;first\nand second&quot; (where \n stands for a newline character) with the first captured substring being &quot;and&quot;. In order to do this, PCRE has to retry the match starting after every newline in the subject.</source>
          <target state="translated">패턴이. *로 시작하고 &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; 옵션이 설정되면 패턴은 주제 문자열의 시작에서만 일치 할 수 있으므로 PCRE에 의해 내재적으로 고정됩니다. 그러나 &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOTALL&lt;/a&gt; 이 설정되어 있지 않으면 PCRE가이 최적화를 수행 할 수 없습니다. 그런 다음 메타 문자는 개행과 일치하지 않으며 제목 문자열에 개행이 포함 된 경우 패턴은 처음부터 시작하지 않고 다음 중 하나 바로 뒤에 나오는 문자와 일치 할 수 있습니다. 예를 들어, 패턴 &lt;em&gt;(. *) second&lt;/em&gt; 는 제목 &quot;first \ nand second&quot;(여기서 \ n은 개행 문자를 나타냄)와 일치하며 첫 번째 캡처 된 하위 문자열은 &quot;and&quot;입니다. 이를 위해 PCRE는 주제의 모든 개행 후에 시작하여 일치를 재 시도해야합니다.</target>
        </trans-unit>
        <trans-unit id="36bbdaa2f7303630bd36df36daf0eab5d2395f13" translate="yes" xml:space="preserve">
          <source>When a pattern contains an unlimited repeat inside a subpattern that can itself be repeated an unlimited number of times, the use of a once-only subpattern is the only way to avoid some failing matches taking a very long time indeed. The pattern &lt;code&gt;(\D+|&amp;lt;\d+&amp;gt;)*[!?]&lt;/code&gt; matches an unlimited number of substrings that either consist of non-digits, or digits enclosed in &amp;lt;&amp;gt;, followed by either ! or ?. When it matches, it runs quickly. However, if it is applied to &lt;code&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&lt;/code&gt; it takes a long time before reporting failure. This is because the string can be divided between the two repeats in a large number of ways, and all have to be tried. (The example used [!?] rather than a single character at the end, because both PCRE and Perl have an optimization that allows for fast failure when a single character is used. They remember the last single character that is required for a match, and fail early if it is not present in the string.) If the pattern is changed to &lt;code&gt;((?&amp;gt;\D+)|&amp;lt;\d+&amp;gt;)*[!?]&lt;/code&gt; sequences of non-digits cannot be broken, and failure happens quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73309604f8eda2df18d594cf23314d13ab252b67" translate="yes" xml:space="preserve">
          <source>When a pattern contains an unlimited repeat inside a subpattern that can itself be repeated an unlimited number of times, the use of a once-only subpattern is the only way to avoid some failing matches taking a very long time indeed. The pattern &lt;em&gt;(\D+|&amp;lt;\d+&amp;gt;)*[!?]&lt;/em&gt; matches an unlimited number of substrings that either consist of non-digits, or digits enclosed in &amp;lt;&amp;gt;, followed by either ! or ?. When it matches, it runs quickly. However, if it is applied to &lt;em&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&lt;/em&gt; it takes a long time before reporting failure. This is because the string can be divided between the two repeats in a large number of ways, and all have to be tried. (The example used [!?] rather than a single character at the end, because both PCRE and Perl have an optimization that allows for fast failure when a single character is used. They remember the last single character that is required for a match, and fail early if it is not present in the string.) If the pattern is changed to &lt;em&gt;((?&amp;gt;\D+)|&amp;lt;\d+&amp;gt;)*[!?]&lt;/em&gt; sequences of non-digits cannot be broken, and failure happens quickly.</source>
          <target state="translated">패턴 자체가 무제한 반복 될 수있는 서브 패턴 내부에 무한 반복이 포함 된 경우, 한 번만 서브 패턴을 사용하는 것은 실패한 경기가 실제로 오랜 시간이 걸리는 것을 피할 수있는 유일한 방법입니다. 패턴 &lt;em&gt;(\ D + | &amp;lt;\ d +&amp;gt;) * [!?]&lt;/em&gt; 은 숫자가 아닌 숫자로 구성되거나 &amp;lt;&amp;gt;로 묶은 숫자와! 또는?. 일치하면 빠르게 실행됩니다. 그러나 &lt;em&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa에&lt;/em&gt; 적용되는 경우&lt;em&gt;&lt;/em&gt;실패를보고하는 데 시간이 오래 걸립니다. 문자열을 두 가지 반복으로 여러 가지 방법으로 나눌 수 있으며 모두 시도해야하기 때문입니다. (PCRE와 Perl 모두 단일 문자를 사용할 때 빠른 실패를 허용하는 최적화 기능이 있기 때문에 마지막에 단일 문자 대신 [!?]를 사용했습니다. 일치하는 데 필요한 마지막 단일 문자를 기억합니다. 패턴이 문자열에없는 경우 일찍 실패합니다.) 패턴이 &lt;em&gt;((?&amp;gt; \ D +) | &amp;lt;\ d +&amp;gt;) * [!?]로 변경&lt;/em&gt; 되면 숫자가 아닌 숫자의 시퀀스를 깰 수 없으며 오류가 빠르게 발생합니다. .</target>
        </trans-unit>
        <trans-unit id="82c942718ce47c969f3f3afddb35516fac62cacf" translate="yes" xml:space="preserve">
          <source>When a pattern is going to be used several times, it is worth spending more time analyzing it in order to speed up the time taken for matching. If this modifier is set, then this extra analysis is performed. At present, studying a pattern is useful only for non-anchored patterns that do not have a single fixed starting character.</source>
          <target state="translated">패턴을 여러 번 사용하려는 경우 일치하는 데 걸리는 시간을 단축하기 위해 패턴을 분석하는 데 더 많은 시간을 소비 할 가치가 있습니다. 이 수정자가 설정되면이 추가 분석이 수행됩니다. 현재 패턴을 연구하는 것은 하나의 고정 된 시작 문자가없는 고정되지 않은 패턴에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e81053fc4010b759de1a59e6cebd07c9eba50410" translate="yes" xml:space="preserve">
          <source>When a plain instance of &lt;strong&gt;SessionHandler&lt;/strong&gt; is set as the save handler using &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt; it will wrap the current save handlers. A class extending from &lt;strong&gt;SessionHandler&lt;/strong&gt; allows you to override the methods or intercept or filter them by calls the parent class methods which ultimately wrap the internal PHP session handlers.</source>
          <target state="translated">&lt;strong&gt;sessionHandler&lt;/strong&gt; 의 일반 인스턴스가 &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler ()를&lt;/a&gt; 사용하여 저장 핸들러로 설정 되면 현재 저장 핸들러를 랩핑합니다. &lt;strong&gt;SessionHandler&lt;/strong&gt; 에서 확장 된 클래스를 사용하면 내부 PHP 세션 핸들러를 랩핑하는 상위 클래스 메소드를 호출하여 메소드를 대체하거나 인터셉트하거나 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a87c7f8e17b587d366ecc943c4566254e5f212cb" translate="yes" xml:space="preserve">
          <source>When a string is specified in double quotes or with heredoc, &lt;a href=&quot;https://www.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt; are parsed within it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee58482f820d7b35115dc5dd6d1db996f642ac2f" translate="yes" xml:space="preserve">
          <source>When a string needs to be evaluated as number (e.g. arithmetic operations, int type declaration, etc.) the following steps are taken to determine the outcome:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d7c253467c5fde7d2b12235f64277a3adc8d55" translate="yes" xml:space="preserve">
          <source>When a table is referenced by a &lt;code&gt;SELECT&lt;/code&gt; but no column values are extracted from that table (for example in a query like &lt;code&gt;&quot;SELECT count(*) FROM
   table&quot;&lt;/code&gt;) then the &lt;strong&gt;&lt;code&gt;SQLite3::READ&lt;/code&gt;&lt;/strong&gt; authorizer callback is invoked once for that table with a column name that is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82b006d296cf0618fb7dced61c6c84c1d5e0c20" translate="yes" xml:space="preserve">
          <source>When a variable has a single reference (as did &lt;code&gt;$var1&lt;/code&gt; before it was used as an argument to &lt;strong&gt;debug_zval_dump()&lt;/strong&gt;), PHP's engine optimizes the manner in which it is passed to a function. Internally, PHP treats &lt;code&gt;$var1&lt;/code&gt; like a reference (in that the &lt;code&gt;refcount&lt;/code&gt; is increased for the scope of this function), with the caveat that &lt;em&gt;if&lt;/em&gt; the passed reference happens to be written to, a copy is made, but only at the moment of writing. This is known as &quot;copy on write.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa3239c7fd454f250bfb77f79f74d7801f62320" translate="yes" xml:space="preserve">
          <source>When a variable has a single reference (as did &lt;em&gt;$var1&lt;/em&gt; before it was used as an argument to &lt;strong&gt;debug_zval_dump()&lt;/strong&gt;), PHP's engine optimizes the manner in which it is passed to a function. Internally, PHP treats &lt;em&gt;$var1&lt;/em&gt; like a reference (in that the &lt;em&gt;refcount&lt;/em&gt; is increased for the scope of this function), with the caveat that &lt;em&gt;if&lt;/em&gt; the passed reference happens to be written to, a copy is made, but only at the moment of writing. This is known as &quot;copy on write.&quot;</source>
          <target state="translated">변수가 단일 참조 를 &lt;strong&gt;가지면 (debug_zval_dump ()&lt;/strong&gt; 의 인수로 사용되기 전에 &lt;em&gt;$ var1&lt;/em&gt; 처럼 ), PHP 엔진은 함수에 전달되는 방식을 최적화합니다. 내부적으로 PHP는 취급 &lt;em&gt;$ VAR1을&lt;/em&gt; 합니다 (점에서 참조처럼 &lt;em&gt;refcount는이&lt;/em&gt; 단서하에,이 함수의 범위에 대한 증가)하는 &lt;em&gt;경우&lt;/em&gt; 전달 된 기준은 글을 쓰는 순간에 복사하지만, 만들어에 기록 될 일이 . 이것을 &quot;쓰기시 복사&quot;라고합니다.&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d30d190a4907752a3b5283c739929f2642a54c9" translate="yes" xml:space="preserve">
          <source>When a variable used in the expression is defined in the parent scope it will be implicitly captured by-value. In the following example, the functions &lt;var&gt;$fn1&lt;/var&gt; and &lt;var&gt;$fn2&lt;/var&gt; behave the same way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36822b6ef4ef1eb1f3ca3ebe39e0af0f75f9bfc" translate="yes" xml:space="preserve">
          <source>When allowing user-supplied data to be passed to this function, use &lt;a href=&quot;function.escapeshellarg&quot;&gt;escapeshellarg()&lt;/a&gt; or &lt;a href=&quot;function.escapeshellcmd&quot;&gt;escapeshellcmd()&lt;/a&gt; to ensure that users cannot trick the system into executing arbitrary commands.</source>
          <target state="translated">사용자 제공 데이터를이 함수에 전달할 수 있도록하려면 &lt;a href=&quot;function.escapeshellarg&quot;&gt;escapeshellarg ()&lt;/a&gt; 또는 &lt;a href=&quot;function.escapeshellcmd&quot;&gt;escapeshellcmd ()&lt;/a&gt; 를 사용하여 사용자가 시스템에서 임의의 명령을 실행하도록 속일 수 없도록합니다.</target>
        </trans-unit>
        <trans-unit id="48f23f15ec9c5e21daf4d8956033323594f13860" translate="yes" xml:space="preserve">
          <source>When an Exif header contains a Copyright note, this itself can contain two values. As the solution is inconsistent in the Exif 2.10 standard, the &lt;code&gt;COMPUTED&lt;/code&gt; section will return both entries &lt;code&gt;Copyright.Photographer&lt;/code&gt; and &lt;code&gt;Copyright.Editor&lt;/code&gt; while the &lt;code&gt;IFD0&lt;/code&gt; sections contains the byte array with the NULL character that splits both entries. Or just the first entry if the datatype was wrong (normal behaviour of Exif). The &lt;code&gt;COMPUTED&lt;/code&gt; will also contain the entry &lt;code&gt;Copyright&lt;/code&gt; which is either the original copyright string, or a comma separated list of the photo and editor copyright.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08de23417b13b2fc4faa19ecc1894f4c8f56b1b2" translate="yes" xml:space="preserve">
          <source>When an Exif header contains a Copyright note, this itself can contain two values. As the solution is inconsistent in the Exif 2.10 standard, the &lt;em&gt;COMPUTED&lt;/em&gt; section will return both entries &lt;em&gt;Copyright.Photographer&lt;/em&gt; and &lt;em&gt;Copyright.Editor&lt;/em&gt; while the &lt;em&gt;IFD0&lt;/em&gt; sections contains the byte array with the NULL character that splits both entries. Or just the first entry if the datatype was wrong (normal behaviour of Exif). The &lt;em&gt;COMPUTED&lt;/em&gt; will also contain the entry &lt;em&gt;Copyright&lt;/em&gt; which is either the original copyright string, or a comma separated list of the photo and editor copyright.</source>
          <target state="translated">Exif 헤더에 저작권 메모가 포함 된 경우이 자체에는 두 개의 값이 포함될 수 있습니다. 솔루션이 Exif 2.10 표준에서 일치하지 &lt;em&gt;않으므로 &lt;/em&gt;&lt;em&gt;COMPUTED&lt;/em&gt; 섹션은 &lt;em&gt;Copyright.Photographer&lt;/em&gt; 및 &lt;em&gt;Copyright.Editor&lt;/em&gt; 항목을 모두 반환 하지만 &lt;em&gt;IFD0&lt;/em&gt; 섹션에는 두 항목을 분할하는 NULL 문자가있는 바이트 배열이 포함됩니다. 또는 데이터 유형이 잘못된 경우 첫 번째 항목 (Exif의 정상적인 동작)입니다. &lt;em&gt;COMPUTED는&lt;/em&gt; 또한 항목이 포함됩니다 &lt;em&gt;저작권&lt;/em&gt; 하거나 원래의 저작권 문자열 또는 사진 편집자 저작권의 쉼표로 구분 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d0afbedaf451d57d0fe66c83f081f4621ba07eb0" translate="yes" xml:space="preserve">
          <source>When an autloading is trigger, &lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt; will determine which library directory should be searched in by exame the prefix name of the missed classname. If the prefix name is registered as a localnamespack then look for it in local library directory, otherwise look for it in global library directory.</source>
          <target state="translated">자동 로딩이 트리거되면 &lt;a href=&quot;class.yaf-loader&quot;&gt;Yaf_Loader&lt;/a&gt; 는 누락 된 클래스 이름의 접두사 이름을 검사하여 검색 할 라이브러리 디렉토리를 결정합니다. 접두사 이름이 localnamespack으로 등록 된 경우 로컬 라이브러리 디렉토리에서 찾거나 전역 라이브러리 디렉토리에서 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="f0883b47cfab16b182db8cf155806d57adb49268" translate="yes" xml:space="preserve">
          <source>When an exception is thrown, code following the statement will not be executed, and PHP will attempt to find the first matching &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block. If an exception is not caught, a PHP Fatal Error will be issued with an &quot;&lt;code&gt;Uncaught Exception ...&lt;/code&gt;&quot; message, unless a handler has been defined with &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adbdfe1f86b0c70eff01069b0a1a8a817a1b18f" translate="yes" xml:space="preserve">
          <source>When an exception is thrown, code following the statement will not be executed, and PHP will attempt to find the first matching &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; block. If an exception is not caught, a PHP Fatal Error will be issued with an &quot;&lt;em&gt;Uncaught Exception ...&lt;/em&gt;&quot; message, unless a handler has been defined with &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt;.</source>
          <target state="translated">예외가 발생하면 명령문 뒤의 코드가 실행되지 않고 PHP는 첫 번째 일치하는 &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; 블록 을 찾으려고 시도합니다 . 예외가 발견 되지 않으면 핸들러가 &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler ()&lt;/a&gt; 로 정의되지 않은 경우 &quot; 치명되지 않은 &lt;em&gt;예외 ...&lt;/em&gt; &quot;메시지 와 함께 PHP 치명적 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="28010906c954841c73678e15ae9f00687f285abc" translate="yes" xml:space="preserve">
          <source>When an extending class overrides the parents definition of a method, PHP will not call the parent's method. It's up to the extended class on whether or not the parent's method is called. This also applies to &lt;a href=&quot;language.oop5.decon&quot;&gt;Constructors and Destructors&lt;/a&gt;, &lt;a href=&quot;language.oop5.overloading&quot;&gt;Overloading&lt;/a&gt;, and &lt;a href=&quot;language.oop5.magic&quot;&gt;Magic&lt;/a&gt; method definitions.</source>
          <target state="translated">확장 클래스가 메소드의 부모 정의를 재정의하면 PHP는 부모의 메소드를 호출하지 않습니다. 부모의 메소드 호출 여부에 대한 확장 클래스에 달려 있습니다. 이것은 &lt;a href=&quot;language.oop5.decon&quot;&gt;생성자와 소멸자&lt;/a&gt; , &lt;a href=&quot;language.oop5.overloading&quot;&gt;오버로딩&lt;/a&gt; 및 &lt;a href=&quot;language.oop5.magic&quot;&gt;매직&lt;/a&gt; 메소드 정의 에도 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="72ef869fe88d8aaf031e2439c061ac48df8fd4c6" translate="yes" xml:space="preserve">
          <source>When an object is cloned, PHP 5 will perform a shallow copy of all of the object's properties. Any properties that are references to other variables will remain references.</source>
          <target state="translated">객체가 복제 될 때, PHP 5는 모든 객체 속성의 얕은 사본을 수행합니다. 다른 변수를 참조하는 모든 속성은 참조로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="5fe19e2000ca79864e8b94de9797f1825faab70f" translate="yes" xml:space="preserve">
          <source>When an object is cloned, PHP will perform a shallow copy of all of the object's properties. Any properties that are references to other variables will remain references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773aea7e261dbdd51ffaf4261c97f26e8ad868f0" translate="yes" xml:space="preserve">
          <source>When an object is destroyed, its hash may be reused for other objects.</source>
          <target state="translated">객체가 파괴되면 해시가 다른 객체에 재사용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1d4545951b5fcac9bc933b7ca2751e66ef064b4" translate="yes" xml:space="preserve">
          <source>When an object is destroyed, its id may be reused for other objects.</source>
          <target state="translated">객체가 파괴되면 해당 객체의 ID가 다른 객체에 재사용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7eee0e4e47ad76723052c55823f4bd8272f3bd8a" translate="yes" xml:space="preserve">
          <source>When an object is fetched, its properties are assigned from respective column values, and afterwards its constructor is invoked.</source>
          <target state="translated">객체를 가져 오면 해당 속성이 각 열 값에서 할당 된 후 생성자가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="473a3db88282d484298b6d764748029afe1e12be" translate="yes" xml:space="preserve">
          <source>When an operation (e.g. receive, send, connect, accept, ...) is performed on a blocking socket, the script will pause its execution until it receives a signal or it can perform the operation.</source>
          <target state="translated">차단 소켓에서 작업 (예 : 수신, 전송, 연결, 수락, ...)이 수행되면 스크립트는 신호를 받거나 작업을 수행 할 수있을 때까지 실행을 일시 중지합니다.</target>
        </trans-unit>
        <trans-unit id="f3cf8ebffb41daedb940c05fa60dd087d8e5d509" translate="yes" xml:space="preserve">
          <source>When an operation (e.g. receive, send, connect, accept, ...) is performed on a non-blocking socket, the script will not pause its execution until it receives a signal or it can perform the operation. Rather, if the operation would result in a block, the called function will fail.</source>
          <target state="translated">비 차단 소켓에서 작업 (예 : 수신, 전송, 연결, 수락, ...)이 수행되면 스크립트는 신호를 받거나 작업을 수행 할 수있을 때까지 실행을 일시 중지하지 않습니다. 오히려 작업으로 인해 블록이 발생하면 호출 된 함수가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="16c2a67b85200ff368436e2c19ba59cc147fe2e4" translate="yes" xml:space="preserve">
          <source>When an option change occurs at top level (that is, not inside subpattern parentheses), the change applies to the remainder of the pattern that follows. So &lt;code&gt;/ab(?i)c/&lt;/code&gt; matches only &quot;abc&quot; and &quot;abC&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a9ccd7c327dfc8e94f86cf5b9f862d2a869051" translate="yes" xml:space="preserve">
          <source>When an option change occurs at top level (that is, not inside subpattern parentheses), the change applies to the remainder of the pattern that follows. So &lt;em&gt;/ab(?i)c/&lt;/em&gt; matches only &quot;abc&quot; and &quot;abC&quot;.</source>
          <target state="translated">옵션 변경이 최상위 레벨에서 (즉, 서브 패턴 괄호 안에 있지 않은) 발생하면 변경 사항은 다음 패턴의 나머지 부분에 적용됩니다. 따라서 &lt;em&gt;/ ab (? i) c /&lt;/em&gt; 는 &quot;abc&quot;및 &quot;abC&quot;와만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9115a19bb2b21903f1909f279d5ae6c78bf6dd88" translate="yes" xml:space="preserve">
          <source>When assigning an already created instance of a class to a new variable, the new variable will access the same instance as the object that was assigned. This behaviour is the same when passing instances to a function. A copy of an already created object can be made by &lt;a href=&quot;language.oop5.cloning&quot;&gt;cloning&lt;/a&gt; it.</source>
          <target state="translated">이미 작성된 클래스의 인스턴스를 새 변수에 지정하면 새 변수는 지정된 오브젝트와 동일한 인스턴스에 액세스합니다. 이 동작은 인스턴스를 함수에 전달할 때와 동일합니다. 이미 생성 된 객체의 사본은 &lt;a href=&quot;language.oop5.cloning&quot;&gt;복제&lt;/a&gt; 하여 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95d6b816bd410d2506bd981f378eb8cb5ded0179" translate="yes" xml:space="preserve">
          <source>When binary SQL data is converted to character C data (&lt;strong&gt;&lt;code&gt;ODBC_BINMODE_CONVERT&lt;/code&gt;&lt;/strong&gt;), each byte (8 bits) of source data is represented as two ASCII characters. These characters are the ASCII character representation of the number in its hexadecimal form. For example, a binary &lt;code&gt;00000001&lt;/code&gt; is converted to &lt;code&gt;&quot;01&quot;&lt;/code&gt; and a binary &lt;code&gt;11111111&lt;/code&gt; is converted to &lt;code&gt;&quot;FF&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfc2149ebb61a70c718c6122c2837b0a4537485" translate="yes" xml:space="preserve">
          <source>When binary SQL data is converted to character C data, each byte (8 bits) of source data is represented as two ASCII characters. These characters are the ASCII character representation of the number in its hexadecimal form. For example, a binary &lt;em&gt;00000001&lt;/em&gt; is converted to &lt;em&gt;&quot;01&quot;&lt;/em&gt; and a binary &lt;em&gt;11111111&lt;/em&gt; is converted to &lt;em&gt;&quot;FF&quot;&lt;/em&gt;.</source>
          <target state="translated">이진 SQL 데이터가 문자 C 데이터로 변환 될 때 소스 데이터의 각 바이트 (8 비트)는 두 개의 ASCII 문자로 표시됩니다. 이 문자는 16 진수 형식으로 숫자의 ASCII 문자 표현입니다. 예를 들어, 이진 &lt;em&gt;00000001&lt;/em&gt; 은 &lt;em&gt;&quot;01&quot;&lt;/em&gt; 로 변환되고 이진 &lt;em&gt;11111111&lt;/em&gt; 은 &lt;em&gt;&quot;FF&quot;&lt;/em&gt; 로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="a7702644bc994ea940bddfc445b96ef482bb4438" translate="yes" xml:space="preserve">
          <source>When building an LDAP filter, you should use ldap_escape with LDAP_ESCAPE_FILTER flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a81c427d8208375abd62fc3f49e2a6add48b17d" translate="yes" xml:space="preserve">
          <source>When called with no arguments, &lt;strong&gt;mktime()&lt;/strong&gt; throws &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; notice. Use the &lt;a href=&quot;function.time&quot;&gt;time()&lt;/a&gt; function instead.</source>
          <target state="translated">인수없이 호출하면 &lt;strong&gt; mktime ()&lt;/strong&gt; 은 &lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt; 통지를 발생시킵니다. 사용 &lt;a href=&quot;function.time&quot;&gt;시간 ()&lt;/a&gt; 대신 기능을.</target>
        </trans-unit>
        <trans-unit id="b20751c9b4b713738f4564e520c1702fdca64335" translate="yes" xml:space="preserve">
          <source>When called, &lt;strong&gt;set_time_limit()&lt;/strong&gt; restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as &lt;code&gt;set_time_limit(20)&lt;/code&gt; is made, the script will run for a total of 45 seconds before timing out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f248eb7b438ee0dd21e8953d5107df9d1411ffa5" translate="yes" xml:space="preserve">
          <source>When called, &lt;strong&gt;set_time_limit()&lt;/strong&gt; restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as &lt;em&gt;set_time_limit(20)&lt;/em&gt; is made, the script will run for a total of 45 seconds before timing out.</source>
          <target state="translated">호출되면 &lt;strong&gt;set_time_limit ()&lt;/strong&gt; 는 시간 종료 카운터를 0에서 다시 시작합니다. 즉, 시간 초과가 기본 30 초이고 스크립트 실행에 25 초가 &lt;em&gt;걸리면 set_time_limit (20)&lt;/em&gt; 과 같은 호출 이 이루어지고 스크립트는 시간 초과되기 전에 총 45 초 동안 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="26541bfbd1621348ec6b3108b8409eb364b7c8aa" translate="yes" xml:space="preserve">
          <source>When calling static methods, the function call is stronger than the static property operator:</source>
          <target state="translated">정적 메소드를 호출 할 때 함수 호출은 정적 특성 연산자보다 강력합니다.</target>
        </trans-unit>
        <trans-unit id="6a456ae570f823443708ace06570a023583c5454" translate="yes" xml:space="preserve">
          <source>When calling without an argument, it simply returns the current list of extensions each separated by comma. To modify the list of file extensions, simply invoke the functions with the new list of file extensions to use in a single string with each extensions separated by comma.</source>
          <target state="translated">인수없이 호출하면 단순히 각 확장명 목록을 쉼표로 구분하여 반환합니다. 파일 확장자 목록을 수정하려면 새 파일 확장자 목록으로 함수를 호출하여 각 확장자가 쉼표로 구분 된 단일 문자열에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4bfa942dfc8ac1e1f4753c455141a3868023532a" translate="yes" xml:space="preserve">
          <source>When case-insensitive (caseless) matching is set, any letters in a class represent both their upper case and lower case versions, so for example, an insensitive [aeiou] matches &quot;A&quot; as well as &quot;a&quot;, and an insensitive [^aeiou] does not match &quot;A&quot;, whereas a sensitive (caseful) version would.</source>
          <target state="translated">대소 문자를 구분하지 않는 (대소 문자가없는) 일치가 설정되면 클래스의 모든 문자는 대문자와 소문자 버전을 모두 나타내므로, 예를 들어, [aeiou]는 &quot;a&quot;뿐만 아니라 &quot;a&quot;와도 일치하지 않습니다. ^ aeiou]는 &quot;A&quot;와 일치하지 않지만 민감한 (caseful) 버전입니다.</target>
        </trans-unit>
        <trans-unit id="860940668240e03e9cb7e0514cda37413921f3eb" translate="yes" xml:space="preserve">
          <source>When combined with namespaces, the only legal syntax for declare is &lt;code&gt;declare(encoding='...');&lt;/code&gt; where &lt;code&gt;...&lt;/code&gt; is the encoding value. &lt;code&gt;declare(encoding='...') {}&lt;/code&gt; will result in a parse error when combined with namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c67689d778d38d17dc68af8228ddde1c7125ecb" translate="yes" xml:space="preserve">
          <source>When combined with namespaces, the only legal syntax for declare is &lt;em&gt;declare(encoding='...');&lt;/em&gt; where &lt;em&gt;...&lt;/em&gt; is the encoding value. &lt;em&gt;declare(encoding='...') {}&lt;/em&gt; will result in a parse error when combined with namespaces.</source>
          <target state="translated">네임 스페이스와 결합 할 때, 선언의 유일한 올바른 구문은 다음과 같습니다 : &lt;em&gt;declaration (encoding = '...'); &lt;/em&gt;여기서 &lt;em&gt;...&lt;/em&gt; 는 인코딩 값입니다. &lt;em&gt;선언 (encoding = '...') {}&lt;/em&gt; 은 네임 스페이스와 결합 될 때 구문 분석 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="1f36683027410b24b0aa8fd18a20241f94cfd290" translate="yes" xml:space="preserve">
          <source>When consuming a result set that has multiple columns with the same name, it may be better to use &lt;a href=&quot;function.sqlsrv-fetch-array&quot;&gt;sqlsrv_fetch_array()&lt;/a&gt; or the combination of &lt;a href=&quot;function.sqlsrv-fetch&quot;&gt;sqlsrv_fetch()&lt;/a&gt; and &lt;a href=&quot;function.sqlsrv-get-field&quot;&gt;sqlsrv_get_field()&lt;/a&gt;.</source>
          <target state="translated">이름이 같은 여러 열이있는 결과 집합을 사용할 때는 &lt;a href=&quot;function.sqlsrv-fetch-array&quot;&gt;sqlsrv_fetch_array ()&lt;/a&gt; 또는 &lt;a href=&quot;function.sqlsrv-fetch&quot;&gt;sqlsrv_fetch ()&lt;/a&gt; 및 &lt;a href=&quot;function.sqlsrv-get-field&quot;&gt;sqlsrv_get_field ()&lt;/a&gt; 조합 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="6791642cf7b5127c8ce14817bfe2139a905e0e71" translate="yes" xml:space="preserve">
          <source>When converting from &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;, the number will be rounded &lt;em&gt;towards zero&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; 에서 &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; 로 변환 할 때 숫자는 &lt;em&gt;0&lt;/em&gt; 으로 반올림 &lt;em&gt;됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b017bac29064109fd5b6d6c8eed714473d91f6ae" translate="yes" xml:space="preserve">
          <source>When converting from float to int, the number will be rounded &lt;em&gt;towards zero&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5aa1a27861ea1935b5aae74f2f9dcfd2898f8e" translate="yes" xml:space="preserve">
          <source>When converting to &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;, the following values are considered &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;a href=&quot;language.types.boolean&quot;&gt;boolean으로&lt;/a&gt; 변환 할 때 다음 값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 로 간주됩니다&lt;strong&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="478ed3ac4880f71209c22d87c6cd86f3bb046b8c" translate="yes" xml:space="preserve">
          <source>When converting to bool, the following values are considered &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ea72175f4ac1c88e142256244034fabbc6b1dd" translate="yes" xml:space="preserve">
          <source>When count of OIDs in object_id array is greater than max_oids object property set method will have to use multiple queries to perform requested value updates. In this case type and value checks are made per-chunk so second or subsequent requests may fail due to wrong type or value for OID requested. To mark this a warning is raised when count of OIDs in object_id array is greater than max_oids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9742250710c892b6189e85fc932300193efbce78" translate="yes" xml:space="preserve">
          <source>When creating additional windows, remember to use &lt;a href=&quot;function.ncurses-getmaxyx&quot;&gt;ncurses_getmaxyx()&lt;/a&gt; to check for available space, as terminal size is individual and may vary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381268eb4092aa47982da5f7f969e661345e883a" translate="yes" xml:space="preserve">
          <source>When declared in the context of a class, the current class is automatically bound to it, making &lt;code&gt;$this&lt;/code&gt; available inside of the function's scope. If this automatic binding of the current class is not wanted, then &lt;a href=&quot;functions.anonymous#functions.anonymous-functions.static&quot;&gt;static anonymous functions&lt;/a&gt; may be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937d50efc1ee33117dad9a4dbfd142611048c6e4" translate="yes" xml:space="preserve">
          <source>When deleting a cookie you should assure that the expiration date is in the past, to trigger the removal mechanism in your browser. Examples follow how to delete cookies sent in previous example:</source>
          <target state="translated">쿠키를 삭제할 때 브라우저에서 제거 메커니즘을 트리거하기 위해 만료 날짜가 과거인지 확인해야합니다. 예는 이전 예에서 전송 된 쿠키를 삭제하는 방법을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="2bf3a6ecca45a85e29c21afb533c401e15c75fb9" translate="yes" xml:space="preserve">
          <source>When disabled, PHP will ignore the IP address returned by the FTP server in response to the PASV command and instead use the IP address that was supplied in the ftp_connect(). &lt;code&gt;value&lt;/code&gt; must be a boolean.</source>
          <target state="translated">비활성화하면 PHP는 PASV 명령에 대한 응답으로 FTP 서버가 반환 한 IP 주소를 무시하고 대신 ftp_connect ()에 제공된 IP 주소를 사용합니다. &lt;code&gt;value&lt;/code&gt; 은 부울이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c7cc006dc6c26700795f19bae3eb1f08998be7cb" translate="yes" xml:space="preserve">
          <source>When doing Digest HTTP authentication this variable is set to the 'Authorization' header sent by the client (which you should then use to make the appropriate validation).</source>
          <target state="translated">다이제스트 HTTP 인증을 수행 할 때이 변수는 클라이언트가 보낸 'Authorization'헤더로 설정됩니다 (적절한 유효성 검사에 사용해야 함).</target>
        </trans-unit>
        <trans-unit id="5005dd2fb4575b707f511d15664c64d2f93f4bc2" translate="yes" xml:space="preserve">
          <source>When doing HTTP authentication this variable is set to the authentication type.</source>
          <target state="translated">HTTP 인증을 수행 할 때이 변수는 인증 유형으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ae0584fd54fdda79d9401432347e268b67429d5b" translate="yes" xml:space="preserve">
          <source>When doing HTTP authentication this variable is set to the password provided by the user.</source>
          <target state="translated">HTTP 인증을 수행 할 때이 변수는 사용자가 제공 한 비밀번호로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e92d053255f03962d73e70f4f3b6484ec20a39dc" translate="yes" xml:space="preserve">
          <source>When doing HTTP authentication this variable is set to the username provided by the user.</source>
          <target state="translated">HTTP 인증을 수행 할 때이 변수는 사용자가 제공 한 사용자 이름으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5726019da74d93faf5f991dd3aa740fa59326213" translate="yes" xml:space="preserve">
          <source>When enabled, GET or PUT requests with a &lt;code&gt;resumepos&lt;/code&gt; or &lt;code&gt;startpos&lt;/code&gt; parameter will first seek to the requested position within the file. This is enabled by default.</source>
          <target state="translated">활성화되면 &lt;code&gt;resumepos&lt;/code&gt; 또는 &lt;code&gt;startpos&lt;/code&gt; 매개 변수가 있는 GET 또는 PUT 요청 이 먼저 파일 내에서 요청 된 위치를 찾습니다. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e176af26e9638e99968428e6e6ffe9e2423ecc2a" translate="yes" xml:space="preserve">
          <source>When encoding an array, if the keys are not a continuous numeric sequence starting from 0, all keys are encoded as strings, and specified explicitly for each key-value pair.</source>
          <target state="translated">배열을 인코딩 할 때 키가 0부터 시작하는 연속 숫자 시퀀스가 ​​아닌 경우 모든 키는 문자열로 인코딩되고 각 키-값 쌍에 대해 명시 적으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="ea4d62ab5510822bd93fccbc8caea2449e3eeea8" translate="yes" xml:space="preserve">
          <source>When executed, this script will print the following:</source>
          <target state="translated">실행되면이 스크립트는 다음을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="b277c95a0abe293ef12c8531834ea72ee4633bbf" translate="yes" xml:space="preserve">
          <source>When executing the example with: php script.php arg1 arg2 arg3</source>
          <target state="translated">다음을 사용하여 예제를 실행할 때 : php script.php arg1 arg2 arg3</target>
        </trans-unit>
        <trans-unit id="45749d12b234575c0d61faed14757d70eb7d25c9" translate="yes" xml:space="preserve">
          <source>When getting the encoding detection order, an ordered array of the encodings is returned.</source>
          <target state="translated">인코딩 감지 순서를 가져 오면 정렬 된 인코딩 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="895397df9c61a3ac749ec54099091559e7c3d345" translate="yes" xml:space="preserve">
          <source>When inheriting from an abstract class, all methods marked abstract in the parent's class declaration must be defined by the child; additionally, these methods must be defined with the same (or a less restricted) &lt;a href=&quot;language.oop5.visibility&quot;&gt;visibility&lt;/a&gt;. For example, if the abstract method is defined as protected, the function implementation must be defined as either protected or public, but not private. Furthermore the signatures of the methods must match, i.e. the type hints and the number of required arguments must be the same. For example, if the child class defines an optional argument, where the abstract method's signature does not, there is no conflict in the signature. This also applies to constructors as of PHP 5.4. Before 5.4 constructor signatures could differ.</source>
          <target state="translated">추상 클래스에서 상속 할 때 부모 클래스 선언에서 abstract로 표시된 모든 메소드는 자식에 의해 정의되어야합니다. 또한 이러한 방법은 &lt;a href=&quot;language.oop5.visibility&quot;&gt;가시성&lt;/a&gt; 이 동일하거나 덜 제한적이어야합니다. . 예를 들어, 추상 메소드가 protected로 정의 된 경우 함수 구현은 protected가 아닌 public 또는 private으로 정의되어야합니다. 또한 메소드의 서명이 일치해야합니다. 즉, 유형 힌트와 필수 인수의 수가 같아야합니다. 예를 들어, 자식 클래스가 추상 메서드의 서명이없는 선택적 인수를 정의하면 서명에 충돌이 없습니다. 이것은 PHP 5.4부터 생성자에도 적용됩니다. 5.4 이전에는 생성자 서명이 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d25ccb323f20371a259e5fbf3a5614338047acc1" translate="yes" xml:space="preserve">
          <source>When instantiating a custom &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; the &lt;var&gt;&lt;var&gt;ownerDocument&lt;/var&gt;&lt;/var&gt; property will refer to the instantiated class, meaning there is no need (and in fact not possible) to use &lt;strong&gt;DOMDocument::registerNodeClass()&lt;/strong&gt; with &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt;</source>
          <target state="translated">사용자 정의 인스턴스화 할 때 &lt;a href=&quot;class.domdocument&quot;&gt;있는 DOMDocument를 &lt;/a&gt; &lt;var&gt;&lt;var&gt;ownerDocument&lt;/var&gt;&lt;/var&gt; 속성은 필요가 없습니다 의미 인스턴스화 된 클래스를 참조한다 (그리고 수없는 사실)를 사용하는 &lt;strong&gt;있는 DOMDocument :: registerNodeClass을 ()&lt;/strong&gt; 에 &lt;a href=&quot;class.domdocument&quot;&gt;있는 DOMDocument&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6163194734a7f0a1831b1373f2b29064a5550f97" translate="yes" xml:space="preserve">
          <source>When instantiating a custom &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; the &lt;var&gt;ownerDocument&lt;/var&gt; property will refer to the instantiated class, meaning there is no need (and in fact not possible) to use &lt;strong&gt;DOMDocument::registerNodeClass()&lt;/strong&gt; with &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760c023619e115e4f11d919cea77adebbad61888" translate="yes" xml:space="preserve">
          <source>When invoked as constructor, on failure an &lt;a href=&quot;class.intlexception&quot;&gt;IntlException&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9828a647165a2f3e0f144f8bded8930f9ffbd67e" translate="yes" xml:space="preserve">
          <source>When more than one of &lt;strong&gt;&lt;code&gt;ENT_COMPAT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_QUOTES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_NOQUOTES&lt;/code&gt;&lt;/strong&gt; is present, &lt;strong&gt;&lt;code&gt;ENT_QUOTES&lt;/code&gt;&lt;/strong&gt; takes the highest precedence, followed by &lt;strong&gt;&lt;code&gt;ENT_COMPAT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ENT_COMPAT&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_QUOTES&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_NOQUOTES&lt;/code&gt; &lt;/strong&gt; 중 하나 이상 이 존재하면 &lt;strong&gt; &lt;code&gt;ENT_QUOTES&lt;/code&gt; &lt;/strong&gt; 가 가장 높은 우선 순위를 &lt;strong&gt; &lt;code&gt;ENT_COMPAT&lt;/code&gt; &lt;/strong&gt; 뒤 &lt;strong&gt;따릅니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d7a2c215d40d69b4c92fbca4bc8cba0556a93b77" translate="yes" xml:space="preserve">
          <source>When more than one of &lt;strong&gt;&lt;code&gt;ENT_DISALLOWED&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_IGNORE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_SUBSTITUTE&lt;/code&gt;&lt;/strong&gt; are present, &lt;strong&gt;&lt;code&gt;ENT_IGNORE&lt;/code&gt;&lt;/strong&gt; takes the highest precedence, followed by &lt;strong&gt;&lt;code&gt;ENT_SUBSTITUTE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ENT_DISALLOWED&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_IGNORE&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_SUBSTITUTE&lt;/code&gt; &lt;/strong&gt; 중 하나 이상 이 존재하면 &lt;strong&gt; &lt;code&gt;ENT_IGNORE&lt;/code&gt; &lt;/strong&gt; 가 가장 높은 우선 순위를 &lt;strong&gt;가지며 ENT_SUBSTITUTE&lt;/strong&gt; 가 뒤 &lt;strong&gt; &lt;code&gt;ENT_SUBSTITUTE&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0c4cebed3f75f8053c6f8811adeaacc5b102732c" translate="yes" xml:space="preserve">
          <source>When more than one of &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_HTML5&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XHTML&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XML1&lt;/code&gt;&lt;/strong&gt; is present, &lt;strong&gt;&lt;code&gt;ENT_HTML5&lt;/code&gt;&lt;/strong&gt; takes the highest precedence, followed by &lt;strong&gt;&lt;code&gt;ENT_XHTML&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ENT_HTML401&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_HTML5&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_XHTML&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_XML1&lt;/code&gt; &lt;/strong&gt; 중 하나 이상 이 존재하면 &lt;strong&gt; &lt;code&gt;ENT_HTML5&lt;/code&gt; &lt;/strong&gt; 가 가장 높은 우선 순위를 &lt;strong&gt; &lt;code&gt;ENT_XHTML&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_HTML401&lt;/code&gt; 이&lt;/strong&gt; 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="451e4267e3fbb9a2d14cc2eb644707bf06fee964" translate="yes" xml:space="preserve">
          <source>When more than one of &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_HTML5&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XHTML&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XML1&lt;/code&gt;&lt;/strong&gt; is present, &lt;strong&gt;&lt;code&gt;ENT_HTML5&lt;/code&gt;&lt;/strong&gt; takes the highest precedence, followed by &lt;strong&gt;&lt;code&gt;ENT_XHTML&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XML1&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0525ee2a95f009d4b4f5cea55cbe9beceb120329" translate="yes" xml:space="preserve">
          <source>When neither of &lt;strong&gt;&lt;code&gt;ENT_COMPAT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_QUOTES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_NOQUOTES&lt;/code&gt;&lt;/strong&gt; is present, the default is &lt;strong&gt;&lt;code&gt;ENT_COMPAT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ENT_COMPAT&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_QUOTES&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_NOQUOTES&lt;/code&gt; &lt;/strong&gt; 가 존재 하지 않는 경우 기본값은 &lt;strong&gt; &lt;code&gt;ENT_COMPAT&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8e397a65d4e66169676b56b96de7f42536f716dd" translate="yes" xml:space="preserve">
          <source>When neither of &lt;strong&gt;&lt;code&gt;ENT_COMPAT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_QUOTES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_NOQUOTES&lt;/code&gt;&lt;/strong&gt; is present, the default is &lt;strong&gt;&lt;code&gt;ENT_NOQUOTES&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797e0bd8c3a7e11f129a6860deaea1f37ba09102" translate="yes" xml:space="preserve">
          <source>When neither of &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_HTML5&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XHTML&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XML1&lt;/code&gt;&lt;/strong&gt; is present, the default is &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ENT_HTML401&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_HTML5&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_XHTML&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;ENT_XML1&lt;/code&gt; &lt;/strong&gt; 중 어느 것도 존재하지 않으면 기본값은 &lt;strong&gt; &lt;code&gt;ENT_HTML401&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d88835dde02fd3fae31fc61d30e47044c760ddb5" translate="yes" xml:space="preserve">
          <source>When not enough random data is available to the system, this function will fill the remaining random bytes using the internal PHP &lt;a href=&quot;function.rand&quot;&gt;rand()&lt;/a&gt; implementation.</source>
          <target state="translated">시스템에 사용 가능한 임의의 데이터가 충분하지 않은 경우이 함수는 내부 PHP &lt;a href=&quot;function.rand&quot;&gt;rand ()&lt;/a&gt; 구현을 사용하여 나머지 임의 바이트를 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="ddf5f8b574cbfc6791790f651d792b69c764ab89" translate="yes" xml:space="preserve">
          <source>When objects are fetched via &lt;code&gt;PDO::FETCH_CLASS&lt;/code&gt; the object properties are assigned first, and then the constructor of the class is invoked. If &lt;code&gt;PDO::FETCH_PROPS_LATE&lt;/code&gt; is also given, this order is reversed, i.e. first the constructor is called, and afterwards the properties are assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0288e8a03062f3f725b197157bbd67a001b70b7a" translate="yes" xml:space="preserve">
          <source>When objects are fetched via &lt;em&gt;PDO::FETCH_CLASS&lt;/em&gt; the object properties are assigned first, and then the constructor of the class is invoked. If &lt;em&gt;PDO::FETCH_PROPS_LATE&lt;/em&gt; is also given, this order is reversed, i.e. first the constructor is called, and afterwards the properties are assigned.</source>
          <target state="translated">&lt;em&gt;PDO :: FETCH_CLASS&lt;/em&gt; 를 통해 객체를 가져 &lt;em&gt;오면&lt;/em&gt; 객체 속성이 먼저 할당 된 다음 클래스 생성자가 호출됩니다. 경우 &lt;em&gt;PDO :: FETCH_PROPS_LATE이&lt;/em&gt; 또한 제공됩니다,이 순서 즉 먼저 생성자가 호출되고, 반전되고, 이후에 속성이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="8341a93aa8f87729c48001b05247dac0db847c1c" translate="yes" xml:space="preserve">
          <source>When operators have equal precedence their associativity decides how the operators are grouped. For example &quot;-&quot; is left-associative, so &lt;code&gt;1 - 2 - 3&lt;/code&gt; is grouped as &lt;code&gt;(1 - 2) - 3&lt;/code&gt; and evaluates to &lt;code&gt;-4&lt;/code&gt;. &quot;=&quot; on the other hand is right-associative, so &lt;code&gt;$a = $b = $c&lt;/code&gt; is grouped as &lt;code&gt;$a = ($b = $c)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc0bc7632b81953ce2679b6ac9a331d8efe5d1f" translate="yes" xml:space="preserve">
          <source>When operators have equal precedence their associativity decides how the operators are grouped. For example &quot;-&quot; is left-associative, so &lt;em&gt;1 - 2 - 3&lt;/em&gt; is grouped as &lt;em&gt;(1 - 2) - 3&lt;/em&gt; and evaluates to &lt;em&gt;-4&lt;/em&gt;. &quot;=&quot; on the other hand is right-associative, so &lt;em&gt;$a = $b = $c&lt;/em&gt; is grouped as &lt;em&gt;$a = ($b = $c)&lt;/em&gt;.</source>
          <target state="translated">연산자의 우선 순위가 같으면 연관성이 연산자 그룹화 방법을 결정합니다. 예를 들어 &quot;-&quot;는 왼쪽 연관이므로 1-2-3은 &lt;em&gt;(1-2) &lt;/em&gt;&lt;em&gt;-3&lt;/em&gt; 으로 그룹화되고 &lt;em&gt;-4로&lt;/em&gt; 평가됩니다 . &quot;=&quot;반면에 오른쪽 연관이므로 &lt;em&gt;$ a = $ b = $ c&lt;/em&gt; 는 &lt;em&gt;$ a = ($ b = $ c)&lt;/em&gt; 로 그룹화됩니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2972caaa16039a4c89dfdfdb3d1cbca5523de2fa" translate="yes" xml:space="preserve">
          <source>When overriding a parent method, the child's method must match any return type declaration on the parent. If the parent doesn't define a return type, then the child method may do so.</source>
          <target state="translated">부모 메서드를 재정의하는 경우 자식 메서드는 부모의 모든 반환 형식 선언과 일치해야합니다. 부모가 반환 유형을 정의하지 않으면 자식 메서드가 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05deff60839426d9ba13c1b9aca49fe87c277433" translate="yes" xml:space="preserve">
          <source>When overriding methods, the parameter signature should remain the same or PHP will generate an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; level error. This does not apply to the constructor, which allows overriding with different parameters.</source>
          <target state="translated">메서드를 재정의 할 때 매개 변수 서명은 동일하게 유지되어야합니다. 그렇지 않으면 PHP가 &lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt; 수준 오류를 생성합니다 . 다른 매개 변수로 대체 할 수있는 생성자에는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ace7b4ee70e90742dc096cc4cfa790bcea5f4b1d" translate="yes" xml:space="preserve">
          <source>When passed in a valid hash created by an algorithm supported by &lt;a href=&quot;function.password-hash&quot;&gt;password_hash()&lt;/a&gt;, this function will return an array of information about that hash.</source>
          <target state="translated">&lt;a href=&quot;function.password-hash&quot;&gt;password_hash ()가&lt;/a&gt; 지원하는 알고리즘으로 생성 된 유효한 해시로 전달되면 이 함수는 해당 해시에 대한 정보 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="63411548935a67fabdbe9a922f0c85cf1e7f6498" translate="yes" xml:space="preserve">
          <source>When passing arguments to a sandbox function, the arguments are taken from the outer instance of PHP. If you wish to pass arguments from the sandbox's scope, be sure to access them as properties of the sandbox object as illustrated above.</source>
          <target state="translated">샌드 박스 함수에 인수를 전달할 때 인수는 PHP의 외부 인스턴스에서 가져옵니다. 샌드 박스 범위에서 인수를 전달하려면 위에서 설명한대로 샌드 박스 객체의 속성으로 인수에 액세스해야합니다.</target>
        </trans-unit>
        <trans-unit id="6be79c61782a97360eec1313eebd89e40f72785d" translate="yes" xml:space="preserve">
          <source>When picking only one entry, &lt;strong&gt;array_rand()&lt;/strong&gt; returns the key for a random entry. Otherwise, an array of keys for the random entries is returned. This is done so that random keys can be picked from the array as well as random values. If multiple keys are returned, they will be returned in the order they were present in the original array. Trying to pick more elements than there are in the array will result in an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level error, and NULL will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdd5eb5c049e536f37d8dcdf07f7796e1a1ea08" translate="yes" xml:space="preserve">
          <source>When picking only one entry, &lt;strong&gt;array_rand()&lt;/strong&gt; returns the key for a random entry. Otherwise, an array of keys for the random entries is returned. This is done so that random keys can be picked from the array as well as random values. Trying to pick more elements than there are in the array will result in an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level error, and NULL will be returned.</source>
          <target state="translated">하나의 항목 만 선택할 때 &lt;strong&gt; 선택할 array_rand ()&lt;/strong&gt; 는 임의 항목의 키를 반환합니다. 그렇지 않으면 임의 항목에 대한 키 배열이 반환됩니다. 이것은 임의의 값뿐만 아니라 배열에서 임의의 키를 선택할 수 있도록 수행됩니다. 배열에있는 것보다 많은 요소를 선택하려고하면 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 레벨 오류가 발생하고 NULL이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6f9a6ab083297f569c1c85947b657fcdad222f84" translate="yes" xml:space="preserve">
          <source>When reading GIF files into memory, only the first frame is returned in the image resource pointer. The size of the image is not necessarily what is reported by &lt;a href=&quot;function.getimagesize&quot;&gt;getimagesize()&lt;/a&gt;.</source>
          <target state="translated">GIF 파일을 메모리로 읽을 때 첫 번째 프레임 만 이미지 리소스 포인터에 반환됩니다. 이미지의 크기가 반드시 &lt;a href=&quot;function.getimagesize&quot;&gt;getimagesize ()에&lt;/a&gt; 의해보고 된 것은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="7ebb13aac5fa45849beee6f426aa77911c7c8fd7" translate="yes" xml:space="preserve">
          <source>When reading from anything that is not a regular local file, such as streams returned when reading &lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;remote files&lt;/a&gt; or from &lt;a href=&quot;function.popen&quot;&gt;popen()&lt;/a&gt; and &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt;, reading will stop after a packet is available. This means that you should collect the data together in chunks as shown in the examples below.</source>
          <target state="translated">일반 로컬 파일이 아닙니다 아무것도에서 읽을 때 스트림 등은 읽을 때 반환 &lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;원격 파일&lt;/a&gt; 또는에서을&lt;a href=&quot;function.popen&quot;&gt; popen ()&lt;/a&gt; 및 &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen ()&lt;/a&gt; 패킷을 사용할 수있게되면 읽기가 중지됩니다. 즉, 아래 예와 같이 데이터를 청크로 모아야합니다.</target>
        </trans-unit>
        <trans-unit id="e15e0aaab8b539ec85faeaed7e81f4087d4a567f" translate="yes" xml:space="preserve">
          <source>When reading from anything that is not a regular local file, such as streams returned when reading &lt;a href=&quot;https://www.php.net/manual/en/features.remote-files.php&quot;&gt;remote files&lt;/a&gt; or from &lt;a href=&quot;function.popen&quot;&gt;popen()&lt;/a&gt; and &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt;, reading will stop after a packet is available. This means that you should collect the data together in chunks as shown in the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92767e1b09c194a5e2a17f0b4863ec959b01bd1a" translate="yes" xml:space="preserve">
          <source>When reading the whole file (for example, with &lt;a href=&quot;function.file-get-contents&quot;&gt;file_get_contents()&lt;/a&gt;), PHP will call &lt;a href=&quot;streamwrapper.stream-read&quot;&gt;streamWrapper::stream_read()&lt;/a&gt; followed by &lt;strong&gt;streamWrapper::stream_eof()&lt;/strong&gt; in a loop but as long as &lt;a href=&quot;streamwrapper.stream-read&quot;&gt;streamWrapper::stream_read()&lt;/a&gt; returns a non-empty string, the return value of &lt;strong&gt;streamWrapper::stream_eof()&lt;/strong&gt; is ignored.</source>
          <target state="translated">전체 파일을 읽을 때 (예 : &lt;a href=&quot;function.file-get-contents&quot;&gt;file_get_contents () 사용&lt;/a&gt; ) PHP는 &lt;a href=&quot;streamwrapper.stream-read&quot;&gt;streamWrapper :: stream_read ()&lt;/a&gt; 다음에 &lt;strong&gt;streamWrapper :: stream_eof ()&lt;/strong&gt; 를 루프에서 호출 하지만&lt;a href=&quot;streamwrapper.stream-read&quot;&gt; streamWrapper :: stream_read ()&lt;/a&gt; 가 비어 있지 않은 것을 반환하는 한 string의 경우 &lt;strong&gt;streamWrapper :: stream_eof ()&lt;/strong&gt; 의 반환 값 이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ac86c31bef80d45864ca565426b1e253086fc78e" translate="yes" xml:space="preserve">
          <source>When reading the whole file (for example, with &lt;a href=&quot;function.file-get-contents&quot;&gt;file_get_contents()&lt;/a&gt;), PHP will call &lt;strong&gt;streamWrapper::stream_read()&lt;/strong&gt; followed by &lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper::stream_eof()&lt;/a&gt; in a loop but as long as &lt;strong&gt;streamWrapper::stream_read()&lt;/strong&gt; returns a non-empty string, the return value of &lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper::stream_eof()&lt;/a&gt; is ignored.</source>
          <target state="translated">전체 파일을 읽을 때 (예 : &lt;a href=&quot;function.file-get-contents&quot;&gt;file_get_contents () 사용&lt;/a&gt; ) PHP는 &lt;strong&gt;streamWrapper :: stream_read ()&lt;/strong&gt; 다음에 &lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper :: stream_eof ()&lt;/a&gt; 를 루프에서 호출 하지만 &lt;strong&gt;streamWrapper :: stream_read ()&lt;/strong&gt; 가 비어 있지 않은 것을 반환하는 한 string의 경우 &lt;a href=&quot;streamwrapper.stream-eof&quot;&gt;streamWrapper :: stream_eof ()&lt;/a&gt; 의 반환 값 이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0d8a4090e46b7ca632ef23a825f897877b754c89" translate="yes" xml:space="preserve">
          <source>When referencing these items from outside the class definition, use the name of the class.</source>
          <target state="translated">클래스 정의 외부에서 이러한 항목을 참조 할 때는 클래스 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="795025dab2bef01d57e0535963a4bf8b71e1f74d" translate="yes" xml:space="preserve">
          <source>When repeating, this contains the offset value, otherwise this is the absolute point in time(the offset value passed to &lt;a href=&quot;evperiodic.set&quot;&gt;EvPeriodic::set()&lt;/a&gt; , although &lt;em&gt;libev&lt;/em&gt; might modify this value for better numerical stability).</source>
          <target state="translated">반복 할 때,이 (에 전달 된 오프셋 값, 그렇지 않으면이 시간에 절대 지점입니다, 오프셋 값을 포함 &lt;a href=&quot;evperiodic.set&quot;&gt;EvPeriodic :: 세트 ()&lt;/a&gt; 하지만, &lt;em&gt;libev가&lt;/em&gt; 더 좋은 수치 안정성이 값을 수정할 수 있음).</target>
        </trans-unit>
        <trans-unit id="4dd9e44ee815f7f794cfca01650e519bba62133f" translate="yes" xml:space="preserve">
          <source>When run in Finland (GMT +0200), the first line below prints &quot;Jan 01 1998 00:00:00&quot;, while the second prints &quot;Dec 31 1997 22:00:00&quot;.</source>
          <target state="translated">핀란드 (GMT +0200)에서 실행할 때 아래 첫 번째 줄은 &quot;Jan 01 1998 00:00:00&quot;을 인쇄하고 두 번째 줄은 &quot;Dec 31 1997 22:00:00&quot;을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="944e4c37f7834fa80e9bfda626950b2e8120f01c" translate="yes" xml:space="preserve">
          <source>When running PHP as a command line script, and the script's tty goes away without the script being terminated then the script will die the next time it tries to write anything, unless &lt;code&gt;value&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">PHP를 명령 행 스크립트로 실행할 때 스크립트가 종료되지 않고 스크립트의 tty가 사라지면 다음에 &lt;code&gt;value&lt;/code&gt; 을 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 로 설정 하지 않으면 스크립트는 다음에 무언가를 쓰려고 할 때 죽습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18c0d6ab59ff4b8a93d2a65eb1cd8b9bd19b685c" translate="yes" xml:space="preserve">
          <source>When running PHP as a command line script, and the script's tty goes away without the script being terminated then the script will die the next time it tries to write anything, unless &lt;code&gt;value&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90def8fc866327dba72edf0ed07612d8d23e1def" translate="yes" xml:space="preserve">
          <source>When running on the &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;command line &lt;/a&gt;, this will &lt;em&gt;not&lt;/em&gt; include the &lt;a href=&quot;reserved.variables.argv&quot;&gt;argv&lt;/a&gt; and &lt;a href=&quot;reserved.variables.argc&quot;&gt;argc&lt;/a&gt; entries; these are present in the &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;&lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;명령 행&lt;/a&gt; 에서 실행될 때 &lt;a href=&quot;reserved.variables.argv&quot;&gt;argv&lt;/a&gt; 및 &lt;a href=&quot;reserved.variables.argc&quot;&gt;argc&lt;/a&gt; 항목 은 포함 &lt;em&gt;되지 않습니다&lt;/em&gt; . 이것들은 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; &lt;a href=&quot;language.types.array&quot;&gt; 배열에 있습니다&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b19ffaa0d2f2b7ead0cfadaecbcb2dfa0fd1999" translate="yes" xml:space="preserve">
          <source>When running on the &lt;a href=&quot;https://www.php.net/manual/en/features.commandline.php&quot;&gt;command line &lt;/a&gt;, this will &lt;em&gt;not&lt;/em&gt; include the &lt;a href=&quot;reserved.variables.argv&quot;&gt;argv&lt;/a&gt; and &lt;a href=&quot;reserved.variables.argc&quot;&gt;argc&lt;/a&gt; entries; these are present in the &lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER&lt;/a&gt;&lt;/var&gt;array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614d16dd1f612f1dccf75498a348aee0b641c0ab" translate="yes" xml:space="preserve">
          <source>When sending mail, the mail &lt;em&gt;must&lt;/em&gt; contain a &lt;code&gt;From&lt;/code&gt; header. This can be set with the &lt;code&gt;additional_headers&lt;/code&gt; parameter, or a default can be set in &lt;var&gt;php.ini&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57686b673321e37605af0ab05c7f5c07e34fee0" translate="yes" xml:space="preserve">
          <source>When sending mail, the mail &lt;em&gt;must&lt;/em&gt; contain a &lt;em&gt;From&lt;/em&gt; header. This can be set with the &lt;code&gt;additional_headers&lt;/code&gt; parameter, or a default can be set in &lt;var&gt;php.ini&lt;/var&gt;.</source>
          <target state="translated">메일을 보낼 때 메일 에는 &lt;em&gt;From&lt;/em&gt; 헤더 &lt;em&gt;가&lt;/em&gt; 포함 &lt;em&gt;되어야&lt;/em&gt; 합니다 . 이것은 &lt;code&gt;additional_headers&lt;/code&gt; 파라미터 로 설정 하거나 &lt;var&gt;php.ini&lt;/var&gt; 에서 기본값을 설정할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a7c9ca2c6d6a09045bee4486043032116a05f46" translate="yes" xml:space="preserve">
          <source>When serializing objects, PHP will attempt to call the member function &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; prior to serialization. This is to allow the object to do any last minute clean-up, etc. prior to being serialized. Likewise, when the object is restored using &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt; the &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt; member function is called.</source>
          <target state="translated">객체를 직렬화 할 때 PHP는 직렬화 전에 멤버 함수 &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep ()&lt;/a&gt; 을 호출하려고 시도합니다 . 이것은 직렬화되기 전에 객체가 마지막 순간 정리 등을 수행 할 수 있도록하기위한 것입니다. 마찬가지로, &lt;a href=&quot;function.unserialize&quot;&gt;unserialize ()를&lt;/a&gt; 사용하여 객체를 복원 하면 &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup ()&lt;/a&gt; 멤버 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="00a12ea8cc1094b1601e410a03f73bcfac891d84" translate="yes" xml:space="preserve">
          <source>When serializing objects, PHP will attempt to call the member functions &lt;a href=&quot;language.oop5.magic#object.serialize&quot;&gt;__serialize()&lt;/a&gt; or &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; prior to serialization. This is to allow the object to do any last minute clean-up, etc. prior to being serialized. Likewise, when the object is restored using &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt; the &lt;a href=&quot;language.oop5.magic#object.unserialize&quot;&gt;__unserialize()&lt;/a&gt; or &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt; member function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febd7acc2a86bf5041e1e03417ac369f22921657" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (default) &lt;strong&gt;apc_sma_info()&lt;/strong&gt; will return a detailed information about each segment.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; (기본값)로 설정하면 &lt;strong&gt;apc_sma_info ()&lt;/strong&gt; 는 각 세그먼트에 대한 자세한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="884f8eca280475ffbf659fcfc1da8c8911e380c6" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (default) &lt;strong&gt;apcu_sma_info()&lt;/strong&gt; will return a detailed information about each segment.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; (기본값)로 설정하면 &lt;strong&gt;apcu_sma_info ()&lt;/strong&gt; 는 각 세그먼트에 대한 자세한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8ada2f56ad713347860c58ac8e1c8d587c9daf50" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; keys will be preserved. Default is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; which will reindex the chunk numerically</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 로&lt;/strong&gt; 설정하면 키가 유지됩니다. 기본값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 이며 청크를 숫자로 다시 인덱싱합니다.</target>
        </trans-unit>
        <trans-unit id="e8382363967498bea18cb238ca50c1460a8d0b38" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; the thumbnail itself is read. Otherwise, only the tagged data is read.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 로&lt;/strong&gt; 설정하면&lt;strong&gt;&lt;/strong&gt; 하면 썸네일 자체를 읽습니다. 그렇지 않으면 태그 된 데이터 만 읽습니다.</target>
        </trans-unit>
        <trans-unit id="45fdf13dee963050f85e49d30140769a11b28787" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, a float instead of an array is returned.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 로&lt;/strong&gt; 설정하면&lt;strong&gt;&lt;/strong&gt; 하면 배열 대신 부동 소수점이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c3b5d464c329531256005abf55db9a956c024345" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, outputs raw binary data. &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; outputs lowercase hexits.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 로&lt;/strong&gt; 설정하면 원시 이진 데이터를 출력합니다. &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 소문자 16 진수를 출력 .</target>
        </trans-unit>
        <trans-unit id="0d399f34f13253b77b4695e4a93773d328956466" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, the filename is also searched for within the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 로&lt;/strong&gt; 설정 하면 파일 이름도&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt; include_path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcc22dc50236109ae86c3d73d05379282d6bb91f" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; (default) &lt;strong&gt;apcu_sma_info()&lt;/strong&gt; will return a detailed information about each segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea23eab5ba4f8e7ffa6673048d791971e1376af7" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; keys will be preserved. Default is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; which will reindex the chunk numerically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d99544209a8138ab1d0afe23e693c10455b41d7" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; the thumbnail itself is read. Otherwise, only the tagged data is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66be32c7943877ba4611a11428364d89da93448" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, a float instead of an array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ebb403153485e6335b08041c1fe3e34927a858" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, outputs raw binary data. &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; outputs lowercase hexits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb3080790d12d20a6d98ebe2e2ca7fedf8b9313" translate="yes" xml:space="preserve">
          <source>When set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, the filename is also searched for within the &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7806aa5dee92a2e3a793d6ac2a75ac1b7f80631" translate="yes" xml:space="preserve">
          <source>When set to a valid callback, all output generated by the Sandbox instance will be processed through the named function. Sandbox output handlers follow the same calling conventions as the system-wide output handler.</source>
          <target state="translated">유효한 콜백으로 설정하면 Sandbox 인스턴스에서 생성 된 모든 출력이 명명 된 함수를 통해 처리됩니다. 샌드 박스 출력 핸들러는 시스템 전체 출력 핸들러와 동일한 호출 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="0d7139feeed2033339de9f13633748a1018751eb" translate="yes" xml:space="preserve">
          <source>When setting an Apache environment variable, the corresponding &lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER&lt;/a&gt;&lt;/var&gt; variable is not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406669a3575bb33c29a94be83d745be710e34cdf" translate="yes" xml:space="preserve">
          <source>When setting an Apache environment variable, the corresponding &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; variable is not changed.</source>
          <target state="translated">Apache 환경 변수를 설정할 때 해당 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; 변수는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7847f517ba0baa5b0f49f3b07c9f456e6a971bbf" translate="yes" xml:space="preserve">
          <source>When setting the encoding detection order, &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; is returned on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">인코딩 감지 순서를 설정하면 성공 하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 가 , 실패하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 가 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="c7511cccda456bf0b434672e6ea5edb719237f89" translate="yes" xml:space="preserve">
          <source>When setting the encoding detection order, &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; is returned on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf936325c0d6c202d3f5fd19470c21b2a0161b4" translate="yes" xml:space="preserve">
          <source>When sorting a multi-dimensional array, &lt;var&gt;$a&lt;/var&gt; and &lt;var&gt;$b&lt;/var&gt; contain references to the first index of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e9f76bf3abc735e31a6c1eb45eb4c5fc0cb1f9" translate="yes" xml:space="preserve">
          <source>When sorting a multi-dimensional array, &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; contain references to the first index of the array.</source>
          <target state="translated">다차원 배열을 정렬 할 때 &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 및 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 에는 배열의 첫 번째 인덱스에 대한 참조가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="11526217f11aa68ab2e6e029f696444872a2489e" translate="yes" xml:space="preserve">
          <source>When submitting a form, it is possible to use an image instead of the standard submit button with a tag like:</source>
          <target state="translated">양식을 제출할 때 표준 제출 버튼 대신 이미지를 다음과 같은 태그와 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="375832e39f021d7d65fcb27c9419863f935fe6db" translate="yes" xml:space="preserve">
          <source>When talking to the Cyrus IMAP server, you must use &quot;\r\n&quot; as your end-of-line terminator instead of &quot;\n&quot; or the operation will fail</source>
          <target state="translated">Cyrus IMAP 서버와 통신 할 때 &quot;\ n&quot;대신 &quot;\ r \ n&quot;을 라인 끝 종결 자로 사용해야합니다. 그렇지 않으면 작업이 실패합니다</target>
        </trans-unit>
        <trans-unit id="834316b1412962b9d8116ef0abb819d50038db4c" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt; is constructed from an array all properties are public.</source>
          <target state="translated">&lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt; 가 배열로 구성 되면 모든 속성이 공개됩니다.</target>
        </trans-unit>
        <trans-unit id="0d1222ce967025bf644446cfd277e4e4b4bdd984" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;return&lt;/code&gt; parameter is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, this function will return a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. Otherwise, the return value is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">때 &lt;code&gt;return&lt;/code&gt; 매개 변수가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; ,이 함수는 반환 &lt;a href=&quot;language.types.string&quot;&gt;문자열을&lt;/a&gt; . 그렇지 않으면 리턴 값은 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="81a84425e2529a03461dff41b13a07040626c49d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;return&lt;/code&gt; parameter is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, this function will return a string. Otherwise, the return value is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4be45f54ce9cf7cb037565ae94588279376268" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;return&lt;/code&gt; parameter is used, this function uses internal output buffering so it cannot be used inside an &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; callback function.</source>
          <target state="translated">때 &lt;code&gt;return&lt;/code&gt; 파라미터가 사용되며,이 함수는 내부 사용할 수 없도록 내부 출력 버퍼링 사용 &lt;a href=&quot;function.ob-start&quot;&gt;위한 ob_start ()&lt;/a&gt; 콜백 함수.</target>
        </trans-unit>
        <trans-unit id="0abb4d8e6f2571964a252e35a14c96173248c244" translate="yes" xml:space="preserve">
          <source>When the &lt;strong&gt;&lt;code&gt;DBX_RESULT_UNBUFFERED&lt;/code&gt;&lt;/strong&gt; is not set in the query, &lt;strong&gt;dbx_fetch_row()&lt;/strong&gt; will fail as all rows have already been fetched into the results data property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d53cb0c63d9904fb69f49548d007045269139c0" translate="yes" xml:space="preserve">
          <source>When the buffer event is freed, close the underlying transport. This will close an underlying socket, free an underlying buffer event, etc.</source>
          <target state="translated">버퍼 이벤트가 해제되면 기본 전송을 닫습니다. 이것은 기본 소켓을 닫고 기본 버퍼 이벤트를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="b0a27af287184eedc461aa073f31c7c91c4099d8" translate="yes" xml:space="preserve">
          <source>When the callback returns &lt;strong&gt;&lt;code&gt;SQLite3::OK&lt;/code&gt;&lt;/strong&gt;, that means the operation requested is accepted. When the callback returns &lt;strong&gt;&lt;code&gt;SQLite3::DENY&lt;/code&gt;&lt;/strong&gt;, the call that triggered the authorizer will fail with an error message explaining that access is denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a55884fe8cfb7de4920dac1fc3421f10b7a8cb" translate="yes" xml:space="preserve">
          <source>When the failure string &quot;*0&quot; is given as the &lt;code&gt;salt&lt;/code&gt;, &quot;*1&quot; will now be returned for consistency with other crypt implementations. Prior to this version, PHP 5.5 (and earlier branches) would incorrectly return a DES hash.</source>
          <target state="translated">실패 문자열 &quot;* 0&quot;이 &lt;code&gt;salt&lt;/code&gt; 제공된 경우 되면 다른 암호화 구현과 일관성을 유지하기 위해 &quot;* 1&quot;이 반환됩니다. 이 버전 이전의 PHP 5.5 (및 그 이전 버전)에서는 DES 해시를 잘못 반환했습니다.</target>
        </trans-unit>
        <trans-unit id="464dd9b2d744645a3e66528042e3370237503121" translate="yes" xml:space="preserve">
          <source>When the failure string &quot;*0&quot; is given as the &lt;code&gt;salt&lt;/code&gt;, &quot;*1&quot; will now be returned for consistency with other crypt implementations. Prior to this version, PHP 5.6 would incorrectly return a DES hash.</source>
          <target state="translated">실패 문자열 &quot;* 0&quot;이 &lt;code&gt;salt&lt;/code&gt; 로 제공 되면 다른 암호화 구현과 일관성을 유지하기 위해 &quot;* 1&quot;이 반환됩니다. 이 버전 이전의 PHP 5.6에서는 DES 해시를 잘못 반환했습니다.</target>
        </trans-unit>
        <trans-unit id="44e63e06401d0c91e878c5505f5ae09446bdc5f8" translate="yes" xml:space="preserve">
          <source>When the internal cdb library is used you will see &lt;code&gt;cdb&lt;/code&gt; and &lt;code&gt;cdb_make&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e87ff0677a78c502343a7f11cd50ecd54a69bf" translate="yes" xml:space="preserve">
          <source>When the internal cdb library is used you will see &lt;em&gt;cdb&lt;/em&gt; and &lt;em&gt;cdb_make&lt;/em&gt;.</source>
          <target state="translated">내부 cdb 라이브러리를 사용하면 &lt;em&gt;cdb&lt;/em&gt; 및 &lt;em&gt;cdb_make&lt;/em&gt; 가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="0cd0b7f20e96efed1edd170c8e3c37cb407538cd" translate="yes" xml:space="preserve">
          <source>When the main &lt;em&gt;q&lt;/em&gt; parameter is not specified or is blank. The &lt;em&gt;q.alt&lt;/em&gt; parameter is used</source>
          <target state="translated">기본 &lt;em&gt;q&lt;/em&gt; 매개 변수가 지정되지 않았거나 비어있는 경우. &lt;em&gt;q.alt의&lt;/em&gt; 매개 변수가 사용됩니다</target>
        </trans-unit>
        <trans-unit id="0c6f92bdafd2f6984c09016a35d466af506d162e" translate="yes" xml:space="preserve">
          <source>When the match pattern matches the request uri, &lt;a href=&quot;class.yaf-route-regex&quot;&gt;Yaf_Route_Regex&lt;/a&gt; will use this to decide which m/c/a to routed.</source>
          <target state="translated">일치 패턴이 요청 URI와 일치하면 &lt;a href=&quot;class.yaf-route-regex&quot;&gt;Yaf_Route_Regex&lt;/a&gt; 는이를 사용하여 라우팅 할 m / c / a를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="30b28713ed716dbb5db51416d561e5af613e542f" translate="yes" xml:space="preserve">
          <source>When the match pattern matches the request uri, &lt;a href=&quot;class.yaf-route-rewrite&quot;&gt;Yaf_Route_Rewrite&lt;/a&gt; will use this to decide which module/controller/action is the destination.</source>
          <target state="translated">일치 패턴이 요청 URI와 일치하면 &lt;a href=&quot;class.yaf-route-rewrite&quot;&gt;Yaf_Route_Rewrite&lt;/a&gt; 는이를 사용하여 대상인 모듈 / 컨트롤러 / 액션을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0b32edeff1f444d57ef43df0d19bca35b7d2bbe0" translate="yes" xml:space="preserve">
          <source>When the start method of a Thread is invoked, the run method code will be executed in separate Thread, in parallel.</source>
          <target state="translated">Thread의 start 메소드가 호출되면 run 메소드 코드가 별도의 Thread에서 병렬로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="78217c5b76f78b79762a6ba2a0df5804827c6baa" translate="yes" xml:space="preserve">
          <source>When the stream times out, the 'timed_out' key of the array returned by &lt;a href=&quot;function.stream-get-meta-data&quot;&gt;stream_get_meta_data()&lt;/a&gt; is set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, although no error/warning is generated.</source>
          <target state="translated">스트림 시간이 초과되면 &lt;a href=&quot;function.stream-get-meta-data&quot;&gt;stream_get_meta_data ()에&lt;/a&gt; 의해 반환 된 배열의 'timed_out'키 가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 로 설정 되지만 오류 / 경고는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ca8c1e1df4e1c9de568d7e3a03d9f155a8cd31f0" translate="yes" xml:space="preserve">
          <source>When the stream times out, the 'timed_out' key of the array returned by &lt;a href=&quot;function.stream-get-meta-data&quot;&gt;stream_get_meta_data()&lt;/a&gt; is set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, although no error/warning is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c766aaba8c5888d52d98b11acbb021d5476397" translate="yes" xml:space="preserve">
          <source>When the type argument is &lt;strong&gt;&lt;code&gt;SQL_BEST_ROWID&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;odbc_specialcolumns()&lt;/strong&gt; returns the column or columns that uniquely identify each row in the table.  When the type argument is &lt;strong&gt;&lt;code&gt;SQL_ROWVER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;odbc_specialcolumns()&lt;/strong&gt; returns the column or columns in the specified table, if any, that are automatically updated by the data source when any value in the row is updated by any transaction.</source>
          <target state="translated">유형 인수가 &lt;strong&gt; &lt;code&gt;SQL_BEST_ROWID&lt;/code&gt; 인&lt;/strong&gt; 경우 &lt;strong&gt;odbc_specialcolumns ()&lt;/strong&gt; 는 테이블의 각 행을 고유하게 식별하는 열을 리턴합니다. type 인수가 &lt;strong&gt; &lt;code&gt;SQL_ROWVER&lt;/code&gt; 인&lt;/strong&gt; 경우 &lt;strong&gt;odbc_specialcolumns ()&lt;/strong&gt; 는 지정된 테이블의 열이 있으면 트랜잭션에서 행의 값이 업데이트 될 때 데이터 소스에 의해 자동으로 업데이트되는 열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8b77028a67fdde9f317a9003f2a08f0e3a14d828" translate="yes" xml:space="preserve">
          <source>When the user clicks somewhere on the image, the accompanying form will be transmitted to the server with two additional variables, &lt;var&gt;&lt;var&gt;sub_x&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;sub_y&lt;/var&gt;&lt;/var&gt;. These contain the coordinates of the user click within the image. The experienced may note that the actual variable names sent by the browser contains a period rather than an underscore, but PHP converts the period to an underscore automatically.</source>
          <target state="translated">사용자가 이미지를 클릭하면 &lt;var&gt;&lt;var&gt;sub_x&lt;/var&gt;&lt;/var&gt; 및 &lt;var&gt;&lt;var&gt;sub_y&lt;/var&gt;&lt;/var&gt; 두 개의 추가 변수와 함께 첨부 양식이 서버로 전송됩니다 . 여기에는 이미지 내에서 사용자 클릭의 좌표가 포함됩니다. 경험에 따르면 브라우저가 보낸 실제 변수 이름에는 밑줄이 아닌 마침표가 있지만 PHP는 마침표를 밑줄로 자동 변환합니다.</target>
        </trans-unit>
        <trans-unit id="80acbaee8d86033211796f3c933f49651b19149d" translate="yes" xml:space="preserve">
          <source>When the user clicks somewhere on the image, the accompanying form will be transmitted to the server with two additional variables, &lt;var&gt;sub_x&lt;/var&gt; and &lt;var&gt;sub_y&lt;/var&gt;. These contain the coordinates of the user click within the image. The experienced may note that the actual variable names sent by the browser contains a period rather than an underscore, but PHP converts the period to an underscore automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c129ce5aa28ff7726b3ffe96ca6b9b5dd1446d4" translate="yes" xml:space="preserve">
          <source>When the value in the first array is scalar, it will be replaced by the value in the second array, may it be scalar or array. When the value in the first array and the second array are both arrays, &lt;strong&gt;array_replace_recursive()&lt;/strong&gt; will replace their respective value recursively.</source>
          <target state="translated">첫 번째 배열의 값이 스칼라이면 두 번째 배열의 값으로 대체되며 스칼라 또는 배열 일 수 있습니다. 첫 번째 배열과 두 번째 배열의 값이 모두 배열 인 경우 &lt;strong&gt;array_replace_recursive ()&lt;/strong&gt; 는 해당 값을 재귀 적으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="37e249f217647c29dad39b1a4acdd8b976144a07" translate="yes" xml:space="preserve">
          <source>When the watcher is active, returns the absolute time that this watcher is supposed to trigger next. This is not the same as the offset argument to &lt;a href=&quot;evperiodic.set&quot;&gt;EvPeriodic::set()&lt;/a&gt; or &lt;a href=&quot;evperiodic.construct&quot;&gt;EvPeriodic::__construct()&lt;/a&gt; , but indeed works even in interval mode.</source>
          <target state="translated">감시자가 활성화되면이 감시자가 다음에 트리거해야하는 절대 시간을 반환합니다. 이것은 &lt;a href=&quot;evperiodic.set&quot;&gt;EvPeriodic :: set ()&lt;/a&gt; 또는 &lt;a href=&quot;evperiodic.construct&quot;&gt;EvPeriodic :: __ construct ()에&lt;/a&gt; 대한 오프셋 인수와 같지 않지만 실제로는 인터벌 모드에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2bb3f57d2513a66b5d8dd8bb492af98e89119c37" translate="yes" xml:space="preserve">
          <source>When this flag is set, the bufferevent defers all of its callbacks. See &lt;a href=&quot;http://www.wangafu.net/~nickm/libevent-book/Ref6_bufferevent.html#_deferred_callbacks&quot;&gt;&amp;raquo; Fast portable non-blocking network programming with Libevent, Deferred callbacks&lt;/a&gt; .</source>
          <target state="translated">이 플래그가 설정되면 bufferevent는 모든 콜백을 연기합니다. &lt;a href=&quot;http://www.wangafu.net/~nickm/libevent-book/Ref6_bufferevent.html#_deferred_callbacks&quot;&gt;&amp;raquo;Libevent, 지연 콜백을 사용한 빠른 휴대용 비 차단 네트워크 프로그래밍을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="600bfb7d9d6f8979b0581df3f8a558dab65bb9a6" translate="yes" xml:space="preserve">
          <source>When this flag is specified, &lt;code&gt;libev&lt;/code&gt; will attempt to use the &lt;code&gt;signalfd&lt;/code&gt; API for its &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_signal_code_signal_me_when_a&quot;&gt;&amp;raquo; ev_signal&lt;/a&gt; (and &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_child_code_watch_out_for_pro&quot;&gt;&amp;raquo; ev_child&lt;/a&gt; ) watchers. This API delivers signals synchronously, which makes it both faster and might make it possible to get the queued signal data. It can also simplify signal handling with threads, as long as signals are properly blocked in threads. &lt;code&gt;Signalfd&lt;/code&gt; will not be used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729696af6710c92b08e099cbcd7c7cd79557eab4" translate="yes" xml:space="preserve">
          <source>When this flag is specified, &lt;code&gt;libev&lt;/code&gt; will avoid to modify the signal mask. Specifically, this means having to make sure signals are unblocked before receiving them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925aac5daff85dc6b6918dc24fb6734a81c566da" translate="yes" xml:space="preserve">
          <source>When this flag is specified, &lt;code&gt;libev&lt;/code&gt; won't attempt to use the &lt;code&gt;inotify&lt;/code&gt; API for its &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_stat_code_did_the_file_attri&quot;&gt;&amp;raquo; ev_stat&lt;/a&gt; watchers. The flag can be useful to conserve inotify file descriptors, as otherwise each loop using &lt;code&gt;ev_stat&lt;/code&gt; watchers consumes one &lt;code&gt;inotify&lt;/code&gt; handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad72e4ca70744833e44e25657535845eb33bf06" translate="yes" xml:space="preserve">
          <source>When this flag is specified, &lt;em&gt;libev&lt;/em&gt; will attempt to use the &lt;em&gt;signalfd&lt;/em&gt; API for its &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_signal_code_signal_me_when_a&quot;&gt;&amp;raquo; ev_signal&lt;/a&gt; (and &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_child_code_watch_out_for_pro&quot;&gt;&amp;raquo; ev_child&lt;/a&gt; ) watchers. This API delivers signals synchronously, which makes it both faster and might make it possible to get the queued signal data. It can also simplify signal handling with threads, as long as signals are properly blocked in threads. &lt;em&gt;Signalfd&lt;/em&gt; will not be used by default.</source>
          <target state="translated">이 플래그가 지정되면, &lt;em&gt;libev는&lt;/em&gt; 사용을 시도합니다 &lt;em&gt;signalfd의&lt;/em&gt; 의에 대한 API &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_signal_code_signal_me_when_a&quot;&gt;&amp;raquo;ev_signal&lt;/a&gt; (및 &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_child_code_watch_out_for_pro&quot;&gt;&amp;raquo;ev_child&lt;/a&gt; ) 전문가를. 이 API는 신호를 동기식으로 전달하므로 신호가 더 빨라지고 대기열에있는 신호 데이터를 얻을 수 있습니다. 또한 스레드에서 신호가 올바르게 차단되는 한 스레드로 신호 처리를 단순화 할 수 있습니다. &lt;em&gt;Signalfd&lt;/em&gt; 는 기본적으로 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9273bc3adc3ab95a080eb068388d2a7627506242" translate="yes" xml:space="preserve">
          <source>When this flag is specified, &lt;em&gt;libev&lt;/em&gt; will avoid to modify the signal mask. Specifically, this means having to make sure signals are unblocked before receiving them.</source>
          <target state="translated">이 플래그를 지정하면 &lt;em&gt;libev&lt;/em&gt; 는 신호 마스크를 수정하지 않습니다. 특히, 신호를 수신하기 전에 신호를 차단 해제해야합니다.</target>
        </trans-unit>
        <trans-unit id="50c274904ab8a7952c35a8276cc1f131a124a3fe" translate="yes" xml:space="preserve">
          <source>When this flag is specified, &lt;em&gt;libev&lt;/em&gt; won't attempt to use the &lt;em&gt;inotify&lt;/em&gt; API for its &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_stat_code_did_the_file_attri&quot;&gt;&amp;raquo; ev_stat&lt;/a&gt; watchers. The flag can be useful to conserve inotify file descriptors, as otherwise each loop using &lt;em&gt;ev_stat&lt;/em&gt; watchers consumes one &lt;em&gt;inotify&lt;/em&gt; handle.</source>
          <target state="translated">이 플래그가 지정되면, &lt;em&gt;libev는&lt;/em&gt; 사용하지 않습니다 &lt;em&gt;inotify를&lt;/em&gt; 자사에 대한 API를 &lt;a href=&quot;http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_stat_code_did_the_file_attri&quot;&gt;&amp;raquo;ev_stat&lt;/a&gt; 전문가. 플래그는 inotify 파일 디스크립터를 보존하는 데 유용 할 수 있습니다. 그렇지 않으면 &lt;em&gt;ev_stat&lt;/em&gt; 감시자를 사용하는 각 루프 는 하나의 &lt;em&gt;inotify&lt;/em&gt; 핸들을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e5dc5fb4217257535c274c18ec0d3a96246ece77" translate="yes" xml:space="preserve">
          <source>When this flag is specified, the names will be returned in an order where likely directories come first, in optimal stat order.</source>
          <target state="translated">이 플래그가 지정되면 이름은 최적의 통계 순서로 디렉토리가 가장 먼저 나오는 순서로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="fd9f6b0851374ea0d43bec8cba8f5048b34fb73e" translate="yes" xml:space="preserve">
          <source>When this flag is specified, then the names will be returned in an order suitable for &lt;code&gt;stat&lt;/code&gt;'ing each one. When planning to &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; all files in the given directory, the returned order will likely be fastest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c642c34f62a200f28dbe590061062caea2d9832a" translate="yes" xml:space="preserve">
          <source>When this flag is specified, then the names will be returned in an order suitable for &lt;em&gt;stat&lt;/em&gt;'ing each one. When planning to &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; all files in the given directory, the returned order will likely be fastest.</source>
          <target state="translated">이 플래그가 지정되면 이름은 각각의 &lt;em&gt;통계에&lt;/em&gt; 적합한 순서로 리턴됩니다 . 주어진 디렉토리의 모든 파일 을 &lt;a href=&quot;function.stat&quot;&gt;stat ()로&lt;/a&gt; 계획 할 때 , 반환되는 순서가 가장 빠를 것입니다.</target>
        </trans-unit>
        <trans-unit id="d8080304a547022d420179309dd100291aa70490" translate="yes" xml:space="preserve">
          <source>When this function results in the queue being deactivated, any __autoload function that previously existed will not be reactivated.</source>
          <target state="translated">이 함수로 인해 큐가 비활성화되면 이전에 존재했던 __autoload 함수는 다시 활성화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9a728383de52254af421a2c8f610018625d85d44" translate="yes" xml:space="preserve">
          <source>When this value specified, it leaves the control of when to do the commit to Solr itself, optimizing number of commits to a minimum while still fulfilling the update latency requirements, and Solr will automatically do a commit when the oldest add in the buffer is due.</source>
          <target state="translated">이 값을 지정하면 업데이트 대기 시간 요구 사항을 충족하면서도 커밋 수를 최소로 최적화하고 Solr에 커밋을 수행 할시기를 제어 할 수 있으며, 버퍼에서 가장 오래된 추가 시간이 지나면 Solr이 자동으로 커밋을 수행합니다. .</target>
        </trans-unit>
        <trans-unit id="d357f3fbbc1fc8819bad703805ad805f652b3fa2" translate="yes" xml:space="preserve">
          <source>When true pthreads will destroy the Mutex after a successful unlock.</source>
          <target state="translated">잠금 해제에 성공한 후 진정한 pthread가 Mutex를 파괴 할 때</target>
        </trans-unit>
        <trans-unit id="41b07bc2e65d87e2179613375edf8a4cc7115b01" translate="yes" xml:space="preserve">
          <source>When turned on, this attribute generates a collation key for the numeric value of substrings of digits. This is a way to get '100' to sort AFTER '2'.</source>
          <target state="translated">설정하면이 속성은 하위 문자열의 숫자 값에 대한 데이터 정렬 키를 생성합니다. 이것은 '2'를 정렬하기 위해 '100'을 얻는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="208ccc2c161d9bd5eee7111031211c60d92cecae" translate="yes" xml:space="preserve">
          <source>When used as getter (first signature), it returns an indexed array of the horizontal and vertical resolution on success, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on failure. When used as setter (second signature), it returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; on success, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13ce540555464009757783d0926821cfe97d89c" translate="yes" xml:space="preserve">
          <source>When used as getter (that is without the optional parameter) it returns whether asynchronous signal handling is enabled. When used as setter (that is with the optional parameter given), it returns whether asynchronous signal handling was enabled &lt;em&gt;before&lt;/em&gt; the function call.</source>
          <target state="translated">getter (선택적 매개 변수가없는)로 사용되면 비동기 신호 처리가 사용 가능한지 여부를 리턴합니다. setter로 사용되면 (즉, 주어진 선택적 매개 변수와 함께) 함수 호출 &lt;em&gt;전에&lt;/em&gt; 비동기 신호 처리가 사용 가능한지 여부를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="965942015991ec9f39335b6454a035114168e293" translate="yes" xml:space="preserve">
          <source>When used as getter (that is without the optional parameters), it returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure. When used as setter (that is with one or both optional parameters given), it returns an indexed array of the horizontal and vertical resolution on success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">getter (선택적 매개 변수가없는)로 사용될 경우 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 실패하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 리턴 &lt;strong&gt;합니다&lt;/strong&gt; . setter로 사용될 때 (즉, 하나 또는 두 개의 선택적 매개 변수가 제공됨) 성공하면 수평 및 수직 해상도의 인덱스 배열을, 실패하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ec4018b1a48ae13419e410e807fa1adee571568f" translate="yes" xml:space="preserve">
          <source>When used with &lt;code&gt;retdata&lt;/code&gt;, returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error. When used without &lt;code&gt;retdata&lt;/code&gt;, returns a result identifier or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;code&gt;retdata&lt;/code&gt; 와 함께 사용하면 성공 하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 오류 이면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; . &lt;code&gt;retdata&lt;/code&gt; 없이 사용하면 오류시 결과 식별자 또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c77925c0bda65b8e915ceafbcd47dca988eef3aa" translate="yes" xml:space="preserve">
          <source>When used with &lt;code&gt;retdata&lt;/code&gt;, returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error. When used without &lt;code&gt;retdata&lt;/code&gt;, returns a result identifier or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e45aedee86f0d2f6a7ec997794277d9df8ebd9" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;function.empty&quot;&gt;empty()&lt;/a&gt;&lt;a href=&quot;arrayaccess.offsetget&quot;&gt;ArrayAccess::offsetGet()&lt;/a&gt; will be called and checked if empty only if &lt;strong&gt;ArrayAccess::offsetExists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;function.empty&quot;&gt;empty ()를&lt;/a&gt; 사용할 때 &lt;strong&gt;ArrayAccess :: offsetExists ()&lt;/strong&gt; 가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; 반환하는 경우에만 &lt;a href=&quot;arrayaccess.offsetget&quot;&gt;ArrayAccess :: offsetGet ()&lt;/a&gt; 이 호출되고 비어 있는지 확인 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1f800857641cb5b3b066ffaba029f9993c5f35d" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;function.empty&quot;&gt;empty()&lt;/a&gt;&lt;a href=&quot;arrayaccess.offsetget&quot;&gt;ArrayAccess::offsetGet()&lt;/a&gt; will be called and checked if empty only if &lt;strong&gt;ArrayAccess::offsetExists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe60c9e08b30115e2850207989777e06871038d" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array()&lt;/a&gt; to copy the values of the AppendIterator into an array, you have to set the optional &lt;code&gt;use_key&lt;/code&gt; argument to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. When &lt;code&gt;use_key&lt;/code&gt; is not &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; any keys reoccuring in inner iterators will get overwritten in the returned array. There is no way to preserve the original keys.</source>
          <target state="translated">&lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array ()&lt;/a&gt; 를 사용하여 AppendIterator의 값을 배열로 복사하는 경우 선택적 &lt;code&gt;use_key&lt;/code&gt; 인수를 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 로 설정 해야 &lt;strong&gt;합니다&lt;/strong&gt; . 때 &lt;code&gt;use_key&lt;/code&gt; 이 아닌 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 내부 반복자에 reoccuring 어떤 키가 반환 된 배열에 덮어 얻을 것이다. 원래 키를 보존 할 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0a7e097dfde723e38a23a323acf4ba1d795754dc" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array()&lt;/a&gt; to copy the values of the AppendIterator into an array, you have to set the optional &lt;code&gt;use_key&lt;/code&gt; argument to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. When &lt;code&gt;use_key&lt;/code&gt; is not &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; any keys reoccuring in inner iterators will get overwritten in the returned array. There is no way to preserve the original keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c689ce2b77083dea2ede0e05853457b4cc2ad5" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;function.json-encode&quot;&gt;json_encode()&lt;/a&gt; on a &lt;strong&gt;DOMDocument&lt;/strong&gt; object the result will be that of encoding an empty object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068889a252120d697dfb036b808f761e53bfe224" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;empty()&lt;/strong&gt; on inaccessible object properties, the &lt;a href=&quot;language.oop5.overloading#object.isset&quot;&gt;__isset()&lt;/a&gt; overloading method will be called, if declared.</source>
          <target state="translated">액세스 할 수없는 객체 속성에서 &lt;strong&gt;empty ()&lt;/strong&gt; 를 사용하는 경우 선언 된 경우 &lt;a href=&quot;language.oop5.overloading#object.isset&quot;&gt;__isset ()&lt;/a&gt; 오버로드 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4c6d18fa2c51c7fd3bb3011cb8c96d6ac1969578" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;fpassthru()&lt;/strong&gt; on a binary file on Windows systems, you should make sure to open the file in binary mode by appending a &lt;code&gt;b&lt;/code&gt; to the mode used in the call to &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bf5523d1085ccb7792e08155a7b4ec9b72cdf7" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;fpassthru()&lt;/strong&gt; on a binary file on Windows systems, you should make sure to open the file in binary mode by appending a &lt;em&gt;b&lt;/em&gt; to the mode used in the call to &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="translated">사용하는 경우 &lt;strong&gt;fpassthru ()&lt;/strong&gt; Windows 시스템에서 이진 파일에를, 당신은 추가하여 바이너리 모드로 파일을 열 수 있는지 확인해야 &lt;em&gt;B를&lt;/em&gt; 위해 호출에 사용되는 모드로 &lt;a href=&quot;function.fopen&quot;&gt;는 fopen ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a39f9909cc04f7417ee5d7e61d65edadd91607e6" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;isset()&lt;/strong&gt; on inaccessible object properties, the &lt;a href=&quot;language.oop5.overloading#object.isset&quot;&gt;__isset()&lt;/a&gt; overloading method will be called, if declared.</source>
          <target state="translated">액세스 할 수없는 객체 속성에서 &lt;strong&gt;isset ()&lt;/strong&gt; 을 사용하는 경우 선언 된 경우 &lt;a href=&quot;language.oop5.overloading#object.isset&quot;&gt;__isset ()&lt;/a&gt; 오버로드 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="18f6aea456effe696282da704cf460cb6227dd6d" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;mysqli_stmt_execute()&lt;/strong&gt;, the &lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch()&lt;/a&gt; function must be used to fetch the data prior to performing any additional queries.</source>
          <target state="translated">사용하는 경우 &lt;strong&gt;) (mysqli_stmt_execute를&lt;/strong&gt; 상기 &lt;a href=&quot;mysqli-stmt.fetch&quot;&gt;mysqli_stmt_fetch ()&lt;/a&gt; 함수는 추가적인 질의를 수행하기 전에 데이터를 페치하는 데 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="602a72fec99787b4c05220e81a0dd0f84517ebbe" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;sem_get()&lt;/strong&gt; to access a semaphore created outside PHP, note that the semaphore must have been created as a set of 3 semaphores (for example, by specifying 3 as the &lt;code&gt;nsems&lt;/code&gt; parameter when calling the C &lt;code&gt;semget()&lt;/code&gt; function), otherwise PHP will be unable to access the semaphore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bbbecda1f9847da64da93d60d086624f111921" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;sem_get()&lt;/strong&gt; to access a semaphore created outside PHP, note that the semaphore must have been created as a set of 3 semaphores (for example, by specifying 3 as the &lt;em&gt;nsems&lt;/em&gt; parameter when calling the C &lt;em&gt;semget()&lt;/em&gt; function), otherwise PHP will be unable to access the semaphore.</source>
          <target state="translated">&lt;strong&gt;sem_get ()&lt;/strong&gt; 을 사용하여 PHP 외부에서 작성된 세마포어에 액세스 할 때 세마포어는 3 개의 세마포어 세트로 작성되어야합니다 (예 : C &lt;em&gt;semget ()&lt;/em&gt; 함수를 호출 할 때 3을 &lt;em&gt;nsems&lt;/em&gt; 매개 변수 로 지정 ). 그렇지 않으면 PHP 세마포어에 액세스 할 수 없습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbaaa2c39d6a0c21a5920c1acd11f8a3cf1dd3cc" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;unset()&lt;/strong&gt; on inaccessible object properties, the &lt;a href=&quot;language.oop5.overloading#object.unset&quot;&gt;__unset()&lt;/a&gt; overloading method will be called, if declared.</source>
          <target state="translated">액세스 할 수없는 객체 속성에서 &lt;strong&gt;unset ()&lt;/strong&gt; 을 사용하는 경우 선언 된 경우 &lt;a href=&quot;language.oop5.overloading#object.unset&quot;&gt;__unset ()&lt;/a&gt; 오버로드 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="67d76e5bf79cf143386333b09dbb0feb27a8b280" translate="yes" xml:space="preserve">
          <source>When using MPPE with MS-CHAPv2, the send- and recv-keys are mangled (see &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2548&quot;&gt;&amp;raquo; RFC 2548&lt;/a&gt;), however this function is useless, because I don't think that there is or will be a PPTP-MPPE implementation in PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfb7eb8674d04b668ce0a4b8ac0695264c9d1cb" translate="yes" xml:space="preserve">
          <source>When using SSL, Microsoft IIS will violate the protocol by closing the connection without sending a &lt;code&gt;close_notify&lt;/code&gt; indicator. PHP will report this as &quot;SSL: Fatal Protocol Error&quot; when you reach the end of the data. To work around this, the value of &lt;a href=&quot;https://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; should be lowered to a level that does not include warnings. PHP can detect buggy IIS server software when you open the stream using the &lt;code&gt;https://&lt;/code&gt; wrapper and will suppress the warning. When using &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt; to create an &lt;code&gt;ssl://&lt;/code&gt; socket, the developer is responsible for detecting and suppressing this warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec476be40c3603ea4cfd9c3ecc67531512711f84" translate="yes" xml:space="preserve">
          <source>When using SSL, Microsoft IIS will violate the protocol by closing the connection without sending a &lt;em&gt;close_notify&lt;/em&gt; indicator. PHP will report this as &quot;SSL: Fatal Protocol Error&quot; when you reach the end of the data. To work around this, the value of &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; should be lowered to a level that does not include warnings. PHP can detect buggy IIS server software when you open the stream using the &lt;em&gt;https://&lt;/em&gt; wrapper and will suppress the warning. When using &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt; to create an &lt;em&gt;ssl://&lt;/em&gt; socket, the developer is responsible for detecting and suppressing this warning.</source>
          <target state="translated">SSL을 사용할 때 Microsoft IIS는 &lt;em&gt;close_notify&lt;/em&gt; 표시기를 &lt;em&gt;보내지&lt;/em&gt; 않고 연결을 닫아 프로토콜을 위반합니다 . 데이터의 끝에 도달하면 PHP는이를 &quot;SSL : 치명적인 프로토콜 오류&quot;로보고합니다. 이 문제를 해결하려면 &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; 값을 경고가 포함되지 않은 수준으로 낮추어야합니다. PHP는 &lt;em&gt;https : //&lt;/em&gt; 래퍼를 사용하여 스트림을 열면 버그가있는 IIS 서버 소프트웨어를 감지 할 수 있으며 경고를 표시하지 않습니다. 사용하는 경우 &lt;a href=&quot;function.fsockopen&quot;&gt;는 fsockopen ()을&lt;/a&gt; 만들기 위해 &lt;em&gt;SSL을 : //&lt;/em&gt; 소켓을, 개발자는 감지하고이 경고를 억제 할 책임이있다.</target>
        </trans-unit>
        <trans-unit id="961d18a06be7f97d7ab89d0db367e7a6bdbe910a" translate="yes" xml:space="preserve">
          <source>When using an existing node it will be moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c4c7e5f1e8c2ce2045719098df62a68ef20c5d" translate="yes" xml:space="preserve">
          <source>When using argument swapping, the &lt;code&gt;n$&lt;/code&gt;&lt;em&gt;position specifier&lt;/em&gt; must come immediately after the percent sign (&lt;code&gt;%&lt;/code&gt;), before any other specifiers, as shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67be5f6b50a6403f2c098d1d40a866fca48fe1ad" translate="yes" xml:space="preserve">
          <source>When using argument swapping, the &lt;em&gt;n$&lt;/em&gt;&lt;em&gt;position specifier&lt;/em&gt; must come immediately after the percent sign (&lt;em&gt;%&lt;/em&gt;), before any other specifiers, as shown in the example below.</source>
          <target state="translated">인수 스와핑을 사용하는 경우 &lt;em&gt;n $ &lt;/em&gt;&lt;em&gt;위치 지정&lt;/em&gt; 자는 아래 예와 같이 백분율 부호 ( &lt;em&gt;%&lt;/em&gt; ) 바로 다음에 다른 지정자 앞에 와야 합니다.</target>
        </trans-unit>
        <trans-unit id="f300bb95cf95df95dd486b76e115a5332584e97b" translate="yes" xml:space="preserve">
          <source>When using arrays with &lt;code&gt;pattern&lt;/code&gt; and &lt;code&gt;replacement&lt;/code&gt;, the keys are processed in the order they appear in the array. This is &lt;em&gt;not necessarily&lt;/em&gt; the same as the numerical index order. If you use indexes to identify which &lt;code&gt;pattern&lt;/code&gt; should be replaced by which &lt;code&gt;replacement&lt;/code&gt;, you should perform a &lt;a href=&quot;function.ksort&quot;&gt;ksort()&lt;/a&gt; on each array prior to calling &lt;strong&gt;preg_replace()&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; 과 &lt;code&gt;replacement&lt;/code&gt; 와 함께 배열을 사용 하는 경우 키는 배열에 나타나는 순서대로 처리됩니다. 숫자 인덱스 순서와 &lt;em&gt;반드시&lt;/em&gt; 같을 &lt;em&gt;필요&lt;/em&gt; 는 &lt;em&gt;없습니다&lt;/em&gt; . 인덱스를 사용하여 어떤 &lt;code&gt;pattern&lt;/code&gt; 이 어떤 &lt;code&gt;replacement&lt;/code&gt; 로 대체되어야하는지 식별하는 경우 &lt;strong&gt;preg_replace ()&lt;/strong&gt; 를 호출하기 전에 각 배열에서 &lt;a href=&quot;function.ksort&quot;&gt;ksort ()&lt;/a&gt; 를 수행해야합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc727cfd94e5342984dff65b76cb2ff4507f0a12" translate="yes" xml:space="preserve">
          <source>When using objects as session save handlers, it is important to register the shutdown function with PHP to avoid unexpected side-effects from the way PHP internally destroys objects on shutdown and may prevent the &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; from being called. Typically you should register &lt;code&gt;'session_write_close'&lt;/code&gt; using the &lt;a href=&quot;function.register-shutdown-function&quot;&gt;register_shutdown_function()&lt;/a&gt; function.</source>
          <target state="translated">객체를 세션 저장 핸들러로 사용할 때 PHP가 종료시 객체를 내부적으로 파괴하는 방식으로 인한 예기치 않은 부작용을 피하기 위해 PHP에 종료 기능을 등록하는 것이 중요하며 &lt;code&gt;write&lt;/code&gt; 및 &lt;code&gt;close&lt;/code&gt; 가 호출 되지 않을 수 있습니다 . 일반적으로 &lt;a href=&quot;function.register-shutdown-function&quot;&gt;register_shutdown_function ()&lt;/a&gt; 함수를 사용하여 &lt;code&gt;'session_write_close'&lt;/code&gt; 를 등록해야 합니다.</target>
        </trans-unit>
        <trans-unit id="25c8e82b0c7f36d347b573a0f1d41b803bdd0b3c" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;const&lt;/code&gt; keyword, only scalar (bool, int, float and string) expressions and constant arrays containing only scalar expressions are accepted. It is possible to define constants as a resource, but it should be avoided, as it can cause unexpected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bbfa46844ca464773b7002125f61f4f708bbc5" translate="yes" xml:space="preserve">
          <source>When using the &lt;em&gt;const&lt;/em&gt; keyword, only scalar data (&lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;, &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; and &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;) can be contained in constants prior to PHP 5.6. From PHP 5.6 onwards, it is possible to define a constant as a scalar expression, and it is also possible to define an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; constant. It is possible to define constants as a &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;, but it should be avoided, as it can cause unexpected results.</source>
          <target state="translated">&lt;em&gt;const&lt;/em&gt; 키워드를 사용할 때 , 스칼라 데이터 ( &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; , &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; , &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; 및 &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; ) 만 PHP 5.6 이전의 상수에 포함될 수 있습니다. PHP 5.6부터는 상수를 스칼라 표현식으로 정의 할 수 있으며 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 상수 를 정의 할 수도 있습니다 . 상수를 &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; 로 정의 할 수 있지만 예기치 않은 결과가 발생할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="3481eb94236af529024dc0f2420aef52e4612c4f" translate="yes" xml:space="preserve">
          <source>When using the PCRE functions, it is required that the pattern is enclosed by &lt;em&gt;delimiters&lt;/em&gt;. A delimiter can be any non-alphanumeric, non-backslash, non-whitespace character.</source>
          <target state="translated">PCRE 기능을 사용하는 경우 패턴은 &lt;em&gt;분리 문자&lt;/em&gt; 로 묶어야합니다 . 분리 문자는 영숫자가 아닌 백 슬래시가 아닌 공백 문자 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c38b1c6bee545204b77586e76ebe095e08d96df" translate="yes" xml:space="preserve">
          <source>When using the comparison operator (&lt;code&gt;==&lt;/code&gt;), object variables are compared in a simple manner, namely: Two object instances are equal if they have the same attributes and values (values are compared with &lt;code&gt;==&lt;/code&gt;), and are instances of the same class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4585bc234f630ed47ebbc10477776301c8f68d86" translate="yes" xml:space="preserve">
          <source>When using the comparison operator (&lt;em&gt;==&lt;/em&gt;), object variables are compared in a simple manner, namely: Two object instances are equal if they have the same attributes and values (values are compared with &lt;em&gt;==&lt;/em&gt;), and are instances of the same class.</source>
          <target state="translated">비교 연산자 ( &lt;em&gt;==&lt;/em&gt; )를 사용하는 경우 객체 변수는 간단한 방식으로 비교됩니다. 즉, 두 개의 객체 인스턴스가 동일한 속성과 값 (값이 &lt;em&gt;==&lt;/em&gt; 과 비교됨 )이 같고 동일한 클래스의 인스턴스 인 경우 .</target>
        </trans-unit>
        <trans-unit id="2a09edeca53512457105c7c06a50ef7d8999a423" translate="yes" xml:space="preserve">
          <source>When using the deprecated &lt;code&gt;e&lt;/code&gt; modifier, this function escapes some characters (namely &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt; and NULL) in the strings that replace the backreferences. This is done to ensure that no syntax errors arise from backreference usage with either single or double quotes (e.g. &lt;code&gt;'strlen(\'$1\')+strlen(&quot;$2&quot;)'&lt;/code&gt;). Make sure you are aware of PHP's &lt;a href=&quot;language.types.string&quot;&gt;string syntax&lt;/a&gt; to know exactly how the interpreted string will look.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ddc3305644f446408919dad2531c8ec786bdc4" translate="yes" xml:space="preserve">
          <source>When using the deprecated &lt;em&gt;e&lt;/em&gt; modifier, this function escapes some characters (namely &lt;em&gt;'&lt;/em&gt;, &lt;em&gt;&quot;&lt;/em&gt;, &lt;em&gt;\&lt;/em&gt; and NULL) in the strings that replace the backreferences. This is done to ensure that no syntax errors arise from backreference usage with either single or double quotes (e.g. &lt;em&gt;'strlen(\'$1\')+strlen(&quot;$2&quot;)'&lt;/em&gt;). Make sure you are aware of PHP's &lt;a href=&quot;language.types.string&quot;&gt;string syntax&lt;/a&gt; to know exactly how the interpreted string will look.</source>
          <target state="translated">더 이상 사용되지 않는 &lt;em&gt;e&lt;/em&gt; 한정자를 사용하는 경우이 함수는 역 참조를 대체하는 문자열에서 일부 문자 (예 : &lt;em&gt;'&lt;/em&gt; , &lt;em&gt;&quot;&lt;/em&gt; , &lt;em&gt;\&lt;/em&gt; 및 NULL)를 이스케이프 합니다. 이는 작은 따옴표 나 큰 따옴표로 역 참조 사용법에서 구문 오류가 발생하지 않도록하기 위해 수행됩니다 ( 예를 들어 &lt;em&gt;'strlen (\'$ 1 \ ') + strlen ( &quot;$ 2&quot;)'&lt;/em&gt; ) 해석 된 문자열의 모양을 정확히 알기 위해서는 PHP의 &lt;a href=&quot;language.types.string&quot;&gt;문자열 구문&lt;/a&gt; 을 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a296e7205925b50bba010039b8eb9883cc6022f1" translate="yes" xml:space="preserve">
          <source>When using the first signature, &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.cookie-lifetime&quot;&gt;lifetime&lt;/a&gt; of the session cookie, defined in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb32b6a4fabb8ed47acf8c20464d95dffd39542" translate="yes" xml:space="preserve">
          <source>When using the identity operator (&lt;code&gt;===&lt;/code&gt;), object variables are identical if and only if they refer to the same instance of the same class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610d5f576e4ea84dd6a6d0d92c6dd4c23e3dbf8a" translate="yes" xml:space="preserve">
          <source>When using the identity operator (&lt;em&gt;===&lt;/em&gt;), object variables are identical if and only if they refer to the same instance of the same class.</source>
          <target state="translated">ID 연산자 ( &lt;em&gt;===&lt;/em&gt; )를 사용할 때 객체 변수가 동일한 클래스의 동일한 인스턴스를 참조하는 경우에만 객체 변수가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5e96039b61a0b053704fc6c327ffaf1f85221542" translate="yes" xml:space="preserve">
          <source>When using the optional &lt;code&gt;operator&lt;/code&gt; argument, the function will return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if the relationship is the one specified by the operator, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">선택적 &lt;code&gt;operator&lt;/code&gt; 인수를 사용할 때 , 관계가 연산자에 의해 지정된 관계이면 함수는 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 리턴 하고 그렇지 않으면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 리턴 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2b182ed327e13de7cddf2b9aae7f9e0cb2dcc955" translate="yes" xml:space="preserve">
          <source>When using the optional &lt;code&gt;operator&lt;/code&gt; argument, the function will return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the relationship is the one specified by the operator, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise. If an unsupported &lt;code&gt;operator&lt;/code&gt; is given, &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c650a6e0abff3f80bb0b568cc11959a63f5b3a4" translate="yes" xml:space="preserve">
          <source>When using the second signature, an associative array which may have any of the keys &lt;code&gt;lifetime&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;secure&lt;/code&gt;, &lt;code&gt;httponly&lt;/code&gt; and &lt;code&gt;samesite&lt;/code&gt;. The values have the same meaning as described for the parameters with the same name. The value of the &lt;code&gt;samesite&lt;/code&gt; element should be either &lt;code&gt;Lax&lt;/code&gt; or &lt;code&gt;Strict&lt;/code&gt;. If any of the allowed options are not given, their default values are the same as the default values of the explicit parameters. If the &lt;code&gt;samesite&lt;/code&gt; element is omitted, no SameSite cookie attribute is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64cfab122bdad61c3ced4f190ef8f1ac91bedd8" translate="yes" xml:space="preserve">
          <source>When using versions of the GD library lower than 2.0.18, a &lt;code&gt;space&lt;/code&gt; character, rather than a semicolon, was used as the 'path separator' for different font files. Unintentional use of this feature will result in the warning message: &lt;code&gt;Warning: Could not find/open font&lt;/code&gt;. For these affected versions, the only solution is moving the font to a path which does not contain spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c134143bdb50aa1b814b92e57c16ef8d960456c9" translate="yes" xml:space="preserve">
          <source>When using versions of the GD library lower than 2.0.18, a &lt;em&gt;space&lt;/em&gt; character, rather than a semicolon, was used as the 'path separator' for different font files. Unintentional use of this feature will result in the warning message: &lt;em&gt;Warning: Could not find/open font&lt;/em&gt;. For these affected versions, the only solution is moving the font to a path which does not contain spaces.</source>
          <target state="translated">2.0.18보다 낮은 GD 라이브러리 버전을 사용 하는 경우 세미콜론이 아닌 &lt;em&gt;공백&lt;/em&gt; 문자가 다른 글꼴 파일의 '경로 구분 기호'로 사용되었습니다. 이 기능을 실수로 사용하면 다음과 같은 경고 메시지가 나타납니다. &lt;em&gt;경고 : 글꼴을 찾을 수 없습니다&lt;/em&gt; . 이러한 영향을받는 버전의 경우 유일한 해결책은 공백이없는 경로로 글꼴을 이동하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="54c54de623880a0bdf688c42067523b6ba94e0a1" translate="yes" xml:space="preserve">
          <source>When validating passwords, a string comparison function that isn't vulnerable to timing attacks should be used to compare the output of &lt;strong&gt;crypt()&lt;/strong&gt; to the previously known hash. PHP 5.6 onwards provides &lt;a href=&quot;function.hash-equals&quot;&gt;hash_equals()&lt;/a&gt; for this purpose.</source>
          <target state="translated">암호의 유효성을 검사 할 때 타이밍 공격에 취약하지 않은 문자열 비교 함수를 사용하여 &lt;strong&gt;crypt ()&lt;/strong&gt; 의 출력을 이전에 알려진 해시 와 비교해야합니다 . PHP 5.6부터는 이러한 목적으로 &lt;a href=&quot;function.hash-equals&quot;&gt;hash_equals ()&lt;/a&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="63cebe6863d00583f317037ef233966797e6e07a" translate="yes" xml:space="preserve">
          <source>When we run that code, the output will be:</source>
          <target state="translated">해당 코드를 실행하면 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a95cd42b84123099e691e48b2181cc874979735" translate="yes" xml:space="preserve">
          <source>When working with a replacement pattern where a backreference is immediately followed by another number (i.e.: placing a literal number immediately after a matched pattern), you cannot use the familiar &lt;code&gt;\1&lt;/code&gt; notation for your backreference. &lt;code&gt;\11&lt;/code&gt;, for example, would confuse &lt;strong&gt;preg_replace()&lt;/strong&gt; since it does not know whether you want the &lt;code&gt;\1&lt;/code&gt; backreference followed by a literal &lt;code&gt;1&lt;/code&gt;, or the &lt;code&gt;\11&lt;/code&gt; backreference followed by nothing. In this case the solution is to use &lt;code&gt;${1}1&lt;/code&gt;. This creates an isolated &lt;code&gt;$1&lt;/code&gt; backreference, leaving the &lt;code&gt;1&lt;/code&gt; as a literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a33815926319451218b46da60606bba9e20a7af" translate="yes" xml:space="preserve">
          <source>When working with a replacement pattern where a backreference is immediately followed by another number (i.e.: placing a literal number immediately after a matched pattern), you cannot use the familiar &lt;em&gt;\\1&lt;/em&gt; notation for your backreference. &lt;em&gt;\\11&lt;/em&gt;, for example, would confuse &lt;strong&gt;preg_replace()&lt;/strong&gt; since it does not know whether you want the &lt;em&gt;\\1&lt;/em&gt; backreference followed by a literal &lt;em&gt;1&lt;/em&gt;, or the &lt;em&gt;\\11&lt;/em&gt; backreference followed by nothing. In this case the solution is to use &lt;em&gt;${1}1&lt;/em&gt;. This creates an isolated &lt;em&gt;$1&lt;/em&gt; backreference, leaving the &lt;em&gt;1&lt;/em&gt; as a literal.</source>
          <target state="translated">역 참조 뒤에 바로 다른 숫자 (예 : 일치하는 패턴 바로 뒤에 리터럴 숫자 배치)가있는 대체 패턴으로 작업 할 때는 역 참조에 익숙한 &lt;em&gt;\\ 1&lt;/em&gt; 표기법을 사용할 수 없습니다 . 예를 들어, &lt;em&gt;\\ 11&lt;/em&gt; 은 &lt;em&gt;\\ 1&lt;/em&gt; 역 참조 뒤에 리터럴 &lt;em&gt;1&lt;/em&gt; 이 있는지, &lt;em&gt;\\ 11&lt;/em&gt; 역 참조 뒤에 아무것도 없는지 알지 못하므로 &lt;strong&gt;preg_replace ()와&lt;/strong&gt; 혼동 됩니다. 이 경우 해결책은 &lt;em&gt;$ {1} 1&lt;/em&gt; 을 사용하는 것입니다 . 이렇게하면 격리 된 &lt;em&gt;$ 1&lt;/em&gt; 역 참조 가 생성 되어 &lt;em&gt;1&lt;/em&gt; 이 리터럴로 남습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04b5f2a2e337113eaca27b3b7b3a211a1c98b3c5" translate="yes" xml:space="preserve">
          <source>When working with inifiles this function accepts arrays as keys where index 0 is the group and index 1 is the value name. See: &lt;a href=&quot;function.dba-key-split&quot;&gt;dba_key_split()&lt;/a&gt;.</source>
          <target state="translated">파일로 작업 할 때이 함수는 배열을 키로 받아들이며 인덱스 0은 그룹이고 인덱스 1은 값 이름입니다. &lt;a href=&quot;function.dba-key-split&quot;&gt;dba_key_split ()&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08ebbdcb89a24a3cda1698732ffee60a970d6baf" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;SELECT&lt;/code&gt; a bytea type, PostgreSQL returns octal byte values prefixed with '\' (e.g. \032). Users are supposed to convert back to binary format manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61d829bf121dda3a9e374a3ea16117734f18410" translate="yes" xml:space="preserve">
          <source>When you &lt;em&gt;SELECT&lt;/em&gt; a bytea type, PostgreSQL returns octal byte values prefixed with '\' (e.g. \032). Users are supposed to convert back to binary format manually.</source>
          <target state="translated">bytea 유형 을 &lt;em&gt;선택&lt;/em&gt; 하면 PostgreSQL은 접두사가 '\'인 8 진 바이트 값을 반환합니다 (예 : \ 032). 사용자는 수동으로 이진 형식으로 다시 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="92ebb44f7d77b9b546b3fa7d60a8921478b567de" translate="yes" xml:space="preserve">
          <source>When you declare a variable as &lt;strong&gt;global $var&lt;/strong&gt; you are in fact creating reference to a global variable. That means, this is the same as:</source>
          <target state="translated">변수를 &lt;strong&gt;전역 $ var&lt;/strong&gt; 로 선언하면 실제로 전역 변수에 대한 참조가 생성됩니다. 즉, 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ac29935ccb69b80a86048ce901f6acd4d7e3dc01" translate="yes" xml:space="preserve">
          <source>When you define a sequence of characters in the charlist argument make sure that you know what characters come between the characters that you set as the start and end of the range.</source>
          <target state="translated">charlist 인수에서 일련의 문자를 정의 할 때 범위의 시작과 끝으로 설정 한 문자 사이에 어떤 문자가 오는지 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="af7b355b7e9e35397d137b185f83000692706641" translate="yes" xml:space="preserve">
          <source>When you prepare a statement that uses variables as parameters, the variables are bound to the statement. This means that if you update the values of the variables, the next time you execute the statement it will run with updated parameter values. For statements that you plan to execute only once, use &lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query()&lt;/a&gt;.</source>
          <target state="translated">변수를 매개 변수로 사용하는 명령문을 준비하면 변수가 명령문에 바인드됩니다. 즉, 변수 값을 업데이트하면 다음에 명령문을 실행할 때 업데이트 된 매개 변수 값으로 실행됩니다. 한 번만 실행할 계획 인 경우 &lt;a href=&quot;function.sqlsrv-query&quot;&gt;sqlsrv_query ()를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6a5e0d55c902858d018bddf0f9e8dcfe688d776" translate="yes" xml:space="preserve">
          <source>When you unset the reference, you just break the binding between variable name and variable content. This does not mean that variable content will be destroyed. For example:</source>
          <target state="translated">참조를 설정 해제하면 변수 이름과 변수 내용 사이의 바인딩이 끊어집니다. 그렇다고 가변 내용이 파괴되는 것은 아닙니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="697e216b81c50c8e254fff01064453a808178d0c" translate="yes" xml:space="preserve">
          <source>When you use &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt;, &lt;a href=&quot;function.lstat&quot;&gt;lstat()&lt;/a&gt;, or any of the other functions listed in the affected functions list (below), PHP caches the information those functions return in order to provide faster performance. However, in certain cases, you may want to clear the cached information. For instance, if the same file is being checked multiple times within a single script, and that file is in danger of being removed or changed during that script's operation, you may elect to clear the status cache. In these cases, you can use the &lt;strong&gt;clearstatcache()&lt;/strong&gt; function to clear the information that PHP caches about a file.</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;function.stat&quot;&gt;합계를 ()&lt;/a&gt; , &lt;a href=&quot;function.lstat&quot;&gt;lstat는 ()&lt;/a&gt; , 또는 영향을받는 기능 목록 (아래)에 나와있는 다른 기능의, PHP는 그 기능이 더 빠른 성능을 제공하기 위해 반환 된 정보를 캐시합니다. 그러나 경우에 따라 캐시 된 정보를 지우고 싶을 수도 있습니다. 예를 들어, 단일 스크립트 내에서 동일한 파일을 여러 번 검사하고 해당 스크립트 작업 중 해당 파일이 제거되거나 변경 될 위험이있는 경우 상태 캐시를 지우도록 선택할 수 있습니다. 이 경우 &lt;strong&gt;clearstatcache ()&lt;/strong&gt; 함수를 사용하여 PHP가 파일에 대해 캐시하는 정보를 지울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f2748e69f7e360f272b4a30d28bac4910e1831e" translate="yes" xml:space="preserve">
          <source>When you want to iterate over the same array multiple times you need to instantiate ArrayObject and let it create ArrayIterator instances that refer to it either by using &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; or by calling its getIterator() method manually.</source>
          <target state="translated">동일한 배열을 여러 번 반복하려면 ArrayObject를 인스턴스화하고 &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; 를 사용 하거나 getIterator () 메소드를 수동으로 호출 하여이를 참조하는 ArrayIterator 인스턴스를 작성 해야합니다.</target>
        </trans-unit>
        <trans-unit id="8fb9487a63ea5d5bbd6e5b8fbeea0f08310dc49b" translate="yes" xml:space="preserve">
          <source>When your filter is first instantiated, and &lt;code&gt;yourfilter-&amp;gt;onCreate()&lt;/code&gt; is called, a number of properties will be available as shown in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4f541c471b79b0527fb91aef919241b5ebdb63" translate="yes" xml:space="preserve">
          <source>When your filter is first instantiated, and &lt;em&gt;yourfilter-&amp;gt;onCreate()&lt;/em&gt; is called, a number of properties will be available as shown in the table below.</source>
          <target state="translated">필터가 처음 인스턴스화되고 &lt;em&gt;yourfilter-&amp;gt; onCreate ()&lt;/em&gt; 가 호출되면 아래 표와 같이 여러 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d1c2824e6da794fe19c0595356b197611c1abd7" translate="yes" xml:space="preserve">
          <source>Where the midpoint of the gradient will be. This value should be in the range 0 to 1 - mutliplied by the quantum value for ImageMagick.</source>
          <target state="translated">그라디언트의 중간 점이 위치합니다. 이 값은 0에서 1 사이의 범위에 있어야하며 ImageMagick의 양자 값으로 곱해야합니다.</target>
        </trans-unit>
        <trans-unit id="38ddf272f9c34aa4e8ecfefb56c9d9a01b452c08" translate="yes" xml:space="preserve">
          <source>Where to send the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a9cc4c00bc1ddbecfb9042170bc5ce795980b9" translate="yes" xml:space="preserve">
          <source>Wherever you would use an array as a list (not concerned with keys).</source>
          <target state="translated">배열을 목록으로 사용하려는 경우 (키와 관련이 없음).</target>
        </trans-unit>
        <trans-unit id="fb2a73b0fbb3272b1026c7eb9345915ce9e891e8" translate="yes" xml:space="preserve">
          <source>Whether MySQLi Embedded support is enabled</source>
          <target state="translated">MySQLi Embedded 지원 활성화 여부</target>
        </trans-unit>
        <trans-unit id="753e023da7196c75852d92c366c18b3a146fbeee" translate="yes" xml:space="preserve">
          <source>Whether all classes that descend from &lt;code&gt;class&lt;/code&gt; will also be affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c7abec4a0ac467534abf9e33d67f636d0a82e" translate="yes" xml:space="preserve">
          <source>Whether asynchronous signal handling should be enabled.</source>
          <target state="translated">비동기 신호 처리를 활성화해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="1295ac200bb142a390a91620a19c4e933b5583c7" translate="yes" xml:space="preserve">
          <source>Whether daylight saving time is active</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d34b4c050e33470b4cc48dcbe838ac7b02b935" translate="yes" xml:space="preserve">
          <source>Whether disabled functions should be excluded from the return value.</source>
          <target state="translated">비활성화 된 기능을 반환 값에서 제외해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="180db0d419ea11d4513c19a5d03a80a6aa28f5f0" translate="yes" xml:space="preserve">
          <source>Whether event is pending. See &lt;a href=&quot;https://secure.php.net/manual/en/event.persistence.php&quot;&gt;About event persistence&lt;/a&gt; .</source>
          <target state="translated">이벤트가 보류 중인지 여부 &lt;a href=&quot;https://secure.php.net/manual/en/event.persistence.php&quot;&gt;이벤트 지속성 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f5c0b0cefb135ceda3e8798b29ba33605a0fd73" translate="yes" xml:space="preserve">
          <source>Whether event is pending. See &lt;a href=&quot;https://www.php.net/manual/en/event.persistence.php&quot;&gt;About event persistence&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c317078feb8720b27f038ffbccafcb5cad8e02c0" translate="yes" xml:space="preserve">
          <source>Whether indentation is enabled.</source>
          <target state="translated">들여 쓰기 사용 여부</target>
        </trans-unit>
        <trans-unit id="cc4bb5baa6b90d28949862ab5ae8ae0a9458e2ec" translate="yes" xml:space="preserve">
          <source>Whether it's a leap year</source>
          <target state="translated">윤년인지 여부</target>
        </trans-unit>
        <trans-unit id="3afd0f5e6282ba30149e123c9f294729260f5416" translate="yes" xml:space="preserve">
          <source>Whether locale should match exactly or fallback to parent locale is allowed.</source>
          <target state="translated">로케일이 정확하게 일치해야하는지 또는 부모 로케일로 대체되는지가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="d570c14f2f5f7cd14846f0db56c9cf7528a21fbf" translate="yes" xml:space="preserve">
          <source>Whether or not an offset exists.</source>
          <target state="translated">오프셋이 있는지 여부</target>
        </trans-unit>
        <trans-unit id="715fc841c24190c87a25086e1af56606ef050ac6" translate="yes" xml:space="preserve">
          <source>Whether or not the date is in daylight saving time</source>
          <target state="translated">날짜가 일광 절약 시간인지 여부</target>
        </trans-unit>
        <trans-unit id="e61732ebe91b15356b00a0e804616563756996ef" translate="yes" xml:space="preserve">
          <source>Whether or not the entries file for a directory is incomplete. (Only set if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd2905ecc20c8bbce727d5f26affecf8b1481d5" translate="yes" xml:space="preserve">
          <source>Whether or not the item is absent, that is, Subversion knows that there should be something there but there isn't. (Only set if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2629d2e376b0b70181b78c74c96f666e399a3b" translate="yes" xml:space="preserve">
          <source>Whether or not the item is locked. (Only set if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eac706cc15807f8c6954f2df28a2c0899b053ca" translate="yes" xml:space="preserve">
          <source>Whether or not the item was copied (scheduled for addition with history). (Only set if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1484c86a89b1d39b17990977b97cc2ea1ad51133" translate="yes" xml:space="preserve">
          <source>Whether or not the item was deleted, but parent revision lags behind. (Only set if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06597a6fbbfcdc18ccdf6d6c1a4fabf39dfd92ce" translate="yes" xml:space="preserve">
          <source>Whether or not the item was switched using the switch command. (Only set if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1743ccbe472d936ae821f2a53cae985e066f4140" translate="yes" xml:space="preserve">
          <source>Whether or not to call &lt;a href=&quot;language.oop5.autoload&quot;&gt;__autoload&lt;/a&gt; by default.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;language.oop5.autoload&quot;&gt;__autoload&lt;/a&gt; 를 호출할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="e63607b04806c72651faf24af37a8d9785adee15" translate="yes" xml:space="preserve">
          <source>Whether or not to collapse contiguous fragments into a single fragment</source>
          <target state="translated">연속 조각을 단일 조각으로 축소할지 여부</target>
        </trans-unit>
        <trans-unit id="3ecc3d2f69c9ff6e3745e1278d0e12a1f2e9167d" translate="yes" xml:space="preserve">
          <source>Whether or not to enforce &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe_mode&lt;/a&gt; (0x04).</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe_mode&lt;/a&gt; (0x04) 를 시행할지 여부 .</target>
        </trans-unit>
        <trans-unit id="6aa9338dde9d8b595ce6781d082f511061faeac0" translate="yes" xml:space="preserve">
          <source>Whether or not to omit the &quot;args&quot; index, and thus all the function/method arguments, to save memory.</source>
          <target state="translated">메모리를 절약하기 위해 &quot;args&quot;인덱스와 모든 함수 / 메소드 인수를 생략할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="07c5d79f15d493ce95b4494582081fb28a0d85c3" translate="yes" xml:space="preserve">
          <source>Whether or not to populate the &quot;object&quot; index.</source>
          <target state="translated">&quot;객체&quot;인덱스를 채울지 여부</target>
        </trans-unit>
        <trans-unit id="1995247fe0a12dff58531d49b0fe47078338d1a6" translate="yes" xml:space="preserve">
          <source>Whether or not to recursively update directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a86189d47dad2f65ce428abf30cae9a4980a5f" translate="yes" xml:space="preserve">
          <source>Whether or not to refrain from recursively processing directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf30608ba6882bccec94eeaf47f8069a38f81b0" translate="yes" xml:space="preserve">
          <source>Whether or not to use SpanScorer to highlight phrase terms only when they appear within the query phrase in the document</source>
          <target state="translated">SpanScorer를 사용하여 문서의 쿼리 문구 내에 문구 용어가 나타날 때만 문구 용어를 강조 표시할지 여부</target>
        </trans-unit>
        <trans-unit id="d89bf7e28265a84e85516a4d5a0858f32c02b8d6" translate="yes" xml:space="preserve">
          <source>Whether or not to use SpanScorer to highlight phrase terms only when they appear within the query phrase in the document.</source>
          <target state="translated">SpanScorer를 사용하여 문서의 쿼리 문구 내에 문구 용어가 나타날 때만 문구 용어를 강조 표시할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="a7f0d16aaab7ef00ed24ca377489a7ae291dc166" translate="yes" xml:space="preserve">
          <source>Whether the BMP should be compressed with run-length encoding (RLE), or not.</source>
          <target state="translated">BMP를 실행 길이 인코딩 (RLE)으로 압축해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="53c581d5fde08e9a552248ce7e625a634abe8294" translate="yes" xml:space="preserve">
          <source>Whether the function behaves as if it was declared in a file with &lt;code&gt;strict_types=1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66c62f6ebfc3a665b549000e93b3e2d5a59b75d" translate="yes" xml:space="preserve">
          <source>Whether the function should behave as if it were declared in a file with &lt;code&gt;strict_types=1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f30032d4658053123712b296ff8d45c0e3656a" translate="yes" xml:space="preserve">
          <source>Whether the function should return by reference.</source>
          <target state="translated">함수가 참조로 리턴해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="c8e756948bfff16569e510eff6004851ba4a84ae" translate="yes" xml:space="preserve">
          <source>Whether the high resolution time should be returned as &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or number.</source>
          <target state="translated">고해상도 시간이 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 또는 숫자 로 반환되어야하는지 여부</target>
        </trans-unit>
        <trans-unit id="e662de10ff4c4f5ee3d741b41b785b37f14a63d3" translate="yes" xml:space="preserve">
          <source>Whether the high resolution time should be returned as array or number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62ef04add2df1a68d55a6266b96083eedae9c89" translate="yes" xml:space="preserve">
          <source>Whether the method behaves as if it was declared in a file with &lt;code&gt;strict_types=1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f3b5fa0727862bd5e4bef887ee252568f1e279" translate="yes" xml:space="preserve">
          <source>Whether the method behaves as if it were declared in a file with &lt;code&gt;strict_types=1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e2285c2fb6da78cf78f52e35e735daf43ed024" translate="yes" xml:space="preserve">
          <source>Whether the result should considering as controller or action</source>
          <target state="translated">결과를 컨트롤러 또는 조치로 고려해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="f8e561237c99837384c0b9ea44ee23baa015446e" translate="yes" xml:space="preserve">
          <source>Whether the returned entity reference should be in hexadecimal notation (otherwise it is in decimal notation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e6fcec98cf0c599ec71be818cab43b5bb12feb" translate="yes" xml:space="preserve">
          <source>Whether the stack is empty, readonly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a184486bad643da748d07e815c7e61062c75a2" translate="yes" xml:space="preserve">
          <source>Whether the worker has been shutdown or not.</source>
          <target state="translated">작업자가 종료되었는지 여부</target>
        </trans-unit>
        <trans-unit id="4d88a92bc1defe2e9c557abcdab82ec031d02d5f" translate="yes" xml:space="preserve">
          <source>Whether the worker was successfully shutdown or not.</source>
          <target state="translated">작업자가 성공적으로 종료되었는지 여부</target>
        </trans-unit>
        <trans-unit id="43baded9f357791420304810d19e8a0cdcf1f74e" translate="yes" xml:space="preserve">
          <source>Whether to allow HTTP/0.9 responses. Defaults to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; as of libcurl 7.66.0; formerly it defaulted to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad3375dcd4a4a760d570b7910780ca90312ba0e" translate="yes" xml:space="preserve">
          <source>Whether to allow reading broken files (&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;) or not (&lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a832d7f3858d380033044de67f0a41d81452fb" translate="yes" xml:space="preserve">
          <source>Whether to allow the execution of exit opcodes or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6acf91510cc544402f58b42414f027a1fa525f7" translate="yes" xml:space="preserve">
          <source>Whether to allow this function to load the class automatically through the &lt;a href=&quot;function.autoload&quot;&gt;__autoload()&lt;/a&gt; magic method.</source>
          <target state="translated">&lt;a href=&quot;function.autoload&quot;&gt;__autoload ()&lt;/a&gt; 매직 메소드 를 통해이 함수가 클래스를 자동으로로드 할 수 있는지 여부</target>
        </trans-unit>
        <trans-unit id="5514f08538d8fc3587beb9d6c23fb06227d3e157" translate="yes" xml:space="preserve">
          <source>Whether to autoload if not already loaded.</source>
          <target state="translated">아직로드되지 않은 경우 자동로드 여부입니다.</target>
        </trans-unit>
        <trans-unit id="df92a61568403c7a45b2545aa356ccd7ab029fb1" translate="yes" xml:space="preserve">
          <source>Whether to autoload if the original class is not found.</source>
          <target state="translated">원래 클래스를 찾을 수없는 경우 자동로드 여부입니다.</target>
        </trans-unit>
        <trans-unit id="42d234722b7cfe68f8400bc73491690b34d1b488" translate="yes" xml:space="preserve">
          <source>Whether to call &lt;a href=&quot;language.oop5.autoload&quot;&gt;__autoload&lt;/a&gt; or not by default.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;language.oop5.autoload&quot;&gt;__autoload&lt;/a&gt; 를 호출할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="6cf4e5fc815968fe64ba44b693e209c8b1e2dc25" translate="yes" xml:space="preserve">
          <source>Whether to clear the realpath cache or not.</source>
          <target state="translated">리얼 패스 캐시를 지 울지 여부.</target>
        </trans-unit>
        <trans-unit id="892c4224ab87e7f152b9ed3aa0c5874a66970293" translate="yes" xml:space="preserve">
          <source>Whether to delete the old associated session file or not. You should not delete old session if you need to avoid races caused by deletion or detect/avoid session hijack attacks.</source>
          <target state="translated">기존의 연관된 세션 파일을 삭제할지 여부입니다. 삭제로 인한 경쟁을 피하거나 세션 하이재킹 공격을 탐지 / 피해야하는 경우 이전 세션을 삭제해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e3377daf37856ad97e90905920ed274dcfb3956d" translate="yes" xml:space="preserve">
          <source>Whether to disable changes to the front or end of the buffer.</source>
          <target state="translated">버퍼의 앞면 또는 끝에 대한 변경을 비활성화할지 여부</target>
        </trans-unit>
        <trans-unit id="f4a95576f4a42195a33ebb6fcf28e040019847a3" translate="yes" xml:space="preserve">
          <source>Whether to empty the buffer or not. Default is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">버퍼를 비 울지 여부. 기본값은 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="335ff15152a7172916aed2e485e460697fa0cec7" translate="yes" xml:space="preserve">
          <source>Whether to empty the buffer or not. Default is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296b717c430858fa1c044e00999df6e3754ac211" translate="yes" xml:space="preserve">
          <source>Whether to enable antialiasing or not.</source>
          <target state="translated">앤티 앨리어싱을 사용할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="e7e019927a6020d536ffb7c02719f9159111b5c4" translate="yes" xml:space="preserve">
          <source>Whether to enable events at the front or at the end of the buffer.</source>
          <target state="translated">버퍼의 앞 또는 끝에 이벤트를 사용할지 여부.</target>
        </trans-unit>
        <trans-unit id="06d7ee7dc218a7a7232ab3ec101aaf5ef936c08c" translate="yes" xml:space="preserve">
          <source>Whether to enable the blending mode or not. On true color images the default value is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; otherwise the default value is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">블렌딩 모드 활성화 여부입니다. 트루 컬러 이미지에서 기본값은 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 이고 그렇지 않으면 기본값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9d2bb4637d2488dd18153465c53e0da958ead17" translate="yes" xml:space="preserve">
          <source>Whether to enable the blending mode or not. On true color images the default value is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; otherwise the default value is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34a6ab05b227b7814857c259aec7aa113fd7fbf" translate="yes" xml:space="preserve">
          <source>Whether to extract single best passage only. Boolean, default is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">최상의 단일 통로 만 추출할지 여부 부울, 기본값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a30ad2d33806fb05ff0f123b7de6a91aa5c81e73" translate="yes" xml:space="preserve">
          <source>Whether to extract single best passage only. Boolean, default is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf11f18b6aa51787b29d4218624a9aa2fe7df0d" translate="yes" xml:space="preserve">
          <source>Whether to fetch the actual locale (the locale from which the calendar data originates, with &lt;strong&gt;&lt;code&gt;Locale::ACTUAL_LOCALE&lt;/code&gt;&lt;/strong&gt;) or the valid locale, i.e., the most specific locale supported by ICU relatively to the requested locale &amp;ndash; see &lt;strong&gt;&lt;code&gt;Locale::VALID_LOCALE&lt;/code&gt;&lt;/strong&gt;. From the most general to the most specific, the locales are ordered in this fashion &amp;ndash; actual locale, valid locale, requested locale.</source>
          <target state="translated">실제 로케일 (캘린더 데이터가 시작된 &lt;strong&gt; &lt;code&gt;Locale::ACTUAL_LOCALE&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt;Locale :: ACTUAL_LOCALE&lt;/strong&gt; ) 또는 유효한 로케일 (예 : 요청 된 로케일에 상대적으로 ICU에서 지원하는 가장 구체적인 로케일)을 &lt;strong&gt; &lt;code&gt;Locale::VALID_LOCALE&lt;/code&gt; &lt;/strong&gt; 참조하십시오 . 가장 일반적인 것부터 가장 구체적인 것까지, 로케일은 실제 로케일, 유효한 로케일, 요청 된 로케일의 방식으로 주문됩니다.</target>
        </trans-unit>
        <trans-unit id="b8b591616ccb9c740a850a14ddb21423aa91156f" translate="yes" xml:space="preserve">
          <source>Whether to fit the image inside a bounding box.</source>
          <target state="translated">경계 상자 안에 이미지를 맞출 지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f6ce2794aff89f7ad5aa50c6a3aa97d249dc0081" translate="yes" xml:space="preserve">
          <source>Whether to flush the output buffer or not. Default is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">출력 버퍼를 플러시할지 여부. 기본값은 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5972428b2dc7534349178b0e761d706e850a9062" translate="yes" xml:space="preserve">
          <source>Whether to flush the output buffer or not. Default is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485127407e69806d10f44f1fb3c68aa69792d9e4" translate="yes" xml:space="preserve">
          <source>Whether to force maximum values</source>
          <target state="translated">최대 값을 적용할지 여부</target>
        </trans-unit>
        <trans-unit id="b221bbcf99c74f15002cf3c68978975eee3a40d6" translate="yes" xml:space="preserve">
          <source>Whether to get the top-level variable available to all Apache layers.</source>
          <target state="translated">모든 Apache 레이어에서 사용 가능한 최상위 변수를 가져올 지 여부</target>
        </trans-unit>
        <trans-unit id="f461b7a64cb7c754d6f0f911e265b02b8ef60123" translate="yes" xml:space="preserve">
          <source>Whether to highlight exact query phrase matches only instead of individual keywords. Boolean, default is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">개별 키워드 대신 정확한 검색어 문구를 강조 표시할지 여부입니다. 부울, 기본값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4dea041cf86f674029bec1194d9a3e0587029aa8" translate="yes" xml:space="preserve">
          <source>Whether to highlight exact query phrase matches only instead of individual keywords. Boolean, default is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2841a177628b15715fc3c281f6838056c788d0d" translate="yes" xml:space="preserve">
          <source>Whether to include &lt;code&gt;__default&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ceb2478bb50c9cf4a599376c979587c17110ee" translate="yes" xml:space="preserve">
          <source>Whether to include &lt;em&gt;__default&lt;/em&gt; property.</source>
          <target state="translated">&lt;em&gt;__default&lt;/em&gt; 속성 을 포함할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="96e2a427852e05203bdc62339f8444e212ab1995" translate="yes" xml:space="preserve">
          <source>Whether to include the start date in the set of recurring dates or not.</source>
          <target state="translated">반복 날짜 집합에 시작 날짜를 포함할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c525d285547f11fa5c05dc146dae61c010b36af3" translate="yes" xml:space="preserve">
          <source>Whether to only negate grayscale pixels within the image.</source>
          <target state="translated">이미지 내에서 회색조 픽셀 만 무효화할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c2b67c65ffbfac03b9510bec57149c87aae0de06" translate="yes" xml:space="preserve">
          <source>Whether to output detailed information about recognised classes.</source>
          <target state="translated">인식 된 클래스에 대한 자세한 정보를 출력할지 여부</target>
        </trans-unit>
        <trans-unit id="c32c051affe5f3bc8f6a69c5f0398b834846f753" translate="yes" xml:space="preserve">
          <source>Whether to overwrite existing document or not. If &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; there will be duplicates (several documents with the same ID).</source>
          <target state="translated">기존 문서를 덮어 쓸지 여부 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 이면 중복이 발생합니다 (같은 ID의 여러 문서).</target>
        </trans-unit>
        <trans-unit id="2def1dfdb0f903ac10af9f419c45ad4452fd89a4" translate="yes" xml:space="preserve">
          <source>Whether to overwrite existing document or not. If &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; there will be duplicates (several documents with the same ID).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea85e0729fd092fdb3f7c4f9e59832fc22019b4" translate="yes" xml:space="preserve">
          <source>Whether to overwrite existing documents or not. If &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; there will be duplicates (several documents with the same ID).</source>
          <target state="translated">기존 문서를 덮어 쓸지 여부 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 이면 중복이 발생합니다 (같은 ID의 여러 문서).</target>
        </trans-unit>
        <trans-unit id="909fff8a14dff40b1617f9a142cfa131c709263e" translate="yes" xml:space="preserve">
          <source>Whether to overwrite existing documents or not. If &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; there will be duplicates (several documents with the same ID).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4483763b3a5edcd7cfe5ac2c9718b09277aa8d7" translate="yes" xml:space="preserve">
          <source>Whether to parse the solr documents as SolrObject or SolrDocument instances.</source>
          <target state="translated">solr 문서를 SolrObject 또는 SolrDocument 인스턴스로 구문 분석할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c9894beb1256e4e60486671deb7d8e25e4e42cd1" translate="yes" xml:space="preserve">
          <source>Whether to prepend a dot to the extension or not. Default to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">점에 확장자를 붙일 지 여부. 기본값은 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7ffbc8518acdffabdf8985aa008f838a10b6b08a" translate="yes" xml:space="preserve">
          <source>Whether to prepend a dot to the extension or not. Default to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4622eef410cb443e3095580ae49f00c63334ea7d" translate="yes" xml:space="preserve">
          <source>Whether to request CAS token values also.</source>
          <target state="translated">CAS 토큰 값도 요청할지 여부</target>
        </trans-unit>
        <trans-unit id="356c105f9f16cf81a98506c7b2a177be50af8658" translate="yes" xml:space="preserve">
          <source>Whether to retrieve the expanded SQL. Passing &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; is only supported as of libsqlite 3.14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67d9dcdfb6a6acce1d0fdbfbac6ef15f541dec9" translate="yes" xml:space="preserve">
          <source>Whether to return URL-encoded values</source>
          <target state="translated">URL 인코딩 값을 반환할지 여부</target>
        </trans-unit>
        <trans-unit id="deb92681dd9b5a16168f3c73d590f50372f2484e" translate="yes" xml:space="preserve">
          <source>Whether to return only profile names. If &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; then only profile names will be returned.</source>
          <target state="translated">프로필 이름 만 반환할지 여부 경우 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 가&lt;/strong&gt; 만 프로필 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a21671eafc7f72ba0b73302a8239251ec6aa8af5" translate="yes" xml:space="preserve">
          <source>Whether to return only profile names. If &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; then only profile names will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773fe9a145c6120b7d8fc67fbb62e5dd63ce6f17" translate="yes" xml:space="preserve">
          <source>Whether to return only property names. If &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; then only property names will be returned.</source>
          <target state="translated">속성 이름 만 반환할지 여부 경우 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 는&lt;/strong&gt; 다음 전용 속성 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2e18a74c24c9365da9e7543506cac5dc277fd547" translate="yes" xml:space="preserve">
          <source>Whether to return only property names. If &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; then only property names will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1844e9edf6fdba82c80987bc8e0047355da53a01" translate="yes" xml:space="preserve">
          <source>Whether to save the alpha channel or not. Default to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">알파 채널을 저장할지 여부입니다. 기본값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="090dda99c2e3561141bac29ffe80bfcc2e809c8b" translate="yes" xml:space="preserve">
          <source>Whether to save the alpha channel or not. Defaults to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ae34977bf36dd878312ab732e8b2ab94ec730e" translate="yes" xml:space="preserve">
          <source>Whether to search in the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt; for &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt; 에서 &lt;code&gt;filename&lt;/code&gt; 을 검색할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="6669503c3343b19a3916a7b45f86a6c513fdd7d2" translate="yes" xml:space="preserve">
          <source>Whether to search in the &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt; for &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd3760b817f0084272df6b1e9259ba2609c92fe" translate="yes" xml:space="preserve">
          <source>Whether to set the object's sctrictness.</source>
          <target state="translated">객체의 엄격 성을 설정할지 여부</target>
        </trans-unit>
        <trans-unit id="531b398da7d753b71acc6ed2284391b2de521fcd" translate="yes" xml:space="preserve">
          <source>Whether to set the object's strictness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307bead882cceea89c2e434e527b1268c8bd2770" translate="yes" xml:space="preserve">
          <source>Whether to set the top-level variable available to all Apache layers.</source>
          <target state="translated">모든 Apache 레이어에 사용 가능한 최상위 변수를 설정할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="265be036e623691dcc335bfeca405179a8d7b12d" translate="yes" xml:space="preserve">
          <source>Whether to show debug info</source>
          <target state="translated">디버그 정보 표시 여부</target>
        </trans-unit>
        <trans-unit id="03c9596450b16c0699e00635a013373cae9ecdba" translate="yes" xml:space="preserve">
          <source>Whether to show debug info. &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">디버그 정보를 표시할지 여부 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11b7fdd22292ed76f99c76e3cf051d7e6ba19c8f" translate="yes" xml:space="preserve">
          <source>Whether to show debug info. &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00031eca34cf0b6db84f2c1d05b91a9d02a6b84" translate="yes" xml:space="preserve">
          <source>Whether to show only the values commonly used for the specified locale.</source>
          <target state="translated">지정된 로캘에 일반적으로 사용되는 값만 표시할지 여부</target>
        </trans-unit>
        <trans-unit id="53756a1517ffc7830b95d8d2a643ee45a179fc00" translate="yes" xml:space="preserve">
          <source>Whether to skip values consisting of whitespace characters.</source>
          <target state="translated">공백 문자로 구성된 값을 건너 뛸지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f40c036c3c56621ede808b65d01ab698b7593048" translate="yes" xml:space="preserve">
          <source>Whether to stack the images vertically. By default (or if &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is specified) images are stacked left-to-right. If &lt;code&gt;stack&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, images are stacked top-to-bottom.</source>
          <target state="translated">이미지를 세로로 쌓을 지 여부. 기본적으로 (또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 가 지정된 경우) 이미지는 왼쪽에서 오른쪽으로 쌓입니다. 경우 &lt;code&gt;stack&lt;/code&gt; 입니다 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 이미지는 위에서 아래를 적층된다.</target>
        </trans-unit>
        <trans-unit id="41ddc756bc4157190cb5a168d7ffc107e1647039" translate="yes" xml:space="preserve">
          <source>Whether to stack the images vertically. By default (or if &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; is specified) images are stacked left-to-right. If &lt;code&gt;stack&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, images are stacked top-to-bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afe4910b906cd067a846155b5d6f30edfbdb5fa" translate="yes" xml:space="preserve">
          <source>Whether to turn on auto-commit or not.</source>
          <target state="translated">자동 커밋을 켤지 여부</target>
        </trans-unit>
        <trans-unit id="ff7cc3a35ec9af9d5577a469927097026cdb738a" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;self&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2044c5a56ff068e6294ad1a966d60e1335f6d7" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;em&gt;self&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;자기&lt;/em&gt; 사용 여부&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f460cfc9d76c356cf8b039eff322b0c24e8dff2" translate="yes" xml:space="preserve">
          <source>Whether to use XHTML compatible line breaks or not.</source>
          <target state="translated">XHTML 호환 줄 바꿈 사용 여부</target>
        </trans-unit>
        <trans-unit id="b3f0afbad3e6651a45fee3f8b46f471d3a1acd4b" translate="yes" xml:space="preserve">
          <source>Whether to use the iterator element keys as index.</source>
          <target state="translated">반복자 요소 키를 색인으로 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="714b9773a8f3873450be6e2c18eb6444c0d66685" translate="yes" xml:space="preserve">
          <source>Whether to verify server certificate or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8efa84086a3b1133237a4ff2a5930b492b0374" translate="yes" xml:space="preserve">
          <source>Whether, for the instant represented by this object and for this objectʼs timezone, daylight saving time is in place.</source>
          <target state="translated">이 개체가 나타내는 순간과이 개체의 시간대가 일광 절약 시간제인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="1d5d8099ef00fde46c5bcf3b50d5b953b14c7e92" translate="yes" xml:space="preserve">
          <source>Which 'channel' to return. For colorspaces other than RGB, you can still use the CHANNEL_RED, CHANNEL_GREEN, CHANNEL_BLUE constants to indicate the 1st, 2nd and 3rd channels.</source>
          <target state="translated">반환 할 '채널' RGB 이외의 색상 공간의 경우에도 여전히 CHANNEL_RED, CHANNEL_GREEN, CHANNEL_BLUE 상수를 사용하여 첫 번째, 두 번째 및 세 번째 채널을 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5ce714cef7695699cf4995e95638026df1ae052" translate="yes" xml:space="preserve">
          <source>Which channel should the auto-levelling should be done on.</source>
          <target state="translated">자동 레벨링을 수행해야하는 채널</target>
        </trans-unit>
        <trans-unit id="00628e67898e941e4eb44a2181de1d5f04a8b486" translate="yes" xml:space="preserve">
          <source>Which color channels the contrast will be applied to.</source>
          <target state="translated">대비가 적용되는 색상 채널</target>
        </trans-unit>
        <trans-unit id="6c32a224bcfda695ea0504622a459beea3700926" translate="yes" xml:space="preserve">
          <source>Which color element to set e.g. \Imagick::COLOR_GREEN.</source>
          <target state="translated">설정할 색상 요소 (예 : \ Imagick :: COLOR_GREEN)</target>
        </trans-unit>
        <trans-unit id="afc4f4b06f18a5420bc807df2b40ae8afc38a03a" translate="yes" xml:space="preserve">
          <source>Which element of the kernel should be used as the origin pixel. e.g. For a 3x3 matrix specifying the origin as [2, 2] would specify that the bottom right element should be the origin pixel.</source>
          <target state="translated">원점 픽셀로 사용해야하는 커널의 요소 예를 들어, 원점을 [2, 2]로 지정하는 3x3 행렬의 경우 오른쪽 아래 요소가 원점 픽셀이어야 함을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8d91c1eebe67e2d4e700a6037f40678492a3cc7a" translate="yes" xml:space="preserve">
          <source>Which morphology method to use one of the \Imagick::MORPHOLOGY_* constants.</source>
          <target state="translated">\ Imagick :: MORPHOLOGY_ * 상수 중 하나를 사용하는 형태학 방법.</target>
        </trans-unit>
        <trans-unit id="01b140d9725d418ba99b6bbd9c4f8a3a044993ca" translate="yes" xml:space="preserve">
          <source>Which option to fetch. &lt;strong&gt;&lt;code&gt;XML_OPTION_CASE_FOLDING&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;XML_OPTION_TARGET_ENCODING&lt;/code&gt;&lt;/strong&gt; are available. See &lt;a href=&quot;function.xml-parser-set-option&quot;&gt;xml_parser_set_option()&lt;/a&gt; for their description.</source>
          <target state="translated">가져올 옵션입니다. &lt;strong&gt; &lt;code&gt;XML_OPTION_CASE_FOLDING&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;XML_OPTION_TARGET_ENCODING&lt;/code&gt; &lt;/strong&gt; 을 사용할 수 있습니다. 설명은 &lt;a href=&quot;function.xml-parser-set-option&quot;&gt;xml_parser_set_option ()&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7a66bf28f579876f3c54ab2e3cff965c28e667b" translate="yes" xml:space="preserve">
          <source>Which option to fetch. &lt;strong&gt;&lt;code&gt;XML_OPTION_CASE_FOLDING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;XML_OPTION_SKIP_TAGSTART&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;XML_OPTION_SKIP_WHITE&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;XML_OPTION_TARGET_ENCODING&lt;/code&gt;&lt;/strong&gt; are available. See &lt;a href=&quot;function.xml-parser-set-option&quot;&gt;xml_parser_set_option()&lt;/a&gt; for their description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c5030ddaa0237ef6494497a38a7fb81277d96d" translate="yes" xml:space="preserve">
          <source>Which option to set. See below.</source>
          <target state="translated">설정할 옵션입니다. 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d42de9baccb421ca90f9896cf5dc16e814596b3" translate="yes" xml:space="preserve">
          <source>Which request method was used to access the page; e.g. '&lt;code&gt;GET&lt;/code&gt;', '&lt;code&gt;HEAD&lt;/code&gt;', '&lt;code&gt;POST&lt;/code&gt;', '&lt;code&gt;PUT&lt;/code&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1338b0d1de955a8109e0b7970de8385961166c" translate="yes" xml:space="preserve">
          <source>Which request method was used to access the page; i.e. '&lt;em&gt;GET&lt;/em&gt;', '&lt;em&gt;HEAD&lt;/em&gt;', '&lt;em&gt;POST&lt;/em&gt;', '&lt;em&gt;PUT&lt;/em&gt;'.</source>
          <target state="translated">페이지에 액세스하는 데 사용 된 요청 방법 즉, ' &lt;em&gt;GET&lt;/em&gt; ', ' &lt;em&gt;HEAD&lt;/em&gt; ', ' &lt;em&gt;POST&lt;/em&gt; ', ' &lt;em&gt;PUT&lt;/em&gt; '.</target>
        </trans-unit>
        <trans-unit id="e3fd8b87afef68d09264f3038aa479908c9ebea7" translate="yes" xml:space="preserve">
          <source>Which section will be loaded as the final config</source>
          <target state="translated">최종 구성으로로드 될 섹션</target>
        </trans-unit>
        <trans-unit id="c8b39104cb8343943525955cc417346911cea98c" translate="yes" xml:space="preserve">
          <source>Which set of names to use for the lookup. Can be any of these constants:</source>
          <target state="translated">조회에 사용할 이름 세트 다음 상수 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a551c82cf09c9baf5c7c8415aa82544a39ac65fc" translate="yes" xml:space="preserve">
          <source>Which table to return. Either &lt;strong&gt;&lt;code&gt;HTML_ENTITIES&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;HTML_SPECIALCHARS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">반환 할 테이블 어느 &lt;strong&gt; &lt;code&gt;HTML_ENTITIES&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;HTML_SPECIALCHARS&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="06220db7abb7745f018f58b78f0e66e3013e9a6b" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;function.assert-options&quot;&gt;assert_options()&lt;/a&gt; can still be used to control behaviour as described above for backward compatibility reasons, PHP 7 only code should use the two new configuration directives to control the behaviour of &lt;strong&gt;assert()&lt;/strong&gt; and not call &lt;a href=&quot;function.assert-options&quot;&gt;assert_options()&lt;/a&gt;.</source>
          <target state="translated">하지만 &lt;a href=&quot;function.assert-options&quot;&gt;assert_options ()는&lt;/a&gt; 이전 버전과의 호환성을 이유로 상기 한 바와 같이 여전히 제어 동작으로 사용할 수 있습니다, PHP 7 단지 코드의 동작을 제어하기 위해 두 개의 새 구성 지시어를 사용한다 &lt;strong&gt;어설 ()&lt;/strong&gt; 및 호출하지 &lt;a href=&quot;function.assert-options&quot;&gt;assert_options을 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="788b72fc39b1dcc5a43a8b693c2ba6424da73b4c" translate="yes" xml:space="preserve">
          <source>While &lt;var&gt;browscap.ini&lt;/var&gt; contains information on many browsers, it relies on user updates to keep the database current. The format of the file is fairly self-explanatory.</source>
          <target state="translated">&lt;var&gt;browscap.ini&lt;/var&gt; 에는 많은 브라우저에 대한 정보가 포함되어 있지만 데이터베이스를 최신 상태로 유지하려면 사용자 업데이트에 의존합니다. 파일 형식은 설명이 필요 없습니다.</target>
        </trans-unit>
        <trans-unit id="8b0308ecd996bf50c6fa8b1080ffad558de46ea6" translate="yes" xml:space="preserve">
          <source>While direct modification triggers a call to &lt;a href=&quot;arrayaccess.offsetset&quot;&gt;ArrayAccess::offsetSet()&lt;/a&gt;, indirect modification triggers a call to &lt;strong&gt;ArrayAccess::offsetGet()&lt;/strong&gt;. In that case, the implementation of &lt;strong&gt;ArrayAccess::offsetGet()&lt;/strong&gt; must be able to return by reference, otherwise an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; message is raised.</source>
          <target state="translated">직접 수정은 &lt;a href=&quot;arrayaccess.offsetset&quot;&gt;ArrayAccess :: offsetSet ()&lt;/a&gt; 에 대한 호출을 트리거하지만 간접 수정은 &lt;strong&gt;ArrayAccess :: offsetGet ()에&lt;/strong&gt; 대한 호출을 트리거합니다 . 이 경우 &lt;strong&gt;ArrayAccess :: offsetGet ()&lt;/strong&gt; 구현은 참조로 리턴 할 수 있어야합니다. 그렇지 않으면 &lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt; 메시지가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="98f87237341c9ee1345ed52da8ae808044871893" translate="yes" xml:space="preserve">
          <source>While it is possible to define &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; constants, it is not recommended and may cause unpredictable behavior.</source>
          <target state="translated">&lt;a href=&quot;language.types.resource&quot;&gt;자원&lt;/a&gt; 상수 를 정의 할 수는 있지만 권장되지 않으며 예상치 못한 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d90246c25e22d4fb8c78488a5dad83199ad35c7" translate="yes" xml:space="preserve">
          <source>While it is possible to define resource constants, it is not recommended and may cause unpredictable behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6811946a7cc25ba6bbc7e733b77ac78e148bd41" translate="yes" xml:space="preserve">
          <source>While malformed HTML should load successfully, this function may generate &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; errors when it encounters bad markup. &lt;a href=&quot;function.libxml-use-internal-errors&quot;&gt;libxml's error handling functions&lt;/a&gt; may be used to handle these errors.</source>
          <target state="translated">잘못된 HTML이 성공적으로로드되어야하지만이 함수는 잘못된 마크 업이 발생할 때 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 오류를 생성 할 수 있습니다 . &lt;a href=&quot;function.libxml-use-internal-errors&quot;&gt;libxml의 오류 처리 기능을&lt;/a&gt; 사용하여 이러한 오류를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="95481b1b561680d9bfd8fac01411b1ea5c45c9b2" translate="yes" xml:space="preserve">
          <source>While not being strictly an assignment by reference, expressions created with the language construct &lt;a href=&quot;function.array&quot;&gt;&lt;code&gt;array()&lt;/code&gt;&lt;/a&gt; can also behave as such by prefixing &lt;code&gt;&amp;amp;&lt;/code&gt; to the array element to add. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ae7ec857d66a624a80df0e0c56ba2b5904f022" translate="yes" xml:space="preserve">
          <source>While not being strictly an assignment by reference, expressions created with the language construct &lt;a href=&quot;function.array&quot;&gt;&lt;em&gt;array()&lt;/em&gt;&lt;/a&gt; can also behave as such by prefixing &lt;em&gt;&amp;amp;&lt;/em&gt; to the array element to add. Example:</source>
          <target state="translated">참조로 지정하는 것은 아니지만 언어 구문 &lt;a href=&quot;function.array&quot;&gt;&lt;em&gt;array ()&lt;/em&gt;&lt;/a&gt; 로 작성된 표현식은 &lt;em&gt;&amp;amp;&lt;/em&gt; 를 추가 할 배열 요소 앞에 &lt;em&gt;&amp;amp;&lt;/em&gt; 를 붙여서 동작 할 수 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="d903f64a17764f16da9721adecd488fe43c57ba6" translate="yes" xml:space="preserve">
          <source>While not strictly required it is recommended to create an actual class for every attribute. In the most simple case only an empty class is needed with the &lt;code&gt;#[Attribute]&lt;/code&gt; attribute declared that can be imported from the global namespace with a use statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57758c5bcc2fff6473224824a3611727ff24c2f0" translate="yes" xml:space="preserve">
          <source>While one may expect the following program to search the file &lt;var&gt;filename.txt&lt;/var&gt; for the text &lt;code&gt;search&lt;/code&gt; and to print the results, it behaves rather differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5054cc91d4b3a63587c0bbf29af40cfd75baa935" translate="yes" xml:space="preserve">
          <source>While optional, adding random salt significantly improves the strength of HKDF.</source>
          <target state="translated">선택적이지만, 임의의 소금을 첨가하면 HKDF의 강도가 크게 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="f300cd7ac3a2ef33d63d3be2c262e8ae9fe33c58" translate="yes" xml:space="preserve">
          <source>While the application.dispatcher.throwException is On(you can also calling to &lt;strong&gt;Yaf_Dispatcher::throwException(TRUE)()&lt;/strong&gt; to enable it), Yaf will throw Exception whe error occurrs instead of trigger error.</source>
          <target state="translated">application.dispatcher.throwException이 켜져있는 동안 ( &lt;strong&gt;Yap_Dispatcher :: throwException (TRUE) ()&lt;/strong&gt; 를 호출 하여 활성화 할 수 있음) Yaf는 트리거 오류 대신 오류 발생시 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="a19642abcb4fd4fe35165a027fa92dd041a3ab8e" translate="yes" xml:space="preserve">
          <source>While the application.dispatcher.throwException is On(you can also calling to &lt;strong&gt;Yaf_Dispatcher::throwException(TRUE)()&lt;/strong&gt; to enable it), Yaf will throw Exception when error occurrs instead of trigger error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098fad8a189f9cd6572bdc1920ba2218543f6f87" translate="yes" xml:space="preserve">
          <source>While the handling of &lt;code&gt;BINARY&lt;/code&gt; and &lt;code&gt;VARBINARY&lt;/code&gt; columns only depend on the binmode, the handling of &lt;code&gt;LONGVARBINARY&lt;/code&gt; columns also depends on the longreadlen as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d3f1609c0a47ae820a1ac3d1b83f9eefd9959b" translate="yes" xml:space="preserve">
          <source>While the hash value does not define equality, all objects that are equal according to &lt;a href=&quot;ds-hashable.equals&quot;&gt;Ds\Hashable::equals()&lt;/a&gt; must have the same hash value. Hash values of equal objects don't have to be unique, for example you could just return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for all objects and nothing would break - the only implication would be that hash tables then turn into linked lists because all your objects will be hashed to the same bucket. It's therefore very important that you pick a good hash value, such as an ID or email address.</source>
          <target state="translated">해시 값이 동등성을 정의하지는 않지만 &lt;a href=&quot;ds-hashable.equals&quot;&gt;Ds \ Hashable :: equals ()&lt;/a&gt; 에 따라 동일한 모든 개체 는 동일한 해시 값을 가져야합니다. 동일한 객체의 해시 값은 고유 할 필요가 없습니다. 예를 들어 모든 객체에 대해 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 반환해도 아무것도 깨지지 않습니다. 해시 테이블이 연결된 목록으로 바뀌면 모든 객체가 해시됩니다. 동일한 버킷. 따라서 ID 나 이메일 주소와 같은 적절한 해시 값을 선택하는 것이 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="9bd719534771c4070732bc63616123d7cc318692" translate="yes" xml:space="preserve">
          <source>While the hash value does not define equality, all objects that are equal according to &lt;a href=&quot;ds-hashable.equals&quot;&gt;Ds\Hashable::equals()&lt;/a&gt; must have the same hash value. Hash values of equal objects don't have to be unique, for example you could just return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; for all objects and nothing would break - the only implication would be that hash tables then turn into linked lists because all your objects will be hashed to the same bucket. It's therefore very important that you pick a good hash value, such as an ID or email address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b610c45f3af1eec2149c4342ba1afa882e37823f" translate="yes" xml:space="preserve">
          <source>While the severity can be any &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; value, it is intended that the &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;error constants&lt;/a&gt; be used.</source>
          <target state="translated">심각도는 임의의 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 값일 수 있지만 &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;오류 상수&lt;/a&gt; 를 사용 하도록되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c0b9e52f60c393ef34261d608cb8eb3a3f9fb65" translate="yes" xml:space="preserve">
          <source>While the severity can be any int value, it is intended that the &lt;a href=&quot;https://www.php.net/manual/en/errorfunc.constants.php&quot;&gt;error constants&lt;/a&gt; be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a8286f5a86684e261aadfaf8f62f6014232413" translate="yes" xml:space="preserve">
          <source>Whilst a path must be supplied, the value can be an empty string. In this case, the value is interpreted as the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a43ec69c0412cc2cb24018b656ca1a6aa8c482d" translate="yes" xml:space="preserve">
          <source>Whilst a path must be supplied, the value can be blank or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; In these cases, the value is interpreted as the current directory.</source>
          <target state="translated">경로를 제공해야하지만 값은 공백이거나 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 일&lt;/strong&gt; 수 있습니다 .이 경우 값은 현재 디렉토리로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="f22c0c12c2b75e8ab42b3330e5b73a215044a9b7" translate="yes" xml:space="preserve">
          <source>Whilst this example doesn't do much more than a 'ibase_blob_echo($data-&amp;gt;BLOB_VALUE)' would do, it does show you how to get information into a $variable to manipulate as you please.</source>
          <target state="translated">이 예제는 'ibase_blob_echo ($ data-&amp;gt; BLOB_VALUE)'보다 더 많은 작업을 수행하지 않지만 원하는대로 조작하기 위해 $ variable로 정보를 가져 오는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6970c96e7c3eedb1db8d510d0b6a0c20235af5c7" translate="yes" xml:space="preserve">
          <source>Whitespace node</source>
          <target state="translated">공백 노드</target>
        </trans-unit>
        <trans-unit id="f1cfa960ceee5493bb643267c8b8cfcf3af5edec" translate="yes" xml:space="preserve">
          <source>Why &lt;code&gt;refcount(1)&lt;/code&gt;? Because a copy of &lt;code&gt;$var1&lt;/code&gt; is being made, when the function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988a8e4179a547fbad5af357c77dff39dcb8cf05" translate="yes" xml:space="preserve">
          <source>Why &lt;em&gt;refcount(1)&lt;/em&gt;? Because a copy of &lt;em&gt;$var1&lt;/em&gt; is being made, when the function is called.</source>
          <target state="translated">왜 &lt;em&gt;refcount (1)&lt;/em&gt; 입니까? 함수가 호출 될 때 &lt;em&gt;$ var1&lt;/em&gt; 의 사본이 작성되므로 .</target>
        </trans-unit>
        <trans-unit id="ba91be6033b44fa9f1f3cb60dd3d6d4a9c11c86d" translate="yes" xml:space="preserve">
          <source>Why is &lt;code&gt;$foo[bar]&lt;/code&gt; wrong?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e84164e07c73e5c51119caa1c1a6448a57f6cc" translate="yes" xml:space="preserve">
          <source>Why is &lt;em&gt;$foo[bar]&lt;/em&gt; wrong?</source>
          <target state="translated">&lt;em&gt;$ foo [bar]&lt;/em&gt; 가 왜 잘못 되었습니까?</target>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="translated">Width</target>
        </trans-unit>
        <trans-unit id="a1b0d74f40121d623b51e45bc339e25efdf7f1f3" translate="yes" xml:space="preserve">
          <source>Width of the area to raise.</source>
          <target state="translated">올릴 영역의 너비입니다.</target>
        </trans-unit>
        <trans-unit id="654c6cbb6a86a77e807f3d5dc68a088f224fe59f" translate="yes" xml:space="preserve">
          <source>Width of the chopped area</source>
          <target state="translated">다진 영역의 너비</target>
        </trans-unit>
        <trans-unit id="507cc44066da0cfa5703e7d8d395d4d651b60135" translate="yes" xml:space="preserve">
          <source>Width of the exported aread</source>
          <target state="translated">내 보낸 영역의 너비</target>
        </trans-unit>
        <trans-unit id="307e63b84b90785a17e29ec6dcdca07ae8c44b08" translate="yes" xml:space="preserve">
          <source>Width of the image</source>
          <target state="translated">이미지 너비</target>
        </trans-unit>
        <trans-unit id="435927bd785fb32aba5fbfe4a4cdcfc26ce72aa1" translate="yes" xml:space="preserve">
          <source>Width of the local neighborhood.</source>
          <target state="translated">지역 이웃의 너비.</target>
        </trans-unit>
        <trans-unit id="bd7122efd2081f013a7b7748fd6d7e4e76a47170" translate="yes" xml:space="preserve">
          <source>Width of the new image</source>
          <target state="translated">새 이미지의 너비</target>
        </trans-unit>
        <trans-unit id="0eaf890537e13694055ee6e52a1c59772f065749" translate="yes" xml:space="preserve">
          <source>Width of the virtual terminal.</source>
          <target state="translated">가상 터미널의 너비</target>
        </trans-unit>
        <trans-unit id="ba9627d043ad4bb86356449cd83d59492519334e" translate="yes" xml:space="preserve">
          <source>Will be filled by the response OID.</source>
          <target state="translated">응답 OID로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="43fdce921c84e810a0591d5523dbd65af302b9ea" translate="yes" xml:space="preserve">
          <source>Will be filled by the response data.</source>
          <target state="translated">응답 데이터로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="01189970575fab93e203a797a421c61b627353cf" translate="yes" xml:space="preserve">
          <source>Will be filled with the extended operation response data if provided. If not provided you may use ldap_parse_exop on the result object later to get this data.</source>
          <target state="translated">제공된 경우 확장 작업 응답 데이터로 채워집니다. 제공되지 않으면 나중에 결과 데이터에 ldap_parse_exop를 사용하여이 데이터를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdcbfccd4255719458e254c220a1a39206ee36ad" translate="yes" xml:space="preserve">
          <source>Will be filled with the response OID if provided, usually equal to the request OID.</source>
          <target state="translated">제공된 경우 응답 OID로 채워지며 일반적으로 요청 OID와 같습니다.</target>
        </trans-unit>
        <trans-unit id="c3c90adc4f3e43d968eb63e5e429680fa9ac207e" translate="yes" xml:space="preserve">
          <source>Will be set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; on success and &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db914c2b70123d301f18dadc6dffca59ab6f77a" translate="yes" xml:space="preserve">
          <source>Will be set to an indexed array of file pointers that correspond to PHP's end of any pipes that are created.</source>
          <target state="translated">생성 된 파이프의 PHP 끝에 해당하는 파일 포인터의 인덱스 배열로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="51eaf182642a47372315be5077e955039adeeff0" translate="yes" xml:space="preserve">
          <source>Will be set to the name (address) of the client which connected, if included and available from the selected transport.</source>
          <target state="translated">선택한 전송에 포함되어 사용 가능한 경우 연결 한 클라이언트의 이름 (주소)으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="6261af27579adadfb8391391f1735d3ed76e291e" translate="yes" xml:space="preserve">
          <source>Will be set to the system level error message if the connection fails.</source>
          <target state="translated">연결이 실패하면 시스템 수준 오류 메시지로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b7f88e7b11b2183b8148e02f8481eb5967994813" translate="yes" xml:space="preserve">
          <source>Will be set to the system level error number if connection fails.</source>
          <target state="translated">연결이 실패하면 시스템 수준 오류 번호로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2723e97cfc775190a0813467caa6e7de35b4a208" translate="yes" xml:space="preserve">
          <source>Will cause the calling context to wait for notification from the referenced object</source>
          <target state="translated">호출 컨텍스트가 참조 된 오브젝트로부터 알림을 기다리게합니다.</target>
        </trans-unit>
        <trans-unit id="16a3f1c3ed5bb5d1307f8937fd732c52d1a61d9a" translate="yes" xml:space="preserve">
          <source>Will convert both double and single quotes.</source>
          <target state="translated">큰 따옴표와 작은 따옴표를 모두 변환합니다.</target>
        </trans-unit>
        <trans-unit id="49c10fe8302cf5da86d6629d9f91082bf068263a" translate="yes" xml:space="preserve">
          <source>Will convert double-quotes and leave single-quotes alone.</source>
          <target state="translated">큰 따옴표를 변환하고 작은 따옴표를 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="0e72b1f640814374a42a55ea7594f1f2e85377d5" translate="yes" xml:space="preserve">
          <source>Will emit an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level error if &lt;code&gt;chunk_size&lt;/code&gt; is less than 1 or greater than &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">방출 것이다 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; 의&lt;/strong&gt; 경우 수준 오류를 &lt;code&gt;chunk_size&lt;/code&gt; 1보다 작거나보다 큰 &lt;strong&gt; &lt;code&gt;PHP_INT_MAX&lt;/code&gt; 을&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="43cc2141e5417da1d6eb61d70efa4bb7156bc478" translate="yes" xml:space="preserve">
          <source>Will execute a Callable in the global scope</source>
          <target state="translated">글로벌 범위에서 Callable을 실행합니다</target>
        </trans-unit>
        <trans-unit id="f720247b338bbf653559392a48ca39c22694d644" translate="yes" xml:space="preserve">
          <source>Will leave both double and single quotes unconverted.</source>
          <target state="translated">큰 따옴표와 작은 따옴표를 모두 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="36fd3cdb6990c5164540ab98f9955307a6467241" translate="yes" xml:space="preserve">
          <source>Will respond to truncation, e.g., through &lt;a href=&quot;function.ftruncate&quot;&gt;ftruncate()&lt;/a&gt;.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;function.ftruncate&quot;&gt;ftruncate ()를&lt;/a&gt; 통해 잘림에 응답합니다 .</target>
        </trans-unit>
        <trans-unit id="7ba1aadb28273b07e19e8674ae88a9bbaf46e39d" translate="yes" xml:space="preserve">
          <source>Will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;chunk_size&lt;/code&gt; is less than 1 or greater than &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;chunk_size&lt;/code&gt; 가 1보다 작 &lt;strong&gt; &lt;code&gt;PHP_INT_MAX&lt;/code&gt; &lt;/strong&gt; 보다 큰 경우 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6eb74570d39694f71380a86cf011f036692c4990" translate="yes" xml:space="preserve">
          <source>Will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;chunk_size&lt;/code&gt; is less than 1 or greater than &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaae993966e52c59561f9eaabb1825590095bed9" translate="yes" xml:space="preserve">
          <source>Will return the identity of the Thread that created the referenced Thread</source>
          <target state="translated">참조 된 스레드를 만든 스레드의 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="733f3dfcb73a98cedcc312b3efdbec0c98c5d14c" translate="yes" xml:space="preserve">
          <source>Will return the identity of the currently executing Thread</source>
          <target state="translated">현재 실행중인 스레드의 신원을 반환합니다</target>
        </trans-unit>
        <trans-unit id="edb868fa4a74b07b1e52197190b1b4746d0fea7d" translate="yes" xml:space="preserve">
          <source>Will return the identity of the referenced Thread</source>
          <target state="translated">참조 된 스레드의 ID를 반환합니다</target>
        </trans-unit>
        <trans-unit id="691565a64373c3723a78cfa73a7a7a6fa78cf3a7" translate="yes" xml:space="preserve">
          <source>Will returns an array of suggestions if the word is bad spelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f316c7a4eb1ef174655b50ee3750f606229a896" translate="yes" xml:space="preserve">
          <source>Will start a new Thread to execute the implemented run method</source>
          <target state="translated">구현 된 run 메소드를 실행하기 위해 새 스레드를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ccb41f70f586c13328252241b7d6fb9b8ca372ff" translate="yes" xml:space="preserve">
          <source>WinCache &amp;rarr;</source>
          <target state="translated">윈 캐쉬 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5a4c2657aed736d2d1880eb0b748b6ada6bbf030" translate="yes" xml:space="preserve">
          <source>WinCache performs regular checks on the cached files to ensure that if any file has changed then the corresponding entry in the cache is updated. By default this check is performed every 30 seconds. If, for example, a PHP script updates another PHP script where the application's configuration settings are stored, then it may happen that after the configuration settings have been saved to a file, the application is still using old settings for some time until the cache is refreshed. In those cases it may be preferrable to refresh the cache right after the file has been changed. The following example shows how this can be done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bcc7496296f00f99bdc1707a76ec28101b3bd1" translate="yes" xml:space="preserve">
          <source>Windows - If not explicitly set in the &lt;var&gt;php.ini&lt;/var&gt;, the extension is loaded from &lt;var&gt;C:\php5\&lt;/var&gt; by default.</source>
          <target state="translated">Windows- &lt;var&gt;php.ini&lt;/var&gt; 에 명시 적으로 설정되지 않은 경우 확장 프로그램은 기본적으로 &lt;var&gt;C:\php5\&lt;/var&gt; 에서로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="1285d05d3d626d4d954a03f18a2608e40893a9f8" translate="yes" xml:space="preserve">
          <source>Windows 9x/ME compatibility note: &lt;a href=&quot;function.socket-last-error&quot;&gt;socket_last_error()&lt;/a&gt; may return an invalid error code if trying to bind the socket to a wrong address that does not belong to your machine.</source>
          <target state="translated">Windows 9x / ME 호환성 참고 : &lt;a href=&quot;function.socket-last-error&quot;&gt;socket_last_error ()&lt;/a&gt; 는 소켓을 컴퓨터에 속하지 않는 잘못된 주소에 바인딩하려고하면 잘못된 오류 코드를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7af359cb1c9255163d7aa10e68d5783d23867d57" translate="yes" xml:space="preserve">
          <source>Windows Me/XP can both wipe the Exif headers when connecting to a camera.</source>
          <target state="translated">Windows Me / XP는 카메라에 연결할 때 Exif 헤더를 모두 지울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65531b6466e1d295590d95ee7577a43a01645a6c" translate="yes" xml:space="preserve">
          <source>Windows Only Extensions &amp;rarr;</source>
          <target state="translated">Windows 전용 확장명 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5b4b8a82434476afb5cf71bdcd4802f15dfe4805" translate="yes" xml:space="preserve">
          <source>Windows compatibility: &lt;strong&gt;stream_select()&lt;/strong&gt; used on a pipe returned from &lt;a href=&quot;function.proc-open&quot;&gt;proc_open()&lt;/a&gt; may cause data loss under Windows 98.</source>
          <target state="translated">Windows 호환성 : &lt;a href=&quot;function.proc-open&quot;&gt;proc_open ()&lt;/a&gt; 에서 리턴 된 파이프에서 사용되는 &lt;strong&gt;stream_select ()&lt;/strong&gt; 는 Windows 98에서 데이터 손실을 유발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6092319451bbe8056dc01055de6195c02c7be329" translate="yes" xml:space="preserve">
          <source>Windows compatibility: Descriptors beyond 2 (stderr) are made available to the child process as inheritable handles, but since the Windows architecture does not associate file descriptor numbers with low-level handles, the child process does not (yet) have a means of accessing those handles. Stdin, stdout and stderr work as expected.</source>
          <target state="translated">Windows 호환성 : 2 (stderr) 이상의 설명자는 자식 프로세스에서 상속 가능한 핸들로 사용할 수 있지만 Windows 아키텍처는 파일 설명자 번호를 낮은 수준의 핸들과 연결하지 않으므로 자식 프로세스는 아직 액세스 할 수있는 방법이 없습니다. 그 핸들. Stdin, stdout 및 stderr이 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b2ef21584af041b380586c7245e8ec995e78d5b2" translate="yes" xml:space="preserve">
          <source>Windows offers a text-mode translation flag (&lt;code&gt;'t'&lt;/code&gt;) which will transparently translate &lt;code&gt;\n&lt;/code&gt; to &lt;code&gt;\r\n&lt;/code&gt; when working with the file. In contrast, you can also use &lt;code&gt;'b'&lt;/code&gt; to force binary mode, which will not translate your data. To use these flags, specify either &lt;code&gt;'b'&lt;/code&gt; or &lt;code&gt;'t'&lt;/code&gt; as the last character of the &lt;code&gt;mode&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33b2fc33001e60d98ae6eddae9d86b296ee4e46" translate="yes" xml:space="preserve">
          <source>Windows offers a text-mode translation flag (&lt;em&gt;'t'&lt;/em&gt;) which will transparently translate &lt;em&gt;\n&lt;/em&gt; to &lt;em&gt;\r\n&lt;/em&gt; when working with the file. In contrast, you can also use &lt;em&gt;'b'&lt;/em&gt; to force binary mode, which will not translate your data. To use these flags, specify either &lt;em&gt;'b'&lt;/em&gt; or &lt;em&gt;'t'&lt;/em&gt; as the last character of the &lt;code&gt;mode&lt;/code&gt; parameter.</source>
          <target state="translated">Windows는 파일 작업시 &lt;em&gt;\ n&lt;/em&gt; 을 &lt;em&gt;\ r \ n으로&lt;/em&gt; 투명하게 변환 하는 텍스트 모드 변환 플래그 ( &lt;em&gt;'t'&lt;/em&gt; )를 제공 합니다. 반대로 &lt;em&gt;'b'&lt;/em&gt; 를 사용 하여 데이터를 변환하지 않는 이진 모드를 강제 설정할 수도 있습니다 . 이 플래그를 사용하려면 &lt;code&gt;mode&lt;/code&gt; 매개 변수 의 마지막 문자로 &lt;em&gt;'b'&lt;/em&gt; 또는 &lt;em&gt;'t'&lt;/em&gt; 를 지정하십시오 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8598ae9caebffea7ea6a4b517c7c43a8e819ed4f" translate="yes" xml:space="preserve">
          <source>Windows only: Core constants are categorized under &lt;em&gt;Core&lt;/em&gt;, previously &lt;em&gt;mhash&lt;/em&gt;.</source>
          <target state="translated">Windows에만 해당 : 코어 상수는 이전에 &lt;em&gt;mhash &lt;/em&gt;&lt;em&gt;코어&lt;/em&gt; 로 분류됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2eda31f78340e4a18f1b6125d43492c5ada60543" translate="yes" xml:space="preserve">
          <source>Windows specific charset for Western European.</source>
          <target state="translated">서유럽 용 Windows 전용 문자셋.</target>
        </trans-unit>
        <trans-unit id="6bd7ebbb73a8cde7f90532833572a88bfc496de4" translate="yes" xml:space="preserve">
          <source>Windows users will find useful information about &lt;code&gt;locale&lt;/code&gt; strings at Microsoft's</source>
          <target state="translated">Windows 사용자는 Microsoft의 &lt;code&gt;locale&lt;/code&gt; 문자열에 대한 유용한 정보를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2dd4c36efec5ea287ad183ee25dabbbdfaef46e" translate="yes" xml:space="preserve">
          <source>Windows-1251, win-1251, 1251</source>
          <target state="translated">Windows-1251, 승리 -1251, 1251</target>
        </trans-unit>
        <trans-unit id="425f168cd55d3d461f41564eb7a64b88cfe46cad" translate="yes" xml:space="preserve">
          <source>Windows-1252, 1252</source>
          <target state="translated">Windows-1252, 1252</target>
        </trans-unit>
        <trans-unit id="8be10b19b1a45623be3797d487b88f71e5f1d563" translate="yes" xml:space="preserve">
          <source>Windows-only configuration flag. Enables the IOCP dispatcher at startup.</source>
          <target state="translated">Windows 전용 구성 플래그 시작할 때 IOCP 디스패처를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0fd72a1998eaed986269d39ce1301baa13063d8c" translate="yes" xml:space="preserve">
          <source>Windows-specific Cyrillic charset.</source>
          <target state="translated">Windows 고유의 키릴 문자셋.</target>
        </trans-unit>
        <trans-unit id="ae9d562f1c0a54a7e2f821c1463b2f7c49f60245" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; enabled, the command string is escaped with &lt;a href=&quot;function.escapeshellcmd&quot;&gt;escapeshellcmd()&lt;/a&gt;. Thus, &lt;em&gt;echo y | echo x&lt;/em&gt; becomes &lt;em&gt;echo y \| echo x&lt;/em&gt;.</source>
          <target state="translated">으로 &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;안전 모드가&lt;/a&gt; 활성화 명령 문자열로 이스케이프 &lt;a href=&quot;function.escapeshellcmd&quot;&gt;에는 escapeshellcmd ()&lt;/a&gt; . 따라서 &lt;em&gt;에코 y | echo x&lt;/em&gt; 는 &lt;em&gt;echo y&lt;/em&gt; 가됩니다. &lt;em&gt;\ | &lt;/em&gt;&lt;em&gt;에코 x&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="746c02668c99311cb98280480201169d3c9c79af" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; set to 0, the above example will output:</source>
          <target state="translated">함께 &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; 0 위의 예가 출력 설정 :</target>
        </trans-unit>
        <trans-unit id="95e0319452fa2a22892cf7e4e5a8400c9cec5e00" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; set to 1 and &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;assert.exception&lt;/a&gt; set to 0, the above example will output:</source>
          <target state="translated">함께 &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions가&lt;/a&gt; 1로 설정 &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;assert.exception를&lt;/a&gt; 0으로 설정하고, 상기 예제 출력 할 것이다 :</target>
        </trans-unit>
        <trans-unit id="10540f2601bda1ae850730a09d0d2f8ff01230cb" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; set to 1 and &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;assert.exception&lt;/a&gt; set to 1, the above example will output:</source>
          <target state="translated">함께 &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions가&lt;/a&gt; 1로 설정 &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;assert.exception의&lt;/a&gt; 1 세트, 상기 예가 출력 :</target>
        </trans-unit>
        <trans-unit id="e3346f7d43e656f26f5e1f31bd79cdc43b146e18" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; set to 0, the above example will output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa179c4586e499061aebf96866c684aec44d86b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; set to 1 and &lt;a href=&quot;https://www.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;assert.exception&lt;/a&gt; set to 0, the above example will output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34d1c0dff865dcffa35a72786bdb7398a0da5f6" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.zend.assertions&quot;&gt;zend.assertions&lt;/a&gt; set to 1 and &lt;a href=&quot;https://www.php.net/manual/en/info.configuration.php#ini.assert.exception&quot;&gt;assert.exception&lt;/a&gt; set to 1, the above example will output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f24a9f43cf957507f750c8834a99e58c803f75b" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;&lt;code&gt;MYSQLI_ASYNC&lt;/code&gt;&lt;/strong&gt; (available with mysqlnd), it is possible to perform query asynchronously. &lt;a href=&quot;mysqli.poll&quot;&gt;mysqli_poll()&lt;/a&gt; is then used to get results from such queries.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;MYSQLI_ASYNC&lt;/code&gt; &lt;/strong&gt; ( &lt;strong&gt;mysqlnd&lt;/strong&gt; 와 함께 사용 가능)를 사용하면 쿼리를 비동기 적으로 수행 할 수 있습니다. 그런 다음 &lt;a href=&quot;mysqli.poll&quot;&gt;mysqli_poll ()&lt;/a&gt; 을 사용하여 이러한 쿼리에서 결과를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="4d7a89ec96a6c42b41b8399134d8966b61b5bc0e" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;bind_textdomain_codeset()&lt;/strong&gt;, you can set in which encoding will be messages from &lt;code&gt;domain&lt;/code&gt; returned by &lt;a href=&quot;function.gettext&quot;&gt;gettext()&lt;/a&gt; and similar functions.</source>
          <target state="translated">&lt;strong&gt;bind_textdomain_codeset ()을&lt;/strong&gt; 사용하면 &lt;a href=&quot;function.gettext&quot;&gt;gettext ()&lt;/a&gt; 및 유사한 함수가 반환 한 &lt;code&gt;domain&lt;/code&gt; 메시지가 될 인코딩을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d4ff08b02506311410e0b2704324fab50d7a062f" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;pg_last_notice()&lt;/strong&gt;, you can avoid issuing useless queries by checking whether or not the notice is related to your transaction.</source>
          <target state="translated">함께 &lt;strong&gt;pg_last_notice ()&lt;/strong&gt; , 당신은 통지 거래와 관련이 있는지 여부를 확인하여 쓸모없는 쿼리를 발행 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3a78f78bb779744b4ff58815c9e49bcdc5f1aa2" translate="yes" xml:space="preserve">
          <source>With PHP 4, &lt;em&gt;_once&lt;/em&gt; functionality differs with case-insensitive operating systems (like Windows) so for example:</source>
          <target state="translated">PHP 4에서 &lt;em&gt;_once&lt;/em&gt; 기능은 대소 문자를 구분하지 않는 운영 체제 (예 : Windows)와 다릅니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57701a7c09605f8400a2a4ef7edddc41a84f0830" translate="yes" xml:space="preserve">
          <source>With a namespace aware parser tag parameters passed to the various handler functions will consist of namespace and tag name separated by the string specified in &lt;code&gt;separator&lt;/code&gt;.</source>
          <target state="translated">다양한 핸들러 함수에 전달 된 네임 스페이스 인식 파서 태그 매개 변수를 사용하면 &lt;code&gt;separator&lt;/code&gt; 에 지정된 문자열로 구분 된 네임 스페이스 및 태그 이름으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="75fc82059bd21398b6e3a708feb2fb4449b03b5d" translate="yes" xml:space="preserve">
          <source>With an empty &lt;code&gt;prefix&lt;/code&gt;, the returned string will be 13 characters long. If &lt;code&gt;more_entropy&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, it will be 23 characters.</source>
          <target state="translated">빈 &lt;code&gt;prefix&lt;/code&gt; 를 사용하면 반환 된 문자열의 길이는 13 자입니다. 경우 &lt;code&gt;more_entropy&lt;/code&gt; 가 있다 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 그것은 23 자합니다.</target>
        </trans-unit>
        <trans-unit id="484ee535edefd6465631d050e27a23c78b234006" translate="yes" xml:space="preserve">
          <source>With an empty &lt;code&gt;prefix&lt;/code&gt;, the returned string will be 13 characters long. If &lt;code&gt;more_entropy&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, it will be 23 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d279474cb8681c1e8bdf52b4fc52d0a917fd2f" translate="yes" xml:space="preserve">
          <source>With attributes the generic implementation of a feature and its concrete use in an application can be decoupled. In a way it is comparable to interfaces and their implementations. But where interfaces and implementations are about code, attributes are about annotating extra information and configuration. Interfaces can be implemented by classes, yet attributes can also be declared on methods, functions, parameters, properties and class constants. As such they are more flexible than interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6c3afd0c184da8c5d78d4cb1399a28de2b88fd" translate="yes" xml:space="preserve">
          <source>With both maximizing and minimizing repetition, failure of what follows normally causes the repeated item to be re-evaluated to see if a different number of repeats allows the rest of the pattern to match. Sometimes it is useful to prevent this, either to change the nature of the match, or to cause it fail earlier than it otherwise might, when the author of the pattern knows there is no point in carrying on.</source>
          <target state="translated">반복을 최대화하고 최소화하기 때문에, 다음에 오는 것의 실패는 일반적으로 반복되는 항목이 재평가되어 다른 반복 횟수가 나머지 패턴과 일치하는지 확인합니다. 패턴 작성자가 진행할 점이 없다는 것을 알고있을 때, 일치의 특성을 변경하거나, 그렇지 않은 경우보다 빨리 실패하게하는 것을 방지하는 것이 유용한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="865f7e5db67f539882170c1dce9a8f2a4d414635" translate="yes" xml:space="preserve">
          <source>With concatenation, the period operator has a higher precedence than both the addition and ternary operators, and so parentheses must be used for the correct behaviour:</source>
          <target state="translated">연결을 사용하면 마침표 연산자는 더하기 및 삼항 연산자보다 우선 순위가 높으므로 올바른 동작을 위해서는 괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a1650ae68badf5de3070104e9334c56f6dc6f3ea" translate="yes" xml:space="preserve">
          <source>With concatenation, the period operator has the same precedence as the addition operator, and higher precedence than the ternary operator, so parentheses must be used for the correct behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771afea62b2fac11c02dfff5f2edd59d96604150" translate="yes" xml:space="preserve">
          <source>With keepalive &lt;code&gt;value&lt;/code&gt; set to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; the watcher won't keep &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; / &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; from returning even though the watcher is active.</source>
          <target state="translated">킵 얼라이브으로 &lt;code&gt;value&lt;/code&gt; 으로 설정 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 감시자가 유지되지 않습니다 &lt;a href=&quot;ev.run&quot;&gt;복음 전도 :: 실행 ()&lt;/a&gt; / &lt;a href=&quot;evloop.run&quot;&gt;EvLoop :: 실행 ()&lt;/a&gt; 감시자가 활성화에도 복귀.</target>
        </trans-unit>
        <trans-unit id="97a2d9dc9749a0fcaa81ce162ff9c6769c66742a" translate="yes" xml:space="preserve">
          <source>With keepalive &lt;code&gt;value&lt;/code&gt; set to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; the watcher won't keep &lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; / &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; from returning even though the watcher is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49eaaf8cad99f8be740868aa1b01de364b536ce4" translate="yes" xml:space="preserve">
          <source>With some ODBC drivers, executing a complex stored procedure may fail with an error similar to: &quot;Cannot open a cursor on a stored procedure that has anything other than a single select statement in it&quot;. Using SQL_CUR_USE_ODBC may avoid that error. Also, some drivers don't support the optional row_number parameter in &lt;a href=&quot;function.odbc-fetch-row&quot;&gt;odbc_fetch_row()&lt;/a&gt;. SQL_CUR_USE_ODBC might help in that case, too.</source>
          <target state="translated">일부 ODBC 드라이버의 경우 &quot;저장된 프로 시저에서 단일 select 문 이외의 다른 커서를 열 수 없습니다&quot;와 유사한 오류가 발생하여 복잡한 저장 프로 시저를 실행하지 못할 수 있습니다. SQL_CUR_USE_ODBC를 사용하면 해당 오류를 피할 수 있습니다. 또한 일부 드라이버는 &lt;a href=&quot;function.odbc-fetch-row&quot;&gt;odbc_fetch_row ()&lt;/a&gt; 에서 선택적 row_number 매개 변수를 지원하지 않습니다 . 이 경우 SQL_CUR_USE_ODBC도 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3274a85c43b605c6e42dbe778f93a892a049195" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;mysqli.options&quot;&gt;mysqli_options()&lt;/a&gt; function you can set various options for connection.</source>
          <target state="translated">으로 &lt;a href=&quot;mysqli.options&quot;&gt;mysqli_options ()&lt;/a&gt; 당신이 연결을 위해 다양한 옵션을 설정할 수 있습니다 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a8e9a77fc64dec5233666c2250e6fb3fa83202ed" translate="yes" xml:space="preserve">
          <source>With the example below, the created phar will display &lt;code&gt;Hello World&lt;/code&gt; if one browses to &lt;code&gt;/myphar.phar/index.php&lt;/code&gt; or to &lt;code&gt;/myphar.phar&lt;/code&gt;, and will display the source of &lt;code&gt;index.phps&lt;/code&gt; if one browses to &lt;code&gt;/myphar.phar/index.phps&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6809bcbadee5983d69a2c7da211902f27c998f02" translate="yes" xml:space="preserve">
          <source>With the example below, the created phar will display &lt;em&gt;Hello World&lt;/em&gt; if one browses to &lt;em&gt;/myphar.phar/index.php&lt;/em&gt; or to &lt;em&gt;/myphar.phar&lt;/em&gt;, and will display the source of &lt;em&gt;index.phps&lt;/em&gt; if one browses to &lt;em&gt;/myphar.phar/index.phps&lt;/em&gt;.</source>
          <target state="translated">아래의 예를 통해, 생성의 Phar가 표시됩니다 &lt;em&gt;안녕하세요 세계를&lt;/em&gt; 하나 개되는 브라우저가하는 경우 &lt;em&gt;/myphar.phar/index.php&lt;/em&gt; 하거나 &lt;em&gt;/myphar.phar&lt;/em&gt; , 그리고 소스가 표시됩니다 &lt;em&gt;index.phps을&lt;/em&gt; 경우 하나 개되는 브라우저 &lt;em&gt;/myphar.phar/index .phps&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a08eca44be21e3eb0d49caafc7ded3d6d9bf2796" translate="yes" xml:space="preserve">
          <source>With the parameter &lt;code&gt;flags&lt;/code&gt; you can set different connection options:</source>
          <target state="translated">매개 변수 &lt;code&gt;flags&lt;/code&gt; 를 사용하면 다른 연결 옵션을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c87b84d2dfeb65b0c1f4a597db815e445df2c89" translate="yes" xml:space="preserve">
          <source>With this flag set, the function returns even if it would normally have blocked.</source>
          <target state="translated">이 플래그를 설정하면 정상적으로 차단 된 경우에도 함수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f1555a1dbb2a7fa3414ee56b1132f8d058172c17" translate="yes" xml:space="preserve">
          <source>With this method, an empty directory is created with path &lt;code&gt;dirname&lt;/code&gt;. This method is similar to &lt;a href=&quot;ziparchive.addemptydir&quot;&gt;ZipArchive::addEmptyDir()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f55183106fa6eade8dac53c33fa7260940bc249" translate="yes" xml:space="preserve">
          <source>With this method, an empty directory is created with path &lt;em&gt;dirname&lt;/em&gt;. This method is similar to &lt;a href=&quot;ziparchive.addemptydir&quot;&gt;ZipArchive::addEmptyDir()&lt;/a&gt;.</source>
          <target state="translated">이 방법을 사용하면 &lt;em&gt;dirname&lt;/em&gt; 경로로 빈 디렉토리가 작성됩니다 . 이 메소드는 &lt;a href=&quot;ziparchive.addemptydir&quot;&gt;ZipArchive :: addEmptyDir ()&lt;/a&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="55fff04e34266b80d27f5532f5a05f5a4068a631" translate="yes" xml:space="preserve">
          <source>With this method, any file or URL can be added to the phar archive. If the optional second parameter &lt;code&gt;localname&lt;/code&gt; is specified, the file will be stored in the archive with that name, otherwise the &lt;code&gt;file&lt;/code&gt; parameter is used as the path to store within the archive. URLs must have a localname or an exception is thrown. This method is similar to &lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive::addFile()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c627316f7a74f7c4224c7843963dd1b06d4f8d" translate="yes" xml:space="preserve">
          <source>With this method, any file or URL can be added to the phar archive. If the optional second parameter &lt;em&gt;localname&lt;/em&gt; is specified, the file will be stored in the archive with that name, otherwise the &lt;em&gt;file&lt;/em&gt; parameter is used as the path to store within the archive. URLs must have a localname or an exception is thrown. This method is similar to &lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive::addFile()&lt;/a&gt;.</source>
          <target state="translated">이 방법을 사용하면 모든 파일 또는 URL을 phar 아카이브에 추가 할 수 있습니다. 선택적 두 번째 매개 변수 &lt;em&gt;localname&lt;/em&gt; 을 지정하면 파일이 해당 이름으로 아카이브에 저장되고, 그렇지 않으면 &lt;em&gt;파일&lt;/em&gt; 매개 변수가 아카이브 내에 저장할 경로로 사용됩니다. URL에 로컬 이름이 있어야합니다. 그렇지 않으면 예외가 발생합니다. 이 메소드는 &lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive :: addFile ()&lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="e2316bcec74cb808162dde627756ba30fa74e644" translate="yes" xml:space="preserve">
          <source>With this method, any file or URL can be added to the tar/zip archive. If the optional second parameter &lt;code&gt;localname&lt;/code&gt; is specified, the file will be stored in the archive with that name, otherwise the &lt;code&gt;file&lt;/code&gt; parameter is used as the path to store within the archive. URLs must have a localname or an exception is thrown. This method is similar to &lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive::addFile()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e449973e394c7f9f77aefa9aa6a4cf59f05d085a" translate="yes" xml:space="preserve">
          <source>With this method, any file or URL can be added to the tar/zip archive. If the optional second parameter &lt;em&gt;localname&lt;/em&gt; is specified, the file will be stored in the archive with that name, otherwise the &lt;em&gt;file&lt;/em&gt; parameter is used as the path to store within the archive. URLs must have a localname or an exception is thrown. This method is similar to &lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive::addFile()&lt;/a&gt;.</source>
          <target state="translated">이 방법을 사용하면 모든 파일 또는 URL을 tar / zip 아카이브에 추가 할 수 있습니다. 선택적 두 번째 매개 변수 &lt;em&gt;localname&lt;/em&gt; 을 지정하면 파일이 해당 이름으로 아카이브에 저장되고, 그렇지 않으면 &lt;em&gt;파일&lt;/em&gt; 매개 변수가 아카이브 내에 저장할 경로로 사용됩니다. URL에 로컬 이름이 있어야합니다. 그렇지 않으면 예외가 발생합니다. 이 메소드는 &lt;a href=&quot;ziparchive.addfile&quot;&gt;ZipArchive :: addFile ()&lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="1d9b21a952a6524835e471ea362be92cf572fd42" translate="yes" xml:space="preserve">
          <source>With this method, any string can be added to the phar archive. The file will be stored in the archive with &lt;code&gt;localname&lt;/code&gt; as its path. This method is similar to &lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive::addFromString()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1872940fd4b3cc1c9158f5e98184eafdf58410bf" translate="yes" xml:space="preserve">
          <source>With this method, any string can be added to the phar archive. The file will be stored in the archive with &lt;em&gt;localname&lt;/em&gt; as its path. This method is similar to &lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive::addFromString()&lt;/a&gt;.</source>
          <target state="translated">이 방법을 사용하면 모든 문자열을 phar 아카이브에 추가 할 수 있습니다. 파일은 &lt;em&gt;로컬&lt;/em&gt; 이름을 경로로 하여 아카이브에 저장됩니다 . 이 메소드는 &lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive :: addFromString ()&lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="e9a3be2add647c4fea88401b71165cb0c6a6c441" translate="yes" xml:space="preserve">
          <source>With this method, any string can be added to the tar/zip archive. The file will be stored in the archive with &lt;code&gt;localname&lt;/code&gt; as its path. This method is similar to &lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive::addFromString()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e248c9a485cdd2ad078912c16bbe77ab6ae61184" translate="yes" xml:space="preserve">
          <source>With this method, any string can be added to the tar/zip archive. The file will be stored in the archive with &lt;em&gt;localname&lt;/em&gt; as its path. This method is similar to &lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive::addFromString()&lt;/a&gt;.</source>
          <target state="translated">이 방법을 사용하면 모든 문자열을 tar / zip 아카이브에 추가 할 수 있습니다. 파일은 &lt;em&gt;로컬&lt;/em&gt; 이름을 경로로 하여 아카이브에 저장됩니다 . 이 메소드는 &lt;a href=&quot;ziparchive.addfromstring&quot;&gt;ZipArchive :: addFromString ()&lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="6088c6ccca4355c24d4a1dc8a69c8fd4bfe3ac7d" translate="yes" xml:space="preserve">
          <source>Within class methods non-static properties may be accessed by using &lt;code&gt;-&amp;gt;&lt;/code&gt; (Object Operator): &lt;var&gt;$this-&amp;gt;property&lt;/var&gt; (where &lt;code&gt;property&lt;/code&gt; is the name of the property). Static properties are accessed by using the &lt;code&gt;::&lt;/code&gt; (Double Colon): &lt;var&gt;self::$property&lt;/var&gt;. See &lt;a href=&quot;language.oop5.static&quot;&gt;Static Keyword&lt;/a&gt; for more information on the difference between static and non-static properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba583ee56921ebf162c5f49839b47df02c375fc" translate="yes" xml:space="preserve">
          <source>Within class methods non-static properties may be accessed by using &lt;em&gt;-&amp;gt;&lt;/em&gt; (Object Operator): &lt;var&gt;&lt;var&gt;$this-&amp;gt;property&lt;/var&gt;&lt;/var&gt; (where &lt;em&gt;property&lt;/em&gt; is the name of the property). Static properties are accessed by using the &lt;em&gt;::&lt;/em&gt; (Double Colon): &lt;var&gt;&lt;var&gt;self::$property&lt;/var&gt;&lt;/var&gt;. See &lt;a href=&quot;language.oop5.static&quot;&gt;Static Keyword&lt;/a&gt; for more information on the difference between static and non-static properties.</source>
          <target state="translated">클래스 메소드 내에서 &lt;em&gt;-&amp;gt;&lt;/em&gt; (Object Operator) : &lt;var&gt;&lt;var&gt;$this-&amp;gt;property&lt;/var&gt;&lt;/var&gt; (여기서 &lt;em&gt;property&lt;/em&gt; 는 &lt;em&gt;특성&lt;/em&gt; 의 이름 임 ) 를 사용하여 정적이 아닌 특성에 액세스 할 수 있습니다 . 정적 속성은 &lt;em&gt;::&lt;/em&gt; (Double Colon) : &lt;var&gt;&lt;var&gt;self::$property&lt;/var&gt;&lt;/var&gt; 를 사용하여 액세스 합니다 . 정적 속성과 비 정적 속성의 차이점에 대한 자세한 내용 은 &lt;a href=&quot;language.oop5.static&quot;&gt;정적 키워드&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7cbc1dac45d1ec60102535cd0415b889386fd03" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;!,&lt;/code&gt; all fields will be set to the current date and time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a19c3e1b20f4c4bf18e6d17513c35279bcb6465" translate="yes" xml:space="preserve">
          <source>Without &lt;em&gt;!,&lt;/em&gt; all fields will be set to the current date and time.</source>
          <target state="translated">&lt;em&gt;!가&lt;/em&gt; 없으면 모든 필드가 현재 날짜와 시간으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="35de213d39c7da7d9554e00189db10642ad742e4" translate="yes" xml:space="preserve">
          <source>Without any namespace definition, all class and function definitions are placed into the global space - as it was in PHP before namespaces were supported. Prefixing a name with &lt;code&gt;\&lt;/code&gt; will specify that the name is required from the global space even in the context of the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d653f726ac73b555b22275ce5546531f4465a70" translate="yes" xml:space="preserve">
          <source>Without any namespace definition, all class and function definitions are placed into the global space - as it was in PHP before namespaces were supported. Prefixing a name with &lt;em&gt;\&lt;/em&gt; will specify that the name is required from the global space even in the context of the namespace.</source>
          <target state="translated">네임 스페이스 정의가 없으면 네임 스페이스가 지원되기 전에 PHP에서와 같이 모든 클래스 및 함수 정의가 전역 공간에 배치됩니다. 이름 앞에 &lt;em&gt;\를&lt;/em&gt; 붙이면 네임 스페이스의 컨텍스트에서도 전역 공간에서 이름이 필요함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cb777b23b7ac2c360f62509741cfb027e5fd601e" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;OnOff&lt;/code&gt; parameter, this function returns auto-commit status for &lt;code&gt;connection_id&lt;/code&gt;. Non-zero is returned if auto-commit is on, 0 if it is off, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;OnOff&lt;/code&gt; 매개 변수가 없으면 이 함수는 &lt;code&gt;connection_id&lt;/code&gt; 의 자동 커밋 상태를 반환 합니다 . 자동 커밋이 켜져 있으면 0이 아닌 값이 반환되고, 꺼져 있으면 0이되고 오류가 발생하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="9991ebe11abba47c8c1531c790a4c1a75f19ef0e" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;OnOff&lt;/code&gt; parameter, this function returns auto-commit status for &lt;code&gt;connection_id&lt;/code&gt;. Non-zero is returned if auto-commit is on, 0 if it is off, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe91fa65066df7c241aa0c44e705a6e40ebfc54c" translate="yes" xml:space="preserve">
          <source>Without the &lt;strong&gt;&lt;code&gt;TOKEN_PARSE&lt;/code&gt;&lt;/strong&gt; flag, the penultimate token (&lt;strong&gt;&lt;code&gt;T_STRING&lt;/code&gt;&lt;/strong&gt;) would have been &lt;strong&gt;&lt;code&gt;T_PUBLIC&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TOKEN_PARSE&lt;/code&gt; &lt;/strong&gt; 플래그가 없으면 두 번째 토큰 ( &lt;strong&gt; &lt;code&gt;T_STRING&lt;/code&gt; &lt;/strong&gt; )은 &lt;strong&gt; &lt;code&gt;T_PUBLIC&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15ae8c63c8ec178d0090cb6aefa15b8baac1762f" translate="yes" xml:space="preserve">
          <source>Without the second parameter, &lt;strong&gt;rtrim()&lt;/strong&gt; will strip these characters:</source>
          <target state="translated">두 번째 매개 변수가 없으면 &lt;strong&gt;rtrim ()&lt;/strong&gt; 은 다음 문자를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f597c4836a7128931db919cf601d5bbef59347c4" translate="yes" xml:space="preserve">
          <source>Word to use for the suggestions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4cc646b75ab436c404dadedcce4c248d0b7175" translate="yes" xml:space="preserve">
          <source>Words less than &lt;code&gt;min_length&lt;/code&gt; characters will be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fd788cf69a2ac42e5fa5e80006738e8f82d775" translate="yes" xml:space="preserve">
          <source>Worker &amp;rarr;</source>
          <target state="translated">노동자 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="aa0679f62c303af994ebac5cc7871ad73aa25f78" translate="yes" xml:space="preserve">
          <source>Worker (class)</source>
          <target state="translated">노동자 (클래스)</target>
        </trans-unit>
        <trans-unit id="ff7cadd89635a6f384814a7a4a63d08d0b34c397" translate="yes" xml:space="preserve">
          <source>Worker Threads have a persistent context, as such should be used over Threads in most cases.</source>
          <target state="translated">작업자 스레드는 지속적인 컨텍스트를 갖습니다. 대부분의 경우 스레드에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="be16ed6de066836c041c689a7b86a5e41f8a408e" translate="yes" xml:space="preserve">
          <source>Worker output for two workers running:</source>
          <target state="translated">두 명의 작업자가 작업하는 경우의 작업자 출력 :</target>
        </trans-unit>
        <trans-unit id="06f8153100449e930e1403081fd2eafe963f2d15" translate="yes" xml:space="preserve">
          <source>Worker output:</source>
          <target state="translated">작업자 출력 :</target>
        </trans-unit>
        <trans-unit id="e022df67f5180a352ddffb2118c754a3f855bc1b" translate="yes" xml:space="preserve">
          <source>Worker::__construct</source>
          <target state="translated">Worker::__construct</target>
        </trans-unit>
        <trans-unit id="6d1245724e0bb4f6e5256a41bce413ee4d54b9a5" translate="yes" xml:space="preserve">
          <source>Worker::addFunction</source>
          <target state="translated">Worker::addFunction</target>
        </trans-unit>
        <trans-unit id="df34098b88ffe27fa5ed323a6033f1c5c5cb92c8" translate="yes" xml:space="preserve">
          <source>Worker::addOptions</source>
          <target state="translated">Worker::addOptions</target>
        </trans-unit>
        <trans-unit id="daeab12a841837c0f820e78bee43064802cde6b7" translate="yes" xml:space="preserve">
          <source>Worker::addServer</source>
          <target state="translated">Worker::addServer</target>
        </trans-unit>
        <trans-unit id="d2c5eb2f12822273b64d5c6fe6707a8c7cecd2a3" translate="yes" xml:space="preserve">
          <source>Worker::addServers</source>
          <target state="translated">Worker::addServers</target>
        </trans-unit>
        <trans-unit id="900fc9f298aada00e85098fb59ffe95417b6fd97" translate="yes" xml:space="preserve">
          <source>Worker::clone</source>
          <target state="translated">Worker::clone</target>
        </trans-unit>
        <trans-unit id="06cb4230a819a64328ea38ee96483f6e20c88c9e" translate="yes" xml:space="preserve">
          <source>Worker::collect</source>
          <target state="translated">Worker::collect</target>
        </trans-unit>
        <trans-unit id="246ff46e7ac165a530ff73c8527d9ff0f969d804" translate="yes" xml:space="preserve">
          <source>Worker::collect &amp;mdash; Collect references to completed tasks</source>
          <target state="translated">Worker :: collect &amp;mdash; 완료된 작업에 대한 참조를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="137bca3cd22fcafa486b8681ee1a3932aff5e14c" translate="yes" xml:space="preserve">
          <source>Worker::collect &amp;rarr;</source>
          <target state="translated">노동자 :: 수집 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c23e113c149f3cc7693f0300e4c9ccb27d4ec29d" translate="yes" xml:space="preserve">
          <source>Worker::echo</source>
          <target state="translated">Worker::echo</target>
        </trans-unit>
        <trans-unit id="0ab7ea4232341f9b70f1c31d0438d2ab8735a67a" translate="yes" xml:space="preserve">
          <source>Worker::error</source>
          <target state="translated">Worker::error</target>
        </trans-unit>
        <trans-unit id="1821190e2041fc710439080dd23014929a40890c" translate="yes" xml:space="preserve">
          <source>Worker::getErrno</source>
          <target state="translated">Worker::getErrno</target>
        </trans-unit>
        <trans-unit id="289a9bc613cf97416cf1c7549b3678784fbf55f8" translate="yes" xml:space="preserve">
          <source>Worker::getStacked</source>
          <target state="translated">Worker::getStacked</target>
        </trans-unit>
        <trans-unit id="39b17f5352f2b3e2bb20958b8aee2306965b3f04" translate="yes" xml:space="preserve">
          <source>Worker::getStacked &amp;mdash; Gets the remaining stack size</source>
          <target state="translated">Worker :: getStacked &amp;mdash; 남은 스택 크기를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="3064d6bec483134976595238d9c210483d496445" translate="yes" xml:space="preserve">
          <source>Worker::getStacked &amp;rarr;</source>
          <target state="translated">노동자 :: getStacked &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="967d9df4671a232b60243c67c770feb52d5996f5" translate="yes" xml:space="preserve">
          <source>Worker::isShutdown</source>
          <target state="translated">Worker::isShutdown</target>
        </trans-unit>
        <trans-unit id="c0914a37d5d524441e48fa2c10a8d40d8263446a" translate="yes" xml:space="preserve">
          <source>Worker::isShutdown &amp;mdash; State Detection</source>
          <target state="translated">Worker :: isShutdown &amp;mdash; 상태 감지</target>
        </trans-unit>
        <trans-unit id="1f7c624d9de8f05d42ec861f1dd28b7a0224b571" translate="yes" xml:space="preserve">
          <source>Worker::isShutdown &amp;rarr;</source>
          <target state="translated">노동자 :: isShutdown &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="78b7a70f0b8febef79389dae741a72ad035e5abf" translate="yes" xml:space="preserve">
          <source>Worker::isWorking</source>
          <target state="translated">Worker::isWorking</target>
        </trans-unit>
        <trans-unit id="dd55542673a4608bf50c86e57c5d81bce5762710" translate="yes" xml:space="preserve">
          <source>Worker::isWorking &amp;mdash; State Detection</source>
          <target state="translated">Worker :: isWorking &amp;mdash; 상태 감지</target>
        </trans-unit>
        <trans-unit id="18f23a4bfe5764601be0ee0262a2aa1912075b06" translate="yes" xml:space="preserve">
          <source>Worker::isWorking &amp;rarr;</source>
          <target state="translated">노동자 :: isWorking &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b22953d550a2e325898bac53083afaa546e7ec49" translate="yes" xml:space="preserve">
          <source>Worker::options</source>
          <target state="translated">Worker::options</target>
        </trans-unit>
        <trans-unit id="bc1e2c13990c2ce2f14902f07242e40cd2fcc93d" translate="yes" xml:space="preserve">
          <source>Worker::register</source>
          <target state="translated">Worker::register</target>
        </trans-unit>
        <trans-unit id="8c5e0341b521027cd43a32b1b75350b8b6e79618" translate="yes" xml:space="preserve">
          <source>Worker::removeOptions</source>
          <target state="translated">Worker::removeOptions</target>
        </trans-unit>
        <trans-unit id="dc9fa3f44a2e3d309a88c75581310b0222bb203f" translate="yes" xml:space="preserve">
          <source>Worker::returnCode</source>
          <target state="translated">Worker::returnCode</target>
        </trans-unit>
        <trans-unit id="428c60e40bc6eb2156915e23dafd70a8d3c753f3" translate="yes" xml:space="preserve">
          <source>Worker::setId</source>
          <target state="translated">Worker::setId</target>
        </trans-unit>
        <trans-unit id="c8710714200c9977e2d725294b023af91de6c744" translate="yes" xml:space="preserve">
          <source>Worker::setOptions</source>
          <target state="translated">Worker::setOptions</target>
        </trans-unit>
        <trans-unit id="ac1b76ccf1170f2c4f8f5dd29a54359928e8653d" translate="yes" xml:space="preserve">
          <source>Worker::setTimeout</source>
          <target state="translated">Worker::setTimeout</target>
        </trans-unit>
        <trans-unit id="ed9e03ebcfbda192f5fc57c303785d47ce3afa21" translate="yes" xml:space="preserve">
          <source>Worker::shutdown</source>
          <target state="translated">Worker::shutdown</target>
        </trans-unit>
        <trans-unit id="45b91af48431dffc601b6380f297ac8368cfae8e" translate="yes" xml:space="preserve">
          <source>Worker::shutdown &amp;mdash; Shutdown the worker</source>
          <target state="translated">Worker :: shutdown &amp;mdash; 작업자 종료</target>
        </trans-unit>
        <trans-unit id="1f1072ac0d091b7a17e7fa2e367cab2cf57dc47d" translate="yes" xml:space="preserve">
          <source>Worker::shutdown &amp;rarr;</source>
          <target state="translated">노동자 :: 종료 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="534b4d744faca3ccf97925921574b966c8396b15" translate="yes" xml:space="preserve">
          <source>Worker::stack</source>
          <target state="translated">Worker::stack</target>
        </trans-unit>
        <trans-unit id="da007958a23fe8fd78af82aa7d85c78355a53c42" translate="yes" xml:space="preserve">
          <source>Worker::stack &amp;mdash; Stacking work</source>
          <target state="translated">Worker :: stack &amp;mdash; 스태킹 작업</target>
        </trans-unit>
        <trans-unit id="a874cab91bee13b8fb9ef5de2031dd05b75c8ee4" translate="yes" xml:space="preserve">
          <source>Worker::stack &amp;rarr;</source>
          <target state="translated">노동자 :: 스택 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="28733422f46865d1c24ef4b2042190f38c2090a8" translate="yes" xml:space="preserve">
          <source>Worker::timeout</source>
          <target state="translated">Worker::timeout</target>
        </trans-unit>
        <trans-unit id="e80a81ff8a19a18c11bfe22355bb9c842864f481" translate="yes" xml:space="preserve">
          <source>Worker::unregister</source>
          <target state="translated">Worker::unregister</target>
        </trans-unit>
        <trans-unit id="67b6b07fb3681f377ca0f65886b2747a3bec4e0f" translate="yes" xml:space="preserve">
          <source>Worker::unregisterAll</source>
          <target state="translated">Worker::unregisterAll</target>
        </trans-unit>
        <trans-unit id="291c5c3583bd4f1bf5125376e41c3d132d696540" translate="yes" xml:space="preserve">
          <source>Worker::unstack</source>
          <target state="translated">Worker::unstack</target>
        </trans-unit>
        <trans-unit id="2d3871db36be548ac413b0a2f8048c61d553eb3e" translate="yes" xml:space="preserve">
          <source>Worker::unstack &amp;mdash; Unstacking work</source>
          <target state="translated">Worker :: unstack &amp;mdash; 언 스태킹 작업</target>
        </trans-unit>
        <trans-unit id="ebf35732146febe62c0f96762dee49bdb6175193" translate="yes" xml:space="preserve">
          <source>Worker::unstack &amp;rarr;</source>
          <target state="translated">노동자 :: 언 스택 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="bf18b1fe0ada5f4e821fab7c1243bfcd00914bf7" translate="yes" xml:space="preserve">
          <source>Worker::wait</source>
          <target state="translated">Worker::wait</target>
        </trans-unit>
        <trans-unit id="7fed1093476e91c2914425d1648b62561fe0f214" translate="yes" xml:space="preserve">
          <source>Worker::work</source>
          <target state="translated">Worker::work</target>
        </trans-unit>
        <trans-unit id="96db4adab865c70e834b0cd9bc61fb911f50b4b0" translate="yes" xml:space="preserve">
          <source>Working directory of the script can change inside the shutdown function under some web servers, e.g. Apache.</source>
          <target state="translated">스크립트의 작업 디렉토리는 일부 웹 서버 (예 : Apache)에서 종료 기능 내에서 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4140b6f4deaf1823f5383cfcb4b3b2bb8f96dbf3" translate="yes" xml:space="preserve">
          <source>Works in the Apache, FastCGI and &lt;a href=&quot;https://www.php.net/manual/en/book.nsapi.php&quot;&gt;NSAPI server module&lt;/a&gt; in Netscape/iPlanet/SunONE webservers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f01c60250c9774b8240a096073f95283dfdea9c" translate="yes" xml:space="preserve">
          <source>World Wide Web Consortium (example: 2005-08-15T15:52:01+00:00)</source>
          <target state="translated">월드 와이드 웹 컨소시엄 (예 : 2005-08-15T15 : 52 : 01 + 00 : 00)</target>
        </trans-unit>
        <trans-unit id="d04f1a49966d182bf6eacc5d01f822643ba9d7c8" translate="yes" xml:space="preserve">
          <source>Wraps a string to a given number of characters using a string break character.</source>
          <target state="translated">문자열 구분 문자를 사용하여 지정된 수의 문자로 문자열을 줄 바꿈합니다.</target>
        </trans-unit>
        <trans-unit id="61d1b5e194c227dd81e4bdf2ba33a5066691e3ab" translate="yes" xml:space="preserve">
          <source>Write a string produced according to &lt;code&gt;format&lt;/code&gt; to the stream resource specified by &lt;code&gt;handle&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 에 따라 생성 된 문자열 을 &lt;code&gt;handle&lt;/code&gt; 로 지정된 스트림 리소스 에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="54f876bcc2ec6853c240b1da8dfb4210840037b0" translate="yes" xml:space="preserve">
          <source>Write a string produced according to &lt;code&gt;format&lt;/code&gt; to the stream resource specified by &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2e6e6ff4e5f4a81192e37c724f1e8b4d81f479" translate="yes" xml:space="preserve">
          <source>Write as much of the data as we can</source>
          <target state="translated">최대한 많은 데이터를 쓰십시오</target>
        </trans-unit>
        <trans-unit id="a57df62e9230ff49dd953031c32f36368efec4af" translate="yes" xml:space="preserve">
          <source>Write contents of the buffer to a file descriptor. The buffer will be drained after the bytes have been successfully written.</source>
          <target state="translated">버퍼의 내용을 파일 디스크립터에 씁니다. 바이트가 성공적으로 작성된 후 버퍼가 비워집니다.</target>
        </trans-unit>
        <trans-unit id="8f837a9805753f101a07e908bb2fbe21c5b4e9cc" translate="yes" xml:space="preserve">
          <source>Write event callback. See &lt;a href=&quot;https://secure.php.net/manual/en/eventbufferevent.about.callbacks.php&quot;&gt;About buffer event callbacks&lt;/a&gt; .</source>
          <target state="translated">이벤트 콜백을 작성하십시오. &lt;a href=&quot;https://secure.php.net/manual/en/eventbufferevent.about.callbacks.php&quot;&gt;버퍼 이벤트 콜백 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="323a094737d20770ffeeb5af38a0769b72c3b057" translate="yes" xml:space="preserve">
          <source>Write event callback. See &lt;a href=&quot;https://www.php.net/manual/en/eventbufferevent.about.callbacks.php&quot;&gt;About buffer event callbacks&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fa29ae876435098a8ef3d8dd598882184c513e" translate="yes" xml:space="preserve">
          <source>Write timeout</source>
          <target state="translated">쓰기 시간 초과</target>
        </trans-unit>
        <trans-unit id="16780a51ca6211c7424841488410a6e4a17b8d3b" translate="yes" xml:space="preserve">
          <source>Write timeout (in seconds).</source>
          <target state="translated">쓰기 시간 초과 (초)</target>
        </trans-unit>
        <trans-unit id="571db39068b8cb5cda5456f9d640f1eee5823baa" translate="yes" xml:space="preserve">
          <source>Writer::endAttribute</source>
          <target state="translated">Writer::endAttribute</target>
        </trans-unit>
        <trans-unit id="d384a194e3b804491e9ef04353f3c1d0f2aeca02" translate="yes" xml:space="preserve">
          <source>Writer::endCdata</source>
          <target state="translated">Writer::endCdata</target>
        </trans-unit>
        <trans-unit id="58c64bb58aaca42629946053a777800c26d126ff" translate="yes" xml:space="preserve">
          <source>Writer::endComment</source>
          <target state="translated">Writer::endComment</target>
        </trans-unit>
        <trans-unit id="cdd37b7b5496525f55542d7da76b80810a58c400" translate="yes" xml:space="preserve">
          <source>Writer::endDocument</source>
          <target state="translated">Writer::endDocument</target>
        </trans-unit>
        <trans-unit id="feca39bb8f31fc4a00bf603486989b353d5e0c6c" translate="yes" xml:space="preserve">
          <source>Writer::endDtd</source>
          <target state="translated">Writer::endDtd</target>
        </trans-unit>
        <trans-unit id="fd447c3fef5a314c87ce529a02f632d97f7ef2a7" translate="yes" xml:space="preserve">
          <source>Writer::endDtdAttlist</source>
          <target state="translated">Writer::endDtdAttlist</target>
        </trans-unit>
        <trans-unit id="015ce18eb61ca7c252176e10ad24edc541e24ea9" translate="yes" xml:space="preserve">
          <source>Writer::endDtdElement</source>
          <target state="translated">Writer::endDtdElement</target>
        </trans-unit>
        <trans-unit id="442cb8701df91032e07d6db4977f90c28b2e5c9c" translate="yes" xml:space="preserve">
          <source>Writer::endDtdEntity</source>
          <target state="translated">Writer::endDtdEntity</target>
        </trans-unit>
        <trans-unit id="134222b3d9e497f100ed8c9352d8592ac6ba711e" translate="yes" xml:space="preserve">
          <source>Writer::endElement</source>
          <target state="translated">Writer::endElement</target>
        </trans-unit>
        <trans-unit id="6522d5a92e9d650699df6dd26e081c1de98b131f" translate="yes" xml:space="preserve">
          <source>Writer::endPi</source>
          <target state="translated">Writer::endPi</target>
        </trans-unit>
        <trans-unit id="3386a36108cc174542a92b8814a3f423427bfe31" translate="yes" xml:space="preserve">
          <source>Writer::flush</source>
          <target state="translated">Writer::flush</target>
        </trans-unit>
        <trans-unit id="70dcc3812805d554145f96efb00d9e540e338bee" translate="yes" xml:space="preserve">
          <source>Writer::fullEndElement</source>
          <target state="translated">Writer::fullEndElement</target>
        </trans-unit>
        <trans-unit id="115f3f9868e27846cd3937159aadbafcf7178a7f" translate="yes" xml:space="preserve">
          <source>Writer::openMemory</source>
          <target state="translated">Writer::openMemory</target>
        </trans-unit>
        <trans-unit id="c03df2f17e1257b53cbe176bf8fe55dcc518cf8d" translate="yes" xml:space="preserve">
          <source>Writer::openUri</source>
          <target state="translated">Writer::openUri</target>
        </trans-unit>
        <trans-unit id="cd0af8b0789d8a4412125431fc7c0efad81ddf77" translate="yes" xml:space="preserve">
          <source>Writer::outputMemory</source>
          <target state="translated">Writer::outputMemory</target>
        </trans-unit>
        <trans-unit id="be6cd0ea2bc3a0e9e3bc88ae21fe161d9c45483c" translate="yes" xml:space="preserve">
          <source>Writer::setIndent</source>
          <target state="translated">Writer::setIndent</target>
        </trans-unit>
        <trans-unit id="d083010727d365a4b7535fe175da63840eb0b0ad" translate="yes" xml:space="preserve">
          <source>Writer::setIndentString</source>
          <target state="translated">Writer::setIndentString</target>
        </trans-unit>
        <trans-unit id="19d2ad9f389a0d728aa0cb00903afec6c3ab1ee9" translate="yes" xml:space="preserve">
          <source>Writer::startAttribute</source>
          <target state="translated">Writer::startAttribute</target>
        </trans-unit>
        <trans-unit id="3f18700368a40c897a20906e189d95dee5461f5a" translate="yes" xml:space="preserve">
          <source>Writer::startAttributeNs</source>
          <target state="translated">Writer::startAttributeNs</target>
        </trans-unit>
        <trans-unit id="b53a5fb2d090cd79d5d931ca93469da2444bc9c3" translate="yes" xml:space="preserve">
          <source>Writer::startCdata</source>
          <target state="translated">Writer::startCdata</target>
        </trans-unit>
        <trans-unit id="b04efcb1c169930dd7e3029977e8ab61332e833c" translate="yes" xml:space="preserve">
          <source>Writer::startComment</source>
          <target state="translated">Writer::startComment</target>
        </trans-unit>
        <trans-unit id="33a11578baed9a857f719506550409f1ef141132" translate="yes" xml:space="preserve">
          <source>Writer::startDocument</source>
          <target state="translated">Writer::startDocument</target>
        </trans-unit>
        <trans-unit id="51703256385a3a1de0f8b2b9a65604ae8cb5e5cd" translate="yes" xml:space="preserve">
          <source>Writer::startDtd</source>
          <target state="translated">Writer::startDtd</target>
        </trans-unit>
        <trans-unit id="0fee33662548ac47b3f1646a57ba3c37a4ca2b27" translate="yes" xml:space="preserve">
          <source>Writer::startDtdAttlist</source>
          <target state="translated">Writer::startDtdAttlist</target>
        </trans-unit>
        <trans-unit id="1f753a0f9c15767f7c55c9bd8cb7303b28689f09" translate="yes" xml:space="preserve">
          <source>Writer::startDtdElement</source>
          <target state="translated">Writer::startDtdElement</target>
        </trans-unit>
        <trans-unit id="ef4e4563492b9336770d6b51c54081fce7b8fc29" translate="yes" xml:space="preserve">
          <source>Writer::startDtdEntity</source>
          <target state="translated">Writer::startDtdEntity</target>
        </trans-unit>
        <trans-unit id="68cebf82caf164950ffcbae6253232074ee36e4d" translate="yes" xml:space="preserve">
          <source>Writer::startElement</source>
          <target state="translated">Writer::startElement</target>
        </trans-unit>
        <trans-unit id="c6017a4252040f76aa735d41694daaa8dc9b074b" translate="yes" xml:space="preserve">
          <source>Writer::startElementNs</source>
          <target state="translated">Writer::startElementNs</target>
        </trans-unit>
        <trans-unit id="5609ac67e87352545af1a7ed2984e202c46bcd2b" translate="yes" xml:space="preserve">
          <source>Writer::startPi</source>
          <target state="translated">Writer::startPi</target>
        </trans-unit>
        <trans-unit id="ee4cb22f108d2d9ddcb3a11444227e9023fc7e8b" translate="yes" xml:space="preserve">
          <source>Writer::text</source>
          <target state="translated">Writer::text</target>
        </trans-unit>
        <trans-unit id="bca98cb2cb25bcbb264a5d1c1560c0560da33d96" translate="yes" xml:space="preserve">
          <source>Writer::writeAttribute</source>
          <target state="translated">Writer::writeAttribute</target>
        </trans-unit>
        <trans-unit id="75005e862c85008b73865eb80afc0317d141590b" translate="yes" xml:space="preserve">
          <source>Writer::writeAttributeNs</source>
          <target state="translated">Writer::writeAttributeNs</target>
        </trans-unit>
        <trans-unit id="1ff50d05b528acdeaec3ee26304d98ba47bac528" translate="yes" xml:space="preserve">
          <source>Writer::writeCdata</source>
          <target state="translated">Writer::writeCdata</target>
        </trans-unit>
        <trans-unit id="84d1f5589be8d73739abfb2901d2c292ddade30f" translate="yes" xml:space="preserve">
          <source>Writer::writeComment</source>
          <target state="translated">Writer::writeComment</target>
        </trans-unit>
        <trans-unit id="91ba5fe70005f48fed014c359ea721de3cb5c59d" translate="yes" xml:space="preserve">
          <source>Writer::writeDtd</source>
          <target state="translated">Writer::writeDtd</target>
        </trans-unit>
        <trans-unit id="16e33779ec83a6bfc41bb2cf07f95ffb4f39a635" translate="yes" xml:space="preserve">
          <source>Writer::writeDtdAttlist</source>
          <target state="translated">Writer::writeDtdAttlist</target>
        </trans-unit>
        <trans-unit id="526a2571cceeffe13e2a7207b53df54b6d82d08d" translate="yes" xml:space="preserve">
          <source>Writer::writeDtdElement</source>
          <target state="translated">Writer::writeDtdElement</target>
        </trans-unit>
        <trans-unit id="4e0cc65ff8e36edb0fe8b8edb95f9382ae1a184b" translate="yes" xml:space="preserve">
          <source>Writer::writeDtdEntity</source>
          <target state="translated">Writer::writeDtdEntity</target>
        </trans-unit>
        <trans-unit id="b16c7400843cb36ab3091311f0f9d8f0df5dec6a" translate="yes" xml:space="preserve">
          <source>Writer::writeElement</source>
          <target state="translated">Writer::writeElement</target>
        </trans-unit>
        <trans-unit id="fa9a4180771023862bfc8c6bb075b87dc61ae377" translate="yes" xml:space="preserve">
          <source>Writer::writeElementNs</source>
          <target state="translated">Writer::writeElementNs</target>
        </trans-unit>
        <trans-unit id="14370911302739d2e659010aa0e12117d898694d" translate="yes" xml:space="preserve">
          <source>Writer::writePi</source>
          <target state="translated">Writer::writePi</target>
        </trans-unit>
        <trans-unit id="27336e83f2eaee1182c2e4f5cabdf669f2c98a3d" translate="yes" xml:space="preserve">
          <source>Writer::writeRaw</source>
          <target state="translated">Writer::writeRaw</target>
        </trans-unit>
        <trans-unit id="85bd8dc20d5d8da5f40dad0b4dac7bdac36af3d0" translate="yes" xml:space="preserve">
          <source>Writes a DTD attribute list.</source>
          <target state="translated">DTD 속성 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="383beaa2fe87bedae590f5f70c98c0adb7dd0d53" translate="yes" xml:space="preserve">
          <source>Writes a full CDATA.</source>
          <target state="translated">전체 CDATA를 씁니다.</target>
        </trans-unit>
        <trans-unit id="53bfd60799da0578ae8af66f4f2d3ef63f017714" translate="yes" xml:space="preserve">
          <source>Writes a full DTD element.</source>
          <target state="translated">전체 DTD 요소를 씁니다.</target>
        </trans-unit>
        <trans-unit id="c9da51d7aa5535c032068ffcd1886dfbc56b8aad" translate="yes" xml:space="preserve">
          <source>Writes a full DTD entity.</source>
          <target state="translated">완전한 DTD 엔티티를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ba3046299aeca82777d171e244aef9a42a2d230e" translate="yes" xml:space="preserve">
          <source>Writes a full DTD.</source>
          <target state="translated">완전한 DTD를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="eeefe0523e20d637b59ea23b9574b6855aed5ebe" translate="yes" xml:space="preserve">
          <source>Writes a full attribute.</source>
          <target state="translated">전체 속성을 씁니다.</target>
        </trans-unit>
        <trans-unit id="3f0e924bb3b10921982bf6628bd8ba05eecc9614" translate="yes" xml:space="preserve">
          <source>Writes a full comment.</source>
          <target state="translated">전체 의견을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a6a11af6a78255ea2f0402bcd4d305565cccca42" translate="yes" xml:space="preserve">
          <source>Writes a full element tag.</source>
          <target state="translated">전체 요소 태그를 씁니다.</target>
        </trans-unit>
        <trans-unit id="639b75e5376394b0b1cf44e4adc0c06ecd8e3c58" translate="yes" xml:space="preserve">
          <source>Writes a full namespaced attribute.</source>
          <target state="translated">전체 네임 스페이스 속성을 씁니다.</target>
        </trans-unit>
        <trans-unit id="b852584105cc982bf7d5e2101b6fe6fba67783df" translate="yes" xml:space="preserve">
          <source>Writes a full namespaced element tag.</source>
          <target state="translated">전체 네임 스페이스 요소 태그를 씁니다.</target>
        </trans-unit>
        <trans-unit id="fed17d975b7026468f8458aa7c5456541d82f217" translate="yes" xml:space="preserve">
          <source>Writes a processing instruction.</source>
          <target state="translated">처리 명령을 씁니다.</target>
        </trans-unit>
        <trans-unit id="65eb4d42be69edcf3206e3d39d4968c179f75a0b" translate="yes" xml:space="preserve">
          <source>Writes a raw xml text.</source>
          <target state="translated">원시 xml 텍스트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="e65b57343cc76a77c2af491ef52aea4b8f3e8653" translate="yes" xml:space="preserve">
          <source>Writes a text.</source>
          <target state="translated">텍스트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="736e414e55c70901faecad43173e1dd923a0220a" translate="yes" xml:space="preserve">
          <source>Writes all image frames into an open filehandle. This method can be used to write animated gifs or other multiframe images into open filehandle. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.</source>
          <target state="translated">모든 이미지 프레임을 열린 파일 핸들에 씁니다. 이 방법을 사용하면 애니메이션 GIF 또는 기타 멀티 프레임 이미지를 열린 파일 핸들에 쓸 수 있습니다. 이 방법은 Imagick이 ImageMagick 버전 6.3.6 이상에서 컴파일 된 경우 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="332552ee5ea04c75d8f8c88183a74d4951bae93a" translate="yes" xml:space="preserve">
          <source>Writes an image or image sequence.</source>
          <target state="translated">이미지 또는 이미지 시퀀스를 씁니다.</target>
        </trans-unit>
        <trans-unit id="02a56ab108110b31554cc4620c1df1eac4938d72" translate="yes" xml:space="preserve">
          <source>Writes an image to the specified filename. If the filename parameter is NULL, the image is written to the filename set by Gmagick::ReadImage() or Gmagick::SetImageFilename().</source>
          <target state="translated">지정된 파일 이름에 이미지를 씁니다. filename 매개 변수가 NULL이면 이미지가 Gmagick :: ReadImage () 또는 Gmagick :: SetImageFilename ()에 의해 설정된 파일 이름에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="e0212270a67973a378afaf8e65526ce65243474f" translate="yes" xml:space="preserve">
          <source>Writes an image to the specified filename. If the filename parameter is NULL, the image is written to the filename set by Imagick::readImage() or Imagick::setImageFilename().</source>
          <target state="translated">지정된 파일 이름에 이미지를 씁니다. filename 매개 변수가 NULL이면 이미지가 Imagick :: readImage () 또는 Imagick :: setImageFilename ()에 의해 설정된 파일 이름에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="4052d8cc7717b64a9872261691fbb9fd9633bcdc" translate="yes" xml:space="preserve">
          <source>Writes data to the specified buffered event. The data is appended to the output buffer and written to the descriptor when it becomes available for writing.</source>
          <target state="translated">지정된 버퍼링 된 이벤트에 데이터를 씁니다. 데이터는 출력 버퍼에 추가되고 데이터를 쓸 수있게되면 설명자에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="03c97f7ad1367e103237bd710d5e9de3f9d86d65" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;fields&lt;/code&gt; array to the file as a CSV line.</source>
          <target state="translated">&lt;code&gt;fields&lt;/code&gt; 배열을 파일에 CSV 행으로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="bcdef95e9d80a220ea7ab6bfd19768f9c4cab4ea" translate="yes" xml:space="preserve">
          <source>Writes the contents of &lt;code&gt;string&lt;/code&gt; to the file</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 의 내용을 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="e121172124d35f0f6a7ac08cd7a988ca8756e59b" translate="yes" xml:space="preserve">
          <source>Writes the given &lt;code&gt;text&lt;/code&gt; into the image using TrueType fonts.</source>
          <target state="translated">트루 타입 글꼴을 사용하여 지정된 &lt;code&gt;text&lt;/code&gt; 를 이미지에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="2f67cd3f8fdd7559a40356b9c69b173d0b3dc233" translate="yes" xml:space="preserve">
          <source>Writes the image sequence to an open filehandle. The handle must be opened with for example fopen. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.</source>
          <target state="translated">이미지 시퀀스를 열린 파일 핸들에 씁니다. 핸들은 예를 들어 fopen으로 열어야합니다. 이 방법은 Imagick이 ImageMagick 버전 6.3.6 이상에서 컴파일 된 경우 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8fedf4a53d7b66ae1d119eabb9315107abef32d" translate="yes" xml:space="preserve">
          <source>Writes the session data to the session storage. Called by &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close()&lt;/a&gt;, when &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown()&lt;/a&gt; fails, or during a normal shutdown. Note: &lt;a href=&quot;sessionhandlerinterface.close&quot;&gt;SessionHandlerInterface::close()&lt;/a&gt; is called immediately after this function.</source>
          <target state="translated">세션 데이터를 세션 스토리지에 씁니다. 에 의해 불려 &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close ()&lt;/a&gt; , &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown ()가&lt;/a&gt; 실패하거나 정상적인 종료시. 참고 : &lt;a href=&quot;sessionhandlerinterface.close&quot;&gt;SessionHandlerInterface :: close ()&lt;/a&gt; 는이 함수 직후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="574ad2c40706239ee91f190fa94727bc99a8fea0" translate="yes" xml:space="preserve">
          <source>Writes the session data to the session storage. Called by normal PHP shutdown, by &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close()&lt;/a&gt;, or when &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown()&lt;/a&gt; fails. PHP will call &lt;a href=&quot;sessionhandler.close&quot;&gt;SessionHandler::close()&lt;/a&gt; immediately after this method returns.</source>
          <target state="translated">세션 데이터를 세션 스토리지에 씁니다. 일반적인 PHP 종료, &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close ()&lt;/a&gt; 또는 &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown ()&lt;/a&gt; 이 실패 할 때 호출됩니다 . PHP는 이 메소드가 반환 된 직후에 &lt;a href=&quot;sessionhandler.close&quot;&gt;SessionHandler :: close ()를&lt;/a&gt; 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="03ea7df95ca23b47a8483306f226f63f3d79b512" translate="yes" xml:space="preserve">
          <source>Writing to a network stream may end before the whole string is written. Return value of &lt;strong&gt;fwrite()&lt;/strong&gt; may be checked:</source>
          <target state="translated">전체 문자열이 작성되기 전에 네트워크 스트림에 대한 쓰기가 종료 될 수 있습니다. &lt;strong&gt;fwrite ()&lt;/strong&gt; 의 반환 값을 확인할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6a547150cce569831dab805d01c518678bfc31d3" translate="yes" xml:space="preserve">
          <source>Writing to an out of range offset pads the string with spaces. Non-integer types are converted to integer. Illegal offset type emits &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;. Only the first character of an assigned string is used. As of PHP 7.1.0, assigning an empty string throws a fatal error. Formerly, it assigned a NULL byte.</source>
          <target state="translated">범위를 벗어난 오프셋에 쓰면 문자열이 공백으로 채워집니다. 정수가 아닌 유형은 정수로 변환됩니다. 잘못된 오프셋 유형은 &lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; 를&lt;/strong&gt; 방출 합니다. 할당 된 문자열의 첫 문자 만 사용됩니다. PHP 7.1.0부터 빈 문자열을 할당하면 치명적인 오류가 발생합니다. 이전에는 NULL 바이트를 할당했습니다.</target>
        </trans-unit>
        <trans-unit id="2da93303c8b5d913dd9f936297c384e1f6878814" translate="yes" xml:space="preserve">
          <source>Writing to an out of range offset pads the string with spaces. Non-integer types are converted to integer. Illegal offset type emits &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt;. Only the first character of an assigned string is used. As of PHP 7.1.0, assigning an empty string throws a fatal error. Formerly, it assigned a NULL byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="7e1691b09d41917a85c870830b09e123ffabbc48" translate="yes" xml:space="preserve">
          <source>X coordinate</source>
          <target state="translated">X 좌표</target>
        </trans-unit>
        <trans-unit id="be7b7e2b8dfd73f730ddf57bb4386e63d5db58f8" translate="yes" xml:space="preserve">
          <source>X offset of the ellipse</source>
          <target state="translated">타원의 X 오프셋</target>
        </trans-unit>
        <trans-unit id="a609a17649b267c3c961420f5b6f5d598c1f2b56" translate="yes" xml:space="preserve">
          <source>X origo of the chopped area</source>
          <target state="translated">다진 부위의 X 오리고</target>
        </trans-unit>
        <trans-unit id="57e9a915382a36be7b76d5b67aa11345eac732ea" translate="yes" xml:space="preserve">
          <source>X position for the new size</source>
          <target state="translated">새로운 크기의 X 위치</target>
        </trans-unit>
        <trans-unit id="2215a2da832a67f87c46300d684ae7f5ceaa6dc5" translate="yes" xml:space="preserve">
          <source>X server address</source>
          <target state="translated">X 서버 주소</target>
        </trans-unit>
        <trans-unit id="f88ce0bed6f90769041a04d920bf2768b5d2424e" translate="yes" xml:space="preserve">
          <source>X start position of the floodfill</source>
          <target state="translated">플러드 필의 X 시작 위치</target>
        </trans-unit>
        <trans-unit id="bc42478797eb5582881fd263043a46fbedacc470" translate="yes" xml:space="preserve">
          <source>X-coordinate of the exported area</source>
          <target state="translated">내 보낸 영역의 X 좌표</target>
        </trans-unit>
        <trans-unit id="4ea27c05c5d4f12d106bb39b86b40c7d0af4ded0" translate="yes" xml:space="preserve">
          <source>X-coordinate of the top-left corner of the extracted region.</source>
          <target state="translated">추출 된 영역의 왼쪽 상단 모서리의 X 좌표</target>
        </trans-unit>
        <trans-unit id="ba91f9c2cb4adbbf27be0d4cbe2e3d3b811c3a99" translate="yes" xml:space="preserve">
          <source>X509 certificate. See &lt;a href=&quot;https://secure.php.net/manual/en/openssl.certparams.php&quot;&gt;Key/Certificate parameters&lt;/a&gt; for a list of valid values.</source>
          <target state="translated">X509 인증서. 유효한 값 목록은 &lt;a href=&quot;https://secure.php.net/manual/en/openssl.certparams.php&quot;&gt;키 / 인증서 매개 변수&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1d576da0595023771ff4a83cdae69268582044e" translate="yes" xml:space="preserve">
          <source>X509 certificate. See &lt;a href=&quot;https://www.php.net/manual/en/openssl.certparams.php&quot;&gt;Key/Certificate parameters&lt;/a&gt; for a list of valid values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d79423de97bf11125d750b3d1b68c46d5e529ce" translate="yes" xml:space="preserve">
          <source>X509_PURPOSE_ANY</source>
          <target state="translated">X509_PURPOSE_ANY</target>
        </trans-unit>
        <trans-unit id="f41e8fbc612a457f1fd7dec242b670c658992f59" translate="yes" xml:space="preserve">
          <source>X509_PURPOSE_CRL_SIGN</source>
          <target state="translated">X509_PURPOSE_CRL_SIGN</target>
        </trans-unit>
        <trans-unit id="3236aec3564ba00599c289a179338f55415a722e" translate="yes" xml:space="preserve">
          <source>X509_PURPOSE_NS_SSL_SERVER</source>
          <target state="translated">X509_PURPOSE_NS_SSL_SERVER</target>
        </trans-unit>
        <trans-unit id="46fbc58c67af9e720a197992da8ac3889b5df72c" translate="yes" xml:space="preserve">
          <source>X509_PURPOSE_SMIME_ENCRYPT</source>
          <target state="translated">X509_PURPOSE_SMIME_ENCRYPT</target>
        </trans-unit>
        <trans-unit id="36127270f251ff05d095f5ec22d7c59f254a19f0" translate="yes" xml:space="preserve">
          <source>X509_PURPOSE_SMIME_SIGN</source>
          <target state="translated">X509_PURPOSE_SMIME_SIGN</target>
        </trans-unit>
        <trans-unit id="96d38917f503b8fedb20537a4adf3bb29f2fee7e" translate="yes" xml:space="preserve">
          <source>X509_PURPOSE_SSL_CLIENT</source>
          <target state="translated">X509_PURPOSE_SSL_CLIENT</target>
        </trans-unit>
        <trans-unit id="3762bb9ccd4a3223ee140699d0d42f1c8107b789" translate="yes" xml:space="preserve">
          <source>X509_PURPOSE_SSL_SERVER</source>
          <target state="translated">X509_PURPOSE_SSL_SERVER</target>
        </trans-unit>
        <trans-unit id="a5de011c5990defae6a3ef0d0d63f0f9500b6c06" translate="yes" xml:space="preserve">
          <source>XBM</source>
          <target state="translated">XBM</target>
        </trans-unit>
        <trans-unit id="2ee0e6003ec20aedbf1ee53c6f5a718f2f79c3fa" translate="yes" xml:space="preserve">
          <source>XBM Support</source>
          <target state="translated">XBM 지원</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="a737c22a11891e3a9bd4bae22e550e7b01d8354e" translate="yes" xml:space="preserve">
          <source>XML Declaration node</source>
          <target state="translated">XML 선언 노드</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
