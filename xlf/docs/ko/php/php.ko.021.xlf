<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="e3b6bd3c9e6c5b7d3bd6b7181391df6b85f10ea0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;pathinfo()&lt;/strong&gt; example showing difference between null and no extension&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;pathinfo ()&lt;/strong&gt; 예제는 확장명과 null이 아닌 차이점을 보여줍니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3cec94ecf5913e632303a65ba609fa7111993a4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;popen()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;popen ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55540ce62127bb4647c96d5fd75274c98db7bcb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;preg_replace_callback()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 &lt;strong&gt;preg_replace_callback ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14be2f60d8139886f141684c7e31a3ed48345418" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;rawurlencode()&lt;/strong&gt; example 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;rawurlencode ()&lt;/strong&gt; 예제 2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba3a6b33e749ddd1578a1333639a4c505cab3a6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;realpath()&lt;/strong&gt; on Windows&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Windows의 예 # 2 &lt;strong&gt;realpath ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6debe4112303bc9170b883ecc7d2fa388d1daec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;sapi_windows_vt100_support()&lt;/strong&gt; changing state&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;sapi_windows_vt100_support ()&lt;/strong&gt; 상태 변경&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15f2711fca1daf5ddd320e3d65d4df19cc9808a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;session_gc()&lt;/strong&gt; example for user accessible script&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 사용자 액세스 가능 스크립트의 &lt;strong&gt;session_gc ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="283476423c36be9be9cd0ac3fbf4b64b233a034b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;setcookie()&lt;/strong&gt; delete example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt;setcookie ()&lt;/strong&gt; 삭제 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cff50bf7a1c794333d4d3307002861433c5aa677" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;setlocale()&lt;/strong&gt; Examples for Windows&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 Windows 용 &lt;strong&gt;setlocale ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b5ba5ccc11f45f6e73409cf513569b6182750ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;socket_create_pair()&lt;/strong&gt; IPC example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt;socket_create_pair ()&lt;/strong&gt; IPC 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="543005b9b2e7ffaa4537f59e8be0d35d9b0ed8c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;sort()&lt;/strong&gt; example using case-insensitive natural ordering&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 대소 문자를 구분하지 않는 자연 순서를 사용한 &lt;strong&gt;sort ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48b98a0d46ca5aaeedf9afbafeaef910219280ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;spl_autoload_register()&lt;/strong&gt; example where the class is not loaded&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 클래스가로드되지 않은 &lt;strong&gt;spl_autoload_register ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f721875f59915eb0a9d711adc0e6643f75b1198" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;split()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;split ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66b27a99b85c4e747c4a395ef12328de6c299d73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;sscanf()&lt;/strong&gt; - using optional parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;sscanf ()&lt;/strong&gt; -선택적 매개 변수 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3049640d8c477cb4717696d978e6887d1e84376e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;strtok()&lt;/strong&gt; behavior on empty part found&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 빈 부분에서 &lt;strong&gt;strtok ()&lt;/strong&gt; 동작 발견&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8fdb5452f4a76fa52e438d5a86e574271cf0567" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;strtr()&lt;/strong&gt; example with two arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;두 &lt;strong&gt;번째 인수가있는&lt;/strong&gt; 예제 # 2 &lt;strong&gt;strtr ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1f04baa1273a7ee302ef77b2981b198f2fe9a80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;template()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;template ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49fa70048eef916ccd98b572178fdd6854e48dc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;token_get_all()&lt;/strong&gt; incorrect usage example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt;token_get_all ()&lt;/strong&gt; 잘못된 사용법 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28a7452ef1309638790393bb4f1cf292d6abbce6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;touch()&lt;/strong&gt; using the &lt;code&gt;time&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;code&gt;time&lt;/code&gt; 매개 변수를 사용한 &lt;strong&gt;touch ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="310ab8e5798febbc0952e8f289282d08e89b8426" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;ucwords()&lt;/strong&gt; example with custom delimiter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사용자 정의 구분 기호가있는 예제 # 2 &lt;strong&gt;ucwords ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ec5ebb42d288c866902d5ccc91b7091b875fd78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;unpack()&lt;/strong&gt; example with a repeater&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 리피터가있는 &lt;strong&gt;unpack ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c706763cb8bd260c6263443a65eec7ec2ab7d25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;urlencode()&lt;/strong&gt; and &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;urlencode ()&lt;/strong&gt; 및 &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities ()&lt;/a&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29dffc0e74e4f7348349e5fc6e01925bddb93cbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;usort()&lt;/strong&gt; example using multi-dimensional array &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 다차원 배열을 사용한 &lt;strong&gt;usort ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f622b9b7b0affd90c4013a287a6e18bae6df13eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;wordwrap()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;wordwrap ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="365cd5318510f94a8fcde3156371de1089514e36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;var&gt;page2.php&lt;/var&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;var&gt;page2.php&lt;/var&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7070dced9ad8ef936616b84f59e2d27cfc1b6dfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; with other iterators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 다른 반복자와 함께 &lt;strong&gt;Phar :: buildFromIterator ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0651511af854b3eea1f7271d3c29bbf7acfcff1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;Phar::interceptFileFuncs()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;Phar :: interceptFileFuncs ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f07aa564ccb587895c08d2a2fc2ba210602cfe4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; with other iterators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 다른 반복자와 함께 &lt;strong&gt;PharData :: buildFromIterator ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="331cb531faa951fb86bc3d2b02c3c810051717bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;ctype_digit()&lt;/strong&gt; example comparing strings with integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 문자열과 정수를 비교 하는 &lt;strong&gt;ctype_digit ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="244599b1b9296ee3228f408cb260e9d2a33bd8b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;geoip_db_get_all_info()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt;geoip_db_get_all_info ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f9d963b838b765c436c4c1fca89eca5217a22cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;geoip_region_name_by_code()&lt;/strong&gt; example using FIPS codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 FIPS 코드를 사용 하는 &lt;strong&gt;geoip_region_name_by_code ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29f8341c40edea91ed2c68f7dad10cd0904e067f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;geoip_time_zone_by_country_and_region()&lt;/strong&gt; example using FIPS codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 FIPS 코드를 사용 하는 &lt;strong&gt;geoip_time_zone_by_country_and_region ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="041d9150b9d35c20bfaf8a8f6f37628421627b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;json_encode()&lt;/strong&gt; example showing some options in use &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 사용중인 일부 옵션을 보여주는 &lt;strong&gt;json_encode ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03f1976cac81df40f497b56517e4a041502894fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;parse_url()&lt;/strong&gt; example with missing scheme&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 스키마가없는 &lt;strong&gt;parse_url ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="626869d11c97f3c7bca384abc7e4b74bb08908ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A few OS related constant examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 몇 가지 OS 관련 상수 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c28840af191fe5b3aac02c53d7684c37accf4021" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A namespace prefix example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 네임 스페이스 접두사 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8c863bcaae81e8d6ab457c8622a23af5be84296" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 AES Authenticated Encryption example for PHP 5.6+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 PHP 5.6+에 대한 AES 인증 암호화 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea76dcdcde18ceb886b495493dcc9f6bdad5e47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 ALTERNATE_HANDLING rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 ALTERNATE_HANDLING 규칙&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95f161bcf97136aa876151b1f94fe6fa8f9be921" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Abstract class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 추상 클래스 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54526ee37f70573ed634145053637358205e55a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Access member of freshly cloned object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 새로 복제 된 객체의 액세스 멤버&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad029a986f47d8efe71aeb69bff8b75444d00d57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing data from a simple POST HTML form&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 간단한 POST HTML 양식에서 데이터 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e22a44b2fcd8e52e78a6995ae7e703dc680f9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing global classes outside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 네임 스페이스 외부의 글로벌 클래스에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="137183d58e09104a525e3c8d49378bed1ece2247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing invalid object properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 잘못된 개체 속성에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e722ce69f6d2f47c9ced1f4b7dcc1aeb7b2568f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing parental variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 부모 변수에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b8d6381fd435e2a5492c82436a4786bf8ae9e63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Add file to a directory inside an archive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 아카이브 내의 디렉토리에 파일 추가&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af0c53dec4a4cea65b5e7a6548b6ee648e68c3e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Adding to the include path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 포함 경로에 추가&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94919cd75332099c9a6d352e59be5cf68708c828" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Alternative to &lt;strong&gt;imagedashedline()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;strong&gt;imagedashedline ()의&lt;/strong&gt; 대안&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd4a7de7fe70acf39cc38ed65e16635f3b2a97d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 An example use of &lt;strong&gt;list()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;list ()&lt;/strong&gt; 사용 예제&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12eea08c00a3a905a1568665ff1dd12af6ddef66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Anonymous function variable assignment example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 익명 함수 변수 할당 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c290606cb5016aea68ab33a4e4b8e6c29d0ea7c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 인수 교환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4cb4cd539a51166195f5b5f994337a9ac7ea443" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Autoload other example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 다른 예를 자동로드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d34994b2da5be039e0bc06510cf0e7a5a405fde7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Automatic index with &lt;strong&gt;array()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;array ()를&lt;/strong&gt; 사용한 자동 인덱스&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0ea93578c5d2fb8ea43794baac3945df479d42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Avoiding lost session by &lt;strong&gt;session_regenerate_id()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;session_regenerate_id ()에&lt;/strong&gt; 의한 세션 손실 방지&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5b6a1fbb9bb49d13b44f16b517036bfaa4f9797" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Basic submission of two tasks with passing application context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 응용 프로그램 컨텍스트를 전달하여 두 작업의 기본 제출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c65112bafae5d4dea32417ea5ecda5e17528080" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Beware when adding or subtracting months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 달을 더하거나 뺄 때주의하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="878f2c3773bbf5b8225f1171425443cb5bb9e1a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Binary &lt;strong&gt;fread()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 이진 &lt;strong&gt;fread ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5fac49a370dfe8cdad7d028d84387d5abd2e19d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Bitwise XOR operations on strings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 문자열에 대한 비트 XOR 연산&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a5bec294dd48ba60713121541788f14236d36c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Caching directives&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 캐싱 지시문&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d592ed59038e05bd6b7ab8d6c18227eb48830f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Calculate pre PHP-5.4 tiger hashes with PHP-5.4 and higher&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 PHP-5.4 이상으로 PHP-5.4 타이거 해시 계산&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bea140a5bde61802d16607644c679c503293d949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Callback basic examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 콜백 기본 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b78168d388a8c2d4787568b5f317bfe4ae8d68c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Callback example using a Closure &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 클로저를 사용한 콜백 예 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9996add4d683695e46e3c667d05cf28c3dc555f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Checking for failure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 실패 점검&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60dbb8e4d5059d6b549f4943e25691735e9931ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Checking for the existence of a stream wrapper&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 스트림 래퍼가 있는지 확인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47e2d2e4339f971f6558e38a3534cbee13812a8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Committing a DDL transaction&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 DDL 트랜잭션 커밋&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad0bf5afd5d97efb5cfd80cf86d04e42f2aa3042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Conditional functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 조건부 함수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e5de38cdc5c6ecab9200b7b3d59d5e749030ed3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Connect by specifying a user name and password.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 사용자 이름과 비밀번호를 지정하여 연결하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0405b3fda038a87dd42edf58fc476baef4419da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Connect to UNIX domain socket which presumably is served by a server, read response from the server and output it to the console&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 서버가 제공 할 것으로 보이는 UNIX 도메인 소켓에 연결하고 서버에서 응답을 읽고 콘솔로 출력&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad06465266642c9d0593ff6439649070aa72a507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Constructors in namespaced classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 네임 스페이스 클래스의 생성자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f04c080ce2cde6a4ce015276f86701629f9d414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Contents of users.txt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 : users.txt의 내용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d2aaa0ebaa791811434bd4c5bb8ce1edae3b65b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Convert an image from a zip entry&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 Zip 항목에서 이미지 변환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e59d41a57e93ebe6337f1a338d8e10d744c9b7ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Converting a PNG image to GIF using &lt;strong&gt;imagegif()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;imagegif ()를&lt;/strong&gt; 사용하여 PNG 이미지를 GIF로 변환&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6cc9aec7f4c39d40bc7811b9ad2c46834c22a52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Correlate &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;Imagick :: morphology ()의&lt;/strong&gt; 상관 관계&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e966608799ed543593400624802691e674865857" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Counting rows returned by a SELECT statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 SELECT 문이 리턴 한 행 수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2b5c094ec31da3c9db8f015eafc63bd1ec0afce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create a PDO instance via URI invocation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 URI 호출을 통해 PDO 인스턴스 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab2392f7551189537d23a6777e52c8d7deb25845" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create a SimpleXMLElement object from a URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 URL에서 SimpleXMLElement 객체 만들기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2d4b66f1601e28fbaba9086d78b7e82cfaa9f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create a gradient from the polynomial (4x^2 - 4x + 1) &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 다항식에서 그라디언트 만들기 (4x ^ 2-4x + 1) &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de46aad9bf80e222b6a45c471d4ca59a6aafb015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create an archive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 아카이브 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f4beea510eb43c9de013b849b411ee5f0c4a5c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Creating a self-signed ECC certificate in PHP 7.1+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 PHP 7.1 이상에서 자체 서명 된 ECC 인증서 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c42ff0bede6cf2d52a71d62c523d4ce26bacf9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Creating an uneraseable output buffer in a way compatible with both PHP 5.3 and 5.4&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 PHP 5.3 및 5.4와 호환되는 방식으로 언 레이어 블 출력 버퍼 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="021d2a627a3b9be1ac8f9e88ba9ae7007c996f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Custom session save handler using objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 객체를 사용하는 사용자 정의 세션 저장 핸들러&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5587b9b1032aa5592c8b00a088c5d1650fbf7745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 DatePeriod example with &lt;strong&gt;&lt;code&gt;DatePeriod::EXCLUDE_START_DATE&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt; &lt;code&gt;DatePeriod::EXCLUDE_START_DATE&lt;/code&gt; &lt;/strong&gt; 를 사용한 &lt;strong&gt;DatePeriod&lt;/strong&gt; 예&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1503114bce2faa88cd88fbda2ac8e48351246fd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Declaring a single namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 단일 네임 스페이스 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ca69910e447188078db89a28ef6c18d2a386a8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Declaring multiple namespaces, bracketed syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 여러 네임 스페이스 선언, 괄호로 묶은 구문&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c37dfdbbec2011c4cb4558961c74c0135a39953" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Defining Constants using the &lt;em&gt;const&lt;/em&gt; keyword&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;em&gt;const&lt;/em&gt; 키워드를 사용하여 상수 정의&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bc372e1a9109ab4ebbfb0f09655e881700da7e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Disabling &lt;code&gt;details&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;code&gt;details&lt;/code&gt; 비활성화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53917daf1e16a9308220c4baedf794e7e17cfb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Display full permissions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 전체 권한 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e78e5d817cc56d849275f0f52103eef7db226d3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Displaying an IP address&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 IP 주소 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9d45cbb29833c414b14714e832482d5933fa118" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Dummy_action.php&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 Dummy_action.php&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="809aadcb62b4076c341448960589e97a6cfd91e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Dynamically accessing namespaced elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 네임 스페이스 요소에 동적으로 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51a08df36c87886ce5ee1bd4fa172a18ec59a587" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Efficiently handling tasks with &lt;a href=&quot;class.splqueue&quot;&gt;SplQueue&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;a href=&quot;class.splqueue&quot;&gt;SplQueue로&lt;/a&gt; 작업을 효율적으로 처리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f2446ed2997a9fb8eaf3a8a96bd9c8fe9168a80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Escaping characters in &lt;strong&gt;date()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;date ()&lt;/strong&gt; 에서 이스케이프 문자&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0093926b5e737c0536db3bbae303751104602885" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Examining the individual bytes of a UTF-8 string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 UTF-8 문자열의 개별 바이트 검사&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="beea79954e71e3cbdcdeb59bf94cd3093c1d3efc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Example of connecting securely to LDAP server.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 LDAP 서버에 안전하게 연결하는 예.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc08c197b49238bf076a968772d6b2c9007b1737" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Example of using a nowdoc to initialize a property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 : nowdoc을 사용하여 속성을 초기화하는 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a756bedae8cb0a2c56f89eaf2a125a2c0106d7b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Example showing useless detect orders&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 쓸모없는 감지 순서를 보여주는 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d5df10d61ca2b2cdea49956e8e1c8be3f2fe380" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Examples of potential &lt;strong&gt;str_replace()&lt;/strong&gt; gotchas&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 잠재적 &lt;strong&gt;str_replace ()&lt;/strong&gt; gotchas의 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b2c4f882fd53b4c27d86d05c225a6d7717621df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Execute a prepared statement with an array of insert values (named parameters)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 삽입 값 배열 (명명 된 매개 변수)을 사용하여 준비된 명령문을 실행하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ad6e17265b772c83b3fc80bb7213d1c6e148c5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Execute a prepared statement with question mark placeholders&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 물음표 자리 표시 자와 함께 준비된 문장을 실행&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="735ad7a2f2d0d8aa5f3ae43b8e3a42807f00e7e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Exporting classes since PHP 5.1.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 PHP 5.1.0 이후 클래스 내보내기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1542d99f05beb29598a9fbaef544f652bab0e947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Extendable Interfaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 확장 가능한 인터페이스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fc9c21abb17d1222fe8566af8803eaf4dd6c8d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Extending the Exception class (PHP 5.3.0+)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 예외 클래스 확장 (PHP 5.3.0+)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbb647ababfea26d5292721a32ed659502c8de08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Extract two entries&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 두 항목 추출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89dffcaa515eaa72286b7067703a4b04b8a406ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Fetching all values of a single column from a result set&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 결과 세트에서 단일 열의 모든 값을 가져 오는 중&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="925e97950f10221ce385370eb66aafa7bf476cc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Fetching rows with a scrollable cursor&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 스크롤 가능한 커서로 행 페치&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c035129f9f3a9c8297cec1494ca0998fbe85e18c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Filtered &lt;strong&gt;get_resources()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 필터링 된 &lt;strong&gt;get_resources ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b850460a363637ddcefabd3c69eb5a46e96d5c80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Filtering results from &lt;strong&gt;ReflectionClass::getMethods()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;strong&gt;ReflectionClass :: getMethods ()&lt;/strong&gt; 에서 결과 필터링&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ecc0f5b216eb26800d38799b276c8d79bb90201" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Final class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 최종 수업 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27695ea9573558d18a0cc28bc58b8d2a1141ffb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Find matching HTML tags (greedy)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 일치하는 HTML 태그 찾기 (욕심쟁이)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73ecf8ea729814e46b1ad895c08480924e6bf756" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Find the word &quot;web&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &quot;웹&quot;이라는 단어 찾기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e73ef0608198ba299541c53fae735e41d6096b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Flips the image horizontally&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 이미지를 수평으로 뒤집습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0315eee96fba56ff031a080ac2b51e1ff719ce19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Further &lt;strong&gt;DateTime::add()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 추가 &lt;strong&gt;DateTime :: add ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f896b0a5cf2ed67ec029c5c830dd085f7a04314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Further &lt;strong&gt;DateTime::sub()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 추가 &lt;strong&gt;DateTime :: sub ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f630a22ec362b1556b6a886f43175bf8cf939b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Gaussian blur&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 가우시안 블러&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a8cb3cb63a019c027f9c8306deb7d14452c9a04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Generate a DH public/private keypair in php&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 PHP에서 DH 공개 / 개인 키 쌍 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="425da20982ba41b8bdfacf38ff56db3fadf73250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Generating valid HTML markup using the &lt;code&gt;is_xhtml&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;code&gt;is_xhtml&lt;/code&gt; 매개 변수를 사용하여 유효한 HTML 마크 업 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="859fb18830c5c893f927716411cf4bf52ca28809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Get the column of last names from a recordset, indexed by the &quot;id&quot; column &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &quot;id&quot;열에 의해 색인 된 레코드 세트에서 성 열 가져 오기 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c0f356dec433d4d7cd8d4b7fe14446fe92e6c68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Getting the abbreviation of a timezone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 시간대의 약어 얻기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d39c726f43dd114a5acdc0abc89222afc88a07b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Getting value from private and protected properties using &lt;a href=&quot;class.reflectionproperty&quot;&gt;ReflectionProperty&lt;/a&gt; class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;a href=&quot;class.reflectionproperty&quot;&gt;ReflectionProperty&lt;/a&gt; 클래스를 사용하여 개인 속성과 보호 속성에서 값 얻기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="602069d48062128f3f05200ed7dbd3b4f5ded6d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Human-readable RGB values using &lt;a href=&quot;function.imagecolorsforindex&quot;&gt;imagecolorsforindex()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;a href=&quot;function.imagecolorsforindex&quot;&gt;imagecolorsforindex ()를&lt;/a&gt; 사용하여 사람이 읽을 수있는 RGB 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3457768a7f9ce228d2c6a7e59977f684e379bf83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 ISO 8601:1988 week number example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 ISO 8601 : 1988 주 번호 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d719213ee702dc87cc181834520e796958f8f61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Including within functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 2 함수 내에 포함&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8169e7ae23892755bcb665a7262bd9ef6743e29d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Incrementally writing a BLOB&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 BLOB 증분 작성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a96b7fc3c7dacd9a529edc8b06377fb700914254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Integer overflow on a 32-bit system&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 32 비트 시스템에서 정수 오버 플로우&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7157e1d2d65ccac6c1fbd38ab8f72700deb6bce3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Intricacies of &lt;strong&gt;DateTime::__construct()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;DateTime :: __ construct ()의&lt;/strong&gt; 복잡성&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82b0361d5c115f6981e5bde1c221450d6ae28a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Intricacies of &lt;strong&gt;DateTime::createFromFormat()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;DateTime :: createFromFormat ()의 복잡성&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70947be546fdb5ebc1820989905d64bb0edc0c10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Italicizing a word within some text&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 일부 텍스트 내에서 단어를 기울임 꼴로 표시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17a287fa74d822e4be368c5c4cb844f47a65d611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Iterable parameter default value example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 반복 가능한 매개 변수 기본값 예제 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e14e80582d4b9c1ccefcfe661a75c74530efcb83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Iterating AppendIterator with the AppendIterator API&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 AppendIterator API로 AppendIterator 반복&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63a9132548ce767f6225c90ea6cfcfaf64dc2586" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 LDAP pagination&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 LDAP 페이지 매김&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3483ab981e6826547e08c0a3fb111d79abf51bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 List all entries in the current directory and strip out &lt;em&gt;.&lt;/em&gt; and &lt;em&gt;..&lt;/em&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 현재 디렉토리의 모든 항목을 나열하고 제거합니다 &lt;em&gt;. &lt;/em&gt;그리고 &lt;em&gt;..&lt;/em&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd8bb1c4b794bee4806826fc8bfc99ae507d0c67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Logging values in access.log&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 access.log의 값 기록&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc0c8ac6bac05c8a01bf211225a6360ba27e311f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Making a general processing function with &lt;strong&gt;create_function()&lt;/strong&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;strong&gt;create_function ()&lt;/strong&gt; 으로 일반 처리 함수 만들기&lt;strong&gt;&lt;/strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40c14ae9174d8f0173f330cc4a21385df88492b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Method Declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 메소드 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8bd52e8fa7ab9dc819f34783d06df48e6905d96d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Multiple property declarations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 다중 속성 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf9dff2d24f98a993329fee9f793f6ba1cb1b314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Nested acquire/release example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 중첩 된 획득 / 릴리스 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d901e24d6f827582a97c6100a8bdb0963b4aceff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Nested children&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 중첩 된 자식&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79550d7047414ef4d87695f39d7fc4d836714b8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 No sunrise&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 일출 없음&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16062eeaf302e6e1ef429ea73c8afcb2f48ca07a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 No sunset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 일몰이 없음&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="157415443d89adc77c9ef9a908b8da224d7a122e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 OO example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 OO 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d5b270b853b42db383cbb8bafb8713bfa25a922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Object Iteration implementing Iterator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 반복자를 구현하는 객체 반복&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08bfaad5ecdbde51d35788acfab29bcb127d517c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Our own implementation of &lt;strong&gt;curl_setopt_array()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 우리 자신의 &lt;strong&gt;curl_setopt_array ()&lt;/strong&gt; 구현&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b71abe0306444cf1e8175ff18a54e00197b1db2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Overflow behavior&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 오버 플로우 동작&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52dd34600d70267b977f851f0083232aaa8fd523" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Overloading methods via the &lt;a href=&quot;language.oop5.overloading#object.call&quot;&gt;__call()&lt;/a&gt; and &lt;a href=&quot;language.oop5.overloading#object.callstatic&quot;&gt;__callStatic()&lt;/a&gt; methods &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;a href=&quot;language.oop5.overloading#object.call&quot;&gt;__call ()&lt;/a&gt; 및 &lt;a href=&quot;language.oop5.overloading#object.callstatic&quot;&gt;__callStatic ()&lt;/a&gt; 메서드 를 통한 메서드 오버로드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="304c9948cf86a47708af90b837c33612ea41ac82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 PHP Opening and Closing Tags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 PHP 열기 및 닫기 태그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a54591e27f76b85f1b16747911f0f07eed5dc3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Passing function parameters by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 참조로 함수 매개 변수 전달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0018c0bf4ae956eaaac6b314da27e695a690c131" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Passing text containing an unescaped &amp;amp; as &lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 이스케이프되지 않은 &amp;amp; &lt;code&gt;value&lt;/code&gt; 포함하는 텍스트 전달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8db1e0d6119068e78cfc49ba85b1d1bd2f33c088" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Periodic timer. Tick every 10.5 seconds starting at now&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 주기적 타이머. 지금부터 10.5 초마다 틱&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83816ef9c109f0a3f01780fd5cbc1b0058788e83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Polar night&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 # 2 극지 밤&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53dfe7fddc1a00d715f6b43f6e4620e39467c7d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Precedence Order Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 우선 순위 순서 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4280a6f10bb82e3d7d08a35e374c411e45c83c60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Prepare an SQL statement with question mark parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 물음표 매개 변수로 SQL 문 준비&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74c5f017d2b2e91ad77ae3a94034544fa9b7c436" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Prints the core developers and the documentation group&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 핵심 개발자 및 문서 그룹을 인쇄합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16d0a0cc549cfe0136aeddc9f03675807e6620da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Procedural style&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 절차 스타일&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7bf9b04143d29ff5c65fa909afee6e967da0a483" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 QuickHash IntHash file format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 QuickHash IntHash 파일 형식&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef38c71a1c731ab53d4f4a295cb3242f7a45ca18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 QuickHash IntString file format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 QuickHash IntString 파일 형식&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bed5af284c470688d432ec31af34b00b4d8c3fbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Quoting a dangerous string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 위험한 문자열 인용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57210ff96350f669933f3c07fbfb64bd8f70f882" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Recursive &lt;strong&gt;count()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 재귀 &lt;strong&gt;count ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3cb0a351d5ee9e1698e52433f9be7b2a33a7db28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Recursive callback basic example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 재귀 콜백 기본 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c14bfe408759dd6d2b34fd6f155ccf2994f9b29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Referencing global variables inside functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 함수 내에서 전역 변수 참조&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="423602cfc29738176199f9a4ad69bc6dbacf007e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Register localnamespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 localnamespace 등록&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb395c39eb864ad196918a02ec9b7bd4f383dbd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Registering a generic filter class to match multiple filter names.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 여러 필터 이름과 일치하도록 일반 필터 클래스 등록&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c76ee03751212b35779c78259b5da5e8279f0917" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Rename a user&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 사용자 이름 바꾸기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed882621a3bc3463f88daf1e124ed6ec83af7381" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Resampling an image proportionally&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 이미지를 비례 적으로 리샘플링&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92c9326647e80ef8b0e018077567bd9f51d93cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Resuming a download with &lt;strong&gt;ftp_nb_get()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;ftp_nb_get ()으로&lt;/strong&gt; 다운로드 재개&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9c45c938d84a2275bbf21276d32b8e62acaacf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Resuming an upload with &lt;strong&gt;ftp_nb_put()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt;ftp_nb_put ()으로&lt;/strong&gt; 업로드 재개&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5da80782a1018d6f451fe0aa833c45aa6a363ea9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Retrieving a numeric array.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 숫자 배열 가져 오기.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9e417af79b10b868fc233eb51ae65c53211e8af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Retrieving elements as custom class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 사용자 정의 클래스로 요소 검색&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3957a83754118bf6229bde6c29c7b6061e6a5354" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Returning an array to get multiple values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 여러 값을 얻기 위해 배열 반환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="186f307af9204cfbd4aec27f32a4cfaeb7864fb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Rewrite rule for Apache&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 Apache의 재 작성 규칙&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24152d9656b0cd648283dcde65b2c432f6b13049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 SOAP's standard method for error reporting is exceptions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 오류보고에 대한 SOAP의 표준 방법은 예외입니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9df0e92e1f3dfd5979296e6a654a6adbffdc0d72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 SPARSECOLORMETHOD_BILINEAR &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 SPARSECOLORMETHOD_BILINEAR &lt;strong&gt;Imagick :: sparseColorImage ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="504a75adc0ac20b9aa0b074f040261c30ca9c5cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Same as the previous example but with &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; and the zip stream wrapper&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 이전 예제와 동일하지만 &lt;a href=&quot;function.fopen&quot;&gt;fopen ()&lt;/a&gt; 및 zip 스트림 래퍼&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="701995235d979607e52a22ee49494a76e089cce2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving a GD image&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 GD 이미지 저장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d1f5206689ab8ddcaa3203f90b849b0d9ecb4f0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving a GD2 image&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 GD2 이미지 저장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c00e6cc98b442f336bf7eaa83532c12e8e31422" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving a JPEG image to a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 JPEG 이미지를 파일로 저장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa342c1d6f71595608e3891ea8f6a04e66ea2738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving an XBM file with a different foreground color&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 다른 전경색으로 XBM 파일 저장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59ccd306c1152b6305032696ce17adf793d42337" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving the WBMP image&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 WBMP 이미지 저장&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63c156602503b6de1e4df59d07703973a90baa88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Searching with offsets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 오프셋을 사용한 검색&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1983e59482b3905badcedb568180e6bf9ef7c2fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Searching within the include_path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 include_path 내에서 검색&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d7e7a7605fe954ad252088d79925c9ecf7ab6ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Sending mail with extra headers.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 헤더가 추가 된 메일 보내기.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15d1c7e5ca8c0384c1c4345f093ef15c0526d703" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Set Multiple Headers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 여러 헤더 설정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2f340888ba7ee44dc6837aeebf386a328cbf1ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Set server controls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 서버 컨트롤 설정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5498ddec9334ddfe9fa58e142069c394f88d5d2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Simple &lt;strong&gt;array_merge()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 간단한 &lt;strong&gt;array_merge ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42404e51cabafdac84c8bedd876e36a34b2cad0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Simple example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 간단한 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b23cf18b288a88bec2147ca476e66127c91fffdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Simple progressbar for commandline download client&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 커맨드 라인 다운로드 클라이언트를위한 간단한 진행 표시 줄&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baeb7877730c4878d38aa88302dff03a00ee4390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Some examples of the &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; pseudo-variable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; 유사 변수 의 몇 가지 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84309eed169013d0df530af168624e5292923df5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Some examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 몇 가지 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a729ec52a258660f8ba5938686c3aae20c2f7649" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Sorting multi-dimensional array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 다차원 배열 정렬&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="451c9138528f23072109459d89a8eba54960b7fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Splitting a string into component characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 문자열을 컴포넌트 문자로 나누기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb9d719d51dc1fc915643b48b580f9938af6022b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static &lt;strong&gt;method_exists()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 정적 &lt;strong&gt;method_exists ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd4c0cabeafe8d0f542e5336ebd2ce73322256d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static data example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 정적 데이터 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2de53b07387726cf06ddd6901376baf56da9797" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static invocation of &lt;em&gt;loadXML&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;em&gt;loadXML의&lt;/em&gt; 정적 호출&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a47aac00b88908b4e0d7cdf84ae477e3000c2ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static property example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 정적 속성 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6256b041ce301a6cf5c94d97493c56622684cd9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Submitting a job and retrieving incremental status&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 작업 제출 및 증분 상태 검색&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d02d771149bb0c7ce91d22303bd4a88bbc5f579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Testing if a string is found or not&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 문자열이 있는지 아닌지 테스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d51042459b70a161c5bbf7899039c2711d3c89f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Ticks usage example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 틱 사용법 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3644e158170d5b1b60a157187b4fe8b6f9326fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Timing script execution in PHP 5&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 PHP 5에서 타이밍 스크립트 실행&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e77d7baf822875e44b0424e1beddc78a7a83dd3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Transcription of standard array comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 2 표준 배열 비교의 전사&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9327794c5b1fed243036cfe5881095258fd6d25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Traversing an array with &lt;strong&gt;each()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;strong&gt;each ()로&lt;/strong&gt; 배열 순회&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1c0dc3575bea967b5e4b4b8a8f21a66cd4c4ee4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Trimming array values with &lt;strong&gt;trim()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;trim ()으로&lt;/strong&gt; 배열 값 잘라 내기&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="902b282ab339d912c4679965457c7a56b0c79a20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Type Casting and Overwriting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 유형 캐스팅 및 덮어 쓰기 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aaa11459fb6a397335dac4940eb8bf054e35d63a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Undefined order of evaluation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 정의되지 않은 평가 순서&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d69d65a46938249ccfc81754e71da6c2652879e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Understanding &lt;strong&gt;socket_select()&lt;/strong&gt;'s result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;socket_select ()&lt;/strong&gt; 결과 이해&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93148079f4123610f5c39893c4249d558a6e2f49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Unsetting all previously set headers.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 이전에 설정 한 모든 헤더를 해제합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74e454402f71ffdac4cb82c7bc1e1218e5bd8b23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Uploading file (deprecated as of PHP 5.5.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 파일 업로드 (PHP 5.5.0부터 더 이상 사용되지 않음)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d8e1fe8c2008947fc5df217a9c4e8926aa45d40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Usage of &lt;strong&gt;&lt;code&gt;ENT_IGNORE&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt; &lt;code&gt;ENT_IGNORE&lt;/code&gt; 의&lt;/strong&gt; 사용법&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84176739e1d29d1eb458972842719d59dcbe2dad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Usage on built-in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 내장 함수에서의 사용법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cc29d8ef7c1d622df445d38ea58d839e7305101" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using !==&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2! == 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff4b5bfe70afbc7789bc16729020c30da0ed9929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;em&gt;(unset)&lt;/em&gt; casting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;em&gt;(설정되지 않은)&lt;/em&gt; 캐스팅 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fcfc635f5badb80430c84c6a6fb9c14c92a026f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;em&gt;instanceof&lt;/em&gt; with inherited classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 상속 된 클래스와 함께 &lt;em&gt;instanceof&lt;/em&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69007b4432bd8b7293cdc3b795f73d9900b68a60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;crypt()&lt;/strong&gt; with htpasswd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 htpasswd와 함께 &lt;strong&gt;crypt ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8fa279e0032527795b812cffecd0a90bd93963e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;dns_get_record()&lt;/strong&gt; and DNS_ANY&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 : &lt;strong&gt;dns_get_record ()&lt;/strong&gt; 및 DNS_ANY 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad79ac4c88c50fbb7cda288b4bcae3a5295d8e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;get_class()&lt;/strong&gt; in superclass&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 수퍼 클래스에서 &lt;strong&gt;get_class ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="345f94e3657875f397267298bb90b19b7d2729b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;http_response_code()&lt;/strong&gt; in a CLI environment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 CLI 환경에서 &lt;strong&gt;http_response_code ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ac4f67261ac346675ca629d6539b6853c7e128c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;imagefontheight()&lt;/strong&gt; together with &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 사용 &lt;strong&gt;imagefontheight ()를&lt;/strong&gt; 함께 &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont ()&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b78a6a14987755f64814bb399f5b74e24a2074fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;imagefontwidth()&lt;/strong&gt; together with &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 사용 &lt;strong&gt;imagefontwidth ()를&lt;/strong&gt; 함께 &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont ()&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e686be8a574b0fb0801de551e6eec9ae67a2a7e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;mcrypt_module_open()&lt;/strong&gt; in encryption&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 암호화에서 &lt;strong&gt;mcrypt_module_open ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bda1cde595c07e5b0450ad7bbc4ded5756e46b1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;pg_query()&lt;/strong&gt; with multiple statements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 여러 문장으로 &lt;strong&gt;pg_query ()&lt;/strong&gt; 사용하기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f2dc28973c810415313bda79b64aaa4e375a437" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;stat()&lt;/strong&gt; information together with &lt;a href=&quot;function.touch&quot;&gt;touch()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;strong&gt;stat ()&lt;/strong&gt; 정보를 &lt;a href=&quot;function.touch&quot;&gt;touch ()&lt;/a&gt; 와 함께 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fc02c107e43ddf920916f97c8dd5630c46dad7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;stripslashes()&lt;/strong&gt; on an array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 배열에서 &lt;strong&gt;stripslashes ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d9cff7abd4cdae0c4dfcc5f870e28297ad07e9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;substr_replace()&lt;/strong&gt; to replace multiple strings at once &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;substr_replace ()&lt;/strong&gt; 를 사용하여 여러 문자열을 한 번에 교체&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd190544c33e6af9bb9a50b7c3cf5c95382de643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; instead of global&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 글로벌 대신 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a75edda3ef0a49ade6ac8ba70b838576971796b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using LDAP Bind Anonymously&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 익명으로 LDAP 바인드 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24b4b23b1056a3d94e6eb380dc3e129ad2d61391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using UDP connection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 UDP 연결 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0a905d70d389093fe78dbe1a69b3917452ba43e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using UDP server sockets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 UDP 서버 소켓 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80d654478ecee76c1bf841ecaf1952c346ae39f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using a custom handler to print a description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 사용자 정의 핸들러를 사용하여 설명 인쇄&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15b16481e840bc9e2148203db95a7242a8be13e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using a negative &lt;code&gt;length&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 음의 &lt;code&gt;length&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a33775bd22f66de9c992090b8eb224fb59115df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using asXML() on &lt;a href=&quot;simplexmlelement.xpath&quot;&gt;SimpleXMLElement::xpath()&lt;/a&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;a href=&quot;simplexmlelement.xpath&quot;&gt;SimpleXMLElement :: xpath ()&lt;/a&gt; 결과 에 asXML () 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="500813cfe07a6c2cc7bc2f23ba649ed7e9ae5466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 플래그 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="551038818a0608137b25a67e8429e1cf68d859d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using indexed arrays with &lt;strong&gt;preg_replace()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 &lt;strong&gt;preg_replace ()&lt;/strong&gt; 와 함께 인덱스 배열 사용&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="341ceec5d8ae3f198d92011520c0a22957a59454" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 네임 스페이스 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b8de23263a03eed16ac00efcae2f36b693e4ecd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using the &lt;code&gt;phonemes&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 &lt;code&gt;phonemes&lt;/code&gt; 매개 변수 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3c3b4cf3ab97b6fcde3c3409b90d876246ee1ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using the &lt;em&gt;instanceof&lt;/em&gt; operator in PHP 5&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 PHP 5에서 &lt;em&gt;instanceof&lt;/em&gt; 연산자 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aefec6e82618fbbeb28bee9a50531a9783801ab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Valid example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 2 유효한 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad362691e3ed13f55eb297074b63784f26b9f979" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Values exceeding ranges are added to their parent values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 범위를 초과하는 값이 상위 값에 추가됩니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f6b806bdee1c5da34277b67bb05a25d417023e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Variable method example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 변수 방법 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2af625a37fb0e7678f17c56a9d401f5748e86c46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Volatile use-case&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 # 2 휘발성 사용 사례&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82a8e7d6d85e47586319945f40f678630644e3d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 What &lt;strong&gt;get_meta_tags()&lt;/strong&gt; returns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 2 &lt;strong&gt;get_meta_tags ()가&lt;/strong&gt; 돌려주는 것&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da5d0ce99d26d7f19d68ab8fd687f46468caf015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Working with multiple namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 여러 네임 스페이스를 사용한 작업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7b2a5feda4b9aa72b486e5f64b49e99b1145629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Working with variables in a sandbox&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 샌드 박스에서 변수 작업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="234ebf738c2ed609c97d1a67618f4ff7bb09e00f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Yielding a key/value pair&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 키 / 값 쌍 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57467c036fe4f21f530641b52ecab72fc93e13f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 __NAMESPACE__ example, global code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 2 __NAMESPACE__ 예, 전역 코드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d4be666eb3cf4da0d216ddfc76ca0165efcbdcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 global functions/constants fallback inside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 네임 스페이스 내에서 전역 함수 / 상수 폴백&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="847b3bb3baa4edaae59df109bde37af99c629417" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 importing/aliasing with the use operator, multiple use statements combined&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 use 연산자를 사용하여 가져 오기 / 에일리어싱, 다중 사용 문 결합&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6db0046f8a6636a36e17c5981e573bda0113ff4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 moldb.xml - small database of molecular information&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 moldb.xml-분자 정보의 작은 데이터베이스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad31b102f673c91fe89be534ca3e51cb95bd2072" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 plugin Dummy.php (under &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt;/plugins)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 플러그인 Dummy.php ( &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; / plugins 아래 )&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e14009a8a3cbf792c3dd9acfc9246a140ba53f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 private method example: private methods may only be executed by the Threaded object during execution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 private 메소드 예제 : private 메소드는 실행 중 Threaded 객체에 의해서만 실행될 수 있습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bacbf719a854b7507c2f6da50a65e3c1c6b00b64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 unserialize_callback_func example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 2 unserialize_callback_func 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cb07e20d9553f11119cefda4e90b2179dfaa8ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #20 The 'BottomHat' method, also known as 'Black TopHat' is the pixels that a Closing of the shape adds to the image. That is the the pixels that were used to fill in the 'holes', 'gaps', and 'bridges'. &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 20 'BottomHat'방법 ( 'Black TopHat'이라고도 함)은 셰이프 닫기가 이미지에 추가하는 픽셀입니다. 이것이 '홀', '갭'및 '브리지'를 채우는 데 사용 된 픽셀입니다. &lt;strong&gt;Imagick :: 모폴로지 ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e95eb940ffd117c73daa47b94c9d4cfa7817b196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #21 Hit and Miss &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 21 히트와 미스 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ac7ae1c62520c1d04daf19f18edd02e81282512" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #22 Thinning &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 22 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt; 희석하기&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a22cbfe9ebf2ad95b476894cc43c21dd136cd73d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #23 Thicken &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 23 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt; 두껍게하기&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="155ecfcad7f24023902b7bbc8c8c54a81b9dcbce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #24 Thick to generate a convex hull &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 24 볼록 껍질을 생성하기 위해 두꺼운 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c9cb7a91203135a72b8f1f8893cedf3311f12ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #25 Iterative morphology &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 25 반복적 인 형태 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e157ec63266858610500dacedbed914aef5cdffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #26 Helper functon to get an image silhouette &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 26 이미지 실루엣을 얻기위한 도우미 functon &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e07e825b4848b9b3ef86bfc721f394708a4ab9c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 1-based index with &lt;strong&gt;array()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;array ()가있는&lt;/strong&gt; 1 기반 인덱스&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49abf949ac4a08c9d590e8dbe6379289d232567c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; and &lt;a href=&quot;datetime.diff&quot;&gt;DateTime::diff()&lt;/a&gt; with the %a and %d modifiers &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 % a 및 % d 수정자를 사용하는 &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; 및 &lt;a href=&quot;datetime.diff&quot;&gt;DateTime :: diff ()&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f758f22c661cff43fa3e3a98813ce0ba82f843f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;limit&lt;/code&gt; parameter examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 &lt;code&gt;limit&lt;/code&gt; 매개 변수 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e21674e07d70fdede407b96e2369f786012e1307" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;mode&lt;/code&gt; with &lt;code&gt;precision&lt;/code&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 3 &lt;code&gt;mode&lt;/code&gt; 와 &lt;code&gt;precision&lt;/code&gt; 예시&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43888bab51715ec4ef49d2b28b488e3ac1119570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;+&lt;/em&gt;, &lt;em&gt;-&lt;/em&gt; and &lt;em&gt;.&lt;/em&gt; have the same precedence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 &lt;em&gt;+&lt;/em&gt; , &lt;em&gt;-&lt;/em&gt; 및 &lt;em&gt;. &lt;/em&gt;우선 순위가 같다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85479f9eace90744c9fd85bba74c99634fad0438" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;include&lt;/em&gt; through HTTP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;em&gt;은&lt;/em&gt; HTTP를 통한 &lt;em&gt;포함&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87df528bcc718bbcec2ce3fdd1079b89d4b49b44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;static::&lt;/em&gt; usage in a non-static context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;em&gt;static ::&lt;/em&gt; 비 정적 컨텍스트에서의 사용법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f905f1e28b250aae0ffdd5f234b4d6a67c0b17e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;&lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt;&lt;/strong&gt; example for Memcached v3&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 3 &lt;strong&gt; &lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt; &lt;/strong&gt; 예 Memcached v3&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34d07086ddadba230eaa90c0f91edb164106d799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;DOMXPath::registerPHPFunctions()&lt;/strong&gt; with &lt;em&gt;php:function&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;em&gt;php : function을&lt;/em&gt; 가진 &lt;strong&gt;DOMXPath :: registerPHPFunctions ()&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2166b224bb4535d52f98ea4f132f0efa56c64714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Imagick::setOption()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;Imagick :: setOption ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6086496fa1983a7c5e3d5b75c52a4ce62edec04d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 를 반환하는 &lt;strong&gt;JsonSerializable :: jsonSerialize ()&lt;/strong&gt; 예제 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75756c97d56a3a8304c96bd2291c521e006a2f43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashIntHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;QuickHashIntHash :: loadFromFile ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12ea292f7e003c45b3541b95d02e68a87c28f645" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashIntStringHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;QuickHashIntStringHash :: loadFromFile ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="580ae9a081e542da89d9a13f4fa03e145514602b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashStringIntHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;QuickHashStringIntHash :: loadFromFile ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c9cb347eef4b52200204ba608d7d4c83c39f958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Application::__construct()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;Yaf_Application :: __ construct ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1216d9bfa061b36897b05af33b9ba44985b4200b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Map()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 &lt;strong&gt;Yaf_Route_Map ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce2abb482551ddda99aa93ca4b0d6be33ec4027e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Regex and named capture ground(as of 2.3.0)()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;Yaf_Route_Regex와 named capture ground (2.3.0 현재)&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32a78472c697ae03be57b2e2a7da9cdc1deb9ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Rewrite(as of 2.3.0)()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;Yaf_Route_Rewrite (2.3.0 기준) ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f5e96dcb8cf8b7ab57c06e883a7719a76aaf098" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_filter()&lt;/strong&gt; with &lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 3 &lt;strong&gt;array_filter ()&lt;/strong&gt; 와 &lt;code&gt;flag&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f08b272b9c9d03fb809a532668e611e0b85d3c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_map()&lt;/strong&gt; - using more arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;array_map ()&lt;/strong&gt; -더 많은 배열 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eff7b3ff851c636d3e5de96abf009b92e9831944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_merge()&lt;/strong&gt; with non-array types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;배열이 아닌 유형의 예 # 3 &lt;strong&gt;array_merge ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffb9dfc4c7141ad201d9b09fc892e8a0075a88d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_slice()&lt;/strong&gt; and array with mixed keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;array_slice ()&lt;/strong&gt; 및 혼합 키가있는 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c4df6702cb9c10bc70f86fa3da76a25d4c67ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;call_user_func()&lt;/strong&gt; using namespace name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 네임 스페이스 이름을 사용하는 &lt;strong&gt;call_user_func ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d758b837a2edb96c71d5a794fa02f35696df179b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;date()&lt;/strong&gt; and &lt;a href=&quot;function.mktime&quot;&gt;mktime()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 &lt;strong&gt;date ()&lt;/strong&gt; 및 &lt;a href=&quot;function.mktime&quot;&gt;mktime ()&lt;/a&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03cf9ebbf75dc5b1b8b6d4298a11263277de23eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;func_get_arg()&lt;/strong&gt; example of byref and byval arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;func_get_arg ()&lt;/strong&gt; byref 및 byval 인수의 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04806c900e3cc446a7df47d8b0db8e9e1c7aae1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;func_get_args()&lt;/strong&gt; example of byref and byval arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;func_get_args ()&lt;/strong&gt; byref 및 byval 인수의 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65a3f14282f5726cc9a35c64432eaab4370b1f67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;getopt()&lt;/strong&gt; example: Passing multiple options as one&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 &lt;strong&gt;getopt ()&lt;/strong&gt; 예 : 여러 옵션을 하나로 전달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4d41f03fb5be79b9cb49e40475f590ef78c642e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;gmp_setbit()&lt;/strong&gt; example - clearing a bit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;gmp_setbit ()&lt;/strong&gt; 예제-비트 지우기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba5260e29a94071ad8a22c41cfdb26136c9f2bdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;http_build_query()&lt;/strong&gt; with complex arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 복잡한 배열을 가진 &lt;strong&gt;http_build_query ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bb0ea6e9dae057bb9ca2b195ed907e41eb99953" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;imagefilter()&lt;/strong&gt; colorize example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;imagefilter ()&lt;/strong&gt; 색상 화 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e16f5aba029ca0dff1f7763d59ac60262c27468" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;in_array()&lt;/strong&gt; with an array as needle&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 배열을 needle로 사용하는 &lt;strong&gt;in_array ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5f069b29a07c8e1f9b57b5f47be1b120e2bbbec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;iterator_count()&lt;/strong&gt; in &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; loops&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 &lt;strong&gt;iterator_count ()&lt;/strong&gt; 에서 &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach는&lt;/a&gt; 루프&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba9d024f009647a4c6ce411ea9322721018d157b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;microtime()&lt;/strong&gt; and &lt;em&gt;REQUEST_TIME_FLOAT&lt;/em&gt; (as of PHP 5.4.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;microtime ()&lt;/strong&gt; 및 &lt;em&gt;REQUEST_TIME_FLOAT&lt;/em&gt; (PHP 5.4.0 기준)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02a29a697db9355db219c5d197449929dd160dd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;parse_ini_file()&lt;/strong&gt; parsing a php.ini file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 php.ini 파일을 파싱하는 &lt;strong&gt;parse_ini_file ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="167f49be933e355b371f5a67f936d5e402afd7b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;password_hash()&lt;/strong&gt; example setting salt manually&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;password_hash ()&lt;/strong&gt; 예제 소금을 수동으로 설정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56da65809632cb933e8c7ec70b01d560054e1219" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;pathinfo()&lt;/strong&gt; example for a dot-file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;도트 파일의 예 # 3 &lt;strong&gt;pathinfo ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="201aa4299cc8f631a26114f6f6a485aaa17f7c09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;preg_replace_callback()&lt;/strong&gt; using recursive structure to handle encapsulated BB code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 캡슐화 된 BB 코드를 처리하기 위해 재귀 구조를 사용하는 &lt;strong&gt;preg_replace_callback ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="938586c75c08de6bb9da79c7826536ff30122f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;setcookie()&lt;/strong&gt; and arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;setcookie ()&lt;/strong&gt; 및 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b80e08942a23a6632ed9f3378b530f0ed713441a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;socket_select()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;socket_select ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71d06c9f52e4deba78c5f0b5e88eaa38e56f8634" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;strtr()&lt;/strong&gt; behavior comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;strtr ()&lt;/strong&gt; 동작 비교&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7b28a1901396b31f6d5083e62beae4670b93f81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;token_get_all()&lt;/strong&gt; on a class using a reserved word example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 예약어 예제를 사용하는 클래스의 &lt;strong&gt;token_get_all ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee07bf591ffbd09b41c61d47043c7438764072a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;unpack()&lt;/strong&gt; example with unnamed keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 이름없는 키를 가진 &lt;strong&gt;unpack ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c844aae6d4b5a8a3a0f2a587a3e12fabc68a619" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;usort()&lt;/strong&gt; example using a member function of an object &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 객체의 멤버 함수를 사용한 &lt;strong&gt;usort ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bbe4ed2067654a53ae841429923672d663b7890" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;wordwrap()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;strong&gt;wordwrap ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bbcec31eba25603f15294088095b780aa3e2699" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 A &lt;a href=&quot;class.mysqli-result&quot;&gt;mysqli_result&lt;/a&gt; example comparing &lt;a href=&quot;class.iterator&quot;&gt;iterator&lt;/a&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 &lt;a href=&quot;class.iterator&quot;&gt;반복자&lt;/a&gt; 사용법을 비교 한 &lt;a href=&quot;class.mysqli-result&quot;&gt;mysqli_result&lt;/a&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd4ee329ded5b74740fdfdb83eeec9a4383909a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Accessing internal classes in namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 네임 스페이스에서 내부 클래스에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb97860bfa3e1a5f534bd61d972ca878751a8e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Add two e-mail addresses to a user&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 사용자에게 두 개의 전자 메일 주소 추가&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e41419b2faaa798bbc1470def8db15e364ffa039" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Alternate Precedence Order Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 대체 우선 순위 순서 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16f479eb045e0755514e9c90d510cc6ba1d442f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 인자 교환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e297c0391f420b6a39435d12ca99840080d70bed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Assigning a default value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 기본값 할당&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef7068f2d8d6e12fa0a548acf5ca11d246006164" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Autoloading with exception handling for 5.3.0+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 5.3.0+에 대한 예외 처리를 통한 자동 로딩&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f6d0ef7d67494ecc6c808995127a55b48c265fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Basic &lt;strong&gt;substr()&lt;/strong&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 기본 &lt;strong&gt;substr ()&lt;/strong&gt; 사용법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00d83db1b8e4a783433b23b56d9d34560d774fa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Beware when adding months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 개월을 추가 할 때주의하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d605c2189b61186ea270b3230cefdcd04a59d2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Beware when subtracting months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 달을 뺄 때주의하십시오&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ccc7e4cc01b737fe2dfc5adeae992ed5ea80e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Bit shifting on integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 정수에서 비트 시프 팅&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf7a11c529d9afd9ab8dacdd6fc383bb6a204b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Building a UTF-8 string from individual bytes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 개별 바이트에서 UTF-8 문자열 빌드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eba5ff2fa2f65aec3bc663a518c88ec97235390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 CASE_FIRST rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 CASE_FIRST 규칙&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4404cd93669a08c876362fc0df0f4c23df08eaff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Call a stored procedure with an INOUT parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 INOUT 매개 변수를 사용하여 저장 프로 시저 호출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="829a65e1c47cf49c6cb04b614aecbd9c68fc3a84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Calling a parent's method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 부모의 메소드 호출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="288b629feb280b513353df7396191bf21f05418c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Calling sandbox functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 샌드 박스 함수 호출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7b4e6f6b24404f37a89ec5cae375e8acba8e027" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Connect on a specifed port.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 지정된 포트에 연결하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8af398acf8e707bef81dd5941f3576fe56296fca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Constant Declaration as of PHP 7.1.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 PHP 7.1.0부터 상수 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="804ae5fb683555736cd125b97bc95274d58ea7e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Construction order&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 # 3 시공 순서&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17ac020251cf4538fc7a1a14394123b723a15217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Create a PDO instance using an alias&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 별명을 사용하여 PDO 인스턴스 작성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5dbfad8563dc381d9b706dc38820a5c4cf73ca4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Create a complex gradient from the polynomial (4x^2 - 4x^2 + 1) modulated by a sinusoidal gradient &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 정현파 그라디언트로 변조 된 다항식 (4x ^ 2-4x ^ 2 + 1)에서 복잡한 그라디언트 만들기 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3b55ffcbd5975fd78236b0ffcbaf7ce52bb7a8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Creating an instance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 인스턴스 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30997402c1ed14cd0a5c9257412f4408f7dea2f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Cross platform compatible example using the &lt;em&gt;%e&lt;/em&gt; modifier&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;em&gt;% e&lt;/em&gt; 를 사용한 크로스 플랫폼 호환 예제&lt;em&gt;&lt;/em&gt; 수정자를&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b582b8a1dec8c2f9b37525594f994bb71aff598" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Declaring an encoding for the script.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 스크립트 인코딩 선언.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f918b1a7c1ad3a7fcc082df152f2d54043e198cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Declaring multiple namespaces and unnamespaced code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 여러 네임 스페이스와 네임 스페이스없는 코드 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="601eb69e63e04a9235c4dc7a53d3f6346e6a309d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Destructor Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 소멸자 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a3afa206af5246388b14e2f8aba086fd5f1c6df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Erode &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 &lt;strong&gt;Imagick :: morphology () 지우기&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45c54df1726ee27db42a84da4a865bc953769209" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example demonstrating superglobals and scope&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 슈퍼 글로벌과 범위를 보여주는 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2ca5048ba4a58fbdbc841251188e73ab4d0c064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example with &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; argument&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; 인수 를 사용한 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="011819bcdeda73b6b67928c38ad83507349ab40b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Execute a prepared statement with an array of insert values (placeholders)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 삽입 값 배열 (자리 표시 자)을 사용하여 준비된 명령문 실행&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54383a095d8bc473fafcbf882c6e78e185095cfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Expectations without a custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 사용자 정의 예외가없는 기대&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0311cdb873809f3733ae6d92166ef44a8efacc15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Finding the month a week is in&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 일주일 찾기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4db24ceff742acf2ecb4982263ee32011ae4e79d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Format string with literal characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 리터럴 문자가있는 형식 문자열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed81a63c023fd3b6c15dcc61c880476f4f42df1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Functions within functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 함수 내의 함수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23f822db0145da57b25017eeb9df088367f1c6f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Get the column of usernames from the public &quot;username&quot; property of an object &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 객체의 공개 &quot;username&quot;속성에서 username 열을 가져옵니다. &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="118f50c75324615bfeb203fb9b3cbe0eb4f88379" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Getting the domain name out of a URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 URL에서 도메인 이름 얻기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b81888c0630cb4fa31beb5c9176648bed2fb0df3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Grouping all values by a single column&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 모든 값을 단일 열로 그룹화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b72e3a73c6f4e875e88d7c5bf36242bca4d3275" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Heredoc string quoting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 Heredoc 문자열 인용 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91184091b1a2a1ab0184ffb7f2367a75d397c191" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Hourly watcher&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 시간별 감시자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b035e927dd40373a39b9da2ba2bd9ecb6c93cf8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Importing and dynamic names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 가져 오기 및 동적 이름&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea4db4c95fadf882bc74a320ce2764d83b2466f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Inheriting variables from the parent scope&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 부모 스코프에서 변수 상속&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a83ddb50bc01cbdce4eadd5affaa7a486496cd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Integer overflow on a 64-bit system&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 64 비트 시스템에서 정수 오버 플로우&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b81880694fe3bcdbf26abd0857aeb03341f69ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Iterable return type example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 반복 가능한 리턴 유형 예제 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="612db78ed02d3ca1e02bfe32175032d7c9440fd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 JSON_NUMERIC_CHECK option example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 JSON_NUMERIC_CHECK 옵션 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff929528457db9fc71afb0cd44c901c450b3fa43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Last day of a month&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 # 3 마지막 달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb8bc1c062a8351c7c6c36529d880f680be8680a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Load class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3로드 클래스 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0da699e8d87dfee84ffcbe992108f726daf3a29b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Midnight sun&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 한밤중의 태양&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ccf5733ef8dec54152e08897d7858ec438f71ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Mixed &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; and &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 혼합 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 및 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 키&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7f264eff463aaff92745669d376a3ae08929d79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Multiple interface inheritance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 다중 인터페이스 상속&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="553c92929898fb77736f52b6047604507e602891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Namespaced ::class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 네임 스페이스 :: 클래스 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f23c6d14bd8be6de8a132c4aae3beb5680a4953c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Object Iteration implementing IteratorAggregate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 IteratorAggregate를 구현하는 객체 반복&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68737ef7441753381be375536407e02d76b021b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Old methods of accessing user input&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 3 사용자 입력에 액세스하는 기존 방법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7920612ad10165b40aa9e65b9e4896329111545d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Outputting the image at 75% quality to the browser&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 이미지를 브라우저에 75 % 품질로 출력&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04506f73fd70d4425ff983aaf3088b46dafe54ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Outputting the image with a different foreground&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 전경이 다른 이미지 출력&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22fd54d8fd7282f2906d0bd523b7ae27f44dd05b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Overriding the cookie lifetime&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 쿠키 수명 재정의&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="deac3e59729a63bf5906ef03fe2942eea5c41f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Printing all the credits&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 모든 크레딧 인쇄&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fd8596cea450b06eefc1d8cbc5fc5daf22edfc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Quoting a complex string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 복잡한 문자열 인용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f45b20a5f15bc01f3144e13d041e7a4fa3b8944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Reading a section of a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 파일의 섹션 읽기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5574650f084b48c9640c0555afa1fddc7d07c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 References and foreach statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 # 3 참고 문헌과 foreach 문&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3aabd27efc21fa45612c1666831980448e38023" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Remote &lt;strong&gt;fread()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 원격 &lt;strong&gt;fread ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb8053e094d2af75bbcc00380fd1256d5dff8db2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Replace URLs with links&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 URL을 링크로 교체&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70069ddc16a971c7fd4d0aa795dacce40ab142cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Replacing several values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 여러 값 바꾸기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7909c60e1312e82af22eff749d7862e0a3e7d531" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Resuming a download at position 100 to a new file with &lt;strong&gt;ftp_nb_get()&lt;/strong&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 &lt;strong&gt;ftp_nb_get ()&lt;/strong&gt; 을 사용하여 위치 100에서 새 파일로 다운로드 재개&lt;strong&gt;&lt;/strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e8f11399b6329edb979a31fd543e3284d8f7d80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Retrieving owner document&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 소유자 문서 검색&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d69ca07f317605b2ca0212c0790dd15471005708" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Returning a reference from a function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 함수에서 참조 반환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="051852cabb2d9b723b2e7a4f1d0e9bc57ab9885e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Rewrite rule for Lighttpd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 3 Lighttpd에 대한 다시 쓰기 규칙&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e5ccbd2a9c90a32f372f5383299a6233761ef16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 SPARSECOLORMETHOD_SPEPARDS &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 SPARSECOLORMETHOD_SPEPARDS &lt;strong&gt;Imagick :: sparseColorImage ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fc10e07823b3a540f0a85d7cd838db93f716e29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Sending mail with extra headers as &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 추가 헤더가있는 메일을 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 로 보내기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="563c7e61df80dc207e2b3c10dab9ac3066fe1d6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Shutdown functions and destructors run regardless&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 셧다운 기능과 소멸자는&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd808ce65e7c507e56ce5d040d610db666bb764f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Sorting database results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 데이터베이스 결과 정렬&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11a0f51d908feb7a62f4f078e9e6d9af7345afb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Splitting a string into matches and their offsets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 문자열을 매치와 오프셋으로 나누기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86d605b1d8c763fb917261512023d565c723cc6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Stream wrapper and image, can be used with the xml function as well&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 스트림 래퍼 및 이미지는 xml 함수와 함께 사용할 수 있습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1629d9a96eeef27394c4bece7537068283bdd9b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 This will not work&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 작동하지 않습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0be896c1775eae2a6b139fc99d465ce833ad471" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Throwing an Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 예외 발생&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09da7de0bce77106a3e83846d08f5e4322818d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Use of default parameters in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 함수에서 기본 매개 변수 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec8818d82f96c6709ad78a2d5be231a9835317a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke () 사용&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20ec0536f3ac3ed5c4f2fbd899377ab82703c340" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state ()&lt;/a&gt; 사용 하기 ( PHP 5.1.0부터)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12296fcc7de70167e6e86a3aeab20c850fa67240" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;em&gt;instanceof&lt;/em&gt; to check if object is &lt;em&gt;not&lt;/em&gt; an instanceof a class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;em&gt;instanceof&lt;/em&gt; 를 사용하여 object가 클래스의 인스턴스 가 &lt;em&gt;아닌지&lt;/em&gt; 확인&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6babc6ff6c62e0edcb768d093b86d90ec50eef5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;crypt()&lt;/strong&gt; with different hash types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 3 다른 해시 유형으로 &lt;strong&gt;crypt ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26784abf134b4037d1631574a60157686f7be4a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;get_class()&lt;/strong&gt; with namespaced classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 네임 스페이스가있는 클래스와 함께 &lt;strong&gt;get_class ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a61b81f8f3b3696ec4690f9441b4c07cce68f4ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using a non &quot;string&quot; needle&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &quot;현&quot;바늘이 아닌 바늘 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6696cc557473b2ed3fec270b861578c1cfaade6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using an offset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 오프셋 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b3af34e7c4646acae0ffa4b84056438316beffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using anonymous functions as callback functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 콜백 함수로 익명 함수 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49c98dcaf6ac2d7ffc1a4132480975642f4f9c26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using lambda function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 람다 함수 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a67cd57cbb13d61de67eca0ab0e5d547ff4849d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using named subpattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 명명 된 하위 패턴 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c999e6d62a7c5b655dd5fdb61f95c3d41c1cfd0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using nested &lt;strong&gt;list()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 중첩 된 &lt;strong&gt;list () 사용&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d43afd42e1e6ef8cc4e5a3c4126412058f1fbc24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Variable method example with static properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 정적 속성을 가진 변수 메소드 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d1b944209b7cad95521aaf648632a2e79b562c6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Various newline separators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 3 다양한 개행 구분자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15f4f540d65eb3a6a73c534f021bc463a26af3bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 With &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; 객체&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="237b0596f2a79ef84e19663488bff721597bb837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Yielding &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 열매를 산출 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 의&lt;/strong&gt; 의&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="faf2ddd9fbfce66427a2a8fc0181e4af4f2a7830" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 common mistakes using &lt;strong&gt;json_decode()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;json_decode ()를&lt;/strong&gt; 사용한 일반적인 실수들&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56eaa8e5d3d1bce13dfefe73febecfce1fda6906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 getimagesize (URL)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 3 getimagesize (URL)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b853698d3d80da91c71397f756d6b165e54ea13b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 parsemoldb.php - parses moldb.xml into an array of molecular objects &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 3 parsemoldb.php-moldb.xml을 분자 객체 배열로 파싱 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa01169aecf99dc2f16d8ff354de7a2516df7d5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 using __NAMESPACE__ for dynamic name construction&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;동적 이름 생성에 __NAMESPACE__를 사용하는 예 # 3&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fca5d63d5b143b5f0a91b0e513eedc42b984c718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;code&gt;depth&lt;/code&gt; errors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 &lt;code&gt;depth&lt;/code&gt; 오류&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6b38ebdd8114c776e200cd834255c5b2ed665bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;&lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt;&lt;/strong&gt; example for Memcached v1 and v2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 Memcached v1 및 v2에 대한 Memcached &lt;strong&gt; &lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt; &lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c04c4569a4ba78100ae39add99c4b80bf338d629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 &lt;a href=&quot;language.types.string&quot;&gt;문자열을&lt;/a&gt; 반환하는 &lt;strong&gt;JsonSerializable :: jsonSerialize ()&lt;/strong&gt; 예제 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c77f43db153e76bdd5db8a6a493ceb3f5fbe301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;Yaf_Route_Regex()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 &lt;strong&gt;Yaf_Route_Regex ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dfd711134c3be0c017d46c54d7e19a197b088b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;date()&lt;/strong&gt; Formatting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 &lt;strong&gt;날짜 ()&lt;/strong&gt; 형식&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e55e7feae87019883368a869799bd3e6dbc022be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;getopt()&lt;/strong&gt; example: Using &lt;code&gt;optind&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 &lt;strong&gt;getopt ()&lt;/strong&gt; 예 : &lt;code&gt;optind&lt;/code&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac2b4057b0f47e8da7e7686ace7eb949556afcd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;imagefilter()&lt;/strong&gt; negate example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 &lt;strong&gt;imagefilter ()는&lt;/strong&gt; 예를 부정합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="883961d61d54fdbc0ab1a2582c9c7c90ca29dcc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;password_hash()&lt;/strong&gt; example finding a good cost&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;좋은 비용을 찾는 예제 # 4 &lt;strong&gt;password_hash ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d126c5c8b1d41f46b78535595688640fb59b864" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;substr()&lt;/strong&gt; casting behaviour&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 &lt;strong&gt;substr ()&lt;/strong&gt; 캐스팅 동작&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="213ca1375e11917cb695e203c99e3a32e6ad9478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;usort()&lt;/strong&gt; example using a &lt;a href=&quot;functions.anonymous&quot;&gt;closure&lt;/a&gt; to sort a multi-dimensional array &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 다차원 배열을 정렬하기 위해 &lt;a href=&quot;functions.anonymous&quot;&gt;클로저&lt;/a&gt; 를 사용하는 &lt;strong&gt;usort ()&lt;/strong&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c645eb24b12b038b153e369ae293b8ef1c23ce8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing an array inside double quotes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 큰 따옴표 안에있는 배열에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="694d17515a14931d5db0b953e54da4198229283d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing internal classes, functions or constants in namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 네임 스페이스에서 내부 클래스, 함수 또는 상수에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df7e1ec90553a3f270355a0d7fda9e5280e41fe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing private members of the same object type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 동일한 객체 유형의 개인 멤버에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f62e8a5deb5ed7f43feb6eda7a1a75e38872a3bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 인수 교환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84f058c3095baefef0f974eda22e1818b9e6c7d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Autoloading with exception handling for 5.3.0+ - Missing custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 5.3.0+에 대한 예외 처리를 통한 자동 로딩-누락 된 사용자 정의 예외&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="264a949538d40b3f8a29e6dff98d0a55fcf7c515" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Basic return type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 기본 리턴 타입 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a0e8993260c2e66a78f49c6add127c85a8733f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 CASE_LEVEL rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 CASE_LEVEL 규칙&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86446c4476f75e71d7b409db85fa6e4fc491bd9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Case insensitive sorting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 대소 문자를 구분하지 않는 정렬&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60678a5c21f6b0396584d870b646b61b9f005059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Change a user's password&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 사용자 비밀번호 변경&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c2a9c3e00cc695634ef07fdc21a39c5a791f086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Closures and scoping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 4 클로저 및 스코핑&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa781d50dc30aca38c13a9efa917e69832c0e103" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Comparing return value of include&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 include의 리턴 값 비교&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49e6cfeebd42c026c838a36ba8537e093bf1f17e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Complex callables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 복잡한 콜 러블&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cffa40d8a9343e13b3e4b30a0d362042855d012" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Constant expression example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 상수 표현식 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0587ba2dcb18a21a6c903913181eab3561f92eb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Creating an array of arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 배열 배열 만들기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="743189b554d53f72082d8120fbcb98af64f8b82b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Declaring multiple namespaces and unnamespaced code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 여러 네임 스페이스와 네임 스페이스없는 코드 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="767842190432fd576c3bcc8f2854e38323191ae4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Display all known and unknown formats.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 알려진 형식과 알려지지 않은 형식을 모두 표시합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88cb509e54a76512d5c387f3382140f2d8cd08b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Erode Intensity &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 침식 강도 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38e7c1ea2093623f509a1ffbe892e3142367e920" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Example demonstrating need for static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 정적 변수의 필요성을 보여주는 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37b67ed23400c2ad043e1c074c6d54144782e24f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Exception handling with a &lt;em&gt;finally&lt;/em&gt; block&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 &lt;em&gt;finally&lt;/em&gt; 블록 &lt;em&gt;으로&lt;/em&gt; 예외 처리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fc7837a5071001d184d93e1ba31ce349c680fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Execute a prepared statement with question mark placeholders&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 물음표 자리 표시 자와 함께 준비된 문장을 실행&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57735942fb252f0515f58cb940ccf26dca7c47eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Expectations with a custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 사용자 정의 예외가있는 예상&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84c9c8b11e7d4ab1fe64c38051a2b74eba1d24af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Forwarding and non-forwarding calls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 착신 전환 및 비 착신 전환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7347ee04ce7dcc0505fbff16eca574e4a3b18db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Get the column of names from the private &quot;name&quot; property of an object using the magic &lt;strong&gt;__get()&lt;/strong&gt; method. &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 magic &lt;strong&gt;__get ()&lt;/strong&gt; 메소드를 사용하여 객체의 개인 &quot;name&quot;속성에서 이름 열을 가져옵니다 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5057839f9690873aa7405b4925ceca43d8652fa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Heredoc in arguments example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 인수 예제의 Heredoc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aa279029fca0809730abb705151c071783560f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Importing and fully qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 정규화 된 이름 가져 오기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a8fbbce2e7460bb113c1a78469b7ae2eca7e86f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Indexed arrays without key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 키가없는 인덱스 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b32ab5fba2e67951fd90a2628b563ccc65b822e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Instantiating a class for each result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 각 결과에 대한 클래스 인스턴스화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6042b662c9cb328667860e31b5ab5fd65ce51538" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Interfaces with constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 상수를 가진 인터페이스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd6d4034a67830f27ae6e7bba646b082520d2773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Iterable generator return type example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 반복 생성기 리턴 유형 예제 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4293bd08eb57cf8c1545da8b2ad21e5e30c2e4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Load namespace class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 네임 스페이스 클래스로드 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f51e147b76505c15193de490563db8f209b9cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 More complex form variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 더 복잡한 폼 변수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="986d8af14696a64da46cee6fd66877a7076e3077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Multiple Traits Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 4 다중 특성 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d44ff4b44d53dd3eaba88d5a827d3e34a08ec0b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Non-obvious Ternary Behaviour&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 4 : 명백하지 않은 제 3의 행동&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb744c41dfd4a35f8cc19b7b4b4dfb70457efde7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Object Assignment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 객체 할당&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e772949384e937349096068474c82b55059ebbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Passing arguments to sandbox functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 샌드 박스 함수에 인수 전달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b22babc9acd44aa461b3cc3b24c1159a694225b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Passing values by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 참조로 값 전달&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb883d9916d2896f54720cfb1dc11021e8a4c912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Reading the session and closing it&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 세션을 읽고 닫습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a6476fab04f3477995d1fac11cd33435f5b71fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Recursive functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 재귀 함수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb500b82ef31846a41cd39190f110a2d64922ee7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Rewrite rule for Nginx&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 Nginx에 대한 다시 쓰기 규칙&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2addc5131e251d8bbaea590aa9154d3aa750deed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 SPARSECOLORMETHOD_VORONOI &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 SPARSECOLORMETHOD_VORONOI &lt;strong&gt;Imagick :: sparseColorImage ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8320fa2159c6ffe9a7ebd3ea1dcb217e76ab38a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Sending mail with an additional command line parameter.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 추가 명령 줄 매개 변수를 사용하여 메일 보내기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae257df7c88291531ba1031da2718ea44ab18259" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Sequential versus non-sequential array example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 순차 및 비 순차 배열 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bd50189ef67a5fbb4a41d2565c498622dc55e1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Strip whitespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 공백 제거&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb43741bcd127f23a78943691d0a90bb2b38b56b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state ()&lt;/a&gt; 사용 하기 ( PHP 5.1.0부터)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7db6c371d02e04612029b36466c193cf6ff1e2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;em&gt;instanceof&lt;/em&gt; with interfaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 인터페이스와 함께 &lt;em&gt;instanceof&lt;/em&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53180981dd8a4f9ef57f9784e8b8a92af945421f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;strong&gt;http_build_query()&lt;/strong&gt; with an object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 객체와 함께 &lt;strong&gt;http_build_query ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2596a72873c658f3c650ed7ba8a4d309c782c8e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;strong&gt;list()&lt;/strong&gt; with array indices&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 배열 인덱스와 함께 &lt;strong&gt;list ()&lt;/strong&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97069ed7cb0793a5d4e9778b7692da0932f61b36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using a class method with &lt;strong&gt;call_user_func()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 &lt;strong&gt;call_user_func ()&lt;/strong&gt; 와 함께 클래스 메소드 사용&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d2c61db89e16c43f6461d88e654457e7ab8b8d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using named subpattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 명명 된 하위 패턴 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5853605d575c94e2c9e719a507e106b8a0e03a02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using non-scalar types as default values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 4 스칼라가 아닌 타입을 기본값으로 사용하기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f70d8d1638d547149e61f3a91841243ee5bcc2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using stream contexts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 스트림 컨텍스트 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56580b505ad2e70a6f313b0bf14d218eac10fd2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Yielding values by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 4 참조에 의한 수율&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e23c4c24d9ea8de0631211941e957492905260b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 getimagesize() returning IPTC&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 4 IPTC를 반환하는 getimagesize ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d34be0de0d742688d70d2368e54763273439746f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 the namespace operator, inside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 4 네임 스페이스 내부의 네임 스페이스 연산자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3acc67e46d71015019b0577f6df284d1b278f738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt;(default route)example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 5 &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt; (기본 경로) 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6831aec55adf69e6c8bc89b7069cc8da2e83eba0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;em&gt;include&lt;/em&gt; and the &lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt; statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;em&gt;include&lt;/em&gt; 및 &lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt; 문&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76be70222be580ecc5bed343f16dfb79f8af756c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt; option example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 5 &lt;strong&gt; &lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt; &lt;/strong&gt; 옵션 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="521a27d607b3ce5f61886f8685897b57e56e7e03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;array_map()&lt;/strong&gt; - with string keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;strong&gt;array_map ()&lt;/strong&gt; -문자열 키&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="226010a76bc30b2c4e04cd5ba3c5326f7cb4ae81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;imagefilter()&lt;/strong&gt; pixelate example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;strong&gt;imagefilter ()&lt;/strong&gt; 픽셀 화 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="257295346ed4ee26ca3cc048d437fa74990ebd4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;json_decode()&lt;/strong&gt; of large integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 큰 정수의 &lt;strong&gt;json_decode ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="610e572ef6a884cfdb0a54e8730ad7d30400c391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;list()&lt;/strong&gt; and order of index definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;strong&gt;list ()&lt;/strong&gt; 및 인덱스 정의 순서&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17925b7c0697b51b876814c9ba3ee2f0dd14ea7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;password_hash()&lt;/strong&gt; example using Argon2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 5 Argon2를 사용하는 &lt;strong&gt;password_hash ()&lt;/strong&gt; 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03d8eb38d26a9787089cbc5139f4aea646332015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;yield from&lt;/strong&gt; with &lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 5 &lt;strong&gt;에서 수율&lt;/strong&gt; 로 &lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array ()&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="995e266994f5f115f7c1b5bfd21d36aa0bb14a8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 A &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;a href=&quot;function.setcookie&quot;&gt;setcookie ()&lt;/a&gt; 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81b40e435082e45924d728383d3b0f198cc1a290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Assigning a default value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 기본값 할당&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3bc8f694eb0881f293be8b77f6c7bd949a69b1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Automatic binding of &lt;em&gt;$this&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;em&gt;$ this의&lt;/em&gt; 자동 바인딩&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8409eb28492c1ca25f8610c475b4050c164e84ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Calling a function for each result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 각 결과에 대한 함수 호출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86d6daad04c588d3fae011cbb58852ae0757aa69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Change a user's password (Active Directory)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 5 사용자 비밀번호 변경 (Active Directory)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab0629a99968d83fe753fb21a0f7e15353d0e912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Class constant visibility modifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 클래스 상수 가시성 수정 자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd0994cd322141256e1c1918e6be42ef0eacdc78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Conflict Resolution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 # 5 갈등 해결&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f2a98740c8c9c46857330e8217811ce26eb32a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Creating new objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 새로운 객체 생성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d71c831d950d4d6a7f929627c634e80def4a788e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Dilate &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 5 &lt;strong&gt;: Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24b447119355d5d5b1c9355954bab71edf7b7214" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Example use of static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 5 정적 변수 사용 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad3c61394e2032c9e62c89d65b25d56da365f7ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Execute a prepared statement using array for IN clause&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 5 IN 절에 대해 배열을 사용하여 준비된 명령문 실행&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10446a7daf7b6ab1a5be489d16ea5192184a5f8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Fully Qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 5 정규화 된 이름&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="949847cae36debeb583547f36317c04616575dff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Illegal importing rule&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 잘못된 가져 오기 규칙&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebafaa223f72f8c64c56660f447b5faea223cb36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Incorrect usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 기본 함수 인수의 잘못된 사용법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7f570a9c2d016ceaaa80035881940889abf0935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Iterable type variance example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 반복 가능한 타입 차이 예제 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e7a068c90f9fc977333d80f98e2e641b4802391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Keys not on all elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 모든 요소에있는 키는 아님&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01ef1df8168b73858e5425e442e5d6b0c6326027" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 MVC class loading example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 MVC 클래스 로딩 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85931308f3bc8a6a7b638e1e5ba883c920d6640c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Nested Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 중첩 예외&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="984634c5501a9b717db8b2f1c1641d7ff3d51c3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 SPARSECOLORMETHOD_BARYCENTRIC &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 SPARSECOLORMETHOD_BARYCENTRIC &lt;strong&gt;Imagick :: sparseColorImage ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f770cd6b38ffd6dcb5af5ce17a3538fca645e142" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Sending HTML email&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 5 HTML 이메일 보내기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27812c82a3ad767161062594c9393ffd44eab971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Specifying padding character&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 5 패딩 문자 지정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85b0d003e846595425c648e22a6f9f28351b316d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Strict mode in action&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 5 : 엄격한 모드 작동&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b71ce744eec24a6effd63b6b40ff42629f6fa396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo () 사용&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="844b26d06cc5920d8a580992e0a7155195fb55a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;em&gt;instanceof&lt;/em&gt; with other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 5 다른 변수와 함께 &lt;em&gt;instanceof&lt;/em&gt; 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d015425c842ee54dd5cf1f0d29df710229e5ff6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using Heredoc to initialize static values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 5 Heredoc을 사용하여 정적 값 초기화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e71ee85bedf4647b6c7f3c0660f8c25d9f633e63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using lambda function with &lt;strong&gt;call_user_func()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;strong&gt;call_user_func ()&lt;/strong&gt; 와 함께 람다 함수 사용&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e23d36a78ca578fdf95e2b777067b79c1ed6e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using the &lt;code&gt;count&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 &lt;code&gt;count&lt;/code&gt; 매개 변수 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a56b435ddd7e97a4d5cd63c03752dd6c71a74fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 the namespace operator, in global code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 5 글로벌 코드에서 네임 스페이스 연산자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e565b16d760c1a1be40ec22bb2d62fe01033af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 &lt;strong&gt;list()&lt;/strong&gt; with keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 6의 &lt;strong&gt;리스트 ()&lt;/strong&gt; 키&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e4994906ba0465b1f1c4bed47b4ef422d5ac7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Access member of newly created object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 6 새로 생성 된 객체의 액세스 멤버&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5265b3e6ed2b223318bc2084cb772e391fccdde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Accessing array elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 배열 요소에 액세스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb2d15aa94c36863c9636fe97c7ee06036e4de2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Attempting to use &lt;em&gt;$this&lt;/em&gt; inside a static anonymous function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 6 정적 익명 함수 내에서 &lt;em&gt;$ this&lt;/em&gt; 를 사용하려고 시도&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e42cc25b3641832cfbb65df4cf4271f7f4a206f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Basic use of &lt;strong&gt;yield from&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 6 &lt;strong&gt;:&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccddc32cdb80b7be849ad2c49f3d388eb23bf599" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Changing Method Visibility&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 메소드 가시성 변경&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e93ae301856c5634b41832b349059419561d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Correct usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 기본 함수 인자의 올바른 사용법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28ef338073d175f81ae333969b6b48da0fce611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Dilate intensity &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 6 팽창 강도 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f98a5c805ce0b33a10965ca936e1256b3cc3e600" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 MVC class distinctions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 6 MVC 클래스 구별&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb2c57094b2bba6f09a02699472bb42abdf89bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Multi catch exception handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 멀티 캐치 예외 처리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46e29f7cc8dd7ee682928053a0220a8e99bf8784" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Nesting null coalescing operator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 중첩 null 병합 연산자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c52b520b5a5d21b2a874c9bc653a7b7d22d919d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Position specifier with other specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 6 다른 지정자와 함께 위치 지정자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec5a6188482d2efc49c5299551a8ef57f20d2ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 6 정규화 된 이름&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9615c92ec4c7255a094632bd693395c010e7ca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Returning an object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 객체 반환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2db1400a6033cfc52d55fcdd69a7f7e1a092c69b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Static variables with recursive functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 6 재귀 함수가있는 정적 변수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79927a81ee16dcc05e98ee2925f5eebf3bb669bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using &lt;em&gt;instanceof&lt;/em&gt; to test other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 &lt;em&gt;instanceof&lt;/em&gt; 를 사용하여 다른 변수 테스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc515c5815e245a05ce31de6cba359671ec8d80e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using double quotes in Heredoc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 6 Heredoc에서 큰 따옴표 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab06e8dc3bb60fbbe074366ecb31bfa817da38c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using output buffering to include a PHP file into a string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 출력 버퍼링을 사용하여 PHP 파일을 문자열에 포함&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c21a36872ca8d40a449daa1766d2b444c61579e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 createGradientImage is used by other examples. &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 6 createGradientImage는 다른 예제에서 사용됩니다. &lt;strong&gt;Imagick :: sparseColorImage ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9ad6aea31ed180961c5cb2cd38b1a9825846666" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;: various examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 &lt;a href=&quot;function.printf&quot;&gt;printf ()&lt;/a&gt; : 다양한 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd1491a44507e731530d7d6059692eb92fb6c08c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 &lt;strong&gt;yield from&lt;/strong&gt; and return values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 &lt;strong&gt;수율&lt;/strong&gt; 및 반환 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99394c085583adca22543b9054947dfa8bd2156a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Array dereferencing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 배열 역 참조&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90445a97aa1955beb151d99438016809636a5064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Attempting to bind an object to a static anonymous function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 7 정적 익명 함수에 객체를 바인딩하려고 시도&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="090159e08cbfb9988687a3a6673713eeb567c92d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Avoiding classname lookups and fatal errors with &lt;em&gt;instanceof&lt;/em&gt; in PHP 5.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example # 7 PHP 5.0에서 &lt;em&gt;instanceof&lt;/em&gt; 로 클래스 이름 조회 및 치명적인 오류 방지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="403c542e6ada7ec22a714b24f03a73d7b68cd7b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Basic class type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 기본 클래스 타입 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aebda1f57216ef4eec626f284b5bb29214fb7c6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Declaring static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 정적 변수 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f2d1df63a6268db7f0bad3631f6204275fed46a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Distance with Chebyshev kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 체비 쇼프 커널과의 거리 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53f8fae0b9dbe0c9c4aaba7040ab9f5c8a852327" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 MVC loading example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 7 MVC 로딩 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00b6a779069ca46956997dd9b5386500cb8e4081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Nowdoc string quoting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 Nowdoc 문자열 인용 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8468235df9dcc1eff2414026090532e5b23f412" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Property access vs. method call&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 7 프로퍼티 액세스와 메소드 호출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d95757040a1e1150f36bae445c2f60462728b0be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Traits Composed from Traits&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사례 # 7 특성으로 구성된 특성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e7b29e21f0e1ea7fc1b11bf269892f90e4ae5b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Unqualified class names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 7 정규화되지 않은 클래스 이름&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5515b84edc59fecfb4212c95b00dd19d0b2f6258" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;: string specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 8 &lt;a href=&quot;function.printf&quot;&gt;printf ()&lt;/a&gt; : 문자열 지정자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34bd705f5a5f5d8b8c8e549afbb5dda55f3df715" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Basic interface type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 8 기본 인터페이스 타입 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c7a37bf108c8f9af20c9f9d187eec5ab0acbe35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Calling an anonymous function stored in a property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 8 속성에 저장된 익명 함수 호출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79182a32c0bce69a0ce59569625c283089cd847f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Distance with Manhattan kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 8 맨해튼 커널과의 거리 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5855ce424e9422b1f2819acd2f23e44bd335d6cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Express Requirements by Abstract Methods&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 8 추상 방법에 의한 표현 요구 사항&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9cfb8a07bd2306236c1857a1019fbce8c95edd95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Static data example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정적 데이터 예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a24fba9290c7f14ebb68e0b13b934cf33c37f5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Unqualified function or constant names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 # 8 규정되지 않은 함수 또는 상수 이름&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a50cc80720e13918d640a63e104bd60906eabac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Using array()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 8 array () 사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afcc6b4ad2ba1da1226628b2c9d27c56e8597556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 &lt;strong&gt;sprintf()&lt;/strong&gt;: zero-padded integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 9 &lt;strong&gt;sprintf ()&lt;/strong&gt; : 0으로 채워진 정수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f0b1f85a420944d026810d6c7a61ed5031d0081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Collection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;실시 예 # 9 수집&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4211ccf8af0e61ba89b69bd408d3e42d4d6a08ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Dangers of using namespaced names inside a double-quoted string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 9 큰 따옴표로 묶인 문자열 내에서 네임 스페이스 이름을 사용하는 위험&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6a51501f1c78aa43469389c6f9ac8ee3724e0e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Distance with ocatagonal kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 9 팔각형 커널과의 거리 &lt;strong&gt;Imagick :: morphology ()&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed7213ecea93113c76cab84258ac62fd14e3c4de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Nullable type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 9 널 입력 가능 유형 선언&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ec84fcf7958245ea932f8e33b3a245a804142c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Simple Class Inheritance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 9 간단한 클래스 상속&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7e557fdcd81c4b47fff7a1da928cad0dab4e97b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Simple syntax example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 9 간단한 문법 예제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="edc3e5200eaf9dd5c6b166574e8f7fd03555fbef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Static Variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예제 # 9 정적 변수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ea0b19bcbb6f9ede718d873e272f8daf1ba19a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exception&lt;/strong&gt; is the base class for all Exceptions in PHP 5, and the base class for all user exceptions in PHP 7.</source>
          <target state="translated">&lt;strong&gt;예외&lt;/strong&gt; 는 PHP 5의 모든 예외에 대한 기본 클래스이며 PHP 7의 모든 사용자 예외에 대한 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="074052f1b11c47ef8e47dd6b3d480afa2c8e3a8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exception&lt;/strong&gt;implements&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;예외&lt;/strong&gt; 는 &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="155669af023af4d3cc9cb683b6f5f12d97482b41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FilesystemIterator&lt;/strong&gt;extends&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;FilesystemIterator는 &lt;/strong&gt;&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator를&lt;/a&gt; 확장 하여 &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cdb06c463f0b3b379522777b911659b70d1ae7b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FilterIterator::next()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FilterIterator::next()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffc37d7c4c67a04b62d8eddd8dc145e3e7e9f1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flag values for msg_receive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;msg_receive의 플래그 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb6b27376c897c93ca34ef6983c56f013ef7da89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Font file format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;폰트 파일 형식&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9209ce4d4c2ff032fcad9856308fac5dee95ca35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full &lt;strong&gt;ob_get_status()&lt;/strong&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;전체 &lt;strong&gt;ob_get_status ()&lt;/strong&gt; 결과&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f205a702d05a13d9db682eb9ee34aeae7a1b8e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GMP&lt;/strong&gt;implements &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GMP&lt;/strong&gt; 는 &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2dfdda9f2f26bb785e1cf5acdbfbb667e449ea73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanClient&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanClient&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="cdb33891580a267ced868c6c2ee34f852fcc4cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanException는&lt;/strong&gt; 확장 &lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="517f2617ef9de7d145991ab7b7c845e4771168b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanJob&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanJob&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="6bb1178f49fc6343e9890b859ee3ace41577837f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanTask&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanTask&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="54f6ec39d5a22b3853f36f85c77ed88e58f1eb8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanWorker&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanWorker&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="15df518f2dfb6ba6c76960853c08a385ce5f3624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; objects are returned from &lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;generators&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;발전기&lt;/strong&gt; 객체에서 반환 &lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;발전기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c861016f30528079ecde02c3de71e2253f4323a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; objects cannot be instantiated via &lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;발전기&lt;/strong&gt; 객체는 &lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt; 를 통해 인스턴스화 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="de2e67f561886b0f7669c582ae6a57e7e178b228" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;제너레이터&lt;/strong&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="045a2f72332d73007ff5e2dfed83199aa6e9792d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GlobIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GlobIterator는 &lt;/strong&gt;&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator를&lt;/a&gt; 확장 하여 &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="84e2d5ec32dc4c4cc6c6f47164d7fe485aec50b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Gmagick&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Gmagick&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b4b2c79b313138c65e50a096b297cc3a154328b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GmagickDraw&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GmagickDraw&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="14e5f24aef87434a62d06278ba85633f49a77bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GmagickPixel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GmagickPixel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="943111d3f54d409d1300f0283cdf5065f1b37275" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HashContext&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;HashContext&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="e7e8224490730b998781aa7179599d6bb5424985" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Highlighting options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;강조 옵션&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="636da423c5d7f0a4c4b5e54218f45b657006e172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagetype Constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이미지 형 상수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="288b92ac47cf2adbeb07368f1c8ca8668eb9f62f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagick::setResolution()&lt;/strong&gt; must be called before loading or creating an image.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;이미지를로드하거나 생성하기 전에 &lt;strong&gt;Imagick :: setResolution ()&lt;/strong&gt; 을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="873cb38b04a4738ea3c6f610d83bbf931d64bfdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagick&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Imagick&lt;/strong&gt; 은 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d276d5787e737cef49bee07348d73da54ce878b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickDraw&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickDraw&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="928db3cc3d702a3f6c6169f5c53b3de190b0bf66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickKernel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickKernel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="df5b2cc17ddf5780bdb88d3e2e4e2922bebbc00c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickPixel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickPixel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d76584fcd098276242c8ea96ef9f79a64d001adf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickPixelIterator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickPixelIterator&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4ee5512c4fa24de1458aebddbfc0b168699f266a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Increment/decrement Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;증감 연산자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28225585302f759fa89e3f9ff3ea2390d61167d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;InfiniteIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;InfiniteIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; 구현 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0410699deeb126b300516366c901258df1960596" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internal option letters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;내부 옵션 문자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7bb76b68d3abcd73f6356076cda916675c0af57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlBreakIterator&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlBreakIterator&lt;/strong&gt; 는 &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="86d80dff3e9d7ccdcf801bacef261dace0f7318b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlCalendar&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlCalendar&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="f0ecd5d4d54dfc992bf2e7f1c7ca43d0a0e0f74a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlCodePointBreakIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlCodePointBreakIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt; 구현 &lt;a href=&quot;class.traversable&quot;&gt;에 이동을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="264ab4f2aab50dbd2ff9828d415202f7549e1ae7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlDateFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlDateFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="82d1ac3b1654ea499dece3565ce3b9259d80ce37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlException이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="04ead559cbc117a4132280e1d25284667d6007d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlGregorianCalendar&lt;/strong&gt;extends&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlGregorianCalendar는&lt;/strong&gt; 확장 &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4543aedf00f06eccb9baff5f51ae83d1df9c452e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlIterator&lt;/strong&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d9182241f8e98f2c648dd214af2c4c997050a124" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlPartsIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intliterator&quot;&gt;IntlIterator&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlPartsIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.intliterator&quot;&gt;IntlIterator&lt;/a&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5d2cb2ee647e65ecdf85da022023c56f724538aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlRuleBasedBreakIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlRuleBasedBreakIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt; 구현 &lt;a href=&quot;class.traversable&quot;&gt;에 이동을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1bc9f9cd084e7a50d26d319b3c1bda899d6ccc8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlTimeZone&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlTimeZone&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="e07ad0983a5305528572d092f59764daa20d5116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;InvalidArgumentException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;InvalidArgumentException이 &lt;/strong&gt;&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {을 확장 함</target>
        </trans-unit>
        <trans-unit id="4bde7189e2003f31609f50a4266210576d89f9be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterator&lt;/strong&gt;extends&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;반복자는&lt;/strong&gt; 확장 &lt;a href=&quot;class.traversable&quot;&gt;에 이동을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="ed47866cc44690b1d2626d173d29915ffaee3980" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IteratorAggregate&lt;/strong&gt;extends&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IteratorAggregate는&lt;/strong&gt; 확장 &lt;a href=&quot;class.traversable&quot;&gt;에 이동을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2a135087bbf4e9225031d3af7aff017a436ae575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IteratorIterator&lt;/strong&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IteratorIterator&lt;/strong&gt; 는 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {를 구현합니다</target>
        </trans-unit>
        <trans-unit id="cdad00ebe62d3dfa08521a41b2230a0628710a87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON error codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSON 오류 코드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e240ee797ed7ca4f096fc2c0c76d372b7194f874" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JsonSerializable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;JsonSerializable&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="7c66397042069afb75e7e36521641ffc2f671b75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Judy&lt;/strong&gt;implements &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Judy&lt;/strong&gt; 는 &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="b0476eeefd1ed88636b06aadae8ce7df5e307641" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Key elements of the returned associative array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 된 연관 배열의 주요 요소&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b84385fcb02705ee02202cabc8d8ff66e870ebd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Known errors that point to &lt;strong&gt;main()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;main ()&lt;/strong&gt; 을 가리키는 알려진 오류&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43dfe536a5714631d59e59169b3495db46ee1658" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LONGVARBINARY handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LONGVARBINARY 처리&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1b8eac3e23e1dc5502ce7b32e7a4113ba750399" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LengthException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LengthException&lt;/strong&gt; 은 &lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="45536f9531348b0322ccd5ccc2e37486c21cfe5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LimitIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LimitIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; 구현 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c0d3f3e572c8d3c2a8781caa5671f4849d06863a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;List of possible limits returned&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 된 가능한 한계 목록&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7206c8725d19cd1f3979008fc0672939aede3e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Locale&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;로케일&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4b99ff2fc25071ff2ede90da3a9146a51920a253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LogicException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LogicException이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="240824b16d094a97c00269c3f31353b4da023b8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Logical Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;논리 연산자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="763f7df9acb231b880b15b0f769fea9bf70b5561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lua&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;루아&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b7a858251b1fe131e7c6d586c422eff439744651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LuaClosure&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;LuaClosure&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2e59d6a27db549a4ea2b8085164731acf543c4ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mailbox properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사서함 속성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86e6108738973b6ccb7d1abb97adcf3a566db3df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Match modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;경기 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d184751a113de21c637db849e8da265feb8bf351" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::add()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but the operation fails if the &lt;code&gt;key&lt;/code&gt; already exists on the server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: add ()&lt;/strong&gt; 는 &lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set ()&lt;/a&gt; 과 유사 하지만 서버에 &lt;code&gt;key&lt;/code&gt; 이미 있으면 작업이 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="42d6af1f3bab5f4e54b3b1247eabd9a80fbdff2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.add&quot;&gt;Memcached::add()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.add&quot;&gt;Memcached :: add ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 매핑 할 수 있습니다 . 특정 서버에 여러 관련 키를 보관해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7e6994cb7e36be4d5840744fe569d1b834705673" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addServer()&lt;/strong&gt; adds the specified server to the server pool. No connection is established to the server at this time, but if you are using consistent key distribution option (via &lt;strong&gt;&lt;code&gt;Memcached::DISTRIBUTION_CONSISTENT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;Memcached::OPT_LIBKETAMA_COMPATIBLE&lt;/code&gt;&lt;/strong&gt;), some of the internal data structures will have to be updated. Thus, if you need to add multiple servers, it is better to use &lt;a href=&quot;memcached.addservers&quot;&gt;Memcached::addServers()&lt;/a&gt; as the update then happens only once.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addServer ()&lt;/strong&gt; 는 지정된 서버를 서버 풀에 추가합니다. 현재 서버에 연결되어 있지 않지만 &lt;strong&gt; &lt;code&gt;Memcached::DISTRIBUTION_CONSISTENT&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;Memcached::OPT_LIBKETAMA_COMPATIBLE&lt;/code&gt; &lt;/strong&gt; 통해 일관된 키 배포 옵션을 사용하는 경우 일부 내부 데이터 구조를 업데이트해야합니다. 따라서 여러 서버를 추가해야하는 경우 업데이트가 한 번만 발생하므로 &lt;a href=&quot;memcached.addservers&quot;&gt;Memcached :: addServers ()&lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0396d56c46871de589937b68228131be7078d0b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addServers()&lt;/strong&gt; adds &lt;code&gt;servers&lt;/code&gt; to the server pool. Each entry in &lt;code&gt;servers&lt;/code&gt; is supposed to be an array containing hostname, port, and, optionally, weight of the server. No connection is established to the servers at this time.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addServers ()&lt;/strong&gt; 는 &lt;code&gt;servers&lt;/code&gt; 를 서버 풀에 추가 합니다 . &lt;code&gt;servers&lt;/code&gt; 각 항목은 호스트 이름, 포트 및 선택적으로 서버 무게를 포함하는 배열이어야합니다. 현재 서버에 연결되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="44004bda011a5148264cff66531d872e84dba2fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::append()&lt;/strong&gt; appends the given &lt;code&gt;value&lt;/code&gt; string to the value of an existing item. The reason that &lt;code&gt;value&lt;/code&gt; is forced to be a string is that appending mixed types is not well-defined.</source>
          <target state="translated">&lt;strong&gt;Memcached :: append ()&lt;/strong&gt; 는 주어진 &lt;code&gt;value&lt;/code&gt; 문자열을 기존 항목의 값에 추가합니다 . &lt;code&gt;value&lt;/code&gt; 이 문자열이되도록하는 이유는 혼합 유형을 추가하는 것이 잘 정의되어 있지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="807f6adedf615d7dd83e761a3064419ed391ae44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::appendByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.append&quot;&gt;Memcached::append()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: appendByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.append&quot;&gt;Memcached :: append ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 맵핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb91a045c1f600e9365cb7d66db74011c780ad0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::cas()&lt;/strong&gt; performs a &quot;check and set&quot; operation, so that the item will be stored only if no other client has updated it since it was last fetched by this client. The check is done via the &lt;code&gt;cas_token&lt;/code&gt; parameter which is a unique 64-bit value assigned to the existing item by memcache. See the documentation for &lt;strong&gt;Memcached::get*()&lt;/strong&gt; methods for how to obtain this token. Note that the token is represented as a double due to the limitations of PHP's integer space.</source>
          <target state="translated">&lt;strong&gt;Memcached :: cas ()&lt;/strong&gt; 는 &quot;확인 및 설정&quot;작업을 수행 &lt;strong&gt;하므로이&lt;/strong&gt; 클라이언트가 마지막으로 가져온 이후 다른 클라이언트가 업데이트하지 않은 경우에만 항목이 저장됩니다. 확인은 memcache에 의해 기존 항목에 지정된 고유 한 64 비트 값인 &lt;code&gt;cas_token&lt;/code&gt; 매개 변수를 통해 수행됩니다 . 이 토큰을 얻는 방법 은 &lt;strong&gt;Memcached :: get * ()&lt;/strong&gt; 메소드 문서를 참조하십시오 . PHP의 정수 공간 제한으로 인해 토큰은 두 배로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9512c4c172c3f9e57a5f8170994dba6265ab1d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::casByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.cas&quot;&gt;Memcached::cas()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: casByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.cas&quot;&gt;Memcached :: cas ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 매핑 할 수 있습니다 . 특정 서버에 여러 관련 키를 보관해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5980debd160c4d456f91c3d5138710f2af668179" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::decrement()&lt;/strong&gt; decrements a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. &lt;strong&gt;Memcached::decrement()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: decrement ()&lt;/strong&gt; 는 숫자 항목의 값을 지정된 &lt;code&gt;offset&lt;/code&gt; 감소시킵니다 . 항목 값이 숫자가 아닌 경우 오류가 발생합니다. 작업이 값을 0 미만으로 줄이면 새 값은 0 이됩니다. 키가 없으면 &lt;strong&gt;Memcached :: decrement ()&lt;/strong&gt; 는 항목을 &lt;code&gt;initial_value&lt;/code&gt; 매개 변수 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="07adef0227b3f3fa98510c982447e5968f8ab4b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::decrementByKey()&lt;/strong&gt; decrements a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. &lt;strong&gt;Memcached::decrementByKey()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: decrementByKey ()&lt;/strong&gt; 는 숫자 항목의 값을 지정된 &lt;code&gt;offset&lt;/code&gt; 감소시킵니다 . 항목 값이 숫자가 아닌 경우 오류가 발생합니다. 작업이 값을 0 미만으로 줄이면 새 값은 0이됩니다. &lt;strong&gt;Memcached :: decrementByKey ()&lt;/strong&gt; 는 키가 없으면 항목을 &lt;code&gt;initial_value&lt;/code&gt; 매개 변수 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="66c41426fbd8918858dbe60647ec9f9959e408f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::delete()&lt;/strong&gt; deletes the &lt;code&gt;key&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; commands for this key. For this amount of time, the item is put into a delete queue, which means that it won't possible to retrieve it by the &lt;em&gt;get&lt;/em&gt; command, but &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; command with this key will also fail (the &lt;em&gt;set&lt;/em&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with this key will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: delete ()&lt;/strong&gt; 는 서버 에서 &lt;code&gt;key&lt;/code&gt; 를 삭제 합니다. &lt;code&gt;time&lt;/code&gt; 매개 변수는 초 (또는 어느 때까지 유닉스 시간) 클라이언트가 쓰레기에 서버를 원하는 시간의 양을 &lt;em&gt;추가&lt;/em&gt; 및 &lt;em&gt;대체&lt;/em&gt; 이 키에 대한 명령을. 이 시간 동안 항목이 삭제 큐에 저장됩니다. 즉, &lt;em&gt;get&lt;/em&gt; 명령으로 항목 을 검색 할 &lt;em&gt;수&lt;/em&gt; 없지만 이 키로 &lt;em&gt;add&lt;/em&gt; 및 &lt;em&gt;replace&lt;/em&gt; 명령도 실패합니다 ( &lt;em&gt;set&lt;/em&gt; 명령은 성공하지만 ). 시간이 지나면 해당 항목이 서버 메모리에서 삭제됩니다. 매개 변수 &lt;code&gt;time&lt;/code&gt; 기본값은 0입니다 (즉, 항목이 즉시 삭제되고이 키를 사용하는 추가 저장 명령이 성공 함을 의미 함).</target>
        </trans-unit>
        <trans-unit id="08a41a3b238ec5c02be1d88977d2515d8dc2602e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.delete&quot;&gt;Memcached::delete()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.delete&quot;&gt;Memcached :: delete ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 맵핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e65c5453200d81c7447d14919b0481ffd918494" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteMulti()&lt;/strong&gt; deletes the array of &lt;code&gt;keys&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; commands for these keys. For this amount of time, the item is put into a delete queue, which means that it won't be possible to retrieve it by the &lt;em&gt;get&lt;/em&gt; command, but &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; command with these keys will also fail (the &lt;em&gt;set&lt;/em&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with these keys will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteMulti ()&lt;/strong&gt; 는 서버에서 &lt;code&gt;keys&lt;/code&gt; 배열을 삭제 합니다. &lt;code&gt;time&lt;/code&gt; 매개 변수는 초 (또는 어느 때까지 유닉스 시간) 클라이언트가 쓰레기에 서버를 원하는 시간의 양을 &lt;em&gt;추가&lt;/em&gt; 및 &lt;em&gt;교체&lt;/em&gt; 이러한 키에 대한 명령을. 이 시간 동안 항목이 삭제 큐에 저장됩니다. 즉, &lt;em&gt;get&lt;/em&gt; 명령으로 항목 을 검색 할 &lt;em&gt;수&lt;/em&gt; 없지만 이러한 키를 사용하여 &lt;em&gt;add&lt;/em&gt; 및 &lt;em&gt;replace&lt;/em&gt; 명령도 실패합니다 ( &lt;em&gt;set&lt;/em&gt; 명령이 성공합니다, 하나). 시간이 지나면 해당 항목이 서버 메모리에서 삭제됩니다. 매개 변수 &lt;code&gt;time&lt;/code&gt; 기본값은 0입니다 (즉, 항목이 즉시 삭제되고이 키를 사용하는 추가 저장 명령이 성공 함을 의미 함).</target>
        </trans-unit>
        <trans-unit id="be46b99cb8671d669f4b231c7ce72548544f6382" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.deletemulti&quot;&gt;Memcached::deleteMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteMultiByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.deletemulti&quot;&gt;Memcached :: deleteMulti ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;keys&lt;/code&gt; 를 특정 서버 에 맵핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fddbbec7cfddae4d996f4e4cf9c4c864234e204c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::fetch()&lt;/strong&gt; retrieves the next result from the last request.</source>
          <target state="translated">&lt;strong&gt;Memcached :: fetch ()&lt;/strong&gt; 는 마지막 요청에서 다음 결과를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="27a7ff1f95c302e06bf48018735fa36c286abb97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::fetchAll()&lt;/strong&gt; retrieves all the remaining results from the last request.</source>
          <target state="translated">&lt;strong&gt;Memcached :: fetchAll ()&lt;/strong&gt; 은 마지막 요청에서 나머지 모든 결과를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="6879f9e4d7dd9e0358e6b5e0618e645a4260cf9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::flush()&lt;/strong&gt; invalidates all existing cache items immediately (by default) or after the &lt;code&gt;delay&lt;/code&gt; specified. After invalidation none of the items will be returned in response to a retrieval command (unless it's stored again under the same key after &lt;strong&gt;Memcached::flush()&lt;/strong&gt; has invalidated the items). The flush does not actually free all the memory taken up by the existing items; that will happen gradually as new items are stored.</source>
          <target state="translated">&lt;strong&gt;Memcached :: flush ()는&lt;/strong&gt; 기존의 모든 캐시 항목을 즉시 (기본적으로) 또는 지정된 &lt;code&gt;delay&lt;/code&gt; 후에 무효화 합니다. 무효화 후에는 검색 명령에 대한 응답으로 항목이 반환되지 않습니다 ( &lt;strong&gt;Memcached :: flush ()&lt;/strong&gt; 가 항목을 무효화 한 후 동일한 키로 다시 저장되지 않는 한 ). 플러시는 기존 항목이 차지하는 모든 메모리를 실제로 해제하지 않습니다. 새로운 아이템이 저장됨에 따라 점진적으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c89f7156c52ee5d3ef7c5b59e23a78beba830b85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::get()&lt;/strong&gt; returns the item that was previously stored under the &lt;code&gt;key&lt;/code&gt;. If the item is found and the &lt;code&gt;flags&lt;/code&gt; is given &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt;, it will also return the CAS token value for the item. See &lt;a href=&quot;memcached.cas&quot;&gt;Memcached::cas()&lt;/a&gt; for how to use CAS tokens. &lt;a href=&quot;https://secure.php.net/manual/en/memcached.callbacks.php&quot;&gt;Read-through caching callback&lt;/a&gt; may be specified via &lt;code&gt;cache_cb&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;Memcached :: get ()&lt;/strong&gt; 은 이전에 &lt;code&gt;key&lt;/code&gt; 아래 저장된 항목을 반환합니다 . 항목이 발견되고 &lt;code&gt;flags&lt;/code&gt; 에 &lt;strong&gt; &lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt; &lt;/strong&gt; 가 제공 되면 항목에 대한 CAS 토큰 값도 반환합니다. CAS 토큰을 사용하는 방법 은 &lt;a href=&quot;memcached.cas&quot;&gt;Memcached :: cas ()&lt;/a&gt; 를 참조하십시오 . &lt;a href=&quot;https://secure.php.net/manual/en/memcached.callbacks.php&quot;&gt;read-through 캐싱 콜백&lt;/a&gt; 은 &lt;code&gt;cache_cb&lt;/code&gt; 매개 변수 를 통해 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9213d480760b5377462f1ff500a10200cb02d7e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getAllKeys()&lt;/strong&gt; queries each memcache server and retrieves an array of all keys stored on them at that point in time. This is not an atomic operation, so it isn't a truly consistent snapshot of the keys at point in time. As memcache doesn't guarantee to return all keys you also cannot assume that all keys have been returned.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getAllKeys ()는&lt;/strong&gt; 각 memcache 서버를 쿼리하여 해당 시점에 저장된 모든 키 배열을 검색합니다. 이것은 원자 작업이 아니기 때문에 특정 시점의 키에 대한 일관된 스냅 샷이 아닙니다. memcache는 모든 키를 반환한다고 보장하지 않으므로 모든 키가 반환되었다고 가정 할 수도 없습니다.</target>
        </trans-unit>
        <trans-unit id="58a1e0c4b5ac2a60e0946bd3a97dbcdc5fba12e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.get&quot;&gt;Memcached::get()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.get&quot;&gt;Memcached :: get ()&lt;/a&gt; 과 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 맵핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1212ad36dc3e6bebe95c7480fe6d848258a363ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getDelayed()&lt;/strong&gt; issues a request to memcache for multiple items the keys of which are specified in the &lt;code&gt;keys&lt;/code&gt; array. The method does not wait for response and returns right away. When you are ready to collect the items, call either &lt;a href=&quot;memcached.fetch&quot;&gt;Memcached::fetch()&lt;/a&gt; or &lt;a href=&quot;memcached.fetchall&quot;&gt;Memcached::fetchAll()&lt;/a&gt;. If &lt;code&gt;with_cas&lt;/code&gt; is true, the CAS token values will also be requested.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getDelayed ()&lt;/strong&gt; 는 &lt;code&gt;keys&lt;/code&gt; 배열 에 키 가 지정된 여러 항목에 대해 memcache에 요청을 발행합니다 . 메소드는 응답을 기다리지 않고 즉시 리턴합니다. 항목을 수집 할 준비가되면 &lt;a href=&quot;memcached.fetch&quot;&gt;Memcached :: fetch ()&lt;/a&gt; 또는 &lt;a href=&quot;memcached.fetchall&quot;&gt;Memcached :: fetchAll ()을&lt;/a&gt; 호출하십시오 . 경우 &lt;code&gt;with_cas&lt;/code&gt; 는 사실, 값 토큰 CAS도 요구됩니다.</target>
        </trans-unit>
        <trans-unit id="c505ccc443f88f3b6c591c99b28d961e2e3ff751" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getDelayedByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.getdelayed&quot;&gt;Memcached::getDelayed()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getDelayedByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.getdelayed&quot;&gt;Memcached :: getDelayed ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;keys&lt;/code&gt; 를 특정 서버 에 맵핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01e7d15f8826cd9fdeae49598315962659df727d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getMulti()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.get&quot;&gt;Memcached::get()&lt;/a&gt;, but instead of a single key item, it retrieves multiple items the keys of which are specified in the &lt;code&gt;keys&lt;/code&gt; array.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getMulti ()&lt;/strong&gt; 는 &lt;a href=&quot;memcached.get&quot;&gt;Memcached :: get ()&lt;/a&gt; 과 유사 하지만 단일 키 항목 대신 &lt;code&gt;keys&lt;/code&gt; 배열 에 키 가 지정된 여러 항목을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="df3adf0d3ea5de9786eb06bb3427044f0e4bded8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.getmulti&quot;&gt;Memcached::getMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getMultiByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.getmulti&quot;&gt;Memcached :: getMulti ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;keys&lt;/code&gt; 를 특정 서버 에 맵핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40b24476d57c18e234198c85b4497dca0f35b1d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getOption()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Memcached::getOption()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dab7f9eaad5612ba67fd2daab249dde562a79f8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getResultCode()&lt;/strong&gt; returns one of the &lt;strong&gt;&lt;code&gt;Memcached::RES_*&lt;/code&gt;&lt;/strong&gt; constants that is the result of the last executed Memcached method.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getResultCode ()&lt;/strong&gt; 는 마지막으로 실행 된 Memcached 메소드의 결과 인 &lt;strong&gt; &lt;code&gt;Memcached::RES_*&lt;/code&gt; &lt;/strong&gt; 상수 중 하나를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7c5dc8362db8aa55f80601eb9b3e908626c29037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getResultMessage()&lt;/strong&gt; returns a string that describes the result code of the last executed Memcached method.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getResultMessage ()&lt;/strong&gt; 는 마지막으로 실행 된 Memcached 메서드의 결과 코드를 설명하는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="576294e5171249c81dab1ddc161381473c704c0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getServerByKey()&lt;/strong&gt; returns the server that would be selected by a particular &lt;code&gt;server_key&lt;/code&gt; in all the &lt;strong&gt;Memcached::*ByKey()&lt;/strong&gt; operations.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getServerByKey ()&lt;/strong&gt; 는 모든 &lt;strong&gt;Memcached :: * ByKey ()&lt;/strong&gt; 작업 에서 특정 &lt;code&gt;server_key&lt;/code&gt; 에 의해 선택된 서버를 반환합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc34f0f60a78f7d3824ac28de9641704ce69dda0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getServerList()&lt;/strong&gt; returns the list of all servers that are in its server pool.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getServerList ()&lt;/strong&gt; 는 서버 풀에있는 모든 서버의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ead3517e0a9dfc90353fe45b9b466ad93a0aac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getStats()&lt;/strong&gt; returns an array containing the state of all available memcache servers. See &lt;a href=&quot;http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt&quot;&gt;&amp;raquo; memcache protocol&lt;/a&gt; specification for details on these statistics.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getStats ()&lt;/strong&gt; 는 사용 가능한 모든 memcache 서버의 상태를 포함하는 배열을 반환합니다. 이러한 통계에 대한 자세한 내용 은 &lt;a href=&quot;http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt&quot;&gt;&amp;raquo;memcache 프로토콜&lt;/a&gt; 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a36fc787ab1b3a77ee7340ee043c300b43d89508" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getVersion()&lt;/strong&gt; returns an array containing the version info for all available memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getVersion ()&lt;/strong&gt; 은 사용 가능한 모든 memcache 서버의 버전 정보가 포함 된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a1c96a3778779c829d08152af6fcde8a5f30284f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::increment()&lt;/strong&gt; increments a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. &lt;strong&gt;Memcached::increment()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: increment ()&lt;/strong&gt; 는 지정된 &lt;code&gt;offset&lt;/code&gt; 숫자 항목 값을 증가시킵니다 . 항목 값이 숫자가 아닌 경우 오류가 발생합니다. &lt;strong&gt;Memcached :: increment ()&lt;/strong&gt; 는 키가 존재하지 않으면 항목을 &lt;code&gt;initial_value&lt;/code&gt; 매개 변수 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="1366853d0e56b36d3ac6de3099d6aece46140740" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::incrementByKey()&lt;/strong&gt; increments a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. &lt;strong&gt;Memcached::incrementByKey()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: incrementByKey ()&lt;/strong&gt; 는 숫자 항목의 값을 지정된 &lt;code&gt;offset&lt;/code&gt; 증가시킵니다 . 항목 값이 숫자가 아닌 경우 오류가 발생합니다. &lt;strong&gt;Memcached :: incrementByKey ()&lt;/strong&gt; 는 키가 존재하지 않으면 항목을 &lt;code&gt;initial_value&lt;/code&gt; 매개 변수 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="3058f991f9cc35c4da2795b79573c534b225fae5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::isPersistent()&lt;/strong&gt; checks if the connections to the memcache servers are persistent connections.</source>
          <target state="translated">&lt;strong&gt;Memcached :: isPersistent ()&lt;/strong&gt; 는 memcache 서버에 대한 연결이 지속적인 연결인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b0fe0d569dc55675de29aa793c37eddb70bde75f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::isPristine()&lt;/strong&gt; checks if the Memcache instance was recently created.</source>
          <target state="translated">&lt;strong&gt;Memcached :: isPristine ()&lt;/strong&gt; 은 Memcache 인스턴스가 최근에 생성되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d16018aa873bef41fe11ec66fdc90ca29a7431d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::prepend()&lt;/strong&gt; prepends the given &lt;code&gt;value&lt;/code&gt; string to the value of an existing item. The reason that &lt;code&gt;value&lt;/code&gt; is forced to be a string is that prepending mixed types is not well-defined.</source>
          <target state="translated">&lt;strong&gt;Memcached :: prepend ()&lt;/strong&gt; 는 주어진 &lt;code&gt;value&lt;/code&gt; 문자열을 기존 항목의 값 앞에 추가합니다 . &lt;code&gt;value&lt;/code&gt; 이 문자열이되어야하는 이유는 혼합 형식을 앞에 추가하는 것이 잘 정의되어 있지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="9530cd4a78b06c289349dc876789e5d0d9426bb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::prependByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.prepend&quot;&gt;Memcached::prepend()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: prependByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.prepend&quot;&gt;Memcached :: prepend ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 매핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="72d02060bbca223f2913c37a087c7d8b8ee4f9fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::quit()&lt;/strong&gt; closes any open connections to the memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: quit ()&lt;/strong&gt; 는 memcache 서버에 대한 열린 연결을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="5a55b7410bda0516d00be95943919b6c961f870f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::replace()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but the operation fails if the &lt;code&gt;key&lt;/code&gt; does not exist on the server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: replace ()&lt;/strong&gt; 는 &lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set ()&lt;/a&gt; 과 유사 하지만 서버에 &lt;code&gt;key&lt;/code&gt; 가 없으면 작업이 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="6b4f950969017b79e68feaf502336a56b4279410" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::replaceByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.replace&quot;&gt;Memcached::replace()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: replaceByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.replace&quot;&gt;Memcached :: replace ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 매핑 할 수 있습니다 . 특정 서버에 여러 관련 키를 보관해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ad6bc0f97a1e8242e1e37310eec6f4eb57c7b810" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::resetserverlist()&lt;/strong&gt; removes all memcache servers from the known server list, reseting it back to empty.</source>
          <target state="translated">&lt;strong&gt;Memcached :: resetserverlist ()&lt;/strong&gt; 는 알려진 서버 목록에서 모든 memcache 서버를 제거하고 다시 비어있게합니다.</target>
        </trans-unit>
        <trans-unit id="a687e427e867677f04a34e5cf298d38701c9e52e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::set()&lt;/strong&gt; stores the &lt;code&gt;value&lt;/code&gt; on a memcache server under the specified &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;expiration&lt;/code&gt; parameter can be used to control when the value is considered expired.</source>
          <target state="translated">&lt;strong&gt;Memcached :: set ()&lt;/strong&gt; 은 지정된 &lt;code&gt;key&lt;/code&gt; 아래의 memcache 서버에 &lt;code&gt;value&lt;/code&gt; 을 저장합니다 . &lt;code&gt;expiration&lt;/code&gt; 파라미터 값이 만료 된 것으로 간주 될 때를 제어하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="49928c1f6673fd1db21d0bf2d1ef3658d6dfd87d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set ()&lt;/a&gt; 과 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 맵핑 할 수 있습니다 . 특정 서버에 여러 관련 키를 보관해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c5820ffcc6bc0f83a140f27382436e5868eeb070" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setMulti()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but instead of a single key/value item, it works on multiple items specified in &lt;code&gt;items&lt;/code&gt;. The &lt;code&gt;expiration&lt;/code&gt; time applies to all the items at once.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setMulti ()&lt;/strong&gt; 는 &lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set ()&lt;/a&gt; 과 유사 하지만 단일 키 / 값 항목 대신 items에 지정된 여러 항목에서 작동 &lt;code&gt;items&lt;/code&gt; . &lt;code&gt;expiration&lt;/code&gt; 시간이 한 번에 모든 항목에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="78644c077456ed3c1998ed8a5dd906a4c8adcbe3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached::setMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the keys from &lt;code&gt;items&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setMultiByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached :: setMulti ()&lt;/a&gt; 와 동일합니다. 단, 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;items&lt;/code&gt; 에서 특정 서버로 키를 맵핑 할 수 있습니다 . 특정 서버에 여러 관련 키를 보관해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bfda47237e51eef128c9354336d3ea9482c671e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setOptions()&lt;/strong&gt; is a variation of the &lt;a href=&quot;memcached.setoption&quot;&gt;Memcached::setOption()&lt;/a&gt; that takes an array of options to be set.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setOptions ()&lt;/strong&gt; 는 다양한 옵션을 설정 하는 &lt;a href=&quot;memcached.setoption&quot;&gt;Memcached :: setOption ()&lt;/a&gt; 의 변형입니다 .</target>
        </trans-unit>
        <trans-unit id="5982f15a0cb62c35f849b7926d2cd61eea8e7018" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setSaslAuthData()&lt;/strong&gt; sets the username and password that should be used for SASL authentication with the memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setSaslAuthData ()&lt;/strong&gt; 는 memcache 서버와의 SASL 인증에 사용해야하는 사용자 이름과 비밀번호를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5c446948992f0108e7b4ce9674e9293c793a33bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::touch()&lt;/strong&gt; sets a new expiration value on the given key.</source>
          <target state="translated">&lt;strong&gt;Memcached :: touch ()&lt;/strong&gt; 는 주어진 키에 새로운 만료 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3e3da15f65f312ad297628b4bd3f3f9f7044469e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::touchByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.touch&quot;&gt;Memcached::touch()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: touchByKey ()&lt;/strong&gt; 는 기능적으로 &lt;a href=&quot;memcached.touch&quot;&gt;Memcached :: touch ()&lt;/a&gt; 와 동일하지만 자유 형식 &lt;code&gt;server_key&lt;/code&gt; 를 사용하여 &lt;code&gt;key&lt;/code&gt; 를 특정 서버 에 매핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f29a7dc657ced59fb7bf5bdc2e1f38e90220c387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Memcached&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="842d89a94976a7b80fcaefd4eb22f4e2efc86004" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MemcachedException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;MemcachedException이 &lt;/strong&gt;&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장 함 {</target>
        </trans-unit>
        <trans-unit id="1b1a8897182c533606118847682ccda4f3641b6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MessageFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;MessageFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4b9a61bc499f0f898f0e851ea1c5c72cdbc7e891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meta-characters inside square brackets (&lt;em&gt;character classes&lt;/em&gt;)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;대괄호 안의 메타 문자 ( &lt;em&gt;문자 클래스&lt;/em&gt; )&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5687e72bd7da329d1cf791d7c376686946713238" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meta-characters outside square brackets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;대괄호 밖의 메타 문자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4705a4d1291e9e38a5d56c9aaa41a245324572fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MultipleIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;MultipleIterator&lt;/strong&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="11b6eb754fb062e5be7f74c4cb7b233a35f89db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mutex&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;뮤텍스&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="8334ebd91fc42c35d0d65c29bcb6fb9259899bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Namespace name definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;네임 스페이스 이름 정의&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13bdb00acf2d9089281f1436e1ef0caba4fd0c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NoRewindIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;NoRewindIterator는 &lt;/strong&gt;&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; {를 확장합니다</target>
        </trans-unit>
        <trans-unit id="50f93d03d7cdfd1450d9a43e321737f010334fc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Normalizer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;노멀 라이저&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="abd92687b99044b4eddf773d671c4667439b4622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="8a99a99bbf8a401ebe0371c05923988f7d8c8dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  %G and %V, which are based on ISO 8601:1988 week numbers can give unexpected (albeit correct) results if the numbering system is not thoroughly understood. See %V examples in this manual page.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : ISO 8601 : 1988 주 번호를 기반으로하는 % G 및 % V는 번호 매기기 시스템을 완전히 이해하지 않으면 예기치 않은 결과를 제공 할 수 있습니다. 이 매뉴얼 페이지의 % V 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9df533484a3c49877011aa8248968f349ccdbc8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  All signals will be delivered after the script wakes up.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 모든 신호는 스크립트가 깨어 난 후 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="cdbdaee639ed243bf081704dd79909d13aa17818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Although &lt;code&gt;connection&lt;/code&gt; can be omitted, it is not recommended, since it can be the cause of hard to find bugs in scripts.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;connection&lt;/code&gt; 을 생략 할 수는 있지만 스크립트에서 버그를 찾기 어려운 원인이 될 수 있으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9425c627f6a59329bd29f0760f52fe6aede88be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Although this function was added to PHP in PHP 7.0, a &lt;a href=&quot;https://github.com/paragonie/random_compat&quot;&gt;&amp;raquo; userland implementation&lt;/a&gt; is available for PHP 5.2 to 5.6, inclusive.</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt; : PHP 7.0에서이 기능이 PHP에 추가되었지만 PHP 5.2에서 5.6까지 &lt;a href=&quot;https://github.com/paragonie/random_compat&quot;&gt;&amp;raquo;userland 구현&lt;/a&gt; 이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="aaf8e987b0f47e3ebc0fcd702aa7eef090b84ba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Any other character sets are not recognized. The default encoding will be used instead and a warning will be emitted.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 다른 문자 세트는 인식되지 않습니다. 기본 인코딩이 대신 사용되며 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8b854e6fd0899e415be091f22b5124716f53392e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 4.3.2, PATH_TRANSLATED is no longer set implicitly under the Apache 2</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 4.3.2부터 PATH_TRANSLATED는 더 이상 Apache 2에서 암시 적으로 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d6dcbf7599abb2a6b88cd94c629a9dc2b4dd3a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 5, arguments that are passed by reference may have a default value.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 5부터 참조로 전달되는 인수는 기본값을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84c950e93e388b90697f0a23f47a1ffc8b350a79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.0.0, there are no particular restrictions regarding the length of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; on 64-bit builds. On 32-bit builds and in earlier versions, a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; can be as large as up to 2GB (2147483647 bytes maximum)</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 7.0.0부터 64 비트 빌드 에서 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 길이에 대한 특별한 제한은 없습니다 . 32 비트 빌드 및 이전 버전에서 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 은 최대 2GB (최대 2147483647 바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="b4161f788e91717ceee93dbcc8cf6a8e14194bae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, applying the empty index operator on a string throws a fatal error. Formerly, the string was silently converted to an array.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 7.1.0부터 문자열에 빈 인덱스 연산자를 적용하면 치명적인 오류가 발생합니다. 이전에는 문자열이 자동으로 배열로 변환되었습니다.</target>
        </trans-unit>
        <trans-unit id="e174b1a5cf2a3a2eec1ee6fbc1f1055801933c14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, applying the empty index operator on an empty string throws a fatal error. Formerly, the empty string was silently converted to an array.</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt; : PHP 7.1.0부터 빈 문자열에 빈 인덱스 연산자를 적용하면 치명적인 오류가 발생합니다. 이전에는 빈 문자열이 자동으로 배열로 변환되었습니다.</target>
        </trans-unit>
        <trans-unit id="ef3cec1e236d6d1c72e492b98ce212726d2438a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, negative string offsets are also supported. These specify the offset from the end of the string. Formerly, negative offsets emitted &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; for reading (yielding an empty string) and &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; for writing (leaving the string untouched).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 7.1.0부터 음수 문자열 오프셋도 지원됩니다. 문자열 끝에서 오프셋을 지정합니다. 이전에는 음수 오프셋 이 읽기 (빈 문자열 수)를 위해 &lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt; 를 , 쓰기 (문자열을 그대로 유지) &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 을 방출했습니다 .</target>
        </trans-unit>
        <trans-unit id="76e3d07996193b55c6942c9fd3d57dcaadd62382" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As specified in RFC 2045, lines may not be longer than 76 characters in the &lt;code&gt;filename&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : RFC 2045에 지정된대로 &lt;code&gt;filename&lt;/code&gt; 매개 변수 에서 행은 76자를 초과 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8cd534163f01b942b38eb38f874f397be1a4163d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Because PHP's integer type is signed and many platforms use 32bit integers, some filesystem functions may return unexpected results for files which are larger than 2GB.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP의 정수 유형이 서명되고 많은 플랫폼이 32 비트 정수를 사용하므로 일부 파일 시스템 함수는 2GB보다 큰 파일에 대해 예기치 않은 결과를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="519b4af55587609ec05410a3f68942a33668fe0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Calling the constructor of class Exception from a subclass ignores the default arguments, if the properties $code and $message are already set.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : $ code 및 $ message 특성이 이미 설정된 경우 서브 클래스에서 Exception 클래스의 생성자를 호출하면 기본 인수가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="26f867664cca3f992729ade47f721b3fb16bc4f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Calling this function will implicitly start output buffering if it is not active already.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수를 호출하면 출력 버퍼링이 아직 활성화되지 않은 경우 암시 적으로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="28a1c9a29275da7f34a9ba62d138877574cc857e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Constants and (global) variables are in a different namespace. This implies that for example &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; and &lt;var&gt;&lt;var&gt;$TRUE&lt;/var&gt;&lt;/var&gt; are generally different.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 상수 및 (전역) 변수는 다른 네임 스페이스에 있습니다. 이것은 예를 들어 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 와 &lt;var&gt;&lt;var&gt;$TRUE&lt;/var&gt;&lt;/var&gt; 가 일반적으로 다르다는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="96534583ca1843c1c564fede96c4756edc3861d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Default for &lt;em&gt;longreadlen&lt;/em&gt; is &lt;em&gt;4096&lt;/em&gt; and &lt;code&gt;mode&lt;/code&gt; defaults to &lt;em&gt;ODBC_BINMODE_RETURN&lt;/em&gt;. Handling of binary long columns is also affected by &lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;longreadlen의&lt;/em&gt; 기본값 은 &lt;em&gt;4096&lt;/em&gt; 이고 &lt;code&gt;mode&lt;/code&gt; 기본값은 &lt;em&gt;ODBC_BINMODE_RETURN&lt;/em&gt; 입니다. 이진 long 열의 처리는 &lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen ()의&lt;/a&gt; 영향을 받습니다 .</target>
        </trans-unit>
        <trans-unit id="7bde091da2aa97931158eaa5e39dcecf7c5809f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Ensure you pass arguments in the correct order when comparing similar arrays with more keys. The new array should be the first in the list.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 유사한 배열을 더 많은 키와 비교할 때는 올바른 순서로 인수를 전달하십시오. 새 배열이 목록에서 첫 번째 여야합니다.</target>
        </trans-unit>
        <trans-unit id="627063aa15f9a893658af192a7da7719c07dc97e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Explicitly passing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; as the &lt;code&gt;object&lt;/code&gt; is no longer allowed as of PHP 7.2.0.  The parameter is still optional and calling &lt;strong&gt;get_class()&lt;/strong&gt; without a parameter from inside a class will work, but passing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; now emits an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; notice.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 7.2.0부터는 &lt;code&gt;object&lt;/code&gt; 로 명시 적으로 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 을 전달할 수 없습니다. 매개 변수는 여전히 선택적이며 클래스 내부에서 매개 변수없이 &lt;strong&gt;get_class ()&lt;/strong&gt; 를 호출 하면 작동하지만 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 전달 하면 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 알림이 발생합니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a914afb2a98a28aa9970f23e8eeba78e5333b47c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For Windows only: This function requires PHP to run in an elevated mode or with the UAC disabled.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Windows 전용 :이 기능을 사용하려면 PHP를 상승 모드로 실행하거나 UAC를 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="eae4507513fb6abea1cd63d5b560256b0dd1e161" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 여기에서 문자는 az, AZ 및 127-255 (0x7f-0xff)의 ASCII 문자입니다.</target>
        </trans-unit>
        <trans-unit id="0b0cfa419db2640017089a8dacedeab505831c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the bytes from 127 through 255 (&lt;em&gt;0x7f-0xff&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 여기에서 문자는 az, AZ 및 127에서 255 사이의 바이트 ( &lt;em&gt;0x7f-0xff&lt;/em&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="938ef482da492e5967e823313df11f38326d338b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Function names are case-insensitive, though it is usually good form to call functions as they appear in their declaration.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 함수 이름은 대소 문자를 구분하지 않지만 선언에 표시된대로 함수를 호출하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="424851aefac924176cc665837d7c89ff53b169a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  GIF images consist of one or more frames, where each frame may only occupy part of the image. The size of the image which is reported by &lt;strong&gt;getimagesize()&lt;/strong&gt; is the overall size (read from the logical screen descriptor).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : GIF 이미지는 하나 이상의 프레임으로 구성되며 각 프레임은 이미지의 일부만 차지할 수 있습니다. &lt;strong&gt;getimagesize ()에&lt;/strong&gt; 의해보고되는 이미지의 크기는 전체 크기입니다 (논리 화면 설명자에서 읽음).</target>
        </trans-unit>
        <trans-unit id="9cf9f15545dad08dfa48ffd62ded92ebc872a89d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt; is enabled the uid of the script is added to the &lt;em&gt;realm&lt;/em&gt; part of the &lt;em&gt;WWW-Authenticate&lt;/em&gt; header if you set this header (used for HTTP Authentication).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;안전 모드&lt;/a&gt; 가 활성화 된 경우이 헤더를 설정하면 (HTTP 인증에 사용되는) 스크립트의 uid가 &lt;em&gt;WWW-Authenticate&lt;/em&gt; 헤더 의 &lt;em&gt;영역&lt;/em&gt; 부분에 추가됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d30812500cc5e074bc66065cfa5562c83fee0b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If &lt;code&gt;replacement&lt;/code&gt; is not an array, it will be &lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;typecast&lt;/a&gt; to one (i.e. &lt;code&gt;(array) $replacement&lt;/code&gt;). This may result in unexpected behavior when using an object or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;replacement&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;replacement&lt;/code&gt; 가 배열이 아닌 경우 하나 (예 : &lt;code&gt;(array) $replacement&lt;/code&gt; ) 로 &lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;유형 변환&lt;/a&gt; 됩니다 . 개체를 사용하거나 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; &lt;code&gt;replacement&lt;/code&gt; 할 때 예기치 않은 동작이 발생할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8a2263f75d02bc2a4742606ab53c0e681f07745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If PHP cannot create a file in the specified &lt;code&gt;dir&lt;/code&gt; parameter, it falls back on the system default. On NTFS this also happens if the specified &lt;code&gt;dir&lt;/code&gt; contains more than 65534 files.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP가 지정된 &lt;code&gt;dir&lt;/code&gt; 매개 변수 에서 파일을 작성할 수없는 경우 시스템 기본값으로 대체됩니다. NTFS의 경우 지정된 &lt;code&gt;dir&lt;/code&gt; 에 65534 개 이상의 파일이 포함 된 경우에도 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="12d634e5fd5a6de5d97b8425eb9302832cb06d16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If no parameter is supplied, then the parentheses must be omitted and &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; will be returned. Calling &lt;em&gt;return&lt;/em&gt; with parentheses but with no arguments will result in a parse error.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 매개 변수가 제공되지 않으면 괄호를 생략하고 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 을 반환 해야합니다 . 괄호를 사용하지만 인수없이 &lt;em&gt;return&lt;/em&gt; 을 호출 하면 구문 분석 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c9d8ca213a92557601780543427f31f7948f8732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If the parameters given to a function are not what it expects, such as passing an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; where a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is expected, the return value of the function is undefined. In this case it will likely return &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; but this is just a convention, and cannot be relied upon.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 함수에 주어진 파라미터는 이러한 통과 같이, 예상하지 않으면 어떤 &lt;a href=&quot;language.types.array&quot;&gt;배열 &lt;/a&gt;&lt;a href=&quot;language.types.string&quot;&gt;문자열이&lt;/a&gt; 예상된다 함수의 리턴 값이 정의된다. 이 경우 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 반환 할 가능성 이 있지만 이는 단지 규칙 일 뿐이므로 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4f199fa72e43cb8f479d043b05adf62182a84a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you try to return a reference from a function with the syntax: &lt;em&gt;return ($this-&amp;gt;value);&lt;/em&gt; this will &lt;em&gt;not&lt;/em&gt; work as you are attempting to return the result of an &lt;em&gt;expression&lt;/em&gt;, and not a variable, by reference. You can only return variables by reference from a function - nothing else. Since PHP 5.1.0, an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; error is issued if the code tries to return a dynamic expression or a result of the &lt;em&gt;new&lt;/em&gt; operator.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 구문을 사용하여 함수에서 참조를 반환하려고하면 &lt;em&gt;return ($ this-&amp;gt; value); &lt;/em&gt;이 것 &lt;em&gt;없는&lt;/em&gt; 당신이 결과를 반환하는 시도로 작동 &lt;em&gt;식&lt;/em&gt; 참조, 변수를하지. 함수에서 참조로만 변수를 반환 할 수 있습니다. PHP 5.1.0부터 코드가 동적 표현식 또는 &lt;em&gt;새&lt;/em&gt; 연산자 의 결과를 리턴하려고하면 &lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt; 오류가 &lt;strong&gt;발생&lt;/strong&gt; 합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b570a02716f11bbb8b5334c0f36931854e7b6cc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you use &lt;strong&gt;array_push()&lt;/strong&gt; to add one element to the array, it's better to use &lt;em&gt;$array[] = &lt;/em&gt; because in that way there is no overhead of calling a function.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;array_push ()&lt;/strong&gt; 를 사용 하여 배열에 하나의 요소를 추가하는 경우 &lt;em&gt;$ array [] =&lt;/em&gt; 를 사용하는 것이 좋습니다 . 이러한 방식으로 함수를 호출하는 오버 헤드가 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="be3827f80e1372d8e13c6404d0a5a73aeda2250e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  In PHP the &lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt; statement is considered a looping structure for the purposes of &lt;em&gt;continue&lt;/em&gt;. &lt;em&gt;continue&lt;/em&gt; behaves like &lt;em&gt;break&lt;/em&gt; (when no arguments are passed). If a &lt;em&gt;switch&lt;/em&gt; is inside a loop, &lt;em&gt;continue 2&lt;/em&gt; will continue with the next iteration of the outer loop.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP에서 &lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt; 문은 &lt;em&gt;계속&lt;/em&gt; 하기 위해 루핑 구조로 간주 &lt;em&gt;됩니다&lt;/em&gt; . &lt;em&gt;계속&lt;/em&gt; 은 &lt;em&gt;break&lt;/em&gt; 처럼 행동합니다 (인수가 전달되지 않을 때). 경우 &lt;em&gt;스위치가&lt;/em&gt; 루프 안에, &lt;em&gt;2 계속&lt;/em&gt; 외부 루프의 다음 반복을 계속합니다.</target>
        </trans-unit>
        <trans-unit id="f93375ad91efa29329330f2de9b92312eaba1cd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is not possible to change the size of a BLOB by writing to the stream. Instead, an UPDATE statement has to be executed, possibly using SQLite's zeroblob() function to set the desired BLOB size.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 스트림에 쓰면 BLOB의 크기를 변경할 수 없습니다. 대신, SQLite의 zeroblob () 함수를 사용하여 원하는 BLOB 크기를 설정하는 UPDATE 문을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="0da47e37eb9fa596b2cee38a6d45a7865a9622e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is possible to use &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; from within a closure.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 클로저 내에서 &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args ()&lt;/a&gt; , &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg ()&lt;/a&gt; 및 &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args ()&lt;/a&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="385c48432a2c641733a7972a38311f68405436b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Like most PHP sorting functions, &lt;strong&gt;sort()&lt;/strong&gt; uses an implementation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo; Quicksort&lt;/a&gt;. The pivot is chosen in the middle of the partition resulting in an optimal time for already sorted arrays. This is however an implementation detail you shouldn't rely on.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 대부분의 PHP 정렬 함수와 마찬가지로 &lt;strong&gt;sort ()&lt;/strong&gt; 는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo;Quicksort&lt;/a&gt; 구현을 사용합니다 . 피벗은 파티션의 중간에서 선택되어 이미 정렬 된 어레이에 최적의 시간을 제공합니다. 그러나 이것은 당신이 의존해서는 안되는 구현 세부 사항입니다.</target>
        </trans-unit>
        <trans-unit id="7d7333b7e93a4b0512ab740634f6e9c9c4ede8b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Most systems require root access to create a server socket on a port below 1024.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 대부분의 시스템은 1024 미만의 포트에서 서버 소켓을 만들려면 루트 액세스 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e4823ba0a0acd478115a85d8a398451f14ef7e2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Namespace names are case-insensitive.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 네임 스페이스 이름은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c53be9a639af90b44281e4dc2a9df0b0631e0cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Not all databases will allow transactions to operate on DDL statements: some will generate errors, whereas others (including MySQL) will automatically commit the transaction after the first DDL statement has been encountered.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 모든 데이터베이스가 트랜잭션이 DDL 문에서 작동하는 것을 허용하지는 않습니다. 일부는 오류를 생성하지만 다른 데이터베이스 (MySQL 포함)는 첫 번째 DDL 문이 발생한 후 자동으로 트랜잭션을 커밋합니다.</target>
        </trans-unit>
        <trans-unit id="b13b4e90376a82c5a033d4ad0a1c0f027cdf0fde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;em&gt;array_push(&amp;amp;collector(), 'foo');&lt;/em&gt; will &lt;em&gt;not&lt;/em&gt; work, it results in a fatal error.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;array_push (&amp;amp; collector (), 'foo'); &lt;/em&gt;것입니다 &lt;em&gt;하지&lt;/em&gt; 작업, 그것은 치명적인 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="870a5197ed9b6e66d1395b987f843d32a944f766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;em&gt;elseif&lt;/em&gt; and &lt;em&gt;else if&lt;/em&gt; will only be considered exactly the same when using curly brackets as in the above example. When using a colon to define your &lt;em&gt;if&lt;/em&gt;/&lt;em&gt;elseif&lt;/em&gt; conditions, you must not separate &lt;em&gt;else if&lt;/em&gt; into two words, or PHP will fail with a parse error.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;elseif&lt;/em&gt; 와 &lt;em&gt;else &lt;/em&gt;&lt;em&gt;if&lt;/em&gt; 는 위의 예에서와 같이 중괄호를 사용할 때 정확히 동일하게 간주됩니다. 콜론을 사용하여 &lt;em&gt;if&lt;/em&gt; / &lt;em&gt;elseif&lt;/em&gt; 조건 을 정의 할 때 &lt;em&gt;else&lt;/em&gt; 단어를 두 단어로 분리하지 않아야합니다. &lt;em&gt;그렇지 않으면&lt;/em&gt; PHP가 구문 분석 오류로 실패합니다.</target>
        </trans-unit>
        <trans-unit id="36df32eedbbf3a8df37decfb5923a272fdec0c63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;strong&gt;&lt;code&gt;MCRYPT_DEV_RANDOM&lt;/code&gt;&lt;/strong&gt; may block until more entropy is available.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 더 많은 엔트로피를 사용할 수있을 때까지 &lt;strong&gt; &lt;code&gt;MCRYPT_DEV_RANDOM&lt;/code&gt; &lt;/strong&gt; 이 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c9f16f4675a44061cc3bb7f962546399b30b005" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;strong&gt;array_unique()&lt;/strong&gt; is not intended to work on multi dimensional arrays.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;array_unique ()&lt;/strong&gt; 는 다차원 배열에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9cef18ec2cc21d2fccf51af6ae70764e4799088c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that JPC and JP2 are capable of having components with different bit depths. In this case, the value for &quot;bits&quot; is the highest bit depth encountered. Also, JP2 files may contain &lt;em&gt;multiple JPEG 2000 codestreams&lt;/em&gt;. In this case, &lt;strong&gt;getimagesize()&lt;/strong&gt; returns the values for the first codestream it encounters in the root of the file.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : JPC와 JP2는 비트 깊이가 다른 구성 요소를 가질 수 있습니다. 이 경우 &quot;비트&quot;의 값은 가장 높은 비트 심도입니다. 또한 JP2 파일에는 &lt;em&gt;여러 JPEG 2000 코드 스트림&lt;/em&gt; 이 포함될 수 있습니다 . 이 경우, &lt;strong&gt;getimagesize ()&lt;/strong&gt; 는 파일 루트에서 처음 발견되는 코드 스트림의 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="53efdd43ff7083d06961a630f816163a6c34ee38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that all &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt;s that have been retrieved by executing this statement will be invalidated when the statement is closed.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 이 명령문을 실행하여 검색된 모든 &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; 는 명령문이 닫힐 때 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="83b9eb4ea7d6d5e7b699cbbb3445f00a67371607" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that other bitwise operations, for instance &lt;em&gt;~&lt;/em&gt; will not work as expected. In other words, it is not possible to retrieve all non-static methods, for example.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 예를 들어 &lt;em&gt;~&lt;/em&gt; 와 같은 다른 비트 단위 연산 은 예상대로 작동하지 않습니다. 즉, 예를 들어 모든 비 정적 메소드를 검색 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2b63c65562f43d2c25d5577b5fefd6f1631c3108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that since &lt;em&gt;return&lt;/em&gt; is a language construct and not a function, the parentheses surrounding its argument are not required and their use is discouraged.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;return&lt;/em&gt; 은 함수가 아닌 언어 구성 이므로 인수를 둘러싼 괄호는 필요하지 않으며 사용을 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4851f38a58339568e1f7e6fc3a12f739e6495b5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that unlike some other languages, the &lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt; statement applies to &lt;em&gt;switch&lt;/em&gt; and acts similar to &lt;em&gt;break&lt;/em&gt;. If you have a &lt;em&gt;switch&lt;/em&gt; inside a loop and wish to continue to the next iteration of the outer loop, use &lt;em&gt;continue 2&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 다른 언어와 달리 &lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt; 문은 &lt;em&gt;switch에&lt;/em&gt; 적용 되며 &lt;em&gt;break&lt;/em&gt; 와 유사하게 작동합니다 . 루프 내부 에 &lt;em&gt;스위치&lt;/em&gt; 가 있고 외부 루프의 다음 반복을 &lt;em&gt;계속&lt;/em&gt; 하려면 &lt;em&gt;계속 2를&lt;/em&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="62351a19a88e26b35b6cf4e26a9151c7a1a960ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that when using ISAPI with IIS, the value will be &lt;em&gt;off&lt;/em&gt; if the request was not made through the HTTPS protocol.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : IIS에서 ISAPI를 사용할 때 HTTPS 프로토콜을 통해 요청하지 않으면 값이 &lt;em&gt;해제&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="68686c64e3775af0ca5ecaeb2cd42c2e058bbcb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On some platforms (such as Windows), &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax()&lt;/a&gt; is only 32767. If you require a range larger than 32767, specifying &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; will allow you to create a range larger than this, or consider using &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 일부 플랫폼 (예 : Windows)에서 &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax ()&lt;/a&gt; 는 32767입니다. 32767보다 큰 범위가 필요한 경우 &lt;code&gt;min&lt;/code&gt; 및 &lt;code&gt;max&lt;/code&gt; 를 지정 하면 이보다 큰 범위를 만들거나 &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand ()를&lt;/a&gt; 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bda3d3fca5cdf8a8010a9e8d8767ef14e4b006f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Optional values do not accept &lt;em&gt;&quot; &quot;&lt;/em&gt; (space) as a separator.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 선택적 값은 &lt;em&gt;&quot;&quot;&lt;/em&gt; (공백)을 구분 기호로 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="bc5eb9e23401fe018ec0d4bf097231fe666490ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  PHP doesn't handle strings like &lt;em&gt;&quot;12,300.2&quot;&lt;/em&gt; correctly by default. See &lt;a href=&quot;language.types.string#language.types.string.conversion&quot;&gt;converting from strings&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP는 기본적으로 &lt;em&gt;&quot;12,300.2&quot;&lt;/em&gt; 와 같은 문자열을 올바르게 처리하지 않습니다 . &lt;a href=&quot;language.types.string#language.types.string.conversion&quot;&gt;문자열 변환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="705dd944bc90edee50813b34a51a590e8077589a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Parent constructors are not called implicitly if the child class defines a constructor. In order to run a parent constructor, a call to &lt;strong&gt;parent::__construct()&lt;/strong&gt; within the child constructor is required. If the child does not define a constructor then it may be inherited from the parent class just like a normal class method (if it was not declared as private).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 자식 클래스가 생성자를 정의하는 경우 부모 생성자는 암시 적으로 호출되지 않습니다. 부모 생성자를 실행 하려면 자식 생성자 내에서 &lt;strong&gt;parent :: __ construct ()를&lt;/strong&gt; 호출 해야합니다. 자식이 생성자를 정의하지 않으면 일반 클래스 메서드처럼 (비공개로 선언되지 않은 경우) 부모 클래스에서 상속 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be5cc5f0a792daae0653fca58d97f8a60dd8e061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Persistent connections have no effect if PHP is used as a CGI program.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP가 CGI 프로그램으로 사용되는 경우 지속적인 연결은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="77eb663821d7bd4d7753f5653da06be447878e5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Persistent database links are an exception to this rule. They are &lt;em&gt;not&lt;/em&gt; destroyed by the garbage collector. See the &lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;persistent connections&lt;/a&gt; section for more information.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 영구 데이터베이스 링크는이 규칙에서 예외입니다. 그들은되어 &lt;em&gt;있지&lt;/em&gt; 가비지 컬렉터에 의해 파괴. 자세한 정보는 &lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;지속적 연결&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6bcd3ea0f07da65c21065051e68c64fb2fc8ff57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please consult the &lt;a href=&quot;https://secure.php.net/manual/en/stream.constants.php&quot;&gt;Streams constant list&lt;/a&gt; for further details on each constant.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 각 상수에 대한 자세한 내용 은 &lt;a href=&quot;https://secure.php.net/manual/en/stream.constants.php&quot;&gt;스트림 상수 목록&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="69c0936fae2f7cf27ca29ae45188b69bbdd2d884" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the null coalescing operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;em&gt;return $foo ?? $bar;&lt;/em&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Null 병합 연산자는 표현식이며 변수가 아니라 표현식의 결과로 평가됩니다. 참조로 변수를 반환하려면 알고 있어야합니다. 문장은 &lt;em&gt;$ foo를 반환 ?? $ bar; &lt;/em&gt;따라서 참조 별 리턴 기능에서 작동하지 않으며 경고가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="3db6fbd49c9f7f282a515c82ce5ca7771329f40b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the ternary operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;em&gt;return $var == 42 ? $a : $b;&lt;/em&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 삼항 연산자는 표현식이며 변수가 아니라 표현식의 결과로 평가됩니다. 참조로 변수를 반환하려면 알고 있어야합니다. 명령문은 &lt;em&gt;$ var == 42? $ a : $ b; &lt;/em&gt;따라서 참조 별 리턴 기능에서 작동하지 않으며 경고가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="13e29677bdd24a6d6adfeb9b4603a45bc995a1f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using &lt;em&gt;array_udiff($array1[0], $array2[0], &quot;data_compare_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 n 차원 배열의 1 차원 만 검사합니다. 물론 &lt;em&gt;array_udiff ($ array1 [0], $ array2 [0], &quot;data_compare_func&quot;)&lt;/em&gt; 를 사용하여 더 깊은 차원을 확인할 수 있습니다 &lt;em&gt;. &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="b94c42aefa0dc187a1cd220b1b25b6edf1b2976a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_udiff_assoc($array1[0], $array2[0], &quot;some_comparison_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 n 차원 배열의 1 차원 만 검사합니다. 물론 예를 들어 &lt;em&gt;array_udiff_assoc ($ array1 [0], $ array2 [0], &quot;some_comparison_func&quot;); &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="11045c1b895ac4a54c844bd69e1ceccb27d71602" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_udiff_uassoc($array1[0], $array2[0], &quot;data_compare_func&quot;, &quot;key_compare_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 n 차원 배열의 1 차원 만 검사합니다. 물론 예를 들어 &lt;em&gt;array_udiff_uassoc ($ array1 [0], $ array2 [0], &quot;data_compare_func&quot;, &quot;key_compare_func&quot;)&lt;/em&gt; 를 사용하여 더 깊은 차원을 확인할 수 있습니다 &lt;em&gt;. &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="1d7da17275215c2db7985dc27afa620e4a323b07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Prior to PHP 5.4.0, &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; contained the same initial information, but was not a &lt;a href=&quot;language.variables.superglobals&quot;&gt;superglobal&lt;/a&gt;. (Note that &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$_SERVER&lt;/var&gt;&lt;/var&gt; were different variables and that PHP handled them as such.)</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 5.4.0 이전에는 &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; 에 동일한 초기 정보가 포함되었지만 &lt;a href=&quot;language.variables.superglobals&quot;&gt;슈퍼 글로벌&lt;/a&gt; 이 아닙니다 . ( &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; 와 &lt;var&gt;&lt;var&gt;$_SERVER&lt;/var&gt;&lt;/var&gt; 는 다른 변수였으며 PHP는 그와 같이 변수를 처리했습니다.)</target>
        </trans-unit>
        <trans-unit id="0ed779e8909975161121e44ec5a3f79b015f8e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Properties cannot be declared final, only classes and methods may be declared as final.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 속성은 final로 선언 될 수 없으며 클래스와 메서드 만 final로 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ebe75f6bb25bcb471ab22cf3ce8d75f68de5a2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Recursive function/method calls with over 100-200 recursion levels can smash the stack and cause a termination of the current script. Especially, infinite recursion is considered a programming error.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 100-200 회 이상의 재귀 수준을 가진 재귀 함수 / 메소드 호출은 스택을 분쇄하고 현재 스크립트를 종료시킬 수 있습니다. 특히 무한 재귀는 프로그래밍 오류로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="694ab7d50c7e6ccbb3a09fd6823b6a2150a80408" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Setting &lt;code&gt;new_cache_expire&lt;/code&gt; is of value only, if &lt;em&gt;session.cache_limiter&lt;/em&gt; is set to a value &lt;em&gt;different&lt;/em&gt; from &lt;em&gt;nocache&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 설정 &lt;code&gt;new_cache_expire&lt;/code&gt; 는 경우에만 가치가 &lt;em&gt;session.cache_limiter를이&lt;/em&gt; 값으로 설정되어 &lt;em&gt;다른&lt;/em&gt; 에서 &lt;em&gt;NOCACHE&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="53761471548a74868f00e6d53ef46953c4dc67b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is appended to a stream, data in the internal buffers is processed through the new filter at that time. This differs from the behavior of &lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 스트림 데이터는 리소스 (로컬 및 원격 모두)에서 청크 단위로 읽히고 소비되지 않은 데이터는 내부 버퍼에 보관됩니다. 새 필터가 스트림에 추가되면 내부 버퍼의 데이터는 그때 새 필터를 통해 처리됩니다. 이것은 &lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend ()&lt;/a&gt; 의 동작과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="7adb115ef5028ea31f24803997913d9a712c050f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is prepended to a stream, data in the internal buffers, which has already been processed through other filters will &lt;em&gt;not&lt;/em&gt; be reprocessed through the new filter at that time. This differs from the behavior of &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 스트림 데이터는 리소스 (로컬 및 원격 모두)에서 청크 단위로 읽히고 소비되지 않은 데이터는 내부 버퍼에 보관됩니다. 새 필터가 스트림 앞에 추가되면 다른 필터를 통해 이미 처리 된 내부 버퍼의 데이터는 그 때 새 필터를 통해 재 처리 &lt;em&gt;되지 않습니다&lt;/em&gt; . 이것은 &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append ()&lt;/a&gt; 의 동작과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="6c19aef782d35fb01a5645fc8ffbd12f7bf57d3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;code&gt;encoding&lt;/code&gt; parameter was moved from the third position to the fourth in PHP 5.2.0. For backward compatibility, &lt;code&gt;encoding&lt;/code&gt; can be specified as the third parameter, but doing so is deprecated and will be removed in the future.</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt; : PHP 5.2.0에서 &lt;code&gt;encoding&lt;/code&gt; 매개 변수가 3 위에서 4 위로 이동했습니다. 이전 버전과의 호환성을 위해 &lt;code&gt;encoding&lt;/code&gt; 을 세 번째 매개 변수로 지정할 수 있지만 더 이상 사용되지 않으며 향후 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="db0510aa23a37d03f0c1cbbf3b91c576c4438335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;strong&gt;&lt;code&gt;GLOB_BRACE&lt;/code&gt;&lt;/strong&gt; flag is not available on some non GNU systems, like Solaris.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt; &lt;code&gt;GLOB_BRACE&lt;/code&gt; &lt;/strong&gt; 플래그는 Solaris와 같은 일부 GNU 시스템에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cba581f28bd754ab7f12363a75851ed96d225119" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;strong&gt;ssh2_auth_agent()&lt;/strong&gt; function will only be available when the ssh2 extension is compiled with libssh &amp;gt;= 1.2.3.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;ssh2_auth_agent ()&lt;/strong&gt; 함수는 ssh2 확장자가 libssh&amp;gt; = 1.2.3으로 컴파일 된 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a61d4f1f4d106376c5c2d2c8552b36b63c5ea6c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;var&gt;php.ini&lt;/var&gt; setting mysqli.reconnect is ignored by the mysqlnd driver, so automatic reconnection is never attempted.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;var&gt;php.ini&lt;/var&gt; 설정 mysqli.reconnect는 mysqlnd 드라이버에서 무시되므로 자동 재 연결은 시도되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ba3c74489a6f3e3ad088fecdbe3a4e82d8dc3b1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The @-operator works only on &lt;a href=&quot;language.expressions&quot;&gt;expressions&lt;/a&gt;. A simple rule of thumb is: if you can take the value of something, you can prepend the @ operator to it. For instance, you can prepend it to variables, function and &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; calls, constants, and so forth. You cannot prepend it to function or class definitions, or conditional structures such as &lt;em&gt;if&lt;/em&gt; and &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;, and so forth.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : @ 연산자는 &lt;a href=&quot;language.expressions&quot;&gt;표현식&lt;/a&gt; 에서만 작동합니다 . 간단한 경험 법칙은 무엇인가의 가치를 취할 수 있다면 @ 연산자를 앞에 붙일 수 있습니다. 예를 들어 변수 앞에 변수, 함수 및 &lt;a href=&quot;function.include&quot;&gt;포함,&lt;/a&gt; 호출, 상수 등 을 추가 할 수 있습니다 . 함수 또는 클래스 정의 또는 &lt;em&gt;if&lt;/em&gt; 및 &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; 등과 같은 조건부 구조 앞에 추가 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="05adb63c273cb33db47425c7a9422e413c728301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The PHP 4 method of declaring a variable with the &lt;em&gt;var&lt;/em&gt; keyword is still supported for compatibility reasons (as a synonym for the public keyword). In PHP 5 before 5.1.3, its usage would generate an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; warning.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;var&lt;/em&gt; 키워드 로 변수를 선언하는 PHP 4 방법은 호환성 이유로 (공용 키워드의 동의어) 여전히 지원됩니다. 5.1.3 이전의 PHP 5에서는 사용법이 &lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt; 경고를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="797b736ee96a69067001662797f841a9673eb0ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The beginning of an array is indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To make the distinction, check that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;prev()&lt;/strong&gt; element is not &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 배열의 시작은 &lt;a href=&quot;language.types.boolean&quot;&gt;부울 &lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 요소와 구별 할 수 없습니다 . 구별을 위해, 확인 &lt;a href=&quot;function.key&quot;&gt;키 ()&lt;/a&gt; 의 &lt;strong&gt;이전 ()&lt;/strong&gt; 요소가 아닌 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="72c11aedb6682845dffefbe596a49bda695eeed2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The behavior of the parameter &lt;code&gt;bestfit&lt;/code&gt; changed in Imagick 3.0.0. Before this version given dimensions 400x400 an image of dimensions 200x150 would be left untouched. In Imagick 3.0.0 and later the image would be scaled up to size 400x300 as this is the &quot;best fit&quot; for the given dimensions. If &lt;code&gt;bestfit&lt;/code&gt; parameter is used both width and height must be given.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 매개 변수 &lt;code&gt;bestfit&lt;/code&gt; 의 동작은 Imagick 3.0.0에서 변경되었습니다. 이 버전에 400x400 크기가 주어지기 전에 200x150 크기의 이미지는 그대로 유지됩니다. Imagick 3.0.0 이상에서 이미지는 지정된 크기에 &quot;가장 적합&quot;하기 때문에 400x300 크기로 확장됩니다. 경우 &lt;code&gt;bestfit&lt;/code&gt; 매개 변수가 모두 폭을 사용하고 높이를 부여해야합니다.</target>
        </trans-unit>
        <trans-unit id="c7a0a181f8b9b9163024948509db90e001cf3889" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The end of an array and the result of calling &lt;strong&gt;current()&lt;/strong&gt; on an empty array are indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;current()&lt;/strong&gt; and properly check if the value is really an element of the array, the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;current()&lt;/strong&gt; element should be checked to be strictly different from &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 배열의 끝과 빈 배열에서 &lt;strong&gt;current ()&lt;/strong&gt; 호출의 결과 는 &lt;a href=&quot;language.types.boolean&quot;&gt;부울 &lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 요소와 구별 할 수 없습니다 . &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 요소를 포함 할 수있는 배열을 올바르게 탐색하려면 &lt;strong&gt;foreach ()&lt;/strong&gt; 함수를 참조하십시오 . 계속 사용하려면 &lt;strong&gt;현재 ()&lt;/strong&gt; 제대로 값이 정말로 배열의 요소 인 경우 확인 &lt;a href=&quot;function.key&quot;&gt;키 ()&lt;/a&gt; 의 &lt;strong&gt;현재 ()&lt;/strong&gt; 요소에서 엄격하게 다른 것으로 확인해야합니다 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a7452d0225e19d430990169f01cd94f5a95f95c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The end of an array is indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;next()&lt;/strong&gt; and properly check if the end of the array has been reached, verify that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 배열의 끝은 &lt;a href=&quot;language.types.boolean&quot;&gt;부울 &lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 요소와 구별 할 수 없습니다 . &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 요소를 포함 할 수있는 배열을 올바르게 탐색하려면 &lt;strong&gt;foreach ()&lt;/strong&gt; 함수를 참조하십시오 . 여전히 &lt;strong&gt;next ()를&lt;/strong&gt; 사용 하고 배열의 끝에 도달했는지 제대로 확인하려면 &lt;a href=&quot;function.key&quot;&gt;key ()&lt;/a&gt; 가 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 인지 확인하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="15db7245bfd6b0f65aee8d5976e9e2e8196b3d36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The first argument &lt;var&gt;&lt;var&gt;$argv[0]&lt;/var&gt;&lt;/var&gt; is always the name that was used to run the script.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 첫 번째 인수 &lt;var&gt;&lt;var&gt;$argv[0]&lt;/var&gt;&lt;/var&gt; 은 항상 스크립트를 실행하는 데 사용 된 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c2303f023282b25ab083c3482bf47e0e2af21b3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The function must return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; in order to continue iterating over the &lt;code&gt;iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;iterator&lt;/code&gt; 를 계속 반복하려면 함수가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 리턴해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="322744b30302faddb91c571cc5849a82c0856652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The increment/decrement operators only affect numbers and strings. Arrays, objects and resources are not affected. Decrementing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; values has no effect too, but incrementing them results in &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 증가 / 감소 연산자는 숫자와 문자열에만 영향을줍니다. 배열, 객체 및 리소스는 영향을받지 않습니다. &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 값을 줄이면 효과가 없지만 값을 늘리면 &lt;em&gt;1이&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="3f259d59021d56bcc068b13a1d6561cbb5aa43b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The information about icons are retrieved from the icon with the highest bitrate.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 아이콘에 대한 정보는 비트 전송률이 가장 높은 아이콘에서 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="f2cc2aeda8619daf8f16a52ab8f3fcbd28a9cacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The order of elements with identical priority is &lt;em&gt;undefined&lt;/em&gt;. It may differ from the order in which they have been inserted.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 우선 순위가 동일한 요소의 순서는 &lt;em&gt;정의되어 있지 않습니다&lt;/em&gt; . 삽입 순서와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebdbe6afb65aaa13f7e20882af52c2b9177ae76d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The return value for an empty array is indistinguishable from the return value in case of an array which has a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; first element. To properly check the value of the first element of an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, first check the &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; of the array, or check that &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is not &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, after calling &lt;strong&gt;reset()&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 빈 배열의 반환 값은 &lt;a href=&quot;language.types.boolean&quot;&gt;부울 &lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 첫 번째 요소 가있는 배열의 경우 반환 값과 구별 할 수 없습니다 . &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 요소를 포함 할 수있는 배열의 첫 번째 요소 값을 올바르게 확인하려면 먼저 배열 의 &lt;a href=&quot;function.count&quot;&gt;count ()&lt;/a&gt; 를 확인하거나 &lt;strong&gt;reset ()&lt;/strong&gt; 을 호출 한 후 &lt;a href=&quot;function.key&quot;&gt;key ()&lt;/a&gt; 가 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 이 아닌지 확인하십시오 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5511fc29bad4ece699359df6aa515af2719e6146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The script's filename is always passed as an argument to the script, therefore the minimum value of &lt;var&gt;&lt;var&gt;$argc&lt;/var&gt;&lt;/var&gt; is &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 스크립트의 파일 이름은 항상 스크립트에 인수로 전달되므로 &lt;var&gt;&lt;var&gt;$argc&lt;/var&gt;&lt;/var&gt; 의 최소값 은 &lt;em&gt;1&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f9235f1073dec62446b1b549e4a75de43fe4d4a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;true&lt;/em&gt;, &lt;em&gt;false&lt;/em&gt;, &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;none&lt;/em&gt;. Values &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt; and &lt;em&gt;false&lt;/em&gt; result in &lt;em&gt;&quot;&quot;&lt;/em&gt;, and values &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt; and &lt;em&gt;true&lt;/em&gt; result in &lt;em&gt;&quot;1&quot;&lt;/em&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used (as of PHP 5.6.1). Characters &lt;em&gt;?{}|&amp;amp;~!()^&quot;&lt;/em&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : ini 파일의 키로 사용해서는 안되는 예약어가 있습니다. 여기에는 &lt;em&gt;null&lt;/em&gt; , &lt;em&gt;yes&lt;/em&gt; , &lt;em&gt;no&lt;/em&gt; , &lt;em&gt;true&lt;/em&gt; , &lt;em&gt;false&lt;/em&gt; , &lt;em&gt;on&lt;/em&gt; , &lt;em&gt;off&lt;/em&gt; , &lt;em&gt;none이 포함&lt;/em&gt; 됩니다. &lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt; 모드를 사용 하지 않는 한 , 값은 &lt;em&gt;null&lt;/em&gt; , &lt;em&gt;off&lt;/em&gt; , &lt;em&gt;no&lt;/em&gt; 및 &lt;em&gt;false&lt;/em&gt; 는 &lt;em&gt;&quot;&quot;&lt;/em&gt; 이고, 값 &lt;em&gt;on&lt;/em&gt; , &lt;em&gt;yes&lt;/em&gt; 및 &lt;em&gt;true&lt;/em&gt; 는 &lt;em&gt;&quot;1&quot;&lt;/em&gt; 입니다 (PHP 5.6.1 기준). 문자 &lt;em&gt;? {} | &amp;amp; ~! () ^ &quot;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt; 키의 어느 곳에서나 사용해서는 안되며 값에 특별한 의미가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="68ce4c01eeacb9d0a7b15639a5fc5874855c67bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;true&lt;/em&gt;, &lt;em&gt;false&lt;/em&gt;, &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;none&lt;/em&gt;. Values &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt; and &lt;em&gt;false&lt;/em&gt; result in &lt;em&gt;&quot;&quot;&lt;/em&gt;, and values &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt; and &lt;em&gt;true&lt;/em&gt; result in &lt;em&gt;&quot;1&quot;&lt;/em&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used. Characters &lt;em&gt;?{}|&amp;amp;~![()^&quot;&lt;/em&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : ini 파일의 키로 사용해서는 안되는 예약어가 있습니다. 여기에는 &lt;em&gt;null&lt;/em&gt; , &lt;em&gt;yes&lt;/em&gt; , &lt;em&gt;no&lt;/em&gt; , &lt;em&gt;true&lt;/em&gt; , &lt;em&gt;false&lt;/em&gt; , &lt;em&gt;on&lt;/em&gt; , &lt;em&gt;off&lt;/em&gt; , &lt;em&gt;none이 포함&lt;/em&gt; 됩니다. &lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt; 모드를 사용 하지 않으면 값 &lt;em&gt;null&lt;/em&gt; , &lt;em&gt;off&lt;/em&gt; , &lt;em&gt;no&lt;/em&gt; 및 &lt;em&gt;false&lt;/em&gt; 는 &lt;em&gt;&quot;&quot;&lt;/em&gt; 이고, &lt;em&gt;on&lt;/em&gt; , &lt;em&gt;yes&lt;/em&gt; 및 &lt;em&gt;true&lt;/em&gt; 값 은 &lt;em&gt;&quot;1&quot;&lt;/em&gt; 입니다. 문자 &lt;em&gt;? {} | &amp;amp; ~! [() ^ &quot;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt; 키의 어느 곳에서나 사용해서는 안되며 값에 특별한 의미가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="09f158abad43ad2f1180aac88554afc262d603b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There is no decrypt function, since &lt;strong&gt;crypt()&lt;/strong&gt; uses a one-way algorithm.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;crypt ()&lt;/strong&gt; 는 단방향 알고리즘을 사용 하므로 암호 해독 기능이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b14586a935cc6f95f977cf49ccb2eff457062906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There is no reference sign on a function call - only on function definitions. Function definitions alone are enough to correctly pass the argument by reference. As of PHP 5.3.0, you will get a warning saying that &quot;call-time pass-by-reference&quot; is deprecated when you use &amp;amp; in &lt;em&gt;foo(&amp;amp;$a);&lt;/em&gt;. And as of PHP 5.4.0, call-time pass-by-reference was removed, so using it will raise a fatal error.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 함수 호출에는 함수 정의에만 참조 부호가 없습니다. 함수 정의만으로도 인수를 참조로 올바르게 전달할 수 있습니다. PHP 5.3.0부터 &amp;amp; in &lt;em&gt;foo (&amp;amp; $ a);&lt;/em&gt; 를 사용하면 &quot;call-time pass-by-reference&quot;가 더 이상 사용되지 않는다는 경고가 표시됩니다 &lt;em&gt;. &lt;/em&gt;. 그리고 PHP 5.4.0부터 call-time pass-by-reference가 제거되었으므로이를 사용하면 치명적인 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="162b17373ec79e11adcc7f9f8189c49119424bb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This checks the current node, not the entire document.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 전체 문서가 아닌 현재 노드를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d24de6799f8d49feef323c75f4cd70637edb3b4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This does not mean to &lt;em&gt;always&lt;/em&gt; quote the key. Do not quote keys which are &lt;a href=&quot;language.constants&quot;&gt;constants&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt;, as this will prevent PHP from interpreting them.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;항상&lt;/em&gt; 키를 인용하는 것은 아닙니다 . &lt;a href=&quot;language.constants&quot;&gt;상수&lt;/a&gt; 또는 &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;변수&lt;/a&gt; 인 키는 인용하지 마십시오. 이렇게하면 PHP가이를 해석하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="d7538a5249f4cb09e5a0782ceb1f4693aa5c3e6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This format is not compatible with ISO-8601, but is left this way for backward compatibility reasons. Use &lt;strong&gt;&lt;code&gt;DateTime::ATOM&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;DATE_ATOM&lt;/code&gt;&lt;/strong&gt; for compatibility with ISO-8601 instead.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 형식은 ISO-8601과 호환되지 않지만 이전 버전과의 호환성을 위해이 방법으로 남겨집니다. 대신 ISO-8601과의 호환성을 위해 &lt;strong&gt; &lt;code&gt;DateTime::ATOM&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;DATE_ATOM&lt;/code&gt; &lt;/strong&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3123a11a4f68ecfb64e3ecc819f2f08878026bd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function does &lt;em&gt;not&lt;/em&gt; open a connection. It checks whether the given parameters are plausible and can be used to open a connection as soon as one is needed.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 연결을 열지 &lt;em&gt;않습니다&lt;/em&gt; . 주어진 매개 변수가 그럴듯한 지 확인하고 필요한 즉시 연결을 여는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85d91568fc1bcd1472d151acd63555d4f778b97a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function exists when compiled with DBMaker, IBM DB2 or UnixODBC support.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 DBMaker, IBM DB2 또는 UnixODBC 지원으로 컴파일 할 때 존재합니다.</target>
        </trans-unit>
        <trans-unit id="644eb1afabe7efc3061063ab30e6e8d2bc59ec52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is only available with Zend Engine 2 (PHP &amp;gt;= 5.0.0).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 Zend Engine 2에서만 사용할 수 있습니다 (PHP&amp;gt; = 5.0.0).</target>
        </trans-unit>
        <trans-unit id="beccaa590a96a59db1a663b37d10711704b52838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is similar to &lt;a href=&quot;function.ob-end-flush&quot;&gt;ob_end_flush()&lt;/a&gt;, except that this function also returns the buffer as a string.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 버퍼를 문자열로 반환한다는 점을 제외하면 &lt;a href=&quot;function.ob-end-flush&quot;&gt;ob_end_flush ()&lt;/a&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="c2e68509685046a6d20b541b442887cf98b838f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is similar to &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush()&lt;/a&gt;, except that &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush()&lt;/a&gt; returns the buffer as a string.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush ()&lt;/a&gt; 가 버퍼를 문자열로 반환 한다는 점을 제외하면 &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush ()&lt;/a&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="b7d2f676b8b5b4d7a5612a0d41d2cbfd2243c4b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function isn't available on some systems (e.g. old Sun OS).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 일부 시스템 (예 : 이전 Sun OS)에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3653abc4878c639f8325e01b39301d0a68f7c3a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_diff_assoc($array1[0], $array2[0]);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 n 차원 배열의 한 차원 만 검사합니다. 물론 예를 들어 &lt;em&gt;array_diff_assoc ($ array1 [0], $ array2 [0]); &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="6e1a1f98f0f2ff03551021585d437e30329aa16f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function requires ICU version &amp;ge; 52.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능을 사용하려면 ICU 버전 &amp;ge; 52가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="121694e1e21eace6dcadd5cc54238c7ed869c233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function returns a copy of the passed arguments only, and does not account for default (non-passed) arguments.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 전달 된 인수의 복사본 만 반환하며 기본 (통과되지 않은) 인수는 고려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da9ceb2ecac7005ea12d39a71d6ea3e1ad30e960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This option is only used when &lt;code&gt;what&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 옵션 만 사용하는 &lt;code&gt;what&lt;/code&gt; 설정되어 &lt;strong&gt; &lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="157e9157d41b3f424295cecc0d6b5bb17ba35e9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This parameter is case-insensitive.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 매개 변수는 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="27fd8e39a2b20c5953200afead4bcbe3fd858c84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This parameter only applies when not making asynchronous connection attempts.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 매개 변수는 비동기 연결을 시도하지 않는 경우에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="51c5dc82036ce59170b3b7ec874a7f7801584627" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This variable is not available when &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt; is disabled.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt; 가 비활성화 된 경우이 변수를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3ab79ce262efeb9f7078f4ddfff9f82f14037f29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To check the type and value of an &lt;a href=&quot;language.expressions&quot;&gt;expression&lt;/a&gt;, use the &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;a href=&quot;language.expressions&quot;&gt;표현식&lt;/a&gt; 의 유형과 값을 확인하려면 &lt;a href=&quot;function.var-dump&quot;&gt;var_dump ()&lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="349f12f0a9978d89cf6c3c08574810acbd90995d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To reiterate, inside a double-quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it's valid to not surround array indexes with quotes so &lt;em&gt;&quot;$foo[bar]&quot;&lt;/em&gt; is valid. See the above examples for details on why as well as the section on &lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;variable parsing in strings&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 큰 따옴표로 묶인 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 안에서 배열 인덱스를 따옴표로 묶지 않는 것이 유효하므로 &lt;em&gt;&quot;$ foo [bar]&quot;&lt;/em&gt; 가 유효합니다. &lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;문자열의 변수 구문 분석에&lt;/a&gt; 대한 섹션과 이유에 대한 자세한 내용은 위의 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e4f8270fe3df65acb6c25f69a2a4055a8bcf022" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To remove a set of stored constants (without clearing the entire cache), an empty array may be passed as the &lt;code&gt;constants&lt;/code&gt; parameter, effectively clearing the stored value(s).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 전체 캐시를 지우지 않고 저장된 상수 세트를 제거하기 위해 빈 배열이 &lt;code&gt;constants&lt;/code&gt; 매개 변수 로 전달되어 저장된 값을 효과적으로 지울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5d7b9040667d3bf1f2f6c3456fbb4c445a399cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;em&gt;(string) $elem1 === (string) $elem2&lt;/em&gt; i.e. when the string representation is the same, the first element will be used.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;(문자열) $ elem1 === (문자열) $ elem2 인&lt;/em&gt; 경우에만 두 요소가 동일한 것으로 간주됩니다. 즉, 문자열 표현이 동일한 경우 첫 번째 요소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="84577bf1f5b13952e52ff60e46d20a8b198cba5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;em&gt;(string) $elem1 === (string) $elem2&lt;/em&gt;. In words: when the string representation is the same.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;(string) $ elem1 === (string) $ elem2 인&lt;/em&gt; 경우에만 두 요소가 동일한 것으로 간주됩니다 . 한마디로 : 문자열 표현이 동일 할 때.</target>
        </trans-unit>
        <trans-unit id="e2f63a6045dd4914f29ab6abfb1100badd24599a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under Apache 2, you must set &lt;em&gt;UseCanonicalName = On&lt;/em&gt; and &lt;em&gt;ServerName&lt;/em&gt;. Otherwise, this value reflects the hostname supplied by the client, which can be spoofed. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Apache 2에서는 &lt;em&gt;UseCanonicalName = On&lt;/em&gt; 및 &lt;em&gt;ServerName을&lt;/em&gt; 설정해야합니다 . 그렇지 않으면이 값은 클라이언트가 제공 한 호스트 이름을 반영하며 스푸핑 될 수 있습니다. 보안 종속 컨텍스트에서이 값에 의존하는 것은 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="51cce9de520418f96a7faa7962c018914bd9493d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under the Apache 2, you must set &lt;em&gt;UseCanonicalName = On&lt;/em&gt;, as well as &lt;em&gt;UseCanonicalPhysicalPort = On&lt;/em&gt; in order to get the physical (real) port, otherwise, this value can be spoofed and it may or may not return the physical port value. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 아파치 2에서 설정해야하는 &lt;em&gt;낸다 UseCanonicalName =에&lt;/em&gt; ,뿐만 아니라 &lt;em&gt;UseCanonicalPhysicalPort = 켜기&lt;/em&gt; , 물리적 (실제) 포트를 얻기 위해, 그렇지 않으면,이 값은 스푸핑 될 수 있으며이 또는 물리적 포트 값을 반환하지 않을 수 있습니다. 보안 종속 컨텍스트에서이 값에 의존하는 것은 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60c103e7586d1d3eb647abe1be1df359966e3353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apc_add()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP의 다른 많은 메커니즘과 달리 &lt;strong&gt;apc_add ()&lt;/strong&gt; 를 사용하여 저장된 변수 는 값이 캐시에서 제거 될 때까지 요청간에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9ec604f2b540cec9ecc78ebc50c74a1efa7b688a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apc_store()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP의 다른 많은 메커니즘과 달리 &lt;strong&gt;apc_store ()&lt;/strong&gt; 를 사용하여 저장된 변수 는 요청간에 유지됩니다 (캐시에서 값이 제거 될 때까지).</target>
        </trans-unit>
        <trans-unit id="a6d45e75ec5e51a22e184fed3d4c357cea8982c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apcu_add()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP의 다른 많은 메커니즘과 달리 &lt;strong&gt;apcu_add ()&lt;/strong&gt; 를 사용하여 저장된 변수 는 값이 캐시에서 제거 될 때까지 요청간에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="210b896114853955160a24b5014d1d4b60f84cf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apcu_store()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP의 다른 많은 메커니즘과 달리 &lt;strong&gt;apcu_store ()&lt;/strong&gt; 를 사용하여 저장된 변수 는 값이 캐시에서 제거 될 때까지 요청간에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="e137587f723afcb027d350b9a8e7aa5a37be09ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike parameter passing, here you have to use &lt;em&gt;&amp;amp;&lt;/em&gt; in both places - to indicate that you want to return by reference, not a copy, and to indicate that reference binding, rather than usual assignment, should be done for &lt;var&gt;&lt;var&gt;$myValue&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 매개 변수 전달과는 달리 &lt;em&gt;&amp;amp;&lt;/em&gt; 여기서 두 위치 모두에서 &lt;em&gt;&amp;amp;&lt;/em&gt; 를 사용해야 합니다. 복사본이 아닌 참조로 반환하고 표준 할당 대신 참조 바인딩이 &lt;var&gt;&lt;var&gt;$myValue&lt;/var&gt;&lt;/var&gt; 수행되어야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="7c9eaef74298666c3c1fc2930a7a1e2b7ecf558f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike the &lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;double-quoted&lt;/a&gt; and &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredoc&lt;/a&gt; syntaxes, &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt; and escape sequences for special characters will &lt;em&gt;not&lt;/em&gt; be expanded when they occur in single quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;큰 따옴표&lt;/a&gt; 및 &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredoc&lt;/a&gt; 구문 과 달리 특수 문자의 &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;변수&lt;/a&gt; 및 이스케이프 시퀀스 는 작은 따옴표로 묶인 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 에서 발생할 때 확장 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="85cd43120120e975cead46cf8780d0bc2dc72938" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Updates to supported algorithms by this function (or changes to the default one) must follow the following rules:</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능에 의해 지원되는 알고리즘에 대한 업데이트 (또는 기본 알고리즘으로 변경)는 다음 규칙을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="46338c5286b032f31dd116d6d9b54c14b3cd74bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;em&gt;&quot;&quot;&lt;/em&gt; and &lt;em&gt;\&quot;&lt;/em&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 일반적으로 &lt;code&gt;enclosure&lt;/code&gt; 문자는 필드를 두 배로 늘려서 이스케이프 처리합니다. 그러나 &lt;code&gt;escape&lt;/code&gt; 문자를 대안으로 사용할 수 있습니다. 따라서 기본 매개 변수 값 &lt;em&gt;&quot;&quot;&lt;/em&gt; 및 &lt;em&gt;\ &quot;&lt;/em&gt; 의 의미는 동일합니다. &lt;code&gt;enclosure&lt;/code&gt; 문자 를 이스케이프 처리하는 것 외에는 &lt;code&gt;escape&lt;/code&gt; 문자에 특별한 의미가 없으며 이스케이프 자체도 아닙니다.</target>
        </trans-unit>
        <trans-unit id="aeb150e6967633217011e3e87dc20fc4222c836e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escpaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;em&gt;&quot;&quot;&lt;/em&gt; and &lt;em&gt;\&quot;&lt;/em&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 일반적으로 &lt;code&gt;enclosure&lt;/code&gt; 문자는 필드 내에서 두 배로 설정되어 있습니다. 그러나 &lt;code&gt;escape&lt;/code&gt; 문자를 대안으로 사용할 수 있습니다. 따라서 기본 매개 변수 값 &lt;em&gt;&quot;&quot;&lt;/em&gt; 및 &lt;em&gt;\ &quot;&lt;/em&gt; 의 의미는 동일합니다. &lt;code&gt;enclosure&lt;/code&gt; 문자 를 이스케이프 처리하는 것 외에는 &lt;code&gt;escape&lt;/code&gt; 문자에 특별한 의미가 없으며 이스케이프 자체도 아닙니다.</target>
        </trans-unit>
        <trans-unit id="006c1f8aff28f84c934be3eee74b6a002d23d2fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When a filter is added for read and write, two instances of the filter are created. &lt;strong&gt;stream_filter_append()&lt;/strong&gt; must be called twice with &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt; to get both filter resources.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 읽기 및 쓰기를 위해 필터를 추가하면 두 개의 필터 인스턴스가 작성됩니다. &lt;strong&gt;stream_filter_append ()&lt;/strong&gt; 는 &lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt; 로 두 번 호출 하여 두 필터 자원을 모두 &lt;strong&gt;가져와야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="354cb586e7b09df5e0042f844fedcd8b9685a0fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When a filter is added for read and write, two instances of the filter are created. &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; must be called twice with &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt; to get both filter resources.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 읽기 및 쓰기를 위해 필터를 추가하면 두 개의 필터 인스턴스가 작성됩니다. 두 필터 자원을 모두 얻으려면 &lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt; 를 사용하여 &lt;strong&gt;stream_filter_prepend ()&lt;/strong&gt; 를 두 번 호출해야합니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b24d8ca444de639d1b16f60839b6f1cb024557c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When control enters &lt;strong&gt;apcu_entry()&lt;/strong&gt; the lock for the cache is acquired exclusively, it is released when control leaves &lt;strong&gt;apcu_entry()&lt;/strong&gt;: In effect, this turns the body of &lt;code&gt;generator&lt;/code&gt; into a critical section, disallowing two processes from executing the same code paths concurrently. In addition, it prohibits the concurrent execution of any other APCu functions, since they will acquire the same lock.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 제어가 &lt;strong&gt;apcu_entry ()에&lt;/strong&gt; 들어가면 캐시에 대한 잠금이 독점적으로 획득되며 제어가 &lt;strong&gt;apcu_entry ()를&lt;/strong&gt; 떠날 때 해제됩니다 . 실제로 이것은 &lt;code&gt;generator&lt;/code&gt; 본문을 중요한 섹션으로 전환하여 두 프로세스가 동일한 코드 경로를 실행하지 못하게합니다. 동시에. 또한 다른 APCu 기능은 동일한 잠금을 획득하므로 동시 실행을 금지합니다.</target>
        </trans-unit>
        <trans-unit id="88d2445f0289e71e37aa26452ecb6265aef73f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When exporting an object, &lt;a href=&quot;function.var-export&quot;&gt;var_export()&lt;/a&gt; does not check whether &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; is implemented by the object's class, so re-importing such objects will fail, if __set_state() is not implemented. Particularly, this affects some internal classes.  It is the responsibility of the programmer to verify that only objects will be re-imported, whose class implements __set_state().</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 개체를 내보낼 때, &lt;a href=&quot;function.var-export&quot;&gt;var_export ()는&lt;/a&gt; 여부를 확인하지 않습니다 &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state ()가&lt;/a&gt; 다시 가져 오기 등의 객체가되지 않도록 __set_state ()가 구현되어 있지 않은 경우, 객체의 클래스에 의해 구현됩니다. 특히 이것은 일부 내부 클래스에 영향을줍니다. __set_state ()를 구현하는 클래스의 객체 만 다시 가져 오는지 확인하는 것은 프로그래머의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="aea16fd4f246cfa35f0ce6c4a79db4612284d4db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When using session cookies, specifying an &lt;code&gt;id&lt;/code&gt; for &lt;strong&gt;session_id()&lt;/strong&gt; will always send a new cookie when &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt; is called, regardless if the current session id is identical to the one being set.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 세션 쿠키를 사용하여 지정하는 &lt;code&gt;id&lt;/code&gt; 에 대한 &lt;strong&gt;SESSION_ID는 ()&lt;/strong&gt; 할 때 항상 새로운 쿠키를 보내드립니다 &lt;a href=&quot;function.session-start&quot;&gt;으로 session_start ()가&lt;/a&gt; 호출되는 현재의 세션 ID가 하나 인 세트와 동일한 관계없이 경우.</target>
        </trans-unit>
        <trans-unit id="3814f7d0c42f398dd5ad62a4de4d3087d9b2206d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Windows users should note that this function will only work if the system you run PHP from is Windows Vista/Windows Server 2008 or newer. Windows versions prior to that do not support symbolic links.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Windows 사용자는이 기능은 PHP를 실행하는 시스템이 Windows Vista / Windows Server 2008 이상인 경우에만 작동합니다. 이전 버전의 Windows에서는 심볼릭 링크를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42d3c4b8d8eafb3adb26a4b41a5c42d0f867a50e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Windows uses only the first three characters of prefix.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Windows는 접두사의 처음 세 문자 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="70cb72fa9e98c518aa57a2fc762e7256eaafb94c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You do not have to call &lt;strong&gt;session_destroy()&lt;/strong&gt; from usual code. Cleanup $_SESSION array rather than destroying session data.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 일반적인 코드에서 &lt;strong&gt;session_destroy ()&lt;/strong&gt; 를 호출 할 필요는 없습니다 . 세션 데이터를 손상시키지 않고 $ _SESSION 배열을 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="cc8eb1868c8f1e22d38a8bf2672532a06831439d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You need to have a valid &lt;var&gt;openssl.cnf&lt;/var&gt; installed for this function to operate correctly. See the notes under &lt;a href=&quot;https://secure.php.net/manual/en/openssl.installation.php&quot;&gt;the installation section&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 이 기능이 제대로 작동하려면 유효한 &lt;var&gt;openssl.cnf&lt;/var&gt; 가 설치되어 있어야합니다. 자세한 정보 &lt;a href=&quot;https://secure.php.net/manual/en/openssl.installation.php&quot;&gt;는 설치 섹션&lt;/a&gt; 의 참고 사항 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e6be85082d7e6e7510bfa0eac83e5607bf7e68e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You shouldn't use this value in a script.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 값은 스크립트에서 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="2f6c59defed72fea10bb71a34a97445ba21f63b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Your web server must be configured to create this variable. For example in Apache you'll need &lt;em&gt;HostnameLookups On&lt;/em&gt; inside &lt;var&gt;httpd.conf&lt;/var&gt; for it to exist. See also &lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 웹 서버는이 변수를 작성하도록 구성되어야합니다. 예를 들어 Apache에서는 &lt;var&gt;httpd.conf&lt;/var&gt; 안에 &lt;em&gt;HostnameLookups On&lt;/em&gt; 이 필요 합니다. &lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr ()&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fa6c8c48eb03f1deba42a351f5d20efb1da917d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;language.types.string&quot;&gt;String&lt;/a&gt;s may also be accessed using braces, as in &lt;var&gt;&lt;var&gt;$str{42}&lt;/var&gt;&lt;/var&gt;, for the same purpose.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;var&gt;&lt;var&gt;$str{42}&lt;/var&gt;&lt;/var&gt; 에서와 같이 중괄호를 사용 하여 동일한 목적으로 &lt;a href=&quot;language.types.string&quot;&gt;문자열에&lt;/a&gt; 액세스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7628e4476bd3a18300d2f99059170835957f09b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;em&gt;$this&lt;/em&gt; is a special variable that can't be assigned.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;em&gt;$ this&lt;/em&gt; 는 할당 할 수없는 특수 변수입니다.</target>
        </trans-unit>
        <trans-unit id="05faad22d804718cb5d8635f6afd75b0afadfc4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;&lt;code&gt;IMG_WEIGHTED4&lt;/code&gt;&lt;/strong&gt; is not yet supported.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt; &lt;code&gt;IMG_WEIGHTED4&lt;/code&gt; &lt;/strong&gt; 는 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="418063ef8abc097796c896bbab3832b92ab50883" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Alpha not returned&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;알파는 반환되지 않습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be9a029addfd651d86353c7136778ff3189545af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;An alternative approach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;다른 접근법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64b11f6aa96cb9177af0b317979c7b9116f365c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Availability&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;가용성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfaf83f81f4b7da784c62949af0b2feba7f6bb05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Beware the &lt;em&gt;refcount&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;참조 &lt;/strong&gt;&lt;strong&gt;&lt;em&gt;횟수를&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt; 조심하십시오&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a9513fec8a88ca35417e3ce1ba75a293830a136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Crypt and MAC method &quot;&lt;em&gt;none&lt;/em&gt;&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;암호화 및 MAC 방법 &quot; &lt;em&gt;none&lt;/em&gt; &quot;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6093230ed97d778649dcebd948d7732d75b60ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Dealing with register_globals&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;register_globals 다루기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d327797e5a7860c274ce2618c9dad9075cfa522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 더 이상 &lt;strong&gt;사용되지 않습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61605163321953ad2a814cdf12c6b9c0bf240c32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;File should be opened for writing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;쓰기 위해 파일을 열어야합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a453a593498b25decc218d3b49846acbb99abf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Gotcha&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;잡았다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="071acc5bba3c575b7232d119f7baf051423621c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Possible gotcha: removing middle characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;가능한 문제 : 중간 문자 제거&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d967176c556c574cbff6cf0f10bb58fca6a4bbd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Requirement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;요구 사항&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="589c50552401508244c0ab4a0cae5b71278c6230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Unix Only:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;유닉스 전용 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c636f127af4f1b8d36075331566c72c6272d4b43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Variable availability&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;가변 가용성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c90be4958683e3742e908cf5427ca457d38d0322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Variable variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;변수 변수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98b50541d57a3429f047fcae45034062c5cb0773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When querying boolean values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;부울 값을 쿼리 할 때&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca9d6973b04dbf58e536788eeaf42108e87299c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When querying memory size values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;메모리 크기 값을 쿼리 할 때&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa986b3cd7e4480e0de394228923ed1f4892613b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When using custom (user) filters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;사용자 정의 (사용자) 필터를 사용하는 경우&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14f48930d40a3873d1cdadb8ec5883abf7dadca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Why this function may not exist&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;이 기능이 존재하지 않는 이유&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad09537d40c1470f6064c5ee22eb8ac9d0b0bb52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Windows only&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;Windows 전용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c937b170c6820e8edcac109a0ebda1de78dec32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;apc_cache_info()&lt;/strong&gt; will raise a warning if it is unable to retrieve APC cache data. This typically occurs when APC is not enabled.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;apc_cache_info ()&lt;/strong&gt; 는 APC 캐시 데이터를 검색 할 수없는 경우 경고를 발생시킵니다. 이것은 일반적으로 APC가 활성화되지 않은 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="934ec6b7fb8f4011a731a64de1e8aa353525c338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;apcu_cache_info()&lt;/strong&gt; will raise a warning if it is unable to retrieve APC cache data. This typically occurs when APC is not enabled.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;apcu_cache_info ()&lt;/strong&gt; 는 APC 캐시 데이터를 검색 할 수없는 경우 경고를 발생시킵니다. 이것은 일반적으로 APC가 활성화되지 않은 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="50352f4be22dac68abd361636698bad8f3d28d61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;array_push()&lt;/strong&gt; will raise a warning if the first argument is not an array. This differs from the &lt;em&gt;$var[]&lt;/em&gt; behaviour where a new array is created.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;array_push ()&lt;/strong&gt; 는 첫 번째 인수가 배열이 아닌 경우 경고를 발생시킵니다. 이것은 새 배열이 생성되는 &lt;em&gt;$ var []&lt;/em&gt; 동작 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="574880b873b6e1c81b0f6e63071a33fbd438125e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uudecode()&lt;/strong&gt; neither accepts the &lt;em&gt;begin&lt;/em&gt; nor the &lt;em&gt;end&lt;/em&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;convert_uudecode ()&lt;/strong&gt; 는 uuencoded &lt;em&gt;파일의&lt;/em&gt; 일부인 &lt;em&gt;시작&lt;/em&gt; 또는 &lt;em&gt;끝&lt;/em&gt; 줄을 허용 하지 않습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d03842dc75aeda24f40c6ecd9e5013bda34a5b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uuencode()&lt;/strong&gt; neither produces the &lt;em&gt;begin&lt;/em&gt; nor the &lt;em&gt;end&lt;/em&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;convert_uuencode ()&lt;/strong&gt; 는 uuencoded &lt;em&gt;파일의&lt;/em&gt; 일부인 &lt;em&gt;시작&lt;/em&gt; 줄과 &lt;em&gt;끝&lt;/em&gt; 줄을 생성 하지 않습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f45072db5404f1296b71cc2224b80d0a87b69d37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;imagexbm()&lt;/strong&gt; doesn't apply any padding, so the image width has to be a multiple of 8. This restriction does no longer apply as of PHP 5.6.24 and 7.0.9, respectively.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;imagexbm ()&lt;/strong&gt; 은 패딩을 적용하지 않으므로 이미지 너비는 8의 배수 여야합니다.이 제한은 더 이상 PHP 5.6.24 및 7.0.9부터 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="20b94dc758ab8fb0ec786ab2f0ca8e74c0b8ef60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;register_globals: important note&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;register_globals : 중요 참고 사항&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42fb3aa3b82aaf1863a0e88cfcce5237f5b36c21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;socket_getsockname()&lt;/strong&gt; should not be used with &lt;strong&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/strong&gt; sockets created with &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect()&lt;/a&gt;. Only sockets created with &lt;a href=&quot;function.socket-accept&quot;&gt;socket_accept()&lt;/a&gt; or a primary server socket following a call to &lt;a href=&quot;function.socket-bind&quot;&gt;socket_bind()&lt;/a&gt; will return meaningful values.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;socket_getsockname ()&lt;/strong&gt; 은 &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect ()로&lt;/a&gt; 만든 &lt;strong&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/strong&gt; 소켓 과 함께 사용하면 안됩니다 . &lt;a href=&quot;function.socket-accept&quot;&gt;socket_accept ()&lt;/a&gt; 또는 &lt;a href=&quot;function.socket-bind&quot;&gt;socket_bind ()&lt;/a&gt; 호출 후 기본 서버 소켓으로 작성된 소켓 만 의미있는 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5f4260bd163e602f065c7f4027f264aa488cf254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;unserialize_callback_func directive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt;unserialize_callback_func 지시어&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eb853d7607e9c08b5d0921af9b66199bd98b521" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: An exception is raised even when the &lt;strong&gt;&lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt;&lt;/strong&gt; attribute is not &lt;strong&gt;&lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;strong&gt; &lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt; &lt;/strong&gt; 속성이 &lt;strong&gt; &lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt; &lt;/strong&gt; 이 아닌 경우에도 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="cbc4048f611a3132ca9d347a26ccba8fb0cb97d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: As of PHP 7.1.0, &lt;strong&gt;rand()&lt;/strong&gt; uses the same random number generator as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;. To preserve backwards compatibility &lt;strong&gt;rand()&lt;/strong&gt; allows &lt;code&gt;max&lt;/code&gt; to be smaller than &lt;code&gt;min&lt;/code&gt; as opposed to returning &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 7.1.0부터 &lt;strong&gt;rand ()&lt;/strong&gt; 는 &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand ()&lt;/a&gt; 와 동일한 난수 생성기를 사용합니다 . 이전 버전과의 호환성을 유지하기 위해 &lt;strong&gt;rand ()&lt;/strong&gt; 는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand ()&lt;/a&gt; 로 반환하는 것과 달리 &lt;code&gt;max&lt;/code&gt; 가 &lt;code&gt;min&lt;/code&gt; 보다 작도록합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad19dd84d8b3b98f3c1d71fea2a050d6bf1e64cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: As of PHP 7.1.0, &lt;strong&gt;srand()&lt;/strong&gt; has been made an alias of &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : PHP 7.1.0부터 &lt;strong&gt;srand ()&lt;/strong&gt; 는 &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand ()&lt;/a&gt; 의 별칭이되었습니다 .</target>
        </trans-unit>
        <trans-unit id="75059576602ab1168c47374d6b9fe9b656cee4d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Because this is a language construct and not a function, it cannot be called using &lt;a href=&quot;functions.variable-functions&quot;&gt;variable functions&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 이것은 함수가 아닌 언어 구성이므로 &lt;a href=&quot;functions.variable-functions&quot;&gt;변수 함수를&lt;/a&gt; 사용하여 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2fd0de65f8fd451e5c0d00a4fb49d69d34fe98ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: By default, only userspace functions may be removed, renamed, or modified. In order to override internal functions, you must enable the &lt;em&gt;runkit.internal_override&lt;/em&gt; setting in &lt;var&gt;php.ini&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 기본적으로 사용자 공간 기능 만 제거, 이름 변경 또는 수정할 수 있습니다. 내부 함수를 재정의하려면 &lt;var&gt;php.ini&lt;/var&gt; 에서 &lt;em&gt;runkit.internal_override&lt;/em&gt; 설정을 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="badb8b27e25d44573dd0a5f1cb9420c91795df35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Context support was added with PHP 5.0.0. For a description of &lt;em&gt;contexts&lt;/em&gt;, refer to &lt;a href=&quot;https://secure.php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 컨텍스트 지원은 PHP 5.0.0에서 추가되었습니다. &lt;em&gt;컨텍스트에&lt;/em&gt; 대한 설명은 &lt;a href=&quot;https://secure.php.net/manual/en/book.stream.php&quot;&gt;스트림을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="272fc45e23be4259517f454c376185b0442bfb55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Field names returned by this function are &lt;em&gt;case-sensitive&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수가 반환하는 필드 이름은 &lt;em&gt;대소 문자를 구분&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="46dcefa5ab921ba26bf2d7b75863d1ad5213d4c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For maximum portability, it is recommended to always use forward slashes (&lt;em&gt;/&lt;/em&gt;) as directory separator in ZIP filenames.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 이식성을 최대화하려면 항상 ZIP 파일 이름에서 슬래시 ( &lt;em&gt;/&lt;/em&gt; )를 디렉토리 구분 기호로 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7e26d28b7649640cf1deee152450b5042c4c5f20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the &lt;a href=&quot;https://secure.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt; run-time configuration option may help resolve the problem.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : Macintosh 컴퓨터에서 파일을 읽거나 Macintosh 컴퓨터에서 만든 파일을 읽을 때 PHP가 줄 끝을 제대로 인식하지 못하는 경우 &lt;a href=&quot;https://secure.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt; 런타임 구성 옵션을 활성화 하면 문제를 해결하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e40d5ae990c4dfd1943c6e73eb36fd3f3872566f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Instead of a function name, an array containing an object reference and a method name can also be supplied.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 함수 이름 대신 객체 참조와 메서드 이름이 포함 된 배열을 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c1489fb70a636f364207ad07b8262ad5d867b9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint()&lt;/a&gt;, &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file()&lt;/a&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 샌드 박스 지원 ( &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint ()&lt;/a&gt; , &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file ()&lt;/a&gt; 및 &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; 클래스에 필요)은 PHP 5.1.0 또는 패치 된 PHP 5.0 버전에서만 사용할 수 있으며 스레드 안전성을 활성화해야합니다. 자세한 내용은 runkit 패키지에 포함 된 &lt;var&gt;README&lt;/var&gt; 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ad7763aed41b08823438f7da93b7e60e75038c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint()&lt;/a&gt;, &lt;strong&gt;runkit_lint_file()&lt;/strong&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 샌드 박스 지원 ( &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint ()&lt;/a&gt; , &lt;strong&gt;runkit_lint_file ()&lt;/strong&gt; 및 &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; 클래스에 필요)은 PHP 5.1.0 또는 패치 된 PHP 5.0 버전에서만 사용할 수 있으며 스레드 안전성을 활성화해야합니다. 자세한 내용은 runkit 패키지에 포함 된 &lt;var&gt;README&lt;/var&gt; 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="94e356406f33c2ab758209e8d6f2b5df9c04d6e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;strong&gt;runkit_lint()&lt;/strong&gt;, &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file()&lt;/a&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 샌드 박스 지원 ( &lt;strong&gt;runkit_lint ()&lt;/strong&gt; , &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file ()&lt;/a&gt; 및 &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; 클래스에 필요)은 PHP 5.1.0 또는 패치 된 PHP 5.0 버전에서만 사용할 수 있으며 스레드 안전성을 활성화해야합니다. 자세한 내용은 runkit 패키지에 포함 된 &lt;var&gt;README&lt;/var&gt; 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b698051f55033ed973cd69795f29dc1f24dd7203" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: SimpleXML has made a rule of adding iterative properties to most methods. They cannot be viewed using &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; or anything else which can examine objects.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : SimpleXML은 대부분의 메서드에 반복 속성을 추가하는 규칙을 만들었습니다. &lt;a href=&quot;function.var-dump&quot;&gt;var_dump ()&lt;/a&gt; 또는 객체를 검사 할 수있는 다른 방법으로는 볼 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="164dc5f19d59b9eef9c306475386cba9b2be9ce0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The optional parameters &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; were added in Tidy 2.0.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 선택적 매개 변수 &lt;code&gt;config&lt;/code&gt; 및 &lt;code&gt;encoding&lt;/code&gt; 이 Tidy 2.0에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="860a1e857b8fa76d110933a8a9c0d4481125c6ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The public key subsystem is used for managing public keys on a server to which the client is &lt;em&gt;already&lt;/em&gt; authenticated. To authenticate to a remote system using public key authentication, use the &lt;a href=&quot;function.ssh2-auth-pubkey-file&quot;&gt;ssh2_auth_pubkey_file()&lt;/a&gt; function instead.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 공개 키 서브 시스템은 클라이언트가 &lt;em&gt;이미&lt;/em&gt; 인증 된 서버에서 공개 키를 관리하는 데 사용됩니다 . 공개 키 인증을 사용하여 원격 시스템을 인증하려면 &lt;a href=&quot;function.ssh2-auth-pubkey-file&quot;&gt;ssh2_auth_pubkey_file ()&lt;/a&gt; 함수를 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="69d62c83bf9b5244445cd5f7f09cec892b3edd5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The results of this function are cached. See &lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache()&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능의 결과는 캐시됩니다. 자세한 내용은 &lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache ()&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="389c050290733e15ad81fd88ed65abd902071568" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is no need to seed the random number generator with &lt;a href=&quot;function.srand&quot;&gt;srand()&lt;/a&gt; or &lt;strong&gt;mt_srand()&lt;/strong&gt; as this is done automatically.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 자동으로 수행되므로 &lt;a href=&quot;function.srand&quot;&gt;srand ()&lt;/a&gt; 또는 &lt;strong&gt;mt_srand ()&lt;/strong&gt; 로 &lt;strong&gt;난수&lt;/strong&gt; 생성기를 시드 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="529b6a53a248d797ed53145da8ae5a0239b9175e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is no need to seed the random number generator with &lt;strong&gt;srand()&lt;/strong&gt; or &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt; as this is done automatically.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 자동으로 수행되므로 &lt;strong&gt;srand ()&lt;/strong&gt; 또는 &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand ()&lt;/a&gt; 로 난수 생성기를 시드 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a6fa999edd8b8e28353b4f1278b8f60258d58b94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function assigns new keys to the elements in &lt;code&gt;array&lt;/code&gt;. It will remove any existing keys that may have been assigned, rather than just reordering the keys.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 &lt;code&gt;array&lt;/code&gt; 의 요소에 새 키를 할당합니다 . 키를 다시 정렬하는 대신 할당되었을 수있는 기존 키를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="d9f7c958550345d430d968287a1a3c61ffcd5c29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function cannot be used to manipulate the currently running (or chained) method.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능을 사용하여 현재 실행중인 (또는 연결된) 방법을 조작 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="655366598929afc2948ef36672228068ff12c909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is binary-safe.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 이진 안전합니다.</target>
        </trans-unit>
        <trans-unit id="fdb7976c2598c8945a4bba37c6b00acc62301ed3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is disabled when PHP is running in &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 PHP가 &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;안전 모드&lt;/a&gt; 에서 실행될 때 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="5bd10b388b196fba7a0b4777270974ff360515c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is not implemented on Windows platforms.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 Windows 플랫폼에서 구현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="285bf29d68ff107c608e4223134bd346ed31f2da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available if PHP is compiled using &lt;strong&gt;--with-t1lib[=DIR]&lt;/strong&gt; .</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 &lt;strong&gt;--with-t1lib [= DIR]을&lt;/strong&gt; 사용하여 PHP를 컴파일 한 경우에만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7eb4d481f1dd1a1155e2ec42f1071bc3fd3be504" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available if PHP is compiled with freetype support (&lt;strong&gt;--with-freetype-dir=DIR&lt;/strong&gt; )</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 PHP가 프리 타입 지원 ( &lt;strong&gt;--with-freetype-dir = DIR&lt;/strong&gt; )으로 컴파일 된 경우에만 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="dab6f6c38f2823352aa5c63fb2f3edad83423d2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available in Tidy 1.0. It became obsolete in Tidy 2.0, and thus has been removed.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 기능은 Tidy 1.0에서만 사용할 수 있습니다. Tidy 2.0에서는 더 이상 사용되지 않아 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="846002a2578055d8e385c041759017663836d501" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function sets NULL fields to the PHP &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; value.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 NULL 필드를 PHP &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9b96eff5a824e80a89d24222e22b2106dd1d9320" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will &lt;a href=&quot;function.reset&quot;&gt;reset()&lt;/a&gt; the &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; pointer of the input array after use.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :이 함수는 사용 후 입력 배열 의 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 포인터를 &lt;a href=&quot;function.reset&quot;&gt;reset ()&lt;/a&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="084f1e23b80a3fcc84bb85d080eb80d22bd902cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will not work on &lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;remote files&lt;/a&gt; as the file to be examined must be accessible via the server's filesystem.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 검사 할 파일이 서버의 파일 시스템을 통해 액세스 가능해야하므로이 기능은 &lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;원격 파일에서&lt;/a&gt; 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8fde253738fe67e2536deee34ab7d55eb3c7463e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, PHP checks whether the directory in which the script is operating has the same UID (owner) as the script that is being executed.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;안전 모드&lt;/a&gt; 가 활성화되면, PHP는 스크립트가 작동하는 디렉토리가 실행중인 스크립트와 동일한 UID (소유자)를 가지고 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8a8cb34d708811824ccf908817adfc21f7bec711" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, PHP checks whether the files or directories being operated upon have the same UID (owner) as the script that is being executed.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;안전 모드&lt;/a&gt; 가 활성화되면, PHP는 작동중인 파일 또는 디렉토리가 실행중인 스크립트와 동일한 UID (소유자)를 가지고 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a040558fbd9d743712177ba8be4a06234d9980f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, you can only execute files within the &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir&quot;&gt;safe_mode_exec_dir&lt;/a&gt;. For practical reasons, it is currently not allowed to have &lt;em&gt;..&lt;/em&gt; components in the path to the executable.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;안전 모드&lt;/a&gt; 가 활성화되면 &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir&quot;&gt;safe_mode_exec_dir&lt;/a&gt; 내에서만 파일을 실행할 수 있습니다 . 실제로는 현재 실행 파일 경로에 &lt;em&gt;..&lt;/em&gt; 구성 요소를 포함 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a35cd07326e6008972bda70e99e1f3bc6c7b82ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When specifying a numerical IPv6 address (e.g. &lt;em&gt;fe80::1&lt;/em&gt;), you must enclose the IP in square brackets&amp;mdash;for example, &lt;em&gt;tcp://[fe80::1]:80&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 숫자 IPv6 주소 (예 : &lt;em&gt;fe80 :: 1&lt;/em&gt; )를 지정할 때는 IP를 대괄호로 묶어야합니다 (예 &lt;em&gt;: tcp : // [fe80 :: 1] : 80)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6f089aff5e0a56b0251f0e5ac5234a9579c55347" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NumberFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;NumberFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="cc1542c7ab271518b6f75a138c28bdd02cc6d813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuth&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuth&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b8511204d7facba5dec085632ab328d2dac8a9d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuthException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuthException는&lt;/strong&gt; 확장 &lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="81f5f3e400e2488761810bd4e8c4d0a171f49001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuthProvider&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuthProvider&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="ea1d9f29198708d26930ed1601683104888bc03d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;객체 속성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6275428f7841419ad55d5fa80dabb3d65d2abd33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;객체 속성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9259315dd82f4a4c4495648dc1aea296a4820c50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Operator Precedence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;운영자 우선 순위&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8b69902bd56f178414816545f495ef706c7ce91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optional flags for names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이름에 대한 선택적 플래그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1efb156693ad5f21691f5e2f320fbacaba3844e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other keys in associative arrays dependant on 'type'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;'type'에 의존하는 연관 배열의 다른 키&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0de6f5087043455b8dd92589de5ba265672b014e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OutOfBoundsException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OutOfBoundsException이 &lt;/strong&gt;&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장합니다 {</target>
        </trans-unit>
        <trans-unit id="b3b589b9e47a0049588fa3b30cff02f747bbe915" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OutOfRangeException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OutOfRangeException이 &lt;/strong&gt;&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {을 확장 함</target>
        </trans-unit>
        <trans-unit id="0c0f0cc64ea9e44c0afdc39c9676484f01dc1551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OuterIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OuterIterator는 &lt;/strong&gt;&lt;a href=&quot;class.iterator&quot;&gt;Iterator를&lt;/a&gt; 확장합니다 {</target>
        </trans-unit>
        <trans-unit id="12a45d4a8fab415da4871ae564536ff6fd080c3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OverflowException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OverflowException이 &lt;/strong&gt;&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장 함 {</target>
        </trans-unit>
        <trans-unit id="7f58b6181570e2973bf5a4a9ad01381f8094f0e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::__construct()&lt;/strong&gt; throws a &lt;a href=&quot;class.pdoexception&quot;&gt;PDOException&lt;/a&gt; if the attempt to connect to the requested database fails.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;요청 된 데이터베이스에 연결하지 못하면 &lt;strong&gt;PDO :: __ construct ()&lt;/strong&gt; 가 &lt;a href=&quot;class.pdoexception&quot;&gt;PDOException을&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="73d552c0ef17f312251a8a1407807fe5d1c44808" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorCode()&lt;/strong&gt; only retrieves error codes for operations performed directly on the database handle. If you create a PDOStatement object through &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; or &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; and invoke an error on the statement handle, &lt;strong&gt;PDO::errorCode()&lt;/strong&gt; will not reflect that error. You must call &lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement::errorCode()&lt;/a&gt; to return the error code for an operation performed on a particular statement handle.</source>
          <target state="translated">&lt;strong&gt;PDO :: errorCode ()&lt;/strong&gt; 는 데이터베이스 핸들에서 직접 수행 된 작업에 대한 오류 코드 만 검색합니다. &lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare ()&lt;/a&gt; 또는 &lt;a href=&quot;pdo.query&quot;&gt;PDO :: query ()를&lt;/a&gt; 통해 PDOStatement 오브젝트를 작성 하고 명령문 핸들에서 오류를 호출하면 &lt;strong&gt;PDO :: errorCode ()&lt;/strong&gt; 는 해당 오류를 반영하지 않습니다. 특정 명령문 핸들에서 수행 된 조작에 대한 오류 코드를 리턴하려면 &lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement :: errorCode ()&lt;/a&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="865f9329d1518a1eeebf1c948bac6e9eefb22bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; only retrieves error information for operations performed directly on the database handle. If you create a PDOStatement object through &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; or &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; and invoke an error on the statement handle, &lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; will not reflect the error from the statement handle. You must call &lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement::errorInfo()&lt;/a&gt; to return the error information for an operation performed on a particular statement handle.</source>
          <target state="translated">&lt;strong&gt;PDO :: errorInfo ()&lt;/strong&gt; 는 데이터베이스 핸들에서 직접 수행 된 작업에 대한 오류 정보 만 검색합니다. &lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare ()&lt;/a&gt; 또는 &lt;a href=&quot;pdo.query&quot;&gt;PDO :: query ()를&lt;/a&gt; 통해 PDOStatement 오브젝트를 작성 하고 명령문 핸들에서 오류를 호출하면 &lt;strong&gt;PDO :: errorInfo ()&lt;/strong&gt; 는 명령문 핸들의 오류를 반영하지 않습니다. 특정 명령문 핸들에서 수행 된 조작에 대한 오류 정보를 리턴하려면 &lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement :: errorInfo ()&lt;/a&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2a6a19228946dd61f54222e08a2c4532016584a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this database handle. The array consists of the following fields:</source>
          <target state="translated">&lt;strong&gt;PDO :: errorInfo ()&lt;/strong&gt; 는이 데이터베이스 핸들이 수행 한 마지막 작업에 대한 오류 정보 배열을 반환합니다. 배열은 다음 필드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b91bb380b4f6044675bb0868c70a1dd0177e3c8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; does not return results from a SELECT statement. For a SELECT statement that you only need to issue once during your program, consider issuing &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt;. For a statement that you need to issue multiple times, prepare a PDOStatement object with &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; and issue the statement with &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec ()&lt;/strong&gt; 는 SELECT 문에서 결과를 리턴하지 않습니다. 프로그램 중에 한 번만 발행해야하는 SELECT 문의 경우 &lt;a href=&quot;pdo.query&quot;&gt;PDO :: query ()&lt;/a&gt; 발행을 고려하십시오 . 여러 번 발행해야하는 명령문의 경우 &lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare ()&lt;/a&gt; 로 PDOStatement 오브젝트를 준비 하고 &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute ()로&lt;/a&gt; 명령문을 발행하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0bbb69274b5335238a46ebea6c5043d74339225" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; executes an SQL statement in a single function call, returning the number of rows affected by the statement.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec ()&lt;/strong&gt; 는 단일 함수 호출로 SQL 문을 실행하여 명령문의 영향을받는 행 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="416bc9754a848bc23e74d8382b6dea2ddd2e4e4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; returns the number of rows that were modified or deleted by the SQL statement you issued. If no rows were affected, &lt;strong&gt;PDO::exec()&lt;/strong&gt; returns &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec ()&lt;/strong&gt; 는 발행 한 SQL 문에 의해 수정되거나 삭제 된 행 수를 리턴합니다. 영향을받는 행이 없으면 &lt;strong&gt;PDO :: exec ()&lt;/strong&gt; 는 &lt;em&gt;0을&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0c27c9096715053371552c3ea024ab0513697ab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::getAvailableDrivers()&lt;/strong&gt; returns an array of PDO driver names. If no drivers are available, it returns an empty array.</source>
          <target state="translated">&lt;strong&gt;PDO :: getAvailableDrivers ()&lt;/strong&gt; 는 PDO 드라이버 이름의 배열을 반환합니다. 사용 가능한 드라이버가 없으면 빈 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d0c4ec98a28b05222600e3460da0ec587f4fcd2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::query()&lt;/strong&gt; executes an SQL statement in a single function call, returning the result set (if any) returned by the statement as a PDOStatement object.</source>
          <target state="translated">&lt;strong&gt;PDO :: query ()&lt;/strong&gt; 는 단일 함수 호출에서 SQL 문을 실행하여 명령문이 리턴 한 결과 세트 (있는 경우)를 PDOStatement 오브젝트로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7b76845a750a55118904066be9bb0937d157be4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::query()&lt;/strong&gt; returns a PDOStatement object, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDO :: query ()&lt;/strong&gt; 는 PDOStatement 객체 또는 실패시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="71f531c07594bb4080008ddd0638e45db89105db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::quote()&lt;/strong&gt; places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver.</source>
          <target state="translated">&lt;strong&gt;PDO :: quote ()&lt;/strong&gt; 는 입력 문자열을 따옴표로 &lt;strong&gt;묶고 (&lt;/strong&gt; 필요한 경우) 기본 드라이버에 적합한 따옴표 스타일을 사용하여 입력 문자열 내에서 특수 문자를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="b31f40e7c6e1fe8b3ccb6c4e05cf9936ef0b938c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;PDO&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="96a116e9a19e2cdc9a11e75c7f066e8abcbfc81b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PDOException이 &lt;/strong&gt;&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장 함 {</target>
        </trans-unit>
        <trans-unit id="21bf0360283db6fab6a93edf5963815c75212749" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::bindColumn()&lt;/strong&gt; arranges to have a particular variable bound to a given column in the result-set from a query. Each call to &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; or &lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement::fetchAll()&lt;/a&gt; will update all the variables that are bound to columns.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: bindColumn ()&lt;/strong&gt; 은 쿼리 결과 집합의 특정 열에 특정 변수를 바인딩하도록 정렬합니다. &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch ()&lt;/a&gt; 또는 &lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement :: fetchAll ()&lt;/a&gt; 을 호출 할 때 마다 열에 바인딩 된 모든 변수가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="6777e0cf26e4118de2241636d825635ef06531dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::closeCursor()&lt;/strong&gt; frees up the connection to the server so that other SQL statements may be issued, but leaves the statement in a state that enables it to be executed again.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: closeCursor ()&lt;/strong&gt; 는 다른 SQL 문이 발행 될 수 있도록 서버에 대한 연결을 해제하지만 명령문을 다시 실행할 수있는 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="f0ef53563eac5c5c568d6bb02b67ed0ac083315c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::closeCursor()&lt;/strong&gt; is implemented either as an optional driver specific method (allowing for maximum efficiency), or as the generic PDO fallback if no driver specific function is installed. The PDO generic fallback is semantically the same as writing the following code in your PHP script:</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: closeCursor ()&lt;/strong&gt; 는 선택적 드라이버 특정 메소드 (최대 효율성 허용 &lt;strong&gt;)&lt;/strong&gt; 로 구현되거나 드라이버 특정 기능이 설치되지 않은 경우 일반 PDO 폴백으로 구현됩니다. PDO 일반 폴백은 PHP 스크립트에서 다음 코드를 작성하는 것과 의미 상 동일합니다.</target>
        </trans-unit>
        <trans-unit id="6f7a62139292ba248797ba6c9827154b37a0db64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::debugDumpParams()&lt;/strong&gt; now returns the SQL sent to the database, including the full, raw query (including the replaced placeholders with their bounded values). Note, that this will only be available if emulated prepared statements are turned on.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: debugDumpParams ()는&lt;/strong&gt; 이제 전체 원시 쿼리를 포함하여 데이터베이스에 전송 된 SQL을 반환합니다 &lt;strong&gt;(바인드 된&lt;/strong&gt; 자리 표시 자와 그 경계 값 포함). 에뮬레이트 된 준비된 명령문이 켜져있는 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28a3b39647c0eaadea87c0f01bd03feb36f04f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this statement handle. The array consists of the following fields:</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: errorInfo ()&lt;/strong&gt; 는이 명령문 핸들이 수행 한 마지막 조작에 대한 오류 정보 배열을 리턴합니다. 배열은 다음 필드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="5a4f3267abd5be0902bdf7c9db83031081bfcb62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchAll()&lt;/strong&gt; returns an array containing all of the remaining rows in the result set. The array represents each row as either an array of column values or an object with properties corresponding to each column name. An empty array is returned if there are zero results to fetch, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchAll ()&lt;/strong&gt; 은 결과 집합의 나머지 행을 모두 포함하는 배열을 반환합니다. 배열은 각 행을 열 값의 배열 또는 각 열 이름에 해당하는 속성을 가진 개체로 나타냅니다. 페치 할 결과가 0이거나 실패시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 이면 빈 배열이 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="2e5c5903b169caac8a309e9349514a7f49d52396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; returns a single column from the next row of a result set or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if there are no more rows.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchColumn ()&lt;/strong&gt; 은 결과 집합의 다음 행에서 단일 열을 반환하고 행 이 더 없으면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="09df340f69976cd524986f140f3e4eea0e772449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; should not be used to retrieve boolean columns, as it is impossible to distinguish a value of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; from there being no more rows to retrieve. Use &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;부울 열을 검색하는 데 &lt;strong&gt;PDOStatement :: fetchColumn ()&lt;/strong&gt; 을 사용하면 안됩니다. &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 값을 더 이상 검색 할 행 이없는 것과 구별 할 수 없기 때문입니다. 사용 &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement는) (가져 오기 ::&lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="faab7fc3dae186014a8bacdfc654dd45e83ac614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; returns the number of rows affected by a DELETE, INSERT, or UPDATE statement.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: rowCount ()&lt;/strong&gt; 는 DELETE, INSERT 또는 UPDATE 문의 영향을받는 행 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1c5c5547261ae80005c7805c2b042368a9338d26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding &lt;em&gt;PDOStatement&lt;/em&gt; object.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: rowCount ()&lt;/strong&gt; 는 해당 &lt;em&gt;PDOStatement&lt;/em&gt; 오브젝트에 의해 실행 된 마지막 DELETE, INSERT 또는 UPDATE 문의 영향을받는 행 수를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="9bb433b047c8837c03b06c4a17f6f5da29fbd9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PDOStatement&lt;/strong&gt; 는 &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b2c63ad96fa2ae6d1da10478633a27a6c9f826c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParentIterator&lt;/strong&gt;extends&lt;a href=&quot;class.recursivefilteriterator&quot;&gt;RecursiveFilterIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;, &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ParentIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.recursivefilteriterator&quot;&gt;RecursiveFilterIterator&lt;/a&gt; 구현 &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; , &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="6c2f84b98f8ab6aef9903a4ec0218cc5c6395f78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParseError&lt;/strong&gt; is thrown when an error occurs while parsing PHP code, such as when &lt;a href=&quot;function.eval&quot;&gt;eval()&lt;/a&gt; is called.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;&lt;a href=&quot;function.eval&quot;&gt;eval ()&lt;/a&gt; 호출 과 같이 PHP 코드를 구문 분석하는 동안 오류가 발생하면 &lt;strong&gt;ParseError&lt;/strong&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="984811e13e3ff77ec707b34154fd5be1a7c39c39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParseError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ParseError&lt;/strong&gt; 확장 &lt;a href=&quot;class.error&quot;&gt;오류&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b83c09b300cb6abc24593f639ae7710046b6c9a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performed translations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;수행 된 번역&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88fd9aa291f3d71b18417e9448806b565d53a043" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::buildFromDirectory()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;Phar :: buildFromDirectory ()&lt;/strong&gt; 는 파일의 내부 경로를 파일 시스템에있는 파일의 전체 경로에 매핑하는 연관 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ed38a11c580ff6e9cad7676b91e0bab6099e19c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;Phar :: buildFromIterator ()&lt;/strong&gt; 는 파일의 내부 경로를 파일 시스템에있는 파일의 전체 경로에 매핑하는 연관 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="11886c94a842cff52e1f2871b0db08a070d7e64d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::mungServer()&lt;/strong&gt; should only be called within the stub of a phar archive.</source>
          <target state="translated">&lt;strong&gt;Phar :: mungServer ()&lt;/strong&gt; 는 phar 아카이브의 스텁 내에서만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="1f39c24e4743b9775774eead2dffc8b48c169cb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::setMetadata()&lt;/strong&gt; should be used to store customized data that describes something about the phar archive as a complete entity. &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo::setMetadata()&lt;/a&gt; should be used for file-specific meta-data. Meta-data can slow down the performance of loading a phar archive if the data is large.</source>
          <target state="translated">&lt;strong&gt;Phar :: setMetadata ()&lt;/strong&gt; 를 사용하여 phar 아카이브에 대해 설명하는 사용자 정의 데이터를 완전한 엔티티로 저장해야합니다. 파일 특정 메타 데이터에는 &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo :: setMetadata ()를&lt;/a&gt; 사용해야합니다. 메타 데이터는 데이터가 큰 경우 phar 아카이브로드 성능을 저하시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f50bf0fdbf16ceb6f4f565704f557d1f6e2ad03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::stopBuffering()&lt;/strong&gt; is used in conjunction with the &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering()&lt;/a&gt; method. &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering()&lt;/a&gt; can provide a significant performance boost when creating or modifying a Phar archive with a large number of files. Ordinarily, every time a file within a Phar archive is created or modified in any way, the entire Phar archive will be recreated with the changes. In this way, the archive will be up-to-date with the activity performed on it.</source>
          <target state="translated">&lt;strong&gt;Phar :: stopBuffering ()&lt;/strong&gt; 은 &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering ()&lt;/a&gt; 메소드 와 함께 사용됩니다 . &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering ()&lt;/a&gt; 은 많은 파일로 Phar 아카이브를 작성하거나 수정할 때 성능을 크게 향상시킬 수 있습니다. 일반적으로 Phar 아카이브 내의 파일이 어떤 방식으로 작성 또는 수정 될 때마다 전체 Phar 아카이브가 변경 사항으로 다시 작성됩니다. 이러한 방식으로, 아카이브는 수행 된 활동으로 최신 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="8626347328b102d756f7272e62c6858c85815ac4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::webPhar()&lt;/strong&gt; should only be called from the stub of a phar archive (see &lt;a href=&quot;https://secure.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;here&lt;/a&gt; for more information on what a stub is).</source>
          <target state="translated">&lt;strong&gt;Phar :: webPhar ()&lt;/strong&gt; 는 phar 아카이브의 스텁에서만 호출해야합니다 ( 스텁이 무엇인지에 대한 자세한 정보는 &lt;a href=&quot;https://secure.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;여기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="99aa271e60ceeafbd8b39f29f36bc3f707fdb4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar&lt;/strong&gt;extends&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;의 Phar는&lt;/strong&gt; 확장 &lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt; 구현 &lt;a href=&quot;class.countable&quot;&gt;가산 근로&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b2eca0b90f888088aacc6f500f70b2f0dcafc61e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;PharData :: buildFromIterator ()&lt;/strong&gt; 는 파일의 내부 경로를 파일 시스템에있는 파일의 전체 경로에 맵핑하는 연관 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="34ce7ec56d6863dbefb276883a2861cfed11ab8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharData&lt;/strong&gt;extends&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharData는&lt;/strong&gt; 확장 &lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e4db26b8795b82bd79098c722b178030b90ccbff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharException이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="16351115d719178cb19c4944c35b565a3ec5f9d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::chmod()&lt;/strong&gt; allows setting of the executable file permissions bit, as well as read-only bits. Writeable bits are ignored, and set at runtime based on the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: chmod ()를&lt;/strong&gt; 사용하면 실행 파일 권한 비트와 읽기 전용 비트를 설정할 수 있습니다. 쓰기 가능한 비트는 무시되고 &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI 변수를 기반으로 런타임에 설정됩니다 . phar의 내용을 수정하는 모든 기능과 마찬가지로 파일이 &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; 아카이브 내에있는 경우 &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI 변수를 해제해야합니다 . &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; 아카이브 내의 파일 에는이 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0587446888e9d7ba08a6596f6fd251fe26533063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::setMetadata()&lt;/strong&gt; should only be used to store customized data in a file that cannot be represented with existing information stored with a file. Meta-data can significantly slow down the performance of loading a phar archive if the data is large, or if there are many files containing meta-data. It is important to note that file permissions are natively supported inside a phar; it is possible to set them with the &lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo::chmod()&lt;/a&gt; method. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: setMetadata ()&lt;/strong&gt; 는 파일과 함께 저장된 기존 정보로 표현할 수없는 파일에 사용자 정의 된 데이터를 저장하는 데만 사용해야합니다. 메타 데이터는 데이터가 크거나 메타 데이터를 포함하는 파일이 많은 경우 phar 아카이브를로드하는 성능을 크게 저하시킬 수 있습니다. 파일 권한은 기본적으로 phar 내에서 지원된다는 점에 유의해야합니다. &lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo :: chmod ()&lt;/a&gt; 메소드를 사용하여 설정할 수 있습니다 . phar의 내용을 수정하는 모든 기능과 마찬가지로 파일이 &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; 아카이브 내에있는 경우 &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI 변수를 해제해야합니다 . &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; 아카이브 내의 파일 에는이 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="82dff2a5c3c912120dc914fbd1fad38f29a36cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo&lt;/strong&gt;extends&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharFileInfo는 &lt;/strong&gt;&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo를&lt;/a&gt; 확장합니다 {</target>
        </trans-unit>
        <trans-unit id="95cb8b657a52ee881ecab1a912cd5ad0bf65f6aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pool&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;수영장&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="1f9bfc410a628b5915c09911418538a35e491db1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible array indexes for &lt;code&gt;extrainfo&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;extrainfo&lt;/code&gt; 에 가능한 배열 인덱스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9e01da745f97efe5f2685acd60533e84fa4d943" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible mysqli_info return values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;가능한 mysqli_info 리턴 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1aa3c7307277e0ef8da52f85bab0b497d8e9d279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible returned elements from &lt;strong&gt;debug_backtrace()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;debug_backtrace ()&lt;/strong&gt; 에서 반환 가능한 요소&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fef39b7082d68e897e306faf261a473c57997f12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values for &lt;code&gt;flags&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;flags&lt;/code&gt; 가능한 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80c96e8c4a8ab2f9d1bca0ccccbf1ce44bc5472e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values for &lt;code&gt;options&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;options&lt;/code&gt; 가능한 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25f1af6ef958a99a18bcf54d3a7686a80b219df7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;가능한 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c849376db2301b1a4608918320e745b665e02e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pre-defined &lt;strong&gt;phpcredits()&lt;/strong&gt; flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사전 정의 된 &lt;strong&gt;phpcredits ()&lt;/strong&gt; 플래그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d46d762e62c0b1f70f9b34f6d3cda73e7c9d4239" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Primary body type (value may vary with used library, use of constants is recommended)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1 차 체형 (사용 된 라이브러리에 따라 값이 다를 수 있으며 상수 사용을 권장 함)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ceddad784fb454fcd5fb8bf7193ebc7ef941707e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Publickey elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;공개 키 요소&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7721b9e02795e6a6c420ff3fd1534849aa81b93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Query Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;쿼리 옵션&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afddf49b6bca7f7eed3fa3f27337e7eba9cc10dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4f08cb326e5fd0b03c7049f527e9e3403fc544dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntSet&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntSet&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="7d0fd502c46675a2b91237e4bdb8db960cb8ae3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntStringHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntStringHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a76c70be36e5483e00d06927a09de0f7ac814400" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashStringIntHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashStringIntHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="da774940f4e156df4d3c1d5444e7bc6e0db55492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Range of inputs on 32-bit machines&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;32 비트 시스템의 입력 범위&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="258bb9649decc0dac891ebe41cc67f367d2c0be3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Range of inputs on 64-bit machines&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;64 비트 시스템의 입력 범위&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8f32cb26cfa2c9f3105adbbc672a56cb86a7351" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RangeException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RangeException이 &lt;/strong&gt;&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장 함 {</target>
        </trans-unit>
        <trans-unit id="01a5cc12fdbd42df64389efb32e51337a9a093ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ranking modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;랭킹 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e600c4ac429e9406e0b9be00cbcadec906e5fa2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveArrayIterator&lt;/strong&gt;extends&lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveArrayIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt; 는 &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="06da191e7da4c2d6232df68d01a5d3b601669626" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveCachingIterator&lt;/strong&gt;extends&lt;a href=&quot;class.cachingiterator&quot;&gt;CachingIterator&lt;/a&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveCachingIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.cachingiterator&quot;&gt;CachingIterator&lt;/a&gt; 는 &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; , &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f45b547f37e7d6080032ab3a07e7f213d6f3bf82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveCallbackFilterIterator&lt;/strong&gt;extends&lt;a href=&quot;class.callbackfilteriterator&quot;&gt;CallbackFilterIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveCallbackFilterIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.callbackfilteriterator&quot;&gt;CallbackFilterIterator&lt;/a&gt; 는 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; , &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="585cc63e5d1a1e8fb30638acc1c15340d2557d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveDirectoryIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveDirectoryIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator의&lt;/a&gt; 구현의 &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator을&lt;/a&gt; , &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cd92e7fa92649552951cc21aa6ea79e207427172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveIterator는 &lt;/strong&gt;&lt;a href=&quot;class.iterator&quot;&gt;반복자를&lt;/a&gt; 확장합니다 {</target>
        </trans-unit>
        <trans-unit id="cbcae2569614b7e0964a4e4ed3c459e3e2937998" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveIteratorIterator&lt;/strong&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveIteratorIterator&lt;/strong&gt; 는 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="48375fbe2bb49fb900057026e8a6ad1821ca62c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveRegexIterator&lt;/strong&gt;extends&lt;a href=&quot;class.regexiterator&quot;&gt;RegexIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveRegexIterator는 &lt;/strong&gt;&lt;a href=&quot;class.regexiterator&quot;&gt;RegexIterator를&lt;/a&gt; 확장 하여 &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator를&lt;/a&gt; 구현합니다. {</target>
        </trans-unit>
        <trans-unit id="66569a8c05af935fee645cf61216575b0ab9efb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveTreeIterator&lt;/strong&gt;extends&lt;a href=&quot;class.recursiveiteratoriterator&quot;&gt;RecursiveIteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveTreeIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.recursiveiteratoriterator&quot;&gt;RecursiveIteratorIterator&lt;/a&gt; 가 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {를 구현 함</target>
        </trans-unit>
        <trans-unit id="c0e4f77639cf18bce83671f44438468c72ef3dfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflection::__toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reflection::__toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d82721090361585f82caca47b02bef69905e8b2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;반사&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="43d2bf67a93fe091ab6840aebd7270832b6a6be3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass::clone()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionClass::clone()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55837d2d8bc97577b0ebbf3c736630021f9e17a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass::getVersion()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionClass::getVersion()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a3d4a238ad571b21db3af5795ab1aa4504892de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionClass&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d3873ec6d73578eff74e7b932e5121ca59859fda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClassConstant&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionClassConstant&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a8eb2ebaa0e12f349db17de22c3ebccc09085fae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionException이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="25ef2b43c1fe1d571b4a166104d6de72acf06896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionExtension&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionExtension&lt;/strong&gt; 은 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c1878269df163882391c8ceb287c52c0fa030e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionFunction&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionFunction는&lt;/strong&gt; 확장 &lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt; 구현 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a64174c2d041816d0a8fbf4437c35706e0ee94b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionFunctionAbstract&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionFunctionAbstract&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f24cba651bffa9bdbd92555d2a46952fd2bed7cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionGenerator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionGenerator&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2a975494919dcabaf1e3e3bb695e1792b961b65d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionMethod&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionMethod는&lt;/strong&gt; 확장 &lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt; 구현 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d7b39b9c208168d09fd25dbe7457274a63e7b4ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionNamedType&lt;/strong&gt;extends&lt;a href=&quot;class.reflectiontype&quot;&gt;ReflectionType&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionNamedType&lt;/strong&gt; 은 &lt;a href=&quot;class.reflectiontype&quot;&gt;ReflectionType&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="e3d9989e6c0319f428385cc1bfa9b681eea4da13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionObject&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionclass&quot;&gt;ReflectionClass&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionObject&lt;/strong&gt; 확장 &lt;a href=&quot;class.reflectionclass&quot;&gt;ReflectionClass&lt;/a&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="40f5e30daff5929b34ef662f9562e29438d2b1e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter::getValue()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter::getValue()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc9f7badea44c89671c0c31e2bd9fd614920aa32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter::toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter::toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="809ff8b001c144692a2e34cea1b1a3b9fa30637b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0d4d04ba5c24e0e9300f9a5faa6bf5a1c917b0a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionProperty::toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionProperty::toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="052fe39dd65e144a596aa99d5b77177e05b35781" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionProperty&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionProperty&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="176714a272640b72a398d3f5da20b0cd9df1162b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionType&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionType&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5c851f6ceac7a68e4019b01c57a76123ecb1bce1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionZendExtension&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionZendExtension&lt;/strong&gt; 은 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="57ba0ca5438183a8962deba65b977e269ca31a9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflector&lt;/strong&gt; is an interface implemented by all exportable Reflection classes.</source>
          <target state="translated">&lt;strong&gt;리플렉터&lt;/strong&gt; 는 모든 익스포트 가능한 리플렉션 클래스에 의해 구현 된 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="8a933acf554f2d72faa1e15c7b82dac22e62880b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflector&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;반사판&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="bac8dfb2598462fdb690f023c5332e247c8861e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regex options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정규식 옵션&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="075a39cae56c82081ef8b31e5642a17ef58e3bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regex syntax modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정규식 구문 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="965553d24d8e1308fd55c7435dbc41b78d523465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RegexIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RegexIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="90bb6954891b7145b2eede9fd6a504fbc961bffc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ResourceBundle&lt;/strong&gt; supports direct access to the data through array access pattern and iteration via &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;, as well as access via class methods. The result will be PHP value for simple resources and &lt;strong&gt;ResourceBundle&lt;/strong&gt; object for complex ones. All resources are read-only.</source>
          <target state="translated">&lt;strong&gt;ResourceBundle&lt;/strong&gt; 은 &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach를&lt;/a&gt; 통한 배열 액세스 패턴 및 반복과 클래스 메소드를 통한 액세스를 통해 데이터에 대한 직접 액세스를 지원 합니다. 결과는 간단한 리소스에 대한 PHP 값이고 복잡한 &lt;strong&gt;리소스에&lt;/strong&gt; 대한 &lt;strong&gt;ResourceBundle&lt;/strong&gt; 객체입니다. 모든 리소스는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="47c25251b662b0c1d02994948de87cfae8e4ba40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ResourceBundle&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ResourceBundle&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="61ae4e47ab3811d582574a67ea41c5b772fb1b5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Result set structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;결과 집합 구조&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f219364ef4ce4fa3cfa6f9d995a4133926e2531a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01fbd28371d58757cf75323dd759acc585145bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return value and parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 값과 파라미터&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0333b1c94f23528700a9b20399bb0db7aec8a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returned Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 된 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffc10fa7e10d99e01b850bc1bfdeabeff798f441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returned values Constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 된 값 상수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ddcdb48dc36224e822df34c134652d467b7d28e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RuntimeException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RuntimeException&lt;/strong&gt; 은 &lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장합니다</target>
        </trans-unit>
        <trans-unit id="6b1a36076aed9011536887d0013820d83d484baf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="10c2b18c25e6d24ea1049708f52afdab8e849d10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3Result&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3Result&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="abafb085e8eed65605dcef8de8eb4b5a358e5230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3Stmt&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3Stmt&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="29381b86f70a8de7fae2b9384dd7d469323c21f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sandbox Settings / Status Indicators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;샌드 박스 설정 / 상태 표시기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31763a47a704bfaffbb3c94f1be7bd32754c8f08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SeekableIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SeekableIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.iterator&quot;&gt;Iterator를&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2ec44d6a3f1457d7eeec3326e505f741af05be87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Serializable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;직렬화 가능&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="0708f8b69af5ef076bb45e73bd71d5448e649199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandler&lt;/strong&gt; is a special class that can be used to expose the current internal PHP session save handler by inheritance. There are seven methods which wrap the seven internal session save handler callbacks (&lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;gc&lt;/code&gt; and &lt;code&gt;create_sid&lt;/code&gt;). By default, this class will wrap whatever internal save handler is set as defined by the &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt; configuration directive which is usually &lt;code&gt;files&lt;/code&gt; by default. Other internal session save handlers are provided by PHP extensions such as SQLite (as &lt;code&gt;sqlite&lt;/code&gt;), Memcache (as &lt;code&gt;memcache&lt;/code&gt;), and Memcached (as &lt;code&gt;memcached&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;SessionHandler&lt;/strong&gt; 는 상속으로 현재 내부 PHP 세션 저장 핸들러를 노출하는 데 사용할 수있는 특수 클래스입니다. 7 개의 내부 세션 저장 핸들러 콜백 ( &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;close&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; , &lt;code&gt;write&lt;/code&gt; , &lt;code&gt;destroy&lt;/code&gt; , &lt;code&gt;gc&lt;/code&gt; 및 &lt;code&gt;create_sid&lt;/code&gt; ) 을 래핑하는 7 가지 방법이 있습니다 . 기본적으로이 클래스는 기본적 으로 &lt;code&gt;files&lt;/code&gt; &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt; 구성 지시문 에서 정의한대로 내부 저장 핸들러를 랩핑 합니다 . 다른 내부 세션 저장 핸들러는 SQLite ( &lt;code&gt;sqlite&lt;/code&gt; ), Memcache ( &lt;code&gt;memcache&lt;/code&gt; ) 와 같은 PHP 확장에 의해 제공됩니다.) 및 Memcached ( &lt;code&gt;memcached&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5019c3eed4b7c1b46ad0020eb3c4f86209ef2d49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandler&lt;/strong&gt;implements &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;, &lt;a href=&quot;class.sessionidinterface&quot;&gt;SessionIdInterface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionHandler&lt;/strong&gt; 는 &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt; , &lt;a href=&quot;class.sessionidinterface&quot;&gt;SessionIdInterface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="665fc826d3351884d354ba855ad5aeb8411dd133" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; is an &lt;a href=&quot;language.oop5.interfaces&quot;&gt;interface&lt;/a&gt; which defines a prototype for creating a custom session handler. In order to pass a custom session handler to &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt; using its &lt;em&gt;OOP&lt;/em&gt; invocation, the class must implement this interface.</source>
          <target state="translated">&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; 는 사용자 정의 세션 핸들러를 만들기위한 프로토 타입을 정의 하는 &lt;a href=&quot;language.oop5.interfaces&quot;&gt;인터페이스&lt;/a&gt; 입니다. &lt;em&gt;OOP&lt;/em&gt; 호출을 사용하여 사용자 정의 세션 핸들러를 &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler ()&lt;/a&gt; 에 전달 하려면 클래스가이 인터페이스를 구현해야합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7056a532b308b807c92bff3c89b4a0e3544ce643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a9fc2868b6a3a4e18f0c1188da4247ee8a90ea51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionIdInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionIdInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="c282cbbafccadb6736feb4218d55f1b197a58578" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionUpdateTimestampHandlerInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionUpdateTimestampHandlerInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="0741e1a575908f0fa3aeb48eff6794de5ca6c03a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simple &lt;strong&gt;ob_get_status()&lt;/strong&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;간단한 &lt;strong&gt;ob_get_status ()&lt;/strong&gt; 결과&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cad0d922221265f92760a86ae9568f7dafd8a82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLElement::children()&lt;/strong&gt; returns a node object no matter if the current node has children or not. Use &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; on the return value to see if there are any children. As of PHP 5.3.0, &lt;a href=&quot;simplexmlelement.count&quot;&gt;SimpleXMLElement::count()&lt;/a&gt; may be used instead.</source>
          <target state="translated">&lt;strong&gt;SimpleXMLElement :: children ()&lt;/strong&gt; 은 현재 노드에 자식이 있는지 여부에 관계없이 노드 객체를 반환합니다. 사용 &lt;a href=&quot;function.count&quot;&gt;수 ()&lt;/a&gt; 자식이 있는지 반환 값에 있습니다. PHP 5.3.0부터 &lt;a href=&quot;simplexmlelement.count&quot;&gt;SimpleXMLElement :: count ()를&lt;/a&gt; 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fc8ad43ea6d353deb31cb5bb229298fb7cc8fc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLElement&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SimpleXMLElement&lt;/strong&gt; 는 &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="bcc29a6af76becf02e95513d573ec9aea059a79e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLIterator&lt;/strong&gt;extends&lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SimpleXMLIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt; 구현 &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="58b3f29ecf6b9205d5e4e556842dada2ff85cacb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single-character quantifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단일 문자 수량 자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2af544415f7eb4fd4a496b6b23a4141a129c1024" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapClient::SoapClient()&lt;/strong&gt; will generate an &lt;strong&gt;&lt;code&gt;E_ERROR&lt;/code&gt;&lt;/strong&gt; error if the &lt;em&gt;location&lt;/em&gt; and &lt;em&gt;uri&lt;/em&gt; options aren't provided in non-WSDL mode.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;비 WSDL 모드에서 &lt;em&gt;location&lt;/em&gt; 및 &lt;em&gt;uri&lt;/em&gt; 옵션이 제공되지 않으면 &lt;strong&gt;SoapClient :: SoapClient ()&lt;/strong&gt; 는 &lt;strong&gt; &lt;code&gt;E_ERROR&lt;/code&gt; &lt;/strong&gt; 오류 를 생성 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="131e6c8ce484605a42eb67ea53b5e2f3da7abf55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapClient&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;비누 클라이언트&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="832648a98fa7a554a2812033f50f954b0ec3bcc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapFault&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SOAPFault에이&lt;/strong&gt; 확장 &lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="76938bbbc520d048a0a9a1fee5b688296f990ca6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapHeader&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapHeader&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="fcbefa39489bf10815767fda00561abd207e39d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapParam&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;비누 파람&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d0e629e7e65f84e58d346349fb1b36031af7581a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapServer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapServer&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="98b400390e128fb4db37474c59a5cd7bdfb9ca74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapVar&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapVar&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="639f7f510d07b4e5ce708b711f2f26e296be62b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrClientException&lt;/strong&gt;extends&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrClientException&lt;/strong&gt; 은 &lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="d103bbae6aa34d83f75a69e4a5d66c5f6c296014" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrCollapseFunction&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrCollapseFunction&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="1a6f4ae01c0f54103983c8d48543160651ec0e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrDisMaxQuery::addBigramPhraseFields()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SolrDisMaxQuery::addBigramPhraseFields()&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
