<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="73890f2d8730349939758bb99469c8dd6b7e6151" translate="yes" xml:space="preserve">
          <source>The maximum number of patches per image to extract. If max_patches is a float in (0, 1), it is taken to mean a proportion of the total number of patches.</source>
          <target state="translated">추출 할 이미지 당 최대 패치 수입니다. max_patches가 (0, 1)의 부동 소수점 인 경우 총 패치 수의 비율을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="9914613b7b3d16fc7caab060022c123f66024339" translate="yes" xml:space="preserve">
          <source>The maximum number of patches to extract. If max_patches is a float between 0 and 1, it is taken to be a proportion of the total number of patches.</source>
          <target state="translated">추출 할 최대 패치 수입니다. max_patches가 0과 1 사이의 부동 소수점 인 경우 총 패치 수의 비율로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="353b6da890fd9a7a3db82e5fc166d25d61607aa3" translate="yes" xml:space="preserve">
          <source>The maximum number of points on the path used to compute the residuals in the cross-validation</source>
          <target state="translated">교차 검증에서 잔차를 계산하는 데 사용되는 경로의 최대 포인트 수</target>
        </trans-unit>
        <trans-unit id="c53181fb6c1656f1967e529a2fe72fd9bc29ff60" translate="yes" xml:space="preserve">
          <source>The mean and the empirical covariance of the full dataset, which break down as soon as there are outliers in the data set</source>
          <target state="translated">전체 데이터 세트의 평균 및 경험적 공분산으로, 데이터 세트에 특이 치가있는 즉시 분류됩니다.</target>
        </trans-unit>
        <trans-unit id="f962fad68fff332002b42ee3dcc1e06f41fcfe6c" translate="yes" xml:space="preserve">
          <source>The mean and the empirical covariance of the observations that are known to be good ones. This can be considered as a &amp;ldquo;perfect&amp;rdquo; MCD estimation, so one can trust our implementation by comparing to this case.</source>
          <target state="translated">좋은 것으로 알려진 관측치의 평균과 경험적 공분산. 이것은 &quot;완벽한&quot;MCD 추정으로 간주 될 수 있으므로이 경우와 비교하여 구현을 신뢰할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f98043dc9f229ba1c70dcb8021abddb5d793d8af" translate="yes" xml:space="preserve">
          <source>The mean of each mixture component.</source>
          <target state="translated">각 혼합 성분의 평균.</target>
        </trans-unit>
        <trans-unit id="05329e8678ffdabb505c75140f9a49322a5129f1" translate="yes" xml:space="preserve">
          <source>The mean of the multi-dimensional normal distribution. If None then use the origin (0, 0, &amp;hellip;).</source>
          <target state="translated">다차원 정규 분포의 평균입니다. None 인 경우 원점 (0, 0,&amp;hellip;)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3598a929d1a64528ce62560f1aa02f9fb9981b30" translate="yes" xml:space="preserve">
          <source>The mean predicted probability in each bin.</source>
          <target state="translated">각 구간의 평균 예측 확률입니다.</target>
        </trans-unit>
        <trans-unit id="8aaf5602eb2242bddc9912d47746326b31b0a1d5" translate="yes" xml:space="preserve">
          <source>The mean score and the 95% confidence interval of the score estimate are hence given by:</source>
          <target state="translated">따라서 점수 추정치의 평균 점수와 95 % 신뢰 구간은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="94d27e1df24bf9a05c82ae625a1197b415bc3fdc" translate="yes" xml:space="preserve">
          <source>The mean value for each feature in the training set. Equal to &lt;code&gt;None&lt;/code&gt; when &lt;code&gt;with_mean=False&lt;/code&gt;.</source>
          <target state="translated">교육 세트의 각 기능에 대한 평균값입니다. 같음 &lt;code&gt;None&lt;/code&gt; &lt;code&gt;with_mean=False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5e7dcb7d882c8689297cb339a998a6e74140e5f" translate="yes" xml:space="preserve">
          <source>The mean, standard error, and &amp;ldquo;worst&amp;rdquo; or largest (mean of the three largest values) of these features were computed for each image, resulting in 30 features. For instance, field 3 is Mean Radius, field 13 is Radius SE, field 23 is Worst Radius.</source>
          <target state="translated">이러한 특징의 평균, 표준 오차 및 &quot;최악의&quot;또는 가장 큰 (3 개의 가장 큰 값의 평균)을 각 이미지에 대해 계산하여 30 개의 특징을 생성했습니다. 예를 들어, 필드 3은 평균 반경, 필드 13은 반경 SE, 필드 23은 최악 반경입니다.</target>
        </trans-unit>
        <trans-unit id="9952f9f2a02ad0002415a0bd8b6c9bae196d7ee8" translate="yes" xml:space="preserve">
          <source>The measure of normality of an observation given a tree is the depth of the leaf containing this observation, which is equivalent to the number of splittings required to isolate this point. In case of several observations n_left in the leaf, the average path length of a n_left samples isolation tree is added.</source>
          <target state="translated">나무에 대한 관측치의 정규성 측정은이 관측치를 포함하는 잎의 깊이이며,이 점을 분리하는 데 필요한 분할 수와 같습니다. 리프에 여러 관측치 n_left가있는 경우 n_left 샘플 격리 트리의 평균 경로 길이가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3ff66cd9c701474c3d9f795cee9d82f5e1659bc8" translate="yes" xml:space="preserve">
          <source>The median absolute deviation to non corrupt new data is used to judge the quality of the prediction.</source>
          <target state="translated">손상되지 않은 새로운 데이터에 대한 중앙값 절대 편차는 예측의 품질을 판단하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="970571bcac487854f4caea3e516e12da8ac34c22" translate="yes" xml:space="preserve">
          <source>The median value for each feature in the training set.</source>
          <target state="translated">교육 세트의 각 기능에 대한 중앙값입니다.</target>
        </trans-unit>
        <trans-unit id="c8bf90a15bbbe280812d1ade2a9f9077adb9d41d" translate="yes" xml:space="preserve">
          <source>The memmapping mode used when loading from cache numpy arrays. See numpy.load for the meaning of the arguments.</source>
          <target state="translated">캐시 numpy 배열에서로드 할 때 사용되는 젬핑 모드입니다. 인수의 의미는 numpy.load를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4971ea4c8c64c5bc8a4bdd1e4563c9705f8166bf" translate="yes" xml:space="preserve">
          <source>The memmapping mode used when loading from cache numpy arrays. See numpy.load for the meaning of the arguments. By default that of the memory object is used.</source>
          <target state="translated">캐시 numpy 배열에서로드 할 때 사용되는 젬핑 모드입니다. 인수의 의미는 numpy.load를 참조하십시오. 기본적으로 메모리 객체의 메모리 객체가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="85874f620128fa58a2e359ad1c9c828fcfd537bb" translate="yes" xml:space="preserve">
          <source>The memory footprint of randomized &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt; is also proportional to \(2 \cdot n_{\max} \cdot n_{\mathrm{components}}\) instead of \(n_{\max} \cdot n_{\min}\) for the exact method.</source>
          <target state="translated">무작위 &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;PCA&lt;/code&gt; &lt;/a&gt; 의 메모리 풋 프린트 는 또한 \ (n _ {\ max} \ cdot n _ {\ min} \) 대신 \ (2 \ cdot n _ {\ max} \ cdot n _ {\ mathrm {components}} \)에 비례합니다. 정확한 방법.</target>
        </trans-unit>
        <trans-unit id="4fa2b59a5a9d6863d86f91b2a847ac2c39bc204e" translate="yes" xml:space="preserve">
          <source>The method assumes the inputs come from a binary classifier.</source>
          <target state="translated">이 방법은 입력이 이진 분류기에서 나온 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ff8ec8205e374ddf520735804ecbfa39550f37bd" translate="yes" xml:space="preserve">
          <source>The method fits the model &lt;code&gt;n_init&lt;/code&gt; times and sets the parameters with which the model has the largest likelihood or lower bound. Within each trial, the method iterates between E-step and M-step for &lt;code&gt;max_iter&lt;/code&gt; times until the change of likelihood or lower bound is less than &lt;code&gt;tol&lt;/code&gt;, otherwise, a &lt;code&gt;ConvergenceWarning&lt;/code&gt; is raised. If &lt;code&gt;warm_start&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, then &lt;code&gt;n_init&lt;/code&gt; is ignored and a single initialization is performed upon the first call. Upon consecutive calls, training starts where it left off.</source>
          <target state="translated">이 방법은 모형 &lt;code&gt;n_init&lt;/code&gt; 시간을 맞추고 모형이 가장 큰 확률 또는 하한을 갖는 매개 변수를 설정합니다. 각 시도 내에서, 방법 은 우도 또는 하한의 변화가 &lt;code&gt;tol&lt;/code&gt; 보다 작을 때까지 &lt;code&gt;max_iter&lt;/code&gt; 시간 동안 E-step과 M-step 사이를 반복하고 , 그렇지 않으면 &lt;code&gt;ConvergenceWarning&lt;/code&gt; 이 발생합니다. 경우 &lt;code&gt;warm_start&lt;/code&gt; 가 있다 &lt;code&gt;True&lt;/code&gt; , 다음 &lt;code&gt;n_init&lt;/code&gt; 무시되고 하나의 초기화는 최초의 호출에 따라 수행됩니다. 연속적인 통화가 끝나면 중단 된 곳에서 교육이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="5aeb4fb178bdd7f679ad7ab31606d57c02d18da8" translate="yes" xml:space="preserve">
          <source>The method fits the model n_init times and sets the parameters with which the model has the largest likelihood or lower bound. Within each trial, the method iterates between E-step and M-step for &lt;code&gt;max_iter&lt;/code&gt; times until the change of likelihood or lower bound is less than &lt;code&gt;tol&lt;/code&gt;, otherwise, a &lt;code&gt;ConvergenceWarning&lt;/code&gt; is raised. After fitting, it predicts the most probable label for the input data points.</source>
          <target state="translated">이 방법은 모형 n_init 시간을 맞추고 모형이 가장 큰 확률 또는 하한을 갖는 매개 변수를 설정합니다. 각 시도 내에서, 방법 은 우도 또는 하한의 변화가 &lt;code&gt;tol&lt;/code&gt; 보다 작을 때까지 &lt;code&gt;max_iter&lt;/code&gt; 시간 동안 E-step과 M-step 사이를 반복하고 , 그렇지 않으면 &lt;code&gt;ConvergenceWarning&lt;/code&gt; 이 발생합니다. 피팅 후 입력 데이터 포인트에 대해 가장 가능성있는 레이블을 예측합니다.</target>
        </trans-unit>
        <trans-unit id="02e13e01ea0f52a6e082ed53d9636e409ba7f22e" translate="yes" xml:space="preserve">
          <source>The method gained popularity for initializing deep neural networks with the weights of independent RBMs. This method is known as unsupervised pre-training.</source>
          <target state="translated">이 방법은 독립적 인 RBM의 가중치로 심층 신경망을 초기화하는 데 인기를 얻었습니다. 이 방법을 감독되지 않은 사전 훈련이라고합니다.</target>
        </trans-unit>
        <trans-unit id="867b88e44ce337abe62bbd2070ac4235fc6ec53b" translate="yes" xml:space="preserve">
          <source>The method of Support Vector Classification can be extended to solve regression problems. This method is called Support Vector Regression.</source>
          <target state="translated">회귀 문제를 해결하기 위해 Support Vector Classification 방법을 확장 할 수 있습니다. 이 방법을 Support Vector Regression이라고합니다.</target>
        </trans-unit>
        <trans-unit id="0b9b2478ee76aa8f8a62d64db00bfa346a8108cd" translate="yes" xml:space="preserve">
          <source>The method to use for calibration. Can be &amp;lsquo;sigmoid&amp;rsquo; which corresponds to Platt&amp;rsquo;s method or &amp;lsquo;isotonic&amp;rsquo; which is a non-parametric approach. It is not advised to use isotonic calibration with too few calibration samples &lt;code&gt;(&amp;lt;&amp;lt;1000)&lt;/code&gt; since it tends to overfit. Use sigmoids (Platt&amp;rsquo;s calibration) in this case.</source>
          <target state="translated">교정에 사용하는 방법입니다. Platt의 방법에 해당하는 'sigmoid'또는 비모수 적 접근 방식 인 'isotonic'일 수 있습니다. 너무 적합하지 않은 교정 샘플 &lt;code&gt;(&amp;lt;&amp;lt;1000)&lt;/code&gt; 로 등장 교정을 사용하지 않는 것이 좋습니다 . 이 경우 S 자형 (플랫 보정)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="21e55011234a7eafaab581faf9cf56cabba5a5c2" translate="yes" xml:space="preserve">
          <source>The method used to initialize the weights, the means and the covariances. Must be one of:</source>
          <target state="translated">가중치, 평균 및 공분산을 초기화하는 데 사용되는 방법입니다. 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="963cb60032e3efabe5bef9b8ad76de7b8282f830" translate="yes" xml:space="preserve">
          <source>The method used to initialize the weights, the means and the precisions. Must be one of:</source>
          <target state="translated">가중치, 평균 및 정밀도를 초기화하는 데 사용되는 방법입니다. 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8015d2d76c1dfbbe3de68f3d3f8aa78fbf89dd67" translate="yes" xml:space="preserve">
          <source>The method works on simple estimators as well as on nested objects (such as pipelines). The latter have parameters of the form &lt;code&gt;&amp;lt;component&amp;gt;__&amp;lt;parameter&amp;gt;&lt;/code&gt; so that it&amp;rsquo;s possible to update each component of a nested object.</source>
          <target state="translated">이 방법은 파이프 라인과 같은 중첩 된 개체뿐만 아니라 간단한 견적 도구에서도 작동합니다. 후자는 &lt;code&gt;&amp;lt;component&amp;gt;__&amp;lt;parameter&amp;gt;&lt;/code&gt; 형식의 매개 변수를 가지 므로 중첩 된 개체의 각 구성 요소를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d1673cba254e117532409bf5f2a151ed75e6f39" translate="yes" xml:space="preserve">
          <source>The method works on simple kernels as well as on nested kernels. The latter have parameters of the form &lt;code&gt;&amp;lt;component&amp;gt;__&amp;lt;parameter&amp;gt;&lt;/code&gt; so that it&amp;rsquo;s possible to update each component of a nested object.</source>
          <target state="translated">이 방법은 간단한 커널과 중첩 커널에서 작동합니다. 후자는 &lt;code&gt;&amp;lt;component&amp;gt;__&amp;lt;parameter&amp;gt;&lt;/code&gt; 형식의 매개 변수를 가지 므로 중첩 된 개체의 각 구성 요소를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="653c073b67dfbefaf963d2a9e7b682aaf13d10c5" translate="yes" xml:space="preserve">
          <source>The methods based on F-test estimate the degree of linear dependency between two random variables. On the other hand, mutual information methods can capture any kind of statistical dependency, but being nonparametric, they require more samples for accurate estimation.</source>
          <target state="translated">F- 검정을 기반으로하는 방법은 두 랜덤 변수 사이의 선형 의존도를 추정합니다. 한편, 상호 정보 방법은 모든 종류의 통계적 의존성을 포착 할 수 있지만 비모수 적이므로 정확한 추정을 위해 더 많은 샘플이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="42e3e79f7ef752ca5a9bd963af37b6abd9f4c61f" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating distance between instances in a feature array. If metric is a string or callable, it must be one of the options allowed by &lt;a href=&quot;sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise_distances&lt;/code&gt;&lt;/a&gt; for its metric parameter. If metric is &amp;ldquo;precomputed&amp;rdquo;, X is assumed to be a distance matrix and must be square. X may be a sparse matrix, in which case only &amp;ldquo;nonzero&amp;rdquo; elements may be considered neighbors for DBSCAN.</source>
          <target state="translated">피처 배열에서 인스턴스 간 거리를 계산할 때 사용할 지표입니다. 메트릭이 문자열이거나 호출 가능한 경우 메트릭 매개 변수에 대해 &lt;a href=&quot;sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt; &lt;code&gt;sklearn.metrics.pairwise_distances&lt;/code&gt; &lt;/a&gt; 에서 허용하는 옵션 중 하나 여야합니다 . 메트릭이 &quot;사전 계산 된&quot;경우 X는 거리 행렬로 가정되며 정사각형이어야합니다. X는 희소 행렬 일 수 있으며,이 경우 &quot;0이 아닌&quot;요소 만 DBSCAN의 이웃으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="379ba7f47f97569c7bd4b20c4c77667f05344897" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating distance between instances in a feature array. If metric is a string or callable, it must be one of the options allowed by metrics.pairwise.pairwise_distances for its metric parameter. The centroids for the samples corresponding to each class is the point from which the sum of the distances (according to the metric) of all samples that belong to that particular class are minimized. If the &amp;ldquo;manhattan&amp;rdquo; metric is provided, this centroid is the median and for all other metrics, the centroid is now set to be the mean.</source>
          <target state="translated">피처 배열에서 인스턴스 간 거리를 계산할 때 사용할 지표입니다. 메트릭이 문자열이거나 호출 가능한 경우 메트릭 매개 변수에 대해 metrics.pairwise.pairwise_distances에서 허용하는 옵션 중 하나 여야합니다. 각 클래스에 해당하는 샘플의 중심은 특정 클래스에 속하는 모든 샘플의 거리 (메트릭에 따라)의 합계가 최소화되는 지점입니다. &quot;맨해튼&quot;메트릭이 제공되는 경우이 중심은 중앙값이며 다른 모든 메트릭의 경우 이제 중심이 평균으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c83cb22e1c81dc697b4c0637e95b8aeb91bdccce" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating distance between instances in a feature array. If metric is a string, it must be one of the options allowed by &lt;code&gt;metrics.pairwise.pairwise_distances&lt;/code&gt;. If X is the distance array itself, use &lt;code&gt;metric=&quot;precomputed&quot;&lt;/code&gt;.</source>
          <target state="translated">피처 배열에서 인스턴스 간 거리를 계산할 때 사용할 지표입니다. metric이 문자열 인 경우 &lt;code&gt;metrics.pairwise.pairwise_distances&lt;/code&gt; 에서 허용되는 옵션 중 하나 여야합니다 . X가 거리 배열 자체 인 경우 &lt;code&gt;metric=&quot;precomputed&quot;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="76b4b37055a409fe2e4e93cf3ad5227beac3187f" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating distance between instances in a feature array. If metric is a string, it must be one of the options allowed by &lt;code&gt;sklearn.metrics.pairwise.pairwise_distances&lt;/code&gt;. If X is the distance array itself, use &amp;ldquo;precomputed&amp;rdquo; as the metric.</source>
          <target state="translated">피처 배열에서 인스턴스 간 거리를 계산할 때 사용할 지표입니다. metric이 문자열 인 경우 &lt;code&gt;sklearn.metrics.pairwise.pairwise_distances&lt;/code&gt; 에서 허용되는 옵션 중 하나 여야합니다 . X가 거리 배열 자체 인 경우 &quot;사전 계산 된&quot;을 메트릭으로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f0f209bf70493187675786c136d5f63b20f1b34d" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating distance between instances in a feature array. If metric is a string, it must be one of the options allowed by scipy.spatial.distance.pdist for its metric parameter, or a metric listed in pairwise.PAIRWISE_DISTANCE_FUNCTIONS. If metric is &amp;ldquo;precomputed&amp;rdquo;, X is assumed to be a distance matrix. Alternatively, if metric is a callable function, it is called on each pair of instances (rows) and the resulting value recorded. The callable should take two arrays from X as input and return a value indicating the distance between them.</source>
          <target state="translated">피처 배열에서 인스턴스 간 거리를 계산할 때 사용할 지표입니다. 메트릭이 문자열 인 경우 메트릭 매개 변수에 대해 scipy.spatial.distance.pdist에서 허용하는 옵션 중 하나이거나 쌍으로 나열되는 메트릭 중 하나 여야합니다. 메트릭이 &quot;사전 계산 된&quot;경우 X는 거리 행렬로 간주됩니다. 또는 메트릭이 호출 가능한 함수 인 경우 각 인스턴스 쌍 (행)에서 호출되고 결과 값이 기록됩니다. 콜 러블은 X에서 두 개의 배열을 입력으로 받아 그들 사이의 거리를 나타내는 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="5d6bfb4b6dd59ce295c63dba458c016e3505d6e2" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating distance between instances in a feature array. If metric is a string, it must be one of the options allowed by scipy.spatial.distance.pdist for its metric parameter, or a metric listed in pairwise.PAIRWISE_DISTANCE_FUNCTIONS. If metric is &amp;ldquo;precomputed&amp;rdquo;, X is assumed to be a distance matrix. Alternatively, if metric is a callable function, it is called on each pair of instances (rows) and the resulting value recorded. The callable should take two arrays from X as input and return a value indicating the distance between them. The default is &amp;ldquo;euclidean&amp;rdquo; which is interpreted as squared euclidean distance.</source>
          <target state="translated">피처 배열에서 인스턴스 간 거리를 계산할 때 사용할 지표입니다. 메트릭이 문자열 인 경우 메트릭 매개 변수에 대해 scipy.spatial.distance.pdist에서 허용하는 옵션 중 하나이거나 pairwise.PAIRWISE_DISTANCE_FUNCTIONS에 나열된 메트릭 중 하나 여야합니다. 메트릭이 &quot;사전 계산 된&quot;경우 X는 거리 행렬로 간주됩니다. 또는 메트릭이 호출 가능한 함수 인 경우 각 인스턴스 쌍 (행)에서 호출되고 결과 값이 기록됩니다. 콜 러블은 X에서 두 개의 배열을 입력으로 받아 그들 사이의 거리를 나타내는 값을 반환해야합니다. 기본값은 &quot;유클리드&quot;이며 이는 제곱 유클리드 거리로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="1d21e688cc862f7d70c6767af76fb5452c5fdcd0" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating distance between instances in a feature array. If metric is a string, it must be one of the options specified in PAIRED_DISTANCES, including &amp;ldquo;euclidean&amp;rdquo;, &amp;ldquo;manhattan&amp;rdquo;, or &amp;ldquo;cosine&amp;rdquo;. Alternatively, if metric is a callable function, it is called on each pair of instances (rows) and the resulting value recorded. The callable should take two arrays from X as input and return a value indicating the distance between them.</source>
          <target state="translated">피처 배열에서 인스턴스 간 거리를 계산할 때 사용할 지표입니다. 메트릭이 문자열 인 경우 &quot;euclidean&quot;, &quot;manhattan&quot;또는 &quot;cosine&quot;을 포함하여 PAIRED_DISTANCES에 지정된 옵션 중 하나 여야합니다. 또는 메트릭이 호출 가능한 함수 인 경우 각 인스턴스 쌍 (행)에서 호출되고 결과 값이 기록됩니다. 콜 러블은 X에서 두 개의 배열을 입력으로 받아 그들 사이의 거리를 나타내는 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="f36b3ebd6c1e0314a19882dfd7c792465ced8cb2" translate="yes" xml:space="preserve">
          <source>The metric to use when calculating kernel between instances in a feature array. If metric is a string, it must be one of the metrics in pairwise.PAIRWISE_KERNEL_FUNCTIONS. If metric is &amp;ldquo;precomputed&amp;rdquo;, X is assumed to be a kernel matrix. Alternatively, if metric is a callable function, it is called on each pair of instances (rows) and the resulting value recorded. The callable should take two arrays from X as input and return a value indicating the distance between them.</source>
          <target state="translated">기능 배열에서 인스턴스 간 커널을 계산할 때 사용할 지표입니다. 측정 항목이 문자열 인 경우 쌍으로 표시되는 측정 항목 중 하나 여야합니다 .PAIRWISE_KERNEL_FUNCTIONS. 메트릭이 &quot;사전 계산 된&quot;경우 X는 커널 매트릭스 인 것으로 가정합니다. 또는 메트릭이 호출 가능한 함수 인 경우 각 인스턴스 쌍 (행)에서 호출되고 결과 값이 기록됩니다. 콜 러블은 X에서 두 개의 배열을 입력으로 받아 그들 사이의 거리를 나타내는 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4d18e9d9a4e3ba27fc7d43cfc9aa960df294a66" translate="yes" xml:space="preserve">
          <source>The minimal number of components to guarantee with good probability an eps-embedding with n_samples.</source>
          <target state="translated">n_samples로 eps 임베딩을 보장 할 수있는 최소 개수의 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="dcfd1fcfc3ab5a126126fe7777d3f592dbce3714" translate="yes" xml:space="preserve">
          <source>The minimum consensus score, 0, occurs when all pairs of biclusters are totally dissimilar. The maximum score, 1, occurs when both sets are identical.</source>
          <target state="translated">최소 컨센서스 점수 0은 모든 쌍의 biclusters가 완전히 다른 경우에 발생합니다. 최대 점수 1은 두 세트가 동일 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="546685a327b5ecf09c20bafa81b23b9f31e36223" translate="yes" xml:space="preserve">
          <source>The minimum number of components to guarantee the eps-embedding is given by:</source>
          <target state="translated">eps 포함을 보장하기위한 최소 구성 요소 수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d171bb6d353676c30b749e2ca85c8811f4027e78" translate="yes" xml:space="preserve">
          <source>The minimum number of components to guarantees the eps-embedding is given by:</source>
          <target state="translated">eps 포함을 보장하는 최소 구성 요소 수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="78f0aa92767e958a159a7201fe662ff62e3924a6" translate="yes" xml:space="preserve">
          <source>The minimum number of features to be selected. This number of features will always be scored, even if the difference between the original feature count and &lt;code&gt;min_features_to_select&lt;/code&gt; isn&amp;rsquo;t divisible by &lt;code&gt;step&lt;/code&gt;.</source>
          <target state="translated">선택할 최소 기능 수입니다. 원래 기능 개수와 &lt;code&gt;min_features_to_select&lt;/code&gt; 의 차이 를 &lt;code&gt;step&lt;/code&gt; 로 나눌 수없는 경우 에도이 기능 수는 항상 점수가 매겨 집니다 .</target>
        </trans-unit>
        <trans-unit id="1db45f422759f4529cb388eaa249fdf3a381a4d3" translate="yes" xml:space="preserve">
          <source>The minimum number of samples required to be at a leaf node. A split point at any depth will only be considered if it leaves at least &lt;code&gt;min_samples_leaf&lt;/code&gt; training samples in each of the left and right branches. This may have the effect of smoothing the model, especially in regression.</source>
          <target state="translated">리프 노드에 있어야하는 최소 샘플 수입니다. 임의의 깊이에서 분리 점 은 각 왼쪽 및 오른쪽 분기 에 최소한 &lt;code&gt;min_samples_leaf&lt;/code&gt; 훈련 샘플을 남겨 두는 경우에만 고려됩니다 . 이것은 특히 회귀에서 모형을 부드럽게하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="754bd23e1994f02a9f11fc7f2013baebc017ca4d" translate="yes" xml:space="preserve">
          <source>The minimum number of samples required to split an internal node:</source>
          <target state="translated">내부 노드를 분할하는 데 필요한 최소 샘플 수 :</target>
        </trans-unit>
        <trans-unit id="34dec0ced4163b0b0c5f6b2dfda2c2ae915251bf" translate="yes" xml:space="preserve">
          <source>The minimum weighted fraction of the sum total of weights (of all the input samples) required to be at a leaf node. Samples have equal weight when sample_weight is not provided.</source>
          <target state="translated">리프 노드에 있어야하는 (모든 입력 샘플의) 총 중량의 최소 가중 비율입니다. sample_weight가 제공되지 않은 경우 샘플의 가중치는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="adbfb8d83e84eef2c959ef548acb01276646831a" translate="yes" xml:space="preserve">
          <source>The missing indicator for input data. The data type of &lt;code&gt;Xt&lt;/code&gt; will be boolean.</source>
          <target state="translated">입력 데이터에 대한 누락 된 표시기 &lt;code&gt;Xt&lt;/code&gt; 의 데이터 유형은 부울입니다.</target>
        </trans-unit>
        <trans-unit id="2b5249d3ed9eb260ab7aedd15c61af2c7df4b9f1" translate="yes" xml:space="preserve">
          <source>The mixing matrix to be used to initialize the algorithm.</source>
          <target state="translated">알고리즘을 초기화하는 데 사용되는 믹싱 매트릭스입니다.</target>
        </trans-unit>
        <trans-unit id="bc7bce3b2af118e0efad437caf7d72239aa18a90" translate="yes" xml:space="preserve">
          <source>The mixing matrix.</source>
          <target state="translated">믹싱 매트릭스</target>
        </trans-unit>
        <trans-unit id="d9852ae9396dc8e73ffef0a95fb9e0d330c7fbbc" translate="yes" xml:space="preserve">
          <source>The model fits a Gaussian density to each class, assuming that all classes share the same covariance matrix.</source>
          <target state="translated">모든 클래스가 동일한 공분산 행렬을 공유한다고 가정하면 모델은 가우스 밀도를 각 클래스에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="c1fbc40d4a13f1c2e80dae47c2199d2a0ef37a24" translate="yes" xml:space="preserve">
          <source>The model fits a Gaussian density to each class.</source>
          <target state="translated">이 모델은 가우스 밀도를 각 클래스에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="744fe4c01d7aac1fa2b93515c5b761f9f450f5fc" translate="yes" xml:space="preserve">
          <source>The model makes assumptions regarding the distribution of inputs. At the moment, scikit-learn only provides &lt;a href=&quot;generated/sklearn.neural_network.bernoullirbm#sklearn.neural_network.BernoulliRBM&quot;&gt;&lt;code&gt;BernoulliRBM&lt;/code&gt;&lt;/a&gt;, which assumes the inputs are either binary values or values between 0 and 1, each encoding the probability that the specific feature would be turned on.</source>
          <target state="translated">모형은 입력 분포에 관한 가정을합니다. 현재 scikit-learn은 &lt;a href=&quot;generated/sklearn.neural_network.bernoullirbm#sklearn.neural_network.BernoulliRBM&quot;&gt; &lt;code&gt;BernoulliRBM&lt;/code&gt; &lt;/a&gt; 만 제공 합니다.이 입력은 이진 값 또는 0과 1 사이의 값으로 가정하며 각 기능은 특정 기능이 설정 될 확률을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="3e7d91224c848a3199f89b8ed290703400860de0" translate="yes" xml:space="preserve">
          <source>The model need to have probability information computed at training time: fit with attribute &lt;code&gt;probability&lt;/code&gt; set to True.</source>
          <target state="translated">모형에는 훈련 시간에 계산 된 확률 정보가 있어야합니다 . 속성 &lt;code&gt;probability&lt;/code&gt; 과 일치 하여 True로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="532fcfc5fc4303622a7e9b0379fb5dd6d278b658" translate="yes" xml:space="preserve">
          <source>The model parameters can be accessed through the members &lt;code&gt;coef_&lt;/code&gt; and &lt;code&gt;intercept_&lt;/code&gt;:</source>
          <target state="translated">모델 매개 변수는 &lt;code&gt;coef_&lt;/code&gt; 및 &lt;code&gt;intercept_&lt;/code&gt; 멤버를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87fcd2dcd4a9683677aa4a82e264db34c1778c7c" translate="yes" xml:space="preserve">
          <source>The model produced by support vector classification (as described above) depends only on a subset of the training data, because the cost function for building the model does not care about training points that lie beyond the margin. Analogously, the model produced by Support Vector Regression depends only on a subset of the training data, because the cost function for building the model ignores any training data close to the model prediction.</source>
          <target state="translated">지원 벡터 분류 (위에서 설명한대로)로 생성 된 모델은 모델을 빌드하기위한 비용 함수가 여백을 초과하는 트레이닝 포인트에 신경 쓰지 않기 때문에 트레이닝 데이터의 서브 세트에만 의존합니다. 이와 유사하게 Support Vector Regression에서 생성 된 모델은 훈련 데이터의 하위 집합에만 의존합니다. 모델을 구축하기위한 비용 함수는 모델 예측에 가까운 훈련 데이터를 무시하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ffaf4f38449ad493c6f07021545ef1cc0f916269" translate="yes" xml:space="preserve">
          <source>The models are ordered from strongest regularized to least regularized. The 4 coefficients of the models are collected and plotted as a &amp;ldquo;regularization path&amp;rdquo;: on the left-hand side of the figure (strong regularizers), all the coefficients are exactly 0. When regularization gets progressively looser, coefficients can get non-zero values one after the other.</source>
          <target state="translated">모델은 가장 강력한 정규화에서 최소 정규화로 주문됩니다. 모델의 4 가지 계수가 수집되고 &quot;정규화 경로&quot;로 표시됩니다. 그림의 왼쪽 (강력한 정규화 기)에서 모든 계수는 정확히 0입니다. 정규화가 점점 느슨해지면 계수는 0이 아닙니다. 한 번에 하나씩 값.</target>
        </trans-unit>
        <trans-unit id="41864e959b3c3945768dfd483a7ad2160aff5a56" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;classes#module-sklearn.ensemble&quot;&gt;&lt;code&gt;sklearn.ensemble&lt;/code&gt;&lt;/a&gt; includes the popular boosting algorithm AdaBoost, introduced in 1995 by Freund and Schapire &lt;a href=&quot;#fs1995&quot; id=&quot;id9&quot;&gt;[FS1995]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;classes#module-sklearn.ensemble&quot;&gt; &lt;code&gt;sklearn.ensemble&lt;/code&gt; &lt;/a&gt; 모듈 에는 1995 년 Freund and Schapire &lt;a href=&quot;#fs1995&quot; id=&quot;id9&quot;&gt;[FS1995]에&lt;/a&gt; 의해 도입 된 인기있는 부스팅 알고리즘 인 AdaBoost가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="06014352d795d21d24d63a43012b2cdda688123a" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;classes#module-sklearn.ensemble&quot;&gt;&lt;code&gt;sklearn.ensemble&lt;/code&gt;&lt;/a&gt; provides methods for both classification and regression via gradient boosted regression trees.</source>
          <target state="translated">&lt;a href=&quot;classes#module-sklearn.ensemble&quot;&gt; &lt;code&gt;sklearn.ensemble&lt;/code&gt; &lt;/a&gt; 모듈 은 그라디언트 부스트 회귀 트리를 통해 분류 및 회귀에 대한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c3b04b84598eb19b700a6f5a28a6ebcc8d4034a0" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;classes#module-sklearn.metrics&quot;&gt;&lt;code&gt;sklearn.metrics&lt;/code&gt;&lt;/a&gt; also exposes a set of simple functions measuring a prediction error given ground truth and prediction:</source>
          <target state="translated">&lt;a href=&quot;classes#module-sklearn.metrics&quot;&gt; &lt;code&gt;sklearn.metrics&lt;/code&gt; &lt;/a&gt; 모듈 은 또한 사실과 예측이 주어지면 예측 오류를 측정하는 간단한 함수 세트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a4ba63f9b8e0d9fa0a182e0bb4dc5760121e3e0e" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;partial_dependence&lt;/code&gt; provides a convenience function &lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt;&lt;code&gt;plot_partial_dependence&lt;/code&gt;&lt;/a&gt; to create one-way and two-way partial dependence plots. In the below example we show how to create a grid of partial dependence plots: two one-way PDPs for the features &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; and a two-way PDP between the two features:</source>
          <target state="translated">&lt;code&gt;partial_dependence&lt;/code&gt; 모듈 은 편의 함수 &lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt; &lt;code&gt;plot_partial_dependence&lt;/code&gt; &lt;/a&gt; 를 제공하여 단방향 및 양방향 부분 의존도를 생성합니다. 아래 예제에서는 부분 의존도 그리드를 만드는 방법을 보여줍니다. 지형지 물 &lt;code&gt;0&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 두 개의 단방향 PDP 및 두 지형지 물에 대한 양방향 PDP :</target>
        </trans-unit>
        <trans-unit id="5b2518b0fdafd75a6658a4d2a018bccb79345ce3" translate="yes" xml:space="preserve">
          <source>The module contains the public attributes &lt;code&gt;coefs_&lt;/code&gt; and &lt;code&gt;intercepts_&lt;/code&gt;. &lt;code&gt;coefs_&lt;/code&gt; is a list of weight matrices, where weight matrix at index \(i\) represents the weights between layer \(i\) and layer \(i+1\). &lt;code&gt;intercepts_&lt;/code&gt; is a list of bias vectors, where the vector at index \(i\) represents the bias values added to layer \(i+1\).</source>
          <target state="translated">모듈은 공용 속성 &lt;code&gt;coefs_&lt;/code&gt; 및 &lt;code&gt;intercepts_&lt;/code&gt; 를 포함합니다 . &lt;code&gt;coefs_&lt;/code&gt; 는 가중치 행렬의 목록이며, 인덱스 \ (i \)의 가중치 행렬은 레이어 \ (i \)와 레이어 \ (i + 1 \) 사이의 가중치를 나타냅니다. &lt;code&gt;intercepts_&lt;/code&gt; 는 바이어스 벡터의 목록입니다. 인덱스 \ (i \)의 벡터는 레이어 \ (i + 1 \)에 추가 된 바이어스 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b31fa7fd3ac8f2a64f0dd29549e8dd9abb96ee19" translate="yes" xml:space="preserve">
          <source>The module: &lt;code&gt;random_projection&lt;/code&gt; provides several tools for data reduction by random projections. See the relevant section of the documentation: &lt;a href=&quot;random_projection#random-projection&quot;&gt;Random Projection&lt;/a&gt;.</source>
          <target state="translated">모듈 : &lt;code&gt;random_projection&lt;/code&gt; 은 랜덤 프로젝션에 의한 데이터 축소를위한 여러 도구를 제공합니다. 문서의 관련 섹션 : &lt;a href=&quot;random_projection#random-projection&quot;&gt;임의 투영을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81f532ac90d157aeffd690ee0c3b7aa6b7bbd149" translate="yes" xml:space="preserve">
          <source>The monitor is called after each iteration with the current iteration, a reference to the estimator and the local variables of &lt;code&gt;_fit_stages&lt;/code&gt; as keyword arguments &lt;code&gt;callable(i, self,
locals())&lt;/code&gt;. If the callable returns &lt;code&gt;True&lt;/code&gt; the fitting procedure is stopped. The monitor can be used for various things such as computing held-out estimates, early stopping, model introspect, and snapshoting.</source>
          <target state="translated">모니터는 현재 반복, 추정기에 대한 참조 및 &lt;code&gt;_fit_stages&lt;/code&gt; 의 로컬 변수 를 키워드 인수 &lt;code&gt;callable(i, self, locals())&lt;/code&gt; 반복 할 때마다 호출 됩니다. 콜 러블이 &lt;code&gt;True&lt;/code&gt; 를 반환 하면 피팅 절차가 중지됩니다. 이 모니터는 계산 보류 계산, 조기 중지, 모델 내성 및 스냅 샷과 같은 다양한 용도로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52aa15c9df5da45110f63c8c26b8cfa477557d62" translate="yes" xml:space="preserve">
          <source>The most common parameter amenable to this strategy is the parameter encoding the strength of the regularizer. In this case we say that we compute the &lt;strong&gt;regularization path&lt;/strong&gt; of the estimator.</source>
          <target state="translated">이 전략에 가장 적합한 매개 변수는 정규화 기의 강도를 인코딩하는 매개 변수입니다. 이 경우 추정기 의 &lt;strong&gt;정규화 경로&lt;/strong&gt; 를 계산한다고합니다 .</target>
        </trans-unit>
        <trans-unit id="3156312e704bdb91fdff12aa2e110d4f21e21302" translate="yes" xml:space="preserve">
          <source>The most intuitive way to do so is to use a bags of words representation:</source>
          <target state="translated">가장 직관적 인 방법은 단어 표현을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="399fde41b63b2ea676c5145583a3950879f6c9fa" translate="yes" xml:space="preserve">
          <source>The motivation to use this scaling include robustness to very small standard deviations of features and preserving zero entries in sparse data.</source>
          <target state="translated">이 스케일링을 사용하려는 동기에는 기능의 매우 작은 표준 편차에 대한 견고성 및 희소 데이터의 0 항목 보존이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec6281766fab2b8f9e9f9f6e92da7d4704e6316" translate="yes" xml:space="preserve">
          <source>The multi-task lasso allows to fit multiple regression problems jointly enforcing the selected features to be the same across tasks. This example simulates sequential measurements, each task is a time instant, and the relevant features vary in amplitude over time while being the same. The multi-task lasso imposes that features that are selected at one time point are select for all time point. This makes feature selection by the Lasso more stable.</source>
          <target state="translated">멀티 태스킹 올가미를 사용하면 선택한 기능이 여러 작업에서 동일하게 적용되도록하는 여러 회귀 문제를 맞출 수 있습니다. 이 예제는 순차적 측정을 시뮬레이션하고 각 작업은 시간 순간이며 관련 기능은 시간이 지남에 따라 진폭이 다양하지만 동일합니다. 멀티 태스킹 올가미는 한 시점에서 선택된 기능이 모든 시점에서 선택되도록합니다. 이것은 올가미에 의한 기능 선택을보다 안정적으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7b55b776834f44186e095c0df9ee2b704ce3630c" translate="yes" xml:space="preserve">
          <source>The multiclass definition here seems the most reasonable extension of the metric used in binary classification, though there is no certain consensus in the literature:</source>
          <target state="translated">여기서 다중 클래스 정의는 이진 분류에 사용 된 메트릭의 가장 합리적인 확장으로 보이지만 문헌에는 특정 합의가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5fdb408d7bc477f0762da630aa0f3aea39db3f13" translate="yes" xml:space="preserve">
          <source>The multiclass support is handled according to a one-vs-one scheme.</source>
          <target state="translated">멀티 클래스 지원은 일대일 구성표에 따라 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="66359e593d021aa5ae2d568f4acc056ec0bf4a32" translate="yes" xml:space="preserve">
          <source>The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification). The multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work.</source>
          <target state="translated">다항식 Naive Bayes 분류기는 개별 기능 (예 : 텍스트 분류를위한 단어 수)으로 분류하는 데 적합합니다. 다항 분포에는 일반적으로 정수 피처 수가 필요합니다. 그러나 실제로는 tf-idf와 같은 소수 계수도 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fcb660998dc7edb2d34f5dc5854df445bad9a92" translate="yes" xml:space="preserve">
          <source>The multiple metrics can be specified either as a list, tuple or set of predefined scorer names:</source>
          <target state="translated">여러 메트릭을 목록, 튜플 또는 사전 정의 된 득점자 이름 세트로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a09e250651300d47ed9cd74b128d0a12a5aa8e3e" translate="yes" xml:space="preserve">
          <source>The name of the sample image loaded</source>
          <target state="translated">로드 된 샘플 이미지의 이름</target>
        </trans-unit>
        <trans-unit id="b853190860f83bcb94f9f4edb130e6f04adf4ae5" translate="yes" xml:space="preserve">
          <source>The names &lt;code&gt;vect&lt;/code&gt;, &lt;code&gt;tfidf&lt;/code&gt; and &lt;code&gt;clf&lt;/code&gt; (classifier) are arbitrary. We will use them to perform grid search for suitable hyperparameters below. We can now train the model with a single command:</source>
          <target state="translated">이름의 &lt;code&gt;vect&lt;/code&gt; , &lt;code&gt;tfidf&lt;/code&gt; 및 &lt;code&gt;clf&lt;/code&gt; (분류)은 임의이다. 이를 사용하여 아래에서 적합한 하이퍼 파라미터에 대한 그리드 검색을 수행합니다. 이제 단일 명령으로 모델을 학습 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9146e93a1405c3d2cac65e0084d1b1c7a951b3b3" translate="yes" xml:space="preserve">
          <source>The names of the dataset columns</source>
          <target state="translated">데이터 세트 열의 이름</target>
        </trans-unit>
        <trans-unit id="a0fb0e8bf0410fa55523d36fa2a7a49ac4415117" translate="yes" xml:space="preserve">
          <source>The new dtype will be np.float32 or np.float64, depending on the original type. The function can create a copy or modify the argument depending on the argument copy.</source>
          <target state="translated">새로운 dtype은 원래 유형에 따라 np.float32 또는 np.float64입니다. 이 함수는 인수 사본에 따라 사본을 작성하거나 인수를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d7b951e7afa9271dd7834467cb67e175d7e626f" translate="yes" xml:space="preserve">
          <source>The new entry \(d(u,v)\) is computed as follows,</source>
          <target state="translated">새로운 항목 \ (d (u, v) \)는 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="c771668f5d4b4d7aa145f31455a67e2ba21af3ce" translate="yes" xml:space="preserve">
          <source>The next figure compares the results obtained for the different type of the weight concentration prior (parameter &lt;code&gt;weight_concentration_prior_type&lt;/code&gt;) for different values of &lt;code&gt;weight_concentration_prior&lt;/code&gt;. Here, we can see the value of the &lt;code&gt;weight_concentration_prior&lt;/code&gt; parameter has a strong impact on the effective number of active components obtained. We can also notice that large values for the concentration weight prior lead to more uniform weights when the type of prior is &amp;lsquo;dirichlet_distribution&amp;rsquo; while this is not necessarily the case for the &amp;lsquo;dirichlet_process&amp;rsquo; type (used by default).</source>
          <target state="translated">다음 그림은 종래 중량 농도의 다른 유형에 대해 얻어진 결과 (파라미터 비교 &lt;code&gt;weight_concentration_prior_type&lt;/code&gt; 다른 값) &lt;code&gt;weight_concentration_prior&lt;/code&gt; 를 . 여기서 &lt;code&gt;weight_concentration_prior&lt;/code&gt; 매개 변수 의 값이 획득 한 유효 구성 요소의 유효 수에 큰 영향을주는 것을 볼 수 있습니다. 또한 사전 유형이 'dirichlet_distribution'인 경우 사전 농도 가중치의 값이 클수록 균일 한 가중치가 발생하지만 'dirichlet_process'유형의 경우 (기본적으로 사용됨)는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b6d38fd34e131451ba8b974153991556ff8b9398" translate="yes" xml:space="preserve">
          <source>The next figure compares the time for fitting and prediction of &lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt;&lt;code&gt;KernelRidge&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SVR&lt;/code&gt; for different sizes of the training set. Fitting &lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt;&lt;code&gt;KernelRidge&lt;/code&gt;&lt;/a&gt; is faster than &lt;code&gt;SVR&lt;/code&gt; for medium-sized training sets (less than 1000 samples); however, for larger training sets &lt;code&gt;SVR&lt;/code&gt; scales better. With regard to prediction time, &lt;code&gt;SVR&lt;/code&gt; is faster than &lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt;&lt;code&gt;KernelRidge&lt;/code&gt;&lt;/a&gt; for all sizes of the training set because of the learned sparse solution. Note that the degree of sparsity and thus the prediction time depends on the parameters \(\epsilon\) and \(C\) of the &lt;code&gt;SVR&lt;/code&gt;; \(\epsilon = 0\) would correspond to a dense model.</source>
          <target state="translated">다음 그림은 다양한 크기의 트레이닝 세트에 대한 &lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt; &lt;code&gt;KernelRidge&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;SVR&lt;/code&gt; 의 피팅 및 예측 시간을 비교합니다 . 피팅 &lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt; &lt;code&gt;KernelRidge&lt;/code&gt; &lt;/a&gt; 는 중간 규모의 훈련 세트 (1000 개 미만의 샘플)의 경우 &lt;code&gt;SVR&lt;/code&gt; 보다 빠릅니다 . 그러나 더 큰 훈련 세트의 경우 &lt;code&gt;SVR&lt;/code&gt; 이 더 잘 확장됩니다. 예측 시간과 관련하여 &lt;code&gt;SVR&lt;/code&gt; 은 학습 된 스파 스 솔루션으로 인해 모든 규모의 트레이닝 세트에서 &lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt; &lt;code&gt;KernelRidge&lt;/code&gt; &lt;/a&gt; 보다 빠릅니다 . 희소도 및 따라서 예측 시간은 &lt;code&gt;SVR&lt;/code&gt; 의 파라미터 \ (\ epsilon \) 및 \ (C \)에 의존한다는 점에 유의한다 ; \ (\ epsilon = 0 \)은 밀도가 높은 모델에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="7fb8a1fd588ff5df76899e15821355218c8c70df" translate="yes" xml:space="preserve">
          <source>The next figure compares the time for fitting and prediction of KRR and SVR for different sizes of the training set. Fitting KRR is faster than SVR for medium- sized training sets (less than 1000 samples); however, for larger training sets SVR scales better. With regard to prediction time, SVR is faster than KRR for all sizes of the training set because of the learned sparse solution. Note that the degree of sparsity and thus the prediction time depends on the parameters epsilon and C of the SVR.</source>
          <target state="translated">다음 그림은 다양한 크기의 트레이닝 세트에 대한 KRR 및 SVR의 피팅 및 예측 시간을 비교합니다. 피팅 KRR은 중간 규모의 훈련 세트 (1000 개 미만의 샘플)의 경우 SVR보다 빠릅니다. 그러나 더 큰 훈련 세트의 경우 SVR이 더 잘 확장됩니다. 예측 시간과 관련하여 SVR은 학습 된 희소 솔루션으로 인해 모든 크기의 트레이닝 세트에서 KRR보다 빠릅니다. 희소도 및 따라서 예측 시간은 SVR의 파라미터 엡실론 및 C에 의존한다는 점에 유의한다.</target>
        </trans-unit>
        <trans-unit id="b8b8c72913234ec998c925f50d9fa1a29ef7082f" translate="yes" xml:space="preserve">
          <source>The next image illustrates how sigmoid calibration changes predicted probabilities for a 3-class classification problem. Illustrated is the standard 2-simplex, where the three corners correspond to the three classes. Arrows point from the probability vectors predicted by an uncalibrated classifier to the probability vectors predicted by the same classifier after sigmoid calibration on a hold-out validation set. Colors indicate the true class of an instance (red: class 1, green: class 2, blue: class 3).</source>
          <target state="translated">다음 이미지는 시그 모이 드 캘리브레이션 변경으로 3 클래스 분류 문제의 예상 확률을 보여줍니다. 3 개의 모서리가 3 개의 클래스에 해당하는 표준 2 심플 렉스가 그림에 나와 있습니다. 화살표는 보정되지 않은 분류기에 의해 예측 된 확률 벡터에서 홀드 아웃 유효성 검사 세트에서 시그 모이 드 보정 후 동일한 분류기에 의해 예측 된 확률 벡터를 가리 킵니다. 색상은 인스턴스의 실제 클래스를 나타냅니다 (빨간색 : 클래스 1, 녹색 : 클래스 2, 파란색 : 클래스 3).</target>
        </trans-unit>
        <trans-unit id="d16a780143f0785e9248e298dec17c9fe8de9d1e" translate="yes" xml:space="preserve">
          <source>The nodes are random variables whose states depend on the state of the other nodes they are connected to. The model is therefore parameterized by the weights of the connections, as well as one intercept (bias) term for each visible and hidden unit, omitted from the image for simplicity.</source>
          <target state="translated">노드는 상태가 연결된 다른 노드의 상태에 따라 달라지는 임의 변수입니다. 따라서이 모델은 연결 가중치와 각 가시 및 숨겨진 단위에 대한 하나의 절편 (바이어스) 항에 의해 매개 변수화되며, 간략화를 위해 이미지에서 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="55f688a90e745dd5020f6b5c567bbe8f6396fa6e" translate="yes" xml:space="preserve">
          <source>The noise level in the targets can be specified by passing it via the parameter &lt;code&gt;alpha&lt;/code&gt;, either globally as a scalar or per datapoint. Note that a moderate noise level can also be helpful for dealing with numeric issues during fitting as it is effectively implemented as Tikhonov regularization, i.e., by adding it to the diagonal of the kernel matrix. An alternative to specifying the noise level explicitly is to include a WhiteKernel component into the kernel, which can estimate the global noise level from the data (see example below).</source>
          <target state="translated">대상의 노이즈 레벨은 매개 변수 &lt;code&gt;alpha&lt;/code&gt; 를 통해 전역 적으로 스칼라 또는 데이터 포인트 별로 전달하여 지정할 수 있습니다 . 적당한 소음 수준은 Tikhonov 정규화, 즉 커널 매트릭스의 대각선에 추가함으로써 효과적으로 구현되므로 피팅 중 숫자 문제를 처리하는 데 도움이 될 수 있습니다. 노이즈 수준을 명시 적으로 지정하는 대안은 커널에서 WhiteKernel 구성 요소를 포함하여 데이터에서 전체 노이즈 수준을 추정 할 수 있습니다 (아래 예 참조).</target>
        </trans-unit>
        <trans-unit id="99b58f648d173c7793dc0e913318a8835572f0c2" translate="yes" xml:space="preserve">
          <source>The non-fixed, log-transformed hyperparameters of the kernel</source>
          <target state="translated">커널의 수정되지 않은 로그 변환 하이퍼 파라미터</target>
        </trans-unit>
        <trans-unit id="8ea3cf8563db967f688cb46c0883a9d020905a15" translate="yes" xml:space="preserve">
          <source>The nonmetric algorithm adds a monotonic regression step before computing the stress.</source>
          <target state="translated">비 메트릭 알고리즘은 응력을 계산하기 전에 단조 회귀 단계를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8cecdfcc92ccd83125ecaa6c4beb7447e43f92cb" translate="yes" xml:space="preserve">
          <source>The norm to use to normalize each non zero sample (or each non-zero feature if axis is 0).</source>
          <target state="translated">0이 아닌 각 샘플 (또는 축이 0 인 경우 0이 아닌 각 특징)을 정규화하는 데 사용되는 표준입니다.</target>
        </trans-unit>
        <trans-unit id="39e8a7c3ff72c23082d4ee16a84d74279c8584ba" translate="yes" xml:space="preserve">
          <source>The norm to use to normalize each non zero sample.</source>
          <target state="translated">0이 아닌 각 샘플을 정규화하는 데 사용되는 표준입니다.</target>
        </trans-unit>
        <trans-unit id="b4510db24d586496f5cd27e9cd8024ffe16a368e" translate="yes" xml:space="preserve">
          <source>The normalized mutual information is defined as</source>
          <target state="translated">정규화 된 상호 정보는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ad22e0beb8a3a9f5574d757b3678d39d78057ba3" translate="yes" xml:space="preserve">
          <source>The normalizer instance can then be used on sample vectors as any transformer:</source>
          <target state="translated">그런 다음 노멀 라이저 인스턴스를 임의의 변환기로 샘플 벡터에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82d79be22b3b3fa23f79d393f8a5b628a27ddb08" translate="yes" xml:space="preserve">
          <source>The number k of neighbors considered, (alias parameter n_neighbors) is typically chosen 1) greater than the minimum number of objects a cluster has to contain, so that other objects can be local outliers relative to this cluster, and 2) smaller than the maximum number of close by objects that can potentially be local outliers. In practice, such informations are generally not available, and taking n_neighbors=20 appears to work well in general. When the proportion of outliers is high (i.e. greater than 10 %, as in the example below), n_neighbors should be greater (n_neighbors=35 in the example below).</source>
          <target state="translated">고려되는 이웃의 수 k (별칭 매개 변수 n_neighbors)는 일반적으로 1) 클러스터에 포함해야하는 최소 개체 수보다 많으므로 다른 개체는이 클러스터에 비해 로컬 특이 치일 수 있고 2) 최대보다 작습니다. 잠재적으로 로컬 이상 치일 수있는 객체에 의한 근접도. 실제로 이러한 정보는 일반적으로 사용할 수 없으며 n_neighbors = 20을 사용하면 일반적으로 잘 작동하는 것으로 보입니다. 특이 치 비율이 높은 경우 (즉, 아래 예에서와 같이 10 % 이상) n_neighbors는 커야합니다 (아래 예에서 n_neighbors = 35).</target>
        </trans-unit>
        <trans-unit id="4a35a9d90f2abd9af864433913570f3dbe7f2765" translate="yes" xml:space="preserve">
          <source>The number of CPUs to use to do the OVA (One Versus All, for multi-class problems) computation. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">OVA (멀티 클래스 문제의 경우 하나) 계산을 수행하는 데 사용할 CPU 수입니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="36ae328d3607f79ec631b3fe327da7ed8cf8098b" translate="yes" xml:space="preserve">
          <source>The number of CPUs to use to do the computation. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">계산에 사용할 CPU 수입니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="720879c36f3df22b5ec2b112039efcd8b5ba8b1b" translate="yes" xml:space="preserve">
          <source>The number of EM iterations to perform.</source>
          <target state="translated">수행 할 EM 반복 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="40648db4f1524a67ed66976c14cc75bac6eed386" translate="yes" xml:space="preserve">
          <source>The number of atomic tasks to dispatch at once to each worker. When individual evaluations are very fast, dispatching calls to workers can be slower than sequential computation because of the overhead. Batching fast computations together can mitigate this. The &lt;code&gt;'auto'&lt;/code&gt; strategy keeps track of the time it takes for a batch to complete, and dynamically adjusts the batch size to keep the time on the order of half a second, using a heuristic. The initial batch size is 1. &lt;code&gt;batch_size=&quot;auto&quot;&lt;/code&gt; with &lt;code&gt;backend=&quot;threading&quot;&lt;/code&gt; will dispatch batches of a single task at a time as the threading backend has very little overhead and using larger batch size has not proved to bring any gain in that case.</source>
          <target state="translated">각 작업자에게 한 번에 발송할 원자 작업 수입니다. 개별 평가가 매우 빠르면 오버 헤드로 인해 작업자에게 콜을 디스패치하는 것이 순차적 계산보다 느릴 수 있습니다. 빠른 계산을 함께 배치하면이를 완화 할 수 있습니다. &lt;code&gt;'auto'&lt;/code&gt; 전략은 전체에 배치 걸리는 시간을 추적, 동적 휴리스틱을 사용하여, 0.5 초 정도의 시간을 유지하기 위해 배치 크기를 조정합니다. 초기 배치 크기는 1입니다. &lt;code&gt;batch_size=&quot;auto&quot;&lt;/code&gt; with &lt;code&gt;backend=&quot;threading&quot;&lt;/code&gt; 은 스레딩 백엔드의 오버 헤드가 거의없고 더 큰 배치 크기를 사용하더라도 그에 따른 이득을 얻지 못하므로 한 번에 단일 작업의 배치를 디스패치합니다. 케이스.</target>
        </trans-unit>
        <trans-unit id="3ae39cb6a942b138204dbb141781bfb4c75e3760" translate="yes" xml:space="preserve">
          <source>The number of base estimators in the ensemble.</source>
          <target state="translated">앙상블의 기본 추정기의 수입니다.</target>
        </trans-unit>
        <trans-unit id="9fe1c6517ea4c36af295e91a2e2410361ff8432c" translate="yes" xml:space="preserve">
          <source>The number of batches (of tasks) to be pre-dispatched. Default is &amp;lsquo;2*n_jobs&amp;rsquo;. When batch_size=&amp;rdquo;auto&amp;rdquo; this is reasonable default and the workers should never starve.</source>
          <target state="translated">사전 발송할 배치 (작업) 수입니다. 기본값은 '2 * n_jobs'입니다. batch_size =&amp;rdquo;auto&amp;rdquo;인 경우 이는 합리적인 기본값이며 작업자는 절대 굶지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="f9d0a981566d58378881b2cabe57053da9d34fb6" translate="yes" xml:space="preserve">
          <source>The number of biclusters to find.</source>
          <target state="translated">찾을 biclusters의 수입니다.</target>
        </trans-unit>
        <trans-unit id="b9c52ec2125ed0e2339a6eae69fb246b4dc5348e" translate="yes" xml:space="preserve">
          <source>The number of biclusters.</source>
          <target state="translated">biclusters의 수입니다.</target>
        </trans-unit>
        <trans-unit id="3424019fa75a2f96f62b30f8336ea4cebfa5c4fe" translate="yes" xml:space="preserve">
          <source>The number of bins to produce. The intervals for the bins are determined by the minimum and maximum of the input data. Raises ValueError if &lt;code&gt;n_bins &amp;lt; 2&lt;/code&gt;.</source>
          <target state="translated">생산할 용기 수입니다. 빈의 간격은 입력 데이터의 최소 및 최대에 의해 결정됩니다. &lt;code&gt;n_bins &amp;lt; 2&lt;/code&gt; 경우 ValueError를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="016567b86fa6f6a4b4c043763b4e841bd445fc32" translate="yes" xml:space="preserve">
          <source>The number of boosting stages to perform. Gradient boosting is fairly robust to over-fitting so a large number usually results in better performance.</source>
          <target state="translated">수행 할 부스팅 단계 수입니다. 그라디언트 부스팅은 과적 합에 상당히 강하므로 많은 수의 경우 일반적으로 성능이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="d31e8a7065eae23aeb71500302a31ebb485560ec" translate="yes" xml:space="preserve">
          <source>The number of classes</source>
          <target state="translated">수업 수</target>
        </trans-unit>
        <trans-unit id="77a0204799f583fccb414a4215d0dc841510a2f7" translate="yes" xml:space="preserve">
          <source>The number of classes (for single output problems), or a list containing the number of classes for each output (for multi-output problems).</source>
          <target state="translated">클래스 수 (단일 출력 문제의 경우) 또는 각 출력의 클래스 수를 포함하는 목록 (다중 출력 문제의 경우)</target>
        </trans-unit>
        <trans-unit id="221daa93ea83049b71eff667b2da7d0ce3fa89ae" translate="yes" xml:space="preserve">
          <source>The number of classes (or labels) of the classification problem.</source>
          <target state="translated">분류 문제의 클래스 (또는 레이블) 수입니다.</target>
        </trans-unit>
        <trans-unit id="7b75bf8cc583f50195e96e51d244ce57f23360a0" translate="yes" xml:space="preserve">
          <source>The number of classes (single output problem), or a list containing the number of classes for each output (multi-output problem).</source>
          <target state="translated">클래스 수 (단일 출력 문제) 또는 각 출력에 대한 클래스 수를 포함하는 목록 (다중 출력 문제)</target>
        </trans-unit>
        <trans-unit id="8b5fc0d622c5abb76da13c6a8f50c84a211eca46" translate="yes" xml:space="preserve">
          <source>The number of classes in the training data</source>
          <target state="translated">훈련 데이터의 클래스 수</target>
        </trans-unit>
        <trans-unit id="a096e01744ef01b9d139303dfd4a94a83569986b" translate="yes" xml:space="preserve">
          <source>The number of classes of the classification problem.</source>
          <target state="translated">분류 문제의 클래스 수입니다.</target>
        </trans-unit>
        <trans-unit id="21583bce2023d80fa6dedc801ccace76e8a2445f" translate="yes" xml:space="preserve">
          <source>The number of classes to return.</source>
          <target state="translated">반환 할 클래스 수입니다.</target>
        </trans-unit>
        <trans-unit id="7defdc95bb1ddc0580ac0be76fc251278b72fb84" translate="yes" xml:space="preserve">
          <source>The number of classes.</source>
          <target state="translated">클래스 수</target>
        </trans-unit>
        <trans-unit id="062fe5ee9cf896a5c74f9ba057f89b8b6de5fa8a" translate="yes" xml:space="preserve">
          <source>The number of clusters per class.</source>
          <target state="translated">클래스 당 클러스터 수</target>
        </trans-unit>
        <trans-unit id="21f23a23e06d5c295fade98ab37ab55d16e621ca" translate="yes" xml:space="preserve">
          <source>The number of clusters to find.</source>
          <target state="translated">찾을 클러스터 수입니다.</target>
        </trans-unit>
        <trans-unit id="b4184f0399110f5f8e690a26513dd6f78511c0a5" translate="yes" xml:space="preserve">
          <source>The number of clusters to form as well as the number of centroids to generate.</source>
          <target state="translated">형성 할 군집 수와 생성 할 중심 수입니다.</target>
        </trans-unit>
        <trans-unit id="35d84f4a157603ef94bd9baafa0d524311104205" translate="yes" xml:space="preserve">
          <source>The number of columns in the grid plot (default: 3).</source>
          <target state="translated">그리드 플롯의 열 수입니다 (기본값 : 3).</target>
        </trans-unit>
        <trans-unit id="25441c707266953707d0c752071de32d0051d235" translate="yes" xml:space="preserve">
          <source>The number of connected components in the graph.</source>
          <target state="translated">그래프에서 연결된 구성 요소의 수입니다.</target>
        </trans-unit>
        <trans-unit id="5d17146f816382e55c9752b437d1e0a90ca8e256" translate="yes" xml:space="preserve">
          <source>The number of cross-validation splits (folds/iterations).</source>
          <target state="translated">교차 유효성 검사 분할 수 (접기 / 반복).</target>
        </trans-unit>
        <trans-unit id="aa32f92ae0454e6e9ee52207fe93d7eb6600c995" translate="yes" xml:space="preserve">
          <source>The number of degrees of freedom of each components in the model.</source>
          <target state="translated">모형에서 각 구성 요소의 자유도입니다.</target>
        </trans-unit>
        <trans-unit id="b2ef77453518fcb650d3ae2f90fcfda15611a36f" translate="yes" xml:space="preserve">
          <source>The number of duplicated features, drawn randomly from the informative and the redundant features.</source>
          <target state="translated">정보 및 중복 기능에서 임의로 추출 된 중복 기능의 수입니다.</target>
        </trans-unit>
        <trans-unit id="f3756e321fd8c5762ae8ac31516f2ecb21110717" translate="yes" xml:space="preserve">
          <source>The number of equally spaced points on the &lt;code&gt;grid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;grid&lt;/code&gt; 에서 같은 간격으로 점 수입니다 .</target>
        </trans-unit>
        <trans-unit id="b29bfd2ea8e3e1682dd4a79d1706f446dfb38a05" translate="yes" xml:space="preserve">
          <source>The number of equally spaced points on the axes.</source>
          <target state="translated">축에서 동일 간격의 포인트 수입니다.</target>
        </trans-unit>
        <trans-unit id="a2df871c8f4e92cb59ed15324ccda38fad42ea75" translate="yes" xml:space="preserve">
          <source>The number of estimators as selected by early stopping (if &lt;code&gt;n_iter_no_change&lt;/code&gt; is specified). Otherwise it is set to &lt;code&gt;n_estimators&lt;/code&gt;.</source>
          <target state="translated">조기 중지에 의해 선택된 추정기 수 ( &lt;code&gt;n_iter_no_change&lt;/code&gt; 가 지정된 경우). 그렇지 않으면 &lt;code&gt;n_estimators&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1c41aa32f1f0f6cf009b98065236eda5fafde67a" translate="yes" xml:space="preserve">
          <source>The number of features (columns) in the output matrices. Small numbers of features are likely to cause hash collisions, but large numbers will cause larger coefficient dimensions in linear learners.</source>
          <target state="translated">출력 행렬의 피처 (열) 수입니다. 소수의 피처는 해시 충돌을 일으킬 가능성이 있지만, 많은 수는 선형 학습자에서 더 큰 계수 치수를 유발합니다.</target>
        </trans-unit>
        <trans-unit id="586a175a91db906a71d554d2394ac768c54a011d" translate="yes" xml:space="preserve">
          <source>The number of features for each sample.</source>
          <target state="translated">각 샘플의 기능 수입니다.</target>
        </trans-unit>
        <trans-unit id="7aa2f8ce84af9869f7a766d49383cc26f37d08c4" translate="yes" xml:space="preserve">
          <source>The number of features has to be &amp;gt;= 5.</source>
          <target state="translated">기능 수는&amp;gt; = 5 여야합니다.</target>
        </trans-unit>
        <trans-unit id="129d21ac97bd672e4633231039dccb80b794a16c" translate="yes" xml:space="preserve">
          <source>The number of features to consider when looking for the best split:</source>
          <target state="translated">최상의 분할을 찾을 때 고려해야 할 기능 수 :</target>
        </trans-unit>
        <trans-unit id="7bfa1c66757d06ac8d59fc4bf744ebce5057ba13" translate="yes" xml:space="preserve">
          <source>The number of features to draw from X to train each base estimator.</source>
          <target state="translated">각 기본 추정기를 훈련시키기 위해 X에서 그릴 기능의 수입니다.</target>
        </trans-unit>
        <trans-unit id="d51bb9401f1843316f34a353f5592cb098582ce3" translate="yes" xml:space="preserve">
          <source>The number of features to select. If &lt;code&gt;None&lt;/code&gt;, half of the features are selected.</source>
          <target state="translated">선택할 기능의 수입니다. 경우 &lt;code&gt;None&lt;/code&gt; , 기능의 절반이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="9a2e8b8c9f83e59315eadeb30286733009f73579" translate="yes" xml:space="preserve">
          <source>The number of features to use. If None, it will be inferred from the maximum column index occurring in any of the files.</source>
          <target state="translated">사용할 기능의 수입니다. None 인 경우 파일에서 발생하는 최대 열 인덱스에서 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="98598b839c3ae52a8bef761a8c292e4971f87fa1" translate="yes" xml:space="preserve">
          <source>The number of features to use. If None, it will be inferred. This argument is useful to load several files that are subsets of a bigger sliced dataset: each subset might not have examples of every feature, hence the inferred shape might vary from one slice to another. n_features is only required if &lt;code&gt;offset&lt;/code&gt; or &lt;code&gt;length&lt;/code&gt; are passed a non-default value.</source>
          <target state="translated">사용할 기능의 수입니다. None 인 경우 추론됩니다. 이 인수는 더 큰 슬라이스 데이터 세트의 서브 세트 인 여러 파일을로드하는 데 유용합니다. 각 서브 세트에 모든 기능의 예가 없을 수 있으므로 유추 된 모양이 슬라이스마다 다를 수 있습니다. n_features는 &lt;code&gt;offset&lt;/code&gt; 또는 &lt;code&gt;length&lt;/code&gt; 에 기본값이 아닌 값이 전달 된 경우에만 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="deca4fdfd1ca37b7e04bbcf3985c1b98fb8a3a95" translate="yes" xml:space="preserve">
          <source>The number of features when &lt;code&gt;fit&lt;/code&gt; is performed.</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 이 수행 될 때 기능의 수입니다 .</target>
        </trans-unit>
        <trans-unit id="000ec70bd77b0bf4abd3e711fc085eb14c1166a9" translate="yes" xml:space="preserve">
          <source>The number of features.</source>
          <target state="translated">기능의 수입니다.</target>
        </trans-unit>
        <trans-unit id="9910eba7c229f9255e2c9649c38205ffc855802c" translate="yes" xml:space="preserve">
          <source>The number of features. Should be at least 5.</source>
          <target state="translated">기능의 수입니다. 5 이상이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6b858bf37b4f474c4599d32f8587786621c82cda" translate="yes" xml:space="preserve">
          <source>The number of informative features, i.e., the number of features used to build the linear model used to generate the output.</source>
          <target state="translated">유익한 기능의 수, 즉 출력을 생성하는 데 사용되는 선형 모델을 작성하는 데 사용되는 기능의 수입니다.</target>
        </trans-unit>
        <trans-unit id="1a77292033054c608772a804dab5a2e1fdf27c5c" translate="yes" xml:space="preserve">
          <source>The number of informative features. Each class is composed of a number of gaussian clusters each located around the vertices of a hypercube in a subspace of dimension &lt;code&gt;n_informative&lt;/code&gt;. For each cluster, informative features are drawn independently from N(0, 1) and then randomly linearly combined within each cluster in order to add covariance. The clusters are then placed on the vertices of the hypercube.</source>
          <target state="translated">유익한 기능의 수입니다. 각 클래스는 차원 &lt;code&gt;n_informative&lt;/code&gt; 의 하위 공간에서 하이퍼 큐브의 정점 주위에 각각 위치한 여러 가우스 클러스터로 구성 됩니다. 각 군집에 대해 정보 기능은 N (0, 1)과 독립적으로 도출 된 다음 공분산을 추가하기 위해 각 군집 내에서 임의로 선형으로 결합됩니다. 그런 다음 클러스터는 하이퍼 큐브의 정점에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="8860e037fbe039fe78d5e3c48f8e1848feb12312" translate="yes" xml:space="preserve">
          <source>The number of initializations to perform. The best results are kept.</source>
          <target state="translated">수행 할 초기화 수입니다. 최상의 결과가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="51a26d62cae82295bdfa00f11021a221252f4d93" translate="yes" xml:space="preserve">
          <source>The number of initializations to perform. The result with the highest lower bound value on the likelihood is kept.</source>
          <target state="translated">수행 할 초기화 수입니다. 가능성에서 가장 낮은 하한값을 가진 결과가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="38ff309a985e30ab2e29b9afc192f79c8b9a0c6a" translate="yes" xml:space="preserve">
          <source>The number of integer to sample.</source>
          <target state="translated">샘플링 할 정수의 수입니다.</target>
        </trans-unit>
        <trans-unit id="a52a9529854ceea9a883fc2df829925e52c70f47" translate="yes" xml:space="preserve">
          <source>The number of iteration on data batches that has been performed before this call to partial_fit. This is optional: if no number is passed, the memory of the object is used.</source>
          <target state="translated">partial_fit을 호출하기 전에 수행 된 데이터 배치에 대한 반복 횟수입니다. 이것은 선택 사항입니다. 숫자가 전달되지 않으면 객체의 메모리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a3bc7b28196b3922c89415e845096f6cf78b8faf" translate="yes" xml:space="preserve">
          <source>The number of iterations corresponding to the best stress. Returned only if &lt;code&gt;return_n_iter&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">최고의 스트레스에 해당하는 반복 횟수입니다. &lt;code&gt;return_n_iter&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정된 경우에만 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="09e334ba47a4a0e3959de08638739eb9eaaab635" translate="yes" xml:space="preserve">
          <source>The number of iterations taken by lars_path to find the grid of alphas for each target.</source>
          <target state="translated">각 대상의 알파 격자를 찾기 위해 lars_path가 수행 한 반복 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="b1098a1922ae37c291de7345b0094c64c3a02834" translate="yes" xml:space="preserve">
          <source>The number of iterations taken by the coordinate descent optimizer to reach the specified tolerance for each alpha.</source>
          <target state="translated">좌표 하강 최적화가 각 알파에 대해 지정된 공차에 도달하기 위해 수행 한 반복 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="cb53eef7959113120386cfa7066166d0b269478f" translate="yes" xml:space="preserve">
          <source>The number of iterations taken by the coordinate descent optimizer to reach the specified tolerance for each alpha. (Is returned when &lt;code&gt;return_n_iter&lt;/code&gt; is set to True).</source>
          <target state="translated">좌표 하강 최적화가 각 알파에 대해 지정된 공차에 도달하기 위해 수행 한 반복 횟수입니다. &lt;code&gt;return_n_iter&lt;/code&gt; 가 True로 설정 되면 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="33de6e55bb60c2bc5ac457a31b105deefc3f996b" translate="yes" xml:space="preserve">
          <source>The number of iterations the solver has ran.</source>
          <target state="translated">솔버가 실행 한 반복 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="db80deec4964c14c90bbb2ba0d38dab8d92c99f4" translate="yes" xml:space="preserve">
          <source>The number of jobs to run in parallel for &lt;code&gt;fit&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 위해 병렬로 실행할 작업 수입니다 . &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="828e81cc3e32985aa18f25c0aa8cb224a18c0ff7" translate="yes" xml:space="preserve">
          <source>The number of jobs to run in parallel for both &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;predict&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 과 &lt;code&gt;predict&lt;/code&gt; 모두 에 대해 병렬로 실행할 작업 수입니다 . &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c43ba6eb14ab669b0479493b6caf6c135c124b5c" translate="yes" xml:space="preserve">
          <source>The number of jobs to run in parallel for both &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;predict&lt;/code&gt;. &lt;code&gt;None`&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 과 &lt;code&gt;predict&lt;/code&gt; 모두 에 대해 병렬로 실행할 작업 수입니다 . &lt;code&gt;None`&lt;/code&gt; 방법 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1c706846846b90bc0cd14952c05d5f24ee8d014f" translate="yes" xml:space="preserve">
          <source>The number of jobs to use for the computation. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">계산에 사용할 작업 수입니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6833984bce80d83c32632eedfcb38fdab54d1b8b" translate="yes" xml:space="preserve">
          <source>The number of jobs to use for the computation. If multiple initializations are used (&lt;code&gt;n_init&lt;/code&gt;), each run of the algorithm is computed in parallel.</source>
          <target state="translated">계산에 사용할 작업 수입니다. 여러 초기화가 사용되는 경우 ( &lt;code&gt;n_init&lt;/code&gt; ) 각 알고리즘 실행이 병렬로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="6691b8acedaea4810fafdb230140a5bee73c0f13" translate="yes" xml:space="preserve">
          <source>The number of jobs to use for the computation. It does each target variable in y in parallel. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">계산에 사용할 작업 수입니다. y의 각 대상 변수를 병렬로 수행합니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d27815195706836eb73a8c598c8129b01e46ca" translate="yes" xml:space="preserve">
          <source>The number of jobs to use for the computation. This will only provide speedup for n_targets &amp;gt; 1 and sufficient large problems. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">계산에 사용할 작업 수입니다. 이것은 n_targets&amp;gt; 1의 속도 향상과 충분한 큰 문제를 제공합니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aea0fe9213de8cdb23ff0f2fe182f38ade8bf1a8" translate="yes" xml:space="preserve">
          <source>The number of jobs to use for the computation. This works by breaking down the pairwise matrix into n_jobs even slices and computing them in parallel.</source>
          <target state="translated">계산에 사용할 작업 수입니다. 이것은 짝 행렬을 n_jobs 짝수 조각으로 나누고 병렬로 계산하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="355b7ccfb662137f73492d9f4ce45fbb16afbbbc" translate="yes" xml:space="preserve">
          <source>The number of jobs to use for the computation. This works by computing each of the n_init runs in parallel.</source>
          <target state="translated">계산에 사용할 작업 수입니다. 이것은 각 n_init 실행을 병렬로 계산하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a5a46de70d97dcbce1cd57e62c5d0b48ff30934b" translate="yes" xml:space="preserve">
          <source>The number of jobs to use in the E-step. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">E 단계에서 사용할 작업 수 &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="27ef8dc8b90e4adb5cf60c4b5861107cfc3fcd66" translate="yes" xml:space="preserve">
          <source>The number of leaves in the tree</source>
          <target state="translated">나무의 잎 수</target>
        </trans-unit>
        <trans-unit id="aa280d8fa86c4668dcae50e829dc6fe4b82c5c09" translate="yes" xml:space="preserve">
          <source>The number of longitudes (x) and latitudes (y) in the grid</source>
          <target state="translated">격자의 경도 (x) 및 위도 (y) 수</target>
        </trans-unit>
        <trans-unit id="c1079f8f5554d74d12065ae30d0d0d5ad6da869f" translate="yes" xml:space="preserve">
          <source>The number of mixture components.</source>
          <target state="translated">혼합물 성분의 수.</target>
        </trans-unit>
        <trans-unit id="1b5111fc1060a675cec3a1f3743c5b7235e4d74d" translate="yes" xml:space="preserve">
          <source>The number of mixture components. Depending on the data and the value of the &lt;code&gt;weight_concentration_prior&lt;/code&gt; the model can decide to not use all the components by setting some component &lt;code&gt;weights_&lt;/code&gt; to values very close to zero. The number of effective components is therefore smaller than n_components.</source>
          <target state="translated">혼합물 성분의 수. 데이터와 &lt;code&gt;weight_concentration_prior&lt;/code&gt; 의 값에 따라 모델은 일부 구성 요소 &lt;code&gt;weights_&lt;/code&gt; 를 0에 매우 가까운 값 으로 설정하여 모든 구성 요소를 사용하지 않도록 결정할 수 있습니다 . 따라서 유효 구성 요소의 수는 n_components보다 적습니다.</target>
        </trans-unit>
        <trans-unit id="add0998b97eff8ce13b181824a749694c3eae657" translate="yes" xml:space="preserve">
          <source>The number of nearest neighbors to return</source>
          <target state="translated">돌아올 가장 가까운 이웃의 수</target>
        </trans-unit>
        <trans-unit id="15fc684195ef8537dde92583b88b14e2ce9227a5" translate="yes" xml:space="preserve">
          <source>The number of neighbors considered (parameter n_neighbors) is typically set 1) greater than the minimum number of samples a cluster has to contain, so that other samples can be local outliers relative to this cluster, and 2) smaller than the maximum number of close by samples that can potentially be local outliers. In practice, such informations are generally not available, and taking n_neighbors=20 appears to work well in general.</source>
          <target state="translated">고려되는 이웃의 수 (매개 변수 n_neighbors)는 일반적으로 1) 클러스터에 포함해야하는 최소 샘플 수보다 더 크게 설정되므로 다른 샘플은이 클러스터에 대해 로컬 특이 치가 될 수 있고 2) 최대 닫기 수보다 작습니다. 잠재적으로 지역 특이 치일 수있는 샘플에 의해 실제로 이러한 정보는 일반적으로 사용할 수 없으며 n_neighbors = 20을 사용하면 일반적으로 잘 작동하는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="acccc5b01db683b034e704a8a9a779e161564526" translate="yes" xml:space="preserve">
          <source>The number of neighbors considered, (parameter n_neighbors) is typically set 1) greater than the minimum number of samples a cluster has to contain, so that other samples can be local outliers relative to this cluster, and 2) smaller than the maximum number of close by samples that can potentially be local outliers. In practice, such informations are generally not available, and taking n_neighbors=20 appears to work well in general.</source>
          <target state="translated">고려되는 이웃 수 (매개 변수 n_neighbors)는 일반적으로 1) 클러스터에 포함해야하는 최소 샘플 수보다 더 크게 설정되므로 다른 샘플은이 클러스터에 비해 로컬 특이 치가 될 수 있고 2) 최대 수보다 작습니다. 잠재적으로 지역 특이 치일 수있는 샘플로 닫습니다. 실제로 이러한 정보는 일반적으로 사용할 수 없으며 n_neighbors = 20을 사용하면 일반적으로 잘 작동하는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="877763fdbf37d108bc07acba2c3c7a43a6b1f5d0" translate="yes" xml:space="preserve">
          <source>The number of occurrences of each label in &lt;code&gt;y_true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y_true&lt;/code&gt; 에서 각 레이블의 발생 횟수입니다 .</target>
        </trans-unit>
        <trans-unit id="d77e127c483a951faddd4898060a91624b32c7e2" translate="yes" xml:space="preserve">
          <source>The number of outlying points matters, but also how much they are outliers.</source>
          <target state="translated">외곽 점의 수는 중요하지만, 또한 이상치입니다.</target>
        </trans-unit>
        <trans-unit id="28c74611a0fbfe9d7c9bc15166aba9285108f840" translate="yes" xml:space="preserve">
          <source>The number of outputs when &lt;code&gt;fit&lt;/code&gt; is performed.</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 를 수행 할 때의 출력 수입니다 .</target>
        </trans-unit>
        <trans-unit id="bb79176b795c17c39b28af054f09df09e008175b" translate="yes" xml:space="preserve">
          <source>The number of outputs.</source>
          <target state="translated">출력 수</target>
        </trans-unit>
        <trans-unit id="b09418506b739dbda708239c423400be69d20b7d" translate="yes" xml:space="preserve">
          <source>The number of parallel jobs to run for neighbors search.</source>
          <target state="translated">이웃 검색을 위해 실행할 병렬 작업 수입니다.</target>
        </trans-unit>
        <trans-unit id="f8c9b6b47de0b026f28768b5a0afa5c012cbf5fc" translate="yes" xml:space="preserve">
          <source>The number of parallel jobs to run for neighbors search. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">이웃 검색을 위해 실행할 병렬 작업 수입니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7704c4671581e69d735cac67f4c8350e13fe7ef2" translate="yes" xml:space="preserve">
          <source>The number of parallel jobs to run for neighbors search. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details. Affects only &lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.kneighbors&quot;&gt;&lt;code&gt;kneighbors&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sklearn.neighbors.kneighbors_graph#sklearn.neighbors.kneighbors_graph&quot;&gt;&lt;code&gt;kneighbors_graph&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이웃 검색을 위해 실행할 병렬 작업 수입니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오. &lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.kneighbors&quot;&gt; &lt;code&gt;kneighbors&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sklearn.neighbors.kneighbors_graph#sklearn.neighbors.kneighbors_graph&quot;&gt; &lt;code&gt;kneighbors_graph&lt;/code&gt; &lt;/a&gt; 메소드 에만 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="361059c7cf2c1088b100ce86f03251d9b9b3606a" translate="yes" xml:space="preserve">
          <source>The number of parallel jobs to run for neighbors search. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details. Doesn&amp;rsquo;t affect &lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이웃 검색을 위해 실행할 병렬 작업 수입니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오. &lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; 방법 에는 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0d88911bb44ab8ec6ef4a44ece33bbbd3a1ce8ce" translate="yes" xml:space="preserve">
          <source>The number of parallel jobs to run for neighbors search. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details. Doesn&amp;rsquo;t affect &lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이웃 검색을 위해 실행할 병렬 작업 수입니다. &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오. &lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; 방법 에는 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="92152098131975c56771bce4e909262b46d5eb7d" translate="yes" xml:space="preserve">
          <source>The number of parallel jobs to run. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="translated">실행할 병렬 작업 수 &lt;code&gt;None&lt;/code&gt; 수단 1에서 않는 &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt; &lt;code&gt;joblib.parallel_backend&lt;/code&gt; 의&lt;/a&gt; 콘텍스트. &lt;code&gt;-1&lt;/code&gt; 은 모든 프로세서를 사용한다는 의미입니다. 자세한 내용은 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;용어집&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="99143dd67a79337f4ad9e3dbea2cd1e515a938df" translate="yes" xml:space="preserve">
          <source>The number of passes over the training data (aka epochs). Defaults to None. Deprecated, will be removed in 0.21.</source>
          <target state="translated">훈련 데이터를 통과 한 횟수 (일명 에포크). 기본값은 없음입니다. 더 이상 사용되지 않으며 0.21에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="ec5cdfb884714451da411c4ff8cb1db87b4e7636" translate="yes" xml:space="preserve">
          <source>The number of redundant features. These features are generated as random linear combinations of the informative features.</source>
          <target state="translated">중복 기능의 수입니다. 이러한 기능은 정보 기능의 임의의 선형 조합으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="47b1c5caf88dbd07fabbf6968de5281c23c7d24f" translate="yes" xml:space="preserve">
          <source>The number of regression targets, i.e., the dimension of the y output vector associated with a sample. By default, the output is a scalar.</source>
          <target state="translated">회귀 목표의 수, 즉 샘플과 관련된 y 출력 벡터의 치수입니다. 기본적으로 출력은 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="338ec305a58ac58159822d262713a3e274e16037" translate="yes" xml:space="preserve">
          <source>The number of restarts of the optimizer for finding the kernel&amp;rsquo;s parameters which maximize the log-marginal likelihood. The first run of the optimizer is performed from the kernel&amp;rsquo;s initial parameters, the remaining ones (if any) from thetas sampled log-uniform randomly from the space of allowed theta-values. If greater than 0, all bounds must be finite. Note that n_restarts_optimizer == 0 implies that one run is performed.</source>
          <target state="translated">로그-마진 가능성을 최대화하는 커널의 매개 변수를 찾기 위해 옵티 마이저를 다시 시작한 횟수입니다. 옵티마이 저의 첫 번째 실행은 커널의 초기 매개 변수에서 수행되며, 나머지 (있는 경우)는 허용 된 세타-값의 공간에서 무작위로 로그-균일하게 샘플링됩니다. 0보다 크면 모든 경계는 유한해야합니다. n_restarts_optimizer == 0은 한 번의 실행이 수행됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a4b3a5a4d2704e96fc904a7b55b3f1c5b2c8d507" translate="yes" xml:space="preserve">
          <source>The number of restarts of the optimizer for finding the kernel&amp;rsquo;s parameters which maximize the log-marginal likelihood. The first run of the optimizer is performed from the kernel&amp;rsquo;s initial parameters, the remaining ones (if any) from thetas sampled log-uniform randomly from the space of allowed theta-values. If greater than 0, all bounds must be finite. Note that n_restarts_optimizer=0 implies that one run is performed.</source>
          <target state="translated">로그-마진 가능성을 최대화하는 커널의 매개 변수를 찾기 위해 옵티 마이저를 다시 시작한 횟수입니다. 옵티마이 저의 첫 번째 실행은 커널의 초기 매개 변수에서 수행되며, 나머지 (있는 경우)는 허용 된 세타-값의 공간에서 무작위로 로그-균일하게 샘플링됩니다. 0보다 크면 모든 경계는 유한해야합니다. n_restarts_optimizer = 0은 한 번의 실행이 수행됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8f64e7c256c29c0afec3f69dafbe77018e516c64" translate="yes" xml:space="preserve">
          <source>The number of row and column clusters in the checkerboard structure.</source>
          <target state="translated">바둑판 구조의 행 및 열 클러스터 수입니다.</target>
        </trans-unit>
        <trans-unit id="1d47b9ac186fe69411b80e5cb5c0bc35de2b1552" translate="yes" xml:space="preserve">
          <source>The number of row and column clusters.</source>
          <target state="translated">행 및 열 클러스터 수</target>
        </trans-unit>
        <trans-unit id="a93f4e954bb39f85a0cd6723eb5913eb20116e8e" translate="yes" xml:space="preserve">
          <source>The number of sample points on the S curve.</source>
          <target state="translated">S 곡선의 샘플 포인트 수입니다.</target>
        </trans-unit>
        <trans-unit id="e771006aa290a36177ef8a2fd15f85ed45a9f7ce" translate="yes" xml:space="preserve">
          <source>The number of samples (or total weight) in a neighborhood for a point to be considered as a core point. This includes the point itself.</source>
          <target state="translated">포인트가 핵심 포인트로 간주되는 이웃의 샘플 수 (또는 총 중량)입니다. 여기에는 포인트 자체가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d8023265c3023688c589a292c9dfac5ffedb5a44" translate="yes" xml:space="preserve">
          <source>The number of samples drawn from the Gaussian process</source>
          <target state="translated">가우스 프로세스에서 추출한 샘플 수</target>
        </trans-unit>
        <trans-unit id="1589955effed900fd5766b276491de7c2d2b9bf4" translate="yes" xml:space="preserve">
          <source>The number of samples processed by the estimator for each feature. If there are not missing samples, the &lt;code&gt;n_samples_seen&lt;/code&gt; will be an integer, otherwise it will be an array. Will be reset on new calls to fit, but increments across &lt;code&gt;partial_fit&lt;/code&gt; calls.</source>
          <target state="translated">각 기능에 대해 추정자가 처리 한 샘플 수입니다. 누락 된 샘플이 없으면 &lt;code&gt;n_samples_seen&lt;/code&gt; 은 정수가되고 그렇지 않으면 배열이됩니다. 새 통화에 맞게 재설정되지만 &lt;code&gt;partial_fit&lt;/code&gt; 통화에서 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="5282c1e1c469ae21abb6fc766981198bf00b68c4" translate="yes" xml:space="preserve">
          <source>The number of samples processed by the estimator. Will be reset on new calls to fit, but increments across &lt;code&gt;partial_fit&lt;/code&gt; calls.</source>
          <target state="translated">추정기에서 처리 한 샘플 수입니다. 새 통화에 맞게 재설정되지만 &lt;code&gt;partial_fit&lt;/code&gt; 통화에서 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="1793fd9997ff1f0552981d710a775a55fe6d48a0" translate="yes" xml:space="preserve">
          <source>The number of samples to draw from X to train each base estimator.</source>
          <target state="translated">각 기본 추정기를 훈련시키기 위해 X에서 추출 할 샘플 수입니다.</target>
        </trans-unit>
        <trans-unit id="bb3a932b7568c921848c0d1cfe6540980845aa8f" translate="yes" xml:space="preserve">
          <source>The number of samples to take in each batch.</source>
          <target state="translated">각 배치에서 채취 할 샘플 수입니다.</target>
        </trans-unit>
        <trans-unit id="45c4c8ec08a2e1d782bf77a47114ec6ebd4dca5e" translate="yes" xml:space="preserve">
          <source>The number of samples to use for each batch. Only used when calling &lt;code&gt;fit&lt;/code&gt;. If &lt;code&gt;batch_size&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, then &lt;code&gt;batch_size&lt;/code&gt; is inferred from the data and set to &lt;code&gt;5 * n_features&lt;/code&gt;, to provide a balance between approximation accuracy and memory consumption.</source>
          <target state="translated">각 배치에 사용할 샘플 수입니다. &lt;code&gt;fit&lt;/code&gt; 를 호출 할 때만 사용됩니다 . 경우 &lt;code&gt;batch_size&lt;/code&gt; 없는 &lt;code&gt;None&lt;/code&gt; 다음 &lt;code&gt;batch_size&lt;/code&gt; 행 데이터 세트로부터 유추 &lt;code&gt;5 * n_features&lt;/code&gt; 근사 정확도와 메모리 소비 사이의 균형을 제공하기 위해.</target>
        </trans-unit>
        <trans-unit id="cc9506bec678834c1e3b7d03354e1ff3a3f08ddc" translate="yes" xml:space="preserve">
          <source>The number of samples to use. If not given, all samples are used.</source>
          <target state="translated">사용할 샘플 수입니다. 제공하지 않으면 모든 샘플이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="06d71b7513bf6cfbd6babc125146f20e54cecd08" translate="yes" xml:space="preserve">
          <source>The number of samples.</source>
          <target state="translated">샘플 수</target>
        </trans-unit>
        <trans-unit id="8ed3bb3b4a6145be5f5af9755587163fa8bebbaa" translate="yes" xml:space="preserve">
          <source>The number of seconds contained in delta</source>
          <target state="translated">델타에 포함 된 초 수</target>
        </trans-unit>
        <trans-unit id="fd2b02981da97aea3b937c6f113a2aa5413af4a0" translate="yes" xml:space="preserve">
          <source>The number of selected features with cross-validation.</source>
          <target state="translated">교차 유효성 검사로 선택된 기능의 수입니다.</target>
        </trans-unit>
        <trans-unit id="f83194da71427b41aa36e9d801ef17814b93c795" translate="yes" xml:space="preserve">
          <source>The number of selected features.</source>
          <target state="translated">선택된 기능의 수입니다.</target>
        </trans-unit>
        <trans-unit id="ecf3b2d99c2ce29bc7f1b5f51d42517d75e68e85" translate="yes" xml:space="preserve">
          <source>The number of stages of the final model is available at the attribute &lt;code&gt;n_estimators_&lt;/code&gt;.</source>
          <target state="translated">최종 모델의 단계 수는 &lt;code&gt;n_estimators_&lt;/code&gt; 속성에서 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="40db2965d8f58e28ab3da3567d512db3201d5fa4" translate="yes" xml:space="preserve">
          <source>The number of times the grid is refined. Not used if explicit values of alphas are passed.</source>
          <target state="translated">그리드가 수정 된 횟수입니다. 명시적인 알파 값이 전달되면 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b5e4a652e0296cb387fe06bf82a965799e670b1" translate="yes" xml:space="preserve">
          <source>The number of trees in the forest.</source>
          <target state="translated">숲에있는 나무의 수.</target>
        </trans-unit>
        <trans-unit id="b609a37dc2d7220a5b1e0ac4ad20a19f7617a90e" translate="yes" xml:space="preserve">
          <source>The number of weak learners (i.e. regression trees) is controlled by the parameter &lt;code&gt;n_estimators&lt;/code&gt;; &lt;a href=&quot;#gradient-boosting-tree-size&quot;&gt;The size of each tree&lt;/a&gt; can be controlled either by setting the tree depth via &lt;code&gt;max_depth&lt;/code&gt; or by setting the number of leaf nodes via &lt;code&gt;max_leaf_nodes&lt;/code&gt;. The &lt;code&gt;learning_rate&lt;/code&gt; is a hyper-parameter in the range (0.0, 1.0] that controls overfitting via &lt;a href=&quot;#gradient-boosting-shrinkage&quot;&gt;shrinkage&lt;/a&gt; .</source>
          <target state="translated">약한 학습자 (즉, 회귀 트리)의 수는 &lt;code&gt;n_estimators&lt;/code&gt; 매개 변수에 의해 제어됩니다 . &lt;a href=&quot;#gradient-boosting-tree-size&quot;&gt;각 트리의 크기는 &lt;/a&gt; &lt;code&gt;max_depth&lt;/code&gt; 를 통해 트리 깊이를 설정하거나 &lt;code&gt;max_leaf_nodes&lt;/code&gt; 를 통해 리프 노드 수 를 설정하여 제어 할 수 있습니다 . &lt;code&gt;learning_rate&lt;/code&gt; 는 컨트롤로 overfitting되는 범위 (0.0, 1.0]의 하이퍼 파라미터 &lt;a href=&quot;#gradient-boosting-shrinkage&quot;&gt;수축&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68e68bbcb31faf3cd13be5ec90f20eecf860f6d7" translate="yes" xml:space="preserve">
          <source>The number of weak learners is controlled by the parameter &lt;code&gt;n_estimators&lt;/code&gt;. The &lt;code&gt;learning_rate&lt;/code&gt; parameter controls the contribution of the weak learners in the final combination. By default, weak learners are decision stumps. Different weak learners can be specified through the &lt;code&gt;base_estimator&lt;/code&gt; parameter. The main parameters to tune to obtain good results are &lt;code&gt;n_estimators&lt;/code&gt; and the complexity of the base estimators (e.g., its depth &lt;code&gt;max_depth&lt;/code&gt; or minimum required number of samples to consider a split &lt;code&gt;min_samples_split&lt;/code&gt;).</source>
          <target state="translated">약한 학습자의 수는 &lt;code&gt;n_estimators&lt;/code&gt; 매개 변수에 의해 제어됩니다 . &lt;code&gt;learning_rate&lt;/code&gt; 매개 변수는 최종 조합 약한 학습자의 기여를 제어합니다. 기본적으로 약한 학습자는 의사 결정 그루터기입니다. &lt;code&gt;base_estimator&lt;/code&gt; 매개 변수를 통해 다른 약한 학습자를 지정할 수 있습니다 . 좋은 결과를 얻기 위해 조정하는 주요 매개 변수는 &lt;code&gt;n_estimators&lt;/code&gt; 와 기본 추정기의 복잡성입니다 (예 : split &lt;code&gt;min_samples_split&lt;/code&gt; 을 고려하기위한 깊이 &lt;code&gt;max_depth&lt;/code&gt; 또는 최소 필수 샘플 수 ).</target>
        </trans-unit>
        <trans-unit id="a6d1422bf72f5a61faa255a9a1207169e4a394c6" translate="yes" xml:space="preserve">
          <source>The object solves the same problem as the LassoCV object. However, unlike the LassoCV, it find the relevant alphas values by itself. In general, because of this property, it will be more stable. However, it is more fragile to heavily multicollinear datasets.</source>
          <target state="translated">이 객체는 LassoCV 객체와 동일한 문제를 해결합니다. 그러나 LassoCV와 달리 관련 알파 값 자체를 찾습니다. 일반적 으로이 속성으로 인해 더 안정적입니다. 그러나 다중 공선 데이터 세트를 사용하는 것은 더 취약합니다.</target>
        </trans-unit>
        <trans-unit id="909e016dde1f323cbfe3daf2401dd2bee2829e0c" translate="yes" xml:space="preserve">
          <source>The object to use to fit the data.</source>
          <target state="translated">데이터를 맞추는 데 사용할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d5c8a5f63b0e142ed66ba0f0aa5318c460719fdf" translate="yes" xml:space="preserve">
          <source>The object&amp;rsquo;s &lt;code&gt;best_score_&lt;/code&gt; and &lt;code&gt;best_params_&lt;/code&gt; attributes store the best mean score and the parameters setting corresponding to that score:</source>
          <target state="translated">객체의 &lt;code&gt;best_score_&lt;/code&gt; 및 &lt;code&gt;best_params_&lt;/code&gt; 속성은 최고 평균 점수 및 해당 점수에 해당하는 매개 변수 설정을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="512dd720938772db73af76fb4221b6596459608c" translate="yes" xml:space="preserve">
          <source>The objective function is minimized with an alternating minimization of W and H.</source>
          <target state="translated">목표 함수는 W와 H를 번갈아 최소화하면서 최소화됩니다.</target>
        </trans-unit>
        <trans-unit id="a139874cf1d9e2c13462d6567d8563d658f0907b" translate="yes" xml:space="preserve">
          <source>The objective function is:</source>
          <target state="translated">목적 함수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bf56422fecab64934517c1fdfbcaed66ab27df08" translate="yes" xml:space="preserve">
          <source>The objective function to minimize is in this case</source>
          <target state="translated">이 경우 최소화 할 목적 함수는</target>
        </trans-unit>
        <trans-unit id="e546a5e9110cb4077ff5ab03d80b93cb6429070c" translate="yes" xml:space="preserve">
          <source>The observations are assumed to be caused by a linear transformation of lower dimensional latent factors and added Gaussian noise. Without loss of generality the factors are distributed according to a Gaussian with zero mean and unit covariance. The noise is also zero mean and has an arbitrary diagonal covariance matrix.</source>
          <target state="translated">관측은 더 낮은 차원의 잠재 요인과 가우스 잡음의 선형 변환으로 인해 발생한다고 가정합니다. 일반성의 손실없이 요인은 평균 및 단위 공분산이 0 인 가우시안에 따라 분포됩니다. 잡음도 제로 평균이며 임의의 대각선 공분산 행렬을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="f8b5be5464139b25f15f97e4d9d483501d55af35" translate="yes" xml:space="preserve">
          <source>The observations to cluster. It must be noted that the data will be converted to C ordering, which will cause a memory copy if the given data is not C-contiguous.</source>
          <target state="translated">군집 관측. 데이터가 C 순서로 변환되므로 주어진 데이터가 C 연속적이지 않은 경우 메모리 복사가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5af240b8e218ff237309779b56f83d5e52d1af7b" translate="yes" xml:space="preserve">
          <source>The observations, the Mahalanobis distances of the which we compute. Observations are assumed to be drawn from the same distribution than the data used in fit.</source>
          <target state="translated">관측치, 우리가 계산 한 Mahalanobis 거리. 관측치는 적합하게 사용 된 데이터와 동일한 분포에서 도출 된 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="eb71736c8c9acd5b1d75a4e7144f466f3b859a53" translate="yes" xml:space="preserve">
          <source>The obtained score is always strictly greater than 0 and the best value is 1.</source>
          <target state="translated">획득 한 점수는 항상 0보다 크며 최상의 값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="b7dea734e0307eec19c3b5341e6f81839af6082a" translate="yes" xml:space="preserve">
          <source>The one-vs-the-rest meta-classifier also implements a &lt;code&gt;predict_proba&lt;/code&gt; method, so long as such a method is implemented by the base classifier. This method returns probabilities of class membership in both the single label and multilabel case. Note that in the multilabel case, probabilities are the marginal probability that a given sample falls in the given class. As such, in the multilabel case the sum of these probabilities over all possible labels for a given sample &lt;em&gt;will not&lt;/em&gt; sum to unity, as they do in the single label case.</source>
          <target state="translated">one-vs-the-rest 메타 분류기는 이러한 방법이 기본 분류기에 의해 구현되는 한 &lt;code&gt;predict_proba&lt;/code&gt; 방법 도 구현합니다 . 이 메소드는 단일 레이블 및 다중 레이블 케이스 모두에서 클래스 멤버쉽의 확률을 리턴합니다. 다중 라벨의 경우 확률은 주어진 샘플이 주어진 클래스에 속하는 한계 확률입니다. 따라서, 다중 라벨 사례에서 주어진 표본에 대해 가능한 모든 라벨에 대한 이러한 확률의 합은 단일 라벨 경우에서와 같이 단일 합산 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f36ee9570dbac199195d25256879fa51a751bbaa" translate="yes" xml:space="preserve">
          <source>The opposite LOF of the training samples. The higher, the more normal. Inliers tend to have a LOF score close to 1 (&lt;code&gt;negative_outlier_factor_&lt;/code&gt; close to -1), while outliers tend to have a larger LOF score.</source>
          <target state="translated">훈련 샘플의 반대 LOF. 높을수록 더 정상입니다. 인 라이어의 LOF 점수는 1에 가까우며 ( &lt;code&gt;negative_outlier_factor_&lt;/code&gt; 는 -1에 가까움), 이상 치는 LOF 점수 가 더 큰 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="df3e454f1090a47509e70dbea510891595829b28" translate="yes" xml:space="preserve">
          <source>The opposite of the Local Outlier Factor of each input samples. The lower, the more abnormal.</source>
          <target state="translated">각 입력 샘플의 로컬 특이 치 계수의 반대입니다. 낮을수록 비정상적입니다.</target>
        </trans-unit>
        <trans-unit id="4312ae849a138f7db034f6fd7f5a1ea0b817b171" translate="yes" xml:space="preserve">
          <source>The optimal algorithm for a given dataset is a complicated choice, and depends on a number of factors:</source>
          <target state="translated">주어진 데이터 세트에 대한 최적의 알고리즘은 복잡한 선택이며 여러 요인에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e994897b226c2495f8cea3f1e46f2c7029c61954" translate="yes" xml:space="preserve">
          <source>The optimal lambda parameter for minimizing skewness is estimated on each feature independently using maximum likelihood.</source>
          <target state="translated">왜도를 최소화하기위한 최적의 람다 매개 변수는 최대 가능성을 사용하여 각 기능에서 독립적으로 추정됩니다.</target>
        </trans-unit>
        <trans-unit id="033713ef73311880bab79fd88513749d67a56824" translate="yes" xml:space="preserve">
          <source>The optimization objective for Lasso is:</source>
          <target state="translated">Lasso의 최적화 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="64214421bf615c105d2891f743437d06253a6ade" translate="yes" xml:space="preserve">
          <source>The optimization objective for MultiTaskElasticNet is:</source>
          <target state="translated">MultiTaskElasticNet의 최적화 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f43132c3f7097ed8020d37840c051e421e41e300" translate="yes" xml:space="preserve">
          <source>The optimization objective for MultiTaskLasso is:</source>
          <target state="translated">MultiTaskLasso의 최적화 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3bee4ea6ed3cad366ecf4d67dfc05469de43ad46" translate="yes" xml:space="preserve">
          <source>The optimization objective for the case method=&amp;rsquo;lasso&amp;rsquo; is:</source>
          <target state="translated">case method = 'lasso'의 최적화 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d89fe15a9f2092d4f8a7ef569d775bf0279d26d" translate="yes" xml:space="preserve">
          <source>The optional extra argument will be appended to the deprecation message and the docstring. Note: to use this with the default value for extra, put in an empty of parentheses:</source>
          <target state="translated">선택적인 추가 인수가 지원 중단 메시지 및 문서 문자열에 추가됩니다. 참고 : 엑스트라를 기본값으로 사용하려면 빈 괄호를 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="0c86ba504c90ec1412c0ccc3d7f0b2f074294dc1" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;whiten=True&lt;/code&gt; makes it possible to project the data onto the singular space while scaling each component to unit variance. This is often useful if the models down-stream make strong assumptions on the isotropy of the signal: this is for example the case for Support Vector Machines with the RBF kernel and the K-Means clustering algorithm.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;whiten=True&lt;/code&gt; 를 사용하면 각 성분을 단위 분산으로 스케일링하면서 단일 공간에 데이터를 투영 할 수 있습니다. 이는 다운 스트림 모델이 신호의 등방성에 대해 강력한 가정을하는 경우에 유용합니다. 예를 들어 RBF 커널 및 K- 평균 클러스터링 알고리즘이있는 Support Vector Machine의 경우입니다.</target>
        </trans-unit>
        <trans-unit id="846ba284e005e0c78a1fd443a812172705bbc8f3" translate="yes" xml:space="preserve">
          <source>The order of labels in the classifier chain.</source>
          <target state="translated">분류기 체인의 레이블 순서입니다.</target>
        </trans-unit>
        <trans-unit id="7b082acdda498538bd71b7e32b0b230c2144c284" translate="yes" xml:space="preserve">
          <source>The order of the chain can be explicitly set by providing a list of integers. For example, for a chain of length 5.:</source>
          <target state="translated">정수 목록을 제공하여 체인의 순서를 명시 적으로 설정할 수 있습니다. 예를 들어 길이가 5 인 체인의 경우 :</target>
        </trans-unit>
        <trans-unit id="f9d11a930ecaf4c38c05b12592342da86a8c77ff" translate="yes" xml:space="preserve">
          <source>The order of the columns in the transformed feature matrix follows the order of how the columns are specified in the &lt;code&gt;transformers&lt;/code&gt; list. Columns of the original feature matrix that are not specified are dropped from the resulting transformed feature matrix, unless specified in the &lt;code&gt;passthrough&lt;/code&gt; keyword. Those columns specified with &lt;code&gt;passthrough&lt;/code&gt; are added at the right to the output of the transformers.</source>
          <target state="translated">변환 된 피처 매트릭스의 열 순서는 &lt;code&gt;transformers&lt;/code&gt; 목록 에서 열이 지정되는 순서를 따릅니다 . &lt;code&gt;passthrough&lt;/code&gt; 키워드에 지정되지 않은 경우, 지정되지 않은 원래 기능 행렬의 열은 변환 된 결과 기능 행렬에서 삭제됩니다 . &lt;code&gt;passthrough&lt;/code&gt; 로 지정된 열 은 변압기의 출력 오른쪽에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="0b5c0a29228cf2f99af9ecdff2f5b2a0dc08ed2d" translate="yes" xml:space="preserve">
          <source>The original data</source>
          <target state="translated">원본 데이터</target>
        </trans-unit>
        <trans-unit id="77422b337aacebf704cab947c2765e7ef78426db" translate="yes" xml:space="preserve">
          <source>The original dataset consisted of 92 x 112, while the version available here consists of 64x64 images.</source>
          <target state="translated">원래 데이터 세트는 92 x 112로 구성되었으며 여기서 사용 가능한 버전은 64x64 이미지로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="11407c8a67a7b9eefbd2b65794ca1ecbfa48a97d" translate="yes" xml:space="preserve">
          <source>The original formulation of the hashing trick by Weinberger et al. used two separate hash functions \(h\) and \(\xi\) to determine the column index and sign of a feature, respectively. The present implementation works under the assumption that the sign bit of MurmurHash3 is independent of its other bits.</source>
          <target state="translated">Weinberger 등의 해싱 트릭의 원래 공식. 피처의 열 인덱스와 부호를 각각 결정하기 위해 두 개의 개별 해시 함수 \ (h \)와 \ (\ xi \)를 사용했습니다. 본 구현은 MurmurHash3의 부호 비트가 다른 비트와 독립적이라는 가정하에 작동한다.</target>
        </trans-unit>
        <trans-unit id="8eec938f1b6ddec4315f3fac08b8dc8e8e67d5d5" translate="yes" xml:space="preserve">
          <source>The original images are 250 x 250 pixels, but the default slice and resize arguments reduce them to 62 x 47.</source>
          <target state="translated">원본 이미지는 250 x 250 픽셀이지만 기본 슬라이스 및 크기 조정 인수는 62 x 47로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="a555f40ab758aba55bcba7bb9ac36af67b065d6a" translate="yes" xml:space="preserve">
          <source>The other kernels</source>
          <target state="translated">다른 커널</target>
        </trans-unit>
        <trans-unit id="5978e5bbc3d0aa56b4c3321d1d9ccbd8b149a1a9" translate="yes" xml:space="preserve">
          <source>The outer product of the row and column label vectors shows a representation of the checkerboard structure.</source>
          <target state="translated">행 및 열 레이블 벡터의 외부 곱은 바둑판 구조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4e7d9f946f101134a65fd7d38a82dce953516bd7" translate="yes" xml:space="preserve">
          <source>The output &lt;code&gt;y&lt;/code&gt; is created according to the formula:</source>
          <target state="translated">출력 &lt;code&gt;y&lt;/code&gt; 는 다음 공식에 따라 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="7348f35a4e7d1a3450461b231ee28ef95517ba57" translate="yes" xml:space="preserve">
          <source>The output is generated by applying a (potentially biased) random linear regression model with &lt;code&gt;n_informative&lt;/code&gt; nonzero regressors to the previously generated input and some gaussian centered noise with some adjustable scale.</source>
          <target state="translated">&lt;code&gt;n_informative&lt;/code&gt; 를 사용 하여 (잠재적으로 바이어스 된) 임의 선형 회귀 모델을 적용하여 출력이 생성됩니다. nonzero 이전에 생성 된 입력과 일부 가우스 중심 노이즈에 조정 가능한 스케일 .</target>
        </trans-unit>
        <trans-unit id="0c62eccd54e33fb989ef31175162303c11637d7c" translate="yes" xml:space="preserve">
          <source>The output of a singular value decomposition is only unique up to a permutation of the signs of the singular vectors. If &lt;code&gt;flip_sign&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, the sign ambiguity is resolved by making the largest loadings for each component in the left singular vectors positive.</source>
          <target state="translated">특이 값 분해의 출력은 특이 벡터의 부호의 순열까지만 유일합니다. 경우 &lt;code&gt;flip_sign&lt;/code&gt; 가 설정되어 &lt;code&gt;True&lt;/code&gt; , 부호의 모호성은 왼쪽 단수 벡터 양의 각 구성 요소에 대한 가장 큰 부하를함으로써 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="ab5b2ab18fdef999b51de35c5e9c33e7d3ac7cc7" translate="yes" xml:space="preserve">
          <source>The output of the 3 models are combined in a 2D graph where nodes represents the stocks and edges the:</source>
          <target state="translated">3 개 모델의 출력은 2D 그래프로 결합되며 여기서 노드는 주식을 나타내고 가장자리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c9b52f3c910ded5afcb915db265ed0583f446660" translate="yes" xml:space="preserve">
          <source>The output of transform is sometimes referred to as the 1-of-K coding scheme.</source>
          <target state="translated">변환의 출력은 때때로 1-K 코딩 방식으로 지칭된다.</target>
        </trans-unit>
        <trans-unit id="f172299244e465e38a0859a0349f26df08f75701" translate="yes" xml:space="preserve">
          <source>The output of transform is sometimes referred to by some authors as the 1-of-K coding scheme.</source>
          <target state="translated">변환의 출력은 때때로 일부 작성자에 의해 1-K 코딩 방식으로 지칭됩니다.</target>
        </trans-unit>
        <trans-unit id="58983c4b722f7fa5c156e992e47b9ca634d33156" translate="yes" xml:space="preserve">
          <source>The output values.</source>
          <target state="translated">출력값</target>
        </trans-unit>
        <trans-unit id="f348d2a86dcf3bc20a82250a4d5068aa50c67aad" translate="yes" xml:space="preserve">
          <source>The overall complexity of Isomap is \(O[D \log(k) N \log(N)] + O[N^2(k + \log(N))] + O[d N^2]\).</source>
          <target state="translated">Isomap의 전체 복잡도는 \ (O [D \ log (k) N \ log (N)] + O [N ^ 2 (k + \ log (N))] + O [d N ^ 2] \)입니다.</target>
        </trans-unit>
        <trans-unit id="9cec4ae56de9cf1cd9cf2f8a0ff2e2e24864f054" translate="yes" xml:space="preserve">
          <source>The overall complexity of MLLE is \(O[D \log(k) N \log(N)] + O[D N k^3] + O[N (k-D) k^2] + O[d N^2]\).</source>
          <target state="translated">MLLE의 전체 복잡도는 \ (O [D \ log (k) N \ log (N)] + O [DN k ^ 3] + O [N (kD) k ^ 2] + O [d N ^ 2]입니다. \).</target>
        </trans-unit>
        <trans-unit id="7fa546000c6a79308906d0c040bf81047f6b149e" translate="yes" xml:space="preserve">
          <source>The overall complexity of spectral embedding is \(O[D \log(k) N \log(N)] + O[D N k^3] + O[d N^2]\).</source>
          <target state="translated">스펙트럼 임베딩의 전체적인 복잡성은 \ (O [D \ log (k) N \ log (N)] + O [DN k ^ 3] + O [d N ^ 2] \)입니다.</target>
        </trans-unit>
        <trans-unit id="808f28c633edaf7537ca8395b6bc52f0086ed496" translate="yes" xml:space="preserve">
          <source>The overall complexity of standard HLLE is \(O[D \log(k) N \log(N)] + O[D N k^3] + O[N d^6] + O[d N^2]\).</source>
          <target state="translated">표준 HLLE의 전체 복잡성은 \ (O [D \ log (k) N \ log (N)] + O [DN k ^ 3] + O [N d ^ 6] + O [d N ^ 2] \)입니다. .</target>
        </trans-unit>
        <trans-unit id="63617858af3d41882021a1ab37e78e76cce39983" translate="yes" xml:space="preserve">
          <source>The overall complexity of standard LLE is \(O[D \log(k) N \log(N)] + O[D N k^3] + O[d N^2]\).</source>
          <target state="translated">표준 LLE의 전반적인 복잡성은 \ (O [D \ log (k) N \ log (N)] + O [DN k ^ 3] + O [d N ^ 2] \)입니다.</target>
        </trans-unit>
        <trans-unit id="b88c53c3806a592f7e00e19aef010a599cfaf4dc" translate="yes" xml:space="preserve">
          <source>The overall complexity of standard LTSA is \(O[D \log(k) N \log(N)] + O[D N k^3] + O[k^2 d] + O[d N^2]\).</source>
          <target state="translated">표준 LTSA의 전체 복잡도는 \ (O [D \ log (k) N \ log (N)] + O [DN k ^ 3] + O [k ^ 2 d] + O [d N ^ 2] \)입니다. .</target>
        </trans-unit>
        <trans-unit id="fc12a97c8a559f9672542a072947ef2eae0adcac" translate="yes" xml:space="preserve">
          <source>The p-value, which approximates the probability that the score would be obtained by chance. This is calculated as:</source>
          <target state="translated">점수가 우연히 획득 될 확률과 비슷한 p- 값입니다. 이것은 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="7f9aaf22278cea2b541fbd8b88b09de54aad3e99" translate="yes" xml:space="preserve">
          <source>The parallel version of K-Means is broken on OS X when &lt;code&gt;numpy&lt;/code&gt; uses the &lt;code&gt;Accelerate&lt;/code&gt; Framework. This is expected behavior: &lt;code&gt;Accelerate&lt;/code&gt; can be called after a fork but you need to execv the subprocess with the Python binary (which multiprocessing does not do under posix).</source>
          <target state="translated">&lt;code&gt;numpy&lt;/code&gt; 가 &lt;code&gt;Accelerate&lt;/code&gt; Framework를 사용하면 OS X에서 병렬 버전의 K-Means가 손상됩니다 . 이것은 예상 된 동작입니다. 포크 후에 &lt;code&gt;Accelerate&lt;/code&gt; 를 호출 할 수 있지만 다중 프로세스는 posix에서는 수행하지 않는 Python 바이너리로 하위 프로세스를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="26cab4ba2ce5f7f1aa5cff1bedcda88264af63ea" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;learning_rate&lt;/code&gt; strongly interacts with the parameter &lt;code&gt;n_estimators&lt;/code&gt;, the number of weak learners to fit. Smaller values of &lt;code&gt;learning_rate&lt;/code&gt; require larger numbers of weak learners to maintain a constant training error. Empirical evidence suggests that small values of &lt;code&gt;learning_rate&lt;/code&gt; favor better test error. &lt;a href=&quot;#htf2009&quot; id=&quot;id17&quot;&gt;[HTF2009]&lt;/a&gt; recommend to set the learning rate to a small constant (e.g. &lt;code&gt;learning_rate &amp;lt;= 0.1&lt;/code&gt;) and choose &lt;code&gt;n_estimators&lt;/code&gt; by early stopping. For a more detailed discussion of the interaction between &lt;code&gt;learning_rate&lt;/code&gt; and &lt;code&gt;n_estimators&lt;/code&gt; see &lt;a href=&quot;#r2007&quot; id=&quot;id18&quot;&gt;[R2007]&lt;/a&gt;.</source>
          <target state="translated">파라미터 &lt;code&gt;learning_rate&lt;/code&gt; 이 강하게 파라미터와 상호 작용 &lt;code&gt;n_estimators&lt;/code&gt; 약한 학습자의 수에 맞게. &lt;code&gt;learning_rate&lt;/code&gt; 값이 작을수록 지속적인 학습 오류를 유지하기 위해 많은 수의 약한 학습자가 필요합니다. 경험적 증거는 작은 값의 &lt;code&gt;learning_rate&lt;/code&gt; 가 더 나은 테스트 오류를 ​​선호 한다는 것을 시사합니다 . &lt;a href=&quot;#htf2009&quot; id=&quot;id17&quot;&gt;[HTF2009]&lt;/a&gt; 는 학습률을 작은 상수 (예 : &lt;code&gt;learning_rate &amp;lt;= 0.1&lt;/code&gt; )로 설정하고 조기 중지로 &lt;code&gt;n_estimators&lt;/code&gt; 를 선택할 것을 권장 합니다. &lt;code&gt;learning_rate&lt;/code&gt; 와 &lt;code&gt;n_estimators&lt;/code&gt; 간의 상호 작용에 대한 자세한 내용 은 &lt;a href=&quot;#r2007&quot; id=&quot;id18&quot;&gt;[R2007]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e6ab9c66156a9d2feae55ed2060a2c6f7d6986c" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;memory&lt;/code&gt; is needed in order to cache the transformers. &lt;code&gt;memory&lt;/code&gt; can be either a string containing the directory where to cache the transformers or a &lt;a href=&quot;https://pythonhosted.org/joblib/memory.html&quot;&gt;joblib.Memory&lt;/a&gt; object:</source>
          <target state="translated">변압기를 캐싱하려면 파라미터 &lt;code&gt;memory&lt;/code&gt; 가 필요합니다. &lt;code&gt;memory&lt;/code&gt; 는 변환기를 캐시 할 디렉토리가 포함 된 문자열이거나 &lt;a href=&quot;https://pythonhosted.org/joblib/memory.html&quot;&gt;joblib.Memory&lt;/a&gt; 오브젝트 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a19846a3c7376460662acabedd23579aba492f87" translate="yes" xml:space="preserve">
          <source>The parameter \(\nu\) is also called the &lt;strong&gt;learning rate&lt;/strong&gt; because it scales the step length the gradient descent procedure; it can be set via the &lt;code&gt;learning_rate&lt;/code&gt; parameter.</source>
          <target state="translated">\ (\ nu \) 매개 변수 는 기울기 하강 절차의 단계 길이를 조정하므로 &lt;strong&gt;학습 속도&lt;/strong&gt; 라고도합니다 . &lt;code&gt;learning_rate&lt;/code&gt; 매개 변수 를 통해 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="76b14eb14f0e0be16176b9f0182e58f523e33b2d" translate="yes" xml:space="preserve">
          <source>The parameter epsilon controls the number of samples that should be classified as outliers. The smaller the epsilon, the more robust it is to outliers.</source>
          <target state="translated">매개 변수 epsilon은 특이 값으로 분류되어야하는 샘플 수를 제어합니다. 입실론이 작을수록 특이 치에 대해 더 견고합니다.</target>
        </trans-unit>
        <trans-unit id="33a23a95b6f6e50b11cce3982dee22dc3afbeaef" translate="yes" xml:space="preserve">
          <source>The parameter grid to explore, as a dictionary mapping estimator parameters to sequences of allowed values.</source>
          <target state="translated">사전에 추정기 매개 변수를 허용 된 값의 시퀀스에 맵핑하는 탐색 할 매개 변수 그리드입니다.</target>
        </trans-unit>
        <trans-unit id="95ad4f92539995843fbdd8a8c8263fdd9652cae5" translate="yes" xml:space="preserve">
          <source>The parameter l1_ratio corresponds to alpha in the glmnet R package while alpha corresponds to the lambda parameter in glmnet. More specifically, the optimization objective is:</source>
          <target state="translated">l1_ratio 매개 변수는 glmnet R 패키지의 알파에 해당하고 alpha는 glmnet의 람다 매개 변수에 해당합니다. 보다 구체적으로 최적화 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="444f64a3bffea2bee3d3973fdc03c3dbbbbf54d9" translate="yes" xml:space="preserve">
          <source>The parameter l1_ratio corresponds to alpha in the glmnet R package while alpha corresponds to the lambda parameter in glmnet. Specifically, l1_ratio = 1 is the lasso penalty. Currently, l1_ratio &amp;lt;= 0.01 is not reliable, unless you supply your own sequence of alpha.</source>
          <target state="translated">l1_ratio 매개 변수는 glmnet R 패키지의 알파에 해당하고 alpha는 glmnet의 람다 매개 변수에 해당합니다. 특히 l1_ratio = 1은 올가미 페널티입니다. 현재 l1_ratio &amp;lt;= 0.01은 고유 한 알파 시퀀스를 제공하지 않으면 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3d75707f4ee017e7f35982b539c7d0e6825a3d30" translate="yes" xml:space="preserve">
          <source>The parameter nu controlling the smoothness of the learned function. The smaller nu, the less smooth the approximated function is. For nu=inf, the kernel becomes equivalent to the RBF kernel and for nu=0.5 to the absolute exponential kernel. Important intermediate values are nu=1.5 (once differentiable functions) and nu=2.5 (twice differentiable functions). Note that values of nu not in [0.5, 1.5, 2.5, inf] incur a considerably higher computational cost (appr. 10 times higher) since they require to evaluate the modified Bessel function. Furthermore, in contrast to l, nu is kept fixed to its initial value and not optimized.</source>
          <target state="translated">학습 된 기능의 평활도를 제어하는 ​​매개 변수 nu nu가 작을수록 근사 함수의 부드러움이 줄어 듭니다. nu = inf의 경우 커널은 RBF 커널과 같고 nu = 0.5의 경우 절대 지수 커널과 같습니다. 중요한 중간 값은 nu = 1.5 (한 번 차별화 함수)와 nu = 2.5 (두 번 차별화 함수)입니다. [0.5, 1.5, 2.5, inf]에없는 nu 값은 수정 된 Bessel 함수를 평가해야하기 때문에 계산 비용이 상당히 높습니다 (약 10 배 더 높음). 또한, l과 달리, nu는 초기 값으로 고정되어 있고 최적화되지는 않았다.</target>
        </trans-unit>
        <trans-unit id="fa3c09390eafe53f0b58881f0d7db646d5796fe2" translate="yes" xml:space="preserve">
          <source>The parameters \(\sigma_y\) and \(\mu_y\) are estimated using maximum likelihood.</source>
          <target state="translated">매개 변수 \ (\ sigma_y \) 및 \ (\ mu_y \)는 최대 우도를 사용하여 추정됩니다.</target>
        </trans-unit>
        <trans-unit id="d8334dfb20de589f58500a915aef89a4fab7377d" translate="yes" xml:space="preserve">
          <source>The parameters \(\theta_y\) is estimated by a smoothed version of maximum likelihood, i.e. relative frequency counting:</source>
          <target state="translated">매개 변수 \ (\ theta_y \)는 최대 가능성의 평활화 된 버전, 즉 상대 주파수 계산에 의해 추정됩니다.</target>
        </trans-unit>
        <trans-unit id="162d2ed9f70c881f87134a87c0c741cb23832c22" translate="yes" xml:space="preserve">
          <source>The parameters implementation of the &lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt; class proposes two types of prior for the weights distribution: a finite mixture model with Dirichlet distribution and an infinite mixture model with the Dirichlet Process. In practice Dirichlet Process inference algorithm is approximated and uses a truncated distribution with a fixed maximum number of components (called the Stick-breaking representation). The number of components actually used almost always depends on the data.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt; &lt;code&gt;BayesianGaussianMixture&lt;/code&gt; &lt;/a&gt; 클래스 의 매개 변수 구현은 가중치 분포에 대한 두 가지 유형의 사전을 제안합니다 : Dirichlet 분포를 갖는 유한 혼합물 모델 및 Dirichlet Process를 사용한 무한 혼합 모델. 실제로 Dirichlet Process 추론 알고리즘은 근사치이며 고정 된 최대 개수의 구성 요소 (스틱 분리 표현이라고 함)와 함께 잘린 분포를 사용합니다. 실제로 사용되는 구성 요소의 수는 거의 항상 데이터에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="957eda9a79d6f1f87ea7b634983b57c94627c96b" translate="yes" xml:space="preserve">
          <source>The parameters of the estimator used to apply these methods are optimized by cross-validated grid-search over a parameter grid.</source>
          <target state="translated">이러한 방법을 적용하는 데 사용되는 추정기의 모수는 모수 모눈에서 교차 검증 된 그리드 검색에 의해 최적화됩니다.</target>
        </trans-unit>
        <trans-unit id="6f20d8d61d83d6376fa9caf869f91f4640e0cc5b" translate="yes" xml:space="preserve">
          <source>The parameters of the estimator used to apply these methods are optimized by cross-validated search over parameter settings.</source>
          <target state="translated">이러한 방법을 적용하는 데 사용되는 추정기의 매개 변수는 교차 검증 된 검색 매개 변수 설정에 의해 최적화됩니다.</target>
        </trans-unit>
        <trans-unit id="1d4a34fa151b21edbbd9fa634476deabc1cb44cf" translate="yes" xml:space="preserve">
          <source>The parameters of the power transformation for the selected features.</source>
          <target state="translated">선택한 기능에 대한 전력 변환 매개 변수.</target>
        </trans-unit>
        <trans-unit id="62f294aa209942b08fddf4e74d29c13f78a9e67d" translate="yes" xml:space="preserve">
          <source>The parameters selected are those that maximize the score of the held-out data, according to the scoring parameter.</source>
          <target state="translated">선택된 매개 변수는 스코어링 매개 변수에 따라 보류 된 데이터의 점수를 최대화하는 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="b6d7555a36c15ae2ffe9751024a0eebcf2421d57" translate="yes" xml:space="preserve">
          <source>The parameters selected are those that maximize the score of the left out data, unless an explicit score is passed in which case it is used instead.</source>
          <target state="translated">선택된 매개 변수는 명시 적 점수가 전달되지 않는 경우 제외 된 데이터의 점수를 최대화하는 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="34d594dbc00b197d06cf788b61a5dfe36db335bf" translate="yes" xml:space="preserve">
          <source>The parameters that have been evaluated.</source>
          <target state="translated">평가 된 매개 변수.</target>
        </trans-unit>
        <trans-unit id="f139c5090bf57fe74c58422c7266093265927a67" translate="yes" xml:space="preserve">
          <source>The parent of each node. Only returned when a connectivity matrix is specified, elsewhere &amp;lsquo;None&amp;rsquo; is returned.</source>
          <target state="translated">각 노드의 부모 연결 매트릭스가 지정된 경우에만 '없음'이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="89bfd729c83f5c14808628511ada19e6e2b220e5" translate="yes" xml:space="preserve">
          <source>The partial dependence function evaluated on the &lt;code&gt;grid&lt;/code&gt;. For regression and binary classification &lt;code&gt;n_classes==1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;grid&lt;/code&gt; 에서 부분 의존성 함수가 평가되었습니다 . 회귀 및 이진 분류의 경우 &lt;code&gt;n_classes==1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="053dbcb3edc2e230ef9a4eff0313b65bae4689ca" translate="yes" xml:space="preserve">
          <source>The passive-aggressive algorithms are a family of algorithms for large-scale learning. They are similar to the Perceptron in that they do not require a learning rate. However, contrary to the Perceptron, they include a regularization parameter &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">수동적 공격적 알고리즘은 대규모 학습을위한 알고리즘 계열입니다. 학습 속도가 필요하지 않다는 점에서 퍼셉트론과 유사합니다. 그러나 Perceptron과 달리 정규화 매개 변수 &lt;code&gt;C&lt;/code&gt; 가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="cf6ba8c5f2e782ae102fc993ff0f91af87853f26" translate="yes" xml:space="preserve">
          <source>The path of the base directory to use as a data store or None. If None is given, no caching is done and the Memory object is completely transparent. This option replaces cachedir since version 0.12.</source>
          <target state="translated">데이터 저장소로 사용할 기본 디렉토리의 경로 또는 없음 None을 지정하면 캐싱이 수행되지 않고 Memory 객체가 완전히 투명합니다. 이 옵션은 버전 0.12 이후의 cachedir을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="e60c1638cc188f171e30720c51f9233ac8e0591d" translate="yes" xml:space="preserve">
          <source>The path to scikit-learn data dir.</source>
          <target state="translated">scikit-learn 데이터 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="780a6be1d44fa6c4bc32e0e6a573d3b4ad24b942" translate="yes" xml:space="preserve">
          <source>The penalty (aka regularization term) to be used. Defaults to &amp;lsquo;l2&amp;rsquo; which is the standard regularizer for linear SVM models. &amp;lsquo;l1&amp;rsquo; and &amp;lsquo;elasticnet&amp;rsquo; might bring sparsity to the model (feature selection) not achievable with &amp;lsquo;l2&amp;rsquo;.</source>
          <target state="translated">사용될 페널티 (일명 정규화 용어). 선형 SVM 모델의 표준 정규화 기인 'l2'가 기본값입니다. 'l1'과 'elasticnet'은 'l2'로는 달성 할 수없는 모델 (기능 선택)에 희소성을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ec62ab0e251a48390ce125b16975a3fa4c7ca91" translate="yes" xml:space="preserve">
          <source>The penalty (aka regularization term) to be used. Defaults to None.</source>
          <target state="translated">사용될 페널티 (일명 정규화 용어). 기본값은 없음입니다.</target>
        </trans-unit>
        <trans-unit id="195880b4735384ca5f4a3196f2d3109be0fc5155" translate="yes" xml:space="preserve">
          <source>The performance is slightly worse for the randomized search, though this is most likely a noise effect and would not carry over to a held-out test set.</source>
          <target state="translated">무작위 검색의 경우 성능이 약간 저하되지만 노이즈 효과 일 가능성이 높으며 보류 테스트 세트로 넘어 가지 않습니다.</target>
        </trans-unit>
        <trans-unit id="66758ccad6c0faa66ee36e2739cca75d7cb80119" translate="yes" xml:space="preserve">
          <source>The performance measure reported by &lt;em&gt;k&lt;/em&gt;-fold cross-validation is then the average of the values computed in the loop. This approach can be computationally expensive, but does not waste too much data (as is the case when fixing an arbitrary validation set), which is a major advantage in problems such as inverse inference where the number of samples is very small.</source>
          <target state="translated">&lt;em&gt;k-&lt;/em&gt; 겹 교차 검증으로 보고 된 성능 측정 값은 루프에서 계산 된 값의 평균입니다. 이 방법은 계산 비용이 많이 들지만 (임의의 유효성 검사 세트를 수정하는 경우와 같이) 너무 많은 데이터를 낭비하지 않으며, 이는 샘플 수가 매우 적은 역 추론과 같은 문제에서 주요 이점입니다.</target>
        </trans-unit>
        <trans-unit id="3b50299f6e3a476dff9e3b98d46cee16ed70fcdb" translate="yes" xml:space="preserve">
          <source>The performance of the SAMME and SAMME.R &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; algorithms are compared. SAMME.R uses the probability estimates to update the additive model, while SAMME uses the classifications only. As the example illustrates, the SAMME.R algorithm typically converges faster than SAMME, achieving a lower test error with fewer boosting iterations. The error of each algorithm on the test set after each boosting iteration is shown on the left, the classification error on the test set of each tree is shown in the middle, and the boost weight of each tree is shown on the right. All trees have a weight of one in the SAMME.R algorithm and therefore are not shown.</source>
          <target state="translated">SAMME 및 SAMME.R &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; 알고리즘 의 성능 이 비교됩니다. SAMME.R은 확률 추정값을 사용하여 덧셈 모델을 업데이트하지만 SAMME는 분류 만 사용합니다. 예제에서 알 수 있듯이 SAMME.R 알고리즘은 일반적으로 SAMME보다 빠르게 수렴되어 부스팅 반복 횟수가 줄어 테스트 오류가 줄어 듭니다. 각 부스팅 반복 후 테스트 세트의 각 알고리즘 오류는 왼쪽에 표시되고 각 트리의 테스트 세트에 대한 분류 오류는 중간에 표시되며 각 트리의 부스트 가중치는 오른쪽에 표시됩니다. SAMME.R 알고리즘에서 모든 트리의 가중치는 1이므로 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f1cd52ca3b14d7125644c3724ffbf78c03b2ab3" translate="yes" xml:space="preserve">
          <source>The performance of the selected hyper-parameters and trained model is then measured on a dedicated evaluation set that was not used during the model selection step.</source>
          <target state="translated">선택한 하이퍼 파라미터 및 훈련 된 모델의 성능은 모델 선택 단계에서 사용되지 않은 전용 평가 세트에서 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="dd106efb0f7012bff421a0ad8f3697f8283515ed" translate="yes" xml:space="preserve">
          <source>The periodicity of the kernel.</source>
          <target state="translated">커널의 주기성</target>
        </trans-unit>
        <trans-unit id="5dce1e0dbd7277c2f73689bcac70f69df5d2fc02" translate="yes" xml:space="preserve">
          <source>The perplexity is defined as \(k=2^{(S)}\) where \(S\) is the Shannon entropy of the conditional probability distribution. The perplexity of a \(k\)-sided die is \(k\), so that \(k\) is effectively the number of nearest neighbors t-SNE considers when generating the conditional probabilities. Larger perplexities lead to more nearest neighbors and less sensitive to small structure. Conversely a lower perplexity considers a smaller number of neighbors, and thus ignores more global information in favour of the local neighborhood. As dataset sizes get larger more points will be required to get a reasonable sample of the local neighborhood, and hence larger perplexities may be required. Similarly noisier datasets will require larger perplexity values to encompass enough local neighbors to see beyond the background noise.</source>
          <target state="translated">복잡도는 \ (k = 2 ^ {(S)} \)로 정의됩니다. 여기서 \ (S \)는 조건부 확률 분포의 Shannon 엔트로피입니다. \ (k \)-사이드 다이의 복잡성은 \ (k \)이므로, \ (k \)는 조건부 확률을 생성 할 때 t-SNE가 고려하는 가장 가까운 이웃의 수입니다. 더 큰 난관은 더 가까운 이웃으로 이어지고 작은 구조에 덜 민감합니다. 반대로 낮은 난관은 소수의 이웃을 고려하므로 더 많은 글로벌 정보를 무시하고 지역 이웃에 유리합니다. 데이터 세트 크기가 커짐에 따라 지역 주변의 합리적인 표본을 얻기 위해서는 더 많은 포인트가 필요하므로 더 큰 난이도가 필요할 수 있습니다. 마찬가지로 잡음이 많은 데이터 세트는 배경 잡음을 넘어서 볼 수있는 충분한 로컬 이웃을 포함하기 위해 더 큰 난수 값이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="08299376158415917838ffdf1e208cdfe76446d4" translate="yes" xml:space="preserve">
          <source>The perplexity is related to the number of nearest neighbors that is used in other manifold learning algorithms. Larger datasets usually require a larger perplexity. Consider selecting a value between 5 and 50. The choice is not extremely critical since t-SNE is quite insensitive to this parameter.</source>
          <target state="translated">당황은 다른 매니 폴드 학습 알고리즘에 사용되는 가장 가까운 이웃의 수와 관련이 있습니다. 더 큰 데이터 세트는 일반적으로 더 큰 난이도가 필요합니다. 5와 50 사이의 값을 선택하는 것을 고려하십시오. t-SNE는이 매개 변수에 매우 민감하지 않으므로 선택은 매우 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d1257b149fa9d88b1966c8dbdc55bf21ea6a0db" translate="yes" xml:space="preserve">
          <source>The placeholder for the missing values. All occurrences of &lt;code&gt;missing_values&lt;/code&gt; will be imputed.</source>
          <target state="translated">결 측값 자리 표시 자입니다. &lt;code&gt;missing_values&lt;/code&gt; 의 모든 발생이 대치 됩니다.</target>
        </trans-unit>
        <trans-unit id="9c95ae315d785709e445ae217c5567fb1ce65f07" translate="yes" xml:space="preserve">
          <source>The placeholder for the missing values. All occurrences of &lt;code&gt;missing_values&lt;/code&gt; will be imputed. For missing values encoded as np.nan, use the string value &amp;ldquo;NaN&amp;rdquo;.</source>
          <target state="translated">결 측값 자리 표시 자입니다. &lt;code&gt;missing_values&lt;/code&gt; 의 모든 발생이 대치 됩니다. np.nan으로 인코딩 된 결 측값의 경우 문자열 값 &quot;NaN&quot;을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="50d8f581357d70f0923b3a8bf25734f11fbbdc88" translate="yes" xml:space="preserve">
          <source>The plot represents the learning curve of the classifier: the evolution of classification accuracy over the course of the mini-batches. Accuracy is measured on the first 1000 samples, held out as a validation set.</source>
          <target state="translated">도표는 분류기의 학습 곡선을 나타냅니다. 미니 배치 과정에서 분류 정확도의 진화. 정확성은 검증 세트로 유지되는 첫 1000 개의 샘플에서 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="2108780ce5e305bd6eefeccab3f1f12e712db7ba" translate="yes" xml:space="preserve">
          <source>The plot shows decision boundaries for Linear Discriminant Analysis and Quadratic Discriminant Analysis. The bottom row demonstrates that Linear Discriminant Analysis can only learn linear boundaries, while Quadratic Discriminant Analysis can learn quadratic boundaries and is therefore more flexible.</source>
          <target state="translated">이 그림은 선형 판별 분석 및 2 차 판별 분석의 결정 경계를 보여줍니다. 맨 아래 행은 선형 판별 분석이 선형 경계 만 학습 할 수있는 반면 2 차 판별 분석은 2 차 경계를 학습 할 수 있으므로 더 유연하다는 것을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="17f022b1b904616a8feb650bfceadf60a7908c45" translate="yes" xml:space="preserve">
          <source>The plot shows four one-way and one two-way partial dependence plots. The target variables for the one-way PDP are: median income (&lt;code&gt;MedInc&lt;/code&gt;), avg. occupants per household (&lt;code&gt;AvgOccup&lt;/code&gt;), median house age (&lt;code&gt;HouseAge&lt;/code&gt;), and avg. rooms per household (&lt;code&gt;AveRooms&lt;/code&gt;).</source>
          <target state="translated">이 그림은 4 개의 단방향 및 1 개의 양방향 부분 의존도를 보여줍니다. 단방향 PDP의 대상 변수는 중간 소득 ( &lt;code&gt;MedInc&lt;/code&gt; ), 평균입니다. 가구당 거주자 ( &lt;code&gt;AvgOccup&lt;/code&gt; ), 평균 주택 연령 ( &lt;code&gt;HouseAge&lt;/code&gt; ) 및 평균. 가구당 객실 수 ( &lt;code&gt;AveRooms&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d1f9d8f4302df476eee3089e3160330e3191c729" translate="yes" xml:space="preserve">
          <source>The plot shows the regions where the discretized encoding is constant.</source>
          <target state="translated">플롯은 이산화 된 인코딩이 일정한 영역을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a1523290796b6a8ba4024eaf4b48817249c66e13" translate="yes" xml:space="preserve">
          <source>The plots below illustrate the effect the parameter &lt;code&gt;C&lt;/code&gt; has on the separation line. A large value of &lt;code&gt;C&lt;/code&gt; basically tells our model that we do not have that much faith in our data&amp;rsquo;s distribution, and will only consider points close to line of separation.</source>
          <target state="translated">아래 그림은 매개 변수 &lt;code&gt;C&lt;/code&gt; 가 분리선에 미치는 영향을 보여줍니다 . &lt;code&gt;C&lt;/code&gt; 의 큰 값은 기본적으로 모델에 데이터 분포에 대한 많은 믿음이 없으며 분리 선에 가까운 점만 고려할 것임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="faaabc25a5f9dd9badc9ef9f18d9770e507882de" translate="yes" xml:space="preserve">
          <source>The plots display firstly what a K-means algorithm would yield using three clusters. It is then shown what the effect of a bad initialization is on the classification process: By setting n_init to only 1 (default is 10), the amount of times that the algorithm will be run with different centroid seeds is reduced. The next plot displays what using eight clusters would deliver and finally the ground truth.</source>
          <target state="translated">도표는 먼저 3 개의 군집을 사용하여 K- 평균 알고리즘이 산출하는 것을 표시합니다. 그러면 잘못된 초기화가 분류 프로세스에 미치는 영향을 알 수 있습니다. n_init를 1 (기본값은 10)로 설정하면 알고리즘이 다른 중심 시드로 실행되는 횟수가 줄어 듭니다. 다음 줄거리는 8 개의 클러스터를 사용하여 무엇을 제공 할 것인지, 그리고 궁극적으로 진실을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3ad47df403d87eb821e2edd090b9e74720bc0be8" translate="yes" xml:space="preserve">
          <source>The plots represent the distribution of the prediction latency as a boxplot.</source>
          <target state="translated">도표는 예측 대기 시간의 분포를 상자 그림으로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ee583f2ef106ae04159c6d135c18b8bf01049699" translate="yes" xml:space="preserve">
          <source>The plots show training points in solid colors and testing points semi-transparent. The lower right shows the classification accuracy on the test set.</source>
          <target state="translated">플롯은 단색으로 훈련 포인트와 반투명 테스트 포인트를 보여줍니다. 오른쪽 하단에는 테스트 세트의 분류 정확도가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a10b5c6300ecb650c0782e5a6bff1ffc576100bb" translate="yes" xml:space="preserve">
          <source>The point cloud spanned by the observations above is very flat in one direction: one of the three univariate features can almost be exactly computed using the other two. PCA finds the directions in which the data is not &lt;em&gt;flat&lt;/em&gt;</source>
          <target state="translated">위의 관측치에 걸쳐있는 점 구름은 한 방향으로 매우 평평합니다. 세 가지 일 변량 피쳐 중 하나는 다른 두 가지를 사용하여 거의 정확하게 계산할 수 있습니다. PCA는 데이터가 &lt;em&gt;평평&lt;/em&gt; 하지 않은 방향을 찾습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9874b880b8ee39ca50e864dab01006b5213a2351" translate="yes" xml:space="preserve">
          <source>The points.</source>
          <target state="translated">포인트</target>
        </trans-unit>
        <trans-unit id="0cdbbfd6a3924811880d5b83f6e26dafaaff0147" translate="yes" xml:space="preserve">
          <source>The polynomial kernel is defined as:</source>
          <target state="translated">다항식 커널은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8b34b53d18875cd269c1341b177c3bcbb9230141" translate="yes" xml:space="preserve">
          <source>The pooled values for each feature cluster.</source>
          <target state="translated">각 기능 클러스터에 대한 풀링 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="6285f4c6cbbb9a8676e04ca09291d710e5d4992f" translate="yes" xml:space="preserve">
          <source>The possible options are &amp;lsquo;hinge&amp;rsquo;, &amp;lsquo;log&amp;rsquo;, &amp;lsquo;modified_huber&amp;rsquo;, &amp;lsquo;squared_hinge&amp;rsquo;, &amp;lsquo;perceptron&amp;rsquo;, or a regression loss: &amp;lsquo;squared_loss&amp;rsquo;, &amp;lsquo;huber&amp;rsquo;, &amp;lsquo;epsilon_insensitive&amp;rsquo;, or &amp;lsquo;squared_epsilon_insensitive&amp;rsquo;.</source>
          <target state="translated">가능한 옵션은 'hinge', 'log', 'modified_huber', 'squared_hinge', 'perceptron'또는 회귀 손실 ( 'squared_loss', 'huber', 'epsilon_insensitive'또는 'squared_epsilon_insensitive')입니다.</target>
        </trans-unit>
        <trans-unit id="5a756ae9d1d42224e6a27c29b135c093bd570bbe" translate="yes" xml:space="preserve">
          <source>The power of the Minkowski metric to be used to calculate distance between points.</source>
          <target state="translated">점 사이의 거리를 계산하는 데 사용되는 Minkowski 지표의 검정력입니다.</target>
        </trans-unit>
        <trans-unit id="581738f7dfe64a35233afe8207a1e82379bfb8cd" translate="yes" xml:space="preserve">
          <source>The power transform is useful as a transformation in modeling problems where homoscedasticity and normality are desired. Below are examples of Box-Cox and Yeo-Johnwon applied to six different probability distributions: Lognormal, Chi-squared, Weibull, Gaussian, Uniform, and Bimodal.</source>
          <target state="translated">전력 변환은 균일 성 및 정규성이 요구되는 모델링 문제의 변환으로서 유용하다. 다음은 6 가지 확률 분포에 적용되는 Box-Cox 및 Yeo-Johnwon의 예입니다 : Lognormal, Chi-squared, Weibull, Gaussian, Uniform 및 Bimodal.</target>
        </trans-unit>
        <trans-unit id="837e2e1ea652ea6696a91670a638bda69523a446" translate="yes" xml:space="preserve">
          <source>The power transform method. Available methods are:</source>
          <target state="translated">전력 변환 방법. 사용 가능한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1605256f2d1d73782f41770777e3757d50960cf1" translate="yes" xml:space="preserve">
          <source>The power transform method. Currently, &amp;lsquo;box-cox&amp;rsquo; (Box-Cox transform) is the only option available.</source>
          <target state="translated">전력 변환 방법. 현재 'box-cox'(Box-Cox 변환)가 사용 가능한 유일한 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="9e3ef4e072a07501cd2ec598f0a1011b6178f209" translate="yes" xml:space="preserve">
          <source>The precision is the ratio &lt;code&gt;tp / (tp + fp)&lt;/code&gt; where &lt;code&gt;tp&lt;/code&gt; is the number of true positives and &lt;code&gt;fp&lt;/code&gt; the number of false positives. The precision is intuitively the ability of the classifier not to label as positive a sample that is negative.</source>
          <target state="translated">정밀도는 비율 &lt;code&gt;tp / (tp + fp)&lt;/code&gt; 여기서 &lt;code&gt;tp&lt;/code&gt; 는 진양 수이고 &lt;code&gt;fp&lt;/code&gt; 는 오 탐지 수입니다. 정밀도는 직관적으로 분류자가 음수 인 샘플을 양수로 표시하지 않는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="5e318fd9419ebb0c7685cd2fcf271eb0864ec5bb" translate="yes" xml:space="preserve">
          <source>The precision matrices for each component in the mixture. A precision matrix is the inverse of a covariance matrix. A covariance matrix is symmetric positive definite so the mixture of Gaussian can be equivalently parameterized by the precision matrices. Storing the precision matrices instead of the covariance matrices makes it more efficient to compute the log-likelihood of new samples at test time. The shape depends on &lt;code&gt;covariance_type&lt;/code&gt;:</source>
          <target state="translated">혼합물의 각 성분에 대한 정밀 매트릭스. 정밀 행렬은 공분산 행렬의 역수입니다. 공분산 행렬은 대칭 양수로 한정되므로 가우스 혼합은 정밀 행렬에 의해 동등하게 매개 변수화 될 수 있습니다. 공분산 행렬 대신 정밀 행렬을 저장하면 테스트 시간에 새로운 샘플의 로그 가능성을보다 효율적으로 계산할 수 있습니다. 모양은 &lt;code&gt;covariance_type&lt;/code&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="027e42693446de348f6d01928068eb7453ef8a97" translate="yes" xml:space="preserve">
          <source>The precision matrix associated to the current covariance object.</source>
          <target state="translated">현재 공분산 객체와 연관된 정밀 행렬입니다.</target>
        </trans-unit>
        <trans-unit id="d78de957c617714f761992022534f1c5cbc37dc0" translate="yes" xml:space="preserve">
          <source>The precision of each components on the mean distribution (Gaussian).</source>
          <target state="translated">평균 분포에서 각 구성 요소의 정밀도 (가우시안).</target>
        </trans-unit>
        <trans-unit id="208aaa08d6ec7d945a950063ea09933d0bd5ac66" translate="yes" xml:space="preserve">
          <source>The precision prior on the mean distribution (Gaussian). Controls the extend to where means can be placed. Smaller values concentrate the means of each clusters around &lt;code&gt;mean_prior&lt;/code&gt;.</source>
          <target state="translated">평균 분포 이전의 정밀도 (가우시안). 수단을 배치 할 수있는 확장을 제어합니다. 값이 작을수록 각 군집의 평균이 &lt;code&gt;mean_prior&lt;/code&gt; 주위에 집중 됩니다.</target>
        </trans-unit>
        <trans-unit id="b72296dd4015be0343e22e7dc45bdf0f7e18f582" translate="yes" xml:space="preserve">
          <source>The precision prior on the mean distribution (Gaussian). Controls the extend to where means can be placed. Smaller values concentrate the means of each clusters around &lt;code&gt;mean_prior&lt;/code&gt;. The value of the parameter must be greater than 0. If it is None, it&amp;rsquo;s set to 1.</source>
          <target state="translated">평균 분포 이전의 정밀도 (가우시안). 수단을 배치 할 수있는 위치까지 확장을 제어합니다. 값이 작을수록 각 군집의 평균이 &lt;code&gt;mean_prior&lt;/code&gt; 주위에 집중 됩니다. 매개 변수의 값은 0보다 커야합니다. None이면 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="03d920e00078b8bd9b4faa0b1aa14a8c65b257bb" translate="yes" xml:space="preserve">
          <source>The precision-recall curve shows the tradeoff between precision and recall for different threshold. A high area under the curve represents both high recall and high precision, where high precision relates to a low false positive rate, and high recall relates to a low false negative rate. High scores for both show that the classifier is returning accurate results (high precision), as well as returning a majority of all positive results (high recall).</source>
          <target state="translated">정밀 리콜 곡선은 서로 다른 임계 값에 대한 정밀도와 리콜 간의 절충점을 보여줍니다. 곡선 아래의 높은 영역은 높은 회수율과 높은 정밀도를 나타내며, 높은 정밀도는 낮은 오 탐지율과 관련이 있으며 높은 리콜은 낮은 오 탐률과 관련이 있습니다. 두 등급 모두에서 높은 점수를 받으면 분류 기가 정확한 결과 (높은 정밀도)를 반환 할뿐 아니라 모든 긍정적 결과 (대부분의 리콜)를 반환한다는 것을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b03d17dd4f0a50b42b8760dd1442678e73495423" translate="yes" xml:space="preserve">
          <source>The predicted class C for each sample in X is returned.</source>
          <target state="translated">X의 각 샘플에 대해 예측 된 클래스 C가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bfeb54e7bff0bb15dd098a7327cddb86a1801899" translate="yes" xml:space="preserve">
          <source>The predicted class log-probabilities of an input sample is computed as the log of the mean predicted class probabilities of the base estimators in the ensemble.</source>
          <target state="translated">입력 샘플의 예측 된 클래스 로그 확률은 앙상블에서 기본 추정기의 평균 예측 된 클래스 확률의 로그로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="cd67555dc49cf41a5e5df91097299e3752772d2d" translate="yes" xml:space="preserve">
          <source>The predicted class log-probabilities of an input sample is computed as the log of the mean predicted class probabilities of the trees in the forest.</source>
          <target state="translated">입력 샘플의 예측 된 클래스 로그 확률은 포리스트에있는 나무의 평균 예측 된 클래스 확률의 로그로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="eab6e37cbb9069ff9afad75097cea6fc5d34926b" translate="yes" xml:space="preserve">
          <source>The predicted class log-probabilities of an input sample is computed as the weighted mean predicted class log-probabilities of the classifiers in the ensemble.</source>
          <target state="translated">입력 샘플의 예측 된 클래스 로그 확률은 앙상블에서 분류기의 가중 평균 예측 된 클래스 로그 확률로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="47d729548b0a8e226d9e4c530c0297fbe0f5665f" translate="yes" xml:space="preserve">
          <source>The predicted class of an input sample is a vote by the trees in the forest, weighted by their probability estimates. That is, the predicted class is the one with highest mean probability estimate across the trees.</source>
          <target state="translated">입력 샘플의 예측 된 클래스는 확률 추정값에 따라 가중치가 지정된 포리스트의 나무에 의한 투표입니다. 즉, 예측 클래스는 트리 전체에서 평균 확률이 가장 높은 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="228bf14c189aaaaad2dc0e65c7c1dff58773904b" translate="yes" xml:space="preserve">
          <source>The predicted class of an input sample is computed as the class with the highest mean predicted probability. If base estimators do not implement a &lt;code&gt;predict_proba&lt;/code&gt; method, then it resorts to voting.</source>
          <target state="translated">입력 샘플의 예측 된 클래스는 평균 예측 확률이 가장 높은 클래스로 계산됩니다. 기본 견적자가 &lt;code&gt;predict_proba&lt;/code&gt; 메소드를 구현하지 않으면 투표에 의지합니다.</target>
        </trans-unit>
        <trans-unit id="8652ca51db9ef5a2b15410ff134f217292f6ef55" translate="yes" xml:space="preserve">
          <source>The predicted class of an input sample is computed as the weighted mean prediction of the classifiers in the ensemble.</source>
          <target state="translated">입력 샘플의 예측 된 클래스는 앙상블에서 분류기의 가중 평균 예측으로서 계산된다.</target>
        </trans-unit>
        <trans-unit id="46c6bfcd5571fcbc8ac1e94c5ec5ef7b9ca3bcfc" translate="yes" xml:space="preserve">
          <source>The predicted class probabilities of an input sample are computed as the mean predicted class probabilities of the trees in the forest. The class probability of a single tree is the fraction of samples of the same class in a leaf.</source>
          <target state="translated">입력 샘플의 예측 된 클래스 확률은 숲에서 나무의 평균 예측 된 클래스 확률로 계산됩니다. 단일 트리의 클래스 확률은 잎에서 동일한 클래스의 샘플 비율입니다.</target>
        </trans-unit>
        <trans-unit id="90e3cd15b2277da446a86ed04d9b97d9385dbcbd" translate="yes" xml:space="preserve">
          <source>The predicted class probabilities of an input sample is computed as the mean predicted class probabilities of the base estimators in the ensemble. If base estimators do not implement a &lt;code&gt;predict_proba&lt;/code&gt; method, then it resorts to voting and the predicted class probabilities of an input sample represents the proportion of estimators predicting each class.</source>
          <target state="translated">입력 샘플의 예측 클래스 확률은 앙상블에서 기본 추정기의 평균 예측 클래스 확률로 계산됩니다. 기본 추정기가 &lt;code&gt;predict_proba&lt;/code&gt; 메소드를 구현하지 않으면 투표에 의존 하고 입력 샘플의 예측 된 클래스 확률은 각 클래스를 예측하는 추정기의 비율을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f43014d849d28fe556560f6e74f971c02171e223" translate="yes" xml:space="preserve">
          <source>The predicted class probabilities of an input sample is computed as the weighted mean predicted class probabilities of the classifiers in the ensemble.</source>
          <target state="translated">입력 샘플의 예측 클래스 확률은 앙상블에서 분류기의 가중 평균 예측 클래스 확률로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="232fb255d370f3424586a7b0c3f74d049bd6d607" translate="yes" xml:space="preserve">
          <source>The predicted class probability is the fraction of samples of the same class in a leaf.</source>
          <target state="translated">예측 된 클래스 확률은 리프에서 동일한 클래스의 샘플 비율입니다.</target>
        </trans-unit>
        <trans-unit id="45d2cef0bd7682bfccc693d1957f2c12cdb9bae8" translate="yes" xml:space="preserve">
          <source>The predicted class.</source>
          <target state="translated">예측 된 클래스.</target>
        </trans-unit>
        <trans-unit id="d01b8d940e0e34c3c7942798bc90fe03e260970d" translate="yes" xml:space="preserve">
          <source>The predicted classes, or the predict values.</source>
          <target state="translated">예측 된 클래스 또는 예측 값</target>
        </trans-unit>
        <trans-unit id="b68f3b27cbad35418e1a35aab9bbe1837a195e37" translate="yes" xml:space="preserve">
          <source>The predicted classes.</source>
          <target state="translated">예측 된 클래스.</target>
        </trans-unit>
        <trans-unit id="f9c849804a5f2e4c77a6bd9f1a72aeb60a174b11" translate="yes" xml:space="preserve">
          <source>The predicted log-probability of the sample for each class in the model, where classes are ordered as they are in &lt;code&gt;self.classes_&lt;/code&gt;. Equivalent to log(predict_proba(X))</source>
          <target state="translated">&lt;code&gt;self.classes_&lt;/code&gt; 와 같이 클래스가 정렬 된 모델의 각 클래스에 대한 샘플의 예상 로그 확률입니다 . log (predict_proba (X))와 동일</target>
        </trans-unit>
        <trans-unit id="b73f981e520b253c83fbe81831bba280a3db569a" translate="yes" xml:space="preserve">
          <source>The predicted probability of the sample for each class in the model, where classes are ordered as they are in &lt;code&gt;self.classes_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self.classes_&lt;/code&gt; 와 같이 클래스가 정렬 된 모델의 각 클래스에 대한 샘플의 예측 확률입니다 .</target>
        </trans-unit>
        <trans-unit id="a286cd68d524dde2fbaba23c990f981ec35b78f3" translate="yes" xml:space="preserve">
          <source>The predicted probas.</source>
          <target state="translated">예측 된 프로 바.</target>
        </trans-unit>
        <trans-unit id="53b10e885ebd4a72b834dc0bd6649d47d09469b6" translate="yes" xml:space="preserve">
          <source>The predicted regression target of an input sample is computed as the mean predicted regression targets of the estimators in the ensemble.</source>
          <target state="translated">입력 샘플의 예측 회귀 목표는 앙상블에서 추정기의 평균 예측 회귀 목표로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="d575d8b045eb46db33f9cbaec364a954b218830a" translate="yes" xml:space="preserve">
          <source>The predicted regression target of an input sample is computed as the mean predicted regression targets of the trees in the forest.</source>
          <target state="translated">입력 샘플의 예측 회귀 목표는 숲에서 나무의 평균 예측 회귀 목표로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="21875214f30fbe829fb7e391b984beb01fcc0748" translate="yes" xml:space="preserve">
          <source>The predicted regression value of an input sample is computed as the weighted median prediction of the classifiers in the ensemble.</source>
          <target state="translated">입력 샘플의 예측 된 회귀 값은 앙상블에서 분류기의 가중 평균 예측으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="d728cdaebb39fe6a42651804a843b92d06b095fc" translate="yes" xml:space="preserve">
          <source>The predicted regression values.</source>
          <target state="translated">예측 된 회귀 값입니다.</target>
        </trans-unit>
        <trans-unit id="eb2e0fb384bae49f48977b71692091d27df9ee48" translate="yes" xml:space="preserve">
          <source>The predicted target values.</source>
          <target state="translated">예측 된 목표 값.</target>
        </trans-unit>
        <trans-unit id="16c2ec05bdd825f5e946bffd1661391a4efc1866" translate="yes" xml:space="preserve">
          <source>The predicted value of the input samples.</source>
          <target state="translated">입력 샘플의 예상 값입니다.</target>
        </trans-unit>
        <trans-unit id="71f7a8826bad533ae16d312cbce730009c206751" translate="yes" xml:space="preserve">
          <source>The predicted values.</source>
          <target state="translated">예측 된 값.</target>
        </trans-unit>
        <trans-unit id="d3f70f498146a996702d8957eebe13ff93b2e60c" translate="yes" xml:space="preserve">
          <source>The prediction interpolates the observations (at least for regular kernels).</source>
          <target state="translated">예측은 관찰을 보간합니다 (적어도 일반 커널의 경우).</target>
        </trans-unit>
        <trans-unit id="0a5a460e70a5f18f6e563f520727c4e907b64c8a" translate="yes" xml:space="preserve">
          <source>The prediction is probabilistic (Gaussian) so that one can compute empirical confidence intervals and decide based on those if one should refit (online fitting, adaptive fitting) the prediction in some region of interest.</source>
          <target state="translated">예측은 확률 적 (가우시안)이므로 경험적 신뢰 구간을 계산하고 관심있는 일부 영역에서 예측을 수정 (온라인 피팅, 적응 피팅)해야하는지에 따라 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22369282bb204be005e939800f6b06d8c430453c" translate="yes" xml:space="preserve">
          <source>The previously introduced metrics are &lt;strong&gt;not normalized with regards to random labeling&lt;/strong&gt;: this means that depending on the number of samples, clusters and ground truth classes, a completely random labeling will not always yield the same values for homogeneity, completeness and hence v-measure. In particular &lt;strong&gt;random labeling won&amp;rsquo;t yield zero scores especially when the number of clusters is large&lt;/strong&gt;.</source>
          <target state="translated">이전에 소개 된 측정 항목은 &lt;strong&gt;무작위 표시와 관련하여 정규화되지 않았습니다&lt;/strong&gt; . 즉, 샘플, 군집 및지면 진실 클래스의 수에 따라 완전히 임의의 표시가 항상 동질성, 완전성 및 v- 측정에 대해 동일한 값을 생성하지는 않습니다. 특히 &lt;strong&gt;무작위 레이블링은 특히 클러스터 수가 많은 경우 0 점을 얻지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="cd0e1bbfb34ee27f92c4a3d8c327812d7edee1f8" translate="yes" xml:space="preserve">
          <source>The principle behind nearest neighbor methods is to find a predefined number of training samples closest in distance to the new point, and predict the label from these. The number of samples can be a user-defined constant (k-nearest neighbor learning), or vary based on the local density of points (radius-based neighbor learning). The distance can, in general, be any metric measure: standard Euclidean distance is the most common choice. Neighbors-based methods are known as &lt;em&gt;non-generalizing&lt;/em&gt; machine learning methods, since they simply &amp;ldquo;remember&amp;rdquo; all of its training data (possibly transformed into a fast indexing structure such as a &lt;a href=&quot;#ball-tree&quot;&gt;Ball Tree&lt;/a&gt; or &lt;a href=&quot;#kd-tree&quot;&gt;KD Tree&lt;/a&gt;).</source>
          <target state="translated">가장 가까운 이웃 방법의 기본 원리는 새로운 점에 가장 가까운 사전 정의 된 수의 훈련 샘플을 찾아 이들로부터 라벨을 예측하는 것입니다. 샘플의 수는 사용자 정의 상수 (k- 최근 접 이웃 학습) 일 수 있거나 점의 로컬 밀도 (반경 기반 이웃 학습)에 따라 달라집니다. 일반적으로 거리는 모든 측정 기준이 될 수 있습니다. 표준 유클리드 거리가 가장 일반적인 선택입니다. 이웃 기반 방법은 모든 일반 교육 데이터를 단순히 &quot;기억&quot;하기 때문에 (일반적으로 &lt;a href=&quot;#ball-tree&quot;&gt;볼 트리&lt;/a&gt; 또는 &lt;a href=&quot;#kd-tree&quot;&gt;KD 트리&lt;/a&gt; 와 같은 빠른 색인 구조로 변환되기 때문에) &lt;em&gt;일반화되지 않은&lt;/em&gt; 기계 학습 방법으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="947ce8b8522668844673470c4e6efaad3bb4bafb" translate="yes" xml:space="preserve">
          <source>The prior and posterior of a GP resulting from a &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt;&lt;code&gt;RationalQuadratic&lt;/code&gt;&lt;/a&gt; kernel are shown in the following figure:</source>
          <target state="translated">GP로 인한 GP의 전후 &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt; &lt;code&gt;RationalQuadratic&lt;/code&gt; &lt;/a&gt; 커널로는 다음 그림과 같습니다.</target>
        </trans-unit>
        <trans-unit id="43f31a8e2502a5518bdd46434b1800e86463052e" translate="yes" xml:space="preserve">
          <source>The prior and posterior of a GP resulting from an ExpSineSquared kernel are shown in the following figure:</source>
          <target state="translated">ExpSineSquared 커널로 인한 GP의 앞뒤는 다음 그림과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f92d48b9507eee6a0b35b438f1fb3d6ff89e93fd" translate="yes" xml:space="preserve">
          <source>The prior of the number of degrees of freedom on the covariance distributions (Wishart).</source>
          <target state="translated">공분산 분포에 대한 자유도 (Wishart)의 선행.</target>
        </trans-unit>
        <trans-unit id="f920ca641ad93ad7a821ae4139b67430b9eddb8f" translate="yes" xml:space="preserve">
          <source>The prior of the number of degrees of freedom on the covariance distributions (Wishart). If it is None, it&amp;rsquo;s set to &lt;code&gt;n_features&lt;/code&gt;.</source>
          <target state="translated">공분산 분포에 대한 자유도 (Wishart)의 선행. None이면 &lt;code&gt;n_features&lt;/code&gt; 로 설정됩니다 . .</target>
        </trans-unit>
        <trans-unit id="cf6f1da4c11f5b6aa97c72a194e67d10417600f3" translate="yes" xml:space="preserve">
          <source>The prior on the covariance distribution (Wishart). If it is None, the emiprical covariance prior is initialized using the covariance of X. The shape depends on &lt;code&gt;covariance_type&lt;/code&gt;:</source>
          <target state="translated">공분산 분포에 대한 사전 (Wishart). None이면 X의 공분산을 사용하여 이전의 반구형 공분산이 초기화됩니다. 모양은 &lt;code&gt;covariance_type&lt;/code&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="449bf6ea1f50ae651db1aabfda8187878d697851" translate="yes" xml:space="preserve">
          <source>The prior on the covariance distribution (Wishart). The shape depends on &lt;code&gt;covariance_type&lt;/code&gt;:</source>
          <target state="translated">공분산 분포에 대한 사전 (Wishart). 모양은 &lt;code&gt;covariance_type&lt;/code&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="a7d0d50e2fe2007735b69660533329d841055128" translate="yes" xml:space="preserve">
          <source>The prior on the mean distribution (Gaussian).</source>
          <target state="translated">평균 분포에 대한 사전 (가우시안).</target>
        </trans-unit>
        <trans-unit id="70a81456bc5946b8879a5b610e7810c1053668bd" translate="yes" xml:space="preserve">
          <source>The prior on the mean distribution (Gaussian). If it is None, it&amp;rsquo;s set to the mean of X.</source>
          <target state="translated">평균 분포에 대한 사전 (가우시안). None이면 X의 평균으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0c84abbb5dade5fc9d4b47758b34408cb97bc08f" translate="yes" xml:space="preserve">
          <source>The priors over \(\alpha\) and \(\lambda\) are chosen to be &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;gamma distributions&lt;/a&gt;, the conjugate prior for the precision of the Gaussian.</source>
          <target state="translated">\ (\ alpha \) 및 \ (\ lambda \)에 대한 선행은 가우스 &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;분포 (Gammas distribution)&lt;/a&gt; , 가우시안의 정밀도를위한 선행 컨쥬 게이트 로 선택됩니다 .</target>
        </trans-unit>
        <trans-unit id="69c3bd38e0a5cd7a1c6a9d7a1b4382f7891ca245" translate="yes" xml:space="preserve">
          <source>The probability model is created using cross validation, so the results can be slightly different than those obtained by predict. Also, it will produce meaningless results on very small datasets.</source>
          <target state="translated">확률 모델은 교차 검증을 사용하여 만들어 지므로 결과는 예측 결과와 약간 다를 수 있습니다. 또한 매우 작은 데이터 세트에서 의미없는 결과를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5a547056b7368b638d698d05d3f24b68fc3e86df" translate="yes" xml:space="preserve">
          <source>The probability of each class being drawn. Only returned if &lt;code&gt;return_distributions=True&lt;/code&gt;.</source>
          <target state="translated">각 클래스가 그려 질 확률. &lt;code&gt;return_distributions=True&lt;/code&gt; 인 경우에만 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="91c6b31a68e2490c2f85bd0b221deab07bc16086" translate="yes" xml:space="preserve">
          <source>The probability of each feature being drawn given each class. Only returned if &lt;code&gt;return_distributions=True&lt;/code&gt;.</source>
          <target state="translated">각 등급에 따라 각 지형지 물이 그려 질 확률. &lt;code&gt;return_distributions=True&lt;/code&gt; 인 경우에만 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e0b4e863c306f0bcfef6f345210b44e3fb52ffa9" translate="yes" xml:space="preserve">
          <source>The probability that a coefficient is zero (see notes). Larger values enforce more sparsity.</source>
          <target state="translated">계수가 0 일 확률 (주 참조). 값이 클수록 희소성이 높아집니다.</target>
        </trans-unit>
        <trans-unit id="4678dc803cddccad6a08944794f2a1c194908b2a" translate="yes" xml:space="preserve">
          <source>The problem of learning an optimal decision tree is known to be NP-complete under several aspects of optimality and even for simple concepts. Consequently, practical decision-tree learning algorithms are based on heuristic algorithms such as the greedy algorithm where locally optimal decisions are made at each node. Such algorithms cannot guarantee to return the globally optimal decision tree. This can be mitigated by training multiple trees in an ensemble learner, where the features and samples are randomly sampled with replacement.</source>
          <target state="translated">최적의 의사 결정 트리를 학습하는 문제는 최적의 여러 측면에서 단순한 개념으로 NP 완료된 것으로 알려져 있습니다. 결과적으로 실용적인 의사 결정 트리 학습 알고리즘은 각 노드에서 로컬로 최적의 결정을 내리는 욕심 알고리즘과 같은 휴리스틱 알고리즘을 기반으로합니다. 이러한 알고리즘은 최적의 의사 결정 트리를 반환한다고 보장 할 수 없습니다. 이 기능은 앙상블 학습자에서 여러 트리를 학습하여 완화 할 수 있으며, 기능과 샘플은 임의로 교체하여 샘플링됩니다.</target>
        </trans-unit>
        <trans-unit id="6c819ed9fb97cd33099d0eff9842389e345641fd" translate="yes" xml:space="preserve">
          <source>The problem solved in clustering</source>
          <target state="translated">클러스터링에서 해결 된 문제</target>
        </trans-unit>
        <trans-unit id="2c5b556d82e8f03aa8505b7b204354187717fb43" translate="yes" xml:space="preserve">
          <source>The problem solved in supervised learning</source>
          <target state="translated">지도 학습에서 해결 된 문제</target>
        </trans-unit>
        <trans-unit id="ab484ff296e26d980b5f93762f848e40818065e8" translate="yes" xml:space="preserve">
          <source>The progress meter: the higher the value of &lt;code&gt;verbose&lt;/code&gt;, the more messages:</source>
          <target state="translated">진행률 표시기 : &lt;code&gt;verbose&lt;/code&gt; 값이 높을수록 더 많은 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4163ad4952f27df98667c245d9d8133cfc5f4bae" translate="yes" xml:space="preserve">
          <source>The project mailing list</source>
          <target state="translated">프로젝트 메일 링리스트</target>
        </trans-unit>
        <trans-unit id="c7689a2c8d3ddf3814b537c25de9417bcceff1dc" translate="yes" xml:space="preserve">
          <source>The projected data.</source>
          <target state="translated">예상 데이터</target>
        </trans-unit>
        <trans-unit id="1179732ddee68f2a030de922cca4a7f3acc9e816" translate="yes" xml:space="preserve">
          <source>The proportion of points to be included in the support of the raw MCD estimate. Default is None, which implies that the minimum value of support_fraction will be used within the algorithm: [n_sample + n_features + 1] / 2</source>
          <target state="translated">원시 MCD 추정값을 지원하는 데 포함될 포인트의 비율입니다. 기본값은 없음입니다. 이는 support_fraction의 최소값이 알고리즘 내에서 사용됨을 의미합니다. [n_sample + n_features + 1] / 2</target>
        </trans-unit>
        <trans-unit id="5f706b185c5fa578abf1be5586afd62f084c2356" translate="yes" xml:space="preserve">
          <source>The proportion of points to be included in the support of the raw MCD estimate. If None, the minimum value of support_fraction will be used within the algorithm: &lt;code&gt;[n_sample + n_features + 1] / 2&lt;/code&gt;.</source>
          <target state="translated">원시 MCD 추정값을 지원하는 데 포함될 포인트의 비율입니다. None 인 경우 support_fraction의 최소값이 알고리즘 내에서 사용됩니다 : &lt;code&gt;[n_sample + n_features + 1] / 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5ef332af0dc668a636cc813bd9c0d699622c033" translate="yes" xml:space="preserve">
          <source>The proportion of training data to set aside as validation set for early stopping. Must be between 0 and 1. Only used if &lt;code&gt;n_iter_no_change&lt;/code&gt; is set to an integer.</source>
          <target state="translated">조기 중지를위한 검증 세트로 따로 설정할 교육 데이터의 비율입니다. 0과 1 사이 여야합니다. &lt;code&gt;n_iter_no_change&lt;/code&gt; 가 정수로 설정된 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7040634736e41a179ebec81405480b75c6b1afc" translate="yes" xml:space="preserve">
          <source>The proportion of training data to set aside as validation set for early stopping. Must be between 0 and 1. Only used if early_stopping is True</source>
          <target state="translated">조기 중지를위한 검증 세트로 따로 설정할 교육 데이터의 비율입니다. 0과 1 사이 여야합니다. early_stopping이 True 인 경우에만 사용</target>
        </trans-unit>
        <trans-unit id="22eea34be82cd504d8c4cf88134dfff15444db48" translate="yes" xml:space="preserve">
          <source>The proportion of training data to set aside as validation set for early stopping. Must be between 0 and 1. Only used if early_stopping is True.</source>
          <target state="translated">조기 중지를위한 검증 세트로 따로 설정할 교육 데이터의 비율입니다. 0과 1 사이 여야합니다. early_stopping이 True 인 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3b21c544ac1d6b2edc3be7d45619235a28b43e4c" translate="yes" xml:space="preserve">
          <source>The proportions of samples assigned to each class. If None, then classes are balanced. Note that if &lt;code&gt;len(weights) == n_classes - 1&lt;/code&gt;, then the last class weight is automatically inferred. More than &lt;code&gt;n_samples&lt;/code&gt; samples may be returned if the sum of &lt;code&gt;weights&lt;/code&gt; exceeds 1.</source>
          <target state="translated">각 클래스에 할당 된 샘플의 비율. 없음 인 경우 클래스 균형이 조정됩니다. 경우 참고 &lt;code&gt;len(weights) == n_classes - 1&lt;/code&gt; 후, 마지막 클래스 무게가 자동으로 유추됩니다. &lt;code&gt;weights&lt;/code&gt; 의 합 이 1을 초과하면 &lt;code&gt;n_samples&lt;/code&gt; 이상의 샘플이 반환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="824b6a86b9524b4fdb9e2919749fc7db8e534162" translate="yes" xml:space="preserve">
          <source>The purpose of the pipeline is to assemble several steps that can be cross-validated together while setting different parameters. For this, it enables setting parameters of the various steps using their names and the parameter name separated by a &amp;lsquo;__&amp;rsquo;, as in the example below. A step&amp;rsquo;s estimator may be replaced entirely by setting the parameter with its name to another estimator, or a transformer removed by setting to None.</source>
          <target state="translated">파이프 라인의 목적은 서로 다른 매개 변수를 설정하면서 함께 교차 검증 될 수있는 여러 단계를 조립하는 것입니다. 이를 위해 아래 예와 같이 이름과 '__'으로 구분 된 매개 변수 이름을 사용하여 다양한 단계의 매개 변수를 설정할 수 있습니다. 단계 추정기는 매개 변수 이름을 다른 추정기로 설정하거나 변압기를 None으로 설정하여 제거함으로써 완전히 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd8f7005fb1918c1319c0b334e68b25127992a8d" translate="yes" xml:space="preserve">
          <source>The python source code used to generate the model</source>
          <target state="translated">모델을 생성하는 데 사용되는 파이썬 소스 코드</target>
        </trans-unit>
        <trans-unit id="f7347085b6a9f16c7df450dca9dbc878bc14f5cc" translate="yes" xml:space="preserve">
          <source>The quantile to predict using the &amp;ldquo;quantile&amp;rdquo; strategy. A quantile of 0.5 corresponds to the median, while 0.0 to the minimum and 1.0 to the maximum.</source>
          <target state="translated">&quot;quantile&quot;전략을 사용하여 예측하는 Quantile입니다. Quantile 0.5는 중앙값에 해당하는 반면 0.0은 최소, 1.0은 최대입니다.</target>
        </trans-unit>
        <trans-unit id="38be089aaf53753add8a6e12d9d6e104537de3bf" translate="yes" xml:space="preserve">
          <source>The quantity that we use is the daily variation in quote price: quotes that are linked tend to cofluctuate during a day.</source>
          <target state="translated">우리가 사용하는 수량은 견적 가격의 일일 변동입니다. 연결된 견적은 하루 동안 변동하는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="96cf03fa14346bfc08bd6f97110fef23b56f72d1" translate="yes" xml:space="preserve">
          <source>The query point or points. If not provided, neighbors of each indexed point are returned. In this case, the query point is not considered its own neighbor.</source>
          <target state="translated">쿼리 포인트 제공하지 않으면 각 인덱스 포인트의 인접 항목이 반환됩니다. 이 경우 쿼리 지점은 자체 이웃으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30a7cdee7bb9697635b16e9d03b7cdd4b400cabd" translate="yes" xml:space="preserve">
          <source>The query sample or samples to compute the Local Outlier Factor w.r.t. the training samples.</source>
          <target state="translated">학습 샘플을 사용하여 로컬 특이 요인을 계산하기위한 쿼리 샘플.</target>
        </trans-unit>
        <trans-unit id="e9edc4411fbea590103c5860156a749b07db92a2" translate="yes" xml:space="preserve">
          <source>The query sample or samples to compute the Local Outlier Factor w.r.t. to the training samples.</source>
          <target state="translated">훈련 샘플에 대한 로컬 이상치 계수를 계산하기위한 쿼리 샘플.</target>
        </trans-unit>
        <trans-unit id="2f63e59d1f59e9a5989ccb3ba903c403d9c311f4" translate="yes" xml:space="preserve">
          <source>The radius of the subcluster obtained by merging a new sample and the closest subcluster should be lesser than the threshold. Otherwise a new subcluster is started. Setting this value to be very low promotes splitting and vice-versa.</source>
          <target state="translated">새 샘플과 가장 가까운 서브 클러스터를 병합하여 얻은 서브 클러스터의 반경은 임계 값보다 작아야합니다. 그렇지 않으면 새 서브 클러스터가 시작됩니다. 이 값을 매우 낮게 설정하면 분할이 촉진되고 그 반대도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c1fb03bbf68de1d40f0cd10af0722ed019408483" translate="yes" xml:space="preserve">
          <source>The random forest regressor will only ever predict values within the range of observations or closer to zero for each of the targets. As a result the predictions are biased towards the centre of the circle.</source>
          <target state="translated">랜덤 포레스트 회귀 분석은 관측 범위 내에서 또는 각 목표에 대해 0에 가까운 값만 예측합니다. 결과적으로 예측은 원의 중심을 향해 편향됩니다.</target>
        </trans-unit>
        <trans-unit id="ff0bc6a79a727353502babbe6e55a993a0f80508" translate="yes" xml:space="preserve">
          <source>The random number generator is used to generate random chain orders.</source>
          <target state="translated">난수 생성기는 난수 순서를 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="31617e37a4673ca35baf50a5963330e598289ccc" translate="yes" xml:space="preserve">
          <source>The random symmetric, positive-definite matrix.</source>
          <target state="translated">랜덤 대칭, 양의 유한 행렬.</target>
        </trans-unit>
        <trans-unit id="0ae670050b82bcbccc27a159ae39c91afa76e218" translate="yes" xml:space="preserve">
          <source>The randomized search and the grid search explore exactly the same space of parameters. The result in parameter settings is quite similar, while the run time for randomized search is drastically lower.</source>
          <target state="translated">무작위 검색과 그리드 검색은 정확히 같은 공간의 매개 변수를 탐색합니다. 매개 변수 설정의 결과는 매우 유사하지만 무작위 검색의 런타임은 크게 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="6f118fa702c125f64290c65f38abc4f6dddff279" translate="yes" xml:space="preserve">
          <source>The raw (unadjusted) Rand index is then given by:</source>
          <target state="translated">원시 (조정되지 않은) 랜드 인덱스는 다음과 같이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6b2fe9bd420d4a6948923a1a40e37c6224028547" translate="yes" xml:space="preserve">
          <source>The raw RI score is then &amp;ldquo;adjusted for chance&amp;rdquo; into the ARI score using the following scheme:</source>
          <target state="translated">그런 다음 원시 RI 점수는 다음 체계를 사용하여 ARI 점수에&amp;ldquo;기회 조정&amp;rdquo;됩니다.</target>
        </trans-unit>
        <trans-unit id="884b3f9d013732b636db9c9b452d7d3559d50f2d" translate="yes" xml:space="preserve">
          <source>The raw robust estimated covariance before correction and re-weighting.</source>
          <target state="translated">보정 및 재 가중치 이전의 원시 강력한 추정 공분산.</target>
        </trans-unit>
        <trans-unit id="70b59f0ad9598471a02599d6a34b12e103ef557b" translate="yes" xml:space="preserve">
          <source>The raw robust estimated location before correction and re-weighting.</source>
          <target state="translated">보정 및 재 가중치 이전의 강력한 예상 추정 위치.</target>
        </trans-unit>
        <trans-unit id="246acb046d6b9bd62c3702633fac1169a8d836d0" translate="yes" xml:space="preserve">
          <source>The real data lies in the &lt;code&gt;filenames&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt; attributes. The target attribute is the integer index of the category:</source>
          <target state="translated">실제 데이터는 &lt;code&gt;filenames&lt;/code&gt; 과 &lt;code&gt;target&lt;/code&gt; 속성에 있습니다. 대상 속성은 카테고리의 정수 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="480e842bb5c6e42d98f06aa4f6c096c0c7aba356" translate="yes" xml:space="preserve">
          <source>The recall is the ratio &lt;code&gt;tp / (tp + fn)&lt;/code&gt; where &lt;code&gt;tp&lt;/code&gt; is the number of true positives and &lt;code&gt;fn&lt;/code&gt; the number of false negatives. The recall is intuitively the ability of the classifier to find all the positive samples.</source>
          <target state="translated">리콜은 &lt;code&gt;tp / (tp + fn)&lt;/code&gt; 의 비율입니다. 여기서 &lt;code&gt;tp&lt;/code&gt; 는 양수이고 &lt;code&gt;fn&lt;/code&gt; 은 음수입니다. 리콜은 직관적으로 분류 기가 모든 양성 샘플을 찾을 수있는 능력입니다.</target>
        </trans-unit>
        <trans-unit id="65f6a86aee18eed07b01f195c73d746d5f2ca909" translate="yes" xml:space="preserve">
          <source>The reconstructed points using the metric MDS and non metric MDS are slightly shifted to avoid overlapping.</source>
          <target state="translated">메트릭 MDS 및 비 메트릭 MDS를 사용하여 재구성 된 포인트는 겹치지 않도록 약간 이동됩니다.</target>
        </trans-unit>
        <trans-unit id="cefc093c3489c62b159a3ce090f6d8b10ecaa3b1" translate="yes" xml:space="preserve">
          <source>The reconstruction error computed by each routine can be used to choose the optimal output dimension. For a \(d\)-dimensional manifold embedded in a \(D\)-dimensional parameter space, the reconstruction error will decrease as &lt;code&gt;n_components&lt;/code&gt; is increased until &lt;code&gt;n_components == d&lt;/code&gt;.</source>
          <target state="translated">각 루틴에서 계산 한 재구성 오류를 사용하여 최적의 출력 치수를 선택할 수 있습니다. \ (D \)에 매립 차원 폴드 - - \ (d \)로써 차원 파라미터 공간, 재구성 에러가 감소 &lt;code&gt;n_components&lt;/code&gt; 이 될 때까지 증가된다 &lt;code&gt;n_components == d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd5de02ec688b7a05331073a7d6e7032a5c96c24" translate="yes" xml:space="preserve">
          <source>The reconstruction with L1 penalization gives a result with zero error (all pixels are successfully labeled with 0 or 1), even if noise was added to the projections. In comparison, an L2 penalization (&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;sklearn.linear_model.Ridge&lt;/code&gt;&lt;/a&gt;) produces a large number of labeling errors for the pixels. Important artifacts are observed on the reconstructed image, contrary to the L1 penalization. Note in particular the circular artifact separating the pixels in the corners, that have contributed to fewer projections than the central disk.</source>
          <target state="translated">L1 페널티를 사용한 재구성은 투영에 노이즈가 추가 된 경우에도 제로 오류 (모든 픽셀에 0 또는 1로 레이블이 지정됨)가 발생합니다. 이에 비해 L2 불이익 ( &lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;sklearn.linear_model.Ridge&lt;/code&gt; &lt;/a&gt; )은 픽셀에 대해 많은 수의 레이블링 오류를 생성합니다. L1 벌칙에 반하여 재구성 된 이미지에서 중요한 아티팩트가 관찰됩니다. 특히 코너에서 픽셀을 분리하는 원형 아티팩트는 중앙 디스크보다 더 적은 투영에 기여합니다.</target>
        </trans-unit>
        <trans-unit id="cc89055f829a16401789a0501b3aaaa652548713" translate="yes" xml:space="preserve">
          <source>The reduced distance, defined for some metrics, is a computationally more efficient measure which preserves the rank of the true distance. For example, in the Euclidean distance metric, the reduced distance is the squared-euclidean distance.</source>
          <target state="translated">일부 메트릭에 대해 정의 된 감소 된 거리는 실제 거리의 순위를 유지하는 계산적으로 더 효율적인 측정입니다. 예를 들어, 유클리드 거리 메트릭에서 감소 된 거리는 제곱-유클리드 거리입니다.</target>
        </trans-unit>
        <trans-unit id="d3411437239f8f2dc8ee2706670c4e4a91db1791" translate="yes" xml:space="preserve">
          <source>The reduced samples.</source>
          <target state="translated">감소 된 샘플.</target>
        </trans-unit>
        <trans-unit id="67c2217cec61f41257c896a393db0ce694f3f635" translate="yes" xml:space="preserve">
          <source>The refitted estimator is made available at the &lt;code&gt;best_estimator_&lt;/code&gt; attribute and permits using &lt;code&gt;predict&lt;/code&gt; directly on this &lt;code&gt;GridSearchCV&lt;/code&gt; instance.</source>
          <target state="translated">수정 된 추정기는 &lt;code&gt;best_estimator_&lt;/code&gt; 속성 에서 사용 가능 &lt;code&gt;GridSearchCV&lt;/code&gt; 인스턴스 에서 직접 &lt;code&gt;predict&lt;/code&gt; 사용을 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="1178e040e21448dfc3d87635a64add70ee2fc71f" translate="yes" xml:space="preserve">
          <source>The refitted estimator is made available at the &lt;code&gt;best_estimator_&lt;/code&gt; attribute and permits using &lt;code&gt;predict&lt;/code&gt; directly on this &lt;code&gt;RandomizedSearchCV&lt;/code&gt; instance.</source>
          <target state="translated">수정 된 추정기는 &lt;code&gt;best_estimator_&lt;/code&gt; 속성 에서 사용 가능 하며이 &lt;code&gt;RandomizedSearchCV&lt;/code&gt; 인스턴스 에서 직접 &lt;code&gt;predict&lt;/code&gt; 사용을 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="eb2b5c40285ce2a0d935c8174b2b1df487e2e554" translate="yes" xml:space="preserve">
          <source>The regression target or classification labels, if applicable. Dtype is float if numeric, and object if categorical.</source>
          <target state="translated">해당되는 경우 회귀 목표 또는 분류 레이블. Dtype은 숫자이면 float이고 범주 형이면 object입니다.</target>
        </trans-unit>
        <trans-unit id="444eaf2365e5ec07e25a0ed19fde31ede0366773" translate="yes" xml:space="preserve">
          <source>The regressor is used to predict and the &lt;code&gt;inverse_func&lt;/code&gt; or &lt;code&gt;inverse_transform&lt;/code&gt; is applied before returning the prediction.</source>
          <target state="translated">회귀는 예측에 사용되며 예측 을 반환하기 전에 &lt;code&gt;inverse_func&lt;/code&gt; 또는 &lt;code&gt;inverse_transform&lt;/code&gt; 이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="4f20e2edcb6e4e7d6bdbe8de69b9b24c7725d7e1" translate="yes" xml:space="preserve">
          <source>The regularised covariance is:</source>
          <target state="translated">정규화 된 공분산은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4dfecc4cc3d2dd0e68757701d8e0aef7bde77c4d" translate="yes" xml:space="preserve">
          <source>The regularization mixing parameter, with 0 &amp;lt;= l1_ratio &amp;lt;= 1. For l1_ratio = 0 the penalty is an elementwise L2 penalty (aka Frobenius Norm). For l1_ratio = 1 it is an elementwise L1 penalty. For 0 &amp;lt; l1_ratio &amp;lt; 1, the penalty is a combination of L1 and L2.</source>
          <target state="translated">0 &amp;lt;= l1_ratio &amp;lt;= 1 인 정규화 혼합 매개 변수 l1_ratio = 0의 경우 페널티는 요소 별 L2 페널티 (일명 Frobenius Norm)입니다. l1_ratio = 1의 경우 요소 별 L1 페널티입니다. 0 &amp;lt;l1_ratio &amp;lt;1의 경우 패널티는 L1과 L2의 조합입니다.</target>
        </trans-unit>
        <trans-unit id="f1711bca786b8ddb98e81cd17b706bc6925eee44" translate="yes" xml:space="preserve">
          <source>The regularization parameter C in the LogisticRegression. When C is an array, fit will take each regularization parameter in C one by one for LogisticRegression and store results for each one in &lt;code&gt;all_scores_&lt;/code&gt;, where columns and rows represent corresponding reg_parameters and features.</source>
          <target state="translated">LogisticRegression의 정규화 매개 변수 C C가 배열 인 경우 fit은 LogisticRegression에 대해 C의 각 정규화 매개 변수를 하나씩 가져 &lt;code&gt;all_scores_&lt;/code&gt; 에 각각에 대한 결과를 저장합니다 . 여기서 열과 행은 해당 reg_parameters 및 기능을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7865779166b38ce9dcfe2e41f3eba5295cbd3874" translate="yes" xml:space="preserve">
          <source>The regularization parameter alpha parameter in the Lasso. Warning: this is not the alpha parameter in the stability selection article which is scaling.</source>
          <target state="translated">올가미의 정규화 매개 변수 알파 매개 변수입니다. 경고 : 이것은 스케일링중인 안정성 선택 아티클의 알파 매개 변수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0ed37f5cbd4d43ac0f2b6fe6eac86f942c91256a" translate="yes" xml:space="preserve">
          <source>The regularization parameter: the higher alpha, the more regularization, the sparser the inverse covariance.</source>
          <target state="translated">정규화 매개 변수 : 알파가 높을수록 정규화가 많을수록 역공 분산이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="7a1b8c0c02e4613adc42b58f49402bda71930b51" translate="yes" xml:space="preserve">
          <source>The regularized (shrunk) covariance is given by:</source>
          <target state="translated">정규화 된 (공식) 공분산은 다음과 같이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0a5a9291b6a07681a32efc9a88d6f2d7eab96435" translate="yes" xml:space="preserve">
          <source>The regularized (shrunk) covariance is:</source>
          <target state="translated">정규화 (축소) 공분산은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5061099398d935daccb5dfd0421b959c5f17fce1" translate="yes" xml:space="preserve">
          <source>The regularized covariance is given by:</source>
          <target state="translated">정규화 된 공분산은 다음과 같이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bba73ee876f52c89494b029f9c7d24e1239abc01" translate="yes" xml:space="preserve">
          <source>The regularizer is a penalty added to the loss function that shrinks model parameters towards the zero vector using either the squared euclidean norm L2 or the absolute norm L1 or a combination of both (Elastic Net). If the parameter update crosses the 0.0 value because of the regularizer, the update is truncated to 0.0 to allow for learning sparse models and achieve online feature selection.</source>
          <target state="translated">정규화 기는 손실 함수에 추가되는 페널티로, 제곱 유클리드 규범 L2 또는 절대 규범 L1 또는이 둘의 조합 (Elastic Net)을 사용하여 모델 매개 변수를 제로 벡터로 축소합니다. 정규화로 인해 매개 변수 업데이트가 0.0 값을 초과하는 경우 스파 스 모델을 학습하고 온라인 기능 선택을 수행 할 수 있도록 업데이트가 0.0으로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="dccfd8ff5de1af25843574f310f33b70fd7f2fcc" translate="yes" xml:space="preserve">
          <source>The relationship between recall and precision can be observed in the stairstep area of the plot - at the edges of these steps a small change in the threshold considerably reduces precision, with only a minor gain in recall.</source>
          <target state="translated">리콜과 정밀도의 관계는 플롯의 계단 영역에서 관찰 할 수 있습니다. 이러한 단계의 가장자리에서 임계 값의 작은 변화는 리콜의 작은 이득만으로 정밀도를 상당히 감소시킵니다.</target>
        </trans-unit>
        <trans-unit id="e4d930448408dd13aba80cfbcc12949bce572769" translate="yes" xml:space="preserve">
          <source>The relative importance of the fat noisy tail of the singular values profile if &lt;code&gt;effective_rank&lt;/code&gt; is not None.</source>
          <target state="translated">&lt;code&gt;effective_rank&lt;/code&gt; 가 None이 아닌 경우 특이 값 프로파일의 지방 시끄러운 꼬리의 상대적 중요성 .</target>
        </trans-unit>
        <trans-unit id="5b4ee2ad411363b437ce1738486767191903cc20" translate="yes" xml:space="preserve">
          <source>The relative importance of the fat noisy tail of the singular values profile.</source>
          <target state="translated">특이 값 프로파일의 지방 시끄러운 꼬리의 상대적 중요성.</target>
        </trans-unit>
        <trans-unit id="1bf8ab4629789502195bd390130a1b2aa7e78e4e" translate="yes" xml:space="preserve">
          <source>The relative increment in the results before declaring convergence.</source>
          <target state="translated">수렴을 선언하기 전에 결과의 상대적 증가.</target>
        </trans-unit>
        <trans-unit id="ae073568b2b2b27a72266212b55fc2cb2d4cd169" translate="yes" xml:space="preserve">
          <source>The relative rank (i.e. depth) of a feature used as a decision node in a tree can be used to assess the relative importance of that feature with respect to the predictability of the target variable. Features used at the top of the tree contribute to the final prediction decision of a larger fraction of the input samples. The &lt;strong&gt;expected fraction of the samples&lt;/strong&gt; they contribute to can thus be used as an estimate of the &lt;strong&gt;relative importance of the features&lt;/strong&gt;. In scikit-learn, the fraction of samples a feature contributes to is combined with the decrease in impurity from splitting them to create a normalized estimate of the predictive power of that feature.</source>
          <target state="translated">트리에서 결정 노드로서 사용되는 특징의 상대 순위 (즉, 깊이)는 목표 변수의 예측 가능성과 관련하여 그 특징의 상대적 중요성을 평가하기 위해 사용될 수있다. 트리 상단에 사용 된 기능은 입력 샘플의 더 큰 부분에 대한 최종 예측 결정에 기여합니다. 그들이 기여한 &lt;strong&gt;샘플&lt;/strong&gt; 의 &lt;strong&gt;예상 부분은 &lt;/strong&gt;&lt;strong&gt;기능&lt;/strong&gt; 의 &lt;strong&gt;상대적 중요성을&lt;/strong&gt; 추정하는 데 사용될 수 &lt;strong&gt;있습니다&lt;/strong&gt; . scikit-learn에서 피처가 기여하는 샘플의 비율은 해당 피처의 예측력에 대한 표준화 된 추정치를 생성하기 위해 피펫을 분리하는 데 따른 불순물 감소와 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="0fc6d12d2c584bef7c5a793374c798219700e42f" translate="yes" xml:space="preserve">
          <source>The remaining singular values&amp;rsquo; tail is fat, decreasing as:</source>
          <target state="translated">나머지 특이 값의 꼬리는 뚱뚱하며 다음과 같이 감소합니다.</target>
        </trans-unit>
        <trans-unit id="006806051caab55f94063393a09eaea2afaeb022" translate="yes" xml:space="preserve">
          <source>The reported averages include micro average (averaging the total true positives, false negatives and false positives), macro average (averaging the unweighted mean per label), weighted average (averaging the support-weighted mean per label) and sample average (only for multilabel classification). See also &lt;a href=&quot;sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt; for more details on averages.</source>
          <target state="translated">보고 된 평균에는 미시 평균 (총 진양 수 평균, 위음성 및 오 탐지 평균), 매크로 평균 (라벨 당 비가 중 평균 평균), 가중 평균 (라벨 당 평균 가중 평균 평균) 및 샘플 평균 (다중 라벨 만 해당) 분류). 평균에 대한 자세한 내용 은 &lt;a href=&quot;sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt; &lt;code&gt;precision_recall_fscore_support&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8f7b2580f38f68e2972536327271d77d45324cd3" translate="yes" xml:space="preserve">
          <source>The residual matrix of X (Xk+1) block is obtained by the deflation on the current X score: x_score.</source>
          <target state="translated">X (Xk + 1) 블록의 잔차 행렬은 현재 X 점수 (x_score)의 수축으로 구합니다.</target>
        </trans-unit>
        <trans-unit id="18a2377c2d81e0ebb00644fcb1d33204e8d98249" translate="yes" xml:space="preserve">
          <source>The residual matrix of Y (Yk+1) block is obtained by deflation on the current X score. This performs the PLS regression known as PLS2. This mode is prediction oriented.</source>
          <target state="translated">Y (Yk + 1) 블록의 잔차 행렬은 현재 X 점수의 수축으로 구합니다. PLS2로 알려진 PLS 회귀를 수행합니다. 이 모드는 예측 지향적입니다.</target>
        </trans-unit>
        <trans-unit id="953a5ab9533846fbfb5f76815143b2efa25824fa" translate="yes" xml:space="preserve">
          <source>The residual matrix of Y (Yk+1) block is obtained by deflation on the current Y score.</source>
          <target state="translated">Y (Yk + 1) 블록의 잔차 행렬은 현재 Y 점수에 대한 수축으로 구합니다.</target>
        </trans-unit>
        <trans-unit id="4786c768ceb1dac6ca78b9b9b4bd8e26183b7ef9" translate="yes" xml:space="preserve">
          <source>The residual matrix of Y (Yk+1) block is obtained by deflation on the current Y score. This performs a canonical symmetric version of the PLS regression. But slightly different than the CCA. This is mostly used for modeling.</source>
          <target state="translated">Y (Yk + 1) 블록의 잔차 행렬은 현재 Y 점수에 대한 수축으로 구합니다. 이것은 표준 대칭 버전의 PLS 회귀를 수행합니다. 그러나 CCA와 약간 다릅니다. 주로 모델링에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3050c2e87895e094a17bdbd4ce41119b71fa1e6b" translate="yes" xml:space="preserve">
          <source>The result of &lt;a href=&quot;../../modules/linear_model#least-angle-regression&quot;&gt;Least Angle Regression&lt;/a&gt; is much more strongly biased: the difference is reminiscent of the local intensity value of the original image.</source>
          <target state="translated">&lt;a href=&quot;../../modules/linear_model#least-angle-regression&quot;&gt;최소 각도 회귀&lt;/a&gt; 의 결과 는 훨씬 더 치우친 편향입니다. 차이는 원래 이미지의 로컬 강도 값을 연상시킵니다.</target>
        </trans-unit>
        <trans-unit id="2844a2c76b7226f0533d494b8e60503f59b9c4e8" translate="yes" xml:space="preserve">
          <source>The result of &lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt;&lt;code&gt;cross_val_predict&lt;/code&gt;&lt;/a&gt; may be different from those obtained using &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;cross_val_score&lt;/code&gt;&lt;/a&gt; as the elements are grouped in different ways. The function &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;cross_val_score&lt;/code&gt;&lt;/a&gt; takes an average over cross-validation folds, whereas &lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt;&lt;code&gt;cross_val_predict&lt;/code&gt;&lt;/a&gt; simply returns the labels (or probabilities) from several distinct models undistinguished. Thus, &lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt;&lt;code&gt;cross_val_predict&lt;/code&gt;&lt;/a&gt; is not an appropriate measure of generalisation error.</source>
          <target state="translated">결과 &lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt; &lt;code&gt;cross_val_predict&lt;/code&gt; 을&lt;/a&gt; 사용하여 수득 된 것과 상이 할 수 &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;cross_val_score&lt;/code&gt; 을&lt;/a&gt; 요소들은 상이한 방식으로 분류된다. &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;cross_val_score&lt;/code&gt; &lt;/a&gt; 함수 는 교차 검증 배수에 대한 평균을 취하지 만, &lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt; &lt;code&gt;cross_val_predict&lt;/code&gt; 는&lt;/a&gt; 단순히 구별되지 않은 여러 가지 모델에서 레이블 (또는 확률)을 반환합니다. 따라서 &lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt; &lt;code&gt;cross_val_predict&lt;/code&gt; &lt;/a&gt; 는 적절한 일반화 오류 측정 값이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="a51791cdd2f13d5121648ef37a39961811acb402" translate="yes" xml:space="preserve">
          <source>The result of calling &lt;code&gt;fit&lt;/code&gt; on a &lt;code&gt;GridSearchCV&lt;/code&gt; object is a classifier that we can use to &lt;code&gt;predict&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;GridSearchCV&lt;/code&gt; 객체 에 &lt;code&gt;fit&lt;/code&gt; 호출의 결과는 다음 과 같이 &lt;code&gt;predict&lt;/code&gt; 사용할 수있는 분류기입니다 .</target>
        </trans-unit>
        <trans-unit id="b0c66fbb583b621a3ed191db16f52e8d9fa96072" translate="yes" xml:space="preserve">
          <source>The result of this method is identical to np.diag(self(X)); however, it can be evaluated more efficiently since only the diagonal is evaluated.</source>
          <target state="translated">이 방법의 결과는 np.diag (self (X))와 동일합니다. 그러나 대각선 만 평가되므로보다 효율적으로 평가할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="629d23e2107cca0c4a5d2061641bb34723082f2c" translate="yes" xml:space="preserve">
          <source>The result points are &lt;em&gt;not&lt;/em&gt; necessarily sorted by distance to their query point.</source>
          <target state="translated">결과 지점은 쿼리 지점까지의 거리에 따라 정렬 될 필요 는 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="dc861dceeba49e88611e2b04a0b3ec8cf37af89c" translate="yes" xml:space="preserve">
          <source>The resulting Calinski-Harabaz score.</source>
          <target state="translated">결과 Calinski-Harabaz 점수.</target>
        </trans-unit>
        <trans-unit id="91d97654f948931244cdd794d37fd9ac58fe871c" translate="yes" xml:space="preserve">
          <source>The resulting Davies-Bouldin score.</source>
          <target state="translated">결과 Davies-Bouldin 점수.</target>
        </trans-unit>
        <trans-unit id="cfd8b506a89d0c11900fefa11e6003ff64d7a508" translate="yes" xml:space="preserve">
          <source>The resulting Fowlkes-Mallows score.</source>
          <target state="translated">결과적으로 Fowlkes-Mallows 점수가 나옵니다.</target>
        </trans-unit>
        <trans-unit id="82343548ff27f39a450415f81d355404a35e8f50" translate="yes" xml:space="preserve">
          <source>The resulting bicluster structure is block-diagonal, since each row and each column belongs to exactly one bicluster.</source>
          <target state="translated">각 행과 각 열이 정확히 하나의 bicluster에 속하기 때문에 결과적인 bicluster 구조는 블록 대각선입니다.</target>
        </trans-unit>
        <trans-unit id="af7844c7ade28bb6e966130c36de65d0b613a4b9" translate="yes" xml:space="preserve">
          <source>The resulting dataset contains ordinal attributes which can be further used in a &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">결과 데이터 세트에는 &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt; &lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt; &lt;/a&gt; 에서 추가로 사용할 수있는 서수 속성이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="2b9ee0d5d80ffdad0cbeed5368095411cec46727" translate="yes" xml:space="preserve">
          <source>The resulting kernel is defined as k_exp(X, Y) = k(X, Y) ** exponent</source>
          <target state="translated">결과 커널은 k_exp (X, Y) = k (X, Y) ** 지수로 정의됩니다</target>
        </trans-unit>
        <trans-unit id="5f2e205585c93945d55d6e2cae73c2d9f60e4b99" translate="yes" xml:space="preserve">
          <source>The resulting kernel is defined as k_prod(X, Y) = k1(X, Y) * k2(X, Y)</source>
          <target state="translated">결과 커널은 k_prod (X, Y) = k1 (X, Y) * k2 (X, Y)로 정의됩니다</target>
        </trans-unit>
        <trans-unit id="65c4e9abf2f65b5e239efef34833d44fb903de78" translate="yes" xml:space="preserve">
          <source>The resulting kernel is defined as k_sum(X, Y) = k1(X, Y) + k2(X, Y)</source>
          <target state="translated">결과 커널은 k_sum (X, Y) = k1 (X, Y) + k2 (X, Y)로 정의됩니다</target>
        </trans-unit>
        <trans-unit id="fb9ca9651a528caa2f6deb96ee39233de0fa48d4" translate="yes" xml:space="preserve">
          <source>The resulting model is called &lt;em&gt;Bayesian Ridge Regression&lt;/em&gt;, and is similar to the classical &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt;. The parameters \(w\), \(\alpha\) and \(\lambda\) are estimated jointly during the fit of the model. The remaining hyperparameters are the parameters of the gamma priors over \(\alpha\) and \(\lambda\). These are usually chosen to be &lt;em&gt;non-informative&lt;/em&gt;. The parameters are estimated by maximizing the &lt;em&gt;marginal log likelihood&lt;/em&gt;.</source>
          <target state="translated">결과 모델을 &lt;em&gt;베이지안 릿지 회귀&lt;/em&gt; 라고 하며 클래식 &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; 와 비슷합니다 . 매개 변수 \ (w \), \ (\ alpha \) 및 \ (\ lambda \)는 모형 적합 동안 함께 추정됩니다. 나머지 하이퍼 파라미터는 \ (\ alpha \) 및 \ (\ lambda \)에 대한 감마 우선 순위의 매개 변수입니다. 이들은 일반적으로 &lt;em&gt;정보&lt;/em&gt; 가 &lt;em&gt;없는&lt;/em&gt; 것으로 선택됩니다 . &lt;em&gt;한계 로그 우도를&lt;/em&gt; 최대화하여 모수를 추정합니다 .</target>
        </trans-unit>
        <trans-unit id="2ff5ad65586245c919e0a8e1ef11c4948b5606a5" translate="yes" xml:space="preserve">
          <source>The resulting patches are allocated in a dedicated array.</source>
          <target state="translated">결과 패치는 전용 배열로 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="64dfac2f5dc0c167f2eb731c8522fdbbf80022e7" translate="yes" xml:space="preserve">
          <source>The resulting transformer has then learned a supervised, sparse, high-dimensional categorical embedding of the data.</source>
          <target state="translated">결과 트랜스포머는 데이터의 감독되고 드문 고차원 범주 형 임베딩을 배웠습니다.</target>
        </trans-unit>
        <trans-unit id="3f9dd224b05fada5edc12dcb7a4c8d5421d61c2d" translate="yes" xml:space="preserve">
          <source>The return value is a cross-validator which generates the train/test splits via the &lt;code&gt;split&lt;/code&gt; method.</source>
          <target state="translated">리턴 값은 &lt;code&gt;split&lt;/code&gt; 방법을 통해 트레인 / 테스트 스플릿을 생성하는 교차 검증기입니다 .</target>
        </trans-unit>
        <trans-unit id="63a7df0fd8542a7b486adfe1466de16955c3587a" translate="yes" xml:space="preserve">
          <source>The returned dataset is a &lt;code&gt;scikit-learn&lt;/code&gt; &amp;ldquo;bunch&amp;rdquo;: a simple holder object with fields that can be both accessed as python &lt;code&gt;dict&lt;/code&gt; keys or &lt;code&gt;object&lt;/code&gt; attributes for convenience, for instance the &lt;code&gt;target_names&lt;/code&gt; holds the list of the requested category names:</source>
          <target state="translated">반환 된 데이터 셋은 &lt;code&gt;scikit-learn&lt;/code&gt; &amp;ldquo;bunch&amp;rdquo;입니다. 파이썬 &lt;code&gt;dict&lt;/code&gt; 키 또는 편의를 위해 &lt;code&gt;object&lt;/code&gt; 속성 으로 액세스 할 수있는 필드가있는 간단한 홀더 객체 입니다. 예를 들어 &lt;code&gt;target_names&lt;/code&gt; 에는 요청 된 카테고리 이름 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5d262a3b65ccb350b8a1d10b0eaf6eba41fc62d" translate="yes" xml:space="preserve">
          <source>The returned estimates for all classes are ordered by label of classes.</source>
          <target state="translated">모든 클래스에 대해 반환 된 견적은 클래스 레이블별로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="8520c10c8edb7f58383ef36900c902f5398bf785" translate="yes" xml:space="preserve">
          <source>The returned estimates for all classes are ordered by the label of classes.</source>
          <target state="translated">모든 클래스에 대해 반환 된 견적은 클래스 레이블로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9fa1a308376d0d44aa58fe9b54fd102c1f0b956a" translate="yes" xml:space="preserve">
          <source>The returned object is a MemorizedFunc object, that is callable (behaves like a function), but offers extra methods for cache lookup and management. See the documentation for &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/memory.html#joblib.memory.MemorizedFunc&quot;&gt;&lt;code&gt;joblib.memory.MemorizedFunc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 된 개체는 MemorizedFunc 개체로, 함수처럼 동작하지만 캐시 조회 및 관리를위한 추가 메서드를 제공합니다. &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/memory.html#joblib.memory.MemorizedFunc&quot;&gt; &lt;code&gt;joblib.memory.MemorizedFunc&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a1e44716730f4f771067bf0b441674e2034e883" translate="yes" xml:space="preserve">
          <source>The richer dictionary on the right is not larger in size, heavier subsampling is performed in order to stay on the same order of magnitude.</source>
          <target state="translated">오른쪽의 더 풍부한 사전은 크기가 크지 않으며 동일한 크기로 유지하기 위해 더 큰 서브 샘플링이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6f396634dd18eef11c3d60404319f2831b13040b" translate="yes" xml:space="preserve">
          <source>The right figures correspond to the same plots but using instead a bagging ensemble of decision trees. In both figures, we can observe that the bias term is larger than in the previous case. In the upper right figure, the difference between the average prediction (in cyan) and the best possible model is larger (e.g., notice the offset around &lt;code&gt;x=2&lt;/code&gt;). In the lower right figure, the bias curve is also slightly higher than in the lower left figure. In terms of variance however, the beam of predictions is narrower, which suggests that the variance is lower. Indeed, as the lower right figure confirms, the variance term (in green) is lower than for single decision trees. Overall, the bias- variance decomposition is therefore no longer the same. The tradeoff is better for bagging: averaging several decision trees fit on bootstrap copies of the dataset slightly increases the bias term but allows for a larger reduction of the variance, which results in a lower overall mean squared error (compare the red curves int the lower figures). The script output also confirms this intuition. The total error of the bagging ensemble is lower than the total error of a single decision tree, and this difference indeed mainly stems from a reduced variance.</source>
          <target state="translated">오른쪽 그림은 동일한 플롯에 해당하지만 대신에 결정 트리의 배깅 앙상블을 사용합니다. 두 그림 모두에서, 바이어스 항이 이전 경우보다 더 크다는 것을 알 수 있습니다. 오른쪽 위 그림에서 평균 예측 (청록색)과 최상의 모델 간의 차이가 더 큽니다 (예 : &lt;code&gt;x=2&lt;/code&gt; 주위의 오프셋을 확인하십시오)). 오른쪽 아래 그림에서 바이어스 곡선은 왼쪽 아래 그림보다 약간 높습니다. 그러나 분산 측면에서 예측 빔은 더 좁아서 분산이 더 낮음을 나타냅니다. 실제로 오른쪽 아래 그림에서 확인할 수 있듯이 분산 용어 (녹색)는 단일 의사 결정 트리보다 낮습니다. 따라서 편향 분산 분석은 더 이상 동일하지 않습니다. 데이터 세트의 부트 스트랩 사본에 맞는 여러 의사 결정 트리를 평균하면 바이어스 용어가 약간 증가하지만 분산의 큰 감소를 허용하여 전체 평균 제곱 오차가 낮아집니다 (빨간색 곡선과 낮은 곡선 비교) 그림). 스크립트 출력도이 직관을 확인합니다. 배깅 앙상블의 총 오류는 단일 의사 결정 트리의 총 오류보다 낮습니다.이 차이는 실제로 분산 감소에서 비롯됩니다.</target>
        </trans-unit>
        <trans-unit id="4281560832d700a912bb9768ad9253748f3986db" translate="yes" xml:space="preserve">
          <source>The right plot shows the mean squared error between the coefficients found by the model and the chosen vector w. Less regularised models retrieve the exact coefficients (error is equal to 0), stronger regularised models increase the error.</source>
          <target state="translated">오른쪽 그림은 모형에서 찾은 계수와 선택한 벡터 w 사이의 평균 제곱 오차를 보여줍니다. 덜 정규화 된 모델은 정확한 계수를 검색하고 (오류는 0과 같음), 더 정규화 된 모델은 오류를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="e91440f2fdf83c048c6ec145aa4ba8b2408d7a77" translate="yes" xml:space="preserve">
          <source>The robust MCD, that has a low error provided \(n_\text{samples} &amp;gt; 5n_\text{features}\)</source>
          <target state="translated">\ (n_ \ text {samples}&amp;gt; 5n_ \ text {features} \)이면 오류가 적은 강력한 MCD</target>
        </trans-unit>
        <trans-unit id="17f09e161fdb50b4bf88ea2669cf0485f026fd48" translate="yes" xml:space="preserve">
          <source>The rows being the samples and the columns being: Sepal Length, Sepal Width, Petal Length and Petal Width.</source>
          <target state="translated">행은 샘플이고 열은 Sepal Length, Sepal Width, Petal Length 및 Petal Width입니다.</target>
        </trans-unit>
        <trans-unit id="075c19426795ecca36fadcd5142db0c818eae0c2" translate="yes" xml:space="preserve">
          <source>The s parameter used to randomly scale the penalty of different features. Should be between 0 and 1.</source>
          <target state="translated">s 매개 변수는 다른 기능의 패널티를 임의로 조정하는 데 사용됩니다. 0과 1 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8e103a284fd35ca6afde93378ca71e413fedf538" translate="yes" xml:space="preserve">
          <source>The same group will not appear in two different folds (the number of distinct groups has to be at least equal to the number of folds).</source>
          <target state="translated">동일한 그룹은 서로 다른 두 개의 접기에 나타나지 않습니다 (개별 그룹의 수는 최소한 접기 수와 같아야합니다).</target>
        </trans-unit>
        <trans-unit id="0bd48a9cd63a739602e7de633cedbe34c0721a4f" translate="yes" xml:space="preserve">
          <source>The same instance of the transformer can then be applied to some new test data unseen during the fit call: the same scaling and shifting operations will be applied to be consistent with the transformation performed on the train data:</source>
          <target state="translated">그런 다음 변압기의 동일한 인스턴스를 맞춤 호출 중에 보이지 않는 새로운 테스트 데이터에 적용 할 수 있습니다. 기차 데이터에서 수행 된 변환과 일치하도록 동일한 스케일링 및 변속 작업이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c16a50cac2b1dc1101733e88917cf565ad0ad55a" translate="yes" xml:space="preserve">
          <source>The sample counts that are shown are weighted with any sample_weights that might be present.</source>
          <target state="translated">표시되는 샘플 수에는 존재할 수있는 sample_weights가 가중됩니다.</target>
        </trans-unit>
        <trans-unit id="da56cc1e3278be97e394d14d7afaac125d975593" translate="yes" xml:space="preserve">
          <source>The sample weighting rescales the C parameter, which means that the classifier puts more emphasis on getting these points right. The effect might often be subtle. To emphasize the effect here, we particularly weight outliers, making the deformation of the decision boundary very visible.</source>
          <target state="translated">샘플 가중치는 C 매개 변수의 크기를 조정하므로 분류자가 이러한 점을 올바르게 얻는 데 더 중점을 둡니다. 효과는 종종 미묘 할 수 있습니다. 여기에서 그 효과를 강조하기 위해 우리는 특히 특이 치를 가중시켜 결정 경계의 변형을 매우 눈에 띄게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="67f0f1888d07b20765c25e213bac379b2147854b" translate="yes" xml:space="preserve">
          <source>The sampled subsets of integer. The subset of selected integer might not be randomized, see the method argument.</source>
          <target state="translated">정수의 샘플링 된 부분 집합. 선택된 정수의 부분 집합이 무작위 화되지 않을 수 있습니다. 메소드 인수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="582c77a6e6e223c6a451ff779c949c2d01a1e4b1" translate="yes" xml:space="preserve">
          <source>The samples in this dataset correspond to 30&amp;times;30m patches of forest in the US, collected for the task of predicting each patch&amp;rsquo;s cover type, i.e. the dominant species of tree. There are seven covertypes, making this a multiclass classification problem. Each sample has 54 features, described on the &lt;a href=&quot;http://archive.ics.uci.edu/ml/datasets/Covertype&quot;&gt;dataset&amp;rsquo;s homepage&lt;/a&gt;. Some of the features are boolean indicators, while others are discrete or continuous measurements.</source>
          <target state="translated">이 데이터 세트의 샘플은 미국에서 30x30m의 산림 패치에 해당하며 각 패치의 표지 유형, 즉 지배적 인 나무 종을 예측하는 작업을 위해 수집되었습니다. 7 가지의 커버 타입이 있는데, 이것이 멀티 클래스 분류 문제가됩니다. 각 샘플에는 &lt;a href=&quot;http://archive.ics.uci.edu/ml/datasets/Covertype&quot;&gt;데이터 세트 홈페이지&lt;/a&gt; 에 설명 된 54 개의 기능 이 있습니다 . 일부 기능은 부울 표시기이고 다른 기능은 불연속 측정입니다.</target>
        </trans-unit>
        <trans-unit id="3faf112740a094590f64233617c65a5fa097ee8f" translate="yes" xml:space="preserve">
          <source>The samples.</source>
          <target state="translated">샘플.</target>
        </trans-unit>
        <trans-unit id="1aa98782517735bf609d139ad8030ba79e53e38f" translate="yes" xml:space="preserve">
          <source>The scaler instance can then be used on new data to transform it the same way it did on the training set:</source>
          <target state="translated">그런 다음 스케일러 인스턴스를 새로운 데이터에 사용하여 훈련 세트에서와 동일한 방식으로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fae25cf01c011421f9b169e383c16cc5b0e7dc5d" translate="yes" xml:space="preserve">
          <source>The scikit-learn project provides a set of machine learning tools that can be used both for novelty or outlier detection. This strategy is implemented with objects learning in an unsupervised way from the data:</source>
          <target state="translated">scikit-learn 프로젝트는 참신함 또는 이상치 탐지에 모두 사용할 수있는 일련의 기계 학습 도구를 제공합니다. 이 전략은 데이터에서 감독되지 않은 방식으로 학습하는 객체로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="b2bcbd53d39d84e38eaccf61f40a5b7e3d9f1072" translate="yes" xml:space="preserve">
          <source>The scikit-learn provides an object &lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; that fits a robust covariance estimate to the data, and thus fits an ellipse to the central data points, ignoring points outside the central mode.</source>
          <target state="translated">scikit-learn은 개체 &lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt; &lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt; &lt;/a&gt; 을 제공합니다. EllipticEnvelope 는 데이터에 대한 강력한 공분산 추정값을 맞추므로 중앙 모드 외부의 점을 무시하고 중앙 데이터 점에 타원을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="c6f20ecec2f178819b742529ff67a9012c4e74b9" translate="yes" xml:space="preserve">
          <source>The score above which features should be selected.</source>
          <target state="translated">기능을 선택해야하는 점수입니다.</target>
        </trans-unit>
        <trans-unit id="fbc2c7bdd77bdb62a30109845f32d883a40f3289" translate="yes" xml:space="preserve">
          <source>The score array for test scores on each cv split.</source>
          <target state="translated">각 cv 스플릿에서 테스트 점수에 대한 점수 배열.</target>
        </trans-unit>
        <trans-unit id="21374122c0da50ea660a65ea3274fa15ca9abbe5" translate="yes" xml:space="preserve">
          <source>The score array for train scores on each cv split. This is available only if &lt;code&gt;return_train_score&lt;/code&gt; parameter is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">각 이력서 분할에서 열차 점수의 점수 배열입니다. &lt;code&gt;return_train_score&lt;/code&gt; 매개 변수가 &lt;code&gt;True&lt;/code&gt; 인 경우에만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9f0e8fbf15571f500f19345d44e98db663f1949" translate="yes" xml:space="preserve">
          <source>The score is bounded between -1 for incorrect clustering and +1 for highly dense clustering. Scores around zero indicate overlapping clusters.</source>
          <target state="translated">점수는 잘못된 클러스터링의 경우 -1과 고밀도 클러스터링의 경우 +1 사이로 제한됩니다. 0 주위의 점수는 겹치는 클러스터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="10419dac5247bd799d768931a57ece7edc36ff14" translate="yes" xml:space="preserve">
          <source>The score is defined as ratio between the within-cluster dispersion and the between-cluster dispersion.</source>
          <target state="translated">스코어는 클러스터 내 분산액과 클러스터 간 분산액 사이의 비율로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a5fc2e46656049d91b95dd6363e2ef13687eb710" translate="yes" xml:space="preserve">
          <source>The score is defined as the ratio of within-cluster distances to between-cluster distances.</source>
          <target state="translated">점수는 클러스터 내 거리와 클러스터 간 거리의 비율로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a9ccc42adfd31440d43d06c5c4aab96f5e8222f0" translate="yes" xml:space="preserve">
          <source>The score is fast to compute</source>
          <target state="translated">점수는 계산이 빠릅니다</target>
        </trans-unit>
        <trans-unit id="298450881e1d83a617f17a47cba5b823081f8332" translate="yes" xml:space="preserve">
          <source>The score is higher when clusters are dense and well separated, which relates to a standard concept of a cluster.</source>
          <target state="translated">클러스터가 밀도가 높고 분리되어 있으면 클러스터의 표준 개념과 관련하여 점수가 높습니다.</target>
        </trans-unit>
        <trans-unit id="8ebec04d9506729ea096f793265427e501ac6359" translate="yes" xml:space="preserve">
          <source>The score ranges from 0 to 1, or when &lt;code&gt;adjusted=True&lt;/code&gt; is used, it rescaled to the range \(\frac{1}{1 - \text{n\_classes}}\) to 1, inclusive, with performance at random scoring 0.</source>
          <target state="translated">점수 범위는 0에서 1까지이며, &lt;code&gt;adjusted=True&lt;/code&gt; 참을 사용하면 임의의 성능으로 \ (\ frac {1} {1-\ text {n \ _classes}} \)에서 1까지 범위로 조정됩니다. 점수 0.</target>
        </trans-unit>
        <trans-unit id="99f201771620c880cb8fcf0a4290517d17eb61e7" translate="yes" xml:space="preserve">
          <source>The score ranges from 0 to 1. A high value indicates a good similarity between two clusters.</source>
          <target state="translated">점수의 범위는 0에서 1입니다. 값이 높을수록 두 군집간에 유사성이 우수함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="67703aed8c056d27307c0c36c3685d8f65de746b" translate="yes" xml:space="preserve">
          <source>The scorer callable object / function must have its signature as &lt;code&gt;scorer(estimator, X, y)&lt;/code&gt;.</source>
          <target state="translated">스코어러 호출 가능 오브젝트 / 함수에는 &lt;code&gt;scorer(estimator, X, y)&lt;/code&gt; 로 서명이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5e77d6fe812bc8f046068c5fa078dda3a1146e44" translate="yes" xml:space="preserve">
          <source>The scorer.</source>
          <target state="translated">득점자.</target>
        </trans-unit>
        <trans-unit id="dd1c18a79b397962bdc5e0312d35f12a484f084a" translate="yes" xml:space="preserve">
          <source>The scores for each feature along the path.</source>
          <target state="translated">경로를 따라 각 지형지 물의 점수입니다.</target>
        </trans-unit>
        <trans-unit id="81a1b1406082100f034b3df6c2ec24562a123854" translate="yes" xml:space="preserve">
          <source>The scores obtained for each permutations.</source>
          <target state="translated">각 순열에 대해 얻은 점수입니다.</target>
        </trans-unit>
        <trans-unit id="12753b21f50efe6accfab886a283f46c3614c6fe" translate="yes" xml:space="preserve">
          <source>The scores of HuberRegressor may not be compared directly to both TheilSen and RANSAC because it does not attempt to completely filter the outliers but lessen their effect.</source>
          <target state="translated">HuberRegressor의 점수는 특이 치를 완전히 필터링하지는 않지만 효과를 줄이기 때문에 TheilSen 및 RANSAC와 직접 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="48d352a6767e745c328aec9195da7218a62bd613" translate="yes" xml:space="preserve">
          <source>The scores of all the scorers are available in the &lt;code&gt;cv_results_&lt;/code&gt; dict at keys ending in &lt;code&gt;'_&amp;lt;scorer_name&amp;gt;'&lt;/code&gt; (&lt;code&gt;'mean_test_precision'&lt;/code&gt;, &lt;code&gt;'rank_test_precision'&lt;/code&gt;, etc&amp;hellip;)</source>
          <target state="translated">모든 득점자의 점수는 &lt;code&gt;'_&amp;lt;scorer_name&amp;gt;'&lt;/code&gt; ( &lt;code&gt;'mean_test_precision'&lt;/code&gt; , &lt;code&gt;'rank_test_precision'&lt;/code&gt; 등으로 끝나는 키 의 &lt;code&gt;cv_results_&lt;/code&gt; dict에서 사용할 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="1676248dcc2b8fd0688c9d8da4bc193152185788" translate="yes" xml:space="preserve">
          <source>The search for the optimal penalization parameter (alpha) is done on an iteratively refined grid: first the cross-validated scores on a grid are computed, then a new refined grid is centered around the maximum, and so on.</source>
          <target state="translated">최적의 벌칙 매개 변수 (알파)에 대한 검색은 반복적으로 정제 된 그리드에서 수행됩니다. 먼저 그리드의 교차 검증 된 점수가 계산 된 다음 새로운 정제 된 그리드가 최대 값을 중심으로하는 방식으로 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="929b69ae47a09aabafb756d8ff0633d79e90c985" translate="yes" xml:space="preserve">
          <source>The searched parameter.</source>
          <target state="translated">검색된 매개 변수.</target>
        </trans-unit>
        <trans-unit id="0d9a4b24aef1596fe1105c7b9e28ffdd6e589d45" translate="yes" xml:space="preserve">
          <source>The second base-kernel of the product-kernel</source>
          <target state="translated">제품 커널의 두 번째 기본 커널</target>
        </trans-unit>
        <trans-unit id="2d0afedea31e6e04d617f4edd60a150835c5916d" translate="yes" xml:space="preserve">
          <source>The second base-kernel of the sum-kernel</source>
          <target state="translated">합 커널의 두 번째 기본 커널</target>
        </trans-unit>
        <trans-unit id="544eb81771c23c2f620b00755dbcd12f00cacc66" translate="yes" xml:space="preserve">
          <source>The second example shows the ability of the Minimum Covariance Determinant robust estimator of covariance to concentrate on the main mode of the data distribution: the location seems to be well estimated, although the covariance is hard to estimate due to the banana-shaped distribution. Anyway, we can get rid of some outlying observations. The One-Class SVM is able to capture the real data structure, but the difficulty is to adjust its kernel bandwidth parameter so as to obtain a good compromise between the shape of the data scatter matrix and the risk of over-fitting the data.</source>
          <target state="translated">두 번째 예는 데이터 분산의 주요 모드에 집중할 수있는 최소 공분산 결정 성 공분산의 강력한 추정량의 능력을 보여줍니다. 바나나 모양의 분포로 인해 공분산을 추정하기는 어렵지만 위치는 잘 추정되는 것 같습니다. 어쨌든, 우리는 외적인 관찰을 제거 할 수 있습니다. One-Class SVM은 실제 데이터 구조를 캡처 할 수 있지만 데이터 스 캐터 매트릭스의 모양과 데이터가 과적 합 될 위험 사이에서 적절한 절충을 얻기 위해 커널 대역폭 매개 변수를 조정하는 것이 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="5a46c67db9268b64cb76670e9e1b845e906b608f" translate="yes" xml:space="preserve">
          <source>The second figure shows the calibration curve of a linear support-vector classifier (LinearSVC). LinearSVC shows the opposite behavior as Gaussian naive Bayes: the calibration curve has a sigmoid curve, which is typical for an under-confident classifier. In the case of LinearSVC, this is caused by the margin property of the hinge loss, which lets the model focus on hard samples that are close to the decision boundary (the support vectors).</source>
          <target state="translated">두 번째 그림은 선형지지 벡터 분류기 (LinearSVC)의 교정 곡선을 보여줍니다. LinearSVC는 Gaussian naive Bayes와 반대되는 동작을 보여줍니다. 교정 곡선에는 시그 모이 드 곡선이 있으며 이는 과소 분류기에서 일반적입니다. LinearSVC의 경우 힌지 손실의 마진 속성으로 인해 결정 경계 (지원 벡터)에 가까운 하드 샘플에 모델이 초점을 맞출 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e56142dda4889d67d8f5448567e56cb678c48e3c" translate="yes" xml:space="preserve">
          <source>The second figure shows the log-marginal-likelihood for different choices of the kernel&amp;rsquo;s hyperparameters, highlighting the two choices of the hyperparameters used in the first figure by black dots.</source>
          <target state="translated">두 번째 그림은 첫 번째 그림에서 사용 된 두 개의 하이퍼 매개 변수 중에서 검은 점으로 강조 표시된 두 가지 하이퍼 하이퍼 매개 변수 선택에 대한 로그 한계 가능성을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="69a6b8988bb4a9da22ae7a8129c60d4bfa19ab9d" translate="yes" xml:space="preserve">
          <source>The second loader is typically used for the face verification task: each sample is a pair of two picture belonging or not to the same person:</source>
          <target state="translated">두 번째 로더는 일반적으로 얼굴 확인 작업에 사용됩니다. 각 샘플은 동일한 사람에 속하는지 아닌 두 개의 그림 쌍입니다.</target>
        </trans-unit>
        <trans-unit id="80a536b57ba05b05dbab01bd549517eccd6caab7" translate="yes" xml:space="preserve">
          <source>The second model is a Bayesian Gaussian Mixture Model with a Dirichlet process prior fit with variational inference. The low value of the concentration prior makes the model favor a lower number of active components. This models &amp;ldquo;decides&amp;rdquo; to focus its modeling power on the big picture of the structure of the dataset: groups of points with alternating directions modeled by non-diagonal covariance matrices. Those alternating directions roughly capture the alternating nature of the original sine signal.</source>
          <target state="translated">두 번째 모델은 변형 추론에 적합하기 전에 Dirichlet 프로세스를 갖춘 베이지안 가우스 혼합 모델입니다. 이전 농도의 낮은 값은 모델이 적은 수의 활성 성분을 선호하게합니다. 이 모델은 비대 각 공분산 행렬에 의해 모델링 된 교대 방향을 갖는 점 그룹 인 데이터 세트 구조의 큰 그림에 모델링 능력을 집중시키기 위해 &quot;결정&quot;을 모델링합니다. 이러한 교번 방향은 원래 사인 신호의 교번 특성을 대략적으로 포착합니다.</target>
        </trans-unit>
        <trans-unit id="ce63f012cd3f9d5ba6717aef4dc1ee5e80e67c9d" translate="yes" xml:space="preserve">
          <source>The second one has a smaller noise level and shorter length scale, which explains most of the variation by the noise-free functional relationship. The second model has a higher likelihood; however, depending on the initial value for the hyperparameters, the gradient-based optimization might also converge to the high-noise solution. It is thus important to repeat the optimization several times for different initializations.</source>
          <target state="translated">두 번째는 더 작은 소음 수준과 더 짧은 길이의 스케일을 가지며, 이는 무 잡음 기능 관계에 의한 대부분의 변동을 설명합니다. 두 번째 모델은 가능성이 높습니다. 그러나 하이퍼 파라미터의 초기 값에 따라 그래디언트 기반 최적화도 고 소음 솔루션으로 수렴 될 수 있습니다. 따라서 다른 초기화에 대해 최적화를 여러 번 반복하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="d5dcf1b11e556ea9365934aae9c750b0508ecb89" translate="yes" xml:space="preserve">
          <source>The second plot demonstrate one single run of the &lt;code&gt;MiniBatchKMeans&lt;/code&gt; estimator using a &lt;code&gt;init=&quot;random&quot;&lt;/code&gt; and &lt;code&gt;n_init=1&lt;/code&gt;. This run leads to a bad convergence (local optimum) with estimated centers stuck between ground truth clusters.</source>
          <target state="translated">두 번째 그림 은 &lt;code&gt;init=&quot;random&quot;&lt;/code&gt; 및 &lt;code&gt;n_init=1&lt;/code&gt; 을 사용하여 &lt;code&gt;MiniBatchKMeans&lt;/code&gt; 추정기 의 단일 실행을 보여줍니다 . 이 실행은 추정 센터가 지상 진실 클러스터 사이에 붙어있는 수렴 (로컬 최적)을 초래합니다.</target>
        </trans-unit>
        <trans-unit id="41338f596d871499307d96f69f697b91afdfa1c4" translate="yes" xml:space="preserve">
          <source>The second plot is a heatmap of the classifier&amp;rsquo;s cross-validation accuracy as a function of &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;gamma&lt;/code&gt;. For this example we explore a relatively large grid for illustration purposes. In practice, a logarithmic grid from \(10^{-3}\) to \(10^3\) is usually sufficient. If the best parameters lie on the boundaries of the grid, it can be extended in that direction in a subsequent search.</source>
          <target state="translated">두 번째 플롯은 &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;gamma&lt;/code&gt; 의 함수로서 분류기의 교차 검증 정확도에 대한 히트 맵입니다 . 이 예에서는 설명을 위해 비교적 큰 격자를 살펴 봅니다. 실제로 \ (10 ​​^ {-3} \)에서 \ (10 ​​^ 3 \)까지의 로그 그리드로 충분합니다. 최상의 매개 변수가 그리드 경계에있는 경우 후속 검색에서 해당 방향으로 확장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57fb8e025f7ec94b6d1e30748cbff5561f1e9901" translate="yes" xml:space="preserve">
          <source>The second plot shows that an increase of the admissible distortion &lt;code&gt;eps&lt;/code&gt; allows to reduce drastically the minimal number of dimensions &lt;code&gt;n_components&lt;/code&gt; for a given number of samples &lt;code&gt;n_samples&lt;/code&gt;</source>
          <target state="translated">두 번째 플롯은 허용 가능한 왜곡 &lt;code&gt;eps&lt;/code&gt; 의 증가가 주어진 수의 샘플 &lt;code&gt;n_samples&lt;/code&gt; 에 대한 최소 크기 &lt;code&gt;n_components&lt;/code&gt; 를 크게 줄일 수 있음을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9c6c0ec72e2e2da2def0a20a979b162b66b4f25f" translate="yes" xml:space="preserve">
          <source>The second plot visualized the decision surfaces of the RBF kernel SVM and the linear SVM with approximate kernel maps. The plot shows decision surfaces of the classifiers projected onto the first two principal components of the data. This visualization should be taken with a grain of salt since it is just an interesting slice through the decision surface in 64 dimensions. In particular note that a datapoint (represented as a dot) does not necessarily be classified into the region it is lying in, since it will not lie on the plane that the first two principal components span.</source>
          <target state="translated">두 번째 줄거리는 대략적인 커널 맵으로 RBF 커널 SVM과 선형 SVM의 결정 표면을 시각화했습니다. 이 도표는 데이터의 처음 두 주요 구성 요소에 투영 된 분류기의 결정 표면을 보여줍니다. 이 시각화는 결정 표면을 통해 64 차원의 흥미로운 조각이기 때문에 소금 한 알갱이로 가져와야합니다. 특히 데이터 점 (점으로 표시됨)은 처음 두 주요 구성 요소가 포함 된 평면에 놓이지 않기 때문에 데이터 영역이 놓여있는 영역으로 반드시 분류되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="a7aa029b23a556153d8e76aebf5393705fc5a931" translate="yes" xml:space="preserve">
          <source>The second use case is to build a completely custom scorer object from a simple python function using &lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt;&lt;code&gt;make_scorer&lt;/code&gt;&lt;/a&gt;, which can take several parameters:</source>
          <target state="translated">두 번째 유스 케이스는 &lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt; &lt;code&gt;make_scorer&lt;/code&gt; 를&lt;/a&gt; 사용하여 간단한 파이썬 함수에서 완전히 사용자 정의 스코어러 오브젝트를 빌드하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c00cf63770db0bb2225569e421e3076426129a55" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator for adding small noise to continuous variables in order to remove repeated values. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;.</source>
          <target state="translated">반복되는 값을 제거하기 위해 연속 변수에 작은 노이즈를 추가하기위한 의사 난수 생성기의 시드입니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06cdf003d2aac9179d5700a91f249ff0a94d6f8e" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator that selects a random feature to update. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;. Used when &lt;code&gt;selection&lt;/code&gt; == &amp;lsquo;random&amp;rsquo;</source>
          <target state="translated">업데이트 할 임의의 기능을 선택하는 의사 난수 생성기의 시드입니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; . 사용시 &lt;code&gt;selection&lt;/code&gt; == '임의'</target>
        </trans-unit>
        <trans-unit id="0bc2f2e46810cbdc913e04d68694f60b2b83e0d8" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator that selects a random feature to update. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;. Used when &lt;code&gt;selection&lt;/code&gt; == &amp;lsquo;random&amp;rsquo;.</source>
          <target state="translated">업데이트 할 임의의 기능을 선택하는 의사 난수 생성기의 시드입니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; . &lt;code&gt;selection&lt;/code&gt; == 'random'일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c9b5b4205f687d2590f4c80ac04919e87b2e36db" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator to use when shuffling the data for the dual coordinate descent (if &lt;code&gt;dual=True&lt;/code&gt;). When &lt;code&gt;dual=False&lt;/code&gt; the underlying implementation of &lt;a href=&quot;#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; is not random and &lt;code&gt;random_state&lt;/code&gt; has no effect on the results. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;.</source>
          <target state="translated">이중 좌표 하강 ( &lt;code&gt;dual=True&lt;/code&gt; 인 경우)에 대한 데이터를 섞을 때 사용할 의사 난수 생성기의 시드입니다 . 때 &lt;code&gt;dual=False&lt;/code&gt; 의 기본이되는 구현 &lt;a href=&quot;#sklearn.svm.LinearSVC&quot;&gt; &lt;code&gt;LinearSVC&lt;/code&gt; 은&lt;/a&gt; 무작위로하지 않고 &lt;code&gt;random_state&lt;/code&gt; 는 결과에 영향을주지 않습니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f24e839d9f0c07b405eb078c6f50d58ca84b7fe6" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator to use when shuffling the data. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;.</source>
          <target state="translated">데이터를 섞을 때 사용할 의사 난수 생성기의 시드입니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58318e33f8140e9303ba15931c5e93b11c5df63e" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator to use when shuffling the data. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;. Used when &lt;code&gt;solver&lt;/code&gt; == &amp;lsquo;sag&amp;rsquo; or &amp;lsquo;liblinear&amp;rsquo;.</source>
          <target state="translated">데이터를 섞을 때 사용할 의사 난수 생성기의 시드입니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; . &lt;code&gt;solver&lt;/code&gt; == 'sag'또는 'liblinear'일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e64edd7c479eb06717df1495b4d044bfaa961d0" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator to use when shuffling the data. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;. Used when &lt;code&gt;solver&lt;/code&gt; == &amp;lsquo;sag&amp;rsquo;.</source>
          <target state="translated">데이터를 섞을 때 사용할 의사 난수 생성기의 시드입니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; . &lt;code&gt;solver&lt;/code&gt; == 'sag'일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="db7139d208134a3c43811feaafd4124e4ee369a8" translate="yes" xml:space="preserve">
          <source>The seed of the pseudo random number generator used when shuffling the data for probability estimates. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;.</source>
          <target state="translated">확률 추정을 위해 데이터를 섞을 때 사용되는 의사 난수 생성기의 시드입니다. int이면 random_state는 난수 생성기에서 사용하는 시드입니다. RandomState 인스턴스 인 경우 random_state는 난수 생성기입니다. 없음 경우, 난수 발생기에 사용되는 RandomState 인스턴스입니다 &lt;code&gt;np.random&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1665069fc9c4c9d9dabb36f1931e17db4945528" translate="yes" xml:space="preserve">
          <source>The set of F values.</source>
          <target state="translated">F 값 세트입니다.</target>
        </trans-unit>
        <trans-unit id="d03a062cac2973dfcc9173b5fc93f7520db21987" translate="yes" xml:space="preserve">
          <source>The set of labels can be different for each output variable. For instance, a sample could be assigned &amp;ldquo;pear&amp;rdquo; for an output variable that takes possible values in a finite set of species such as &amp;ldquo;pear&amp;rdquo;, &amp;ldquo;apple&amp;rdquo;; and &amp;ldquo;blue&amp;rdquo; or &amp;ldquo;green&amp;rdquo; for a second output variable that takes possible values in a finite set of colors such as &amp;ldquo;green&amp;rdquo;, &amp;ldquo;red&amp;rdquo;, &amp;ldquo;blue&amp;rdquo;, &amp;ldquo;yellow&amp;rdquo;&amp;hellip;</source>
          <target state="translated">레이블 세트는 각 출력 변수마다 다를 수 있습니다. 예를 들어, 샘플은&amp;ldquo;pear&amp;rdquo;,&amp;ldquo;apple&amp;rdquo;과 같은 유한 종 세트에서 가능한 값을 취하는 출력 변수에 대해&amp;ldquo;pear&amp;rdquo;로 할당 될 수 있습니다. &amp;ldquo;green&amp;rdquo;,&amp;ldquo;red&amp;rdquo;,&amp;ldquo;blue&amp;rdquo;,&amp;ldquo;yellow&amp;rdquo;와 같은 유한 한 색상 세트로 가능한 값을 취하는 두 번째 출력 변수의 경우&amp;ldquo;blue&amp;rdquo;또는&amp;ldquo;green&amp;rdquo;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="143c46009e14705cc3449ca19bc2f349662d5283" translate="yes" xml:space="preserve">
          <source>The set of labels for each sample such that &lt;code&gt;y[i]&lt;/code&gt; consists of &lt;code&gt;classes_[j]&lt;/code&gt; for each &lt;code&gt;yt[i, j] == 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y[i]&lt;/code&gt; &lt;code&gt;classes_[j]&lt;/code&gt; 가 각 &lt;code&gt;yt[i, j] == 1&lt;/code&gt; 대한 classes_ [j] 로 구성 되도록 각 샘플에 대한 레이블 세트 .</target>
        </trans-unit>
        <trans-unit id="2d10d69a1c09af3eb9fb75910b7cd4ebd942ac2e" translate="yes" xml:space="preserve">
          <source>The set of labels to include when &lt;code&gt;average != 'binary'&lt;/code&gt;, and their order if &lt;code&gt;average is None&lt;/code&gt;. Labels present in the data can be excluded, for example to calculate a multiclass average ignoring a majority negative class, while labels not present in the data will result in 0 components in a macro average. For multilabel targets, labels are column indices. By default, all labels in &lt;code&gt;y_true&lt;/code&gt; and &lt;code&gt;y_pred&lt;/code&gt; are used in sorted order.</source>
          <target state="translated">&lt;code&gt;average != 'binary'&lt;/code&gt; 일 때 포함 할 레이블 세트 와 &lt;code&gt;average is None&lt;/code&gt; 경우 순서 입니다. 예를 들어 다수의 음수 클래스를 무시하는 멀티 클래스 평균을 계산하기 위해 데이터에 존재하는 레이블을 제외 할 수 있지만, 데이터에 존재하지 않는 레이블은 매크로 평균에서 0 개의 구성 요소가됩니다. 다중 레이블 대상의 경우 레이블은 열 인덱스입니다. 기본적으로 &lt;code&gt;y_true&lt;/code&gt; 및 &lt;code&gt;y_pred&lt;/code&gt; 의 모든 레이블 은 정렬 된 순서로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fc018ce1a1ad3dcbb813a9b943d602142a80bfe5" translate="yes" xml:space="preserve">
          <source>The set of p-values.</source>
          <target state="translated">p- 값 세트입니다.</target>
        </trans-unit>
        <trans-unit id="ae935a83c454932c18aabaf5527bf9d40a05884a" translate="yes" xml:space="preserve">
          <source>The set of regressors that will be tested sequentially.</source>
          <target state="translated">순차적으로 테스트 할 회귀 집합입니다.</target>
        </trans-unit>
        <trans-unit id="418cd7fd5c32b01bfeb33989472034a267c4e833" translate="yes" xml:space="preserve">
          <source>The shape (Nx, Ny) array of pairwise distances between points in X and Y.</source>
          <target state="translated">X와 Y의 점 사이의 페어 단위 거리의 모양 (Nx, Ny) 배열입니다.</target>
        </trans-unit>
        <trans-unit id="be8e19650b3e56af8959e9d1bdb9305ca252ca97" translate="yes" xml:space="preserve">
          <source>The shape of &lt;code&gt;dual_coef_&lt;/code&gt; is &lt;code&gt;[n_class-1, n_SV]&lt;/code&gt; with a somewhat hard to grasp layout. The columns correspond to the support vectors involved in any of the &lt;code&gt;n_class * (n_class - 1) / 2&lt;/code&gt; &amp;ldquo;one-vs-one&amp;rdquo; classifiers. Each of the support vectors is used in &lt;code&gt;n_class - 1&lt;/code&gt; classifiers. The &lt;code&gt;n_class - 1&lt;/code&gt; entries in each row correspond to the dual coefficients for these classifiers.</source>
          <target state="translated">형상 &lt;code&gt;dual_coef_&lt;/code&gt; 이 있다 &lt;code&gt;[n_class-1, n_SV]&lt;/code&gt; 다소 딱딱 배치를 파악한다. 열은 &lt;code&gt;n_class * (n_class - 1) / 2&lt;/code&gt; &quot;one-vs-one&quot;분류 자 중 하나에 포함 된 지원 벡터에 해당합니다 . 각 지원 벡터는 &lt;code&gt;n_class - 1&lt;/code&gt; 분류 자 에서 사용 됩니다. 각 행 의 &lt;code&gt;n_class - 1&lt;/code&gt; 항목은 이러한 분류기의 이중 계수에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="79705c107a83df8d45ef47d82375b7c707f4d5ae" translate="yes" xml:space="preserve">
          <source>The shape of the result.</source>
          <target state="translated">결과의 모양.</target>
        </trans-unit>
        <trans-unit id="770a88634d7b4928209cc52a1f8aea4bce68a8e8" translate="yes" xml:space="preserve">
          <source>The shift offset allows a zero threshold for being an outlier. Only available for novelty detection (when novelty is set to True). The argument X is supposed to contain &lt;em&gt;new data&lt;/em&gt;: if X contains a point from training, it considers the later in its own neighborhood. Also, the samples in X are not considered in the neighborhood of any point.</source>
          <target state="translated">시프트 오프셋은 이상치에 대한 제로 임계 값을 허용합니다. 참신 탐지에만 사용할 수 있습니다 (참신이 True로 설정된 경우). 인수 X는 &lt;em&gt;새로운 데이터&lt;/em&gt; 를 포함해야한다 . 만약 X가 훈련의 포인트를 포함한다면, 그것은 자신의 이웃에서 나중에 고려한다. 또한 X의 샘플은 어떤 점에서도 고려되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fd58d8b5ba5725b529e01c853ef09676528984ae" translate="yes" xml:space="preserve">
          <source>The shifted opposite of the Local Outlier Factor of each input samples. The lower, the more abnormal. Negative scores represent outliers, positive scores represent inliers.</source>
          <target state="translated">각 입력 샘플의 Local Outlier Factor의 반대 편이되었습니다. 낮을수록 비정상적입니다. 음수 점수는 특이 치를 나타내고 양수 점수는 특이 치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="13c37fa5739748416ca3f9521f51dec2de533ef6" translate="yes" xml:space="preserve">
          <source>The similarity of two sets of biclusters.</source>
          <target state="translated">두 세트의 biclusters의 유사성.</target>
        </trans-unit>
        <trans-unit id="7becf18fe4f5e5f9bf982cb2425cc3a834e0c404" translate="yes" xml:space="preserve">
          <source>The simplest metric &lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt;&lt;code&gt;MDS&lt;/code&gt;&lt;/a&gt; model, called &lt;em&gt;absolute MDS&lt;/em&gt;, disparities are defined by \(\hat{d}_{ij} = S_{ij}\). With absolute MDS, the value \(S_{ij}\) should then correspond exactly to the distance between point \(i\) and \(j\) in the embedding point.</source>
          <target state="translated">&lt;em&gt;절대 MDS&lt;/em&gt; 라고 하는 가장 간단한 메트릭 &lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt; &lt;code&gt;MDS&lt;/code&gt; &lt;/a&gt; 모델 은 \ (\ hat {d} _ {ij} = S_ {ij} \)로 정의됩니다. 절대 MDS를 사용하면 \ (S_ {ij} \) 값은 포함 지점의 \ (i \)와 \ (j \) 사이의 거리와 정확히 일치해야합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d805d3b9d3166d024fed65dbe7dc1ddecd0fb40" translate="yes" xml:space="preserve">
          <source>The simplest possible classifier is the &lt;a href=&quot;https://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm&quot;&gt;nearest neighbor&lt;/a&gt;: given a new observation &lt;code&gt;X_test&lt;/code&gt;, find in the training set (i.e. the data used to train the estimator) the observation with the closest feature vector. (Please see the &lt;a href=&quot;../../modules/neighbors#neighbors&quot;&gt;Nearest Neighbors section&lt;/a&gt; of the online Scikit-learn documentation for more information about this type of classifier.)</source>
          <target state="translated">가능한 가장 간단한 분류기는 &lt;a href=&quot;https://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm&quot;&gt;가장 가까운 이웃입니다&lt;/a&gt; . 새로운 관측치 &lt;code&gt;X_test&lt;/code&gt; 가 주어지면 훈련 세트 (예 : 추정기를 훈련시키는 데 사용 된 데이터)에서 가장 가까운 특징 벡터를 가진 관측치를 찾습니다. ( 이러한 분류기 유형에 대한 자세한 내용은 온라인 Scikit-learn 설명서 의 &lt;a href=&quot;../../modules/neighbors#neighbors&quot;&gt;가장 가까운 이웃 섹션&lt;/a&gt; 을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="1fac5c5ae1360f0509b6fb6c9bee7a89fd16eea5" translate="yes" xml:space="preserve">
          <source>The simplest way to accomplish this dimensionality reduction is by taking a random projection of the data. Though this allows some degree of visualization of the data structure, the randomness of the choice leaves much to be desired. In a random projection, it is likely that the more interesting structure within the data will be lost.</source>
          <target state="translated">이러한 차원 축소를 달성하는 가장 간단한 방법은 데이터를 임의로 투영하는 것입니다. 이것은 데이터 구조의 어느 정도의 가시화를 허용하지만, 선택의 임의성은 많이 요구된다. 랜덤 프로젝션에서는 데이터 내에서 더 흥미로운 구조가 손실 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8c7e68caf35057fba3785bb16a14da344816784" translate="yes" xml:space="preserve">
          <source>The simplest way to use cross-validation is to call the &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;cross_val_score&lt;/code&gt;&lt;/a&gt; helper function on the estimator and the dataset.</source>
          <target state="translated">교차 유효성 검사를 사용하는 가장 간단한 방법 은 추정기와 데이터 집합 에서 &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;cross_val_score&lt;/code&gt; &lt;/a&gt; 도우미 함수 를 호출하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="6b61610397fd4bcbb9699a5ba6221c6a9dfd8212" translate="yes" xml:space="preserve">
          <source>The singular value decomposition, \(A_n = U \Sigma V^\top\), provides the partitions of the rows and columns of \(A\). A subset of the left singular vectors gives the row partitions, and a subset of the right singular vectors gives the column partitions.</source>
          <target state="translated">특이 값 분해 \ (A_n = U \ Sigma V ^ \ top \)는 \ (A \)의 행과 열의 파티션을 제공합니다. 왼쪽 특이 벡터의 서브 세트는 행 파티션을 제공하고 오른쪽 특이 벡터의 서브 세트는 열 파티션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f785df3fd21ed481c16151f3b91e613616eec382" translate="yes" xml:space="preserve">
          <source>The singular values corresponding to each of the selected components. The singular values are equal to the 2-norms of the &lt;code&gt;n_components&lt;/code&gt; variables in the lower-dimensional space.</source>
          <target state="translated">선택한 각 구성 요소에 해당하는 특이 값입니다. 특이 값은 저 차원 공간에서 &lt;code&gt;n_components&lt;/code&gt; 변수 의 2- 노름과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="fda37f3c2ceb4ddf1d93860ac5de12a5ffc950e8" translate="yes" xml:space="preserve">
          <source>The size of &lt;code&gt;grid_scores_&lt;/code&gt; is equal to &lt;code&gt;ceil((n_features - min_features_to_select) / step) + 1&lt;/code&gt;, where step is the number of features removed at each iteration.</source>
          <target state="translated">크기 &lt;code&gt;grid_scores_&lt;/code&gt; 은 동일하다 &lt;code&gt;ceil((n_features - min_features_to_select) / step) + 1&lt;/code&gt; 단계 각 반복에서 제거 된 기능의 수이다.</target>
        </trans-unit>
        <trans-unit id="9867bd15789365ba5d58a7dbdcd5815e87ddbf26" translate="yes" xml:space="preserve">
          <source>The size of the model with the default parameters is \(O( M * N * log (N) )\), where \(M\) is the number of trees and \(N\) is the number of samples. In order to reduce the size of the model, you can change these parameters: &lt;code&gt;min_samples_split&lt;/code&gt;, &lt;code&gt;max_leaf_nodes&lt;/code&gt;, &lt;code&gt;max_depth&lt;/code&gt; and &lt;code&gt;min_samples_leaf&lt;/code&gt;.</source>
          <target state="translated">기본 매개 변수가있는 모델의 크기는 \ (O (M * N * log (N)) \)입니다. 여기서 \ (M \)은 트리 수이고 \ (N \)은 샘플 수입니다. 모델의 크기를 줄이기 위해 &lt;code&gt;min_samples_split&lt;/code&gt; , &lt;code&gt;max_leaf_nodes&lt;/code&gt; , &lt;code&gt;max_depth&lt;/code&gt; 및 &lt;code&gt;min_samples_leaf&lt;/code&gt; 매개 변수를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f17f4e69474d346e8934f03ff8be8d8add88c9f" translate="yes" xml:space="preserve">
          <source>The size of the random matrix to generate.</source>
          <target state="translated">생성 할 랜덤 행렬의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="b31452681b2b7098990045ccc11256312f76473c" translate="yes" xml:space="preserve">
          <source>The size of the regression tree base learners defines the level of variable interactions that can be captured by the gradient boosting model. In general, a tree of depth &lt;code&gt;h&lt;/code&gt; can capture interactions of order &lt;code&gt;h&lt;/code&gt; . There are two ways in which the size of the individual regression trees can be controlled.</source>
          <target state="translated">회귀 트리 기본 학습자의 크기는 그라디언트 부스팅 모델로 캡처 할 수있는 변수 상호 작용의 수준을 정의합니다. 일반적으로, 깊이 트리 &lt;code&gt;h&lt;/code&gt; 는 차수 &lt;code&gt;h&lt;/code&gt; 의 상호 작용을 캡처 할 수 있습니다 . 개별 회귀 트리의 크기를 제어 할 수있는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb0fc3f910e5dcbfcfe6af4540bbfd0a452530ef" translate="yes" xml:space="preserve">
          <source>The size of the sample to use when computing the Silhouette Coefficient on a random subset of the data. If &lt;code&gt;sample_size is None&lt;/code&gt;, no sampling is used.</source>
          <target state="translated">임의의 데이터 하위 집합에서 실루엣 계수를 계산할 때 사용할 샘플의 크기입니다. 경우 &lt;code&gt;sample_size is None&lt;/code&gt; , 어떤 샘플링은 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3605bfba06cab15c1207c4102bf5bbb9eee0a53" translate="yes" xml:space="preserve">
          <source>The size of the set to sample from.</source>
          <target state="translated">샘플링 할 세트의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="d5051ed3b169b87ed97be7e20bda0cdf9d82ecae" translate="yes" xml:space="preserve">
          <source>The size, the distance and the shape of clusters may vary upon initialization, perplexity values and does not always convey a meaning.</source>
          <target state="translated">클러스터의 크기, 거리 및 모양은 초기화, 난이도 값에 따라 다를 수 있으며 항상 의미를 전달하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="6830208b16eb851287384293d35fab1e64fb8f9a" translate="yes" xml:space="preserve">
          <source>The skewed chi squared kernel is given by:</source>
          <target state="translated">비뚤어진 카이 제곱 커널은 다음과 같이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bdf0bd9101d435249fe017ac2196fd5049ca1688" translate="yes" xml:space="preserve">
          <source>The smoothing priors \(\alpha \ge 0\) accounts for features not present in the learning samples and prevents zero probabilities in further computations. Setting \(\alpha = 1\) is called Laplace smoothing, while \(\alpha &amp;lt; 1\) is called Lidstone smoothing.</source>
          <target state="translated">평활화 우선 순위 \ (\ alpha \ ge 0 \)는 학습 샘플에없는 특징을 설명하고 추가 계산에서 0 확률을 방지합니다. \ (\ alpha = 1 \) 설정을 Laplace smoothing이라고하고 \ (\ alpha &amp;lt;1 \)를 Lidstone smoothing이라고합니다.</target>
        </trans-unit>
        <trans-unit id="4842d9fce84143997f4f4321a8717acf3b670822" translate="yes" xml:space="preserve">
          <source>The solver &amp;ldquo;liblinear&amp;rdquo; uses a coordinate descent (CD) algorithm, and relies on the excellent C++ &lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/liblinear/&quot;&gt;LIBLINEAR library&lt;/a&gt;, which is shipped with scikit-learn. However, the CD algorithm implemented in liblinear cannot learn a true multinomial (multiclass) model; instead, the optimization problem is decomposed in a &amp;ldquo;one-vs-rest&amp;rdquo; fashion so separate binary classifiers are trained for all classes. This happens under the hood, so &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; instances using this solver behave as multiclass classifiers. For L1 penalization &lt;a href=&quot;generated/sklearn.svm.l1_min_c#sklearn.svm.l1_min_c&quot;&gt;&lt;code&gt;sklearn.svm.l1_min_c&lt;/code&gt;&lt;/a&gt; allows to calculate the lower bound for C in order to get a non &amp;ldquo;null&amp;rdquo; (all feature weights to zero) model.</source>
          <target state="translated">솔버 &quot;liblinear&quot;는 CD (좌표 하강) 알고리즘을 사용 하며 scikit-learn과 함께 제공되는 우수한 C ++ &lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/liblinear/&quot;&gt;LIBLINEAR 라이브러리를 사용&lt;/a&gt; 합니다. 그러나 liblinear로 구현 된 CD 알고리즘은 진정한 다항식 (멀티 클래스) 모델을 학습 할 수 없습니다. 대신 최적화 문제는 &quot;일대일&quot;방식으로 분해되므로 모든 클래스에 대해 별도의 이진 분류 기가 훈련됩니다. 이러한 상황에서 발생 하므로이 솔버를 사용하는 &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; &lt;/a&gt; 인스턴스는 멀티 클래스 분류 자로 작동합니다. L1 불이익의 경우 &lt;a href=&quot;generated/sklearn.svm.l1_min_c#sklearn.svm.l1_min_c&quot;&gt; &lt;code&gt;sklearn.svm.l1_min_c&lt;/code&gt; &lt;/a&gt; 는 &quot;null&quot;이 아닌 (모든 피처 가중치가 0 인) 모델을 얻기 위해 C의 하한을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed7150245f4b6e455142137cba3f8af716071c7a" translate="yes" xml:space="preserve">
          <source>The solver for weight optimization.</source>
          <target state="translated">무게 최적화를위한 솔버.</target>
        </trans-unit>
        <trans-unit id="7be0c6e2677e69b218f8a95f391cfbcac99c36a1" translate="yes" xml:space="preserve">
          <source>The solvers implemented in the class &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; are &amp;ldquo;liblinear&amp;rdquo;, &amp;ldquo;newton-cg&amp;rdquo;, &amp;ldquo;lbfgs&amp;rdquo;, &amp;ldquo;sag&amp;rdquo; and &amp;ldquo;saga&amp;rdquo;:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; &lt;/a&gt; 클래스에서 구현 된 솔버 는 &quot;liblinear&quot;, &quot;newton-cg&quot;, &quot;lbfgs&quot;, &quot;sag&quot;및 &quot;saga&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2562620e10231c5093b1e84475f4d077e3e41917" translate="yes" xml:space="preserve">
          <source>The sought maximum memory for temporary distance matrix chunks. When None (default), the value of &lt;code&gt;sklearn.get_config()['working_memory']&lt;/code&gt; is used.</source>
          <target state="translated">임시 거리 매트릭스 청크에 대한 최대 메모리를 찾았습니다. None (기본값) 인 경우 &lt;code&gt;sklearn.get_config()['working_memory']&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d35f1b775d7d16bbabc524099db10f7048897e6d" translate="yes" xml:space="preserve">
          <source>The source can also be found &lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/tree/master/doc/tutorial/text_analytics&quot;&gt;on Github&lt;/a&gt;.</source>
          <target state="translated">소스는 &lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/tree/master/doc/tutorial/text_analytics&quot;&gt;Github&lt;/a&gt; 에서도 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="351456aed7b7d0fc1d0034839135c70dde192f05" translate="yes" xml:space="preserve">
          <source>The source of this tutorial can be found within your scikit-learn folder:</source>
          <target state="translated">이 튜토리얼의 소스는 scikit-learn 폴더에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa3459bc05f5ce02810c5dff6ad6cfbeb1ca9a04" translate="yes" xml:space="preserve">
          <source>The spacing between points of the grid, in degrees</source>
          <target state="translated">그리드 점 사이의 간격 (도)</target>
        </trans-unit>
        <trans-unit id="464028094b69433f3db44d7a263916deccf86cb6" translate="yes" xml:space="preserve">
          <source>The sparse code factor in the matrix factorization.</source>
          <target state="translated">행렬 분해의 희소 코드 계수.</target>
        </trans-unit>
        <trans-unit id="f9d9c0a7d6ff3b6246478d922234360e15ed6ab9" translate="yes" xml:space="preserve">
          <source>The sparse code such that each column of this matrix has exactly n_nonzero_coefs non-zero items (X).</source>
          <target state="translated">이 행렬의 각 열이 정확히 n_nonzero_coefs 0이 아닌 항목 (X)을 갖도록하는 희소 코드입니다.</target>
        </trans-unit>
        <trans-unit id="ee7d500960f94d10a937d21e436dcc2adbbc9a2a" translate="yes" xml:space="preserve">
          <source>The sparse codes</source>
          <target state="translated">희소 코드</target>
        </trans-unit>
        <trans-unit id="0e1ce62165b4e0dbd0b6b1199e83c88e1c88959d" translate="yes" xml:space="preserve">
          <source>The sparse implementation produces slightly different results than the dense implementation due to a shrunk learning rate for the intercept.</source>
          <target state="translated">드문 구현은 인터셉트에 대한 학습 속도가 감소하여 밀도가 높은 구현과 약간 다른 결과를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e4890de0c56a0e7645deea9088355f84adac629f" translate="yes" xml:space="preserve">
          <source>The sparse vector</source>
          <target state="translated">희소 벡터</target>
        </trans-unit>
        <trans-unit id="df0fd56f5b70016c4466d03cfc8859f7c3ea7663" translate="yes" xml:space="preserve">
          <source>The sparsity is actually imposed on the cholesky factor of the matrix. Thus alpha does not translate directly into the filling fraction of the matrix itself.</source>
          <target state="translated">희소성은 실제로 행렬의 cholesky factor에 부과됩니다. 따라서 알파는 행렬 자체의 채우기 부분으로 직접 변환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="56d99fb198a4da207bde97c2ceeeb3653451f496" translate="yes" xml:space="preserve">
          <source>The sparsity-inducing \(\ell_1\) norm also prevents learning components from noise when few training samples are available. The degree of penalization (and thus sparsity) can be adjusted through the hyperparameter &lt;code&gt;alpha&lt;/code&gt;. Small values lead to a gently regularized factorization, while larger values shrink many coefficients to zero.</source>
          <target state="translated">희소성을 유발하는 \ (\ ell_1 \) 규범은 사용 가능한 교육 샘플이 거의 없을 때 학습 구성 요소에서 소음이 발생하는 것을 방지합니다. 벌칙의 정도 (따라서 희소성)는 하이퍼 파라미터 &lt;code&gt;alpha&lt;/code&gt; 를 통해 조정할 수 있습니다 . 작은 값은 부드럽게 정규화 된 인수 분해로 이어지고 큰 값은 많은 계수를 0으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="1e3f3420100e85d456b50524681a1e1c7bbc338a" translate="yes" xml:space="preserve">
          <source>The split code for a single sample has length &lt;code&gt;2 * n_components&lt;/code&gt; and is constructed using the following rule: First, the regular code of length &lt;code&gt;n_components&lt;/code&gt; is computed. Then, the first &lt;code&gt;n_components&lt;/code&gt; entries of the &lt;code&gt;split_code&lt;/code&gt; are filled with the positive part of the regular code vector. The second half of the split code is filled with the negative part of the code vector, only with a positive sign. Therefore, the split_code is non-negative.</source>
          <target state="translated">단일 샘플의 분할 코드는 길이 &lt;code&gt;2 * n_components&lt;/code&gt; 가지며 다음 규칙을 사용하여 구성됩니다. 먼저, 길이 &lt;code&gt;n_components&lt;/code&gt; 의 일반 코드 가 계산됩니다. 그리고, 제 &lt;code&gt;n_components&lt;/code&gt; 에서 의 엔트리 &lt;code&gt;split_code&lt;/code&gt; 가 정규 코드 벡터의 양의 부분으로 채워진다. 분할 코드의 후반은 양의 부호 만있는 코드 벡터의 음수 부분으로 채워집니다. 따라서 split_code는 음이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="619ea10ad996c929a97e389d99c020b2211157d4" translate="yes" xml:space="preserve">
          <source>The standard LLE algorithm comprises three stages:</source>
          <target state="translated">표준 LLE 알고리즘은 세 단계로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a5bdc246aecc7e3bec9121428d3f9c450814299f" translate="yes" xml:space="preserve">
          <source>The standard deviation of the clusters.</source>
          <target state="translated">군집의 표준 편차입니다.</target>
        </trans-unit>
        <trans-unit id="b61516300476f785958503bfbc63e8e96de11d18" translate="yes" xml:space="preserve">
          <source>The standard deviation of the gaussian noise applied to the output.</source>
          <target state="translated">출력에 적용된 가우스 잡음의 표준 편차입니다.</target>
        </trans-unit>
        <trans-unit id="e5c05e9131e22b6718043e99a2bae1b92b538981" translate="yes" xml:space="preserve">
          <source>The standard deviation of the gaussian noise.</source>
          <target state="translated">가우스 노이즈의 표준 편차입니다.</target>
        </trans-unit>
        <trans-unit id="3689d32cff3e62dded279fb6b657e94942cdc7dc" translate="yes" xml:space="preserve">
          <source>The stepwise interpolating function that covers the input domain &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">입력 도메인 &lt;code&gt;X&lt;/code&gt; 를 포함하는 단계적 보간 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="4d8cf8d82bcb0bc25727f81a7a8d626fa0a70639" translate="yes" xml:space="preserve">
          <source>The stopping criterion. If it is not None, the iterations will stop when (loss &amp;gt; previous_loss - tol). Defaults to None. Defaults to 1e-3 from 0.21.</source>
          <target state="translated">정지 기준. None이 아닌 경우 반복은 중지됩니다 (loss&amp;gt; previous_loss-tol). 기본값은 없음입니다. 기본값은 0.21에서 1e-3입니다.</target>
        </trans-unit>
        <trans-unit id="ba1aa4a75fb51f2479b447aa001f5e6386a1f799" translate="yes" xml:space="preserve">
          <source>The strategy to use to assign labels in the embedding space. There are two ways to assign labels after the laplacian embedding. k-means can be applied and is a popular choice. But it can also be sensitive to initialization. Discretization is another approach which is less sensitive to random initialization.</source>
          <target state="translated">임베드 공간에 레이블을 지정하는 데 사용되는 전략입니다. 라플라시안 삽입 후 레이블을 지정하는 방법에는 두 가지가 있습니다. k- 평균을 적용 할 수 있으며 인기있는 선택입니다. 그러나 초기화에 민감 할 수도 있습니다. 이산화는 무작위 초기화에 덜 민감한 또 다른 접근법입니다.</target>
        </trans-unit>
        <trans-unit id="0a02a9e0399d776c0fdc23972d432af0d079552e" translate="yes" xml:space="preserve">
          <source>The strategy to use to assign labels in the embedding space. There are two ways to assign labels after the laplacian embedding. k-means can be applied and is a popular choice. But it can also be sensitive to initialization. Discretization is another approach which is less sensitive to random initialization. See the &amp;lsquo;Multiclass spectral clustering&amp;rsquo; paper referenced below for more details on the discretization approach.</source>
          <target state="translated">임베드 공간에 레이블을 지정하는 데 사용되는 전략입니다. 라플라시안 삽입 후 레이블을 지정하는 방법에는 두 가지가 있습니다. k- 평균을 적용 할 수 있으며 인기있는 선택입니다. 그러나 초기화에 민감 할 수도 있습니다. 이산화는 무작위 초기화에 덜 민감한 또 다른 접근법입니다. 이산화 접근법에 대한 자세한 내용은 아래 참조 된 '멀티 클래스 스펙트럼 클러스터링'백서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="067b32fbfa4aafe8139a50a2cd0dc62d48f6ce7c" translate="yes" xml:space="preserve">
          <source>The strategy used to choose the split at each node. Supported strategies are &amp;ldquo;best&amp;rdquo; to choose the best split and &amp;ldquo;random&amp;rdquo; to choose the best random split.</source>
          <target state="translated">각 노드에서 분할을 선택하는 데 사용 된 전략입니다. 지원되는 전략은 최상의 분할을 선택하는 데 &quot;최고&quot;, 최상의 무작위 분할을 선택하는 &quot;무작위&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="e4b87188ae01dfb2ea23e8aa9287a121677cbc35" translate="yes" xml:space="preserve">
          <source>The strength of recall versus precision in the F-score.</source>
          <target state="translated">F 점수에서 리콜의 강도 대 정밀도.</target>
        </trans-unit>
        <trans-unit id="9380c762fbcadf9826438d5ff503ef39938c2642" translate="yes" xml:space="preserve">
          <source>The strength of the LOF algorithm is that it takes both local and global properties of datasets into consideration: it can perform well even in datasets where abnormal samples have different underlying densities. The question is not, how isolated the sample is, but how isolated it is with respect to the surrounding neighborhood.</source>
          <target state="translated">LOF 알고리즘의 장점은 데이터 집합의 로컬 및 전역 속성을 모두 고려한다는 것입니다. 비정상 샘플의 기본 밀도가 다른 데이터 집합에서도 성능이 우수합니다. 문제는 샘플이 얼마나 고립되어 있는지가 아니라 주변 환경과 얼마나 고립되어 있는지입니다.</target>
        </trans-unit>
        <trans-unit id="ef559a266ab9339add9416970528df4288b9fe07" translate="yes" xml:space="preserve">
          <source>The string to decode</source>
          <target state="translated">해독 할 문자열</target>
        </trans-unit>
        <trans-unit id="71af025de90c113777cd083adeb4a7dc41c643ae" translate="yes" xml:space="preserve">
          <source>The string value &amp;ldquo;auto&amp;rdquo; determines whether y should increase or decrease based on the Spearman correlation estimate&amp;rsquo;s sign.</source>
          <target state="translated">문자열 값 &quot;auto&quot;는 Spearman 상관 추정의 부호에 따라 y를 증가 또는 감소시켜야하는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="68913ceeaf791c0f89f5da0e6ea267a6c64604e5" translate="yes" xml:space="preserve">
          <source>The submatrix corresponding to bicluster i.</source>
          <target state="translated">bicluster i에 해당하는 하위 행렬.</target>
        </trans-unit>
        <trans-unit id="a10436d8ac7a1230da5ccfb4c02351e0bfbb4701" translate="yes" xml:space="preserve">
          <source>The subset of drawn features for each base estimator.</source>
          <target state="translated">각 기본 추정기에 대해 그려진 기능의 하위 집합입니다.</target>
        </trans-unit>
        <trans-unit id="57675bd8615ef838a99f713d239feb9810e82664" translate="yes" xml:space="preserve">
          <source>The subset of drawn samples for each base estimator.</source>
          <target state="translated">각 기본 추정량에 대해 추출 된 표본의 부분 집합입니다.</target>
        </trans-unit>
        <trans-unit id="58b06737b1ee81d6af2156c3790929db0bc0c464" translate="yes" xml:space="preserve">
          <source>The sum of the features (number of words if documents) is drawn from a Poisson distribution with this expected value.</source>
          <target state="translated">피쳐의 합 (문서의 경우 단어 수)이이 예상 값을 가진 포아송 분포에서 도출됩니다.</target>
        </trans-unit>
        <trans-unit id="690aa5752a21a529c84a7d2bed72d6956dfbf2f1" translate="yes" xml:space="preserve">
          <source>The support is the number of occurrences of each class in &lt;code&gt;y_true&lt;/code&gt;.</source>
          <target state="translated">지원은 &lt;code&gt;y_true&lt;/code&gt; 에서 각 클래스의 발생 횟수입니다 .</target>
        </trans-unit>
        <trans-unit id="b8f29f24bf343b8a8c6a9702bbb3373c30b3886a" translate="yes" xml:space="preserve">
          <source>The support vector machines in scikit-learn support both dense (&lt;code&gt;numpy.ndarray&lt;/code&gt; and convertible to that by &lt;code&gt;numpy.asarray&lt;/code&gt;) and sparse (any &lt;code&gt;scipy.sparse&lt;/code&gt;) sample vectors as input. However, to use an SVM to make predictions for sparse data, it must have been fit on such data. For optimal performance, use C-ordered &lt;code&gt;numpy.ndarray&lt;/code&gt; (dense) or &lt;code&gt;scipy.sparse.csr_matrix&lt;/code&gt; (sparse) with &lt;code&gt;dtype=float64&lt;/code&gt;.</source>
          <target state="translated">의 서포트 벡터 머신 밀도 (모두 지원 scikit는 배우기 &lt;code&gt;numpy.ndarray&lt;/code&gt; 및 의한으로 변환 &lt;code&gt;numpy.asarray&lt;/code&gt; ) 및 스파 스 (모든 &lt;code&gt;scipy.sparse&lt;/code&gt; 입력으로) 샘플 벡터. 그러나 SVM을 사용하여 희소 데이터를 예측하려면 해당 데이터에 적합해야합니다. 최적의 성능을 얻으려면 &lt;code&gt;dtype=float64&lt;/code&gt; 와 함께 C 순서 &lt;code&gt;numpy.ndarray&lt;/code&gt; (밀도) 또는 &lt;code&gt;scipy.sparse.csr_matrix&lt;/code&gt; (sparse)를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8e93494175fc764f9336519319d2c72af2d3469" translate="yes" xml:space="preserve">
          <source>The target features for which the partial dependecy should be computed (size should be smaller than 3 for visual renderings).</source>
          <target state="translated">부분 의존성을 계산해야하는 대상 기능 (시각적 렌더링의 경우 크기가 3보다 작아야 함).</target>
        </trans-unit>
        <trans-unit id="c6694d34ee3bb1ae73f71f475a9064ea6bb5aa61" translate="yes" xml:space="preserve">
          <source>The target is predicted by local interpolation of the targets associated of the nearest neighbors in the training set.</source>
          <target state="translated">목표는 훈련 세트에서 가장 가까운 이웃과 관련된 목표의 로컬 보간에 의해 예측된다.</target>
        </trans-unit>
        <trans-unit id="836251639a1d2dd67d806e7910ad6656af016095" translate="yes" xml:space="preserve">
          <source>The target values (class labels in classification, real numbers in regression).</source>
          <target state="translated">목표 값 (분류의 클래스 레이블, 회귀의 실수).</target>
        </trans-unit>
        <trans-unit id="581ab16d01401b52de3a8a770522ae3215b0d2a3" translate="yes" xml:space="preserve">
          <source>The target values (class labels) as integers or strings.</source>
          <target state="translated">대상 값 (클래스 레이블)을 정수 또는 문자열로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c42151a6b9abff52d7ec8ba07a5200409a48a3c6" translate="yes" xml:space="preserve">
          <source>The target values (class labels).</source>
          <target state="translated">대상 값 (클래스 레이블)</target>
        </trans-unit>
        <trans-unit id="af111c076ceef9b210aa6e236368271feda238ba" translate="yes" xml:space="preserve">
          <source>The target values (integers that correspond to classes in classification, real numbers in regression).</source>
          <target state="translated">목표 값 (분류의 클래스, 회귀의 실수)에 해당하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="94e263fd180ba7303394b0318de33e42ec7bd528" translate="yes" xml:space="preserve">
          <source>The target values (real numbers).</source>
          <target state="translated">목표 값 (실수).</target>
        </trans-unit>
        <trans-unit id="4f52bd7c58bfce68aafb35b3e2f5dd531ddc572f" translate="yes" xml:space="preserve">
          <source>The target values (real numbers). Use &lt;code&gt;dtype=np.float64&lt;/code&gt; and &lt;code&gt;order='C'&lt;/code&gt; for maximum efficiency.</source>
          <target state="translated">목표 값 (실수). 효율성을 극대화 하려면 &lt;code&gt;dtype=np.float64&lt;/code&gt; 및 &lt;code&gt;order='C'&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="53a447e32fbe96637e9d7be27a641b24353eba6e" translate="yes" xml:space="preserve">
          <source>The target values.</source>
          <target state="translated">목표 값.</target>
        </trans-unit>
        <trans-unit id="863f0df40c91ba7090e8eb769163050f217d7bc5" translate="yes" xml:space="preserve">
          <source>The target variable for supervised learning problems.</source>
          <target state="translated">지도 학습 문제에 대한 목표 변수.</target>
        </trans-unit>
        <trans-unit id="f60efda845afa3f0dc7adc040cd9b2450fbcc2aa" translate="yes" xml:space="preserve">
          <source>The target variable for supervised learning problems. Stratification is done based on the y labels.</source>
          <target state="translated">지도 학습 문제에 대한 목표 변수. 층화는 y 라벨을 기준으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="aa20ad6bc67663b59dda9b76a4a065ca1f86af8f" translate="yes" xml:space="preserve">
          <source>The target variable is the median house value for California districts.</source>
          <target state="translated">목표 변수는 캘리포니아 지역의 중간 주택 가치입니다.</target>
        </trans-unit>
        <trans-unit id="40a696d29fc2e13fd302babe7b309a6f769a208a" translate="yes" xml:space="preserve">
          <source>The target variable to try to predict in the case of supervised learning.</source>
          <target state="translated">지도 학습의 경우 예측하려고하는 대상 변수입니다.</target>
        </trans-unit>
        <trans-unit id="a34872d2673c11b79098f51c73d69310c6a49da3" translate="yes" xml:space="preserve">
          <source>The task at hand is to predict disease progression from physiological variables.</source>
          <target state="translated">당면 과제는 생리적 변수로부터 질병 진행을 예측하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="609ac3008273ee503e4809fb5a54a64b3f8be85d" translate="yes" xml:space="preserve">
          <source>The ten features are standard independent Gaussian and the target &lt;code&gt;y&lt;/code&gt; is defined by:</source>
          <target state="translated">10 가지 기능은 표준 독립 가우시안이며 대상 &lt;code&gt;y&lt;/code&gt; 는 다음 과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b7581ec7a4d469cfac096612cf94e3958274d6aa" translate="yes" xml:space="preserve">
          <source>The term &amp;ldquo;discrete features&amp;rdquo; is used instead of naming them &amp;ldquo;categorical&amp;rdquo;, because it describes the essence more accurately. For example, pixel intensities of an image are discrete features (but hardly categorical) and you will get better results if mark them as such. Also note, that treating a continuous variable as discrete and vice versa will usually give incorrect results, so be attentive about that.</source>
          <target state="translated">&amp;ldquo;이산 된 특징&amp;rdquo;이라는 용어는 본질을보다 정확하게 설명하기 때문에&amp;ldquo;범주 적&amp;rdquo;이라고 명명하는 대신 사용됩니다. 예를 들어, 이미지의 픽셀 강도는 별개의 기능이지만 범주는 거의 없지만 이미지를 표시하면 더 나은 결과를 얻을 수 있습니다. 또한 연속 변수를 불연속으로 처리하거나 그 반대로 처리하면 일반적으로 잘못된 결과가 발생하므로주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="1748689c159b7c280435a293a84c60a8fa11ddf6" translate="yes" xml:space="preserve">
          <source>The test points for the data. Same format as the training data.</source>
          <target state="translated">데이터의 테스트 포인트 훈련 데이터와 동일한 형식입니다.</target>
        </trans-unit>
        <trans-unit id="c4412981e13c1e09172f9e595c07a27a82a32abb" translate="yes" xml:space="preserve">
          <source>The testing set indices for that split.</source>
          <target state="translated">테스트는 해당 분할에 대한 인덱스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c079148b8f468ab34a1c911c5b93e7fb1e4fbf43" translate="yes" xml:space="preserve">
          <source>The text feature extractors in scikit-learn know how to decode text files, but only if you tell them what encoding the files are in. The &lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; takes an &lt;code&gt;encoding&lt;/code&gt; parameter for this purpose. For modern text files, the correct encoding is probably UTF-8, which is therefore the default (&lt;code&gt;encoding=&quot;utf-8&quot;&lt;/code&gt;).</source>
          <target state="translated">scikit-learn의 텍스트 기능 추출기는 텍스트 파일을 디코딩하는 방법을 알고 있지만 파일의 인코딩을 알려주는 경우에만 해당됩니다. &lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;CountVectorizer&lt;/code&gt; &lt;/a&gt; 는이를 위해 &lt;code&gt;encoding&lt;/code&gt; 매개 변수를 사용합니다. 최신 텍스트 파일의 경우 올바른 인코딩은 아마도 UTF-8 일 것이므로 기본값 ( &lt;code&gt;encoding=&quot;utf-8&quot;&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="5da204cc914d9d1b370d2a7e3d3f9fed2399ad38" translate="yes" xml:space="preserve">
          <source>The theory says that in order to achieve prediction consistency, the penalty parameter should be kept constant as the number of samples grow.</source>
          <target state="translated">이론은 예측 일관성을 달성하기 위해 페널티 파라미터는 샘플 수가 증가함에 따라 일정하게 유지되어야한다고 말합니다.</target>
        </trans-unit>
        <trans-unit id="ed8c4048d538066672a56cef623687584e4d51a1" translate="yes" xml:space="preserve">
          <source>The third figure compares kernel density estimates for a distribution of 100 samples in 1 dimension. Though this example uses 1D distributions, kernel density estimation is easily and efficiently extensible to higher dimensions as well.</source>
          <target state="translated">세 번째 그림은 1 차원 100 샘플 분포에 대한 커널 밀도 추정치를 비교합니다. 이 예제는 1D 분포를 사용하지만 커널 밀도 추정은 더 높은 차원으로 쉽고 효율적으로 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0742a25a1bc73abd7670f1b33a5e8f933c99aa55" translate="yes" xml:space="preserve">
          <source>The third model is also a Bayesian Gaussian mixture model with a Dirichlet process prior but this time the value of the concentration prior is higher giving the model more liberty to model the fine-grained structure of the data. The result is a mixture with a larger number of active components that is similar to the first model where we arbitrarily decided to fix the number of components to 10.</source>
          <target state="translated">세 번째 모델은 이전에 Dirichlet 공정을 사용한 베이지안 가우시안 혼합 모델이지만 이번에는 이전 농도 값이 높아져 모델의 데이터를 세밀하게 모델링 할 수있는 자유가 더 커졌습니다. 결과적으로 구성 요소 수를 임의로 10으로 고정하기로 결정한 첫 번째 모델과 유사한 활성 구성 요소가 더 많은 혼합물이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="f1f7cd9ed7ac82273a71a8430edb1e09f61b8cab" translate="yes" xml:space="preserve">
          <source>The threshold value to use for feature selection. Features whose importance is greater or equal are kept while the others are discarded. If &amp;ldquo;median&amp;rdquo; (resp. &amp;ldquo;mean&amp;rdquo;), then the &lt;code&gt;threshold&lt;/code&gt; value is the median (resp. the mean) of the feature importances. A scaling factor (e.g., &amp;ldquo;1.25*mean&amp;rdquo;) may also be used. If None and if the estimator has a parameter penalty set to l1, either explicitly or implicitly (e.g, Lasso), the threshold used is 1e-5. Otherwise, &amp;ldquo;mean&amp;rdquo; is used by default.</source>
          <target state="translated">기능 선택에 사용할 임계 값입니다. 중요도가 크거나 같은 기능은 유지되고 다른 기능은 삭제됩니다. &quot;중간 값&quot;(예 : &quot;평균&quot;)이면 &lt;code&gt;threshold&lt;/code&gt; 값은 기능 중요도의 중간 값 (평균)입니다. 스케일링 계수 (예를 들어, &quot;1.25 * 평균&quot;)가 또한 사용될 수있다. None이고 추정기가 매개 변수 패널티를 명시 적으로 또는 암시 적으로 l1로 설정 한 경우 (예 : Lasso) 사용 된 임계 값은 1e-5입니다. 그렇지 않으면 기본적으로 &quot;mean&quot;이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="91a1a785c1bc7a11d4e20e6e119c885bf4142111" translate="yes" xml:space="preserve">
          <source>The threshold value used for feature selection.</source>
          <target state="translated">기능 선택에 사용되는 임계 값입니다.</target>
        </trans-unit>
        <trans-unit id="5a48126d50b83afd18e220a4fcf0cc7ffc7180d9" translate="yes" xml:space="preserve">
          <source>The time complexity of this implementation is &lt;code&gt;O(d ** 2)&lt;/code&gt; assuming d ~ n_features ~ n_components.</source>
          <target state="translated">이 구현의 시간 복잡도는 d ~ n_features ~ n_components를 가정하면 &lt;code&gt;O(d ** 2)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ff8097e0ec52614ae168c4cd444f04e3f78b14e2" translate="yes" xml:space="preserve">
          <source>The time for fitting the estimator on the train set for each cv split.</source>
          <target state="translated">각 이력서 분할에 대해 설정된 열차에 견적자를 맞추는 시간.</target>
        </trans-unit>
        <trans-unit id="dc0535c66e14595ad26a449dc475b0e83c5091ba" translate="yes" xml:space="preserve">
          <source>The time for scoring the estimator on the test set for each cv split. (Note time for scoring on the train set is not included even if &lt;code&gt;return_train_score&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">각 cv 스플릿에 대한 테스트 세트에서 추정기를 스코어링하는 시간입니다. ( &lt;code&gt;return_train_score&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정 되어 있어도 열차 세트의 득점 시간은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1cd8d7a025bee860396ab665c8f7316a009f2f5a" translate="yes" xml:space="preserve">
          <source>The tolerance for the elastic net solver used to calculate the descent direction. This parameter controls the accuracy of the search direction for a given column update, not of the overall parameter estimate. Only used for mode=&amp;rsquo;cd&amp;rsquo;.</source>
          <target state="translated">하강 방향을 계산하는 데 사용되는 탄성 그물 솔버의 공차입니다. 이 매개 변수는 전체 매개 변수 추정값이 아니라 주어진 열 업데이트에 대한 검색 방향의 정확도를 제어합니다. mode = 'cd'에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="54800ee92ded7e21b226653650e94d2e245f5dc0" translate="yes" xml:space="preserve">
          <source>The tolerance for the optimization: if the updates are smaller than &lt;code&gt;tol&lt;/code&gt;, the optimization code checks the dual gap for optimality and continues until it is smaller than &lt;code&gt;tol&lt;/code&gt;.</source>
          <target state="translated">최적화에 대한 허용 오차 : 업데이트가 &lt;code&gt;tol&lt;/code&gt; 보다 작은 경우 , 최적화 코드는 이중 간격이 최적인지 확인하고 &lt;code&gt;tol&lt;/code&gt; 보다 작을 때까지 계속 됩니다.</target>
        </trans-unit>
        <trans-unit id="7abdf76511114d1a589dafaf8c3b9fea94410d4e" translate="yes" xml:space="preserve">
          <source>The tolerance to declare convergence: if the dual gap goes below this value, iterations are stopped.</source>
          <target state="translated">수렴 선언 공차 : 이중 간격이이 값 아래로 떨어지면 반복이 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="1174cbfc6c5cd8bb9e51e269de526360c060c73a" translate="yes" xml:space="preserve">
          <source>The tomography projection operation is a linear transformation. In addition to the data-fidelity term corresponding to a linear regression, we penalize the L1 norm of the image to account for its sparsity. The resulting optimization problem is called the &lt;a href=&quot;../../modules/linear_model#lasso&quot;&gt;Lasso&lt;/a&gt;. We use the class &lt;a href=&quot;../../modules/generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;sklearn.linear_model.Lasso&lt;/code&gt;&lt;/a&gt;, that uses the coordinate descent algorithm. Importantly, this implementation is more computationally efficient on a sparse matrix, than the projection operator used here.</source>
          <target state="translated">단층 촬영법은 선형 변환입니다. 선형 회귀에 해당하는 데이터 충실도 용어 외에도 이미지의 L1 규범에 벌칙을 적용하여 희소성을 설명합니다. 결과 최적화 문제를 &lt;a href=&quot;../../modules/linear_model#lasso&quot;&gt;Lasso&lt;/a&gt; 라고합니다 . 좌표 하강 알고리즘을 사용하는 &lt;a href=&quot;../../modules/generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt; &lt;code&gt;sklearn.linear_model.Lasso&lt;/code&gt; &lt;/a&gt; 클래스 를 사용합니다. 중요하게도,이 구현은 여기서 사용 된 프로젝션 연산자보다 희소 행렬에서 더 계산적으로 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="6067d7bbaca20238e188da5c4c1f4f9b915cbe46" translate="yes" xml:space="preserve">
          <source>The total number of features.</source>
          <target state="translated">총 기능 수입니다.</target>
        </trans-unit>
        <trans-unit id="52b059ac9ef2b76cd7b57a438578db960faf18a1" translate="yes" xml:space="preserve">
          <source>The total number of features. These comprise &lt;code&gt;n_informative&lt;/code&gt; informative features, &lt;code&gt;n_redundant&lt;/code&gt; redundant features, &lt;code&gt;n_repeated&lt;/code&gt; duplicated features and &lt;code&gt;n_features-n_informative-n_redundant-n_repeated&lt;/code&gt; useless features drawn at random.</source>
          <target state="translated">총 기능 수입니다. 이들은 &lt;code&gt;n_informative&lt;/code&gt; 정보 정보 기능, &lt;code&gt;n_redundant&lt;/code&gt; 중복 중복 기능, &lt;code&gt;n_repeated&lt;/code&gt; 반복 중복 기능 및 &lt;code&gt;n_features-n_informative-n_redundant-n_repeated&lt;/code&gt; 기능 -n_ 정보 -n_ 중복 -n_ 반복 쓸모없는 기능으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="1b95194d002b1fa90370f5ac460e11ae527d46c4" translate="yes" xml:space="preserve">
          <source>The total number of input features.</source>
          <target state="translated">총 입력 기능 수입니다.</target>
        </trans-unit>
        <trans-unit id="75f4c14304ea0320f6751402bd1abbcf764fb2d4" translate="yes" xml:space="preserve">
          <source>The total number of points equally divided among classes.</source>
          <target state="translated">클래스간에 똑같이 나누어 진 총 포인트 수입니다.</target>
        </trans-unit>
        <trans-unit id="6fd1a66b2c352f2c105828a73ec9201a20677da3" translate="yes" xml:space="preserve">
          <source>The total number of points generated.</source>
          <target state="translated">생성 된 총 포인트 수입니다.</target>
        </trans-unit>
        <trans-unit id="b463685bc7194f4e1bd9c9e9566855d8af2442c3" translate="yes" xml:space="preserve">
          <source>The total number of points generated. If odd, the inner circle will have one point more than the outer circle.</source>
          <target state="translated">생성 된 총 포인트 수입니다. 홀수 인 경우 내부 원은 외부 원보다 한 점 더 큽니다.</target>
        </trans-unit>
        <trans-unit id="30df1d74b9688e22831b35a50354a3af5ea3a9b9" translate="yes" xml:space="preserve">
          <source>The total number of polynomial output features. The number of output features is computed by iterating over all suitably sized combinations of input features.</source>
          <target state="translated">다항식 출력 기능의 총 수입니다. 출력 기능의 수는 모든 적절한 크기의 입력 기능 조합을 반복하여 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="2341cd15b4f720c4e4ca39627124f453602ba043" translate="yes" xml:space="preserve">
          <source>The traditional way to compute the principal eigenvector is to use the power iteration method:</source>
          <target state="translated">주요 고유 벡터를 계산하는 전통적인 방법은 전력 반복 방법을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="486bc8b3be25b906a521777296790c0e7db3392b" translate="yes" xml:space="preserve">
          <source>The training algorithm implemented in &lt;a href=&quot;generated/sklearn.neural_network.bernoullirbm#sklearn.neural_network.BernoulliRBM&quot;&gt;&lt;code&gt;BernoulliRBM&lt;/code&gt;&lt;/a&gt; is known as Stochastic Maximum Likelihood (SML) or Persistent Contrastive Divergence (PCD). Optimizing maximum likelihood directly is infeasible because of the form of the data likelihood:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.neural_network.bernoullirbm#sklearn.neural_network.BernoulliRBM&quot;&gt; &lt;code&gt;BernoulliRBM&lt;/code&gt; &lt;/a&gt; 에서 구현 된 훈련 알고리즘 은 확률 적 최대 가능성 (SML) 또는 영구 대비 발산 (PCD)으로 알려져 있습니다. 데이터 가능성의 형태로 인해 최대 가능성을 직접 최적화하는 것은 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="03936b9df8c7a04402a186159fb53bde128b3907" translate="yes" xml:space="preserve">
          <source>The training data</source>
          <target state="translated">훈련 데이터</target>
        </trans-unit>
        <trans-unit id="a7dac9ee1d012d3a04e96a076bd4bb0255f4fa3a" translate="yes" xml:space="preserve">
          <source>The training data contains outliers which are defined as observations that are far from the others. Outlier detection estimators thus try to fit the regions where the training data is the most concentrated, ignoring the deviant observations.</source>
          <target state="translated">훈련 데이터에는 다른 것과는 다른 관측치로 정의 된 특이 치가 포함됩니다. 이상치 검출 추정값은 이탈 한 관측 값을 무시하고 훈련 데이터가 가장 집중된 영역에 적합하려고합니다.</target>
        </trans-unit>
        <trans-unit id="58b640148d7ae1e7f191ee9d800aaef902a6aef0" translate="yes" xml:space="preserve">
          <source>The training data is not polluted by outliers and we are interested in detecting whether a &lt;strong&gt;new&lt;/strong&gt; observation is an outlier. In this context an outlier is also called a novelty.</source>
          <target state="translated">교육 데이터는 특이 치에 의해 오염되지 않으며 &lt;strong&gt;새로운&lt;/strong&gt; 관측치가 특이 치 인지 여부를 감지하는 데 관심 이 있습니다. 이러한 맥락에서 특이점은 참신이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="431a9d8e158a3b53d56cef19b322f4a781297a84" translate="yes" xml:space="preserve">
          <source>The training data, e.g. a reference to an immutable snapshot</source>
          <target state="translated">교육 데이터 (예 : 불변 스냅 샷에 대한 참조)</target>
        </trans-unit>
        <trans-unit id="44e706b0239b6ac2fad3df8ff059d735dbfbf296" translate="yes" xml:space="preserve">
          <source>The training input samples.</source>
          <target state="translated">훈련 입력 샘플.</target>
        </trans-unit>
        <trans-unit id="92c6c3d94fd9608db44f0ede45f9bbe4de664d1d" translate="yes" xml:space="preserve">
          <source>The training input samples. Internally, it will be converted to &lt;code&gt;dtype=np.float32&lt;/code&gt; and if a sparse matrix is provided to a sparse &lt;code&gt;csc_matrix&lt;/code&gt;.</source>
          <target state="translated">훈련 입력 샘플. 내부적으로 는 희소 행렬이 희소 &lt;code&gt;csc_matrix&lt;/code&gt; 에 제공되는 경우 &lt;code&gt;dtype=np.float32&lt;/code&gt; 로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="fdce812a7f2c7f82334342af14e6e75d01b61ef1" translate="yes" xml:space="preserve">
          <source>The training input samples. Internally, its dtype will be converted to &lt;code&gt;dtype=np.float32&lt;/code&gt;. If a sparse matrix is provided, it will be converted into a sparse &lt;code&gt;csc_matrix&lt;/code&gt;.</source>
          <target state="translated">훈련 입력 샘플. 내부적으로 dtype은 &lt;code&gt;dtype=np.float32&lt;/code&gt; 로 변환됩니다 . 희소 행렬이 제공되면 희소 &lt;code&gt;csc_matrix&lt;/code&gt; 로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="549582a79c03c6cf3a88a3f5ae8ab3477fe6f4f0" translate="yes" xml:space="preserve">
          <source>The training input samples. Sparse matrices are accepted only if they are supported by the base estimator.</source>
          <target state="translated">훈련 입력 샘플. 희소 행렬은 기본 추정기가 지원하는 경우에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="ed9fac6749e01b46bdd0e4eebbecd7ed42fc3bac" translate="yes" xml:space="preserve">
          <source>The training input samples. Sparse matrix can be CSC, CSR, COO, DOK, or LIL. DOK and LIL are converted to CSR.</source>
          <target state="translated">훈련 입력 샘플. 희소 행렬은 CSC, CSR, COO, DOK 또는 LIL 일 수 있습니다. DOK와 LIL은 CSR로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="dba95905d10a3a6d61cb924560b16f35840a95de" translate="yes" xml:space="preserve">
          <source>The training points for the data. Each point has three fields:</source>
          <target state="translated">데이터의 훈련 포인트. 각 포인트에는 세 개의 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="49afe52f19d67077f586b0d86a3a80bb7b9051b3" translate="yes" xml:space="preserve">
          <source>The training set has size &lt;code&gt;i * n_samples // (n_splits + 1)
+ n_samples % (n_splits + 1)&lt;/code&gt; in the &lt;code&gt;i``th split,
with a test set of size ``n_samples//(n_splits + 1)&lt;/code&gt;, where &lt;code&gt;n_samples&lt;/code&gt; is the number of samples.</source>
          <target state="translated">훈련 세트의 크기는 &lt;code&gt;i * n_samples // (n_splits + 1) + n_samples % (n_splits + 1)&lt;/code&gt; 이며 &lt;code&gt;i``th split, with a test set of size ``n_samples//(n_splits + 1)&lt;/code&gt; . 여기서 &lt;code&gt;n_samples&lt;/code&gt; 샘플 수입니다.</target>
        </trans-unit>
        <trans-unit id="7d0d65f5b4df90d39c92efe2c541dfa70477a3f3" translate="yes" xml:space="preserve">
          <source>The training set indices for that split.</source>
          <target state="translated">트레이닝은 해당 스플릿에 대한 인덱스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1fe1c9ebc66c3c60358a4b7d7ce6958b71f5be6a" translate="yes" xml:space="preserve">
          <source>The transformation can be triggered by setting either &lt;code&gt;transformer&lt;/code&gt; or the pair of functions &lt;code&gt;func&lt;/code&gt; and &lt;code&gt;inverse_func&lt;/code&gt;. However, setting both options will raise an error.</source>
          <target state="translated">&lt;code&gt;transformer&lt;/code&gt; 또는 &lt;code&gt;func&lt;/code&gt; 및 &lt;code&gt;inverse_func&lt;/code&gt; 함수 쌍을 설정하여 변환을 트리거 할 수 있습니다 . 그러나 두 옵션을 모두 설정하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c1ce2cd56f04ea729576a873f5ef18af794ea62c" translate="yes" xml:space="preserve">
          <source>The transformation is applied on each feature independently. The cumulative density function of a feature is used to project the original values. Features values of new/unseen data that fall below or above the fitted range will be mapped to the bounds of the output distribution. Note that this transform is non-linear. It may distort linear correlations between variables measured at the same scale but renders variables measured at different scales more directly comparable.</source>
          <target state="translated">변환은 각 기능에 독립적으로 적용됩니다. 피쳐의 누적 밀도 함수는 원래 값을 투사하는 데 사용됩니다. 적합 범위보다 낮거나 높은 새로운 / 보이지 않는 데이터의 피처 값은 출력 분포의 경계에 매핑됩니다. 이 변환은 비선형입니다. 동일한 척도로 측정 된 변수 간의 선형 상관 관계를 왜곡 할 수 있지만 다른 척도로 측정 된 변수를보다 직접적으로 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd72b82186574150d900e6dfd8721345fa62073" translate="yes" xml:space="preserve">
          <source>The transformation is given by:</source>
          <target state="translated">변환은 다음과 같이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1db1e441acce63afd6d696933447c0b2d453bb8c" translate="yes" xml:space="preserve">
          <source>The transformed data</source>
          <target state="translated">변환 된 데이터</target>
        </trans-unit>
        <trans-unit id="0a52b9359f518099e81b711eeaccc5e0c7c17eb0" translate="yes" xml:space="preserve">
          <source>The transformed data is then used to train a naive Bayes classifier, and a clear difference in prediction accuracies is observed wherein the dataset which is scaled before PCA vastly outperforms the unscaled version.</source>
          <target state="translated">변환 된 데이터는 순진한 베이 즈 분류기를 훈련시키는 데 사용되며, 예측 정확도의 명확한 차이가 관찰되는데, 여기서 PCA 전에 스케일링 된 데이터 세트는 스케일링되지 않은 버전보다 훨씬 우수하다.</target>
        </trans-unit>
        <trans-unit id="80e852f03673351dd5ee00932a57dc4a209cdf2d" translate="yes" xml:space="preserve">
          <source>The transformed data.</source>
          <target state="translated">변환 된 데이터</target>
        </trans-unit>
        <trans-unit id="831c10597508e086776cd00760f56c708f8d2bba" translate="yes" xml:space="preserve">
          <source>The tree algorithm to use. Valid options are [&amp;lsquo;kd_tree&amp;rsquo;|&amp;rsquo;ball_tree&amp;rsquo;|&amp;rsquo;auto&amp;rsquo;]. Default is &amp;lsquo;auto&amp;rsquo;.</source>
          <target state="translated">사용할 트리 알고리즘. 유효한 옵션은 [ 'kd_tree'| 'ball_tree'| 'auto']입니다. 기본값은 '자동'입니다.</target>
        </trans-unit>
        <trans-unit id="d745501ed4c4af3a67688bd307560f44fb29c904" translate="yes" xml:space="preserve">
          <source>The tree data structure consists of nodes with each node consisting of a number of subclusters. The maximum number of subclusters in a node is determined by the branching factor. Each subcluster maintains a linear sum, squared sum and the number of samples in that subcluster. In addition, each subcluster can also have a node as its child, if the subcluster is not a member of a leaf node.</source>
          <target state="translated">트리 데이터 구조는 각 노드가 여러 하위 클러스터로 구성된 노드로 구성됩니다. 노드의 최대 하위 클러스터 수는 분기 계수에 의해 결정됩니다. 각 하위 클러스터는 선형 합계, 제곱합 및 해당 하위 클러스터의 샘플 수를 유지합니다. 또한 서브 클러스터가 리프 노드의 구성원이 아닌 경우 각 서브 클러스터는 하위 노드를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbc6ef1abc08faa2debda525a78475d34850618e" translate="yes" xml:space="preserve">
          <source>The true probability in each bin (fraction of positives).</source>
          <target state="translated">각 빈의 실제 확률 (양의 분수).</target>
        </trans-unit>
        <trans-unit id="89aec1004fa9767eced66561c3ed3161000c45a1" translate="yes" xml:space="preserve">
          <source>The true score without permuting targets.</source>
          <target state="translated">목표를 바꾸지 않고 진정한 점수.</target>
        </trans-unit>
        <trans-unit id="311da69a1a719737450cc586668ba277c4bde011" translate="yes" xml:space="preserve">
          <source>The tutorial folder should contain the following sub-folders:</source>
          <target state="translated">튜토리얼 폴더에는 다음과 같은 하위 폴더가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2e8b6623a8185bbb598cfdf6b3f71f1ee2c2a837" translate="yes" xml:space="preserve">
          <source>The two figures below plot the values of &lt;code&gt;C&lt;/code&gt; on the &lt;code&gt;x-axis&lt;/code&gt; and the corresponding cross-validation scores on the &lt;code&gt;y-axis&lt;/code&gt;, for several different fractions of a generated data-set.</source>
          <target state="translated">아래의 두 그림 은 생성 된 데이터 집합의 여러 가지 분수 에 대해 &lt;code&gt;x-axis&lt;/code&gt; &lt;code&gt;C&lt;/code&gt; 값 과 &lt;code&gt;y-axis&lt;/code&gt; 해당 교차 검증 점수를 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="3ed5804ea6261422d9ec471fffa8f8a41a307d64" translate="yes" xml:space="preserve">
          <source>The two species are:</source>
          <target state="translated">두 종은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4aa36c5d8992165f7895075f7b16a37f9864b092" translate="yes" xml:space="preserve">
          <source>The type of criterion to use.</source>
          <target state="translated">사용할 기준의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="6bc8093d847369045cfca5abe49cd94f035f902d" translate="yes" xml:space="preserve">
          <source>The type of feature values. Passed to Numpy array/scipy.sparse matrix constructors as the dtype argument.</source>
          <target state="translated">기능 값의 유형입니다. Numpy array / scipy.sparse 행렬 생성자에 dtype 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="51cef5c60b8823e16a67a0821a4b5311abdcd5ed" translate="yes" xml:space="preserve">
          <source>The type of feature values. Passed to scipy.sparse matrix constructors as the dtype argument. Do not set this to bool, np.boolean or any unsigned integer type.</source>
          <target state="translated">기능 값의 유형입니다. scipy.sparse 행렬 생성자에 dtype 인수로 전달됩니다. 이것을 bool, np.boolean 또는 부호없는 정수 유형으로 설정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="25d83e9ee3b7a100418b9b6d2bb7936470b09825" translate="yes" xml:space="preserve">
          <source>The type of norm used to compute the error. Available error types: - &amp;lsquo;frobenius&amp;rsquo; (default): sqrt(tr(A^t.A)) - &amp;lsquo;spectral&amp;rsquo;: sqrt(max(eigenvalues(A^t.A)) where A is the error &lt;code&gt;(comp_cov - self.covariance_)&lt;/code&gt;.</source>
          <target state="translated">오류를 계산하는 데 사용되는 표준 유형입니다. 사용 가능한 오류 유형 :- 'frobenius'(기본값) : sqrt (tr (A ^ tA))- 'spectral': sqrt (max (eigenvalues ​​(A ^ tA)) 여기서 A는 오류입니다 &lt;code&gt;(comp_cov - self.covariance_)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0b5e941b7e074477ab9a734aa8fbc101aeb347c" translate="yes" xml:space="preserve">
          <source>The unchanged dictionary atoms</source>
          <target state="translated">변경되지 않은 사전 원자</target>
        </trans-unit>
        <trans-unit id="776a52daee9321c0497d40c79109e87f34af6b7e" translate="yes" xml:space="preserve">
          <source>The underlying &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; implementation uses a random number generator to select features when fitting the model with a dual coordinate descent (i.e when &lt;code&gt;dual&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;). It is thus not uncommon, to have slightly different results for the same input data. If that happens, try with a smaller tol parameter. This randomness can also be controlled with the &lt;code&gt;random_state&lt;/code&gt; parameter. When &lt;code&gt;dual&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt; the underlying implementation of &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; is not random and &lt;code&gt;random_state&lt;/code&gt; has no effect on the results.</source>
          <target state="translated">기본 &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt; &lt;code&gt;LinearSVC&lt;/code&gt; &lt;/a&gt; 구현은 난수 생성기를 사용하여 모델을 이중 좌표 하강으로 피팅 할 때 (즉, &lt;code&gt;dual&lt;/code&gt; 이 &lt;code&gt;True&lt;/code&gt; 로 설정된 경우) 피처를 선택합니다 . 따라서 동일한 입력 데이터에 대해 약간 다른 결과를 갖는 것은 드문 일이 아닙니다. 이 경우 더 작은 tol 매개 변수로 시도하십시오. 이 임의성은 &lt;code&gt;random_state&lt;/code&gt; 매개 변수 로 제어 할 수도 있습니다 . 때 &lt;code&gt;dual&lt;/code&gt; 설정되어 &lt;code&gt;False&lt;/code&gt; 의 기본이되는 구현 &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt; &lt;code&gt;LinearSVC&lt;/code&gt; 은&lt;/a&gt; 무작위로하지 않고 &lt;code&gt;random_state&lt;/code&gt; 는 결과에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="68c40938fee4ae1976f2ebe09bc5c5a404f12d37" translate="yes" xml:space="preserve">
          <source>The underlying C implementation uses a random number generator to select features when fitting the model. It is thus not uncommon to have slightly different results for the same input data. If that happens, try with a smaller &lt;code&gt;tol&lt;/code&gt; parameter.</source>
          <target state="translated">기본 C 구현은 난수 생성기를 사용하여 모델을 피팅 할 때 피처를 선택합니다. 따라서 동일한 입력 데이터에 대해 약간 다른 결과를 갖는 것은 드문 일이 아닙니다. 이 경우 더 작은 &lt;code&gt;tol&lt;/code&gt; 매개 변수로 시도하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f30e1e8a65635cf877334fb55d57ec3cedb0460" translate="yes" xml:space="preserve">
          <source>The underlying C implementation uses a random number generator to select features when fitting the model. It is thus not uncommon, to have slightly different results for the same input data. If that happens, try with a smaller tol parameter.</source>
          <target state="translated">기본 C 구현은 난수 생성기를 사용하여 모델을 피팅 할 때 피처를 선택합니다. 따라서 동일한 입력 데이터에 대해 약간 다른 결과를 갖는 것은 드문 일이 아닙니다. 이 경우 더 작은 tol 매개 변수로 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="4ed849766bc74a6b6038e401c289ce378db99dcc" translate="yes" xml:space="preserve">
          <source>The underlying Tree object. Please refer to &lt;code&gt;help(sklearn.tree._tree.Tree)&lt;/code&gt; for attributes of Tree object and &lt;a href=&quot;../../auto_examples/tree/plot_unveil_tree_structure#sphx-glr-auto-examples-tree-plot-unveil-tree-structure-py&quot;&gt;Understanding the decision tree structure&lt;/a&gt; for basic usage of these attributes.</source>
          <target state="translated">기본이되는 Tree 객체 Tree 객체의 속성 및 이러한 속성의 기본 사용법에 대한 &lt;a href=&quot;../../auto_examples/tree/plot_unveil_tree_structure#sphx-glr-auto-examples-tree-plot-unveil-tree-structure-py&quot;&gt;의사 결정 트리 구조 이해는 &lt;/a&gt; &lt;code&gt;help(sklearn.tree._tree.Tree)&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eaa9f70240ca573ce446579a8e3077ce3fd3b2de" translate="yes" xml:space="preserve">
          <source>The underlying implementation is MurmurHash3_x86_32 generating low latency 32bits hash suitable for implementing lookup tables, Bloom filters, count min sketch or feature hashing.</source>
          <target state="translated">기본 구현은 조회 테이블, 블룸 필터, 카운트 최소 스케치 또는 기능 해싱을 구현하는 데 적합한 낮은 대기 시간 32 비트 해시를 생성하는 MurmurHash3_x86_32입니다.</target>
        </trans-unit>
        <trans-unit id="8b27403493b3e1cf67d088cabd49f20f60beabb5" translate="yes" xml:space="preserve">
          <source>The underlying implementation, liblinear, uses a sparse internal representation for the data that will incur a memory copy.</source>
          <target state="translated">기본 구현 인 liblinear는 메모리 복사본이 발생할 데이터에 대해 희소 한 내부 표현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="22bad6cd0a0fca07f198954a6d755d20a0363412" translate="yes" xml:space="preserve">
          <source>The univariate position of the sample according to the main dimension of the points in the manifold.</source>
          <target state="translated">매니 폴드에있는 점의 주요 치수에 따른 샘플의 일 변량 위치.</target>
        </trans-unit>
        <trans-unit id="e1bff9cf5ae34029868daf8dfe6afee04fc2666d" translate="yes" xml:space="preserve">
          <source>The unmixing matrix.</source>
          <target state="translated">언 믹싱 매트릭스.</target>
        </trans-unit>
        <trans-unit id="4c5425dc309e3cab0153df4bbf4dcfe21bae1aa0" translate="yes" xml:space="preserve">
          <source>The unsupervised data reduction and the supervised estimator can be chained in one step. See &lt;a href=&quot;compose#pipeline&quot;&gt;Pipeline: chaining estimators&lt;/a&gt;.</source>
          <target state="translated">비 감독 데이터 축소 및 감산 추정기는 한 단계로 연결될 수 있습니다. &lt;a href=&quot;compose#pipeline&quot;&gt;파이프 라인 : 체인 추정기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fca2372915cd9dbf5bde8febd27812d65a387223" translate="yes" xml:space="preserve">
          <source>The upper left figure illustrates the predictions (in dark red) of a single decision tree trained over a random dataset LS (the blue dots) of a toy 1d regression problem. It also illustrates the predictions (in light red) of other single decision trees trained over other (and different) randomly drawn instances LS of the problem. Intuitively, the variance term here corresponds to the width of the beam of predictions (in light red) of the individual estimators. The larger the variance, the more sensitive are the predictions for &lt;code&gt;x&lt;/code&gt; to small changes in the training set. The bias term corresponds to the difference between the average prediction of the estimator (in cyan) and the best possible model (in dark blue). On this problem, we can thus observe that the bias is quite low (both the cyan and the blue curves are close to each other) while the variance is large (the red beam is rather wide).</source>
          <target state="translated">왼쪽 위 그림은 장난감 1d 회귀 문제의 임의 데이터 세트 LS (파란색 점)에 대해 훈련 된 단일 의사 결정 트리의 예측 (진한 빨간색)을 보여줍니다. 또한 문제의 다른 (그리고 다른) 무작위로 그려진 인스턴스 LS에 대해 훈련 된 다른 단일 의사 결정 트리의 예측 (연한 빨간색)을 보여줍니다. 직관적으로, 여기서 분산 항은 개별 추정기의 예측 빔의 폭 (빨간색)에 해당합니다. 분산이 클수록 &lt;code&gt;x&lt;/code&gt; 에 대한 예측이 더 민감 해집니다.훈련 세트의 작은 변화에. 편향 항은 추정기의 평균 예측 (청록색)과 최상의 모델 (진한 파란색)의 차이에 해당합니다. 이 문제에서, 우리는 바이어스가 상당히 낮고 (청록색과 파란색 곡선이 서로 가까이 있음), 분산이 클 때 (빨간색 빔이 다소 넓음) 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1125be6cb70e3f587339b27b5931d4f81c0d0d9b" translate="yes" xml:space="preserve">
          <source>The usage of &lt;a href=&quot;../modules/generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt;&lt;code&gt;RBFSampler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.kernel_approximation.nystroem#sklearn.kernel_approximation.Nystroem&quot;&gt;&lt;code&gt;Nystroem&lt;/code&gt;&lt;/a&gt; is described in detail in &lt;a href=&quot;../modules/kernel_approximation#kernel-approximation&quot;&gt;Kernel Approximation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt; &lt;code&gt;RBFSampler&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../modules/generated/sklearn.kernel_approximation.nystroem#sklearn.kernel_approximation.Nystroem&quot;&gt; &lt;code&gt;Nystroem&lt;/code&gt; &lt;/a&gt; 의 사용법은 &lt;a href=&quot;../modules/kernel_approximation#kernel-approximation&quot;&gt;Kernel Approximation&lt;/a&gt; 에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7012369902c9ebdfcf4a40c832356073db31ae9a" translate="yes" xml:space="preserve">
          <source>The usage of centroid distance limits the distance metric to Euclidean space.</source>
          <target state="translated">중심 거리의 사용은 거리 메트릭을 유클리드 공간으로 제한합니다.</target>
        </trans-unit>
        <trans-unit id="4f2ed911398b7e07d993b089b964fc574c420c21" translate="yes" xml:space="preserve">
          <source>The usage of the &lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt; is the same as the usage described above for the &lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt;&lt;code&gt;RBFSampler&lt;/code&gt;&lt;/a&gt;. The only difference is in the free parameter, that is called \(c\). For a motivation for this mapping and the mathematical details see &lt;a href=&quot;#ls2010&quot; id=&quot;id7&quot;&gt;[LS2010]&lt;/a&gt;.</source>
          <target state="translated">의 사용량 &lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt; &lt;code&gt;SkewedChi2Sampler&lt;/code&gt; 는&lt;/a&gt; 대해 상술 사용량과 동일 &lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt; &lt;code&gt;RBFSampler&lt;/code&gt; &lt;/a&gt; . 유일한 차이는 free 매개 변수에 있습니다. 즉 \ (c \)입니다. 이 매핑에 대한 동기와 수학적 세부 사항은 &lt;a href=&quot;#ls2010&quot; id=&quot;id7&quot;&gt;[LS2010]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fabe9be99adc410c1907ea1daa7576972e4b19e8" translate="yes" xml:space="preserve">
          <source>The use of multi-output nearest neighbors for regression is demonstrated in &lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;Face completion with a multi-output estimators&lt;/a&gt;. In this example, the inputs X are the pixels of the upper half of faces and the outputs Y are the pixels of the lower half of those faces.</source>
          <target state="translated">회귀 분석에 가장 가까운 다중 출력 이웃을 &lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;사용하는 방법은 다중 출력 추정기&lt;/a&gt; 로 얼굴 완성에 설명되어 있습니다. 이 예에서, 입력 X는 얼굴의 상반신의 픽셀이고 출력 Y는 그 얼굴의 하반신의 픽셀입니다.</target>
        </trans-unit>
        <trans-unit id="adaab44ae672254ed2b0f1474d8d83b9d0ff364a" translate="yes" xml:space="preserve">
          <source>The use of multi-output trees for classification is demonstrated in &lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;Face completion with a multi-output estimators&lt;/a&gt;. In this example, the inputs X are the pixels of the upper half of faces and the outputs Y are the pixels of the lower half of those faces.</source>
          <target state="translated">분류를 위해 다중 출력 트리를 사용하는 방법은 다중 &lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;출력 추정기&lt;/a&gt; 로 얼굴 완성에 설명되어 있습니다. 이 예에서, 입력 X는 얼굴의 상반신의 픽셀이고 출력 Y는 그 얼굴의 하반신의 픽셀입니다.</target>
        </trans-unit>
        <trans-unit id="e18a96fd5f8412fd8540943bfa9bb84448ef6eef" translate="yes" xml:space="preserve">
          <source>The use of multi-output trees for regression is demonstrated in &lt;a href=&quot;../auto_examples/tree/plot_tree_regression_multioutput#sphx-glr-auto-examples-tree-plot-tree-regression-multioutput-py&quot;&gt;Multi-output Decision Tree Regression&lt;/a&gt;. In this example, the input X is a single real value and the outputs Y are the sine and cosine of X.</source>
          <target state="translated">회귀에 다중 출력 트리를 사용하는 방법은 다중 &lt;a href=&quot;../auto_examples/tree/plot_tree_regression_multioutput#sphx-glr-auto-examples-tree-plot-tree-regression-multioutput-py&quot;&gt;출력 결정 트리 회귀에서 설명&lt;/a&gt; 합니다. 이 예에서 입력 X는 단일 실수 값이고 출력 Y는 X의 사인 및 코사인입니다.</target>
        </trans-unit>
        <trans-unit id="6d9188616eccce81f2896ac591395f1642a23655" translate="yes" xml:space="preserve">
          <source>The used categories can be found in the &lt;code&gt;categories_&lt;/code&gt; attribute.</source>
          <target state="translated">사용 된 카테고리는 &lt;code&gt;categories_&lt;/code&gt; 속성 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ada4ba90a5864aca46a2fd4279e91da24ee2ef32" translate="yes" xml:space="preserve">
          <source>The user-provided initial means, defaults to None, If it None, means are initialized using the &lt;code&gt;init_params&lt;/code&gt; method.</source>
          <target state="translated">사용자가 제공 한 초기 수단의 기본값은 None이며, None 인 경우 &lt;code&gt;init_params&lt;/code&gt; 메소드를 사용하여 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="a1cbbec0505b4f4802950c392df8579b38a3220d" translate="yes" xml:space="preserve">
          <source>The user-provided initial precisions (inverse of the covariance matrices), defaults to None. If it None, precisions are initialized using the &amp;lsquo;init_params&amp;rsquo; method. The shape depends on &amp;lsquo;covariance_type&amp;rsquo;:</source>
          <target state="translated">사용자가 제공 한 초기 정밀도 (공분산 행렬의 역수)는 기본값이 없음입니다. 그렇지 않은 경우 정밀도는 'init_params'메소드를 사용하여 초기화됩니다. 모양은 'covariance_type'에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="930a8f090bbd3f5ab357e6a55436cb80968a37a5" translate="yes" xml:space="preserve">
          <source>The user-provided initial weights, defaults to None. If it None, weights are initialized using the &lt;code&gt;init_params&lt;/code&gt; method.</source>
          <target state="translated">사용자가 제공 한 초기 가중치는 기본값이 없음입니다. None이면 가중치는 &lt;code&gt;init_params&lt;/code&gt; 메소드를 사용하여 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="845cdaf2c42f719deb3141928cabec5996b4eedb" translate="yes" xml:space="preserve">
          <source>The usual covariance maximum likelihood estimate can be regularized using shrinkage. Ledoit and Wolf proposed a close formula to compute the asymptotically optimal shrinkage parameter (minimizing a MSE criterion), yielding the Ledoit-Wolf covariance estimate.</source>
          <target state="translated">일반적인 공분산 최대 우도 추정치는 수축을 사용하여 정규화 할 수 있습니다. Ledoit와 Wolf는 무증상 최적 수축 매개 변수 (MSE 기준을 최소화 함)를 계산하여 Ledoit-Wolf 공분산 추정치를 산출하는 공식을 제안했습니다.</target>
        </trans-unit>
        <trans-unit id="5d9f8abe9cd1fbb176b951540baae1f3defa7962" translate="yes" xml:space="preserve">
          <source>The usual covariance maximum likelihood estimate is very sensitive to the presence of outliers in the data set. In such a case, it would be better to use a robust estimator of covariance to guarantee that the estimation is resistant to &amp;ldquo;erroneous&amp;rdquo; observations in the data set.</source>
          <target state="translated">일반적인 공분산 최대 우도 추정치는 데이터 세트에 특이 치가 존재하는 데 매우 민감합니다. 이 경우 추정값이 데이터 세트의 &quot;오차적인&quot;관측치에 내성이 있음을 보장하기 위해 강력한 공분산 추정량을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="bf61b06542d3e7e313e8463ad6cb36679683eb16" translate="yes" xml:space="preserve">
          <source>The utility function &lt;a href=&quot;generated/sklearn.pipeline.make_pipeline#sklearn.pipeline.make_pipeline&quot;&gt;&lt;code&gt;make_pipeline&lt;/code&gt;&lt;/a&gt; is a shorthand for constructing pipelines; it takes a variable number of estimators and returns a pipeline, filling in the names automatically:</source>
          <target state="translated">유틸리티 함수 &lt;a href=&quot;generated/sklearn.pipeline.make_pipeline#sklearn.pipeline.make_pipeline&quot;&gt; &lt;code&gt;make_pipeline&lt;/code&gt; &lt;/a&gt; 은 파이프 라인 구성을위한 축약 형입니다. 가변 개수의 추정기를 사용하고 파이프 라인을 반환하여 이름을 자동으로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="e6fa170ec90d321cecf4d3db13ca13c99c71342b" translate="yes" xml:space="preserve">
          <source>The valid distance metrics, and the function they map to, are:</source>
          <target state="translated">유효한 거리 측정 항목과 이들이 매핑하는 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7aae4519886038a4fe27266a449c263068305fb0" translate="yes" xml:space="preserve">
          <source>The value 2 has the highest score: it appears twice with weights of 1.5 and 2: the sum of these is 3.</source>
          <target state="translated">값 2는 가장 높은 점수를 갖습니다. 가중치는 1.5와 2로 두 번 나타납니다. 이들의 합은 3입니다.</target>
        </trans-unit>
        <trans-unit id="cf2aaa6a69c13c7a1da598bbc487a099c24264e9" translate="yes" xml:space="preserve">
          <source>The value 4 appears three times: with uniform weights, the result is simply the mode of the distribution.</source>
          <target state="translated">값 4는 세 번 나타납니다. 균일 한 가중치로 결과는 단순히 분포 모드입니다.</target>
        </trans-unit>
        <trans-unit id="ee4d7bc4aea75382ac7c13c2d3ccdb7c85b05695" translate="yes" xml:space="preserve">
          <source>The value by which &lt;code&gt;|y - X'w - c|&lt;/code&gt; is scaled down.</source>
          <target state="translated">값하는 &lt;code&gt;|y - X'w - c|&lt;/code&gt; 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="208f4b20d150446e32489b5141e41ca0c231e069" translate="yes" xml:space="preserve">
          <source>The value of the inertia criterion associated with the chosen partition (if compute_labels is set to True). The inertia is defined as the sum of square distances of samples to their nearest neighbor.</source>
          <target state="translated">선택한 파티션과 연관된 관성 기준 값 (comput_labels가 True로 설정된 경우). 관성은 가장 가까운 이웃까지의 샘플의 제곱 거리의 합으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="605e5e84334ac11a6b1bcf93811952a1f4c93232" translate="yes" xml:space="preserve">
          <source>The value of the information criteria (&amp;lsquo;aic&amp;rsquo;, &amp;lsquo;bic&amp;rsquo;) across all alphas. The alpha which has the smallest information criterion is chosen. This value is larger by a factor of &lt;code&gt;n_samples&lt;/code&gt; compared to Eqns. 2.15 and 2.16 in (Zou et al, 2007).</source>
          <target state="translated">모든 알파에서 정보 기준 ( 'aic', 'bic')의 값입니다. 정보 기준이 가장 작은 알파가 선택됩니다. 이 값은 &lt;code&gt;n_samples&lt;/code&gt; 비교하여 n_samples 만큼 큽니다 . (Zou et al, 2007)에서 2.15 및 2.16.</target>
        </trans-unit>
        <trans-unit id="31a3294fc25a32d76657f5de9f45e5deb67968f8" translate="yes" xml:space="preserve">
          <source>The value of the largest coefficient.</source>
          <target state="translated">가장 큰 계수의 값입니다.</target>
        </trans-unit>
        <trans-unit id="35a39b75c4cf1051868175c0eb7c4d08a5d8c4c6" translate="yes" xml:space="preserve">
          <source>The value of the smallest coefficient.</source>
          <target state="translated">가장 작은 계수의 값입니다.</target>
        </trans-unit>
        <trans-unit id="d764819e9c8551a1ae19a24b5d4cd3ac77d8b2aa" translate="yes" xml:space="preserve">
          <source>The values corresponding the quantiles of reference.</source>
          <target state="translated">참조 Quantile에 해당하는 값입니다.</target>
        </trans-unit>
        <trans-unit id="e64c591fdc6bfea9ce8a9d182cdb9d3354d8a90b" translate="yes" xml:space="preserve">
          <source>The values listed by the ValueError exception correspond to the functions measuring prediction accuracy described in the following sections. The scorer objects for those functions are stored in the dictionary &lt;code&gt;sklearn.metrics.SCORERS&lt;/code&gt;.</source>
          <target state="translated">ValueError 예외로 나열된 값은 다음 섹션에서 설명하는 예측 정확도를 측정하는 함수에 해당합니다. 해당 함수의 스코어러 오브젝트는 사전 &lt;code&gt;sklearn.metrics.SCORERS&lt;/code&gt; 에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad8b80eff2782593fcb8941c5fc504eacc683633" translate="yes" xml:space="preserve">
          <source>The values of the parameter that will be evaluated.</source>
          <target state="translated">평가할 매개 변수의 값입니다.</target>
        </trans-unit>
        <trans-unit id="896e61b11bd1cccb5014a25cacfbd49baded2da1" translate="yes" xml:space="preserve">
          <source>The values to be assigned to each cluster of samples</source>
          <target state="translated">각 샘플 군집에 할당 할 값</target>
        </trans-unit>
        <trans-unit id="de1379c1aa59c6a0f9d415d70cec6205d70e58b1" translate="yes" xml:space="preserve">
          <source>The variance for each feature in the training set. Used to compute &lt;code&gt;scale_&lt;/code&gt;. Equal to &lt;code&gt;None&lt;/code&gt; when &lt;code&gt;with_std=False&lt;/code&gt;.</source>
          <target state="translated">교육 세트의 각 기능에 대한 차이입니다. &lt;code&gt;scale_&lt;/code&gt; 을 계산하는 데 사용됩니다 . 같음 &lt;code&gt;None&lt;/code&gt; 때 &lt;code&gt;with_std=False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6909f327165fbbe5fe9d7a24773b9839e3b76030" translate="yes" xml:space="preserve">
          <source>The variance of the training samples transformed by a projection to each component.</source>
          <target state="translated">각 구성 요소에 대한 투영에 의해 변형 된 학습 샘플의 분산입니다.</target>
        </trans-unit>
        <trans-unit id="73778e0f44de95a7d306fdc5c4bc68ceb4bf8f71" translate="yes" xml:space="preserve">
          <source>The varying values of the coefficients along the path. It is not present if the &lt;code&gt;fit_path&lt;/code&gt; parameter is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">경로를 따라 다양한 계수 값. &lt;code&gt;fit_path&lt;/code&gt; 매개 변수가 &lt;code&gt;False&lt;/code&gt; 인 경우 존재하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f193fe45abdd49c251c120544e6bc124439f7f88" translate="yes" xml:space="preserve">
          <source>The vector \(h_i\) is called &amp;ldquo;latent&amp;rdquo; because it is unobserved. \(\epsilon\) is considered a noise term distributed according to a Gaussian with mean 0 and covariance \(\Psi\) (i.e. \(\epsilon \sim \mathcal{N}(0, \Psi)\)), \(\mu\) is some arbitrary offset vector. Such a model is called &amp;ldquo;generative&amp;rdquo; as it describes how \(x_i\) is generated from \(h_i\). If we use all the \(x_i\)&amp;lsquo;s as columns to form a matrix \(\mathbf{X}\) and all the \(h_i\)&amp;lsquo;s as columns of a matrix \(\mathbf{H}\) then we can write (with suitably defined \(\mathbf{M}\) and \(\mathbf{E}\)):</source>
          <target state="translated">\ (h_i \) 벡터는 관찰되지 않기 때문에 &quot;잠재적&quot;이라고합니다. \ (\ epsilon \)은 평균 0과 공분산 \ (\ Psi \) (예 : \ (\ epsilon \ sim \ mathcal {N} (0, \ Psi) \))을 갖는 가우시안에 따라 분포 된 노이즈 항으로 간주됩니다. \ (\ mu \)는 임의의 오프셋 벡터입니다. 이러한 모델은 \ (h_i \)에서 \ (x_i \)가 생성되는 방법을 설명하므로 &quot;생성&quot;이라고합니다. 모든 \ (x_i \)를 열로 사용하여 행렬 \ (\ mathbf {X} \)를 형성하고 모든 \ (h_i \)를 행렬의 열로 사용하면 \ (\ mathbf {H} \ ) 다음으로 작성할 수 있습니다 (적절하게 정의 된 \ (\ mathbf {M} \) 및 \ (\ mathbf {E} \)).</target>
        </trans-unit>
        <trans-unit id="4545cfee48c8d7d2034c72caee40a8d82cfcf4ce" translate="yes" xml:space="preserve">
          <source>The verbose setting on the MiniBatchKMeans enables us to see that some clusters are reassigned during the successive calls to partial-fit. This is because the number of patches that they represent has become too low, and it is better to choose a random new cluster.</source>
          <target state="translated">MiniBatchKMeans의 상세 설정을 통해 부분 맞춤에 대한 연속 호출 중에 일부 클러스터가 재 할당되는 것을 볼 수 있습니다. 패치가 나타내는 패치 수가 너무 낮아서 임의의 새 클러스터를 선택하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e4c09c360935c392206a8639f0a0b8f4c48b519d" translate="yes" xml:space="preserve">
          <source>The verbosity level</source>
          <target state="translated">상세 수준</target>
        </trans-unit>
        <trans-unit id="4b4be8a44f0a986b95a00a99e1db7cc81cee43d8" translate="yes" xml:space="preserve">
          <source>The verbosity level.</source>
          <target state="translated">자세한 수준.</target>
        </trans-unit>
        <trans-unit id="bca220a25d0b85cbc18bcc37bc0c66babd623c39" translate="yes" xml:space="preserve">
          <source>The verbosity level. The default, zero, means silent mode.</source>
          <target state="translated">자세한 수준. 기본값 인 0은 자동 모드를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b790263c39903969cb477edb620406690c93cb40" translate="yes" xml:space="preserve">
          <source>The verbosity level: if non zero, progress messages are printed. Above 50, the output is sent to stdout. The frequency of the messages increases with the verbosity level. If it more than 10, all iterations are reported.</source>
          <target state="translated">상세 레벨 : 0이 아닌 경우 진행 메시지가 인쇄됩니다. 50 이상에서는 출력이 표준 출력으로 전송됩니다. 메시지의 빈도는 상세 레벨에 따라 증가합니다. 10을 초과하면 모든 반복이보고됩니다.</target>
        </trans-unit>
        <trans-unit id="ac67f0eccad920e701e068f47d28e090c55e23b1" translate="yes" xml:space="preserve">
          <source>The verbosity mode of the function. By default that of the memory object is used.</source>
          <target state="translated">기능의 상세 모드입니다. 기본적으로 메모리 객체의 메모리 객체가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="31fbaba32a3bec24c49d9ccad5d6e7edcbc904dc" translate="yes" xml:space="preserve">
          <source>The versions of scikit-learn and its dependencies</source>
          <target state="translated">scikit-learn의 버전 및 해당 종속성</target>
        </trans-unit>
        <trans-unit id="6a1686cc9631522f215a91033f5d185a9b750f85" translate="yes" xml:space="preserve">
          <source>The vocabulary extracted by this vectorizer is hence much bigger and can now resolve ambiguities encoded in local positioning patterns:</source>
          <target state="translated">이 벡터 라이저에 의해 추출 된 어휘는 훨씬 더 커서 이제 로컬 위치 패턴으로 인코딩 된 모호성을 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16d6455593e440b1ece6b5d9b609b990b16728ff" translate="yes" xml:space="preserve">
          <source>The weighted average probabilities for a sample would then be calculated as follows:</source>
          <target state="translated">표본에 대한 가중 평균 확률은 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="cf3727918257ef88c9160136d7b98b7188c886ca" translate="yes" xml:space="preserve">
          <source>The weighted impurity decrease equation is the following:</source>
          <target state="translated">가중 불순물 감소 방정식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b71363fa16752021c27a44ccc8c03e740b0054e3" translate="yes" xml:space="preserve">
          <source>The weights \(w\) of the model can be access:</source>
          <target state="translated">모델의 가중치 \ (w \)에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd37cf293f530a725eccba4fc386300500a89671" translate="yes" xml:space="preserve">
          <source>The weights for each observation in X. If None, all observations are assigned equal weight (default: None)</source>
          <target state="translated">X에서 각 관측치의 가중치입니다. None 인 경우 모든 관측치에 동일한 가중치가 할당됩니다 (기본값 : 없음).</target>
        </trans-unit>
        <trans-unit id="0fd9c75eb2401f4a1ca174b965b1602b9d82941e" translate="yes" xml:space="preserve">
          <source>The weights of each feature computed by the &lt;code&gt;fit&lt;/code&gt; method call are stored in a model attribute:</source>
          <target state="translated">&lt;code&gt;fit&lt;/code&gt; 메소드 호출로 계산 된 각 피처의 가중치 는 모델 속성에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="44235eb4c2d368f2a7e225131bb791a1dc59a457" translate="yes" xml:space="preserve">
          <source>The weights of each mixture components.</source>
          <target state="translated">각 혼합물 성분의 무게.</target>
        </trans-unit>
        <trans-unit id="dd426f25816730ede96a98b838186f9fc1553a50" translate="yes" xml:space="preserve">
          <source>The wine dataset is a classic and very easy multi-class classification dataset.</source>
          <target state="translated">와인 데이터 셋은 클래식하고 매우 쉬운 멀티 클래스 분류 데이터 셋입니다.</target>
        </trans-unit>
        <trans-unit id="9f15574c628488edf549f3131c3e1a8bfce37b9c" translate="yes" xml:space="preserve">
          <source>The word &amp;ldquo;article&amp;rdquo; is a significant feature, based on how often people quote previous posts like this: &amp;ldquo;In article [article ID], [name] &amp;lt;[e-mail address]&amp;gt; wrote:&amp;rdquo;</source>
          <target state="translated">&quot;기사&quot;라는 단어는 사람들이 다음과 같은 이전 게시물을 인용하는 빈도에 따라 중요한 기능입니다. &quot;기사 [기사 ID], [이름] &amp;lt;[이메일 주소]&amp;gt; 작성 :&quot;</target>
        </trans-unit>
        <trans-unit id="364df8b6c4c1dfcb405abf5ac32289b3f8338a10" translate="yes" xml:space="preserve">
          <source>The word &lt;em&gt;restricted&lt;/em&gt; refers to the bipartite structure of the model, which prohibits direct interaction between hidden units, or between visible units. This means that the following conditional independencies are assumed:</source>
          <target state="translated">&lt;em&gt;제한된&lt;/em&gt; 단어 는 모델의 이분자 구조를 나타내며, 숨겨진 단위 간 또는 가시적 단위 간 직접적인 상호 작용을 금지합니다. 이는 다음과 같은 조건부 독립성을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="92b782ef9bfc8a9813d7ea0d8efb9106d8f1896e" translate="yes" xml:space="preserve">
          <source>The word boundaries-aware variant &lt;code&gt;char_wb&lt;/code&gt; is especially interesting for languages that use white-spaces for word separation as it generates significantly less noisy features than the raw &lt;code&gt;char&lt;/code&gt; variant in that case. For such languages it can increase both the predictive accuracy and convergence speed of classifiers trained using such features while retaining the robustness with regards to misspellings and word derivations.</source>
          <target state="translated">경계를 인식하는 변형 &lt;code&gt;char_wb&lt;/code&gt; 는 단어 구분을 위해 공백을 사용하는 언어에서 특히 흥미 롭습니다 .이 경우 원시 &lt;code&gt;char&lt;/code&gt; 변형 보다 노이즈가 적은 기능을 생성 합니다. 이러한 언어의 경우 철자 및 단어 파생과 관련하여 견고성을 유지하면서 이러한 기능을 사용하여 학습 한 분류기의 예측 정확도 및 수렴 속도를 모두 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e8bd120180a9cd30000d6c7bc4b945e5f585fc6" translate="yes" xml:space="preserve">
          <source>The worst case complexity is given by O(n^(k+2/p)) with n = n_samples, p = n_features. (D. Arthur and S. Vassilvitskii, &amp;lsquo;How slow is the k-means method?&amp;rsquo; SoCG2006)</source>
          <target state="translated">최악의 복잡도는 n = n_samples, p = n_features 인 O (n ^ (k + 2 / p))로 나타냅니다. (D. Arthur와 S. Vassilvitskii, 'k- 평균 방법은 얼마나 느리 냐?'SoCG2006)</target>
        </trans-unit>
        <trans-unit id="08b4bc51642b52ec53b43a5b2dca7586d296a859" translate="yes" xml:space="preserve">
          <source>Theil-Sen Estimator: robust multivariate regression model.</source>
          <target state="translated">Theil-Sen Estimator : 강력한 다변량 회귀 모델.</target>
        </trans-unit>
        <trans-unit id="26357ed7a886288385aec0522bda7ee91031a5a9" translate="yes" xml:space="preserve">
          <source>Theil-Sen Estimators in a Multiple Linear Regression Model, 2009 Xin Dang, Hanxiang Peng, Xueqin Wang and Heping Zhang &lt;a href=&quot;http://home.olemiss.edu/~xdang/papers/MTSE.pdf&quot;&gt;http://home.olemiss.edu/~xdang/papers/MTSE.pdf&lt;/a&gt;</source>
          <target state="translated">다중 선형 회귀 모형의 테일 센 추정기, 2009 Xin Dang, Hanxiang Peng, Xueqin Wang 및 Heping Zhang &lt;a href=&quot;http://home.olemiss.edu/~xdang/papers/MTSE.pdf&quot;&gt;http://home.olemiss.edu/~xdang/papers/MTSE.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfbe9912c49db3d4af2258ea17cbacd11611139b" translate="yes" xml:space="preserve">
          <source>Theil-Sen Regression</source>
          <target state="translated">테일 센 회귀</target>
        </trans-unit>
        <trans-unit id="43407a9ed591c227c94e72cd0fbe8ae10a8a282d" translate="yes" xml:space="preserve">
          <source>TheilSen is good for small outliers, both in direction X and y, but has a break point above which it performs worse than OLS.</source>
          <target state="translated">TheilSen은 X와 y 방향으로 작은 특이 치에 적합하지만 중단 점이 OLS보다 성능이 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="bae71614b2af83560543a8e9bca47722a78d80c8" translate="yes" xml:space="preserve">
          <source>Their harmonic mean called &lt;strong&gt;V-measure&lt;/strong&gt; is computed by &lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;v_measure_score&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;V-measure&lt;/strong&gt; 라는 그들의 고조파 평균 은 &lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt; &lt;code&gt;v_measure_score&lt;/code&gt; 에&lt;/a&gt; 의해 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="de0b6ab722b9ec4be95cb7086fea273ea373e1de" translate="yes" xml:space="preserve">
          <source>Then fire an ipython shell and run the work-in-progress script with:</source>
          <target state="translated">그런 다음 ipython 쉘을 시작하고 다음을 사용하여 진행중인 작업 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8f78bb6cc31961e9507c2d8e418f53fe822a9ecd" translate="yes" xml:space="preserve">
          <source>Then one can show that to classify a data point after scaling is equivalent to finding the estimated class mean \(\mu^*_k\) which is closest to the data point in the Euclidean distance. But this can be done just as well after projecting on the \(K-1\) affine subspace \(H_K\) generated by all the \(\mu^*_k\) for all classes. This shows that, implicit in the LDA classifier, there is a dimensionality reduction by linear projection onto a \(K-1\) dimensional space.</source>
          <target state="translated">그런 다음 스케일링 후 데이터 포인트를 분류하는 것은 유클리드 거리의 데이터 포인트에 가장 가까운 추정 클래스 평균 \ (\ mu ^ * _ k \)를 찾는 것과 같습니다. 그러나 이것은 모든 클래스에 대해 모든 \ (\ mu ^ * _ k \)에 의해 생성 된 \ (K-1 \) affine subspace \ (H_K \)에 투영 한 후에도 수행 할 수 있습니다. 이는 LDA 분류기에서 암시 적으로 \ (K-1 \) 차원 공간으로 선형 투영함으로써 차원 축소가 있음을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="37e493a483dcc9fefbfec81c47f8c835f7340e3f" translate="yes" xml:space="preserve">
          <source>Then the Davies-Bouldin index is defined as:</source>
          <target state="translated">그런 다음 Davies-Bouldin 지수는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="54059dffef3b64a1ba00cd6fbe5ba85d85229195" translate="yes" xml:space="preserve">
          <source>Then the metrics are defined as:</source>
          <target state="translated">그런 다음 메트릭은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8da3ae858e8aee4768b456c38c7b9a98b999a912" translate="yes" xml:space="preserve">
          <source>Then the multiclass MCC is defined as:</source>
          <target state="translated">그런 다음 멀티 클래스 MCC는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="826d143749061228ef1caa51bd344b5a543a3ad8" translate="yes" xml:space="preserve">
          <source>Then the rows of \(Z\) are clustered using &lt;a href=&quot;clustering#k-means&quot;&gt;k-means&lt;/a&gt;. The first &lt;code&gt;n_rows&lt;/code&gt; labels provide the row partitioning, and the remaining &lt;code&gt;n_columns&lt;/code&gt; labels provide the column partitioning.</source>
          <target state="translated">그런 다음 \ (Z \)의 행은 &lt;a href=&quot;clustering#k-means&quot;&gt;k-means를&lt;/a&gt; 사용하여 클러스터됩니다 . 첫 번째 &lt;code&gt;n_rows&lt;/code&gt; 레이블은 행 분할을 제공하고 나머지 &lt;code&gt;n_columns&lt;/code&gt; 레이블은 열 분할을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a7548beecedd6ae525f17db272cd47fef5592b2e" translate="yes" xml:space="preserve">
          <source>Then, applying the Euclidean (L2) norm, we obtain the following tf-idfs for document 1:</source>
          <target state="translated">그런 다음 유클리드 (L2) 규범을 적용하여 문서 1에 대해 다음 tf-idfs를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="743e0b74d42270bf2752b1121cf66d48c177b1df" translate="yes" xml:space="preserve">
          <source>Then, the &lt;code&gt;raw_X&lt;/code&gt; to be fed to &lt;code&gt;FeatureHasher.transform&lt;/code&gt; can be constructed using:</source>
          <target state="translated">그런 다음 &lt;code&gt;raw_X&lt;/code&gt; 에 공급할 &lt;code&gt;FeatureHasher.transform&lt;/code&gt; 는 다음을 사용하여 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4665e6f004c55fa84e60f1409a5b03c15037dd8c" translate="yes" xml:space="preserve">
          <source>Theoretical bounds</source>
          <target state="translated">이론적 한계</target>
        </trans-unit>
        <trans-unit id="3ebe4a41a0b35192395aac8a80293b4ff462a23b" translate="yes" xml:space="preserve">
          <source>There are 3 different APIs for evaluating the quality of a model&amp;rsquo;s predictions:</source>
          <target state="translated">모델 예측의 품질을 평가하기위한 3 가지 API가 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa910de5e10f2b04644e63996efaedb310779ee6" translate="yes" xml:space="preserve">
          <source>There are a number of ways to convert between a distance metric and a similarity measure, such as a kernel. Let &lt;code&gt;D&lt;/code&gt; be the distance, and &lt;code&gt;S&lt;/code&gt; be the kernel:</source>
          <target state="translated">거리 측정법과 커널과 같은 유사성 측정 값 사이를 변환하는 방법에는 여러 가지가 있습니다. 하자 &lt;code&gt;D&lt;/code&gt; 는 거리, 그리고 &lt;code&gt;S&lt;/code&gt; 는 커널 수 :</target>
        </trans-unit>
        <trans-unit id="daf4e822cec5d40489080bfb83cea014bb21271c" translate="yes" xml:space="preserve">
          <source>There are also a couple of cons (vs using a CountVectorizer with an in-memory vocabulary):</source>
          <target state="translated">또한 몇 가지 단점이 있습니다 (메모리 내 어휘와 함께 CountVectorizer 사용).</target>
        </trans-unit>
        <trans-unit id="17151dd0dcece68b8abecb55a500335bd2f90b73" translate="yes" xml:space="preserve">
          <source>There are concepts that are hard to learn because decision trees do not express them easily, such as XOR, parity or multiplexer problems.</source>
          <target state="translated">의사 결정 트리가 XOR, 패리티 또는 멀티플렉서 문제와 같이 의사 결정 트리를 쉽게 표현하지 못하기 때문에 배우기가 어려운 개념이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbd19b439fe6ba80531cd23629fc7a9a883a8dcf" translate="yes" xml:space="preserve">
          <source>There are different things to keep in mind when dealing with data corrupted by outliers:</source>
          <target state="translated">특이 치에 의해 손상된 데이터를 처리 할 때 명심해야 할 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fcc62fa36cf231416a60ac162100095676c743b" translate="yes" xml:space="preserve">
          <source>There are many learning routines which rely on nearest neighbors at their core. One example is &lt;a href=&quot;density#kernel-density&quot;&gt;kernel density estimation&lt;/a&gt;, discussed in the &lt;a href=&quot;density#density-estimation&quot;&gt;density estimation&lt;/a&gt; section.</source>
          <target state="translated">가장 가까운 이웃을 중심으로하는 많은 학습 루틴이 있습니다. 한 가지 예는 &lt;a href=&quot;density#density-estimation&quot;&gt;밀도 추정&lt;/a&gt; 섹션 에서 논의 된 &lt;a href=&quot;density#kernel-density&quot;&gt;커널 밀도 추정&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="84513801465c2346e62e2a9ecaecce1cb0c3994b" translate="yes" xml:space="preserve">
          <source>There are several known issues in our provided &amp;lsquo;english&amp;rsquo; stop word list. See &lt;a href=&quot;#nqy18&quot; id=&quot;id5&quot;&gt;[NQY18]&lt;/a&gt;.</source>
          <target state="translated">제공된 '영어'중지 단어 목록에는 몇 가지 알려진 문제가 있습니다. &lt;a href=&quot;#nqy18&quot; id=&quot;id5&quot;&gt;[NQY18]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="87d60889b216a9f6a8543438325d8902e749b92a" translate="yes" xml:space="preserve">
          <source>There are ten different images of each of 40 distinct subjects. For some subjects, the images were taken at different times, varying the lighting, facial expressions (open / closed eyes, smiling / not smiling) and facial details (glasses / no glasses). All the images were taken against a dark homogeneous background with the subjects in an upright, frontal position (with tolerance for some side movement).</source>
          <target state="translated">40 개의 개별 피사체 각각에 대해 10 개의 서로 다른 이미지가 있습니다. 일부 피사체의 경우 조명, 얼굴 표정 (열린 눈 / 닫은 눈, 웃는 얼굴 / 웃지 않은 얼굴) 및 얼굴 세부 사항 (안경 / 안경)을 변경하여 이미지가 다른 시간에 촬영되었습니다. 모든 이미지는 대상이 똑바로 정면 위치에있는 어두운 동종 배경에 대해 촬영되었습니다 (일부 측면 움직임에 대한 내성).</target>
        </trans-unit>
        <trans-unit id="840b342f8bab010ed9a33830388b79c022d751bb" translate="yes" xml:space="preserve">
          <source>There are three different implementations of Support Vector Regression: &lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt;&lt;code&gt;SVR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.svm.nusvr#sklearn.svm.NuSVR&quot;&gt;&lt;code&gt;NuSVR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.linearsvr#sklearn.svm.LinearSVR&quot;&gt;&lt;code&gt;LinearSVR&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.svm.linearsvr#sklearn.svm.LinearSVR&quot;&gt;&lt;code&gt;LinearSVR&lt;/code&gt;&lt;/a&gt; provides a faster implementation than &lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt;&lt;code&gt;SVR&lt;/code&gt;&lt;/a&gt; but only considers linear kernels, while &lt;a href=&quot;generated/sklearn.svm.nusvr#sklearn.svm.NuSVR&quot;&gt;&lt;code&gt;NuSVR&lt;/code&gt;&lt;/a&gt; implements a slightly different formulation than &lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt;&lt;code&gt;SVR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.linearsvr#sklearn.svm.LinearSVR&quot;&gt;&lt;code&gt;LinearSVR&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#svm-implementation-details&quot;&gt;Implementation details&lt;/a&gt; for further details.</source>
          <target state="translated">Support Vector Regression에는 &lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt; &lt;code&gt;SVR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;generated/sklearn.svm.nusvr#sklearn.svm.NuSVR&quot;&gt; &lt;code&gt;NuSVR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;generated/sklearn.svm.linearsvr#sklearn.svm.LinearSVR&quot;&gt; &lt;code&gt;LinearSVR&lt;/code&gt; &lt;/a&gt; 의 세 가지 구현이 있습니다. &lt;a href=&quot;generated/sklearn.svm.linearsvr#sklearn.svm.LinearSVR&quot;&gt; &lt;code&gt;LinearSVR&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt; &lt;code&gt;SVR&lt;/code&gt; &lt;/a&gt; 보다 빠른 구현을 제공 하지만 선형 커널 만 고려하지만 &lt;a href=&quot;generated/sklearn.svm.nusvr#sklearn.svm.NuSVR&quot;&gt; &lt;code&gt;NuSVR&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt; &lt;code&gt;SVR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;generated/sklearn.svm.linearsvr#sklearn.svm.LinearSVR&quot;&gt; &lt;code&gt;LinearSVR&lt;/code&gt; &lt;/a&gt; 과 는 약간 다른 공식을 구현합니다 . 자세한 내용은 &lt;a href=&quot;#svm-implementation-details&quot;&gt;구현 세부 사항&lt;/a&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="6325cb8ad2d750db2de1f50457999e3ed60c95ad" translate="yes" xml:space="preserve">
          <source>There are three main kinds of dataset interfaces that can be used to get datasets depending on the desired type of dataset.</source>
          <target state="translated">원하는 데이터 셋 유형에 따라 데이터 셋을 얻는 데 사용할 수있는 세 가지 주요 데이터 셋 인터페이스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d867308d6cfc04930e6d66867b250110233d07e" translate="yes" xml:space="preserve">
          <source>There are two options to assign labels:</source>
          <target state="translated">레이블을 지정하는 두 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="60a8f9c96bc7f93958ce08005db84d1ac5e8a2b4" translate="yes" xml:space="preserve">
          <source>There are two ways of evaluating a biclustering result: internal and external. Internal measures, such as cluster stability, rely only on the data and the result themselves. Currently there are no internal bicluster measures in scikit-learn. External measures refer to an external source of information, such as the true solution. When working with real data the true solution is usually unknown, but biclustering artificial data may be useful for evaluating algorithms precisely because the true solution is known.</source>
          <target state="translated">바이러스 터링 결과를 평가하는 방법에는 내부 및 외부의 두 가지가 있습니다. 군집 안정성과 같은 내부 측정 값은 데이터와 결과 자체에만 의존합니다. 현재 scikit-learn에는 내부 bicluster 측정이 없습니다. 외부 측정은 실제 솔루션과 같은 외부 정보 소스를 나타냅니다. 실제 데이터로 작업 할 때 실제 솔루션은 일반적으로 알려져 있지 않지만 실제 솔루션을 알고 있기 때문에 인공 데이터를 biclustering하면 알고리즘을 정확하게 평가하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21ade7db23177cbafdee1241d820ab218814e247" translate="yes" xml:space="preserve">
          <source>There are two ways to specify multiple scoring metrics for the &lt;code&gt;scoring&lt;/code&gt; parameter:</source>
          <target state="translated">&lt;code&gt;scoring&lt;/code&gt; 매개 변수에 여러 스코어링 메트릭을 지정하는 두 가지 방법이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cdf4947857438b0c51097ba679415b8309e576f2" translate="yes" xml:space="preserve">
          <source>There exists two types of MDS algorithm: metric and non metric. In the scikit-learn, the class &lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt;&lt;code&gt;MDS&lt;/code&gt;&lt;/a&gt; implements both. In Metric MDS, the input similarity matrix arises from a metric (and thus respects the triangular inequality), the distances between output two points are then set to be as close as possible to the similarity or dissimilarity data. In the non-metric version, the algorithms will try to preserve the order of the distances, and hence seek for a monotonic relationship between the distances in the embedded space and the similarities/dissimilarities.</source>
          <target state="translated">MDS 알고리즘에는 메트릭과 비 메트릭의 두 가지 유형이 있습니다. Scikit-learn에서 &lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt; &lt;code&gt;MDS&lt;/code&gt; &lt;/a&gt; 클래스 는 두 가지를 모두 구현합니다. Metric MDS에서, 입력 유사성 매트릭스는 메트릭으로부터 발생하고 (따라서 삼각 불평등을 고려함), 출력 두 점 사이의 거리는 유사성 또는 비 유사성 데이터에 가능한 한 가깝게 설정됩니다. 비 메트릭 버전에서 알고리즘은 거리의 순서를 유지하려고 시도하므로 임베디드 공간의 거리와 유사성 / 비 유사성 간의 단조로운 관계를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="9e945ec56932f8495741411aac1ef0391f41ea70" translate="yes" xml:space="preserve">
          <source>There is absolutely no guarantee of recovering a ground truth. First, choosing the right number of clusters is hard. Second, the algorithm is sensitive to initialization, and can fall into local minima, although scikit-learn employs several tricks to mitigate this issue.</source>
          <target state="translated">진실을 회복 할 것이라는 보장은 없습니다. 먼저 올바른 수의 클러스터를 선택하기가 어렵습니다. 둘째, 알고리즘은 초기화에 민감하며 scikit-learn은이 문제를 완화하기 위해 몇 가지 트릭을 사용하지만 로컬 최소값에 속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5fa0b690cccf03ea1d32deadc1c15c3039ee96d" translate="yes" xml:space="preserve">
          <source>There is built-in support for sparse data given in any matrix in a format supported by &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/sparse.html&quot;&gt;scipy.sparse&lt;/a&gt;. For maximum efficiency, however, use the CSR matrix format as defined in &lt;a href=&quot;http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csr_matrix.html&quot;&gt;scipy.sparse.csr_matrix&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/sparse.html&quot;&gt;scipy.sparse가&lt;/a&gt; 지원하는 형식으로 모든 매트릭스에 제공된 희소 데이터에 대한 지원이 내장되어 있습니다. 그러나 최대 효율을 위해서는 &lt;a href=&quot;http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csr_matrix.html&quot;&gt;scipy.sparse.csr_matrix에&lt;/a&gt; 정의 된대로 CSR 매트릭스 형식을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7bf90eed7a42877d9e674dd4cae64f5ef3af07a9" translate="yes" xml:space="preserve">
          <source>There is no general rule to select an alpha parameter for recovery of non-zero coefficients. It can by set by cross-validation (&lt;code&gt;LassoCV&lt;/code&gt; or &lt;code&gt;LassoLarsCV&lt;/code&gt;), though this may lead to under-penalized models: including a small number of non-relevant variables is not detrimental to prediction score. BIC (&lt;code&gt;LassoLarsIC&lt;/code&gt;) tends, on the opposite, to set high values of alpha.</source>
          <target state="translated">0이 아닌 계수의 복구를 위해 알파 매개 변수를 선택하는 일반적인 규칙은 없습니다. 교차 유효성 검사 ( &lt;code&gt;LassoCV&lt;/code&gt; 또는 &lt;code&gt;LassoLarsCV&lt;/code&gt; ) 로 설정할 수 있지만 불충분 한 모델로 이어질 수 있습니다. 관련이없는 소수의 변수를 포함하면 예측 점수에 해가되지 않습니다. BIC ( &lt;code&gt;LassoLarsIC&lt;/code&gt; )는 높은 알파 값을 설정하는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff0ab54a4c7a8a1cf35484dbae4d9dce95d5c026" translate="yes" xml:space="preserve">
          <source>There might be a difference in the scores obtained between &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;solver=liblinear&lt;/code&gt; or &lt;code&gt;LinearSVC&lt;/code&gt; and the external liblinear library directly, when &lt;code&gt;fit_intercept=False&lt;/code&gt; and the fit &lt;code&gt;coef_&lt;/code&gt; (or) the data to be predicted are zeroes. This is because for the sample(s) with &lt;code&gt;decision_function&lt;/code&gt; zero, &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;LinearSVC&lt;/code&gt; predict the negative class, while liblinear predicts the positive class. Note that a model with &lt;code&gt;fit_intercept=False&lt;/code&gt; and having many samples with &lt;code&gt;decision_function&lt;/code&gt; zero, is likely to be a underfit, bad model and you are advised to set &lt;code&gt;fit_intercept=True&lt;/code&gt; and increase the intercept_scaling.</source>
          <target state="translated">&lt;code&gt;fit_intercept=False&lt;/code&gt; 이고 fit &lt;code&gt;coef_&lt;/code&gt; (또는) 예측 데이터가 0 일 때 &lt;code&gt;solver=liblinear&lt;/code&gt; 또는 &lt;code&gt;LinearSVC&lt;/code&gt; 를사용한 &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; &lt;/a&gt; 과 외부 liblinear 라이브러리간에 직접 얻은 점수에 차이가있을 수 있습니다 . &lt;code&gt;decision_function&lt;/code&gt; _ &lt;code&gt;LinearSVC&lt;/code&gt; 0 인 샘플의 경우 &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; &lt;/a&gt; 및 LinearSVC 가 음수 클래스를 예측하는 반면 liblinear는 양수 클래스를 예측하기 때문입니다. 와 모델 있습니다 &lt;code&gt;fit_intercept=False&lt;/code&gt; 및 많은 샘플을 가지고 &lt;code&gt;decision_function&lt;/code&gt; 제로는 underfit, 나쁜 모델이 될 가능성이 높습니다 당신은 설정하는 것이 좋다 &lt;code&gt;fit_intercept=True&lt;/code&gt; 인터셉트 스케일링을 참 이십시오.</target>
        </trans-unit>
        <trans-unit id="4a4216d2986ca1c413a45927f7f8dc07ca811204" translate="yes" xml:space="preserve">
          <source>Therefore, a logarithmic (&lt;code&gt;np.log1p&lt;/code&gt;) and an exponential function (&lt;code&gt;np.expm1&lt;/code&gt;) will be used to transform the targets before training a linear regression model and using it for prediction.</source>
          <target state="translated">따라서 로그 ( &lt;code&gt;np.log1p&lt;/code&gt; ) 및 지수 함수 ( &lt;code&gt;np.expm1&lt;/code&gt; )를 사용하여 선형 회귀 모델을 학습하고 예측에 사용하기 전에 대상을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6912f2dbecf0d873a7ad1021b00fc015a0232427" translate="yes" xml:space="preserve">
          <source>These are transformers that are not intended to be used on features, only on supervised learning targets. See also &lt;a href=&quot;compose#transformed-target-regressor&quot;&gt;Transforming target in regression&lt;/a&gt; if you want to transform the prediction target for learning, but evaluate the model in the original (untransformed) space.</source>
          <target state="translated">이 기능은 기능에 사용되지 않으며 감독되는 학습 목표에만 사용됩니다. 학습을 위해 예측 대상을 변환하지만 원래 (변환되지 않은) 공간에서 모델을 평가하려면 &lt;a href=&quot;compose#transformed-target-regressor&quot;&gt;회귀 분석에서 대상 변환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c615abfdf912d61f49e70314e0bacb6d3789d48" translate="yes" xml:space="preserve">
          <source>These classifiers are attractive because they have closed-form solutions that can be easily computed, are inherently multiclass, have proven to work well in practice, and have no hyperparameters to tune.</source>
          <target state="translated">이러한 분류기는 쉽게 계산할 수 있고 본질적으로 멀티 클래스이며 실제로 잘 작동하는 것으로 입증되었으며 튜닝 할 하이퍼 파라미터가 없기 때문에 폐쇄 형 솔루션이 있기 때문에 매력적입니다.</target>
        </trans-unit>
        <trans-unit id="fde55c65b8197fd0cbaa58300d107768af9ed389" translate="yes" xml:space="preserve">
          <source>These constraint are useful to impose a certain local structure, but they also make the algorithm faster, especially when the number of the samples is high.</source>
          <target state="translated">이러한 제약은 특정 로컬 구조를 적용하는 데 유용하지만 특히 샘플 수가 많은 경우 알고리즘을 더 빠르게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ebd210a6b7ae21f6cafc3c41203edaaa46e25728" translate="yes" xml:space="preserve">
          <source>These datasets are useful to quickly illustrate the behavior of the various algorithms implemented in scikit-learn. They are however often too small to be representative of real world machine learning tasks.</source>
          <target state="translated">이 데이터 세트는 scikit-learn에서 구현 된 다양한 알고리즘의 동작을 신속하게 설명하는 데 유용합니다. 그러나 실제 기계 학습 작업을 대표하기에는 너무 작은 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="8d2ab26191aa60fb366e6a03a6fce9c7d01208ba" translate="yes" xml:space="preserve">
          <source>These environment variables should be set before importing scikit-learn.</source>
          <target state="translated">scikit-learn을 가져 오기 전에 이러한 환경 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b821932825baa77bb11f8b1f95c8cc38b1d75bf5" translate="yes" xml:space="preserve">
          <source>These estimators are called similarly to their counterparts, with &amp;lsquo;CV&amp;rsquo; appended to their name.</source>
          <target state="translated">이 견적서는 이름에 'CV'가 추가되어 상대방과 유사하게 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8bef6d4f1ba3e716c219b98d63998eb428a7438d" translate="yes" xml:space="preserve">
          <source>These families of algorithms are useful to find linear relations between two multivariate datasets: the &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; arguments of the &lt;code&gt;fit&lt;/code&gt; method are 2D arrays.</source>
          <target state="translated">이 알고리즘 계열은 두 개의 다변량 데이터 집합간에 선형 관계를 찾는 데 유용 합니다. &lt;code&gt;fit&lt;/code&gt; 방법 의 &lt;code&gt;X&lt;/code&gt; 및 &lt;code&gt;Y&lt;/code&gt; 인수 는 2D 배열입니다.</target>
        </trans-unit>
        <trans-unit id="e90c7c20b495d718d6ee1761b52661a07d31f2ac" translate="yes" xml:space="preserve">
          <source>These figures aid in illustrating how a point cloud can be very flat in one direction&amp;ndash;which is where PCA comes in to choose a direction that is not flat.</source>
          <target state="translated">이러한 수치는 점 구름이 한 방향으로 매우 평평한 방법을 설명하는 데 도움이됩니다. PCA가 평평하지 않은 방향을 선택하게됩니다.</target>
        </trans-unit>
        <trans-unit id="5b3c06102d71e9aa21ce3635f214fb7544bfe93e" translate="yes" xml:space="preserve">
          <source>These functions have an &lt;code&gt;multioutput&lt;/code&gt; keyword argument which specifies the way the scores or losses for each individual target should be averaged. The default is &lt;code&gt;'uniform_average'&lt;/code&gt;, which specifies a uniformly weighted mean over outputs. If an &lt;code&gt;ndarray&lt;/code&gt; of shape &lt;code&gt;(n_outputs,)&lt;/code&gt; is passed, then its entries are interpreted as weights and an according weighted average is returned. If &lt;code&gt;multioutput&lt;/code&gt; is &lt;code&gt;'raw_values'&lt;/code&gt; is specified, then all unaltered individual scores or losses will be returned in an array of shape &lt;code&gt;(n_outputs,)&lt;/code&gt;.</source>
          <target state="translated">이 함수에는 각 개별 목표의 점수 또는 손실을 평균화하는 방법을 지정 하는 &lt;code&gt;multioutput&lt;/code&gt; 키워드 인수가 있습니다. 기본값은 &lt;code&gt;'uniform_average'&lt;/code&gt; 이며 출력에 균일하게 가중치를 적용한 평균을 지정합니다. 모양 의 &lt;code&gt;ndarray&lt;/code&gt; &lt;code&gt;(n_outputs,)&lt;/code&gt; 가 전달되면 해당 항목이 가중치로 해석되고 그에 따른 가중치 평균이 반환됩니다. 경우 &lt;code&gt;multioutput&lt;/code&gt; 인 &lt;code&gt;'raw_values'&lt;/code&gt; 가 지정되는 모든 변경되지 않은 개별 득점 또는 손실 형상의 배열에 반환한다 &lt;code&gt;(n_outputs,)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f744234c4fef479ca52103694dddbbb39569d67" translate="yes" xml:space="preserve">
          <source>These functions return a tuple &lt;code&gt;(X, y)&lt;/code&gt; consisting of a &lt;code&gt;n_samples&lt;/code&gt; * &lt;code&gt;n_features&lt;/code&gt; numpy array &lt;code&gt;X&lt;/code&gt; and an array of length &lt;code&gt;n_samples&lt;/code&gt; containing the targets &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">이 함수 는 &lt;code&gt;n_samples&lt;/code&gt; * &lt;code&gt;n_features&lt;/code&gt; numpy 배열 &lt;code&gt;X&lt;/code&gt; 및 대상 &lt;code&gt;y&lt;/code&gt; 를 포함하는 길이 &lt;code&gt;n_samples&lt;/code&gt; 배열 로 구성된 튜플 &lt;code&gt;(X, y)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7ea4b087a47ece8eb67eda1c13d069b3e5f40d70" translate="yes" xml:space="preserve">
          <source>These generators produce a matrix of features and corresponding discrete targets.</source>
          <target state="translated">이 생성기는 피쳐 매트릭스와 해당하는 개별 타겟을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7870342f67a34d74383fe781d3e91593569275ef" translate="yes" xml:space="preserve">
          <source>These images how similar features are merged together using feature agglomeration.</source>
          <target state="translated">이 이미지는 기능 응집을 사용하여 유사한 기능이 어떻게 병합되는지 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2f6550a6d877a222d311c7f7d2e4efbab68b15f3" translate="yes" xml:space="preserve">
          <source>These matrices can be used to impose connectivity in estimators that use connectivity information, such as Ward clustering (&lt;a href=&quot;clustering#hierarchical-clustering&quot;&gt;Hierarchical clustering&lt;/a&gt;), but also to build precomputed kernels, or similarity matrices.</source>
          <target state="translated">이 행렬은 Ward 클러스터링 ( &lt;a href=&quot;clustering#hierarchical-clustering&quot;&gt;계층 적 클러스터링&lt;/a&gt; ) 과 같은 연결 정보를 사용하는 추정기에서 연결을 부과 할 뿐만 아니라 사전 계산 된 커널 또는 유사성 매트릭스를 빌드 하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1476efa19922a5a7b34be362fc1e06a3ae81118" translate="yes" xml:space="preserve">
          <source>These metrics &lt;strong&gt;require the knowledge of the ground truth classes&lt;/strong&gt; while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting).</source>
          <target state="translated">이러한 측정법 &lt;strong&gt;은&lt;/strong&gt; 실제 사용 가능한 거의 없지만 실제지도 &lt;strong&gt;수업에 대한 지식이&lt;/strong&gt; 필요하거나 인간 감독자가 직접지도하는 학습 환경과 같이 수동으로 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="1b78634dcd7b938ef7f64bb3d2756751845f06a1" translate="yes" xml:space="preserve">
          <source>These objects take as input a scoring function that returns univariate scores and p-values (or only scores for &lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt;&lt;code&gt;SelectKBest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;SelectPercentile&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">이 객체는 일 변량 점수와 p- 값을 반환하는 점수 매기기 함수를 입력으로 &lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt; &lt;code&gt;SelectKBest&lt;/code&gt; &lt;/a&gt; (또는 SelectKBest 및 &lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt; &lt;code&gt;SelectPercentile&lt;/code&gt; 에&lt;/a&gt; 대한 점수 만 ).</target>
        </trans-unit>
        <trans-unit id="3403571e1d1dd77b054e08b8e749a4d9b5c4d316" translate="yes" xml:space="preserve">
          <source>These parameters can be accessed through the members &lt;code&gt;dual_coef_&lt;/code&gt; which holds the difference \(\alpha_i - \alpha_i^*\), &lt;code&gt;support_vectors_&lt;/code&gt; which holds the support vectors, and &lt;code&gt;intercept_&lt;/code&gt; which holds the independent term \(\rho\)</source>
          <target state="translated">이 매개 변수는 차이 \ (\ alpha_i-\ alpha_i ^ * \)를 보유하는 &lt;code&gt;dual_coef_&lt;/code&gt; 멤버 ,지지 벡터를 보유하는 &lt;code&gt;support_vectors_&lt;/code&gt; 및 독립 항 \ (\ rho \)을 보유하는 &lt;code&gt;intercept_&lt;/code&gt; 를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9254aef96f1c8727db185406da2727e74822dda9" translate="yes" xml:space="preserve">
          <source>These quantities are also related to the (\(F_1\)) score, which is defined as the harmonic mean of precision and recall.</source>
          <target state="translated">이 수량은 (\ (F_1 \)) 점수와도 관련이 있으며,이 점수는 정확도와 재현의 조화 평균으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8ec6209edcb97e57d934d74900289c4f7467ca16" translate="yes" xml:space="preserve">
          <source>These represent the 14 features measured at each point of the map grid. The latitude/longitude values for the grid are discussed below. Missing data is represented by the value -9999.</source>
          <target state="translated">이들은지도 격자의 각 지점에서 측정 된 14 개의 지형지 물을 나타냅니다. 그리드의 위도 / 경도 값은 아래에 설명되어 있습니다. 누락 된 데이터는 -9999 값으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e11ef00d62661e429b4b798a345a9c8d62a348e6" translate="yes" xml:space="preserve">
          <source>These steps are performed either a maximum number of times (&lt;code&gt;max_trials&lt;/code&gt;) or until one of the special stop criteria are met (see &lt;code&gt;stop_n_inliers&lt;/code&gt; and &lt;code&gt;stop_score&lt;/code&gt;). The final model is estimated using all inlier samples (consensus set) of the previously determined best model.</source>
          <target state="translated">이 단계는 최대 횟수 ( &lt;code&gt;max_trials&lt;/code&gt; ) 또는 특수 중지 기준 중 하나가 충족 될 때까지 수행됩니다 ( &lt;code&gt;stop_n_inliers&lt;/code&gt; 및 &lt;code&gt;stop_score&lt;/code&gt; 참조 ). 최종 모델은 이전에 결정된 최상의 모델의 모든 내부 샘플 (합의 세트)을 사용하여 추정됩니다.</target>
        </trans-unit>
        <trans-unit id="eff89650d9905b662c6df80228e926f2f144c91b" translate="yes" xml:space="preserve">
          <source>These three distances are special cases of the beta-divergence family, with \(\beta = 2, 1, 0\) respectively &lt;a href=&quot;#id15&quot; id=&quot;id8&quot;&gt;[6]&lt;/a&gt;. The beta-divergence are defined by :</source>
          <target state="translated">이 세 거리는 베타-분화 패밀리의 특별한 경우이며, 각각 \ (\ beta = 2, 1, 0 \) &lt;a href=&quot;#id15&quot; id=&quot;id8&quot;&gt;[6]&lt;/a&gt; 입니다. 베타 발산은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="100dafc268c3e9d0b628da1715aed2440b14ba32" translate="yes" xml:space="preserve">
          <source>These throughputs are achieved on a single process. An obvious way to increase the throughput of your application is to spawn additional instances (usually processes in Python because of the &lt;a href=&quot;https://wiki.python.org/moin/GlobalInterpreterLock&quot;&gt;GIL&lt;/a&gt;) that share the same model. One might also add machines to spread the load. A detailed explanation on how to achieve this is beyond the scope of this documentation though.</source>
          <target state="translated">이러한 처리량은 단일 프로세스에서 달성됩니다. 응용 프로그램의 처리량을 늘리는 확실한 방법 은 동일한 모델을 공유하는 추가 인스턴스 (일반적으로 &lt;a href=&quot;https://wiki.python.org/moin/GlobalInterpreterLock&quot;&gt;GIL&lt;/a&gt; 때문에 Python의 프로세스)를 생성하는 것 입니다. 부하를 분산시키기 위해 기계를 추가 할 수도 있습니다. 이를 달성하는 방법에 대한 자세한 설명은이 문서의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="e63971597c4df5f2dc150f90b566e1219b6a632a" translate="yes" xml:space="preserve">
          <source>They are not sparse, i.e., they use the whole samples/features information to perform the prediction.</source>
          <target state="translated">그것들은 희소하지 않으며, 즉 전체 샘플 / 기능 정보를 사용하여 예측을 수행한다.</target>
        </trans-unit>
        <trans-unit id="26f84bd6fe103542912ebb1fb588d29515a2fd6d" translate="yes" xml:space="preserve">
          <source>They can be loaded using the following functions:</source>
          <target state="translated">다음 기능을 사용하여로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7ddbd9f45ee3f137b5eb656135dce7584351da0" translate="yes" xml:space="preserve">
          <source>They expose a &lt;code&gt;split&lt;/code&gt; method which accepts the input dataset to be split and yields the train/test set indices for each iteration of the chosen cross-validation strategy.</source>
          <target state="translated">입력 데이터 세트가 분할되도록 허용하고 선택한 교차 유효성 검사 전략의 각 반복에 대해 트레인 / 테스트 세트 색인을 생성 하는 &lt;code&gt;split&lt;/code&gt; 방법을 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="03bbcc98e1d567dd0afc112fe378a99851c98226" translate="yes" xml:space="preserve">
          <source>They lose efficiency in high dimensional spaces &amp;ndash; namely when the number of features exceeds a few dozens.</source>
          <target state="translated">고차원 공간에서, 즉 피처 수가 수십을 초과하면 효율성이 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="a673690dbc33eee17ee6f3995f817097918876ff" translate="yes" xml:space="preserve">
          <source>This Scaler removes the median and scales the data according to the quantile range (defaults to IQR: Interquartile Range). The IQR is the range between the 1st quartile (25th quantile) and the 3rd quartile (75th quantile).</source>
          <target state="translated">이 스케일러는 중앙값을 제거하고 Quantile 범위 (기본값은 IQR : Interquartile Range)에 따라 데이터를 스케일링합니다. IQR은 1 분위 (25 분위)와 3 분위 (75 분위) 사이의 범위입니다.</target>
        </trans-unit>
        <trans-unit id="d9994b645c162ae9e80a2c6bc1c81390f2e92325" translate="yes" xml:space="preserve">
          <source>This Warning is used in meta estimators GridSearchCV and RandomizedSearchCV and the cross-validation helper function cross_val_score to warn when there is an error while fitting the estimator.</source>
          <target state="translated">이 경고는 메타 추정기 GridSearchCV 및 RandomizedSearchCV 및 교차 유효성 검증 헬퍼 함수 cross_val_score에서 사용되어 추정기를 피팅하는 동안 오류가 발생했을 때 경고합니다.</target>
        </trans-unit>
        <trans-unit id="7f5e3d23312509826c13f1663d34b7e7912ac4af" translate="yes" xml:space="preserve">
          <source>This algorithm can be viewed as an instance or data reduction method, since it reduces the input data to a set of subclusters which are obtained directly from the leaves of the CFT. This reduced data can be further processed by feeding it into a global clusterer. This global clusterer can be set by &lt;code&gt;n_clusters&lt;/code&gt;. If &lt;code&gt;n_clusters&lt;/code&gt; is set to None, the subclusters from the leaves are directly read off, otherwise a global clustering step labels these subclusters into global clusters (labels) and the samples are mapped to the global label of the nearest subcluster.</source>
          <target state="translated">이 알고리즘은 입력 데이터를 CFT의 잎에서 직접 얻은 서브 클러스터 세트로 줄이기 때문에 인스턴스 또는 데이터 축소 방법으로 볼 수 있습니다. 이 축소 된 데이터는 글로벌 클러스터 러에 공급하여 추가 처리 할 수 ​​있습니다. 이 글로벌 클러스터 러는 &lt;code&gt;n_clusters&lt;/code&gt; 로 설정할 수 있습니다 . &lt;code&gt;n_clusters&lt;/code&gt; 가 None으로 설정되어 있으면 리프 의 하위 클러스터가 직접 판독됩니다. 그렇지 않으면 전역 클러스터링 단계에서 이러한 하위 클러스터를 전역 클러스터 (라벨)로 레이블을 지정하고 샘플은 가장 가까운 하위 클러스터의 전역 레이블에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="895ec6bb1e64f58ea59b9ae781fa620e703125a9" translate="yes" xml:space="preserve">
          <source>This algorithm encompasses several works from the literature. When random subsets of the dataset are drawn as random subsets of the samples, then this algorithm is known as Pasting &lt;a href=&quot;#r4d113ba76fc0-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. If samples are drawn with replacement, then the method is known as Bagging &lt;a href=&quot;#r4d113ba76fc0-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;. When random subsets of the dataset are drawn as random subsets of the features, then the method is known as Random Subspaces &lt;a href=&quot;#r4d113ba76fc0-3&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;. Finally, when base estimators are built on subsets of both samples and features, then the method is known as Random Patches &lt;a href=&quot;#r4d113ba76fc0-4&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt;.</source>
          <target state="translated">이 알고리즘은 문헌의 여러 작품을 포함합니다. 데이터 세트의 임의의 부분 집합이 샘플의 임의의 부분 집합으로 그려 질 때이 알고리즘을 Pasting &lt;a href=&quot;#r4d113ba76fc0-1&quot; id=&quot;id1&quot;&gt;[1]이라고&lt;/a&gt; 합니다. 샘플을 교체하여 채취하는 경우이 방법을 배깅 (Baging) &lt;a href=&quot;#r4d113ba76fc0-2&quot; id=&quot;id2&quot;&gt;[2]이라고&lt;/a&gt; 합니다. 데이터 세트의 임의의 부분 집합이 특징의 임의의 부분 집합으로 그려 질 때,이 방법은 무작위 부분 공간으로 알려져있다 &lt;a href=&quot;#r4d113ba76fc0-3&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt; . 마지막으로,베이스 추정기가 샘플과 피처의 서브셋을 기반으로 할 때이 방법을 랜덤 패치 &lt;a href=&quot;#r4d113ba76fc0-4&quot; id=&quot;id4&quot;&gt;[4]라고&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="870122c945d57891e89c2ba931542331f1b4afdb" translate="yes" xml:space="preserve">
          <source>This algorithm encompasses several works from the literature. When random subsets of the dataset are drawn as random subsets of the samples, then this algorithm is known as Pasting &lt;a href=&quot;#rb1846455d0e5-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. If samples are drawn with replacement, then the method is known as Bagging &lt;a href=&quot;#rb1846455d0e5-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;. When random subsets of the dataset are drawn as random subsets of the features, then the method is known as Random Subspaces &lt;a href=&quot;#rb1846455d0e5-3&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;. Finally, when base estimators are built on subsets of both samples and features, then the method is known as Random Patches &lt;a href=&quot;#rb1846455d0e5-4&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt;.</source>
          <target state="translated">이 알고리즘은 문헌의 여러 작품을 포함합니다. 데이터 세트의 임의의 부분 집합이 샘플의 임의의 부분 집합으로 그려 질 때이 알고리즘을 Pasting &lt;a href=&quot;#rb1846455d0e5-1&quot; id=&quot;id1&quot;&gt;[1]이라고&lt;/a&gt; 합니다. 샘플을 교체하여 채취하는 경우이 방법을 배깅 (Baging) &lt;a href=&quot;#rb1846455d0e5-2&quot; id=&quot;id2&quot;&gt;[2]이라고&lt;/a&gt; 합니다. 데이터 세트의 임의의 부분 집합이 특징의 임의의 부분 집합으로 그려 질 때,이 방법은 무작위 부분 공간으로 알려져있다 &lt;a href=&quot;#rb1846455d0e5-3&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt; . 마지막으로,베이스 추정기가 샘플과 피처의 서브셋을 기반으로 할 때이 방법을 랜덤 패치 &lt;a href=&quot;#rb1846455d0e5-4&quot; id=&quot;id4&quot;&gt;[4]라고&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="866e774dfaaba96a720c3090067c49c13cac935f" translate="yes" xml:space="preserve">
          <source>This algorithm finds a (usually very good) approximate truncated singular value decomposition using randomization to speed up the computations. It is particularly fast on large matrices on which you wish to extract only a small number of components. In order to obtain further speed up, &lt;code&gt;n_iter&lt;/code&gt; can be set &amp;lt;=2 (at the cost of loss of precision).</source>
          <target state="translated">이 알고리즘은 랜덤 화를 사용하여 계산 속도를 높이기 위해 (대개 매우 좋은) 근사한 특이 값 분해를 찾습니다. 적은 수의 구성 요소 만 추출하려는 큰 행렬에서는 특히 빠릅니다. 더 빠른 속도를 얻기 위해 &lt;code&gt;n_iter&lt;/code&gt; 는 &amp;lt;= 2로 설정 될 수 있습니다 (정밀도 손실 비용).</target>
        </trans-unit>
        <trans-unit id="77977d31f5357c834112cbb27bbc98b5c64c10d7" translate="yes" xml:space="preserve">
          <source>This algorithm has constant memory complexity, on the order of &lt;code&gt;batch_size&lt;/code&gt;, enabling use of np.memmap files without loading the entire file into memory.</source>
          <target state="translated">이 알고리즘은 &lt;code&gt;batch_size&lt;/code&gt; 순서로 메모리 복잡성이 일정 하므로 전체 파일을 메모리에로드하지 않고도 np.memmap 파일을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9586aed3b1a5b6a2c44b32af5cc0558b6ad496a6" translate="yes" xml:space="preserve">
          <source>This algorithm solves the normalized cut for k=2: it is a normalized spectral clustering.</source>
          <target state="translated">이 알고리즘은 k = 2에 대한 정규화 된 컷을 해결합니다. 정규화 된 스펙트럼 클러스터링입니다.</target>
        </trans-unit>
        <trans-unit id="01c65a021c885e4e00baaaa5c6652a314a97daa3" translate="yes" xml:space="preserve">
          <source>This algorithm will always use all the components it has access to, needing held-out data or information theoretical criteria to decide how many components to use in the absence of external cues.</source>
          <target state="translated">이 알고리즘은 항상 외부 큐가 없을 때 사용할 컴포넌트 수를 결정하기 위해 보유 데이터 또는 정보 이론적 기준이 필요한 액세스 가능한 모든 컴포넌트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ddf04fe856314e7dd4ddddf49f4086029e04d842" translate="yes" xml:space="preserve">
          <source>This allows better model selection than probabilistic PCA in the presence of heteroscedastic noise:</source>
          <target state="translated">이것은이 분산 잡음이 존재하는 경우 확률 적 PCA보다 더 나은 모델 선택을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3307a2458ebbefda8ea7fe8b898077ec4cadcf2c" translate="yes" xml:space="preserve">
          <source>This also works where final estimator is &lt;code&gt;None&lt;/code&gt;: all prior transformations are applied.</source>
          <target state="translated">최종 추정기가 &lt;code&gt;None&lt;/code&gt; 경우에도 작동합니다 . 모든 이전 변환이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c63b80512d8853cd76b24210ee07543da5c60fc4" translate="yes" xml:space="preserve">
          <source>This assumption is the base of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_Space_Model&quot;&gt;Vector Space Model&lt;/a&gt; often used in text classification and clustering contexts.</source>
          <target state="translated">이 가정은 텍스트 분류 및 클러스터링 컨텍스트에서 자주 사용되는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_Space_Model&quot;&gt;벡터 공간 모델&lt;/a&gt; 의 기초입니다 .</target>
        </trans-unit>
        <trans-unit id="8142b653ecd3322ad782e8a8807635d6c4c0325e" translate="yes" xml:space="preserve">
          <source>This calibration results in a lower log-loss. Note that an alternative would have been to increase the number of base estimators which would have resulted in a similar decrease in log-loss.</source>
          <target state="translated">이 교정으로 로그 손실이 줄어 듭니다. 대안은 기본 추정기의 수를 늘려서 로그 손실이 비슷하게 감소했음을 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="3ba422e075fa10216e381bf46530abda4e719fab" translate="yes" xml:space="preserve">
          <source>This call requires the estimation of a p x q matrix, which may be an issue in high dimensional space.</source>
          <target state="translated">이 호출은 높은 차원의 공간에서 문제가 될 수있는 apxq 행렬의 추정이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="345a3bd30c8553d3251f728b344d1bd100958670" translate="yes" xml:space="preserve">
          <source>This can be confirmed on a independent testing set with similar remarks:</source>
          <target state="translated">이는 비슷한 설명이있는 독립적 인 테스트 세트에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e60927eda9d0f07135f56fa39eaa1a8f1f9c2813" translate="yes" xml:space="preserve">
          <source>This can be done by introducing &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-informative_prior#Uninformative_priors&quot;&gt;uninformative priors&lt;/a&gt; over the hyper parameters of the model. The \(\ell_{2}\) regularization used in &lt;a href=&quot;#id2&quot;&gt;Ridge Regression&lt;/a&gt; is equivalent to finding a maximum a posteriori estimation under a Gaussian prior over the parameters \(w\) with precision \(\lambda^{-1}\). Instead of setting &lt;code&gt;lambda&lt;/code&gt; manually, it is possible to treat it as a random variable to be estimated from the data.</source>
          <target state="translated">이는 모델의 하이퍼 파라미터에 대한 &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-informative_prior#Uninformative_priors&quot;&gt;정보가없는&lt;/a&gt; 우선 순위 를 도입하여 수행 할 수 있습니다 . &lt;a href=&quot;#id2&quot;&gt;릿지 회귀 분석에&lt;/a&gt; 사용 된 \ (\ ell_ {2} \) 정규화 는 정밀도 \ (\ lambda ^ {-1} \)를 사용하여 매개 변수 \ (w \)보다 가우시안 하에서 최대 사후 추정값을 찾는 것과 같습니다. &lt;code&gt;lambda&lt;/code&gt; 수동으로 설정하는 대신 데이터에서 추정 할 임의의 변수로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="aa181018cfeb3219e1e67073f9c58ca90a0c4faa" translate="yes" xml:space="preserve">
          <source>This can be done by using the &lt;a href=&quot;generated/sklearn.model_selection.train_test_split#sklearn.model_selection.train_test_split&quot;&gt;&lt;code&gt;train_test_split&lt;/code&gt;&lt;/a&gt; utility function.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.train_test_split#sklearn.model_selection.train_test_split&quot;&gt; &lt;code&gt;train_test_split&lt;/code&gt; &lt;/a&gt; 유틸리티 기능 을 사용하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="821e5435b62e56a883478da64d6731f6479103d5" translate="yes" xml:space="preserve">
          <source>This can be set to a higher value than the actual number of features in any of the input files, but setting it to a lower value will cause an exception to be raised.</source>
          <target state="translated">입력 파일의 실제 기능 수보다 더 높은 값으로 설정할 수 있지만 더 낮은 값으로 설정하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4a0bd36c1ccd6d51b38a900236d58695657d5aff" translate="yes" xml:space="preserve">
          <source>This class allows to infer an approximate posterior distribution over the parameters of a Gaussian mixture distribution. The effective number of components can be inferred from the data.</source>
          <target state="translated">이 클래스는 가우스 혼합 분포의 모수에 대한 대략적인 후방 분포를 유추 할 수 있습니다. 데이터에서 유효 개수의 구성 요소를 유추 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6130cf2c7564234b715447525f16ff596ebe842e" translate="yes" xml:space="preserve">
          <source>This class can be used to cross-validate time series data samples that are observed at fixed time intervals.</source>
          <target state="translated">이 클래스는 고정 된 시간 간격으로 관찰되는 시계열 데이터 샘플을 교차 검증하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88afb4091eb2a25b2e2017ee8508b1ff5c5ae125" translate="yes" xml:space="preserve">
          <source>This class implements a meta estimator that fits a number of randomized decision trees (a.k.a. extra-trees) on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting.</source>
          <target state="translated">이 클래스는 데이터 세트의 다양한 서브 샘플에 다수의 무작위 의사 결정 트리 (일명 여분의 트리)에 맞는 메타 추정기를 구현하고 예측 정확도를 개선하고 과적 합을 제어하기 위해 평균화를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dd60f6580be8e1908408c4fbfd8d3915f46e55b1" translate="yes" xml:space="preserve">
          <source>This class implements logistic regression using liblinear, newton-cg, sag of lbfgs optimizer. The newton-cg, sag and lbfgs solvers support only L2 regularization with primal formulation. The liblinear solver supports both L1 and L2 regularization, with a dual formulation only for the L2 penalty.</source>
          <target state="translated">이 클래스는 liblinear, newton-cg, lbfgs 최적화 프로그램을 사용하여 로지스틱 회귀를 구현합니다. newton-cg, sag 및 lbfgs 솔버는 기본 공식을 사용한 L2 정규화 만 지원합니다. liblinear 솔버는 L2 페널티에 대해서만 이중 공식을 사용하여 L1 및 L2 정규화를 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="350693d0493245dcbd676a8f10e001d5020f745e" translate="yes" xml:space="preserve">
          <source>This class implements regularized logistic regression using the &amp;lsquo;liblinear&amp;rsquo; library, &amp;lsquo;newton-cg&amp;rsquo;, &amp;lsquo;sag&amp;rsquo; and &amp;lsquo;lbfgs&amp;rsquo; solvers. It can handle both dense and sparse input. Use C-ordered arrays or CSR matrices containing 64-bit floats for optimal performance; any other input format will be converted (and copied).</source>
          <target state="translated">이 클래스는 'liblinear'라이브러리, 'newton-cg', 'sag'및 'lbfgs'솔버를 사용하여 정규화 된 로지스틱 회귀를 구현합니다. 밀집된 입력과 드문 드문 한 입력을 모두 처리 할 수 ​​있습니다. 최적의 성능을 위해 C 순서 배열 또는 64 비트 부동 소수점을 포함하는 CSR 행렬을 사용하십시오. 다른 입력 형식은 변환 및 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="2c107aea4a3526193efe1f31d97ccab92891d87f" translate="yes" xml:space="preserve">
          <source>This class implements the Graphical Lasso algorithm.</source>
          <target state="translated">이 클래스는 그래픽 올가미 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="456e7e6f7be68de425401d6f66fe28d8a1090538" translate="yes" xml:space="preserve">
          <source>This class implements the algorithm known as AdaBoost-SAMME [2].</source>
          <target state="translated">이 클래스는 AdaBoost-SAMME [2]로 알려진 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="003b6bf538c58eeda3c6fd28b21967bfd8b6c40e" translate="yes" xml:space="preserve">
          <source>This class implements the algorithm known as AdaBoost.R2 [2].</source>
          <target state="translated">이 클래스는 AdaBoost.R2 [2]로 알려진 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="63c4b52b10df12140782204ea7cf58fe0edab9de" translate="yes" xml:space="preserve">
          <source>This class implements two types of prior for the weights distribution: a finite mixture model with Dirichlet distribution and an infinite mixture model with the Dirichlet Process. In practice Dirichlet Process inference algorithm is approximated and uses a truncated distribution with a fixed maximum number of components (called the Stick-breaking representation). The number of components actually used almost always depends on the data.</source>
          <target state="translated">이 클래스는 가중치 분포에 대해 두 가지 유형의 사전 분배를 구현합니다. Dirichlet 분포를 갖는 유한 혼합물 모델 및 Dirichlet Process를 사용한 무한 혼합 모델. 실제로 Dirichlet Process 추론 알고리즘은 근사치이며 고정 된 최대 개수의 구성 요소 (스틱 분리 표현이라고 함)와 함께 잘린 분포를 사용합니다. 실제로 사용되는 구성 요소의 수는 거의 항상 데이터에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e15e7e7d8d04d41fdd2a4f34183baa0366e86dea" translate="yes" xml:space="preserve">
          <source>This class inherits from PLS with mode=&amp;rdquo;A&amp;rdquo; and deflation_mode=&amp;rdquo;canonical&amp;rdquo;, norm_y_weights=True and algorithm=&amp;rdquo;nipals&amp;rdquo;, but svd should provide similar results up to numerical errors.</source>
          <target state="translated">이 클래스는 mode =&amp;rdquo;A&amp;rdquo;및 deflation_mode =&amp;rdquo;canonical&amp;rdquo;, norm_y_weights = True 및 algorithm =&amp;rdquo;nipals&amp;rdquo;를 사용하여 PLS에서 상속하지만 svd는 숫자 오류까지 유사한 결과를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="a0a1d1daa83e6ad727cb13fd589f28f37b44df20" translate="yes" xml:space="preserve">
          <source>This class inherits from both ValueError and AttributeError to help with exception handling and backward compatibility.</source>
          <target state="translated">이 클래스는 ValueError 및 AttributeError를 모두 상속하여 예외 처리 및 이전 버전과의 호환성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d34b4e0a14d3a494edeba399329a47fb49b3ee6c" translate="yes" xml:space="preserve">
          <source>This class is a low-memory alternative to DictVectorizer and CountVectorizer, intended for large-scale (online) learning and situations where memory is tight, e.g. when running prediction code on embedded devices.</source>
          <target state="translated">이 클래스는 DictVectorizer 및 CountVectorizer에 대한 메모리 부족 대안으로, 대규모 (온라인) 학습 및 메모리가 부족한 상황 (예 : 임베디드 장치에서 예측 코드 실행)에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="8e34d865883b535f68990f01a240eaab9f87f080" translate="yes" xml:space="preserve">
          <source>This class is hence suitable for use in the early steps of a &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">따라서이 클래스는 &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt; &lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt; &lt;/a&gt; 의 초기 단계에서 사용하기에 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="eef0760dd6d25fd731b9abce61656453bb690cee" translate="yes" xml:space="preserve">
          <source>This class is useful when the behavior of &lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt; is desired, but the number of groups is large enough that generating all possible partitions with \(P\) groups withheld would be prohibitively expensive. In such a scenario, &lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt;&lt;code&gt;GroupShuffleSplit&lt;/code&gt;&lt;/a&gt; provides a random sample (with replacement) of the train / test splits generated by &lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt; &lt;code&gt;LeavePGroupsOut&lt;/code&gt; &lt;/a&gt; 의 동작 이 필요한 경우에 유용 하지만 \ (P \) 그룹이 보류 된 모든 가능한 파티션을 생성하는 것이 엄청나게 비쌀 정도로 그룹 수는 충분히 큽니다. 이러한 시나리오에서 &lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt; &lt;code&gt;GroupShuffleSplit&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt; &lt;code&gt;LeavePGroupsOut&lt;/code&gt; 에&lt;/a&gt; 의해 생성 된 기차 / 테스트 분할의 무작위 샘플 (교체 포함)을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="edf4c29bfa2afe43016dc0b6660ad50132bd51ec" translate="yes" xml:space="preserve">
          <source>This class provides a uniform interface to fast distance metric functions. The various metrics can be accessed via the &lt;code&gt;get_metric&lt;/code&gt; class method and the metric string identifier (see below). For example, to use the Euclidean distance:</source>
          <target state="translated">이 클래스는 빠른 거리 측정 기능에 대한 균일 한 인터페이스를 제공합니다. &lt;code&gt;get_metric&lt;/code&gt; 클래스 메소드와 메트릭 문자열 식별자 (아래 참조) 를 통해 다양한 메트릭에 액세스 할 수 있습니다 . 예를 들어, 유클리드 거리를 사용하려면 :</target>
        </trans-unit>
        <trans-unit id="336f533fd7cf96bc18f597ff7211d31f0cd62386" translate="yes" xml:space="preserve">
          <source>This class supports both dense and sparse input and the multiclass support is handled according to a one-vs-the-rest scheme.</source>
          <target state="translated">이 클래스는 밀도가 높고 드문 드문 한 입력을 모두 지원하며 멀티 클래스 지원은 일대일 구성표에 따라 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="aebcf6792861578bf4b4a69a0be71898d4023b6a" translate="yes" xml:space="preserve">
          <source>This class supports both dense and sparse input.</source>
          <target state="translated">이 클래스는 고밀도 및 희소 입력을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4042c6697e9df3310aa51f4f2bbe289c3d222c6e" translate="yes" xml:space="preserve">
          <source>This class turns sequences of symbolic feature names (strings) into scipy.sparse matrices, using a hash function to compute the matrix column corresponding to a name. The hash function employed is the signed 32-bit version of Murmurhash3.</source>
          <target state="translated">이 클래스는 이름에 해당하는 행렬 열을 계산하기 위해 해시 함수를 사용하여 기호 기능 이름 (문자열) 시퀀스를 scipy.sparse 행렬로 변환합니다. 사용 된 해시 함수는 서명 된 32 비트 버전의 Murmurhash3입니다.</target>
        </trans-unit>
        <trans-unit id="afb2ca6e635ea8a6abf9d5cec38428c8ecdc147c" translate="yes" xml:space="preserve">
          <source>This classification dataset is constructed by taking a multi-dimensional standard normal distribution and defining classes separated by nested concentric multi-dimensional spheres such that roughly equal numbers of samples are in each class (quantiles of the \(\chi^2\) distribution).</source>
          <target state="translated">이 분류 데이터 세트는 다차원 표준 정규 분포를 취하고 중첩 된 동심 다차원 구체로 구분 된 클래스를 정의하여 대략 같은 수의 샘플이 각 클래스 (\ (\ chi ^ 2 \) 분포의 사 분위수)에 있도록 구성합니다. .</target>
        </trans-unit>
        <trans-unit id="a35e593acabc67ebdf8fae8d0484d5f85056d4a7" translate="yes" xml:space="preserve">
          <source>This classifier is useful as a simple baseline to compare with other (real) classifiers. Do not use it for real problems.</source>
          <target state="translated">이 분류기는 다른 (실제) 분류기와 비교하기위한 간단한 기준으로 유용합니다. 실제 문제에는 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="4ceac36d1efc9bb429dd84350330a84101bb5c8c" translate="yes" xml:space="preserve">
          <source>This classifier lost over a lot of its F-score, just because we removed metadata that has little to do with topic classification. It loses even more if we also strip this metadata from the training data:</source>
          <target state="translated">이 분류 기준은 주제 분류와 관련이 거의없는 메타 데이터를 제거했기 때문에 많은 F 점수를 잃었습니다. 훈련 데이터에서이 메타 데이터를 제거하면 더 많이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="064e5da463cfecd3ca166c4023a79d0a6500160d" translate="yes" xml:space="preserve">
          <source>This combination is implementing in &lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;HashingVectorizer&lt;/code&gt;&lt;/a&gt;, a transformer class that is mostly API compatible with &lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;HashingVectorizer&lt;/code&gt;&lt;/a&gt; is stateless, meaning that you don&amp;rsquo;t have to call &lt;code&gt;fit&lt;/code&gt; on it:</source>
          <target state="translated">이 조합에서 구현되는 &lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt; &lt;code&gt;HashingVectorizer&lt;/code&gt; &lt;/a&gt; 대부분과 호환 API입니다 변압기 클래스 &lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;CountVectorizer&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt; &lt;code&gt;HashingVectorizer&lt;/code&gt; 는&lt;/a&gt; 당신이 호출 할 필요가 없습니다 것을 의미 상태를 저장 &lt;code&gt;fit&lt;/code&gt; 그것을 :</target>
        </trans-unit>
        <trans-unit id="1d56591f4aa7f0ebb864c2d8835af7dfb7f8f26b" translate="yes" xml:space="preserve">
          <source>This combines the values of agglomerated features into a single value, and should accept an array of shape [M, N] and the keyword argument &lt;code&gt;axis=1&lt;/code&gt;, and reduce it to an array of size [M].</source>
          <target state="translated">이렇게하면 집계 된 피처의 값이 단일 값으로 결합되고 모양 [M, N] 배열과 키워드 인수 &lt;code&gt;axis=1&lt;/code&gt; 을 수용하고 크기 [M] 배열로 줄여야합니다.</target>
        </trans-unit>
        <trans-unit id="26c788fe31e79bd1bbf24fbba8a1b8342ff15ce1" translate="yes" xml:space="preserve">
          <source>This consumes less memory than shuffling the data directly.</source>
          <target state="translated">이것은 데이터를 직접 섞는 것보다 적은 메모리를 소비합니다.</target>
        </trans-unit>
        <trans-unit id="9c8cf431c4f1299ae41612f84a50a597aa4a1059" translate="yes" xml:space="preserve">
          <source>This creates binary hashes of input data points by getting the dot product of input points and hash_function then transforming the projection into a binary string array based on the sign (positive/negative) of the projection. A sorted array of binary hashes is created.</source>
          <target state="translated">입력 포인트와 해시 함수의 내적을 얻은 다음 투영의 부호 (양 / 음)에 따라 투영을 이진 문자열 배열로 변환하여 입력 데이터 점의 이진 해시를 만듭니다. 정렬 된 이진 해시 배열이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="75f340063df2a6996986c297d7d4423dc4417e05" translate="yes" xml:space="preserve">
          <source>This cross-validation object is a merge of StratifiedKFold and ShuffleSplit, which returns stratified randomized folds. The folds are made by preserving the percentage of samples for each class.</source>
          <target state="translated">이 교차 유효성 검사 개체는 StratifiedKFold와 ShuffleSplit의 병합으로, 계층화 된 무작위 배를 반환합니다. 접기는 각 클래스의 샘플 비율을 유지하여 만들어집니다.</target>
        </trans-unit>
        <trans-unit id="ab90d891a9b7f61040a0bd2fc78eae2488d53a3a" translate="yes" xml:space="preserve">
          <source>This cross-validation object is a variation of &lt;a href=&quot;sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;. In the kth split, it returns first k folds as train set and the (k+1)th fold as test set.</source>
          <target state="translated">이 교차 유효성 검사 개체는 &lt;a href=&quot;sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt; 변형입니다 . k 번째 스플릿에서는 첫 번째 k 폴드를 기차 세트로, (k + 1) 폴드를 테스트 세트로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c3d6a6171342c06e134b7087a7e83e3f80ba8a79" translate="yes" xml:space="preserve">
          <source>This cross-validation object is a variation of KFold that returns stratified folds. The folds are made by preserving the percentage of samples for each class.</source>
          <target state="translated">이 교차 유효성 검사 개체는 계층화 된 접기를 반환하는 KFold 변형입니다. 접기는 각 클래스의 샘플 비율을 유지하여 만들어집니다.</target>
        </trans-unit>
        <trans-unit id="2c34ca372157ddad0d3d18ffb66a8717775276f6" translate="yes" xml:space="preserve">
          <source>This data sets consists of 3 different types of irises&amp;rsquo; (Setosa, Versicolour, and Virginica) petal and sepal length, stored in a 150x4 numpy.ndarray</source>
          <target state="translated">이 데이터 세트는 150x4 numpy.ndarray에 저장된 3 가지 유형의 홍채 (Setosa, Versicolour 및 Virginica) 꽃잎과 꽃받침 길이로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="158d23b76a72fb850a277110200a4b319b51d7f5" translate="yes" xml:space="preserve">
          <source>This database is also available through the UW CS ftp server:</source>
          <target state="translated">이 데이터베이스는 UW CS ftp 서버를 통해서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f0ed5f875aa21e65ca9d6116dc0e918ff34c0ff" translate="yes" xml:space="preserve">
          <source>This dataset consists of 20,640 samples and 9 features.</source>
          <target state="translated">이 데이터 세트는 20,640 개의 샘플과 9 개의 기능으로 구성되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e15d3adbea56bdf31e76cb4ee55fcf6dfb7c05f" translate="yes" xml:space="preserve">
          <source>This dataset is a collection of JPEG pictures of famous people collected over the internet, all details are available on the official website:</source>
          <target state="translated">이 데이터 세트는 인터넷을 통해 수집 된 유명한 사람들의 JPEG 사진 모음이며 모든 세부 사항은 공식 웹 사이트에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c0b9129c637e05601004735cb7bfdbdba431796" translate="yes" xml:space="preserve">
          <source>This dataset is described in Celeux et al [1]. as:</source>
          <target state="translated">이 데이터 세트는 Celeux et al [1]에 설명되어 있습니다. 같이:</target>
        </trans-unit>
        <trans-unit id="e92704f97c6e77c413a0405e7cf7dd2e32191660" translate="yes" xml:space="preserve">
          <source>This dataset is described in Friedman [1] and Breiman [2].</source>
          <target state="translated">이 데이터 세트는 Friedman [1] 및 Breiman [2]에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="473d3b557a1c23b381f633c2c2acf0c38c2a328f" translate="yes" xml:space="preserve">
          <source>This dataset is made up of 1797 8x8 images. Each image, like the one shown below, is of a hand-written digit. In order to utilize an 8x8 figure like this, we&amp;rsquo;d have to first transform it into a feature vector with length 64.</source>
          <target state="translated">이 데이터 세트는 1797 8x8 이미지로 구성됩니다. 아래에 표시된 것과 같이 각 이미지는 손으로 쓴 숫자입니다. 이와 같은 8x8 그림을 활용하려면 먼저 길이가 64 인 특징 벡터로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="73cdbbbbdb25af126933f658f4b065e86b9c1a55" translate="yes" xml:space="preserve">
          <source>This dataset represents the geographic distribution of species. The dataset is provided by Phillips et. al. (2006).</source>
          <target state="translated">이 데이터 세트는 종의 지리적 분포를 나타냅니다. 데이터 세트는 Phillips et. 알. (2006).</target>
        </trans-unit>
        <trans-unit id="e72397d5f7691c5c60df49442bb007cee4717786" translate="yes" xml:space="preserve">
          <source>This dataset was derived from the 1990 U.S. census, using one row per census block group. A block group is the smallest geographical unit for which the U.S. Census Bureau publishes sample data (a block group typically has a population of 600 to 3,000 people).</source>
          <target state="translated">이 데이터 세트는 인구 조사 블록 그룹당 하나의 행을 사용하여 1990 년 미국 인구 조사에서 파생되었습니다. 블록 그룹은 미국 인구 조사국이 표본 데이터를 게시하는 가장 작은 지리적 단위입니다 (블록 그룹의 인구는 일반적으로 600 ~ 3,000 명).</target>
        </trans-unit>
        <trans-unit id="47bf559cf1abc9fb33a96a120f583ad0bcd0f9f8" translate="yes" xml:space="preserve">
          <source>This dataset was obtained from the StatLib repository. &lt;a href=&quot;http://lib.stat.cmu.edu/datasets/&quot;&gt;http://lib.stat.cmu.edu/datasets/&lt;/a&gt;</source>
          <target state="translated">이 데이터 세트는 StatLib 저장소에서 얻었습니다. &lt;a href=&quot;http://lib.stat.cmu.edu/datasets/&quot;&gt;http://lib.stat.cmu.edu/datasets/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4668c093fae272aec3196fc6d39e4e5a4eede980" translate="yes" xml:space="preserve">
          <source>This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.</source>
          <target state="translated">이 데이터 세트는 Carnegie Mellon University에서 유지 관리되는 StatLib 라이브러리에서 가져 왔습니다.</target>
        </trans-unit>
        <trans-unit id="9b1b90be23e0adb200134bcc2570822a79ae6e88" translate="yes" xml:space="preserve">
          <source>This demonstrates Label Propagation learning a good boundary even with a small amount of labeled data.</source>
          <target state="translated">이것은 소량의 레이블링 된 데이터가 있어도 레이블 전파 학습이 좋은 경계를 학습 함을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="33d36bf521beb70b7b2f4b7e5d24d58f96f46c86" translate="yes" xml:space="preserve">
          <source>This description can be vectorized into a sparse two-dimensional matrix suitable for feeding into a classifier (maybe after being piped into a &lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;text.TfidfTransformer&lt;/code&gt;&lt;/a&gt; for normalization):</source>
          <target state="translated">이 설명은 분류기로 공급하기에 적합한 희소 한 2 차원 행렬로 벡터화 될 수 있습니다 ( 정규화 를 위해 &lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt; &lt;code&gt;text.TfidfTransformer&lt;/code&gt; &lt;/a&gt; 로 파이프 된 후 ).</target>
        </trans-unit>
        <trans-unit id="12f7e332bc936dbb460a17349dda07780cab7782" translate="yes" xml:space="preserve">
          <source>This determines which warnings will be made in the case that this function is being used to return only one of its metrics.</source>
          <target state="translated">이는이 함수를 사용하여 하나의 메트릭 만 반환하는 경우 어떤 경고를할지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a1a66d0ad9255f63c11b93170b95da4e6eeaea4f" translate="yes" xml:space="preserve">
          <source>This downscaling is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Tf-idf&quot;&gt;tf&amp;ndash;idf&lt;/a&gt; for &amp;ldquo;Term Frequency times Inverse Document Frequency&amp;rdquo;.</source>
          <target state="translated">이 다운 스케일링은 &amp;ldquo;Term Frequency times Inverse Document Frequency&amp;rdquo;에서 &lt;a href=&quot;https://en.wikipedia.org/wiki/Tf-idf&quot;&gt;tf&amp;ndash;idf&lt;/a&gt; 라고합니다.</target>
        </trans-unit>
        <trans-unit id="edeebc499fdf886cf2b1fe82f9cc25a148384f70" translate="yes" xml:space="preserve">
          <source>This early stopping strategy is activated if &lt;code&gt;early_stopping=True&lt;/code&gt;; otherwise the stopping criterion only uses the training loss on the entire input data. To better control the early stopping strategy, we can specify a parameter &lt;code&gt;validation_fraction&lt;/code&gt; which set the fraction of the input dataset that we keep aside to compute the validation score. The optimization will continue until the validation score did not improve by at least &lt;code&gt;tol&lt;/code&gt; during the last &lt;code&gt;n_iter_no_change&lt;/code&gt; iterations. The actual number of iterations is available at the attribute &lt;code&gt;n_iter_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;early_stopping=True&lt;/code&gt; 인 경우이 조기 중지 전략이 활성화됩니다 . 그렇지 않으면 정지 기준은 전체 입력 데이터에 대한 훈련 손실 만 사용합니다. 조기 중지 전략을보다 효과적으로 제어 하기 위해 유효성 검사 점수를 계산하기 위해 보관해야하는 입력 데이터 집합의 비율을 설정하는 &lt;code&gt;validation_fraction&lt;/code&gt; 매개 변수를 지정할 수 있습니다 . 검증 점수 이상으로 개선되지 않았다 때까지 최적화가 계속됩니다 &lt;code&gt;tol&lt;/code&gt; 지난 동안 &lt;code&gt;n_iter_no_change&lt;/code&gt; 의 반복. 실제 반복 횟수는 &lt;code&gt;n_iter_&lt;/code&gt; 속성에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6528dcf2523991bd357ca56474b42d537ada09b8" translate="yes" xml:space="preserve">
          <source>This embedding can also &amp;lsquo;work&amp;rsquo; even if the &lt;code&gt;adjacency&lt;/code&gt; variable is not strictly the adjacency matrix of a graph but more generally an affinity or similarity matrix between samples (for instance the heat kernel of a euclidean distance matrix or a k-NN matrix).</source>
          <target state="translated">&lt;code&gt;adjacency&lt;/code&gt; 변수가 그래프의 인접 행렬이 아니라 샘플 사이의 유사성 또는 유사성 행렬 (예 : 유클리드 거리 행렬 또는 k-NN 행렬의 열 커널) 인 경우에도이 임베딩은 '작동'할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="662188aeeffeee289aab2f0d97150266d90c022d" translate="yes" xml:space="preserve">
          <source>This encoding is needed for feeding categorical data to many scikit-learn estimators, notably linear models and SVMs with the standard kernels.</source>
          <target state="translated">이 인코딩은 표준 데이터가 포함 된 많은 scikit-learn 추정기, 특히 선형 모델 및 SVM에 범주 형 데이터를 제공하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="752036d9bd5ae374e975c046f504e0b38de39538" translate="yes" xml:space="preserve">
          <source>This estimator</source>
          <target state="translated">이 견적 자</target>
        </trans-unit>
        <trans-unit id="36ceeb9f387752a577aeb048b3f21cd319ecfb48" translate="yes" xml:space="preserve">
          <source>This estimator allows different columns or column subsets of the input to be transformed separately and the results combined into a single feature space. This is useful for heterogeneous or columnar data, to combine several feature extraction mechanisms or transformations into a single transformer.</source>
          <target state="translated">이 추정기를 사용하면 입력의 다른 열 또는 열 하위 집합을 개별적으로 변환하고 결과를 단일 피처 공간으로 결합 할 수 있습니다. 이는 여러 특징 추출 메커니즘 또는 변환을 단일 변환기로 결합하기 위해 이기종 또는 컬럼 데이터에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="02199e2b9b2bd941c7464261eedf68a6fd2d82e2" translate="yes" xml:space="preserve">
          <source>This estimator applies a list of transformer objects in parallel to the input data, then concatenates the results. This is useful to combine several feature extraction mechanisms into a single transformer.</source>
          <target state="translated">이 추정기는 입력 데이터와 병렬로 변환기 객체 목록을 적용한 다음 결과를 연결합니다. 이는 여러 기능 추출 메커니즘을 단일 변압기에 결합하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a93ab3d6ae360c030a56bd4fabca46c42abdaf54" translate="yes" xml:space="preserve">
          <source>This estimator approximates a slightly different version of the additive chi squared kernel then &lt;code&gt;metric.additive_chi2&lt;/code&gt; computes.</source>
          <target state="translated">이 추정기는 약간 다른 버전의 추가 카이 제곱 커널과 &lt;code&gt;metric.additive_chi2&lt;/code&gt; 다음 metric.additive_chi2가 계산합니다.</target>
        </trans-unit>
        <trans-unit id="57f1dab8dd3e838e06f9128461ff865667eb2891" translate="yes" xml:space="preserve">
          <source>This estimator has built-in support for multi-variate regression (i.e., when y is a 2d-array of shape [n_samples, n_targets]).</source>
          <target state="translated">이 추정기는 다변량 회귀를 기본적으로 지원합니다 (예 : y가 2 차원 배열 [n_samples, n_targets] 인 경우).</target>
        </trans-unit>
        <trans-unit id="ab45bcef3fd31ebffe9c4724334c2d64921dae44" translate="yes" xml:space="preserve">
          <source>This estimator implements regularized linear models with stochastic gradient descent (SGD) learning: the gradient of the loss is estimated each sample at a time and the model is updated along the way with a decreasing strength schedule (aka learning rate). SGD allows minibatch (online/out-of-core) learning, see the partial_fit method. For best results using the default learning rate schedule, the data should have zero mean and unit variance.</source>
          <target state="translated">이 추정기는 확률 적 기울기 하강 (SGD) 학습을 통해 정규화 된 선형 모델을 구현합니다. 손실의 기울기는 한 번에 각 샘플마다 추정되며 감소하는 일정 (일명 학습 속도)에 따라 모델이 업데이트됩니다. SGD는 미니 배치 (온라인 / 핵심) 학습을 허용합니다. partial_fit 방법을 참조하십시오. 기본 학습 속도 일정을 사용하여 최상의 결과를 얻으려면 데이터의 평균 및 단위 분산이 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="5fdb17bfdb14f498d9377f8ca9b7cc2199a41d7f" translate="yes" xml:space="preserve">
          <source>This estimator is stateless (besides constructor parameters), the fit method does nothing but is useful when used in a pipeline.</source>
          <target state="translated">이 추정기는 상태 비 저장 (생성자 매개 변수 외에)이며, fit 메소드는 파이프 라인에서 사용될 때 아무 것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42d08f109b32ce107e9f058e7449521b0b6eab28" translate="yes" xml:space="preserve">
          <source>This estimator scales and translates each feature individually such that it is in the given range on the training set, i.e. between zero and one.</source>
          <target state="translated">이 추정기는 각 기능을 개별적으로 조정하고 트레이닝 세트의 지정된 범위 (예 : 0과 1)에 있도록 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ce7850baf5a7a3e7ef75716db2d2e4af71c92137" translate="yes" xml:space="preserve">
          <source>This estimator scales and translates each feature individually such that the maximal absolute value of each feature in the training set will be 1.0. It does not shift/center the data, and thus does not destroy any sparsity.</source>
          <target state="translated">이 추정기는 훈련 세트에서 각 특징의 최대 절대 값이 1.0이되도록 각각의 특징을 개별적으로 스케일하고 변환합니다. 데이터를 이동 / 중심화하지 않으므로 희소성을 파괴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0ff92b3f8e56701f386ccbc5279ec5fdb2974bc0" translate="yes" xml:space="preserve">
          <source>This estimator scales each feature individually such that the maximal absolute value of each feature in the training set will be 1.0.</source>
          <target state="translated">이 추정기는 훈련 세트에서 각 특징의 최대 절대 값이 1.0이되도록 각각의 특징을 개별적으로 스케일링합니다.</target>
        </trans-unit>
        <trans-unit id="354214ed410106228bbb593cd82a49f32a2508f8" translate="yes" xml:space="preserve">
          <source>This estimator supports two algorithms: a fast randomized SVD solver, and a &amp;ldquo;naive&amp;rdquo; algorithm that uses ARPACK as an eigensolver on (X * X.T) or (X.T * X), whichever is more efficient.</source>
          <target state="translated">이 추정기는 두 개의 알고리즘, 즉 빠른 무작위 SVD 솔버와 ARPACK을 (X * XT) 또는 (XT * X)에서 고유 한 솔버로 사용하는 &quot;순진한&quot;알고리즘 중 더 효율적인 알고리즘을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3ed5861f671a7b7a1c102cd9c37c8bf2e273de13" translate="yes" xml:space="preserve">
          <source>This estimator will run an extensive test-suite for input validation, shapes, etc. Additional tests for classifiers, regressors, clustering or transformers will be run if the Estimator class inherits from the corresponding mixin from sklearn.base.</source>
          <target state="translated">이 추정기는 입력 검증, 형태 등에 대한 광범위한 테스트 슈트를 실행합니다. Estimator 클래스가 sklearn.base의 해당 믹스 인에서 상속하는 경우 분류기, 회귀 자, 클러스터링 또는 변환기에 대한 추가 테스트가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="7011f5e2b484f266188acd0aba4f3d3175f11ed0" translate="yes" xml:space="preserve">
          <source>This example also shows the usefulness of applying Ridge regression to highly ill-conditioned matrices. For such matrices, a slight change in the target variable can cause huge variances in the calculated weights. In such cases, it is useful to set a certain regularization (alpha) to reduce this variation (noise).</source>
          <target state="translated">이 예는 또한 리지드 회귀를 조건이 잘못된 행렬에 적용하는 것이 유용하다는 것을 보여줍니다. 이러한 행렬의 경우 목표 변수가 약간 변경되면 계산 된 가중치가 크게 달라질 수 있습니다. 이러한 경우이 변동 (노이즈)을 줄이기 위해 특정 정규화 (알파)를 설정하는 것이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7f82721c4674480adff4241dbcac8e543f16c868" translate="yes" xml:space="preserve">
          <source>This example applies to olivetti_faces different unsupervised matrix decomposition (dimension reduction) methods from the module &lt;a href=&quot;../../modules/classes#module-sklearn.decomposition&quot;&gt;&lt;code&gt;sklearn.decomposition&lt;/code&gt;&lt;/a&gt; (see the documentation chapter &lt;a href=&quot;../../modules/decomposition#decompositions&quot;&gt;Decomposing signals in components (matrix factorization problems)&lt;/a&gt;) .</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../../modules/classes#module-sklearn.decomposition&quot;&gt; &lt;code&gt;sklearn.decomposition&lt;/code&gt; &lt;/a&gt; 모듈의 olivetti_faces 다른 감독되지 않은 매트릭스 분해 (치수 감소) 방법에 적용됩니다 ( &lt;a href=&quot;../../modules/decomposition#decompositions&quot;&gt;구성 요소의 신호 분해 (매트릭스 인수 분해 문제)&lt;/a&gt; 장 참조 ).</target>
        </trans-unit>
        <trans-unit id="33924f5409489cd3edd1b22f28ee011b17a585da" translate="yes" xml:space="preserve">
          <source>This example compares 2 dimensionality reduction strategies:</source>
          <target state="translated">이 예는 2 가지 차원 축소 전략을 비교합니다.</target>
        </trans-unit>
        <trans-unit id="1ba8c26b14d0dc5555ed6b18d75cbed15c385668" translate="yes" xml:space="preserve">
          <source>This example compares non-nested and nested cross-validation strategies on a classifier of the iris data set. Nested cross-validation (CV) is often used to train a model in which hyperparameters also need to be optimized. Nested CV estimates the generalization error of the underlying model and its (hyper)parameter search. Choosing the parameters that maximize non-nested CV biases the model to the dataset, yielding an overly-optimistic score.</source>
          <target state="translated">이 예에서는 중첩되지 않은 중첩 유효성 검사 전략을 홍채 데이터 세트의 분류 자에서 비교합니다. 중첩 교차 검증 (CV)은 종종 하이퍼 파라미터도 최적화해야하는 모델을 훈련시키는 데 사용됩니다. 중첩 된 CV는 기본 모델 및 (하이퍼) 매개 변수 검색의 일반화 오류를 추정합니다. 중첩되지 않은 CV를 최대화하는 매개 변수를 선택하면 모델이 데이터 세트에 바이어스되어 지나치게 낙관적 인 점수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="7ef1cb506f6769f9ea8f57cc850c6090d62898eb" translate="yes" xml:space="preserve">
          <source>This example compares the timing of Birch (with and without the global clustering step) and MiniBatchKMeans on a synthetic dataset having 100,000 samples and 2 features generated using make_blobs.</source>
          <target state="translated">이 예에서는 make_blobs를 사용하여 생성 된 100,000 개의 샘플과 2 개의 기능이있는 합성 데이터 세트에서 Birch (글로벌 클러스터링 단계 유무) 및 MiniBatchKMeans의 타이밍을 비교합니다.</target>
        </trans-unit>
        <trans-unit id="8901e1f5225dc1b7e06d2fabb8f06f19a3753c45" translate="yes" xml:space="preserve">
          <source>This example constructs a pipeline that does dimensionality reduction followed by prediction with a support vector classifier. It demonstrates the use of &lt;code&gt;GridSearchCV&lt;/code&gt; and &lt;code&gt;Pipeline&lt;/code&gt; to optimize over different classes of estimators in a single CV run &amp;ndash; unsupervised &lt;code&gt;PCA&lt;/code&gt; and &lt;code&gt;NMF&lt;/code&gt; dimensionality reductions are compared to univariate feature selection during the grid search.</source>
          <target state="translated">이 예제는 차원 축소를 지원하고 지원 벡터 분류기를 사용한 예측을 수행하는 파이프 라인을 구성합니다. 단일 CV 실행에서 다양한 클래스의 추정량을 최적화하기 위해 &lt;code&gt;GridSearchCV&lt;/code&gt; 및 &lt;code&gt;Pipeline&lt;/code&gt; 을 사용하는 방법을 보여줍니다. 감독되지 않은 &lt;code&gt;PCA&lt;/code&gt; 및 &lt;code&gt;NMF&lt;/code&gt; 차원 감소는 그리드 검색 중 일 변량 피처 선택과 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="b084d11db0bc218128b35a7afe55ac9fa7c4daf1" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to approximate a function with a polynomial of degree n_degree by using ridge regression. Concretely, from n_samples 1d points, it suffices to build the Vandermonde matrix, which is n_samples x n_degree+1 and has the following form:</source>
          <target state="translated">이 예는 능형 회귀를 사용하여 차수가 n_degree 인 함수를 근사하는 방법을 보여줍니다. 구체적으로, n_samples 1d 포인트에서 Vandermonde 행렬을 만들면 충분합니다. 이것은 n_samples x n_degree + 1이며 다음 형식을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8509d7895b98e9b3d2d07ed03eae90baa68f1c72" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to generate a checkerboard dataset and bicluster it using the Spectral Biclustering algorithm.</source>
          <target state="translated">이 예제는 Spectral Biclustering 알고리즘을 사용하여 바둑판 데이터 세트를 생성하고 bicluster하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="fb9a20a0b6ffdb624c38c357324f211d180af27f" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to generate a dataset and bicluster it using the Spectral Co-Clustering algorithm.</source>
          <target state="translated">이 예제는 Spectral Co-Clustering 알고리즘을 사용하여 데이터 세트를 생성하고 bicluster하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4e024e96a6e8109f327c2d890a3a85ee374e03bd" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to use &lt;a href=&quot;../../modules/generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;sklearn.compose.ColumnTransformer&lt;/code&gt;&lt;/a&gt; on a dataset containing different types of features. We use the 20-newsgroups dataset and compute standard bag-of-words features for the subject line and body in separate pipelines as well as ad hoc features on the body. We combine them (with weights) using a ColumnTransformer and finally train a classifier on the combined set of features.</source>
          <target state="translated">이 예제는 다양한 유형의 기능이 포함 된 데이터 세트에서 &lt;a href=&quot;../../modules/generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt; &lt;code&gt;sklearn.compose.ColumnTransformer&lt;/code&gt; &lt;/a&gt; 를 사용하는 방법을 보여줍니다 . 우리는 20 개의 뉴스 그룹 데이터 세트를 사용하고 제목 줄과 본문에 대해 본문의 임시 기능과 함께 별도의 파이프 라인에서 주제별 기능을 계산합니다. ColumnTransformer를 사용하여 가중치와 결합하고 마지막으로 결합 된 기능 세트에 대한 분류자를 훈련시킵니다.</target>
        </trans-unit>
        <trans-unit id="76d491fec0fed042e6d7927f2dc124b698f9bded" translate="yes" xml:space="preserve">
          <source>This example demonstrates the Spectral Co-clustering algorithm on the twenty newsgroups dataset. The &amp;lsquo;comp.os.ms-windows.misc&amp;rsquo; category is excluded because it contains many posts containing nothing but data.</source>
          <target state="translated">이 예는 20 개의 뉴스 그룹 데이터 세트에 대한 스펙트럼 공동 클러스터링 알고리즘을 보여줍니다. 'comp.os.ms-windows.misc'카테고리는 데이터 만 포함하는 게시물이 많으므로 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="6186f51b55d8cba756254a15fe651e5e8504791a" translate="yes" xml:space="preserve">
          <source>This example demonstrates the behavior of Gaussian mixture models fit on data that was not sampled from a mixture of Gaussian random variables. The dataset is formed by 100 points loosely spaced following a noisy sine curve. There is therefore no ground truth value for the number of Gaussian components.</source>
          <target state="translated">이 예는 가우스 랜덤 변수의 혼합에서 샘플링되지 않은 데이터에 맞는 가우스 혼합 모델의 동작을 보여줍니다. 데이터 세트는 잡음이있는 사인 곡선을 따라 느슨하게 이격 된 100 개의 점으로 구성됩니다. 따라서 가우스 구성 요소의 수에 대한 근거 값은 없습니다.</target>
        </trans-unit>
        <trans-unit id="a1949f51dde2d60d7d4d1e707d145c1301537434" translate="yes" xml:space="preserve">
          <source>This example demonstrates the power of semisupervised learning by training a Label Spreading model to classify handwritten digits with sets of very few labels.</source>
          <target state="translated">이 예제는 레이블 확산 모델을 학습하여 필기 숫자를 매우 적은 레이블 집합으로 분류함으로써 반지도 학습의 힘을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c6020c6a7334e89ced3b2c5f4b02f4ed9989e37f" translate="yes" xml:space="preserve">
          <source>This example demonstrates the problems of underfitting and overfitting and how we can use linear regression with polynomial features to approximate nonlinear functions. The plot shows the function that we want to approximate, which is a part of the cosine function. In addition, the samples from the real function and the approximations of different models are displayed. The models have polynomial features of different degrees. We can see that a linear function (polynomial with degree 1) is not sufficient to fit the training samples. This is called &lt;strong&gt;underfitting&lt;/strong&gt;. A polynomial of degree 4 approximates the true function almost perfectly. However, for higher degrees the model will &lt;strong&gt;overfit&lt;/strong&gt; the training data, i.e. it learns the noise of the training data. We evaluate quantitatively &lt;strong&gt;overfitting&lt;/strong&gt; / &lt;strong&gt;underfitting&lt;/strong&gt; by using cross-validation. We calculate the mean squared error (MSE) on the validation set, the higher, the less likely the model generalizes correctly from the training data.</source>
          <target state="translated">이 예는 과적 합 및 과적 합 문제와 다항식 피처와 함께 선형 회귀를 사용하여 비선형 함수를 근사화하는 방법을 보여줍니다. 그림은 코사인 함수의 일부인 근사하려는 함수를 보여줍니다. 또한 실제 함수의 샘플과 다른 모델의 근사값이 표시됩니다. 모델의 각도는 다항식입니다. 우리는 선형 함수 (1 차 다항식)가 훈련 샘플에 적합하지 않다는 것을 알 수 있습니다. 이것을 &lt;strong&gt;언더 피팅&lt;/strong&gt; 이라고 &lt;strong&gt;합니다&lt;/strong&gt; . 차수가 4 인 다항식은 실제 함수를 거의 완벽하게 근사합니다. 그러나, 더 높은 정도의 모델은 훈련 데이터에 &lt;strong&gt;적합&lt;/strong&gt; 할 것입니다 . 즉, 훈련 데이터의 소음을 학습합니다. 정량적으로 평가&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt; 단순성과&lt;/strong&gt;교차 검증을 사용하여 &lt;strong&gt;과적 합&lt;/strong&gt; / 검증 세트에서 평균 제곱 오차 (MSE)를 계산할수록 모형이 훈련 데이터에서 올바르게 일반화 될 가능성이 낮습니다.</target>
        </trans-unit>
        <trans-unit id="ab8d51c9ac9762c2930c84a5a03c1c12345a6627" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of the Box-Cox and Yeo-Johnson transforms through &lt;code&gt;preprocessing.PowerTransformer&lt;/code&gt; to map data from various distributions to a normal distribution.</source>
          <target state="translated">이 예제는 &lt;code&gt;preprocessing.PowerTransformer&lt;/code&gt; 를 통한 Box-Cox 및 Yeo-Johnson 변환의 사용을 보여줍니다 .PowerTransformer 는 다양한 분포에서 정규 분포로 데이터를 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="9b62ef0be0bf7ce49acab00a23e04164c0becf9d" translate="yes" xml:space="preserve">
          <source>This example does not perform any learning over the data (see &lt;a href=&quot;../applications/plot_species_distribution_modeling#sphx-glr-auto-examples-applications-plot-species-distribution-modeling-py&quot;&gt;Species distribution modeling&lt;/a&gt; for an example of classification based on the attributes in this dataset). It simply shows the kernel density estimate of observed data points in geospatial coordinates.</source>
          <target state="translated">이 예제는 데이터에 대한 학습을 ​​수행하지 않습니다 ( 이 데이터 세트의 속성을 기반으로 한 분류 예제는 &lt;a href=&quot;../applications/plot_species_distribution_modeling#sphx-glr-auto-examples-applications-plot-species-distribution-modeling-py&quot;&gt;종 분포 모델링&lt;/a&gt; 참조 ). 관측 된 데이터 포인트의 커널 밀도 추정값을 지리 공간 좌표로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="03eea75ae69c05ca0f9dc1a13d89bbd210d48145" translate="yes" xml:space="preserve">
          <source>This example doesn&amp;rsquo;t show it, as we&amp;rsquo;re in a low-dimensional space, but another advantage of the Dirichlet process model is that it can fit full covariance matrices effectively even when there are less examples per cluster than there are dimensions in the data, due to regularization properties of the inference algorithm.</source>
          <target state="translated">이 예는 우리가 저 차원 공간에 있기 때문에 그것을 보여주지 않지만 Dirichlet 프로세스 모델의 또 다른 장점은 추론 알고리즘의 정규화 속성으로 인한 데이터.</target>
        </trans-unit>
        <trans-unit id="7b398c0b1dbb0f3edb9cc17097a9c9f8696a24cc" translate="yes" xml:space="preserve">
          <source>This example employs several unsupervised learning techniques to extract the stock market structure from variations in historical quotes.</source>
          <target state="translated">이 예에서는 여러 가지 감독되지 않은 학습 기술을 사용하여 과거 시세의 변형에서 주식 시장 구조를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="41937f256baaea1198c4d043d4bb81b61df0d50b" translate="yes" xml:space="preserve">
          <source>This example fits a Gradient Boosting model with least squares loss and 500 regression trees of depth 4.</source>
          <target state="translated">이 예는 최소 제곱 손실과 깊이 4의 회귀 트리가 500 인 그라디언트 부스팅 모델에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="e8121408498cf6fb8c886d50eef2580465ff3307" translate="yes" xml:space="preserve">
          <source>This example fits an AdaBoosted decision stump on a non-linearly separable classification dataset composed of two &amp;ldquo;Gaussian quantiles&amp;rdquo; clusters (see &lt;a href=&quot;../../modules/generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;sklearn.datasets.make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt;) and plots the decision boundary and decision scores. The distributions of decision scores are shown separately for samples of class A and B. The predicted class label for each sample is determined by the sign of the decision score. Samples with decision scores greater than zero are classified as B, and are otherwise classified as A. The magnitude of a decision score determines the degree of likeness with the predicted class label. Additionally, a new dataset could be constructed containing a desired purity of class B, for example, by only selecting samples with a decision score above some value.</source>
          <target state="translated">이 예제는 두 개의 &quot;Gaussian Quantile&quot;클러스터 ( &lt;a href=&quot;../../modules/generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt; &lt;code&gt;sklearn.datasets.make_gaussian_quantiles&lt;/code&gt; &lt;/a&gt; 참조 ) 로 구성된 비선형 적으로 분리 가능한 분류 데이터 세트에 AdaBoosted 의사 결정 스텀프를 맞추고 의사 결정 경계 및 의사 결정 점수를 표시합니다. 결정 점수의 분포는 클래스 A 및 B의 샘플에 대해 별도로 표시됩니다. 각 샘플의 예측 된 클래스 레이블은 결정 점수의 부호에 의해 결정됩니다. 결정 점수가 0보다 큰 샘플은 B로 분류되고 그렇지 않으면 A로 분류됩니다. 결정 점수의 크기는 예측 된 클래스 레이블과 유사도를 결정합니다. 또한, 예를 들어, 일부 값 이상의 결정 점수를 갖는 샘플만을 선택함으로써, 원하는 순도의 클래스 B를 포함하는 새로운 데이터 세트를 구축 할 수있다.</target>
        </trans-unit>
        <trans-unit id="02c230a18f98a72777c5f2652062014b16511fe8" translate="yes" xml:space="preserve">
          <source>This example has a fair amount of visualization-related code, as visualization is crucial here to display the graph. One of the challenge is to position the labels minimizing overlap. For this we use an heuristic based on the direction of the nearest neighbor along each axis.</source>
          <target state="translated">이 예제는 그래프를 표시하기 위해 시각화가 중요하므로 상당한 양의 시각화 관련 코드가 있습니다. 과제 중 하나는 라벨을 겹쳐서 겹치는 것을 최소화하는 것입니다. 이를 위해 각 축을 따라 가장 가까운 이웃의 방향을 기반으로 휴리스틱을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="259139974bd9ca7304e763dff02af979bb7908e6" translate="yes" xml:space="preserve">
          <source>This example illustrates GPC on XOR data. Compared are a stationary, isotropic kernel (&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt;&lt;code&gt;RBF&lt;/code&gt;&lt;/a&gt;) and a non-stationary kernel (&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt;&lt;code&gt;DotProduct&lt;/code&gt;&lt;/a&gt;). On this particular dataset, the &lt;code&gt;DotProduct&lt;/code&gt; kernel obtains considerably better results because the class-boundaries are linear and coincide with the coordinate axes. In practice, however, stationary kernels such as &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt;&lt;code&gt;RBF&lt;/code&gt;&lt;/a&gt; often obtain better results.</source>
          <target state="translated">이 예는 XOR 데이터의 GPC를 보여줍니다. 고정식 등방성 커널 ( &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt; &lt;code&gt;RBF&lt;/code&gt; &lt;/a&gt; )과 고정되지 않은 커널 ( &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt; &lt;code&gt;DotProduct&lt;/code&gt; &lt;/a&gt; )이 비교됩니다. 이 특정 데이터 집합 에서 클래스 경계는 선형이고 좌표 축과 일치하기 때문에 &lt;code&gt;DotProduct&lt;/code&gt; 커널은 훨씬 더 나은 결과를 얻습니다. 그러나 실제로 &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt; &lt;code&gt;RBF&lt;/code&gt; &lt;/a&gt; 와 같은 고정 커널은 더 나은 결과를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="a467b781e30c272f4f5e4645f1261bd726b14e8d" translate="yes" xml:space="preserve">
          <source>This example illustrates GPC on XOR data. Compared are a stationary, isotropic kernel (RBF) and a non-stationary kernel (DotProduct). On this particular dataset, the DotProduct kernel obtains considerably better results because the class-boundaries are linear and coincide with the coordinate axes. In general, stationary kernels often obtain better results.</source>
          <target state="translated">이 예는 XOR 데이터의 GPC를 보여줍니다. 고정식 등방성 커널 (RBF)과 고정되지 않은 커널 (DotProduct)이 비교됩니다. 이 특정 데이터 집합에서 클래스 경계는 선형이고 좌표 축과 일치하기 때문에 DotProduct 커널은 훨씬 더 나은 결과를 얻습니다. 일반적으로 고정 커널은 종종 더 나은 결과를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b43f5231cb55a1a95a64bd8afe5472e7955fc98b" translate="yes" xml:space="preserve">
          <source>This example illustrates and compares the bias-variance decomposition of the expected mean squared error of a single estimator against a bagging ensemble.</source>
          <target state="translated">이 예는 배깅 앙상블에 대한 단일 추정기의 예상 평균 제곱 오차의 바이어스-분산 분해를 보여주고 비교합니다.</target>
        </trans-unit>
        <trans-unit id="0a3450a632d656139c95a4f138b569cec22ba6ef" translate="yes" xml:space="preserve">
          <source>This example illustrates both methods on an artificial dataset, which consists of a sinusoidal target function and strong noise added to every fifth datapoint. The first figure compares the learned model of KRR and SVR when both complexity/regularization and bandwidth of the RBF kernel are optimized using grid-search. The learned functions are very similar; however, fitting KRR is approx. seven times faster than fitting SVR (both with grid-search). However, prediction of 100000 target values is more than tree times faster with SVR since it has learned a sparse model using only approx. 1/3 of the 100 training datapoints as support vectors.</source>
          <target state="translated">이 예는 사인파 목표 함수와 매 5 번째 데이터 포인트에 추가 된 강한 노이즈로 구성된 인공 데이터 세트의 두 가지 방법을 보여줍니다. 첫 번째 그림은 그리드 검색을 사용하여 RBF 커널의 복잡성 / 규정 화 및 대역폭을 최적화 할 때 KRR 및 SVR의 학습 모델을 비교합니다. 학습 된 기능은 매우 유사합니다. 그러나 KRR 피팅은 약입니다. SVR 피팅보다 7 배 더 빠릅니다 (둘 다 그리드 검색 사용). 그러나 SVR을 사용하면 100000 개의 목표 값을 예측하는 것이 트리보다 빠릅니다. 100 개의 교육 데이터 포인트 중 1/3이 지원 벡터로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bdbaaa805869c3c13d157f267aeffaf332ff1284" translate="yes" xml:space="preserve">
          <source>This example illustrates both methods on an artificial dataset, which consists of a sinusoidal target function and strong noise. The figure compares the learned model of KRR and GPR based on a ExpSineSquared kernel, which is suited for learning periodic functions. The kernel&amp;rsquo;s hyperparameters control the smoothness (l) and periodicity of the kernel (p). Moreover, the noise level of the data is learned explicitly by GPR by an additional WhiteKernel component in the kernel and by the regularization parameter alpha of KRR.</source>
          <target state="translated">이 예제는 사인파 목표 함수와 강한 노이즈로 구성된 인공 데이터 세트의 두 가지 방법을 보여줍니다. 이 그림은 주기적 기능 학습에 적합한 ExpSineSquared 커널을 기반으로 KRR 및 GPR의 학습 모델을 비교합니다. 커널의 하이퍼 파라미터는 커널의 부드러움 (l)과 주기성 (p)을 제어합니다. 또한 데이터의 노이즈 레벨은 커널의 추가 WhiteKernel 구성 요소와 KRR의 정규화 매개 변수 alpha에 의해 GPR에 의해 명시 적으로 학습됩니다.</target>
        </trans-unit>
        <trans-unit id="745a420beb7d4cfe3dcb516bc28a36f2576e5395" translate="yes" xml:space="preserve">
          <source>This example illustrates how sigmoid calibration changes predicted probabilities for a 3-class classification problem. Illustrated is the standard 2-simplex, where the three corners correspond to the three classes. Arrows point from the probability vectors predicted by an uncalibrated classifier to the probability vectors predicted by the same classifier after sigmoid calibration on a hold-out validation set. Colors indicate the true class of an instance (red: class 1, green: class 2, blue: class 3).</source>
          <target state="translated">이 예는 시그 모이 드 보정이 3 등급 분류 문제에 대해 예측 된 확률을 변경하는 방법을 보여줍니다. 3 개의 모서리가 3 개의 클래스에 해당하는 표준 2 심플 렉스가 그림에 나와 있습니다. 화살표는 보정되지 않은 분류기에 의해 예측 된 확률 벡터에서 홀드 아웃 유효성 검사 세트에서 시그 모이 드 보정 후 동일한 분류기에 의해 예측 된 확률 벡터를 가리 킵니다. 색상은 인스턴스의 실제 클래스를 나타냅니다 (빨간색 : 클래스 1, 녹색 : 클래스 2, 파란색 : 클래스 3).</target>
        </trans-unit>
        <trans-unit id="12c733d8527ccd2c1862324a52d9d453fa3717b9" translate="yes" xml:space="preserve">
          <source>This example illustrates how the Mahalanobis distances are affected by outlying data: observations drawn from a contaminating distribution are not distinguishable from the observations coming from the real, Gaussian distribution that one may want to work with. Using MCD-based Mahalanobis distances, the two populations become distinguishable. Associated applications are outliers detection, observations ranking, clustering, &amp;hellip; For visualization purpose, the cubic root of the Mahalanobis distances are represented in the boxplot, as Wilson and Hilferty suggest [2]</source>
          <target state="translated">이 예는 Mahalanobis 거리가 외부 데이터에 의해 어떻게 영향을 받는지 보여줍니다. 오염 분포에서 얻은 관측치는 실제 가우시안 분포에서 오는 관측과 구별 할 수 없습니다. MCD 기반 마할 라 노비스 거리를 사용하면 두 집단이 구별 될 수 있습니다. 관련 응용 프로그램은 이상치 탐지, 관측치 순위, 군집화입니다.&amp;hellip; 시각화 목적을 위해 Mahalanobis 거리의 입방근은 상자 그림에 표시됩니다 (윌슨과 힐 퍼티가 제안한대로).</target>
        </trans-unit>
        <trans-unit id="e6c2656adbcd3c5e59b375bc18300061f72c931d" translate="yes" xml:space="preserve">
          <source>This example illustrates how the early stopping can used in the &lt;a href=&quot;../../modules/generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;sklearn.ensemble.GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; model to achieve almost the same accuracy as compared to a model built without early stopping using many fewer estimators. This can significantly reduce training time, memory usage and prediction latency.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../../modules/generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt; &lt;code&gt;sklearn.ensemble.GradientBoostingClassifier&lt;/code&gt; &lt;/a&gt; 모델에서 조기 중지를 사용하여 더 적은 수의 추정기를 사용하여 조기 중지하지 않고 구축 된 모델과 비교하여 거의 동일한 정확도를 달성 하는 방법을 보여줍니다 . 이를 통해 교육 시간, 메모리 사용량 및 예측 대기 시간을 크게 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9534999032b13d85edbba90f8420279af14435d" translate="yes" xml:space="preserve">
          <source>This example illustrates how the early stopping can used in the &lt;a href=&quot;../../modules/generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;sklearn.linear_model.SGDClassifier&lt;/code&gt;&lt;/a&gt; model to achieve almost the same accuracy as compared to a model built without early stopping. This can significantly reduce training time. Note that scores differ between the stopping criteria even from early iterations because some of the training data is held out with the validation stopping criterion.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../../modules/generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;sklearn.linear_model.SGDClassifier&lt;/code&gt; &lt;/a&gt; 모델 에서 조기 중지를 사용하여 조기 중지 없이 빌드 된 모델과 거의 동일한 정확도를 달성 하는 방법을 보여줍니다 . 이것은 훈련 시간을 크게 줄일 수 있습니다. 일부 교육 데이터는 유효성 검증 중지 기준으로 수행되므로 초기 반복에서도 중지 기준간에 점수가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c861b8fa50d5165e1e9cdc8044114c0ba76be7f1" translate="yes" xml:space="preserve">
          <source>This example illustrates how to apply different preprocessing and feature extraction pipelines to different subsets of features, using &lt;a href=&quot;../../modules/generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;sklearn.compose.ColumnTransformer&lt;/code&gt;&lt;/a&gt;. This is particularly handy for the case of datasets that contain heterogeneous data types, since we may want to scale the numeric features and one-hot encode the categorical ones.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../../modules/generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt; &lt;code&gt;sklearn.compose.ColumnTransformer&lt;/code&gt; 를&lt;/a&gt; 사용하여 서로 다른 전처리 및 기능 추출 파이프 라인을 여러 기능의 하위 집합에 적용하는 방법을 보여줍니다 . 이 기능은 이기종 데이터 형식을 포함하는 데이터 집합의 경우 특히 유용합니다. 숫자 형 기능을 확장하고 범주 형 기능을 1- 핫 인코딩 할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="7688b615fac5133028d275260a50b4a9e7d6a213" translate="yes" xml:space="preserve">
          <source>This example illustrates that GPR with a sum-kernel including a WhiteKernel can estimate the noise level of data. An illustration of the log-marginal-likelihood (LML) landscape shows that there exist two local maxima of LML.</source>
          <target state="translated">이 예는 WhiteKernel을 포함하는 합 커널이있는 GPR이 데이터의 노이즈 레벨을 추정 할 수 있음을 보여줍니다. LLM (log-marginal-likelihood) 랜드 스케이프의 그림은 LML의 두 개의 로컬 최대 값이 있음을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="aab3b4258aabcd6bfe55c7c5adf04622c59229dc" translate="yes" xml:space="preserve">
          <source>This example illustrates that GPR with a sum-kernel including a WhiteKernel can estimate the noise level of data. An illustration of the log-marginal-likelihood (LML) landscape shows that there exist two local maxima of LML. The first corresponds to a model with a high noise level and a large length scale, which explains all variations in the data by noise. The second one has a smaller noise level and shorter length scale, which explains most of the variation by the noise-free functional relationship. The second model has a higher likelihood; however, depending on the initial value for the hyperparameters, the gradient-based optimization might also converge to the high-noise solution. It is thus important to repeat the optimization several times for different initializations.</source>
          <target state="translated">이 예는 WhiteKernel을 포함하는 합 커널이있는 GPR이 데이터의 노이즈 레벨을 추정 할 수 있음을 보여줍니다. LLM (log-marginal-likelihood) 랜드 스케이프의 그림은 LML의 두 개의 로컬 최대 값이 있음을 보여줍니다. 첫 번째는 노이즈 수준이 높고 길이가 큰 모델에 해당하며 노이즈별로 데이터의 모든 변형을 설명합니다. 두 번째는 더 작은 소음 수준과 더 짧은 길이의 스케일을 가지며, 이는 무 잡음 기능 관계에 의한 대부분의 변동을 설명합니다. 두 번째 모델은 가능성이 높습니다. 그러나 하이퍼 파라미터의 초기 값에 따라 그래디언트 기반 최적화도 고 소음 솔루션으로 수렴 될 수 있습니다. 따라서 다른 초기화에 대해 최적화를 여러 번 반복하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="d19a1528c92e37a37fb4fd9cad2cad1ac3d91123" translate="yes" xml:space="preserve">
          <source>This example illustrates the differences between univariate F-test statistics and mutual information.</source>
          <target state="translated">이 예는 일 변량 F- 검정 통계와 상호 정보의 차이점을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b411e019157b9b0953b37eb36e27bc6a8ffb3f5f" translate="yes" xml:space="preserve">
          <source>This example illustrates the effect of the parameters &lt;code&gt;gamma&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; of the Radial Basis Function (RBF) kernel SVM.</source>
          <target state="translated">이 예는 매개 변수 &lt;code&gt;gamma&lt;/code&gt; 의 영향을 보여줍니다. RBF (Radial Basis Function) 커널 SVM 및 &lt;code&gt;C&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="0f49634dcf1598fde3c403bd7ddd702e3816c634" translate="yes" xml:space="preserve">
          <source>This example illustrates the need for robust covariance estimation on a real data set. It is useful both for outlier detection and for a better understanding of the data structure.</source>
          <target state="translated">이 예는 실제 데이터 세트에 대한 강력한 공분산 추정의 필요성을 보여줍니다. 이상치 탐지와 데이터 구조를보다 잘 이해하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dc09ff23a3cae32be328d47d0a0a7e64185cd75a" translate="yes" xml:space="preserve">
          <source>This example illustrates the predicted probability of GPC for an RBF kernel with different choices of the hyperparameters. The first figure shows the predicted probability of GPC with arbitrarily chosen hyperparameters and with the hyperparameters corresponding to the maximum log-marginal-likelihood (LML).</source>
          <target state="translated">이 예는 다른 하이퍼 파라미터를 선택한 RBF 커널에 대한 GPC의 예상 확률을 보여줍니다. 첫 번째 그림은 임의로 선택된 하이퍼 파라미터와 최대 로그-마진 우도 (LML)에 해당하는 하이퍼 파라미터가있는 GPC의 예측 확률을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d49b62c58d1a1ad4b52cfdb4df97043fcb25dfc7" translate="yes" xml:space="preserve">
          <source>This example illustrates the predicted probability of GPC for an isotropic and anisotropic RBF kernel on a two-dimensional version for the iris-dataset. The anisotropic RBF kernel obtains slightly higher log-marginal-likelihood by assigning different length-scales to the two feature dimensions.</source>
          <target state="translated">이 예는 홍채 데이터 세트의 2 차원 버전에서 등방성 및 이방성 RBF 커널에 대한 GPC의 예측 확률을 보여줍니다. 이방성 RBF 커널은 두 피처 치수에 서로 다른 길이 스케일을 할당하여 약간 더 높은 로그 마진 가능성을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f8e8b4dfa6bc8bbc237c34d26328609c3561c0d3" translate="yes" xml:space="preserve">
          <source>This example illustrates the predicted probability of GPC for an isotropic and anisotropic RBF kernel on a two-dimensional version for the iris-dataset. This illustrates the applicability of GPC to non-binary classification. The anisotropic RBF kernel obtains slightly higher log-marginal-likelihood by assigning different length-scales to the two feature dimensions.</source>
          <target state="translated">이 예는 홍채 데이터 세트의 2 차원 버전에서 등방성 및 이방성 RBF 커널에 대한 GPC의 예측 확률을 보여줍니다. 이것은 비 이진 분류에 대한 GPC의 적용 가능성을 보여줍니다. 이방성 RBF 커널은 두 피처 치수에 서로 다른 길이 스케일을 할당하여 약간 더 높은 로그 마진 가능성을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="d60d503f722a9b87495f756d071794c2e2c52164" translate="yes" xml:space="preserve">
          <source>This example illustrates the prior and posterior of a GPR with different kernels. Mean, standard deviation, and 10 samples are shown for both prior and posterior.</source>
          <target state="translated">이 예는 다른 커널을 사용하는 GPR의 전후를 보여줍니다. 평균, 표준 편차 및 10 개의 샘플이 이전 및 이후 모두에 대해 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7e4f09a45ae58596e6f6f82a5f372f88442c0679" translate="yes" xml:space="preserve">
          <source>This example illustrates the use of the &lt;a href=&quot;../../modules/multiclass#multiclass&quot;&gt;multioutput.MultiOutputRegressor&lt;/a&gt; meta-estimator to perform multi-output regression. A random forest regressor is used, which supports multi-output regression natively, so the results can be compared.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../../modules/multiclass#multiclass&quot;&gt;다중 출력&lt;/a&gt; 사용을 보여줍니다. 메타 추정기를 사용하여 다중 출력 회귀를 수행 . 다중 출력 회귀를 기본적으로 지원하는 임의의 포리스트 회귀가 사용되므로 결과를 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a4413b8994df2fb3a9be31d12e5c3eff453a657" translate="yes" xml:space="preserve">
          <source>This example illustrates visually in the feature space a comparison by results using two different component analysis techniques.</source>
          <target state="translated">이 예는 피쳐 공간에서 시각적으로 두 가지 성분 분석 기법을 사용한 결과를 비교하여 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2cd2616385e5968100e838cea35843639b5d4649" translate="yes" xml:space="preserve">
          <source>This example is based on Figure 10.2 from Hastie et al 2009 &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; and illustrates the difference in performance between the discrete SAMME &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; boosting algorithm and real SAMME.R boosting algorithm. Both algorithms are evaluated on a binary classification task where the target Y is a non-linear function of 10 input features.</source>
          <target state="translated">이 예는 Hastie et al &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[&lt;/a&gt; 2009 ]의 그림 10.2를 기반으로 하며 이산 SAMME &lt;a href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; 부스팅 알고리즘과 실제 SAMME.R 부스팅 알고리즘 간의 성능 차이를 보여줍니다 . 두 알고리즘 모두 대상 Y가 10 개의 입력 기능이있는 비선형 함수 인 이진 분류 작업에서 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="f74f72b73b7f5fc12f50525ee3a073668f796ed6" translate="yes" xml:space="preserve">
          <source>This example is based on Section 5.4.3 of &amp;ldquo;Gaussian Processes for Machine Learning&amp;rdquo; [RW2006]. It illustrates an example of complex kernel engineering and hyperparameter optimization using gradient ascent on the log-marginal-likelihood. The data consists of the monthly average atmospheric CO2 concentrations (in parts per million by volume (ppmv)) collected at the Mauna Loa Observatory in Hawaii, between 1958 and 2001. The objective is to model the CO2 concentration as a function of the time t.</source>
          <target state="translated">이 예는 &quot;기계 학습을위한 가우스 프로세스&quot;[RW2006]의 5.4.3 섹션을 기반으로합니다. 로그 마진 우도에서 기울기 상승을 사용하는 복잡한 커널 엔지니어링 및 하이퍼 파라미터 최적화의 예를 보여줍니다. 데이터는 1958 년에서 2001 년 사이 하와이의 Mauna Loa Observatory에서 수집 한 월별 평균 대기 CO2 농도 (부피 율 (ppmv))로 구성됩니다. 목표는 시간 t의 함수로 CO2 농도를 모델링하는 것입니다. .</target>
        </trans-unit>
        <trans-unit id="b3b5741f90375b259727a574f2a0488e7637e5bc" translate="yes" xml:space="preserve">
          <source>This example is based on Section 5.4.3 of &lt;a href=&quot;#rw2006&quot; id=&quot;id2&quot;&gt;[RW2006]&lt;/a&gt;. It illustrates an example of complex kernel engineering and hyperparameter optimization using gradient ascent on the log-marginal-likelihood. The data consists of the monthly average atmospheric CO2 concentrations (in parts per million by volume (ppmv)) collected at the Mauna Loa Observatory in Hawaii, between 1958 and 1997. The objective is to model the CO2 concentration as a function of the time t.</source>
          <target state="translated">이 예는 &lt;a href=&quot;#rw2006&quot; id=&quot;id2&quot;&gt;[RW2006]&lt;/a&gt; 의 섹션 5.4.3을 기반으로 합니다. 로그 마진 우도에서 기울기 상승을 사용하는 복잡한 커널 엔지니어링 및 하이퍼 파라미터 최적화의 예를 보여줍니다. 이 데이터는 1958 년에서 1997 년 사이 하와이의 Mauna Loa Observatory에서 수집 한 월별 평균 대기 CO2 농도 (부피 율 (ppmv))로 구성됩니다. 목표는 시간 t의 함수로 CO2 농도를 모델링하는 것입니다. .</target>
        </trans-unit>
        <trans-unit id="9ecc1c02a68f38d70271669af08df8c1497b1d98" translate="yes" xml:space="preserve">
          <source>This example is commented in the &lt;a href=&quot;../../tutorial/basic/tutorial#introduction&quot;&gt;tutorial section of the user manual&lt;/a&gt;.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../../tutorial/basic/tutorial#introduction&quot;&gt;사용자 매뉴얼&lt;/a&gt; 의 튜토리얼 섹션에 주석 처리되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9143eb314f05280f157b4081755ef4be5d0d1857" translate="yes" xml:space="preserve">
          <source>This example is meant to illustrate situations where k-means will produce unintuitive and possibly unexpected clusters. In the first three plots, the input data does not conform to some implicit assumption that k-means makes and undesirable clusters are produced as a result. In the last plot, k-means returns intuitive clusters despite unevenly sized blobs.</source>
          <target state="translated">이 예는 k- 평균이 직관적이지 않고 예상치 못한 클러스터를 생성하는 상황을 설명하기위한 것입니다. 처음 세 줄거리에서 입력 데이터는 k- 평균이 만들어 내고 바람직하지 않은 클러스터가 생성된다는 암시적인 가정을 따르지 않습니다. 마지막 그림에서 k- 평균은 크기가 균일하지 않은 얼룩에도 불구하고 직관적 인 군집을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb84e7488212d58818869cb1a848aafb46dc6573" translate="yes" xml:space="preserve">
          <source>This example plots the covariance ellipsoids of each class and decision boundary learned by LDA and QDA. The ellipsoids display the double standard deviation for each class. With LDA, the standard deviation is the same for all the classes, while each class has its own standard deviation with QDA.</source>
          <target state="translated">이 예는 각 클래스의 공분산 타원체와 LDA 및 QDA에 의해 학습 된 결정 경계를 표시합니다. 타원체는 각 클래스에 대한 이중 표준 편차를 표시합니다. LDA를 사용하면 표준 편차는 모든 클래스에 대해 동일하지만 각 클래스에는 QDA에 대한 자체 표준 편차가 있습니다.</target>
        </trans-unit>
        <trans-unit id="61cf8846c08926de131cab630666b0d7a1ff4033" translate="yes" xml:space="preserve">
          <source>This example plots the ellipsoids obtained from a toy dataset (mixture of three Gaussians) fitted by the &lt;code&gt;BayesianGaussianMixture&lt;/code&gt; class models with a Dirichlet distribution prior (&lt;code&gt;weight_concentration_prior_type='dirichlet_distribution'&lt;/code&gt;) and a Dirichlet process prior (&lt;code&gt;weight_concentration_prior_type='dirichlet_process'&lt;/code&gt;). On each figure, we plot the results for three different values of the weight concentration prior.</source>
          <target state="translated">이 예에서는 &lt;code&gt;BayesianGaussianMixture&lt;/code&gt; 클래스 모델에 의해 적합 화 된 장난감 데이터 셋 (가우시안 3 개의 혼합물)에서 얻은 타원체를 이전에 Dirichlet 분포 ( &lt;code&gt;weight_concentration_prior_type='dirichlet_distribution'&lt;/code&gt; )와 Dirichlet 프로세스 이전 ( &lt;code&gt;weight_concentration_prior_type='dirichlet_process'&lt;/code&gt; )으로 표시합니다. 각 그림에서, 우리는 이전에 무게 농도의 세 가지 다른 값에 대한 결과를 플롯합니다.</target>
        </trans-unit>
        <trans-unit id="b0d46d4faf4d4d45c7ba844c05b8ff931d890d6c" translate="yes" xml:space="preserve">
          <source>This example presents the different strategies implemented in KBinsDiscretizer:</source>
          <target state="translated">이 예는 KBinsDiscretizer에서 구현 된 다양한 전략을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="aff95617011fc0f39a1d4573107679df90fa3c83" translate="yes" xml:space="preserve">
          <source>This example reproduces Figure 1 of Zhu et al &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; and shows how boosting can improve prediction accuracy on a multi-class problem. The classification dataset is constructed by taking a ten-dimensional standard normal distribution and defining three classes separated by nested concentric ten-dimensional spheres such that roughly equal numbers of samples are in each class (quantiles of the \(\chi^2\) distribution).</source>
          <target state="translated">이 예제는 Zhu et al &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; 의 그림 1을 재현 하고 다중 클래스 문제에서 부스팅이 예측 정확도를 개선하는 방법을 보여줍니다. 분류 데이터 세트는 10 차원 표준 정규 분포를 취하고 중첩 된 동심 10 차원 구체로 구분 된 3 개의 클래스를 정의하여 대략 같은 수의 샘플이 각 클래스 (\ (\ chi ^ 2 \) 분포의 사 분위수)에 있도록 구성됩니다. ).</target>
        </trans-unit>
        <trans-unit id="f0193d5eae04ea4c45d1272eb8f24ceb76514e1e" translate="yes" xml:space="preserve">
          <source>This example serves as a visual check that IPCA is able to find a similar projection of the data to PCA (to a sign flip), while only processing a few samples at a time. This can be considered a &amp;ldquo;toy example&amp;rdquo;, as IPCA is intended for large datasets which do not fit in main memory, requiring incremental approaches.</source>
          <target state="translated">이 예제는 IPCA가 한 번에 몇 개의 샘플 만 처리하면서 PCA (sign flip)에 대한 유사한 데이터 프로젝션을 찾을 수 있는지 시각적으로 확인합니다. IPCA는 주 메모리에 맞지 않고 증분 방식이 필요한 대규모 데이터 세트를위한 것이기 때문에 이것은 &quot;장난감 사례&quot;로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dfa9a56451c107730b94ff094ad060fe6660b05" translate="yes" xml:space="preserve">
          <source>This example should be taken with a grain of salt, as the intuition conveyed does not necessarily carry over to real datasets. Particularly in high-dimensional spaces, data can more easily be separated linearly. Moreover, using feature discretization and one-hot encoding increases the number of features, which easily lead to overfitting when the number of samples is small.</source>
          <target state="translated">전달 된 직관이 반드시 실제 데이터 세트로 전달되는 것은 아니기 때문에이 예는 소금 한 알로 취해야합니다. 특히 고차원 공간에서 데이터를보다 쉽게 ​​선형으로 분리 할 수 ​​있습니다. 또한, 특징 이산화 및 one-hot 인코딩을 사용하면 기능의 수가 증가하여 샘플 수가 적을 때 쉽게 과적 합하게됩니다.</target>
        </trans-unit>
        <trans-unit id="ad21e470ff2bffe875ca12e50c6f8a883eaa0515" translate="yes" xml:space="preserve">
          <source>This example shows an example usage of the &lt;code&gt;split&lt;/code&gt; method.</source>
          <target state="translated">이 예제는 &lt;code&gt;split&lt;/code&gt; 메소드의 사용법 예제를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="05321a1b8964aa5eaada463be8f8b6ab44686817" translate="yes" xml:space="preserve">
          <source>This example shows characteristics of different anomaly detection algorithms on 2D datasets. Datasets contain one or two modes (regions of high density) to illustrate the ability of algorithms to cope with multimodal data.</source>
          <target state="translated">이 예는 2D 데이터 세트에서 다양한 이상 감지 알고리즘의 특성을 보여줍니다. 데이터 세트에는 알고리즘이 멀티 모달 데이터에 대처하는 능력을 설명하기 위해 하나 또는 두 개의 모드 (고밀도 영역)가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9671740bdc9e0f010272719df08d61d30b070724" translate="yes" xml:space="preserve">
          <source>This example shows characteristics of different clustering algorithms on datasets that are &amp;ldquo;interesting&amp;rdquo; but still in 2D. With the exception of the last dataset, the parameters of each of these dataset-algorithm pairs has been tuned to produce good clustering results. Some algorithms are more sensitive to parameter values than others.</source>
          <target state="translated">이 예제는 &quot;관심&quot;이지만 여전히 2D 인 데이터 세트에 대한 다른 클러스터링 알고리즘의 특성을 보여줍니다. 마지막 데이터 세트를 제외하고, 이러한 각 데이터 세트 알고리즘 쌍의 매개 변수는 우수한 클러스터링 결과를 생성하도록 조정되었습니다. 일부 알고리즘은 다른 알고리즘보다 매개 변수 값에 더 민감합니다.</target>
        </trans-unit>
        <trans-unit id="408c25df8162bc85c75adf89aefb6c4283aab313" translate="yes" xml:space="preserve">
          <source>This example shows characteristics of different linkage methods for hierarchical clustering on datasets that are &amp;ldquo;interesting&amp;rdquo; but still in 2D.</source>
          <target state="translated">이 예제는 &quot;관심&quot;이지만 여전히 2D 인 데이터 세트의 계층 적 클러스터링에 대한 서로 다른 연결 방법의 특성을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ee904b77cbf769dbe7d1093eb852f864329f4bb5" translate="yes" xml:space="preserve">
          <source>This example shows how kernel density estimation (KDE), a powerful non-parametric density estimation technique, can be used to learn a generative model for a dataset. With this generative model in place, new samples can be drawn. These new samples reflect the underlying model of the data.</source>
          <target state="translated">이 예는 강력한 비모수 밀도 추정 기법 인 KDE (커널 밀도 추정)를 사용하여 데이터 집합에 대한 생성 모델을 학습하는 방법을 보여줍니다. 이 생성 모델을 사용하면 새로운 샘플을 추출 할 수 있습니다. 이 새로운 샘플은 데이터의 기본 모델을 반영합니다.</target>
        </trans-unit>
        <trans-unit id="54102d8f78c42d496181e5bcdf5a40bdaee3e42d" translate="yes" xml:space="preserve">
          <source>This example shows how quantile regression can be used to create prediction intervals.</source>
          <target state="translated">이 예제는 Quantile Regression을 사용하여 예측 간격을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="682ea376dc5fd413204f119c7903367cc1b71149" translate="yes" xml:space="preserve">
          <source>This example shows how to build a classification pipeline with a BernoulliRBM feature extractor and a &lt;a href=&quot;../../modules/generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; classifier. The hyperparameters of the entire model (learning rate, hidden layer size, regularization) were optimized by grid search, but the search is not reproduced here because of runtime constraints.</source>
          <target state="translated">이 예는 BernoulliRBM 기능 추출기와 &lt;a href=&quot;../../modules/generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; &lt;/a&gt; 분류기 를 사용하여 분류 파이프 라인을 작성하는 방법을 보여줍니다 . 전체 모델의 하이퍼 파라미터 (학습 속도, 숨겨진 레이어 크기, 정규화)는 그리드 검색으로 최적화되었지만 런타임 제약 조건으로 인해 검색이 재현되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6287a37f5ab2f7e58b3aa65bfc9b371f8d2e434" translate="yes" xml:space="preserve">
          <source>This example shows how to obtain partial dependence plots from a &lt;a href=&quot;../../modules/generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; trained on the California housing dataset. The example is taken from &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">이 예제는 캘리포니아 주택 데이터 세트에 대해 훈련 된 &lt;a href=&quot;../../modules/generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt; &lt;code&gt;GradientBoostingRegressor&lt;/code&gt; &lt;/a&gt; 에서 부분 의존도를 얻는 방법을 보여줍니다 . 예는 &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; 에서 가져 왔습니다 .</target>
        </trans-unit>
        <trans-unit id="dd4b844c3488b502b915a6b11d22b13911beaa74" translate="yes" xml:space="preserve">
          <source>This example shows how to perform univariate feature selection before running a SVC (support vector classifier) to improve the classification scores.</source>
          <target state="translated">이 예는 분류 점수를 향상시키기 위해 SVC (support vector classifier)를 실행하기 전에 일 변량 기능 선택을 수행하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="47a26e628df959c3e5ed3ffe4f4f3490e8927a8d" translate="yes" xml:space="preserve">
          <source>This example shows how to plot some of the first layer weights in a MLPClassifier trained on the MNIST dataset.</source>
          <target state="translated">이 예는 MNIST 데이터 세트에 대해 훈련 된 MLPClassifier에서 일부 첫 번째 레이어 가중치를 플로팅하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="dd07bd7e7afed03f3c2a3c74458c42dc14028dfe" translate="yes" xml:space="preserve">
          <source>This example shows how to plot the decision surface for four SVM classifiers with different kernels.</source>
          <target state="translated">이 예는 다른 커널을 가진 4 개의 SVM 분류기에 대한 결정 화면을 그리는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="52dcf2b8bf47a153b3ba3beca30c9af85b850fad" translate="yes" xml:space="preserve">
          <source>This example shows how to use &lt;code&gt;cross_val_predict&lt;/code&gt; to visualize prediction errors.</source>
          <target state="translated">이 예제는 &lt;code&gt;cross_val_predict&lt;/code&gt; 를 사용 하여 예측 오류를 시각화 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="351c02b1031f149a08df70cbeed39cd2a6bb9ec7" translate="yes" xml:space="preserve">
          <source>This example shows that Kernel PCA is able to find a projection of the data that makes data linearly separable.</source>
          <target state="translated">이 예는 커널 PCA가 데이터를 선형으로 분리 할 수있는 데이터의 투영을 찾을 수 있음을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="607fdb6fda0285694fd1dd982f83082f2f9a6687" translate="yes" xml:space="preserve">
          <source>This example shows that imputing the missing values can give better results than discarding the samples containing any missing value. Imputing does not always improve the predictions, so please check via cross-validation. Sometimes dropping rows or using marker values is more effective.</source>
          <target state="translated">이 예제는 결 측값을 대치하면 결 측값이 포함 된 샘플을 폐기하는 것보다 더 나은 결과를 얻을 수 있음을 보여줍니다. 대치가 항상 예측을 개선하는 것은 아니므로 교차 검증을 통해 확인하십시오. 때때로 행을 삭제하거나 마커 값을 사용하는 것이 더 효과적입니다.</target>
        </trans-unit>
        <trans-unit id="b6045a3110197ccfd64402c3c879acac73bdaadb" translate="yes" xml:space="preserve">
          <source>This example shows that model selection can be performed with Gaussian Mixture Models using information-theoretic criteria (BIC). Model selection concerns both the covariance type and the number of components in the model. In that case, AIC also provides the right result (not shown to save time), but BIC is better suited if the problem is to identify the right model. Unlike Bayesian procedures, such inferences are prior-free.</source>
          <target state="translated">이 예는 정보 이론적 기준 (BIC)을 사용하여 가우스 혼합 모델로 모델 선택을 수행 할 수 있음을 보여줍니다. 모형 선택은 공분산 유형과 모형의 성분 수와 관련이 있습니다. 이 경우 AIC는 올바른 결과 (시간 절약을 위해 표시되지 않음)도 제공하지만 문제가 올바른 모델을 식별하는 경우 BIC가 더 적합합니다. 베이지안 절차와 달리 그러한 추론은 사전에 무료입니다.</target>
        </trans-unit>
        <trans-unit id="7ed4db944a196b1cb5ab23d8834c95cd5421c757" translate="yes" xml:space="preserve">
          <source>This example shows that you can do non-linear regression with a linear model, using a pipeline to add non-linear features. Kernel methods extend this idea and can induce very high (even infinite) dimensional feature spaces.</source>
          <target state="translated">이 예는 파이프 라인을 사용하여 비선형 피처를 추가하는 선형 모델로 비선형 회귀를 수행 할 수 있음을 보여줍니다. 커널 방법은이 아이디어를 확장하고 매우 높은 (무한한) 차원 형상 공간을 유도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48dcc848c2d6e1561f6c336d60b0fb518f9ab59a" translate="yes" xml:space="preserve">
          <source>This example shows the ROC response of different datasets, created from K-fold cross-validation. Taking all of these curves, it is possible to calculate the mean area under curve, and see the variance of the curve when the training set is split into different subsets. This roughly shows how the classifier output is affected by changes in the training data, and how different the splits generated by K-fold cross-validation are from one another.</source>
          <target state="translated">이 예는 K- 폴드 교차 검증에서 생성 된 서로 다른 데이터 세트의 ROC 응답을 보여줍니다. 이러한 모든 곡선을 취하면 곡선 아래의 평균 면적을 계산하고 훈련 세트가 다른 하위 집합으로 분할 될 때 곡선의 분산을 볼 수 있습니다. 이것은 대략 분류 데이터 출력이 훈련 데이터의 변경에 의해 어떻게 영향을 받는지, 그리고 K- 폴드 교차 검증에 의해 생성 된 스플릿이 어떻게 다른지 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7b92e840bf44fca60c7edc394c5ccf3da0546857" translate="yes" xml:space="preserve">
          <source>This example shows the effect of imposing a connectivity graph to capture local structure in the data. The graph is simply the graph of 20 nearest neighbors.</source>
          <target state="translated">이 예는 데이터에서 로컬 구조를 캡처하기 위해 연결성 그래프를 적용한 효과를 보여줍니다. 그래프는 단순히 20 개의 가장 가까운 이웃의 그래프입니다.</target>
        </trans-unit>
        <trans-unit id="a122bd5b47879a72d10715b2e2741901d74ebd5f" translate="yes" xml:space="preserve">
          <source>This example shows the reconstruction of an image from a set of parallel projections, acquired along different angles. Such a dataset is acquired in &lt;strong&gt;computed tomography&lt;/strong&gt; (CT).</source>
          <target state="translated">이 예는 다른 각도를 따라 획득 한 평행 투영 세트에서 이미지를 재구성하는 것을 보여줍니다. 이러한 데이터 세트는 &lt;strong&gt;컴퓨터 단층 촬영&lt;/strong&gt; (CT)으로 획득됩니다 .</target>
        </trans-unit>
        <trans-unit id="277c7e399c7f521a9367c3279ba6605ffa32bb5b" translate="yes" xml:space="preserve">
          <source>This example shows the use of forests of trees to evaluate the importance of the pixels in an image classification task (faces). The hotter the pixel, the more important.</source>
          <target state="translated">이 예는 이미지 분류 작업 (얼굴)에서 픽셀의 중요성을 평가하기 위해 나무 숲을 사용하는 방법을 보여줍니다. 픽셀이 높을수록 더 중요합니다.</target>
        </trans-unit>
        <trans-unit id="181df9c721e88b620fbcd3038af372d2bc17958d" translate="yes" xml:space="preserve">
          <source>This example shows the use of multi-output estimator to complete images. The goal is to predict the lower half of a face given its upper half.</source>
          <target state="translated">이 예는 다중 출력 추정기를 사용하여 이미지를 완성하는 것을 보여줍니다. 목표는 상반신이 주어진 얼굴의 하반부를 예측하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c194d9ad3fd820ff97a5b60a54a77ad5e096ac46" translate="yes" xml:space="preserve">
          <source>This example simulates a multi-label document classification problem. The dataset is generated randomly based on the following process:</source>
          <target state="translated">이 예제는 다중 레이블 문서 분류 문제를 시뮬레이션합니다. 데이터 세트는 다음 프로세스를 기반으로 임의로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="beca62f6aeebe1ac71c16bdf04b277689fc51da6" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;../../modules/clustering#spectral-clustering&quot;&gt;Spectral clustering&lt;/a&gt; on a graph created from voxel-to-voxel difference on an image to break this image into multiple partly-homogeneous regions.</source>
          <target state="translated">이 예에서는 이미지의 복셀 대 복셀 차이로 생성 된 그래프에서 &lt;a href=&quot;../../modules/clustering#spectral-clustering&quot;&gt;스펙트럼 클러스터링&lt;/a&gt; 을 사용 하여이 이미지를 부분적으로 균질 한 여러 영역으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="b1b3f16a0bb367262a72b24da0008ca16f86a096" translate="yes" xml:space="preserve">
          <source>This example uses a large dataset of faces to learn a set of 20 x 20 images patches that constitute faces.</source>
          <target state="translated">이 예에서는 얼굴을 구성하는 20 x 20 개 이미지 패치 세트를 학습하기 위해 큰면의 얼굴 세트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0ad2a4281006cf2ce3833b3619a37abf58d678e0" translate="yes" xml:space="preserve">
          <source>This example uses different scalers, transformers, and normalizers to bring the data within a pre-defined range.</source>
          <target state="translated">이 예제는 서로 다른 스케일러, 변환기 및 노멀 라이저를 사용하여 데이터를 사전 정의 된 범위 내로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e1bfbae38c6acd2b8b362eacb6ca0227cf12cdc6" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;a href=&quot;../../modules/generated/sklearn.neighbors.kerneldensity#sklearn.neighbors.KernelDensity&quot;&gt;&lt;code&gt;sklearn.neighbors.KernelDensity&lt;/code&gt;&lt;/a&gt; class to demonstrate the principles of Kernel Density Estimation in one dimension.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../../modules/generated/sklearn.neighbors.kerneldensity#sklearn.neighbors.KernelDensity&quot;&gt; &lt;code&gt;sklearn.neighbors.KernelDensity&lt;/code&gt; &lt;/a&gt; 를 사용합니다 . 클래스를 한 차원에서 커널 밀도 추정의 원칙을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1c91a9c343e9d52fecff06520d2432c55d78e2a0" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;scipy.stats&lt;/code&gt; module, which contains many useful distributions for sampling parameters, such as &lt;code&gt;expon&lt;/code&gt;, &lt;code&gt;gamma&lt;/code&gt;, &lt;code&gt;uniform&lt;/code&gt; or &lt;code&gt;randint&lt;/code&gt;. In principle, any function can be passed that provides a &lt;code&gt;rvs&lt;/code&gt; (random variate sample) method to sample a value. A call to the &lt;code&gt;rvs&lt;/code&gt; function should provide independent random samples from possible parameter values on consecutive calls.</source>
          <target state="translated">이 예에서는 사용 &lt;code&gt;scipy.stats&lt;/code&gt; 의 같은 샘플링 파라미터를위한 많은 유용한 분포 포함 모듈 &lt;code&gt;expon&lt;/code&gt; , &lt;code&gt;gamma&lt;/code&gt; , &lt;code&gt;uniform&lt;/code&gt; 또는 &lt;code&gt;randint&lt;/code&gt; 를 . 원칙적 으로 값을 샘플링하는 &lt;code&gt;rvs&lt;/code&gt; (random variate sample) 방법을 제공하는 모든 함수를 전달할 수 있습니다 . 호출받는 &lt;code&gt;rvs&lt;/code&gt; 함수 호출에 연속 가능한 파라미터 값들로부터 독립적 랜덤 샘플을 제공한다.</target>
        </trans-unit>
        <trans-unit id="d9381762b80079a0275cf5384c50652951b2c3b8" translate="yes" xml:space="preserve">
          <source>This example uses the only the first feature of the &lt;code&gt;diabetes&lt;/code&gt; dataset, in order to illustrate a two-dimensional plot of this regression technique. The straight line can be seen in the plot, showing how linear regression attempts to draw a straight line that will best minimize the residual sum of squares between the observed responses in the dataset, and the responses predicted by the linear approximation.</source>
          <target state="translated">이 예는 이 회귀 기술의 2 차원 플롯을 설명하기 위해 &lt;code&gt;diabetes&lt;/code&gt; 데이터 세트 의 첫 번째 특징 만 사용합니다 . 그림에서 직선을 볼 수 있습니다. 선형 회귀 분석에서 데이터 집합의 관측 된 반응과 선형 근사로 예측 된 반응 사이의 잔차 제곱합을 최소화하는 직선을 그리는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c6bb5d76743a81844f0fc5afc16345d399cae103" translate="yes" xml:space="preserve">
          <source>This example visualizes some training loss curves for different stochastic learning strategies, including SGD and Adam. Because of time-constraints, we use several small datasets, for which L-BFGS might be more suitable. The general trend shown in these examples seems to carry over to larger datasets, however.</source>
          <target state="translated">이 예는 SGD 및 Adam을 포함한 다양한 확률 적 학습 전략에 대한 일부 훈련 손실 곡선을 보여줍니다. 시간 제약 때문에 L-BFGS가 더 적합한 몇 가지 작은 데이터 세트를 사용합니다. 그러나이 예제에서 보여지는 일반적인 추세는 더 큰 데이터 세트로 이어지는 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="65646a35859e04e16667e59a0e282463725f9c9e" translate="yes" xml:space="preserve">
          <source>This example visualizes the behavior of several common scikit-learn objects for comparison.</source>
          <target state="translated">이 예는 비교를 위해 몇 가지 일반적인 scikit-learn 객체의 동작을 시각화합니다.</target>
        </trans-unit>
        <trans-unit id="49dcb9492cd2c3de6ca468ca869fddbd4adf1109" translate="yes" xml:space="preserve">
          <source>This example visualizes the partitions given by several trees and shows how the transformation can also be used for non-linear dimensionality reduction or non-linear classification.</source>
          <target state="translated">이 예제에서는 여러 트리에서 제공하는 파티션을 시각화하고 비선형 차원 축소 또는 비선형 분류에 변환을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6888e16176d5ba984d30e5b2aecac9e36e3202eb" translate="yes" xml:space="preserve">
          <source>This example will also work by replacing &lt;code&gt;SVC(kernel=&quot;linear&quot;)&lt;/code&gt; with &lt;code&gt;SGDClassifier(loss=&quot;hinge&quot;)&lt;/code&gt;. Setting the &lt;code&gt;loss&lt;/code&gt; parameter of the &lt;a href=&quot;../../modules/generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; equal to &lt;code&gt;hinge&lt;/code&gt; will yield behaviour such as that of a SVC with a linear kernel.</source>
          <target state="translated">이 예제는 &lt;code&gt;SVC(kernel=&quot;linear&quot;)&lt;/code&gt; 를 &lt;code&gt;SGDClassifier(loss=&quot;hinge&quot;)&lt;/code&gt; 로 대체하여 작동합니다 . &lt;a href=&quot;../../modules/generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;loss&lt;/code&gt; 매개 변수 를 &lt;code&gt;hinge&lt;/code&gt; 와 동일하게 설정하면 선형 커널이있는 SVC의 동작과 같은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="08633b59361c5b4332dffd09b9ac681bbe920080" translate="yes" xml:space="preserve">
          <source>This example, inspired from Chen&amp;rsquo;s publication [1], shows a comparison of the estimated MSE of the LW and OAS methods, using Gaussian distributed data.</source>
          <target state="translated">Chen의 간행물 [1]에서 영감을 얻은이 예는 가우스 분포 데이터를 사용하여 LW 및 OAS 방법의 추정 MSE를 비교 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f9260a90e6c35e520398765702d07497fe04f1a8" translate="yes" xml:space="preserve">
          <source>This examples shows how a classifier is optimized by cross-validation, which is done using the &lt;a href=&quot;../../modules/generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;sklearn.model_selection.GridSearchCV&lt;/code&gt;&lt;/a&gt; object on a development set that comprises only half of the available labeled data.</source>
          <target state="translated">이 예제는 사용 가능한 레이블이 지정된 데이터의 절반 만 포함하는 개발 세트 에서 &lt;a href=&quot;../../modules/generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt; &lt;code&gt;sklearn.model_selection.GridSearchCV&lt;/code&gt; &lt;/a&gt; 오브젝트를 사용하여 교차 유효성 검증에 의해 분류자가 최적화되는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e16048c7f7cf75798d53fe7e675cc81cd1d6af8b" translate="yes" xml:space="preserve">
          <source>This examples shows the use of forests of trees to evaluate the importance of features on an artificial classification task. The red bars are the feature importances of the forest, along with their inter-trees variability.</source>
          <target state="translated">이 예에서는 인공림 분류 작업에서 기능의 중요성을 평가하기 위해 나무 숲을 사용하는 방법을 보여줍니다. 빨간색 막대는 트리 간 변동성과 함께 포리스트의 기능 중요도입니다.</target>
        </trans-unit>
        <trans-unit id="4fb4f14900902539137295018be0a0c7a07b1094" translate="yes" xml:space="preserve">
          <source>This exercise is used in the &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#cv-estimators-tut&quot;&gt;Cross-validated estimators&lt;/a&gt; part of the &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#model-selection-tut&quot;&gt;Model selection: choosing estimators and their parameters&lt;/a&gt; section of the &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;A tutorial on statistical-learning for scientific data processing&lt;/a&gt;.</source>
          <target state="translated">이 연습은 &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#model-selection-tut&quot;&gt;모델 선택&lt;/a&gt; 의 &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#cv-estimators-tut&quot;&gt;교차 검증 된 추정기&lt;/a&gt; 부분 : &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;과학 데이터 처리를위한 통계 학습에 대한 학습서&lt;/a&gt; 의 추정기 및 매개 변수 선택 섹션에서 사용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="621b0c8349abb129c7bc150bd9745f46f49af3ab" translate="yes" xml:space="preserve">
          <source>This exercise is used in the &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#cv-generators-tut&quot;&gt;Cross-validation generators&lt;/a&gt; part of the &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#model-selection-tut&quot;&gt;Model selection: choosing estimators and their parameters&lt;/a&gt; section of the &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;A tutorial on statistical-learning for scientific data processing&lt;/a&gt;.</source>
          <target state="translated">이 연습은 &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#model-selection-tut&quot;&gt;모델 선택&lt;/a&gt; 의 &lt;a href=&quot;../../tutorial/statistical_inference/model_selection#cv-generators-tut&quot;&gt;교차 검증 생성기&lt;/a&gt; 부분 : &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;과학적 데이터 처리를위한 통계 학습에 대한 학습서&lt;/a&gt; 의 추정기 및 매개 변수 선택 섹션에서 사용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="6915ba6643fea2f9e387885428a6e6189c7df3bf" translate="yes" xml:space="preserve">
          <source>This exercise is used in the &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#clf-tut&quot;&gt;Classification&lt;/a&gt; part of the &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#supervised-learning-tut&quot;&gt;Supervised learning: predicting an output variable from high-dimensional observations&lt;/a&gt; section of the &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;A tutorial on statistical-learning for scientific data processing&lt;/a&gt;.</source>
          <target state="translated">이 실습은 &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#supervised-learning-tut&quot;&gt;지도 학습&lt;/a&gt; 의 &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#clf-tut&quot;&gt;분류&lt;/a&gt; 부분 : &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;과학 데이터 처리를위한 통계 학습에 대한 A 학습서&lt;/a&gt; 의 고차원 관측치에서 출력 변수 예측 섹션에서 사용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="421684adc1a996556d28fe46ff4c101c2f3063ef" translate="yes" xml:space="preserve">
          <source>This exercise is used in the &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#using-kernels-tut&quot;&gt;Using kernels&lt;/a&gt; part of the &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#supervised-learning-tut&quot;&gt;Supervised learning: predicting an output variable from high-dimensional observations&lt;/a&gt; section of the &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;A tutorial on statistical-learning for scientific data processing&lt;/a&gt;.</source>
          <target state="translated">이 실습은 &lt;a href=&quot;../../tutorial/statistical_inference/index#stat-learn-tut-index&quot;&gt;과학 학습을위한 통계 학습에 대한 A 학습서&lt;/a&gt; 의 &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#supervised-learning-tut&quot;&gt;고차원 관찰에서 출력 변수 예측&lt;/a&gt; 섹션의 학습 학습 : &lt;a href=&quot;../../tutorial/statistical_inference/supervised_learning#using-kernels-tut&quot;&gt;커널 사용&lt;/a&gt; 파트 에서 사용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="dadb46eeaf7a2bf2f8f61dc107ba2d3f5d55d33a" translate="yes" xml:space="preserve">
          <source>This extends to the multiclass case as follows. Let the true labels for a set of samples be encoded as a 1-of-K binary indicator matrix \(Y\), i.e., \(y_{i,k} = 1\) if sample \(i\) has label \(k\) taken from a set of \(K\) labels. Let \(P\) be a matrix of probability estimates, with \(p_{i,k} = \operatorname{Pr}(t_{i,k} = 1)\). Then the log loss of the whole set is</source>
          <target state="translated">이것은 다음과 같이 멀티 클래스 사례로 확장됩니다. 샘플 \ (i \)에 레이블이있는 경우 샘플 세트에 대한 실제 레이블을 1-K K 이진 표시기 행렬 \ (Y \)로 인코딩합니다 (예 : \ (y_ {i, k} = 1 \)). \ (k \)는 일련의 \ (K \) 레이블에서 가져옵니다. \ (P \)를 확률 추정값의 행렬로하고, \ (p_ {i, k} = \ operatorname {Pr} (t_ {i, k} = 1) \)을 사용하십시오. 그런 다음 전체 세트의 로그 손실은</target>
        </trans-unit>
        <trans-unit id="826a67cf49f96f56e23921af61e52712fab61d33" translate="yes" xml:space="preserve">
          <source>This factory function wraps scoring functions for use in GridSearchCV and cross_val_score. It takes a score function, such as &lt;code&gt;accuracy_score&lt;/code&gt;, &lt;code&gt;mean_squared_error&lt;/code&gt;, &lt;code&gt;adjusted_rand_index&lt;/code&gt; or &lt;code&gt;average_precision&lt;/code&gt; and returns a callable that scores an estimator&amp;rsquo;s output.</source>
          <target state="translated">이 팩토리 함수는 GridSearchCV 및 cross_val_score에서 사용하기위한 스코어링 기능을 래핑합니다. &lt;code&gt;accuracy_score&lt;/code&gt; &lt;code&gt;mean_squared_error&lt;/code&gt; 점수 , mean_squared_error , &lt;code&gt;adjusted_rand_index&lt;/code&gt; _rand_index 또는 &lt;code&gt;average_precision&lt;/code&gt; 과 같은 점수 함수를 사용 하여 추정기의 출력에 점수를 매기는 호출 가능 항목을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5eb7a4eb6e2161d3d9f2a7b4c7010506ccf35ad1" translate="yes" xml:space="preserve">
          <source>This feature corresponds to the sepal length in cm. Once the quantile transformation applied, those landmarks approach closely the percentiles previously defined:</source>
          <target state="translated">이 기능은 sepal 길이 (cm)에 해당합니다. Quantile 변환이 적용되면 해당 랜드 마크는 이전에 정의한 백분위 수에 가깝게 접근합니다.</target>
        </trans-unit>
        <trans-unit id="18a1d2c5a41fd4d57af7a6bb802060cade230322" translate="yes" xml:space="preserve">
          <source>This feature selection algorithm looks only at the features (X), not the desired outputs (y), and can thus be used for unsupervised learning.</source>
          <target state="translated">이 기능 선택 알고리즘은 원하는 출력 (y)이 아닌 기능 (X) 만보고 감독되지 않은 학습에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="677c582ff4a458e9dc8e636909bbbb985fe5cce6" translate="yes" xml:space="preserve">
          <source>This figure is created using the &lt;a href=&quot;generated/sklearn.preprocessing.polynomialfeatures#sklearn.preprocessing.PolynomialFeatures&quot;&gt;&lt;code&gt;PolynomialFeatures&lt;/code&gt;&lt;/a&gt; preprocessor. This preprocessor transforms an input data matrix into a new data matrix of a given degree. It can be used as follows:</source>
          <target state="translated">이 그림은 &lt;a href=&quot;generated/sklearn.preprocessing.polynomialfeatures#sklearn.preprocessing.PolynomialFeatures&quot;&gt; &lt;code&gt;PolynomialFeatures&lt;/code&gt; &lt;/a&gt; 프리 프로세서를 사용하여 작성됩니다 . 이 전처리 기는 입력 데이터 매트릭스를 주어진 정도의 새로운 데이터 매트릭스로 변환합니다. 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adbd1df9acbf84e51fe5dc83e34aca6a9423eabf" translate="yes" xml:space="preserve">
          <source>This figure shows an example of such an ROC curve:</source>
          <target state="translated">이 그림은 이러한 ROC 곡선의 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e1207da0df5038f5f29891db83b7d5022ead8471" translate="yes" xml:space="preserve">
          <source>This folder is used by some large dataset loaders to avoid downloading the data several times.</source>
          <target state="translated">이 폴더는 데이터를 여러 번 다운로드하지 않도록 일부 대형 데이터 세트 로더에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="697a12fdadac01e298b3e16a8634659c2b054014" translate="yes" xml:space="preserve">
          <source>This format is a text-based format, with one sample per line. It does not store zero valued features hence is suitable for sparse dataset.</source>
          <target state="translated">이 형식은 한 줄에 하나의 샘플이있는 텍스트 기반 형식입니다. 값이 0 인 기능을 저장하지 않으므로 스파 스 데이터 세트에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="a2fe6f0ee6734c2a60bcbb1d0d95dc9dfd886002" translate="yes" xml:space="preserve">
          <source>This format is used as the default format for both svmlight and the libsvm command line programs.</source>
          <target state="translated">이 형식은 svmlight 및 libsvm 명령 행 프로그램 모두에 대한 기본 형식으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a2e505f490185afab8e1242d5832b6872eb9a667" translate="yes" xml:space="preserve">
          <source>This formulation has two advantages over other ways of computing distances. First, it is computationally efficient when dealing with sparse data. Second, if one argument varies but the other remains unchanged, then &lt;code&gt;dot(x, x)&lt;/code&gt; and/or &lt;code&gt;dot(y, y)&lt;/code&gt; can be pre-computed.</source>
          <target state="translated">이 공식은 다른 방법으로 거리를 계산하는 것보다 두 가지 장점이 있습니다. 첫째, 희소 데이터를 처리 할 때 계산 효율이 높습니다. 둘째, 하나의 인수는 변하지 만 다른 인수는 변경되지 않은 경우 &lt;code&gt;dot(x, x)&lt;/code&gt; 및 / 또는 &lt;code&gt;dot(y, y)&lt;/code&gt; 를 미리 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd76e45c139161a6c2340aa524dcf0429afb583e" translate="yes" xml:space="preserve">
          <source>This function computes Cohen&amp;rsquo;s kappa &lt;a href=&quot;#r219a3b9132e1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;, a score that expresses the level of agreement between two annotators on a classification problem. It is defined as</source>
          <target state="translated">이 함수 는 분류 문제에 대한 두 어노 테이터 간의 일치 레벨을 나타내는 점수 인 Cohen 's kappa &lt;a href=&quot;#r219a3b9132e1-1&quot; id=&quot;id1&quot;&gt;[1]을&lt;/a&gt; 계산합니다 . 다음과 같이 정의됩니다</target>
        </trans-unit>
        <trans-unit id="1a26f30c64bc915159ba37349551edb033f8db68" translate="yes" xml:space="preserve">
          <source>This function computes for each row in X, the index of the row of Y which is closest (according to the specified distance).</source>
          <target state="translated">이 함수는 지정된 거리에 따라 가장 가까운 Y의 행 인덱스 인 X의 각 행에 대해 계산합니다.</target>
        </trans-unit>
        <trans-unit id="40ca8ec3788866f2480b1619115207e644d05cac" translate="yes" xml:space="preserve">
          <source>This function computes for each row in X, the index of the row of Y which is closest (according to the specified distance). The minimal distances are also returned.</source>
          <target state="translated">이 함수는 지정된 거리에 따라 가장 가까운 Y의 행 인덱스 인 X의 각 행에 대해 계산합니다. 최소 거리도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6e14f241e1c03d6b67a6c0f22515d375ae432487" translate="yes" xml:space="preserve">
          <source>This function crawls the module and gets all classes that inherit from BaseEstimator. Classes that are defined in test-modules are not included. By default meta_estimators such as GridSearchCV are also not included.</source>
          <target state="translated">이 함수는 모듈을 크롤링하고 BaseEstimator에서 상속 된 모든 클래스를 가져옵니다. 테스트 모듈에 정의 된 클래스는 포함되지 않습니다. 기본적으로 GridSearchCV와 같은 meta_estimators도 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="311d27372cf5315019acfac7480657777c623446" translate="yes" xml:space="preserve">
          <source>This function does not try to extract features into a numpy array or scipy sparse matrix. In addition, if load_content is false it does not try to load the files in memory.</source>
          <target state="translated">이 함수는 기능을 numpy 배열 또는 scipy 희소 행렬로 추출하지 않습니다. 또한 load_content가 false이면 파일을 메모리에로드하려고 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28042729acf4bf75d343c82f013b112dad91f4c8" translate="yes" xml:space="preserve">
          <source>This function generates a GraphViz representation of the decision tree, which is then written into &lt;code&gt;out_file&lt;/code&gt;. Once exported, graphical renderings can be generated using, for example:</source>
          <target state="translated">이 함수는 의사 결정 트리의 GraphViz 표현을 생성 한 다음 &lt;code&gt;out_file&lt;/code&gt; 에 작성됩니다 . 일단 내 보내면 다음과 같은 그래픽 렌더링을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90af5dc07a0d6b1b987fbe6284966c35b8f7dbed" translate="yes" xml:space="preserve">
          <source>This function implements Test 1 in:</source>
          <target state="translated">이 함수는 다음과 같이 테스트 1을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="51510777ab8c25d02b45243629e172250d646e40" translate="yes" xml:space="preserve">
          <source>This function is called with the estimated model and the randomly selected data: &lt;code&gt;is_model_valid(model, X, y)&lt;/code&gt;. If its return value is False the current randomly chosen sub-sample is skipped. Rejecting samples with this function is computationally costlier than with &lt;code&gt;is_data_valid&lt;/code&gt;. &lt;code&gt;is_model_valid&lt;/code&gt; should therefore only be used if the estimated model is needed for making the rejection decision.</source>
          <target state="translated">이 함수는 추정 모델과 무작위로 선택된 데이터 &lt;code&gt;is_model_valid(model, X, y)&lt;/code&gt; 와 함께 호출됩니다 . 반환 값이 False이면 현재 무작위로 선택된 하위 샘플을 건너 뜁니다. 이 함수를 사용하여 샘플을 거부하면 &lt;code&gt;is_data_valid&lt;/code&gt; 보다 계산 비용이 많이 듭니다 . 따라서 &lt;code&gt;is_model_valid&lt;/code&gt; 는 추정 모델이 거부 결정을 내리는 데 필요한 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a4283f593950d3e9c84617d07a78fd011e78bfa4" translate="yes" xml:space="preserve">
          <source>This function is called with the randomly selected data before the model is fitted to it: &lt;code&gt;is_data_valid(X, y)&lt;/code&gt;. If its return value is False the current randomly chosen sub-sample is skipped.</source>
          <target state="translated">이 함수는 모델이 적합하기 전에 임의로 선택된 데이터로 호출됩니다 : &lt;code&gt;is_data_valid(X, y)&lt;/code&gt; . 반환 값이 False이면 현재 무작위로 선택된 하위 샘플을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="7289fd594a0de96a89a572bf0a7bd6e9501fda52" translate="yes" xml:space="preserve">
          <source>This function is equivalent to mapping load_svmlight_file over a list of files, except that the results are concatenated into a single, flat list and the samples vectors are constrained to all have the same number of features.</source>
          <target state="translated">이 함수는 결과가 단일 플랫 목록으로 연결되고 샘플 벡터가 모두 동일한 수의 기능을 갖도록 제한된다는 점을 제외하고 파일 목록에 대해 load_svmlight_file을 매핑하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="828fa7414b6e6676bd49f6624bf5ec1232d13777" translate="yes" xml:space="preserve">
          <source>This function makes it possible to compute this transformation for a fixed set of class labels known ahead of time.</source>
          <target state="translated">이 함수를 사용하면 미리 알려진 고정 된 클래스 레이블 세트에 대해이 변환을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="910452d7cd5e91358a13a185cadee882cea17632" translate="yes" xml:space="preserve">
          <source>This function modifies the estimator in-place.</source>
          <target state="translated">이 함수는 추정기를 제자리에서 수정합니다.</target>
        </trans-unit>
        <trans-unit id="3e0bd9f3948e27380d0112f277598d80d17269d2" translate="yes" xml:space="preserve">
          <source>This function requires the true binary value and the target scores, which can either be probability estimates of the positive class, confidence values, or binary decisions. Here is a small example of how to use the &lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;roc_curve&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">이 함수에는 실제 이진 값과 목표 점수가 필요하며, 이는 긍정적 클래스의 확률 추정치, 신뢰도 값 또는 이진 결정일 수 있습니다. 다음은 &lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt; &lt;code&gt;roc_curve&lt;/code&gt; &lt;/a&gt; 함수 를 사용하는 방법에 대한 간단한 예입니다 .</target>
        </trans-unit>
        <trans-unit id="2ddc8c678c75b432a0f0fafa6490a9a69a784bf8" translate="yes" xml:space="preserve">
          <source>This function returns a score of the mean square difference between the actual outcome and the predicted probability of the possible outcome. The actual outcome has to be 1 or 0 (true or false), while the predicted probability of the actual outcome can be a value between 0 and 1.</source>
          <target state="translated">이 함수는 실제 결과와 가능한 결과의 예상 확률 사이의 평균 제곱 차이의 점수를 반환합니다. 실제 결과는 1 또는 0 (true 또는 false)이어야하지만 실제 결과의 예측 확률은 0과 1 사이의 값일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbdeef434a34fee928d2d9974f81cfc54768558d" translate="yes" xml:space="preserve">
          <source>This function returns posterior probabilities of classification according to each class on an array of test vectors X.</source>
          <target state="translated">이 함수는 테스트 벡터 X의 배열에서 각 클래스에 따라 분류의 후방 확률을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f7adc46ef6325367984cfe5d6cabca879706d70d" translate="yes" xml:space="preserve">
          <source>This function returns the Silhouette Coefficient for each sample.</source>
          <target state="translated">이 함수는 각 샘플에 대한 실루엣 계수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30221178098fdd3682a8c91454092d6226b25e4f" translate="yes" xml:space="preserve">
          <source>This function returns the mean Silhouette Coefficient over all samples. To obtain the values for each sample, use &lt;a href=&quot;sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt;&lt;code&gt;silhouette_samples&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 모든 샘플에 대한 평균 실루엣 계수를 반환합니다. 각 샘플의 값을 얻으려면 &lt;a href=&quot;sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt; &lt;code&gt;silhouette_samples&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd812dc35d867d7152375e5009e2698c8db08fc0" translate="yes" xml:space="preserve">
          <source>This function simply returns the valid pairwise distance metrics. It exists to allow for a description of the mapping for each of the valid strings.</source>
          <target state="translated">이 함수는 단순히 유효한 쌍 거리 측정법을 반환합니다. 유효한 각 문자열에 대한 맵핑에 대한 설명을 허용하기 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="fa4705a70e55596dcf2ace89a6d2a8d09a9fcccf" translate="yes" xml:space="preserve">
          <source>This function simply returns the valid pairwise distance metrics. It exists, however, to allow for a verbose description of the mapping for each of the valid strings.</source>
          <target state="translated">이 함수는 단순히 유효한 쌍 거리 측정법을 반환합니다. 그러나 각 유효한 문자열에 대한 자세한 맵핑 설명이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="d1a7a45215b31f0644d6e686c87b329e59419299" translate="yes" xml:space="preserve">
          <source>This function won&amp;rsquo;t compute the intercept.</source>
          <target state="translated">이 함수는 절편을 계산하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a808622a520f852134a2d8734b9e29ce0a669efe" translate="yes" xml:space="preserve">
          <source>This function works with dense 2D arrays only.</source>
          <target state="translated">이 기능은 고밀도 2D 어레이에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7541ac358f5bb3bc5dcdfc1193ff72d6ac233a66" translate="yes" xml:space="preserve">
          <source>This generator method yields the ensemble predicted class probabilities after each iteration of boosting and therefore allows monitoring, such as to determine the predicted class probabilities on a test set after each boost.</source>
          <target state="translated">이 생성기 방법은 부스팅이 반복 될 때마다 앙상블 예측 클래스 확률을 산출하므로 각 부스트 후 테스트 세트에서 예측 된 클래스 확률을 결정하는 것과 같은 모니터링이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="7c1ad29f5d19940cf714626cd821b0934b5bc400" translate="yes" xml:space="preserve">
          <source>This generator method yields the ensemble prediction after each iteration of boosting and therefore allows monitoring, such as to determine the prediction on a test set after each boost.</source>
          <target state="translated">이 생성기 방법은 부스팅의 각 반복 후에 앙상블 예측을 생성하고, 따라서 각 부스트 후 테스트 세트에 대한 예측을 결정하는 것과 같은 모니터링을 허용한다.</target>
        </trans-unit>
        <trans-unit id="acc74c06c673308a3e484c230b5ff2c8348cfe79" translate="yes" xml:space="preserve">
          <source>This generator method yields the ensemble score after each iteration of boosting and therefore allows monitoring, such as to determine the score on a test set after each boost.</source>
          <target state="translated">이 생성기 방법은 각 부스팅 반복 후 앙상블 점수를 산출하므로 각 부스트 후 테스트 세트의 점수를 결정하는 등의 모니터링이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="cb7462acd1f1e763247c87d170997bea5c436272" translate="yes" xml:space="preserve">
          <source>This illustrates the &lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt; dataset generator. Each sample consists of counts of two features (up to 50 in total), which are differently distributed in each of two classes.</source>
          <target state="translated">이것은 &lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt; 데이터 셋 생성기를 보여줍니다 . 각 샘플은 두 클래스 (각각 최대 50 개)의 개수로 구성되며, 두 클래스마다 다르게 배포됩니다.</target>
        </trans-unit>
        <trans-unit id="b80113eed9b4b9668cc4e8b638bede5d1f2cf638" translate="yes" xml:space="preserve">
          <source>This implementation bulk-computes all neighborhood queries, which increases the memory complexity to O(n.d) where d is the average number of neighbors, while original DBSCAN had memory complexity O(n). It may attract a higher memory complexity when querying these nearest neighborhoods, depending on the &lt;code&gt;algorithm&lt;/code&gt;.</source>
          <target state="translated">이 구현은 모든 인접 쿼리를 대량 계산하여 메모리 복잡성을 O (nd)로 증가시킵니다. 여기서 d는 평균 이웃 수이며 원본 DBSCAN은 메모리 복잡도 O (n)를 갖습니다. &lt;code&gt;algorithm&lt;/code&gt; 에 따라 가장 가까운 이웃을 쿼리 할 때 메모리 복잡성이 높아질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92eb61902d4dfd6571a464d87feff72fe7b32901" translate="yes" xml:space="preserve">
          <source>This implementation is based on Rubinstein, R., Zibulevsky, M. and Elad, M., Efficient Implementation of the K-SVD Algorithm using Batch Orthogonal Matching Pursuit Technical Report - CS Technion, April 2008. &lt;a href=&quot;http://www.cs.technion.ac.il/~ronrubin/Publications/KSVD-OMP-v2.pdf&quot;&gt;http://www.cs.technion.ac.il/~ronrubin/Publications/KSVD-OMP-v2.pdf&lt;/a&gt;</source>
          <target state="translated">이 구현은 Rubinstein, R., Zibulevsky, M. 및 Elad, M., Batch Orthogonal Matching Purchase Technical Report-CS Technion, 2008 년 4 월을 사용한 K-SVD 알고리즘의 효율적인 구현을 기반으로합니다. &lt;a href=&quot;http://www.cs.technion.ac.il/~ronrubin/Publications/KSVD-OMP-v2.pdf&quot;&gt; http : //www.cs. technion.ac.il/~ronrubin/Publications/KSVD-OMP-v2.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6fb112845601277f8931b295b857e73c1428c8fb" translate="yes" xml:space="preserve">
          <source>This implementation is by default not memory efficient because it constructs a full pairwise similarity matrix in the case where kd-trees or ball-trees cannot be used (e.g. with sparse matrices). This matrix will consume n^2 floats. A couple of mechanisms for getting around this are:</source>
          <target state="translated">이 구현은 kd-trees 또는 ball-trees를 사용할 수없는 경우 (예를 들어 희소 행렬) 전체 쌍별 유사성 매트릭스를 구성하기 때문에 기본적으로 메모리 효율적이지 않습니다. 이 행렬은 n ^ 2 float를 소비합니다. 이 문제를 해결하기위한 몇 가지 메커니즘은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc51c30dcd01f51cada4be15777f17eb95eb7cbd" translate="yes" xml:space="preserve">
          <source>This implementation is not intended for large-scale applications. In particular, scikit-learn offers no GPU support. For much faster, GPU-based implementations, as well as frameworks offering much more flexibility to build deep learning architectures, see &lt;a href=&quot;http://scikit-learn.org/stable/related_projects.html#related-projects&quot;&gt;Related Projects&lt;/a&gt;.</source>
          <target state="translated">이 구현은 대규모 응용 프로그램을위한 것이 아닙니다. 특히 scikit-learn은 GPU를 지원하지 않습니다. 딥 러닝 아키텍처를 구축 할 수있는 훨씬 더 유연한 유연성을 제공하는 프레임 워크뿐만 아니라 훨씬 빠른 GPU 기반 구현에 대해서는 &lt;a href=&quot;http://scikit-learn.org/stable/related_projects.html#related-projects&quot;&gt;관련 프로젝트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e30a130e6449e6025aca5fcf59ecb737e97cb91" translate="yes" xml:space="preserve">
          <source>This implementation is written in Cython and is reasonably fast. However, a faster API-compatible loader is also available at:</source>
          <target state="translated">이 구현은 Cython으로 작성되었으며 상당히 빠릅니다. 그러나 더 빠른 API 호환 로더는 다음에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b488dd9d3cb1238d47d93805595214963db6dd0c" translate="yes" xml:space="preserve">
          <source>This implementation produces a sparse representation of the counts using scipy.sparse.csr_matrix.</source>
          <target state="translated">이 구현은 scipy.sparse.csr_matrix를 사용하여 수의 스파 스 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="42bc7bbc3f5bd0df8efbfbad62976f6ec6db583b" translate="yes" xml:space="preserve">
          <source>This implementation provides the same results that 3 PLS packages provided in the R language (R-project):</source>
          <target state="translated">이 구현은 3 가지 PLS 패키지가 R 언어 (R- 프로젝트)로 제공되는 것과 동일한 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="09c013dbb84b7e3d406ea0732bc3a8236ed37cbd" translate="yes" xml:space="preserve">
          <source>This implementation provides the same results that the &amp;ldquo;plspm&amp;rdquo; package provided in the R language (R-project), using the function plsca(X, Y). Results are equal or collinear with the function &lt;code&gt;pls(..., mode = &quot;canonical&quot;)&lt;/code&gt; of the &amp;ldquo;mixOmics&amp;rdquo; package. The difference relies in the fact that mixOmics implementation does not exactly implement the Wold algorithm since it does not normalize y_weights to one.</source>
          <target state="translated">이 구현은 plsca (X, Y) 함수를 사용하여 R 언어 (R- 프로젝트)로 제공되는&amp;ldquo;plspm&amp;rdquo;패키지와 동일한 결과를 제공합니다. 결과는 &quot;mixOmics&quot;패키지 의 함수 &lt;code&gt;pls(..., mode = &quot;canonical&quot;)&lt;/code&gt; 과 동일하거나 동일 선상에 있습니다. 차이점은 mixOmics 구현이 y_weights를 1로 정규화하지 않기 때문에 Wold 알고리즘을 정확하게 구현하지 않는다는 사실에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="36e4a374c505873717456a086d5c9ed44e5157f6" translate="yes" xml:space="preserve">
          <source>This implementation will refuse to center scipy.sparse matrices since it would make them non-sparse and would potentially crash the program with memory exhaustion problems.</source>
          <target state="translated">이 구현은 scipy.sparse 매트릭스를 중심에 두는 것을 거부합니다. 왜냐하면 스파 스를 비 스파 스로 만들고 메모리 소진 문제로 인해 프로그램을 충돌시킬 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="6684c1532df5f751b6b61c242ea952621dc3f4e8" translate="yes" xml:space="preserve">
          <source>This implementation works with data represented as dense and sparse numpy arrays of floating point values.</source>
          <target state="translated">이 구현은 부동 소수점 값의 밀도가 높고 희소 한 numpy 배열로 표시되는 데이터로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b0df3cb22108e4cd0ed0fcd534ed03e427412c64" translate="yes" xml:space="preserve">
          <source>This implementation works with data represented as dense numpy arrays of floating point values for the features.</source>
          <target state="translated">이 구현은 기능에 대한 부동 소수점 값의 밀도가 높은 numpy 배열로 표시되는 데이터로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4abb3ee00da8e0ef45c7b10f884f8d272712ca81" translate="yes" xml:space="preserve">
          <source>This implementation works with data represented as dense numpy arrays or sparse scipy arrays of floating point values.</source>
          <target state="translated">이 구현은 밀도가 높은 numpy 배열 또는 부동 소수점 값의 희소 scipy 배열로 표시되는 데이터로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c3c22c958df17cff584f8c572beeb762a9a0290e" translate="yes" xml:space="preserve">
          <source>This implementation works with data represented as dense or sparse arrays of floating point values for the features. The model it fits can be controlled with the loss parameter; by default, it fits a linear support vector machine (SVM).</source>
          <target state="translated">이 구현은 기능에 대해 밀도가 높거나 드문 드문 부동 소수점 값 배열로 표시되는 데이터로 작동합니다. 적합한 모델은 손실 매개 변수로 제어 할 수 있습니다. 기본적으로 선형 서포트 벡터 머신 (SVM)에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="c43a7d8bb7931a79100804db2f074a29d45e4b6b" translate="yes" xml:space="preserve">
          <source>This improvement is not visible in the Silhouette Coefficient which is small for both as this measure seem to suffer from the phenomenon called &amp;ldquo;Concentration of Measure&amp;rdquo; or &amp;ldquo;Curse of Dimensionality&amp;rdquo; for high dimensional datasets such as text data. Other measures such as V-measure and Adjusted Rand Index are information theoretic based evaluation scores: as they are only based on cluster assignments rather than distances, hence not affected by the curse of dimensionality.</source>
          <target state="translated">이 측정 값은 텍스트 데이터와 같은 고차원 데이터 세트에 대해 &quot;측정 농도&quot;또는 &quot;차원의 크기&quot;라고하는 현상으로 고통받는 것처럼 보이기 때문에 Silhouette Coefficient에서 보이지 않습니다. V- 측정 및 조정 랜드 지수와 같은 다른 측정 값은 정보 이론 기반 평가 점수입니다. 거리보다는 클러스터 할당에만 기반하므로 차원의 저주에 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a0d4ffe805942e66e32866a4eb458e728074d78e" translate="yes" xml:space="preserve">
          <source>This initially creates clusters of points normally distributed (std=1) about vertices of an &lt;code&gt;n_informative&lt;/code&gt;-dimensional hypercube with sides of length &lt;code&gt;2*class_sep&lt;/code&gt; and assigns an equal number of clusters to each class. It introduces interdependence between these features and adds various types of further noise to the data.</source>
          <target state="translated">이것은 초기 에 길이 &lt;code&gt;2*class_sep&lt;/code&gt; 의 측면을 갖는 &lt;code&gt;n_informative&lt;/code&gt; 차원 하이퍼 큐브의 정점에 대해 정규 분포 (std = 1) 점 의 클러스터를 생성하고 각 클래스에 동일한 수의 클러스터를 할당합니다. 이 기능들 간의 상호 의존성을 소개하고 다양한 유형의 추가 노이즈를 데이터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5b14c6be212126cf2e3bdc1fe1c6fe8f3c7dc46d" translate="yes" xml:space="preserve">
          <source>This interface is &lt;strong&gt;experimental&lt;/strong&gt; as at version 0.20 and subsequent releases may change attributes without notice (although there should only be minor changes to &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt;).</source>
          <target state="translated">이 인터페이스는 0.20 버전에서 &lt;strong&gt;실험&lt;/strong&gt; 중이며 이후 릴리스에서는 예고없이 속성이 변경 될 수 있습니다 ( &lt;code&gt;data&lt;/code&gt; 및 &lt;code&gt;target&lt;/code&gt; 에는 약간만 변경해야 함 ).</target>
        </trans-unit>
        <trans-unit id="7f6be37b4617684744b3ccc169d2c583b6e3ddc1" translate="yes" xml:space="preserve">
          <source>This is a convenience alias to &lt;code&gt;resample(*arrays, replace=False)&lt;/code&gt; to do random permutations of the collections.</source>
          <target state="translated">이것은 컬렉션의 무작위 순열을 수행 하기 위해 &lt;code&gt;resample(*arrays, replace=False)&lt;/code&gt; 하기 위한 편리한 별명 입니다.</target>
        </trans-unit>
        <trans-unit id="4632bc2ee98a17257db1d248b06f38b79a53d4ef" translate="yes" xml:space="preserve">
          <source>This is a convenience function; the transformation is done using the default settings for &lt;a href=&quot;sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;sklearn.feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;. For more advanced usage (stopword filtering, n-gram extraction, etc.), combine fetch_20newsgroups with a custom &lt;a href=&quot;sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;sklearn.feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;sklearn.feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;sklearn.feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;sklearn.feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 편리한 기능입니다. 변환은 &lt;a href=&quot;sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;sklearn.feature_extraction.text.CountVectorizer&lt;/code&gt; &lt;/a&gt; 의 기본 설정을 사용하여 수행됩니다 . 고급 사용 (스톱 워드 필터링, n- 그램 추출 등)을 위해 fetch_20newsgroups를 사용자 정의 &lt;a href=&quot;sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;sklearn.feature_extraction.text.CountVectorizer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt; &lt;code&gt;sklearn.feature_extraction.text.HashingVectorizer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt; &lt;code&gt;sklearn.feature_extraction.text.TfidfTransformer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt; &lt;code&gt;sklearn.feature_extraction.text.TfidfVectorizer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b3dbf5e1c5e08d66c77786f2bcbc632afc0312a" translate="yes" xml:space="preserve">
          <source>This is a convenience routine for the sake of testing. For many metrics, the utilities in scipy.spatial.distance.cdist and scipy.spatial.distance.pdist will be faster.</source>
          <target state="translated">이것은 테스트를위한 편리한 루틴입니다. 많은 메트릭의 경우 scipy.spatial.distance.cdist 및 scipy.spatial.distance.pdist의 유틸리티가 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="7a67e0a846a2ab3c88cb06fc2b7950cd30914abe" translate="yes" xml:space="preserve">
          <source>This is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets. &lt;a href=&quot;https://goo.gl/U2Uwz2&quot;&gt;https://goo.gl/U2Uwz2&lt;/a&gt;</source>
          <target state="translated">UCI ML 유방암 위스콘신 (진단) 데이터 세트의 사본입니다. &lt;a href=&quot;https://goo.gl/U2Uwz2&quot;&gt;https://goo.gl/U2Uwz2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22bae61d9be3213577df5087cb01b12cfdf8dff4" translate="yes" xml:space="preserve">
          <source>This is a copy of UCI ML Wine recognition datasets. &lt;a href=&quot;https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data&quot;&gt;https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data&lt;/a&gt;</source>
          <target state="translated">이것은 UCI ML 와인 인식 데이터 세트의 사본입니다. &lt;a href=&quot;https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data&quot;&gt;https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c52f45448ee0e84b694b7c38bdbed7fd0e586461" translate="yes" xml:space="preserve">
          <source>This is a copy of UCI ML housing dataset. &lt;a href=&quot;https://archive.ics.uci.edu/ml/machine-learning-databases/housing/&quot;&gt;https://archive.ics.uci.edu/ml/machine-learning-databases/housing/&lt;/a&gt;</source>
          <target state="translated">UCI ML 하우징 데이터 세트의 사본입니다. &lt;a href=&quot;https://archive.ics.uci.edu/ml/machine-learning-databases/housing/&quot;&gt;https://archive.ics.uci.edu/ml/machine-learning-databases/housing/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dee2146876159a5a0b048cd24a612fae4a810ca" translate="yes" xml:space="preserve">
          <source>This is a copy of the test set of the UCI ML hand-written digits datasets &lt;a href=&quot;http://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits&quot;&gt;http://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits&lt;/a&gt;</source>
          <target state="translated">이것은 UCI ML 손으로 쓴 숫자 데이터 세트의 테스트 세트 사본입니다. &lt;a href=&quot;http://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits&quot;&gt;http://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd4a60c08b29c6d6af237f8cfa14740252c7d04a" translate="yes" xml:space="preserve">
          <source>This is a general function, given points on a curve. For computing the area under the ROC-curve, see &lt;a href=&quot;sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt;. For an alternative way to summarize a precision-recall curve, see &lt;a href=&quot;sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;average_precision_score&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 곡선의 점이 주어지면 일반적인 기능입니다. ROC 곡선 아래 영역을 계산하려면 &lt;a href=&quot;sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt; &lt;code&gt;roc_auc_score&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 . 정밀 회수 곡선을 요약하는 다른 방법은 &lt;a href=&quot;sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt; &lt;code&gt;average_precision_score&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="37510c6c60985c0ea76b5bcc4364db965e5a12fd" translate="yes" xml:space="preserve">
          <source>This is a shorthand for the ColumnTransformer constructor; it does not require, and does not permit, naming the transformers. Instead, they will be given names automatically based on their types. It also does not allow weighting.</source>
          <target state="translated">이것은 ColumnTransformer 생성자의 약자입니다. 변압기의 이름을 요구하지 않으며 허용하지도 않습니다. 대신, 유형에 따라 이름이 자동으로 부여됩니다. 또한 가중치를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="022d95ed0540e35ea0bdce867e9a502603bc5f51" translate="yes" xml:space="preserve">
          <source>This is a shorthand for the FeatureUnion constructor; it does not require, and does not permit, naming the transformers. Instead, they will be given names automatically based on their types. It also does not allow weighting.</source>
          <target state="translated">이것은 FeatureUnion 생성자의 약자입니다. 변압기의 이름을 요구하지 않으며 허용하지도 않습니다. 대신, 유형에 따라 이름이 자동으로 부여됩니다. 또한 가중치를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="52a890ca0cc5d284d366294db21e8c380349733e" translate="yes" xml:space="preserve">
          <source>This is a shorthand for the Pipeline constructor; it does not require, and does not permit, naming the estimators. Instead, their names will be set to the lowercase of their types automatically.</source>
          <target state="translated">이것은 파이프 라인 생성자의 약자입니다. 추정 자의 이름을 요구하지 않으며 허용하지도 않습니다. 대신 이름이 자동으로 소문자로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="bcbf4cb6d3eb7ea12d02241a9a60f7a4e6044f4d" translate="yes" xml:space="preserve">
          <source>This is a wrapper for &lt;code&gt;estimator_.predict(X)&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;estimator_.predict(X)&lt;/code&gt; 의 래퍼입니다 .</target>
        </trans-unit>
        <trans-unit id="17ebe8027dbbfba976bb150f0e9172e06d0c02ec" translate="yes" xml:space="preserve">
          <source>This is a wrapper for &lt;code&gt;estimator_.score(X, y)&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;estimator_.score(X, y)&lt;/code&gt; 의 래퍼입니다 .</target>
        </trans-unit>
        <trans-unit id="602675ab661ad893c615b29b13c1d56146fcfa0b" translate="yes" xml:space="preserve">
          <source>This is an alternative to passing a &lt;code&gt;backend='backend_name'&lt;/code&gt; argument to the &lt;code&gt;Parallel&lt;/code&gt; class constructor. It is particularly useful when calling into library code that uses joblib internally but does not expose the backend argument in its own API.</source>
          <target state="translated">이는 &lt;code&gt;backend='backend_name'&lt;/code&gt; 인수를 &lt;code&gt;Parallel&lt;/code&gt; 클래스 생성자 에 전달하는 대안 입니다. joblib를 내부적으로 사용하지만 백엔드 인수를 자체 API에 노출시키지 않는 라이브러리 코드를 호출 할 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="47f9c3947e84bb8a914aa6f2f19cb2c5e42e970f" translate="yes" xml:space="preserve">
          <source>This is an example of &lt;strong&gt;bias/variance tradeoff&lt;/strong&gt;: the larger the ridge &lt;code&gt;alpha&lt;/code&gt; parameter, the higher the bias and the lower the variance.</source>
          <target state="translated">이는 &lt;strong&gt;치우침 / 분산 트레이드 오프&lt;/strong&gt; 의 예입니다 . 릿지 &lt;code&gt;alpha&lt;/code&gt; 매개 변수가 클수록 치우침이 높고 분산이 더 낮습니다.</target>
        </trans-unit>
        <trans-unit id="d75c7c933c17fefbabe7c2e292b885d0ecac3a21" translate="yes" xml:space="preserve">
          <source>This is an example of applying &lt;a href=&quot;../../modules/generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;sklearn.decomposition.NMF&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../modules/generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;sklearn.decomposition.LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; on a corpus of documents and extract additive models of the topic structure of the corpus. The output is a list of topics, each represented as a list of terms (weights are not shown).</source>
          <target state="translated">이것은 문서 모음에 &lt;a href=&quot;../../modules/generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;sklearn.decomposition.NMF&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../modules/generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt; &lt;code&gt;sklearn.decomposition.LatentDirichletAllocation&lt;/code&gt; &lt;/a&gt; 을 적용 하고 모음의 주제 구조에 대한 추가 모델을 추출 하는 예입니다 . 결과는 주제 목록으로, 각각 용어 목록으로 표시됩니다 (무게는 표시되지 않음).</target>
        </trans-unit>
        <trans-unit id="53176f2993974522405fa17c9a80a84e38a4969c" translate="yes" xml:space="preserve">
          <source>This is an example showing how scikit-learn can be used for classification using an out-of-core approach: learning from data that doesn&amp;rsquo;t fit into main memory. We make use of an online classifier, i.e., one that supports the partial_fit method, that will be fed with batches of examples. To guarantee that the features space remains the same over time we leverage a HashingVectorizer that will project each example into the same feature space. This is especially useful in the case of text classification where new features (words) may appear in each batch.</source>
          <target state="translated">다음은 scikit-learn이 코어 외부 접근 방식을 사용하여 분류에 사용되는 방법을 보여주는 예입니다. 주 메모리에 맞지 않는 데이터에서 학습합니다. 우리는 온라인 분류기, 즉 partial_fit 메소드를 지원하는 분류기를 사용합니다. 시간이 지남에 따라 기능 공간이 동일하게 유지되도록 각 예제를 동일한 기능 공간으로 투영하는 HashingVectorizer를 활용합니다. 이것은 각 분류에 새로운 기능 (단어)이 나타날 수있는 텍스트 분류의 경우에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1620bf9fc1f7795235eabc8e2a67657eca16390d" translate="yes" xml:space="preserve">
          <source>This is an example showing how scikit-learn can be used to classify documents by topics using a bag-of-words approach. This example uses a scipy.sparse matrix to store the features and demonstrates various classifiers that can efficiently handle sparse matrices.</source>
          <target state="translated">이것은 scikit-learn을 사용하여 bag-of-words 접근법을 사용하여 주제별로 문서를 분류하는 방법을 보여줍니다. 이 예에서는 scipy.sparse 행렬을 사용하여 기능을 저장하고 희소 행렬을 효율적으로 처리 할 수있는 다양한 분류기를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="687fdb042e4ef171de769c4722977550577ec678" translate="yes" xml:space="preserve">
          <source>This is an example showing how the scikit-learn can be used to cluster documents by topics using a bag-of-words approach. This example uses a scipy.sparse matrix to store the features instead of standard numpy arrays.</source>
          <target state="translated">다음은 scikit-learn을 사용하여 bag-of-words 접근 방식을 사용하여 주제별로 문서를 클러스터링하는 방법을 보여줍니다. 이 예에서는 표준 numpy 배열 대신 scipy.sparse 행렬을 사용하여 기능을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="c505c2f7b70a5aa0d5582bdc56a7d9627b32a4d8" translate="yes" xml:space="preserve">
          <source>This is an example showing the prediction latency of various scikit-learn estimators.</source>
          <target state="translated">다양한 사이 킷 학습 추정기의 예측 지연 시간을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="9e4f7a05490ee1267f03d9980bace7147baa0b76" translate="yes" xml:space="preserve">
          <source>This is an extension of the algorithm in scipy.stats.mode.</source>
          <target state="translated">이것은 scipy.stats.mode에있는 알고리즘의 확장입니다.</target>
        </trans-unit>
        <trans-unit id="375819c22c211b4c7fc97205acd724c3a575f620" translate="yes" xml:space="preserve">
          <source>This is an implementation that uses the result of the previous model to speed up computations along the set of solutions, making it faster than sequentially calling LogisticRegression for the different parameters. Note that there will be no speedup with liblinear solver, since it does not handle warm-starting.</source>
          <target state="translated">이것은 이전 모델의 결과를 사용하여 솔루션 세트를 따라 계산 속도를 높이고 여러 매개 변수에 대해 LogisticRegression을 순차적으로 호출하는 것보다 빠르게 구현하는 구현입니다. liblinear 솔버는 웜 스타트를 처리하지 않으므로 속도가 향상되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89098058da4c55a1db96b87aadaa162a0a15baba" translate="yes" xml:space="preserve">
          <source>This is assumed to implement the scikit-learn estimator interface. Either estimator needs to provide a &lt;code&gt;score&lt;/code&gt; function, or &lt;code&gt;scoring&lt;/code&gt; must be passed.</source>
          <target state="translated">이것은 scikit-learn 추정기 인터페이스를 구현하는 것으로 가정합니다. 평가자가 &lt;code&gt;score&lt;/code&gt; 함수 를 제공 하거나 &lt;code&gt;scoring&lt;/code&gt; 를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="a9f1a5b0fa7d00ad69170d1ab81bf1031dee11a2" translate="yes" xml:space="preserve">
          <source>This is called a &lt;a href=&quot;../../modules/generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt; cross-validation.</source>
          <target state="translated">이를 &lt;a href=&quot;../../modules/generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt; 교차 검증 이라고합니다 .</target>
        </trans-unit>
        <trans-unit id="2e974743bc0fdffbf7238debaf0ee76bb5a5d9b2" translate="yes" xml:space="preserve">
          <source>This is called cosine similarity, because Euclidean (L2) normalization projects the vectors onto the unit sphere, and their dot product is then the cosine of the angle between the points denoted by the vectors.</source>
          <target state="translated">유클리드 (L2) 정규화로 벡터를 단위 구에 투영하고 그 점 곱이 벡터로 표시된 점 사이의 각도의 코사인이기 때문에 이것을 코사인 유사성이라고합니다.</target>
        </trans-unit>
        <trans-unit id="9b01365512b47448f649e450ddd111360a73cfc3" translate="yes" xml:space="preserve">
          <source>This is called the &lt;a href=&quot;https://en.wikipedia.org/wiki/Curse_of_dimensionality&quot;&gt;curse of dimensionality&lt;/a&gt; and is a core problem that machine learning addresses.</source>
          <target state="translated">이것을 &lt;a href=&quot;https://en.wikipedia.org/wiki/Curse_of_dimensionality&quot;&gt;차원&lt;/a&gt; 의 저주 라고하며 기계 학습이 해결하는 핵심 문제입니다.</target>
        </trans-unit>
        <trans-unit id="25e5e11d6a0e13a60841f1cb72db59989d03472f" translate="yes" xml:space="preserve">
          <source>This is currently implemented in the following classes:</source>
          <target state="translated">이것은 현재 다음 클래스에서 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="a774a1be5070f83615f896d6d2ec16ebfbe92e4e" translate="yes" xml:space="preserve">
          <source>This is done in 2 steps:</source>
          <target state="translated">이것은 2 단계로 이루어집니다 :</target>
        </trans-unit>
        <trans-unit id="0c564a0d4cfad247ff47792f5a12558130a84f0c" translate="yes" xml:space="preserve">
          <source>This is equivalent to fit followed by transform, but more efficiently implemented.</source>
          <target state="translated">이는 적합하지만 변형과 동일하지만보다 효율적으로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="831022bba18e9ed70a7a762cd8243e7523afeddb" translate="yes" xml:space="preserve">
          <source>This is especially useful when the whole dataset is too big to fit in memory at once.</source>
          <target state="translated">이것은 전체 데이터 세트가 한 번에 메모리에 맞지 않을 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="75c0bef753e28aecf63e47221c52fe362a027981" translate="yes" xml:space="preserve">
          <source>This is implemented as &lt;code&gt;argmax(decision_function(X), axis=1)&lt;/code&gt; which will return the label of the class with most votes by estimators predicting the outcome of a decision for each possible class pair.</source>
          <target state="translated">이것은 &lt;code&gt;argmax(decision_function(X), axis=1)&lt;/code&gt; 로 구현되며 , 각 가능한 클래스 쌍에 대한 결정 결과를 예측하는 추정자가 대부분의 투표로 클래스의 레이블을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9b2a6723fed7b2d139e18e341020f963dc7f8450" translate="yes" xml:space="preserve">
          <source>This is implemented by linking the points X into the graph of geodesic distances of the training data. First the &lt;code&gt;n_neighbors&lt;/code&gt; nearest neighbors of X are found in the training data, and from these the shortest geodesic distances from each point in X to each point in the training data are computed in order to construct the kernel. The embedding of X is the projection of this kernel onto the embedding vectors of the training set.</source>
          <target state="translated">이것은 점 X를 훈련 데이터의 측지 거리의 그래프에 연결함으로써 구현됩니다. 먼저 X의 가장 가까운 &lt;code&gt;n_neighbors&lt;/code&gt; 이웃이 훈련 데이터에서 발견되며, 이들 X로부터 각 지점에서 훈련 데이터의 각 지점까지의 가장 짧은 측지 거리는 커널을 구성하기 위해 계산됩니다. X의 삽입은이 커널이 훈련 세트의 포함 벡터에 투영 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="51ae8a82b3eff6fb295f70aa28171d41c73ac3db" translate="yes" xml:space="preserve">
          <source>This is implemented in &lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.transform&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis.transform&lt;/code&gt;&lt;/a&gt;. The desired dimensionality can be set using the &lt;code&gt;n_components&lt;/code&gt; constructor parameter. This parameter has no influence on &lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis.fit&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis.predict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.transform&quot;&gt; &lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis.transform&lt;/code&gt; &lt;/a&gt; 에서 구현됩니다 . &lt;code&gt;n_components&lt;/code&gt; 생성자 매개 변수를 사용하여 원하는 차원을 설정할 수 있습니다 . 이 매개 변수는 &lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit&quot;&gt; &lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis.fit&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict&quot;&gt; &lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis.predict&lt;/code&gt; &lt;/a&gt; 에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="de8220f3c95931fc4241bdd5334e66fca04da2f0" translate="yes" xml:space="preserve">
          <source>This is known as &lt;a href=&quot;../../modules/generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것을 &lt;a href=&quot;../../modules/generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; 이라고&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1d1ef16c8ffe6df8c7a1a81b132f67cdda1b92ea" translate="yes" xml:space="preserve">
          <source>This is more efficient than calling fit followed by transform.</source>
          <target state="translated">이것은 fit을 호출 한 다음 변환하는 것보다 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="1dfb3afc660617ced3002fefa24847b5bb1a14dd" translate="yes" xml:space="preserve">
          <source>This is mostly equivalent to calling:</source>
          <target state="translated">이것은 대부분 다음을 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bbd51f304b678a157464ff7ab03c52123d04218d" translate="yes" xml:space="preserve">
          <source>This is not a symmetric function.</source>
          <target state="translated">이것은 대칭 기능이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0b5c42967b0e34c52656dd80a4e659c6f0fa2181" translate="yes" xml:space="preserve">
          <source>This is not exactly the same as &lt;code&gt;sklearn.metrics.additive_chi2_kernel&lt;/code&gt;. The authors of &lt;a href=&quot;#vz2010&quot; id=&quot;id4&quot;&gt;[VZ2010]&lt;/a&gt; prefer the version above as it is always positive definite. Since the kernel is additive, it is possible to treat all components \(x_i\) separately for embedding. This makes it possible to sample the Fourier transform in regular intervals, instead of approximating using Monte Carlo sampling.</source>
          <target state="translated">이것은 &lt;code&gt;sklearn.metrics.additive_chi2_kernel&lt;/code&gt; 과 정확히 동일하지 않습니다 . &lt;a href=&quot;#vz2010&quot; id=&quot;id4&quot;&gt;[VZ2010]&lt;/a&gt; 의 저자는 위의 버전을 선호합니다. 항상 양의 한정판 입니다. 커널은 부가 적이므로 모든 구성 요소 \ (x_i \)를 포함하기 위해 개별적으로 처리 할 수 ​​있습니다. 이를 통해 Monte Carlo 샘플링을 사용하여 근사화하는 대신 일정한 간격으로 푸리에 변환을 샘플링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7f802fcac19c1c8ed1c55f673312d761a2c94a7" translate="yes" xml:space="preserve">
          <source>This is not the case for &lt;a href=&quot;generated/sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt;&lt;code&gt;completeness_score&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt;&lt;code&gt;homogeneity_score&lt;/code&gt;&lt;/a&gt;: both are bound by the relationship:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt; &lt;code&gt;completeness_score&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;generated/sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt; &lt;code&gt;homogeneity_score&lt;/code&gt; &lt;/a&gt; 의 경우에는 해당되지 않습니다 . 둘 다 관계에 의해 구속됩니다.</target>
        </trans-unit>
        <trans-unit id="5d73f5b087f2ecb2dadb8778d3d18cfc19507034" translate="yes" xml:space="preserve">
          <source>This is not true for &lt;code&gt;mutual_info_score&lt;/code&gt;, which is therefore harder to judge:</source>
          <target state="translated">&lt;code&gt;mutual_info_score&lt;/code&gt; 에는 해당되지 않으므로 판단하기가 더 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="982101a3d677907e48e034c807cde26531a0468b" translate="yes" xml:space="preserve">
          <source>This is only available if no vocabulary was given.</source>
          <target state="translated">어휘가없는 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ca1a333516e3b52907835d092958662636ea528" translate="yes" xml:space="preserve">
          <source>This is particularly important for doing grid searches:</source>
          <target state="translated">그리드 검색을 수행 할 때 특히 중요합니다.</target>
        </trans-unit>
        <trans-unit id="2413be66af5e312ff97e484aff33c56868971fbe" translate="yes" xml:space="preserve">
          <source>This is perhaps the best known database to be found in the pattern recognition literature. Fisher&amp;rsquo;s paper is a classic in the field and is referenced frequently to this day. (See Duda &amp;amp; Hart, for example.) The data set contains 3 classes of 50 instances each, where each class refers to a type of iris plant. One class is linearly separable from the other 2; the latter are NOT linearly separable from each other.</source>
          <target state="translated">패턴 인식 문헌에서 가장 잘 알려진 데이터베이스 일 것입니다. 피셔의 논문은이 분야의 고전이며 오늘날 자주 언급됩니다. (예를 들어 Duda &amp;amp; Hart를 참조하십시오.) 데이터 세트에는 각각 50 개의 인스턴스로 구성된 3 개의 클래스가 포함되며, 각 클래스는 홍채 식물의 유형을 나타냅니다. 한 클래스는 다른 클래스와 선형으로 분리 가능합니다. 후자는 서로 선형으로 분리 할 수 ​​없습니다.</target>
        </trans-unit>
        <trans-unit id="32ef6d8e689e0cbccf726fb7a94339c2864c487f" translate="yes" xml:space="preserve">
          <source>This is present only if &lt;code&gt;refit&lt;/code&gt; is not False.</source>
          <target state="translated">이것은 &lt;code&gt;refit&lt;/code&gt; 가 거짓이 아닌 경우에만 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="717414c2af196799a3d1dc1aec1269a995318377" translate="yes" xml:space="preserve">
          <source>This is similar to the error set size, but weighted by the number of relevant and irrelevant labels. The best performance is achieved with a ranking loss of zero.</source>
          <target state="translated">이는 오류 세트 크기와 비슷하지만 관련이 있고 관련이없는 레이블의 수에 따라 가중치가 적용됩니다. 최고의 성능은 순위 손실 0으로 달성됩니다.</target>
        </trans-unit>
        <trans-unit id="00034266cafd87d919959c8134650d981f2c4466" translate="yes" xml:space="preserve">
          <source>This is the class and function reference of scikit-learn. Please refer to the &lt;a href=&quot;http://scikit-learn.org/stable/user_guide.html#user-guide&quot;&gt;full user guide&lt;/a&gt; for further details, as the class and function raw specifications may not be enough to give full guidelines on their uses. For reference on concepts repeated across the API, see &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#glossary&quot;&gt;Glossary of Common Terms and API Elements&lt;/a&gt;.</source>
          <target state="translated">이것은 scikit-learn의 클래스 및 함수 참조입니다. 클래스 및 함수 기본 사양이 사용에 대한 전체 지침을 제공하기에 충분하지 않을 수 있으므로 자세한 내용 은 &lt;a href=&quot;http://scikit-learn.org/stable/user_guide.html#user-guide&quot;&gt;전체 사용자 안내서&lt;/a&gt; 를 참조하십시오 . API에서 반복되는 개념에 대한 참조 &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#glossary&quot;&gt;는 공통 용어 및 API 요소 용어집을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c0b38fb17b983574b86706f2172c4c4bac1c6a5" translate="yes" xml:space="preserve">
          <source>This is the loss function used in (multinomial) logistic regression and extensions of it such as neural networks, defined as the negative log-likelihood of the true labels given a probabilistic classifier&amp;rsquo;s predictions. The log loss is only defined for two or more labels. For a single sample with true label yt in {0,1} and estimated probability yp that yt = 1, the log loss is</source>
          <target state="translated">이것은 (다항식) 로지스틱 회귀 및 신경망과 같은 그것의 확장에 사용되는 손실 함수로, 확률 분류기의 예측이 주어지면 진정한 라벨의 음의 로그 가능성으로 정의됩니다. 로그 손실은 두 개 이상의 레이블에 대해서만 정의됩니다. {0,1}에 실제 레이블 yt가 있고 단일 확률 yp가 yt = 1 인 단일 표본의 경우 로그 손실은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9111de5c7f4d9db0e2dc4faf926c5c47ae0eb12" translate="yes" xml:space="preserve">
          <source>This is the result of calling &lt;code&gt;method&lt;/code&gt;</source>
          <target state="translated">이것은 &lt;code&gt;method&lt;/code&gt; 호출의 결과입니다</target>
        </trans-unit>
        <trans-unit id="611492c50f944d397ce592f12eabee4801e28de1" translate="yes" xml:space="preserve">
          <source>This is the structured version, that takes into account some topological structure between samples.</source>
          <target state="translated">이것은 샘플 사이의 일부 토폴로지 구조를 고려한 구조화 된 버전입니다.</target>
        </trans-unit>
        <trans-unit id="eb0a6c68cdbb70ef7265210b8b8760243faa6912" translate="yes" xml:space="preserve">
          <source>This is useful for fitting an intercept term with implementations which cannot otherwise fit it directly.</source>
          <target state="translated">이는 다른 방법으로는 직접 맞출 수없는 구현에 절편 항을 맞추는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1c420e62ce6697ac415dbca5798c0153080b025c" translate="yes" xml:space="preserve">
          <source>This is useful if the stored attributes of a previously used model has to be reused. If set to False, then the coefficients will be rewritten for every call to fit. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-warm-start&quot;&gt;the Glossary&lt;/a&gt;.</source>
          <target state="translated">이전에 사용한 모델의 저장된 속성을 재사용해야하는 경우에 유용합니다. False로 설정하면 모든 호출에 맞게 계수가 다시 작성됩니다. &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-warm-start&quot;&gt;용어집을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="42f2c0052d88e51f5df6c26752c192f81040ec01" translate="yes" xml:space="preserve">
          <source>This kernel is a popular choice for computing the similarity of documents represented as tf-idf vectors. &lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;cosine_similarity&lt;/code&gt;&lt;/a&gt; accepts &lt;code&gt;scipy.sparse&lt;/code&gt; matrices. (Note that the tf-idf functionality in &lt;code&gt;sklearn.feature_extraction.text&lt;/code&gt; can produce normalized vectors, in which case &lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;cosine_similarity&lt;/code&gt;&lt;/a&gt; is equivalent to &lt;a href=&quot;generated/sklearn.metrics.pairwise.linear_kernel#sklearn.metrics.pairwise.linear_kernel&quot;&gt;&lt;code&gt;linear_kernel&lt;/code&gt;&lt;/a&gt;, only slower.)</source>
          <target state="translated">이 커널은 tf-idf 벡터로 표시되는 문서의 유사성을 계산하는 데 널리 사용됩니다. &lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt; &lt;code&gt;cosine_similarity&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;scipy.sparse&lt;/code&gt; 행렬을 허용 합니다. (의 TF-IDF 기능 유의 &lt;code&gt;sklearn.feature_extraction.text&lt;/code&gt; 는 정규화 벡터를 생산할 수는있는 경우 &lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt; &lt;code&gt;cosine_similarity&lt;/code&gt; 는&lt;/a&gt; 동등 &lt;a href=&quot;generated/sklearn.metrics.pairwise.linear_kernel#sklearn.metrics.pairwise.linear_kernel&quot;&gt; &lt;code&gt;linear_kernel&lt;/code&gt; &lt;/a&gt; 만 느리다.)</target>
        </trans-unit>
        <trans-unit id="f1fbcea40cf4aba903be6eddf36c859a1718e3b8" translate="yes" xml:space="preserve">
          <source>This kernel is infinitely differentiable, which implies that GPs with this kernel as covariance function have mean square derivatives of all orders, and are thus very smooth.</source>
          <target state="translated">이 커널은 무한히 차별화가 가능합니다. 즉, 공분산 함수로이 커널을 사용하는 GP는 모든 차수의 평균 제곱 도함수를 가지므로 매우 부드럽습니다.</target>
        </trans-unit>
        <trans-unit id="6ad60f9f3ef06c9a3898414b0afc593eaff20c1d" translate="yes" xml:space="preserve">
          <source>This kernel is infinitely differentiable, which implies that GPs with this kernel as covariance function have mean square derivatives of all orders, and are thus very smooth. The prior and posterior of a GP resulting from an RBF kernel are shown in the following figure:</source>
          <target state="translated">이 커널은 무한히 차별화가 가능합니다. 즉, 공분산 함수로이 커널을 사용하는 GP는 모든 차수의 평균 제곱 도함수를 가지므로 매우 부드럽습니다. RBF 커널로 인한 GP의 앞뒤는 다음 그림과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6cbded70a18b870dfff7fda8d59e204ebd77900f" translate="yes" xml:space="preserve">
          <source>This kind of singular profiles is often seen in practice, for instance:</source>
          <target state="translated">이러한 종류의 단일 프로파일은 종종 다음과 같이 실제로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1df4414d1e47e9ea41e98b8c6e13b5eeb49e06ac" translate="yes" xml:space="preserve">
          <source>This left out portion can be used to estimate the generalization error without having to rely on a separate validation set. This estimate comes &amp;ldquo;for free&amp;rdquo; as no additional data is needed and can be used for model selection.</source>
          <target state="translated">이 생략 부분은 별도의 유효성 검사 세트에 의존하지 않고 일반화 오류를 추정하는 데 사용할 수 있습니다. 이 데이터는 추가 데이터가 필요 없으며 모델 선택에 사용할 수 있으므로 &quot;무료&quot;로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="4f52c7809ab985057ba93af9b88459b0d10b33a2" translate="yes" xml:space="preserve">
          <source>This makes sure that the loss function is not heavily influenced by the outliers while not completely ignoring their effect.</source>
          <target state="translated">이는 손실 함수가 그 영향을 완전히 무시하지 않는 이상 특이 치에 의해 크게 영향을받지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="4826ff4b754b03a246d73c38aa2c971ffdf335e1" translate="yes" xml:space="preserve">
          <source>This means each weight \(w_{i}\) is drawn from a Gaussian distribution, centered on zero and with a precision \(\lambda_{i}\):</source>
          <target state="translated">이것은 각 가중치 \ (w_ {i} \)가 0을 중심으로하고 정밀도 \ (\ lambda_ {i} \)를 가진 가우시안 분포에서 도출됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="de2308f740624c092eea038ac13deb5af2b1fa80" translate="yes" xml:space="preserve">
          <source>This means that any classifiers handling multi-output multiclass or multi-task classification tasks, support the multi-label classification task as a special case. Multi-task classification is similar to the multi-output classification task with different model formulations. For more information, see the relevant estimator documentation.</source>
          <target state="translated">이는 다중 출력 다중 클래스 또는 다중 작업 분류 작업을 처리하는 모든 분류자가 다중 레이블 분류 작업을 특수한 경우로 지원함을 의미합니다. 다중 작업 분류는 다른 모델 구성을 사용하는 다중 출력 분류 작업과 유사합니다. 자세한 정보는 관련 추정기 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6157bc0b8c2f67c8a593bf2d12852c000be43e72" translate="yes" xml:space="preserve">
          <source>This measure is not adjusted for chance. Therefore &lt;a href=&quot;sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt;&lt;code&gt;adjusted_mutual_info_score&lt;/code&gt;&lt;/a&gt; might be preferred.</source>
          <target state="translated">이 측정 값은 우연히 조정되지 않았습니다. 따라서 &lt;a href=&quot;sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt; &lt;code&gt;adjusted_mutual_info_score&lt;/code&gt; &lt;/a&gt; 가 선호 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cca48ea1404a91d2df7b18cac656df30067cb12b" translate="yes" xml:space="preserve">
          <source>This method allows monitoring (i.e. determine error on testing set) after each boosting iteration.</source>
          <target state="translated">이 방법을 사용하면 각 부스팅 반복 후 모니터링 (즉, 테스트 세트의 오류 결정)이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="778da8cdceb825f45e49260c13130972c415ba18" translate="yes" xml:space="preserve">
          <source>This method allows monitoring (i.e. determine error on testing set) after each stage.</source>
          <target state="translated">이 방법을 사용하면 각 단계 후에 모니터링 (즉, 테스트 세트에서 오류를 판별) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="893e20b8eaafff147aad0ee519c22b2be0783798" translate="yes" xml:space="preserve">
          <source>This method allows to generalize prediction to &lt;em&gt;new observations&lt;/em&gt; (not in the training set). Only available for novelty detection (when novelty is set to True).</source>
          <target state="translated">이 방법을 사용하면 예측을 &lt;em&gt;새로운 관측치&lt;/em&gt; 로 일반화 할 수 있습니다 (훈련 세트가 아님). 참신 탐지에만 사용할 수 있습니다 (참신이 True로 설정된 경우).</target>
        </trans-unit>
        <trans-unit id="e13bbab31202d773dbd5b155d7e0b7799ca54f84" translate="yes" xml:space="preserve">
          <source>This method computes the least squares solution using a singular value decomposition of X. If X is a matrix of size (n, p) this method has a cost of \(O(n p^2)\), assuming that \(n \geq p\).</source>
          <target state="translated">이 방법은 X의 특이 값 분해를 사용하여 최소 제곱 솔루션을 계산합니다. X가 크기 (n, p)의 행렬 인 경우이 방법은 \ (n \ geq p \).</target>
        </trans-unit>
        <trans-unit id="dc0919b0c811a79ed295c00492df459fa5ab93e8" translate="yes" xml:space="preserve">
          <source>This method doesn&amp;rsquo;t do anything. It exists purely for compatibility with the scikit-learn transformer API.</source>
          <target state="translated">이 방법은 아무것도하지 않습니다. scikit-learn 변환기 API와의 호환성을 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="89035c0aee87e0125ffcf7bf5f0dbe56fcfb74a9" translate="yes" xml:space="preserve">
          <source>This method has some performance and numerical stability overhead, hence it is better to call partial_fit on chunks of data that are as large as possible (as long as fitting in the memory budget) to hide the overhead.</source>
          <target state="translated">이 방법은 약간의 성능과 수치 안정성 오버 헤드를 가지므로 오버 헤드를 숨기려면 가능한 한 (메모리 예산에 맞는 한) 데이터 청크에 대해 partial_fit을 호출하는 것이 좋습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
