<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="609c2899b7650adcd3ce5ddd63fcdf29f38e4664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="108eeedc7f670546ed697c07c115467aa4a6750f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="10e8268dcd4e9e907144a1ca273eebc15132a931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="877d5b432494d50744cc64a508e7c2590b45812c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5e2bc525ed053aae9b3aa348eede0e0386688f33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.partial_fit&quot;&gt; &lt;code&gt;partial_fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="27bdcd15a19d29c6d88f9ffc7ce073cf2cd94db3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="1f4f33b9e0408dd5cd330e5d356eba5438ae0990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="fd879c47fc662c91cdf08062a3b6941e074864ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="a3981f77fa0829d1713c86e373b1c7154fabaeb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="a54e2f7268a5a18169139d2dfdb601f8b2e4b594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="d25577b69fe18d2c8f51bfdde2f13df7c0f0bd4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f9eb2f9eefb296f237fb7f621a1aa0f0987e0794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.partial_fit&quot;&gt; &lt;code&gt;partial_fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="3e001a89a48181ebf451f4762786ccae07758835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="130c1f559b623e348c3b86750ec94cb8ea88358b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="494e472057b758144e2de1e7d6bafc6bf870497b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="6f38175d82defb32828561ab80858a27c66d5316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="93709b4d583c445eba0188aa1cb11117221ec22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="3cae91e6f3d02df652cc23be1877ef840def4fd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(yt)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(yt)</target>
        </trans-unit>
        <trans-unit id="5e4c2f870e3926813d807af76271da7d61ef51e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0f8a93ef67d4353f7e828d7db3c7f6f018481fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="99525b9f5190717849914b4baf440a53efcd70a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="71eb1c87958e3948518f0623227dab79f7bd7a89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="7c5a7cab2e0297aeb6fcf2637ff58ae1ea02a974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="58cb4f02109b1db11a4d5b5a7a4ad7d1ae586d71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6489072d183c21a8f50af405e81ed36336878521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064492ad52805e309947e8398bb93c4915cc9011" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y, copy])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.transform&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt; (X [, y, 복사])</target>
        </trans-unit>
        <trans-unit id="12c5895bffaf3739d5789aa82779fbaed03af49a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="907c758253fdec591644c4d807f043410397e553" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="888dc43c6581a40d0d2d233070ad9924bd039584" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</target>
        </trans-unit>
        <trans-unit id="7252e9690a3dfad09062a29efba24cb1ce12bd2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="c8de54bcf822d3073bc97ab00ee8e0914bb23120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a317d34d14ac5b850581f825b3e4b4cdbeaad3e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="7342350a4763063cffe9defd7e795651fbeb6002" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4b2ec09c31fd9f551550da0b7b3e0075b784e0e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="ce1af33182170f9132299d957b08302a193f4558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="741af2c1f58d1845c9f05f3a5916cc330ece7cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a61e496ab0cc79b17b78b646fcee158aaa4feb10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cdfc70e1811c3cead625394a5c4504e71b3133ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="e33f4663b7d12e40681ee8b2615785539779c45f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a1763942ba02652bc492be37ed841f77d10fa033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="253312aab53ddf2c2e2ada6eca74918094daaccc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="49b329f00dede10d3c8c7610bd709a8de587e4cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</target>
        </trans-unit>
        <trans-unit id="ab1a825a0a4f8c894bd822687d86ef019d89a6d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="217021a82cecc7c622c7758c23e0076b5e36d73b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b561441dcb5ee4d6afb05559fb0a8fe846551bbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="25ab4107908611fb94f7c8468ff0dbee48f8f71b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="934c6d317927bf64b03033a56103d6c6df26c095" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b134cadf42805f23626a6f356a215571db637fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a02f1b03de09cc573c18fc1b09949170a3b5d4dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="9a8517b5e077f709a72ec14a25a291b0cb328587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="602433a2259cba932f43d710614b3b8c682aceef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b5d1986c88da1574fb8671debc9e53b4b1ae349b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="fdae8893c6ba52b6ac24340a5b74fe5adcdf1672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="20f8e48d49f8dcffb6111b1e904f1caecbb2d7b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0b8f6d543c14fae3b80615ceb7ebd77102569216" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7884e564bdbdbde88ce550c8e45ddff73219824c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="2e8612af1bc4e8bbaceb820639365ed35d96515b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="431d1063425f589ada0f92f2801f058b6e03c61b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="324f727d78ed824dc330a432e9dcc7a957ff8247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="b755ab16a811d3fe05ce1f542d2c57159af3cd16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="f917186bab461486bf2f9208ee6362918c0c74e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7d764da5e1f7f138612d1a73821de6baeef686b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="f0c7686c1470d81b09ad7dfaf83cda86f1dc9f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="61272ed6e5c8f6b927bd25e7f643fda6f3ad2f37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="934d74037ceb0426d331ba2f1426f880f853dc33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="4900fa5eace012db65332672660850860c55b282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a1f3c6341a9aad6c22dc2d0146db3961ab363073" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.inverse_transform&quot;&gt; &lt;code&gt;inverse_transform&lt;/code&gt; &lt;/a&gt; (X [, 복사])</target>
        </trans-unit>
        <trans-unit id="a415d9dfe5d14669f4134fe83b0a41b52cf845e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.partial_fit&quot;&gt; &lt;code&gt;partial_fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="89a2bc9fe9f73d8c607f2276d98c06e203405701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="8851da18426a2d0d3ecb013bb404081f71c5f8ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1febb3b8588eaabb828e6171d442e036b2f895e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y, copy])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.transform&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt; (X [, y, 복사])</target>
        </trans-unit>
        <trans-unit id="237f76a7aff0b42d1ce83f750d084a2ecb90e2bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="bc2ad30e94111b44ee9849199facfe60730b2d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="6ba0db0f32902d59d220742c64d5151773c5e106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="e7b3d53385ec30771f82005232f0ef1ab5e24923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6fa24a2d3931f734f64c83917cdd41ed80e21e40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="49eb083df941b9a06fb0e9e9e44c9ec22922dac2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="03810dace856edcd13e75d0d1d798cf82965c895" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="66db0b81c1ffc75aecb161909ad1d4c6c41e72e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="954a1f728bcf61e22cb313ccc0cbada15c355942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="a4f05f5ce056fa76e1b18b82a0b59c56584fa8f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="054184737ea3a7796996ab8d7d55f5cb42c17d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d92f40ad8cd4f7d81565d3ac6d8592d74c8dd69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="2384b6dd19a9b76471c5e116d320d2df5d1713d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b2def215b040f8f609c1e0ef616e48565db25705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="815e72b6c22f573d100da7f62e6f6984cbe01a6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="eadb5c500221df65a9f9866871486e05986c1c03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b4c6b22a7a7ddaffa6b9441265cdab2817a1463e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="8630cf34daeae7d19656dcf8831d170eb3f7ed61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0fde66af8971f6bf9fcb000e0cccd94a55c27619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="365321ce62987c1e7636537cc3ed643e8ce05858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="8d485f6b57cacf3c2c76fba0d8d010a0a74af30b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="311f06ff8566df2d6679d7063f940f05a36c0e8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6c3f20ec165f7aa6a3d670b32608245e6583f139" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="be9de40ad61af21f78b172836eaf9d693f1c45f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="bb809ab613454a3a1d026086cfba58e3c98d34d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="f030a50178d03a16bd17c283b7665a3b7de48b9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="4b6e54eb5d3c3e52e4d88cb2411f190d06aff596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="641483ce095df447d49ca644ad2b5d4544707403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="c0b462e66676d7168cb3a0faffa8a5d61dd76bd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="52a9f430850177d33347add14123d34c6b5d649d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="35f2edd484816f0feb15e246090f656c45f02c31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="fb8535ffcb5e2ffc82509c2d34e8be0ba83686da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="8ed0e70a27a20df9975d03812ad230dd3ed98906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d26574828ca3a6596fb536af3be72a95bf48da5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="f7506b45c9ba11ef47ec5a4be3185e991367df26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c09ac5e766b0973e4b10c0434c7aa848ebdb68ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="0c13bb73d7e1cbc207d6bce94ffd8beca6980a7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="414f1914c62a6cda2a05c5c60f0496b8bd309898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="fbe4fbca9b4e649f7a40b34b82ca7ac63f84ec2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="aa1bfac167bc1f1dc9edf2c525e2a55264a5cbfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="8f0d5832191fac150767cb6bc791f22d0819b82d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0659659b2bcd23e814a5bf62c673bb51bf41dbd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="80b59c94fbf894a69de94585d1c7729bcf514f25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="dc2c40490029f48847332a1d7b7688c850285293" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b05ccdc8913bd08854e73f84583c0929095e3a81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="221c7a8eae7188ea181b396dd1b90ac49256989b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="ad81c989ca74d7d05bc32460f7d151a89abf66e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="121e71cd0dc150bbcd6bf1af020b816dcb95fd9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y, sample_weight])</target>
        </trans-unit>
        <trans-unit id="b99caa830d9c7da325413ebdae8b46d9352d967f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit_predict&quot;&gt;&lt;code&gt;fit_predict&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit_predict&quot;&gt; &lt;code&gt;fit_predict&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="0782d3c143737b310a2e1a45c87ef6ec48a1f142" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="adaf768a3bca7e61d312bd51fb3e59c6c309f799" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="73a6d0ef953f99b24ffb1c0786307accfb6fd690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="fa0a19f5a77b03aa200160842aec0974a2ba67c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="13e66010824bf3b559373309bab2d2d61ae28bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="eaf32b3fba4e046e7f0dfbcceebab679aa0e9cae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="b95149b0fbd0a334029835fb763d89a602030c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="7024d28dc19312604573afcd8ee27c61976d0e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f7f1e3d3ab12c11542c3d93cb5ac4d441a537aaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="5caf9c0d345c40872c307e89f65c3d08261414ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b18a48aa718fb82cc35acd42db5a888e525a5c39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="97b0b717eb0320c8ed2d029a38a1ba4a118c4ae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="ee3d7b7294e8e666e3aec92fbdc1cf010c57e954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="db222a2a96730b45af0d6966dd8580010796e0cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="da073250731dc3752cc16c9e590e6fe5d6b7dbfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="d986e854a3b166ca430c98b4e83ca44f19ee3bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="3534c3155d431737a9fb32ea40d5029469ab18a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f946c7b239c78964754a859f6961889fca632a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="f15dd2da21da25f0b72636b05129a4f2ad44eb5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a8b0051deac2fc54bc467e43833188c4ca132e14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="16e470af7a2d670c967021e39a75d1f303c6c5d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ed534d11e1cf0a3b7d5f1ba8d4ac2c534455b052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="df0f801628b81edc9703115a2523da7c3297031f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="c16a13f825775d4191c21a28a445cc069149b988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="073619ef7719fa9c6cd60b378b8ac90f91c49967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_proba&quot;&gt; &lt;code&gt;predict_proba&lt;/code&gt; &lt;/a&gt; (X [, check_input ])</target>
        </trans-unit>
        <trans-unit id="54a60fbc6050f842fbad040dc0b7aa5dbec0fdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="2a7ab526fbe96bb45d2404082a436d3ae705798f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="9e2c5f4b34bbb361501f217d7e2b203ea962daa7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="cae3466d1b726fe655b7d74e50790974fc666679" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4225c1c44eee7c5ec47865cb59c23a54cf828b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="daaa1401fc2e0e66ce34d9f12d8e7587874d83a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="015305992aff1a0cb9ae7d9d03b688d425f0d07a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="9416b5186c87d54930384d8b4ee012f2f3fc4ecd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="726ba138eade24bae52f40bd26c71a25cdcaf83c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="994401ea46be57764b391b5b200ce9aed24caad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="65ff3b6ef210d4386ebb678005b2c672ac77d158" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="a692ec644f74731db0443680d6e308ecc5a17044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="bc62892f63d3a9cbab55981bbdc3efc558e37080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="6c564a6d1dd91607086781df86c7ddff8ef369e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85ef496dc313b339fce98d49f0305055ad0fd99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="9290fa2e32c23849f534c4ec0b5688941351086b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7b68f057bbc95dc31ade10259d024a333b3a78a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6e146ef604896aed29c88953a6ac934d1e9671d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5a3ba55c4a55c3a86eb7527c695a560a010f2373" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="53913e1f39f53e714a3708c51f62056b1ecc0bf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="acbcfacac9580441f26e89b35ac1cd23803dc8e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c5b625412cbe0e89bee6cf9f9d94da1f5acd8047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_proba&quot;&gt; &lt;code&gt;predict_proba&lt;/code&gt; &lt;/a&gt; (X [, check_input ])</target>
        </trans-unit>
        <trans-unit id="58dee26c978e1620cbc0071b61c255257578e4ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="942b9df16d517dfd8358deb8993ee47a76b81399" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0ea74c7de7f40ccb999bccbfc3c79a1b586190ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="d698457c59aaf70fe5bc70d7422fa7875846b1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5276183000dfbeb8a0a1913411460b0658af23de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="0403cb18bc343bdfe95195e33961272fe68c1f19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9e62edb59cb7f4ac79991f7c7259426f0a91ef56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="94926e11f0a3ec9841c6edecd328eedabfb5dc56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8bd34d709cdb5aa4be85df11d9f9d82d5178f6b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0fddad60c342e7f6a0f90f2c41daa0945b17a29f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="1b46387aad6f982edd01a938124694a46881926d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="503054553a0d98904bea6720dd7ce9a2736cf2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c4d7f6d8e4fd6d09c383dc403bef887d28ff6577" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt;([func, ignore, verbose, mmap_mode])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt; ([func, ignore, verbose, mmap_mode])</target>
        </trans-unit>
        <trans-unit id="cbbd7395cfc079348c53ce24ecd5e92d5e1296ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;([warn])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;([warn])</target>
        </trans-unit>
        <trans-unit id="ee2b56aa3149f9e490e87ec82fec987be906a94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;(func, *args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; (func, * args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="4200f25f6c85752e9e9dc85b9d3088f61f23a1a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;(obj[, indent])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.format&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt; (obj [, indent])</target>
        </trans-unit>
        <trans-unit id="9204d645d24081482d782f3bda1ae0c019af6dea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.reduce_size&quot;&gt;&lt;code&gt;reduce_size&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.reduce_size&quot;&gt;&lt;code&gt;reduce_size&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="fe97bdff76c4d8fc616e3cba00f74a8b16ec1c0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_next&quot;&gt;&lt;code&gt;dispatch_next&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_next&quot;&gt;&lt;code&gt;dispatch_next&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e991b0616acafb2e9785c560e9c169a297b3dc13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_one_batch&quot;&gt;&lt;code&gt;dispatch_one_batch&lt;/code&gt;&lt;/a&gt;(iterator)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_one_batch&quot;&gt;&lt;code&gt;dispatch_one_batch&lt;/code&gt;&lt;/a&gt;(iterator)</target>
        </trans-unit>
        <trans-unit id="7a08d57eec9640a4518b2da114890ac2613c1d02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;(obj[, indent])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.format&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt; (obj [, indent])</target>
        </trans-unit>
        <trans-unit id="14196be009f261fb0694105a239ea5c1e25f9541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.print_progress&quot;&gt;&lt;code&gt;print_progress&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.print_progress&quot;&gt;&lt;code&gt;print_progress&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="efbac796a7dfcdcf4e39203b4b0ec0407858b0db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#theil-sen-regression&quot;&gt;Theil Sen&lt;/a&gt; will cope better with medium-size outliers in the X direction, but this property will disappear in high-dimensional settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53d9a60ee634f44f24c91f040ecc7bf285bdd4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#theil-sen-regression&quot;&gt;Theil Sen&lt;/a&gt; will cope better with medium-size outliers in the X direction, but this property will disappear in large dimensional settings.</source>
          <target state="translated">&lt;a href=&quot;#theil-sen-regression&quot;&gt;Theil Sen&lt;/a&gt; 은 X 방향의 중간 크기 이상치에 더 잘 대처할 수 있지만이 속성은 큰 치수 설정에서 사라집니다.</target>
        </trans-unit>
        <trans-unit id="3340fb133daee19051282b36c1f0a858717abb3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; is used to estimate sources given noisy measurements. Imagine 3 instruments playing simultaneously and 3 microphones recording the mixed signals. ICA is used to recover the sources ie. what is played by each instrument. Importantly, PCA fails at recovering our &lt;code&gt;instruments&lt;/code&gt; since the related signals reflect non-Gaussian processes.</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;ICA (Independent Component Analysis)&lt;/a&gt; 는 노이즈 측정이 제공되는 소스를 추정하는 데 사용됩니다. 3 개의 악기가 동시에 연주되고 3 개의 마이크가 혼합 된 신호를 녹음한다고 상상해보십시오. ICA는 소스를 복구하는 데 사용됩니다. 각 악기가 연주하는 것. 중요한 것은 관련 신호가 비 가우시안 프로세스를 반영하기 때문에 PCA가 &lt;code&gt;instruments&lt;/code&gt; 를 복구하지 못하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="0708446c01fcb547575dcd7398ebcb58d4d37ba0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; selects components so that the distribution of their loadings carries a maximum amount of independent information. It is able to recover &lt;strong&gt;non-Gaussian&lt;/strong&gt; independent signals:</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;ICA (Independent Component Analysis)&lt;/a&gt; 는 하중 분포가 최대량의 독립 정보를 전달할 수 있도록 구성 요소를 선택합니다. &lt;strong&gt;비 가우시안&lt;/strong&gt; 독립 신호 를 복구 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa776087f556995b19edda096679fcd47ef04b0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; vs &lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;Principal component analysis (PCA)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;ICA (Independent Component Analysis)&lt;/a&gt; vs &lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;PCA (Principal Component Analysis)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd02fba92261a4ec4d08b1b50b404c531a7c1f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;Principal component analysis (PCA)&lt;/a&gt; selects the successive components that explain the maximum variance in the signal.</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;주성분 분석 (PCA)&lt;/a&gt; 은 신호의 최대 분산을 설명하는 연속 성분을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="d7f501499f1936dae93ae4ac62ebe67d6a57ad02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;sklearn.covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; assumes the data is Gaussian and learns an ellipse. It thus degrades when the data is not unimodal. Notice however that this estimator is robust to outliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4730bc05d3c9f086749243493d2ff0d276711b93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.datasets.fetch_openml#sklearn.datasets.fetch_openml&quot;&gt;&lt;code&gt;datasets.fetch_openml&lt;/code&gt;&lt;/a&gt; can now return pandas dataframe and thus properly handle datasets with heterogeneous data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca98af23d8a75a7dd4adbb8a1f3b9d144c3be240" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;: similar to missForest in R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7e50f6ad5f9bbca754077c6eacb425a09171b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;sklearn.ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../modules/generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;sklearn.neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; seem to perform reasonably well for multi-modal data sets. The advantage of &lt;a href=&quot;../../modules/generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;sklearn.neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; over the other estimators is shown for the third data set, where the two modes have different densities. This advantage is explained by the local aspect of LOF, meaning that it only compares the score of abnormality of one sample with the scores of its neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d887f29989bb29986e4da8b13c12b4284aa021d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.ensemble.stackingclassifier#sklearn.ensemble.StackingClassifier&quot;&gt;&lt;code&gt;StackingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../modules/generated/sklearn.ensemble.stackingregressor#sklearn.ensemble.StackingRegressor&quot;&gt;&lt;code&gt;StackingRegressor&lt;/code&gt;&lt;/a&gt; allow you to have a stack of estimators with a final classifier or a regressor. Stacked generalization consists in stacking the output of individual estimators and use a classifier to compute the final prediction. Stacking allows to use the strength of each individual estimator by using their output as input of a final estimator. Base estimators are fitted on the full &lt;code&gt;X&lt;/code&gt; while the final estimator is trained using cross-validated predictions of the base estimators using &lt;code&gt;cross_val_predict&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8317624f45daa48dc8976e54f831ebcd9e88097c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; supports counts of N-grams of words or consecutive characters. Once fitted, the vectorizer has built a dictionary of feature indices:</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;CountVectorizer&lt;/code&gt; &lt;/a&gt; 는 단어 수 또는 연속 문자 수를 지원합니다. 벡터 라이저는 일단 장착되면 피쳐 색인 사전을 구축했습니다.</target>
        </trans-unit>
        <trans-unit id="4e5fa7f6b9603e9e1ecc86e0bd2fcc6dc25f3a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.impute.knnimputer#sklearn.impute.KNNImputer&quot;&gt;&lt;code&gt;sklearn.impute.KNNImputer&lt;/code&gt;&lt;/a&gt; imputes missing values using the weighted or unweighted mean of the desired number of nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4391dae85624809d4343a259eca9e8710ff39137" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;BayesianRidge&lt;/code&gt;&lt;/a&gt;: regularized linear regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e852e16a1ccbd8d83717ebb95990fe61614c1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt;, in its simplest form, fits a linear model to the data set by adjusting a set of parameters in order to make the sum of the squared residuals of the model as small as possible.</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt;가장 간단한 형태의 LinearRegression 은 모형의 제곱 잔차의 합을 가능한 작게 만들기 위해 매개 변수 집합을 조정하여 선형 모형을 데이터 집합에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="974a26689b53da1460a8a54c4a626c31f6297fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; Regression is the estimator used in this example. Each color in the left plot represents one different dimension of the coefficient vector, and this is displayed as a function of the regularization parameter. The right plot shows how exact the solution is. This example illustrates how a well defined solution is found by Ridge regression and how regularization affects the coefficients and their values. The plot on the right shows how the difference of the coefficients from the estimator changes as a function of regularization.</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; 회귀는이 예제에서 사용 된 추정기입니다. 왼쪽 그림의 각 색상은 계수 벡터의 다른 차원을 나타내며 정규화 매개 변수의 함수로 표시됩니다. 오른쪽 그림은 솔루션이 얼마나 정확한지 보여줍니다. 이 예는 Ridge 회귀 분석에서 잘 정의 된 솔루션을 찾는 방법과 정규화가 계수 및 해당 값에 미치는 영향을 보여줍니다. 오른쪽 그림은 추정기의 계수 차이가 정규화의 함수로 어떻게 변하는 지 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f3b32fb083b81b2c513e3262fcd261d2509046ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; Regression is the estimator used in this example. Each color represents a different feature of the coefficient vector, and this is displayed as a function of the regularization parameter.</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; 회귀는이 예제에서 사용 된 추정기입니다. 각 색상은 계수 벡터의 다른 특징을 나타내며 정규화 매개 변수의 함수로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="86565b85cea78fabec1bdc1da398314ff9e806d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;sklearn.metrics.recall_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../modules/generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;sklearn.metrics.precision_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../modules/generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;sklearn.metrics.f1_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt; &lt;code&gt;sklearn.metrics.recall_score&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../modules/generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt; &lt;code&gt;sklearn.metrics.precision_score&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../modules/generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt; &lt;code&gt;sklearn.metrics.f1_score&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b95d51f197cf77b6057df64318579bf546efd8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;sklearn.model_selection.cross_val_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;plot_roc#sphx-glr-auto-examples-model-selection-plot-roc-py&quot;&gt;Receiver Operating Characteristic (ROC)&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;sklearn.model_selection.cross_val_score&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;plot_roc#sphx-glr-auto-examples-model-selection-plot-roc-py&quot;&gt; ROC (수신기 동작 특성)&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="3e2c4debd0c4978fc861a1a6759a1616605e4e05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="323feb1523ae1df1e016eeec55adcac04a022e47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, shuffle, random_state)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; (n_splits, 셔플, random_state)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf4fe73455f55b43f06ccab5ce9ff9f9742c6c50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="483966b47af4dc78f56585b22f105868bda6e1dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c5108a0ab0ac6bb52d13f14638b80e9a47e6fbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_groups)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_groups)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fae688046b40a14ef3430a3a2ff7ff60db4a5700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(p)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(p)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b8bfb8e37d851e685fd8d627401ccb896f62727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt;&lt;code&gt;ShuffleSplit&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, test_size, train_size, random_state)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt; &lt;code&gt;ShuffleSplit&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; (n_splits, test_size, train_size, random_state)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef50307796f865a5db34c276ace8fe440647a050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt;&lt;code&gt;StratifiedKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, shuffle, random_state)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt; &lt;code&gt;StratifiedKFold&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; (n_splits, 셔플, random_state)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67e6e8b674d048bbee7778cf2f258bc94106b9d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;KNeighborsRegressor&lt;/code&gt;&lt;/a&gt;: comparable to other KNN imputation approaches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6ec2b7a21b7d9419d34f1a252d70eac98464a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.tree.decisiontreeregressor#sklearn.tree.DecisionTreeRegressor&quot;&gt;&lt;code&gt;DecisionTreeRegressor&lt;/code&gt;&lt;/a&gt;: non-linear regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed77fdfe478e82b6cafa0a5b918124d75b04f07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/svm#svm&quot;&gt;Support Vector Machines&lt;/a&gt; belong to the discriminant model family: they try to find a combination of samples to build a plane maximizing the margin between the two classes. Regularization is set by the &lt;code&gt;C&lt;/code&gt; parameter: a small value for &lt;code&gt;C&lt;/code&gt; means the margin is calculated using many or all of the observations around the separating line (more regularization); a large value for &lt;code&gt;C&lt;/code&gt; means the margin is calculated on observations close to the separating line (less regularization).</source>
          <target state="translated">&lt;a href=&quot;../../modules/svm#svm&quot;&gt;Support Vector Machine&lt;/a&gt; 은 판별 모델 군에 속합니다. 두 클래스 사이의 마진을 최대화하는 평면을 만들기 위해 샘플 조합을 찾습니다. 이 정규화에 의해 설정되는 &lt;code&gt;C&lt;/code&gt; 의 파라미터 :를위한 작은 값 &lt;code&gt;C&lt;/code&gt; 가 많은 또는 분리선 (기타 정규화) 주위의 관찰을 모두 이용하여 계산되는 마진 수단; &lt;code&gt;C&lt;/code&gt; 값이 크면 분리선에 가까운 관측치에서 마진이 계산됩니다 (정규화가 적음).</target>
        </trans-unit>
        <trans-unit id="252f42d4bf84393b3820af54e64cc21760a047ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/svm#svm-outlier-detection&quot;&gt;One-class SVM&lt;/a&gt; is an unsupervised algorithm that learns a decision function for novelty detection: classifying new data as similar or different to the training set.</source>
          <target state="translated">&lt;a href=&quot;../../modules/svm#svm-outlier-detection&quot;&gt;1 클래스 SVM&lt;/a&gt; 은 새로운 데이터를 훈련 세트와 유사하거나 다른 것으로 분류하여 참신 탐지를위한 의사 결정 기능을 학습하는 감독되지 않은 알고리즘입니다.</target>
        </trans-unit>
        <trans-unit id="25cd5e36e35dabd3e6c256da0163359e2df881fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizing the stock market structure&lt;/a&gt; Affinity Propagation on Financial time series to find groups of companies</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;주식 시장 구조 시각화&lt;/a&gt; 금융 시계열에 대한 선호도 전파를 통해 회사 그룹 찾기</target>
        </trans-unit>
        <trans-unit id="44be4400f60fc1f65ab4483f89053dc62ec071a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizing the stock market structure&lt;/a&gt;: example on real stock market data, finding which symbols are most linked.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;주식 시장 구조 시각화&lt;/a&gt; : 실제 주식 시장 데이터의 예, 가장 연결된 기호 찾기</target>
        </trans-unit>
        <trans-unit id="32d50677ba87f9c5d1eeb5008ccb348937924acc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_bicluster_newsgroups#sphx-glr-auto-examples-bicluster-plot-bicluster-newsgroups-py&quot;&gt;Biclustering documents with the Spectral Co-clustering algorithm&lt;/a&gt;: An example of finding biclusters in the twenty newsgroup dataset.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/bicluster/plot_bicluster_newsgroups#sphx-glr-auto-examples-bicluster-plot-bicluster-newsgroups-py&quot;&gt;스펙트럼 공동 클러스터링 알고리즘을 사용한 문서 클러스터링&lt;/a&gt; : 20 개의 뉴스 그룹 데이터 세트에서 자전거 애호가를 찾는 예.</target>
        </trans-unit>
        <trans-unit id="792fd3934b8e5069f477376df1827207e7123ecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_biclustering#sphx-glr-auto-examples-bicluster-plot-spectral-biclustering-py&quot;&gt;A demo of the Spectral Biclustering algorithm&lt;/a&gt;: a simple example showing how to generate a checkerboard matrix and bicluster it.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_biclustering#sphx-glr-auto-examples-bicluster-plot-spectral-biclustering-py&quot;&gt;Spectral Biclustering 알고리즘의 데모&lt;/a&gt; : 바둑판 행렬을 생성하고 bicluster하는 방법을 보여주는 간단한 예제입니다.</target>
        </trans-unit>
        <trans-unit id="9ba1096ff77a2d8f57a5003afef74f494f2260b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_coclustering#sphx-glr-auto-examples-bicluster-plot-spectral-coclustering-py&quot;&gt;A demo of the Spectral Co-Clustering algorithm&lt;/a&gt;: A simple example showing how to generate a data matrix with biclusters and apply this method to it.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_coclustering#sphx-glr-auto-examples-bicluster-plot-spectral-coclustering-py&quot;&gt;Spectral Co-Clustering 알고리즘 데모&lt;/a&gt; : 바이 클러스터 를 사용하여 데이터 매트릭스를 생성하고이 방법을 적용하는 방법을 보여주는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="e3535c5f9f05109b9c009dc4764a0a905544f682" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/classification/plot_lda#sphx-glr-auto-examples-classification-plot-lda-py&quot;&gt;Normal and Shrinkage Linear Discriminant Analysis for classification&lt;/a&gt;: Comparison of LDA classifiers with and without shrinkage.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/classification/plot_lda#sphx-glr-auto-examples-classification-plot-lda-py&quot;&gt;분류를위한 정규 및 수축 선형 판별 분석&lt;/a&gt; : 수축이 있거나 없는 LDA 분류기의 비교.</target>
        </trans-unit>
        <trans-unit id="944af6fad4aaf9d9de737c634557a10c8e138043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/classification/plot_lda_qda#sphx-glr-auto-examples-classification-plot-lda-qda-py&quot;&gt;Linear and Quadratic Discriminant Analysis with covariance ellipsoid&lt;/a&gt;: Comparison of LDA and QDA on synthetic data.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/classification/plot_lda_qda#sphx-glr-auto-examples-classification-plot-lda-qda-py&quot;&gt;공분산 타원체를 사용한 선형 및 2 차 판별 분석&lt;/a&gt; : 합성 데이터에 대한 LDA와 QDA의 비교.</target>
        </trans-unit>
        <trans-unit id="081608ed075d14d6a33b709aba2f5a0785ff23d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Adjustment for chance in clustering performance evaluation&lt;/a&gt;: Analysis of the impact of the dataset size on the value of clustering measures for random assignments.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;군집 성능 평가 기회 조정&lt;/a&gt; : 무작위 할당에 대한 군집 측정 값에 대한 데이터 세트 크기의 영향 분석.</target>
        </trans-unit>
        <trans-unit id="187d34d01b9be9a8171ce6a04c4b08e3a21fad92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Adjustment for chance in clustering performance evaluation&lt;/a&gt;: Analysis of the impact of the dataset size on the value of clustering measures for random assignments. This example also includes the Adjusted Rand Index.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;군집 성능 평가 기회 조정&lt;/a&gt; : 무작위 할당에 대한 군집 측정 값에 대한 데이터 세트 크기의 영향 분석. 이 예에는 조정 랜드 지수도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8b5a14259f767f9088d2f473a3e935f71b2c585b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_affinity_propagation#sphx-glr-auto-examples-cluster-plot-affinity-propagation-py&quot;&gt;Demo of affinity propagation clustering algorithm&lt;/a&gt;: Affinity Propagation on a synthetic 2D datasets with 3 classes.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_affinity_propagation#sphx-glr-auto-examples-cluster-plot-affinity-propagation-py&quot;&gt;선호도 전파 클러스터링 알고리즘 데모&lt;/a&gt; : 선호도가 3 개의 클래스가있는 합성 2D 데이터 세트에서 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="b1cc1fa9681d9dc465e839d7ce2fdf4f7aa536c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_coin_segmentation#sphx-glr-auto-examples-cluster-plot-coin-segmentation-py&quot;&gt;Segmenting the picture of greek coins in regions&lt;/a&gt;: Spectral clustering to split the image of coins in regions.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_coin_segmentation#sphx-glr-auto-examples-cluster-plot-coin-segmentation-py&quot;&gt;지역에서 그리스 동전 그림&lt;/a&gt; 분할 : 지역 에서 동전 이미지를 분할하는 스펙트럼 클러스터링.</target>
        </trans-unit>
        <trans-unit id="50b36597780e6856f756f89f0e2e7c12b24f8501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_coin_ward_segmentation#sphx-glr-auto-examples-cluster-plot-coin-ward-segmentation-py&quot;&gt;A demo of structured Ward hierarchical clustering on an image of coins&lt;/a&gt;: Ward clustering to split the image of coins in regions.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_coin_ward_segmentation#sphx-glr-auto-examples-cluster-plot-coin-ward-segmentation-py&quot;&gt;동전 이미지에 대한 구조화 된 Ward 계층 적 군집 데모&lt;/a&gt; : 지역에서 동전 이미지를 분할하기위한 Ward 클러스터링.</target>
        </trans-unit>
        <trans-unit id="547c011992d38403733e67a473aac01c8d218fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_digits_linkage#sphx-glr-auto-examples-cluster-plot-digits-linkage-py&quot;&gt;Various Agglomerative Clustering on a 2D embedding of digits&lt;/a&gt;: exploration of the different linkage strategies in a real dataset.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_digits_linkage#sphx-glr-auto-examples-cluster-plot-digits-linkage-py&quot;&gt;자릿수의 2D 임베딩에 대한 다양한 집계 클러스터링&lt;/a&gt; : 실제 데이터 세트에서 서로 다른 연결 전략 탐색.</target>
        </trans-unit>
        <trans-unit id="bc829166f42f9046d69ee97ccbe1453b3f4d9ae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_feature_agglomeration_vs_univariate_selection#sphx-glr-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py&quot;&gt;Feature agglomeration vs. univariate selection&lt;/a&gt;: Example of dimensionality reduction with feature agglomeration based on Ward hierarchical clustering.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_feature_agglomeration_vs_univariate_selection#sphx-glr-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py&quot;&gt;피처 집합 대 일 변량 선택&lt;/a&gt; : Ward 계층 적 군집을 기반으로 한 피처 집합을 사용한 차원 축소의 예입니다.</target>
        </trans-unit>
        <trans-unit id="1d8c45713569a9a5c39b47cf456ff9315c76d077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_assumptions#sphx-glr-auto-examples-cluster-plot-kmeans-assumptions-py&quot;&gt;Demonstration of k-means assumptions&lt;/a&gt;: Demonstrating when k-means performs intuitively and when it does not</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_assumptions#sphx-glr-auto-examples-cluster-plot-kmeans-assumptions-py&quot;&gt;k- 평균 가정&lt;/a&gt; 시연 : k- 평균이 직관적으로 수행되는시기와 그렇지 않은 경우의 시연</target>
        </trans-unit>
        <trans-unit id="3413ae75ec878d880736f31cf45172c75d5ab0ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_digits#sphx-glr-auto-examples-cluster-plot-kmeans-digits-py&quot;&gt;A demo of K-Means clustering on the handwritten digits data&lt;/a&gt;: Clustering handwritten digits</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_digits#sphx-glr-auto-examples-cluster-plot-kmeans-digits-py&quot;&gt;자필 자릿수 데이터에 대한 K- 평균 군집 데모&lt;/a&gt; : 자필 자릿수 클러스터링</target>
        </trans-unit>
        <trans-unit id="ccbc313c20268b02fdb60070ca95d2837b7ccde3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_silhouette_analysis#sphx-glr-auto-examples-cluster-plot-kmeans-silhouette-analysis-py&quot;&gt;Selecting the number of clusters with silhouette analysis on KMeans clustering&lt;/a&gt; : In this example the silhouette analysis is used to choose an optimal value for n_clusters.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_silhouette_analysis#sphx-glr-auto-examples-cluster-plot-kmeans-silhouette-analysis-py&quot;&gt;KMeans 클러스터링&lt;/a&gt; 에서 실루엣 분석을 사용하여 클러스터 수 선택 :이 예제에서는 실루엣 분석을 사용하여 n_clusters에 대한 최적의 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="4f8e7ad0cce139cea7cc063b2e7ef9f98d5fdfae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_mean_shift#sphx-glr-auto-examples-cluster-plot-mean-shift-py&quot;&gt;A demo of the mean-shift clustering algorithm&lt;/a&gt;: Mean Shift clustering on a synthetic 2D datasets with 3 classes.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_mean_shift#sphx-glr-auto-examples-cluster-plot-mean-shift-py&quot;&gt;평균 이동 군집 알고리즘 데모&lt;/a&gt; : 3 개의 클래스가있는 합성 2D 데이터 세트의 평균 이동 군집.</target>
        </trans-unit>
        <trans-unit id="170e65f032a1dde17e643e1cb24d69b496f652f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_mini_batch_kmeans#sphx-glr-auto-examples-cluster-plot-mini-batch-kmeans-py&quot;&gt;Comparison of the K-Means and MiniBatchKMeans clustering algorithms&lt;/a&gt;: Comparison of KMeans and MiniBatchKMeans</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_mini_batch_kmeans#sphx-glr-auto-examples-cluster-plot-mini-batch-kmeans-py&quot;&gt;K-Means 및 MiniBatchKMeans 클러스터링 알고리즘&lt;/a&gt; 비교 : KMeans 및 MiniBatchKMeans 비교</target>
        </trans-unit>
        <trans-unit id="71d42636674d5e7be533c19086ea1b7e51f44271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_segmentation_toy#sphx-glr-auto-examples-cluster-plot-segmentation-toy-py&quot;&gt;Spectral clustering for image segmentation&lt;/a&gt;: Segmenting objects from a noisy background using spectral clustering.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_segmentation_toy#sphx-glr-auto-examples-cluster-plot-segmentation-toy-py&quot;&gt;이미지 세분화를위한 스펙트럼 클러스터링&lt;/a&gt; : 스펙트럼 클러스터링을 사용하여 노이즈가 많은 백그라운드에서 객체를 세그먼트 화 합니다.</target>
        </trans-unit>
        <trans-unit id="8622c246137caca261a8f8dab784e4834be626dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_ward_structured_vs_unstructured#sphx-glr-auto-examples-cluster-plot-ward-structured-vs-unstructured-py&quot;&gt;Hierarchical clustering: structured vs unstructured ward&lt;/a&gt;: Example of Ward algorithm on a swiss-roll, comparison of structured approaches versus unstructured approaches.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_ward_structured_vs_unstructured#sphx-glr-auto-examples-cluster-plot-ward-structured-vs-unstructured-py&quot;&gt;계층 적 클러스터링 : 구조적 및 비 구조적 와드&lt;/a&gt; : 스위스 롤의 Ward 알고리즘의 예, 구조적 접근법과 비 구조적 접근법의 비교.</target>
        </trans-unit>
        <trans-unit id="a0f88a6fa73d890d432a6aa42399b9b09d116112" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/covariance/plot_sparse_cov#sphx-glr-auto-examples-covariance-plot-sparse-cov-py&quot;&gt;Sparse inverse covariance estimation&lt;/a&gt;: example on synthetic data showing some recovery of a structure, and comparing to other covariance estimators.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/covariance/plot_sparse_cov#sphx-glr-auto-examples-covariance-plot-sparse-cov-py&quot;&gt;희소 역공 분산 추정&lt;/a&gt; : 구조의 회복을 보여주고 다른 공분산 추정기와 비교하는 합성 데이터의 예.</target>
        </trans-unit>
        <trans-unit id="93b1310ce0bab5f07182a4fb1a5894503ca68b87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/decomposition/plot_pca_vs_lda#sphx-glr-auto-examples-decomposition-plot-pca-vs-lda-py&quot;&gt;Comparison of LDA and PCA 2D projection of Iris dataset&lt;/a&gt;: Comparison of LDA and PCA for dimensionality reduction of the Iris dataset</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/decomposition/plot_pca_vs_lda#sphx-glr-auto-examples-decomposition-plot-pca-vs-lda-py&quot;&gt;아이리스 데이터 셋의 LDA와 PCA 2D 프로젝션&lt;/a&gt; 비교 : 아이리스 데이터 셋의 차원 축소를위한 LDA와 PCA의 비교</target>
        </trans-unit>
        <trans-unit id="b0dd2f62cc3dfee226b121c6c421d1e26f52cda5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_hastie_10_2#sphx-glr-auto-examples-ensemble-plot-adaboost-hastie-10-2-py&quot;&gt;Discrete versus Real AdaBoost&lt;/a&gt; compares the classification error of a decision stump, decision tree, and a boosted decision stump using AdaBoost-SAMME and AdaBoost-SAMME.R.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_hastie_10_2#sphx-glr-auto-examples-ensemble-plot-adaboost-hastie-10-2-py&quot;&gt;이산 대 실제 AdaBoost&lt;/a&gt; 는 AdaBoost-SAMME 및 AdaBoost-SAMME.R을 사용하여 의사 결정 그루터기, 의사 결정 트리 및 강화 된 의사 결정 그루터기의 분류 오류를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="74a0d2bbda60559f425e07fcc7165a5bef04f382" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_multiclass#sphx-glr-auto-examples-ensemble-plot-adaboost-multiclass-py&quot;&gt;Multi-class AdaBoosted Decision Trees&lt;/a&gt; shows the performance of AdaBoost-SAMME and AdaBoost-SAMME.R on a multi-class problem.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_multiclass#sphx-glr-auto-examples-ensemble-plot-adaboost-multiclass-py&quot;&gt;멀티 클래스 AdaBoosted 의사 결정&lt;/a&gt; 트리는 멀티 클래스 문제에 대한 AdaBoost-SAMME 및 AdaBoost-SAMME.R의 성능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a7b0bc23565669714e4af29dd536270273f3402e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_regression#sphx-glr-auto-examples-ensemble-plot-adaboost-regression-py&quot;&gt;Decision Tree Regression with AdaBoost&lt;/a&gt; demonstrates regression with the AdaBoost.R2 algorithm.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_regression#sphx-glr-auto-examples-ensemble-plot-adaboost-regression-py&quot;&gt;AdaBoost를 사용한 의사 결정 트리 회귀 분석&lt;/a&gt; 은 AdaBoost.R2 알고리즘을 사용한 회귀 분석을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="92c6d18139cc1cdd2de6eb6f4786a565e57db72c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_twoclass#sphx-glr-auto-examples-ensemble-plot-adaboost-twoclass-py&quot;&gt;Two-class AdaBoost&lt;/a&gt; shows the decision boundary and decision function values for a non-linearly separable two-class problem using AdaBoost-SAMME.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_twoclass#sphx-glr-auto-examples-ensemble-plot-adaboost-twoclass-py&quot;&gt;2 클래스 AdaBoost&lt;/a&gt; 는 AdaBoost-SAMME를 사용하여 비선형으로 분리 할 수없는 2 클래스 문제에 대한 결정 경계 및 결정 함수 값을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="017ef7814a79ae2025c6ec98cbfe58f80f9e673f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_feature_transformation#sphx-glr-auto-examples-ensemble-plot-feature-transformation-py&quot;&gt;Feature transformations with ensembles of trees&lt;/a&gt; compares supervised and unsupervised tree based feature transformations.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_feature_transformation#sphx-glr-auto-examples-ensemble-plot-feature-transformation-py&quot;&gt;앙상블&lt;/a&gt; 트리를 사용한 기능 변환은 감독 및 비 감독 트리 기반 기능 변환을 비교합니다.</target>
        </trans-unit>
        <trans-unit id="41e560c597aceeb951c8c67180435ee8b0e42ba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances#sphx-glr-auto-examples-ensemble-plot-forest-importances-py&quot;&gt;Feature importances with forests of trees&lt;/a&gt;: example on synthetic data showing the recovery of the actually meaningful features.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances#sphx-glr-auto-examples-ensemble-plot-forest-importances-py&quot;&gt;나무의 숲과 특징의 중요성&lt;/a&gt; : 실제로 의미있는 특징의 회복을 보여주는 합성 데이터의 예.</target>
        </trans-unit>
        <trans-unit id="cb148629bec49066691c504d3215e85cac920009" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances_faces#sphx-glr-auto-examples-ensemble-plot-forest-importances-faces-py&quot;&gt;Pixel importances with a parallel forest of trees&lt;/a&gt;: example on face recognition data.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances_faces#sphx-glr-auto-examples-ensemble-plot-forest-importances-faces-py&quot;&gt;평행 한 숲의 숲과 픽셀의 중요성&lt;/a&gt; : 얼굴 인식 데이터의 예.</target>
        </trans-unit>
        <trans-unit id="a6c61fb360f3b55d34958b071bfbb98ddf45ee0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_digits#sphx-glr-auto-examples-feature-selection-plot-rfe-digits-py&quot;&gt;Recursive feature elimination&lt;/a&gt;: A recursive feature elimination example showing the relevance of pixels in a digit classification task.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_digits#sphx-glr-auto-examples-feature-selection-plot-rfe-digits-py&quot;&gt;재귀 적 특징 제거&lt;/a&gt; : 숫자 분류 작업에서 픽셀의 관련성을 보여주는 재귀 적 특징 제거 예.</target>
        </trans-unit>
        <trans-unit id="2b001bec35db058b258a73d061dbf60b976bfe8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Recursive feature elimination with cross-validation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;교차 유효성 검사 재귀 기능 제거&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="a390bc20d8352b46fbd72dc13994978da78ba234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Recursive feature elimination with cross-validation&lt;/a&gt;: A recursive feature elimination example with automatic tuning of the number of features selected with cross-validation.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;교차 유효성 검사를 사용한 재귀 기능 제거&lt;/a&gt; : 교차 유효성 검사로 선택한 기능 수를 자동으로 조정하는 순환 기능 제거 예제입니다.</target>
        </trans-unit>
        <trans-unit id="328051f948fcba9623bf69836dca39c34ae81eac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_select_from_model_boston#sphx-glr-auto-examples-feature-selection-plot-select-from-model-boston-py&quot;&gt;Feature selection using SelectFromModel and LassoCV&lt;/a&gt;: Selecting the two most important features from the Boston dataset without knowing the threshold beforehand.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_select_from_model_boston#sphx-glr-auto-examples-feature-selection-plot-select-from-model-boston-py&quot;&gt;SelectFromModel 및 LassoCV를 사용하여 기능 선택&lt;/a&gt; : 임계 값을 미리 몰라도 Boston 데이터 세트에서 가장 중요한 두 가지 기능 선택.</target>
        </trans-unit>
        <trans-unit id="ac535e664a90b231be2ce16793ccfdc88819b9e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_select_from_model_diabetes#sphx-glr-auto-examples-feature-selection-plot-select-from-model-diabetes-py&quot;&gt;Feature selection using SelectFromModel and LassoCV&lt;/a&gt;: Selecting the two most important features from the diabetes dataset without knowing the threshold beforehand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0650a2d5fcc4cb39ed3e3f859c0a39f3da833260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/linear_model/plot_sgd_separating_hyperplane#sphx-glr-auto-examples-linear-model-plot-sgd-separating-hyperplane-py&quot;&gt;SGD: Maximum margin separating hyperplane&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/linear_model/plot_sgd_separating_hyperplane#sphx-glr-auto-examples-linear-model-plot-sgd-separating-hyperplane-py&quot;&gt;SGD는 : 최대 마진 초평면을 분리&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="dac83a4cc8d160aa3241174545e9812a22069f55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/manifold/plot_lle_digits#sphx-glr-auto-examples-manifold-plot-lle-digits-py&quot;&gt;Manifold learning on handwritten digits: Locally Linear Embedding, Isomap&amp;hellip;&lt;/a&gt; compares non-linear dimensionality reduction techniques on handwritten digits.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/manifold/plot_lle_digits#sphx-glr-auto-examples-manifold-plot-lle-digits-py&quot;&gt;필기 숫자에 대한 매니 폴드 학습 : 로컬 선형 임베딩, 아이소 맵&amp;hellip;&lt;/a&gt; 은 필기 숫자에 대한 비선형 차원 축소 기법을 비교합니다.</target>
        </trans-unit>
        <trans-unit id="bb0d05f4848f22ea7094d5db3dd1f2bcf682eb88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/miscellaneous/plot_multioutput_face_completion#sphx-glr-auto-examples-miscellaneous-plot-multioutput-face-completion-py&quot;&gt;Face completion with a multi-output estimators&lt;/a&gt;: an example of multi-output regression using nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7f078993cb737a820cfb64f65c25e08ce9a434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/mixture/plot_gmm_sin#sphx-glr-auto-examples-mixture-plot-gmm-sin-py&quot;&gt;Gaussian Mixture Model Sine Curve&lt;/a&gt; shows using &lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt;&lt;code&gt;GaussianMixture&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt; to fit a sine wave.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/mixture/plot_gmm_sin#sphx-glr-auto-examples-mixture-plot-gmm-sin-py&quot;&gt;가우스 혼합 모델 사인 곡선&lt;/a&gt; 은 사인파에 맞게 &lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt; &lt;code&gt;GaussianMixture&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt; &lt;code&gt;BayesianGaussianMixture&lt;/code&gt; &lt;/a&gt; 를 사용하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5adde30104f8b2c420554d50b57864c2c3e4c6cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/grid_search_text_feature_extraction#sphx-glr-auto-examples-model-selection-grid-search-text-feature-extraction-py&quot;&gt;Sample pipeline for text feature extraction and evaluation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/grid_search_text_feature_extraction#sphx-glr-auto-examples-model-selection-grid-search-text-feature-extraction-py&quot;&gt;텍스트의 특징 추출 및 평가를위한 샘플 파이프 라인&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="7c4a2c6ba8a9a602ef1f99c87cb24ab3111954e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_cv_predict#sphx-glr-auto-examples-model-selection-plot-cv-predict-py&quot;&gt;Plotting Cross-Validated Predictions&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_cv_predict#sphx-glr-auto-examples-model-selection-plot-cv-predict-py&quot;&gt;교차 검증 예측 플로팅&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="fe57101a1e1b2447a7b87fe498377899b02fd2c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_grid_search_digits#sphx-glr-auto-examples-model-selection-plot-grid-search-digits-py&quot;&gt;Parameter estimation using grid search with cross-validation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_grid_search_digits#sphx-glr-auto-examples-model-selection-plot-grid-search-digits-py&quot;&gt;교차 검증 그리드 검색을 사용하여 매개 변수 추정&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="93d14e80cf909d5fa7e4eae41ab8f9596815b762" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_nested_cross_validation_iris#sphx-glr-auto-examples-model-selection-plot-nested-cross-validation-iris-py&quot;&gt;Nested versus non-nested cross-validation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_nested_cross_validation_iris#sphx-glr-auto-examples-model-selection-plot-nested-cross-validation-iris-py&quot;&gt;비 중첩 교차 검증 대 중첩&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e111d3a9d189834c5fe59a20d99be346584627e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_randomized_search#sphx-glr-auto-examples-model-selection-plot-randomized-search-py&quot;&gt;Comparing randomized search and grid search for hyperparameter estimation&lt;/a&gt; compares the usage and efficiency of randomized search and grid search.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_randomized_search#sphx-glr-auto-examples-model-selection-plot-randomized-search-py&quot;&gt;하이퍼 파라미터 추정을위한 무작위 검색과 그리드 검색을 비교하면 무작위 검색과 그리드 검색&lt;/a&gt; 의 사용법과 효율성이 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="b1a4ba435eae0a10b14f919f278d37388d9abe36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_roc_crossval#sphx-glr-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;Receiver Operating Characteristic (ROC) with cross validation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_roc_crossval#sphx-glr-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;교차 검증과 수신기 작동 특성 (ROC)&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="5e8ccd85fb039e33ab78113299814a337bcded32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/approximate_nearest_neighbors#sphx-glr-auto-examples-neighbors-approximate-nearest-neighbors-py&quot;&gt;Approximate nearest neighbors in TSNE&lt;/a&gt;: an example of pipelining &lt;a href=&quot;generated/sklearn.neighbors.kneighborstransformer#sklearn.neighbors.KNeighborsTransformer&quot;&gt;&lt;code&gt;KNeighborsTransformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.manifold.tsne#sklearn.manifold.TSNE&quot;&gt;&lt;code&gt;TSNE&lt;/code&gt;&lt;/a&gt;. Also proposes two custom nearest neighbors estimators based on external packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b1d23760229ddb77e1c62844eda584c3c62bc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_caching_nearest_neighbors#sphx-glr-auto-examples-neighbors-plot-caching-nearest-neighbors-py&quot;&gt;Caching nearest neighbors&lt;/a&gt;: an example of pipelining &lt;a href=&quot;generated/sklearn.neighbors.kneighborstransformer#sklearn.neighbors.KNeighborsTransformer&quot;&gt;&lt;code&gt;KNeighborsTransformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;KNeighborsClassifier&lt;/code&gt;&lt;/a&gt; to enable caching of the neighbors graph during a hyper-parameter grid-search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6396b67460cfc40805ab78a4385e8a9ec731d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_classification#sphx-glr-auto-examples-neighbors-plot-classification-py&quot;&gt;Nearest Neighbors Classification&lt;/a&gt;: an example of classification using nearest neighbors.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_classification#sphx-glr-auto-examples-neighbors-plot-classification-py&quot;&gt;가장 가까운 이웃 분류&lt;/a&gt; : 가장 가까운 이웃을 사용한 분류 의 예입니다.</target>
        </trans-unit>
        <trans-unit id="0d8ce5a82b89c597118121d42998af05b147eefa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_digits_kde_sampling#sphx-glr-auto-examples-neighbors-plot-digits-kde-sampling-py&quot;&gt;Kernel Density Estimation&lt;/a&gt;: an example of using Kernel Density estimation to learn a generative model of the hand-written digits data, and drawing new samples from this model.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_digits_kde_sampling#sphx-glr-auto-examples-neighbors-plot-digits-kde-sampling-py&quot;&gt;커널 밀도 추정&lt;/a&gt; : 커널 밀도 추정을 사용하여 손으로 쓴 숫자 데이터의 생성 모델을 학습하고이 모델에서 새 샘플을 그리는 예</target>
        </trans-unit>
        <trans-unit id="b64c661b49277d749817df15a4f58fb6e36a7855" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_kde_1d#sphx-glr-auto-examples-neighbors-plot-kde-1d-py&quot;&gt;Simple 1D Kernel Density Estimation&lt;/a&gt;: computation of simple kernel density estimates in one dimension.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_kde_1d#sphx-glr-auto-examples-neighbors-plot-kde-1d-py&quot;&gt;간단한 1D 커널 밀도 추정&lt;/a&gt; : 한 차원에서 간단한 커널 밀도 추정값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ecce84d7cfed724a52c77cd7ba7bd40de8af129f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_nearest_centroid#sphx-glr-auto-examples-neighbors-plot-nearest-centroid-py&quot;&gt;Nearest Centroid Classification&lt;/a&gt;: an example of classification using nearest centroid with different shrink thresholds.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_nearest_centroid#sphx-glr-auto-examples-neighbors-plot-nearest-centroid-py&quot;&gt;가장 가까운 중심 분류&lt;/a&gt; : 수축 임계 값이 다른 가장 가까운 중심을 사용하는 분류의 예입니다.</target>
        </trans-unit>
        <trans-unit id="3ae3f34bae8d4933f2c769f843a675fb23256c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_regression#sphx-glr-auto-examples-neighbors-plot-regression-py&quot;&gt;Nearest Neighbors regression&lt;/a&gt;: an example of regression using nearest neighbors.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_regression#sphx-glr-auto-examples-neighbors-plot-regression-py&quot;&gt;가장 가까운 이웃 회귀 분석&lt;/a&gt; : 가장 가까운 이웃을 사용하는 회귀 예제입니다.</target>
        </trans-unit>
        <trans-unit id="fa447910bde4a9b44ec54bf541e85f668f6cb525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_species_kde#sphx-glr-auto-examples-neighbors-plot-species-kde-py&quot;&gt;Kernel Density Estimate of Species Distributions&lt;/a&gt;: an example of Kernel Density estimation using the Haversine distance metric to visualize geospatial data</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_species_kde#sphx-glr-auto-examples-neighbors-plot-species-kde-py&quot;&gt;종 분포 추정치의 커널 밀도&lt;/a&gt; : 지리 공간 데이터를 시각화하기 위해 Haversine 거리 측정법을 사용하는 커널 밀도 추정의 예</target>
        </trans-unit>
        <trans-unit id="6b133cfa28f75dfe2f07e6b07b1735ff088b0730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;Face completion with a multi-output estimators&lt;/a&gt;: an example of multi-output regression using nearest neighbors.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;다중 출력 추정기로 얼굴 완성&lt;/a&gt; : 가장 가까운 이웃을 사용하는 다중 출력 회귀의 예.</target>
        </trans-unit>
        <trans-unit id="4d965cda82f943ebd05f20a86b4293b0d3bb1e0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_custom_kernel#sphx-glr-auto-examples-svm-plot-custom-kernel-py&quot;&gt;SVM with custom kernel&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_custom_kernel#sphx-glr-auto-examples-svm-plot-custom-kernel-py&quot;&gt;사용자 정의 커널 SVM&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19052aa638c3743a930908ba39e554a66fa045a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_iris#sphx-glr-auto-examples-svm-plot-iris-py&quot;&gt;Plot different SVM classifiers in the iris dataset&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_iris#sphx-glr-auto-examples-svm-plot-iris-py&quot;&gt;홍채 데이터 세트에 다른 SVM 분류기를 플로팅합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a47a052206b47a3928872d879a822ab408931d6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_iris_svc#sphx-glr-auto-examples-svm-plot-iris-svc-py&quot;&gt;Plot different SVM classifiers in the iris dataset&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5add981a49cef1b0d860d0e917a34eb9f7a3691f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane#sphx-glr-auto-examples-svm-plot-separating-hyperplane-py&quot;&gt;SVM: Maximum margin separating hyperplane&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane#sphx-glr-auto-examples-svm-plot-separating-hyperplane-py&quot;&gt;SVM은 : 최대 마진 초평면을 분리&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="8b811e458696c59ceec8665a7b13533fba01aaad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane_unbalanced#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;SVM: Separating hyperplane for unbalanced classes&lt;/a&gt; (See the &lt;code&gt;Note&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane_unbalanced#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;SVM : 불균형 클래스 초평면을 분리하는 것이&lt;/a&gt; 합니다 (참조 &lt;code&gt;Note&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0372123f2c65f3cdb3641f860fc1f7c1bb43c194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane_unbalanced#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;SVM: Separating hyperplane for unbalanced classes&lt;/a&gt; (See the Note in the example)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a447a3e4e0120d6c2471eb668972d816c954fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_svm_anova#sphx-glr-auto-examples-svm-plot-svm-anova-py&quot;&gt;SVM-Anova: SVM with univariate feature selection&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_svm_anova#sphx-glr-auto-examples-svm-plot-svm-anova-py&quot;&gt;SVM-Anova : 일 변량 기능 선택이 가능한 SVM&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="3a2fdc42dc8d5b94fb4d28ad400e5bb054529b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_weighted_samples#sphx-glr-auto-examples-svm-plot-weighted-samples-py&quot;&gt;SVM: Weighted samples&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_weighted_samples#sphx-glr-auto-examples-svm-plot-weighted-samples-py&quot;&gt;SVM : 가중 샘플&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="dcc0b020edb52bf4bce2266de7d77f784eb176c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/text/plot_document_classification_20newsgroups#sphx-glr-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;Classification of text documents using sparse features&lt;/a&gt;: Comparison of different algorithms for document classification including L1-based feature selection.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/text/plot_document_classification_20newsgroups#sphx-glr-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;스파 스 기능을 사용한 텍스트 문서 분류&lt;/a&gt; : L1 기반 기능 선택을 포함하여 문서 분류를위한 서로 다른 알고리즘 비교.</target>
        </trans-unit>
        <trans-unit id="aa739986683b2ab2c634f19f37f73f18f3720f71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/text/plot_document_clustering#sphx-glr-auto-examples-text-plot-document-clustering-py&quot;&gt;Clustering text documents using k-means&lt;/a&gt;: Document clustering using sparse MiniBatchKMeans</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/text/plot_document_clustering#sphx-glr-auto-examples-text-plot-document-clustering-py&quot;&gt;k- 평균을 사용하여 텍스트 문서 클러스터링&lt;/a&gt; : 스파 스 MiniBatchKMeans를 사용하여 문서 클러스터링</target>
        </trans-unit>
        <trans-unit id="e400759c436faaf7af658b25249316acbd8f6fb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/tree/plot_unveil_tree_structure#sphx-glr-auto-examples-tree-plot-unveil-tree-structure-py&quot;&gt;Understanding the decision tree structure&lt;/a&gt; will help in gaining more insights about how the decision tree makes predictions, which is important for understanding the important features in the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927635b0392b4ab1ade5afeacb28c91b55dab2cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../classes#module-sklearn.cluster&quot;&gt;&lt;code&gt;sklearn.cluster&lt;/code&gt;&lt;/a&gt; Estimator : If a model is provided, the model is fit treating the subclusters as new samples and the initial data is mapped to the label of the closest subcluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06d58b53c81fb22cb4ae4eed88391f7d36fbd59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;(*[, data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e51e7c11dd8b29259adf7b6b09000415fe4434e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt; &lt;code&gt;fetch_20newsgroups&lt;/code&gt; &lt;/a&gt; ([data_home, 하위 집합,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="43a6c05b6a4f1ea430f43739e560c0a6db943a32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;(*[, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e8facad56e12884e4f6ab504bfcfce84190b3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt; &lt;code&gt;fetch_20newsgroups_vectorized&lt;/code&gt; &lt;/a&gt; ([subset,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="de94fc920f74b3f94b8c744339671dc118b390f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt; is a function which returns ready-to-use token counts features instead of file names.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_20newsgroups_vectorized&lt;/code&gt; &lt;/a&gt; 는 파일 이름 대신 즉시 사용 가능한 토큰 수 기능을 반환하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="2b7b1983e708b34007d7594b479387510add5554" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;fetch_california_housing&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd51720577ef8ceb452fd1e10725b5402de80381" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;fetch_california_housing&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt; &lt;code&gt;fetch_california_housing&lt;/code&gt; &lt;/a&gt; ([data_home,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="be52da589eb1f5bbdb59cf276943cc774546da09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;fetch_covtype&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af271a932f083f2d16f41ba60308d0fc5190e5f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;fetch_covtype&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt; &lt;code&gt;fetch_covtype&lt;/code&gt; &lt;/a&gt; ([data_home,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="50de4697df9fcc442197a0baaea73bf43ee09751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt; will load the covertype dataset; it returns a dictionary-like object with the feature matrix in the &lt;code&gt;data&lt;/code&gt; member and the target values in &lt;code&gt;target&lt;/code&gt;. The dataset will be downloaded from the web if necessary.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_covtype&lt;/code&gt; &lt;/a&gt; 은 표지 유형 데이터 세트를로드합니다. 이것은 기능의 행렬 사전 같은 객체 리턴 &lt;code&gt;data&lt;/code&gt; 부재의 목표치 &lt;code&gt;target&lt;/code&gt; . 필요한 경우 데이터 세트가 웹에서 다운로드됩니다.</target>
        </trans-unit>
        <trans-unit id="a87d717a930701314c2e13bd24e77355662bf9e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;fetch_kddcup99&lt;/code&gt;&lt;/a&gt;(*[, subset, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb89d0d40a2a8a2e054bab1505f9c4c1a6b7fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;fetch_kddcup99&lt;/code&gt;&lt;/a&gt;([subset, data_home, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt; &lt;code&gt;fetch_kddcup99&lt;/code&gt; &lt;/a&gt; ([서브셋, data_home, 셔플,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b6d250ef70704f5874111c664c10fb0218f6b172" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt; will load the kddcup99 dataset; it returns a dictionary-like object with the feature matrix in the &lt;code&gt;data&lt;/code&gt; member and the target values in &lt;code&gt;target&lt;/code&gt;. The dataset will be downloaded from the web if necessary.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_kddcup99&lt;/code&gt; &lt;/a&gt; 는 kddcup99 데이터 세트를로드합니다. 이것은 기능의 행렬 사전 같은 객체 리턴 &lt;code&gt;data&lt;/code&gt; 부재의 목표치 &lt;code&gt;target&lt;/code&gt; . 필요한 경우 데이터 세트가 웹에서 다운로드됩니다.</target>
        </trans-unit>
        <trans-unit id="9b35b9b68c7fa67ae13fdb67adc4ccf89a5d2ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;(*[, subset, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abea90ddece0419e822d5d73268f6b36609a98fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;([subset, data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt; &lt;code&gt;fetch_lfw_pairs&lt;/code&gt; &lt;/a&gt; ([subset, data_home,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f01a28013dcc789ee4fc76f798d6fcbca30d5417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;fetch_lfw_people&lt;/code&gt;&lt;/a&gt;(*[, data_home, funneled, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43587b7cdf8ec51d183c0cf3b79ea83badf714e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;fetch_lfw_people&lt;/code&gt;&lt;/a&gt;([data_home, funneled, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt; &lt;code&gt;fetch_lfw_people&lt;/code&gt; &lt;/a&gt; ([data_home, 유입 경로,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7563c2f2c17e444064844263edb86ba9fb43e62a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e275393f243433879e30b34bc1a9a72870716c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;([data_home, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt; &lt;code&gt;fetch_olivetti_faces&lt;/code&gt; &lt;/a&gt; ([data_home, 셔플,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="48c98c17e0993aaa0689bd7091f122780a2ac7a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;fetch_rcv1&lt;/code&gt;&lt;/a&gt;(*[, data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78cf2bffc2f30bc99ea79586c8e01e69ea7312f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;fetch_rcv1&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt; &lt;code&gt;fetch_rcv1&lt;/code&gt; &lt;/a&gt; ([data_home, 하위 집합,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="503ab3fb9446bb7c92c83e34572194cdb94e4853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt; will load the following version: RCV1-v2, vectors, full sets, topics multilabels:</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_rcv1&lt;/code&gt; &lt;/a&gt; 은 RCV1-v2, 벡터, 전체 세트, 주제 다중 레이블 버전을로드합니다.</target>
        </trans-unit>
        <trans-unit id="1b65e855d831ac202483723d41d242125ff7c0f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;(*[, return_X_y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc069ce82bdee95faaf90e1d342156219711a94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="a56737c2f5790b9680adcb5e8a9e991698edee62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114e7affefcdf791d57c12138eafbdf0150ed5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="680cfad398fd4fce6f7d2723689235e6dafdedb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5475774b62dc3c85aeab381258c350e3e94ca006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="a485954ec5f5f923b02700e240446bf2fdbdf34a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;load_digits&lt;/code&gt;&lt;/a&gt;(*[, n_class, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8f57fb423ab9cf3a53e30775b5e62a7f14e631" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;load_digits&lt;/code&gt;&lt;/a&gt;([n_class, return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt; &lt;code&gt;load_digits&lt;/code&gt; &lt;/a&gt; ([n_class, return_X_y])</target>
        </trans-unit>
        <trans-unit id="fa72e6ae213316216e559a4f55cbecf4dcb04a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee5523bb0f12898ca4d7259cb74cf38035959c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="bfc288a389a2859140d2872df14e1ae62ce4db25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3cbd55f89cd5828e8328080716625c3ae513fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="9ad6809f4ea696af856bbdf5a6883fd1b42c84cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</target>
        </trans-unit>
        <trans-unit id="224ba39853f76ab922dd6bb5895fd38941d5be84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;load_sample_images&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;load_sample_images&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b8e00258c439a830b9ccfba4539f966adc94c7e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25078b874bb45c1dff81765e1e96e7ab2a108971" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="a51d01a09cd1b456094d26673d980cc95a6fb890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0834712d93badaf504282d8c6a7ff9c190eb365b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters[, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt; &lt;code&gt;make_biclusters&lt;/code&gt; &lt;/a&gt; (모양, n_clusters [, 노이즈,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8fe617b2b1a3305b551ec62306e83be2c92e7f28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c860e34e901dcdabbfd4bdf6a39a73e12f2fa9aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt; &lt;code&gt;make_checkerboard&lt;/code&gt; &lt;/a&gt; (모양, n_clusters [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="52a6f0198860de9fd06588c45c591db042284040" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;make_circles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;make_moons&lt;/code&gt;&lt;/a&gt; generate 2d binary classification datasets that are challenging to certain algorithms (e.g. centroid-based clustering or linear classification), including optional Gaussian noise. They are useful for visualisation. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;make_circles&lt;/code&gt;&lt;/a&gt; produces Gaussian data with a spherical decision boundary for binary classification, while &lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;make_moons&lt;/code&gt;&lt;/a&gt; produces two interleaving half circles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30482253eb738861904d5cb711a0cc7592be281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;make_circles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;make_moons&lt;/code&gt;&lt;/a&gt; generate 2d binary classification datasets that are challenging to certain algorithms (e.g. centroid-based clustering or linear classification), including optional Gaussian noise. They are useful for visualisation. produces Gaussian data with a spherical decision boundary for binary classification.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt; &lt;code&gt;make_circles&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt; &lt;code&gt;make_moons&lt;/code&gt; &lt;/a&gt; 는 선택적 가우시안 노이즈를 포함하여 특정 알고리즘 (예 : 중심 기반 클러스터링 또는 선형 분류)에 어려운 2D 이진 분류 데이터 세트를 생성합니다. 시각화에 유용합니다. 이진 분류에 대한 구형 결정 경계가있는 가우스 데이터를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5e4172acd40132d919c3b5c2bb7bb83102e0040a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt; divides a single Gaussian cluster into near-equal-size classes separated by concentric hyperspheres. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt;&lt;code&gt;make_hastie_10_2&lt;/code&gt;&lt;/a&gt; generates a similar binary, 10-dimensional problem.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt; &lt;code&gt;make_gaussian_quantiles&lt;/code&gt; &lt;/a&gt; 는 단일 가우시안 클러스터를 동심 형 하이퍼 스피어로 구분 된 거의 동일한 크기의 클래스로 나눕니다. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt; &lt;code&gt;make_hastie_10_2&lt;/code&gt; &lt;/a&gt; 는 유사한 이진 10 차원 문제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="eb0c3adf3bd4b3ef215aacc01e4771c94ee96a74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt;&lt;code&gt;make_low_rank_matrix&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt; &lt;code&gt;make_low_rank_matrix&lt;/code&gt; &lt;/a&gt; ([n_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f8ea78ce337dcd49fc746b0bacde7d25c51e2268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;make_multilabel_classification&lt;/code&gt;&lt;/a&gt; generates random samples with multiple labels, reflecting a bag of words drawn from a mixture of topics. The number of topics for each document is drawn from a Poisson distribution, and the topics themselves are drawn from a fixed random distribution. Similarly, the number of words is drawn from Poisson, with words drawn from a multinomial, where each topic defines a probability distribution over words. Simplifications with respect to true bag-of-words mixtures include:</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt; &lt;code&gt;make_multilabel_classification&lt;/code&gt; &lt;/a&gt; 은 여러 주제로 구성된 단어 모음을 반영하여 여러 레이블이있는 임의의 샘플을 생성합니다. 각 문서의 주제 수는 푸 아송 분포에서 도출되며 주제 자체는 고정 된 무작위 분포에서 도출됩니다. 유사하게, 단어의 수는 포아송에서 도출되며, 단어는 다항식에서 도출되며, 각 주제는 단어에 대한 확률 분포를 정의합니다. 실제 단어 별 혼합에 대한 단순화는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4edc48aec4ee4aefa8c5c9069cb0861d36599360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt;&lt;code&gt;make_regression&lt;/code&gt;&lt;/a&gt; produces regression targets as an optionally-sparse random linear combination of random features, with noise. Its informative features may be uncorrelated, or low rank (few features account for most of the variance).</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt; &lt;code&gt;make_regression&lt;/code&gt; &lt;/a&gt; 은 임의의 피처를 선택적으로 희소 한 임의 선형 피처 조합으로 노이즈로 회귀 대상을 생성합니다. 유익한 정보는 서로 관련이 없거나 순위가 낮을 수 있습니다 (대부분의 차이를 설명하는 기능은 거의 없습니다).</target>
        </trans-unit>
        <trans-unit id="497a36082fd17e880c172685d124ccd138fc7788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt;&lt;code&gt;make_s_curve&lt;/code&gt;&lt;/a&gt;([n_samples, noise, random_state])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt; &lt;code&gt;make_s_curve&lt;/code&gt; &lt;/a&gt; ([n_samples, 노이즈, random_state])</target>
        </trans-unit>
        <trans-unit id="b94485a36545d25c9ca1aac87f99e760429b69b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, &amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt; &lt;code&gt;make_sparse_coded_signal&lt;/code&gt; &lt;/a&gt; (n_samples,&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ddeb4c37c4df3111b3786ef17f663c2798513cd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f20dc3ba2bb4a702eaabae9293eeb4b24e156e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt;&lt;code&gt;make_sparse_spd_matrix&lt;/code&gt;&lt;/a&gt;([dim, alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt; &lt;code&gt;make_sparse_spd_matrix&lt;/code&gt; &lt;/a&gt; ([dim, alpha,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fb6819dfa4e211b5da88bced8eb3514a4fb65e98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim, *[, random_state])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c8a202b42ebb032f6b8c6be6db0a98aa6d0695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim[, random_state])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt; &lt;code&gt;make_spd_matrix&lt;/code&gt; &lt;/a&gt; (n_dim [, random_state])</target>
        </trans-unit>
        <trans-unit id="3508835fb056170ff26542c5032d077cc8a2b2f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt;&lt;code&gt;make_swiss_roll&lt;/code&gt;&lt;/a&gt;([n_samples, noise, random_state])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt; &lt;code&gt;make_swiss_roll&lt;/code&gt; &lt;/a&gt; ([n_samples, noise, random_state])</target>
        </trans-unit>
        <trans-unit id="f526e575e7d67dc918abd8642ba35107cf9ee255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classes#module-sklearn.neighbors&quot;&gt;&lt;code&gt;sklearn.neighbors&lt;/code&gt;&lt;/a&gt; provides functionality for unsupervised and supervised neighbors-based learning methods. Unsupervised nearest neighbors is the foundation of many other learning methods, notably manifold learning and spectral clustering. Supervised neighbors-based learning comes in two flavors: &lt;a href=&quot;#classification&quot;&gt;classification&lt;/a&gt; for data with discrete labels, and &lt;a href=&quot;#regression&quot;&gt;regression&lt;/a&gt; for data with continuous labels.</source>
          <target state="translated">&lt;a href=&quot;classes#module-sklearn.neighbors&quot;&gt; &lt;code&gt;sklearn.neighbors&lt;/code&gt; &lt;/a&gt; 는 비지도 및 감독되는 이웃 기반 학습 방법에 대한 기능을 제공합니다. 감독되지 않은 가장 가까운 이웃은 많은 다른 학습 방법, 특히 매니 폴드 학습 및 스펙트럼 클러스터링의 기초입니다. 감독 된 이웃 기반 학습은이산 레이블이있는 데이터&lt;a href=&quot;#classification&quot;&gt; 분류&lt;/a&gt; 와 연속 레이블이있는 데이터&lt;a href=&quot;#regression&quot;&gt; 회귀의&lt;/a&gt; 두 가지 방식으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="373a75690f94bd1176677d6d31b98a89d0c849f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compose#pipeline&quot;&gt;Pipeline: chaining estimators&lt;/a&gt; describes building composite estimators whose parameter space can be searched with these tools.</source>
          <target state="translated">&lt;a href=&quot;compose#pipeline&quot;&gt;파이프 라인 : 연쇄 추정기&lt;/a&gt; 는 이러한 도구를 사용하여 매개 변수 공간을 검색 할 수있는 복합 추정기를 작성하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="152a6d06538d60f6a8d9b17aeb423f64680b6c32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ensemble#random-trees-embedding&quot;&gt;Totally Random Trees Embedding&lt;/a&gt; can also be useful to derive non-linear representations of feature space, also it does not perform dimensionality reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d398e5c1b8a480bc7edafd64456e0ad26ec822f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.clone#sklearn.base.clone&quot;&gt;&lt;code&gt;base.clone&lt;/code&gt;&lt;/a&gt;(estimator, *[, safe])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40686b045b637e198477129079fdb16e07c0e1c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.clone#sklearn.base.clone&quot;&gt;&lt;code&gt;base.clone&lt;/code&gt;&lt;/a&gt;(estimator[, safe])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.clone#sklearn.base.clone&quot;&gt; &lt;code&gt;base.clone&lt;/code&gt; &lt;/a&gt; (추정자 [, 안전])</target>
        </trans-unit>
        <trans-unit id="2b3fa29a7dd6280e762e75ea2b1a7a1a619cb6cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.is_classifier#sklearn.base.is_classifier&quot;&gt;&lt;code&gt;base.is_classifier&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.is_classifier#sklearn.base.is_classifier&quot;&gt;&lt;code&gt;base.is_classifier&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="a092a391ba6b76e252a7407c59d7ccb219d5534c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.is_regressor#sklearn.base.is_regressor&quot;&gt;&lt;code&gt;base.is_regressor&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.is_regressor#sklearn.base.is_regressor&quot;&gt;&lt;code&gt;base.is_regressor&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="847ee981b4d10a208202b9d6fa1407d9e925b929" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; can also deal with classification tasks that involve more than two classes if the base estimator can do so. In this case, the classifier is calibrated first for each class separately in an one-vs-rest fashion. When predicting probabilities for unseen data, the calibrated probabilities for each class are predicted separately. As those probabilities do not necessarily sum to one, a postprocessing is performed to normalize them.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt; &lt;code&gt;CalibratedClassifierCV&lt;/code&gt; &lt;/a&gt; 는 또한 기본 추정기가 수행 할 수있는 경우 둘 이상의 클래스를 포함하는 분류 작업을 처리 할 수 ​​있습니다. 이 경우 분류기는 각 클래스에 대해 먼저 하나의 레스트 방식으로 먼저 교정됩니다. 보이지 않는 데이터에 대한 확률을 예측할 때 각 클래스에 대해 교정 된 확률이 별도로 예측됩니다. 이러한 확률이 반드시 하나에 합산되는 것은 아니기 때문에이를 후행 화하여 정규화합니다.</target>
        </trans-unit>
        <trans-unit id="fed63b99ed48fe487834fc8caf24275923dcde6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; can calibrate probabilities in a multiclass setting if the base estimator supports multiclass predictions. The classifier is calibrated first for each class separately in a one-vs-rest fashion &lt;a href=&quot;#id9&quot; id=&quot;id5&quot;&gt;4&lt;/a&gt;. When predicting probabilities, the calibrated probabilities for each class are predicted separately. As those probabilities do not necessarily sum to one, a postprocessing is performed to normalize them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0966454d79bcf6c59ff1920129836d22c3017b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; uses a cross-validation approach to fit both the classifier and the regressor. For each of the k &lt;code&gt;(trainset, testset)&lt;/code&gt; couple, a classifier is trained on the train set, and its predictions on the test set are used to fit a regressor. We end up with k &lt;code&gt;(classifier, regressor)&lt;/code&gt; couples where each regressor maps the output of its corresponding classifier into [0, 1]. Each couple is exposed in the &lt;code&gt;calibrated_classifiers_&lt;/code&gt; attribute, where each entry is a calibrated classifier with a &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-predict-proba&quot;&gt;predict_proba&lt;/a&gt; method that outputs calibrated probabilities. The output of &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-predict-proba&quot;&gt;predict_proba&lt;/a&gt; for the main &lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; instance corresponds to the average of the predicted probabilities of the &lt;code&gt;k&lt;/code&gt; estimators in the &lt;code&gt;calibrated_classifiers_&lt;/code&gt; list. The output of &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-predict&quot;&gt;predict&lt;/a&gt; is the class that has the highest probability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b7b3a4b1dd74cc587c5aa91f91b030522c7a2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;calibration.CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;calibration.CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8b99fa2c7ee3091e973f9b961c4030c4584c4a90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibration_curve#sklearn.calibration.calibration_curve&quot;&gt;&lt;code&gt;calibration.calibration_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_prob)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.calibration.calibration_curve#sklearn.calibration.calibration_curve&quot;&gt; &lt;code&gt;calibration.calibration_curve&lt;/code&gt; &lt;/a&gt; (y_true, y_prob)</target>
        </trans-unit>
        <trans-unit id="6341d591e0aba36caf578869a074347f21088a84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibration_curve#sklearn.calibration.calibration_curve&quot;&gt;&lt;code&gt;calibration.calibration_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_prob, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d0481be090ef391a09914812740253b09951d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinity_propagation#sklearn.cluster.affinity_propagation&quot;&gt;&lt;code&gt;cluster.affinity_propagation&lt;/code&gt;&lt;/a&gt;(S, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1454e397a1d8adf859b2ed5288bbfa1d2a4d29c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinity_propagation#sklearn.cluster.affinity_propagation&quot;&gt;&lt;code&gt;cluster.affinity_propagation&lt;/code&gt;&lt;/a&gt;(S[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.affinity_propagation#sklearn.cluster.affinity_propagation&quot;&gt; &lt;code&gt;cluster.affinity_propagation&lt;/code&gt; &lt;/a&gt; (S [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="54f9fc4205bf1caeed749d957c2bd4fc09ce3fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;AffinityPropagation&lt;/code&gt;&lt;/a&gt; creates clusters by sending messages between pairs of samples until convergence. A dataset is then described using a small number of exemplars, which are identified as those most representative of other samples. The messages sent between pairs represent the suitability for one sample to be the exemplar of the other, which is updated in response to the values from other pairs. This updating happens iteratively until convergence, at which point the final exemplars are chosen, and hence the final clustering is given.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt; &lt;code&gt;AffinityPropagation&lt;/code&gt; &lt;/a&gt; 은 수렴 할 때까지 샘플 쌍간에 메시지를 보내 클러스터를 만듭니다. 그런 다음 다른 샘플을 가장 대표하는 것으로 식별되는 소수의 예제를 사용하여 데이터 세트를 설명합니다. 쌍 사이에 전송 된 메시지는 한 샘플이 다른 샘플의 모범이되는 적합성을 나타내며, 이는 다른 쌍의 값에 따라 업데이트됩니다. 이 업데이트는 최종 예제가 선택되어 최종 클러스터링이 제공 될 때까지 반복적으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="32e40c56fd5e2e790174d0aa6a7be94f3f77e7dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;cluster.AffinityPropagation&lt;/code&gt;&lt;/a&gt;(*[, damping, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd649ccc42593843d8ff80686fc9618e6abfd73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;cluster.AffinityPropagation&lt;/code&gt;&lt;/a&gt;([damping, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt; &lt;code&gt;cluster.AffinityPropagation&lt;/code&gt; &lt;/a&gt; ([댐핑,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6dc656359e2ef712fd43ce553377adb3f05ae0bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;AgglomerativeClustering&lt;/code&gt;&lt;/a&gt; can also scale to large number of samples when it is used jointly with a connectivity matrix, but is computationally expensive when no connectivity constraints are added between samples: it considers at each step all the possible merges.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt; &lt;code&gt;AgglomerativeClustering&lt;/code&gt; &lt;/a&gt; 은 연결 매트릭스와 함께 사용될 때 많은 수의 샘플로 확장 할 수 있지만 샘플간에 연결 제약 조건이 추가되지 않으면 계산 비용이 많이 듭니다. 각 단계에서 가능한 모든 병합을 고려합니다.</target>
        </trans-unit>
        <trans-unit id="00c180c2bb2be88e81d54d55191ae632024114f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;AgglomerativeClustering&lt;/code&gt;&lt;/a&gt; supports Ward, single, average, and complete linkage strategies.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt; &lt;code&gt;AgglomerativeClustering&lt;/code&gt; &lt;/a&gt; 은 Ward, single, average 및 complete 연계 전략을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e923a0d5f53fcfc8e41d2bce903e50c47d020319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;cluster.AgglomerativeClustering&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;cluster.AgglomerativeClustering&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3b41c18b1bd61ac180741124377953d36b6e6ced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralbiclustering#sklearn.cluster.bicluster.SpectralBiclustering&quot;&gt;&lt;code&gt;SpectralBiclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, method, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralbiclustering#sklearn.cluster.bicluster.SpectralBiclustering&quot;&gt; &lt;code&gt;SpectralBiclustering&lt;/code&gt; &lt;/a&gt; ([n_clusters, 메소드,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3eecc11c78b5c1a871b7d52cea732652b1f2f0c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralcoclustering#sklearn.cluster.bicluster.SpectralCoclustering&quot;&gt;&lt;code&gt;SpectralCoclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralcoclustering#sklearn.cluster.bicluster.SpectralCoclustering&quot;&gt; &lt;code&gt;SpectralCoclustering&lt;/code&gt; &lt;/a&gt; ([n_clusters,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8d68a69b778b87ff45aa38d6037664073de0abed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.birch#sklearn.cluster.Birch&quot;&gt;&lt;code&gt;cluster.Birch&lt;/code&gt;&lt;/a&gt;(*[, threshold, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc147f9f9be8b65390df38d3567a3db7c6fd96f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.birch#sklearn.cluster.Birch&quot;&gt;&lt;code&gt;cluster.Birch&lt;/code&gt;&lt;/a&gt;([threshold, branching_factor, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.birch#sklearn.cluster.Birch&quot;&gt; &lt;code&gt;cluster.Birch&lt;/code&gt; &lt;/a&gt; ([임계 값, branching_factor,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="be5b041778948940131d9555648cb306879b2ad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.cluster_optics_dbscan#sklearn.cluster.cluster_optics_dbscan&quot;&gt;&lt;code&gt;cluster.cluster_optics_dbscan&lt;/code&gt;&lt;/a&gt;(*, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf3dc6202b301d8177ba46bf8d902cfb17e4880" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.cluster_optics_xi#sklearn.cluster.cluster_optics_xi&quot;&gt;&lt;code&gt;cluster.cluster_optics_xi&lt;/code&gt;&lt;/a&gt;(*, reachability, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915344b5a800fd48d7225ba4232c0538550ba701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.compute_optics_graph#sklearn.cluster.compute_optics_graph&quot;&gt;&lt;code&gt;cluster.compute_optics_graph&lt;/code&gt;&lt;/a&gt;(X, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f74ce64787054d649a669d4132c468afc473d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.DBSCAN&quot;&gt;&lt;code&gt;cluster.DBSCAN&lt;/code&gt;&lt;/a&gt;([eps, min_samples, metric, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.DBSCAN&quot;&gt; &lt;code&gt;cluster.DBSCAN&lt;/code&gt; &lt;/a&gt; ([eps, min_samples, metric,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a4c36c7c5cc3b5aa4e8061c8a64e4d9db9c08ae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.dbscan&quot;&gt;&lt;code&gt;cluster.dbscan&lt;/code&gt;&lt;/a&gt;(X[, eps, min_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.dbscan&quot;&gt; &lt;code&gt;cluster.dbscan&lt;/code&gt; &lt;/a&gt; (X [, eps, min_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f35c7849750b7b963b4475c3ec7375ad3785d00b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.estimate_bandwidth#sklearn.cluster.estimate_bandwidth&quot;&gt;&lt;code&gt;cluster.estimate_bandwidth&lt;/code&gt;&lt;/a&gt;(X, *[, quantile, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51914bf6c7e6b950d00373a21419a4b04d5d2a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.estimate_bandwidth#sklearn.cluster.estimate_bandwidth&quot;&gt;&lt;code&gt;cluster.estimate_bandwidth&lt;/code&gt;&lt;/a&gt;(X[, quantile, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.estimate_bandwidth#sklearn.cluster.estimate_bandwidth&quot;&gt; &lt;code&gt;cluster.estimate_bandwidth&lt;/code&gt; &lt;/a&gt; (X [, Quantile,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0c50d702ba29707744e776b124a1f0611aaf3516" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt;&lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt;&lt;/a&gt; applies &lt;a href=&quot;clustering#hierarchical-clustering&quot;&gt;Hierarchical clustering&lt;/a&gt; to group together features that behave similarly.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt; &lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt; 은&lt;/a&gt;&lt;a href=&quot;clustering#hierarchical-clustering&quot;&gt; 계층 적 클러스터링&lt;/a&gt; 을적용하여 유사하게 작동하는 기능을 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="f6119e2504cff1c4820a08317abf87569fe39d64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt;&lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt; &lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt; &lt;/a&gt; ([n_clusters,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="68dc4e332c47ba8647f61a9d96b3492cf6dae4b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.k_means#sklearn.cluster.k_means&quot;&gt;&lt;code&gt;cluster.k_means&lt;/code&gt;&lt;/a&gt;(X, n_clusters, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6542e2a0450499e101f34ce5d4238820316a2b1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.k_means#sklearn.cluster.k_means&quot;&gt;&lt;code&gt;cluster.k_means&lt;/code&gt;&lt;/a&gt;(X, n_clusters[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.k_means#sklearn.cluster.k_means&quot;&gt; &lt;code&gt;cluster.k_means&lt;/code&gt; &lt;/a&gt; (X, n_clusters [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="164d2dd9bb54c905af4e3cdf5cadcf4dd79f2f3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;KMeans&lt;/code&gt;&lt;/a&gt; benefits from OpenMP based parallelism through Cython. Small chunks of data (256 samples) are processed in parallel, which in addition yields a low memory footprint. For more details on how to control the number of threads, please refer to our &lt;a href=&quot;computing#parallelism&quot;&gt;Parallelism&lt;/a&gt; notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d94e9307d84954ab56ff338ce9ecced3488ab0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;cluster.KMeans&lt;/code&gt;&lt;/a&gt;([n_clusters, init, n_init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt; &lt;code&gt;cluster.KMeans&lt;/code&gt; &lt;/a&gt; ([n_clusters, init, n_init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="09675b5d45c0ab020ae488d4d9e13cc7309db458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.mean_shift#sklearn.cluster.mean_shift&quot;&gt;&lt;code&gt;cluster.mean_shift&lt;/code&gt;&lt;/a&gt;(X, *[, bandwidth, seeds, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971be528aef82b23ef655e30761b4d844d26e5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.mean_shift#sklearn.cluster.mean_shift&quot;&gt;&lt;code&gt;cluster.mean_shift&lt;/code&gt;&lt;/a&gt;(X[, bandwidth, seeds, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.mean_shift#sklearn.cluster.mean_shift&quot;&gt; &lt;code&gt;cluster.mean_shift&lt;/code&gt; &lt;/a&gt; (X [, 대역폭, 시드,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1e69cb0b59dffb223cb6b813850674ca354e16f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;MeanShift&lt;/code&gt;&lt;/a&gt; clustering aims to discover &lt;em&gt;blobs&lt;/em&gt; in a smooth density of samples. It is a centroid based algorithm, which works by updating candidates for centroids to be the mean of the points within a given region. These candidates are then filtered in a post-processing stage to eliminate near-duplicates to form the final set of centroids.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt; &lt;code&gt;MeanShift&lt;/code&gt; &lt;/a&gt; 클러스터링은매끄러운 밀도의 샘플에서&lt;em&gt; 얼룩&lt;/em&gt; 을 발견하는 것을 목표로합니다. 중심 기반 알고리즘으로, 중심에 대한 후보를 지정된 지역 내 포인트의 평균으로 업데이트하여 작동합니다. 그런 다음 이러한 후보를 후 처리 단계에서 필터링하여 거의 중복되는 부분을 제거하여 최종 중심 세트를 형성합니다.</target>
        </trans-unit>
        <trans-unit id="9b9658051d0aa46a8fc11c1579a4b1463f1baec4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;cluster.MeanShift&lt;/code&gt;&lt;/a&gt;(*[, bandwidth, seeds, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319ecff37d6f928eca5970e3cc32b3268c49849d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;cluster.MeanShift&lt;/code&gt;&lt;/a&gt;([bandwidth, seeds, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt; &lt;code&gt;cluster.MeanShift&lt;/code&gt; &lt;/a&gt; ([대역폭, 시드,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7e3e7569496c39f993ee78b02c76d70311ecaad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt;&lt;code&gt;MiniBatchKMeans&lt;/code&gt;&lt;/a&gt; converges faster than &lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;KMeans&lt;/code&gt;&lt;/a&gt;, but the quality of the results is reduced. In practice this difference in quality can be quite small, as shown in the example and cited reference.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt; &lt;code&gt;MiniBatchKMeans&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt; &lt;code&gt;KMeans&lt;/code&gt; &lt;/a&gt; 보다 빠르게 수렴되지만 결과 품질은 떨어집니다. 실제로, 예시 및 인용 된 참조에 도시 된 바와 같이, 이러한 품질 차이는 상당히 작을 수있다.</target>
        </trans-unit>
        <trans-unit id="0283c74111ba2a27b8497c875d77cccc3a19aaa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt;&lt;code&gt;cluster.MiniBatchKMeans&lt;/code&gt;&lt;/a&gt;([n_clusters, init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt; &lt;code&gt;cluster.MiniBatchKMeans&lt;/code&gt; &lt;/a&gt; ([n_clusters, init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8d931f327500840a4c90dd216d1b5b54e9cbb21e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.optics#sklearn.cluster.OPTICS&quot;&gt;&lt;code&gt;cluster.OPTICS&lt;/code&gt;&lt;/a&gt;(*[, min_samples, max_eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e749d11f936d893e5d4f0c8976005daaa94326c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectral_clustering#sklearn.cluster.spectral_clustering&quot;&gt;&lt;code&gt;cluster.spectral_clustering&lt;/code&gt;&lt;/a&gt;(affinity, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118211338211806b2e2229ab17fd79c45195e168" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectral_clustering#sklearn.cluster.spectral_clustering&quot;&gt;&lt;code&gt;cluster.spectral_clustering&lt;/code&gt;&lt;/a&gt;(affinity[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.spectral_clustering#sklearn.cluster.spectral_clustering&quot;&gt; &lt;code&gt;cluster.spectral_clustering&lt;/code&gt; &lt;/a&gt; (친화도 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="81209ef25ccdc0bb4e34504ace4a6adcd5c16832" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralbiclustering#sklearn.cluster.SpectralBiclustering&quot;&gt;&lt;code&gt;cluster.SpectralBiclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b976565f5f09c252f62f05d7ac51e340cb62fadf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;SpectralClustering&lt;/code&gt;&lt;/a&gt; does a low-dimension embedding of the affinity matrix between samples, followed by a KMeans in the low dimensional space. It is especially efficient if the affinity matrix is sparse and the &lt;a href=&quot;https://github.com/pyamg/pyamg&quot;&gt;pyamg&lt;/a&gt; module is installed. SpectralClustering requires the number of clusters to be specified. It works well for a small number of clusters but is not advised when using many clusters.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt; &lt;code&gt;SpectralClustering&lt;/code&gt; &lt;/a&gt; 은 샘플들 사이에 친 화성 매트릭스를 저 차원으로 임베딩 한 다음, 저 차원 공간에서 KMeans를 수행합니다. 선호도 매트릭스가 희박하고&lt;a href=&quot;https://github.com/pyamg/pyamg&quot;&gt; pyamg&lt;/a&gt; 모듈이 설치된경우 특히 효율적입니다. SpectralClustering에는 클러스터 수를 지정해야합니다. 적은 수의 클러스터에는 잘 작동하지만 많은 클러스터를 사용할 때는 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="43093513470a97aa5419cabeb064623359afb6bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;SpectralClustering&lt;/code&gt;&lt;/a&gt; performs a low-dimension embedding of the affinity matrix between samples, followed by clustering, e.g., by KMeans, of the components of the eigenvectors in the low dimensional space. It is especially computationally efficient if the affinity matrix is sparse and the &lt;code&gt;amg&lt;/code&gt; solver is used for the eigenvalue problem (Note, the &lt;code&gt;amg&lt;/code&gt; solver requires that the &lt;a href=&quot;https://github.com/pyamg/pyamg&quot;&gt;pyamg&lt;/a&gt; module is installed.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d671ae70c6e355927e9bcd1ae32972c5d06461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;cluster.SpectralClustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt; &lt;code&gt;cluster.SpectralClustering&lt;/code&gt; &lt;/a&gt; ([n_clusters,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c63f27ed22a483504ca75e24893c4556a4072303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralcoclustering#sklearn.cluster.SpectralCoclustering&quot;&gt;&lt;code&gt;cluster.SpectralCoclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b080576f568e68179262fc18639b3ed78b9e915d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.ward_tree#sklearn.cluster.ward_tree&quot;&gt;&lt;code&gt;cluster.ward_tree&lt;/code&gt;&lt;/a&gt;(X, *[, connectivity, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e817e7d25bf004469eb7f05074dcfae5a481b421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.ward_tree#sklearn.cluster.ward_tree&quot;&gt;&lt;code&gt;cluster.ward_tree&lt;/code&gt;&lt;/a&gt;(X[, connectivity, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.ward_tree#sklearn.cluster.ward_tree&quot;&gt; &lt;code&gt;cluster.ward_tree&lt;/code&gt; &lt;/a&gt; (X [, 연결성,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9cad5aada10cba5e17975e67a3ae8206ae6fb76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;compose.ColumnTransformer&lt;/code&gt;&lt;/a&gt;(transformers, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096575a0f141f71dde39613816f3ecddb55bf684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;compose.ColumnTransformer&lt;/code&gt;&lt;/a&gt;(transformers[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt; &lt;code&gt;compose.ColumnTransformer&lt;/code&gt; &lt;/a&gt; (변환기 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="50b6066ae638de9a68e1d737a3ac3e176f43b53d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.make_column_selector#sklearn.compose.make_column_selector&quot;&gt;&lt;code&gt;compose.make_column_selector&lt;/code&gt;&lt;/a&gt;([pattern, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0648ff2b2824be8791be640933174004b4f10e84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.make_column_transformer#sklearn.compose.make_column_transformer&quot;&gt;&lt;code&gt;compose.make_column_transformer&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.make_column_transformer#sklearn.compose.make_column_transformer&quot;&gt;&lt;code&gt;compose.make_column_transformer&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="76b57b72face63d4309c1953da56bc8e424d2042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt; transforms the targets &lt;code&gt;y&lt;/code&gt; before fitting a regression model. The predictions are mapped back to the original space via an inverse transform. It takes as an argument the regressor that will be used for prediction, and the transformer that will be applied to the target variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bf277c8a30bfb2c96321e65066f2ebe9272683" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;compose.TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;compose.TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4aed4220e4b42c3ed2d4bd917a288d0319a7ba44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.config_context#sklearn.config_context&quot;&gt;&lt;code&gt;config_context&lt;/code&gt;&lt;/a&gt;(**new_config)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.config_context#sklearn.config_context&quot;&gt;&lt;code&gt;config_context&lt;/code&gt;&lt;/a&gt;(**new_config)</target>
        </trans-unit>
        <trans-unit id="2b9e9ebab16e2d8d1aabc307b766b68b23ccc496" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00df1503d28926253ce5f11c8391ebc0bc277a86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="640691ead99eaee6e0f16dabeca4f459fa7e4523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empirical_covariance#sklearn.covariance.empirical_covariance&quot;&gt;&lt;code&gt;covariance.empirical_covariance&lt;/code&gt;&lt;/a&gt;(X, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e51d82fb6a39c7387507567406805e37ab28de0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empirical_covariance#sklearn.covariance.empirical_covariance&quot;&gt;&lt;code&gt;covariance.empirical_covariance&lt;/code&gt;&lt;/a&gt;(X[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.empirical_covariance#sklearn.covariance.empirical_covariance&quot;&gt; &lt;code&gt;covariance.empirical_covariance&lt;/code&gt; &lt;/a&gt; (X [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="70b3ecf4c3c3ab6a7bd278fd8ac09429af075047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffe4464c32b2598543950605e726dd21383baef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0a61c16d7173244f321ed792c90a623f18effb4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graph_lasso#sklearn.covariance.graph_lasso&quot;&gt;&lt;code&gt;covariance.graph_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graph_lasso#sklearn.covariance.graph_lasso&quot;&gt; &lt;code&gt;covariance.graph_lasso&lt;/code&gt; &lt;/a&gt; (emp_cov, alpha [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a4a99c8d06b9751f6e81a34e386b5bfe401d12fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt;&lt;code&gt;covariance.graphical_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e347689901e4a41ae6912e00dfffd8e9ab4b89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt;&lt;code&gt;covariance.graphical_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt; &lt;code&gt;covariance.graphical_lasso&lt;/code&gt; &lt;/a&gt; (emp_cov, alpha [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c278cb012eda13c7c6937bff77a2ef7959eba33a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallasso#sklearn.covariance.GraphicalLasso&quot;&gt;&lt;code&gt;covariance.GraphicalLasso&lt;/code&gt;&lt;/a&gt;([alpha, mode, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphicallasso#sklearn.covariance.GraphicalLasso&quot;&gt; &lt;code&gt;covariance.GraphicalLasso&lt;/code&gt; &lt;/a&gt; ([알파, 모드,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="39a9a6ab78e314bc34d6825ab2517dc2f521ecf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;covariance.GraphicalLassoCV&lt;/code&gt;&lt;/a&gt;(*[, alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfd18b1f59533f8e5de3e040fb6794bf1cd00d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;covariance.GraphicalLassoCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt; &lt;code&gt;covariance.GraphicalLassoCV&lt;/code&gt; &lt;/a&gt; ([알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b4b7e66cbeaa9014a0120b7d004eb9dba492015e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphlasso#sklearn.covariance.GraphLasso&quot;&gt;&lt;code&gt;covariance.GraphLasso&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphlasso#sklearn.covariance.GraphLasso&quot;&gt; &lt;code&gt;covariance.GraphLasso&lt;/code&gt; &lt;/a&gt; 그래프 올가미 (* args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="92c0ee3b069a9818bbd2168463c28ca4589a56f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphlassocv#sklearn.covariance.GraphLassoCV&quot;&gt;&lt;code&gt;covariance.GraphLassoCV&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphlassocv#sklearn.covariance.GraphLassoCV&quot;&gt; &lt;code&gt;covariance.GraphLassoCV&lt;/code&gt; &lt;/a&gt; (* args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="26137e2b5d7dd579ba12fb7944070f72f33fe7e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoit_wolf#sklearn.covariance.ledoit_wolf&quot;&gt;&lt;code&gt;covariance.ledoit_wolf&lt;/code&gt;&lt;/a&gt;(X, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac790647f7ea5751f1ee3e35690c92d04c87a5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoit_wolf#sklearn.covariance.ledoit_wolf&quot;&gt;&lt;code&gt;covariance.ledoit_wolf&lt;/code&gt;&lt;/a&gt;(X[, assume_centered, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.ledoit_wolf#sklearn.covariance.ledoit_wolf&quot;&gt; &lt;code&gt;covariance.ledoit_wolf&lt;/code&gt; &lt;/a&gt; (X [, 가정 _ 중심,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a7870814aa5dc78a3f5da183c0b769464fabd204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt;&lt;code&gt;covariance.LedoitWolf&lt;/code&gt;&lt;/a&gt;(*[, store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfd336335e7c128e08d42fda8342ce13642fb2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt;&lt;code&gt;covariance.LedoitWolf&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt; &lt;code&gt;covariance.LedoitWolf&lt;/code&gt; &lt;/a&gt; .LedoitWolf ([store_precision,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ccc7255f46f84ba6924f8d9a6e552f88fe8e2ebc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt;&lt;code&gt;covariance.MinCovDet&lt;/code&gt;&lt;/a&gt;(*[, store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e50236ea9e91a91915bcf880b7575b572c19ca9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt;&lt;code&gt;covariance.MinCovDet&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt; &lt;code&gt;covariance.MinCovDet&lt;/code&gt; &lt;/a&gt; ([store_precision,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9441695823c6d42a3be0c52ef4fbef2dc5c9db81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt;&lt;code&gt;covariance.OAS&lt;/code&gt;&lt;/a&gt;(*[, store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778d71808300afebbe7905fb9e2c3e1f024fecb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt;&lt;code&gt;covariance.OAS&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt; &lt;code&gt;covariance.OAS&lt;/code&gt; &lt;/a&gt; .OAS ([store_precision,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="81031c872fae9a21af70372c06e8f5cba1a835cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.oas&quot;&gt;&lt;code&gt;covariance.oas&lt;/code&gt;&lt;/a&gt;(X, *[, assume_centered])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8367ebb53b65c33634c4ec1461a98c3024651db6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.oas&quot;&gt;&lt;code&gt;covariance.oas&lt;/code&gt;&lt;/a&gt;(X[, assume_centered])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.oas&quot;&gt; &lt;code&gt;covariance.oas&lt;/code&gt; &lt;/a&gt; (X [, 가정 _ 중심])</target>
        </trans-unit>
        <trans-unit id="74c5dc944b25ce84eb46ec49143be4e7b992cd18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunk_covariance#sklearn.covariance.shrunk_covariance&quot;&gt;&lt;code&gt;covariance.shrunk_covariance&lt;/code&gt;&lt;/a&gt;(emp_cov[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.shrunk_covariance#sklearn.covariance.shrunk_covariance&quot;&gt; &lt;code&gt;covariance.shrunk_covariance&lt;/code&gt; &lt;/a&gt; (emp_cov [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c948fb8dc5c48868f34308cd8c39d2e759eb6f21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18617e558345e96bc6cda6646dc16f5bbd95636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a9496909d61a774d9fd6d5aa247b28e7c9343e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt;&lt;code&gt;cross_decomposition.CCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt; &lt;code&gt;cross_decomposition.CCA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1569a76a4c1dfa292545a391d0b79eacf2b8c215" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;cross_decomposition.PLSCanonical&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;cross_decomposition.PLSCanonical&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4a3c618e1fd201f96e0f07d252adf3f0d1b8f480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt;&lt;code&gt;cross_decomposition.PLSRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt;&lt;code&gt;cross_decomposition.PLSRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e70394d8bdd125600bd0cd739da22c36cf2fb802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt;&lt;code&gt;cross_decomposition.PLSSVD&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt; &lt;code&gt;cross_decomposition.PLSSVD&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="58d4832ce114e3199c7d3fe8ff0a7822c241ad9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.clear_data_home#sklearn.datasets.clear_data_home&quot;&gt;&lt;code&gt;datasets.clear_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.clear_data_home#sklearn.datasets.clear_data_home&quot;&gt;&lt;code&gt;datasets.clear_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</target>
        </trans-unit>
        <trans-unit id="c5bb808d40edb6b2a67195311d32607811cf5913" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.dump_svmlight_file#sklearn.datasets.dump_svmlight_file&quot;&gt;&lt;code&gt;datasets.dump_svmlight_file&lt;/code&gt;&lt;/a&gt;(X, y, f, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921af65675cdf15a546fa8856e235a9b132eaa08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.dump_svmlight_file#sklearn.datasets.dump_svmlight_file&quot;&gt;&lt;code&gt;datasets.dump_svmlight_file&lt;/code&gt;&lt;/a&gt;(X, y, f[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.dump_svmlight_file#sklearn.datasets.dump_svmlight_file&quot;&gt; &lt;code&gt;datasets.dump_svmlight_file&lt;/code&gt; &lt;/a&gt; (X, y, f [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bd9ca651bf531f85b56037c095c24bdb628961d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65478566490dc47a2145e3a48a4a1ccd33f2b635" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt; &lt;code&gt;datasets.fetch_20newsgroups&lt;/code&gt; &lt;/a&gt; ([data_home, ...])</target>
        </trans-unit>
        <trans-unit id="d617d147157f8bd223a413c6d54171e6943e3da9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21877412be208e763d404a09ac853c173fe978ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ad7a189784aa378b24ec0fab1149438181f545a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d60ae467543ca83d24b19fb13f982ff98760ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="05dbd64250a4d21b9c1bc11b24ffde1f9778295d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9cb8f573c667488959ecbc1c4b9afa78e77950" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt; &lt;code&gt;datasets.fetch_covtype&lt;/code&gt; &lt;/a&gt; ([data_home, ...])</target>
        </trans-unit>
        <trans-unit id="d47bc71db3af04a3eaf9f6697bb298ca8ad6a0b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt;(*[, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c310f9ba89333cbb1505650f03e37fc1f18421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt;([subset, data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt; &lt;code&gt;datasets.fetch_kddcup99&lt;/code&gt; &lt;/a&gt; ([서브셋 data_home, ...])</target>
        </trans-unit>
        <trans-unit id="54e8ccb67dd406615a2ece0baa8bc081ffaaac70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;datasets.fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;(*[, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97364c2f96b1e8c0f27303d3572837a7eb2f59b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;datasets.fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;([subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt; &lt;code&gt;datasets.fetch_lfw_pairs&lt;/code&gt; &lt;/a&gt; ([subset,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7f02635ba6c110b4d68b9649d80f4a066b8dd2b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;datasets.fetch_lfw_people&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770073e22334f1a88609409f8ba0799598a3a61a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;datasets.fetch_lfw_people&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt; &lt;code&gt;datasets.fetch_lfw_people&lt;/code&gt; &lt;/a&gt; ([data_home, ...])</target>
        </trans-unit>
        <trans-unit id="b922020a2a8822cb8426ed59f95785c76e01bd13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_mldata#sklearn.datasets.fetch_mldata&quot;&gt;&lt;code&gt;datasets.fetch_mldata&lt;/code&gt;&lt;/a&gt;(dataname[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_mldata#sklearn.datasets.fetch_mldata&quot;&gt; &lt;code&gt;datasets.fetch_mldata&lt;/code&gt; &lt;/a&gt;datasets.fetch_mldata ( 데이터 이름 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2e514209dcb521e11d84fb79349b73a79b6115d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;datasets.fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9384ded44c0c46b5ba4947af230975d25830ad5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;datasets.fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt; &lt;code&gt;datasets.fetch_olivetti_faces&lt;/code&gt; &lt;/a&gt; ([data_home, ...])</target>
        </trans-unit>
        <trans-unit id="263ea682af63c9985dbf2a57b593291a27a643ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_openml#sklearn.datasets.fetch_openml&quot;&gt;&lt;code&gt;datasets.fetch_openml&lt;/code&gt;&lt;/a&gt;([name, version, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_openml#sklearn.datasets.fetch_openml&quot;&gt; &lt;code&gt;datasets.fetch_openml&lt;/code&gt; &lt;/a&gt; ([이름, 버전,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b01439b3d65013420bb6f1899ae13b7c05c55076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt;(*[, data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c178c9ab3e427095f5c8106931c5ca73a09118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt; &lt;code&gt;datasets.fetch_rcv1&lt;/code&gt; &lt;/a&gt; ([data_home, 서브 세트, ...])</target>
        </trans-unit>
        <trans-unit id="abcc84c8105b00d8cf4035e8c3ed06abdd9f0413" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5277328e627134a7f6776c7b59466f115caab182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="18d8577ff27f8c99666cd13dab92c8c26a6458a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.get_data_home#sklearn.datasets.get_data_home&quot;&gt;&lt;code&gt;datasets.get_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.get_data_home#sklearn.datasets.get_data_home&quot;&gt;&lt;code&gt;datasets.get_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</target>
        </trans-unit>
        <trans-unit id="da1fd4531c33f9aa76976e71cdbb9312e5489f76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;(*[, return_X_y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b107fda677d1acc9bf95a83b0f33be296bec6dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="207fdbd8880481d5e2a9f7227b0b854efaa3b0b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f488d33ee8da669d0ae9fb394f4e08f422c5af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="e0b4e36abb42db5cd984f9fa265a0d2a47e7720a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed9668198374a859f950024783ccc5f0f9ccede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="0b7e5343786ec0bc959a43d1512dfadcd95196b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;datasets.load_digits&lt;/code&gt;&lt;/a&gt;(*[, n_class, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec480f3bdf9cde1f42496d15748048c9383a7d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;datasets.load_digits&lt;/code&gt;&lt;/a&gt;([n_class, return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt; &lt;code&gt;datasets.load_digits&lt;/code&gt; &lt;/a&gt; ([n_class, return_X_y])</target>
        </trans-unit>
        <trans-unit id="27ae691192a71da0c5c064f0b0369d7ca32405c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_files#sklearn.datasets.load_files&quot;&gt;&lt;code&gt;datasets.load_files&lt;/code&gt;&lt;/a&gt;(container_path, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3183dc22d35a732df9072f7ccc717ed03dc649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_files#sklearn.datasets.load_files&quot;&gt;&lt;code&gt;datasets.load_files&lt;/code&gt;&lt;/a&gt;(container_path[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_files#sklearn.datasets.load_files&quot;&gt; &lt;code&gt;datasets.load_files&lt;/code&gt; &lt;/a&gt; (컨테이너 _ 경로 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f41b4a5c24b316f218c450c3411e0fdb1ad4542d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e4a25343b011892c53c76f421e02103a3323fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="59b3c1bd83a869ed097c743fbdb6c5657f72e34b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34fe08c89a7e25b54f668762979e4bf9cabbe20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="652598dc1c6c0db87dcea42be5e3c6d28f7d3270" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_mlcomp#sklearn.datasets.load_mlcomp&quot;&gt;&lt;code&gt;datasets.load_mlcomp&lt;/code&gt;&lt;/a&gt;(name_or_id[, set_, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_mlcomp#sklearn.datasets.load_mlcomp&quot;&gt; &lt;code&gt;datasets.load_mlcomp&lt;/code&gt; &lt;/a&gt; (name_or_id [set_, ...])</target>
        </trans-unit>
        <trans-unit id="81d606304c84c4163295ac7455558baac5ccae34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;datasets.load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;datasets.load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</target>
        </trans-unit>
        <trans-unit id="9faa7d0b7dc3b4fb46ad6a06ef936b589057c8e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;datasets.load_sample_images&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;datasets.load_sample_images&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5a3064291e7c1bc10402e0af7e4f71072e911444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_file#sklearn.datasets.load_svmlight_file&quot;&gt;&lt;code&gt;datasets.load_svmlight_file&lt;/code&gt;&lt;/a&gt;(f, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0115827e9a8f73b7ceaa75daf74e9b7449a55db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_file#sklearn.datasets.load_svmlight_file&quot;&gt;&lt;code&gt;datasets.load_svmlight_file&lt;/code&gt;&lt;/a&gt;(f[, n_features, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_file#sklearn.datasets.load_svmlight_file&quot;&gt; &lt;code&gt;datasets.load_svmlight_file&lt;/code&gt; &lt;/a&gt; (F [n_features, ...])</target>
        </trans-unit>
        <trans-unit id="bb339ff49c53d29436bac3c5574629d71d2b2a30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_files#sklearn.datasets.load_svmlight_files&quot;&gt;&lt;code&gt;datasets.load_svmlight_files&lt;/code&gt;&lt;/a&gt;(files, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406ad6345331d52f40fbd9283b553fa1ce2aef64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_files#sklearn.datasets.load_svmlight_files&quot;&gt;&lt;code&gt;datasets.load_svmlight_files&lt;/code&gt;&lt;/a&gt;(files[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_files#sklearn.datasets.load_svmlight_files&quot;&gt; &lt;code&gt;datasets.load_svmlight_files&lt;/code&gt; &lt;/a&gt; (파일 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ed4e98c207e3de6fa57e890175ae58a9db63585b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b7f2eebfd726ed333e9c28361042f0ed71b8f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="2f9709494d91cd998f4764746a72c7bbe376f5c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;datasets.make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt; &lt;code&gt;datasets.make_biclusters&lt;/code&gt; &lt;/a&gt; (형상, n_clusters)</target>
        </trans-unit>
        <trans-unit id="b80a309e19372509326d10fc32050e9d37c8c8d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;datasets.make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf85ec98b171f3d0e2644d2b2a3c9e4725029c17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt;&lt;code&gt;datasets.make_blobs&lt;/code&gt;&lt;/a&gt;([n_samples, n_features, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt; &lt;code&gt;datasets.make_blobs&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, n_features, ...])</target>
        </trans-unit>
        <trans-unit id="211c74bfe11253011e727d89c7f0c0da35f86537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;datasets.make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt; &lt;code&gt;datasets.make_checkerboard&lt;/code&gt; &lt;/a&gt; (형상, n_clusters)</target>
        </trans-unit>
        <trans-unit id="34885e5c2ab6f5922c46d6e86d836a04a04f120f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;datasets.make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2cad03353f800bd77a9d3b0bc13f9ead36398f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;datasets.make_circles&lt;/code&gt;&lt;/a&gt;([n_samples, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt; &lt;code&gt;datasets.make_circles&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, 셔플, ...])</target>
        </trans-unit>
        <trans-unit id="70bee3892f94a181a84b4f53bf3730ab2c70b890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt;&lt;code&gt;datasets.make_classification&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt; &lt;code&gt;datasets.make_classification&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, ...])</target>
        </trans-unit>
        <trans-unit id="2bb6498162fcd4904b00b74436fe62165d37fd60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman1#sklearn.datasets.make_friedman1&quot;&gt;&lt;code&gt;datasets.make_friedman1&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_friedman1#sklearn.datasets.make_friedman1&quot;&gt; &lt;code&gt;datasets.make_friedman1&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, ...])</target>
        </trans-unit>
        <trans-unit id="ead982c9efa3eb84f84413098686df0c62d6ced3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman2#sklearn.datasets.make_friedman2&quot;&gt;&lt;code&gt;datasets.make_friedman2&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_friedman2#sklearn.datasets.make_friedman2&quot;&gt; &lt;code&gt;datasets.make_friedman2&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES 노이즈, ...])</target>
        </trans-unit>
        <trans-unit id="2067cdc0697632a2e4dedac4f38ba8320018301a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman3#sklearn.datasets.make_friedman3&quot;&gt;&lt;code&gt;datasets.make_friedman3&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_friedman3#sklearn.datasets.make_friedman3&quot;&gt; &lt;code&gt;datasets.make_friedman3&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES 노이즈, ...])</target>
        </trans-unit>
        <trans-unit id="7981d85b27302b6659cec7f63370787b767feda3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;datasets.make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt;(*[, mean, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee171e7d4a72e9733fb29bd347a162d3ece8b27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;datasets.make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt;([mean, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt; &lt;code&gt;datasets.make_gaussian_quantiles&lt;/code&gt; &lt;/a&gt; ([평균,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="05a0f087adb4c6d1b83727115b3521d98a198828" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt;&lt;code&gt;datasets.make_hastie_10_2&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt; &lt;code&gt;datasets.make_hastie_10_2&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, ...])</target>
        </trans-unit>
        <trans-unit id="6f969e5f5f2a05f6145004039a256ee3d233f904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt;&lt;code&gt;datasets.make_low_rank_matrix&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt; &lt;code&gt;datasets.make_low_rank_matrix&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, ...])</target>
        </trans-unit>
        <trans-unit id="985925136f65e7fc7c40bef1d880c24dbe2ae298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;datasets.make_moons&lt;/code&gt;&lt;/a&gt;([n_samples, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt; &lt;code&gt;datasets.make_moons&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, 셔플, ...])</target>
        </trans-unit>
        <trans-unit id="2fa49dede815ade63674aca5d280514728c5e0a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0562a9e71e973cd426769084db009622daaf956a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt;&lt;code&gt;datasets.make_regression&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt; &lt;code&gt;datasets.make_regression&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES, ...])</target>
        </trans-unit>
        <trans-unit id="c6ec6b2c034582bae9622d06ce42f5c8b0c15b8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt;&lt;code&gt;datasets.make_s_curve&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt; &lt;code&gt;datasets.make_s_curve&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES 노이즈, ...])</target>
        </trans-unit>
        <trans-unit id="a05b26e420d8fedd519f80534e5450850abb35b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;datasets.make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt; &lt;code&gt;datasets.make_sparse_coded_signal&lt;/code&gt; &lt;/a&gt; (N_SAMPLES, ...)</target>
        </trans-unit>
        <trans-unit id="b2c40a4e55da5ea5b60e6ed21a93220fcef602a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_sparse_spd_matrix&lt;/code&gt;&lt;/a&gt;([dim, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt; &lt;code&gt;datasets.make_sparse_spd_matrix&lt;/code&gt; &lt;/a&gt; ([dim,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4b808d3b9761c867874a47677ea5ab2c4538af6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_uncorrelated#sklearn.datasets.make_sparse_uncorrelated&quot;&gt;&lt;code&gt;datasets.make_sparse_uncorrelated&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_sparse_uncorrelated#sklearn.datasets.make_sparse_uncorrelated&quot;&gt;&lt;code&gt;datasets.make_sparse_uncorrelated&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3a75d17b5f041aa248c72d15a309abb95a4e015d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d28a1ac44f356d58d9f876ba3eb0206408bac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim[, random_state])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt; &lt;code&gt;datasets.make_spd_matrix&lt;/code&gt; &lt;/a&gt; (n_dim [random_state])</target>
        </trans-unit>
        <trans-unit id="eb3197331c002949b36f41ef22b0b729d9522058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt;&lt;code&gt;datasets.make_swiss_roll&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt; &lt;code&gt;datasets.make_swiss_roll&lt;/code&gt; &lt;/a&gt; ([N_SAMPLES 노이즈, ...])</target>
        </trans-unit>
        <trans-unit id="9ec837732d011d88101cbf5a7698429b3c1e0d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.mldata_filename#sklearn.datasets.mldata_filename&quot;&gt;&lt;code&gt;datasets.mldata_filename&lt;/code&gt;&lt;/a&gt;(dataname)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.mldata_filename#sklearn.datasets.mldata_filename&quot;&gt;&lt;code&gt;datasets.mldata_filename&lt;/code&gt;&lt;/a&gt;(dataname)</target>
        </trans-unit>
        <trans-unit id="a812c809afea22d8fc58f33e0efb64f78f545418" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dict_learning#sklearn.decomposition.dict_learning&quot;&gt;&lt;code&gt;decomposition.dict_learning&lt;/code&gt;&lt;/a&gt;(X, n_components, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.dict_learning#sklearn.decomposition.dict_learning&quot;&gt; &lt;code&gt;decomposition.dict_learning&lt;/code&gt; &lt;/a&gt; (X, n_components,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="9be9ade43ea6b59fdfb34c8d1a92b5451817fd29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dict_learning_online#sklearn.decomposition.dict_learning_online&quot;&gt;&lt;code&gt;decomposition.dict_learning_online&lt;/code&gt;&lt;/a&gt;(X[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.dict_learning_online#sklearn.decomposition.dict_learning_online&quot;&gt; &lt;code&gt;decomposition.dict_learning_online&lt;/code&gt; &lt;/a&gt; (X [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="44c27a97e10196e776caa1235bcd48381d675fe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;decomposition.DictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;decomposition.DictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e57432ca8ff235deb860474d9f59541f538abd4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.factoranalysis#sklearn.decomposition.FactorAnalysis&quot;&gt;&lt;code&gt;decomposition.FactorAnalysis&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.factoranalysis#sklearn.decomposition.FactorAnalysis&quot;&gt; &lt;code&gt;decomposition.FactorAnalysis&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="89fdb56c5d3c8ab7d274c759eb31a29526a04761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.FastICA&quot;&gt;&lt;code&gt;decomposition.FastICA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.FastICA&quot;&gt; &lt;code&gt;decomposition.FastICA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="708bebad5510ebcfc6b329957c8444785d4dca29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.fastica&quot;&gt;&lt;code&gt;decomposition.fastica&lt;/code&gt;&lt;/a&gt;(X[, n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.fastica&quot;&gt; &lt;code&gt;decomposition.fastica&lt;/code&gt; &lt;/a&gt; (X [, n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c0fd18248e4090019765a49490a5206fc8fb7d52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt;&lt;code&gt;IncrementalPCA&lt;/code&gt;&lt;/a&gt; only stores estimates of component and noise variances, in order update &lt;code&gt;explained_variance_ratio_&lt;/code&gt; incrementally. This is why memory usage depends on the number of samples per batch, rather than the number of samples to be processed in the dataset.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt; &lt;code&gt;IncrementalPCA&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;explained_variance_ratio_&lt;/code&gt; 점진적으로업데이트하기 위해 구성 요소 및 노이즈 분산 추정값 만 저장합니다. 이것이 메모리 사용량이 데이터 세트에서 처리 될 샘플 수가 아닌 배치 당 샘플 수에 의존하는 이유입니다.</target>
        </trans-unit>
        <trans-unit id="6c1cfed6c7e670c560a14821f785f633f24977cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt;&lt;code&gt;decomposition.IncrementalPCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt; &lt;code&gt;decomposition.IncrementalPCA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="cc69f4fdb72950073daa1c077872bb083e369489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt; is an extension of PCA which achieves non-linear dimensionality reduction through the use of kernels (see &lt;a href=&quot;metrics#metrics&quot;&gt;Pairwise metrics, Affinities and Kernels&lt;/a&gt;). It has many applications including denoising, compression and structured prediction (kernel dependency estimation). &lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt; supports both &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;inverse_transform&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt; &lt;code&gt;KernelPCA&lt;/code&gt; &lt;/a&gt; 는 PCA의 확장으로, 커널을 사용하여 비선형 차원 축소를 달성합니다 (&lt;a href=&quot;metrics#metrics&quot;&gt; Pairwise Metrics, Affinities and Kernels 참조&lt;/a&gt; ). 노이즈 제거, 압축 및 구조적 예측 (커널 종속성 추정)을 포함한 많은 응용 프로그램이 있습니다. &lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt; &lt;code&gt;KernelPCA&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;transform&lt;/code&gt; 과 &lt;code&gt;inverse_transform&lt;/code&gt; 을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="060b452a77047e8520f36a02661fdca980722942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;decomposition.KernelPCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt; &lt;code&gt;decomposition.KernelPCA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c02b142b6de2044a18790219e6d4465348b2d2e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; also implements &lt;code&gt;partial_fit&lt;/code&gt; method. This is used when data can be fetched sequentially.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt; &lt;code&gt;LatentDirichletAllocation&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;partial_fit&lt;/code&gt; 메소드도 구현합니다. 데이터를 순차적으로 가져올 수있는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="df335eec147a3e2f594ac269626ffcc0f8b6c9f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; implements online variational Bayes algorithm and supports both online and batch update method. While batch method updates variational variables after each full pass through the data, online method updates variational variables from mini-batch data points.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt; &lt;code&gt;LatentDirichletAllocation&lt;/code&gt; &lt;/a&gt; 은 온라인 변형 베이 즈 알고리즘을 구현하고 온라인 및 배치 업데이트 방법을 모두 지원합니다. 배치 방법이 각 데이터를 완전히 통과 한 후 변형 변수를 업데이트하는 반면 온라인 방법은 미니 배치 데이터 포인트에서 변형 변수를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ce8cdf4ae84caa888a8e0fc518a21bf80641ac6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; implements the online variational Bayes algorithm and supports both online and batch update methods. While the batch method updates variational variables after each full pass through the data, the online method updates variational variables from mini-batch data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5154be2f3f9c6c44355a9117558d026d0e25c4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;decomposition.LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;decomposition.LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="42ca6aa072ad1c3f8e5f3803e56f82e76b95fb55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt; implements a faster, but less accurate version of the dictionary learning algorithm that is better suited for large datasets.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt; &lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt; &lt;/a&gt; 은 대규모 데이터 세트에 더 적합한 사전 학습 알고리즘의 더 빠르지 만 정확도가 낮은 버전을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="33b8edd5885663a6750603a5607907b53f396a79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;decomposition.MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;decomposition.MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6daead0e12971443542eba8ba091fed2d6f4e56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;decomposition.MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;decomposition.MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b44e0ec3380a1234a43390f5148b42951542558a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can also be initialized with correctly scaled random non-negative matrices by setting &lt;code&gt;init=&quot;random&quot;&lt;/code&gt;. An integer seed or a &lt;code&gt;RandomState&lt;/code&gt; can also be passed to &lt;code&gt;random_state&lt;/code&gt; to control reproducibility.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; &lt;code&gt;init=&quot;random&quot;&lt;/code&gt; 을 설정하여 NMF 를 음의 크기가 아닌 임의의 음수 행렬로 초기화 할 수도 있습니다. 정수 시드 또는 &lt;code&gt;RandomState&lt;/code&gt; 를 &lt;code&gt;random_state&lt;/code&gt; 로전달하여재현성을 제어할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6b72d362a1cf9cd076e61508a11370d7e2d7d4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; implements two solvers, using Coordinate Descent (&amp;lsquo;cd&amp;rsquo;) &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;5&lt;/a&gt;, and Multiplicative Update (&amp;lsquo;mu&amp;rsquo;) &lt;a href=&quot;#id15&quot; id=&quot;id10&quot;&gt;6&lt;/a&gt;. The &amp;lsquo;mu&amp;rsquo; solver can optimize every beta-divergence, including of course the Frobenius norm (\(\beta=2\)), the (generalized) Kullback-Leibler divergence (\(\beta=1\)) and the Itakura-Saito divergence (\(\beta=0\)). Note that for \(\beta \in (1; 2)\), the &amp;lsquo;mu&amp;rsquo; solver is significantly faster than for other values of \(\beta\). Note also that with a negative (or 0, i.e. &amp;lsquo;itakura-saito&amp;rsquo;) \(\beta\), the input matrix cannot contain zero values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2eac41caca70f78264e445fd358031043da4b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; implements two solvers, using Coordinate Descent (&amp;lsquo;cd&amp;rsquo;) &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;, and Multiplicative Update (&amp;lsquo;mu&amp;rsquo;) &lt;a href=&quot;#id15&quot; id=&quot;id10&quot;&gt;[6]&lt;/a&gt;. The &amp;lsquo;mu&amp;rsquo; solver can optimize every beta-divergence, including of course the Frobenius norm (\(\beta=2\)), the (generalized) Kullback-Leibler divergence (\(\beta=1\)) and the Itakura-Saito divergence (\(\beta=0\)). Note that for \(\beta \in (1; 2)\), the &amp;lsquo;mu&amp;rsquo; solver is significantly faster than for other values of \(\beta\). Note also that with a negative (or 0, i.e. &amp;lsquo;itakura-saito&amp;rsquo;) \(\beta\), the input matrix cannot contain zero values.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; 는 Coordinate Descent ( 'cd')&lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt; [5]&lt;/a&gt; 및 Multiplicative Update ( 'mu')&lt;a href=&quot;#id15&quot; id=&quot;id10&quot;&gt; [6]을&lt;/a&gt; 사용하여 두 가지 솔버를 구현합니다. 'mu'솔버는 물론 Frobenius 규범 (\ (\ beta = 2 \)), (일반화 된) Kullback-Leibler 분기 (\ (\ beta = 1 \)) 및 Itakura를 포함하여 모든 베타 분기를 최적화 할 수 있습니다. -사이토 발산 (\ (\ beta = 0 \)). \ (\ beta \ in (1; 2) \)의 경우 'mu'솔버는 \ (\ beta \)의 다른 값보다 훨씬 빠릅니다. 또한 음수 (또는 0, 즉 'itakura-saito') \ (\ beta \)를 사용하면 입력 행렬에 0 값을 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0239fb64ccb93a653f3240be9977c15c8d65c8f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; regularizes both W and H. The public function &lt;a href=&quot;generated/sklearn.decomposition.non_negative_factorization#sklearn.decomposition.non_negative_factorization&quot;&gt;&lt;code&gt;non_negative_factorization&lt;/code&gt;&lt;/a&gt; allows a finer control through the &lt;code&gt;regularization&lt;/code&gt; attribute, and may regularize only W, only H, or both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e6b4cbb7054f0d89862ee0c8059d8402bd2761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; regularizes both W and H. The public function &lt;code&gt;non_negative_factorization&lt;/code&gt; allows a finer control through the &lt;code&gt;regularization&lt;/code&gt; attribute, and may regularize only W, only H, or both.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; 는 W와 H를 정규화합니다. public 함수 &lt;code&gt;non_negative_factorization&lt;/code&gt; 은 &lt;code&gt;regularization&lt;/code&gt; 속성을통해보다 세밀한 제어를 허용하며W 만, H 만 또는 둘 다를 정규화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d888190d27a28c44172db68ee22a07106edcee72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt; is an alternative approach to decomposition that assumes that the data and the components are non-negative. &lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can be plugged in instead of &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt; or its variants, in the cases where the data matrix does not contain negative values. It finds a decomposition of samples \(X\) into two matrices \(W\) and \(H\) of non-negative elements, by optimizing the distance \(d\) between \(X\) and the matrix product \(WH\). The most widely used distance function is the squared Frobenius norm, which is an obvious extension of the Euclidean norm to matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a81f1e169716dc98f9e4004fb1420aecb4816b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; is an alternative approach to decomposition that assumes that the data and the components are non-negative. &lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can be plugged in instead of &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt; or its variants, in the cases where the data matrix does not contain negative values. It finds a decomposition of samples \(X\) into two matrices \(W\) and \(H\) of non-negative elements, by optimizing the distance \(d\) between \(X\) and the matrix product \(WH\). The most widely used distance function is the squared Frobenius norm, which is an obvious extension of the Euclidean norm to matrices:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt; [1]&lt;/a&gt; 은 데이터와 구성 요소가 음이 아닌 것으로 가정하는 분해에 대한 대체 접근법입니다. 데이터 매트릭스에 음수 값이 포함되지 않은 경우&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;PCA&lt;/code&gt; &lt;/a&gt; 또는 해당 변형대신&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; 를 꽂을 수 있습니다. \ (X \)와 행렬 곱 사이의 거리 \ (d \)를 최적화하여 샘플 \ (X \)가 음이 아닌 요소의 두 행렬 \ (W \) 및 \ (H \)로 분해되는 것을 찾습니다. \ (WH \). 가장 널리 사용되는 거리 함수는 제곱 법 Frobenius 규범으로, 유클리드 규범을 행렬로 확장 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="4cbae39e490f6cdaa6503a3909b02cf72fa29e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;decomposition.NMF&lt;/code&gt;&lt;/a&gt;([n_components, init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;decomposition.NMF&lt;/code&gt; &lt;/a&gt; ([n_components, init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8542cf6dfefe8b72df26695e7434715e9ad310b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.non_negative_factorization#sklearn.decomposition.non_negative_factorization&quot;&gt;&lt;code&gt;decomposition.non_negative_factorization&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.non_negative_factorization#sklearn.decomposition.non_negative_factorization&quot;&gt;&lt;code&gt;decomposition.non_negative_factorization&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4542c2753c4b7005d0f16896f18d83e22721661a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;decomposition.PCA&lt;/code&gt;&lt;/a&gt; looks for a combination of features that capture well the variance of the original features. See &lt;a href=&quot;decomposition#decompositions&quot;&gt;Decomposing signals in components (matrix factorization problems)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;decomposition.PCA&lt;/code&gt; &lt;/a&gt; 는 원래 기능의 분산을 잘 캡처하는 기능의 조합을 찾습니다.&lt;a href=&quot;decomposition#decompositions&quot;&gt; 컴포넌트에서 신호 분해 (매트릭스 인수 분해 문제)를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b3ff87d58deba7d232d1a035d3623b38a53db1e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;decomposition.PCA&lt;/code&gt;&lt;/a&gt;([n_components, copy, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;decomposition.PCA&lt;/code&gt; &lt;/a&gt; ([n_components, 사본,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b222dfa4570f9064c89e87c18d55c61f97f1c5b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;(X, dictionary, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e06fd2df13ff51efd3e00b91a2c8a2ed25d85b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;(X, dictionary[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt; &lt;code&gt;decomposition.sparse_encode&lt;/code&gt; &lt;/a&gt; (X, 사전 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="51c295fa8ef1a7bc7688b806e4493bbe0eba8614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;decomposition.SparseCoder&lt;/code&gt;&lt;/a&gt;(dictionary, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4900c4f7b4a921ee0574be2a1923586617b1cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;decomposition.SparseCoder&lt;/code&gt;&lt;/a&gt;(dictionary[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt; &lt;code&gt;decomposition.SparseCoder&lt;/code&gt; &lt;/a&gt; (사전 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2b142b7e076ab502ceaed3f20c836f800a6f7f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt; is a variant of PCA, with the goal of extracting the set of sparse components that best reconstruct the data.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt; &lt;code&gt;SparsePCA&lt;/code&gt; &lt;/a&gt; 는 PCA의 변형으로, 데이터를 가장 잘 재구성하는 희소 구성 요소 세트를 추출하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="1372bb96a5791b626dc2680095893e3f826d0c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;decomposition.SparsePCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt; &lt;code&gt;decomposition.SparsePCA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ef66c9fef15448e6d22ca354a6caa20721a0e489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; implements a variant of singular value decomposition (SVD) that only computes the \(k\) largest singular values, where \(k\) is a user-specified parameter.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;TruncatedSVD&lt;/code&gt; &lt;/a&gt; 는 \ (k \) 가장 큰 특이 값 만 계산하는 단일 값 분해 (SVD)의 변형을 구현합니다. 여기서 \ (k \)는 사용자 지정 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="c4a8b3ac8fbeff90fb497d72e9e50ecae0bc6bdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, but differs in that it works on sample matrices \(X\) directly instead of their covariance matrices. When the columnwise (per-feature) means of \(X\) are subtracted from the feature values, truncated SVD on the resulting matrix is equivalent to PCA. In practical terms, this means that the &lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; transformer accepts &lt;code&gt;scipy.sparse&lt;/code&gt; matrices without the need to densify them, as densifying may fill up memory even for medium-sized document collections.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;TruncatedSVD&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;PCA&lt;/code&gt; &lt;/a&gt; 와 매우 유사하지만 공분산 행렬 대신 샘플 행렬 \ (X \)에서 직접 작동한다는 점이 다릅니다. 피처 값에서 \ (X \)의 열별 (기능별) 평균을 빼면 결과 행렬에서 잘린 SVD는 PCA와 같습니다. 실제로 이는&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;TruncatedSVD&lt;/code&gt; &lt;/a&gt; 변환기가 밀도를 높일 필요없이 &lt;code&gt;scipy.sparse&lt;/code&gt; 매트릭스를수용한다는 것을 의미합니다.밀도를 높이면 중간 크기의 문서 수집에도 메모리를 채울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca87752400b0688ebb3f650c7b8103a92e19938d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, but differs in that the matrix \(X\) does not need to be centered. When the columnwise (per-feature) means of \(X\) are subtracted from the feature values, truncated SVD on the resulting matrix is equivalent to PCA. In practical terms, this means that the &lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; transformer accepts &lt;code&gt;scipy.sparse&lt;/code&gt; matrices without the need to densify them, as densifying may fill up memory even for medium-sized document collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076a7222294c7a32114d77a711ae0bbe2cd5b125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;decomposition.TruncatedSVD&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;decomposition.TruncatedSVD&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="75ea132af6a874f02129ad9d0e923cde9de69c1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt; can be used to perform supervised dimensionality reduction, by projecting the input data to a linear subspace consisting of the directions which maximize the separation between classes (in a precise sense discussed in the mathematics section below). The dimension of the output is necessarily less than the number of classes, so this is in general a rather strong dimensionality reduction, and only makes sense in a multiclass setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcd71cf475fe554229b8de9346d3227498e3580" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt; can be used to perform supervised dimensionality reduction, by projecting the input data to a linear subspace consisting of the directions which maximize the separation between classes (in a precise sense discussed in the mathematics section below). The dimension of the output is necessarily less than the number of classes, so this is, in general, a rather strong dimensionality reduction, and only makes sense in a multiclass setting.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt; &lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt; &lt;/a&gt; 는 입력 데이터를 클래스 간 분리를 최대화하는 방향으로 구성된 선형 부분 공간에 투영하여 (아래 수학 섹션에서 논의 된 정확한 의미로) 감독 된 차원 축소를 수행하는 데 사용할 수 있습니다. 출력의 차원은 반드시 클래스 수보다 작으므로 일반적으로 다소 강력한 차원 축소이며 멀티 클래스 설정에서만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="009c9114f5641cfb5323d60b72119372317a8d5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="49ad3b1ba031d7faaa2d40419354e1bd00f8b1b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="92459bb834ef32fcd810e86f53556ad4cc240ab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="55dc76ca3044e92c1f0a818b4ef781332a2ce07a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="663572b300aee95337cc57368a0c0d7edc3be238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyclassifier#sklearn.dummy.DummyClassifier&quot;&gt;&lt;code&gt;dummy.DummyClassifier&lt;/code&gt;&lt;/a&gt;(*[, strategy, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023b98a9e14e40a63c85b5fdc9a204506623f507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyclassifier#sklearn.dummy.DummyClassifier&quot;&gt;&lt;code&gt;dummy.DummyClassifier&lt;/code&gt;&lt;/a&gt;([strategy, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.dummy.dummyclassifier#sklearn.dummy.DummyClassifier&quot;&gt; &lt;code&gt;dummy.DummyClassifier&lt;/code&gt; &lt;/a&gt; ([전략,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d547ddcd36f9bd9a3f60c4035b99ffcb5ff12290" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;DummyRegressor&lt;/code&gt;&lt;/a&gt; also implements four simple rules of thumb for regression:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt; &lt;code&gt;DummyRegressor&lt;/code&gt; &lt;/a&gt; 는 또한 회귀를위한 4 가지 간단한 경험 법칙을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="a43cb4522464b684d748d8c36095d4703ed1cc93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;dummy.DummyRegressor&lt;/code&gt;&lt;/a&gt;(*[, strategy, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6226ae362dfae9634bfc6cf33c89068d0fc9af2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;dummy.DummyRegressor&lt;/code&gt;&lt;/a&gt;([strategy, constant, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt; &lt;code&gt;dummy.DummyRegressor&lt;/code&gt; &lt;/a&gt; ([전략, 상수,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="82c1e2113f637cb8a643843dafae489d7dbc9230" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;ensemble.AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;ensemble.AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b8d637143b06af3f9df695d14f47bc3eeac2df01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.adaboostregressor#sklearn.ensemble.AdaBoostRegressor&quot;&gt;&lt;code&gt;ensemble.AdaBoostRegressor&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.adaboostregressor#sklearn.ensemble.AdaBoostRegressor&quot;&gt; &lt;code&gt;ensemble.AdaBoostRegressor&lt;/code&gt; &lt;/a&gt; ([base_estimator,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e6df8a2a146f833477378aea6f6629fc96e513e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.baggingclassifier#sklearn.ensemble.BaggingClassifier&quot;&gt;&lt;code&gt;ensemble.BaggingClassifier&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.baggingclassifier#sklearn.ensemble.BaggingClassifier&quot;&gt; &lt;code&gt;ensemble.BaggingClassifier&lt;/code&gt; &lt;/a&gt; ([base_estimator,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3b7431316440cad4fa7fd79c2adfd1181c3daf8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.baggingregressor#sklearn.ensemble.BaggingRegressor&quot;&gt;&lt;code&gt;ensemble.BaggingRegressor&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.baggingregressor#sklearn.ensemble.BaggingRegressor&quot;&gt; &lt;code&gt;ensemble.BaggingRegressor&lt;/code&gt; &lt;/a&gt; ([base_estimator,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d6ca4bbb93ffc03665651d9d7a8083870456167e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8af339fe35f937cd5948e61d0d233ab708b99768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;ensemble.ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;([n_estimators, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt; &lt;code&gt;ensemble.ExtraTreesRegressor&lt;/code&gt; &lt;/a&gt; ([n_estimators,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="55ebba809208e0f1fa839430f154a89d63d5e9e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; supports both binary and multi-class classification. The following example shows how to fit a gradient boosting classifier with 100 decision stumps as weak learners:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt; &lt;code&gt;GradientBoostingClassifier&lt;/code&gt; &lt;/a&gt; 는 이진 및 다중 클래스 분류를 모두 지원합니다. 다음 예제는 약한 학습자로서 100 개의 의사 결정 그루터기를 가진 그라디언트 부스팅 분류기에 맞추는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="dc57e29c62bd82cab79d3f2a2294745e23d9ad8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0d80858c341384175b5febb880a235761d73cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;([loss, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt; &lt;code&gt;ensemble.GradientBoostingClassifier&lt;/code&gt; &lt;/a&gt; ([손실,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e2145fa80e48b64b35ee442565f0a1c9c4d93c80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; supports a number of &lt;a href=&quot;#gradient-boosting-loss&quot;&gt;different loss functions&lt;/a&gt; for regression which can be specified via the argument &lt;code&gt;loss&lt;/code&gt;; the default loss function for regression is least squares (&lt;code&gt;'ls'&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt; &lt;code&gt;GradientBoostingRegressor&lt;/code&gt; &lt;/a&gt; 는인수 &lt;code&gt;loss&lt;/code&gt; 통해 지정할 수있는 회귀에 대한&lt;a href=&quot;#gradient-boosting-loss&quot;&gt; 여러 가지 손실 함수&lt;/a&gt; 를지원합니다. 회귀에 대한 기본 손실 함수는 최소 제곱 ( &lt;code&gt;'ls'&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="8b606202100c346d77d9fdcbb0da3725079e2129" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3292d65811c4e54b9dd5f83951dac41b17f1d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;([loss, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt; &lt;code&gt;ensemble.GradientBoostingRegressor&lt;/code&gt; &lt;/a&gt; ([손실,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6347de2567b89b8422e3b6593e966a533343aad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; have built-in support for missing values (NaNs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd6ededde3dd4c511bf3b2780a2d4ea3f1d7d86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; have implementations that use OpenMP for parallelization through Cython. For more details on how to control the number of threads, please refer to our &lt;a href=&quot;computing#parallelism&quot;&gt;Parallelism&lt;/a&gt; notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcb2249b01c0eaeb3d9fae4455b641cb6262509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; sample support weights during &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-fit&quot;&gt;fit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba9c257639d086463f46653b85647dabceef9fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;, in contrast, do not require sorting the feature values and instead use a data-structure called a histogram, where the samples are implicitly ordered. Building a histogram has a \(\mathcal{O}(n)\) complexity, so the node splitting procedure has a \(\mathcal{O}(n_\text{features} \times n)\) complexity, much smaller than the previous one. In addition, instead of considering \(n\) split points, we here consider only &lt;code&gt;max_bins&lt;/code&gt; split points, which is much smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c615f4c76df25282cf9dc7bd7ce02a4e20241af3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f6e7f9395d0ec16b249525cf070d616a04ccd2a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fa333d4534beb2c3ebd4e0e84f60cc53a45186dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; perform reasonably well on the data sets considered here. The &lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt;&lt;code&gt;svm.OneClassSVM&lt;/code&gt;&lt;/a&gt; is known to be sensitive to outliers and thus does not perform very well for outlier detection. Finally, &lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; assumes the data is Gaussian and learns an ellipse. For more details on the different estimators refer to the example &lt;a href=&quot;../auto_examples/miscellaneous/plot_anomaly_comparison#sphx-glr-auto-examples-miscellaneous-plot-anomaly-comparison-py&quot;&gt;Comparing anomaly detection algorithms for outlier detection on toy datasets&lt;/a&gt; and the sections hereunder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d01ef66796cfd668ccf031a639314869d492c68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; perform reasonably well on the data sets considered here. The &lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt;&lt;code&gt;svm.OneClassSVM&lt;/code&gt;&lt;/a&gt; is known to be sensitive to outliers and thus does not perform very well for outlier detection. Finally, &lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; assumes the data is Gaussian and learns an ellipse. For more details on the different estimators refer to the example &lt;a href=&quot;../auto_examples/plot_anomaly_comparison#sphx-glr-auto-examples-plot-anomaly-comparison-py&quot;&gt;Comparing anomaly detection algorithms for outlier detection on toy datasets&lt;/a&gt; and the sections hereunder.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt; &lt;code&gt;ensemble.IsolationForest&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt; &lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt; &lt;/a&gt; 는 여기에서 고려 된 데이터 세트에서 합리적으로 잘 수행됩니다. &lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt; &lt;code&gt;svm.OneClassSVM&lt;/code&gt; 는&lt;/a&gt; 아웃 라이어 검출 잘 수행하지 않는 따라서 특이점에 민감한 것으로 공지되어있다. 마지막으로&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt; &lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt; &lt;/a&gt; .EllipticEnvelope는 데이터가 가우스 인 것으로 가정하고 타원을 학습합니다. 다른 추정기에 대한 자세한 내용은&lt;a href=&quot;../auto_examples/plot_anomaly_comparison#sphx-glr-auto-examples-plot-anomaly-comparison-py&quot;&gt; 장난감 데이터 세트의 이상치 탐지를위한 이상 탐지 알고리즘 비교&lt;/a&gt; 및 아래 섹션을참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8ac2d1879d58bad21403fd5871ac0e593fb2c98e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt;(*[, n_estimators, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5005ace05eb20ea34f91b82c60d4cdb017dc472c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt;([n_estimators, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt; &lt;code&gt;ensemble.IsolationForest&lt;/code&gt; &lt;/a&gt; ([n_estimators,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0186941db443820a1e87db24081e94713229454e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.partial_dependence#sklearn.ensemble.partial_dependence.partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.partial_dependence#sklearn.ensemble.partial_dependence.partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="c231206b3a7c70755877ae081f9c6fa2004e722f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="a9e2e359837f80e06c1c0008e1d0be6ce6eca866" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt; shows the opposite behavior: the histograms show peaks at approximately 0.2 and 0.9 probability, while probabilities close to 0 or 1 are very rare. An explanation for this is given by Niculescu-Mizil and Caruana &lt;a href=&quot;#id4&quot; id=&quot;id1&quot;&gt;[4]&lt;/a&gt;: &amp;ldquo;Methods such as bagging and random forests that average predictions from a base set of models can have difficulty making predictions near 0 and 1 because variance in the underlying base models will bias predictions that should be near zero or one away from these values. Because predictions are restricted to the interval [0,1], errors caused by variance tend to be one-sided near zero and one. For example, if a model should predict p = 0 for a case, the only way bagging can achieve this is if all bagged trees predict zero. If we add noise to the trees that bagging is averaging over, this noise will cause some trees to predict values larger than 0 for this case, thus moving the average prediction of the bagged ensemble away from 0. We observe this effect most strongly with random forests because the base-level trees trained with random forests have relatively high variance due to feature subsetting.&amp;rdquo; As a result, the calibration curve also referred to as the reliability diagram (Wilks 1995 &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[5]&lt;/a&gt;) shows a characteristic sigmoid shape, indicating that the classifier could trust its &amp;ldquo;intuition&amp;rdquo; more and return probabilities closer to 0 or 1 typically.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt; &lt;code&gt;RandomForestClassifier&lt;/code&gt; &lt;/a&gt; 는 반대 동작을 보여줍니다. 히스토그램은 대략 0.2와 0.9의 확률로 피크를 보여 주지만 0 또는 1에 가까운 확률은 매우 드 rare니다. 이에 대한 설명은 Niculescu-Mizil과 Caruana가 제공합니다&lt;a href=&quot;#id4&quot; id=&quot;id1&quot;&gt; [4]&lt;/a&gt;:&amp;ldquo;기본 모델 집합에서 평균 예측을 수행하는 배깅 및 임의 포리스트와 같은 방법은 기본 모델의 분산이 이러한 값에서 0 또는 1에 가까운 예측을 바이어스하기 때문에 0과 1 근처에서 예측하는 데 어려움이있을 수 있습니다. 예측이 구간 [0,1]으로 제한되기 때문에 분산으로 인한 오차는 0과 1에 가까운 편측 경향이 있습니다. 예를 들어, 어떤 경우에 모델이 p = 0을 예측해야하는 경우, bagging이 달성 할 수있는 유일한 방법은 모든 bagging tree가 0을 예측하는 것입니다. 배깅이 평균화되는 트리에 노이즈를 추가하면이 노이즈로 인해 일부 트리에서이 경우 0보다 큰 값을 예측하게되어 배깅 된 앙상블의 평균 예측이 0에서 멀어지게됩니다.임의 포리스트로 훈련 된 기본 수준의 트리는 기능 하위 설정으로 인해 분산이 상대적으로 높기 때문에 임의 포리스트에서이 효과가 가장 강력하게 관찰됩니다.&amp;rdquo; 결과적으로 보정 곡선은 신뢰성 다이어그램이라고도합니다 (Wilks 1995).&lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[5]&lt;/a&gt; )는 특징적인 시그 모이 드 형태를 나타내며, 분류 기가 &quot;직관&quot;을 더 신뢰할 수 있고 확률을 0 또는 1에 더 가깝게 반환 할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8c426aa6ad13ddeef0a3120b753becc7473451f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt; shows the opposite behavior: the histograms show peaks at approximately 0.2 and 0.9 probability, while probabilities close to 0 or 1 are very rare. An explanation for this is given by Niculescu-Mizil and Caruana &lt;a href=&quot;#id6&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;: &amp;ldquo;Methods such as bagging and random forests that average predictions from a base set of models can have difficulty making predictions near 0 and 1 because variance in the underlying base models will bias predictions that should be near zero or one away from these values. Because predictions are restricted to the interval [0,1], errors caused by variance tend to be one-sided near zero and one. For example, if a model should predict p = 0 for a case, the only way bagging can achieve this is if all bagged trees predict zero. If we add noise to the trees that bagging is averaging over, this noise will cause some trees to predict values larger than 0 for this case, thus moving the average prediction of the bagged ensemble away from 0. We observe this effect most strongly with random forests because the base-level trees trained with random forests have relatively high variance due to feature subsetting.&amp;rdquo; As a result, the calibration curve also referred to as the reliability diagram (Wilks 1995 &lt;a href=&quot;#id7&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;) shows a characteristic sigmoid shape, indicating that the classifier could trust its &amp;ldquo;intuition&amp;rdquo; more and return probabilities closer to 0 or 1 typically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c77092b3759936b9746d0950a3566679be2401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;ensemble.RandomForestClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;ensemble.RandomForestClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="21fb13b74ba39bd2ce3b9350b49a8350b5727b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestregressor#sklearn.ensemble.RandomForestRegressor&quot;&gt;&lt;code&gt;ensemble.RandomForestRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestregressor#sklearn.ensemble.RandomForestRegressor&quot;&gt;&lt;code&gt;ensemble.RandomForestRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="115bb0b0e8789ec5dfba7787892fe55d99dc48de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt; implements an unsupervised transformation of the data. Using a forest of completely random trees, &lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt; encodes the data by the indices of the leaves a data point ends up in. This index is then encoded in a one-of-K manner, leading to a high dimensional, sparse binary coding. This coding can be computed very efficiently and can then be used as a basis for other learning tasks. The size and sparsity of the code can be influenced by choosing the number of trees and the maximum depth per tree. For each tree in the ensemble, the coding contains one entry of one. The size of the coding is at most &lt;code&gt;n_estimators * 2
** max_depth&lt;/code&gt;, the maximum number of leaves in the forest.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt; &lt;code&gt;RandomTreesEmbedding&lt;/code&gt; &lt;/a&gt; 은 감독되지 않은 데이터 변환을 구현합니다. &lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt; &lt;code&gt;RandomTreesEmbedding&lt;/code&gt; &lt;/a&gt; 은 완전히 임의의 트리 포리스트를 사용하여데이터 포인트가 끝나는 나뭇잎의 인덱스로 데이터를 인코딩합니다. 그런 다음이 인덱스는 K 방식으로 인코딩되어 높은 차원의 희소 이진 코딩으로 이어집니다. 이 코딩은 매우 효율적으로 계산되어 다른 학습 작업의 기초로 사용될 수 있습니다. 나무의 수와 나무 당 최대 깊이를 선택하면 코드의 크기와 희소성이 영향을받을 수 있습니다. 앙상블의 각 트리에 대해 코딩에는 하나의 항목이 포함됩니다. 코딩의 크기는 최대 &lt;code&gt;n_estimators * 2 ** max_depth&lt;/code&gt; 이며 포리스트의 최대 리프 수입니다.</target>
        </trans-unit>
        <trans-unit id="4c838abc759fc7e678a40f22e5e90127d606e0c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;ensemble.RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;ensemble.RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="301294d6f520f3966d5036eca087b3f24fdc5590" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.stackingclassifier#sklearn.ensemble.StackingClassifier&quot;&gt;&lt;code&gt;ensemble.StackingClassifier&lt;/code&gt;&lt;/a&gt;(estimators[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1947d3378aecfa8f04716442c8123c3a2f41972" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.stackingregressor#sklearn.ensemble.StackingRegressor&quot;&gt;&lt;code&gt;ensemble.StackingRegressor&lt;/code&gt;&lt;/a&gt;(estimators[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aab8932924c8b34e3cb491d79e12fd830e628da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt;&lt;code&gt;ensemble.VotingClassifier&lt;/code&gt;&lt;/a&gt;(estimators, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5377d8aa988bfd357764fb7db1bd5f152e7842ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt;&lt;code&gt;ensemble.VotingClassifier&lt;/code&gt;&lt;/a&gt;(estimators[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt; &lt;code&gt;ensemble.VotingClassifier&lt;/code&gt; &lt;/a&gt; (추정자 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d2eebddcd41a4da45d2e1bc2db5e4745a5f9b8a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.votingregressor#sklearn.ensemble.VotingRegressor&quot;&gt;&lt;code&gt;ensemble.VotingRegressor&lt;/code&gt;&lt;/a&gt;(estimators, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c5afb094ce641820cdbeb685a54a2c66fb93d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;DictVectorizer&lt;/code&gt;&lt;/a&gt; implements what is called one-of-K or &amp;ldquo;one-hot&amp;rdquo; coding for categorical (aka nominal, discrete) features. Categorical features are &amp;ldquo;attribute-value&amp;rdquo; pairs where the value is restricted to a list of discrete of possibilities without ordering (e.g. topic identifiers, types of objects, tags, names&amp;hellip;).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt; &lt;code&gt;DictVectorizer&lt;/code&gt; &lt;/a&gt; 는 범주 형 (일명 공칭, 불연속) 기능을 위해 one-of-K 또는 &quot;one-hot&quot;코딩을 구현합니다. 범주 형 기능은 &quot;속성-값&quot;쌍으로, 값은 순서없이 개별 가능성 목록 (예 : 주제 식별자, 객체 유형, 태그, 이름 등)으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="1cb5bed40da3090a6151533941fc8790bf25ca2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;DictVectorizer&lt;/code&gt;&lt;/a&gt; is also a useful representation transformation for training sequence classifiers in Natural Language Processing models that typically work by extracting feature windows around a particular word of interest.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt; &lt;code&gt;DictVectorizer&lt;/code&gt; &lt;/a&gt; 는 일반적으로 특정 관심 단어 주위의 기능 창을 추출하여 작동하는 자연어 처리 모델의 시퀀스 분류자를 훈련시키는 데 유용한 표현 변환입니다.</target>
        </trans-unit>
        <trans-unit id="68d0da585c170ca4eb6ffc677953d8541eb3cdce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;feature_extraction.DictVectorizer&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31032ccc123c3d4eceef5becabb4a2f3fb8de6e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;feature_extraction.DictVectorizer&lt;/code&gt;&lt;/a&gt;([dtype, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt; &lt;code&gt;feature_extraction.DictVectorizer&lt;/code&gt; &lt;/a&gt; ([dtype,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f8d4b6eea25406e64622efb691b2b08de3f5637e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; accepts either mappings (like Python&amp;rsquo;s &lt;code&gt;dict&lt;/code&gt; and its variants in the &lt;code&gt;collections&lt;/code&gt; module), &lt;code&gt;(feature, value)&lt;/code&gt; pairs, or strings, depending on the constructor parameter &lt;code&gt;input_type&lt;/code&gt;. Mapping are treated as lists of &lt;code&gt;(feature, value)&lt;/code&gt; pairs, while single strings have an implicit value of 1, so &lt;code&gt;['feat1', 'feat2', 'feat3']&lt;/code&gt; is interpreted as &lt;code&gt;[('feat1', 1), ('feat2', 1), ('feat3', 1)]&lt;/code&gt;. If a single feature occurs multiple times in a sample, the associated values will be summed (so &lt;code&gt;('feat', 2)&lt;/code&gt; and &lt;code&gt;('feat', 3.5)&lt;/code&gt; become &lt;code&gt;('feat', 5.5)&lt;/code&gt;). The output from &lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; is always a &lt;code&gt;scipy.sparse&lt;/code&gt; matrix in the CSR format.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt; &lt;code&gt;FeatureHasher&lt;/code&gt; &lt;/a&gt; 는생성자 매개 변수 &lt;code&gt;input_type&lt;/code&gt; 에 따라매핑 (Python의 &lt;code&gt;dict&lt;/code&gt; 및 &lt;code&gt;collections&lt;/code&gt; 모듈의 변형과같은), &lt;code&gt;(feature, value)&lt;/code&gt; 쌍 또는 문자열을 허용합니다. 매핑은 &lt;code&gt;(feature, value)&lt;/code&gt; 쌍의목록으로 취급되는반면 단일 문자열은 1의 암시 적 값을 가지므로 &lt;code&gt;['feat1', 'feat2', 'feat3']&lt;/code&gt; 은 &lt;code&gt;[('feat1', 1), ('feat2', 1), ('feat3', 1)]&lt;/code&gt; . 샘플에서 단일 기능이 여러 번 발생하면 관련 값이 합산됩니다 ( &lt;code&gt;('feat', 2)&lt;/code&gt; 및 &lt;code&gt;('feat', 3.5)&lt;/code&gt; 는 &lt;code&gt;('feat', 5.5)&lt;/code&gt; 됩니다.&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt; &lt;code&gt;FeatureHasher&lt;/code&gt; &lt;/a&gt; 는 항상CSR 형식의 &lt;code&gt;scipy.sparse&lt;/code&gt; 매트릭스입니다.</target>
        </trans-unit>
        <trans-unit id="db9aaad1a1da2a8d32410e23b6dd0e00cbe36efc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; uses the signed 32-bit variant of MurmurHash3. As a result (and because of limitations in &lt;code&gt;scipy.sparse&lt;/code&gt;), the maximum number of features supported is currently \(2^{31} - 1\).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt; &lt;code&gt;FeatureHasher&lt;/code&gt; &lt;/a&gt; 는 서명 된 32 비트 변종 MurmurHash3을 사용합니다. 결과적으로 ( &lt;code&gt;scipy.sparse&lt;/code&gt; 의 제한 사항으로 인해) 지원되는 최대 기능 수는 현재 \ (2 ^ {31}-1 \)입니다.</target>
        </trans-unit>
        <trans-unit id="fc55db510f56d523f5334aab3007bd0c7d1781c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;feature_extraction.FeatureHasher&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;feature_extraction.FeatureHasher&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1124a3003490415eb6fc8142a05b80e8eec75ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.extract_patches_2d#sklearn.feature_extraction.image.extract_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.extract_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.extract_patches_2d#sklearn.feature_extraction.image.extract_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.extract_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="a5b3f99ce04c35a2339a337b235b5e007a78565a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.grid_to_graph#sklearn.feature_extraction.image.grid_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.grid_to_graph&lt;/code&gt;&lt;/a&gt;(n_x, n_y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.grid_to_graph#sklearn.feature_extraction.image.grid_to_graph&quot;&gt; &lt;code&gt;feature_extraction.image.grid_to_graph&lt;/code&gt; &lt;/a&gt; (n_x, n_y)</target>
        </trans-unit>
        <trans-unit id="6e4d009643759dac294e10fb3dd9bfecde30ba51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.img_to_graph#sklearn.feature_extraction.image.img_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.img_to_graph&lt;/code&gt;&lt;/a&gt;(img, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c451e02ce81d485b64b1947b1884eac30f8ddca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.img_to_graph#sklearn.feature_extraction.image.img_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.img_to_graph&lt;/code&gt;&lt;/a&gt;(img[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.img_to_graph#sklearn.feature_extraction.image.img_to_graph&quot;&gt; &lt;code&gt;feature_extraction.image.img_to_graph&lt;/code&gt; &lt;/a&gt; (img [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bf4d0dec18426fecb9499deaf84af9d90611cb72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2343a5863471d5d816b16b2868de6e2c88634b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2c0b77d575d98d27d89d05faf98dd25557e62039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d#sklearn.feature_extraction.image.reconstruct_from_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d#sklearn.feature_extraction.image.reconstruct_from_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="7a79ef532e02e2f7573dad6a21a58025af09a1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; implements both tokenization and occurrence counting in a single class:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;CountVectorizer&lt;/code&gt; &lt;/a&gt; 는 단일 클래스에서 토큰 화 및 발생 횟수를 모두 구현합니다.</target>
        </trans-unit>
        <trans-unit id="45c180df83c4445b9b4f257595762271b0ff7353" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2785d8676c2894c904e7f89c755882ec10a0e28b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c8a9a5abc92f6b34886d183abd578352946b395f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="49966a80db07f49687fe8a8b70f5eb636c947257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="95e611be95d65a8074d6762b14615ee9b6899638" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="f236e80d783ed335ff2075120a87cec20a2756c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bacf1c6fddb7116c2aeac8ddccfdeccc7d3b140f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b6618e4aba300b78b9bbe54e69257ecee27565" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="adf918669c622f017287b914b82a05012185f241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.chi2#sklearn.feature_selection.chi2&quot;&gt;&lt;code&gt;feature_selection.chi2&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.chi2#sklearn.feature_selection.chi2&quot;&gt; &lt;code&gt;feature_selection.chi2&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="f3a9375d86406c8d00263a91ba831e0187caf7b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_classif#sklearn.feature_selection.f_classif&quot;&gt;&lt;code&gt;feature_selection.f_classif&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.f_classif#sklearn.feature_selection.f_classif&quot;&gt; &lt;code&gt;feature_selection.f_classif&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="529d60cc8ca22431f06e54c5e472e798ddf20336" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_regression#sklearn.feature_selection.f_regression&quot;&gt;&lt;code&gt;feature_selection.f_regression&lt;/code&gt;&lt;/a&gt;(X, y, *[, center])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d8c6e0fb058cfe37dfaa9529b5511abdfc643e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_regression#sklearn.feature_selection.f_regression&quot;&gt;&lt;code&gt;feature_selection.f_regression&lt;/code&gt;&lt;/a&gt;(X, y[, center])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.f_regression#sklearn.feature_selection.f_regression&quot;&gt; &lt;code&gt;feature_selection.f_regression&lt;/code&gt; &lt;/a&gt; (X, y [, 중심])</target>
        </trans-unit>
        <trans-unit id="a5b29bb7ffb4ed8ecc8f37e367bb4c2d426d8b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt; allows to perform univariate feature selection with a configurable strategy. This allows to select the best univariate selection strategy with hyper-parameter search estimator.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt; &lt;code&gt;GenericUnivariateSelect&lt;/code&gt; 를&lt;/a&gt; 사용하면 구성 가능한 전략으로 일 변량 기능 선택을 수행 할 수 있습니다. 이를 통해 하이퍼 파라미터 검색 추정기로 최상의 일 변량 선택 전략을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb177f1244583ebcdb5ecff0faea0809c9952106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;feature_selection.GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;feature_selection.GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b3b27214f2f1014b3a0abbe46bc3c9bf4002b1cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_classif#sklearn.feature_selection.mutual_info_classif&quot;&gt;&lt;code&gt;feature_selection.mutual_info_classif&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_classif#sklearn.feature_selection.mutual_info_classif&quot;&gt; &lt;code&gt;feature_selection.mutual_info_classif&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="14f97ae73b1b992e2fa2e3834d120236fa32399f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_classif#sklearn.feature_selection.mutual_info_classif&quot;&gt;&lt;code&gt;feature_selection.mutual_info_classif&lt;/code&gt;&lt;/a&gt;(X, y, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44310524c1dadee19954a73a7fc6e03f4abc6027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_regression#sklearn.feature_selection.mutual_info_regression&quot;&gt;&lt;code&gt;feature_selection.mutual_info_regression&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_regression#sklearn.feature_selection.mutual_info_regression&quot;&gt; &lt;code&gt;feature_selection.mutual_info_regression&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="b6127922745000b05458a137e934b65823c8a5a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_regression#sklearn.feature_selection.mutual_info_regression&quot;&gt;&lt;code&gt;feature_selection.mutual_info_regression&lt;/code&gt;&lt;/a&gt;(X, y, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f2db0bdfc0f5e300b0702197f1d0f34f55c6c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfe#sklearn.feature_selection.RFE&quot;&gt;&lt;code&gt;feature_selection.RFE&lt;/code&gt;&lt;/a&gt;(estimator, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45710fb9d2236142417859a2ba412cbb1b418d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfe#sklearn.feature_selection.RFE&quot;&gt;&lt;code&gt;feature_selection.RFE&lt;/code&gt;&lt;/a&gt;(estimator[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.rfe#sklearn.feature_selection.RFE&quot;&gt; &lt;code&gt;feature_selection.RFE&lt;/code&gt; &lt;/a&gt; (추정자 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d80f02fa02daf62a11de75741cf7807671e36c0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;RFECV&lt;/code&gt;&lt;/a&gt; performs RFE in a cross-validation loop to find the optimal number of features.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt; &lt;code&gt;RFECV&lt;/code&gt; &lt;/a&gt; 는 교차 유효성 검사 루프에서 RFE를 수행하여 최적의 기능 수를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="60b79c3666b9862d16b515ee70a282ad32d77243" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;feature_selection.RFECV&lt;/code&gt;&lt;/a&gt;(estimator, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ee82952a2a24bc5f25f463ea2b210729661d48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;feature_selection.RFECV&lt;/code&gt;&lt;/a&gt;(estimator[, step, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt; &lt;code&gt;feature_selection.RFECV&lt;/code&gt; &lt;/a&gt; (추정기 [, 단계,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="dc81b59ed4ab18d9d5357dc59d38327a901e4116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfdr#sklearn.feature_selection.SelectFdr&quot;&gt;&lt;code&gt;feature_selection.SelectFdr&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfdr#sklearn.feature_selection.SelectFdr&quot;&gt; &lt;code&gt;feature_selection.SelectFdr&lt;/code&gt; &lt;/a&gt; ([score_func, alpha])</target>
        </trans-unit>
        <trans-unit id="e9891455be9ff2bd2a35731dd6db00381fca2bf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfpr#sklearn.feature_selection.SelectFpr&quot;&gt;&lt;code&gt;feature_selection.SelectFpr&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfpr#sklearn.feature_selection.SelectFpr&quot;&gt; &lt;code&gt;feature_selection.SelectFpr&lt;/code&gt; &lt;/a&gt; ([score_func, alpha])</target>
        </trans-unit>
        <trans-unit id="3c5a0ad12494f3451ae42dda190a45197b1d09e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;SelectFromModel&lt;/code&gt;&lt;/a&gt; is a meta-transformer that can be used along with any estimator that has a &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; attribute after fitting. The features are considered unimportant and removed, if the corresponding &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; values are below the provided &lt;code&gt;threshold&lt;/code&gt; parameter. Apart from specifying the threshold numerically, there are built-in heuristics for finding a threshold using a string argument. Available heuristics are &amp;ldquo;mean&amp;rdquo;, &amp;ldquo;median&amp;rdquo; and float multiples of these like &amp;ldquo;0.1*mean&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt; &lt;code&gt;SelectFromModel&lt;/code&gt; &lt;/a&gt; 은피팅 후 &lt;code&gt;coef_&lt;/code&gt; 또는 &lt;code&gt;feature_importances_&lt;/code&gt; 속성이있는 모든 추정기와 함께 사용할 수있는 메타 변환기입니다. 해당 &lt;code&gt;coef_&lt;/code&gt; 또는 &lt;code&gt;feature_importances_&lt;/code&gt; 값이 제공된 &lt;code&gt;threshold&lt;/code&gt; 매개 변수보다 낮 으면 기능이 중요하지 않은 것으로 간주되어 제거됩니다. 임계 값을 숫자로 지정하는 것 외에도 문자열 인수를 사용하여 임계 값을 찾기위한 내장 휴리스틱이 있습니다. 사용 가능한 휴리스틱은 &quot;평균&quot;, &quot;중앙&quot;및 &quot;0.1 * 평균&quot;과 같은 여러 배수입니다.</target>
        </trans-unit>
        <trans-unit id="33a4062795dd8cb50b238a2c27150afd47933d94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;SelectFromModel&lt;/code&gt;&lt;/a&gt; is a meta-transformer that can be used along with any estimator that has a &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; attribute after fitting. The features are considered unimportant and removed, if the corresponding &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; values are below the provided &lt;code&gt;threshold&lt;/code&gt; parameter. Apart from specifying the threshold numerically, there are built-in heuristics for finding a threshold using a string argument. Available heuristics are &amp;ldquo;mean&amp;rdquo;, &amp;ldquo;median&amp;rdquo; and float multiples of these like &amp;ldquo;0.1*mean&amp;rdquo;. In combination with the &lt;code&gt;threshold&lt;/code&gt; criteria, one can use the &lt;code&gt;max_features&lt;/code&gt; parameter to set a limit on the number of features to select.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec240538d63c3f501a01ff6f2f6ba218f76985e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="ee607a873dfb6232d2b44b51a8cdf59f154a0919" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7b9a1b641d9a650ce5c990c7d827534ce13932" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfwe#sklearn.feature_selection.SelectFwe&quot;&gt;&lt;code&gt;feature_selection.SelectFwe&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfwe#sklearn.feature_selection.SelectFwe&quot;&gt; &lt;code&gt;feature_selection.SelectFwe&lt;/code&gt; &lt;/a&gt; ([score_func, alpha])</target>
        </trans-unit>
        <trans-unit id="69c8010300752bc5d2b22b38562e2114dbdf078a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt;&lt;code&gt;SelectKBest&lt;/code&gt;&lt;/a&gt; removes all but the \(k\) highest scoring features</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt; &lt;code&gt;SelectKBest&lt;/code&gt; &lt;/a&gt; 는 \ (k \) 최고 점수 기능을 제외한 모든 기능을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="bb02fbc4fc44a0c91c89555cbd7cf3d3c98e4979" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt;&lt;code&gt;feature_selection.SelectKBest&lt;/code&gt;&lt;/a&gt;([score_func, k])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt; &lt;code&gt;feature_selection.SelectKBest&lt;/code&gt; &lt;/a&gt; ([score_func, k])</target>
        </trans-unit>
        <trans-unit id="91ba1e6e588ae6ab026f98f6373511731d2b14ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;SelectPercentile&lt;/code&gt;&lt;/a&gt; removes all but a user-specified highest scoring percentage of features</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt; &lt;code&gt;SelectPercentile&lt;/code&gt; &lt;/a&gt; 은 사용자 지정 최고 점수의 기능을 제외한 모든 기능을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="3a60a6417e76fb7a238f6a397baf953ef2956a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;feature_selection.SelectPercentile&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;feature_selection.SelectPercentile&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="044d9493f7a2099e98c2ced40b996e4591896166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;VarianceThreshold&lt;/code&gt;&lt;/a&gt; is a simple baseline approach to feature selection. It removes all features whose variance doesn&amp;rsquo;t meet some threshold. By default, it removes all zero-variance features, i.e. features that have the same value in all samples.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt; &lt;code&gt;VarianceThreshold&lt;/code&gt; &lt;/a&gt; 는 기능 선택에 대한 간단한 기본 접근 방식입니다. 분산이 임계 값을 충족하지 않는 모든 피쳐를 제거합니다. 기본적으로 모든 제로 분산 기능, 즉 모든 샘플에서 동일한 값을 갖는 기능을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7c877666a1ebfd2b4274d66780f0b5307e389891" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;feature_selection.VarianceThreshold&lt;/code&gt;&lt;/a&gt;([threshold])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;feature_selection.VarianceThreshold&lt;/code&gt;&lt;/a&gt;([threshold])</target>
        </trans-unit>
        <trans-unit id="22652dec81acc1283c813305c9271231d930a820" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; supports multi-class classification by performing either one-versus-rest or one-versus-one based training and prediction. In one-versus-rest, one binary Gaussian process classifier is fitted for each class, which is trained to separate this class from the rest. In &amp;ldquo;one_vs_one&amp;rdquo;, one binary Gaussian process classifier is fitted for each pair of classes, which is trained to separate these two classes. The predictions of these binary predictors are combined into multi-class predictions. See the section on &lt;a href=&quot;multiclass#multiclass&quot;&gt;multi-class classification&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt; &lt;code&gt;GaussianProcessClassifier&lt;/code&gt; &lt;/a&gt; 는 일대일 또는 일대일 기반 교육 및 예측을 수행하여 다중 클래스 분류를 지원합니다. 1 대 나머지는 하나의 이진 가우시안 프로세스 분류 기가 각 클래스에 적합하며이 클래스는 나머지 클래스와 분리되도록 훈련됩니다. &amp;ldquo;one_vs_one&amp;rdquo;에서 각 쌍의 클래스에 대해 하나의 이진 가우시안 프로세스 분류 기가 적합하며,이 두 클래스를 분리하도록 훈련됩니다. 이 이진 예측 변수의 예측은 다중 클래스 예측으로 결합됩니다. 자세한 내용은&lt;a href=&quot;multiclass#multiclass&quot;&gt; 멀티 클래스 분류&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fdd56d0834201a119c09d735190ede32d8c1bc7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5322b91eab7af477ef6901ae246a9be2492ce2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; (setting multi_class = &amp;ldquo;one_vs_one&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt; &lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt; &lt;/a&gt; (설정 multi_class =&amp;ldquo;one_vs_one&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="cd08f370b97326c6d08f5f1724e124bfed5dd6a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; (setting multi_class = &amp;ldquo;one_vs_rest&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt; &lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt; &lt;/a&gt; (설정 multi_class =&amp;ldquo;one_vs_rest&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="8de3ee96f5f01d430f020114d18a454a4020262d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessregressor#sklearn.gaussian_process.GaussianProcessRegressor&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessregressor#sklearn.gaussian_process.GaussianProcessRegressor&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2b08588e82fcd327d6b91869b4615d6eac928a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.compoundkernel#sklearn.gaussian_process.kernels.CompoundKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.CompoundKernel&lt;/code&gt;&lt;/a&gt;(kernels)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.compoundkernel#sklearn.gaussian_process.kernels.CompoundKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.CompoundKernel&lt;/code&gt;&lt;/a&gt;(kernels)</target>
        </trans-unit>
        <trans-unit id="815d6023a6697cdbf3d07d272617c442ac11c2b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.constantkernel#sklearn.gaussian_process.kernels.ConstantKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.ConstantKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.constantkernel#sklearn.gaussian_process.kernels.ConstantKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.ConstantKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f1a53dd3b09a49ccad1f76a8be6b281006ab35af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt;&lt;code&gt;gaussian_process.kernels.DotProduct&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt;&lt;code&gt;gaussian_process.kernels.DotProduct&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ed593e0e20db54c1e1a1b144257a29eccd342c90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.exponentiation#sklearn.gaussian_process.kernels.Exponentiation&quot;&gt;&lt;code&gt;gaussian_process.kernels.Exponentiation&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.exponentiation#sklearn.gaussian_process.kernels.Exponentiation&quot;&gt;&lt;code&gt;gaussian_process.kernels.Exponentiation&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="1b549179a39ca48f936a53b1913041e4b5973684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.expsinesquared#sklearn.gaussian_process.kernels.ExpSineSquared&quot;&gt;&lt;code&gt;gaussian_process.kernels.ExpSineSquared&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.expsinesquared#sklearn.gaussian_process.kernels.ExpSineSquared&quot;&gt;&lt;code&gt;gaussian_process.kernels.ExpSineSquared&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="13d4e33ab278a59a48456d657091a0434022e414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.matern#sklearn.gaussian_process.kernels.Matern&quot;&gt;&lt;code&gt;gaussian_process.kernels.Matern&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.matern#sklearn.gaussian_process.kernels.Matern&quot;&gt;&lt;code&gt;gaussian_process.kernels.Matern&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e68405b2a68d44a9c9ed6d618182d170eac139bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.pairwisekernel#sklearn.gaussian_process.kernels.PairwiseKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.PairwiseKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.pairwisekernel#sklearn.gaussian_process.kernels.PairwiseKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.PairwiseKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3044c4c3761fb3be525ab760dbfde797c8b526d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.product#sklearn.gaussian_process.kernels.Product&quot;&gt;&lt;code&gt;gaussian_process.kernels.Product&lt;/code&gt;&lt;/a&gt;(k1, k2)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.product#sklearn.gaussian_process.kernels.Product&quot;&gt; &lt;code&gt;gaussian_process.kernels.Product&lt;/code&gt; &lt;/a&gt; (k1, k2)</target>
        </trans-unit>
        <trans-unit id="71d5cad59224cd62715df45b67b8e625f4c6434e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt;&lt;code&gt;gaussian_process.kernels.RationalQuadratic&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt;&lt;code&gt;gaussian_process.kernels.RationalQuadratic&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="86c8f9443de9bbdae398550f3856a549ef22d2e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt;&lt;code&gt;gaussian_process.kernels.RBF&lt;/code&gt;&lt;/a&gt;([length_scale, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt; &lt;code&gt;gaussian_process.kernels.RBF&lt;/code&gt; &lt;/a&gt; ([length_scale,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="37516a63d2fa2efe1e4e73459efd6194d1dac9b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.sum#sklearn.gaussian_process.kernels.Sum&quot;&gt;&lt;code&gt;gaussian_process.kernels.Sum&lt;/code&gt;&lt;/a&gt;(k1, k2)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.sum#sklearn.gaussian_process.kernels.Sum&quot;&gt; &lt;code&gt;gaussian_process.kernels.Sum&lt;/code&gt; &lt;/a&gt; (k1, k2)</target>
        </trans-unit>
        <trans-unit id="a29ef926106e264e7e34fcc406e6beae3a9432a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.whitekernel#sklearn.gaussian_process.kernels.WhiteKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.WhiteKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.whitekernel#sklearn.gaussian_process.kernels.WhiteKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.WhiteKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b60a50333125887b505e4c252d225ceecde61b64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.get_config#sklearn.get_config&quot;&gt;&lt;code&gt;get_config&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.get_config#sklearn.get_config&quot;&gt;&lt;code&gt;get_config&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="a3b5279dd9ef1fcb47c3969cc288d48712558ed6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.iterativeimputer#sklearn.impute.IterativeImputer&quot;&gt;&lt;code&gt;impute.IterativeImputer&lt;/code&gt;&lt;/a&gt;([estimator, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9550edaff411ebae6d893c34bd07c50e76c7066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.knnimputer#sklearn.impute.KNNImputer&quot;&gt;&lt;code&gt;impute.KNNImputer&lt;/code&gt;&lt;/a&gt;(*[, missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6cb284224930c7f903ec059fa9a1069a99f20c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.missingindicator#sklearn.impute.MissingIndicator&quot;&gt;&lt;code&gt;impute.MissingIndicator&lt;/code&gt;&lt;/a&gt;(*[, missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74fe3209807b9a59e1c186b1e744bba1df41e78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.missingindicator#sklearn.impute.MissingIndicator&quot;&gt;&lt;code&gt;impute.MissingIndicator&lt;/code&gt;&lt;/a&gt;([missing_values, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.impute.missingindicator#sklearn.impute.MissingIndicator&quot;&gt; &lt;code&gt;impute.MissingIndicator&lt;/code&gt; &lt;/a&gt; ([missing_values,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="147bffd28e4cc951e06f9cfba5c2a8382913dd3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;SimpleImputer&lt;/code&gt;&lt;/a&gt; can be used in a Pipeline as a way to build a composite estimator that supports imputation. See &lt;a href=&quot;../auto_examples/plot_missing_values#sphx-glr-auto-examples-plot-missing-values-py&quot;&gt;Imputing missing values before building an estimator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt; &lt;code&gt;SimpleImputer&lt;/code&gt; &lt;/a&gt;파이프 라인에서 SimpleImputer 를 사용하여 대치 지원하는 복합 추정기를 빌드 할 수 있습니다. &lt;a href=&quot;../auto_examples/plot_missing_values#sphx-glr-auto-examples-plot-missing-values-py&quot;&gt;추정기를 빌드하기 전에 결 측값 대치를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49170a557821ccbde60a3a0fdd42d5cb8c0a31e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;impute.SimpleImputer&lt;/code&gt;&lt;/a&gt;(*[, missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c6396e08188deb8eaff6bcb76e7959158f6dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;impute.SimpleImputer&lt;/code&gt;&lt;/a&gt;([missing_values, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt; &lt;code&gt;impute.SimpleImputer&lt;/code&gt; &lt;/a&gt; ([missing_values,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="dcd4f9ce1f902bdeab52cb3e553259e58af71f69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.partial_dependence#sklearn.inspection.partial_dependence&quot;&gt;&lt;code&gt;inspection.partial_dependence&lt;/code&gt;&lt;/a&gt;(estimator, X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b03d604fc7f720fac6c6bfedc8bdf6966b36d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.partialdependencedisplay#sklearn.inspection.PartialDependenceDisplay&quot;&gt;&lt;code&gt;inspection.PartialDependenceDisplay&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.inspection.partialdependencedisplay#sklearn.inspection.PartialDependenceDisplay&quot;&gt;&lt;code&gt;inspection.PartialDependenceDisplay&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="46770377353775b0c4b8b3ba25b76eca1eb6de5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.permutation_importance#sklearn.inspection.permutation_importance&quot;&gt;&lt;code&gt;inspection.permutation_importance&lt;/code&gt;&lt;/a&gt;(estimator, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6749ee64d49eb526918c63f707212010db5bc1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.plot_partial_dependence#sklearn.inspection.plot_partial_dependence&quot;&gt;&lt;code&gt;inspection.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917ca251c02b98662dfdf6922cb93a1ea03df782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.check_increasing#sklearn.isotonic.check_increasing&quot;&gt;&lt;code&gt;isotonic.check_increasing&lt;/code&gt;&lt;/a&gt;(x, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.isotonic.check_increasing#sklearn.isotonic.check_increasing&quot;&gt; &lt;code&gt;isotonic.check_increasing&lt;/code&gt; &lt;/a&gt; (x, y)</target>
        </trans-unit>
        <trans-unit id="d45415bf08bea40b699037e74cfb535465f65352" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonic_regression#sklearn.isotonic.isotonic_regression&quot;&gt;&lt;code&gt;isotonic.isotonic_regression&lt;/code&gt;&lt;/a&gt;(y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa23fe350124b0e719eb698a6a718e721c14f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonic_regression#sklearn.isotonic.isotonic_regression&quot;&gt;&lt;code&gt;isotonic.isotonic_regression&lt;/code&gt;&lt;/a&gt;(y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.isotonic.isotonic_regression#sklearn.isotonic.isotonic_regression&quot;&gt; &lt;code&gt;isotonic.isotonic_regression&lt;/code&gt; &lt;/a&gt; (y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9dc161d76b120ba7e1860bb77d341ae485bf6ee7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;IsotonicRegression&lt;/code&gt;&lt;/a&gt; produces a series of predictions \(\hat{y}_i\) for the training data which are the closest to the targets \(y\) in terms of mean squared error. These predictions are interpolated for predicting to unseen data. The predictions of &lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;IsotonicRegression&lt;/code&gt;&lt;/a&gt; thus form a function that is piecewise linear:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccfcdea5caafc19963722982aa178163502a0af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;isotonic.IsotonicRegression&lt;/code&gt;&lt;/a&gt;(*[, y_min, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d93bb84c61df15aead0ac1224117b486f70c954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;isotonic.IsotonicRegression&lt;/code&gt;&lt;/a&gt;([y_min, y_max, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt; &lt;code&gt;isotonic.IsotonicRegression&lt;/code&gt; &lt;/a&gt; ([y_min, y_max,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bc6bd327c82d008e35c6fe07a82c45ca94d0c647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="d3a5ab18128fdd9051ee7e26d1989f5fe79a85b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c15e18a23b6aceb31106f2ae683829a43b46dcf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.nystroem#sklearn.kernel_approximation.Nystroem&quot;&gt;&lt;code&gt;kernel_approximation.Nystroem&lt;/code&gt;&lt;/a&gt;([kernel, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.nystroem#sklearn.kernel_approximation.Nystroem&quot;&gt; &lt;code&gt;kernel_approximation.Nystroem&lt;/code&gt; &lt;/a&gt; ([커널,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fb2688440bb9f60859c2ad9f302e83945adb7005" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt;&lt;code&gt;kernel_approximation.RBFSampler&lt;/code&gt;&lt;/a&gt;(*[, gamma, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74870e36cbd22817ba9e6a0937b948cda244f4ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt;&lt;code&gt;kernel_approximation.RBFSampler&lt;/code&gt;&lt;/a&gt;([gamma, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt; &lt;code&gt;kernel_approximation.RBFSampler&lt;/code&gt; &lt;/a&gt; ([감마,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="04e76409a0f488e64a8692b168ea67e0c4a1251f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99373ea8262ced9b9ac126172101181a9c4ba5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="aa595f1efba3e28d225adf72abd9000b5a06e2d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt;&lt;code&gt;kernel_ridge.KernelRidge&lt;/code&gt;&lt;/a&gt;([alpha, kernel, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt; &lt;code&gt;kernel_ridge.KernelRidge&lt;/code&gt; &lt;/a&gt; ([알파, 커널,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d9951e87a310b9386c7069f4214385dbdefe604e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;#id13&quot;&gt;Bayesian Ridge Regression&lt;/a&gt;, but can lead to sparser weights \(w\)&lt;a href=&quot;#id18&quot; id=&quot;id14&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;#id19&quot; id=&quot;id15&quot;&gt;[2]&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; poses a different prior over \(w\), by dropping the assumption of the Gaussian being spherical.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt; &lt;code&gt;ARDRegression&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;#id13&quot;&gt; Bayesian Ridge Regression&lt;/a&gt; 과 매우 유사하지만 스파 저 가중치 \ (w \)&lt;a href=&quot;#id18&quot; id=&quot;id14&quot;&gt; [1] &lt;/a&gt;&lt;a href=&quot;#id19&quot; id=&quot;id15&quot;&gt;[2]로&lt;/a&gt; 이어질 수 있습니다. &lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt; &lt;code&gt;ARDRegression&lt;/code&gt; &lt;/a&gt; 은 가우시안이 구형이라는 가정을 제거함으로써 \ (w \)보다 이전에 다른 포즈를 취합니다.</target>
        </trans-unit>
        <trans-unit id="2b30e210354dd8872216ae6c70bba869177347d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;#id9&quot;&gt;Bayesian Ridge Regression&lt;/a&gt;, but can lead to sparser coefficients \(w\)&lt;a href=&quot;#id14&quot; id=&quot;id10&quot;&gt;1&lt;/a&gt;&lt;a href=&quot;#id15&quot; id=&quot;id11&quot;&gt;2&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; poses a different prior over \(w\), by dropping the assumption of the Gaussian being spherical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de65fd186cce0ea2e4ffa41ef42f3bbe240f207" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;linear_model.ARDRegression&lt;/code&gt;&lt;/a&gt;(*[, n_iter, tol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb4f723c281937b48f50f6d2437227cf2396cde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;linear_model.ARDRegression&lt;/code&gt;&lt;/a&gt;([n_iter, tol, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt; &lt;code&gt;linear_model.ARDRegression&lt;/code&gt; &lt;/a&gt; ([n_iter, tol,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9046e91fb6a6fbc3bf2462d140cdbade489ba3dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;BayesianRidge&lt;/code&gt;&lt;/a&gt; estimates a probabilistic model of the regression problem as described above. The prior for the coefficient \(w\) is given by a spherical Gaussian:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2053491901e6666bcd9398a44de26d51d986167" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;BayesianRidge&lt;/code&gt;&lt;/a&gt; estimates a probabilistic model of the regression problem as described above. The prior for the parameter \(w\) is given by a spherical Gaussian:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt; &lt;code&gt;BayesianRidge&lt;/code&gt; &lt;/a&gt; 는 위에서 설명한 회귀 문제의 확률 모델을 추정합니다. 매개 변수 \ (w \)에 대한 선행은 구형 가우스로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2a6cacb137d05f7f537b5bfecb93685b584c107a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;linear_model.BayesianRidge&lt;/code&gt;&lt;/a&gt;(*[, n_iter, tol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7007b16b8f8cfb9734c4b40612b23b7d25dbdcf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;linear_model.BayesianRidge&lt;/code&gt;&lt;/a&gt;([n_iter, tol, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt; &lt;code&gt;linear_model.BayesianRidge&lt;/code&gt; &lt;/a&gt; ([n_iter, tol,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c53f22d10dffa4b4c725209b80bca9facb1296c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt; is a linear regression model trained with L1 and L2 prior as regularizer. This combination allows for learning a sparse model where few of the weights are non-zero like &lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, while still maintaining the regularization properties of &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt;. We control the convex combination of L1 and L2 using the &lt;code&gt;l1_ratio&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt; &lt;code&gt;ElasticNet&lt;/code&gt; &lt;/a&gt; 은 정규화 이전에 L1 및 L2로 훈련 된 선형 회귀 모델입니다. 이 조합을 사용하면&lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt; &lt;code&gt;Lasso&lt;/code&gt; &lt;/a&gt; 와 같은 가중치가 0이 아닌 희소 모델을 학습하면서&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; 의 정규화 속성을 계속 유지할 수있습니다. &lt;code&gt;l1_ratio&lt;/code&gt; 매개 변수를사용하여 L1과 L2의 볼록한 조합을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="7e16862029230219c4101d6de22050e7b8132998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt; is a linear regression model trained with both \(\ell_1\) and \(\ell_2\)-norm regularization of the coefficients. This combination allows for learning a sparse model where few of the weights are non-zero like &lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, while still maintaining the regularization properties of &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt;. We control the convex combination of \(\ell_1\) and \(\ell_2\) using the &lt;code&gt;l1_ratio&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7af8585ba011b70e07b8132f31ab81638386da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;linear_model.ElasticNet&lt;/code&gt;&lt;/a&gt;([alpha, l1_ratio, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt; &lt;code&gt;linear_model.ElasticNet&lt;/code&gt; &lt;/a&gt; ([알파, l1_ratio,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1e93135912cd99974c57ef0653180fee4a1f84f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;linear_model.ElasticNetCV&lt;/code&gt;&lt;/a&gt;(*[, l1_ratio, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66e5ace7c54e2b3806c8e21cea467b0ae435392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;linear_model.ElasticNetCV&lt;/code&gt;&lt;/a&gt;([l1_ratio, eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt; &lt;code&gt;linear_model.ElasticNetCV&lt;/code&gt; &lt;/a&gt; ([l1_ratio, eps,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fefaaff4dba09ed97e28b30115d4fbbc600c4660" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt;&lt;code&gt;linear_model.enet_path&lt;/code&gt;&lt;/a&gt;(X, y, *[, l1_ratio, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8ccdb319576dbe3186affdb4d80747fdc3eb03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt;&lt;code&gt;linear_model.enet_path&lt;/code&gt;&lt;/a&gt;(X, y[, l1_ratio, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt; &lt;code&gt;linear_model.enet_path&lt;/code&gt; &lt;/a&gt; (X, y [, l1_ratio,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c39aa4cf4770df429cfa8b4daa25debc9e2f8474" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.gammaregressor#sklearn.linear_model.GammaRegressor&quot;&gt;&lt;code&gt;linear_model.GammaRegressor&lt;/code&gt;&lt;/a&gt;(*[, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4decbec8ca1de7810069a3a6e2d984d5785c5b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;HuberRegressor&lt;/code&gt;&lt;/a&gt; is scaling invariant. Once &lt;code&gt;epsilon&lt;/code&gt; is set, scaling &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; down or up by different values would produce the same robustness to outliers as before. as compared to &lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;epsilon&lt;/code&gt; has to be set again when &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are scaled.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt; &lt;code&gt;HuberRegressor&lt;/code&gt; &lt;/a&gt; 가 불변으로 확장하고 있습니다. &lt;code&gt;epsilon&lt;/code&gt; 이 설정되면 &lt;code&gt;X&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 를 다른 값으로 축소하거나 높이면 이전과 마찬가지로 특이 치에 대해 동일한 견고성을 생성합니다. 비교하여&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;SGDRegressor&lt;/code&gt; &lt;/a&gt; 여기서 &lt;code&gt;epsilon&lt;/code&gt; 때 다시 설정해야 &lt;code&gt;X&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 스케일링된다.</target>
        </trans-unit>
        <trans-unit id="8b8b8746171b3b291ce75003aeaa2d37051cf57e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;HuberRegressor&lt;/code&gt;&lt;/a&gt; should be more efficient to use on data with small number of samples while &lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; needs a number of passes on the training data to produce the same robustness.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt; &lt;code&gt;HuberRegressor&lt;/code&gt; &lt;/a&gt; 는 적은 수의 샘플이있는 데이터에보다 효율적으로 사용하는 반면&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;SGDRegressor&lt;/code&gt; &lt;/a&gt; 는 동일한 견고성을 생성하기 위해 훈련 데이터를 여러 번 통과해야합니다.</target>
        </trans-unit>
        <trans-unit id="52b2ff16cfba86ec1d3c0205f4ae2d5e8bf7753a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;linear_model.HuberRegressor&lt;/code&gt;&lt;/a&gt;(*[, epsilon, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c84d7aa989af1d1f0c132314330aceda91cf42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;linear_model.HuberRegressor&lt;/code&gt;&lt;/a&gt;([epsilon, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt; &lt;code&gt;linear_model.HuberRegressor&lt;/code&gt; &lt;/a&gt; ([epsilon,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="992452013da134cdf189b41eb20398a9f34c414e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;linear_model.Lars&lt;/code&gt;&lt;/a&gt;(*[, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487d020cc7c6245afd4df7ce21bb620202e87861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;linear_model.Lars&lt;/code&gt;&lt;/a&gt;([fit_intercept, verbose, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt; &lt;code&gt;linear_model.Lars&lt;/code&gt; &lt;/a&gt; ([fit_intercept, verbose,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ff0316157338886d8656c35f581f9292ce71f448" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;linear_model.lars_path&lt;/code&gt;&lt;/a&gt;(X, y[, Xy, Gram, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt; &lt;code&gt;linear_model.lars_path&lt;/code&gt; &lt;/a&gt; (X, y [, Xy, 그램,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ce556e422580c0644caadf01637c67e3cdeaa5b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars_path_gram#sklearn.linear_model.lars_path_gram&quot;&gt;&lt;code&gt;linear_model.lars_path_gram&lt;/code&gt;&lt;/a&gt;(Xy, Gram, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072a7d03905b71c0fb10011174ddceaabf51fdac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;linear_model.LarsCV&lt;/code&gt;&lt;/a&gt;(*[, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b104e20462543e5ec2bb6c8d1f1fbf14660e69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;linear_model.LarsCV&lt;/code&gt;&lt;/a&gt;([fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt; &lt;code&gt;linear_model.LarsCV&lt;/code&gt; &lt;/a&gt; ([fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="947eeb5a688642d845372cc1cb057f0078cf705e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;linear_model.Lasso&lt;/code&gt;&lt;/a&gt;([alpha, fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt; &lt;code&gt;linear_model.Lasso&lt;/code&gt; &lt;/a&gt; ([알파, fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="89ac1ab9f534b3b57c74a8d4fa0001914404aab7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;linear_model.lasso_path&lt;/code&gt;&lt;/a&gt;(X, y, *[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f74e089a17a57238a7d8a5bba41cdf2c77662d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;linear_model.lasso_path&lt;/code&gt;&lt;/a&gt;(X, y[, eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt; &lt;code&gt;linear_model.lasso_path&lt;/code&gt; &lt;/a&gt; (X, y [, eps,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="66877a744f2538d5f69331f9b1a7f52a81592ba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_stability_path#sklearn.linear_model.lasso_stability_path&quot;&gt;&lt;code&gt;linear_model.lasso_stability_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lasso_stability_path#sklearn.linear_model.lasso_stability_path&quot;&gt; &lt;code&gt;linear_model.lasso_stability_path&lt;/code&gt; &lt;/a&gt; (X, y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="987b0b86cd3cc14e7f517c07a7a545040b4dde5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;linear_model.LassoCV&lt;/code&gt;&lt;/a&gt;(*[, eps, n_alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0d424edef0409eb642c0b39f08bee4d60b5321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;linear_model.LassoCV&lt;/code&gt;&lt;/a&gt;([eps, n_alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt; &lt;code&gt;linear_model.LassoCV&lt;/code&gt; &lt;/a&gt; ([eps, n_alphas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ad85e3abb6227b3ebb2861d4e9654f82e9f700cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt; is a lasso model implemented using the LARS algorithm, and unlike the implementation based on coordinate descent, this yields the exact solution, which is piecewise linear as a function of the norm of its coefficients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968c1d59187f56882bc3fbd09b187c63129651f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt; is a lasso model implemented using the LARS algorithm, and unlike the implementation based on coordinate_descent, this yields the exact solution, which is piecewise linear as a function of the norm of its coefficients.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt; &lt;code&gt;LassoLars&lt;/code&gt; &lt;/a&gt; 는 LARS 알고리즘을 사용하여 구현 된 올가미 모델이며, coordinate_descent를 기반으로 한 구현과 달리 정확한 솔루션을 산출하며, 이는 계수의 표준 함수에 따라 부분적으로 선형입니다.</target>
        </trans-unit>
        <trans-unit id="d52faabfb3b0ecb538f9cbf9deb29429c9555574" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;linear_model.LassoLars&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt; &lt;code&gt;linear_model.LassoLars&lt;/code&gt; &lt;/a&gt; (알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c88a3bdcf22fda25970063fbfa850ede00737969" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;linear_model.LassoLarsCV&lt;/code&gt;&lt;/a&gt;(*[, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1c0a7209b66b90efc735eb2b032820f501f80f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;linear_model.LassoLarsCV&lt;/code&gt;&lt;/a&gt;([fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt; &lt;code&gt;linear_model.LassoLarsCV&lt;/code&gt; &lt;/a&gt; ([fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="77753da375928863059a28d1d6fbd122e6856e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarsic#sklearn.linear_model.LassoLarsIC&quot;&gt;&lt;code&gt;linear_model.LassoLarsIC&lt;/code&gt;&lt;/a&gt;([criterion, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolarsic#sklearn.linear_model.LassoLarsIC&quot;&gt; &lt;code&gt;linear_model.LassoLarsIC&lt;/code&gt; &lt;/a&gt; ([기준,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e96b03d398fc6f5cdfad88b412cea9e9d66eb5c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; fits a linear model with coefficients \(w = (w_1, ..., w_p)\) to minimize the residual sum of squares between the observed responses in the dataset, and the responses predicted by the linear approximation. Mathematically it solves a problem of the form:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt; 은 계수가 \ (w = (w_1, ..., w_p) \) 인 선형 모형에 적합하여 데이터 집합의 관측 된 반응과 선형 근사로 예측 된 반응 사이의 잔차 제곱합을 최소화합니다. 수학적으로 다음과 같은 형식의 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="c0b6c6f818edd689db499e65bfe1800aeaa71fa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; fits a linear model with coefficients \(w = (w_1, ..., w_p)\) to minimize the residual sum of squares between the observed targets in the dataset, and the targets predicted by the linear approximation. Mathematically it solves a problem of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707c09c449a34044b52576176f97c46d850c9643" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; will take in its &lt;code&gt;fit&lt;/code&gt; method arrays X, y and will store the coefficients \(w\) of the linear model in its &lt;code&gt;coef_&lt;/code&gt; member:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;fit&lt;/code&gt; 방법 배열 X, y를 &lt;code&gt;coef_&lt;/code&gt; 선형 모델의 계수 \ (w \)를 coef_ 멤버에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="9eeb977d7742197b330a9577c2633d4d5f45bf66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88df752d6ab48a5b55ccff5853c9a71a55494749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5fa4bf95b39a85729d30092440cb8723118496b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logistic_regression_path#sklearn.linear_model.logistic_regression_path&quot;&gt;&lt;code&gt;linear_model.logistic_regression_path&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logistic_regression_path#sklearn.linear_model.logistic_regression_path&quot;&gt; &lt;code&gt;linear_model.logistic_regression_path&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="a969e686b19caee8b03f87b495e87c2ebd9bc8e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; returns well calibrated predictions by default as it directly optimizes log-loss. In contrast, the other methods return biased probabilities; with different biases per method:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; &lt;/a&gt; 은 로그 손실을 직접 최적화하므로 기본적으로 잘 보정 된 예측을 반환합니다. 반대로, 다른 방법은 편향된 확률을 반환합니다. 방법마다 다른 바이어스로 :</target>
        </trans-unit>
        <trans-unit id="5d4a08a63174d9c78d3859503a392d6e9b3b516e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt;([penalty, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;linear_model.LogisticRegression&lt;/code&gt; &lt;/a&gt; ([벌금,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="42ffc6248b165b74338396462a350e84e14bcf69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;multinomial&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt; &lt;/a&gt; (설정 multi_class =&amp;rdquo;다항식&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="34fc0c3a8ed105a5aeee6c9304b0cd0c8d9c9b5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;ovr&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt; &lt;/a&gt; (설정 multi_class =&amp;rdquo;ovr&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="a578ab823711b5b5835f3c805a89fb86cae0e2e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; implements Logistic Regression with built-in cross-validation support, to find the optimal &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;l1_ratio&lt;/code&gt; parameters according to the &lt;code&gt;scoring&lt;/code&gt; attribute. The &amp;ldquo;newton-cg&amp;rdquo;, &amp;ldquo;sag&amp;rdquo;, &amp;ldquo;saga&amp;rdquo; and &amp;ldquo;lbfgs&amp;rdquo; solvers are found to be faster for high-dimensional dense data, due to warm-starting (see &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-warm-start&quot;&gt;Glossary&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7fe500f6a163e946df405096cb05bcbb642b49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; implements Logistic Regression with builtin cross-validation to find out the optimal C parameter. &amp;ldquo;newton-cg&amp;rdquo;, &amp;ldquo;sag&amp;rdquo;, &amp;ldquo;saga&amp;rdquo; and &amp;ldquo;lbfgs&amp;rdquo; solvers are found to be faster for high-dimensional dense data, due to warm-starting. For the multiclass case, if &lt;code&gt;multi_class&lt;/code&gt; option is set to &amp;ldquo;ovr&amp;rdquo;, an optimal C is obtained for each class and if the &lt;code&gt;multi_class&lt;/code&gt; option is set to &amp;ldquo;multinomial&amp;rdquo;, an optimal C is obtained by minimizing the cross-entropy loss.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; 는 교차 검증이 내장 된 Logistic Regression을 구현하여 최적의 C 매개 변수를 찾습니다. &quot;newton-cg&quot;, &quot;sag&quot;, &quot;saga&quot;및 &quot;lbfgs&quot;솔버는 웜 스타트 (warm-starting)로 인해 고차원 밀도 데이터에 대해 더 빠른 것으로 밝혀졌습니다. 멀티 클래스의 경우, &lt;code&gt;multi_class&lt;/code&gt; 옵션이 &quot;ovr&quot;로 설정되면, 각 클래스에 대해 최적의 C가 획득되고, &lt;code&gt;multi_class&lt;/code&gt; 옵션이 &quot;다항식&quot;으로 설정되면, 교차 엔트로피 손실을 최소화함으로써 최적의 C가 얻어진다.</target>
        </trans-unit>
        <trans-unit id="c7222b1eed2eb4c743bdd9d9c0404f4807c631c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt;(*[, Cs, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb52fca0b9554a7bc0d942859b6dedae79406a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt;([Cs, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;linear_model.LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; ([Cs,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5b41e9710da750e528a16662f808c3a36f50943e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;multinomial&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; (다중 클래스 = &quot;다항식&quot;설정)</target>
        </trans-unit>
        <trans-unit id="e62161fcd419cbb993025b5417f1bdc6ec21685e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;ovr&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; (설정 multi_class =&amp;rdquo;ovr&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="405d294c7e04b7b10ac1230c80f90eae6ade9e42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt; &lt;code&gt;linear_model.MultiTaskElasticNet&lt;/code&gt; &lt;/a&gt; (알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a795579f2b7770ba4d61d700ad0848aede899f19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a63211b0aabe4faba36d4e45cd30a14b9b712cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7760ce392ed26864b431e66a041080aa45172417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklasso#sklearn.linear_model.MultiTaskLasso&quot;&gt;&lt;code&gt;linear_model.MultiTaskLasso&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitasklasso#sklearn.linear_model.MultiTaskLasso&quot;&gt; &lt;code&gt;linear_model.MultiTaskLasso&lt;/code&gt; &lt;/a&gt; ([알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b027e5e3329b650aef295f39da902fc5de0752dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskLassoCV&lt;/code&gt;&lt;/a&gt;(*[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561fe99c60fda49820a4077cda1eafe603e88742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskLassoCV&lt;/code&gt;&lt;/a&gt;([eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt; &lt;code&gt;linear_model.MultiTaskLassoCV&lt;/code&gt; &lt;/a&gt; ([eps,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e6b589fe3e0114294176621af04db41f6d1876a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp&lt;/code&gt;&lt;/a&gt;(X, y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430f692b6def8e513401bdb0e7603ed256a17322" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt; &lt;code&gt;linear_model.orthogonal_mp&lt;/code&gt; &lt;/a&gt; (X, y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e99439c66053393093faf826a11ed7a35b05d9eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;(Gram, Xy, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccdb567ce658b7290c2a2774715b126b6394f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;(Gram, Xy[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt; &lt;code&gt;linear_model.orthogonal_mp_gram&lt;/code&gt; &lt;/a&gt; (그램, Xy [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0ad9d0ea0b8c7fc58c3c3323cff008e5ea4d36b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt; implements the OMP algorithm for approximating the fit of a linear model with constraints imposed on the number of non-zero coefficients (ie. the L &lt;sub&gt;0&lt;/sub&gt; pseudo-norm).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt; &lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt; &lt;code&gt;orthogonal_mp&lt;/code&gt; &lt;/a&gt; 는 0이 아닌 계수 (즉, L&lt;sub&gt; 0&lt;/sub&gt; 의사 노름)의 수에 부과 된 제약 조건으로 선형 모델의 적합을 근사화하기 위해 OMP 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="a681c704e57ac3eae30d7fca45ccbd6601b3572a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt; implements the OMP algorithm for approximating the fit of a linear model with constraints imposed on the number of non-zero coefficients (ie. the \(\ell_0\) pseudo-norm).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab5ee1d1190ffeda3ae27571ec9bb1648fce817" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2aaef516d717e163886b2593d69f09af4fa258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5e6df18a2c1c159aeaac8bbdc0ce2bcd14f2bb6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="9e136cc7f452a43e6575040310db410b65682fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9e816f8c440404e59db0fac29e5fddfcf444f0c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="b48387c92086d5b7e2e7df17f23be1f7e2396b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f93f29e279ec0ab717943996c1a38d78f0ee2b18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveregressor#sklearn.linear_model.PassiveAggressiveRegressor&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveRegressor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d3285db04f5c5aea982ffdd253a2127db924a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveregressor#sklearn.linear_model.PassiveAggressiveRegressor&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveRegressor&lt;/code&gt;&lt;/a&gt;([C, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveregressor#sklearn.linear_model.PassiveAggressiveRegressor&quot;&gt; &lt;code&gt;linear_model.PassiveAggressiveRegressor&lt;/code&gt; &lt;/a&gt; ([C,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a02958163789b327f967be0b9dacc3194144fc67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt;&lt;code&gt;linear_model.Perceptron&lt;/code&gt;&lt;/a&gt;(*[, penalty, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7541fdb961e26731ba9e6ca71375098ce610f2de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt;&lt;code&gt;linear_model.Perceptron&lt;/code&gt;&lt;/a&gt;([penalty, alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt; &lt;code&gt;linear_model.Perceptron&lt;/code&gt; &lt;/a&gt; ([벌칙, 알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4e2cd6699364025892354e0f08c7aa15821e402f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.poissonregressor#sklearn.linear_model.PoissonRegressor&quot;&gt;&lt;code&gt;linear_model.PoissonRegressor&lt;/code&gt;&lt;/a&gt;(*[, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8a96cdd61b7e903112e87af81166325d820301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.randomizedlasso#sklearn.linear_model.RandomizedLasso&quot;&gt;&lt;code&gt;linear_model.RandomizedLasso&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.randomizedlasso#sklearn.linear_model.RandomizedLasso&quot;&gt; &lt;code&gt;linear_model.RandomizedLasso&lt;/code&gt; &lt;/a&gt; (* args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="e81da02cd5d324f06a59a4f217383ea7191fec75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.randomizedlogisticregression#sklearn.linear_model.RandomizedLogisticRegression&quot;&gt;&lt;code&gt;linear_model.RandomizedLogisticRegression&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.randomizedlogisticregression#sklearn.linear_model.RandomizedLogisticRegression&quot;&gt;&lt;code&gt;linear_model.RandomizedLogisticRegression&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="fe84b99c32c92bcec146c407c6a8afab5da366e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ransacregressor#sklearn.linear_model.RANSACRegressor&quot;&gt;&lt;code&gt;linear_model.RANSACRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ransacregressor#sklearn.linear_model.RANSACRegressor&quot;&gt;&lt;code&gt;linear_model.RANSACRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e9a350b22dad2212bd3d9d24d852990982fa018d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; regression addresses some of the problems of &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares&lt;/a&gt; by imposing a penalty on the size of coefficients. The ridge coefficients minimize a penalized residual sum of squares,</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; 회귀는 계수 크기에 페널티를 부과하여&lt;a href=&quot;#ordinary-least-squares&quot;&gt; 일반 최소 제곱&lt;/a&gt; 의 문제 중 일부를 해결합니다. 능선 계수는 처벌 된 잔차 제곱합을 최소화합니다.</target>
        </trans-unit>
        <trans-unit id="a2a3e113d1640c0cd63c14c94871cd5c99908a7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; regression addresses some of the problems of &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares&lt;/a&gt; by imposing a penalty on the size of the coefficients. The ridge coefficients minimize a penalized residual sum of squares:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6b703cca66415cd15341c40f378a048fedfb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;linear_model.Ridge&lt;/code&gt;&lt;/a&gt;([alpha, fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;linear_model.Ridge&lt;/code&gt; &lt;/a&gt; ([알파, fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="85470215b400e66d76a1ac3c94090967d1d18838" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge_regression#sklearn.linear_model.ridge_regression&quot;&gt;&lt;code&gt;linear_model.ridge_regression&lt;/code&gt;&lt;/a&gt;(X, y, alpha, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bfd9ff1752f80364e362781e05ab8a54719454" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge_regression#sklearn.linear_model.ridge_regression&quot;&gt;&lt;code&gt;linear_model.ridge_regression&lt;/code&gt;&lt;/a&gt;(X, y, alpha[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridge_regression#sklearn.linear_model.ridge_regression&quot;&gt; &lt;code&gt;linear_model.ridge_regression&lt;/code&gt; &lt;/a&gt; (X, y, 알파 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="32e163705030687e88d469e2936228447890b622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifier#sklearn.linear_model.RidgeClassifier&quot;&gt;&lt;code&gt;linear_model.RidgeClassifier&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifier#sklearn.linear_model.RidgeClassifier&quot;&gt; &lt;code&gt;linear_model.RidgeClassifier&lt;/code&gt; &lt;/a&gt; ([알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5745dc98a0741f4ced2c0b50303c2e40f523e205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifiercv#sklearn.linear_model.RidgeClassifierCV&quot;&gt;&lt;code&gt;linear_model.RidgeClassifierCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifiercv#sklearn.linear_model.RidgeClassifierCV&quot;&gt; &lt;code&gt;linear_model.RidgeClassifierCV&lt;/code&gt; &lt;/a&gt; ([알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d7ec5deb7b4d5506eea68ea0bcfac5ba07314f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt;&lt;code&gt;RidgeCV&lt;/code&gt;&lt;/a&gt; implements ridge regression with built-in cross-validation of the alpha parameter. The object works in the same way as GridSearchCV except that it defaults to Generalized Cross-Validation (GCV), an efficient form of leave-one-out cross-validation:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt; &lt;code&gt;RidgeCV&lt;/code&gt; &lt;/a&gt; 는 알파 매개 변수의 교차 검증을 통해 능선 회귀를 구현합니다. 이 개체는 GridSearchCV와 동일한 방식으로 작동하며, 기본적으로 효율적인 교차 교차 검증 형식 인 GCV (Generalized Cross-Validation)로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="220e364d8f7843dd2c60eba6d89b3111c88ea922" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt;&lt;code&gt;linear_model.RidgeCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt; &lt;code&gt;linear_model.RidgeCV&lt;/code&gt; &lt;/a&gt; ([알파,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8409dcaaf7076d82e8df96d235fc3c8f1e55b3fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports averaged SGD (ASGD) &lt;a href=&quot;#id14&quot; id=&quot;id2&quot;&gt;10&lt;/a&gt;. Averaging can be enabled by setting &lt;code&gt;average=True&lt;/code&gt;. ASGD performs the same updates as the regular SGD (see &lt;a href=&quot;#sgd-mathematical-formulation&quot;&gt;Mathematical formulation&lt;/a&gt;), but instead of using the last value of the coefficients as the &lt;code&gt;coef_&lt;/code&gt; attribute (i.e. the values of the last update), &lt;code&gt;coef_&lt;/code&gt; is set instead to the &lt;strong&gt;average&lt;/strong&gt; value of the coefficients across all updates. The same is done for the &lt;code&gt;intercept_&lt;/code&gt; attribute. When using ASGD the learning rate can be larger and even constant, leading on some datasets to a speed up in training time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75405cda57083d7644b5700b33fd06c38bc467c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports averaged SGD (ASGD). Averaging can be enabled by setting &lt;code&gt;`average=True`&lt;/code&gt;. ASGD works by averaging the coefficients of the plain SGD over each iteration over a sample. When using ASGD the learning rate can be larger and even constant leading on some datasets to a speed up in training time.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; 는 평균 SGD (ASGD)를 지원합니다. &lt;code&gt;`average=True`&lt;/code&gt; 를 설정하여 평균화를 활성화 할 수 있습니다. ASGD는 샘플의 각 반복에 대해 일반 SGD의 계수를 평균하여 작동합니다. ASGD를 사용할 때 학습 속도는 더 커질 수 있으며 일부 데이터 세트에서 학습 시간이 빨라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6526e9882ab2a712026b51fd440ecd58c5a4d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports both weighted classes and weighted instances via the fit parameters &lt;code&gt;class_weight&lt;/code&gt; and &lt;code&gt;sample_weight&lt;/code&gt;. See the examples below and the doc string of &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier.fit&quot;&gt;&lt;code&gt;SGDClassifier.fit&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; 는 fit 매개 변수 &lt;code&gt;class_weight&lt;/code&gt; 및 &lt;code&gt;sample_weight&lt;/code&gt; 를 통해 가중치 클래스와 가중치 인스턴스를 모두 지원합니다. 자세한 정보는 아래 예제 및&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier.fit&quot;&gt; &lt;code&gt;SGDClassifier.fit&lt;/code&gt; &lt;/a&gt; 의 doc 문자열을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="c674920bb2e0bfdedc850f15dd45e5d774a717b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports both weighted classes and weighted instances via the fit parameters &lt;code&gt;class_weight&lt;/code&gt; and &lt;code&gt;sample_weight&lt;/code&gt;. See the examples below and the docstring of &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier.fit&quot;&gt;&lt;code&gt;SGDClassifier.fit&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb65f144814037383da79748d09855b3e6bdc429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports multi-class classification by combining multiple binary classifiers in a &amp;ldquo;one versus all&amp;rdquo; (OVA) scheme. For each of the \(K\) classes, a binary classifier is learned that discriminates between that and all other \(K-1\) classes. At testing time, we compute the confidence score (i.e. the signed distances to the hyperplane) for each classifier and choose the class with the highest confidence. The Figure below illustrates the OVA approach on the iris dataset. The dashed lines represent the three OVA classifiers; the background colors show the decision surface induced by the three classifiers.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; 는 여러 이진 분류기를&amp;ldquo;OVA (one vs all)&amp;rdquo;체계로 결합하여 다중 클래스 분류를 지원합니다. 각 \ (K \) 클래스마다이 클래스와 다른 모든 \ (K-1 \) 클래스를 구별하는 이진 분류 기가 학습됩니다. 테스트시 각 분류 자에 대한 신뢰도 점수 (즉, 초평면까지의 서명 된 거리)를 계산하고 신뢰도가 가장 높은 클래스를 선택합니다. 아래 그림은 홍채 데이터 세트에 대한 OVA 접근 방식을 보여줍니다. 점선은 세 개의 OVA 분류기를 나타냅니다. 배경색은 3 개의 분류기에 의해 유도 된 결정 표면을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="63890c28d41a79b72601dca28594018a216e2437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;linear_model.SGDClassifier&lt;/code&gt;&lt;/a&gt;([loss, penalty, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;linear_model.SGDClassifier&lt;/code&gt; &lt;/a&gt; ([손실, 페널티,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e814df0a89b7eb8945307c604ecff1c66d2def36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; also supports averaged SGD &lt;a href=&quot;#id14&quot; id=&quot;id3&quot;&gt;10&lt;/a&gt; (here again, see description above in the classification section).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9abd9abad448a0d68f5d6136ebfe2c611f12a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; supports averaged SGD as &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt;. Averaging can be enabled by setting &lt;code&gt;`average=True`&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;SGDRegressor&lt;/code&gt; &lt;/a&gt; 는 평균 SGD를&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; 로 지원합니다. &lt;code&gt;`average=True`&lt;/code&gt; 를 설정하여 평균화를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3318424d4c487157b671901bdcdbbad91740f6e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;linear_model.SGDRegressor&lt;/code&gt;&lt;/a&gt;([loss, penalty, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;linear_model.SGDRegressor&lt;/code&gt; &lt;/a&gt; ([손실, 페널티,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="73aef0828ef291a27c1af87537f3e49e4cd3be6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;TheilSenRegressor&lt;/code&gt;&lt;/a&gt; is comparable to the &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares (OLS)&lt;/a&gt; in terms of asymptotic efficiency and as an unbiased estimator. In contrast to OLS, Theil-Sen is a non-parametric method which means it makes no assumption about the underlying distribution of the data. Since Theil-Sen is a median-based estimator, it is more robust against corrupted data aka outliers. In univariate setting, Theil-Sen has a breakdown point of about 29.3% in case of a simple linear regression which means that it can tolerate arbitrary corrupted data of up to 29.3%.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt; &lt;code&gt;TheilSenRegressor&lt;/code&gt; &lt;/a&gt; 는점근 효율과 편견없는 추정량으로&lt;a href=&quot;#ordinary-least-squares&quot;&gt; 일반 최소 제곱 (OLS)&lt;/a&gt; 과 비교할 수있습니다. OLS와 달리 Theil-Sen은 비모수 적 방법이므로 데이터의 기본 분포에 대해 가정하지 않습니다. Theil-Sen은 중앙값 기반 추정기이므로 손상된 데이터 일명 이상치에 대해 더욱 강력합니다. 일 변량 설정에서 Theil-Sen은 간단한 선형 회귀의 경우 약 29.3 %의 고 장점을 가지므로 최대 29.3 %의 임의의 손상된 데이터를 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b79501bf7666e48fc6df0cd74635180c3f3f37d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78ecf2afca80fc1f0cb01ba6720640958c508fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c05c09901dfaf0c952f798b287abde34f92dfac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.tweedieregressor#sklearn.linear_model.TweedieRegressor&quot;&gt;&lt;code&gt;TweedieRegressor&lt;/code&gt;&lt;/a&gt; implements a generalized linear model for the Tweedie distribution, that allows to model any of the above mentioned distributions using the appropriate &lt;code&gt;power&lt;/code&gt; parameter. In particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df95db646ba25781ab2c42d049552c8afe39c4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.tweedieregressor#sklearn.linear_model.TweedieRegressor&quot;&gt;&lt;code&gt;linear_model.TweedieRegressor&lt;/code&gt;&lt;/a&gt;(*[, power, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0ec9526e9709be1c792583d5910e47f6a5f3b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.isomap#sklearn.manifold.Isomap&quot;&gt;&lt;code&gt;manifold.Isomap&lt;/code&gt;&lt;/a&gt;(*[, n_neighbors, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16f6846ead489a805d5268a0989d49c9adcba81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.isomap#sklearn.manifold.Isomap&quot;&gt;&lt;code&gt;manifold.Isomap&lt;/code&gt;&lt;/a&gt;([n_neighbors, n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.isomap#sklearn.manifold.Isomap&quot;&gt; &lt;code&gt;manifold.Isomap&lt;/code&gt; &lt;/a&gt; ([n_neighbors, n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c9977621e4918fd92c32a53ef59ecd4f3fa4fe80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locally_linear_embedding#sklearn.manifold.locally_linear_embedding&quot;&gt;&lt;code&gt;manifold.locally_linear_embedding&lt;/code&gt;&lt;/a&gt;(X, &amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.locally_linear_embedding#sklearn.manifold.locally_linear_embedding&quot;&gt; &lt;code&gt;manifold.locally_linear_embedding&lt;/code&gt; &lt;/a&gt; (X,&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ca84b513e6bc3d2409c194d40e447ade5a501f44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locally_linear_embedding#sklearn.manifold.locally_linear_embedding&quot;&gt;&lt;code&gt;manifold.locally_linear_embedding&lt;/code&gt;&lt;/a&gt;(X, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a122566dc9cb3331e1ede9627b01ea53ab01ea5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9cff79f6fb556527a449e14e58e28a7eadd6f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="43d25ff4452139d0c7b5143aa3cd657324926892" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt;&lt;code&gt;manifold.MDS&lt;/code&gt;&lt;/a&gt;([n_components, metric, n_init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt; &lt;code&gt;manifold.MDS&lt;/code&gt; &lt;/a&gt; .MDS ([n_components, metric, n_init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0b594d96e36a0be97014316e30571a5733270a4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.smacof#sklearn.manifold.smacof&quot;&gt;&lt;code&gt;manifold.smacof&lt;/code&gt;&lt;/a&gt;(dissimilarities, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da40f534f3f8957e12cabff483d7807c93c64dcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.smacof#sklearn.manifold.smacof&quot;&gt;&lt;code&gt;manifold.smacof&lt;/code&gt;&lt;/a&gt;(dissimilarities[, metric, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.smacof#sklearn.manifold.smacof&quot;&gt; &lt;code&gt;manifold.smacof&lt;/code&gt; &lt;/a&gt; (유사성 [, 미터법,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="84a92fc7241a8c0d083f27b28e953668dbb4322c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectral_embedding#sklearn.manifold.spectral_embedding&quot;&gt;&lt;code&gt;manifold.spectral_embedding&lt;/code&gt;&lt;/a&gt;(adjacency, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049576d011b6452684f25fb1fa6e9184a1db8204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectral_embedding#sklearn.manifold.spectral_embedding&quot;&gt;&lt;code&gt;manifold.spectral_embedding&lt;/code&gt;&lt;/a&gt;(adjacency[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.spectral_embedding#sklearn.manifold.spectral_embedding&quot;&gt; &lt;code&gt;manifold.spectral_embedding&lt;/code&gt; &lt;/a&gt; (인접 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="aa5d3b1487f8401627f2c81a670ffd8188ab09bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectralembedding#sklearn.manifold.SpectralEmbedding&quot;&gt;&lt;code&gt;manifold.SpectralEmbedding&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.spectralembedding#sklearn.manifold.SpectralEmbedding&quot;&gt; &lt;code&gt;manifold.SpectralEmbedding&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="94dfb155ee1042c77f1504c7623adb05c86f02e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.trustworthiness#sklearn.manifold.trustworthiness&quot;&gt;&lt;code&gt;manifold.trustworthiness&lt;/code&gt;&lt;/a&gt;(X, X_embedded, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc82ca3aebb671d854010e240331655d0021151f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.tsne#sklearn.manifold.TSNE&quot;&gt;&lt;code&gt;manifold.TSNE&lt;/code&gt;&lt;/a&gt;([n_components, perplexity, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.tsne#sklearn.manifold.TSNE&quot;&gt; &lt;code&gt;manifold.TSNE&lt;/code&gt; &lt;/a&gt; ([n_components, perplexity,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="cf115bdfcc340056351417dd062df3e4387d45e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca06d3db09115f4a2bd0486ade0162c5c55ddb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, normalize, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt; &lt;code&gt;accuracy_score&lt;/code&gt; &lt;/a&gt; _ 점수 (y_true, y_pred [, normalize,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d55d875fa633fe12dacd777f0ca41aefeb5e98ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;metrics.accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a6e639f8b15ea914f39eb4c73657519065186c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;metrics.accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt; &lt;code&gt;metrics.accuracy_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="42450c817fec8598a41aa2bc594bb37bb9ed0a00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt;&lt;code&gt;metrics.adjusted_mutual_info_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt; &lt;code&gt;metrics.adjusted_mutual_info_score&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c19ffc352279495dec5b7a2e79d93119a8d658ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.adjusted_rand_score#sklearn.metrics.adjusted_rand_score&quot;&gt;&lt;code&gt;metrics.adjusted_rand_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.adjusted_rand_score#sklearn.metrics.adjusted_rand_score&quot;&gt; &lt;code&gt;metrics.adjusted_rand_score&lt;/code&gt; &lt;/a&gt; (labels_true,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="6123271f7ab064b59cc485c273ec1d0a6bad5111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt;&lt;code&gt;metrics.auc&lt;/code&gt;&lt;/a&gt;(x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc5c1baff1eabc15ac4cc0462335e3ef1127286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt;&lt;code&gt;metrics.auc&lt;/code&gt;&lt;/a&gt;(x, y[, reorder])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt; &lt;code&gt;metrics.auc&lt;/code&gt; &lt;/a&gt; (x, y [, reorder])</target>
        </trans-unit>
        <trans-unit id="bfb75c7855bb656f2d7547f5fad25263bc145b8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115164329fd1eb43ec219f713b05f0647df46668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt; &lt;code&gt;average_precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="06c68468b12ea7b548f53cf2f3aa4142d7ae1d7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;metrics.average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f337b7aa61edd37ee5067920277a94bd9571fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;metrics.average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt; &lt;code&gt;metrics.average_precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score)</target>
        </trans-unit>
        <trans-unit id="2e1f6ced5a000400d9ed798d3229bd18f57876b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed7de4657e89e361665ebc2739fc0043b5d95c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt; &lt;code&gt;balanced_accuracy_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fa8c587d94c21bf8638f2cfb4c2bedf6fc775f41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;metrics.balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f318acdaeade8445683db03d0de352a6da9d6d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;metrics.balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt; &lt;code&gt;metrics.balanced_accuracy_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="372d18486b9b72d91ce50260c7e4d8d60fa4cbf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.brier_score_loss#sklearn.metrics.brier_score_loss&quot;&gt;&lt;code&gt;metrics.brier_score_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_prob, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518b0ee171d7383a4dfa83154ff878b00c2efb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.brier_score_loss#sklearn.metrics.brier_score_loss&quot;&gt;&lt;code&gt;metrics.brier_score_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_prob[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.brier_score_loss#sklearn.metrics.brier_score_loss&quot;&gt; &lt;code&gt;metrics.brier_score_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_prob [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9771826a4577fa2ae45b3730ca3a6e113a391b67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.calinski_harabasz_score#sklearn.metrics.calinski_harabasz_score&quot;&gt;&lt;code&gt;metrics.calinski_harabasz_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ec130993d3dec170503a83765c2f08b25b1cc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.calinski_harabaz_score#sklearn.metrics.calinski_harabaz_score&quot;&gt;&lt;code&gt;metrics.calinski_harabaz_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.calinski_harabaz_score#sklearn.metrics.calinski_harabaz_score&quot;&gt; &lt;code&gt;metrics.calinski_harabaz_score&lt;/code&gt; &lt;/a&gt; (X, 레이블)</target>
        </trans-unit>
        <trans-unit id="a6819694c0d2c3075e4ec7d7d4d6865e42149a22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.check_scoring#sklearn.metrics.check_scoring&quot;&gt;&lt;code&gt;metrics.check_scoring&lt;/code&gt;&lt;/a&gt;(estimator[, scoring, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.check_scoring#sklearn.metrics.check_scoring&quot;&gt; &lt;code&gt;metrics.check_scoring&lt;/code&gt; &lt;/a&gt; (추정자 [, 채점,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c95b931c44366b614c906c224bbe8c0274b25fd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd1789147412af0b8a25ff211cc76994a6ab4ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt; &lt;code&gt;classification_report&lt;/code&gt; &lt;/a&gt; _ 보고서 (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="01326779a02906bc694323633d7d4ac43f41297f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;metrics.classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt; &lt;code&gt;metrics.classification_report&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="f3d08c5649ce29090b4c117946cde1d9432fdb12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;metrics.classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e667df22bbe43d1b397057631e0ef4fd359af1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cluster.contingency_matrix#sklearn.metrics.cluster.contingency_matrix&quot;&gt;&lt;code&gt;metrics.cluster.contingency_matrix&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.cluster.contingency_matrix#sklearn.metrics.cluster.contingency_matrix&quot;&gt; &lt;code&gt;metrics.cluster.contingency_matrix&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5227d60473d90b58fc7087b6e089214d0907e812" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c3cf92808cfcb6ba314b1910354e417c5b45db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2[, labels, weights, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt; &lt;code&gt;cohen_kappa_score&lt;/code&gt; &lt;/a&gt; (y1, y2 [, 레이블, 가중치,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6a1da57686be6c14534ee7d895c743154fd77ecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;metrics.cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0508c996bffe2bbbd1f542e102c39f9f059f476c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;metrics.cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt; &lt;code&gt;metrics.cohen_kappa_score&lt;/code&gt; &lt;/a&gt; (y1, y2 [, labels,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c50a0faad697fac695cdd34a6056c09f2567cb1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt;&lt;code&gt;metrics.completeness_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt; &lt;code&gt;metrics.completeness_score&lt;/code&gt; &lt;/a&gt; (labels_true,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="f3e9ba7b4c88698f35c08c965397e1fa587c5cf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f449a771955b13f372fd5cc991687e1a2e9b80be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt; &lt;code&gt;confusion_matrix&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, 레이블,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e11a7a7b85c31d1e276693c7c0f73d1b28dfd8df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;metrics.confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14def393ff43672f999afbcde10cc8af40ad6e6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;metrics.confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt; &lt;code&gt;metrics.confusion_matrix&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="379844541163fbb715c664c8f8dc89bdf626d194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusionmatrixdisplay#sklearn.metrics.ConfusionMatrixDisplay&quot;&gt;&lt;code&gt;metrics.ConfusionMatrixDisplay&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29da0d96c87c128edfb9d93131ecbc517d56098d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.consensus_score#sklearn.metrics.consensus_score&quot;&gt;&lt;code&gt;metrics.consensus_score&lt;/code&gt;&lt;/a&gt;(a, b, *[, similarity])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84940a184a8fb862b513934e5be9cca7a1a4335" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.consensus_score#sklearn.metrics.consensus_score&quot;&gt;&lt;code&gt;metrics.consensus_score&lt;/code&gt;&lt;/a&gt;(a, b[, similarity])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.consensus_score#sklearn.metrics.consensus_score&quot;&gt; &lt;code&gt;metrics.consensus_score&lt;/code&gt; &lt;/a&gt; (a, b [, 유사성])</target>
        </trans-unit>
        <trans-unit id="cc8dddf79f471ed6b611a21347a96ed9b41112d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.coverage_error#sklearn.metrics.coverage_error&quot;&gt;&lt;code&gt;metrics.coverage_error&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea6a69e67b4dd0c56df0b9d9f3cf0910b9e846e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.coverage_error#sklearn.metrics.coverage_error&quot;&gt;&lt;code&gt;metrics.coverage_error&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.coverage_error#sklearn.metrics.coverage_error&quot;&gt; &lt;code&gt;metrics.coverage_error&lt;/code&gt; &lt;/a&gt; (y_true, y_score [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4edf3ec5897c57b7d0f7f2d90776691b908a7afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.davies_bouldin_score#sklearn.metrics.davies_bouldin_score&quot;&gt;&lt;code&gt;metrics.davies_bouldin_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.davies_bouldin_score#sklearn.metrics.davies_bouldin_score&quot;&gt; &lt;code&gt;metrics.davies_bouldin_score&lt;/code&gt; &lt;/a&gt; (X, 레이블)</target>
        </trans-unit>
        <trans-unit id="01afd8401c8126dba7e7a3e8b76951ed4f3888d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.dcg_score#sklearn.metrics.dcg_score&quot;&gt;&lt;code&gt;metrics.dcg_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, k, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d146a473d986d371b0c8039c5bb9e115a75537d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.explained_variance_score#sklearn.metrics.explained_variance_score&quot;&gt;&lt;code&gt;metrics.explained_variance_score&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4585efe73e8721fa9194d084a6a42f2aad197411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.explained_variance_score#sklearn.metrics.explained_variance_score&quot;&gt;&lt;code&gt;metrics.explained_variance_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.explained_variance_score#sklearn.metrics.explained_variance_score&quot;&gt; &lt;code&gt;metrics.explained_variance_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="3f0958c71cc5a5c9d75256ce1c053ff992866041" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33455e3ec85b7a5241dc32ebc4a9352e12ffcab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt; &lt;code&gt;f1_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, 레이블,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="55bbfc09e4e5429eaa2be170f496c20b4102bacb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;metrics.f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1331880df8107052479a3f50c2964fd07c4058bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;metrics.f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt; &lt;code&gt;metrics.f1_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, labels,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="dd5f7bcedbdd588a0069388e08af4ac1db2b63f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *, beta[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc9bc3d79efff9118ea74b433b8afc29cd8774c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, beta[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt; &lt;code&gt;fbeta_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred, 베타 [, 레이블,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="23c0046b4800bc0bfbcec19f087be14678ded833" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;metrics.fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *, beta)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f0570545009a65b7313cd8018fce6c6cef837b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;metrics.fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, beta[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt; &lt;code&gt;metrics.fbeta_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred, 베타 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="136237868cf2dd5bdd9cda5197649ecab5f491b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fowlkes_mallows_score#sklearn.metrics.fowlkes_mallows_score&quot;&gt;&lt;code&gt;metrics.fowlkes_mallows_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.fowlkes_mallows_score#sklearn.metrics.fowlkes_mallows_score&quot;&gt; &lt;code&gt;metrics.fowlkes_mallows_score&lt;/code&gt; &lt;/a&gt; (labels_true,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="a1d642290e877d2252a9ed0817d66591bf44d471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.get_scorer#sklearn.metrics.get_scorer&quot;&gt;&lt;code&gt;metrics.get_scorer&lt;/code&gt;&lt;/a&gt;(scoring)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.get_scorer#sklearn.metrics.get_scorer&quot;&gt;&lt;code&gt;metrics.get_scorer&lt;/code&gt;&lt;/a&gt;(scoring)</target>
        </trans-unit>
        <trans-unit id="fd20cdaf5ceca03f2a7c2d34879dfbc57fbf281f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeac7a3e8b7290409ce2069b775933934afc58e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt; &lt;code&gt;hamming_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, 레이블,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2aa2483ab142f5199ad8eacc8b6eb63ac36cc3af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;metrics.hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38e16260589fa6b93b773c5168b9289484d8af0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;metrics.hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt; &lt;code&gt;metrics.hamming_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e23e4e0689b4914cd8223c341ffc5c214871d9d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1983028f247edee1b8ce66e446c535108d97d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt; &lt;code&gt;hinge_loss&lt;/code&gt; &lt;/a&gt; (y_true, pred_decision [, labels,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0792180b9fefa139e4bcdd1cdbaecea3d060917d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;metrics.hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3f579bb481dfe29cacba52210694024875b347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;metrics.hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt; &lt;code&gt;metrics.hinge_loss&lt;/code&gt; &lt;/a&gt; (y_true, pred_decision [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5f80070e87a216fbdb60499328a823596213efe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.homogeneity_completeness_v_measure#sklearn.metrics.homogeneity_completeness_v_measure&quot;&gt;&lt;code&gt;metrics.homogeneity_completeness_v_measure&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.homogeneity_completeness_v_measure#sklearn.metrics.homogeneity_completeness_v_measure&quot;&gt;&lt;code&gt;metrics.homogeneity_completeness_v_measure&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="230d8b1efb230df71cd701df80478ca2758e6351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt;&lt;code&gt;metrics.homogeneity_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt; &lt;code&gt;metrics.homogeneity_score&lt;/code&gt; &lt;/a&gt; (labels_true,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="f3f9011a7a6e9124d3d3fb55ff14bcee01b78d78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_score#sklearn.metrics.jaccard_score&quot;&gt;&lt;code&gt;jaccard_score&lt;/code&gt;&lt;/a&gt; works like &lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt; as a naively set-wise measure applying natively to binary targets, and extended to apply to multilabel and multiclass through the use of &lt;code&gt;average&lt;/code&gt; (see &lt;a href=&quot;#average&quot;&gt;above&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da63218ff97ceae37ad5090235e7f2aa5003a561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_score#sklearn.metrics.jaccard_score&quot;&gt;&lt;code&gt;jaccard_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919d08d97e54997fef0b7058b7b740b79189415d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_score#sklearn.metrics.jaccard_score&quot;&gt;&lt;code&gt;metrics.jaccard_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a7b04ca323c5dc52841fb17cb8dcb421f0a1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt; &lt;code&gt;jaccard_similarity_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e743eb987e20e6c904359e71de0095772927afbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;metrics.jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt; &lt;code&gt;metrics.jaccard_similarity_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="d89ea8e30e3c5dc62222b774d3442eb72aba1194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_average_precision_score#sklearn.metrics.label_ranking_average_precision_score&quot;&gt;&lt;code&gt;metrics.label_ranking_average_precision_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.label_ranking_average_precision_score#sklearn.metrics.label_ranking_average_precision_score&quot;&gt;&lt;code&gt;metrics.label_ranking_average_precision_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="f8a0cec34505e7675ef24f8c0f72b781d76abb1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_loss#sklearn.metrics.label_ranking_loss&quot;&gt;&lt;code&gt;metrics.label_ranking_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_score)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.label_ranking_loss#sklearn.metrics.label_ranking_loss&quot;&gt; &lt;code&gt;metrics.label_ranking_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_score)</target>
        </trans-unit>
        <trans-unit id="dcab618b23dcb8546d30403c7be9bef876f71ebd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_loss#sklearn.metrics.label_ranking_loss&quot;&gt;&lt;code&gt;metrics.label_ranking_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab649c84c58eb8910a32c216a7388b9e3072123b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff30307c3e93aa3b3d2b032fc08f6e5d4842d852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, eps, normalize, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt; &lt;code&gt;log_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, eps, 정규화,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8568742fbd03108ac80d177970d1ea4bc57a61f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;metrics.log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcf1154e7eb4ebb97e5c0b0b66b803608b91235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;metrics.log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt; &lt;code&gt;metrics.log_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, eps,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="557df1bc5875864e78b772b8041fc8d2a6092056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt;&lt;code&gt;metrics.make_scorer&lt;/code&gt;&lt;/a&gt;(score_func, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fbfea8a39bdae39a985f32124b9666db89a614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt;&lt;code&gt;metrics.make_scorer&lt;/code&gt;&lt;/a&gt;(score_func[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt; &lt;code&gt;metrics.make_scorer&lt;/code&gt; &lt;/a&gt; (score_func [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3ac7b2a707133ed3d222ee661492a15350fc32d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d869dc6c8d89d54b886e970bbfa21358fb3b5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt; &lt;code&gt;matthews_corrcoef&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2f0bd06bd676c26767d834747c335b5eb0b8503d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;metrics.matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bc2ef47c98cc6a3d18404cd14faa44fe3ef52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;metrics.matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt; &lt;code&gt;metrics.matthews_corrcoef&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3d0e44c42d2def3ae327f7c1239366121ad4e7b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.max_error#sklearn.metrics.max_error&quot;&gt;&lt;code&gt;metrics.max_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c0be874b88c6452a418f652c180d842b7f6821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_absolute_error#sklearn.metrics.mean_absolute_error&quot;&gt;&lt;code&gt;metrics.mean_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mean_absolute_error#sklearn.metrics.mean_absolute_error&quot;&gt; &lt;code&gt;metrics.mean_absolute_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="4fd8d741db92173a6322aa2badd38bc9f1324775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_absolute_error#sklearn.metrics.mean_absolute_error&quot;&gt;&lt;code&gt;metrics.mean_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c7c916deb5d467ed16e32876bed565c768c25b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_gamma_deviance#sklearn.metrics.mean_gamma_deviance&quot;&gt;&lt;code&gt;metrics.mean_gamma_deviance&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a084b883a9a8b9cf9fcfc22e1c5d3a0a110d1280" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_poisson_deviance#sklearn.metrics.mean_poisson_deviance&quot;&gt;&lt;code&gt;metrics.mean_poisson_deviance&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb050ea068aa15fb88bf8060a35ee6c799761f93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_error#sklearn.metrics.mean_squared_error&quot;&gt;&lt;code&gt;metrics.mean_squared_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3289d457452bf79f70f4e545ea62a8f9b74022" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_error#sklearn.metrics.mean_squared_error&quot;&gt;&lt;code&gt;metrics.mean_squared_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mean_squared_error#sklearn.metrics.mean_squared_error&quot;&gt; &lt;code&gt;metrics.mean_squared_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4a99be033d780c89a26380078c25be0410db63e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_log_error#sklearn.metrics.mean_squared_log_error&quot;&gt;&lt;code&gt;metrics.mean_squared_log_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mean_squared_log_error#sklearn.metrics.mean_squared_log_error&quot;&gt; &lt;code&gt;metrics.mean_squared_log_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="4bd024e01f7172177a9d221ea9b9d4343cd8f9f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_log_error#sklearn.metrics.mean_squared_log_error&quot;&gt;&lt;code&gt;metrics.mean_squared_log_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d7409ae6817c93ad080d40cfd35d142fe5607d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_tweedie_deviance#sklearn.metrics.mean_tweedie_deviance&quot;&gt;&lt;code&gt;metrics.mean_tweedie_deviance&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e54595f22880b31b064071ce71406b172bc82a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.median_absolute_error#sklearn.metrics.median_absolute_error&quot;&gt;&lt;code&gt;metrics.median_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.median_absolute_error#sklearn.metrics.median_absolute_error&quot;&gt; &lt;code&gt;metrics.median_absolute_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="e40402d56395b788563ad5fe4ad24ba12bd2ad5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.median_absolute_error#sklearn.metrics.median_absolute_error&quot;&gt;&lt;code&gt;metrics.median_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb434a615a9a7b8f6655e047905644b440f6a44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.multilabel_confusion_matrix#sklearn.metrics.multilabel_confusion_matrix&quot;&gt;&lt;code&gt;metrics.multilabel_confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c67ca10e05193c7d461d314838435d4f08ac60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.multilabel_confusion_matrix#sklearn.metrics.multilabel_confusion_matrix&quot;&gt;&lt;code&gt;multilabel_confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d76dcd64afd60860d3db9bbd44cd8fb3fcaedd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mutual_info_score#sklearn.metrics.mutual_info_score&quot;&gt;&lt;code&gt;metrics.mutual_info_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mutual_info_score#sklearn.metrics.mutual_info_score&quot;&gt; &lt;code&gt;metrics.mutual_info_score&lt;/code&gt; &lt;/a&gt; (labels_true,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="1ad1008f9de3cb1e63c428552caea39411c8d2cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.ndcg_score#sklearn.metrics.ndcg_score&quot;&gt;&lt;code&gt;metrics.ndcg_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, k, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a702c0eb05f50ca1e247a9b5e62f28a596afb43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.normalized_mutual_info_score#sklearn.metrics.normalized_mutual_info_score&quot;&gt;&lt;code&gt;metrics.normalized_mutual_info_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.normalized_mutual_info_score#sklearn.metrics.normalized_mutual_info_score&quot;&gt; &lt;code&gt;metrics.normalized_mutual_info_score&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f5d6b060215e46a3c5f7cc1e3fe45e462824ea68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.additive_chi2_kernel#sklearn.metrics.pairwise.additive_chi2_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.additive_chi2_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.additive_chi2_kernel#sklearn.metrics.pairwise.additive_chi2_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.additive_chi2_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y])</target>
        </trans-unit>
        <trans-unit id="dcfae0e0223b57e54672884d64e5f753e4f1bcc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.chi2_kernel#sklearn.metrics.pairwise.chi2_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.chi2_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.chi2_kernel#sklearn.metrics.pairwise.chi2_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.chi2_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y, 감마])</target>
        </trans-unit>
        <trans-unit id="a2fec23b88836a55dacba5cda35c73880269ed53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_distances#sklearn.metrics.pairwise.cosine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.cosine_distances&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_distances#sklearn.metrics.pairwise.cosine_distances&quot;&gt; &lt;code&gt;metrics.pairwise.cosine_distances&lt;/code&gt; &lt;/a&gt; (X [, Y])</target>
        </trans-unit>
        <trans-unit id="516dd8a92e3fe1a5ff9b735e4103d12317b70eb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;cosine_similarity&lt;/code&gt;&lt;/a&gt; computes the L2-normalized dot product of vectors. That is, if \(x\) and \(y\) are row vectors, their cosine similarity \(k\) is defined as:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt; &lt;code&gt;cosine_similarity&lt;/code&gt; &lt;/a&gt; 는 벡터의 L2 정규화 된 내적을 계산합니다. 즉, \ (x \) 및 \ (y \)가 행 벡터 인 경우 코사인 유사성 \ (k \)는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c51be90ddb6cfff8939459aefa1531facc132bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;metrics.pairwise.cosine_similarity&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt; &lt;code&gt;metrics.pairwise.cosine_similarity&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3ca078f31e9f0264fa3fdf0b868b6b48ddeaba18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.distance_metrics#sklearn.metrics.pairwise.distance_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.distance_metrics&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.distance_metrics#sklearn.metrics.pairwise.distance_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.distance_metrics&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="02fa06873d7ae6e743287863eb0c2c5400cd54c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.euclidean_distances#sklearn.metrics.pairwise.euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.euclidean_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.euclidean_distances#sklearn.metrics.pairwise.euclidean_distances&quot;&gt; &lt;code&gt;metrics.pairwise.euclidean_distances&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2549fa44fe7b1fcea91cb30f36e75483d859c1d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.haversine_distances#sklearn.metrics.pairwise.haversine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.haversine_distances&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49ba1b0044824b27093c413751a215f61b76ff8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.kernel_metrics#sklearn.metrics.pairwise.kernel_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.kernel_metrics&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.kernel_metrics#sklearn.metrics.pairwise.kernel_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.kernel_metrics&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="befbc67231334b2301f2d9cce35a95028c4bb4cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.laplacian_kernel#sklearn.metrics.pairwise.laplacian_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.laplacian_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.laplacian_kernel#sklearn.metrics.pairwise.laplacian_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.laplacian_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y, gamma])</target>
        </trans-unit>
        <trans-unit id="8888c1e796f4c2797dd5072c57e800e9a529764c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.linear_kernel#sklearn.metrics.pairwise.linear_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.linear_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.linear_kernel#sklearn.metrics.pairwise.linear_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.linear_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4de4414fc49f46303b5202b9de68954923fe70b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.manhattan_distances#sklearn.metrics.pairwise.manhattan_distances&quot;&gt;&lt;code&gt;metrics.pairwise.manhattan_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.manhattan_distances#sklearn.metrics.pairwise.manhattan_distances&quot;&gt; &lt;code&gt;metrics.pairwise.manhattan_distances&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c75219240535ddc55570c1c31e017f5821cf653f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.nan_euclidean_distances#sklearn.metrics.pairwise.nan_euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.nan_euclidean_distances&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.nan_euclidean_distances#sklearn.metrics.pairwise.nan_euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.nan_euclidean_distances&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d285af17f3f864745356dbcf11079de3f851996c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_cosine_distances#sklearn.metrics.pairwise.paired_cosine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_cosine_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_cosine_distances#sklearn.metrics.pairwise.paired_cosine_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_cosine_distances&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="15d94bd4c1d71c297855668e9d5789a3d4f01319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_distances#sklearn.metrics.pairwise.paired_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_distances&lt;/code&gt;&lt;/a&gt;(X, Y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66425e6640b5605e8a4778475e447040775ade9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_distances#sklearn.metrics.pairwise.paired_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_distances&lt;/code&gt;&lt;/a&gt;(X, Y[, metric])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_distances#sklearn.metrics.pairwise.paired_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_distances&lt;/code&gt; &lt;/a&gt; (X, Y [, 미터법])</target>
        </trans-unit>
        <trans-unit id="989ac0d0d7e50a566e76df6405f98b1ebfbb9e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_euclidean_distances#sklearn.metrics.pairwise.paired_euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_euclidean_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_euclidean_distances#sklearn.metrics.pairwise.paired_euclidean_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_euclidean_distances&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="8d129f9020632e1e732d0b3becd968dd53a40d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_manhattan_distances#sklearn.metrics.pairwise.paired_manhattan_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_manhattan_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_manhattan_distances#sklearn.metrics.pairwise.paired_manhattan_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_manhattan_distances&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="d0fe656fcf3c22351435eeabab839a9aab56a478" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.pairwise_kernels#sklearn.metrics.pairwise.pairwise_kernels&quot;&gt;&lt;code&gt;metrics.pairwise.pairwise_kernels&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.pairwise_kernels#sklearn.metrics.pairwise.pairwise_kernels&quot;&gt; &lt;code&gt;metrics.pairwise.pairwise_kernels&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="920c2335f02cec189da8dc1bdf83b36c38677bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.polynomial_kernel#sklearn.metrics.pairwise.polynomial_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.polynomial_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.polynomial_kernel#sklearn.metrics.pairwise.polynomial_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.polynomial_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9b8ab65eb268a371cc32dbe8241f5bba2900bcbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.rbf_kernel#sklearn.metrics.pairwise.rbf_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.rbf_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.rbf_kernel#sklearn.metrics.pairwise.rbf_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.rbf_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y, gamma])</target>
        </trans-unit>
        <trans-unit id="bbf0d27e7a63843e1cc7b49b021de81c3e39f933" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.sigmoid_kernel#sklearn.metrics.pairwise.sigmoid_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.sigmoid_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.sigmoid_kernel#sklearn.metrics.pairwise.sigmoid_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.sigmoid_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ccc319dd25faa6977bcede1110bc736980839019" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt;&lt;code&gt;metrics.pairwise_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, metric, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt; &lt;code&gt;metrics.pairwise_distances&lt;/code&gt; &lt;/a&gt; (X [, Y, 메트릭,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2470f9284fa143f7c00f72e99ae8598c3b3b4bf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin&lt;/code&gt;&lt;/a&gt;(X, Y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5e685da980638552134c3fccda7335d774fc1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin&lt;/code&gt;&lt;/a&gt;(X, Y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt; &lt;code&gt;metrics.pairwise_distances_argmin&lt;/code&gt; &lt;/a&gt; (X, Y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0b9d76f22402485a21b18bc2ad1f0638a2e16685" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin_min&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt; &lt;code&gt;metrics.pairwise_distances_argmin_min&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="0ef869d7841dc0228c07b812828acb8ac79d392c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin_min&lt;/code&gt;&lt;/a&gt;(X, Y, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba628c7031a5d0ea578d20ea605706a1c651fa55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_chunked#sklearn.metrics.pairwise_distances_chunked&quot;&gt;&lt;code&gt;metrics.pairwise_distances_chunked&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_chunked#sklearn.metrics.pairwise_distances_chunked&quot;&gt; &lt;code&gt;metrics.pairwise_distances_chunked&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0d7db343961d3843a3b379b6e76a92cab4d23d36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_confusion_matrix#sklearn.metrics.plot_confusion_matrix&quot;&gt;&lt;code&gt;metrics.plot_confusion_matrix&lt;/code&gt;&lt;/a&gt;(estimator, X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f320a0589d98e9aaa2ec71c0208645b02c13117b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_confusion_matrix#sklearn.metrics.plot_confusion_matrix&quot;&gt;&lt;code&gt;plot_confusion_matrix&lt;/code&gt;&lt;/a&gt; can be used to visually represent a confusion matrix as shown in the &lt;a href=&quot;../auto_examples/model_selection/plot_confusion_matrix#sphx-glr-auto-examples-model-selection-plot-confusion-matrix-py&quot;&gt;Confusion matrix&lt;/a&gt; example, which creates the following figure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa54bf25f788d3f806d78c292fc891353b2dc17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_precision_recall_curve#sklearn.metrics.plot_precision_recall_curve&quot;&gt;&lt;code&gt;metrics.plot_precision_recall_curve&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3250efd51db1af1b5478548390df10bc82e46191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_roc_curve#sklearn.metrics.plot_roc_curve&quot;&gt;&lt;code&gt;metrics.plot_roc_curve&lt;/code&gt;&lt;/a&gt;(estimator, X, y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff640cc505f29e816eac84dd1e8cb2add2c38e91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;metrics.precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt; &lt;code&gt;metrics.precision_recall_curve&lt;/code&gt; &lt;/a&gt; (y_true,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="9d3b0022f5b282a51d63dce8d50ba8675220c58b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, probas_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt; &lt;code&gt;precision_recall_curve&lt;/code&gt; &lt;/a&gt; (y_true, probas_pred)</target>
        </trans-unit>
        <trans-unit id="b2fd77574ce813c175d6d469f426f7693eae7e6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, probas_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e730d4484b9169ac15ec99c164dd62349dc5dd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;metrics.precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;metrics.precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="3ac7b3d81cf6dd1abe8ccf2904566a0bb03ee25e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9985525d633c42e944a563170af01920c7bcd0ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt; &lt;code&gt;precision_recall_fscore_support&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="17cd7547019bd31bbcda1d7469edcf29704e9e26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;metrics.precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a8fb4fcc9ed93549a73c87b7422e37cea309ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;metrics.precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt; &lt;code&gt;metrics.precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="971718a02fe0cf6ec34496d544599a63747557cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3601afdaf343d1911ddad9c52ec1a3e3d5832dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt; &lt;code&gt;precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, 레이블,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d51a3bf41a257cb70a18e91293d52f4b1fe0507e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precisionrecalldisplay#sklearn.metrics.PrecisionRecallDisplay&quot;&gt;&lt;code&gt;metrics.PrecisionRecallDisplay&lt;/code&gt;&lt;/a&gt;(precision, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf74f94b8a47fb010545c6e826235444f04acf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt;&lt;code&gt;metrics.r2_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f68fea98c57127efba0e0bbd11175998310f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt;&lt;code&gt;metrics.r2_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt; &lt;code&gt;metrics.r2_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="96f28e957b5cab116105e05ff87327dc60b2c1f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;metrics.recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1012b134faf4510d6581f6f871d1ce33dd6d0e3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;metrics.recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt; &lt;code&gt;metrics.recall_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="511b462e85581a569454c3256792d0eb2727ff9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03edf0ab3bc08a300860ac752381b74a70f28f65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt; &lt;code&gt;recall_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, labels,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3b7ae1e213b14f2c17fed0999322caca8ce9f66d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;metrics.roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054fb756965230a8694203880b072a83cfa1eacf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;metrics.roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt; &lt;code&gt;metrics.roc_auc_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d864869ca20f2384acf108f4aeb51f4a132fe292" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, average, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a61864a7909213497d8da3a36e2abf35fcf0a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, average, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt; &lt;code&gt;roc_auc_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score [, 평균,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ff11b7642453c97dcf999e6bf65adcb86a0924bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;metrics.roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871803b28b7a5d5621c9449064931630b01aa09a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;metrics.roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt; &lt;code&gt;metrics.roc_curve&lt;/code&gt; &lt;/a&gt; (y_true, y_score [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7ea00ce55387e3722a2f3d517aedeb0442084df0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, pos_label, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68259d68163fc35f4264aa268b3ca675e3ef80b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, pos_label, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt; &lt;code&gt;roc_curve&lt;/code&gt; &lt;/a&gt; (y_true, y_score [, pos_label,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="95007dc611604ad4a52cbcf7ddef72c887de8410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roccurvedisplay#sklearn.metrics.RocCurveDisplay&quot;&gt;&lt;code&gt;metrics.RocCurveDisplay&lt;/code&gt;&lt;/a&gt;(*, fpr, tpr[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bdf8e1940272ecf3fdda569fba4dd1f8bca2cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt;&lt;code&gt;metrics.silhouette_samples&lt;/code&gt;&lt;/a&gt;(X, labels, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256c2ae5c11ff01401a23bbf0f53dcbb32799bc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt;&lt;code&gt;metrics.silhouette_samples&lt;/code&gt;&lt;/a&gt;(X, labels[, metric])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt; &lt;code&gt;metrics.silhouette_samples&lt;/code&gt; &lt;/a&gt; (X, 레이블 [, 메트릭])</target>
        </trans-unit>
        <trans-unit id="c72c0dd9ff55454034b586c6c619cfcb815f476b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_score#sklearn.metrics.silhouette_score&quot;&gt;&lt;code&gt;metrics.silhouette_score&lt;/code&gt;&lt;/a&gt;(X, labels, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab3e31f881de9b59a6cb93a7e1e057f9fa01dbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_score#sklearn.metrics.silhouette_score&quot;&gt;&lt;code&gt;metrics.silhouette_score&lt;/code&gt;&lt;/a&gt;(X, labels[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.silhouette_score#sklearn.metrics.silhouette_score&quot;&gt; &lt;code&gt;metrics.silhouette_score&lt;/code&gt; &lt;/a&gt; (X, 레이블 [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="176090b0e2a110aeb8d512c4319fb485889121fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;metrics.v_measure_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;[, beta])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791361a2c951ebea1be4fe4f04c96ccf6006605e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;metrics.v_measure_score&lt;/code&gt;&lt;/a&gt;(labels_true, labels_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt; &lt;code&gt;metrics.v_measure_score&lt;/code&gt; &lt;/a&gt; (labels_true, labels_pred)</target>
        </trans-unit>
        <trans-unit id="a2a20831223963ad6b577990bc0df333dc898a5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;v_measure_score&lt;/code&gt;&lt;/a&gt; is &lt;strong&gt;symmetric&lt;/strong&gt;: it can be used to evaluate the &lt;strong&gt;agreement&lt;/strong&gt; of two independent assignments on the same dataset.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt; &lt;code&gt;v_measure_score&lt;/code&gt; &lt;/a&gt; 는&lt;strong&gt; 대칭입니다&lt;/strong&gt; .동일한 데이터 세트에서 두 개의 독립적 할당의&lt;strong&gt; 동의&lt;/strong&gt; 를 평가하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a623f29d25cb9195b80be9d9db03be1aa0dbf62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;metrics.zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11e5a02ea8f02b9c1b2d6a4808f855f7fdaca96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;metrics.zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt; &lt;code&gt;metrics.zero_one_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ec909e2bc81e39383241d491228e0dc17350f44e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7622fc184b380772f258797bb0af537a938c55e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, normalize, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt; &lt;code&gt;zero_one_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, 정규화,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7a06c182531f677096fa7f0eb0d90e46d958ffdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d0414c477271cf843e5d313deaca5d143e455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2a2adc8e9ac75966ece39eb5cc369d61af606544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt;&lt;code&gt;mixture.GaussianMixture&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt; &lt;code&gt;mixture.GaussianMixture&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f0a8d3a028d0afb4562f94b2767840e4809583c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.check_cv#sklearn.model_selection.check_cv&quot;&gt;&lt;code&gt;model_selection.check_cv&lt;/code&gt;&lt;/a&gt;([cv, y, classifier])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.check_cv#sklearn.model_selection.check_cv&quot;&gt; &lt;code&gt;model_selection.check_cv&lt;/code&gt; &lt;/a&gt; ([cv, y, 분류 자])</target>
        </trans-unit>
        <trans-unit id="c04afbc03b466916ff6ee790aaba00db041895be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt;&lt;code&gt;model_selection.cross_val_predict&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt; &lt;code&gt;model_selection.cross_val_predict&lt;/code&gt; &lt;/a&gt; (추정자, X)</target>
        </trans-unit>
        <trans-unit id="dc8b4237b0e8b2e771b39a6a29ef9e3994bedf8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;model_selection.cross_val_score&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;model_selection.cross_val_score&lt;/code&gt; &lt;/a&gt; (추정자, X)</target>
        </trans-unit>
        <trans-unit id="15da6fb2306caab2f9c7c47f8e1f82b53b6440d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_validate#sklearn.model_selection.cross_validate&quot;&gt;&lt;code&gt;model_selection.cross_validate&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.cross_validate#sklearn.model_selection.cross_validate&quot;&gt; &lt;code&gt;model_selection.cross_validate&lt;/code&gt; &lt;/a&gt; (추정자, X)</target>
        </trans-unit>
        <trans-unit id="14807d3070569abb986dbd0966ec00b0d0edf4ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.fit_grid_point#sklearn.model_selection.fit_grid_point&quot;&gt;&lt;code&gt;model_selection.fit_grid_point&lt;/code&gt;&lt;/a&gt;(X, y, &amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.fit_grid_point#sklearn.model_selection.fit_grid_point&quot;&gt; &lt;code&gt;model_selection.fit_grid_point&lt;/code&gt; &lt;/a&gt; (X, y,&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="322f4c41be7a5bdc4d702ed380ca043ee11ee17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;GridSearchCV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt;&lt;code&gt;RandomizedSearchCV&lt;/code&gt;&lt;/a&gt; allow searching over parameters of composite or nested estimators such as &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;ColumnTransformer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt;&lt;code&gt;VotingClassifier&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; using a dedicated &lt;code&gt;&amp;lt;estimator&amp;gt;__&amp;lt;parameter&amp;gt;&lt;/code&gt; syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183d83ae83b45906f3b5f33f65ceac4bc22a0379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;GridSearchCV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt;&lt;code&gt;RandomizedSearchCV&lt;/code&gt;&lt;/a&gt; evaluate each parameter setting independently. Computations can be run in parallel if your OS supports it, by using the keyword &lt;code&gt;n_jobs=-1&lt;/code&gt;. See function signature for more details.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt; &lt;code&gt;GridSearchCV&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt; &lt;code&gt;RandomizedSearchCV&lt;/code&gt; &lt;/a&gt; 는 각 매개 변수 설정을 독립적으로 평가합니다. 운영 체제에서 지원하는 경우 키워드 &lt;code&gt;n_jobs=-1&lt;/code&gt; 을 사용하여 계산을 병렬로 실행할 수 있습니다. 자세한 내용은 함수 서명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cd7cf2e763018321ac20801d9fe922740cae452c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;model_selection.GridSearchCV&lt;/code&gt;&lt;/a&gt;(estimator, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt; &lt;code&gt;model_selection.GridSearchCV&lt;/code&gt; &lt;/a&gt; (추정자,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="3b97527ba72207f0586c0829ce4406e10bf02b3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt; is a variation of k-fold which ensures that the same group is not represented in both testing and training sets. For example if the data is obtained from different subjects with several samples per-subject and if the model is flexible enough to learn from highly person specific features it could fail to generalize to new subjects. &lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt; makes it possible to detect this kind of overfitting situations.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt; &lt;code&gt;GroupKFold&lt;/code&gt; &lt;/a&gt; 는 k-fold의 변형으로 동일한 그룹이 테스트 및 훈련 세트에 모두 표시되지 않도록합니다. 예를 들어, 대상별로 여러 샘플이있는 서로 다른 주제에서 데이터를 가져 오거나 모델이 고도로 개인별 기능을 학습 할 수있을만큼 유연하면 새로운 주제로 일반화하지 못할 수 있습니다. &lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt; &lt;code&gt;GroupKFold&lt;/code&gt; 를&lt;/a&gt; 사용하면 이런 종류의 과적 응 상황을 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cf78bd298d83802ec0868a0320da79e345e1c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;model_selection.GroupKFold&lt;/code&gt;&lt;/a&gt;([n_splits])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;model_selection.GroupKFold&lt;/code&gt;&lt;/a&gt;([n_splits])</target>
        </trans-unit>
        <trans-unit id="75b94d74125119734988e4587691c8368ab4d68c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt;&lt;code&gt;model_selection.GroupShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt;&lt;code&gt;model_selection.GroupShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5d525c53c96fc601b1814435bc8dd2a1e815e8f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt; divides all the samples in \(k\) groups of samples, called folds (if \(k = n\), this is equivalent to the &lt;em&gt;Leave One Out&lt;/em&gt; strategy), of equal sizes (if possible). The prediction function is learned using \(k - 1\) folds, and the fold left out is used for test.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt; 는 접힘 (\ (k = n \) 인 경우 \ (k = n \) 인 경우&lt;em&gt; 하나&lt;/em&gt; 의&lt;em&gt; Leave One Out&lt;/em&gt; 전략과 동일)이라는 샘플 그룹의 \ (k \) 그룹에있는 모든 샘플을 동일한 크기 (가능한 경우)로나눕니다. 예측 함수는 \ (k-1 \) 폴드를 사용하여 학습되며 남은 폴드는 테스트에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9c318541f7809097db03cc2c4c929e1e69690416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;model_selection.KFold&lt;/code&gt;&lt;/a&gt;([n_splits, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;model_selection.KFold&lt;/code&gt; &lt;/a&gt; ([n_ 분할, 셔플,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fe9c7435f66828942d1d484122d7d0d3691db469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.learning_curve#sklearn.model_selection.learning_curve&quot;&gt;&lt;code&gt;model_selection.learning_curve&lt;/code&gt;&lt;/a&gt;(estimator, X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d37125d9b9f5d015b083786c1ac208fb257f026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.learning_curve#sklearn.model_selection.learning_curve&quot;&gt;&lt;code&gt;model_selection.learning_curve&lt;/code&gt;&lt;/a&gt;(estimator, X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.learning_curve#sklearn.model_selection.learning_curve&quot;&gt; &lt;code&gt;model_selection.learning_curve&lt;/code&gt; &lt;/a&gt; (추정자, X, y)</target>
        </trans-unit>
        <trans-unit id="306f754cc8eb54da216588bd1c9a296c11f39228" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt; is a cross-validation scheme which holds out the samples according to a third-party provided array of integer groups. This group information can be used to encode arbitrary domain specific pre-defined cross-validation folds.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt; &lt;code&gt;LeaveOneGroupOut&lt;/code&gt; &lt;/a&gt; 은 타사에서 제공 한 정수 그룹 배열에 따라 샘플을 보유하는 교차 유효성 검사 체계입니다. 이 그룹 정보는 임의의 도메인 특정 사전 정의 된 교차 검증 폴드를 인코딩하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ade3102d5b46283b770a43651835b77303de35f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="1bc4a694b4724b5766d84c78fc02897e31629ac5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; (or LOO) is a simple cross-validation. Each learning set is created by taking all the samples except one, the test set being the sample left out. Thus, for \(n\) samples, we have \(n\) different training sets and \(n\) different tests set. This cross-validation procedure does not waste much data as only one sample is removed from the training set:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt; &lt;code&gt;LeaveOneOut&lt;/code&gt; &lt;/a&gt; (또는 LOO)은 간단한 교차 유효성 검사입니다. 각 학습 세트는 하나를 제외한 모든 샘플을 가져 와서 생성되며 테스트 세트는 샘플이 제외됩니다. 따라서 \ (n \) 샘플의 경우, 우리는 \ (n \) 다른 트레이닝 세트와 \ (n \) 다른 테스트 세트를 가지고 있습니다. 이 교차 검증 절차는 훈련 세트에서 단 하나의 샘플 만 제거되므로 많은 데이터를 낭비하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6dc43efe437de7e280c4dc95ec8aa58db9a130fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneOut&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneOut&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6be1d6b6d07331d34ea841bdfb01ba937bd10897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt; is similar as &lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;, but removes samples related to \(P\) groups for each training/test set.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt; &lt;code&gt;LeavePGroupsOut&lt;/code&gt; 은&lt;/a&gt; 유사한 인&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt; &lt;code&gt;LeaveOneGroupOut&lt;/code&gt; &lt;/a&gt; 하지만 각 훈련 / 테스트 세트 \ (P \) 그룹에 관련된 샘플을 제거한다.</target>
        </trans-unit>
        <trans-unit id="316c020c7acc565e8c2e63d46353618fc0fcbf03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;model_selection.LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;(n_groups)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;model_selection.LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;(n_groups)</target>
        </trans-unit>
        <trans-unit id="866b3d39c95ea4724371fa9b770e5f79f89afbbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; as it creates all the possible training/test sets by removing \(p\) samples from the complete set. For \(n\) samples, this produces \({n \choose p}\) train-test pairs. Unlike &lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;, the test sets will overlap for \(p &amp;gt; 1\).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt; &lt;code&gt;LeavePOut&lt;/code&gt; &lt;/a&gt; 은전체 세트에서 \ (p \) 샘플을 제거하여 가능한 모든 훈련 / 테스트 세트를 생성하므로&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt; &lt;code&gt;LeaveOneOut&lt;/code&gt; &lt;/a&gt; 과매우 유사합니다. \ (n \) 샘플의 경우 \ ({n \ choose p} \) 열차 테스트 쌍을 생성합니다. &lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt; &lt;code&gt;LeaveOneOut&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt; 와 달리테스트 세트는 \ (p&amp;gt; 1 \)에 대해 겹칩니다.</target>
        </trans-unit>
        <trans-unit id="b0d09c866378cad32de3d3081d7ff25e71c44d30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;model_selection.LeavePOut&lt;/code&gt;&lt;/a&gt;(p)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;model_selection.LeavePOut&lt;/code&gt;&lt;/a&gt;(p)</target>
        </trans-unit>
        <trans-unit id="41aaab95cc47ec6eeb4b703393fddc68f271fc9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.parametergrid#sklearn.model_selection.ParameterGrid&quot;&gt;&lt;code&gt;model_selection.ParameterGrid&lt;/code&gt;&lt;/a&gt;(param_grid)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.parametergrid#sklearn.model_selection.ParameterGrid&quot;&gt;&lt;code&gt;model_selection.ParameterGrid&lt;/code&gt;&lt;/a&gt;(param_grid)</target>
        </trans-unit>
        <trans-unit id="2c49665ea93c6bccf110b0d876c9b51d1421c6b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.parametersampler#sklearn.model_selection.ParameterSampler&quot;&gt;&lt;code&gt;model_selection.ParameterSampler&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.parametersampler#sklearn.model_selection.ParameterSampler&quot;&gt; &lt;code&gt;model_selection.ParameterSampler&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="29149d5ab3bb9c611a4bc26e308c80a0c07267f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.permutation_test_score#sklearn.model_selection.permutation_test_score&quot;&gt;&lt;code&gt;model_selection.permutation_test_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.permutation_test_score#sklearn.model_selection.permutation_test_score&quot;&gt;&lt;code&gt;model_selection.permutation_test_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="e03f22b8ad3f4876b45b4304be636b7057801329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.predefinedsplit#sklearn.model_selection.PredefinedSplit&quot;&gt;&lt;code&gt;model_selection.PredefinedSplit&lt;/code&gt;&lt;/a&gt;(test_fold)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.predefinedsplit#sklearn.model_selection.PredefinedSplit&quot;&gt;&lt;code&gt;model_selection.PredefinedSplit&lt;/code&gt;&lt;/a&gt;(test_fold)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
