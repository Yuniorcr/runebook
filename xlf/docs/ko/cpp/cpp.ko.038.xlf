<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="481938a29cceba534fa392357def7e92568e2d8b" translate="yes" xml:space="preserve">
          <source>std::match_results::position</source>
          <target state="translated">std::match_results::position</target>
        </trans-unit>
        <trans-unit id="5d95b1ce665ffe472105a489c254b057b2d2c117" translate="yes" xml:space="preserve">
          <source>std::match_results::prefix</source>
          <target state="translated">std::match_results::prefix</target>
        </trans-unit>
        <trans-unit id="fe7d83054743b510a8fd3faf1ff98ce664671002" translate="yes" xml:space="preserve">
          <source>std::match_results::ready</source>
          <target state="translated">std::match_results::ready</target>
        </trans-unit>
        <trans-unit id="5535206b0f67442c90b59207c021eb771509ae75" translate="yes" xml:space="preserve">
          <source>std::match_results::size</source>
          <target state="translated">std::match_results::size</target>
        </trans-unit>
        <trans-unit id="3f167c949fd433f054e0d186ab9644e60c809233" translate="yes" xml:space="preserve">
          <source>std::match_results::str</source>
          <target state="translated">std::match_results::str</target>
        </trans-unit>
        <trans-unit id="d16863ebd64a7d5f5f4913ebd5decda2be8035d1" translate="yes" xml:space="preserve">
          <source>std::match_results::suffix</source>
          <target state="translated">std::match_results::suffix</target>
        </trans-unit>
        <trans-unit id="3f0596d66dcd96805b3fa2e56a550d675ba5d375" translate="yes" xml:space="preserve">
          <source>std::match_results::swap</source>
          <target state="translated">std::match_results::swap</target>
        </trans-unit>
        <trans-unit id="dec40d03a27a200f7051d103ad8fff8d921a2efd" translate="yes" xml:space="preserve">
          <source>std::match_results::~match_results</source>
          <target state="translated">std::match_results::~match_results</target>
        </trans-unit>
        <trans-unit id="9be95af885bd2c21cd2aadcb66fb6cbe70894cdf" translate="yes" xml:space="preserve">
          <source>std::max</source>
          <target state="translated">std::max</target>
        </trans-unit>
        <trans-unit id="815563a73b98e4458ee5f93db5fc55d7429f440b" translate="yes" xml:space="preserve">
          <source>std::max_align_t</source>
          <target state="translated">std::max_align_t</target>
        </trans-unit>
        <trans-unit id="cab6e5e8f0fcd040a8454bb0f23f09e132176c97" translate="yes" xml:space="preserve">
          <source>std::max_element</source>
          <target state="translated">std::max_element</target>
        </trans-unit>
        <trans-unit id="d3f1b6bebbfcdd127c6e096d3bc8a2960cf7cd79" translate="yes" xml:space="preserve">
          <source>std::mblen</source>
          <target state="translated">std::mblen</target>
        </trans-unit>
        <trans-unit id="7221f3a44f4d6a90f785263859aea8d3e05840c5" translate="yes" xml:space="preserve">
          <source>std::mbrlen</source>
          <target state="translated">std::mbrlen</target>
        </trans-unit>
        <trans-unit id="47fe20a613200a0f5470b3cdddf4d580a5b763a2" translate="yes" xml:space="preserve">
          <source>std::mbrtoc16</source>
          <target state="translated">std::mbrtoc16</target>
        </trans-unit>
        <trans-unit id="1c3181cc9016e0d12fa27878c4f6c9d4ecd05d01" translate="yes" xml:space="preserve">
          <source>std::mbrtoc32</source>
          <target state="translated">std::mbrtoc32</target>
        </trans-unit>
        <trans-unit id="23611d50346d2c629ccd50a422650096750926ba" translate="yes" xml:space="preserve">
          <source>std::mbrtoc8</source>
          <target state="translated">std::mbrtoc8</target>
        </trans-unit>
        <trans-unit id="a8dde3ae90ad7d06f13e6e65b21a3f70bd14f992" translate="yes" xml:space="preserve">
          <source>std::mbrtowc</source>
          <target state="translated">std::mbrtowc</target>
        </trans-unit>
        <trans-unit id="a293f23560d2c0ca5abd2cf6c873f79666bb8265" translate="yes" xml:space="preserve">
          <source>std::mbsinit</source>
          <target state="translated">std::mbsinit</target>
        </trans-unit>
        <trans-unit id="220898eb136c202eb6e8cbb58690cae1de79a114" translate="yes" xml:space="preserve">
          <source>std::mbsrtowcs</source>
          <target state="translated">std::mbsrtowcs</target>
        </trans-unit>
        <trans-unit id="f94ae91cc06397e13eba186b109fe3c5f360f330" translate="yes" xml:space="preserve">
          <source>std::mbstate_t</source>
          <target state="translated">std::mbstate_t</target>
        </trans-unit>
        <trans-unit id="2dd572a4945b7054f9b6d32faf652e7207c940bb" translate="yes" xml:space="preserve">
          <source>std::mbstowcs</source>
          <target state="translated">std::mbstowcs</target>
        </trans-unit>
        <trans-unit id="11b4ba1b0e017e0622a898023ea61d96485a3bde" translate="yes" xml:space="preserve">
          <source>std::mbtowc</source>
          <target state="translated">std::mbtowc</target>
        </trans-unit>
        <trans-unit id="1c18d490947be6b233d02156f217a9dc919491d0" translate="yes" xml:space="preserve">
          <source>std::mem_fn</source>
          <target state="translated">std::mem_fn</target>
        </trans-unit>
        <trans-unit id="4c658dbfe620be903d9dd6c3f2f992c842626120" translate="yes" xml:space="preserve">
          <source>std::mem_fn Return type</source>
          <target state="translated">std :: mem_fn 반환 유형</target>
        </trans-unit>
        <trans-unit id="63c5ebce7d77262611fe85d272d3baea4f0b45b9" translate="yes" xml:space="preserve">
          <source>std::mem_fun</source>
          <target state="translated">std::mem_fun</target>
        </trans-unit>
        <trans-unit id="436a13f671e3b3a0b36cee7c53206dcae2707f83" translate="yes" xml:space="preserve">
          <source>std::mem_fun_ref</source>
          <target state="translated">std::mem_fun_ref</target>
        </trans-unit>
        <trans-unit id="f1d718b34c4b80e21adc102f82e89f32008e8c0f" translate="yes" xml:space="preserve">
          <source>std::mem_fun_ref_t</source>
          <target state="translated">std::mem_fun_ref_t</target>
        </trans-unit>
        <trans-unit id="f522c95baf8698b64e3977d0aef82a12e744e051" translate="yes" xml:space="preserve">
          <source>std::mem_fun_ref_t, std::mem_fun1_ref_t, std::const_mem_fun_ref_t, std::const_mem_fun1_ref_t</source>
          <target state="translated">std :: mem_fun_ref_t, std :: mem_fun1_ref_t, std :: const_mem_fun_ref_t, std :: const_mem_fun1_ref_t</target>
        </trans-unit>
        <trans-unit id="7aa2a4c5913f4d4fc64072e5f4bc2b7c9928f848" translate="yes" xml:space="preserve">
          <source>std::mem_fun_t</source>
          <target state="translated">std::mem_fun_t</target>
        </trans-unit>
        <trans-unit id="99ea2b2f383bb2247a51e4c2abcb7399188f4e46" translate="yes" xml:space="preserve">
          <source>std::mem_fun_t, std::mem_fun1_t, std::const_mem_fun_t, std::const_mem_fun1_t</source>
          <target state="translated">std :: mem_fun_t, std :: mem_fun1_t, std :: const_mem_fun_t, std :: const_mem_fun1_t</target>
        </trans-unit>
        <trans-unit id="b21e9376e05505ea29e8c33f5ef602f4171af82a" translate="yes" xml:space="preserve">
          <source>std::memchr</source>
          <target state="translated">std::memchr</target>
        </trans-unit>
        <trans-unit id="6e5450825c693088f2e39e72e5e0de39c001e2ed" translate="yes" xml:space="preserve">
          <source>std::memcmp</source>
          <target state="translated">std::memcmp</target>
        </trans-unit>
        <trans-unit id="ce6ad6d8d3a4e12de7310bbac91295b47bfc4b19" translate="yes" xml:space="preserve">
          <source>std::memcpy</source>
          <target state="translated">std::memcpy</target>
        </trans-unit>
        <trans-unit id="0a4878d6646ad2d4abcff14eb8cc8bc720d0c583" translate="yes" xml:space="preserve">
          <source>std::memmove</source>
          <target state="translated">std::memmove</target>
        </trans-unit>
        <trans-unit id="fb2c2cfbb6b684b0d81e7e917be8e3fc7c64fe5d" translate="yes" xml:space="preserve">
          <source>std::memory_order</source>
          <target state="translated">std::memory_order</target>
        </trans-unit>
        <trans-unit id="45e137dd25c40ea37210bfbc04c26bd1b26d0845" translate="yes" xml:space="preserve">
          <source>std::memset</source>
          <target state="translated">std::memset</target>
        </trans-unit>
        <trans-unit id="563b1791ed03f90de6bf94634a64c7dba4484590" translate="yes" xml:space="preserve">
          <source>std::merge</source>
          <target state="translated">std::merge</target>
        </trans-unit>
        <trans-unit id="44f9b64e925efea11afc047e73aa63a410b8a774" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine</source>
          <target state="translated">std::mersenne_twister_engine</target>
        </trans-unit>
        <trans-unit id="6ad614a29a7d54578d91e95fc26c7325fee9082c" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::discard</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::discard</target>
        </trans-unit>
        <trans-unit id="655c02a593c26c06c7a36238cf732571c2f3b1ca" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::max</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="0654eb56c2f6de42247ecc5833bd8e11373d73de" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::mersenne_twister_engine</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::mersenne_twister_engine</target>
        </trans-unit>
        <trans-unit id="7e1c99d28dc2956a36690b7d41772e6c8a47f91f" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::min</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="601f9cff0b869ec3fca691be6a5b7f851387d53d" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::operator()</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="ee4d42cd36c97870c9b26458d4611bb4e0a7fe05" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::seed</source>
          <target state="translated">std::mersenne_twister_engine&amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;gt;::seed</target>
        </trans-unit>
        <trans-unit id="e0a30aae52259d00b4cc8541fd5d14af1072002e" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::discard</source>
          <target state="translated">std::mersenne_twister_engine::discard</target>
        </trans-unit>
        <trans-unit id="5c54a443ece5e97c54c433da960cf5b79ed26ac2" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::max</source>
          <target state="translated">std::mersenne_twister_engine::max</target>
        </trans-unit>
        <trans-unit id="b39f1d344f6234dd0377fe1f99ff31c97c54c12e" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::mersenne_twister_engine</source>
          <target state="translated">std::mersenne_twister_engine::mersenne_twister_engine</target>
        </trans-unit>
        <trans-unit id="13e52023ac955f6583891e1fef9040012744a8e6" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::min</source>
          <target state="translated">std::mersenne_twister_engine::min</target>
        </trans-unit>
        <trans-unit id="4f4fe1e7a5fc4f7151d7cbbbcd1ee1eb054fd69a" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::operator()</source>
          <target state="translated">std::mersenne_twister_engine::operator()</target>
        </trans-unit>
        <trans-unit id="7dba284f07152376e03796faf223d6edd56357f9" translate="yes" xml:space="preserve">
          <source>std::mersenne_twister_engine::seed</source>
          <target state="translated">std::mersenne_twister_engine::seed</target>
        </trans-unit>
        <trans-unit id="6e09dd6fb8f3fb3a8309a6a260be39c1853da230" translate="yes" xml:space="preserve">
          <source>std::messages</source>
          <target state="translated">std::messages</target>
        </trans-unit>
        <trans-unit id="9fdcc7e9e990f030c2ce8329289c5f62486d7fea" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::close, std::messages&amp;lt;CharT&amp;gt;::do_close</source>
          <target state="translated">std :: messages &amp;lt;CharT&amp;gt; :: close, std :: messages &amp;lt;CharT&amp;gt; :: do_close</target>
        </trans-unit>
        <trans-unit id="1a63913d6cc3f63597d90a85160f89df3a2b1309" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::get, std::messages&amp;lt;CharT&amp;gt;::do_get</source>
          <target state="translated">std :: messages &amp;lt;CharT&amp;gt; :: get, std :: messages &amp;lt;CharT&amp;gt; :: do_get</target>
        </trans-unit>
        <trans-unit id="179947c91d853a79c5c680a0ae55b79dc7680cf0" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::messages</source>
          <target state="translated">std::messages&amp;lt;CharT&amp;gt;::messages</target>
        </trans-unit>
        <trans-unit id="4bc690d4a7a2aed35ca1bf2929dd09d6b87fffe5" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::open, std::messages&amp;lt;CharT&amp;gt;::do_open</source>
          <target state="translated">std :: messages &amp;lt;CharT&amp;gt; :: open, std :: messages &amp;lt;CharT&amp;gt; :: do_open</target>
        </trans-unit>
        <trans-unit id="7fb54ce7c59ff0fa9174da55493cae330893fcc4" translate="yes" xml:space="preserve">
          <source>std::messages&amp;lt;CharT&amp;gt;::~messages</source>
          <target state="translated">std::messages&amp;lt;CharT&amp;gt;::~messages</target>
        </trans-unit>
        <trans-unit id="5bba0ea0c0217d59f8da092c078cb6009c578a0b" translate="yes" xml:space="preserve">
          <source>std::messages::do_close</source>
          <target state="translated">std::messages::do_close</target>
        </trans-unit>
        <trans-unit id="81058601cf0e1914f68e8332813b04b97e41beb7" translate="yes" xml:space="preserve">
          <source>std::messages::get</source>
          <target state="translated">std::messages::get</target>
        </trans-unit>
        <trans-unit id="61613cfcc9fc1eb3cbb53c73ff533d81eaced91c" translate="yes" xml:space="preserve">
          <source>std::messages::messages</source>
          <target state="translated">std::messages::messages</target>
        </trans-unit>
        <trans-unit id="4e0ce06f62858817c11cb5d87918da8e144937fb" translate="yes" xml:space="preserve">
          <source>std::messages::open</source>
          <target state="translated">std::messages::open</target>
        </trans-unit>
        <trans-unit id="aab711375c9dc3e02ae613b5b94b627e6ff5bb6c" translate="yes" xml:space="preserve">
          <source>std::messages::~messages</source>
          <target state="translated">std::messages::~messages</target>
        </trans-unit>
        <trans-unit id="68dc6ac0aa73e5882494103ba752dd8f7ce4ce76" translate="yes" xml:space="preserve">
          <source>std::messages_base</source>
          <target state="translated">std::messages_base</target>
        </trans-unit>
        <trans-unit id="86fe3001a599e6feaefb3b05ae1e3672cf512bdf" translate="yes" xml:space="preserve">
          <source>std::messages_byname</source>
          <target state="translated">std::messages_byname</target>
        </trans-unit>
        <trans-unit id="5d7f23a5e2348d459a59df014e9ec5b89bf5ed9c" translate="yes" xml:space="preserve">
          <source>std::messages_byname::messages_byname</source>
          <target state="translated">std::messages_byname::messages_byname</target>
        </trans-unit>
        <trans-unit id="b88d034297a4a231e02114c4863ee4aaf927da41" translate="yes" xml:space="preserve">
          <source>std::messages_byname::~messages_byname</source>
          <target state="translated">std::messages_byname::~messages_byname</target>
        </trans-unit>
        <trans-unit id="981ead5cdae43249d0d2ddf58184e9ee043fb8af" translate="yes" xml:space="preserve">
          <source>std::midpoint</source>
          <target state="translated">std::midpoint</target>
        </trans-unit>
        <trans-unit id="c048533c00192b90be99cc043eca0fc1440ef187" translate="yes" xml:space="preserve">
          <source>std::min</source>
          <target state="translated">std::min</target>
        </trans-unit>
        <trans-unit id="e4e72366feb2f96684a04e68e3c797d7d71289b1" translate="yes" xml:space="preserve">
          <source>std::min_element</source>
          <target state="translated">std::min_element</target>
        </trans-unit>
        <trans-unit id="7a31d5547e9ad984bb51ef030157f2b15f5cb9cf" translate="yes" xml:space="preserve">
          <source>std::minmax</source>
          <target state="translated">std::minmax</target>
        </trans-unit>
        <trans-unit id="12f544490f8e33f3e7a46e26f81c87474e25b1c2" translate="yes" xml:space="preserve">
          <source>std::minmax_element</source>
          <target state="translated">std::minmax_element</target>
        </trans-unit>
        <trans-unit id="eab455847119add5f2403953789a2ece6387c762" translate="yes" xml:space="preserve">
          <source>std::minus</source>
          <target state="translated">std::minus</target>
        </trans-unit>
        <trans-unit id="7b111d33831b8b0c45ae6b2c11754fbd32b717ce" translate="yes" xml:space="preserve">
          <source>std::minus&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::minus&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="0fe65ca2be2edb25be0dff07b4bffb0ac2882f43" translate="yes" xml:space="preserve">
          <source>std::minus&amp;lt;void&amp;gt;</source>
          <target state="translated">std::minus&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5015a349da0279cd3f8131ac92c11f29a54a6d05" translate="yes" xml:space="preserve">
          <source>std::minus::operator()</source>
          <target state="translated">std::minus::operator()</target>
        </trans-unit>
        <trans-unit id="7cce04cc81b7ceff89f3993d3323d711cd2e1416" translate="yes" xml:space="preserve">
          <source>std::mismatch</source>
          <target state="translated">std::mismatch</target>
        </trans-unit>
        <trans-unit id="78dd36dee7753c0e353f238243f0d692eb365e87" translate="yes" xml:space="preserve">
          <source>std::mktime</source>
          <target state="translated">std::mktime</target>
        </trans-unit>
        <trans-unit id="a5d2476267d986cc0a95d5089d899f49959ae85c" translate="yes" xml:space="preserve">
          <source>std::modf, std::modff, std::modfl</source>
          <target state="translated">표준 :: modf, 표준 :: modff, 표준 :: modfl</target>
        </trans-unit>
        <trans-unit id="2405f9accdd8f1c10b122898fe5ac450636e51ab" translate="yes" xml:space="preserve">
          <source>std::modfl</source>
          <target state="translated">std::modfl</target>
        </trans-unit>
        <trans-unit id="8ead7b1ca5a7df554a50246cea742548ca00a0bb" translate="yes" xml:space="preserve">
          <source>std::modulus</source>
          <target state="translated">std::modulus</target>
        </trans-unit>
        <trans-unit id="369498a4b9e9083a6d6c6f50373b861f57f7db90" translate="yes" xml:space="preserve">
          <source>std::modulus&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::modulus&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="a4d7b8963fb115c4795cce67bfa97c358ea37d20" translate="yes" xml:space="preserve">
          <source>std::modulus&amp;lt;void&amp;gt;</source>
          <target state="translated">std::modulus&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2d0629a75627fe40d82328732412da737bfbd8d6" translate="yes" xml:space="preserve">
          <source>std::modulus::operator()</source>
          <target state="translated">std::modulus::operator()</target>
        </trans-unit>
        <trans-unit id="ef9d1e835d54eeb4ec51822ba2e9221de5eb9a3b" translate="yes" xml:space="preserve">
          <source>std::money_base</source>
          <target state="translated">std::money_base</target>
        </trans-unit>
        <trans-unit id="4a8fbdba7907d7a26add926dfe8a54b068fce627" translate="yes" xml:space="preserve">
          <source>std::money_get</source>
          <target state="translated">std::money_get</target>
        </trans-unit>
        <trans-unit id="e97829c9992206b667baad9c429aff7d3547bcc1" translate="yes" xml:space="preserve">
          <source>std::money_get&amp;lt;CharT,InputIt&amp;gt;::get, do_get</source>
          <target state="translated">std :: money_get &amp;lt;CharT, InputIt&amp;gt; :: get, do_get</target>
        </trans-unit>
        <trans-unit id="98189c88bca754376fe417ef3f6dd57a8c797e55" translate="yes" xml:space="preserve">
          <source>std::money_get&amp;lt;CharT,InputIt&amp;gt;::money_get</source>
          <target state="translated">std::money_get&amp;lt;CharT,InputIt&amp;gt;::money_get</target>
        </trans-unit>
        <trans-unit id="b324b6a523939cb332e4f1886f605c1642ec462c" translate="yes" xml:space="preserve">
          <source>std::money_get&amp;lt;CharT,InputIt&amp;gt;::~money_get</source>
          <target state="translated">std::money_get&amp;lt;CharT,InputIt&amp;gt;::~money_get</target>
        </trans-unit>
        <trans-unit id="8646085448b60c641ab39e791268608480aa0e33" translate="yes" xml:space="preserve">
          <source>std::money_get::get</source>
          <target state="translated">std::money_get::get</target>
        </trans-unit>
        <trans-unit id="b4a713d23b6a331c2af1d9984790e35261c79d14" translate="yes" xml:space="preserve">
          <source>std::money_get::money_get</source>
          <target state="translated">std::money_get::money_get</target>
        </trans-unit>
        <trans-unit id="4d3b93c161239c6e09bb1cd749057351935ffddf" translate="yes" xml:space="preserve">
          <source>std::money_get::~money_get</source>
          <target state="translated">std::money_get::~money_get</target>
        </trans-unit>
        <trans-unit id="d72633a67b0e2a5ad78ccde7490a82054c89f4db" translate="yes" xml:space="preserve">
          <source>std::money_put</source>
          <target state="translated">std::money_put</target>
        </trans-unit>
        <trans-unit id="d780a1d2f0515a954fcbddb27461ec919c6b8908" translate="yes" xml:space="preserve">
          <source>std::money_put&amp;lt;CharT,OutputIt&amp;gt;::money_put</source>
          <target state="translated">std::money_put&amp;lt;CharT,OutputIt&amp;gt;::money_put</target>
        </trans-unit>
        <trans-unit id="c668eb3e314a7d616d158323dbe38ff866d7915a" translate="yes" xml:space="preserve">
          <source>std::money_put&amp;lt;CharT,OutputIt&amp;gt;::put, do_put</source>
          <target state="translated">std :: money_put &amp;lt;CharT, OutputIt&amp;gt; :: put, do_put</target>
        </trans-unit>
        <trans-unit id="605c9703ebd1f9ce0c0d2647777ea9b6dcd74cdb" translate="yes" xml:space="preserve">
          <source>std::money_put&amp;lt;CharT,OutputIt&amp;gt;::~money_put</source>
          <target state="translated">std::money_put&amp;lt;CharT,OutputIt&amp;gt;::~money_put</target>
        </trans-unit>
        <trans-unit id="ad4b6e5314d480a686357fd7264a0eefeeb95ad9" translate="yes" xml:space="preserve">
          <source>std::money_put::money_put</source>
          <target state="translated">std::money_put::money_put</target>
        </trans-unit>
        <trans-unit id="94eed2d99b4893b7ff84c0fddf30390e3f492bb4" translate="yes" xml:space="preserve">
          <source>std::money_put::put</source>
          <target state="translated">std::money_put::put</target>
        </trans-unit>
        <trans-unit id="b35213993357bb7ae0f39fd62b91842d33004d4f" translate="yes" xml:space="preserve">
          <source>std::money_put::~money_put</source>
          <target state="translated">std::money_put::~money_put</target>
        </trans-unit>
        <trans-unit id="b0415b6afe0d9cc11cd4e1a64200a529ad40c0fd" translate="yes" xml:space="preserve">
          <source>std::moneypunct</source>
          <target state="translated">std::moneypunct</target>
        </trans-unit>
        <trans-unit id="4338c292f2ef0a8ee9bc18a79574d82340e65692" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::curr_symbol, do_curr_symbol</source>
          <target state="translated">std :: moneypunct &amp;lt;CharT, International&amp;gt; :: curr_symbol, do_curr_symbol</target>
        </trans-unit>
        <trans-unit id="f7b0426519650dc70ee8f721441ee05401760f61" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::decimal_point, do_decimal_point</source>
          <target state="translated">std :: moneypunct &amp;lt;CharT, International&amp;gt; :: decimal_point, do_decimal_point</target>
        </trans-unit>
        <trans-unit id="da0d4e574b0eecf82a14d998790033d49d2ac472" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::frac_digits, do_frac_digits</source>
          <target state="translated">std :: moneypunct &amp;lt;CharT, International&amp;gt; :: frac_digits, do_frac_digits</target>
        </trans-unit>
        <trans-unit id="21d756ea0ffd917751f334dddffe1670f077220c" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::grouping, do_grouping</source>
          <target state="translated">std :: moneypunct &amp;lt;CharT, International&amp;gt; :: 그룹화, do_grouping</target>
        </trans-unit>
        <trans-unit id="915de6abe67901a5f2afc9a69e98974443bbfcd4" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::moneypunct</source>
          <target state="translated">std::moneypunct&amp;lt;CharT,International&amp;gt;::moneypunct</target>
        </trans-unit>
        <trans-unit id="81cbf613478d22c7320f1d690411bc6987480e28" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::pos_format, do_pos_format, neg_format, do_neg_format</source>
          <target state="translated">std :: moneypunct &amp;lt;CharT, International&amp;gt; :: pos_format, do_pos_format, neg_format, do_neg_format</target>
        </trans-unit>
        <trans-unit id="1fc70c425169d99642b0a05237d08aefe6487cca" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::positive_sign, do_positive_sign, negative_sign, do_negative_sign</source>
          <target state="translated">std :: moneypunct &amp;lt;CharT, International&amp;gt; :: positive_sign, do_positive_sign, negative_sign, do_negative_sign</target>
        </trans-unit>
        <trans-unit id="0b5fe1721f88962c3a9b9d3af7e640582b93d2bf" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::thousands_sep, do_thousands_sep</source>
          <target state="translated">std :: moneypunct &amp;lt;CharT, International&amp;gt; :: 수천 _sep,도 _ 수천 _sep</target>
        </trans-unit>
        <trans-unit id="3d2e81087908df27b40d76cd34576ef5ecbd4727" translate="yes" xml:space="preserve">
          <source>std::moneypunct&amp;lt;CharT,International&amp;gt;::~moneypunct</source>
          <target state="translated">std::moneypunct&amp;lt;CharT,International&amp;gt;::~moneypunct</target>
        </trans-unit>
        <trans-unit id="f099887dfdb830177d2ce1466a990d4c327fb5b7" translate="yes" xml:space="preserve">
          <source>std::moneypunct::curr_symbol</source>
          <target state="translated">std::moneypunct::curr_symbol</target>
        </trans-unit>
        <trans-unit id="9b3879cd694e995da87c7a6e294ef6c587ba4679" translate="yes" xml:space="preserve">
          <source>std::moneypunct::decimal_point</source>
          <target state="translated">std::moneypunct::decimal_point</target>
        </trans-unit>
        <trans-unit id="fb14a888811e2146ec74d84a338ed66e4a25619c" translate="yes" xml:space="preserve">
          <source>std::moneypunct::frac_digits</source>
          <target state="translated">std::moneypunct::frac_digits</target>
        </trans-unit>
        <trans-unit id="a9e08e9ce439be67965353a16ab5d955fd96f687" translate="yes" xml:space="preserve">
          <source>std::moneypunct::grouping</source>
          <target state="translated">std::moneypunct::grouping</target>
        </trans-unit>
        <trans-unit id="63f265a58ea2a5be2da94760f9d7b62546c94ae9" translate="yes" xml:space="preserve">
          <source>std::moneypunct::moneypunct</source>
          <target state="translated">std::moneypunct::moneypunct</target>
        </trans-unit>
        <trans-unit id="a5f8629cebb6bce9fb060ecdf61162fc1e9dbb99" translate="yes" xml:space="preserve">
          <source>std::moneypunct::pos_format</source>
          <target state="translated">std::moneypunct::pos_format</target>
        </trans-unit>
        <trans-unit id="56c88cafaf6c85c3d35aadf2813806d55573017a" translate="yes" xml:space="preserve">
          <source>std::moneypunct::positive_sign</source>
          <target state="translated">std::moneypunct::positive_sign</target>
        </trans-unit>
        <trans-unit id="4ca8d403fdbdffbc887f2f7aa5dc636f01c510d0" translate="yes" xml:space="preserve">
          <source>std::moneypunct::thousands_sep</source>
          <target state="translated">std::moneypunct::thousands_sep</target>
        </trans-unit>
        <trans-unit id="502ede272b0b47ebc834c8075da5f299581e8a96" translate="yes" xml:space="preserve">
          <source>std::moneypunct::~moneypunct</source>
          <target state="translated">std::moneypunct::~moneypunct</target>
        </trans-unit>
        <trans-unit id="c4ff1949d1d8a6011374c2e377c5f084f75c9d55" translate="yes" xml:space="preserve">
          <source>std::moneypunct_byname</source>
          <target state="translated">std::moneypunct_byname</target>
        </trans-unit>
        <trans-unit id="28fc598104e4fa7b68cee414ad60deda61597663" translate="yes" xml:space="preserve">
          <source>std::moneypunct_byname::moneypunct_byname</source>
          <target state="translated">std::moneypunct_byname::moneypunct_byname</target>
        </trans-unit>
        <trans-unit id="a945c8728a077353b0efdc69b278d7d2588db0a9" translate="yes" xml:space="preserve">
          <source>std::moneypunct_byname::~moneypunct_byname</source>
          <target state="translated">std::moneypunct_byname::~moneypunct_byname</target>
        </trans-unit>
        <trans-unit id="c9e49ff7a8e32031c28bc87277cc75d0094248d2" translate="yes" xml:space="preserve">
          <source>std::monostate</source>
          <target state="translated">std::monostate</target>
        </trans-unit>
        <trans-unit id="5f1a4eb764926ed7e38f1e97bd5ece5f6ea5b676" translate="yes" xml:space="preserve">
          <source>std::move</source>
          <target state="translated">std::move</target>
        </trans-unit>
        <trans-unit id="981bbdad51df6259bb7f8fb85a2cef1f88d347fc" translate="yes" xml:space="preserve">
          <source>std::move_backward</source>
          <target state="translated">std::move_backward</target>
        </trans-unit>
        <trans-unit id="a008df720bcc2bfced71e8b46526e75ebca3fa5a" translate="yes" xml:space="preserve">
          <source>std::move_if_noexcept</source>
          <target state="translated">std::move_if_noexcept</target>
        </trans-unit>
        <trans-unit id="a24d9a6189e4aa8c5017b4c140e6dfcb6b6b50a7" translate="yes" xml:space="preserve">
          <source>std::move_iterator</source>
          <target state="translated">std::move_iterator</target>
        </trans-unit>
        <trans-unit id="d84592c8eca921b434e386075b94e022b5c3a691" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::base</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::base</target>
        </trans-unit>
        <trans-unit id="1224aa7a570e4532ec576b096893cffb7bd45504" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::move_iterator</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::move_iterator</target>
        </trans-unit>
        <trans-unit id="7a4e9e60a9bede74123f32afcee2aa0745b80dc0" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator*,-&amp;gt;</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator*,-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b1f6a3be814185292d7852065ed14f792856be82" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator++,+,+=,--,-,-=</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator++,+,+=,--,-,-=</target>
        </trans-unit>
        <trans-unit id="d39f1672d9cf9eabc321c3ceb990c2f7cc414305" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator=</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="83c3cb245ef83c4595fe8f2656bd6289d51b0140" translate="yes" xml:space="preserve">
          <source>std::move_iterator&amp;lt;Iter&amp;gt;::operator[]</source>
          <target state="translated">std::move_iterator&amp;lt;Iter&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="99d4e696ffd619a44cfeb6e02d9ae633b0c64752" translate="yes" xml:space="preserve">
          <source>std::move_iterator::base</source>
          <target state="translated">std::move_iterator::base</target>
        </trans-unit>
        <trans-unit id="b945d3718a87576fd4f51c07447071f8fa83dab5" translate="yes" xml:space="preserve">
          <source>std::move_iterator::move_iterator</source>
          <target state="translated">std::move_iterator::move_iterator</target>
        </trans-unit>
        <trans-unit id="42496ac9f77a5b9cb56e1d29928d4d7c9ec7ae1b" translate="yes" xml:space="preserve">
          <source>std::move_iterator::operator=</source>
          <target state="translated">std::move_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="8920f6d443fcc5a0c9167eb2e0291d1ead36ebcf" translate="yes" xml:space="preserve">
          <source>std::move_iterator::operator[]</source>
          <target state="translated">std::move_iterator::operator[]</target>
        </trans-unit>
        <trans-unit id="7ce12c2384c0fb5839344530563d6bacdd26b533" translate="yes" xml:space="preserve">
          <source>std::move_iterator::operators</source>
          <target state="translated">std::move_iterator::operators</target>
        </trans-unit>
        <trans-unit id="69dbf76967589e773d589091b3efc54035d04ba3" translate="yes" xml:space="preserve">
          <source>std::multimap</source>
          <target state="translated">std::multimap</target>
        </trans-unit>
        <trans-unit id="84b8b8a619cdfb9b5a3b3041481197245953c6ef" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::operator()</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::operator()</target>
        </trans-unit>
        <trans-unit id="23c1468c50ba276c03b302b197fcaa98045926b7" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::value_compare</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Alloc&amp;gt;::value_compare::value_compare</target>
        </trans-unit>
        <trans-unit id="52b37380d32f8acf3fa5f10042577ee9400920cd" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::begin, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::cbegin</source>
          <target state="translated">std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: begin, std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: cbegin</target>
        </trans-unit>
        <trans-unit id="72037e612bcb03ce193f9697a9859aa95a4e1cd4" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::clear</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="a266e322d1c93e03e0965818d9f1501210e8cdcc" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::contains</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::contains</target>
        </trans-unit>
        <trans-unit id="f6140ae5c4d08950857418cd44011595866c11dd" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::count</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::count</target>
        </trans-unit>
        <trans-unit id="62e083af550ecd84fa06f903c9ba8fa0a4ba8274" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="9db2e2d9b9ee8fcb104baafa9b4e1f86cec30a86" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace_hint</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::emplace_hint</target>
        </trans-unit>
        <trans-unit id="3781419a31d878d04ebc5c9a6a09f86a6e2120fc" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::empty</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="b6a21e8fae3a05e2eb07bafbf6f9b6453b2c8471" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::end, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::cend</source>
          <target state="translated">std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: end, std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: cend</target>
        </trans-unit>
        <trans-unit id="0110cf36db4e15ff1ec04bb7f6a9508171f409a1" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::equal_range</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::equal_range</target>
        </trans-unit>
        <trans-unit id="c39fd8ab9269a90850e641b404fc49524676128d" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::erase</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="faa3e96cb540af70e0c603dd8eaf495afabd7261" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::extract</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::extract</target>
        </trans-unit>
        <trans-unit id="53030e9d2e2f285734fcd4a9ec870e4ac1355f92" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::find</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::find</target>
        </trans-unit>
        <trans-unit id="51c248ca12f33c067fe64809819c201ac2af3f8e" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="c1a191428913e07fc0090fcfc46cfc9e934da234" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="13ec77c4e4d6b4ba83b64dfa13fdbf4132899c3a" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::key_comp</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::key_comp</target>
        </trans-unit>
        <trans-unit id="c8f5e106c7d4f4f32c3a5abf27cd9de6e461c68f" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::lower_bound</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::lower_bound</target>
        </trans-unit>
        <trans-unit id="af1a4429a20277784d466aa50d5f4109d342ae73" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="a940529c5df5dea714d44bf57e1d566df81cba4b" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::merge</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::merge</target>
        </trans-unit>
        <trans-unit id="f713059748a18a0e4b4ed04b33e558e3db59dd57" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::multimap</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::multimap</target>
        </trans-unit>
        <trans-unit id="cc25991a0ffb8e727199ffd6ae15fd44c1d5ca5c" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="580ef2d96ca7e88d1068e3243e2932404a81963d" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::rbegin, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::crbegin</source>
          <target state="translated">std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: rbegin, std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: crbegin</target>
        </trans-unit>
        <trans-unit id="85c7964cb9522c2599f9ff9dbe0a66f74f648251" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::rend, std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::crend</source>
          <target state="translated">std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: rend, std :: multimap &amp;lt;Key, T, Compare, Allocator&amp;gt; :: crend</target>
        </trans-unit>
        <trans-unit id="a73c8a34e680000ca036915d876f10b0fdef8204" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::size</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="aea3e55b6cfe467b3a417ec0e75d8051154a8f6f" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::swap</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="ba0db62b33e3601480b773ac95801f2e2e1f22d6" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::upper_bound</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::upper_bound</target>
        </trans-unit>
        <trans-unit id="3d167fc9c6d2475858b65e10817117671bf8e663" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_comp</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_comp</target>
        </trans-unit>
        <trans-unit id="294612c305e2cd78b84d3a50907b8154a4938803" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_compare</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::value_compare</target>
        </trans-unit>
        <trans-unit id="fe04326fe60f2daeb4ff70b0afeb9c6cfd7ee8f6" translate="yes" xml:space="preserve">
          <source>std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::~multimap</source>
          <target state="translated">std::multimap&amp;lt;Key,T,Compare,Allocator&amp;gt;::~multimap</target>
        </trans-unit>
        <trans-unit id="7d5b115fa525374b6840692fe4df2ac3037ec3c4" translate="yes" xml:space="preserve">
          <source>std::multimap::cbegin</source>
          <target state="translated">std::multimap::cbegin</target>
        </trans-unit>
        <trans-unit id="a6cd18800179788d04c9e360cdd2d21e8b260a94" translate="yes" xml:space="preserve">
          <source>std::multimap::clear</source>
          <target state="translated">std::multimap::clear</target>
        </trans-unit>
        <trans-unit id="b2deeffb654bb46c4ed20893c4c00d50e7a38b74" translate="yes" xml:space="preserve">
          <source>std::multimap::contains</source>
          <target state="translated">std::multimap::contains</target>
        </trans-unit>
        <trans-unit id="6727b37c0dead64e43394528a30741b07fe0a141" translate="yes" xml:space="preserve">
          <source>std::multimap::count</source>
          <target state="translated">std::multimap::count</target>
        </trans-unit>
        <trans-unit id="dacf013e76f2c7d90c08c7d8581b1fa43651de88" translate="yes" xml:space="preserve">
          <source>std::multimap::emplace</source>
          <target state="translated">std::multimap::emplace</target>
        </trans-unit>
        <trans-unit id="0a8bb56ccb11b31a81e356f8dc24d730662b0791" translate="yes" xml:space="preserve">
          <source>std::multimap::emplace_hint</source>
          <target state="translated">std::multimap::emplace_hint</target>
        </trans-unit>
        <trans-unit id="53fea1883fbc16e6cfc8fe8160cd336dddaeb556" translate="yes" xml:space="preserve">
          <source>std::multimap::empty</source>
          <target state="translated">std::multimap::empty</target>
        </trans-unit>
        <trans-unit id="0030cfaa6c53ea1f42203616c13e3b59b883fb2e" translate="yes" xml:space="preserve">
          <source>std::multimap::end</source>
          <target state="translated">std::multimap::end</target>
        </trans-unit>
        <trans-unit id="f3a1f35466a27ddc1c323d7b23111ccaa111fd76" translate="yes" xml:space="preserve">
          <source>std::multimap::equal_range</source>
          <target state="translated">std::multimap::equal_range</target>
        </trans-unit>
        <trans-unit id="7dcebc67fc3ac139b7729232f4029aae762a960a" translate="yes" xml:space="preserve">
          <source>std::multimap::erase</source>
          <target state="translated">std::multimap::erase</target>
        </trans-unit>
        <trans-unit id="72be9ec5731748a9c051272e42642ce88f7997a0" translate="yes" xml:space="preserve">
          <source>std::multimap::extract</source>
          <target state="translated">std::multimap::extract</target>
        </trans-unit>
        <trans-unit id="6d536ce913301cbaf0fd9061a8ab793043e5f733" translate="yes" xml:space="preserve">
          <source>std::multimap::find</source>
          <target state="translated">std::multimap::find</target>
        </trans-unit>
        <trans-unit id="63bf3b465a8219dd343a1156c470265664f6144c" translate="yes" xml:space="preserve">
          <source>std::multimap::get_allocator</source>
          <target state="translated">std::multimap::get_allocator</target>
        </trans-unit>
        <trans-unit id="d24fc21c706be82e85a8a9d30573070838c1a05e" translate="yes" xml:space="preserve">
          <source>std::multimap::insert</source>
          <target state="translated">std::multimap::insert</target>
        </trans-unit>
        <trans-unit id="852420c765a7f1f02ab7121f5ce234eb32a80699" translate="yes" xml:space="preserve">
          <source>std::multimap::key_comp</source>
          <target state="translated">std::multimap::key_comp</target>
        </trans-unit>
        <trans-unit id="037b8a064d87f9e02f92b761a1059dd272b0b770" translate="yes" xml:space="preserve">
          <source>std::multimap::lower_bound</source>
          <target state="translated">std::multimap::lower_bound</target>
        </trans-unit>
        <trans-unit id="8882ebf1244215052bfcadda470b9cb92239aea2" translate="yes" xml:space="preserve">
          <source>std::multimap::max_size</source>
          <target state="translated">std::multimap::max_size</target>
        </trans-unit>
        <trans-unit id="635417457a88757062b8fd43ea777c6190f39e3e" translate="yes" xml:space="preserve">
          <source>std::multimap::merge</source>
          <target state="translated">std::multimap::merge</target>
        </trans-unit>
        <trans-unit id="9e961314110b39f88239bcf6e901f3d00c6003a3" translate="yes" xml:space="preserve">
          <source>std::multimap::multimap</source>
          <target state="translated">std::multimap::multimap</target>
        </trans-unit>
        <trans-unit id="f0a947da9612aa9c6b6888ce43f25054088e6361" translate="yes" xml:space="preserve">
          <source>std::multimap::operator=</source>
          <target state="translated">std::multimap::operator=</target>
        </trans-unit>
        <trans-unit id="3fb6996efc98b8daf5375b4f7453f714fe00d45c" translate="yes" xml:space="preserve">
          <source>std::multimap::rbegin</source>
          <target state="translated">std::multimap::rbegin</target>
        </trans-unit>
        <trans-unit id="9bf5766f1a4e4eb493938bc5e0656e590a9ffe2e" translate="yes" xml:space="preserve">
          <source>std::multimap::rend</source>
          <target state="translated">std::multimap::rend</target>
        </trans-unit>
        <trans-unit id="25045c0ea113c966a4f595642930801cbd3c4bef" translate="yes" xml:space="preserve">
          <source>std::multimap::size</source>
          <target state="translated">std::multimap::size</target>
        </trans-unit>
        <trans-unit id="2a9673d6c4cfc241db58b9bf8f50ab5a62c39b6c" translate="yes" xml:space="preserve">
          <source>std::multimap::swap</source>
          <target state="translated">std::multimap::swap</target>
        </trans-unit>
        <trans-unit id="c5f26e105ff7831a9244b5a48b5fe98f99b005f0" translate="yes" xml:space="preserve">
          <source>std::multimap::upper_bound</source>
          <target state="translated">std::multimap::upper_bound</target>
        </trans-unit>
        <trans-unit id="426f647cc66469db06aeb05ee3aca96786764cec" translate="yes" xml:space="preserve">
          <source>std::multimap::value_comp</source>
          <target state="translated">std::multimap::value_comp</target>
        </trans-unit>
        <trans-unit id="56836a0f2270f63293b47aeafb2ed6e59234db00" translate="yes" xml:space="preserve">
          <source>std::multimap::value_compare</source>
          <target state="translated">std::multimap::value_compare</target>
        </trans-unit>
        <trans-unit id="f20c9d3383c5c011bc3b6ce259cdfc840673c984" translate="yes" xml:space="preserve">
          <source>std::multimap::~multimap</source>
          <target state="translated">std::multimap::~multimap</target>
        </trans-unit>
        <trans-unit id="e9c0c08c178a131e92758c73184cc2f3cd731ed1" translate="yes" xml:space="preserve">
          <source>std::multiplies</source>
          <target state="translated">std::multiplies</target>
        </trans-unit>
        <trans-unit id="7667f9f8465ad2ff42dc69ec439b30ae857e969d" translate="yes" xml:space="preserve">
          <source>std::multiplies&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::multiplies&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="b40af3c8049e383a3e900e741a03ca7cba0916ee" translate="yes" xml:space="preserve">
          <source>std::multiplies&amp;lt;void&amp;gt;</source>
          <target state="translated">std::multiplies&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ca72a226aaab414cb44de603a28d214c74b390b6" translate="yes" xml:space="preserve">
          <source>std::multiplies::operator()</source>
          <target state="translated">std::multiplies::operator()</target>
        </trans-unit>
        <trans-unit id="3e0c815f66732d4fc4f64068c154d1abebd85113" translate="yes" xml:space="preserve">
          <source>std::multiset</source>
          <target state="translated">std::multiset</target>
        </trans-unit>
        <trans-unit id="514ad9608a52dc42623740997a45afadd6a8c4c3" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::begin, std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::cbegin</source>
          <target state="translated">std :: multiset &amp;lt;Key, Compare, Allocator&amp;gt; :: begin, std :: multiset &amp;lt;Key, Compare, Allocator&amp;gt; :: cbegin</target>
        </trans-unit>
        <trans-unit id="e907c110f99fd8d9957cc67e19857363ef388db0" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::clear</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::clear</target>
        </trans-unit>
        <trans-unit id="ad11a3e51c6f11b9a1d24b07f12e665118134792" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::contains</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::contains</target>
        </trans-unit>
        <trans-unit id="c1f59f12336245ade311247ec1c54d6027fc08d6" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::count</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::count</target>
        </trans-unit>
        <trans-unit id="66e4785854b18bb52d996dce05243260526a4aec" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::emplace</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="8a0f1714471ee29e06d83bf8ec64d8681ce0e2f3" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::emplace_hint</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::emplace_hint</target>
        </trans-unit>
        <trans-unit id="cbe933eabb64ee70cfee1b2533b21ea4aedd832b" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::empty</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="8149c96e8789ecb386fccdd778632cc8996d3562" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::end, std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::cend</source>
          <target state="translated">std :: multiset &amp;lt;Key, Compare, Allocator&amp;gt; :: end, std :: multiset &amp;lt;Key, Compare, Allocator&amp;gt; :: cend</target>
        </trans-unit>
        <trans-unit id="6d8ea98ef51fb5f28c989f37aeef131fbf9a724e" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::equal_range</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::equal_range</target>
        </trans-unit>
        <trans-unit id="8d2bbcea03e5dc89194d01633af9ba9c37267e85" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::erase</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::erase</target>
        </trans-unit>
        <trans-unit id="af1575fdde48990930672bafcd6de7aec6bbb855" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::extract</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::extract</target>
        </trans-unit>
        <trans-unit id="957c3bce9c6e873628d4ce6de95007a3b7e5562b" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::find</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::find</target>
        </trans-unit>
        <trans-unit id="d906e5bc5eda0f91d3e87cc6f93800fe72b5eb5f" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::get_allocator</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::get_allocator</target>
        </trans-unit>
        <trans-unit id="64aaacd631b8f0c89a2554367cdaa7c4b2317704" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::insert</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::insert</target>
        </trans-unit>
        <trans-unit id="9177c3c5971a03e39b35298d595002b474759bd8" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::key_comp</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::key_comp</target>
        </trans-unit>
        <trans-unit id="0c761911e2adb5a203a141a620d1b329e7c946d8" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::lower_bound</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::lower_bound</target>
        </trans-unit>
        <trans-unit id="17208c2f8cc02e9b3e48d5dda4601660c803cfcd" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::max_size</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::max_size</target>
        </trans-unit>
        <trans-unit id="82f62348bc34a2cf2d2f27a161a852c0e670e7e5" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::merge</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::merge</target>
        </trans-unit>
        <trans-unit id="f0fe82a1b83d3003ddf4a91abdb14bc56901543a" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::multiset</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::multiset</target>
        </trans-unit>
        <trans-unit id="be1130dfdbf35b877705a40a48a4f8ab5ed93dbc" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::operator=</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="403954af455552d49ba1c2c2ae25394f5cc8815b" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::rbegin, std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::crbegin</source>
          <target state="translated">std :: multiset &amp;lt;키, 비교, 할당 자&amp;gt; :: rbegin, std :: multiset &amp;lt;키, 비교, 할당 자&amp;gt; :: crbegin</target>
        </trans-unit>
        <trans-unit id="bff62a52904b5b5fe0a95e232f05f578400b555d" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::rend, std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::crend</source>
          <target state="translated">std :: multiset &amp;lt;Key, Compare, Allocator&amp;gt; :: rend, std :: multiset &amp;lt;Key, Compare, Allocator&amp;gt; :: crend</target>
        </trans-unit>
        <trans-unit id="8b707150e3243a445b564f0f90e9edd341968d57" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::size</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="827a99495974ef1eb046fc2d37305f3d24be2207" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::swap</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="ac5787ad22f7ca55d8627018fe91a9dd9dcef930" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::upper_bound</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::upper_bound</target>
        </trans-unit>
        <trans-unit id="c5c397671bf2dcc8754a7b2a7b572048cb097208" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::value_comp</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::value_comp</target>
        </trans-unit>
        <trans-unit id="b401bfd5b318c4204629fa508a94f0193edf76a1" translate="yes" xml:space="preserve">
          <source>std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::~multiset</source>
          <target state="translated">std::multiset&amp;lt;Key,Compare,Allocator&amp;gt;::~multiset</target>
        </trans-unit>
        <trans-unit id="db42160208c5a1ea49d35eb4d78aa8be1fa3db56" translate="yes" xml:space="preserve">
          <source>std::multiset::cbegin</source>
          <target state="translated">std::multiset::cbegin</target>
        </trans-unit>
        <trans-unit id="ff4f98b9f18176291e4050030b90e98bac735c79" translate="yes" xml:space="preserve">
          <source>std::multiset::clear</source>
          <target state="translated">std::multiset::clear</target>
        </trans-unit>
        <trans-unit id="aa39dbe7e6b0bdc35ad937f8c469fdcea73e1fc4" translate="yes" xml:space="preserve">
          <source>std::multiset::contains</source>
          <target state="translated">std::multiset::contains</target>
        </trans-unit>
        <trans-unit id="8404c102c8db41ca439c588269a495f7641acee0" translate="yes" xml:space="preserve">
          <source>std::multiset::count</source>
          <target state="translated">std::multiset::count</target>
        </trans-unit>
        <trans-unit id="72e0ac358efb3bcf571bb7362897d7dcc7ddeef5" translate="yes" xml:space="preserve">
          <source>std::multiset::emplace</source>
          <target state="translated">std::multiset::emplace</target>
        </trans-unit>
        <trans-unit id="4fa79a060192df17fdfa96247ef4d5bf2988123f" translate="yes" xml:space="preserve">
          <source>std::multiset::emplace_hint</source>
          <target state="translated">std::multiset::emplace_hint</target>
        </trans-unit>
        <trans-unit id="1030e308d9ed0186fd5b235ed2c7e27eba020cfc" translate="yes" xml:space="preserve">
          <source>std::multiset::empty</source>
          <target state="translated">std::multiset::empty</target>
        </trans-unit>
        <trans-unit id="1e6cb1520a08dacd929b3c4ba32eaa813ad2dcb4" translate="yes" xml:space="preserve">
          <source>std::multiset::end</source>
          <target state="translated">std::multiset::end</target>
        </trans-unit>
        <trans-unit id="f5e5fcf40d5eaf82e78932a626a1fca1da3877e8" translate="yes" xml:space="preserve">
          <source>std::multiset::equal_range</source>
          <target state="translated">std::multiset::equal_range</target>
        </trans-unit>
        <trans-unit id="2f8756ab47f446c1e2a4c591938af10d1a74d1c8" translate="yes" xml:space="preserve">
          <source>std::multiset::erase</source>
          <target state="translated">std::multiset::erase</target>
        </trans-unit>
        <trans-unit id="8c725592f23290d8c8d3a9546c7dd43106faf2a8" translate="yes" xml:space="preserve">
          <source>std::multiset::extract</source>
          <target state="translated">std::multiset::extract</target>
        </trans-unit>
        <trans-unit id="be964af772206d7a4999a634a579065e40ad6a5e" translate="yes" xml:space="preserve">
          <source>std::multiset::find</source>
          <target state="translated">std::multiset::find</target>
        </trans-unit>
        <trans-unit id="e7d9b1496b84782df4aed1efd37dd91c11d18ca3" translate="yes" xml:space="preserve">
          <source>std::multiset::get_allocator</source>
          <target state="translated">std::multiset::get_allocator</target>
        </trans-unit>
        <trans-unit id="82a08db4e52c401548361ccc701b824dd69185bd" translate="yes" xml:space="preserve">
          <source>std::multiset::insert</source>
          <target state="translated">std::multiset::insert</target>
        </trans-unit>
        <trans-unit id="69e46f4fa0c9d55d1963cbcf69df74be5528d60a" translate="yes" xml:space="preserve">
          <source>std::multiset::key_comp</source>
          <target state="translated">std::multiset::key_comp</target>
        </trans-unit>
        <trans-unit id="cc8fe96b13616abbdafbbf2e7989fa5ab8266ec1" translate="yes" xml:space="preserve">
          <source>std::multiset::lower_bound</source>
          <target state="translated">std::multiset::lower_bound</target>
        </trans-unit>
        <trans-unit id="9a42820300efec8f71fdfe73515ef4c445cb894a" translate="yes" xml:space="preserve">
          <source>std::multiset::max_size</source>
          <target state="translated">std::multiset::max_size</target>
        </trans-unit>
        <trans-unit id="36701383ae46a48aa936a1f45d1b0e14405b23e4" translate="yes" xml:space="preserve">
          <source>std::multiset::merge</source>
          <target state="translated">std::multiset::merge</target>
        </trans-unit>
        <trans-unit id="fe565b4e18f059a521b822cbf025b26941ca366d" translate="yes" xml:space="preserve">
          <source>std::multiset::multiset</source>
          <target state="translated">std::multiset::multiset</target>
        </trans-unit>
        <trans-unit id="01b272881040c099a3fe106ae020ce3a43bec7ef" translate="yes" xml:space="preserve">
          <source>std::multiset::operator=</source>
          <target state="translated">std::multiset::operator=</target>
        </trans-unit>
        <trans-unit id="99dc5e6d8c2f23e5f39b9ee8f2dc3e52e099d8da" translate="yes" xml:space="preserve">
          <source>std::multiset::rbegin</source>
          <target state="translated">std::multiset::rbegin</target>
        </trans-unit>
        <trans-unit id="2d3f09ca87b9d7df8c9abf133eade3d3babab806" translate="yes" xml:space="preserve">
          <source>std::multiset::rend</source>
          <target state="translated">std::multiset::rend</target>
        </trans-unit>
        <trans-unit id="84b7821cc60664bba2bd4ee6c21817104500d07f" translate="yes" xml:space="preserve">
          <source>std::multiset::size</source>
          <target state="translated">std::multiset::size</target>
        </trans-unit>
        <trans-unit id="12479f0c1a1feddd31b4eb77fdb100078296e74a" translate="yes" xml:space="preserve">
          <source>std::multiset::swap</source>
          <target state="translated">std::multiset::swap</target>
        </trans-unit>
        <trans-unit id="18e512e24f847c7e8970993483451e84193452b6" translate="yes" xml:space="preserve">
          <source>std::multiset::upper_bound</source>
          <target state="translated">std::multiset::upper_bound</target>
        </trans-unit>
        <trans-unit id="717d55c44107402db990dee8aebac682dc4061d1" translate="yes" xml:space="preserve">
          <source>std::multiset::value_comp</source>
          <target state="translated">std::multiset::value_comp</target>
        </trans-unit>
        <trans-unit id="d70b49c629f6b8193ea0337e90f724144a8193df" translate="yes" xml:space="preserve">
          <source>std::multiset::~multiset</source>
          <target state="translated">std::multiset::~multiset</target>
        </trans-unit>
        <trans-unit id="91223b75f746233e9487b9add50926566c451f0b" translate="yes" xml:space="preserve">
          <source>std::mutex</source>
          <target state="translated">std::mutex</target>
        </trans-unit>
        <trans-unit id="6e8a7e58cf9b1ffbf51532225ccfc7066ff2ae79" translate="yes" xml:space="preserve">
          <source>std::mutex::lock</source>
          <target state="translated">std::mutex::lock</target>
        </trans-unit>
        <trans-unit id="806f13d131a39ddaf3e827bd4eeba9cee96170e8" translate="yes" xml:space="preserve">
          <source>std::mutex::mutex</source>
          <target state="translated">std::mutex::mutex</target>
        </trans-unit>
        <trans-unit id="071d77ee17227797cc565cef7cfda1cf7baefe81" translate="yes" xml:space="preserve">
          <source>std::mutex::native_handle</source>
          <target state="translated">std::mutex::native_handle</target>
        </trans-unit>
        <trans-unit id="0f63f30a690b739748c8b816a7385b7d91505663" translate="yes" xml:space="preserve">
          <source>std::mutex::try_lock</source>
          <target state="translated">std::mutex::try_lock</target>
        </trans-unit>
        <trans-unit id="2767bd0a654bb535b259687741d76ed4d8411787" translate="yes" xml:space="preserve">
          <source>std::mutex::unlock</source>
          <target state="translated">std::mutex::unlock</target>
        </trans-unit>
        <trans-unit id="3fc2488e11039c8377342b8872ec72306756f1e7" translate="yes" xml:space="preserve">
          <source>std::mutex::~mutex</source>
          <target state="translated">std::mutex::~mutex</target>
        </trans-unit>
        <trans-unit id="1d200a8c24fe3e25ca678091ee2e872e34dfe41e" translate="yes" xml:space="preserve">
          <source>std::nan, std::nanf, std::nanl</source>
          <target state="translated">std :: nan, std :: nanf, std :: nanl</target>
        </trans-unit>
        <trans-unit id="3a73b94aadabc5f269118d9af5e32b975e6e5e29" translate="yes" xml:space="preserve">
          <source>std::nanl</source>
          <target state="translated">std::nanl</target>
        </trans-unit>
        <trans-unit id="bdc70606fa82b41ae6bc56cee7e82ff1f5187823" translate="yes" xml:space="preserve">
          <source>std::nearbyint, std::nearbyintf, std::nearbyintl</source>
          <target state="translated">std :: nearbyint, std :: nearbyintf, std :: nearbyintl</target>
        </trans-unit>
        <trans-unit id="0349378d5a5fb1a86a7f95a67a135f0802b0d989" translate="yes" xml:space="preserve">
          <source>std::nearbyintl</source>
          <target state="translated">std::nearbyintl</target>
        </trans-unit>
        <trans-unit id="d9ceefc4159932db046bde21f04500c2f5702718" translate="yes" xml:space="preserve">
          <source>std::negate</source>
          <target state="translated">std::negate</target>
        </trans-unit>
        <trans-unit id="79c074b06dca1d738bc114f08a7c7ee8d73f324a" translate="yes" xml:space="preserve">
          <source>std::negate&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::negate&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="3f5799778c96c5bfb3d4c81dccca5b0eebc4dbb1" translate="yes" xml:space="preserve">
          <source>std::negate&amp;lt;void&amp;gt;</source>
          <target state="translated">std::negate&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2a29bb61d15ee7819961b8f5ddc5f486754366bd" translate="yes" xml:space="preserve">
          <source>std::negate::operator()</source>
          <target state="translated">std::negate::operator()</target>
        </trans-unit>
        <trans-unit id="d1841bb426c10e362ce1134b85f0dfd670ffb17f" translate="yes" xml:space="preserve">
          <source>std::negation</source>
          <target state="translated">std::negation</target>
        </trans-unit>
        <trans-unit id="c0b84c97a8185b817ea56c84bf3419fe981f6de8" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution</source>
          <target state="translated">std::negative_binomial_distribution</target>
        </trans-unit>
        <trans-unit id="38b82b71508975d998a1fee9d05fe92581635e8a" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::max</source>
          <target state="translated">std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="a3aff8bdd1b6f31ee6c5288db5ffdd0eee490497" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::min</source>
          <target state="translated">std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="440e601d5dbf9a27fe8d38afbc973696ac999d69" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::negative_binomial_distribution</source>
          <target state="translated">std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::negative_binomial_distribution</target>
        </trans-unit>
        <trans-unit id="879fc789959835334af9520d8f03f64a05de4268" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::operator()</source>
          <target state="translated">std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="f34e64e75d3804872ccd8808be04107f45df1e66" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::p, k</source>
          <target state="translated">std :: negative_binomial_distribution &amp;lt;IntType&amp;gt; :: p, k</target>
        </trans-unit>
        <trans-unit id="4c4fcf6baa13ac0f3fab0ab2eef08d21dece5ff3" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::param</source>
          <target state="translated">std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="1b1bd564cc8a9c9e5f806ea43e94f26f57d88bf1" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::reset</source>
          <target state="translated">std::negative_binomial_distribution&amp;lt;IntType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="ff12fff3175a4511615843f0db686b8ab4b0f5ee" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution::max</source>
          <target state="translated">std::negative_binomial_distribution::max</target>
        </trans-unit>
        <trans-unit id="5a6c3d6be4dff5f4a2095dc33905e7a0dad22528" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution::min</source>
          <target state="translated">std::negative_binomial_distribution::min</target>
        </trans-unit>
        <trans-unit id="2c9cf38e4a467e05db42245d965d7cf3b7a12eef" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution::negative_binomial_distribution</source>
          <target state="translated">std::negative_binomial_distribution::negative_binomial_distribution</target>
        </trans-unit>
        <trans-unit id="b0f575cec0cff4ee6c31b6ff59ffe653e1718f87" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution::operator()</source>
          <target state="translated">std::negative_binomial_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="42648e65322fa1a3fc9c31201f468f7023f5dc5f" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution::p</source>
          <target state="translated">std::negative_binomial_distribution::p</target>
        </trans-unit>
        <trans-unit id="a18070e48a840e86ec9a8dc07903651a876b6c12" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution::param</source>
          <target state="translated">std::negative_binomial_distribution::param</target>
        </trans-unit>
        <trans-unit id="06500c2b0fcf38cac517cd3394ba18f28fc2c919" translate="yes" xml:space="preserve">
          <source>std::negative_binomial_distribution::reset</source>
          <target state="translated">std::negative_binomial_distribution::reset</target>
        </trans-unit>
        <trans-unit id="6a593aec8e16054b2ce9f4ee6dfdc44c7fd8f6e2" translate="yes" xml:space="preserve">
          <source>std::nested_exception</source>
          <target state="translated">std::nested_exception</target>
        </trans-unit>
        <trans-unit id="2fe2aa8c8bfa565fc995df5f4f355ce286fc0f42" translate="yes" xml:space="preserve">
          <source>std::nested_exception::nested_exception</source>
          <target state="translated">std::nested_exception::nested_exception</target>
        </trans-unit>
        <trans-unit id="92829426219f25b272ca3537fdac01ec98f2f204" translate="yes" xml:space="preserve">
          <source>std::nested_exception::nested_ptr</source>
          <target state="translated">std::nested_exception::nested_ptr</target>
        </trans-unit>
        <trans-unit id="c46262b421c4294a7bd62524d0d6e8aa734b103d" translate="yes" xml:space="preserve">
          <source>std::nested_exception::operator=</source>
          <target state="translated">std::nested_exception::operator=</target>
        </trans-unit>
        <trans-unit id="c6a5d37bf36dfb2075d6184c95dad07eaf2c72c5" translate="yes" xml:space="preserve">
          <source>std::nested_exception::rethrow_nested</source>
          <target state="translated">std::nested_exception::rethrow_nested</target>
        </trans-unit>
        <trans-unit id="80ae5270c24db9721f6af4ff69048a1a4e2a17f3" translate="yes" xml:space="preserve">
          <source>std::nested_exception::~nested_exception</source>
          <target state="translated">std::nested_exception::~nested_exception</target>
        </trans-unit>
        <trans-unit id="3c7320f6d17345c9bcaa38cc0b9c63045d283603" translate="yes" xml:space="preserve">
          <source>std::new_handler</source>
          <target state="translated">std::new_handler</target>
        </trans-unit>
        <trans-unit id="d2b1729d6d569b53a5448c098ac6df098a3b24e9" translate="yes" xml:space="preserve">
          <source>std::next</source>
          <target state="translated">std::next</target>
        </trans-unit>
        <trans-unit id="31c0f2f3efb66993eff3a0763916f46132bad10e" translate="yes" xml:space="preserve">
          <source>std::next_permutation</source>
          <target state="translated">std::next_permutation</target>
        </trans-unit>
        <trans-unit id="1ba407c19a147f21bfd61d2a78525ef57fd8a886" translate="yes" xml:space="preserve">
          <source>std::nextafter, std::nextafterf, std::nextafterl, std::nexttoward, std::nexttowardf, std::nexttowardl</source>
          <target state="translated">std :: nextafter, std :: nextafterf, std :: nextafterl, std :: nexttoward, std :: nexttowardf, std :: nexttowardl</target>
        </trans-unit>
        <trans-unit id="85ab6f7304e993e622960dd20f7d8292ec57abc3" translate="yes" xml:space="preserve">
          <source>std::nexttowardl</source>
          <target state="translated">std::nexttowardl</target>
        </trans-unit>
        <trans-unit id="dc33ca1a66e34249fb7ce18a51bb42ad74e1985d" translate="yes" xml:space="preserve">
          <source>std::no_emit_on_flush</source>
          <target state="translated">std::no_emit_on_flush</target>
        </trans-unit>
        <trans-unit id="4a04702321ad6bf8420f2f5259fdff3ca826576b" translate="yes" xml:space="preserve">
          <source>std::noboolalpha</source>
          <target state="translated">std::noboolalpha</target>
        </trans-unit>
        <trans-unit id="cb772a9fd66ff652a4c99d5873d55ed7727a4898" translate="yes" xml:space="preserve">
          <source>std::none_of</source>
          <target state="translated">std::none_of</target>
        </trans-unit>
        <trans-unit id="2a325883d1151d441c4c2387b0a3d8c9ed67a9ab" translate="yes" xml:space="preserve">
          <source>std::norm(std::complex)</source>
          <target state="translated">std::norm(std::complex)</target>
        </trans-unit>
        <trans-unit id="9e48047be2695af7fd8ecee830aa0fd7603feb1d" translate="yes" xml:space="preserve">
          <source>std::normal_distribution</source>
          <target state="translated">std::normal_distribution</target>
        </trans-unit>
        <trans-unit id="fcb55cac97733fd7af111bf3aa0b743993afa6e7" translate="yes" xml:space="preserve">
          <source>std::normal_distribution&amp;lt;RealType&amp;gt;::max</source>
          <target state="translated">std::normal_distribution&amp;lt;RealType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="c623186bbdb33bb20c39a2143e3c67f413d1a274" translate="yes" xml:space="preserve">
          <source>std::normal_distribution&amp;lt;RealType&amp;gt;::mean, stddev</source>
          <target state="translated">std :: normal_distribution &amp;lt;RealType&amp;gt; :: mean, stddev</target>
        </trans-unit>
        <trans-unit id="aff5255fea407620d7d902e542c62a1379eb8ba3" translate="yes" xml:space="preserve">
          <source>std::normal_distribution&amp;lt;RealType&amp;gt;::min</source>
          <target state="translated">std::normal_distribution&amp;lt;RealType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="096805d25906ed099d6b9a45b475d8361a5e63e7" translate="yes" xml:space="preserve">
          <source>std::normal_distribution&amp;lt;RealType&amp;gt;::normal_distribution</source>
          <target state="translated">std::normal_distribution&amp;lt;RealType&amp;gt;::normal_distribution</target>
        </trans-unit>
        <trans-unit id="edb8e8ad6ba2910e0ac70000826ba63f3cf31258" translate="yes" xml:space="preserve">
          <source>std::normal_distribution&amp;lt;RealType&amp;gt;::operator()</source>
          <target state="translated">std::normal_distribution&amp;lt;RealType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="f8fcd509c2e3277a9e9eb083b334650a5e02ec8f" translate="yes" xml:space="preserve">
          <source>std::normal_distribution&amp;lt;RealType&amp;gt;::param</source>
          <target state="translated">std::normal_distribution&amp;lt;RealType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="f5c26d36ad800b9d2c72b410cff2bbaf1834645a" translate="yes" xml:space="preserve">
          <source>std::normal_distribution&amp;lt;RealType&amp;gt;::reset</source>
          <target state="translated">std::normal_distribution&amp;lt;RealType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="d2bda89d2d5cbc723a6941dce89b5a1110dc47a6" translate="yes" xml:space="preserve">
          <source>std::normal_distribution::max</source>
          <target state="translated">std::normal_distribution::max</target>
        </trans-unit>
        <trans-unit id="3aed5f2209c391d127030054039c65f79c53bba3" translate="yes" xml:space="preserve">
          <source>std::normal_distribution::min</source>
          <target state="translated">std::normal_distribution::min</target>
        </trans-unit>
        <trans-unit id="97f482a24c0b21e4f622c5fdfb3acc61de75a297" translate="yes" xml:space="preserve">
          <source>std::normal_distribution::normal_distribution</source>
          <target state="translated">std::normal_distribution::normal_distribution</target>
        </trans-unit>
        <trans-unit id="01b19b43cdcb50ba4730ac31217686219c255639" translate="yes" xml:space="preserve">
          <source>std::normal_distribution::operator()</source>
          <target state="translated">std::normal_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="21a8727a2aaa20fca86e2a0780d623440609f0a3" translate="yes" xml:space="preserve">
          <source>std::normal_distribution::param</source>
          <target state="translated">std::normal_distribution::param</target>
        </trans-unit>
        <trans-unit id="5f4d8966694ad0efa6848d2ddec2133cc42fa7c0" translate="yes" xml:space="preserve">
          <source>std::normal_distribution::reset</source>
          <target state="translated">std::normal_distribution::reset</target>
        </trans-unit>
        <trans-unit id="369d7c805a8f9d9d7b448ccb52a60788943e7ffc" translate="yes" xml:space="preserve">
          <source>std::not1</source>
          <target state="translated">std::not1</target>
        </trans-unit>
        <trans-unit id="f060ebfcddf226fb53e515d3e64a64f183479218" translate="yes" xml:space="preserve">
          <source>std::not2</source>
          <target state="translated">std::not2</target>
        </trans-unit>
        <trans-unit id="f6663f08e75799169a33fe7ad9a45fe8e5d2ebc9" translate="yes" xml:space="preserve">
          <source>std::not_equal_to</source>
          <target state="translated">std::not_equal_to</target>
        </trans-unit>
        <trans-unit id="efb700d9c074a0afc941a434ce9e8f1bd96c1cde" translate="yes" xml:space="preserve">
          <source>std::not_equal_to&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::not_equal_to&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="5c62640721bc4bee8f4140ff3cf57d47c10c2d33" translate="yes" xml:space="preserve">
          <source>std::not_equal_to&amp;lt;void&amp;gt;</source>
          <target state="translated">std::not_equal_to&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="83487f86b773de8576d5494c81769bcde070526a" translate="yes" xml:space="preserve">
          <source>std::not_equal_to::operator()</source>
          <target state="translated">std::not_equal_to::operator()</target>
        </trans-unit>
        <trans-unit id="79d743778e9bac5d56018e755a2dfb13555f5dd9" translate="yes" xml:space="preserve">
          <source>std::not_fn</source>
          <target state="translated">std::not_fn</target>
        </trans-unit>
        <trans-unit id="16adfd5f41611e0e3014dc860fcb9748904ece6d" translate="yes" xml:space="preserve">
          <source>std::nothrow</source>
          <target state="translated">std::nothrow</target>
        </trans-unit>
        <trans-unit id="61ae8b3f041300a54fa2fcf4121c831a1d02e855" translate="yes" xml:space="preserve">
          <source>std::nothrow_t</source>
          <target state="translated">std::nothrow_t</target>
        </trans-unit>
        <trans-unit id="289c91959f41a23cdd885abbbd4c01d36ed9c7d9" translate="yes" xml:space="preserve">
          <source>std::notify_all_at_thread_exit</source>
          <target state="translated">std::notify_all_at_thread_exit</target>
        </trans-unit>
        <trans-unit id="2706590b2812281572106c17372803b75587ae44" translate="yes" xml:space="preserve">
          <source>std::nth_element</source>
          <target state="translated">std::nth_element</target>
        </trans-unit>
        <trans-unit id="98e71ddad14170d8e1292b6a652213497247839b" translate="yes" xml:space="preserve">
          <source>std::nullopt</source>
          <target state="translated">std::nullopt</target>
        </trans-unit>
        <trans-unit id="cf1ce20f46b4230db8590baf759645166edf1b44" translate="yes" xml:space="preserve">
          <source>std::nullopt_t</source>
          <target state="translated">std::nullopt_t</target>
        </trans-unit>
        <trans-unit id="991461c89bf758ec92a9c2c4763d53fb870af727" translate="yes" xml:space="preserve">
          <source>std::nullptr_t</source>
          <target state="translated">std::nullptr_t</target>
        </trans-unit>
        <trans-unit id="ea2649ae388347ccdc51b5e718c7fc7ddef36484" translate="yes" xml:space="preserve">
          <source>std::num_get</source>
          <target state="translated">std::num_get</target>
        </trans-unit>
        <trans-unit id="3dc56b3d21041750a769669db5efe9d4afeaea1f" translate="yes" xml:space="preserve">
          <source>std::num_get&amp;lt;CharT,InputIt&amp;gt;::get, std::num_get&amp;lt;CharT,InputIt&amp;gt;::do_get</source>
          <target state="translated">std :: num_get &amp;lt;CharT, InputIt&amp;gt; :: get, std :: num_get &amp;lt;CharT, InputIt&amp;gt; :: do_get</target>
        </trans-unit>
        <trans-unit id="7b13fe05e08b4d8e51df612a7106a0e031dc76c2" translate="yes" xml:space="preserve">
          <source>std::num_get&amp;lt;CharT,InputIt&amp;gt;::num_get</source>
          <target state="translated">std::num_get&amp;lt;CharT,InputIt&amp;gt;::num_get</target>
        </trans-unit>
        <trans-unit id="7b349a8c1f363f25a39565128fc188a92684486c" translate="yes" xml:space="preserve">
          <source>std::num_get&amp;lt;CharT,InputIt&amp;gt;::~num_get</source>
          <target state="translated">std::num_get&amp;lt;CharT,InputIt&amp;gt;::~num_get</target>
        </trans-unit>
        <trans-unit id="64d2c06a4e336b54064c0f8522b65043662f2b8b" translate="yes" xml:space="preserve">
          <source>std::num_get::get</source>
          <target state="translated">std::num_get::get</target>
        </trans-unit>
        <trans-unit id="b3578a292e54692e63b55279c6d50943d26c5105" translate="yes" xml:space="preserve">
          <source>std::num_get::num_get</source>
          <target state="translated">std::num_get::num_get</target>
        </trans-unit>
        <trans-unit id="380d411f1aeceff29ecae9e7a7f7ceb2936d08ac" translate="yes" xml:space="preserve">
          <source>std::num_get::~num_get</source>
          <target state="translated">std::num_get::~num_get</target>
        </trans-unit>
        <trans-unit id="1ac7ce3a9279c4a79cfb084fe84b74c2691903a7" translate="yes" xml:space="preserve">
          <source>std::num_put</source>
          <target state="translated">std::num_put</target>
        </trans-unit>
        <trans-unit id="151ffe8d208a8639566cc59104b38c7f8d3a1aa6" translate="yes" xml:space="preserve">
          <source>std::num_put&amp;lt;CharT,OutputIt&amp;gt;::num_put</source>
          <target state="translated">std::num_put&amp;lt;CharT,OutputIt&amp;gt;::num_put</target>
        </trans-unit>
        <trans-unit id="9d0041c8705a7c56be27adbd2c978e5d85e9c64e" translate="yes" xml:space="preserve">
          <source>std::num_put&amp;lt;CharT,OutputIt&amp;gt;::put, std::num_put&amp;lt;CharT,OutputIt&amp;gt;::do_put</source>
          <target state="translated">std :: num_put &amp;lt;CharT, OutputIt&amp;gt; :: put, std :: num_put &amp;lt;CharT, OutputIt&amp;gt; :: do_put</target>
        </trans-unit>
        <trans-unit id="cb9ee45850614dd60e9d8f434850cf65a559f1a0" translate="yes" xml:space="preserve">
          <source>std::num_put&amp;lt;CharT,OutputIt&amp;gt;::~num_put</source>
          <target state="translated">std::num_put&amp;lt;CharT,OutputIt&amp;gt;::~num_put</target>
        </trans-unit>
        <trans-unit id="244c7110ebc205db1718981c0020b3d4d9037340" translate="yes" xml:space="preserve">
          <source>std::num_put::num_put</source>
          <target state="translated">std::num_put::num_put</target>
        </trans-unit>
        <trans-unit id="5e1718cc92c5133ff1f9bcbe1fba9033b819fb3a" translate="yes" xml:space="preserve">
          <source>std::num_put::put</source>
          <target state="translated">std::num_put::put</target>
        </trans-unit>
        <trans-unit id="740bba825fa963cdd6626040222208ac70cb4ea2" translate="yes" xml:space="preserve">
          <source>std::num_put::~num_put</source>
          <target state="translated">std::num_put::~num_put</target>
        </trans-unit>
        <trans-unit id="d32d542a43bb96d3759e9759d19b5a603910cff1" translate="yes" xml:space="preserve">
          <source>std::numeric_limits</source>
          <target state="translated">std::numeric_limits</target>
        </trans-unit>
        <trans-unit id="a70a72dc46d6a081cedbb8fe48f0251791355f8f" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::denorm_min</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::denorm_min</target>
        </trans-unit>
        <trans-unit id="7227b5c0903c6c702ec19660dc9c6596d16cd9c5" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::digits</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::digits</target>
        </trans-unit>
        <trans-unit id="55e64b719b85efa8183b90378d5d6be2ca89068b" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::digits10</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::digits10</target>
        </trans-unit>
        <trans-unit id="6a06a9d30cf428902a0a465745033a3c40f05739" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::epsilon</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::epsilon</target>
        </trans-unit>
        <trans-unit id="2b977973b6e588c3eb600f5a1bf97ed6bb70ac2a" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::has_denorm</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::has_denorm</target>
        </trans-unit>
        <trans-unit id="ecf24d6a9211da02f92dd5d54d17ebe9defd4df9" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::has_denorm_loss</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::has_denorm_loss</target>
        </trans-unit>
        <trans-unit id="b4691fb514b5c3eafe12d6c68c7daa08fdb81ae2" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::has_infinity</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::has_infinity</target>
        </trans-unit>
        <trans-unit id="35b61dab5f865eff08a7b91a8e1a6973489c11ad" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::has_quiet_NaN</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::has_quiet_NaN</target>
        </trans-unit>
        <trans-unit id="273de8ad159cd97682ea88ef3117f2021d9baa77" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::has_signaling_NaN</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::has_signaling_NaN</target>
        </trans-unit>
        <trans-unit id="254b9b196af7f4213973bc97e1128b15e8e47be8" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::infinity</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::infinity</target>
        </trans-unit>
        <trans-unit id="9b3dc9b48654734861255ea7978c6f1daea51d6c" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::is_bounded</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::is_bounded</target>
        </trans-unit>
        <trans-unit id="9fc7619e734a01238522eb5056bac68f04ef1efa" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::is_exact</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::is_exact</target>
        </trans-unit>
        <trans-unit id="ca812ad0e88e86ceb8a29d4021c69d359a1109bc" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::is_iec559</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::is_iec559</target>
        </trans-unit>
        <trans-unit id="d97c26a5244b8fd360685e6659223ec77b4279a3" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::is_integer</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::is_integer</target>
        </trans-unit>
        <trans-unit id="1d42bc0c11188a3e223b7ac3e4c6261b7c8736c2" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::is_modulo</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::is_modulo</target>
        </trans-unit>
        <trans-unit id="2fb7ba9b60179186f058e6503a54575a31beeec9" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::is_signed</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::is_signed</target>
        </trans-unit>
        <trans-unit id="77ccd4cf23bd4c648445853c1263815a31a20f1a" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::is_specialized</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::is_specialized</target>
        </trans-unit>
        <trans-unit id="86ee8e42bc0730726c9befb83ea5841bc09429d4" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::lowest</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::lowest</target>
        </trans-unit>
        <trans-unit id="24b8e957823a95e71c9df49c653a468b7f8739b9" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::max</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="5a5f73cdc8e673970253c5b4cba8b5fd1dfe0cbd" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::max_digits10</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::max_digits10</target>
        </trans-unit>
        <trans-unit id="4593db6d2d7594bb867b5b9a3c074aa26c3681d0" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::max_exponent</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::max_exponent</target>
        </trans-unit>
        <trans-unit id="d6db688bc1b4df5e73ed9b013ed7a99b2b1b15d4" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::max_exponent10</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::max_exponent10</target>
        </trans-unit>
        <trans-unit id="ecd36402f4363822d3452b85f4c45b1205d87c3b" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::min</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="678f139d4026ae735e367687751c398ec0ac1100" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::min_exponent</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::min_exponent</target>
        </trans-unit>
        <trans-unit id="b58c059e1e15e0bfdf6c3caa5e770a10c794c256" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::min_exponent10</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::min_exponent10</target>
        </trans-unit>
        <trans-unit id="6e3446341875c5708430e41e2292d6eb080c08f5" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::quiet_NaN</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::quiet_NaN</target>
        </trans-unit>
        <trans-unit id="643a1a31cb0078d0ac0e98ad861d130e324122c1" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::radix</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::radix</target>
        </trans-unit>
        <trans-unit id="6506ca269146b607796afc67832046a087d3d4cd" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::round_error</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::round_error</target>
        </trans-unit>
        <trans-unit id="7df41639c6ff22dc95452d2d55cee3fbaef47d4f" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::round_style</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::round_style</target>
        </trans-unit>
        <trans-unit id="a4f7ac45ce1458cc04b0072c513d4ea15b8462a5" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::signaling_NaN</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::signaling_NaN</target>
        </trans-unit>
        <trans-unit id="b3cfe8b3933553e2d35336dbeb7e4a20f97d6af7" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::tinyness_before</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::tinyness_before</target>
        </trans-unit>
        <trans-unit id="610badc821e9db0b079af64928d392eafe24f001" translate="yes" xml:space="preserve">
          <source>std::numeric_limits&amp;lt;T&amp;gt;::traps</source>
          <target state="translated">std::numeric_limits&amp;lt;T&amp;gt;::traps</target>
        </trans-unit>
        <trans-unit id="f4949ff1b40c9f640780388af6474d71fb603c69" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::denorm_min</source>
          <target state="translated">std::numeric_limits::denorm_min</target>
        </trans-unit>
        <trans-unit id="8de8c06217d7bc32307228a232840a1eb72d3be3" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::digits</source>
          <target state="translated">std::numeric_limits::digits</target>
        </trans-unit>
        <trans-unit id="4af97fb41f51a57a3de48f47ce458b6325defa6d" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::digits10</source>
          <target state="translated">std::numeric_limits::digits10</target>
        </trans-unit>
        <trans-unit id="c427eba9ff38d99cb5ab746be7d19735d98f7f60" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::epsilon</source>
          <target state="translated">std::numeric_limits::epsilon</target>
        </trans-unit>
        <trans-unit id="0608a88810190fe64883ca0ddfd5a8c1acb41107" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::has_denorm</source>
          <target state="translated">std::numeric_limits::has_denorm</target>
        </trans-unit>
        <trans-unit id="b0c413f4895476185756b47629bd9c54301d1245" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::has_denorm_loss</source>
          <target state="translated">std::numeric_limits::has_denorm_loss</target>
        </trans-unit>
        <trans-unit id="d004d50f99c75cd7a5718292e334f2b536760f43" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::has_infinity</source>
          <target state="translated">std::numeric_limits::has_infinity</target>
        </trans-unit>
        <trans-unit id="5e15d698f491362bcae553604ce42b409cf21c38" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::has_quiet_NaN</source>
          <target state="translated">std::numeric_limits::has_quiet_NaN</target>
        </trans-unit>
        <trans-unit id="184f755caf71da3fffd274eacbfd0b7d90fe9102" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::has_signaling_NaN</source>
          <target state="translated">std::numeric_limits::has_signaling_NaN</target>
        </trans-unit>
        <trans-unit id="3ef96497f5e41caac8fc7c4e31517d823099e8b0" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::infinity</source>
          <target state="translated">std::numeric_limits::infinity</target>
        </trans-unit>
        <trans-unit id="1f41061b5465fbd148cb33dca637b60caccab3ec" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::is_bounded</source>
          <target state="translated">std::numeric_limits::is_bounded</target>
        </trans-unit>
        <trans-unit id="104ba766a3d757ee1187c08e15231e7928131e43" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::is_exact</source>
          <target state="translated">std::numeric_limits::is_exact</target>
        </trans-unit>
        <trans-unit id="520778ca8aed9a4c7f81c573478ac51ccde6ed44" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::is_iec559</source>
          <target state="translated">std::numeric_limits::is_iec559</target>
        </trans-unit>
        <trans-unit id="7fa76ac0aa307def6cea6f53a90a15bdd96284f5" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::is_integer</source>
          <target state="translated">std::numeric_limits::is_integer</target>
        </trans-unit>
        <trans-unit id="b176593a8542c00cfedfd2505a00d42747c7e852" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::is_modulo</source>
          <target state="translated">std::numeric_limits::is_modulo</target>
        </trans-unit>
        <trans-unit id="b01dfd8ac6841a3ff9c4674904be8a5914f41a98" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::is_signed</source>
          <target state="translated">std::numeric_limits::is_signed</target>
        </trans-unit>
        <trans-unit id="653a4fb33f9ad6c487cb673f740812cf5d241cd5" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::is_specialized</source>
          <target state="translated">std::numeric_limits::is_specialized</target>
        </trans-unit>
        <trans-unit id="3cec974d9195f553e089184f26520dea5db7456e" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::lowest</source>
          <target state="translated">std::numeric_limits::lowest</target>
        </trans-unit>
        <trans-unit id="d3cc4e6b988a8ba03155552151becc382174822d" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::max</source>
          <target state="translated">std::numeric_limits::max</target>
        </trans-unit>
        <trans-unit id="767a0abcfe6b29ce599ba4aa26ab3188bf7ec589" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::max_digits10</source>
          <target state="translated">std::numeric_limits::max_digits10</target>
        </trans-unit>
        <trans-unit id="7e7cd750f7b10072d6feb43851ef0bbc748e47e1" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::max_exponent</source>
          <target state="translated">std::numeric_limits::max_exponent</target>
        </trans-unit>
        <trans-unit id="d576c1cb4baca090a82b3f0e4dca9ee1bd7b3105" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::max_exponent10</source>
          <target state="translated">std::numeric_limits::max_exponent10</target>
        </trans-unit>
        <trans-unit id="6780854516936e8bc5f12eca90821152dfdc5d92" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::min</source>
          <target state="translated">std::numeric_limits::min</target>
        </trans-unit>
        <trans-unit id="37c77c7659d47065632995f056e39d512dbd91fc" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::min_exponent</source>
          <target state="translated">std::numeric_limits::min_exponent</target>
        </trans-unit>
        <trans-unit id="a7601d733ae63eec1e1870af00e598d8f363dde7" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::min_exponent10</source>
          <target state="translated">std::numeric_limits::min_exponent10</target>
        </trans-unit>
        <trans-unit id="5b16c84fe407e1848f506f40e9db790d5fd6eeef" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::quiet_NaN</source>
          <target state="translated">std::numeric_limits::quiet_NaN</target>
        </trans-unit>
        <trans-unit id="d547b78291c8fc4009418886539cd8b6a57f327a" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::radix</source>
          <target state="translated">std::numeric_limits::radix</target>
        </trans-unit>
        <trans-unit id="a219a66c72ead55a8f26ae604e66500295b9a20c" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::round_error</source>
          <target state="translated">std::numeric_limits::round_error</target>
        </trans-unit>
        <trans-unit id="362c6ba4ab8500ddc2e23c6a7cc2dbcaae52dcaa" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::round_style</source>
          <target state="translated">std::numeric_limits::round_style</target>
        </trans-unit>
        <trans-unit id="41d1cae8d5b225c70d1920407c59251daaa9c4f0" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::signaling_NaN</source>
          <target state="translated">std::numeric_limits::signaling_NaN</target>
        </trans-unit>
        <trans-unit id="968c754251107ac074b526c73d9b42be4bc7ff37" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::tinyness_before</source>
          <target state="translated">std::numeric_limits::tinyness_before</target>
        </trans-unit>
        <trans-unit id="df61ef63783c015c5a7f3b62787a7ee7725d79d6" translate="yes" xml:space="preserve">
          <source>std::numeric_limits::traps</source>
          <target state="translated">std::numeric_limits::traps</target>
        </trans-unit>
        <trans-unit id="300ca6c5d4137a46e7b378d0e87d134cd5fccfab" translate="yes" xml:space="preserve">
          <source>std::numpunct</source>
          <target state="translated">std::numpunct</target>
        </trans-unit>
        <trans-unit id="70572a68710cb167929f6689fb0c0068de46c743" translate="yes" xml:space="preserve">
          <source>std::numpunct&amp;lt;CharT&amp;gt;::decimal_point, do_decimal_point</source>
          <target state="translated">std :: numpunct &amp;lt;CharT&amp;gt; :: decimal_point, do_decimal_point</target>
        </trans-unit>
        <trans-unit id="4ac3e695e9517211aa9e83853d969160e00e3c19" translate="yes" xml:space="preserve">
          <source>std::numpunct&amp;lt;CharT&amp;gt;::grouping, std::numpunct&amp;lt;CharT&amp;gt;::do_grouping</source>
          <target state="translated">std :: numpunct &amp;lt;CharT&amp;gt; :: grouping, std :: numpunct &amp;lt;CharT&amp;gt; :: do_grouping</target>
        </trans-unit>
        <trans-unit id="388690fb89aa1fb0cb06f5c8be85540604a85e9b" translate="yes" xml:space="preserve">
          <source>std::numpunct&amp;lt;CharT&amp;gt;::numpunct</source>
          <target state="translated">std::numpunct&amp;lt;CharT&amp;gt;::numpunct</target>
        </trans-unit>
        <trans-unit id="cec2950c38b0761704784cc3658ae32459d02ee7" translate="yes" xml:space="preserve">
          <source>std::numpunct&amp;lt;CharT&amp;gt;::thousands_sep, do_thousands_sep</source>
          <target state="translated">std :: numpunct &amp;lt;CharT&amp;gt; :: thousands_sep, do_thousands_sep</target>
        </trans-unit>
        <trans-unit id="9a594cd11576cf0ab91fa56f88ddadd0e63bcd36" translate="yes" xml:space="preserve">
          <source>std::numpunct&amp;lt;CharT&amp;gt;::truename, do_truename, falsename, do_falsename</source>
          <target state="translated">std :: numpunct &amp;lt;CharT&amp;gt; :: truename, do_truename, falsename, do_falsename</target>
        </trans-unit>
        <trans-unit id="2b9f22454432b0a4bba6b260c5f5012a1114b1c4" translate="yes" xml:space="preserve">
          <source>std::numpunct&amp;lt;CharT&amp;gt;::~numpunct</source>
          <target state="translated">std::numpunct&amp;lt;CharT&amp;gt;::~numpunct</target>
        </trans-unit>
        <trans-unit id="5b6be3832012acf0ad02c8b412db18a3245323f2" translate="yes" xml:space="preserve">
          <source>std::numpunct::decimal_point</source>
          <target state="translated">std::numpunct::decimal_point</target>
        </trans-unit>
        <trans-unit id="62b47b306093d62f7c2bfec799804d2e8982d84f" translate="yes" xml:space="preserve">
          <source>std::numpunct::grouping</source>
          <target state="translated">std::numpunct::grouping</target>
        </trans-unit>
        <trans-unit id="7343918db2c6345bfe8ea76f92697231279fd1b8" translate="yes" xml:space="preserve">
          <source>std::numpunct::numpunct</source>
          <target state="translated">std::numpunct::numpunct</target>
        </trans-unit>
        <trans-unit id="2c4d41c2f6bb0a5bd63225a96bce922211af8b0d" translate="yes" xml:space="preserve">
          <source>std::numpunct::thousands_sep</source>
          <target state="translated">std::numpunct::thousands_sep</target>
        </trans-unit>
        <trans-unit id="ff998d62ef308a7608ed1ed9516d02ea53b17662" translate="yes" xml:space="preserve">
          <source>std::numpunct::truename</source>
          <target state="translated">std::numpunct::truename</target>
        </trans-unit>
        <trans-unit id="bcc87fcee1495dc1b5bedfbbd35d8003c9300221" translate="yes" xml:space="preserve">
          <source>std::numpunct::~numpunct</source>
          <target state="translated">std::numpunct::~numpunct</target>
        </trans-unit>
        <trans-unit id="c72b45eaedbdcc8acc4e25d1a2edd05517bcd83a" translate="yes" xml:space="preserve">
          <source>std::numpunct_byname</source>
          <target state="translated">std::numpunct_byname</target>
        </trans-unit>
        <trans-unit id="8c815cc0f6d210288b9e28c22af3cbb2225621bc" translate="yes" xml:space="preserve">
          <source>std::numpunct_byname::numpunct_byname</source>
          <target state="translated">std::numpunct_byname::numpunct_byname</target>
        </trans-unit>
        <trans-unit id="bf4b361944fcb87ecedc925faebd0b9c5d33291b" translate="yes" xml:space="preserve">
          <source>std::numpunct_byname::~numpunct_byname</source>
          <target state="translated">std::numpunct_byname::~numpunct_byname</target>
        </trans-unit>
        <trans-unit id="fedda3555b3994f6fa2bff17e6d4143e94b07693" translate="yes" xml:space="preserve">
          <source>std::oct</source>
          <target state="translated">std::oct</target>
        </trans-unit>
        <trans-unit id="aa9fb1f0eae9b8e62fcf8625f4829b72bb50a8a8" translate="yes" xml:space="preserve">
          <source>std::once_flag</source>
          <target state="translated">std::once_flag</target>
        </trans-unit>
        <trans-unit id="26de14ba9b7f8d3030b864d61771b6a9c3eedcbb" translate="yes" xml:space="preserve">
          <source>std::once_flag::once_flag</source>
          <target state="translated">std::once_flag::once_flag</target>
        </trans-unit>
        <trans-unit id="c2206f0e449c91e783ee86f83eb362b1adf64854" translate="yes" xml:space="preserve">
          <source>std::operator&amp;lt;&amp;lt;(std::error_code)</source>
          <target state="translated">std::operator&amp;lt;&amp;lt;(std::error_code)</target>
        </trans-unit>
        <trans-unit id="e0450d6602d833486bbe66b18b42e9fe8a0f8a5d" translate="yes" xml:space="preserve">
          <source>std::operator&amp;lt;&amp;lt;,operator&amp;gt;&amp;gt;</source>
          <target state="translated">std::operator&amp;lt;&amp;lt;,operator&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0e9d1677db32e10a207cdeaccef5d7542734e372" translate="yes" xml:space="preserve">
          <source>std::operator&amp;lt;&amp;lt;=,operator&amp;gt;&amp;gt;=</source>
          <target state="translated">std::operator&amp;lt;&amp;lt;=,operator&amp;gt;&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="6fdd4dc9ad3ea68fc449ecdf70c7bc2eeea7c535" translate="yes" xml:space="preserve">
          <source>std::operator==,!=,&amp;lt;(std::error_code)</source>
          <target state="translated">std::operator==,!=,&amp;lt;(std::error_code)</target>
        </trans-unit>
        <trans-unit id="605920b3f52e42b6f04354dfd1b3690654503288" translate="yes" xml:space="preserve">
          <source>std::operators (std::error_code)</source>
          <target state="translated">std :: operators (std :: error_code)</target>
        </trans-unit>
        <trans-unit id="f4fb974b5fca1710fca8ba035f4406f0355683d9" translate="yes" xml:space="preserve">
          <source>std::operator|,operator&amp;amp;,operator^,operator~</source>
          <target state="translated">std::operator|,operator&amp;amp;,operator^,operator~</target>
        </trans-unit>
        <trans-unit id="bf8e866ddcbdda13c77efd458c3241a9c9e50660" translate="yes" xml:space="preserve">
          <source>std::operator|=,operator&amp;amp;=,operator^=</source>
          <target state="translated">std::operator|=,operator&amp;amp;=,operator^=</target>
        </trans-unit>
        <trans-unit id="3bb03afccdf6a76d44305aa4c7e374da721a9ef7" translate="yes" xml:space="preserve">
          <source>std::optional</source>
          <target state="translated">std::optional</target>
        </trans-unit>
        <trans-unit id="37b5ba9fb188f2ebd89dd175456008d8de334bab" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::emplace</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="bb795e4c8452d4dbddcec74731e7203653ff42af" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::operator bool, std::optional&amp;lt;T&amp;gt;::has_value</source>
          <target state="translated">std :: optional &amp;lt;T&amp;gt; :: operator bool, std :: optional &amp;lt;T&amp;gt; :: has_value</target>
        </trans-unit>
        <trans-unit id="4463c2832290ab44ec35a1526f087d0d2f7f4016" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::operator-&amp;gt;, std::optional&amp;lt;T&amp;gt;::operator*</source>
          <target state="translated">std :: optional &amp;lt;T&amp;gt; :: operator-&amp;gt;, std :: optional &amp;lt;T&amp;gt; :: operator *</target>
        </trans-unit>
        <trans-unit id="ea84f17337f01a6655f96b6f1be056c9e14e4f5e" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="9896cc4a9cf1e25115991a2443be3f7fb73849c3" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::optional</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::optional</target>
        </trans-unit>
        <trans-unit id="513b814c43766d7c5bba45ab9c7502b8b34f1bd3" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::reset</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="8736b903216b960cf88fa38a45f41ee9b6e7bada" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::swap</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="6dd69b364b9816d512cf118ab02ef19341f49511" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::value</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::value</target>
        </trans-unit>
        <trans-unit id="64a3c340e0f0f09ce3061ea8f07590837a13bc33" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::value_or</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::value_or</target>
        </trans-unit>
        <trans-unit id="da728e03022bb2edb5715c2cf7b9e7673468854e" translate="yes" xml:space="preserve">
          <source>std::optional&amp;lt;T&amp;gt;::~optional</source>
          <target state="translated">std::optional&amp;lt;T&amp;gt;::~optional</target>
        </trans-unit>
        <trans-unit id="16918d405a9cec0f0f7f017c68a07744f855cf0e" translate="yes" xml:space="preserve">
          <source>std::optional::emplace</source>
          <target state="translated">std::optional::emplace</target>
        </trans-unit>
        <trans-unit id="62075ea5303aecdf17eb8c55e59e101a3bfb8a64" translate="yes" xml:space="preserve">
          <source>std::optional::operator=</source>
          <target state="translated">std::optional::operator=</target>
        </trans-unit>
        <trans-unit id="28501d1b623be9f6d468932def17b5ff4bea294e" translate="yes" xml:space="preserve">
          <source>std::optional::operators</source>
          <target state="translated">std::optional::operators</target>
        </trans-unit>
        <trans-unit id="d34608173456deaaf8d3dbcaa67ba5a59a24e119" translate="yes" xml:space="preserve">
          <source>std::optional::optional</source>
          <target state="translated">std::optional::optional</target>
        </trans-unit>
        <trans-unit id="4f2d8ffdee6970207796d1e0a03b4e4294e65418" translate="yes" xml:space="preserve">
          <source>std::optional::reset</source>
          <target state="translated">std::optional::reset</target>
        </trans-unit>
        <trans-unit id="99e8673ec8e5bdc3860672af4efab553ae503fcc" translate="yes" xml:space="preserve">
          <source>std::optional::swap</source>
          <target state="translated">std::optional::swap</target>
        </trans-unit>
        <trans-unit id="6dd00b5c5e98a13ac2b9a358869443ccfa956ad0" translate="yes" xml:space="preserve">
          <source>std::optional::value</source>
          <target state="translated">std::optional::value</target>
        </trans-unit>
        <trans-unit id="afada8050f0b8d2e4bc6bb8c6224ad9f1d114002" translate="yes" xml:space="preserve">
          <source>std::optional::value_or</source>
          <target state="translated">std::optional::value_or</target>
        </trans-unit>
        <trans-unit id="915daad8b15344240b872645cde9c39cdad8ca20" translate="yes" xml:space="preserve">
          <source>std::optional::~optional</source>
          <target state="translated">std::optional::~optional</target>
        </trans-unit>
        <trans-unit id="80aa465e881f135765f9efe75ff8f09383fddfc4" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator</source>
          <target state="translated">std::ostream_iterator</target>
        </trans-unit>
        <trans-unit id="c5c07688ca0063ac496b5abf17c9b8b7a595593c" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::operator*</source>
          <target state="translated">std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::operator*</target>
        </trans-unit>
        <trans-unit id="16c116190cd178a4db5ff07be6e6977a02602518" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::operator++</source>
          <target state="translated">std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::operator++</target>
        </trans-unit>
        <trans-unit id="68231a0722cda9b9265f27a35dcefb7a51e1f3be" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="9a3314a929440555e12d3ee115080fdf4285916e" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::ostream_iterator</source>
          <target state="translated">std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::ostream_iterator</target>
        </trans-unit>
        <trans-unit id="6456c1840054776b2f3b147a445dd1007806d5ec" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::~ostream_iterator</source>
          <target state="translated">std::ostream_iterator&amp;lt;T,CharT,Traits&amp;gt;::~ostream_iterator</target>
        </trans-unit>
        <trans-unit id="5b8a96b2e053c2fc2902d19fc9d28a46a33af680" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator::operator*</source>
          <target state="translated">std::ostream_iterator::operator*</target>
        </trans-unit>
        <trans-unit id="091dc03de7413b4d0cd4068610db3fe324ee19ff" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator::operator++</source>
          <target state="translated">std::ostream_iterator::operator++</target>
        </trans-unit>
        <trans-unit id="8b1d62d06cc9b7c551251aee7ef1e2dad0949630" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator::operator=</source>
          <target state="translated">std::ostream_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="37f1d355b96ebe933f7c26690e73173e13429891" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator::ostream_iterator</source>
          <target state="translated">std::ostream_iterator::ostream_iterator</target>
        </trans-unit>
        <trans-unit id="ef7e52ce69a0f0f4249fb52e4d8df187c6cab975" translate="yes" xml:space="preserve">
          <source>std::ostream_iterator::~ostream_iterator</source>
          <target state="translated">std::ostream_iterator::~ostream_iterator</target>
        </trans-unit>
        <trans-unit id="a1a0c4461441e2e8fbc3825ef89c0f1978443cdc" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator</source>
          <target state="translated">std::ostreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="053438fa02c8d7758227a202b01d4135105b44ca" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::failed</source>
          <target state="translated">std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::failed</target>
        </trans-unit>
        <trans-unit id="c28d94cee7ddf517b023ea5b35f642c3ca1510b8" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator*</source>
          <target state="translated">std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator*</target>
        </trans-unit>
        <trans-unit id="2c4535fa696fe9c837ba6f96df79bd5476323dae" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator++</source>
          <target state="translated">std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator++</target>
        </trans-unit>
        <trans-unit id="d276baec75d363794d4a3a014f28ef636d18b3bf" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="78b47cd312a2b251aa605460536dac54d78f7776" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::ostreambuf_iterator</source>
          <target state="translated">std::ostreambuf_iterator&amp;lt;CharT,Traits&amp;gt;::ostreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="f30bfe45c40a4d24d7cde47d21f429ce5b47780b" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator::failed</source>
          <target state="translated">std::ostreambuf_iterator::failed</target>
        </trans-unit>
        <trans-unit id="68aa0ead2f71cd0d7e8be66fe313b9a85fe82310" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator::operator*</source>
          <target state="translated">std::ostreambuf_iterator::operator*</target>
        </trans-unit>
        <trans-unit id="181c812fcecc7dfce41dc110373d36853c53fcfa" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator::operator++</source>
          <target state="translated">std::ostreambuf_iterator::operator++</target>
        </trans-unit>
        <trans-unit id="39882a3b44f050bc899395f91c83f7ad48329f18" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator::operator=</source>
          <target state="translated">std::ostreambuf_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="dbc374b105c0529ba6cb0856c78024773f0ae83e" translate="yes" xml:space="preserve">
          <source>std::ostreambuf_iterator::ostreambuf_iterator</source>
          <target state="translated">std::ostreambuf_iterator::ostreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="afc9a82d8ff988b55160c22056fcda528d939658" translate="yes" xml:space="preserve">
          <source>std::ostrstream</source>
          <target state="translated">std::ostrstream</target>
        </trans-unit>
        <trans-unit id="9afb404972a0409c64fdd718955b114fa923e76c" translate="yes" xml:space="preserve">
          <source>std::ostrstream::freeze</source>
          <target state="translated">std::ostrstream::freeze</target>
        </trans-unit>
        <trans-unit id="4c7f965559819bfd5c1b4e269c2e3b81e78a9666" translate="yes" xml:space="preserve">
          <source>std::ostrstream::ostrstream</source>
          <target state="translated">std::ostrstream::ostrstream</target>
        </trans-unit>
        <trans-unit id="a7f00437a48e947cbd9643f25708b14437c897ef" translate="yes" xml:space="preserve">
          <source>std::ostrstream::pcount</source>
          <target state="translated">std::ostrstream::pcount</target>
        </trans-unit>
        <trans-unit id="7ea32973124d2b7b2cc3735dfba81853f903d690" translate="yes" xml:space="preserve">
          <source>std::ostrstream::rdbuf</source>
          <target state="translated">std::ostrstream::rdbuf</target>
        </trans-unit>
        <trans-unit id="fb4e5b7790a0f4b209e3e67291bde983fc47044a" translate="yes" xml:space="preserve">
          <source>std::ostrstream::str</source>
          <target state="translated">std::ostrstream::str</target>
        </trans-unit>
        <trans-unit id="f44409d6a56908400d8ea900d232078ad6430cb1" translate="yes" xml:space="preserve">
          <source>std::ostrstream::~ostrstream</source>
          <target state="translated">std::ostrstream::~ostrstream</target>
        </trans-unit>
        <trans-unit id="8ceb0d991170159045a10e3a89b3d795ceaa413c" translate="yes" xml:space="preserve">
          <source>std::out_of_range</source>
          <target state="translated">std::out_of_range</target>
        </trans-unit>
        <trans-unit id="ed48ecfd6ae832fe04d28e0c15942787ce4cd28b" translate="yes" xml:space="preserve">
          <source>std::out_of_range::out_of_range</source>
          <target state="translated">std::out_of_range::out_of_range</target>
        </trans-unit>
        <trans-unit id="9bd17ef2f1d1f9f04651b76c6c713aca64589604" translate="yes" xml:space="preserve">
          <source>std::overflow_error</source>
          <target state="translated">std::overflow_error</target>
        </trans-unit>
        <trans-unit id="5b97b4722eeff4a0b2bb250c73afd203c9e3c475" translate="yes" xml:space="preserve">
          <source>std::overflow_error::overflow_error</source>
          <target state="translated">std::overflow_error::overflow_error</target>
        </trans-unit>
        <trans-unit id="9d6e9dc04e2b7cf0682d8b28810994aa6c2d0af7" translate="yes" xml:space="preserve">
          <source>std::owner_less</source>
          <target state="translated">std::owner_less</target>
        </trans-unit>
        <trans-unit id="2bc04041ba24b1d174b1fe3ca4b88435f0454598" translate="yes" xml:space="preserve">
          <source>std::owner_less&amp;lt;void&amp;gt;::operator()</source>
          <target state="translated">std::owner_less&amp;lt;void&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="62bf39b2fa5b238bec58b010e407acca3ab4ac27" translate="yes" xml:space="preserve">
          <source>std::owner_less::operator()</source>
          <target state="translated">std::owner_less::operator()</target>
        </trans-unit>
        <trans-unit id="c2bded8fdfba67ba4d9c359d786d88eb297fce97" translate="yes" xml:space="preserve">
          <source>std::packaged_task</source>
          <target state="translated">std::packaged_task</target>
        </trans-unit>
        <trans-unit id="0318c79dc30bc67705e2fb9a3099ef95ad395b63" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::get_future</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::get_future</target>
        </trans-unit>
        <trans-unit id="f3808103c0a3d98cd1156b4ba5c838d9c3033fbf" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::make_ready_at_thread_exit</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::make_ready_at_thread_exit</target>
        </trans-unit>
        <trans-unit id="404f181e14e9cb3370cfae2f88724adf45e4f3f1" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::operator()</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="f1e0d81adbd25510967f8464cc20c5a3dad017d6" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::operator=</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="486b8d9e03e3dd01a42252a68005bdece729851e" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::packaged_task</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::packaged_task</target>
        </trans-unit>
        <trans-unit id="dc043148b59776e172d3db05a741fdd604bc87e0" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::reset</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="82143381bef462b423a98b7997a4d66490b1e6d0" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::swap</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="cb5c29edfb896f5dac765bcf140b6f05029ef126" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::valid</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::valid</target>
        </trans-unit>
        <trans-unit id="15c13af9f9321988e2e4310204c2c003bfe72531" translate="yes" xml:space="preserve">
          <source>std::packaged_task&amp;lt;R(Args...)&amp;gt;::~packaged_task</source>
          <target state="translated">std::packaged_task&amp;lt;R(Args...)&amp;gt;::~packaged_task</target>
        </trans-unit>
        <trans-unit id="84baeb2c87055589655298a0459db067eca02aac" translate="yes" xml:space="preserve">
          <source>std::packaged_task::get_future</source>
          <target state="translated">std::packaged_task::get_future</target>
        </trans-unit>
        <trans-unit id="50c4f9d75b68750687a9a903a66c2eaa29f4065d" translate="yes" xml:space="preserve">
          <source>std::packaged_task::make_ready_at_thread_exit</source>
          <target state="translated">std::packaged_task::make_ready_at_thread_exit</target>
        </trans-unit>
        <trans-unit id="4da08feb12bf7d8284b8de3c0687f60068cec9ed" translate="yes" xml:space="preserve">
          <source>std::packaged_task::operator()</source>
          <target state="translated">std::packaged_task::operator()</target>
        </trans-unit>
        <trans-unit id="5fa5a0bc69e4326d43f214f4f512fe3bbe5618e0" translate="yes" xml:space="preserve">
          <source>std::packaged_task::operator=</source>
          <target state="translated">std::packaged_task::operator=</target>
        </trans-unit>
        <trans-unit id="c0e5d493152b0cdf10eec07323ea234c222590a4" translate="yes" xml:space="preserve">
          <source>std::packaged_task::packaged_task</source>
          <target state="translated">std::packaged_task::packaged_task</target>
        </trans-unit>
        <trans-unit id="d07f4c995b59c717e262a08b5fad12ff7a02918e" translate="yes" xml:space="preserve">
          <source>std::packaged_task::reset</source>
          <target state="translated">std::packaged_task::reset</target>
        </trans-unit>
        <trans-unit id="605aa8f5c8fcef5041e74f1c7204697cd93b1856" translate="yes" xml:space="preserve">
          <source>std::packaged_task::swap</source>
          <target state="translated">std::packaged_task::swap</target>
        </trans-unit>
        <trans-unit id="09d90b7d0381900741d094835210cf9655b7f45f" translate="yes" xml:space="preserve">
          <source>std::packaged_task::valid</source>
          <target state="translated">std::packaged_task::valid</target>
        </trans-unit>
        <trans-unit id="2077763d50a52c92f59969e8cc72b46b1c1aaec4" translate="yes" xml:space="preserve">
          <source>std::packaged_task::~packaged_task</source>
          <target state="translated">std::packaged_task::~packaged_task</target>
        </trans-unit>
        <trans-unit id="fc7b978ee4d74d225dc467f464ee9ae893b76cc3" translate="yes" xml:space="preserve">
          <source>std::pair</source>
          <target state="translated">std::pair</target>
        </trans-unit>
        <trans-unit id="3f497ae871e1209e97cebf066767206ec04964a2" translate="yes" xml:space="preserve">
          <source>std::pair&amp;lt;T1,T2&amp;gt;::operator=</source>
          <target state="translated">std::pair&amp;lt;T1,T2&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="537ac72980c960b280e51c552ad7123eb997175c" translate="yes" xml:space="preserve">
          <source>std::pair&amp;lt;T1,T2&amp;gt;::pair</source>
          <target state="translated">std::pair&amp;lt;T1,T2&amp;gt;::pair</target>
        </trans-unit>
        <trans-unit id="08d11e0e1eca3bb9b6c8d4d3155c336e91b0db8f" translate="yes" xml:space="preserve">
          <source>std::pair&amp;lt;T1,T2&amp;gt;::swap</source>
          <target state="translated">std::pair&amp;lt;T1,T2&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="3e51c9d26fb8a0c382667e618bd622e9e3e22314" translate="yes" xml:space="preserve">
          <source>std::pair::operator=</source>
          <target state="translated">std::pair::operator=</target>
        </trans-unit>
        <trans-unit id="e5530b7784a2b2bb67c8ed18de8113f26b99c380" translate="yes" xml:space="preserve">
          <source>std::pair::pair</source>
          <target state="translated">std::pair::pair</target>
        </trans-unit>
        <trans-unit id="f59e039ec44ae4f41ff23a3aca9a3ea23a25320c" translate="yes" xml:space="preserve">
          <source>std::pair::swap</source>
          <target state="translated">std::pair::swap</target>
        </trans-unit>
        <trans-unit id="a6924ef63956f02f9523cded02ee403b1e8d4871" translate="yes" xml:space="preserve">
          <source>std::partial_order</source>
          <target state="translated">std::partial_order</target>
        </trans-unit>
        <trans-unit id="73d7db5bad0d52fc95a3a262c2f4b89672b282c6" translate="yes" xml:space="preserve">
          <source>std::partial_ordering</source>
          <target state="translated">std::partial_ordering</target>
        </trans-unit>
        <trans-unit id="d011b27184b83cdf1f31a1cd27bd583bd8a8f85f" translate="yes" xml:space="preserve">
          <source>std::partial_ordering::operator weak_equality</source>
          <target state="translated">std :: partial_ordering :: 연산자 weak_equality</target>
        </trans-unit>
        <trans-unit id="34bfb19c2b7d335aa4def5e03ab8ce958cd50ab9" translate="yes" xml:space="preserve">
          <source>std::partial_sort</source>
          <target state="translated">std::partial_sort</target>
        </trans-unit>
        <trans-unit id="86997c012b88a93bf0b6e88fa25caf31685c1c7e" translate="yes" xml:space="preserve">
          <source>std::partial_sort_copy</source>
          <target state="translated">std::partial_sort_copy</target>
        </trans-unit>
        <trans-unit id="e5e08ff904ea2bb2a165c0b1115247099d13b576" translate="yes" xml:space="preserve">
          <source>std::partial_sum</source>
          <target state="translated">std::partial_sum</target>
        </trans-unit>
        <trans-unit id="d43f4b641ea27a1f825c124742003eb9951d18da" translate="yes" xml:space="preserve">
          <source>std::partition</source>
          <target state="translated">std::partition</target>
        </trans-unit>
        <trans-unit id="12f05fb690df73b27ce81aec5e3142181b15db51" translate="yes" xml:space="preserve">
          <source>std::partition_copy</source>
          <target state="translated">std::partition_copy</target>
        </trans-unit>
        <trans-unit id="de81beb770e3a92e3b6587b12fa4c14f5d3fb8a6" translate="yes" xml:space="preserve">
          <source>std::partition_point</source>
          <target state="translated">std::partition_point</target>
        </trans-unit>
        <trans-unit id="e8c6a79d84b044bcb1745ca7362857b933bd9204" translate="yes" xml:space="preserve">
          <source>std::perror</source>
          <target state="translated">std::perror</target>
        </trans-unit>
        <trans-unit id="17067749876ba90a825d2dfb19a9390ab900270b" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution</source>
          <target state="translated">std::piecewise_constant_distribution</target>
        </trans-unit>
        <trans-unit id="fd47ea82ee58034a9f8ed553ab3ec5a4b1fe2cb3" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::intervals, densities</source>
          <target state="translated">std :: piecewise_constant_distribution &amp;lt;RealType&amp;gt; :: 간격, 밀도</target>
        </trans-unit>
        <trans-unit id="2a6f0f8f0621bab6c59a10325021d1f430c1d90e" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::max</source>
          <target state="translated">std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="2a8a4289e460599ae0f6f8e0a349ab068bbdfee7" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::min</source>
          <target state="translated">std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="42b09910f4e352ab592dd2288b705c72b7844303" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::operator()</source>
          <target state="translated">std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="8294ed7de821035f34001d874b050ff3e0df8b36" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::param</source>
          <target state="translated">std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="90db4b487a0f80a843bcb8ad5baa873de8f355c2" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::piecewise_constant_distribution</source>
          <target state="translated">std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::piecewise_constant_distribution</target>
        </trans-unit>
        <trans-unit id="9fcc2f1a456ca2d1ceb8c8991e2264bcd928c75a" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::reset</source>
          <target state="translated">std::piecewise_constant_distribution&amp;lt;RealType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="e26b344a641804d07025909b04cd8cb043790ea4" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution::intervals</source>
          <target state="translated">std::piecewise_constant_distribution::intervals</target>
        </trans-unit>
        <trans-unit id="9ba95b315389b953a9d36df4f53213240612d95f" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution::max</source>
          <target state="translated">std::piecewise_constant_distribution::max</target>
        </trans-unit>
        <trans-unit id="ba424ee0d694b5299e72e6360e22ce075283ab2e" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution::min</source>
          <target state="translated">std::piecewise_constant_distribution::min</target>
        </trans-unit>
        <trans-unit id="e315c5dbdf4f86a02bf74365179de98d5bb122ec" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution::operator()</source>
          <target state="translated">std::piecewise_constant_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="6809acfcc227c9a8319776429842be46c99bdedc" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution::param</source>
          <target state="translated">std::piecewise_constant_distribution::param</target>
        </trans-unit>
        <trans-unit id="1242186c2fe3d43a512ae9deac45dc3acaf2de71" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution::piecewise_constant_distribution</source>
          <target state="translated">std::piecewise_constant_distribution::piecewise_constant_distribution</target>
        </trans-unit>
        <trans-unit id="c7398571c6f307a85e21e0ef742aa10929648b8f" translate="yes" xml:space="preserve">
          <source>std::piecewise_constant_distribution::reset</source>
          <target state="translated">std::piecewise_constant_distribution::reset</target>
        </trans-unit>
        <trans-unit id="49b1cdd1453028a6f524a64e694c7aac34ca8d0b" translate="yes" xml:space="preserve">
          <source>std::piecewise_construct</source>
          <target state="translated">std::piecewise_construct</target>
        </trans-unit>
        <trans-unit id="3d6ee93706c59694eef9dbbcd4709fbf2cbad073" translate="yes" xml:space="preserve">
          <source>std::piecewise_construct_t</source>
          <target state="translated">std::piecewise_construct_t</target>
        </trans-unit>
        <trans-unit id="a9963bb7ce64a01fbb1cce5ec8f9cbe559699f0a" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution</source>
          <target state="translated">std::piecewise_linear_distribution</target>
        </trans-unit>
        <trans-unit id="7d05bb75e21e312ae44596cafefcd752421ca1b4" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::intervals, densities</source>
          <target state="translated">std :: piecewise_linear_distribution &amp;lt;RealType&amp;gt; :: 간격, 밀도</target>
        </trans-unit>
        <trans-unit id="23cdd589c94f91b234023aae9808f349a389b463" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::max</source>
          <target state="translated">std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="56a8ac2068e3abd5116f174475c88811825aac7d" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::min</source>
          <target state="translated">std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="c67d3bf93ec7f2579e6239ad9a8816c76e63408c" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::operator()</source>
          <target state="translated">std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="f5d4e544485b79af9586a74839eec43f6224597b" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::param</source>
          <target state="translated">std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="6f46ddd18161f4c371c6667cc52b40f02850d8d9" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::piecewise_linear_distribution</source>
          <target state="translated">std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::piecewise_linear_distribution</target>
        </trans-unit>
        <trans-unit id="c21e854e91dec4efb9389cdead9640101df1c5b2" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::reset</source>
          <target state="translated">std::piecewise_linear_distribution&amp;lt;RealType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="6273431e93bb5535370f8ccd820d2ebc0c35a8c9" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution::intervals</source>
          <target state="translated">std::piecewise_linear_distribution::intervals</target>
        </trans-unit>
        <trans-unit id="ac59dbb75e736219bb588575f4a2d636450b7e8c" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution::max</source>
          <target state="translated">std::piecewise_linear_distribution::max</target>
        </trans-unit>
        <trans-unit id="d7fcea03a81c16a3df321d89a24c4f3b88abe180" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution::min</source>
          <target state="translated">std::piecewise_linear_distribution::min</target>
        </trans-unit>
        <trans-unit id="96c183a2ac3effc2caf641f6a139b71cdbabc9c7" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution::operator()</source>
          <target state="translated">std::piecewise_linear_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="b7dce9ba721c2e5bd1e7c70cc67f171391fd4fe8" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution::param</source>
          <target state="translated">std::piecewise_linear_distribution::param</target>
        </trans-unit>
        <trans-unit id="3508e6fcd68d13a8d7984aba7db27f77a4f73a98" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution::piecewise_linear_distribution</source>
          <target state="translated">std::piecewise_linear_distribution::piecewise_linear_distribution</target>
        </trans-unit>
        <trans-unit id="ab6b7a225d20d6f6b72fbd441ada280b2b0aa4ee" translate="yes" xml:space="preserve">
          <source>std::piecewise_linear_distribution::reset</source>
          <target state="translated">std::piecewise_linear_distribution::reset</target>
        </trans-unit>
        <trans-unit id="f74b2c50a519b8286e2bd86a937853b9da43dcde" translate="yes" xml:space="preserve">
          <source>std::placeholders::_1, std::placeholders::_2, ..., std::placeholders::_N</source>
          <target state="translated">std :: placeholders :: _ 1, std :: placeholders :: _ 2, ..., std :: placeholders :: _ N</target>
        </trans-unit>
        <trans-unit id="1bccfd2530ecc4e8d4e61a3a4d62d9fd61705045" translate="yes" xml:space="preserve">
          <source>std::placeholders::_N</source>
          <target state="translated">std::placeholders::_N</target>
        </trans-unit>
        <trans-unit id="0bc1a47f8c942976232b61acf11b407a2265be98" translate="yes" xml:space="preserve">
          <source>std::plus</source>
          <target state="translated">std::plus</target>
        </trans-unit>
        <trans-unit id="08b183860cd21b3012aebb8f41aafef4ce6310cd" translate="yes" xml:space="preserve">
          <source>std::plus&amp;lt;&amp;gt;::operator()</source>
          <target state="translated">std::plus&amp;lt;&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="2f26f3124ac1248a46dcb19c14802345671774ff" translate="yes" xml:space="preserve">
          <source>std::plus&amp;lt;void&amp;gt;</source>
          <target state="translated">std::plus&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ad60d94a8f59ca0e02b1d1e79e4ac917846d1364" translate="yes" xml:space="preserve">
          <source>std::plus::operator()</source>
          <target state="translated">std::plus::operator()</target>
        </trans-unit>
        <trans-unit id="485329288fa3d0224faba4a1c93abd4bdca879e6" translate="yes" xml:space="preserve">
          <source>std::pmr::get_default_resource</source>
          <target state="translated">std::pmr::get_default_resource</target>
        </trans-unit>
        <trans-unit id="ebba4c8c6edade83c79e1bd5d4bcbd602c1f5e01" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource</source>
          <target state="translated">std::pmr::memory_resource</target>
        </trans-unit>
        <trans-unit id="dcda131477f4d844b1dba9c97ca5664187f43299" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource::allocate</source>
          <target state="translated">std::pmr::memory_resource::allocate</target>
        </trans-unit>
        <trans-unit id="00b3090e4177eee8432cb108b500d6481d3f46fc" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource::deallocate</source>
          <target state="translated">std::pmr::memory_resource::deallocate</target>
        </trans-unit>
        <trans-unit id="2e82ad42985a1dd1113ab540eb7a7b1cd52c422e" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource::do_allocate</source>
          <target state="translated">std::pmr::memory_resource::do_allocate</target>
        </trans-unit>
        <trans-unit id="0fb2c2b3533e88e20903fbaf70180ae812bd119c" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource::do_deallocate</source>
          <target state="translated">std::pmr::memory_resource::do_deallocate</target>
        </trans-unit>
        <trans-unit id="de1648273831c431b1e117398112a848e6e28171" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource::do_is_equal</source>
          <target state="translated">std::pmr::memory_resource::do_is_equal</target>
        </trans-unit>
        <trans-unit id="1a359a9646602fcb6b7b94e54360c7ce6f39c114" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource::is_equal</source>
          <target state="translated">std::pmr::memory_resource::is_equal</target>
        </trans-unit>
        <trans-unit id="145a79ce5356122e6a20e008f19e759cae1a9807" translate="yes" xml:space="preserve">
          <source>std::pmr::memory_resource::memory_resource</source>
          <target state="translated">std::pmr::memory_resource::memory_resource</target>
        </trans-unit>
        <trans-unit id="0d0413e060b2ba28c9b570988d766dd01d4f99fa" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource</source>
          <target state="translated">std::pmr::monotonic_buffer_resource</target>
        </trans-unit>
        <trans-unit id="95e0d2e4627a001c2568e21d1f9eeb4d9c0a0873" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource::do_allocate</source>
          <target state="translated">std::pmr::monotonic_buffer_resource::do_allocate</target>
        </trans-unit>
        <trans-unit id="8cd59dbcb6b5b161447a7d22af0635d0e3f457eb" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource::do_deallocate</source>
          <target state="translated">std::pmr::monotonic_buffer_resource::do_deallocate</target>
        </trans-unit>
        <trans-unit id="879535f025bbae0d9208d590ac6ef4e3c3fd0e43" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource::do_is_equal</source>
          <target state="translated">std::pmr::monotonic_buffer_resource::do_is_equal</target>
        </trans-unit>
        <trans-unit id="8cd4ef803ea1969ff50cee274c5c9846f5fe8d1d" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource::monotonic_buffer_resource</source>
          <target state="translated">std::pmr::monotonic_buffer_resource::monotonic_buffer_resource</target>
        </trans-unit>
        <trans-unit id="e8f4259aef7be951d1fab0f4d5b9d44adde45da0" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource::release</source>
          <target state="translated">std::pmr::monotonic_buffer_resource::release</target>
        </trans-unit>
        <trans-unit id="353e42ecd60f4217860b0a0d76dc3cda2b4b0abd" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource::upstream_resource</source>
          <target state="translated">std::pmr::monotonic_buffer_resource::upstream_resource</target>
        </trans-unit>
        <trans-unit id="46002a20bd6e8f567ceb609e5a080d530a53113e" translate="yes" xml:space="preserve">
          <source>std::pmr::monotonic_buffer_resource::~monotonic_buffer_resource</source>
          <target state="translated">std::pmr::monotonic_buffer_resource::~monotonic_buffer_resource</target>
        </trans-unit>
        <trans-unit id="7ae5122055b08520b962534d4876c0a2bc0855f9" translate="yes" xml:space="preserve">
          <source>std::pmr::new_delete_resource</source>
          <target state="translated">std::pmr::new_delete_resource</target>
        </trans-unit>
        <trans-unit id="d263c78801368df18a3590299494f41e2fae53db" translate="yes" xml:space="preserve">
          <source>std::pmr::null_memory_resource</source>
          <target state="translated">std::pmr::null_memory_resource</target>
        </trans-unit>
        <trans-unit id="326214a561c73676de53f63cf5241346ab5a14f1" translate="yes" xml:space="preserve">
          <source>std::pmr::operator==, std::pmr::operator!=</source>
          <target state="translated">std :: pmr :: operator ==, std :: pmr :: operator! =</target>
        </trans-unit>
        <trans-unit id="5d5916194d54d6240ca3e114cc7edf78aa3b9045" translate="yes" xml:space="preserve">
          <source>std::pmr::operators (std::pmr::operator!=)</source>
          <target state="translated">std :: pmr :: operators (std :: pmr :: operator! =)</target>
        </trans-unit>
        <trans-unit id="718b94bd2b413537ecb7d0fa87bac0262910098f" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator</source>
          <target state="translated">std::pmr::polymorphic_allocator</target>
        </trans-unit>
        <trans-unit id="3d325591a4496eae184d92b379fdbed7b79e89d2" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;:: select_on_container_copy_construction</source>
          <target state="translated">std :: pmr :: polymorphic_allocator &amp;lt;T&amp;gt; :: select_on_container_copy_construction</target>
        </trans-unit>
        <trans-unit id="91cc9730040eaa72cc028316e0a215d9ca04e678" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::allocate</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::allocate</target>
        </trans-unit>
        <trans-unit id="14c4e1fdb3552231846f6cdbb6ff378fa673db33" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::allocate_bytes</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::allocate_bytes</target>
        </trans-unit>
        <trans-unit id="f832524912180228b15fbbdbd81462e25aecf806" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::allocate_object</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::allocate_object</target>
        </trans-unit>
        <trans-unit id="aaf2302a750edfa1fe2dc1860f05a864c8d20783" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::construct</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::construct</target>
        </trans-unit>
        <trans-unit id="ac63cfc2d8dfc7d5ab745399d878b70a737b979c" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::deallocate</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::deallocate</target>
        </trans-unit>
        <trans-unit id="ad06913a3e43005558fabf69d10b9fdf7bf67c20" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::deallocate_bytes</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::deallocate_bytes</target>
        </trans-unit>
        <trans-unit id="d2dad43559ea4969a1260d350194d4770b1c2478" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::deallocate_object</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::deallocate_object</target>
        </trans-unit>
        <trans-unit id="40be8685f68e3c111ab63d097dec5a5bf86b7a14" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::destroy</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::destroy</target>
        </trans-unit>
        <trans-unit id="33fb503a4526e08b202cb2286eac895422f391ec" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::new_object</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::new_object</target>
        </trans-unit>
        <trans-unit id="73397cc0f2339bd2652ae5b16c49d71dffb67f7e" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::polymorphic_allocator</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::polymorphic_allocator</target>
        </trans-unit>
        <trans-unit id="4240a31fd49b0d600be6191409d439dcff626399" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::resource</source>
          <target state="translated">std::pmr::polymorphic_allocator&amp;lt;T&amp;gt;::resource</target>
        </trans-unit>
        <trans-unit id="b5e88372e80e318f14b3998d09d908eba10ac1a1" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator:: select_on_container_copy_construction</source>
          <target state="translated">std :: pmr :: polymorphic_allocator :: select_on_container_copy_construction</target>
        </trans-unit>
        <trans-unit id="e3c8dcdef8c091466f53a4a933952c90331cfdb9" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::allocate</source>
          <target state="translated">std::pmr::polymorphic_allocator::allocate</target>
        </trans-unit>
        <trans-unit id="3af71f7d86ec2fefe4d97e3a1fef55192ad8a624" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::allocate_bytes</source>
          <target state="translated">std::pmr::polymorphic_allocator::allocate_bytes</target>
        </trans-unit>
        <trans-unit id="ae667724fed9187c56b650ac2e9e074bf04ab7aa" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::allocate_object</source>
          <target state="translated">std::pmr::polymorphic_allocator::allocate_object</target>
        </trans-unit>
        <trans-unit id="dc69928c6a992be1ca583d57b210ef573ef4fe41" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::construct</source>
          <target state="translated">std::pmr::polymorphic_allocator::construct</target>
        </trans-unit>
        <trans-unit id="613070b9ff8e1aab541c2674963b1ebaaff33eb8" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::deallocate</source>
          <target state="translated">std::pmr::polymorphic_allocator::deallocate</target>
        </trans-unit>
        <trans-unit id="08a23776481caf73c67470597e79b4858a6ad76e" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::deallocate_bytes</source>
          <target state="translated">std::pmr::polymorphic_allocator::deallocate_bytes</target>
        </trans-unit>
        <trans-unit id="4898035c69d689c8893d755c416525e12d8bfd7a" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::deallocate_object</source>
          <target state="translated">std::pmr::polymorphic_allocator::deallocate_object</target>
        </trans-unit>
        <trans-unit id="715cced0e1bb374be8db4adba766a6f2473be18a" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::destroy</source>
          <target state="translated">std::pmr::polymorphic_allocator::destroy</target>
        </trans-unit>
        <trans-unit id="2dc4a076c6d15e5889c7247b11340bf157081ff6" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::new_object</source>
          <target state="translated">std::pmr::polymorphic_allocator::new_object</target>
        </trans-unit>
        <trans-unit id="9e5d4335bdf343082ca4a0eca65db5e142727874" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::polymorphic_allocator</source>
          <target state="translated">std::pmr::polymorphic_allocator::polymorphic_allocator</target>
        </trans-unit>
        <trans-unit id="73b729013962eaccacef495ac8ef597cd31223d7" translate="yes" xml:space="preserve">
          <source>std::pmr::polymorphic_allocator::resource</source>
          <target state="translated">std::pmr::polymorphic_allocator::resource</target>
        </trans-unit>
        <trans-unit id="b6f24790f1524c596abe8dc4591a5a05d4df561a" translate="yes" xml:space="preserve">
          <source>std::pmr::pool_options</source>
          <target state="translated">std::pmr::pool_options</target>
        </trans-unit>
        <trans-unit id="5d5df9959f418ba0b630154e97e92bf515242bad" translate="yes" xml:space="preserve">
          <source>std::pmr::set_default_resource</source>
          <target state="translated">std::pmr::set_default_resource</target>
        </trans-unit>
        <trans-unit id="16557bdccb40e8468b04752ead40c26f60bc44d3" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource</source>
          <target state="translated">std::pmr::synchronized_pool_resource</target>
        </trans-unit>
        <trans-unit id="3045e487016e52c1b26077929c9f1bd3db9081ef" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::do_allocate</source>
          <target state="translated">std::pmr::synchronized_pool_resource::do_allocate</target>
        </trans-unit>
        <trans-unit id="186b753f0e48fd86bc2d91ba29e0a90b8c4eae27" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::do_deallocate</source>
          <target state="translated">std::pmr::synchronized_pool_resource::do_deallocate</target>
        </trans-unit>
        <trans-unit id="3c8a3c3fec6436ab6c5f7aa23a474aa522a8b7e2" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::do_is_equal</source>
          <target state="translated">std::pmr::synchronized_pool_resource::do_is_equal</target>
        </trans-unit>
        <trans-unit id="20f84cf9620706dd1811b51a7e067566cafe4bb4" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::options</source>
          <target state="translated">std::pmr::synchronized_pool_resource::options</target>
        </trans-unit>
        <trans-unit id="27dc3fb464e1a21df1556eaa0f8c56de1e3fbb36" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::release</source>
          <target state="translated">std::pmr::synchronized_pool_resource::release</target>
        </trans-unit>
        <trans-unit id="d34df6109952dfaeca5149a1c0a092dcebd282c3" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::synchronized_pool_resource</source>
          <target state="translated">std::pmr::synchronized_pool_resource::synchronized_pool_resource</target>
        </trans-unit>
        <trans-unit id="5ce39c16cb9e81867e4b1459b4b1305f79f9bd47" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::upstream_resource</source>
          <target state="translated">std::pmr::synchronized_pool_resource::upstream_resource</target>
        </trans-unit>
        <trans-unit id="8f94a71a89b051c616dea2b990df3ce9f851b95d" translate="yes" xml:space="preserve">
          <source>std::pmr::synchronized_pool_resource::~synchronized_pool_resource</source>
          <target state="translated">std::pmr::synchronized_pool_resource::~synchronized_pool_resource</target>
        </trans-unit>
        <trans-unit id="63e57a26c97e89adcfe7a184ca9a810318d24c79" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource</target>
        </trans-unit>
        <trans-unit id="8f2bfa354998b8c2f1b646f35714a942373dcc0f" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::do_allocate</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::do_allocate</target>
        </trans-unit>
        <trans-unit id="d161c2ffbb8865a9e05710bc824bef5ebcd981fb" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::do_deallocate</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::do_deallocate</target>
        </trans-unit>
        <trans-unit id="aa19271d187c9f044b2f0f987cf4593df6c0958f" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::do_is_equal</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::do_is_equal</target>
        </trans-unit>
        <trans-unit id="231afe0419fed11d4adc24d2cd8ffe21f4ca8e30" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::options</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::options</target>
        </trans-unit>
        <trans-unit id="3a3cd171f8e7b2a005aaa106c4db68e01b3b61d9" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::release</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::release</target>
        </trans-unit>
        <trans-unit id="26fbdc49d22d5227d91158e69271c9da44fc2c7b" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::unsynchronized_pool_resource</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::unsynchronized_pool_resource</target>
        </trans-unit>
        <trans-unit id="9377e9a491f6ccc328c11dc65f1bc3e55bdf1189" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::upstream_resource</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::upstream_resource</target>
        </trans-unit>
        <trans-unit id="09ed8691b9902b1a36e209cee500bbefd2094ccb" translate="yes" xml:space="preserve">
          <source>std::pmr::unsynchronized_pool_resource::~unsynchronized_pool_resource</source>
          <target state="translated">std::pmr::unsynchronized_pool_resource::~unsynchronized_pool_resource</target>
        </trans-unit>
        <trans-unit id="1b7a5a492bd5387b1925ae9c62b735a5a7d8d3ba" translate="yes" xml:space="preserve">
          <source>std::pointer_safety</source>
          <target state="translated">std::pointer_safety</target>
        </trans-unit>
        <trans-unit id="144ba16e89e660b0aabe7be3cb25dd1e57819b6d" translate="yes" xml:space="preserve">
          <source>std::pointer_to_binary_function</source>
          <target state="translated">std::pointer_to_binary_function</target>
        </trans-unit>
        <trans-unit id="957a74e650a7f8e9a91345e2302abba9f1719192" translate="yes" xml:space="preserve">
          <source>std::pointer_to_binary_function::operator()</source>
          <target state="translated">std::pointer_to_binary_function::operator()</target>
        </trans-unit>
        <trans-unit id="7294f25e53a5bee1acc707b0d90dac74c3836867" translate="yes" xml:space="preserve">
          <source>std::pointer_to_binary_function::pointer_to_binary_function</source>
          <target state="translated">std::pointer_to_binary_function::pointer_to_binary_function</target>
        </trans-unit>
        <trans-unit id="09d052ab1b25c5ce31e564bca67255aeec12b96f" translate="yes" xml:space="preserve">
          <source>std::pointer_to_unary_function</source>
          <target state="translated">std::pointer_to_unary_function</target>
        </trans-unit>
        <trans-unit id="ed152f3e3f0f88499444e1429453f5bbddbef572" translate="yes" xml:space="preserve">
          <source>std::pointer_to_unary_function::operator()</source>
          <target state="translated">std::pointer_to_unary_function::operator()</target>
        </trans-unit>
        <trans-unit id="dee5570998a976a64cb0583b049dcee176f4a025" translate="yes" xml:space="preserve">
          <source>std::pointer_to_unary_function::pointer_to_unary_function</source>
          <target state="translated">std::pointer_to_unary_function::pointer_to_unary_function</target>
        </trans-unit>
        <trans-unit id="3989893387b7fa9348a72ae4ab69580d255c3a17" translate="yes" xml:space="preserve">
          <source>std::pointer_traits</source>
          <target state="translated">std::pointer_traits</target>
        </trans-unit>
        <trans-unit id="3b0f3c835adc7eaaf97d53c6310cf01ffedd26ad" translate="yes" xml:space="preserve">
          <source>std::pointer_traits&amp;lt;Ptr&amp;gt;::pointer_to</source>
          <target state="translated">std::pointer_traits&amp;lt;Ptr&amp;gt;::pointer_to</target>
        </trans-unit>
        <trans-unit id="b9969b77a7dfe9878b3220e5392050459a5c4763" translate="yes" xml:space="preserve">
          <source>std::pointer_traits&amp;lt;Ptr&amp;gt;::to_address</source>
          <target state="translated">std::pointer_traits&amp;lt;Ptr&amp;gt;::to_address</target>
        </trans-unit>
        <trans-unit id="81728251ca18cd47f9db705080aca5a4eb951f4d" translate="yes" xml:space="preserve">
          <source>std::pointer_traits::pointer_to</source>
          <target state="translated">std::pointer_traits::pointer_to</target>
        </trans-unit>
        <trans-unit id="a5937dfecb11f938d14371a0ad3ac68d57e29dad" translate="yes" xml:space="preserve">
          <source>std::pointer_traits::to_address</source>
          <target state="translated">std::pointer_traits::to_address</target>
        </trans-unit>
        <trans-unit id="cc4d9f1fcb0dfa3d9b465a9a5ed63ba1af643a3a" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution</source>
          <target state="translated">std::poisson_distribution</target>
        </trans-unit>
        <trans-unit id="53e21c5b82f848c95b04c14679bd251f3c9ff2db" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution&amp;lt;IntType&amp;gt;::max</source>
          <target state="translated">std::poisson_distribution&amp;lt;IntType&amp;gt;::max</target>
        </trans-unit>
        <trans-unit id="2d19d540a27429208086c32433925809202e329e" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution&amp;lt;IntType&amp;gt;::mean</source>
          <target state="translated">std::poisson_distribution&amp;lt;IntType&amp;gt;::mean</target>
        </trans-unit>
        <trans-unit id="1e7704c3e1babd2cc4eb6f0e6bcf3b7f58d77a37" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution&amp;lt;IntType&amp;gt;::min</source>
          <target state="translated">std::poisson_distribution&amp;lt;IntType&amp;gt;::min</target>
        </trans-unit>
        <trans-unit id="8e66f4313733b92ee5e71462c068ecc979df689a" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution&amp;lt;IntType&amp;gt;::operator()</source>
          <target state="translated">std::poisson_distribution&amp;lt;IntType&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="41b2011d723d060842b6734d48b5dd3bc1828db0" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution&amp;lt;IntType&amp;gt;::param</source>
          <target state="translated">std::poisson_distribution&amp;lt;IntType&amp;gt;::param</target>
        </trans-unit>
        <trans-unit id="46a3ef49bf79d0177535476a9fdab37f72f5c54b" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution&amp;lt;IntType&amp;gt;::poisson_distribution</source>
          <target state="translated">std::poisson_distribution&amp;lt;IntType&amp;gt;::poisson_distribution</target>
        </trans-unit>
        <trans-unit id="c0ce308c689ec001d8c2f43d81650e2924c2f287" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution&amp;lt;IntType&amp;gt;::reset</source>
          <target state="translated">std::poisson_distribution&amp;lt;IntType&amp;gt;::reset</target>
        </trans-unit>
        <trans-unit id="9c67745847bcb03b5d3ccb79fcdf2d00fa61a7d4" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution::max</source>
          <target state="translated">std::poisson_distribution::max</target>
        </trans-unit>
        <trans-unit id="dffaf5115a466a7cc63691b44c5ad935db8c7481" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution::mean</source>
          <target state="translated">std::poisson_distribution::mean</target>
        </trans-unit>
        <trans-unit id="0cec6bd7e6d1ea902c5a085b6c40737ef8430c9d" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution::min</source>
          <target state="translated">std::poisson_distribution::min</target>
        </trans-unit>
        <trans-unit id="322d6319819de74b40bb3d4026f5a6b2a68cf603" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution::operator()</source>
          <target state="translated">std::poisson_distribution::operator()</target>
        </trans-unit>
        <trans-unit id="142a46c55d764483112818dda4f8712489830cc1" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution::param</source>
          <target state="translated">std::poisson_distribution::param</target>
        </trans-unit>
        <trans-unit id="250a50a64e40148c9210e997d94eb1b1aee52459" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution::poisson_distribution</source>
          <target state="translated">std::poisson_distribution::poisson_distribution</target>
        </trans-unit>
        <trans-unit id="ca5c2fe67b2db15bd14fc30c5a24e4b83d1c7396" translate="yes" xml:space="preserve">
          <source>std::poisson_distribution::reset</source>
          <target state="translated">std::poisson_distribution::reset</target>
        </trans-unit>
        <trans-unit id="f521e89052020e0a6f904cec695396238c843f02" translate="yes" xml:space="preserve">
          <source>std::polar(std::complex)</source>
          <target state="translated">std::polar(std::complex)</target>
        </trans-unit>
        <trans-unit id="0351b59d8e055b4da4bdf257942563f6301a0f80" translate="yes" xml:space="preserve">
          <source>std::pop_heap</source>
          <target state="translated">std::pop_heap</target>
        </trans-unit>
        <trans-unit id="680fc48889da46d4af3f429425e964e3c7843e27" translate="yes" xml:space="preserve">
          <source>std::pow(std::complex)</source>
          <target state="translated">std::pow(std::complex)</target>
        </trans-unit>
        <trans-unit id="5102ffecbe5e26753e23d52c3de695e7b126ad8e" translate="yes" xml:space="preserve">
          <source>std::pow(std::valarray)</source>
          <target state="translated">std::pow(std::valarray)</target>
        </trans-unit>
        <trans-unit id="e02e2ef386428b5f3f993068e021e2014893cfdb" translate="yes" xml:space="preserve">
          <source>std::pow, std::powf, std::powl</source>
          <target state="translated">std :: pow, std :: powf, std :: 새</target>
        </trans-unit>
        <trans-unit id="a1cb417d398241848a5401d56b9c4e0d9701c30a" translate="yes" xml:space="preserve">
          <source>std::powl</source>
          <target state="translated">std::powl</target>
        </trans-unit>
        <trans-unit id="8f7e01231b34cccde606c4cd2a48e299c92dbd41" translate="yes" xml:space="preserve">
          <source>std::prev</source>
          <target state="translated">std::prev</target>
        </trans-unit>
        <trans-unit id="4bb8c3c070fa402bafbb31d1e3af18478a3f7aba" translate="yes" xml:space="preserve">
          <source>std::prev_permutation</source>
          <target state="translated">std::prev_permutation</target>
        </trans-unit>
        <trans-unit id="da15727074f5baabe22447ba9c122ad32e556775" translate="yes" xml:space="preserve">
          <source>std::printf, std::fprintf, std::sprintf, std::snprintf</source>
          <target state="translated">std :: printf, std :: fprintf, std :: sprintf, std :: snprintf</target>
        </trans-unit>
        <trans-unit id="956631adbc17d5c0ea292ea76fffd754de9a626f" translate="yes" xml:space="preserve">
          <source>std::priority_queue</source>
          <target state="translated">std::priority_queue</target>
        </trans-unit>
        <trans-unit id="9dea9cc202c9cafcb1324e3edf7aff30faedd205" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::emplace</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="ec3a6fc23b940163b0f938d377a7358f785d40fd" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::empty</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="b7083ee0dca9afc32bd1f2a319344ff58d766d25" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::operator=</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="8383621219fd86321634cc0c5e5d84751d406c89" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::pop</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::pop</target>
        </trans-unit>
        <trans-unit id="dd74234cd13719333db40c57d0f601ed6c8d2e82" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::priority_queue</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::priority_queue</target>
        </trans-unit>
        <trans-unit id="415a861e73231ea132f94a29de8e1c6a520870a2" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::push</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::push</target>
        </trans-unit>
        <trans-unit id="d5d6b7ea1dfd6b081d10feef4d34ed52a7f91d30" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::size</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="5bb5626b7be1841c0030fdaebdb11abd9e1281da" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::swap</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="505112104b4afa62b50d0c9dcccbbd5634ffb837" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::top</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::top</target>
        </trans-unit>
        <trans-unit id="3a32be7de80559011f5e3ef532a3c98515159f47" translate="yes" xml:space="preserve">
          <source>std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::~priority_queue</source>
          <target state="translated">std::priority_queue&amp;lt;T,Container,Compare&amp;gt;::~priority_queue</target>
        </trans-unit>
        <trans-unit id="e162c14e71b13f1f9955a144dab5512e921d83eb" translate="yes" xml:space="preserve">
          <source>std::priority_queue::emplace</source>
          <target state="translated">std::priority_queue::emplace</target>
        </trans-unit>
        <trans-unit id="0a05cf742182fe3eca137736fa7b01b61a593bfd" translate="yes" xml:space="preserve">
          <source>std::priority_queue::empty</source>
          <target state="translated">std::priority_queue::empty</target>
        </trans-unit>
        <trans-unit id="9b9328e5400fb60f214db52abb140737a03ce302" translate="yes" xml:space="preserve">
          <source>std::priority_queue::operator=</source>
          <target state="translated">std::priority_queue::operator=</target>
        </trans-unit>
        <trans-unit id="9bfcddf51f6b8b0196961f5251f4343e83f9a0fc" translate="yes" xml:space="preserve">
          <source>std::priority_queue::pop</source>
          <target state="translated">std::priority_queue::pop</target>
        </trans-unit>
        <trans-unit id="189c7c4e21330db140df36491be7a195307086e9" translate="yes" xml:space="preserve">
          <source>std::priority_queue::priority_queue</source>
          <target state="translated">std::priority_queue::priority_queue</target>
        </trans-unit>
        <trans-unit id="b2021535a5bfcb9a81bdfeeecde6a9ccaed362e0" translate="yes" xml:space="preserve">
          <source>std::priority_queue::push</source>
          <target state="translated">std::priority_queue::push</target>
        </trans-unit>
        <trans-unit id="1d772cf76bc441b787e59f3e41f90c67486e9804" translate="yes" xml:space="preserve">
          <source>std::priority_queue::size</source>
          <target state="translated">std::priority_queue::size</target>
        </trans-unit>
        <trans-unit id="37c2671e83a5db2ecf1bf47e543b482ebfd5b38d" translate="yes" xml:space="preserve">
          <source>std::priority_queue::swap</source>
          <target state="translated">std::priority_queue::swap</target>
        </trans-unit>
        <trans-unit id="60c8e97cdbeca9b91d9626a6387c30f2150efb6a" translate="yes" xml:space="preserve">
          <source>std::priority_queue::top</source>
          <target state="translated">std::priority_queue::top</target>
        </trans-unit>
        <trans-unit id="aee3c3c98f6022b0679010da0856fc7b5b12cb90" translate="yes" xml:space="preserve">
          <source>std::priority_queue::~priority_queue</source>
          <target state="translated">std::priority_queue::~priority_queue</target>
        </trans-unit>
        <trans-unit id="72b011716122d87a9b8b56a0013ee9c27148e431" translate="yes" xml:space="preserve">
          <source>std::proj(std::complex)</source>
          <target state="translated">std::proj(std::complex)</target>
        </trans-unit>
        <trans-unit id="5c35ca16a31d8e75f4a7b79920d81d6f07465fd2" translate="yes" xml:space="preserve">
          <source>std::promise</source>
          <target state="translated">std::promise</target>
        </trans-unit>
        <trans-unit id="4b3fa9e7f04a0a4cdd52bf2af009de71346ee6f9" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::get_future</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::get_future</target>
        </trans-unit>
        <trans-unit id="dce902b541fb4b74e55797db08ebbad5ebbe820c" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::operator=</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="bd1e8d4580ae4cf010083324cf72b858eb33c37b" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::promise</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::promise</target>
        </trans-unit>
        <trans-unit id="9ca960454c36ca7de1ffb45f978a369bf8fd1020" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::set_exception</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::set_exception</target>
        </trans-unit>
        <trans-unit id="d39a6bcb4222b5ec8789d28f8cf81b71be9d9f53" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::set_exception_at_thread_exit</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::set_exception_at_thread_exit</target>
        </trans-unit>
        <trans-unit id="cf1bc96f371b127156580e20d6d312208fa7b01e" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::set_value</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::set_value</target>
        </trans-unit>
        <trans-unit id="4ad87cd4aacef6869406955f8e9bc4a82f142f18" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::set_value_at_thread_exit</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::set_value_at_thread_exit</target>
        </trans-unit>
        <trans-unit id="9cf1807ae30df76da9d9fe60295e9043361d2f02" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::swap</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="4cfdf64a68f3d203cf0a3888016c58047f4f35b9" translate="yes" xml:space="preserve">
          <source>std::promise&amp;lt;R&amp;gt;::~promise</source>
          <target state="translated">std::promise&amp;lt;R&amp;gt;::~promise</target>
        </trans-unit>
        <trans-unit id="043b847555fd2ef67d3c42667bbf9ba1b0e66291" translate="yes" xml:space="preserve">
          <source>std::promise::get_future</source>
          <target state="translated">std::promise::get_future</target>
        </trans-unit>
        <trans-unit id="1eb5b7c7a8c0bc5b693914276a7d4601a4414876" translate="yes" xml:space="preserve">
          <source>std::promise::operator=</source>
          <target state="translated">std::promise::operator=</target>
        </trans-unit>
        <trans-unit id="6c4d3b681faa13a76e547e4648bcf6847f28a3bd" translate="yes" xml:space="preserve">
          <source>std::promise::promise</source>
          <target state="translated">std::promise::promise</target>
        </trans-unit>
        <trans-unit id="d889955d44c96ef2b56e4476b06019e984dfbc81" translate="yes" xml:space="preserve">
          <source>std::promise::set_exception</source>
          <target state="translated">std::promise::set_exception</target>
        </trans-unit>
        <trans-unit id="a105d2b3fa0874effa2d59c9d0c1e5d530557f56" translate="yes" xml:space="preserve">
          <source>std::promise::set_exception_at_thread_exit</source>
          <target state="translated">std::promise::set_exception_at_thread_exit</target>
        </trans-unit>
        <trans-unit id="68aa19c26c685a1fbc2c296977ff0ed7485d4122" translate="yes" xml:space="preserve">
          <source>std::promise::set_value</source>
          <target state="translated">std::promise::set_value</target>
        </trans-unit>
        <trans-unit id="1a45ad05d842bb9c5ea1821fb66b913480734a5a" translate="yes" xml:space="preserve">
          <source>std::promise::set_value_at_thread_exit</source>
          <target state="translated">std::promise::set_value_at_thread_exit</target>
        </trans-unit>
        <trans-unit id="7713d1a9c0905f8094b4b8820670137efb4498ee" translate="yes" xml:space="preserve">
          <source>std::promise::swap</source>
          <target state="translated">std::promise::swap</target>
        </trans-unit>
        <trans-unit id="9706618a3e951295cb2b155821d32b23bb39eef1" translate="yes" xml:space="preserve">
          <source>std::promise::~promise</source>
          <target state="translated">std::promise::~promise</target>
        </trans-unit>
        <trans-unit id="160e6655c04011c2fdcf9728feb1b010fb78f258" translate="yes" xml:space="preserve">
          <source>std::ptr_fun</source>
          <target state="translated">std::ptr_fun</target>
        </trans-unit>
        <trans-unit id="3d169acf20e4bc7b294951f001c97d5bcffec392" translate="yes" xml:space="preserve">
          <source>std::ptrdiff_t</source>
          <target state="translated">std::ptrdiff_t</target>
        </trans-unit>
        <trans-unit id="035f441de6e85e64f7cc8ff58486964cfb035213" translate="yes" xml:space="preserve">
          <source>std::push_heap</source>
          <target state="translated">std::push_heap</target>
        </trans-unit>
        <trans-unit id="ab020900b0f85e42599abf6881d7987699ab4a86" translate="yes" xml:space="preserve">
          <source>std::put_money</source>
          <target state="translated">std::put_money</target>
        </trans-unit>
        <trans-unit id="0007a13b0af7f79baa9ebb00aea34add97f9b27d" translate="yes" xml:space="preserve">
          <source>std::put_time</source>
          <target state="translated">std::put_time</target>
        </trans-unit>
        <trans-unit id="4cdbce98251934c73e8e2ef7950c962ed8aa5b6e" translate="yes" xml:space="preserve">
          <source>std::putc</source>
          <target state="translated">std::putc</target>
        </trans-unit>
        <trans-unit id="f5c294b3cc12a069025b0c6b285ca37592a0ad9b" translate="yes" xml:space="preserve">
          <source>std::putchar</source>
          <target state="translated">std::putchar</target>
        </trans-unit>
        <trans-unit id="5e563cf3d8684b3769d07e58eee8918a7f628564" translate="yes" xml:space="preserve">
          <source>std::puts</source>
          <target state="translated">std::puts</target>
        </trans-unit>
        <trans-unit id="a2ba46c06b4f935db7ef93372f77665e4fb75834" translate="yes" xml:space="preserve">
          <source>std::putwchar</source>
          <target state="translated">std::putwchar</target>
        </trans-unit>
        <trans-unit id="073ea8808ae92b7c175a977644d3e41e2fa3d063" translate="yes" xml:space="preserve">
          <source>std::qsort</source>
          <target state="translated">std::qsort</target>
        </trans-unit>
        <trans-unit id="21a90d9a77159449789132dba9b99149cffff9c7" translate="yes" xml:space="preserve">
          <source>std::queue</source>
          <target state="translated">std::queue</target>
        </trans-unit>
        <trans-unit id="cc837c38d82898532bc4a618c33e5c5a5a4253b6" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::back</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::back</target>
        </trans-unit>
        <trans-unit id="76836ac22b88a5dc646f71e1af90c4df69f329f3" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::emplace</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::emplace</target>
        </trans-unit>
        <trans-unit id="ca4a30363f84bce034512bf5dbf8c557269ebe8e" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::empty</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::empty</target>
        </trans-unit>
        <trans-unit id="a7cb5cef139fc216b6aeeb985c833294bf6bdca6" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::front</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::front</target>
        </trans-unit>
        <trans-unit id="2296fcf72a53d0ea3dd4dfca34360be5de9a3441" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::operator=</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="0fa6650233d23ee30dab72e28cc5173328b66279" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::pop</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::pop</target>
        </trans-unit>
        <trans-unit id="0d9a115605f606f6f7bb2d05d065b1f9720c581d" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::push</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::push</target>
        </trans-unit>
        <trans-unit id="f6da83b052a2fe7d2d07b3c1897bd27ca75bfe66" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::queue</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::queue</target>
        </trans-unit>
        <trans-unit id="2da8da5d417831fc23f22416c4d3b530215ff6f4" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::size</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::size</target>
        </trans-unit>
        <trans-unit id="545cd8b96f67659429801f212a8f5fb205c99d24" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::swap</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::swap</target>
        </trans-unit>
        <trans-unit id="0e929cb111a3d57276ca0a4222e5fb64d22b5392" translate="yes" xml:space="preserve">
          <source>std::queue&amp;lt;T,Container&amp;gt;::~queue</source>
          <target state="translated">std::queue&amp;lt;T,Container&amp;gt;::~queue</target>
        </trans-unit>
        <trans-unit id="1f7d8a63191c09b8d169ad1b907c669e154e550b" translate="yes" xml:space="preserve">
          <source>std::queue::back</source>
          <target state="translated">std::queue::back</target>
        </trans-unit>
        <trans-unit id="be39fdc5b648efc8c81f0f3d81c5b64c2862d379" translate="yes" xml:space="preserve">
          <source>std::queue::emplace</source>
          <target state="translated">std::queue::emplace</target>
        </trans-unit>
        <trans-unit id="e53f83a4b1b16e365dd577fb63a78aadbf7fc2fd" translate="yes" xml:space="preserve">
          <source>std::queue::empty</source>
          <target state="translated">std::queue::empty</target>
        </trans-unit>
        <trans-unit id="a7822790f44017a4cf5bf2e9075d21d6a4aa5d05" translate="yes" xml:space="preserve">
          <source>std::queue::front</source>
          <target state="translated">std::queue::front</target>
        </trans-unit>
        <trans-unit id="cee300146ea5790dfe1904c530992becd924c7e8" translate="yes" xml:space="preserve">
          <source>std::queue::operator=</source>
          <target state="translated">std::queue::operator=</target>
        </trans-unit>
        <trans-unit id="84e92265bfe264ba3600d8db0b1bd3cb40973f6a" translate="yes" xml:space="preserve">
          <source>std::queue::pop</source>
          <target state="translated">std::queue::pop</target>
        </trans-unit>
        <trans-unit id="e27b90ebd37689a12f4ea2850bfb8dcdb2555d72" translate="yes" xml:space="preserve">
          <source>std::queue::push</source>
          <target state="translated">std::queue::push</target>
        </trans-unit>
        <trans-unit id="1f834e0cb9a26fb0d10a8c317a4d4f2e687bf7b2" translate="yes" xml:space="preserve">
          <source>std::queue::queue</source>
          <target state="translated">std::queue::queue</target>
        </trans-unit>
        <trans-unit id="a2d3bbd84a5d0a4fa90ce8b2e1be54ddd4945721" translate="yes" xml:space="preserve">
          <source>std::queue::size</source>
          <target state="translated">std::queue::size</target>
        </trans-unit>
        <trans-unit id="61eafc06a12d538eedb328aed666599a9320442c" translate="yes" xml:space="preserve">
          <source>std::queue::swap</source>
          <target state="translated">std::queue::swap</target>
        </trans-unit>
        <trans-unit id="b64311bcd08d16ed4d70607481b0ee9f600b5da1" translate="yes" xml:space="preserve">
          <source>std::queue::~queue</source>
          <target state="translated">std::queue::~queue</target>
        </trans-unit>
        <trans-unit id="ddd2d7f6a10bfd02bca53f599f3e450cc140b86a" translate="yes" xml:space="preserve">
          <source>std::quick_exit</source>
          <target state="translated">std::quick_exit</target>
        </trans-unit>
        <trans-unit id="ee9635fc413bb0e420aa3839281f4d516e90b632" translate="yes" xml:space="preserve">
          <source>std::quoted</source>
          <target state="translated">std::quoted</target>
        </trans-unit>
        <trans-unit id="0775e3626007931bec886c98160a80b02b1915ea" translate="yes" xml:space="preserve">
          <source>std::raise</source>
          <target state="translated">std::raise</target>
        </trans-unit>
        <trans-unit id="ad8fea4fe2e7b9bdcfb8fb89472a0836672e6d9e" translate="yes" xml:space="preserve">
          <source>std::rand</source>
          <target state="translated">std::rand</target>
        </trans-unit>
        <trans-unit id="0b61464da5f39ff15bce9a3344e10df78c5f4d77" translate="yes" xml:space="preserve">
          <source>std::random_access_iterator_tag</source>
          <target state="translated">std::random_access_iterator_tag</target>
        </trans-unit>
        <trans-unit id="7ed5cc656802c960a26b959788ab3b4f3c7fb8af" translate="yes" xml:space="preserve">
          <source>std::random_device</source>
          <target state="translated">std::random_device</target>
        </trans-unit>
        <trans-unit id="78bbb41c41747eeb0b2e925b91762d21a43c2061" translate="yes" xml:space="preserve">
          <source>std::random_device::entropy</source>
          <target state="translated">std::random_device::entropy</target>
        </trans-unit>
        <trans-unit id="810b05fed75949a48156fa3fea148a1166ac1b1d" translate="yes" xml:space="preserve">
          <source>std::random_device::max</source>
          <target state="translated">std::random_device::max</target>
        </trans-unit>
        <trans-unit id="755be5bbd0f002487e25b6416a7aef57dfc4b02c" translate="yes" xml:space="preserve">
          <source>std::random_device::min</source>
          <target state="translated">std::random_device::min</target>
        </trans-unit>
        <trans-unit id="ffbf408674d2a68c259a34ee00093f82a136244c" translate="yes" xml:space="preserve">
          <source>std::random_device::operator()</source>
          <target state="translated">std::random_device::operator()</target>
        </trans-unit>
        <trans-unit id="a0fd92e19742f08bb9e28140347144f0331d5ae2" translate="yes" xml:space="preserve">
          <source>std::random_device::random_device</source>
          <target state="translated">std::random_device::random_device</target>
        </trans-unit>
        <trans-unit id="ee9bc8f2abf433e5f48ff2a6922b629692eb5b6e" translate="yes" xml:space="preserve">
          <source>std::random_shuffle, std::shuffle</source>
          <target state="translated">std :: random_shuffle, std :: shuffle</target>
        </trans-unit>
        <trans-unit id="938be8cc6c4c3c79ce7e06abaf7b7e0482867125" translate="yes" xml:space="preserve">
          <source>std::range_error</source>
          <target state="translated">std::range_error</target>
        </trans-unit>
        <trans-unit id="5399e6543ba8f3c15676612fc02b555749c87ea6" translate="yes" xml:space="preserve">
          <source>std::range_error::range_error</source>
          <target state="translated">std::range_error::range_error</target>
        </trans-unit>
        <trans-unit id="7b4895078a7be31ca3242831d9b0e571617bd851" translate="yes" xml:space="preserve">
          <source>std::ranges::BidirectionalRange</source>
          <target state="translated">std::ranges::BidirectionalRange</target>
        </trans-unit>
        <trans-unit id="771ff67d8d102b9749f9d8d81af786aedec2838b" translate="yes" xml:space="preserve">
          <source>std::ranges::CommonRange</source>
          <target state="translated">std::ranges::CommonRange</target>
        </trans-unit>
        <trans-unit id="1f689a3f27b4908f304228c0dda9e130beee4f18" translate="yes" xml:space="preserve">
          <source>std::ranges::ContiguousRange</source>
          <target state="translated">std::ranges::ContiguousRange</target>
        </trans-unit>
        <trans-unit id="35253ee9227b7f8d5c76d721622a549a13ba31c5" translate="yes" xml:space="preserve">
          <source>std::ranges::ForwardRange</source>
          <target state="translated">std::ranges::ForwardRange</target>
        </trans-unit>
        <trans-unit id="4201624666f0897a9a49c4228e2a2d1b7a72b221" translate="yes" xml:space="preserve">
          <source>std::ranges::InputRange</source>
          <target state="translated">std::ranges::InputRange</target>
        </trans-unit>
        <trans-unit id="0d25de7cd23bd1a6694089abd22fa6bdb9bbe611" translate="yes" xml:space="preserve">
          <source>std::ranges::OutputRange</source>
          <target state="translated">std::ranges::OutputRange</target>
        </trans-unit>
        <trans-unit id="2248a68d29a1cf09d549ea80400f950384e4d036" translate="yes" xml:space="preserve">
          <source>std::ranges::RandomAccessRange</source>
          <target state="translated">std::ranges::RandomAccessRange</target>
        </trans-unit>
        <trans-unit id="1d485745d27bbc966d38801b17ad0ec6757e2878" translate="yes" xml:space="preserve">
          <source>std::ranges::Range</source>
          <target state="translated">std::ranges::Range</target>
        </trans-unit>
        <trans-unit id="3ed8ab523c65e21935f97fe9f754550fa86c1c8a" translate="yes" xml:space="preserve">
          <source>std::ranges::SizedRange</source>
          <target state="translated">std::ranges::SizedRange</target>
        </trans-unit>
        <trans-unit id="ae580e32aebe30a90f78245573c8aa0751bc1716" translate="yes" xml:space="preserve">
          <source>std::ranges::View, std::ranges::enable_view, std::ranges::view_base</source>
          <target state="translated">std :: ranges :: View, std :: ranges :: enable_view, std :: ranges :: view_base</target>
        </trans-unit>
        <trans-unit id="93043fb63ec968b238d88cf5cbaa68750ae77945" translate="yes" xml:space="preserve">
          <source>std::ranges::ViewableRange</source>
          <target state="translated">std::ranges::ViewableRange</target>
        </trans-unit>
        <trans-unit id="e3ecaf0a143b273f6ffd3a1253ac29fdd566e967" translate="yes" xml:space="preserve">
          <source>std::ranges::all_of, std::ranges::any_of, std::ranges::none_of</source>
          <target state="translated">std :: ranges :: all_of, std :: ranges :: any_of, std :: ranges :: none_of</target>
        </trans-unit>
        <trans-unit id="25464cf7dc66d1f49fc4c1c16d65c96207765e0e" translate="yes" xml:space="preserve">
          <source>std::ranges::begin, std::ranges::cbegin</source>
          <target state="translated">std :: ranges :: begin, std :: ranges :: cbegin</target>
        </trans-unit>
        <trans-unit id="ffefcd2dcdfea3185f1efe16bc9d6d2faee8149e" translate="yes" xml:space="preserve">
          <source>std::ranges::cbegin</source>
          <target state="translated">std::ranges::cbegin</target>
        </trans-unit>
        <trans-unit id="2086af864319fb26bf5bd76646481f0eb20d2cbd" translate="yes" xml:space="preserve">
          <source>std::ranges::dangling</source>
          <target state="translated">std::ranges::dangling</target>
        </trans-unit>
        <trans-unit id="00f2491597ef39ba72992197d6c080b455c2d07c" translate="yes" xml:space="preserve">
          <source>std::ranges::dangling::dangling</source>
          <target state="translated">std::ranges::dangling::dangling</target>
        </trans-unit>
        <trans-unit id="339db839a3179fba7368b90a69e66416ded3f335" translate="yes" xml:space="preserve">
          <source>std::ranges::empty_view::begin</source>
          <target state="translated">std::ranges::empty_view::begin</target>
        </trans-unit>
        <trans-unit id="fb153736dddfeb0513823af2cb5964d40dfd3649" translate="yes" xml:space="preserve">
          <source>std::ranges::empty_view::data</source>
          <target state="translated">std::ranges::empty_view::data</target>
        </trans-unit>
        <trans-unit id="2875ffe79d26cc0e29ce4f76550f0df53ed873bc" translate="yes" xml:space="preserve">
          <source>std::ranges::empty_view::empty</source>
          <target state="translated">std::ranges::empty_view::empty</target>
        </trans-unit>
        <trans-unit id="1611ed4e650c8f13f7da497afade3aa8a4856026" translate="yes" xml:space="preserve">
          <source>std::ranges::empty_view::end</source>
          <target state="translated">std::ranges::empty_view::end</target>
        </trans-unit>
        <trans-unit id="72cda29783879a92b0a80711e561fc54c31089f6" translate="yes" xml:space="preserve">
          <source>std::ranges::empty_view::size</source>
          <target state="translated">std::ranges::empty_view::size</target>
        </trans-unit>
        <trans-unit id="73530456852db7997bae3d44885cfeccaa8164c5" translate="yes" xml:space="preserve">
          <source>std::ranges::equal_to</source>
          <target state="translated">std::ranges::equal_to</target>
        </trans-unit>
        <trans-unit id="2803ea66ab16b952757be4a2374e8031be2bddd1" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::base</source>
          <target state="translated">std::ranges::filter_view::base</target>
        </trans-unit>
        <trans-unit id="d32efeec4fe3f493c4c5a73232f25916737444dc" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::base_</source>
          <target state="translated">std::ranges::filter_view::base_</target>
        </trans-unit>
        <trans-unit id="24bee70002d21aa0f2f89f6ed43c4623a0255369" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::begin</source>
          <target state="translated">std::ranges::filter_view::begin</target>
        </trans-unit>
        <trans-unit id="770e3ed4bbdbdd37ff8ecaf1e6508ccdce281873" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::end</source>
          <target state="translated">std::ranges::filter_view::end</target>
        </trans-unit>
        <trans-unit id="98f3a7e38f18795a72c22aed710bb2d7765a44d4" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::filter_view</source>
          <target state="translated">std::ranges::filter_view::filter_view</target>
        </trans-unit>
        <trans-unit id="1d8c3528e74964ec9d011e7f7468cd8041150f50" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::iterator</source>
          <target state="translated">std::ranges::filter_view::iterator</target>
        </trans-unit>
        <trans-unit id="21e93e9e4d33ce59850a2776fa7c6174339897e7" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::iterator::iterator</source>
          <target state="translated">std::ranges::filter_view::iterator::iterator</target>
        </trans-unit>
        <trans-unit id="d7690a436c08b7e734c38e5ca6a9e2f3f143c2c9" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::iterator::operator++</source>
          <target state="translated">std::ranges::filter_view::iterator::operator++</target>
        </trans-unit>
        <trans-unit id="7bf83d154d8d5923c8bd2a7eae5c595d4bc6041e" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::iterator::operator--</source>
          <target state="translated">std::ranges::filter_view::iterator::operator--</target>
        </trans-unit>
        <trans-unit id="d0b71fe44fe30b533c67feaf94329bdaf5f45a72" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::pred_</source>
          <target state="translated">std::ranges::filter_view::pred_</target>
        </trans-unit>
        <trans-unit id="5c0c15e0ab3801a39e0ab7fe6170c0caec314673" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::sentinel</source>
          <target state="translated">std::ranges::filter_view::sentinel</target>
        </trans-unit>
        <trans-unit id="6b5dcbccd69ed49ba331d2af9005b2342b95fb2d" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::sentinel::base</source>
          <target state="translated">std::ranges::filter_view::sentinel::base</target>
        </trans-unit>
        <trans-unit id="d93853a8cf52e9e839e33f5e513929351df4753a" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::sentinel::end_</source>
          <target state="translated">std::ranges::filter_view::sentinel::end_</target>
        </trans-unit>
        <trans-unit id="f3520b31ee1ebf56395443b598ea817fcb43a970" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::sentinel::operator!=</source>
          <target state="translated">std::ranges::filter_view::sentinel::operator!=</target>
        </trans-unit>
        <trans-unit id="88285a7ea0fcfc48153f599f75df4aeb30689795" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::sentinel::operator==</source>
          <target state="translated">std::ranges::filter_view::sentinel::operator==</target>
        </trans-unit>
        <trans-unit id="522918c9b7980519f4e234563798ef0c18ce88e3" translate="yes" xml:space="preserve">
          <source>std::ranges::filter_view::sentinel::sentinel</source>
          <target state="translated">std::ranges::filter_view::sentinel::sentinel</target>
        </trans-unit>
        <trans-unit id="9fd93171be2259897547095b3de0d2a97a2b88c1" translate="yes" xml:space="preserve">
          <source>std::ranges::greater</source>
          <target state="translated">std::ranges::greater</target>
        </trans-unit>
        <trans-unit id="2841b30af0cfa4ed99b4b8302ddc3225d455fd97" translate="yes" xml:space="preserve">
          <source>std::ranges::greater::operator()</source>
          <target state="translated">std::ranges::greater::operator()</target>
        </trans-unit>
        <trans-unit id="4b1d658987eb0f954e4c41e5b39feb737a891e6f" translate="yes" xml:space="preserve">
          <source>std::ranges::greater_equal</source>
          <target state="translated">std::ranges::greater_equal</target>
        </trans-unit>
        <trans-unit id="7cce9b09b2eca39d47972b7bcedab022bb20e2b8" translate="yes" xml:space="preserve">
          <source>std::ranges::greater_equal::operator()</source>
          <target state="translated">std::ranges::greater_equal::operator()</target>
        </trans-unit>
        <trans-unit id="08fc6246b0f0b2063e1c2ad0248cc27ac178ee4f" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::base_</source>
          <target state="translated">std::ranges::iota_view::base_</target>
        </trans-unit>
        <trans-unit id="2eb3cd1759087ace12573935be17fb016dee18a9" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::begin</source>
          <target state="translated">std::ranges::iota_view::begin</target>
        </trans-unit>
        <trans-unit id="0e46e4bd8c30aaa51e32fac6d529336535fb77d7" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::end</source>
          <target state="translated">std::ranges::iota_view::end</target>
        </trans-unit>
        <trans-unit id="5238ee54c65a8660595000879afa000298aa7705" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::iota_view</source>
          <target state="translated">std::ranges::iota_view::iota_view</target>
        </trans-unit>
        <trans-unit id="7473f69e760663e188c4d599acdcd1b55ca6fbc9" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::iterator</source>
          <target state="translated">std::ranges::iota_view::iterator</target>
        </trans-unit>
        <trans-unit id="d38fc1216242c9f0d9399121f31b49b9bdb23e56" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::iterator::iterator</source>
          <target state="translated">std::ranges::iota_view::iterator::iterator</target>
        </trans-unit>
        <trans-unit id="f0ba3071e051b91d3e900c1d747ebf1346212ef6" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::iterator::operator*</source>
          <target state="translated">std::ranges::iota_view::iterator::operator*</target>
        </trans-unit>
        <trans-unit id="4c406d56c49affb90577e4453a9c98a229f28d11" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::iterator::operator++</source>
          <target state="translated">std::ranges::iota_view::iterator::operator++</target>
        </trans-unit>
        <trans-unit id="8669e9888ebf47bacebfee8767105ce9bf5b7624" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::iterator::operator--</source>
          <target state="translated">std::ranges::iota_view::iterator::operator--</target>
        </trans-unit>
        <trans-unit id="e70e6c60d21480017e0185d46db8317c52c70182" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::iterator::operator[]</source>
          <target state="translated">std::ranges::iota_view::iterator::operator[]</target>
        </trans-unit>
        <trans-unit id="239dc70f6c0357d054bae118944b9c75db7b68dc" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::pred_</source>
          <target state="translated">std::ranges::iota_view::pred_</target>
        </trans-unit>
        <trans-unit id="55157b29c36711eedbcc93ed834f89018c550bff" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::sentinel</source>
          <target state="translated">std::ranges::iota_view::sentinel</target>
        </trans-unit>
        <trans-unit id="47b7e4329aaa57ac214de48f8a26f1856f31e91b" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::sentinel::bound_</source>
          <target state="translated">std::ranges::iota_view::sentinel::bound_</target>
        </trans-unit>
        <trans-unit id="35c0ec7cfb2e0fe591c4c793d253e9cf00bebba1" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::sentinel::operator!=</source>
          <target state="translated">std::ranges::iota_view::sentinel::operator!=</target>
        </trans-unit>
        <trans-unit id="87b69955d75144cc1a323e9a356ffa55fb6c58ef" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::sentinel::operator==</source>
          <target state="translated">std::ranges::iota_view::sentinel::operator==</target>
        </trans-unit>
        <trans-unit id="954d7031c05cf27a0af624179e251d7bf97f2807" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::sentinel::sentinel</source>
          <target state="translated">std::ranges::iota_view::sentinel::sentinel</target>
        </trans-unit>
        <trans-unit id="d5e1eca7b8c39fdaf57073e6750a4d36d30c5741" translate="yes" xml:space="preserve">
          <source>std::ranges::iota_view::size</source>
          <target state="translated">std::ranges::iota_view::size</target>
        </trans-unit>
        <trans-unit id="ce2779f1f9bb83689661c170c946522bec412d8c" translate="yes" xml:space="preserve">
          <source>std::ranges::iterator_t, std::ranges::sentinel_t</source>
          <target state="translated">std :: ranges :: iterator_t, std :: ranges :: sentinel_t</target>
        </trans-unit>
        <trans-unit id="2949e45603e1951d0f4d5a6439f0d32cd1280864" translate="yes" xml:space="preserve">
          <source>std::ranges::less</source>
          <target state="translated">std::ranges::less</target>
        </trans-unit>
        <trans-unit id="ed536053832460535edee7160ca4ca04d11bc363" translate="yes" xml:space="preserve">
          <source>std::ranges::less_equal</source>
          <target state="translated">std::ranges::less_equal</target>
        </trans-unit>
        <trans-unit id="6b40598093b03e02af4676f010782ef9a116480a" translate="yes" xml:space="preserve">
          <source>std::ranges::less_equal::operator()</source>
          <target state="translated">std::ranges::less_equal::operator()</target>
        </trans-unit>
        <trans-unit id="4f761e2b31c96b06ca97eb9e02028d1c7122a189" translate="yes" xml:space="preserve">
          <source>std::ranges::none_of</source>
          <target state="translated">std::ranges::none_of</target>
        </trans-unit>
        <trans-unit id="da3a29b912b4d41b446e4c53673589a84d6c4bc9" translate="yes" xml:space="preserve">
          <source>std::ranges::not_equal_to</source>
          <target state="translated">std::ranges::not_equal_to</target>
        </trans-unit>
        <trans-unit id="c0b5242a351a12b9d87f97c883cca2b692e522a4" translate="yes" xml:space="preserve">
          <source>std::ranges::not_equal_to::operator()</source>
          <target state="translated">std::ranges::not_equal_to::operator()</target>
        </trans-unit>
        <trans-unit id="a8556a1963b37fde0621f9504a327d79a7f5cbd3" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view</source>
          <target state="translated">std::ranges::ref_view</target>
        </trans-unit>
        <trans-unit id="1ba3833a12b551b8eb568b2273721905db211c47" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view::begin</source>
          <target state="translated">std::ranges::ref_view::begin</target>
        </trans-unit>
        <trans-unit id="094c338d23dc1819001664396f9cb6c2b8a6875b" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view::data</source>
          <target state="translated">std::ranges::ref_view::data</target>
        </trans-unit>
        <trans-unit id="3fef1b4f258f6f787183b94408badf21d96f3f33" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view::empty</source>
          <target state="translated">std::ranges::ref_view::empty</target>
        </trans-unit>
        <trans-unit id="b1b97b5f3c88273b92404133354bc405e85c1545" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view::end</source>
          <target state="translated">std::ranges::ref_view::end</target>
        </trans-unit>
        <trans-unit id="506780b8db8b44b3e787418ccab201af004774e1" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view::r_</source>
          <target state="translated">std::ranges::ref_view::r_</target>
        </trans-unit>
        <trans-unit id="144b13232d15679717dc38f284167b35cfe97800" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view::ref_view</source>
          <target state="translated">std::ranges::ref_view::ref_view</target>
        </trans-unit>
        <trans-unit id="e8b4a5500f39f162715792b74aa92351f78b9255" translate="yes" xml:space="preserve">
          <source>std::ranges::ref_view::size</source>
          <target state="translated">std::ranges::ref_view::size</target>
        </trans-unit>
        <trans-unit id="88759a28979b349f6b076f43974fe56b21dc8114" translate="yes" xml:space="preserve">
          <source>std::ranges::rev_view::base</source>
          <target state="translated">std::ranges::rev_view::base</target>
        </trans-unit>
        <trans-unit id="cbf4ab35a9070feb35179fa49bd172d79aa2d72d" translate="yes" xml:space="preserve">
          <source>std::ranges::safe_iterator_t, std::ranges::safe_subrange_t</source>
          <target state="translated">std :: ranges :: safe_iterator_t, std :: ranges :: safe_subrange_t</target>
        </trans-unit>
        <trans-unit id="be8eb429787a2622aaea6b3e1102054ca8b318bd" translate="yes" xml:space="preserve">
          <source>std::ranges::safe_subrange_t</source>
          <target state="translated">std::ranges::safe_subrange_t</target>
        </trans-unit>
        <trans-unit id="efe17ecba7697c1d0fb94238026463d80bb04189" translate="yes" xml:space="preserve">
          <source>std::ranges::sentinel_t</source>
          <target state="translated">std::ranges::sentinel_t</target>
        </trans-unit>
        <trans-unit id="804d67be089993a694ce393e1e4c7182c693b201" translate="yes" xml:space="preserve">
          <source>std::ranges::swap</source>
          <target state="translated">std::ranges::swap</target>
        </trans-unit>
        <trans-unit id="9d4681716674f5a8fb2770caaf5a2e1cf90653e3" translate="yes" xml:space="preserve">
          <source>std::ranges::view::all</source>
          <target state="translated">std::ranges::view::all</target>
        </trans-unit>
        <trans-unit id="4f2385b2d6b61c4ddfaa4d8e489d5aabdc655875" translate="yes" xml:space="preserve">
          <source>std::ranges::view::all, std::ranges::all_view</source>
          <target state="translated">std :: ranges :: view :: all, std :: ranges :: all_view</target>
        </trans-unit>
        <trans-unit id="7622bb415a9f94e12a403438819d2bc862d64a54" translate="yes" xml:space="preserve">
          <source>std::ranges::view::counted</source>
          <target state="translated">std::ranges::view::counted</target>
        </trans-unit>
        <trans-unit id="a035785f400322db769287d7078da66f8d3b947d" translate="yes" xml:space="preserve">
          <source>std::ranges::view::empty</source>
          <target state="translated">std::ranges::view::empty</target>
        </trans-unit>
        <trans-unit id="71209f488673534bb9a3ca0616e43ce0c3a91b29" translate="yes" xml:space="preserve">
          <source>std::ranges::view::empty, std::ranges::empty_view</source>
          <target state="translated">std :: ranges :: view :: empty, std :: ranges :: empty_view</target>
        </trans-unit>
        <trans-unit id="776c3723913d42b50c5044cde50ae8df913fb2cf" translate="yes" xml:space="preserve">
          <source>std::ranges::view::filter</source>
          <target state="translated">std::ranges::view::filter</target>
        </trans-unit>
        <trans-unit id="eeb91a67a7681bba52fa8695b90d670ff5b2ca7e" translate="yes" xml:space="preserve">
          <source>std::ranges::view::filter, std::ranges::filter_view</source>
          <target state="translated">std :: ranges :: view :: filter, std :: ranges :: filter_view</target>
        </trans-unit>
        <trans-unit id="70703ef0c3e84b396d37dec560071866d3998a5d" translate="yes" xml:space="preserve">
          <source>std::ranges::view::iota</source>
          <target state="translated">std::ranges::view::iota</target>
        </trans-unit>
        <trans-unit id="ed894af1aeab100ee464aaf833289c3018864adf" translate="yes" xml:space="preserve">
          <source>std::ranges::view::iota, std::ranges::iota_view</source>
          <target state="translated">std :: ranges :: view :: iota, std :: ranges :: iota_view</target>
        </trans-unit>
        <trans-unit id="f14cad29c8ef7e6cd601649ac29cc1fa68b1944b" translate="yes" xml:space="preserve">
          <source>std::ranges::view::reverse</source>
          <target state="translated">std::ranges::view::reverse</target>
        </trans-unit>
        <trans-unit id="82ce8ee44cfa40ad2486fd85cf5107baed036026" translate="yes" xml:space="preserve">
          <source>std::ranges::view_base</source>
          <target state="translated">std::ranges::view_base</target>
        </trans-unit>
        <trans-unit id="a3af93b5fdb1fb0937510da658b02c5e523bc44e" translate="yes" xml:space="preserve">
          <source>std::rank</source>
          <target state="translated">std::rank</target>
        </trans-unit>
        <trans-unit id="be61388682e50cff397f2214ae8dc45296c94b62" translate="yes" xml:space="preserve">
          <source>std::ratio</source>
          <target state="translated">std::ratio</target>
        </trans-unit>
        <trans-unit id="f8b73efcc5690e65345b520cd56b1497a50a7020" translate="yes" xml:space="preserve">
          <source>std::ratio_add</source>
          <target state="translated">std::ratio_add</target>
        </trans-unit>
        <trans-unit id="bbcb9e7f77a2fe2b0ebacaf70ec3ec68e22074ac" translate="yes" xml:space="preserve">
          <source>std::ratio_divide</source>
          <target state="translated">std::ratio_divide</target>
        </trans-unit>
        <trans-unit id="8316febb6cde897e5df6270fcd3278f2990f4144" translate="yes" xml:space="preserve">
          <source>std::ratio_equal</source>
          <target state="translated">std::ratio_equal</target>
        </trans-unit>
        <trans-unit id="90f7e6f2f1c06015bdeb8c41314bc15c0364d4b7" translate="yes" xml:space="preserve">
          <source>std::ratio_greater</source>
          <target state="translated">std::ratio_greater</target>
        </trans-unit>
        <trans-unit id="3d7d97463f421a6172d1786f538193035234ab1e" translate="yes" xml:space="preserve">
          <source>std::ratio_greater_equal</source>
          <target state="translated">std::ratio_greater_equal</target>
        </trans-unit>
        <trans-unit id="266b8618058ca969830e434ae72439182764f5e5" translate="yes" xml:space="preserve">
          <source>std::ratio_less</source>
          <target state="translated">std::ratio_less</target>
        </trans-unit>
        <trans-unit id="62f75a5014f96c74bea5df5e8cf4cad149b744fb" translate="yes" xml:space="preserve">
          <source>std::ratio_less_equal</source>
          <target state="translated">std::ratio_less_equal</target>
        </trans-unit>
        <trans-unit id="ef51c0b65e34ae2f25645e2931e9f07363a28b05" translate="yes" xml:space="preserve">
          <source>std::ratio_multiply</source>
          <target state="translated">std::ratio_multiply</target>
        </trans-unit>
        <trans-unit id="fa8918b7e3d67703208c972b3308a3479d03997b" translate="yes" xml:space="preserve">
          <source>std::ratio_not_equal</source>
          <target state="translated">std::ratio_not_equal</target>
        </trans-unit>
        <trans-unit id="40fa31e9704575008b93dd91ca4a16b5944117f7" translate="yes" xml:space="preserve">
          <source>std::ratio_subtract</source>
          <target state="translated">std::ratio_subtract</target>
        </trans-unit>
        <trans-unit id="3b44b57313c747dd765e3f2a1f53fd8a9551f31b" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator</source>
          <target state="translated">std::raw_storage_iterator</target>
        </trans-unit>
        <trans-unit id="09b90233fc546fa19b1ba73c83ad83558f05487d" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::base</source>
          <target state="translated">std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::base</target>
        </trans-unit>
        <trans-unit id="6f732aca378eefc5bad375d3350d9c25c2f49b8c" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::operator*</source>
          <target state="translated">std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::operator*</target>
        </trans-unit>
        <trans-unit id="4a579f77088f35eca615b8aedcfddecfa2e31750" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::operator++, operator++(int)</source>
          <target state="translated">std :: raw_storage_iterator &amp;lt;OutputIt, T&amp;gt; :: operator ++, 연산자 ++ (int)</target>
        </trans-unit>
        <trans-unit id="74bce43e2a1a29a631565b5420bfa0496078138b" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::operator=</source>
          <target state="translated">std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="c11b98aa921ac7dbe308b74a9e621dbdde7887a3" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::raw_storage_iterator</source>
          <target state="translated">std::raw_storage_iterator&amp;lt;OutputIt,T&amp;gt;::raw_storage_iterator</target>
        </trans-unit>
        <trans-unit id="7a7a662d75a1735d2deece0877701fe50f9ac2c0" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator::base</source>
          <target state="translated">std::raw_storage_iterator::base</target>
        </trans-unit>
        <trans-unit id="53e9c3bbb5c21a69abdfd276ba0b94b4900d052b" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator::operator*</source>
          <target state="translated">std::raw_storage_iterator::operator*</target>
        </trans-unit>
        <trans-unit id="0a6a543c1d1f2ec8bea4d6aad7fc069cc3879628" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator::operator=</source>
          <target state="translated">std::raw_storage_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="317255f2f1548822bfd9e576fa2e3bf7eacd83d2" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator::operators (int)</source>
          <target state="translated">std :: raw_storage_iterator :: operators (int)</target>
        </trans-unit>
        <trans-unit id="14ecffa2df46976430d7ea734382d0e9d5ef8107" translate="yes" xml:space="preserve">
          <source>std::raw_storage_iterator::raw_storage_iterator</source>
          <target state="translated">std::raw_storage_iterator::raw_storage_iterator</target>
        </trans-unit>
        <trans-unit id="0e9aa9ea1018782df565641fb738d7aff93add08" translate="yes" xml:space="preserve">
          <source>std::rbegin</source>
          <target state="translated">std::rbegin</target>
        </trans-unit>
        <trans-unit id="3f8d0cff4d4eb8754ed3075c099a54fc2c18e4a2" translate="yes" xml:space="preserve">
          <source>std::rbegin(std::initializer_list)</source>
          <target state="translated">std::rbegin(std::initializer_list)</target>
        </trans-unit>
        <trans-unit id="a82c510aec67c2690f37177b40ea4faf5bc5bbd9" translate="yes" xml:space="preserve">
          <source>std::rbegin, std::crbegin</source>
          <target state="translated">std :: rbegin, std :: crbegin</target>
        </trans-unit>
        <trans-unit id="dbef74de256ddf077f689d96f2a7e900549c5ed7" translate="yes" xml:space="preserve">
          <source>std::rbegin&lt;small&gt;(std::initializer_list)&lt;/small&gt;</source>
          <target state="translated">std::rbegin&lt;small&gt;(std::initializer_list)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2a9abbe87e6ddef740b23a7641fbe682924d834f" translate="yes" xml:space="preserve">
          <source>std::readable_traits</source>
          <target state="translated">std::readable_traits</target>
        </trans-unit>
        <trans-unit id="fd86ee0dcd78812d70277522816d1bedcbbfa440" translate="yes" xml:space="preserve">
          <source>std::real(std::complex)</source>
          <target state="translated">std::real(std::complex)</target>
        </trans-unit>
        <trans-unit id="6f82b28239fa18d43c0a64f43cfeb865864aefc0" translate="yes" xml:space="preserve">
          <source>std::realloc</source>
          <target state="translated">std::realloc</target>
        </trans-unit>
        <trans-unit id="07d698bc300d5435189a8c62ba9962374699efaa" translate="yes" xml:space="preserve">
          <source>std::recursive_mutex</source>
          <target state="translated">std::recursive_mutex</target>
        </trans-unit>
        <trans-unit id="c3b90861f141a82eb0a453d5741bba5b80a69a7c" translate="yes" xml:space="preserve">
          <source>std::recursive_mutex::lock</source>
          <target state="translated">std::recursive_mutex::lock</target>
        </trans-unit>
        <trans-unit id="8d7f13889fe5dcf57eb254aa3863f3a3a39bd1b8" translate="yes" xml:space="preserve">
          <source>std::recursive_mutex::native_handle</source>
          <target state="translated">std::recursive_mutex::native_handle</target>
        </trans-unit>
        <trans-unit id="6d20c211e434472381cfa3b6d6edd4971d61356f" translate="yes" xml:space="preserve">
          <source>std::recursive_mutex::recursive_mutex</source>
          <target state="translated">std::recursive_mutex::recursive_mutex</target>
        </trans-unit>
        <trans-unit id="2875762d7d6a352beae26374f90e91b860ec5994" translate="yes" xml:space="preserve">
          <source>std::recursive_mutex::try_lock</source>
          <target state="translated">std::recursive_mutex::try_lock</target>
        </trans-unit>
        <trans-unit id="99512aa3571789aa02b1b26b0caa05527803e8a4" translate="yes" xml:space="preserve">
          <source>std::recursive_mutex::unlock</source>
          <target state="translated">std::recursive_mutex::unlock</target>
        </trans-unit>
        <trans-unit id="50872b17dbb2c2b7a069dca2c110cde771dfbbcc" translate="yes" xml:space="preserve">
          <source>std::recursive_mutex::~recursive_mutex</source>
          <target state="translated">std::recursive_mutex::~recursive_mutex</target>
        </trans-unit>
        <trans-unit id="dc5e616d306a684eb59625a0aa72f6ac79d7219d" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex</source>
          <target state="translated">std::recursive_timed_mutex</target>
        </trans-unit>
        <trans-unit id="64251af4330bc3b969c42f5094fa850dfd4a2b66" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::lock</source>
          <target state="translated">std::recursive_timed_mutex::lock</target>
        </trans-unit>
        <trans-unit id="8a1280d42108792f6df38867004ee2b7af80d448" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::native_handle</source>
          <target state="translated">std::recursive_timed_mutex::native_handle</target>
        </trans-unit>
        <trans-unit id="c73bf9060f30d68d2f976634280d420d9acb19a4" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::recursive_timed_mutex</source>
          <target state="translated">std::recursive_timed_mutex::recursive_timed_mutex</target>
        </trans-unit>
        <trans-unit id="553bc7d9ab6a17a597538ccaa4fbf27c38e4b5f7" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::try_lock</source>
          <target state="translated">std::recursive_timed_mutex::try_lock</target>
        </trans-unit>
        <trans-unit id="54588499bd7fbbfe9e3c1efcd882749001b03099" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::try_lock_for</source>
          <target state="translated">std::recursive_timed_mutex::try_lock_for</target>
        </trans-unit>
        <trans-unit id="cb90dae5cf35f2f113f4836fccbbc90f0b755c28" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::try_lock_until</source>
          <target state="translated">std::recursive_timed_mutex::try_lock_until</target>
        </trans-unit>
        <trans-unit id="f2d0ca5a182242e98c2efc8a148adfaa70ae3269" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::unlock</source>
          <target state="translated">std::recursive_timed_mutex::unlock</target>
        </trans-unit>
        <trans-unit id="6196e559aab3f8c7b434cd03eb337887492553bc" translate="yes" xml:space="preserve">
          <source>std::recursive_timed_mutex::~recursive_timed_mutex</source>
          <target state="translated">std::recursive_timed_mutex::~recursive_timed_mutex</target>
        </trans-unit>
        <trans-unit id="903c589028afada212cd7c33e0e803a21b79dbc8" translate="yes" xml:space="preserve">
          <source>std::reduce</source>
          <target state="translated">std::reduce</target>
        </trans-unit>
        <trans-unit id="ec14460a0fde95d56815f4e657e42e2ceda51253" translate="yes" xml:space="preserve">
          <source>std::ref</source>
          <target state="translated">std::ref</target>
        </trans-unit>
        <trans-unit id="e3f2afdbe642455badd48fcab0e9815c02cff2a0" translate="yes" xml:space="preserve">
          <source>std::ref, std::cref</source>
          <target state="translated">std :: ref, std :: cref</target>
        </trans-unit>
        <trans-unit id="ddd2ce604da4758dc2241f74d4f44e6be7cd3758" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper</source>
          <target state="translated">std::reference_wrapper</target>
        </trans-unit>
        <trans-unit id="268828107315244d25ccbe1f409e116e058ae84a" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper&amp;lt;T&amp;gt;::get, std::reference_wrapper&amp;lt;T&amp;gt;::operator T&amp;amp;</source>
          <target state="translated">std :: reference_wrapper &amp;lt;T&amp;gt; :: get, std :: reference_wrapper &amp;lt;T&amp;gt; :: 연산자 T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="96d2b15db969cba54cde08b7941af95875088378" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper&amp;lt;T&amp;gt;::operator()</source>
          <target state="translated">std::reference_wrapper&amp;lt;T&amp;gt;::operator()</target>
        </trans-unit>
        <trans-unit id="53e4d1a746524f4e3f65e0697b5e390a1c32a5b8" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper&amp;lt;T&amp;gt;::operator=</source>
          <target state="translated">std::reference_wrapper&amp;lt;T&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="0a00bea01fde45667b07d893cd99a002734a019e" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper&amp;lt;T&amp;gt;::reference_wrapper</source>
          <target state="translated">std::reference_wrapper&amp;lt;T&amp;gt;::reference_wrapper</target>
        </trans-unit>
        <trans-unit id="fa545f1a34cc36f2f7061262d0908bcc87ab9820" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper::operator T&amp;amp;</source>
          <target state="translated">std :: reference_wrapper :: 연산자 T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b5cf358b891d4f7edd5dcc4247c3863184a7b90e" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper::operator()</source>
          <target state="translated">std::reference_wrapper::operator()</target>
        </trans-unit>
        <trans-unit id="fb234eb86e3eb69bffbfb2f443e259f8957a9d30" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper::operator=</source>
          <target state="translated">std::reference_wrapper::operator=</target>
        </trans-unit>
        <trans-unit id="eed63bf1828c3b25ab40995141be04eeaed81cd2" translate="yes" xml:space="preserve">
          <source>std::reference_wrapper::reference_wrapper</source>
          <target state="translated">std::reference_wrapper::reference_wrapper</target>
        </trans-unit>
        <trans-unit id="5c27daa0bab7cf166a1ea6da7cf811c8276cce13" translate="yes" xml:space="preserve">
          <source>std::regex_constants::error_type</source>
          <target state="translated">std::regex_constants::error_type</target>
        </trans-unit>
        <trans-unit id="4674a3ed9ad398d50841b71a73cf7550f13c98c2" translate="yes" xml:space="preserve">
          <source>std::regex_constants::match_flag_type</source>
          <target state="translated">std::regex_constants::match_flag_type</target>
        </trans-unit>
        <trans-unit id="3a69d2cd268fa0a95703726c24ed515bbbb26047" translate="yes" xml:space="preserve">
          <source>std::regex_constants::syntax_option_type</source>
          <target state="translated">std::regex_constants::syntax_option_type</target>
        </trans-unit>
        <trans-unit id="f6611bf2d216c953a4f723ba4c1b4f4b1cdb321d" translate="yes" xml:space="preserve">
          <source>std::regex_error</source>
          <target state="translated">std::regex_error</target>
        </trans-unit>
        <trans-unit id="dc6dbc17c0779dbb2d5b0748ba875490d2702673" translate="yes" xml:space="preserve">
          <source>std::regex_error::code</source>
          <target state="translated">std::regex_error::code</target>
        </trans-unit>
        <trans-unit id="2a62b7d054894c48da8680d9a80f75ca81acad92" translate="yes" xml:space="preserve">
          <source>std::regex_error::regex_error</source>
          <target state="translated">std::regex_error::regex_error</target>
        </trans-unit>
        <trans-unit id="17333df0215e6e2211347826d8ed4c9c863c9e88" translate="yes" xml:space="preserve">
          <source>std::regex_iterator</source>
          <target state="translated">std::regex_iterator</target>
        </trans-unit>
        <trans-unit id="885cb5ff8db9f22f79d3e6926c1df7862ac8e4e3" translate="yes" xml:space="preserve">
          <source>std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator*,operator-&amp;gt;</source>
          <target state="translated">std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator*,operator-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c95a0ffe34a64f4a736a59f45d2d7ea3e112d85c" translate="yes" xml:space="preserve">
          <source>std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator++, operator++(int)</source>
          <target state="translated">std :: regex_iterator &amp;lt;BidirIt, CharT, Traits&amp;gt; :: operator ++, 연산자 ++ (int)</target>
        </trans-unit>
        <trans-unit id="fc210b018209bd1c76f70519487094441d59f12e" translate="yes" xml:space="preserve">
          <source>std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="b176b479745497e0f030b93192a18f532e88ce35" translate="yes" xml:space="preserve">
          <source>std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator==,operator!=</source>
          <target state="translated">std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator==,operator!=</target>
        </trans-unit>
        <trans-unit id="5944ca0dadbde83eb2f8b1d23e3f83b04d17bc3c" translate="yes" xml:space="preserve">
          <source>std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::regex_iterator</source>
          <target state="translated">std::regex_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::regex_iterator</target>
        </trans-unit>
        <trans-unit id="194ed541cb711da8c426d94e884815cafd5f050e" translate="yes" xml:space="preserve">
          <source>std::regex_iterator::operator=</source>
          <target state="translated">std::regex_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="40921a605ce0719ef51a055ecddbcc2f99e1a9c5" translate="yes" xml:space="preserve">
          <source>std::regex_iterator::operators</source>
          <target state="translated">std::regex_iterator::operators</target>
        </trans-unit>
        <trans-unit id="8212db6375bc0441ddd3a1e2b76a20afeb6d3f84" translate="yes" xml:space="preserve">
          <source>std::regex_iterator::operators (int)</source>
          <target state="translated">std :: regex_iterator :: operators (int)</target>
        </trans-unit>
        <trans-unit id="47176febb72c652784ceb014f9acb64ccf9da264" translate="yes" xml:space="preserve">
          <source>std::regex_iterator::regex_iterator</source>
          <target state="translated">std::regex_iterator::regex_iterator</target>
        </trans-unit>
        <trans-unit id="19dac19df8d2938ade9e3baf8ef763649798140a" translate="yes" xml:space="preserve">
          <source>std::regex_match</source>
          <target state="translated">std::regex_match</target>
        </trans-unit>
        <trans-unit id="c2077a616fb59d0b9adb48efd8f40d09dc20e16c" translate="yes" xml:space="preserve">
          <source>std::regex_replace</source>
          <target state="translated">std::regex_replace</target>
        </trans-unit>
        <trans-unit id="ff10209fd150ef3298f2a0adfd8ca8b04e49fbca" translate="yes" xml:space="preserve">
          <source>std::regex_search</source>
          <target state="translated">std::regex_search</target>
        </trans-unit>
        <trans-unit id="1624994c165d9809224f2c6168f6df292d84a7af" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator</source>
          <target state="translated">std::regex_token_iterator</target>
        </trans-unit>
        <trans-unit id="41792e0112bbc1b6e93a8dbd9c71c3924651ff05" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator*, operator-&amp;gt;</source>
          <target state="translated">std :: regex_token_iterator &amp;lt;BidirIt, CharT, Traits&amp;gt; :: operator *, 연산자-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="01b4b293a0cc6fddc67a3d1ee18de744c0c48def" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator++, operator++(int)</source>
          <target state="translated">std :: regex_token_iterator &amp;lt;BidirIt, CharT, Traits&amp;gt; :: operator ++, operator ++ (int)</target>
        </trans-unit>
        <trans-unit id="10d8a8344f1c235d695d97c5a466bd2782a89e33" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator=</source>
          <target state="translated">std::regex_token_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="be82abaae1d8d5b758598f6789e4572518316d70" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::regex_token_iterator</source>
          <target state="translated">std::regex_token_iterator&amp;lt;BidirIt,CharT,Traits&amp;gt;::regex_token_iterator</target>
        </trans-unit>
        <trans-unit id="b3708a4c1abc9440a5eb53e68a9bfdc56b375f0b" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator::operator=</source>
          <target state="translated">std::regex_token_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="18a7d430a6183e1c929b8029c38b447cf8db465e" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator::operators (int)</source>
          <target state="translated">std :: regex_token_iterator :: operators (int)</target>
        </trans-unit>
        <trans-unit id="788d9fdee234c3c8b65221fe29f2cdaaf44a0841" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator::operators (operator-&amp;gt;)</source>
          <target state="translated">std :: regex_token_iterator :: operators (연산자-&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="aa8987aadfd1500e1cdf65bf7d4b718b51fd50b1" translate="yes" xml:space="preserve">
          <source>std::regex_token_iterator::regex_token_iterator</source>
          <target state="translated">std::regex_token_iterator::regex_token_iterator</target>
        </trans-unit>
        <trans-unit id="8c8df7193f0696e1a2d2e79c197f27c97b367ac3" translate="yes" xml:space="preserve">
          <source>std::regex_traits</source>
          <target state="translated">std::regex_traits</target>
        </trans-unit>
        <trans-unit id="ea272c53fa532771d610efd3022b22cd35c3cd1c" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::getloc</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::getloc</target>
        </trans-unit>
        <trans-unit id="ca6d5c70818f5b298c13337a14e53b2b47815e09" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::imbue</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::imbue</target>
        </trans-unit>
        <trans-unit id="bd99efc65b431b50181574158f9153f345b78df5" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::isctype</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::isctype</target>
        </trans-unit>
        <trans-unit id="481a643b86436c5486bdeb9f65ea64e77265a4c0" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::length</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::length</target>
        </trans-unit>
        <trans-unit id="b8f7c1fd8f6e58be9eea82b321530166fc5adcf3" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::lookup_classname</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::lookup_classname</target>
        </trans-unit>
        <trans-unit id="adf6901d6d9a54637eb555bc3be0952772af8db1" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::lookup_collatename</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::lookup_collatename</target>
        </trans-unit>
        <trans-unit id="b3cee60d1c133a16894f210000d81ffe891f5848" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::regex_traits</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::regex_traits</target>
        </trans-unit>
        <trans-unit id="9a0d6a6afd2d1fcfc100845de0c6d517b95a7865" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::transform</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::transform</target>
        </trans-unit>
        <trans-unit id="19505258f46278b3bdf3620392f68d92d746e61f" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::transform_primary</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::transform_primary</target>
        </trans-unit>
        <trans-unit id="1612e507aae9f9d78ccc24daa592dd310ea0cb03" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::translate</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::translate</target>
        </trans-unit>
        <trans-unit id="17b7e1b93c68b4172d7d04acb8cd5f340f1b7cb3" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::translate_nocase</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::translate_nocase</target>
        </trans-unit>
        <trans-unit id="06f11b36588dc46c3a1d36768776ee54787ad0bf" translate="yes" xml:space="preserve">
          <source>std::regex_traits&amp;lt;CharT&amp;gt;::value</source>
          <target state="translated">std::regex_traits&amp;lt;CharT&amp;gt;::value</target>
        </trans-unit>
        <trans-unit id="d143247d59686eeff1a6dbe6673810b6c5479956" translate="yes" xml:space="preserve">
          <source>std::regex_traits::getloc</source>
          <target state="translated">std::regex_traits::getloc</target>
        </trans-unit>
        <trans-unit id="765004f5a695764d98f0644867a0e2521b4c0a91" translate="yes" xml:space="preserve">
          <source>std::regex_traits::imbue</source>
          <target state="translated">std::regex_traits::imbue</target>
        </trans-unit>
        <trans-unit id="037502757e1cc7a784b94f8286693b0909e54636" translate="yes" xml:space="preserve">
          <source>std::regex_traits::isctype</source>
          <target state="translated">std::regex_traits::isctype</target>
        </trans-unit>
        <trans-unit id="38584289856b32cd4445201710b34e1e93cd6b6f" translate="yes" xml:space="preserve">
          <source>std::regex_traits::length</source>
          <target state="translated">std::regex_traits::length</target>
        </trans-unit>
        <trans-unit id="a276de9732193eb5d0ad54cf36863cc5b67ea9db" translate="yes" xml:space="preserve">
          <source>std::regex_traits::lookup_classname</source>
          <target state="translated">std::regex_traits::lookup_classname</target>
        </trans-unit>
        <trans-unit id="45d5bc5c55c047a8d48a5964d24174162f0b2d88" translate="yes" xml:space="preserve">
          <source>std::regex_traits::lookup_collatename</source>
          <target state="translated">std::regex_traits::lookup_collatename</target>
        </trans-unit>
        <trans-unit id="4a87d3fb2f1f031221641c4ec9fae7d6a8c2c948" translate="yes" xml:space="preserve">
          <source>std::regex_traits::regex_traits</source>
          <target state="translated">std::regex_traits::regex_traits</target>
        </trans-unit>
        <trans-unit id="b417fdcca36d578360164caf2e8aa2f39da24338" translate="yes" xml:space="preserve">
          <source>std::regex_traits::transform</source>
          <target state="translated">std::regex_traits::transform</target>
        </trans-unit>
        <trans-unit id="fc2e080da86dc893d29e5eea42991f08e159d573" translate="yes" xml:space="preserve">
          <source>std::regex_traits::transform_primary</source>
          <target state="translated">std::regex_traits::transform_primary</target>
        </trans-unit>
        <trans-unit id="8170258ce3fb64a07b0efb58c9ed06b9a0453594" translate="yes" xml:space="preserve">
          <source>std::regex_traits::translate</source>
          <target state="translated">std::regex_traits::translate</target>
        </trans-unit>
        <trans-unit id="934f784f0fd97cb410543203698cb73ea1273c05" translate="yes" xml:space="preserve">
          <source>std::regex_traits::translate_nocase</source>
          <target state="translated">std::regex_traits::translate_nocase</target>
        </trans-unit>
        <trans-unit id="89bf2b954b3ad5b851723aed1f64054c2c4a7310" translate="yes" xml:space="preserve">
          <source>std::regex_traits::value</source>
          <target state="translated">std::regex_traits::value</target>
        </trans-unit>
        <trans-unit id="dc8d8bca5b5326cf2d5128e2c7656dd516d5d85a" translate="yes" xml:space="preserve">
          <source>std::rel_ops::operator!=,&amp;gt;,&amp;lt;=,&amp;gt;=</source>
          <target state="translated">std::rel_ops::operator!=,&amp;gt;,&amp;lt;=,&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="68e270af343176cf4da53f29b7b4d6ee3152b20b" translate="yes" xml:space="preserve">
          <source>std::rel_ops::operators</source>
          <target state="translated">std::rel_ops::operators</target>
        </trans-unit>
        <trans-unit id="0a3169465e6761d4061efa172ef40d3b6452c628" translate="yes" xml:space="preserve">
          <source>std::remainder, std::remainderf, std::remainderl</source>
          <target state="translated">std :: 나머지, std :: 나머지, std :: 나머지</target>
        </trans-unit>
        <trans-unit id="0bb94efc50dd993dca1ee167c5eeff46153939c9" translate="yes" xml:space="preserve">
          <source>std::remainderl</source>
          <target state="translated">std::remainderl</target>
        </trans-unit>
        <trans-unit id="03d19d18cef8308e0712470843741ead298d09b0" translate="yes" xml:space="preserve">
          <source>std::remove</source>
          <target state="translated">std::remove</target>
        </trans-unit>
        <trans-unit id="90affd60d80eb2186f4fee3d62b6c180a75949d4" translate="yes" xml:space="preserve">
          <source>std::remove, std::remove_if</source>
          <target state="translated">std :: remove, std :: remove_if</target>
        </trans-unit>
        <trans-unit id="86f282f971473c756aca8119d1bc8b16b75b30e7" translate="yes" xml:space="preserve">
          <source>std::remove_all_extents</source>
          <target state="translated">std::remove_all_extents</target>
        </trans-unit>
        <trans-unit id="c3670716c5fd79f454152483132920575adcebdb" translate="yes" xml:space="preserve">
          <source>std::remove_copy, std::remove_copy_if</source>
          <target state="translated">std :: remove_copy, std :: remove_copy_if</target>
        </trans-unit>
        <trans-unit id="54f13f0e892ecd746b6d467df79f5fa72d30c383" translate="yes" xml:space="preserve">
          <source>std::remove_copy_if</source>
          <target state="translated">std::remove_copy_if</target>
        </trans-unit>
        <trans-unit id="b4eb51c47f31222d98d2dff5d146e28f3c132b1c" translate="yes" xml:space="preserve">
          <source>std::remove_cv, std::remove_const, std::remove_volatile</source>
          <target state="translated">std :: remove_cv, std :: remove_const, std :: remove_volatile</target>
        </trans-unit>
        <trans-unit id="a18f0e553b8ad93ae95263da85dd7254c109a1ae" translate="yes" xml:space="preserve">
          <source>std::remove_cvref</source>
          <target state="translated">std::remove_cvref</target>
        </trans-unit>
        <trans-unit id="99d264bb0cb2be5ed4863fd3c546f67c721f0f59" translate="yes" xml:space="preserve">
          <source>std::remove_extent</source>
          <target state="translated">std::remove_extent</target>
        </trans-unit>
        <trans-unit id="dda0868d66ca19234f487129ec1abf1ef156694e" translate="yes" xml:space="preserve">
          <source>std::remove_if</source>
          <target state="translated">std::remove_if</target>
        </trans-unit>
        <trans-unit id="b4bd83c71329798fd14b1f6e4894a7184b2abcd3" translate="yes" xml:space="preserve">
          <source>std::remove_pointer</source>
          <target state="translated">std::remove_pointer</target>
        </trans-unit>
        <trans-unit id="3dab432f83618b347fe61c41a7d57a16f721f930" translate="yes" xml:space="preserve">
          <source>std::remove_reference</source>
          <target state="translated">std::remove_reference</target>
        </trans-unit>
        <trans-unit id="b325e90be46cb4929c4db87373993c4234d2cf00" translate="yes" xml:space="preserve">
          <source>std::remove_volatile</source>
          <target state="translated">std::remove_volatile</target>
        </trans-unit>
        <trans-unit id="81f8329bae317a48505aa527413a6298112a17e7" translate="yes" xml:space="preserve">
          <source>std::remquo, std::remquof, std::remquol</source>
          <target state="translated">std :: remquo, std :: remquof, std :: remquol</target>
        </trans-unit>
        <trans-unit id="2e04472feecefa8b4af9f880af2fbe71d249300f" translate="yes" xml:space="preserve">
          <source>std::remquol</source>
          <target state="translated">std::remquol</target>
        </trans-unit>
        <trans-unit id="c83b4f5818430b7bcf66bc8b42459f182a3e14c3" translate="yes" xml:space="preserve">
          <source>std::rename</source>
          <target state="translated">std::rename</target>
        </trans-unit>
        <trans-unit id="c9345d0e1a2aaceba443a28f86bba1c851fa7ff5" translate="yes" xml:space="preserve">
          <source>std::rend</source>
          <target state="translated">std::rend</target>
        </trans-unit>
        <trans-unit id="9278b7781ca9966b9fe19c46dc9ed5f712c3bc8a" translate="yes" xml:space="preserve">
          <source>std::rend(std::initializer_list)</source>
          <target state="translated">std::rend(std::initializer_list)</target>
        </trans-unit>
        <trans-unit id="aca7cedf53b583d4bcae0513de419bfd2cc36283" translate="yes" xml:space="preserve">
          <source>std::rend, std::crend</source>
          <target state="translated">표준 :: 렌드, 표준 :: 크 렌드</target>
        </trans-unit>
        <trans-unit id="99e1f86c2fd47438ad44fa80280818ad71e8dbd6" translate="yes" xml:space="preserve">
          <source>std::rend&lt;small&gt;(std::initializer_list)&lt;/small&gt;</source>
          <target state="translated">std::rend&lt;small&gt;(std::initializer_list)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0ffe1e0fd601f671d55b1047853795eeb4fe79ee" translate="yes" xml:space="preserve">
          <source>std::replace, std::replace_if</source>
          <target state="translated">std :: replace, std :: replace_if</target>
        </trans-unit>
        <trans-unit id="ef33abf391d8f5fe69b046fc13fa1d93c366b093" translate="yes" xml:space="preserve">
          <source>std::replace_copy, std::replace_copy_if</source>
          <target state="translated">std :: replace_copy, std :: replace_copy_if</target>
        </trans-unit>
        <trans-unit id="67786b2c4f090719be805dca944a992b23d30b56" translate="yes" xml:space="preserve">
          <source>std::replace_copy_if</source>
          <target state="translated">std::replace_copy_if</target>
        </trans-unit>
        <trans-unit id="86f4dcaa3a5a655af1f0fbe13d1fc66e904521b5" translate="yes" xml:space="preserve">
          <source>std::replace_if</source>
          <target state="translated">std::replace_if</target>
        </trans-unit>
        <trans-unit id="310dc7c4f39b982bec392534dec9efde2143e0ed" translate="yes" xml:space="preserve">
          <source>std::resetiosflags</source>
          <target state="translated">std::resetiosflags</target>
        </trans-unit>
        <trans-unit id="41108f3e21b584ce08893dda182f4c85263e889f" translate="yes" xml:space="preserve">
          <source>std::result_of</source>
          <target state="translated">std::result_of</target>
        </trans-unit>
        <trans-unit id="bcdbb83e31d7412fead4758dbe9950428183e947" translate="yes" xml:space="preserve">
          <source>std::result_of, std::invoke_result</source>
          <target state="translated">std :: result_of, std :: invoke_result</target>
        </trans-unit>
        <trans-unit id="102564795088d5b6c6d76a8820307260220f93cb" translate="yes" xml:space="preserve">
          <source>std::rethrow_exception</source>
          <target state="translated">std::rethrow_exception</target>
        </trans-unit>
        <trans-unit id="2640db0dfbf8814f35b687a7bfd94d00fca64431" translate="yes" xml:space="preserve">
          <source>std::rethrow_if_nested</source>
          <target state="translated">std::rethrow_if_nested</target>
        </trans-unit>
        <trans-unit id="a7554389d27e3f0f28b63d9e761fba390158f920" translate="yes" xml:space="preserve">
          <source>std::return_temporary_buffer</source>
          <target state="translated">std::return_temporary_buffer</target>
        </trans-unit>
        <trans-unit id="eeac5aa5f78b613d476215bcd330ae244b9c2959" translate="yes" xml:space="preserve">
          <source>std::reverse</source>
          <target state="translated">std::reverse</target>
        </trans-unit>
        <trans-unit id="01a2715118c54221c09ff9b1726e5907d68da648" translate="yes" xml:space="preserve">
          <source>std::reverse_copy</source>
          <target state="translated">std::reverse_copy</target>
        </trans-unit>
        <trans-unit id="036aa73aab3d7bc54a9fd3a76e8d8c7f0702f27d" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator</source>
          <target state="translated">std::reverse_iterator</target>
        </trans-unit>
        <trans-unit id="e23fb3dd66ac0141db9ec5b7ce70bc869ad1cace" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator&amp;lt;Iter&amp;gt;::base</source>
          <target state="translated">std::reverse_iterator&amp;lt;Iter&amp;gt;::base</target>
        </trans-unit>
        <trans-unit id="697ea3fc46aa378a77ecb37f6fdbf493533ab417" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator&amp;lt;Iter&amp;gt;::operator*,-&amp;gt;</source>
          <target state="translated">std::reverse_iterator&amp;lt;Iter&amp;gt;::operator*,-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="82a08ad5bf68ee29079371c5b27cc97aea2bfa7c" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator&amp;lt;Iter&amp;gt;::operator++,+,+=,--,-,-=</source>
          <target state="translated">std::reverse_iterator&amp;lt;Iter&amp;gt;::operator++,+,+=,--,-,-=</target>
        </trans-unit>
        <trans-unit id="a480010bc028fe2ac98df4b11cb51e121e0ba58b" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator&amp;lt;Iter&amp;gt;::operator=</source>
          <target state="translated">std::reverse_iterator&amp;lt;Iter&amp;gt;::operator=</target>
        </trans-unit>
        <trans-unit id="d71fdb272fa692812f346e2e5bc4417fce965eaa" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator&amp;lt;Iter&amp;gt;::operator[]</source>
          <target state="translated">std::reverse_iterator&amp;lt;Iter&amp;gt;::operator[]</target>
        </trans-unit>
        <trans-unit id="f00dbb48ebeb414ef8f7eafb83544ec647eeed60" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator&amp;lt;Iter&amp;gt;::reverse_iterator</source>
          <target state="translated">std::reverse_iterator&amp;lt;Iter&amp;gt;::reverse_iterator</target>
        </trans-unit>
        <trans-unit id="d4f5293d1f86cdc014d1d32d95f6a14d73aff200" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator::base</source>
          <target state="translated">std::reverse_iterator::base</target>
        </trans-unit>
        <trans-unit id="250f3972e7feb0d6dba3961065e2b8df0ba1efc0" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator::operator=</source>
          <target state="translated">std::reverse_iterator::operator=</target>
        </trans-unit>
        <trans-unit id="7980beb406fae0c4c4efa8e202eda7427e1eb229" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator::operator[]</source>
          <target state="translated">std::reverse_iterator::operator[]</target>
        </trans-unit>
        <trans-unit id="306981a1e42d1bd9a09067787a23284bdd095727" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator::operators</source>
          <target state="translated">std::reverse_iterator::operators</target>
        </trans-unit>
        <trans-unit id="08f4dc18112ddd00d55213a7c0d22e01c9863ffa" translate="yes" xml:space="preserve">
          <source>std::reverse_iterator::reverse_iterator</source>
          <target state="translated">std::reverse_iterator::reverse_iterator</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
