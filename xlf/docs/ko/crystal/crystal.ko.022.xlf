<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="750baf19ca48ff2e6934e86b57ba60763dc8fe55" translate="yes" xml:space="preserve">
          <source>Sets whether transmitted multicast packets should be copied and sent back to the originator, if the host has joined the multicast group.</source>
          <target state="translated">호스트가 멀티 캐스트 그룹에 가입 한 경우 전송 된 멀티 캐스트 패킷을 복사하여 발신자에게 다시 보낼지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0720673586b7417c20a9c4ba45304bffbcc41fc0" translate="yes" xml:space="preserve">
          <source>Setup repository</source>
          <target state="translated">설치 저장소</target>
        </trans-unit>
        <trans-unit id="a1f18b58cc09125b02e35c555d166ae099817d13" translate="yes" xml:space="preserve">
          <source>Setups logging based on &lt;code&gt;LOG_LEVEL&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;LOG_LEVEL&lt;/code&gt; 환경 변수를 기반으로 로깅을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c0ef2b0628e148bf5aadc0d10eca9b2b92983b1f" translate="yes" xml:space="preserve">
          <source>Setups logging bindings discarding all previous configurations.</source>
          <target state="translated">이전 구성을 모두 버리는 로깅 바인딩을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="42b6e1ba88ce92d3d0998c0c90f7634397980fbf" translate="yes" xml:space="preserve">
          <source>Setups logging for &lt;em&gt;sources&lt;/em&gt; using the specified &lt;em&gt;level&lt;/em&gt;, &lt;em&gt;backend&lt;/em&gt;.</source>
          <target state="translated">지정된 &lt;em&gt;수준&lt;/em&gt; 인 &lt;em&gt;백엔드를&lt;/em&gt; 사용하여 &lt;em&gt;소스에&lt;/em&gt; 대한 로깅을 설정 합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a9ff60e1cab9b53ae5d2a02d85127d541c73fc2" translate="yes" xml:space="preserve">
          <source>Setups logging for all sources using the specified &lt;em&gt;level&lt;/em&gt;, &lt;em&gt;backend&lt;/em&gt;.</source>
          <target state="translated">지정된 &lt;em&gt;수준&lt;/em&gt; 인 &lt;em&gt;백엔드를&lt;/em&gt; 사용하여 모든 소스에 대한 로깅을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9ffaea063d196f4d736024085ec205e3cf0b5345" translate="yes" xml:space="preserve">
          <source>Several &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; blocks can be nested.</source>
          <target state="translated">여러 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 블록을 중첩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36d69f8a3ba5e5a9e2f9465a7f80aa53fbf70967" translate="yes" xml:space="preserve">
          <source>Several &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; blocks can be nested.</source>
          <target state="translated">여러 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 블록을 중첩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1531a091545634b6490d8397941625f31ecd142" translate="yes" xml:space="preserve">
          <source>Several Linux distribution are supported by WSL and the installation instructions for Crystal are equal to that of the respective Linux distribution, most commonly &lt;a href=&quot;on_debian_and_ubuntu&quot;&gt;Debian/Ubuntu&lt;/a&gt;.</source>
          <target state="translated">WSL은 여러 Linux 배포판을 지원하며 Crystal 설치 지침은 각 Linux 배포판의 설치 지침과 동일하며 가장 일반적으로 &lt;a href=&quot;on_debian_and_ubuntu&quot;&gt;Debian / Ubuntu&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="374529ac2aa9abb19492156ad7a7a69f024da4de" translate="yes" xml:space="preserve">
          <source>Several ways of parsing CSV are provided. The most straight-forward, but slow or inefficient for some scenarios, is &lt;code&gt;&lt;a href=&quot;csv#parse(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR):Array(Array(String))-class-method&quot;&gt;CSV#parse&lt;/a&gt;&lt;/code&gt;, which returns an array of arrays of all data.</source>
          <target state="translated">CSV를 구문 분석하는 여러 가지 방법이 제공됩니다. 일부 시나리오에서 가장 간단하지만 느리거나 비효율적 인 것은 &lt;code&gt;&lt;a href=&quot;csv#parse(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR):Array(Array(String))-class-method&quot;&gt;CSV#parse&lt;/a&gt;&lt;/code&gt; 입니다. 것은 모든 데이터의 배열 배열을 반환하는 입니다.</target>
        </trans-unit>
        <trans-unit id="de314fa0c9d9e359b633f2fdab4659c886fe5986" translate="yes" xml:space="preserve">
          <source>Severity</source>
          <target state="translated">Severity</target>
        </trans-unit>
        <trans-unit id="0c700424deb1e85f281ca083316d135f781a5276" translate="yes" xml:space="preserve">
          <source>Severity#debug?</source>
          <target state="translated">Severity#debug?</target>
        </trans-unit>
        <trans-unit id="c6d4fce2794d6011a5b65d160894dcf894378683" translate="yes" xml:space="preserve">
          <source>Severity#error?</source>
          <target state="translated">Severity#error?</target>
        </trans-unit>
        <trans-unit id="b43ad8f98b82f1d7157dcf4bb32c62df19fc28b3" translate="yes" xml:space="preserve">
          <source>Severity#fatal?</source>
          <target state="translated">Severity#fatal?</target>
        </trans-unit>
        <trans-unit id="4c0d52aadfaa9b2a265e2b480ef989be9ce9c650" translate="yes" xml:space="preserve">
          <source>Severity#info?</source>
          <target state="translated">Severity#info?</target>
        </trans-unit>
        <trans-unit id="72af4dc81abd2371fb8ccd46524b638f47fa0fd5" translate="yes" xml:space="preserve">
          <source>Severity#label</source>
          <target state="translated">Severity#label</target>
        </trans-unit>
        <trans-unit id="a1f48e657710a5448577b2897938bf66c87c1adc" translate="yes" xml:space="preserve">
          <source>Severity#none?</source>
          <target state="translated">Severity#none?</target>
        </trans-unit>
        <trans-unit id="2135b2a021246cffca959edde3b7235e083ef1ec" translate="yes" xml:space="preserve">
          <source>Severity#notice?</source>
          <target state="translated">Severity#notice?</target>
        </trans-unit>
        <trans-unit id="3e044a75fa6cebd6db6bd65973c0e8ee352ab0a5" translate="yes" xml:space="preserve">
          <source>Severity#trace?</source>
          <target state="translated">Severity#trace?</target>
        </trans-unit>
        <trans-unit id="4911aa93c963e18c435a9f6129c5808d7b52eb02" translate="yes" xml:space="preserve">
          <source>Severity#unknown?</source>
          <target state="translated">Severity#unknown?</target>
        </trans-unit>
        <trans-unit id="63465c4afadce5551e647ae720805c24cae1ae21" translate="yes" xml:space="preserve">
          <source>Severity#warn?</source>
          <target state="translated">Severity#warn?</target>
        </trans-unit>
        <trans-unit id="b5b2e90dbe5e864841a23aa77d1d771c58de78a0" translate="yes" xml:space="preserve">
          <source>Severity#warning?</source>
          <target state="translated">Severity#warning?</target>
        </trans-unit>
        <trans-unit id="5e542df53158f3531d56246fa27a3b23dbe2c196" translate="yes" xml:space="preserve">
          <source>Shards commands</source>
          <target state="translated">샤드 명령</target>
        </trans-unit>
        <trans-unit id="ced71e63fb0321906eb206ad29c2f6fde0a19317" translate="yes" xml:space="preserve">
          <source>Shards is usually distributed with Crystal itself. Alternatively, a separate &lt;code&gt;shards&lt;/code&gt; package may be available for your system.</source>
          <target state="translated">샤드는 일반적으로 Crystal 자체와 함께 배포됩니다. 또는 시스템에 별도의 &lt;code&gt;shards&lt;/code&gt; 패키지를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fa56de6ee848293b68cbd0f990d2d49cb85504b" translate="yes" xml:space="preserve">
          <source>Shell-quotes one item, same as &lt;code&gt;&lt;a href=&quot;process#quote(arg:String):String-class-method&quot;&gt;.quote({arg})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;process#quote(arg:String):String-class-method&quot;&gt;.quote({arg})&lt;/a&gt;&lt;/code&gt; 와 같이 하나의 항목을 쉘 인용합니다 .</target>
        </trans-unit>
        <trans-unit id="ceaea27157ac0fb56bf8d23cf0af582a6a7a6f94" translate="yes" xml:space="preserve">
          <source>Shell-quotes one item, same as &lt;code&gt;&lt;a href=&quot;process#quote(args:Enumerable(String)):String-class-method&quot;&gt;.quote({arg})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34dd369c5bb34511d0e9e259e9142f54c1daeea" translate="yes" xml:space="preserve">
          <source>Shell-quotes one item, same as &lt;code&gt;&lt;a href=&quot;process#quote_posix(args:Enumerable(String)):String-class-method&quot;&gt;.quote_posix({arg})&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;process#quote_posix(args:Enumerable(String)):String-class-method&quot;&gt;.quote_posix({arg})&lt;/a&gt;&lt;/code&gt; 와 동일하게 하나의 항목을 쉘 인용합니다 .</target>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="0c5bc1ae01ce5504f9c4592b24f607b48210b732" translate="yes" xml:space="preserve">
          <source>Shifts</source>
          <target state="translated">Shifts</target>
        </trans-unit>
        <trans-unit id="1d2758545c142cc7e69ad0fa343bae4622237b96" translate="yes" xml:space="preserve">
          <source>Short and long modifier style options (example: &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;)</source>
          <target state="translated">짧고 긴 수정 자 스타일 옵션 (예 : &lt;code&gt;-h&lt;/code&gt; , &lt;code&gt;--help&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ab5e82da1c273c2e243b39e07aec7717d2b19c35" translate="yes" xml:space="preserve">
          <source>Short example:</source>
          <target state="translated">간단한 예 :</target>
        </trans-unit>
        <trans-unit id="dde6f4dbe18f5ee685d2e90c11b0fd5de65623a1" translate="yes" xml:space="preserve">
          <source>Short one-argument syntax</source>
          <target state="translated">짧은 하나의 인수 구문</target>
        </trans-unit>
        <trans-unit id="20837b667b3f8178b7f33b19be1a33b523a6d7af" translate="yes" xml:space="preserve">
          <source>Short one-parameter syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7a264acff8212ae3c06bc19670b99b9b0685d4" translate="yes" xml:space="preserve">
          <source>Short syntax form</source>
          <target state="translated">짧은 구문 양식</target>
        </trans-unit>
        <trans-unit id="fd47f544792b1da6c9f0a4593b024fbfbcc93c59" translate="yes" xml:space="preserve">
          <source>ShortFormat</source>
          <target state="translated">ShortFormat</target>
        </trans-unit>
        <trans-unit id="6eec5651165bf55c422d14bf052789cee6b4debc" translate="yes" xml:space="preserve">
          <source>ShortFormat#run</source>
          <target state="translated">ShortFormat#run</target>
        </trans-unit>
        <trans-unit id="c6be1c871bdd48ffe8ab24fe6b805c9aaef4e121" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;&lt;a href=&quot;iterator/stop#INSTANCE&quot;&gt;Iterator::Stop::INSTANCE&lt;/a&gt;&lt;/code&gt;, to signal that there are no more elements in an iterator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterator/stop#INSTANCE&quot;&gt;Iterator::Stop::INSTANCE&lt;/a&gt;&lt;/code&gt; 에 더 이상 요소가 없음을 알리기 위해 반복자 :: Stop :: INSTANCE 바로 가기입니다 .</target>
        </trans-unit>
        <trans-unit id="9bd53e646b7ebb620845a40a96b164b05b65e5b8" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;!(self =~ other)&lt;/code&gt;.</source>
          <target state="translated">바로 가기 &lt;code&gt;!(self =~ other)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="663a137e41cde6c29440a78704c37ca5655ee742" translate="yes" xml:space="preserve">
          <source>Shuffles &lt;em&gt;count&lt;/em&gt; consecutive values pointed by this pointer.</source>
          <target state="translated">셔플 은이 포인터가 가리키는 연속 값을 &lt;em&gt;계산&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="27bed13a88c60350c3de92ec3820e1cc4f7d6ec3" translate="yes" xml:space="preserve">
          <source>Signal</source>
          <target state="translated">Signal</target>
        </trans-unit>
        <trans-unit id="7961ab998407515f84b3a60c9dcdecf60d020231" translate="yes" xml:space="preserve">
          <source>Signal#bus?</source>
          <target state="translated">Signal#bus?</target>
        </trans-unit>
        <trans-unit id="f6c05e7c7dfa611b2900c504f952e29f97470469" translate="yes" xml:space="preserve">
          <source>Signal#fpe?</source>
          <target state="translated">Signal#fpe?</target>
        </trans-unit>
        <trans-unit id="64757a7bef60841bae52884a03b1d31a2f863761" translate="yes" xml:space="preserve">
          <source>Signal#hup?</source>
          <target state="translated">Signal#hup?</target>
        </trans-unit>
        <trans-unit id="f9606ed83fbd40cd80ff5e9a2392c4cb8b39c2a3" translate="yes" xml:space="preserve">
          <source>Signal#ill?</source>
          <target state="translated">Signal#ill?</target>
        </trans-unit>
        <trans-unit id="1a09ffcf9e3b2b7aa285cae9b56a97d123552727" translate="yes" xml:space="preserve">
          <source>Signal#int?</source>
          <target state="translated">Signal#int?</target>
        </trans-unit>
        <trans-unit id="34acff295a0931b8dd1044bfd42670b6de9067d1" translate="yes" xml:space="preserve">
          <source>Signal#io?</source>
          <target state="translated">Signal#io?</target>
        </trans-unit>
        <trans-unit id="7459d29c1ea242dd88cf85223f30f34ae81935ae" translate="yes" xml:space="preserve">
          <source>Signal#iot?</source>
          <target state="translated">Signal#iot?</target>
        </trans-unit>
        <trans-unit id="970b40002f9672dbf3bf22aaea10576300bdae84" translate="yes" xml:space="preserve">
          <source>Signal#pwr?</source>
          <target state="translated">Signal#pwr?</target>
        </trans-unit>
        <trans-unit id="c357582704ff4f308ab0b83b51afcf835bf7eea0" translate="yes" xml:space="preserve">
          <source>Signal#sys?</source>
          <target state="translated">Signal#sys?</target>
        </trans-unit>
        <trans-unit id="4dc0937b5ad13b8850f5592945c531701719bb96" translate="yes" xml:space="preserve">
          <source>Signal#trap</source>
          <target state="translated">Signal#trap</target>
        </trans-unit>
        <trans-unit id="1db237c529a30b102ca091a60a0541ae85712558" translate="yes" xml:space="preserve">
          <source>Signal#urg?</source>
          <target state="translated">Signal#urg?</target>
        </trans-unit>
        <trans-unit id="fa7f13e467d06d864d2b5761416a3940bcb25a91" translate="yes" xml:space="preserve">
          <source>Signals are dispatched to the event loop and later processed in a dedicated fiber. Some received signals may never be processed when the program terminates.</source>
          <target state="translated">신호는 이벤트 루프로 디스패치되고 나중에 전용 파이버에서 처리됩니다. 프로그램이 종료 될 때 수신 된 일부 신호는 처리되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1f656a50a45095502fa94742f732e3a33d9b6a7" translate="yes" xml:space="preserve">
          <source>Signals the end of a JSON document.</source>
          <target state="translated">JSON 문서의 끝을 알립니다.</target>
        </trans-unit>
        <trans-unit id="6e3665d85fde70112ccec1bb287428d4fd142fcc" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">Signed</target>
        </trans-unit>
        <trans-unit id="ef0c1ef780fa15a88c862ee5ebb7644475c1faca" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;next&lt;/code&gt; can also take a parameter which will then be returned by &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt; 와 비슷하게 &lt;code&gt;next&lt;/code&gt; 는 매개 변수를 사용할 수 있으며 &lt;code&gt;yield&lt;/code&gt; 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="a4f44bef20ed94db12195debc5022a52b61ed70a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;next&lt;/code&gt; can also take an argument which will then be returned by &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c5652e373aee9dfaf8e6cdca528bed42e880e5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;#breakable&lt;/code&gt; except the decision to break or not is determined individually.</source>
          <target state="translated">파단 여부를 결정 &lt;code&gt;#breakable&lt;/code&gt; 점을 제외하고 #breakable과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="3ea59c0a2b726d95d08cb17654fcdd963035fd2a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#%3C%3C(value:T)-instance-method&quot;&gt;Array#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#%3C%3C(value:T)-instance-method&quot;&gt;Array#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="5ed240b1290f9f748f65e6d4456fe78be504963e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#%5B%5D(range:Range)-instance-method&quot;&gt;Array#[]&lt;/a&gt;&lt;/code&gt;, but returns &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; on out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e9824db984001573313487afd194e3fbfaf3dd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#%5B%5D(start:Int,count:Int)-instance-method&quot;&gt;Array#[]&lt;/a&gt;&lt;/code&gt;, but returns &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; on out of bounds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#%5B%5D(start:Int,count:Int)-instance-method&quot;&gt;Array#[]&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 범위를 벗어나면 &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7344d18f0d9a41907b904b77162713788843ca16" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#%5B%5D=(range:Range,value:T)-instance-method&quot;&gt;Array#[]=&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#%5B%5D=(range:Range,value:T)-instance-method&quot;&gt;Array#[]=&lt;/a&gt;&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="8bd368eb60f30332a1702acee46f7fa7f37ea987" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#%5B%5D=(range:Range,values:Array(T))-instance-method&quot;&gt;Array#[]=&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bdb91a5d076dd09d130e3268c227038d645b184" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#+(other:Array(U))forallU-instance-method&quot;&gt;Array#+&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#+(other:Array(U))forallU-instance-method&quot;&gt;Array#+&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="cba480064c48662e33b70b3e4112ebfab852bf4a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#clear-instance-method&quot;&gt;Array#clear&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#clear-instance-method&quot;&gt;Array#clear&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="707115c1973194b1a5657f7162c75a0e9c368e3a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#first(n:Int)-instance-method&quot;&gt;Array#first&lt;/a&gt;&lt;/code&gt;, but returns a &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; if the array is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#first(n:Int)-instance-method&quot;&gt;Array#first&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; 을 반환합니다 . 배열이 비어 있으면 .</target>
        </trans-unit>
        <trans-unit id="61e34fd43c288f30c35539cb0d1fab1796e2296a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#last(n:Int)-instance-method&quot;&gt;Array#last&lt;/a&gt;&lt;/code&gt;, but returns a &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; if the array is empty.</source>
          <target state="translated">유사하게 &lt;code&gt;&lt;a href=&quot;../../array#last(n:Int)-instance-method&quot;&gt;Array#last&lt;/a&gt;&lt;/code&gt; 하지만 리턴한다 &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; 은 배열이 비어있는 경우.</target>
        </trans-unit>
        <trans-unit id="ecd51b712ab1325ee4fb1ee0da2660860ece67f5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#push(*values:T)-instance-method&quot;&gt;Array#push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73308720293bac6af3aff4aa2249d0fb2ee02ddd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#push(value:T)-instance-method&quot;&gt;Array#push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#push(value:T)-instance-method&quot;&gt;Array#push&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="eb07e7d4cf05f10b3bb98987c57bfe3ab4a161e2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#shuffle(random=Random::DEFAULT)-instance-method&quot;&gt;Array#shuffle&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#shuffle(random=Random::DEFAULT)-instance-method&quot;&gt;Array#shuffle&lt;/a&gt;&lt;/code&gt; 과 유사</target>
        </trans-unit>
        <trans-unit id="21e73fec9faf5bad77c24bb61eac4bd617c4e8a5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#size:Int32-instance-method&quot;&gt;Array#size&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#size:Int32-instance-method&quot;&gt;Array#size&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="7564d28d0cff46ae84159e68af2b717082b6e90d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#sort:Array(T)-instance-method&quot;&gt;Array#sort&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#sort:Array(T)-instance-method&quot;&gt;Array#sort&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="48928280213731a02d081a39d82c5c779e39aef1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#sort_by(&amp;amp;block:T-%3EUNDERSCORE):Array(T)-instance-method&quot;&gt;Array#sort_by&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#sort_by(&amp;amp;block:T-%3EUNDERSCORE):Array(T)-instance-method&quot;&gt;Array#sort_by&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="45241f97626f63835a54d7258b54f5c52a45c40b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#sort_by(&amp;amp;block:T-%3E_):Array(T)-instance-method&quot;&gt;Array#sort_by&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#sort_by(&amp;amp;block:T-%3E_):Array(T)-instance-method&quot;&gt;Array#sort_by&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="b3d6bd34a9b3a87a7d1349bc69b0ac0d0a6b753c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#uniq-instance-method&quot;&gt;Array#uniq&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#uniq-instance-method&quot;&gt;Array#uniq&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="a1532639eb01aa7eec1fef6e6e951a94e0a289a6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#unshift(obj:T)-instance-method&quot;&gt;Array#unshift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../array#unshift(obj:T)-instance-method&quot;&gt;Array#unshift&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="45ef304b32e921fbdb41a5cbb64f93724aeb52b8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../array#unshift(object:T)-instance-method&quot;&gt;Array#unshift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1469dac2751c041b97df99b155d7772c3b06eb4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#all?(&amp;amp;)-instance-method&quot;&gt;Enumerable#all?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#all?(&amp;amp;)-instance-method&quot;&gt;Enumerable#all?&lt;/a&gt;&lt;/code&gt; 유사 합니까?</target>
        </trans-unit>
        <trans-unit id="2d743ab24c17e603b19aae5051ba9c7e2756998a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;Enumerable#all?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;Enumerable#all?&lt;/a&gt;&lt;/code&gt; 와 비슷한 ?</target>
        </trans-unit>
        <trans-unit id="04f07ce40c7bdb3043b2cbcc199031d3918a4af6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#any?(&amp;amp;)-instance-method&quot;&gt;Enumerable#any?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#any?(&amp;amp;)-instance-method&quot;&gt;Enumerable#any?&lt;/a&gt;&lt;/code&gt; 와 유사 합니까?</target>
        </trans-unit>
        <trans-unit id="7c9548eb2cd29fca663181528f9b3cab5e1211e5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;Enumerable#any?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#any?(&amp;amp;block)-instance-method&quot;&gt;Enumerable#any?&lt;/a&gt;&lt;/code&gt; 와 비슷한 ?</target>
        </trans-unit>
        <trans-unit id="6cb0b3ea1e03d12301d3cbab3e8933fb31c9ccae" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;Enumerable#each_with_index&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;Enumerable#each_with_index&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="91a14006ecb33240bfc9a27907b327bdf133e389" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;Enumerable#find&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;)-instance-method&quot;&gt;Enumerable#find&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="fddf4833d001dca258d36a9516d6fd2a046da0c5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;Enumerable#find&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#find(if_none=nil,&amp;amp;block)-instance-method&quot;&gt;Enumerable#find&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="bea3f5f311971846130650e9ccfcc0e3ca3a445b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt;Enumerable#includes?(obj)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#includes?(obj)-instance-method&quot;&gt;Enumerable#includes?(obj)&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="0527e2d0a7d8094e7407b97d8c711c5e1e891048" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="47e68f4747d32f5b3096bbd72ac88437b802d111" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt; for a &lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; 대한 &lt;code&gt;&lt;a href=&quot;../../enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt; 과 유사 .</target>
        </trans-unit>
        <trans-unit id="89be2ca41913712d27b64617fc9103eee84f4ea7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt; for a &lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt;. Only works on ranges of &lt;code&gt;&lt;a href=&quot;numberliteral&quot;&gt;NumberLiteral&lt;/a&gt;&lt;/code&gt;s considered as integers.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; 에 대한 &lt;code&gt;&lt;a href=&quot;../../enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt; 과 유사합니다 . 정수로 간주되는 &lt;code&gt;&lt;a href=&quot;numberliteral&quot;&gt;NumberLiteral&lt;/a&gt;&lt;/code&gt; 범위에서만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="bbd3b45c94e164b4b9b0bf06fd86c520d65c1883" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="526c6d9d793f90f03ddfdadf0573aa6d291d9035" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#reduce(&amp;amp;)-instance-method&quot;&gt;Enumerable#reduce&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#reduce(&amp;amp;)-instance-method&quot;&gt;Enumerable#reduce&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="6e8b6318cddb7418987e5ccbbfd45c55023ad3c5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#reduce(&amp;amp;block)-instance-method&quot;&gt;Enumerable#reduce&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#reduce(&amp;amp;block)-instance-method&quot;&gt;Enumerable#reduce&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="3c0e6fb460d4a87cac638bd403cd68f8fbf89146" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#reject(&amp;amp;block:T-%3E)-instance-method&quot;&gt;Enumerable#reject&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#reject(&amp;amp;block:T-%3E)-instance-method&quot;&gt;Enumerable#reject&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="c57c50c6b7bf0511d03fb82b9964f0b3fb3fb297" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#select(&amp;amp;block:T-%3E)-instance-method&quot;&gt;Enumerable#select&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable#select(&amp;amp;block:T-%3E)-instance-method&quot;&gt;Enumerable#select&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="d1255a3b7fe6e4a029dd5a4cd5b8525fbfe645f9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt; for a &lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; 에 대해 &lt;code&gt;&lt;a href=&quot;../../enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="3def33fafa42caf39dd7fecc6b2da8184d3e2c0d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt; for a &lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt;. Only works on ranges of &lt;code&gt;&lt;a href=&quot;numberliteral&quot;&gt;NumberLiteral&lt;/a&gt;&lt;/code&gt;s considered as integers.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range&quot;&gt;Range&lt;/a&gt;&lt;/code&gt; 에 대해 &lt;code&gt;&lt;a href=&quot;../../enumerable#to_a-instance-method&quot;&gt;Enumerable#to_a&lt;/a&gt;&lt;/code&gt; 와 유사합니다 . 정수로 간주되는 &lt;code&gt;&lt;a href=&quot;numberliteral&quot;&gt;NumberLiteral&lt;/a&gt;&lt;/code&gt; 범위에서만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="00e9a65442e177061cf24c4a372635bc357bafde" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#%5B%5D(key)-instance-method&quot;&gt;Hash#[]&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#%5B%5D(key)-instance-method&quot;&gt;Hash#[]&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="08b1d89450e0f4c5aa9e040d53043adda5cd3961" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#%5B%5D=(key:K,value:V)-instance-method&quot;&gt;Hash#[]=&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#%5B%5D=(key:K,value:V)-instance-method&quot;&gt;Hash#[]=&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="5779154810aa53d75bc24af53b5eb7e0cfe511c7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#clear-instance-method&quot;&gt;Hash#clear&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#clear-instance-method&quot;&gt;Hash#clear&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="1ac37143125ebe62f5021f55250ff542d357f15d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#each-instance-method&quot;&gt;Hash#each&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#each-instance-method&quot;&gt;Hash#each&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="60eb7a9440a9a17878d7df7e4017b70031c801fa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#empty?-instance-method&quot;&gt;Hash#empty?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#empty?-instance-method&quot;&gt;Hash#empty?&lt;/a&gt;&lt;/code&gt; 와 비슷한 ?</target>
        </trans-unit>
        <trans-unit id="20b2d6d6973463dc04e270df55e139912e74cacb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#keys:Array(K)-instance-method&quot;&gt;Hash#keys&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#keys:Array(K)-instance-method&quot;&gt;Hash#keys&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="4893c64cc87795a88b85ccb579c5f2e8f3f98069" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#size:Int32-instance-method&quot;&gt;Hash#size&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#size:Int32-instance-method&quot;&gt;Hash#size&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="14cc53f5321446d76dc84da39e23fa48f7dfef54" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#to_a:Array(Tuple(K,V))-instance-method&quot;&gt;Hash#to_a&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#to_a:Array(Tuple(K,V))-instance-method&quot;&gt;Hash#to_a&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="008c6c602c769bc1010b4587206b8cfc532e1bfd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../hash#values:Array(V)-instance-method&quot;&gt;Hash#values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../hash#values:Array(V)-instance-method&quot;&gt;Hash#values&lt;/a&gt;&lt;/code&gt; 유사</target>
        </trans-unit>
        <trans-unit id="8086ac662ac7b1877b0a62c6825b8446fda57471" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#%5B%5D(key:Symbol%7CString)-instance-method&quot;&gt;NamedTuple#[]&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; if &lt;em&gt;key&lt;/em&gt; is undefined.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#%5B%5D(key:Symbol%7CString)-instance-method&quot;&gt;NamedTuple#[]&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 &lt;em&gt;키&lt;/em&gt; 가 정의되지 않은 경우 &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01a87cbe2777b605fd365daad683d1c780b0a114" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#each(&amp;amp;):Nil-instance-method&quot;&gt;NamedTuple#each&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#each(&amp;amp;):Nil-instance-method&quot;&gt;NamedTuple#each&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="07623a8fcb5b1803e87da711b433c5b7ae9ddb9b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;NamedTuple#each_with_index&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#each_with_index(offset=0,&amp;amp;)-instance-method&quot;&gt;NamedTuple#each_with_index&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="2a66b8b95a102fbaab33bffb9dca3df26e4f9e8b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#empty?-instance-method&quot;&gt;NamedTuple#empty?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#empty?-instance-method&quot;&gt;NamedTuple#empty?&lt;/a&gt;&lt;/code&gt; 와 비슷한 ?</target>
        </trans-unit>
        <trans-unit id="b87c1c6d409bb79031e42d04dd5bbca8441b8275" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#keys-instance-method&quot;&gt;NamedTuple#keys&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#keys-instance-method&quot;&gt;NamedTuple#keys&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="25a56be2c22ca497b3ad35e5bdece582d01965a5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#map(&amp;amp;)-instance-method&quot;&gt;NamedTuple#map&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#map(&amp;amp;)-instance-method&quot;&gt;NamedTuple#map&lt;/a&gt;&lt;/code&gt; 과 유사</target>
        </trans-unit>
        <trans-unit id="b2b0a4bed80a0288ce6ab5eb3cb4393b59fbff7d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#map(&amp;amp;block)-instance-method&quot;&gt;NamedTuple#map&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#map(&amp;amp;block)-instance-method&quot;&gt;NamedTuple#map&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="02d68fc0e6fbf60f44753bb7883dde31389eaea1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#size-instance-method&quot;&gt;NamedTuple#size&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#size-instance-method&quot;&gt;NamedTuple#size&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="f87b0c6e36662c097c652be925ad47582db2f346" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#to_a-instance-method&quot;&gt;NamedTuple#to_a&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#to_a-instance-method&quot;&gt;NamedTuple#to_a&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="9d2c5ac696f7e127240d5d0e6bbb07decc5e90b8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../namedtuple#values-instance-method&quot;&gt;NamedTuple#values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../namedtuple#values-instance-method&quot;&gt;NamedTuple#values&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="8e068a75997a4994e977abbb0b3bd76ff1178691" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../range#begin:B-instance-method&quot;&gt;Range#begin&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range#begin:B-instance-method&quot;&gt;Range#begin&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="d6593f2f3d931f8855d2071555b90367f7917343" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../range#each(&amp;amp;):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range#each(&amp;amp;):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="e65212eb4136bc0638ef46035f10f7aed19fbdbb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../range#end:E-instance-method&quot;&gt;Range#end&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range#end:E-instance-method&quot;&gt;Range#end&lt;/a&gt;&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="a987145cdb3d4e3f724e2db7afc891dd53b7f5d0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../range#excludes_end?-instance-method&quot;&gt;Range#excludes_end?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../range#excludes_end?-instance-method&quot;&gt;Range#excludes_end?&lt;/a&gt;&lt;/code&gt; 와 비슷한 ?</target>
        </trans-unit>
        <trans-unit id="9c6ecb701b95e4eacebd01d0741399a4601d0d7c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../regex#options:Options-instance-method&quot;&gt;Regex#options&lt;/a&gt;&lt;/code&gt;, but returns an array of symbols such as &lt;code&gt;[:i, :m, :x]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../regex#options:Options-instance-method&quot;&gt;Regex#options&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 &lt;code&gt;[:i, :m, :x]&lt;/code&gt; 와 같은 기호 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="be103cbe984cbd288d87f8e25a736b528fe13d41" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../regex#source:String-instance-method&quot;&gt;Regex#source&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../regex#source:String-instance-method&quot;&gt;Regex#source&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="d32f77dba47a328c8ffce4f121b307e8a134a09e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#%5B%5D(regex:Regex)-instance-method&quot;&gt;String#[]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#%5B%5D(regex:Regex)-instance-method&quot;&gt;String#[]&lt;/a&gt;&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="4b335397761b47897e07b60d85744f1027da3fa4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#%5B%5D(start:Int,count:Int)-instance-method&quot;&gt;String#[]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#%5B%5D(start:Int,count:Int)-instance-method&quot;&gt;String#[]&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="072dc96fa0ebc83306fb5641c708474f7cc90890" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#+(other:self)-instance-method&quot;&gt;String#+&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#+(other:self)-instance-method&quot;&gt;String#+&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="4e9e2e055f7d34e78003b965057f47f4eaa8c207" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#=~(other)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#=~(other)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="a1e0ac848a4d1d0e70a1ab492d51f34d7ee20299" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#=~(regex:Regex)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#=~(regex:Regex)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="64580dcc9244528bbf28f1069e27e74e2739baee" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#camelcase(io:IO,options:Unicode::CaseOptions=Unicode::CaseOptions::None,*,lower:Bool=false):Nil-instance-method&quot;&gt;String#camelcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#camelcase(io:IO,options:Unicode::CaseOptions=Unicode::CaseOptions::None,*,lower:Bool=false):Nil-instance-method&quot;&gt;String#camelcase&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="8e9eeff73277c03f519eef14051935c90dbd7905" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#camelcase(options:Unicode::CaseOptions=Unicode::CaseOptions::None,*,lower:Bool=false)-instance-method&quot;&gt;String#camelcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#camelcase(options:Unicode::CaseOptions=Unicode::CaseOptions::None,*,lower:Bool=false)-instance-method&quot;&gt;String#camelcase&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="7950dbcc7a9758709fe4656c8261ceb4225312ef" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#capitalize(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#capitalize&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#capitalize(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#capitalize&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="99b7b4b673873a68c819962204a36df841836875" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#capitalize(options=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#capitalize&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#capitalize(options=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#capitalize&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="c1723c5121bee34bd94c7aff1d04480a0ded0179" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#chars-instance-method&quot;&gt;String#chars&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#chars-instance-method&quot;&gt;String#chars&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="91811c835ba08a7bf35892986b537dbfb9ec4e1f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#chomp-instance-method&quot;&gt;String#chomp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#chomp-instance-method&quot;&gt;String#chomp&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="6983a5647e867d99f2cd99bb0a27e3077d28353c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#count(&amp;amp;)-instance-method&quot;&gt;String#count&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#count(&amp;amp;)-instance-method&quot;&gt;String#count&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="61da4865f90aa9618ef6961c1b826ab69ed443e5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#count(&amp;amp;block)-instance-method&quot;&gt;String#count&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#count(&amp;amp;block)-instance-method&quot;&gt;String#count&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="a95930ce507580360a3183a5b16f3ebb3e4a403a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#downcase(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#downcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bd1bb91e888e3662275b32f3e34aa9cb5ecf0f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#downcase(options:Unicode::CaseOptions=:none):String-instance-method&quot;&gt;String#downcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#downcase(options:Unicode::CaseOptions=:none):String-instance-method&quot;&gt;String#downcase&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="c9e034af42555d1a365ed597e6f71c99a9316f9c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#downcase(options=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#downcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#downcase(options=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#downcase&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="3ae3313171c82e9927ac624be04cecfdff530625" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#empty?-instance-method&quot;&gt;String#empty?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#empty?-instance-method&quot;&gt;String#empty?&lt;/a&gt;&lt;/code&gt; 와 비슷한 ? .</target>
        </trans-unit>
        <trans-unit id="00de633634132e0f85be0d15f6cc14a1f45b6483" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#ends_with?(re:Regex)-instance-method&quot;&gt;String#ends_with?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 &lt;code&gt;&lt;a href=&quot;../../string#ends_with?(re:Regex)-instance-method&quot;&gt;String#ends_with?&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7394643d8ab57b72cad9602c2b20addb5f266949" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#ends_with?(str:String):Bool-instance-method&quot;&gt;String#ends_with?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 &lt;code&gt;&lt;a href=&quot;../../string#ends_with?(str:String):Bool-instance-method&quot;&gt;String#ends_with?&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a03fb7a96acae51e311606f5b228fea207027e8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#gsub(&amp;amp;block:Char-%3EUNDERSCORE)-instance-method&quot;&gt;String#gsub&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#gsub(&amp;amp;block:Char-%3EUNDERSCORE)-instance-method&quot;&gt;String#gsub&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="e6a483329bb1622c14a3ecde4d5b3454c4fcb852" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#gsub(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#gsub&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#gsub(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#gsub&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="3a9146e2179a89500d1adfcb402c0c816f986ab2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#includes?(search:Char%7CString)-instance-method&quot;&gt;String#includes?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#includes?(search:Char%7CString)-instance-method&quot;&gt;String#includes?&lt;/a&gt;&lt;/code&gt; 와 비슷 합니까? .</target>
        </trans-unit>
        <trans-unit id="926fe710854494ead8ded01abe5dde6cc26ad00c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#lines(chomp=true)-instance-method&quot;&gt;String#lines&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#lines(chomp=true)-instance-method&quot;&gt;String#lines&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="8c4474c7de983cf16afc9e57dcbf83438c701a51" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#size-instance-method&quot;&gt;String#size&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#size-instance-method&quot;&gt;String#size&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="68fceeb6d36a9133c7ca5c6246739c377bb5ffe2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#split(separator:Char,limit=nil,*,remove_empty=false)-instance-method&quot;&gt;String#split&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#split(separator:Char,limit=nil,*,remove_empty=false)-instance-method&quot;&gt;String#split&lt;/a&gt;&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="5b78bf42478253667799dc2e8aeb92cfbab2cf34" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#split(separator:Regex,limit=nil,*,remove_empty=false,&amp;amp;block:String-%3E_)-instance-method&quot;&gt;String#split&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#split(separator:Regex,limit=nil,*,remove_empty=false,&amp;amp;block:String-%3E_)-instance-method&quot;&gt;String#split&lt;/a&gt;&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="85e5973bbb222739d5e68591dd544d9c6095b039" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#starts_with?(char:Char):Bool-instance-method&quot;&gt;String#starts_with?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19188d7d2be9ad9c36bd6a15d34c8da580dd063c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#starts_with?(re:Regex)-instance-method&quot;&gt;String#starts_with?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#starts_with?(re:Regex)-instance-method&quot;&gt;String#starts_with?&lt;/a&gt;&lt;/code&gt; 와 비슷한 ? .</target>
        </trans-unit>
        <trans-unit id="6c6fbe0566c5013e36500b19e60ce55203b9f8c8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#starts_with?(str:String):Bool-instance-method&quot;&gt;String#starts_with?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#starts_with?(str:String):Bool-instance-method&quot;&gt;String#starts_with?&lt;/a&gt;&lt;/code&gt; 와 유사 합니까? .</target>
        </trans-unit>
        <trans-unit id="2768589cf08a257788bbd75f1bc349af32e83b25" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#strip(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;../../string#strip(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ac005a305d93133410e340c3428dd5f2a69af54" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#strip-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#strip-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="2b7576d84874b8d0ac12b8c401ae4127dfcfdbfa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#titleize(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#titleize&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fa89c771e98382f290bad59fe91066c4875945" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#titleize(options:Unicode::CaseOptions=:none):String-instance-method&quot;&gt;String#titleize&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;../../string#titleize(options:Unicode::CaseOptions=:none):String-instance-method&quot;&gt;String#titleize&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea093f6fa3f70cf5c2c755440b853c09c4ac9760" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#to_i(base:Int=10,whitespace:Bool=true,underscore:Bool=false,prefix:Bool=false,strict:Bool=true,leading_zero_is_octal:Bool=false)-instance-method&quot;&gt;String#to_i&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#to_i(base:Int=10,whitespace:Bool=true,underscore:Bool=false,prefix:Bool=false,strict:Bool=true,leading_zero_is_octal:Bool=false)-instance-method&quot;&gt;String#to_i&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="437f46895ad80e4dc28e34f9078e08b891de8ff5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#to_i(base:Int=10,whitespace:Bool=true,underscore:Bool=false,prefix:Bool=false,strict:Bool=true,leading_zero_is_octal:Bool=false,&amp;amp;)-instance-method&quot;&gt;String#to_i&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;../../string#to_i(base:Int=10,whitespace:Bool=true,underscore:Bool=false,prefix:Bool=false,strict:Bool=true,leading_zero_is_octal:Bool=false,&amp;amp;)-instance-method&quot;&gt;String#to_i&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a5f42d699bbe9ceb827d9b5f5213b786b300ea5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#tr(from:String,to:String)-instance-method&quot;&gt;String#tr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#tr(from:String,to:String)-instance-method&quot;&gt;String#tr&lt;/a&gt;&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="4232e4acd6fb26787f0bc8373314b9cf9057ef83" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#underscore(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;../../string#underscore(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ded7f5120792f84cd7ac8969c764f6a1694924f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#underscore(options:Unicode::CaseOptions=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#underscore(options:Unicode::CaseOptions=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#underscore&lt;/a&gt;&lt;/code&gt; 와 유사 합니다 .</target>
        </trans-unit>
        <trans-unit id="30acefb5c47752e0d0691c4a3ec22bf776aca8ef" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#upcase(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#upcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;../../string#upcase(io:IO,options:Unicode::CaseOptions=:none):Nil-instance-method&quot;&gt;String#upcase&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="918728ef086b38a586b5aa403a6d7ec62e61b194" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#upcase(options:Unicode::CaseOptions=:none):String-instance-method&quot;&gt;String#upcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0ec4294e8a920937babef026d7c0fea283cd6c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../../string#upcase(options=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#upcase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string#upcase(options=Unicode::CaseOptions::None)-instance-method&quot;&gt;String#upcase&lt;/a&gt;&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="38b9deab57f1e0b70794057a2927062d3983a924" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;, but optimized for building a single string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 단일 문자열 작성에 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2be0b9b367b163fb25b31aef8f1168813b8dabca" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;bigrational#to_s(base:Int=10):String-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt;, but usually appends more information about this object. See &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;bigrational#to_s(base:Int=10):String-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; , 그러나 보통이 개체에 대한 자세한 정보를 추가합니다. &lt;code&gt;&lt;a href=&quot;bigrational#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81441d00c050014c7b0fbb6190e06af3352baffc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;class#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt;, but usually appends more information about this object. See &lt;code&gt;&lt;a href=&quot;class#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;class#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; , 그러나 보통이 개체에 대한 자세한 정보를 추가합니다. &lt;code&gt;&lt;a href=&quot;class#inspect(io:IO):Nil-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d875103420bf16b5a8883a1962fff99a5734e286" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;enumerable#reduce(&amp;amp;)-instance-method&quot;&gt;#reduce&lt;/a&gt;&lt;/code&gt;, but instead of raising when the input is empty, return &lt;code&gt;nil&lt;/code&gt;</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;enumerable#reduce(&amp;amp;)-instance-method&quot;&gt;#reduce&lt;/a&gt;&lt;/code&gt; , but instead of raising when the input is empty, return &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61e7f9ccea83823fbe083a730d16d0a51d74bb69" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;enumerable#reduce(&amp;amp;block)-instance-method&quot;&gt;#reduce&lt;/a&gt;&lt;/code&gt;, but instead of raising when the input is empty, return &lt;code&gt;nil&lt;/code&gt;</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;enumerable#reduce(&amp;amp;block)-instance-method&quot;&gt;#reduce&lt;/a&gt;&lt;/code&gt; 입력이 비어있을 때, 대신에 양육의, 반환 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f63da03587124bdeccaf42be5e20aee8fbdf74b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;hash#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt;, but duplicates the values as well.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hash#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 값도 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="e9b933cfbaf082ff91b843f93d8ee5dd1f6044cc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;hash#merge(other:Hash(L,W))forallL,W-instance-method&quot;&gt;#merge&lt;/a&gt;&lt;/code&gt;, but the receiver is modified.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hash#merge(other:Hash(L,W))forallL,W-instance-method&quot;&gt;#merge&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 수신자가 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="c59115f6e9741e40a5cc53f47217f759a38a130e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;hash#merge(other:Hash(L,W),&amp;amp;block:K,V,W-%3EV%7CW)forallL,W-instance-method&quot;&gt;#merge&lt;/a&gt;&lt;/code&gt;, but the receiver is modified.</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;hash#merge(other:Hash(L,W),&amp;amp;block:K,V,W-%3EV%7CW)forallL,W-instance-method&quot;&gt;#merge&lt;/a&gt;&lt;/code&gt; , but the receiver is modified.</target>
        </trans-unit>
        <trans-unit id="850fd8377172a3119ff68d83e9daddbf788e39bf" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;hash#merge(other:Hash(L,W),&amp;amp;block:L,V,W-%3EV%7CW)forallL,W-instance-method&quot;&gt;#merge&lt;/a&gt;&lt;/code&gt;, but the receiver is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ec5118f286bdf828e761093958f0e2680441f7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;hashliteral#double_splat(trailing_string:StringLiteral=nil):MacroId-instance-method&quot;&gt;HashLiteral#double_splat&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hashliteral#double_splat(trailing_string:StringLiteral=nil):MacroId-instance-method&quot;&gt;HashLiteral#double_splat&lt;/a&gt;&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="49892031b2030d7d2937dc5badd3de8eba96c6c4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt;, but usually appends more information about this object. See &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;object#to_s(io:IO):Nil-instance-method&quot;&gt;#to_s(io)&lt;/a&gt;&lt;/code&gt; , 그러나 보통이 개체에 대한 자세한 정보를 추가합니다. &lt;code&gt;&lt;a href=&quot;object#inspect:String-instance-method&quot;&gt;#inspect&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d95ec1ecd5c27c214169e064c2e66bff87708e8f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; but doesn't raise if an alias exists but an instance of type T isn't associated with the current anchor.</source>
          <target state="translated">Similar to &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; but doesn't raise if an alias exists but an instance of type T isn't associated with the current anchor.</target>
        </trans-unit>
        <trans-unit id="b8b63540a0e68c0bd3c2cdef94dc3866f9c83637" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; but doesn't raise if an alias exists but an instance of type T isn't associated with the current anchor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 별칭이 있지만 T 유형의 인스턴스가 현재 앵커와 연결되어 있지 않으면 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b01b9c87ecb8435324575db86ce09e81c6ebac3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Array#each&lt;/code&gt;</source>
          <target state="translated">Similar to &lt;code&gt;Array#each&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f499d3933b226efec71b68b3a4472bac12fd478" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Array#empty?&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array#empty?&lt;/code&gt; 와 비슷한 ?</target>
        </trans-unit>
        <trans-unit id="e50522931f21853cb402c2241fac2bb73b78500b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Enumerable#join&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Enumerable#join&lt;/code&gt; 와 비슷한</target>
        </trans-unit>
        <trans-unit id="a2fe778aabeb45729ca8f20d70b091bc56f01c3a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Hash#map&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Hash#map&lt;/code&gt; 와 유사</target>
        </trans-unit>
        <trans-unit id="7e6842e9756b6cfead4e38c004695282c1a89d9d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;String#&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String#&amp;gt;&lt;/code&gt; 유사</target>
        </trans-unit>
        <trans-unit id="3e81fdb8a2c107788417395c9a38a15520734509" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;String#&amp;lt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String#&amp;lt;&lt;/code&gt; 유사</target>
        </trans-unit>
        <trans-unit id="21fe54d8761918f3b97ed9b613d0362745ff807d" translate="yes" xml:space="preserve">
          <source>Similar to an &lt;code&gt;if&lt;/code&gt;, if a &lt;code&gt;while&lt;/code&gt;'s condition is a variable, the variable is guaranteed to not be &lt;code&gt;nil&lt;/code&gt; inside the body. If the condition is an &lt;code&gt;var.is_a?(Type)&lt;/code&gt; test, &lt;code&gt;var&lt;/code&gt; is guaranteed to be of type &lt;code&gt;Type&lt;/code&gt; inside the body. And if the condition is a &lt;code&gt;var.responds_to?(:method)&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt; is guaranteed to be of a type that responds to that method.</source>
          <target state="translated">유사 &lt;code&gt;if&lt;/code&gt; 경우 &lt;code&gt;while&lt;/code&gt; 의 상태 변수이며, 변수는 보장은 없을 &lt;code&gt;nil&lt;/code&gt; 체내. 조건이 &lt;code&gt;var.is_a?(Type)&lt;/code&gt; 테스트 인 경우 &lt;code&gt;var&lt;/code&gt; 은 본문 내부에서 &lt;code&gt;Type&lt;/code&gt; 형식 이어야 합니다. 조건이 &lt;code&gt;var.responds_to?(:method)&lt;/code&gt; 경우 &lt;code&gt;var&lt;/code&gt; 은 해당 메소드에 응답하는 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c6c50a987dff3db1301149287488cc552fc2daba" translate="yes" xml:space="preserve">
          <source>Similar to percent string literals, valid delimiters for &lt;code&gt;%x&lt;/code&gt; are parentheses &lt;code&gt;()&lt;/code&gt;, square brackets &lt;code&gt;[]&lt;/code&gt;, curly braces &lt;code&gt;{}&lt;/code&gt;, angles &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and pipes &lt;code&gt;||&lt;/code&gt;. Except for the pipes, all delimiters can be nested; meaning a start delimiter inside the string escapes the next end delimiter.</source>
          <target state="translated">퍼센트 문자열 리터럴과 유사하게 &lt;code&gt;%x&lt;/code&gt; 유효한 구분 기호 는 괄호 &lt;code&gt;()&lt;/code&gt; , 대괄호 &lt;code&gt;[]&lt;/code&gt; , 중괄호 &lt;code&gt;{}&lt;/code&gt; , 각도 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 및 파이프 &lt;code&gt;||&lt;/code&gt; . 파이프를 제외하고 모든 구분 기호를 중첩 할 수 있습니다. 문자열 내부의 시작 구분 기호는 다음 끝 구분 기호를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="3b69e2a56a88b1f9dfcf42c4e089ae42140a79aa" translate="yes" xml:space="preserve">
          <source>Similar to regular code, &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Nop.html&quot;&gt;&lt;code&gt;Nop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NilLiteral.html&quot;&gt;&lt;code&gt;NilLiteral&lt;/code&gt;&lt;/a&gt; and a false &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/BoolLiteral.html&quot;&gt;&lt;code&gt;BoolLiteral&lt;/code&gt;&lt;/a&gt; are considered &lt;em&gt;falsey&lt;/em&gt;, while everything else is considered &lt;em&gt;truthy&lt;/em&gt;.</source>
          <target state="translated">일반 코드와 유사하게 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Nop.html&quot;&gt; &lt;code&gt;Nop&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NilLiteral.html&quot;&gt; &lt;code&gt;NilLiteral&lt;/code&gt; &lt;/a&gt; 및 false &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/BoolLiteral.html&quot;&gt; &lt;code&gt;BoolLiteral&lt;/code&gt; &lt;/a&gt; 은 거짓 으로 간주 &lt;em&gt;되며&lt;/em&gt; 다른 모든 것은 &lt;em&gt;진실로&lt;/em&gt; 간주 &lt;em&gt;됩니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="aa7189acbb145765fddd5d129c40efe70d128c22" translate="yes" xml:space="preserve">
          <source>Similar to the above cases, but creating an instance of an &lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">위의 경우와 비슷하지만 &lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 의 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a1caa0cec70f32cc2b4f9b1157b48ddb72d36eac" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;&lt;a href=&quot;time#parse(time:String,pattern:String,location:Location):Time-class-method&quot;&gt;Time.parse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time#parse!(time:String,pattern:String):Time-class-method&quot;&gt;Time.parse!&lt;/a&gt;&lt;/code&gt; are used to construct a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instance from date-time information in a string, according to a specified pattern:</source>
          <target state="translated">마찬가지로 &lt;code&gt;&lt;a href=&quot;time#parse(time:String,pattern:String,location:Location):Time-class-method&quot;&gt;Time.parse&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;time#parse!(time:String,pattern:String):Time-class-method&quot;&gt;Time.parse!&lt;/a&gt;&lt;/code&gt; 지정된 패턴에 따라 문자열의 날짜-시간 정보로부터 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 인스턴스 를 구성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2357e62972152ff72a1f4a3a2bab35cb3a52c1c8" translate="yes" xml:space="preserve">
          <source>Simple example using &lt;code&gt;latest&lt;/code&gt;</source>
          <target state="translated">Simple example using &lt;code&gt;latest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be333fd829392c1b8c6eec3ca1109cb9d6802b10" translate="yes" xml:space="preserve">
          <source>Simply put, a Shard is a package of Crystal code, made to be shared-with and used-by other projects.</source>
          <target state="translated">간단히 말해, Shard는 다른 프로젝트와 공유하고 사용하도록 만들어진 Crystal 코드 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="2f80e28969746007574b708aa4dac0431b0b1610" translate="yes" xml:space="preserve">
          <source>Simply, you can just add the following file to the root of the repo and name it &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;</source>
          <target state="translated">Simply, you can just add the following file to the root of the repo and name it &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e06d8a8a70f786ff17b0a894f2e793cdc12edd1f" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;typeof&lt;/code&gt; doesn't actually evaluate the expression, it can be used on methods at compile time, such as in this example, which recursively forms a union type out of nested generic types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb278677bd86ebe3c6a0369ef92d2c6a83d8df67" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;typeof&lt;/code&gt; doesn't actually evaluate the expression, it can be used on methods at compile time, such as in this example, which recursively forms a union type out of nested type parameters:</source>
          <target state="translated">이후 &lt;code&gt;typeof&lt;/code&gt; 실제로 식을 평가하지 않습니다, 이러한 반복적으로 중첩 된 형식 매개 변수 중 노동 조합의 유형을 형성하고이 예에서와 같이 컴파일 타임에 방법에 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5a8705a3ab04b2da4c88809c3a0ffd896b8a6fc1" translate="yes" xml:space="preserve">
          <source>Since UTC does not have any time zone transitions, each date-time is unambiguously resolved.</source>
          <target state="translated">UTC에는 시간대 전환이 없으므로 각 날짜-시간이 명확하게 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="cb58198b2a6cb9c9f2913f75d62d41a18f00e743" translate="yes" xml:space="preserve">
          <source>Since databases are separate services from the application using them, the connections might go down, the services might be restarted, and other sort of things the program might not want to care about.</source>
          <target state="translated">데이터베이스는 데이터베이스를 사용하는 응용 프로그램과 별도의 서비스이므로 연결이 끊어지고 서비스가 다시 시작될 수 있으며 프로그램이 원하지 않는 다른 종류의 작업이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab1b2774c4e94698264a9939c53a861c4b6f0f1c" translate="yes" xml:space="preserve">
          <source>Since the return type of &lt;code&gt;TupleLiteral&lt;/code&gt; is iterable, we can rewrite the previous example in a better way. By extension, all of the &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TupleLiteral.html&quot;&gt;methods&lt;/a&gt; on &lt;code&gt;TupleLiteral&lt;/code&gt; are available for use as well.</source>
          <target state="translated">&lt;code&gt;TupleLiteral&lt;/code&gt; 의 반환 유형 은 반복 가능하므로 이전 예제를 더 나은 방식으로 다시 작성할 수 있습니다. 확장함으로써, 모든 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TupleLiteral.html&quot;&gt;방법&lt;/a&gt; 에 &lt;code&gt;TupleLiteral&lt;/code&gt; 는 물론 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96d9f6d3b5a7fe5c3947acc561a02469fb41b2a8" translate="yes" xml:space="preserve">
          <source>Since the shards will be installed in &lt;code&gt;./lib/&lt;/code&gt; folder, it will be preserved for the second docker run command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540f739adb8b0a7ffa05b896c629e8cc6058f169" translate="yes" xml:space="preserve">
          <source>Since the space after the end of the block may be in use, realloc may find it necessary to copy the block to a new address where more free space is available. The value of realloc is the new address of the block. If the block needs to be moved, realloc copies the old contents.</source>
          <target state="translated">블록 끝 이후의 공간이 사용 중일 수 있으므로 realloc은 사용 가능한 공간이 더 많은 새 주소로 블록을 복사해야 할 수도 있습니다. realloc의 값은 블록의 새로운 주소입니다. 블록을 이동해야하는 경우 realloc은 이전 내용을 복사합니다.</target>
        </trans-unit>
        <trans-unit id="14a78bdc75ae63c9766726527ef6ded1e48932e1" translate="yes" xml:space="preserve">
          <source>Since the system's settings may change during a program's runtime, the result may not be identical between different invocations.</source>
          <target state="translated">프로그램 실행 중에 시스템 설정이 변경 될 수 있으므로 결과는 다른 호출간에 동일하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebfa7b8d6449795344c6e679fcd1555e354fa823" translate="yes" xml:space="preserve">
          <source>Since this method returns a &lt;code&gt;NamedTupleLiteral&lt;/code&gt;, all of the &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NamedTupleLiteral.html&quot;&gt;methods&lt;/a&gt; on that type are available for use. Especially &lt;code&gt;#double_splat&lt;/code&gt; which makes it easy to pass annotation arguments to methods.</source>
          <target state="translated">이 메소드는 &lt;code&gt;NamedTupleLiteral&lt;/code&gt; 을 리턴하므로 해당 유형 의 모든 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NamedTupleLiteral.html&quot;&gt;메소드&lt;/a&gt; 를 사용할 수 있습니다. 특히 &lt;code&gt;#double_splat&lt;/code&gt; 을 사용하면 주석 인수를 메소드에 쉽게 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d93ad17ebc1a979470655110ce50c32af65a13da" translate="yes" xml:space="preserve">
          <source>Size of the file, in bytes.</source>
          <target state="translated">파일 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="bc16a82386ea512398447c10b3291f7e00ac80d6" translate="yes" xml:space="preserve">
          <source>Sized#close</source>
          <target state="translated">Sized#close</target>
        </trans-unit>
        <trans-unit id="b8596ee3082e753689709a901ad64c9bd757d52a" translate="yes" xml:space="preserve">
          <source>Sized#closed?</source>
          <target state="translated">Sized#closed?</target>
        </trans-unit>
        <trans-unit id="4f66c816f2127419db86cbeb71a4a7455583412b" translate="yes" xml:space="preserve">
          <source>Sized#peek</source>
          <target state="translated">Sized#peek</target>
        </trans-unit>
        <trans-unit id="32915f4d0fc6187c2e2c218e949a3ce939eaab2c" translate="yes" xml:space="preserve">
          <source>Sized#read</source>
          <target state="translated">Sized#read</target>
        </trans-unit>
        <trans-unit id="ef187b11fb4cb7f2e222c35773e3a63eed15367c" translate="yes" xml:space="preserve">
          <source>Sized#read_byte</source>
          <target state="translated">Sized#read_byte</target>
        </trans-unit>
        <trans-unit id="a1199e34df1fae3ef2a1e65a639f89bec96412c9" translate="yes" xml:space="preserve">
          <source>Sized#read_remaining</source>
          <target state="translated">Sized#read_remaining</target>
        </trans-unit>
        <trans-unit id="d4bae2740681eadb5fc0fb65d10882d1228f6119" translate="yes" xml:space="preserve">
          <source>Sized#skip</source>
          <target state="translated">Sized#skip</target>
        </trans-unit>
        <trans-unit id="ffeff8c8eac40949c733f5baaa086b5919f218d3" translate="yes" xml:space="preserve">
          <source>Sized#sync_close=</source>
          <target state="translated">Sized#sync_close=</target>
        </trans-unit>
        <trans-unit id="1689866dda9f8e20e70ec9cc72fdaebd1f96c908" translate="yes" xml:space="preserve">
          <source>Sized#sync_close?</source>
          <target state="translated">Sized#sync_close?</target>
        </trans-unit>
        <trans-unit id="958fd99a6e6df69e39b715d30feb76c2c469d918" translate="yes" xml:space="preserve">
          <source>Sized#write</source>
          <target state="translated">Sized#write</target>
        </trans-unit>
        <trans-unit id="788640f78d612ba2918988d8f04594a48a7b052f" translate="yes" xml:space="preserve">
          <source>Sized.new</source>
          <target state="translated">Sized.new</target>
        </trans-unit>
        <trans-unit id="97bd650dc5463c70b899767ade6ddf9c455489a8" translate="yes" xml:space="preserve">
          <source>Skips &lt;code&gt;reader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reader&lt;/code&gt; 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="a7356633f4e06a2247606d34e479f3988f4cd1e4" translate="yes" xml:space="preserve">
          <source>Skips elements up to, but not including, the first element for which the block returns &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; and returns an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; containing the remaining elements.</source>
          <target state="translated">블록이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환하는 첫 번째 요소까지 요소를 건너 뛰고 나머지 요소를 포함 하는 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a1cc8b2c7a9629812dda2ce37828e1d7c6fca30c" translate="yes" xml:space="preserve">
          <source>Skips the next value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6307338cb2f952eaa2425e094c9cc8626dbdbdf" translate="yes" xml:space="preserve">
          <source>Skips the rest of the file from which it is executed.</source>
          <target state="translated">파일이 실행되는 나머지 파일을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="dfdbb8cf6e61de4be9f055efabab944aa5196db3" translate="yes" xml:space="preserve">
          <source>Skips the rest of the file from which it is executed. Typical usage is to skip files that have platform specific code, without having to surround the most relevant code in &lt;code&gt;{% if flag?(...) %} ... {% end %}&lt;/code&gt; macro blocks.</source>
          <target state="translated">파일이 실행되는 나머지 파일을 건너 뜁니다. 일반적인 사용법은 &lt;code&gt;{% if flag?(...) %} ... {% end %}&lt;/code&gt; 매크로 블록 에서 가장 관련성이 높은 코드를 둘러싸 지 않고 플랫폼 별 코드가있는 파일을 건너 뛰는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="0c8525a31f225d6db84222cdc68f43cb8c6c18bf" translate="yes" xml:space="preserve">
          <source>Slice</source>
          <target state="translated">Slice</target>
        </trans-unit>
        <trans-unit id="5e2d9ec0611f3b938fd0c2785c91bcd9d3f35acd" translate="yes" xml:space="preserve">
          <source>Slice []</source>
          <target state="translated">슬라이스 []</target>
        </trans-unit>
        <trans-unit id="794b3113bf1f005e442229a7e2b19d162c96896f" translate="yes" xml:space="preserve">
          <source>Slice#+</source>
          <target state="translated">Slice#+</target>
        </trans-unit>
        <trans-unit id="4c4b0a37f0bfc9fa423799563c6eefa678b7343f" translate="yes" xml:space="preserve">
          <source>Slice#==</source>
          <target state="translated">Slice#==</target>
        </trans-unit>
        <trans-unit id="2345148686a78b61ddb8ab0bebc1c5f865b8a697" translate="yes" xml:space="preserve">
          <source>Slice#[]</source>
          <target state="translated">Slice#[]</target>
        </trans-unit>
        <trans-unit id="58e8a977d49676cdada98bb6cabb5f09ff7852c3" translate="yes" xml:space="preserve">
          <source>Slice#[]=</source>
          <target state="translated">Slice#[]=</target>
        </trans-unit>
        <trans-unit id="d82434f26c2d8b668ce5f90b110d10443d8b13b5" translate="yes" xml:space="preserve">
          <source>Slice#[]?</source>
          <target state="translated">Slice#[]?</target>
        </trans-unit>
        <trans-unit id="896d8cd6b8635faee4e020540fb25631ec9786d8" translate="yes" xml:space="preserve">
          <source>Slice#dup</source>
          <target state="translated">Slice#dup</target>
        </trans-unit>
        <trans-unit id="d882e1c37f7d622d961ca6912f6f8721bb5786c8" translate="yes" xml:space="preserve">
          <source>Slice#hash</source>
          <target state="translated">Slice#hash</target>
        </trans-unit>
        <trans-unit id="68f17d0b9a2ab6b38021789af30a7fca97b21774" translate="yes" xml:space="preserve">
          <source>Slice#map</source>
          <target state="translated">Slice#map</target>
        </trans-unit>
        <trans-unit id="7ee2d76d28e188cfc84b2413aaa22081fcc1a58d" translate="yes" xml:space="preserve">
          <source>Slice#map!</source>
          <target state="translated">Slice#map!</target>
        </trans-unit>
        <trans-unit id="7b64fbbf494f6ea36c3a34a9cea4e23baddc0fbc" translate="yes" xml:space="preserve">
          <source>Slice#size</source>
          <target state="translated">Slice#size</target>
        </trans-unit>
        <trans-unit id="3314f8700685d3fa41d64ca171a67c56d46c0e35" translate="yes" xml:space="preserve">
          <source>Slice#sort</source>
          <target state="translated">Slice#sort</target>
        </trans-unit>
        <trans-unit id="d03a7947dc3c781e0c18fc4a856d802aabfa2382" translate="yes" xml:space="preserve">
          <source>Slice#to_a</source>
          <target state="translated">Slice#to_a</target>
        </trans-unit>
        <trans-unit id="8b40efcec19b1fe1853f3f939a95403b08e32129" translate="yes" xml:space="preserve">
          <source>Slice#to_s</source>
          <target state="translated">Slice#to_s</target>
        </trans-unit>
        <trans-unit id="1b23d82c71f380ac4195967261a94b2dcf247d3c" translate="yes" xml:space="preserve">
          <source>Slice(T)</source>
          <target state="translated">Slice(T)</target>
        </trans-unit>
        <trans-unit id="42d913cb0d86e982086818897aca2016a20f9223" translate="yes" xml:space="preserve">
          <source>Slice.new</source>
          <target state="translated">Slice.new</target>
        </trans-unit>
        <trans-unit id="ba0979b2ae1682de7c3f926f2beebf0825897217" translate="yes" xml:space="preserve">
          <source>Smallest finite value</source>
          <target state="translated">가장 작은 유한 값</target>
        </trans-unit>
        <trans-unit id="7945a8e7902eeda5ba3d43bc315daad86df19fc9" translate="yes" xml:space="preserve">
          <source>Smallest representable positive value</source>
          <target state="translated">가장 작은 대표 양수 값</target>
        </trans-unit>
        <trans-unit id="aa41c47ffef278e1513c88f8bb2aa7f2b4938136" translate="yes" xml:space="preserve">
          <source>So let&amp;rsquo;s present an example with a &lt;strong&gt;rollback fired by an exception placed at the outer-transaction&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;외부 트랜잭션에 예외가 발생&lt;/strong&gt; 하여 &lt;strong&gt;롤백이 발생&lt;/strong&gt; 하는 예를 제시해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="eda5eaefe76ebd00bcb0268cd6958de97772024c" translate="yes" xml:space="preserve">
          <source>So now the question would be: &lt;strong&gt;do we need to implement an options parser?&lt;/strong&gt; No need to, Crystal got us covered with the class &lt;code&gt;OptionParser&lt;/code&gt;. Let&amp;rsquo;s build an application using this parser!</source>
          <target state="translated">So now the question would be: &lt;strong&gt;do we need to implement an options parser?&lt;/strong&gt; No need to, Crystal got us covered with the class &lt;code&gt;OptionParser&lt;/code&gt; . Let&amp;rsquo;s build an application using this parser!</target>
        </trans-unit>
        <trans-unit id="f0a998032e9512c1c24e985b4c3dfcc34b91c0cd" translate="yes" xml:space="preserve">
          <source>So, how does all this work? Well &amp;hellip; magic! No, it&amp;rsquo;s not really magic! Just Crystal making our life easy. When our application starts, the block passed to &lt;code&gt;OptionParser#parse&lt;/code&gt; gets executed. In that block we define all the options. After the block is executed, the parser will start consuming the arguments passed to the application, trying to match each one with the options defined by us. If an option matches then the block passed to &lt;code&gt;parser#on&lt;/code&gt; gets executed!</source>
          <target state="translated">So, how does all this work? Well &amp;hellip; magic! No, it&amp;rsquo;s not really magic! Just Crystal making our life easy. When our application starts, the block passed to &lt;code&gt;OptionParser#parse&lt;/code&gt; gets executed. In that block we define all the options. After the block is executed, the parser will start consuming the arguments passed to the application, trying to match each one with the options defined by us. If an option matches then the block passed to &lt;code&gt;parser#on&lt;/code&gt; gets executed!</target>
        </trans-unit>
        <trans-unit id="435544bc0a2c8401187f5b77d9fd6ba5b495750c" translate="yes" xml:space="preserve">
          <source>So, let's add this option handlers and merge all this CLI applications into one fabulous CLI application!</source>
          <target state="translated">So, let's add this option handlers and merge all this CLI applications into one fabulous CLI application!</target>
        </trans-unit>
        <trans-unit id="9cf67c4d0f30c7e45657d371c24afbb89ff183f2" translate="yes" xml:space="preserve">
          <source>So, you should never do this:</source>
          <target state="translated">따라서이 작업을 수행해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="93c6a1f183694628e37ced41591147bfc0da1908" translate="yes" xml:space="preserve">
          <source>Socket</source>
          <target state="translated">Socket</target>
        </trans-unit>
        <trans-unit id="2e98a4ed23c4c749f9fc8167cd3bde6181cd3ddb" translate="yes" xml:space="preserve">
          <source>Socket is already connected</source>
          <target state="translated">소켓이 이미 연결되었습니다</target>
        </trans-unit>
        <trans-unit id="ff89f748bc36cfa9b24752455509275ea67d6018" translate="yes" xml:space="preserve">
          <source>Socket is not connected</source>
          <target state="translated">소켓이 연결되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="ba3a2f86cdfbc4d51c8dd0104aa25dd69c9ae5eb" translate="yes" xml:space="preserve">
          <source>Socket operation on non-socket</source>
          <target state="translated">소켓이 아닌 소켓 작업</target>
        </trans-unit>
        <trans-unit id="1d0a063107fb2a5027e2f89664a6337ddcb70691" translate="yes" xml:space="preserve">
          <source>Socket type not supported</source>
          <target state="translated">소켓 유형이 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="c3e1ee7b630dbe5d98b08220910278110d9f8bde" translate="yes" xml:space="preserve">
          <source>Socket#bind</source>
          <target state="translated">Socket#bind</target>
        </trans-unit>
        <trans-unit id="fe287f75efcc13805f8a60dedfebaa5f89b97ac6" translate="yes" xml:space="preserve">
          <source>Socket#fd</source>
          <target state="translated">Socket#fd</target>
        </trans-unit>
        <trans-unit id="0a2335011f53ba3f504be5f38bd476c47f5894ea" translate="yes" xml:space="preserve">
          <source>Socket#send</source>
          <target state="translated">Socket#send</target>
        </trans-unit>
        <trans-unit id="7cccbcee2b1a1efa237e27e23f2d74b2c8dee806" translate="yes" xml:space="preserve">
          <source>Socket#tcp_keepalive_count</source>
          <target state="translated">Socket#tcp_keepalive_count</target>
        </trans-unit>
        <trans-unit id="107a77f210e65e0dfae91b53a66ef0dbcde50064" translate="yes" xml:space="preserve">
          <source>Socket#tcp_keepalive_count=</source>
          <target state="translated">Socket#tcp_keepalive_count=</target>
        </trans-unit>
        <trans-unit id="f8f9e279952bc6117aa626182bd47458454178c5" translate="yes" xml:space="preserve">
          <source>Socket#tcp_keepalive_idle</source>
          <target state="translated">Socket#tcp_keepalive_idle</target>
        </trans-unit>
        <trans-unit id="bd2711aec64ec501f5014a5d1dc9e1729ef0cc34" translate="yes" xml:space="preserve">
          <source>Socket#tcp_keepalive_idle=</source>
          <target state="translated">Socket#tcp_keepalive_idle=</target>
        </trans-unit>
        <trans-unit id="722f1e77388b9a8c9e743ea6477eb748a8940044" translate="yes" xml:space="preserve">
          <source>Socket#tcp_keepalive_interval</source>
          <target state="translated">Socket#tcp_keepalive_interval</target>
        </trans-unit>
        <trans-unit id="fd7fcca289faa659a1cf69abfc8a5d910a5414e1" translate="yes" xml:space="preserve">
          <source>Socket#tcp_keepalive_interval=</source>
          <target state="translated">Socket#tcp_keepalive_interval=</target>
        </trans-unit>
        <trans-unit id="3e5a167ee249d978ee2627adc70e568eccf58123" translate="yes" xml:space="preserve">
          <source>Socket#tcp_nodelay=</source>
          <target state="translated">Socket#tcp_nodelay=</target>
        </trans-unit>
        <trans-unit id="7f53fb6fb32ff57e386779aff79606e1b9afe60b" translate="yes" xml:space="preserve">
          <source>Socket#tcp_nodelay?</source>
          <target state="translated">Socket#tcp_nodelay?</target>
        </trans-unit>
        <trans-unit id="7552db18128df5da577b47f593fa2477b914f378" translate="yes" xml:space="preserve">
          <source>Socket#tty?</source>
          <target state="translated">Socket#tty?</target>
        </trans-unit>
        <trans-unit id="144bb29ae4cf5a94f7689a1b9243b458c5ea62b6" translate="yes" xml:space="preserve">
          <source>Socket#type</source>
          <target state="translated">Socket#type</target>
        </trans-unit>
        <trans-unit id="be10a64a2220e546828d461eada3cd171fcafd31" translate="yes" xml:space="preserve">
          <source>Socket.ip?</source>
          <target state="translated">Socket.ip?</target>
        </trans-unit>
        <trans-unit id="446a2a1bf92bd95c0153c6e6cb80fde8a0e2e208" translate="yes" xml:space="preserve">
          <source>Socket.new</source>
          <target state="translated">Socket.new</target>
        </trans-unit>
        <trans-unit id="17d08a71625308a0317ab617939e16199cf1542b" translate="yes" xml:space="preserve">
          <source>Socket.open</source>
          <target state="translated">Socket.open</target>
        </trans-unit>
        <trans-unit id="ed08a5784fce976418badb5b48dfb5ea9878cf87" translate="yes" xml:space="preserve">
          <source>Socket.tcp</source>
          <target state="translated">Socket.tcp</target>
        </trans-unit>
        <trans-unit id="9d012409023f3ebd1e639e2c6995ad8c470aa27e" translate="yes" xml:space="preserve">
          <source>Socket.udp</source>
          <target state="translated">Socket.udp</target>
        </trans-unit>
        <trans-unit id="71fd38c10b543316c3c2ce885733a4a4358b2d73" translate="yes" xml:space="preserve">
          <source>Socket.unix</source>
          <target state="translated">Socket.unix</target>
        </trans-unit>
        <trans-unit id="404e650a796eba00da12c3ebb936c2d39a4f4737" translate="yes" xml:space="preserve">
          <source>Socket::Address</source>
          <target state="translated">Socket::Address</target>
        </trans-unit>
        <trans-unit id="ce5559ea0323955b77c699fc06c0e3c72fbca210" translate="yes" xml:space="preserve">
          <source>Socket::Addrinfo</source>
          <target state="translated">Socket::Addrinfo</target>
        </trans-unit>
        <trans-unit id="b5769720675a4025afd6b4fc801c87d6ba1d716a" translate="yes" xml:space="preserve">
          <source>Socket::Addrinfo::Error</source>
          <target state="translated">Socket::Addrinfo::Error</target>
        </trans-unit>
        <trans-unit id="3c906cc1409e6351e42e54aaf1543ea7762b7220" translate="yes" xml:space="preserve">
          <source>Socket::Addrinfo::Error#error_code</source>
          <target state="translated">Socket::Addrinfo::Error#error_code</target>
        </trans-unit>
        <trans-unit id="c58ff9e40daa9920fd688fd712239556a4b214d9" translate="yes" xml:space="preserve">
          <source>Socket::Addrinfo::Error.new</source>
          <target state="translated">Socket::Addrinfo::Error.new</target>
        </trans-unit>
        <trans-unit id="1a9e1d79100e9d95f5a8fb667876a8042e1b5127" translate="yes" xml:space="preserve">
          <source>Socket::BindError</source>
          <target state="translated">Socket::BindError</target>
        </trans-unit>
        <trans-unit id="47b2190f8f61ceb6897204af0086ea46fd11235e" translate="yes" xml:space="preserve">
          <source>Socket::ConnectError</source>
          <target state="translated">Socket::ConnectError</target>
        </trans-unit>
        <trans-unit id="2a3fd28464b6ced1648cbb1174076e29deda7f7f" translate="yes" xml:space="preserve">
          <source>Socket::Error</source>
          <target state="translated">Socket::Error</target>
        </trans-unit>
        <trans-unit id="63824d963fbd037267a38ad4b7595f3dc6f35e6d" translate="yes" xml:space="preserve">
          <source>Socket::IPAddress</source>
          <target state="translated">Socket::IPAddress</target>
        </trans-unit>
        <trans-unit id="dae2ecdc2deac52fea4617cf4a3ec09d67706f34" translate="yes" xml:space="preserve">
          <source>Socket::Server</source>
          <target state="translated">Socket::Server</target>
        </trans-unit>
        <trans-unit id="f127f6c594656746c1e568a8eba1d73e8e938c54" translate="yes" xml:space="preserve">
          <source>Socket::Type</source>
          <target state="translated">Socket::Type</target>
        </trans-unit>
        <trans-unit id="e49bc4ee24ded4c8c84797f73ec904c3e8f32155" translate="yes" xml:space="preserve">
          <source>Socket::UNIXAddress</source>
          <target state="translated">Socket::UNIXAddress</target>
        </trans-unit>
        <trans-unit id="da7e8a5db4d27cd8e808680b636e1905c8ab337a" translate="yes" xml:space="preserve">
          <source>Software caused connection abort</source>
          <target state="translated">소프트웨어로 인해 연결이 중단되었습니다</target>
        </trans-unit>
        <trans-unit id="b908e579318abeee11ba4bff63712174fc132e66" translate="yes" xml:space="preserve">
          <source>Some Badges</source>
          <target state="translated">Some Badges</target>
        </trans-unit>
        <trans-unit id="f748734b99db97cfddc33682cc03c15c7dc4b1b8" translate="yes" xml:space="preserve">
          <source>Some compiler optimizations, like having to analyze a method just once, and incremental compilation, are nearly impossible to do.</source>
          <target state="translated">메소드를 한 번만 분석하고 증분 컴파일과 같은 일부 컴파일러 최적화는 거의 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="ac10287ed1e9d333a5271831382c80648ebc7539" translate="yes" xml:space="preserve">
          <source>Some expressions won't return to the current scope and therefore have no return type. This is expressed as the special return type &lt;code&gt;NoReturn&lt;/code&gt;.</source>
          <target state="translated">일부 표현식은 현재 범위로 돌아 가지 않으므로 리턴 유형이 없습니다. 이것은 특수 반환 유형 &lt;code&gt;NoReturn&lt;/code&gt; 으로 표현됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f3848e69f53b28ffcf6a47a63e91aae5450ae10" translate="yes" xml:space="preserve">
          <source>Some low-level primitives are provided. They are mostly useful for interfacing with C libraries and for low-level code.</source>
          <target state="translated">일부 저수준 프리미티브가 제공됩니다. 주로 C 라이브러리와의 인터페이스 및 저수준 코드에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="4d7cb9e67767dd9d0eae62862d640bca0a25b34f" translate="yes" xml:space="preserve">
          <source>Some observations from the above example: the &lt;code&gt;inner_tx&lt;/code&gt; works with the values updated although the &lt;code&gt;outer_tx&lt;/code&gt; is pending the commit. The connection used by &lt;code&gt;outer_tx&lt;/code&gt; and &lt;code&gt;inner_tx&lt;/code&gt; is &lt;strong&gt;the same connection&lt;/strong&gt;. This is because the &lt;code&gt;inner_tx&lt;/code&gt; inherits the connection from the &lt;code&gt;outer_tx&lt;/code&gt; when created.</source>
          <target state="translated">위의 예에서 일부 관찰하십시오 &lt;code&gt;inner_tx&lt;/code&gt; 있지만 업데이트 된 값으로 작품 &lt;code&gt;outer_tx&lt;/code&gt; 는 커밋 보류 중입니다. 사용하여 연결 &lt;code&gt;outer_tx&lt;/code&gt; 및 &lt;code&gt;inner_tx&lt;/code&gt; 가 있다 &lt;strong&gt;동일한 연결&lt;/strong&gt; . &lt;code&gt;inner_tx&lt;/code&gt; 는 생성시 &lt;code&gt;outer_tx&lt;/code&gt; 에서 연결을 상속 하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="8c24e5af87c5f3e91ece85643c33963cd8ea91d3" translate="yes" xml:space="preserve">
          <source>Some syntax sugar that contains the &lt;code&gt;=&lt;/code&gt; character is available:</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 문자 를 포함하는 일부 구문 설탕을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec2d5ec9ca0ac8eeffbbc7f5fed6a439112faea5" translate="yes" xml:space="preserve">
          <source>Some zones have a &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; or abbreviation (such as &lt;code&gt;PDT&lt;/code&gt;, &lt;code&gt;CEST&lt;/code&gt;). For an unnamed zone the formatted offset should be used as name.</source>
          <target state="translated">일부 영역에는 &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; 또는 약어가 있습니다 (예 : &lt;code&gt;PDT&lt;/code&gt; , &lt;code&gt;CEST&lt;/code&gt; ). 명명되지 않은 영역의 경우 형식화 된 오프셋을 이름으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1008746a517509e284cc40f6448f5123c7608d96" translate="yes" xml:space="preserve">
          <source>Sometimes the compiler can't infer the type of a block. This can happen in recursive calls that depend on each other. In those cases you can use &lt;code&gt;as&lt;/code&gt; to let it know the type:</source>
          <target state="translated">때때로 컴파일러는 블록 유형을 유추 할 수 없습니다. 이것은 서로 의존하는 재귀 호출에서 발생할 수 있습니다. 이 경우 &lt;code&gt;as&lt;/code&gt; 를 사용 하여 유형을 알릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98bbc074504ca3a4ef03a7ef0adb90d45b155309" translate="yes" xml:space="preserve">
          <source>Sometimes you need to work directly with strings built from combining string literals with other values. You shouldn't just concatenate these strings with &lt;code&gt;String#+(String)&lt;/code&gt; but rather use &lt;a href=&quot;../syntax_and_semantics/literals/string#interpolation&quot;&gt;string interpolation&lt;/a&gt; which allows to embed expressions into a string literal: &lt;code&gt;&quot;Hello, #{name}&quot;&lt;/code&gt; is better than &lt;code&gt;&quot;Hello, &quot; +  name.to_s&lt;/code&gt;.</source>
          <target state="translated">때로는 문자열 리터럴을 다른 값과 결합하여 빌드 된 문자열을 직접 사용해야합니다. 이러한 문자열을 &lt;code&gt;String#+(String)&lt;/code&gt; 로 연결 하지 말고 문자열 리터럴에 표현식을 포함 할 수있는 &lt;a href=&quot;../syntax_and_semantics/literals/string#interpolation&quot;&gt;문자열 보간&lt;/a&gt; 을 사용해야 합니다 . &lt;code&gt;&quot;Hello, #{name}&quot;&lt;/code&gt; 은 &lt;code&gt;&quot;Hello, &quot; + name.to_s&lt;/code&gt; 보다 낫습니다 .</target>
        </trans-unit>
        <trans-unit id="a1d1537b99ec9bd1d582b4ed6d4c9ec923769594" translate="yes" xml:space="preserve">
          <source>Sometimes, we may need the user to input a value. How do we &lt;em&gt;read&lt;/em&gt; that value? Easy, peasy! Let&amp;rsquo;s create a new application: the Fab Four will sing with us any phrase we want. When running the application, it will request a phrase to the user and the magic will happen!</source>
          <target state="translated">Sometimes, we may need the user to input a value. How do we &lt;em&gt;read&lt;/em&gt; that value? Easy, peasy! Let&amp;rsquo;s create a new application: the Fab Four will sing with us any phrase we want. When running the application, it will request a phrase to the user and the magic will happen!</target>
        </trans-unit>
        <trans-unit id="930af8143ad524c227eafbd7576bed432a018c9b" translate="yes" xml:space="preserve">
          <source>Sources can be nested. Continuing the last example, to declare a &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; constant &lt;code&gt;db.pool&lt;/code&gt; source you can do as follows:</source>
          <target state="translated">Sources can be nested. Continuing the last example, to declare a &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; constant &lt;code&gt;db.pool&lt;/code&gt; source you can do as follows:</target>
        </trans-unit>
        <trans-unit id="5177be3f80bb773896b9a7ffc7e47fedc5f43d80" translate="yes" xml:space="preserve">
          <source>Span#&amp;lt;=&amp;gt;</source>
          <target state="translated">Span#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="58a512619d7d910ecda17606ea4932dbde3549fc" translate="yes" xml:space="preserve">
          <source>Span#*</source>
          <target state="translated">Span#*</target>
        </trans-unit>
        <trans-unit id="c208fb9406c9b76fdb82baaaad1f3eae49bb2fe0" translate="yes" xml:space="preserve">
          <source>Span#+</source>
          <target state="translated">Span#+</target>
        </trans-unit>
        <trans-unit id="1ef6559d876573cc0a677bbc5360b7e682ab63bb" translate="yes" xml:space="preserve">
          <source>Span#-</source>
          <target state="translated">Span#-</target>
        </trans-unit>
        <trans-unit id="0fd12ba0e9b7dc94c6df5984f1a424a08adefa97" translate="yes" xml:space="preserve">
          <source>Span#/</source>
          <target state="translated">Span#/</target>
        </trans-unit>
        <trans-unit id="dd48e1ab8c52c448aa436b44c068c5018c125bf6" translate="yes" xml:space="preserve">
          <source>Span#abs</source>
          <target state="translated">Span#abs</target>
        </trans-unit>
        <trans-unit id="f7795324a605842bcf1bb05442eb36f85c42ef72" translate="yes" xml:space="preserve">
          <source>Span#ago</source>
          <target state="translated">Span#ago</target>
        </trans-unit>
        <trans-unit id="fd15c1d5e885d0f301d971842d82f37166626f56" translate="yes" xml:space="preserve">
          <source>Span#days</source>
          <target state="translated">Span#days</target>
        </trans-unit>
        <trans-unit id="fa99985a8cb10feadaf64216f67ad47b7070c5af" translate="yes" xml:space="preserve">
          <source>Span#duration</source>
          <target state="translated">Span#duration</target>
        </trans-unit>
        <trans-unit id="83b9f979ffbcdac27a1707783c3c4bc1057dea82" translate="yes" xml:space="preserve">
          <source>Span#from_now</source>
          <target state="translated">Span#from_now</target>
        </trans-unit>
        <trans-unit id="731d8ffb1412af4c5d9e203e58c8629ea04412dd" translate="yes" xml:space="preserve">
          <source>Span#hours</source>
          <target state="translated">Span#hours</target>
        </trans-unit>
        <trans-unit id="4f840165df483326b516026dad47dc0137fcb24f" translate="yes" xml:space="preserve">
          <source>Span#inspect</source>
          <target state="translated">Span#inspect</target>
        </trans-unit>
        <trans-unit id="3b4d719c9799ce64e7b1aaea434511c86e0f08d9" translate="yes" xml:space="preserve">
          <source>Span#microseconds</source>
          <target state="translated">Span#microseconds</target>
        </trans-unit>
        <trans-unit id="8295499776690e19e40d2d0719be5d0553e3a59a" translate="yes" xml:space="preserve">
          <source>Span#milliseconds</source>
          <target state="translated">Span#milliseconds</target>
        </trans-unit>
        <trans-unit id="f29584d220bb381fe52ab82b893afd593d962b17" translate="yes" xml:space="preserve">
          <source>Span#minutes</source>
          <target state="translated">Span#minutes</target>
        </trans-unit>
        <trans-unit id="a518d7307b3d3c2c3003d0afe61ec08a6d970993" translate="yes" xml:space="preserve">
          <source>Span#nanoseconds</source>
          <target state="translated">Span#nanoseconds</target>
        </trans-unit>
        <trans-unit id="6d3c3b13166fee8274f7cc5f059919ef6881a8ae" translate="yes" xml:space="preserve">
          <source>Span#seconds</source>
          <target state="translated">Span#seconds</target>
        </trans-unit>
        <trans-unit id="220a3f55f2bf15aa281354f3c01695ec7773ba3d" translate="yes" xml:space="preserve">
          <source>Span#to_f</source>
          <target state="translated">Span#to_f</target>
        </trans-unit>
        <trans-unit id="472251af592081cb3f10264463a80169ce98b7ea" translate="yes" xml:space="preserve">
          <source>Span#to_i</source>
          <target state="translated">Span#to_i</target>
        </trans-unit>
        <trans-unit id="f0bf0e48a25be1a3d30454a99fe4d0468891e804" translate="yes" xml:space="preserve">
          <source>Span#total_days</source>
          <target state="translated">Span#total_days</target>
        </trans-unit>
        <trans-unit id="212dd5e432795b9f50eb849c4b1aff2e1c471e29" translate="yes" xml:space="preserve">
          <source>Span#total_hours</source>
          <target state="translated">Span#total_hours</target>
        </trans-unit>
        <trans-unit id="beaf4d4038926c576696003456139b03d3b8c875" translate="yes" xml:space="preserve">
          <source>Span#total_microseconds</source>
          <target state="translated">Span#total_microseconds</target>
        </trans-unit>
        <trans-unit id="59e7747d2185948decfe155103b89370bcf5a693" translate="yes" xml:space="preserve">
          <source>Span#total_milliseconds</source>
          <target state="translated">Span#total_milliseconds</target>
        </trans-unit>
        <trans-unit id="37e23cd3a5cd6dfba0aca4903cea1f80d78cf4db" translate="yes" xml:space="preserve">
          <source>Span#total_minutes</source>
          <target state="translated">Span#total_minutes</target>
        </trans-unit>
        <trans-unit id="4dc9ce0dd1a1269769af33242237eda9f9668f00" translate="yes" xml:space="preserve">
          <source>Span#total_nanoseconds</source>
          <target state="translated">Span#total_nanoseconds</target>
        </trans-unit>
        <trans-unit id="4ed2ce66e44217b6f336675ed9a488294ccfeb49" translate="yes" xml:space="preserve">
          <source>Span#total_seconds</source>
          <target state="translated">Span#total_seconds</target>
        </trans-unit>
        <trans-unit id="c643e1b43a8b473132808735325afb792da68cad" translate="yes" xml:space="preserve">
          <source>Span#total_weeks</source>
          <target state="translated">Span#total_weeks</target>
        </trans-unit>
        <trans-unit id="e4a15f7e91c084cb3a058d69fc2058fda7cedcfa" translate="yes" xml:space="preserve">
          <source>Span#zero?</source>
          <target state="translated">Span#zero?</target>
        </trans-unit>
        <trans-unit id="e6bea2eeeb3c84ece182f61c0f48c4e578787c45" translate="yes" xml:space="preserve">
          <source>Span.new</source>
          <target state="translated">Span.new</target>
        </trans-unit>
        <trans-unit id="7477bdc9312c1dfda36f5aaeedce596ec944256b" translate="yes" xml:space="preserve">
          <source>Span.zero</source>
          <target state="translated">Span.zero</target>
        </trans-unit>
        <trans-unit id="b5ed9f5359a5eecbc9757e89079da65d18c51fe3" translate="yes" xml:space="preserve">
          <source>Spawning a call</source>
          <target state="translated">전화 스폰</target>
        </trans-unit>
        <trans-unit id="596ff4a2890dd8fd81118267c672c418c6f02a25" translate="yes" xml:space="preserve">
          <source>Spawning a fiber</source>
          <target state="translated">섬유를 산란</target>
        </trans-unit>
        <trans-unit id="f3c1711b0fc3b6565e43a02041ca64a8bbb388d8" translate="yes" xml:space="preserve">
          <source>Spawning a fiber and waiting for it to complete</source>
          <target state="translated">파이버 스폰 및 완료 대기</target>
        </trans-unit>
        <trans-unit id="0191e860f4f3f6e9b8173fe0517938975a275671" translate="yes" xml:space="preserve">
          <source>Spawns a &lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; to compute &lt;em&gt;&amp;amp;block&lt;/em&gt; in the background after &lt;em&gt;delay&lt;/em&gt; has elapsed.</source>
          <target state="translated">스폰 &lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; 계산할 &lt;em&gt;및 차단&lt;/em&gt; 후 배경 &lt;em&gt;지연&lt;/em&gt; 경과.</target>
        </trans-unit>
        <trans-unit id="a51f102004e090aa79f4398bb28c1a977427f1d6" translate="yes" xml:space="preserve">
          <source>Spawns a &lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; to compute &lt;em&gt;&amp;amp;block&lt;/em&gt; in the background after &lt;em&gt;delay&lt;/em&gt; has elapsed. Access to get is synchronized between fibers. &lt;em&gt;&amp;amp;block&lt;/em&gt; is only called once. May be canceled before &lt;em&gt;&amp;amp;block&lt;/em&gt; is called by calling &lt;code&gt;cancel&lt;/code&gt;.</source>
          <target state="translated">스폰 &lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; 계산할 &lt;em&gt;및 차단&lt;/em&gt; 후 배경 &lt;em&gt;지연&lt;/em&gt; 경과. 액세스 권한은 파이버간에 동기화됩니다. &lt;em&gt;&amp;amp; block&lt;/em&gt; 은 한 번만 호출됩니다. &lt;code&gt;cancel&lt;/code&gt; 을 호출하여 &lt;em&gt;&amp;amp; block&lt;/em&gt; 이 호출 되기 전에 취소 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ffc07a17dcca4bc7fb2b7f93f6874829207c8f8" translate="yes" xml:space="preserve">
          <source>Spawns a &lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; to compute &lt;em&gt;&amp;amp;block&lt;/em&gt; in the background.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; 를 스폰 하여 백그라운드에서 계산 &lt;em&gt;및 차단&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="aadbab3f8013aa08bde33cb97a127f828755dcb1" translate="yes" xml:space="preserve">
          <source>Spawns a &lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; to compute &lt;em&gt;&amp;amp;block&lt;/em&gt; in the background. Access to get is synchronized between fibers. &lt;em&gt;&amp;amp;block&lt;/em&gt; is only called once.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; 를 스폰 하여 백그라운드에서 계산 &lt;em&gt;및 차단&lt;/em&gt; 합니다. 액세스 권한은 파이버간에 동기화됩니다. &lt;em&gt;&amp;amp; block&lt;/em&gt; 은 한 번만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8c08678b3b8365b28d533b9ec9f7a285cb3b1a0d" translate="yes" xml:space="preserve">
          <source>Spawns a fiber by first creating a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt;, passing the &lt;em&gt;call&lt;/em&gt;'s expressions to it, and letting the &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; finally invoke the &lt;em&gt;call&lt;/em&gt;.</source>
          <target state="translated">스폰 먼저 만들어 섬유 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 통과, &lt;em&gt;전화&lt;/em&gt; 그것의 표현을하고시키는 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 인보 마지막으로 &lt;em&gt;호출&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="432cc712f45b41549b8b38d358a4dff977d20a01" translate="yes" xml:space="preserve">
          <source>Spawns a new fiber.</source>
          <target state="translated">새로운 섬유를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8d89530314527c8d7d9d9cb95ec6f5bdd921a1b9" translate="yes" xml:space="preserve">
          <source>Spec</source>
          <target state="translated">Spec</target>
        </trans-unit>
        <trans-unit id="019b0c4a3a6d0cda816cb4a2b2231c51bd9472c7" translate="yes" xml:space="preserve">
          <source>Spec helper</source>
          <target state="translated">사양 도우미</target>
        </trans-unit>
        <trans-unit id="9307dd913612ec3627584b5e957f31027a9c0d8b" translate="yes" xml:space="preserve">
          <source>Spec::Context</source>
          <target state="translated">Spec::Context</target>
        </trans-unit>
        <trans-unit id="3dc16695401ef7a8e7e8b137a99a84ff01ece348" translate="yes" xml:space="preserve">
          <source>Spec::Example</source>
          <target state="translated">Spec::Example</target>
        </trans-unit>
        <trans-unit id="da84757a7f63cf862867d1d7822ef8a503cd638a" translate="yes" xml:space="preserve">
          <source>Spec::Example::Procsy</source>
          <target state="translated">Spec::Example::Procsy</target>
        </trans-unit>
        <trans-unit id="fcb1e0d58067091fca85636b164d076dc2be751f" translate="yes" xml:space="preserve">
          <source>Spec::ExampleGroup</source>
          <target state="translated">Spec::ExampleGroup</target>
        </trans-unit>
        <trans-unit id="acd00fce1cc5fe2f7a471d43ddb88e79a458097e" translate="yes" xml:space="preserve">
          <source>Spec::ExampleGroup::Procsy</source>
          <target state="translated">Spec::ExampleGroup::Procsy</target>
        </trans-unit>
        <trans-unit id="025122c27cd9f308f15061d01c644c3af5f7d78f" translate="yes" xml:space="preserve">
          <source>Spec::Expectations</source>
          <target state="translated">Spec::Expectations</target>
        </trans-unit>
        <trans-unit id="caa7e1c8263beee6197ace190118e856f2c0e525" translate="yes" xml:space="preserve">
          <source>Spec::Item</source>
          <target state="translated">Spec::Item</target>
        </trans-unit>
        <trans-unit id="76f948dc743f4679e871e73dc8e9789e4df99ea8" translate="yes" xml:space="preserve">
          <source>Spec::Methods</source>
          <target state="translated">Spec::Methods</target>
        </trans-unit>
        <trans-unit id="98723bbe2160322de4cb1860acbb31e7c717b449" translate="yes" xml:space="preserve">
          <source>Spec::ObjectExtensions</source>
          <target state="translated">Spec::ObjectExtensions</target>
        </trans-unit>
        <trans-unit id="b48512a7eca2b9db316d181b2267792781bc746c" translate="yes" xml:space="preserve">
          <source>Spec::SplitFilter</source>
          <target state="translated">Spec::SplitFilter</target>
        </trans-unit>
        <trans-unit id="ffec5e015ffa767276e5d9db4f6908616ff1c507" translate="yes" xml:space="preserve">
          <source>Spec::VerboseFormatter::Item</source>
          <target state="translated">Spec::VerboseFormatter::Item</target>
        </trans-unit>
        <trans-unit id="d1b83a5fdc408854318520c94f5d9c5b86f1ca0b" translate="yes" xml:space="preserve">
          <source>Special macros exist that are invoked in some situations as hooks, at compile time:</source>
          <target state="translated">컴파일 타임에 일부 상황에서 후크로 호출되는 특수 매크로가 존재합니다.</target>
        </trans-unit>
        <trans-unit id="ca80245807346a140a8f133b93c7f3ff0e9e6b74" translate="yes" xml:space="preserve">
          <source>Specifies an ALPN protocol to negotiate with the remote endpoint.</source>
          <target state="translated">원격 엔드 포인트와 협상 할 ALPN 프로토콜을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="19ed6f2e14993241f698af68e88bb6e140094752" translate="yes" xml:space="preserve">
          <source>Specifies an ALPN protocol to negotiate with the remote endpoint. This is required to negotiate HTTP/2 with browsers, since browser vendors decided not to implement HTTP/2 over insecure connections.</source>
          <target state="translated">원격 엔드 포인트와 협상 할 ALPN 프로토콜을 지정합니다. 브라우저 공급 업체는 안전하지 않은 연결을 통해 HTTP / 2를 구현하지 않기로 결정했기 때문에 브라우저와 HTTP / 2를 협상해야합니다.</target>
        </trans-unit>
        <trans-unit id="b36dd081b500e5e687cca90c131f15875b2ce447" translate="yes" xml:space="preserve">
          <source>Specifies the format to convert a &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; to and from a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 로 변환 하거나 문자열 에서 변환 할 형식을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="3dd155258fe93e1dbf5a088d4592352eadad0f7e" translate="yes" xml:space="preserve">
          <source>Specify a list of TLS cipher suites to use or discard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632445bd800972ff5e1e42e44c0aead9847ab19a" translate="yes" xml:space="preserve">
          <source>Specify a list of TLS ciphers to use or discard.</source>
          <target state="translated">사용하거나 버릴 TLS 암호 목록을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="a1ae8e8edaa09da60765fa2cef929024b48f4ef5" translate="yes" xml:space="preserve">
          <source>Specify the path to the certificate chain file to use.</source>
          <target state="translated">사용할 인증서 체인 파일의 경로를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="40cbd19b7cba9e046a2215ad064d3d270ce3691d" translate="yes" xml:space="preserve">
          <source>Specify the path to the certificate chain file to use. In server mode this is presented to the client, in client mode this used as client certificate.</source>
          <target state="translated">사용할 인증서 체인 파일의 경로를 지정하십시오. 서버 모드에서는 클라이언트에게 제공되며 클라이언트 모드에서는 클라이언트 인증서로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="986661663142336d0b4a82b4b9725560e115006a" translate="yes" xml:space="preserve">
          <source>Specify the path to the private key to use.</source>
          <target state="translated">사용할 개인 키의 경로를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="2c2c607ef85419145dbb8221f966356b10f2bbff" translate="yes" xml:space="preserve">
          <source>Specify the path to the private key to use. The key must in PEM format. The key must correspond to the entity certificate set by &lt;code&gt;&lt;a href=&quot;context#certificate_chain=(file_path:String)-instance-method&quot;&gt;#certificate_chain=&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용할 개인 키의 경로를 지정하십시오. 키는 PEM 형식이어야합니다. 키는 &lt;code&gt;&lt;a href=&quot;context#certificate_chain=(file_path:String)-instance-method&quot;&gt;#certificate_chain=&lt;/a&gt;&lt;/code&gt; 의해 설정된 엔티티 인증서와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6f04ca51aba38c72b1b95f4a4d7279cc1fd8a5d6" translate="yes" xml:space="preserve">
          <source>Specs run in random order will display a seed value upon completion. This seed value can be used to rerun the specs in that same order by passing the seed value to &lt;code&gt;--order&lt;/code&gt;.</source>
          <target state="translated">Specs run in random order will display a seed value upon completion. This seed value can be used to rerun the specs in that same order by passing the seed value to &lt;code&gt;--order&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd880b45ec92d843c4ae0ba12f51a10650735fef" translate="yes" xml:space="preserve">
          <source>Specs then use the &lt;code&gt;should&lt;/code&gt; method to verify that the expected value is returned. See the example above for details.</source>
          <target state="translated">그런 다음 스펙은 &lt;code&gt;should&lt;/code&gt; 메소드를 사용하여 예상 값이 리턴되는지 확인합니다. 자세한 내용은 위의 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fd48918f0c22dc743263e1fd6bae5793bb7a8423" translate="yes" xml:space="preserve">
          <source>Specs, by default, run in the order defined, but can be run in a random order by passing &lt;code&gt;--order random&lt;/code&gt; to &lt;code&gt;crystal spec&lt;/code&gt;.</source>
          <target state="translated">Specs, by default, run in the order defined, but can be run in a random order by passing &lt;code&gt;--order random&lt;/code&gt; to &lt;code&gt;crystal spec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf3a17e7c114f2dc2821ab7705a805d0b98dc990" translate="yes" xml:space="preserve">
          <source>Splat operators can only be used for destructing tuples in method arguments. See &lt;a href=&quot;splats_and_tuples&quot;&gt;Splats and Tuples&lt;/a&gt; for details.</source>
          <target state="translated">Splat operators can only be used for destructing tuples in method arguments. See &lt;a href=&quot;splats_and_tuples&quot;&gt;Splats and Tuples&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="b762caa224d8e620cc1efcb18997f3f8f873ae0e" translate="yes" xml:space="preserve">
          <source>Splats</source>
          <target state="translated">Splats</target>
        </trans-unit>
        <trans-unit id="78294abeaf2bb4debb0bb2ec91c489bbaa420478" translate="yes" xml:space="preserve">
          <source>Splats and tuples</source>
          <target state="translated">표시가 및 튜플</target>
        </trans-unit>
        <trans-unit id="22dcfd4b28973ac29961ee1760c98b1caa6a68cf" translate="yes" xml:space="preserve">
          <source>Splatting a tuple</source>
          <target state="translated">튜플 튀기</target>
        </trans-unit>
        <trans-unit id="7dceaf2a2963a2f1ad36033280bbc7d18c495263" translate="yes" xml:space="preserve">
          <source>Split a &lt;em&gt;line&lt;/em&gt; string into the array of tokens in the same way the POSIX shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a1713136d38b4b0a8e06095cd194fd25219476" translate="yes" xml:space="preserve">
          <source>SplitFilter</source>
          <target state="translated">SplitFilter</target>
        </trans-unit>
        <trans-unit id="1e8cd7314d856bcd651d5367b4a2867edb0ecbf2" translate="yes" xml:space="preserve">
          <source>SplitFilter#clone</source>
          <target state="translated">SplitFilter#clone</target>
        </trans-unit>
        <trans-unit id="2f429adbfe3028eb962418f22dd289724ce3ff5a" translate="yes" xml:space="preserve">
          <source>SplitFilter#copy_with</source>
          <target state="translated">SplitFilter#copy_with</target>
        </trans-unit>
        <trans-unit id="a4210ead82148f7211f5b8152b5f9dda9e4ab23e" translate="yes" xml:space="preserve">
          <source>SplitFilter#quotient</source>
          <target state="translated">SplitFilter#quotient</target>
        </trans-unit>
        <trans-unit id="4ceffad4ea57a48f7bdbbd37acb5193ed95989ff" translate="yes" xml:space="preserve">
          <source>SplitFilter#remainder</source>
          <target state="translated">SplitFilter#remainder</target>
        </trans-unit>
        <trans-unit id="e9cb427b3236e13fceb07aa511b64544c07b8e7e" translate="yes" xml:space="preserve">
          <source>SplitFilter.new</source>
          <target state="translated">SplitFilter.new</target>
        </trans-unit>
        <trans-unit id="8773a12ef08f0de57f87bd53231e2d02a3d9dd7c" translate="yes" xml:space="preserve">
          <source>Splits the string after any amount of ASCII whitespace characters and yields each non-whitespace part to a block.</source>
          <target state="translated">임의의 ASCII 공백 문자 뒤에 문자열을 분할하고 공백이 아닌 각 부분을 블록으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8a7cac34a1c4888122abb73e88c73227f68cddbe" translate="yes" xml:space="preserve">
          <source>Splits the string after each character &lt;em&gt;separator&lt;/em&gt; and yields each part to a block.</source>
          <target state="translated">각 문자 &lt;em&gt;구분 기호&lt;/em&gt; 다음에 문자열을 분할하고 각 부분을 블록으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f696339b3bb5cd938315d7de267b9c3fecc4dc97" translate="yes" xml:space="preserve">
          <source>Splits the string after each newline and yields each line to a block.</source>
          <target state="translated">각 줄 바꿈 다음에 문자열을 분할하고 각 줄을 블록으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="962758e401cc1c78af2ea301df2411a100ca329a" translate="yes" xml:space="preserve">
          <source>Splits the string after each regex &lt;em&gt;separator&lt;/em&gt; and yields each part to a block.</source>
          <target state="translated">각 정규식 &lt;em&gt;구분 기호&lt;/em&gt; 다음에 문자열을 분할하고 각 부분을 블록으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f5f5fa1a30891cfda9053c0ade1c1797f410927e" translate="yes" xml:space="preserve">
          <source>Splits the string after each string &lt;em&gt;separator&lt;/em&gt; and yields each part to a block.</source>
          <target state="translated">각 문자열 &lt;em&gt;구분 기호&lt;/em&gt; 다음에 문자열을 분할하고 각 부분을 블록으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8697064c54272ec190e9b70fff08feaf084ec16d" translate="yes" xml:space="preserve">
          <source>Stale NFS file handle</source>
          <target state="translated">오래된 NFS 파일 핸들</target>
        </trans-unit>
        <trans-unit id="df0a713550a1078586e42de9a0c7f38636e560f9" translate="yes" xml:space="preserve">
          <source>Standard library API</source>
          <target state="translated">표준 라이브러리 API</target>
        </trans-unit>
        <trans-unit id="48ae0ac6e8fbef04027f9981657a27411a747615" translate="yes" xml:space="preserve">
          <source>Stapled</source>
          <target state="translated">Stapled</target>
        </trans-unit>
        <trans-unit id="ce5152aea1751acf2eed92add5548cf77c86851b" translate="yes" xml:space="preserve">
          <source>Stapled#close</source>
          <target state="translated">Stapled#close</target>
        </trans-unit>
        <trans-unit id="38df80abb3ffad2bf0f26280901c8f8f6a8b4560" translate="yes" xml:space="preserve">
          <source>Stapled#closed?</source>
          <target state="translated">Stapled#closed?</target>
        </trans-unit>
        <trans-unit id="677343b7d906467f0988c4e01e641f943433cd1b" translate="yes" xml:space="preserve">
          <source>Stapled#flush</source>
          <target state="translated">Stapled#flush</target>
        </trans-unit>
        <trans-unit id="638fac2fa1d0b3d698cac2ba87ac9d9c241291ba" translate="yes" xml:space="preserve">
          <source>Stapled#gets</source>
          <target state="translated">Stapled#gets</target>
        </trans-unit>
        <trans-unit id="32aff279d92acc3d62fbce6e8bb698c849a1b44d" translate="yes" xml:space="preserve">
          <source>Stapled#peek</source>
          <target state="translated">Stapled#peek</target>
        </trans-unit>
        <trans-unit id="de3f968557a7f787fae2ee4fbe21c6b6849cc722" translate="yes" xml:space="preserve">
          <source>Stapled#read</source>
          <target state="translated">Stapled#read</target>
        </trans-unit>
        <trans-unit id="eb74a0ba456e2248c9d276cfeb5aa17ac15f688d" translate="yes" xml:space="preserve">
          <source>Stapled#read_byte</source>
          <target state="translated">Stapled#read_byte</target>
        </trans-unit>
        <trans-unit id="0069850920d71e37e0599531032f477ff0836d27" translate="yes" xml:space="preserve">
          <source>Stapled#skip</source>
          <target state="translated">Stapled#skip</target>
        </trans-unit>
        <trans-unit id="d02841d986527974974c905ad1586f7281ecd50c" translate="yes" xml:space="preserve">
          <source>Stapled#skip_to_end</source>
          <target state="translated">Stapled#skip_to_end</target>
        </trans-unit>
        <trans-unit id="7cc31b1dc46ff071609f531b650867b2a8fb04a8" translate="yes" xml:space="preserve">
          <source>Stapled#sync_close=</source>
          <target state="translated">Stapled#sync_close=</target>
        </trans-unit>
        <trans-unit id="9b04dbc4ee8a5817924c0439961832b68cbfa568" translate="yes" xml:space="preserve">
          <source>Stapled#sync_close?</source>
          <target state="translated">Stapled#sync_close?</target>
        </trans-unit>
        <trans-unit id="81181b17615507016c486cf787c60bb84faf6fb1" translate="yes" xml:space="preserve">
          <source>Stapled#write</source>
          <target state="translated">Stapled#write</target>
        </trans-unit>
        <trans-unit id="87fa487e7c8c827a1da41ef13460563512eb7d98" translate="yes" xml:space="preserve">
          <source>Stapled#write_byte</source>
          <target state="translated">Stapled#write_byte</target>
        </trans-unit>
        <trans-unit id="fc3a56f61c5b15a2cb48af273bf388701069d3ab" translate="yes" xml:space="preserve">
          <source>Stapled.new</source>
          <target state="translated">Stapled.new</target>
        </trans-unit>
        <trans-unit id="c1c4fdacac3c5e7e5d391f414ebc8ddeb91a8c1f" translate="yes" xml:space="preserve">
          <source>Stapled.pipe</source>
          <target state="translated">Stapled.pipe</target>
        </trans-unit>
        <trans-unit id="254cf20fffbbc5abb071e0eb0b8f47746dc8b73d" translate="yes" xml:space="preserve">
          <source>Start by navigating to your repository's &lt;em&gt;releases&lt;/em&gt; page.</source>
          <target state="translated">저장소의 &lt;em&gt;릴리스&lt;/em&gt; 페이지 로 이동하여 시작 하십시오.</target>
        </trans-unit>
        <trans-unit id="4fc7377c1f5897d797532f72a5bae94be8b97867" translate="yes" xml:space="preserve">
          <source>Start by navigating to your repository's &lt;em&gt;releases&lt;/em&gt; page. This can be found at &lt;code&gt;https://github.com/&amp;lt;YOUR-GITHUB-NAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/releases&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f898647bbcb473c328baa348484c3c236c5f867" translate="yes" xml:space="preserve">
          <source>Starts a YAML stream, invokes the block, and ends it.</source>
          <target state="translated">YAML 스트림을 시작하고 블록을 호출 한 후 종료합니다.</target>
        </trans-unit>
        <trans-unit id="4b062ca17bc0f0a767f5115fde184478a113bbf4" translate="yes" xml:space="preserve">
          <source>Starts a YAML stream.</source>
          <target state="translated">YAML 스트림을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="3ef393bf7d0219fd24cf94a6575a015a9eafe5da" translate="yes" xml:space="preserve">
          <source>Starts a document, invokes the block, and then ends it.</source>
          <target state="translated">문서를 시작하고 블록을 호출 한 다음 끝냅니다.</target>
        </trans-unit>
        <trans-unit id="f4b4bf9ab1e39b0972381ba9780f409aa47c1d32" translate="yes" xml:space="preserve">
          <source>Starts a document.</source>
          <target state="translated">문서를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="95309e39d2183197bce5d8c1d4d11336f5e14199" translate="yes" xml:space="preserve">
          <source>Starts a mapping, invokes the block, and then ends it.</source>
          <target state="translated">매핑을 시작하고 블록을 호출 한 다음 끝냅니다.</target>
        </trans-unit>
        <trans-unit id="d8ae470265ce7cc8f8c10e96802ede3276d3e855" translate="yes" xml:space="preserve">
          <source>Starts a mapping.</source>
          <target state="translated">매핑을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="d3231bce797af9d7701d33e44525c35e09587484" translate="yes" xml:space="preserve">
          <source>Starts a sequence, invokes the block, and the ends it.</source>
          <target state="translated">시퀀스를 시작하고 블록을 호출 한 후 종료합니다.</target>
        </trans-unit>
        <trans-unit id="ed560e88e7bc169809612edc7c1861e8608dfe79" translate="yes" xml:space="preserve">
          <source>Starts a sequence.</source>
          <target state="translated">시퀀스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="bb0ca4e227518b7b5cc054b544be753f6cb2b6a2" translate="yes" xml:space="preserve">
          <source>Starts the server.</source>
          <target state="translated">서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="105a9265c5d1e87a393511b1d593e6aaf9afbe88" translate="yes" xml:space="preserve">
          <source>Starts the server. Blocks until the server is closed.</source>
          <target state="translated">서버를 시작합니다. 서버가 닫힐 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="44148910a3641b5be4c37fb166422aa1b44d68f3" translate="yes" xml:space="preserve">
          <source>State a method's purpose or functionality in the first line.</source>
          <target state="translated">첫 번째 줄에 방법의 목적 또는 기능을 명시하십시오.</target>
        </trans-unit>
        <trans-unit id="de775277311a1f15adade206c2c728fd44d33fe4" translate="yes" xml:space="preserve">
          <source>State not recoverable</source>
          <target state="translated">회복 불가능한 상태</target>
        </trans-unit>
        <trans-unit id="e5c58c82cbb5b697ce1027f5ae59462a6576f877" translate="yes" xml:space="preserve">
          <source>Stateless dispatcher that deliver log entries immediately</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56692e0f00e59e571612c8332d9776cdcbcdfd3" translate="yes" xml:space="preserve">
          <source>Static arrays (&lt;code&gt;StaticArray(Int32, 8)&lt;/code&gt;, which can also be written as &lt;code&gt;Int32[8]&lt;/code&gt;)</source>
          <target state="translated">정적 배열 ( &lt;code&gt;StaticArray(Int32, 8)&lt;/code&gt; , &lt;code&gt;Int32[8]&lt;/code&gt; 로도 쓸 수 있음 )</target>
        </trans-unit>
        <trans-unit id="8b4737cb5272c54b7a3307a8c3ae33c1721e56fc" translate="yes" xml:space="preserve">
          <source>StaticArray</source>
          <target state="translated">StaticArray</target>
        </trans-unit>
        <trans-unit id="d68349385a0180afcdfb0c70ffbb704a045fb861" translate="yes" xml:space="preserve">
          <source>StaticArray []</source>
          <target state="translated">StaticArray []</target>
        </trans-unit>
        <trans-unit id="75169c9e9d6e30b92f58bf4c82def6a7a9b0b269" translate="yes" xml:space="preserve">
          <source>StaticArray#==</source>
          <target state="translated">StaticArray#==</target>
        </trans-unit>
        <trans-unit id="7718b13181c8921aa7bbd9828de63c8b3fe3ac9c" translate="yes" xml:space="preserve">
          <source>StaticArray#[]=</source>
          <target state="translated">StaticArray#[]=</target>
        </trans-unit>
        <trans-unit id="3a3c5a53a60ce68e5edda7e9a839fd83405d77fc" translate="yes" xml:space="preserve">
          <source>StaticArray#map</source>
          <target state="translated">StaticArray#map</target>
        </trans-unit>
        <trans-unit id="1af4b31877943349cd411ba4db106ad91820c9cd" translate="yes" xml:space="preserve">
          <source>StaticArray#map!</source>
          <target state="translated">StaticArray#map!</target>
        </trans-unit>
        <trans-unit id="9604497e7968c8c98f6157aa810f378e7be80ba2" translate="yes" xml:space="preserve">
          <source>StaticArray#size</source>
          <target state="translated">StaticArray#size</target>
        </trans-unit>
        <trans-unit id="e14ba969f9d34ef19b34faa8db05d8fd6d405579" translate="yes" xml:space="preserve">
          <source>StaticArray#to_s</source>
          <target state="translated">StaticArray#to_s</target>
        </trans-unit>
        <trans-unit id="3f1924747b18309fe4aa37421d593c72e1901847" translate="yes" xml:space="preserve">
          <source>StaticArray(T, N)</source>
          <target state="translated">정적 배열 (T, N)</target>
        </trans-unit>
        <trans-unit id="cb78f20fc84413744c77594170bd49148a545268" translate="yes" xml:space="preserve">
          <source>StaticArray.new</source>
          <target state="translated">StaticArray.new</target>
        </trans-unit>
        <trans-unit id="462411d7b9f0474b53d2c7cf7eacba84308d8d05" translate="yes" xml:space="preserve">
          <source>StaticFileHandler</source>
          <target state="translated">StaticFileHandler</target>
        </trans-unit>
        <trans-unit id="07a95d81a28bf809655eb921aca52b94582dde19" translate="yes" xml:space="preserve">
          <source>StaticFileHandler#call</source>
          <target state="translated">StaticFileHandler#call</target>
        </trans-unit>
        <trans-unit id="b322348054d24a09027e882dd6aeffd7c6438d0b" translate="yes" xml:space="preserve">
          <source>StaticFileHandler.new</source>
          <target state="translated">StaticFileHandler.new</target>
        </trans-unit>
        <trans-unit id="d49ed1a00bace7801aa6b9c9da267da6dfa31a1f" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing</source>
          <target state="translated">StaticFileHandler::DirectoryListing</target>
        </trans-unit>
        <trans-unit id="a36da0335df86a30d4e0f4c5158fd3b49aa61a19" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing#clone</source>
          <target state="translated">StaticFileHandler::DirectoryListing#clone</target>
        </trans-unit>
        <trans-unit id="6f79d522fef78873708271a749c346fc316dd1c4" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing#copy_with</source>
          <target state="translated">StaticFileHandler::DirectoryListing#copy_with</target>
        </trans-unit>
        <trans-unit id="d0c30e0bf12d531df48784e7ffb9c17734b84f97" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing#each_entry</source>
          <target state="translated">StaticFileHandler::DirectoryListing#each_entry</target>
        </trans-unit>
        <trans-unit id="1cabbabc77f8263f8dcd37a746f3c15a1c2f2e44" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing#escaped_request_path</source>
          <target state="translated">StaticFileHandler::DirectoryListing#escaped_request_path</target>
        </trans-unit>
        <trans-unit id="ff1def39b68934e441fb5414df14deec1ae63ccd" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing#path</source>
          <target state="translated">StaticFileHandler::DirectoryListing#path</target>
        </trans-unit>
        <trans-unit id="38cc495b3b714fb642f5f9454640c22a8b772ba6" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing#request_path</source>
          <target state="translated">StaticFileHandler::DirectoryListing#request_path</target>
        </trans-unit>
        <trans-unit id="45a1964a249577fcd5117ce2013c146cadee021a" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing#to_s</source>
          <target state="translated">StaticFileHandler::DirectoryListing#to_s</target>
        </trans-unit>
        <trans-unit id="2b1c8bfd858b1550261798291db9c00626123252" translate="yes" xml:space="preserve">
          <source>StaticFileHandler::DirectoryListing.new</source>
          <target state="translated">StaticFileHandler::DirectoryListing.new</target>
        </trans-unit>
        <trans-unit id="1ece3be9a041f52cd8672009bca9a478d9fdbaef" translate="yes" xml:space="preserve">
          <source>StaticFormatter</source>
          <target state="translated">StaticFormatter</target>
        </trans-unit>
        <trans-unit id="735f60304a9474322afaa44ac3708cefb1cd6714" translate="yes" xml:space="preserve">
          <source>StaticFormatter#context</source>
          <target state="translated">StaticFormatter#context</target>
        </trans-unit>
        <trans-unit id="15489f7fde0af0fb04a7741ede5e872e4f2f5d2e" translate="yes" xml:space="preserve">
          <source>StaticFormatter#data</source>
          <target state="translated">StaticFormatter#data</target>
        </trans-unit>
        <trans-unit id="46bfba6bce8d1da89f0c7950fc50088fc558cc96" translate="yes" xml:space="preserve">
          <source>StaticFormatter#exception</source>
          <target state="translated">StaticFormatter#exception</target>
        </trans-unit>
        <trans-unit id="9ac3b3a6bb2bf183983cf6f6a5ac4e6bebb21c68" translate="yes" xml:space="preserve">
          <source>StaticFormatter#message</source>
          <target state="translated">StaticFormatter#message</target>
        </trans-unit>
        <trans-unit id="9ef801f3b49d9788f8fea61a184d91b23c6acdfb" translate="yes" xml:space="preserve">
          <source>StaticFormatter#progname</source>
          <target state="translated">StaticFormatter#progname</target>
        </trans-unit>
        <trans-unit id="831939b8ff4ce685fbdb01a5e9cc5b5ea2d712f9" translate="yes" xml:space="preserve">
          <source>StaticFormatter#run</source>
          <target state="translated">StaticFormatter#run</target>
        </trans-unit>
        <trans-unit id="88dece3a6939f4de7e526805e15070d8f9287364" translate="yes" xml:space="preserve">
          <source>StaticFormatter#severity</source>
          <target state="translated">StaticFormatter#severity</target>
        </trans-unit>
        <trans-unit id="6bb3fda2295ba8868682af0c9c5d02eb52ad735d" translate="yes" xml:space="preserve">
          <source>StaticFormatter#source</source>
          <target state="translated">StaticFormatter#source</target>
        </trans-unit>
        <trans-unit id="b76825a4dbd4c4f09f1ff340dc4cbcf3415a7760" translate="yes" xml:space="preserve">
          <source>StaticFormatter#string</source>
          <target state="translated">StaticFormatter#string</target>
        </trans-unit>
        <trans-unit id="aaa269d333c7e842367e4654d1b41ec91e3dcdd1" translate="yes" xml:space="preserve">
          <source>StaticFormatter#timestamp</source>
          <target state="translated">StaticFormatter#timestamp</target>
        </trans-unit>
        <trans-unit id="f238031ca1083c698286c7cd63746eb773911be3" translate="yes" xml:space="preserve">
          <source>StaticFormatter.format</source>
          <target state="translated">StaticFormatter.format</target>
        </trans-unit>
        <trans-unit id="9ade56f79730adf986097a5bbc6dc7ec2603fb5b" translate="yes" xml:space="preserve">
          <source>StaticFormatter.new</source>
          <target state="translated">StaticFormatter.new</target>
        </trans-unit>
        <trans-unit id="fed9c106a78c12048d7f09c53700010cfc047319" translate="yes" xml:space="preserve">
          <source>Statically type-checked but without having to specify the type of variables or method arguments.</source>
          <target state="translated">변수 유형이나 메소드 인수를 지정할 필요없이 정적으로 유형을 확인했습니다.</target>
        </trans-unit>
        <trans-unit id="3b29a710cbf1fdbc0759c4e3b22aebbd66e72ff2" translate="yes" xml:space="preserve">
          <source>Statistical mean from calculation stage</source>
          <target state="translated">계산 단계의 통계 평균</target>
        </trans-unit>
        <trans-unit id="7fb4302ed387deaa55228220a96c1e060322c38e" translate="yes" xml:space="preserve">
          <source>Statistical standard deviation from calculation stage</source>
          <target state="translated">계산 단계에서 통계 표준 편차</target>
        </trans-unit>
        <trans-unit id="2381532962e92034fa8c17e0f63adb887ab2e188" translate="yes" xml:space="preserve">
          <source>Statistical variance from calculation stage</source>
          <target state="translated">계산 단계의 통계 분산</target>
        </trans-unit>
        <trans-unit id="8cf34deb1e8e088fbe71ac33c719b93fc3a348b8" translate="yes" xml:space="preserve">
          <source>Stats#bytes_since_gc</source>
          <target state="translated">Stats#bytes_since_gc</target>
        </trans-unit>
        <trans-unit id="0a1a97c9b6cc33674090120c447092bdaeefccfb" translate="yes" xml:space="preserve">
          <source>Stats#clone</source>
          <target state="translated">Stats#clone</target>
        </trans-unit>
        <trans-unit id="d009783c23e4735db5bfb4ca74a89e78c0412bcb" translate="yes" xml:space="preserve">
          <source>Stats#copy_with</source>
          <target state="translated">Stats#copy_with</target>
        </trans-unit>
        <trans-unit id="ddf7b9003be306725946ac261d4f9a58aece079f" translate="yes" xml:space="preserve">
          <source>Stats#free_bytes</source>
          <target state="translated">Stats#free_bytes</target>
        </trans-unit>
        <trans-unit id="fa2e4dee8e6cd174f400d4b7eb41dfb1dda104a6" translate="yes" xml:space="preserve">
          <source>Stats#heap_size</source>
          <target state="translated">Stats#heap_size</target>
        </trans-unit>
        <trans-unit id="4af0d63130b960534d7edee51a18abf3cce443a2" translate="yes" xml:space="preserve">
          <source>Stats#total_bytes</source>
          <target state="translated">Stats#total_bytes</target>
        </trans-unit>
        <trans-unit id="1d28648080fba91b81cf1c5544e599a118ff81ed" translate="yes" xml:space="preserve">
          <source>Stats#unmapped_bytes</source>
          <target state="translated">Stats#unmapped_bytes</target>
        </trans-unit>
        <trans-unit id="34421cc4cc9795b28e4519cf23248dfc7e997292" translate="yes" xml:space="preserve">
          <source>Stats.new</source>
          <target state="translated">Stats.new</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="5436b23e9b249745007c9e6ac28e0b11cf15cd04" translate="yes" xml:space="preserve">
          <source>Status#accepted?</source>
          <target state="translated">Status#accepted?</target>
        </trans-unit>
        <trans-unit id="bb4a109d23f1a7d9682dba8b3b066505ad28662f" translate="yes" xml:space="preserve">
          <source>Status#already_reported?</source>
          <target state="translated">Status#already_reported?</target>
        </trans-unit>
        <trans-unit id="a028a41c4127e6eef042ec4e8ce51a119cb0c721" translate="yes" xml:space="preserve">
          <source>Status#bad_gateway?</source>
          <target state="translated">Status#bad_gateway?</target>
        </trans-unit>
        <trans-unit id="abe2c4a40b3b7e587c2ebe5684e2f6f0aaf781b8" translate="yes" xml:space="preserve">
          <source>Status#bad_request?</source>
          <target state="translated">Status#bad_request?</target>
        </trans-unit>
        <trans-unit id="0fbe58a1d7d56af7cf6fde3d93eef6f146934004" translate="yes" xml:space="preserve">
          <source>Status#client_error?</source>
          <target state="translated">Status#client_error?</target>
        </trans-unit>
        <trans-unit id="328d687a3d876880833922a3c69c354b265e4dc4" translate="yes" xml:space="preserve">
          <source>Status#code</source>
          <target state="translated">Status#code</target>
        </trans-unit>
        <trans-unit id="e35cffa22e32e0983600fc1a6d2b137e91704f65" translate="yes" xml:space="preserve">
          <source>Status#conflict?</source>
          <target state="translated">Status#conflict?</target>
        </trans-unit>
        <trans-unit id="8887abdc0283ac73b05a996011c7010e852f6984" translate="yes" xml:space="preserve">
          <source>Status#continue?</source>
          <target state="translated">Status#continue?</target>
        </trans-unit>
        <trans-unit id="7945b8129d4f312b4c05620d48704242a13649e6" translate="yes" xml:space="preserve">
          <source>Status#created?</source>
          <target state="translated">Status#created?</target>
        </trans-unit>
        <trans-unit id="5e54a5aedf6d7af1fd1fa3132b4e7662a9a23251" translate="yes" xml:space="preserve">
          <source>Status#description</source>
          <target state="translated">Status#description</target>
        </trans-unit>
        <trans-unit id="3edf3abdcf99c608f50408534d24b4334978f4ed" translate="yes" xml:space="preserve">
          <source>Status#early_hints?</source>
          <target state="translated">Status#early_hints?</target>
        </trans-unit>
        <trans-unit id="806d042d5bb71e43bf9cfa975c54a0009a9a889a" translate="yes" xml:space="preserve">
          <source>Status#exit_code</source>
          <target state="translated">Status#exit_code</target>
        </trans-unit>
        <trans-unit id="61b1f236dade7ebd07b87e9362866778bae9e7b6" translate="yes" xml:space="preserve">
          <source>Status#exit_signal</source>
          <target state="translated">Status#exit_signal</target>
        </trans-unit>
        <trans-unit id="280dca17fd9609ebc853623bf13defa2b3ce566c" translate="yes" xml:space="preserve">
          <source>Status#exit_status</source>
          <target state="translated">Status#exit_status</target>
        </trans-unit>
        <trans-unit id="cc82f4ec98f1142cb8d986578e71bd7f6c15c6fc" translate="yes" xml:space="preserve">
          <source>Status#expectation_failed?</source>
          <target state="translated">Status#expectation_failed?</target>
        </trans-unit>
        <trans-unit id="67f3524661bf0a950c60cdf8e8881ff02feaa1b2" translate="yes" xml:space="preserve">
          <source>Status#failed_dependency?</source>
          <target state="translated">Status#failed_dependency?</target>
        </trans-unit>
        <trans-unit id="22a22b90b5d4fa4b761eaab1a5bcfb36a1948dec" translate="yes" xml:space="preserve">
          <source>Status#forbidden?</source>
          <target state="translated">Status#forbidden?</target>
        </trans-unit>
        <trans-unit id="59fd87b13ad2d74d5b5b6ed35a853b7620b3d458" translate="yes" xml:space="preserve">
          <source>Status#found?</source>
          <target state="translated">Status#found?</target>
        </trans-unit>
        <trans-unit id="bcad881ccc0a22dd6f079fc31f97dfc702335a75" translate="yes" xml:space="preserve">
          <source>Status#gateway_timeout?</source>
          <target state="translated">Status#gateway_timeout?</target>
        </trans-unit>
        <trans-unit id="9f9d18d44368d8cb960dafe44691fcc7979cf2b7" translate="yes" xml:space="preserve">
          <source>Status#gone?</source>
          <target state="translated">Status#gone?</target>
        </trans-unit>
        <trans-unit id="75007444f85e36aeda2f2ad1b604225d9249af4b" translate="yes" xml:space="preserve">
          <source>Status#http_version_not_supported?</source>
          <target state="translated">Status#http_version_not_supported?</target>
        </trans-unit>
        <trans-unit id="461fad9f6c18d8e8ec2beb5590f91b7d4bdbd042" translate="yes" xml:space="preserve">
          <source>Status#im_a_teapot?</source>
          <target state="translated">Status#im_a_teapot?</target>
        </trans-unit>
        <trans-unit id="06532a22f51c858f635a8e2d5d148ff45ec9cc7a" translate="yes" xml:space="preserve">
          <source>Status#im_used?</source>
          <target state="translated">Status#im_used?</target>
        </trans-unit>
        <trans-unit id="e6312f337c71afd367ece05ae025cf6f44789a45" translate="yes" xml:space="preserve">
          <source>Status#informational?</source>
          <target state="translated">Status#informational?</target>
        </trans-unit>
        <trans-unit id="92b185eb0b96d2d4ff507893a98018545d32e545" translate="yes" xml:space="preserve">
          <source>Status#insufficient_storage?</source>
          <target state="translated">Status#insufficient_storage?</target>
        </trans-unit>
        <trans-unit id="8ecabf620092ad998e7fae20a3200c0bf6bb5534" translate="yes" xml:space="preserve">
          <source>Status#internal_server_error?</source>
          <target state="translated">Status#internal_server_error?</target>
        </trans-unit>
        <trans-unit id="56f0ec601cfc014e181b118389f3e8837152532a" translate="yes" xml:space="preserve">
          <source>Status#length_required?</source>
          <target state="translated">Status#length_required?</target>
        </trans-unit>
        <trans-unit id="bf74e3fa0b045ecdbece5b3f3ac9db7e35fd4422" translate="yes" xml:space="preserve">
          <source>Status#locked?</source>
          <target state="translated">Status#locked?</target>
        </trans-unit>
        <trans-unit id="05da5e1ca580b78bc9e21fb7ee57ea11ac82ea4f" translate="yes" xml:space="preserve">
          <source>Status#loop_detected?</source>
          <target state="translated">Status#loop_detected?</target>
        </trans-unit>
        <trans-unit id="0f32097c29543f8fc6d4f10fffdbb444013a0a3a" translate="yes" xml:space="preserve">
          <source>Status#method_not_allowed?</source>
          <target state="translated">Status#method_not_allowed?</target>
        </trans-unit>
        <trans-unit id="b521f3435bf78b0a3bac39b5e2b32827ba357547" translate="yes" xml:space="preserve">
          <source>Status#misdirected_request?</source>
          <target state="translated">Status#misdirected_request?</target>
        </trans-unit>
        <trans-unit id="2113a679c167b64d2988937765eb23cd75bcf028" translate="yes" xml:space="preserve">
          <source>Status#moved_permanently?</source>
          <target state="translated">Status#moved_permanently?</target>
        </trans-unit>
        <trans-unit id="97d5a0d51f2b20f978ca2f44a1ce8052474e4b00" translate="yes" xml:space="preserve">
          <source>Status#multi_status?</source>
          <target state="translated">Status#multi_status?</target>
        </trans-unit>
        <trans-unit id="98a8858dc27710a05be772832f3ddd84db68d939" translate="yes" xml:space="preserve">
          <source>Status#multiple_choices?</source>
          <target state="translated">Status#multiple_choices?</target>
        </trans-unit>
        <trans-unit id="3a162c6a138185573021738524d461b0bbc68ec8" translate="yes" xml:space="preserve">
          <source>Status#network_authentication_required?</source>
          <target state="translated">Status#network_authentication_required?</target>
        </trans-unit>
        <trans-unit id="fda2233a0a82910134de61e093b18a2d6619f24a" translate="yes" xml:space="preserve">
          <source>Status#no_content?</source>
          <target state="translated">Status#no_content?</target>
        </trans-unit>
        <trans-unit id="4d26b5f53cc23dcce0e4e43870dfb6d3e6f01f94" translate="yes" xml:space="preserve">
          <source>Status#non_authoritative_information?</source>
          <target state="translated">Status#non_authoritative_information?</target>
        </trans-unit>
        <trans-unit id="4f37da88eb44ddeebaccce47b01e6cc67607cded" translate="yes" xml:space="preserve">
          <source>Status#normal_exit?</source>
          <target state="translated">Status#normal_exit?</target>
        </trans-unit>
        <trans-unit id="e51ff01da3498aa206c3bef8900cd612e4ab868c" translate="yes" xml:space="preserve">
          <source>Status#not_acceptable?</source>
          <target state="translated">Status#not_acceptable?</target>
        </trans-unit>
        <trans-unit id="1e4fe72fc5f23cce49bfb02c545284be9ab30168" translate="yes" xml:space="preserve">
          <source>Status#not_extended?</source>
          <target state="translated">Status#not_extended?</target>
        </trans-unit>
        <trans-unit id="3b6ff6437c53132154b635bdde9aff08214446c5" translate="yes" xml:space="preserve">
          <source>Status#not_found?</source>
          <target state="translated">Status#not_found?</target>
        </trans-unit>
        <trans-unit id="1e9f6f64caf1a6ddd5d4d2b8cb9311ff3f57f5ca" translate="yes" xml:space="preserve">
          <source>Status#not_implemented?</source>
          <target state="translated">Status#not_implemented?</target>
        </trans-unit>
        <trans-unit id="086bdec1def8c7957f695c1272a580af6be54874" translate="yes" xml:space="preserve">
          <source>Status#not_modified?</source>
          <target state="translated">Status#not_modified?</target>
        </trans-unit>
        <trans-unit id="ce9d8ac0e65c9b449448b08015e35ccecfd15390" translate="yes" xml:space="preserve">
          <source>Status#ok?</source>
          <target state="translated">Status#ok?</target>
        </trans-unit>
        <trans-unit id="185dd234f3b3965c686b7956d8c21948c23a4935" translate="yes" xml:space="preserve">
          <source>Status#partial_content?</source>
          <target state="translated">Status#partial_content?</target>
        </trans-unit>
        <trans-unit id="f70c21fc7efc916c6976055e82a57f3a20e53bed" translate="yes" xml:space="preserve">
          <source>Status#payload_too_large?</source>
          <target state="translated">Status#payload_too_large?</target>
        </trans-unit>
        <trans-unit id="512803f85753c3601ea3e229f9f44b88396b06f9" translate="yes" xml:space="preserve">
          <source>Status#payment_required?</source>
          <target state="translated">Status#payment_required?</target>
        </trans-unit>
        <trans-unit id="9ab8139d5bee053019813a503d19164f354490e9" translate="yes" xml:space="preserve">
          <source>Status#permanent_redirect?</source>
          <target state="translated">Status#permanent_redirect?</target>
        </trans-unit>
        <trans-unit id="ec214f4064a4851d3ab24f19f40d7385d1855ff6" translate="yes" xml:space="preserve">
          <source>Status#precondition_failed?</source>
          <target state="translated">Status#precondition_failed?</target>
        </trans-unit>
        <trans-unit id="7fd360f08ed3c36cafcf453db48fc91652e52baf" translate="yes" xml:space="preserve">
          <source>Status#precondition_required?</source>
          <target state="translated">Status#precondition_required?</target>
        </trans-unit>
        <trans-unit id="ce912baf7a970271b1e311d39f399c182f5d21c7" translate="yes" xml:space="preserve">
          <source>Status#processing?</source>
          <target state="translated">Status#processing?</target>
        </trans-unit>
        <trans-unit id="84d8bee7ea9fe1f4d13ef49ee880b727e771f9b9" translate="yes" xml:space="preserve">
          <source>Status#proxy_authentication_required?</source>
          <target state="translated">Status#proxy_authentication_required?</target>
        </trans-unit>
        <trans-unit id="0e390186a3424fad977639de4c218835ed94abe2" translate="yes" xml:space="preserve">
          <source>Status#range_not_satisfiable?</source>
          <target state="translated">Status#range_not_satisfiable?</target>
        </trans-unit>
        <trans-unit id="9c79a468a0b81439f01a6a7f9be64699fb7a62f1" translate="yes" xml:space="preserve">
          <source>Status#redirection?</source>
          <target state="translated">Status#redirection?</target>
        </trans-unit>
        <trans-unit id="d1783f2b4b5525471a253bee55bbc2eb1f87428f" translate="yes" xml:space="preserve">
          <source>Status#request_header_fields_too_large?</source>
          <target state="translated">Status#request_header_fields_too_large?</target>
        </trans-unit>
        <trans-unit id="e2546391de357c58a2721393f5b465b09d7ff8e2" translate="yes" xml:space="preserve">
          <source>Status#request_timeout?</source>
          <target state="translated">Status#request_timeout?</target>
        </trans-unit>
        <trans-unit id="c9d7679510798e7c0b4bcb243d4d76008514ee1f" translate="yes" xml:space="preserve">
          <source>Status#reset_content?</source>
          <target state="translated">Status#reset_content?</target>
        </trans-unit>
        <trans-unit id="7e3b134ab9b8cdbe07c0c5a1fb78a1cfa645862d" translate="yes" xml:space="preserve">
          <source>Status#see_other?</source>
          <target state="translated">Status#see_other?</target>
        </trans-unit>
        <trans-unit id="b4434c26bfdd423d68ead30b650dc5aa0bf8e733" translate="yes" xml:space="preserve">
          <source>Status#server_error?</source>
          <target state="translated">Status#server_error?</target>
        </trans-unit>
        <trans-unit id="0ac29a5a8f17b20a4e87502cc0b3bbe09fdf5ab2" translate="yes" xml:space="preserve">
          <source>Status#service_unavailable?</source>
          <target state="translated">Status#service_unavailable?</target>
        </trans-unit>
        <trans-unit id="47cf0b9fded238c01dde57f7c5eab19295183215" translate="yes" xml:space="preserve">
          <source>Status#signal_exit?</source>
          <target state="translated">Status#signal_exit?</target>
        </trans-unit>
        <trans-unit id="c5c04bc40de7af05ec14643d5e05b35a1bb00fd9" translate="yes" xml:space="preserve">
          <source>Status#success?</source>
          <target state="translated">Status#success?</target>
        </trans-unit>
        <trans-unit id="477cdfe2bf5da00d49a57910c147fa777018e434" translate="yes" xml:space="preserve">
          <source>Status#switch_proxy?</source>
          <target state="translated">Status#switch_proxy?</target>
        </trans-unit>
        <trans-unit id="f4464d2240d5c50c43c4aa898a5984273ecfb7e1" translate="yes" xml:space="preserve">
          <source>Status#switching_protocols?</source>
          <target state="translated">Status#switching_protocols?</target>
        </trans-unit>
        <trans-unit id="14df805007504aade0507fa056f9d8b7f538003f" translate="yes" xml:space="preserve">
          <source>Status#temporary_redirect?</source>
          <target state="translated">Status#temporary_redirect?</target>
        </trans-unit>
        <trans-unit id="81c76de457ab09e81c55438eec6ef328669e9290" translate="yes" xml:space="preserve">
          <source>Status#too_many_requests?</source>
          <target state="translated">Status#too_many_requests?</target>
        </trans-unit>
        <trans-unit id="108006f40e48921e49eae53a3ae1de054b81e92e" translate="yes" xml:space="preserve">
          <source>Status#unauthorized?</source>
          <target state="translated">Status#unauthorized?</target>
        </trans-unit>
        <trans-unit id="7ee8c26236ce500a360a070703eddf48cf23e89a" translate="yes" xml:space="preserve">
          <source>Status#unavailable_for_legal_reasons?</source>
          <target state="translated">Status#unavailable_for_legal_reasons?</target>
        </trans-unit>
        <trans-unit id="9bca5e6666d2e2778036062f9b7b2e63a8341cbe" translate="yes" xml:space="preserve">
          <source>Status#unprocessable_entity?</source>
          <target state="translated">Status#unprocessable_entity?</target>
        </trans-unit>
        <trans-unit id="bc4d49c6010cf2eeb537e449ca6f97cbcea4c2fa" translate="yes" xml:space="preserve">
          <source>Status#unsupported_media_type?</source>
          <target state="translated">Status#unsupported_media_type?</target>
        </trans-unit>
        <trans-unit id="654355154c2f4ac5e2a013f434174f7671d32d56" translate="yes" xml:space="preserve">
          <source>Status#upgrade_required?</source>
          <target state="translated">Status#upgrade_required?</target>
        </trans-unit>
        <trans-unit id="0de7fbd1c3130a31084bff3865f15fe491a76f9b" translate="yes" xml:space="preserve">
          <source>Status#uri_too_long?</source>
          <target state="translated">Status#uri_too_long?</target>
        </trans-unit>
        <trans-unit id="26585741933f7c35d166c9923250784a7ab1c0e3" translate="yes" xml:space="preserve">
          <source>Status#use_proxy?</source>
          <target state="translated">Status#use_proxy?</target>
        </trans-unit>
        <trans-unit id="0f5de23902faa23364d5f5c4d1c5a3f0cb8de86e" translate="yes" xml:space="preserve">
          <source>Status#variant_also_negotiates?</source>
          <target state="translated">Status#variant_also_negotiates?</target>
        </trans-unit>
        <trans-unit id="606eb77dbb33c80890c451d9c778c21baf55ced1" translate="yes" xml:space="preserve">
          <source>Status.new</source>
          <target state="translated">Status.new</target>
        </trans-unit>
        <trans-unit id="2b26af4d9b75f552c3bfa142907ed38dbe354bd2" translate="yes" xml:space="preserve">
          <source>Stops the current parse and returns immediately, leaving the remaining flags unparsed.</source>
          <target state="translated">Stops the current parse and returns immediately, leaving the remaining flags unparsed.</target>
        </trans-unit>
        <trans-unit id="81a71995f1967ddc00231b4c4903d65720b54b2f" translate="yes" xml:space="preserve">
          <source>Stops the current parse and returns immediately, leaving the remaining flags unparsed. This is treated identically to &lt;code&gt;--&lt;/code&gt; being inserted &lt;em&gt;behind&lt;/em&gt; the current parsed flag.</source>
          <target state="translated">Stops the current parse and returns immediately, leaving the remaining flags unparsed. This is treated identically to &lt;code&gt;--&lt;/code&gt; being inserted &lt;em&gt;behind&lt;/em&gt; the current parsed flag.</target>
        </trans-unit>
        <trans-unit id="8e159795269f89a3c361b84503df71d6855197f1" translate="yes" xml:space="preserve">
          <source>Store big lines numbers in text PSVI field</source>
          <target state="translated">텍스트 PSVI 필드에 큰 줄 번호 저장</target>
        </trans-unit>
        <trans-unit id="88670f2fd0e323d8ec3dac16fa054b6225b02066" translate="yes" xml:space="preserve">
          <source>Stores the output digest of #digest_size bytes in dst.</source>
          <target state="translated">Stores the output digest of #digest_size bytes in dst.</target>
        </trans-unit>
        <trans-unit id="69fb26dda8edc2e1edaa7ba4e1f7884f838f271c" translate="yes" xml:space="preserve">
          <source>Strategy</source>
          <target state="translated">Strategy</target>
        </trans-unit>
        <trans-unit id="6906ee40cbce45ee11fcb8eb0eef2a14bce55457" translate="yes" xml:space="preserve">
          <source>Strategy#default?</source>
          <target state="translated">Strategy#default?</target>
        </trans-unit>
        <trans-unit id="f99960ef95f110b85a5b526ffb197bde19e45204" translate="yes" xml:space="preserve">
          <source>Strategy#filtered?</source>
          <target state="translated">Strategy#filtered?</target>
        </trans-unit>
        <trans-unit id="37705b546a15e29a771f58f0e211fa7c8e57f29b" translate="yes" xml:space="preserve">
          <source>Strategy#fixed?</source>
          <target state="translated">Strategy#fixed?</target>
        </trans-unit>
        <trans-unit id="881fb6afe5295104d520633ea33f0a7e78560a37" translate="yes" xml:space="preserve">
          <source>Strategy#huffman_only?</source>
          <target state="translated">Strategy#huffman_only?</target>
        </trans-unit>
        <trans-unit id="7be72ddb9c07af06ffcbb0496132cbc5661f2e13" translate="yes" xml:space="preserve">
          <source>Strategy#rle?</source>
          <target state="translated">Strategy#rle?</target>
        </trans-unit>
        <trans-unit id="1e8325521df6e6903ede77955f9bf1a333363aed" translate="yes" xml:space="preserve">
          <source>Streaming</source>
          <target state="translated">Streaming</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="2b7f242b7d008f172d92c546f8053d2142dc6c98" translate="yes" xml:space="preserve">
          <source>String interpolation is also possible with &lt;a href=&quot;https://crystal-lang.org/api/String.html#%25%28other%29-instance-method&quot;&gt;String#%&lt;/a&gt;.</source>
          <target state="translated">String &lt;a href=&quot;https://crystal-lang.org/api/String.html#%25%28other%29-instance-method&quot;&gt;# %&lt;/a&gt; 로도 문자열 보간이 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="813f2778625d536f41f692e6546aba8538267486" translate="yes" xml:space="preserve">
          <source>String might end up being conformed of bytes which are an invalid byte sequence according to UTF-8. This can happen if the string is created via one of the constructors that accept bytes, or when getting a string from &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;. No exception will be raised, but invalid byte sequences, when asked as chars, will use the unicode replacement char (value 0xFFFD). For example:</source>
          <target state="translated">String might end up being conformed of bytes which are an invalid byte sequence according to UTF-8. This can happen if the string is created via one of the constructors that accept bytes, or when getting a string from &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; . No exception will be raised, but invalid byte sequences, when asked as chars, will use the unicode replacement char (value 0xFFFD). For example:</target>
        </trans-unit>
        <trans-unit id="1efe557be6777d3018f3161ede33fbd06cd0df1e" translate="yes" xml:space="preserve">
          <source>String might end up being conformed of bytes which are an invalid byte sequence according to UTF-8. This can happen if the string is created via one of the constructors that accept bytes, or when getting a string from &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;. No exception will be raised, but invalid byte sequences, when asked as chars, will use the unicode replacement char (value 0xFFFD). For example:</source>
          <target state="translated">UTF-8에 따라 문자열이 유효하지 않은 바이트 시퀀스 인 바이트를 준수하게 될 수 있습니다. 바이트를 허용하는 생성자 중 하나를 통해 문자열을 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; 거나 String.build 또는 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 에서 문자열을 가져올 때 이런 일이 발생할 수 있습니다 . 예외는 발생하지 않지만 문자로 요청 될 때 유효하지 않은 바이트 시퀀스는 유니 코드 대체 문자 (값 0xFFFD)를 사용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9cbcd261681d9cadbc46b4232613ef8ec29bb73b" translate="yes" xml:space="preserve">
          <source>String operations (&lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt;) will use this encoding.</source>
          <target state="translated">문자열 작업 ( &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#print(*objects:UNDERSCORE):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt; )은이 인코딩을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="86a9e723f5141bd9e9de234d177844436c74d225" translate="yes" xml:space="preserve">
          <source>String operations (&lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt;) will use this encoding.</source>
          <target state="translated">String operations ( &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#gets_to_end:String-instance-method&quot;&gt;#gets_to_end&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#read_char:Char?-instance-method&quot;&gt;#read_char&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#self-instance-method&quot;&gt;#&amp;lt;&amp;lt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#print(*objects:_):Nil-instance-method&quot;&gt;#print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;io#puts:Nil-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;io#printf(format_string,*args):Nil-instance-method&quot;&gt;#printf&lt;/a&gt;&lt;/code&gt; ) will use this encoding.</target>
        </trans-unit>
        <trans-unit id="bf9d59615ab88b1187ff0b1a75d2be0b78f2e842" translate="yes" xml:space="preserve">
          <source>String#%</source>
          <target state="translated">String#%</target>
        </trans-unit>
        <trans-unit id="adb2ef728be64cc5ae7f77b2dca54e3bc72503b5" translate="yes" xml:space="preserve">
          <source>String#*</source>
          <target state="translated">String#*</target>
        </trans-unit>
        <trans-unit id="3538c9ca677648d07599cdc93ff71c85282d2174" translate="yes" xml:space="preserve">
          <source>String#+</source>
          <target state="translated">String#+</target>
        </trans-unit>
        <trans-unit id="2a6f34e813333f3e6f2eaac5d89db4e84f8c9d1e" translate="yes" xml:space="preserve">
          <source>String#==</source>
          <target state="translated">String#==</target>
        </trans-unit>
        <trans-unit id="77adf2b062b7cce16345ae67aff4a489b150147f" translate="yes" xml:space="preserve">
          <source>String#=~</source>
          <target state="translated">String#=~</target>
        </trans-unit>
        <trans-unit id="a66e5be1f6b436ba791354847e28fcd59d01a50f" translate="yes" xml:space="preserve">
          <source>String#[]</source>
          <target state="translated">String#[]</target>
        </trans-unit>
        <trans-unit id="4acd178ed786c36933813c2962f94a98b415f7f5" translate="yes" xml:space="preserve">
          <source>String#[]?</source>
          <target state="translated">String#[]?</target>
        </trans-unit>
        <trans-unit id="7aca66c7ec7a4c792eb79f36bb1ecfb0a5e508ec" translate="yes" xml:space="preserve">
          <source>String#at</source>
          <target state="translated">String#at</target>
        </trans-unit>
        <trans-unit id="d6684c844378504eb0a529d2f126f069fcb86faa" translate="yes" xml:space="preserve">
          <source>String#dump</source>
          <target state="translated">String#dump</target>
        </trans-unit>
        <trans-unit id="58a147b57ee3d7b8ce2e5a62b4f8a24324e57c95" translate="yes" xml:space="preserve">
          <source>String#dup</source>
          <target state="translated">String#dup</target>
        </trans-unit>
        <trans-unit id="bee1f23d795ececf40655f5253b99a0c23f57797" translate="yes" xml:space="preserve">
          <source>String#gsub</source>
          <target state="translated">String#gsub</target>
        </trans-unit>
        <trans-unit id="8f39ad35aaf7d6814e612a044e188a8be56fae77" translate="yes" xml:space="preserve">
          <source>String#hash</source>
          <target state="translated">String#hash</target>
        </trans-unit>
        <trans-unit id="f6bd1d0ecc206a7ff38c45de6ca45fdcdfe80e64" translate="yes" xml:space="preserve">
          <source>String#scan</source>
          <target state="translated">String#scan</target>
        </trans-unit>
        <trans-unit id="62cb82806aec7298e04f2da5d68b7d2ed384a2fc" translate="yes" xml:space="preserve">
          <source>String#size</source>
          <target state="translated">String#size</target>
        </trans-unit>
        <trans-unit id="f198e79ddffd73d62247fb3fb08b92659b153f36" translate="yes" xml:space="preserve">
          <source>String#sub</source>
          <target state="translated">String#sub</target>
        </trans-unit>
        <trans-unit id="fa7d9008db0f24a966f1e1368e921eb65773eb34" translate="yes" xml:space="preserve">
          <source>String#succ</source>
          <target state="translated">String#succ</target>
        </trans-unit>
        <trans-unit id="80ca7a40ee28a4742b3114684c74c11a60ac2734" translate="yes" xml:space="preserve">
          <source>String#to_f</source>
          <target state="translated">String#to_f</target>
        </trans-unit>
        <trans-unit id="f08ae2b5ff529a9ed0784394f76e4c3cd516d998" translate="yes" xml:space="preserve">
          <source>String#to_i</source>
          <target state="translated">String#to_i</target>
        </trans-unit>
        <trans-unit id="a9641696d55f5e24ecd488d9a0ec86d805a32913" translate="yes" xml:space="preserve">
          <source>String#to_s</source>
          <target state="translated">String#to_s</target>
        </trans-unit>
        <trans-unit id="b25527b190fb8d46a7625aa75a36191ea85ec70b" translate="yes" xml:space="preserve">
          <source>String#tr</source>
          <target state="translated">String#tr</target>
        </trans-unit>
        <trans-unit id="5e665141ec524489f6df373157496aa8a974a79b" translate="yes" xml:space="preserve">
          <source>String.new</source>
          <target state="translated">String.new</target>
        </trans-unit>
        <trans-unit id="a3007b4184988c511c0736f42155bc22e5bef817" translate="yes" xml:space="preserve">
          <source>String::Builder</source>
          <target state="translated">String::Builder</target>
        </trans-unit>
        <trans-unit id="ca5c1232f69f80298f9c5b7d5205dccb4a63b728" translate="yes" xml:space="preserve">
          <source>String::Formatter::Flags</source>
          <target state="translated">String::Formatter::Flags</target>
        </trans-unit>
        <trans-unit id="4e6d7ce982792b9e859bed7e7d82dfe384cd92fe" translate="yes" xml:space="preserve">
          <source>StringPool</source>
          <target state="translated">StringPool</target>
        </trans-unit>
        <trans-unit id="028e695f99afd9461f5bd903c67571b9bcc5d379" translate="yes" xml:space="preserve">
          <source>StringPool#get</source>
          <target state="translated">StringPool#get</target>
        </trans-unit>
        <trans-unit id="5d4870f10160c47f605b07c54082600e8fa2568b" translate="yes" xml:space="preserve">
          <source>StringPool#size</source>
          <target state="translated">StringPool#size</target>
        </trans-unit>
        <trans-unit id="ddab53bc4a953da86e81270ff42afc38a8cb741a" translate="yes" xml:space="preserve">
          <source>StringPool.new</source>
          <target state="translated">StringPool.new</target>
        </trans-unit>
        <trans-unit id="6351d59fca01f76f44681083826bbfd5fe021e3c" translate="yes" xml:space="preserve">
          <source>StringScanner</source>
          <target state="translated">StringScanner</target>
        </trans-unit>
        <trans-unit id="54df0d813664e56aa7ce8fa20e0bac6c7495ba3c" translate="yes" xml:space="preserve">
          <source>StringScanner#[]</source>
          <target state="translated">StringScanner#[]</target>
        </trans-unit>
        <trans-unit id="92d87d07c447011e921ff96236271bcc7d0fd091" translate="yes" xml:space="preserve">
          <source>StringScanner#[]?</source>
          <target state="translated">StringScanner#[]?</target>
        </trans-unit>
        <trans-unit id="f527856b56142581aaf306632583e82291401f8f" translate="yes" xml:space="preserve">
          <source>StringScanner#eos?</source>
          <target state="translated">StringScanner#eos?</target>
        </trans-unit>
        <trans-unit id="a669b66ba5397ed7fad83baa2636a56c7e9370b0" translate="yes" xml:space="preserve">
          <source>StringScanner#peek</source>
          <target state="translated">StringScanner#peek</target>
        </trans-unit>
        <trans-unit id="381fa4ec3d87acb4fd0bc44e0945b5561edda8e8" translate="yes" xml:space="preserve">
          <source>StringScanner#rest</source>
          <target state="translated">StringScanner#rest</target>
        </trans-unit>
        <trans-unit id="c56ec7389f759d7a46d179a38e03125d18bb12b4" translate="yes" xml:space="preserve">
          <source>StringScanner#scan</source>
          <target state="translated">StringScanner#scan</target>
        </trans-unit>
        <trans-unit id="96677d034ecdc0e506bcd29cd32604eeea490201" translate="yes" xml:space="preserve">
          <source>StringScanner#skip</source>
          <target state="translated">StringScanner#skip</target>
        </trans-unit>
        <trans-unit id="7ae695e774e7f2d916b2ed3d24ba678751ad786f" translate="yes" xml:space="preserve">
          <source>StringScanner.new</source>
          <target state="translated">StringScanner.new</target>
        </trans-unit>
        <trans-unit id="c9f55eb2646872c3e46df6552b6413ee27bb5418" translate="yes" xml:space="preserve">
          <source>Strings in Crystal always contain UTF-8 encoded bytes. UTF-8 is a variable-length encoding: a character may be represented by several bytes, although characters in the ASCII range are always represented by a single byte. Because of this, indexing a string with &lt;code&gt;String#[]&lt;/code&gt; is not an &lt;code&gt;O(1)&lt;/code&gt; operation, as the bytes need to be decoded each time to find the character at the given position. There's an optimization that Crystal's &lt;code&gt;String&lt;/code&gt; does here: if it knows all the characters in the string are ASCII, then &lt;code&gt;String#[]&lt;/code&gt; can be implemented in &lt;code&gt;O(1)&lt;/code&gt;. However, this isn't generally true.</source>
          <target state="translated">Crystal의 문자열에는 항상 UTF-8로 인코딩 된 바이트가 포함됩니다. UTF-8은 가변 길이 인코딩입니다. ASCII 범위의 문자는 항상 단일 바이트로 표시되지만 문자는 여러 바이트로 표시 될 수 있습니다. 이 때문에 주어진 위치에서 문자를 찾을 때마다 바이트를 디코딩해야하므로 &lt;code&gt;String#[]&lt;/code&gt; 으로 문자열을 인덱싱하는 것은 &lt;code&gt;O(1)&lt;/code&gt; 연산 이 아닙니다 . Crystal의 &lt;code&gt;String&lt;/code&gt; 이 여기 에서 수행하는 최적화 가 있습니다. 문자열 의 모든 문자가 ASCII임을 알고 있으면 &lt;code&gt;O(1)&lt;/code&gt; 에서 &lt;code&gt;String#[]&lt;/code&gt; 을 구현할 수 있습니다 . 그러나 이것은 일반적으로 사실이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="a4ab848fe5c4b2e5f638f279c7f13cc481bac6da" translate="yes" xml:space="preserve">
          <source>Struct</source>
          <target state="translated">Struct</target>
        </trans-unit>
        <trans-unit id="81c31cf182397d9c37f278210e0ce7b78e7d635d" translate="yes" xml:space="preserve">
          <source>Struct#==</source>
          <target state="translated">Struct#==</target>
        </trans-unit>
        <trans-unit id="67114f09f51cbfacd7c89e98d906513d5149fe2d" translate="yes" xml:space="preserve">
          <source>Struct#hash</source>
          <target state="translated">Struct#hash</target>
        </trans-unit>
        <trans-unit id="451a1db56e1696a4b414c13b52da97e14b7c4ccb" translate="yes" xml:space="preserve">
          <source>Struct#to_s</source>
          <target state="translated">Struct#to_s</target>
        </trans-unit>
        <trans-unit id="66b9bcf6fa135918752a0ac296373b9fc45c7435" translate="yes" xml:space="preserve">
          <source>Structs</source>
          <target state="translated">Structs</target>
        </trans-unit>
        <trans-unit id="d0217f287a35a3c789e8b9b85217818d2239b271" translate="yes" xml:space="preserve">
          <source>Structs and modules can be generic too. When a module is generic you include it like this:</source>
          <target state="translated">구조와 모듈도 일반적 일 수 있습니다. 모듈이 일반적인 경우 다음과 같이 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="5a59e40faa2157f6f267fff6e2a5fad9be7ccd3d" translate="yes" xml:space="preserve">
          <source>Structs inherit from &lt;a href=&quot;https://crystal-lang.org/api/Value.html&quot;&gt;Value&lt;/a&gt; so they are allocated on the stack and passed by value: when passed to methods, returned from methods or assigned to variables, a copy of the value is actually passed (while classes inherit from &lt;a href=&quot;https://crystal-lang.org/api/Reference.html&quot;&gt;Reference&lt;/a&gt;, are allocated on the heap and passed by reference).</source>
          <target state="translated">Structs는 &lt;a href=&quot;https://crystal-lang.org/api/Value.html&quot;&gt;Value&lt;/a&gt; 에서 상속되어 스택에 할당되고 값으로 전달됩니다. 메소드에 전달되거나 메소드에서 리턴되거나 변수에 지정되면 값의 사본이 실제로 전달됩니다 (클래스에서 &lt;a href=&quot;https://crystal-lang.org/api/Reference.html&quot;&gt;Reference를&lt;/a&gt; 상속하는 동안 힙에 할당 됨). 참조로 전달).</target>
        </trans-unit>
        <trans-unit id="b1640e87fee1f7c068399bd22c6ae4ec87611d13" translate="yes" xml:space="preserve">
          <source>Structs inherit from &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; so they are allocated on the stack and passed by value. For this reason you should prefer using structs for immutable data types and/or stateless wrappers of other types.</source>
          <target state="translated">Structs는 &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 에서 상속 되므로 스택에 할당되어 값으로 전달됩니다. 이러한 이유로 변경 불가능한 데이터 유형 및 / 또는 다른 유형의 상태 비 저장 래퍼에 구조체를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c30e7315e30e8a97a5029fa8db523ce83f1132ef" translate="yes" xml:space="preserve">
          <source>Subclasses define this method to provide class-specific ordering.</source>
          <target state="translated">서브 클래스는 클래스 별 순서를 제공하기 위해이 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="abfb1f738cfbba99fc694afa9a8cf7d443fd89a2" translate="yes" xml:space="preserve">
          <source>Subclasses must implement this method to define the output pattern</source>
          <target state="translated">Subclasses must implement this method to define the output pattern</target>
        </trans-unit>
        <trans-unit id="b0af7ea5c3be2faec443efba701a373805e006f1" translate="yes" xml:space="preserve">
          <source>Subclasses must not override this method. Instead, they must define &lt;code&gt;&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt;, though usually the macro &lt;code&gt;&lt;a href=&quot;object#def_hash(*fields)-macro&quot;&gt;def_hash&lt;/a&gt;&lt;/code&gt; can be used to generate this method.</source>
          <target state="translated">서브 클래스는이 메소드를 대체해서는 안됩니다. 대신 &lt;code&gt;&lt;a href=&quot;object#def_hash(*fields)-macro&quot;&gt;def_hash&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; 정의해야 하지만 일반적으로 매크로 def_hash 를 사용하여이 메소드를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c6e1c62fa142523e8ce79682ce851be683a816a" translate="yes" xml:space="preserve">
          <source>Subclasses must not override this method. Instead, they must define &lt;code&gt;hash(hasher)&lt;/code&gt;, though usually the macro &lt;code&gt;def_hash&lt;/code&gt; can be used to generate this method.</source>
          <target state="translated">서브 클래스는이 메소드를 대체해서는 안됩니다. 대신, 일반적으로 매크로 &lt;code&gt;def_hash&lt;/code&gt; 를 사용하여이 메소드를 생성 할 수 있지만 &lt;code&gt;hash(hasher)&lt;/code&gt; 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e3206533141ba42df27f9248da23ed70de097e1f" translate="yes" xml:space="preserve">
          <source>Subclasses override this method to provide class-specific meaning.</source>
          <target state="translated">서브 클래스는 클래스 별 의미를 제공하기 위해이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="7c8cf84261f17414d41a19324152deb0638ecb13" translate="yes" xml:space="preserve">
          <source>Subcommands</source>
          <target state="translated">Subcommands</target>
        </trans-unit>
        <trans-unit id="28bfddc750c2720ae377accc5130103c38551458" translate="yes" xml:space="preserve">
          <source>Subcommands are any &lt;em&gt;flag&lt;/em&gt; passed which does not start with a dash. They cannot take arguments. When a subcommand is parsed, all subcommands are removed from the OptionParser, simulating a &quot;tree&quot; of subcommands. All flags remain valid. For a longer example, see the examples at the top of the page.</source>
          <target state="translated">Subcommands are any &lt;em&gt;flag&lt;/em&gt; passed which does not start with a dash. They cannot take arguments. When a subcommand is parsed, all subcommands are removed from the OptionParser, simulating a &quot;tree&quot; of subcommands. All flags remain valid. For a longer example, see the examples at the top of the page.</target>
        </trans-unit>
        <trans-unit id="8a7edcc11a484655a366910a3935da984c645801" translate="yes" xml:space="preserve">
          <source>Substitute entities</source>
          <target state="translated">대체 엔티티</target>
        </trans-unit>
        <trans-unit id="fd668b290889e717d0dd1500f4ccd50d2d3226f5" translate="yes" xml:space="preserve">
          <source>Substitutions expect the first argument to be a &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;namedtuple&quot;&gt;NamedTuple&lt;/a&gt;&lt;/code&gt; to resolve substitution names. Positional specifiers correspond to the positional values in the method arguments, or the array supplied as first argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615336f890ec7c35e13fd716be8f32860c7367b5" translate="yes" xml:space="preserve">
          <source>Subtle</source>
          <target state="translated">Subtle</target>
        </trans-unit>
        <trans-unit id="93805afd9e8eff09b1af8442e023abd1464fe1b3" translate="yes" xml:space="preserve">
          <source>Subtle.constant_time_byte_eq</source>
          <target state="translated">Subtle.constant_time_byte_eq</target>
        </trans-unit>
        <trans-unit id="456acd81714f4f2ea980aeb4cea1fb320cd52f24" translate="yes" xml:space="preserve">
          <source>Subtle.constant_time_compare</source>
          <target state="translated">Subtle.constant_time_compare</target>
        </trans-unit>
        <trans-unit id="f89160942ffa6c74c7956cc159cda445bf431858" translate="yes" xml:space="preserve">
          <source>Subtracting two results from this method equals to the time elapsed between both readings:</source>
          <target state="translated">이 방법에서 두 결과를 빼면 두 판독 값 사이의 경과 시간과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9165accd1bd403708cb92d10e85652c5f2b23fd8" translate="yes" xml:space="preserve">
          <source>Supplement it with details and usages after that.</source>
          <target state="translated">그 후 세부 사항과 사용법으로 보충하십시오.</target>
        </trans-unit>
        <trans-unit id="01b72006ed7bc91d7caf13e9bedb3382ba69c0bc" translate="yes" xml:space="preserve">
          <source>Supported &lt;em&gt;runners&lt;/em&gt; can be combined with Docker-based &lt;em&gt;runners&lt;/em&gt; using a &lt;a href=&quot;https://docs.travis-ci.com/user/customizing-the-build#build-matrix&quot;&gt;Build Matrix&lt;/a&gt;. This will allow us to run tests against &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;nightly&lt;/code&gt; and pinned releases.</source>
          <target state="translated">Supported &lt;em&gt;runners&lt;/em&gt; can be combined with Docker-based &lt;em&gt;runners&lt;/em&gt; using a &lt;a href=&quot;https://docs.travis-ci.com/user/customizing-the-build#build-matrix&quot;&gt;Build Matrix&lt;/a&gt;. This will allow us to run tests against &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;nightly&lt;/code&gt; and pinned releases.</target>
        </trans-unit>
        <trans-unit id="648d59d222bd5370e5c4bcd44eb3bd3e84cae18a" translate="yes" xml:space="preserve">
          <source>Supported compression methods in the current implementation.</source>
          <target state="translated">현재 구현에서 지원되는 압축 방법.</target>
        </trans-unit>
        <trans-unit id="f0ce247786925a0332961b7580dfbedb2d7b635f" translate="yes" xml:space="preserve">
          <source>Supported formats:</source>
          <target state="translated">지원되는 형식 :</target>
        </trans-unit>
        <trans-unit id="be8759e614c84bf4aa1ab490c6a68e3e469c7bdd" translate="yes" xml:space="preserve">
          <source>Supported types:</source>
          <target state="translated">지원되는 유형 :</target>
        </trans-unit>
        <trans-unit id="cf8b1772f4b75094c6f8d7fdf9b9411c9c48fa13" translate="yes" xml:space="preserve">
          <source>Suppress error reports</source>
          <target state="translated">오류 보고서 억제</target>
        </trans-unit>
        <trans-unit id="ff06e0fc6926f1904842f3b6aec80d678e37b607" translate="yes" xml:space="preserve">
          <source>Suppress warning reports</source>
          <target state="translated">경고 보고서 억제</target>
        </trans-unit>
        <trans-unit id="10c65f1a31ec942415bc3b4539555ba00373c6a5" translate="yes" xml:space="preserve">
          <source>Swaps the contents pointed at the offsets &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt;.</source>
          <target state="translated">오프셋 &lt;em&gt;i&lt;/em&gt; 및 &lt;em&gt;j를&lt;/em&gt; 가리키는 내용을 교체합니다 .</target>
        </trans-unit>
        <trans-unit id="d754b72782bf2cda2e1c29512fea3894ab59f788" translate="yes" xml:space="preserve">
          <source>Swaps the elements at &lt;em&gt;index0&lt;/em&gt; and &lt;em&gt;index1&lt;/em&gt; and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;index0&lt;/em&gt; 과 &lt;em&gt;index1&lt;/em&gt; 의 요소를 &lt;em&gt;교체&lt;/em&gt; 하고 &lt;code&gt;self&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ceb3569b7c1ff8baa30222474dea99b5dbe61ac0" translate="yes" xml:space="preserve">
          <source>Swaps the elements at &lt;em&gt;index0&lt;/em&gt; and &lt;em&gt;index1&lt;/em&gt; and returns &lt;code&gt;self&lt;/code&gt;. Raises an &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if either index is out of bounds.</source>
          <target state="translated">&lt;em&gt;index0&lt;/em&gt; 과 &lt;em&gt;index1&lt;/em&gt; 의 요소를 &lt;em&gt;교체&lt;/em&gt; 하고 &lt;code&gt;self&lt;/code&gt; 를 반환합니다 . 발생시킵니다 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; 중 인덱스가 범위 외에있는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="bfbb293e8c5615a6178594a59e60d2e573efa4be" translate="yes" xml:space="preserve">
          <source>Swaps the items at the indices &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt;.</source>
          <target state="translated">인덱스 &lt;em&gt;i&lt;/em&gt; 및 &lt;em&gt;j&lt;/em&gt; 의 항목을 교체합니다 .</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="3463851de5fb883847b82857695b1ddeb72cecc7" translate="yes" xml:space="preserve">
          <source>Symbol#!=</source>
          <target state="translated">Symbol#!=</target>
        </trans-unit>
        <trans-unit id="7fbe74272fe45f99ee6092f6290a9635f92e6ccf" translate="yes" xml:space="preserve">
          <source>Symbol#==</source>
          <target state="translated">Symbol#==</target>
        </trans-unit>
        <trans-unit id="3e57f29b6a257ebc80697d61435c7bdc636f8a88" translate="yes" xml:space="preserve">
          <source>Symbol#hash</source>
          <target state="translated">Symbol#hash</target>
        </trans-unit>
        <trans-unit id="5936f7a4b9639143426992b4d85ef9c93db68906" translate="yes" xml:space="preserve">
          <source>Symbol#to_i</source>
          <target state="translated">Symbol#to_i</target>
        </trans-unit>
        <trans-unit id="1d6ae9e47e541c815b605a09c7f5a819093962f3" translate="yes" xml:space="preserve">
          <source>Symbol#to_s</source>
          <target state="translated">Symbol#to_s</target>
        </trans-unit>
        <trans-unit id="939324897a404935b4773008ad50ffc6962ada1b" translate="yes" xml:space="preserve">
          <source>Symbols are interpreted at compile time and cannot be created dynamically. The only way to create a Symbol is by using a symbol literal, denoted by a colon (&lt;code&gt;:&lt;/code&gt;) followed by an identifier. The identifier may optionally be enclosed in double quotes (&lt;code&gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">심볼은 컴파일 타임에 해석되며 동적으로 생성 될 수 없습니다. (심볼을 생성 할 수있는 유일한 방법은 콜론으로 표시된 기호 문자를 사용하는 것이다 &lt;code&gt;:&lt;/code&gt; 식별자 뒤에). 식별자는 선택적으로 큰 따옴표 ( &lt;code&gt;&quot;&lt;/code&gt; )로 묶을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6b98b3f5ef265db891c8d3e54714c8307e0ffb8" translate="yes" xml:space="preserve">
          <source>Symlinks are dereferenced, so that only the permissions of the symlink destination are changed, never the permissions of the symlink itself.</source>
          <target state="translated">심볼릭 링크는 역 참조되므로 심볼릭 링크 대상의 권한 만 변경되고 심볼릭 링크 자체의 권한은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4aad2886550f8fd9b5d9280ff55e4a2bc857b7cf" translate="yes" xml:space="preserve">
          <source>Symmetric Difference: returns a new set &lt;code&gt;(self - other) | (other - self)&lt;/code&gt;.</source>
          <target state="translated">대칭 차이 : 새 세트를 반환합니다 &lt;code&gt;(self - other) | (other - self)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5c7630c10f033adaec6fd4d3e2ec5ce5c3cbb01" translate="yes" xml:space="preserve">
          <source>Symmetric Difference: returns a new set &lt;code&gt;(self - other) | (other - self)&lt;/code&gt;. Equivalently, returns &lt;code&gt;(self | other) - (self &amp;amp; other)&lt;/code&gt;.</source>
          <target state="translated">대칭 차이 : 새 세트를 반환합니다 &lt;code&gt;(self - other) | (other - self)&lt;/code&gt; . 마찬가지로 &lt;code&gt;(self | other) - (self &amp;amp; other)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="748d95b901f8be5b30b5092d26ad032977d1dff6" translate="yes" xml:space="preserve">
          <source>Syntax and Semantics</source>
          <target state="translated">구문과 의미</target>
        </trans-unit>
        <trans-unit id="bc0792d8dc81e8aa30b987246a5ce97c40cd6833" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="translated">System</target>
        </trans-unit>
        <trans-unit id="389c90b7710399e1b74432f5746fc9142667ee6b" translate="yes" xml:space="preserve">
          <source>System CPU time</source>
          <target state="translated">시스템 CPU 시간</target>
        </trans-unit>
        <trans-unit id="95708bf687e1d14c718bbc22f550c5abfd986004" translate="yes" xml:space="preserve">
          <source>System CPU time of children</source>
          <target state="translated">어린이의 시스템 CPU 시간</target>
        </trans-unit>
        <trans-unit id="1d68e3fe123d89531fca8376492763c8dc6eec85" translate="yes" xml:space="preserve">
          <source>System::Group</source>
          <target state="translated">System::Group</target>
        </trans-unit>
        <trans-unit id="11abe73f3fdbb73c796c21d5fbc3afff268b86fb" translate="yes" xml:space="preserve">
          <source>System::Group::NotFoundError</source>
          <target state="translated">System::Group::NotFoundError</target>
        </trans-unit>
        <trans-unit id="fd8897870b855d6f4953dfa82cbce4e13d1db8aa" translate="yes" xml:space="preserve">
          <source>System::User</source>
          <target state="translated">System::User</target>
        </trans-unit>
        <trans-unit id="0b266081419ab07c7bad649d93a28068df3014d6" translate="yes" xml:space="preserve">
          <source>System::User::NotFoundError</source>
          <target state="translated">System::User::NotFoundError</target>
        </trans-unit>
        <trans-unit id="47e68638ef3b94e3c34563e1179f97e827fb9bec" translate="yes" xml:space="preserve">
          <source>SystemError</source>
          <target state="translated">SystemError</target>
        </trans-unit>
        <trans-unit id="1834acdcb7626e132cf5f3c2671ffa435a9ea97b" translate="yes" xml:space="preserve">
          <source>SystemError::ClassMethods</source>
          <target state="translated">SystemError::ClassMethods</target>
        </trans-unit>
        <trans-unit id="f544fb304c83e23652a63e1bb1b28f4fcc7f6ac0" translate="yes" xml:space="preserve">
          <source>TCP</source>
          <target state="translated">TCP</target>
        </trans-unit>
        <trans-unit id="cbbb4c53b04fe31b9dac2fe90c745116d0c1c256" translate="yes" xml:space="preserve">
          <source>TCP socket with TLS/SSL: &lt;code&gt;&lt;a href=&quot;server#bind_tls(host:String,port:Int32,context:OpenSSL::SSL::Context::Server,reuse_port:Bool=false):Socket::IPAddress-instance-method&quot;&gt;#bind_tls&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">TLS / SSL을 사용하는 TCP 소켓 : &lt;code&gt;&lt;a href=&quot;server#bind_tls(host:String,port:Int32,context:OpenSSL::SSL::Context::Server,reuse_port:Bool=false):Socket::IPAddress-instance-method&quot;&gt;#bind_tls&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42d46585f42cc6e9117de6ec3a0fbbb71e6f5123" translate="yes" xml:space="preserve">
          <source>TCP socket: &lt;code&gt;&lt;a href=&quot;server#bind_tcp(host:String,port:Int32,reuse_port:Bool=false):Socket::IPAddress-instance-method&quot;&gt;#bind_tcp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;server#bind_unused_port(host:String=Socket::IPAddress::LOOPBACK,reuse_port:Bool=false):Socket::IPAddress-instance-method&quot;&gt;#bind_unused_port&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">TCP 소켓 : &lt;code&gt;&lt;a href=&quot;server#bind_tcp(host:String,port:Int32,reuse_port:Bool=false):Socket::IPAddress-instance-method&quot;&gt;#bind_tcp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;server#bind_unused_port(host:String=Socket::IPAddress::LOOPBACK,reuse_port:Bool=false):Socket::IPAddress-instance-method&quot;&gt;#bind_unused_port&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="986bd55891fdd953ab6471a3fe44bcc7a8a9e0de" translate="yes" xml:space="preserve">
          <source>TCPServer</source>
          <target state="translated">TCPServer</target>
        </trans-unit>
        <trans-unit id="07a502fae35132863f6ac0ebbbe537f82c7bdd39" translate="yes" xml:space="preserve">
          <source>TCPSocket</source>
          <target state="translated">TCPSocket</target>
        </trans-unit>
        <trans-unit id="43160efa494fd830f727f0112df1c005f1a1d4fa" translate="yes" xml:space="preserve">
          <source>TLS sockets need a context, potentially with keys (required for servers) and configuration.</source>
          <target state="translated">TLS 소켓에는 키 (서버에 필요) 및 구성이 포함 된 컨텍스트가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4851e7f476011aefe688251b3047973fe703a0b1" translate="yes" xml:space="preserve">
          <source>TLS sockets will wrap the underlying TCP socket, and any further communication must happen through the &lt;code&gt;&lt;a href=&quot;openssl/ssl/socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt; only.</source>
          <target state="translated">TLS 소켓은 기본 TCP 소켓을 래핑하며 추가 통신은 &lt;code&gt;&lt;a href=&quot;openssl/ssl/socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt; 통해서만 발생해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="ece70ebfeb38502b516473afe814d0b4fe2fd86e" translate="yes" xml:space="preserve">
          <source>TODO Ensure correctness in local time-line.</source>
          <target state="translated">TODO 현지 시간표의 정확성을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="5b40062b64a9c8cbc535922bc9d87ab3703f3054" translate="yes" xml:space="preserve">
          <source>TODO check hash equality for numbers &amp;gt;= 2**63</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5044ec318342cbedbd294b86723dd2226a06a3" translate="yes" xml:space="preserve">
          <source>TODO eventually update to literals once UInt128 bit support is finished</source>
          <target state="translated">UInt128 비트 지원이 완료되면 TODO는 리터럴로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="d66f099139abe8f38bd793bda79149d36c462bed" translate="yes" xml:space="preserve">
          <source>TODO improve this</source>
          <target state="translated">TODO 개선</target>
        </trans-unit>
        <trans-unit id="c193ee18616f0c48f4e4294ae505a899c7a9ee30" translate="yes" xml:space="preserve">
          <source>Tagging an example group (&lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt;) extends to all of the contained examples.</source>
          <target state="translated">Tagging an example group ( &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; ) extends to all of the contained examples.</target>
        </trans-unit>
        <trans-unit id="eb97a291d2c8982a132df07061a35057c148527c" translate="yes" xml:space="preserve">
          <source>Tagging specs</source>
          <target state="translated">Tagging specs</target>
        </trans-unit>
        <trans-unit id="cdc576a5413f851a60b7bbb1761b9988af4bc940" translate="yes" xml:space="preserve">
          <source>Tags can be used to group specs, allowing to only run a subset of specs when providing a &lt;code&gt;--tag&lt;/code&gt; argument to the spec runner (see &lt;a href=&quot;../using_the_compiler/index&quot;&gt;Using the compiler&lt;/a&gt;).</source>
          <target state="translated">Tags can be used to group specs, allowing to only run a subset of specs when providing a &lt;code&gt;--tag&lt;/code&gt; argument to the spec runner (see &lt;a href=&quot;../using_the_compiler/index&quot;&gt;Using the compiler&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="bdff15697644f9c4d128c904e3f500d6719d7c7e" translate="yes" xml:space="preserve">
          <source>Takes optional &lt;em&gt;quoting&lt;/em&gt; argument to define quote behavior.</source>
          <target state="translated">견적 행동을 정의하기 위해 선택적인 &lt;em&gt;인용&lt;/em&gt; 인수를 취합니다 .</target>
        </trans-unit>
        <trans-unit id="3706acb89fe6f19cf53400d4407bbbefd34c51c8" translate="yes" xml:space="preserve">
          <source>Takes optional &lt;em&gt;separator&lt;/em&gt; and &lt;em&gt;quote_char&lt;/em&gt; arguments for defining non-standard csv cell separators and quote characters.</source>
          <target state="translated">비표준 csv 셀 구분 기호 및 따옴표 문자를 정의하기 위해 선택적인 &lt;em&gt;separator&lt;/em&gt; 및 &lt;em&gt;quote_char&lt;/em&gt; 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="689d8291083e443a67d51e0b28ccbc5207235a7e" translate="yes" xml:space="preserve">
          <source>Tallies the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e36de2bc28d9b6cea47703afd9b79671a0ea24" translate="yes" xml:space="preserve">
          <source>Tallies the collection. Returns a hash where the keys are the elements and the values are numbers of elements in the collection that correspond to the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af06f8279f0b495fcc89b4a07a090521beaf803" translate="yes" xml:space="preserve">
          <source>Tallys the collection.</source>
          <target state="translated">컬렉션을 집계합니다.</target>
        </trans-unit>
        <trans-unit id="91a77a4aeb11a638443180b8ab91cfe078452149" translate="yes" xml:space="preserve">
          <source>Tallys the collection. Returns a hash where the keys are the elements and the values are numbers of elements in the collection that correspond to the key.</source>
          <target state="translated">컬렉션을 집계합니다. 키가 요소이고 값이 컬렉션의 키에 해당하는 요소 수인 해시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="62ddbf4dbd3cf838754be9a27e81c1532f64c8e7" translate="yes" xml:space="preserve">
          <source>Target#create_target_machine</source>
          <target state="translated">Target#create_target_machine</target>
        </trans-unit>
        <trans-unit id="a8d4349b68a60ddef82bb39b57b7fc2bd0d18f36" translate="yes" xml:space="preserve">
          <source>Target#description</source>
          <target state="translated">Target#description</target>
        </trans-unit>
        <trans-unit id="6fafc45d8c850b729d598f102cb64934cf8467f2" translate="yes" xml:space="preserve">
          <source>Target#inspect</source>
          <target state="translated">Target#inspect</target>
        </trans-unit>
        <trans-unit id="f6cefc7a2564ba6d94ca0601b988c44e0fa978e8" translate="yes" xml:space="preserve">
          <source>Target#name</source>
          <target state="translated">Target#name</target>
        </trans-unit>
        <trans-unit id="f2cd870aaad21619a58c3cd5d0035329eb613ef8" translate="yes" xml:space="preserve">
          <source>Target#to_s</source>
          <target state="translated">Target#to_s</target>
        </trans-unit>
        <trans-unit id="904000c897e329b27595dc59bc71e02396180db5" translate="yes" xml:space="preserve">
          <source>Target#to_unsafe</source>
          <target state="translated">Target#to_unsafe</target>
        </trans-unit>
        <trans-unit id="9e93ad9291490d6963491390e41d7f6829e97f26" translate="yes" xml:space="preserve">
          <source>Target.each</source>
          <target state="translated">Target.each</target>
        </trans-unit>
        <trans-unit id="1b169e5ce71324bbd73a717c4cbb88e8c37beaf9" translate="yes" xml:space="preserve">
          <source>Target.first</source>
          <target state="translated">Target.first</target>
        </trans-unit>
        <trans-unit id="f21648f450af0f4e052a5a38dfc03cf4dd45239b" translate="yes" xml:space="preserve">
          <source>Target.first?</source>
          <target state="translated">Target.first?</target>
        </trans-unit>
        <trans-unit id="73ad151f0f3fae594c0e810c2569f7de4f829c1e" translate="yes" xml:space="preserve">
          <source>Target.from_triple</source>
          <target state="translated">Target.from_triple</target>
        </trans-unit>
        <trans-unit id="e3db0046986729c2a0d04acce6ac43836afd3347" translate="yes" xml:space="preserve">
          <source>Target.new</source>
          <target state="translated">Target.new</target>
        </trans-unit>
        <trans-unit id="f6cb3cc3746189eca1bce7c1edd84da028d840bf" translate="yes" xml:space="preserve">
          <source>TargetData</source>
          <target state="translated">TargetData</target>
        </trans-unit>
        <trans-unit id="3a4d55d5d5da338fab7fd548bf024be38f5b06e1" translate="yes" xml:space="preserve">
          <source>TargetData#abi_alignment</source>
          <target state="translated">TargetData#abi_alignment</target>
        </trans-unit>
        <trans-unit id="6026fd4114e55513f7a320bce4a89df3b196c3df" translate="yes" xml:space="preserve">
          <source>TargetData#abi_size</source>
          <target state="translated">TargetData#abi_size</target>
        </trans-unit>
        <trans-unit id="f33f32aa4365f079b9d0b96dbcad788d30c6c6c8" translate="yes" xml:space="preserve">
          <source>TargetData#offset_of_element</source>
          <target state="translated">TargetData#offset_of_element</target>
        </trans-unit>
        <trans-unit id="6c306ceef1d59922b49c6a12b5d621c021a802db" translate="yes" xml:space="preserve">
          <source>TargetData#size_in_bits</source>
          <target state="translated">TargetData#size_in_bits</target>
        </trans-unit>
        <trans-unit id="3ba8688b92809801ca995cef2a8615f28f3f6df8" translate="yes" xml:space="preserve">
          <source>TargetData#size_in_bytes</source>
          <target state="translated">TargetData#size_in_bytes</target>
        </trans-unit>
        <trans-unit id="7aefcb488147bfd64b3e033b5082b20c02bcc610" translate="yes" xml:space="preserve">
          <source>TargetData#to_data_layout_string</source>
          <target state="translated">TargetData#to_data_layout_string</target>
        </trans-unit>
        <trans-unit id="fbb6e0e6e8d8f035726c9b51393db3d7f3a17fc7" translate="yes" xml:space="preserve">
          <source>TargetData#to_unsafe</source>
          <target state="translated">TargetData#to_unsafe</target>
        </trans-unit>
        <trans-unit id="4b46a4e7a97cedade170ef2d42fe23d4098ed84f" translate="yes" xml:space="preserve">
          <source>TargetData.new</source>
          <target state="translated">TargetData.new</target>
        </trans-unit>
        <trans-unit id="707fc85ffa56493bdc291af238020c3b33119d2d" translate="yes" xml:space="preserve">
          <source>TargetMachine</source>
          <target state="translated">TargetMachine</target>
        </trans-unit>
        <trans-unit id="fc681daf6482717542284da384b71ee78b171852" translate="yes" xml:space="preserve">
          <source>TargetMachine#abi</source>
          <target state="translated">TargetMachine#abi</target>
        </trans-unit>
        <trans-unit id="5c16b7f404fd8fd441736fd95c7995b0404ab3d8" translate="yes" xml:space="preserve">
          <source>TargetMachine#data_layout</source>
          <target state="translated">TargetMachine#data_layout</target>
        </trans-unit>
        <trans-unit id="1e3a6f297dd45579cc201bc71723207f4082d7e1" translate="yes" xml:space="preserve">
          <source>TargetMachine#emit_asm_to_file</source>
          <target state="translated">TargetMachine#emit_asm_to_file</target>
        </trans-unit>
        <trans-unit id="64d88a2364ba003dc36692a1867daafe1ced5ce0" translate="yes" xml:space="preserve">
          <source>TargetMachine#emit_obj_to_file</source>
          <target state="translated">TargetMachine#emit_obj_to_file</target>
        </trans-unit>
        <trans-unit id="6e9ab0c090d3dee7a18b932561f6ca5ec39a8c7c" translate="yes" xml:space="preserve">
          <source>TargetMachine#finalize</source>
          <target state="translated">TargetMachine#finalize</target>
        </trans-unit>
        <trans-unit id="2b2bdfdc960025ca5a7f4acdf52fd878490eb70d" translate="yes" xml:space="preserve">
          <source>TargetMachine#target</source>
          <target state="translated">TargetMachine#target</target>
        </trans-unit>
        <trans-unit id="44a54b357195662cd40c727ad9245d8ad2ae1389" translate="yes" xml:space="preserve">
          <source>TargetMachine#to_unsafe</source>
          <target state="translated">TargetMachine#to_unsafe</target>
        </trans-unit>
        <trans-unit id="45c5e5c94f26688748c034ce614cc491a437c17f" translate="yes" xml:space="preserve">
          <source>TargetMachine#triple</source>
          <target state="translated">TargetMachine#triple</target>
        </trans-unit>
        <trans-unit id="2867617d5c094c3b131fde9affc74154e4947bb6" translate="yes" xml:space="preserve">
          <source>TargetMachine.new</source>
          <target state="translated">TargetMachine.new</target>
        </trans-unit>
        <trans-unit id="a42538c417b8d96d8b65aa3d9de7a16b3dd71173" translate="yes" xml:space="preserve">
          <source>Telling the Time</source>
          <target state="translated">시간을 말하는</target>
        </trans-unit>
        <trans-unit id="06930aca8514a6d838d30e0dcffa77b1edc4b8d1" translate="yes" xml:space="preserve">
          <source>Tells the compiler how to link a C library. This is explained in the &lt;a href=&quot;../c_bindings/lib&quot;&gt;lib&lt;/a&gt; section.</source>
          <target state="translated">컴파일러에게 C 라이브러리를 연결하는 방법을 알려줍니다. 이것은 &lt;a href=&quot;../c_bindings/lib&quot;&gt;lib&lt;/a&gt; 섹션에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c725f2b6c132622e8c7d9438ea76bc1cfedcaaab" translate="yes" xml:space="preserve">
          <source>Tells the compiler to never inline a method call. This has no effect if the method yields, since functions which yield are always inlined.</source>
          <target state="translated">컴파일러에게 메소드 호출을 인라인하지 않도록 지시합니다. 수율 함수는 항상 인라인되므로 메소드가 수율에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="657c52b7b8d716af4b8e080b28d867b83586e034" translate="yes" xml:space="preserve">
          <source>Tells the previously bound socket to listen for incoming connections.</source>
          <target state="translated">이전에 바인드 된 소켓이 들어오는 연결을 수신하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="79e7d162f98928466d5f18bfce0441c9b4e8e044" translate="yes" xml:space="preserve">
          <source>Tells this class to decode JSON by using a field as a discriminator.</source>
          <target state="translated">Tells this class to decode JSON by using a field as a discriminator.</target>
        </trans-unit>
        <trans-unit id="a2d8038581b9017d2947dfe52f75392cd0b60233" translate="yes" xml:space="preserve">
          <source>Tells this class to decode YAML by using a field as a discriminator.</source>
          <target state="translated">Tells this class to decode YAML by using a field as a discriminator.</target>
        </trans-unit>
        <trans-unit id="0779c3234a0ebcf8bf12d2826604e1913cf9d8b0" translate="yes" xml:space="preserve">
          <source>Temporary Files</source>
          <target state="translated">임시 파일</target>
        </trans-unit>
        <trans-unit id="29bdf997819e21e09376136c5c43296eb49d8461" translate="yes" xml:space="preserve">
          <source>Terminate the current process immediately.</source>
          <target state="translated">현재 프로세스를 즉시 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="43c442c0c26cab714e7152bcef75e41986eb00db" translate="yes" xml:space="preserve">
          <source>Terminate the current process immediately. All open files, pipes and sockets are flushed and closed, all child processes are inherited by PID 1. This does not run any handlers registered with &lt;code&gt;at_exit&lt;/code&gt;, use &lt;code&gt;::exit&lt;/code&gt; for that.</source>
          <target state="translated">현재 프로세스를 즉시 종료하십시오. 열려있는 모든 파일, 파이프 및 소켓은 플러시되고 닫히고 모든 자식 프로세스는 PID 1에 의해 상속됩니다. 이것은 &lt;code&gt;at_exit&lt;/code&gt; 에 등록 된 핸들러를 실행하지 않으며 &lt;code&gt;::exit&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd22d7db8db94f88c86a911452a508ca6c7b10ac" translate="yes" xml:space="preserve">
          <source>Terminates execution immediately, printing &lt;em&gt;message&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDERR&quot;&gt;STDERR&lt;/a&gt;&lt;/code&gt; and then calling &lt;code&gt;&lt;a href=&quot;toplevel#exit(status=0):NoReturn-class-method&quot;&gt;exit(status)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;toplevel#STDERR&quot;&gt;STDERR&lt;/a&gt;&lt;/code&gt; 에&lt;em&gt; 메시지&lt;/em&gt; 를 인쇄 한 다음 &lt;code&gt;&lt;a href=&quot;toplevel#exit(status=0):NoReturn-class-method&quot;&gt;exit(status)&lt;/a&gt;&lt;/code&gt; 를 호출 하여 즉시 실행을 종료 합니다.</target>
        </trans-unit>
        <trans-unit id="b3f2a43164090b39aa67e14c0f6af94b73931eb9" translate="yes" xml:space="preserve">
          <source>Terminates execution immediately, returning the given status code to the invoking environment.</source>
          <target state="translated">주어진 상태 코드를 호출 환경으로 리턴하여 실행을 즉시 종료합니다.</target>
        </trans-unit>
        <trans-unit id="63cc67592cd6852eef6ef792d32fd7159567c6c3" translate="yes" xml:space="preserve">
          <source>Termios</source>
          <target state="translated">Termios</target>
        </trans-unit>
        <trans-unit id="45e71ddbe9ae8014eeae20db1088630e66811aab" translate="yes" xml:space="preserve">
          <source>Ternary if</source>
          <target state="translated">삼항 경우</target>
        </trans-unit>
        <trans-unit id="921ee8fbfb39999fc604ed26ec5b55440701fb10" translate="yes" xml:space="preserve">
          <source>Ternary operators</source>
          <target state="translated">Ternary operators</target>
        </trans-unit>
        <trans-unit id="65ee0a3081b04a3767aac16a27fcc5f347385422" translate="yes" xml:space="preserve">
          <source>Test cases that have been defined or outlined but are not yet expected to work can be defined using &lt;code&gt;pending&lt;/code&gt; instead of &lt;code&gt;it&lt;/code&gt;. They will not be run but show up in the spec report as pending.</source>
          <target state="translated">작업에 정의 또는 설명하지만 아직 예상되지 않는 한 테스트 케이스를 사용하여 정의 할 수 있습니다 &lt;code&gt;pending&lt;/code&gt; 대신 &lt;code&gt;it&lt;/code&gt; . 실행되지 않지만 사양 보고서에 보류 중으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="fd8002a1b86fbcfb425b3db3a2f1784e1595d5a3" translate="yes" xml:space="preserve">
          <source>Test files are structured by use of the &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; methods. Typically a top level &lt;code&gt;describe&lt;/code&gt; defines the &lt;code&gt;outer&lt;/code&gt; unit (such as a class) that is to be tested by the spec. Further &lt;code&gt;describe&lt;/code&gt; calls can be nested within the outer unit to specify smaller units under test (such as individual methods). &lt;code&gt;describe&lt;/code&gt; can also be used to set up a certain context - think empty &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; versus &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; with elements. The &lt;code&gt;context&lt;/code&gt; method behaves just like the &lt;code&gt;describe&lt;/code&gt; method and may be used instead, to emphasize context to the reader.</source>
          <target state="translated">테스트 파일은 &lt;code&gt;describe&lt;/code&gt; 또는 &lt;code&gt;context&lt;/code&gt; 메소드 를 사용하여 구성됩니다 . 일반적으로 최상위 레벨 &lt;code&gt;describe&lt;/code&gt; 은 스펙에서 테스트 할 &lt;code&gt;outer&lt;/code&gt; 장치 (예 : 클래스)를 정의합니다 . 추가 &lt;code&gt;describe&lt;/code&gt; 호출은 외부 장치 내에 중첩되어 테스트중인 더 작은 단위 (예 : 개별 방법)를 지정할 수 있습니다. &lt;code&gt;describe&lt;/code&gt; 는 특정 컨텍스트를 설정하는 데 사용될 수도 있습니다 . 요소가 있는 빈 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 를 생각하십시오 . &lt;code&gt;context&lt;/code&gt; 단지 추천 방법은 행동한다 &lt;code&gt;describe&lt;/code&gt; 방법을 독자에게 컨텍스트를 강조하기 위해 대신 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="f598ed36dba4c8c6b3fab44321e9234af5b8ec83" translate="yes" xml:space="preserve">
          <source>Test your code. All of it. It's the only way for anyone, including you, to know if it works.</source>
          <target state="translated">코드를 테스트하십시오. 그것의 모든. 그것은 당신을 포함한 모든 사람이 그것이 작동하는지 알 수있는 유일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="89c3b75baa0610e97e8d1306bfe5860aca31ab87" translate="yes" xml:space="preserve">
          <source>Testing Crystal Code</source>
          <target state="translated">크리스탈 코드 테스트</target>
        </trans-unit>
        <trans-unit id="39df0a54247910c345a23c7008391a01bbcda243" translate="yes" xml:space="preserve">
          <source>Testing the Code</source>
          <target state="translated">코드 테스트</target>
        </trans-unit>
        <trans-unit id="9d38b697d06c1d3ba20818c4ad54c2d4ecea2b20" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;em&gt;str&lt;/em&gt; matches &lt;em&gt;regex&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;str이 &lt;/em&gt;&lt;em&gt;정규식&lt;/em&gt; 과 일치 하는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="5f41bfb3d0fd801a3e25f17f9cb5d3baf8dfb320" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;em&gt;str&lt;/em&gt; matches &lt;em&gt;regex&lt;/em&gt;. If successful, it returns the position of the first match. If unsuccessful, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;str이 &lt;/em&gt;&lt;em&gt;정규식&lt;/em&gt; 과 일치 하는지 테스트합니다 . 성공하면 첫 번째 일치 위치를 반환합니다. 실패하면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e7fbc22a62bbc6fb42ad1d97dd7d23fc32f5e95e" translate="yes" xml:space="preserve">
          <source>Text blocks, for example to show program output, must be surrounded with triple backticks followed by the &quot;text&quot; keyword.</source>
          <target state="translated">예를 들어 프로그램 출력을 표시하기위한 텍스트 블록은 &quot;text&quot;키워드 뒤에 세 개의 백틱으로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc6148f0db39d0dbd0d91983cabcdf87bec3e7de" translate="yes" xml:space="preserve">
          <source>Text content can happen inside of an &lt;code&gt;&lt;a href=&quot;builder#element(__name__:String,**attributes,&amp;amp;)-instance-method&quot;&gt;#element&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;builder#attribute(name:String,value):Nil-instance-method&quot;&gt;#attribute&lt;/a&gt;&lt;/code&gt; value, &lt;code&gt;&lt;a href=&quot;builder#cdata(&amp;amp;)-instance-method&quot;&gt;#cdata&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;builder#dtd(name:String,pubid:String,sysid:String,subset:String?=nil):Nil-instance-method&quot;&gt;#dtd&lt;/a&gt;&lt;/code&gt;, etc.</source>
          <target state="translated">Text content can happen inside of an &lt;code&gt;&lt;a href=&quot;builder#element(__name__:String,**attributes,&amp;amp;)-instance-method&quot;&gt;#element&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;builder#attribute(name:String,value):Nil-instance-method&quot;&gt;#attribute&lt;/a&gt;&lt;/code&gt; value, &lt;code&gt;&lt;a href=&quot;builder#cdata(&amp;amp;)-instance-method&quot;&gt;#cdata&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;builder#dtd(name:String,pubid:String,sysid:String,subset:String?=nil):Nil-instance-method&quot;&gt;#dtd&lt;/a&gt;&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="d0df1dd4461b6223693879e474a5691f4d9f633b" translate="yes" xml:space="preserve">
          <source>Text content can happen inside of an &lt;code&gt;&lt;a href=&quot;builder#element(__name__:String,**attributes,&amp;amp;block)-instance-method&quot;&gt;#element&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;builder#attribute(name:String,value):Nil-instance-method&quot;&gt;#attribute&lt;/a&gt;&lt;/code&gt; value, &lt;code&gt;&lt;a href=&quot;builder#cdata(&amp;amp;block)-instance-method&quot;&gt;#cdata&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;builder#dtd(name:String,pubid:String,sysid:String,subset:String?=nil):Nil-instance-method&quot;&gt;#dtd&lt;/a&gt;&lt;/code&gt;, etc.</source>
          <target state="translated">텍스트 내용은 &lt;code&gt;&lt;a href=&quot;builder#element(__name__:String,**attributes,&amp;amp;block)-instance-method&quot;&gt;#element&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;builder#attribute(name:String,value):Nil-instance-method&quot;&gt;#attribute&lt;/a&gt;&lt;/code&gt; value, &lt;code&gt;&lt;a href=&quot;builder#cdata(&amp;amp;block)-instance-method&quot;&gt;#cdata&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;builder#dtd(name:String,pubid:String,sysid:String,subset:String?=nil):Nil-instance-method&quot;&gt;#dtd&lt;/a&gt;&lt;/code&gt; 등에서 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="660f799d669d5b7231f67c281132ba4f5cffb5db" translate="yes" xml:space="preserve">
          <source>Text file busy</source>
          <target state="translated">바쁜 텍스트 파일</target>
        </trans-unit>
        <trans-unit id="1daec180566cb1c61d951fe6cf12eae00b04172d" translate="yes" xml:space="preserve">
          <source>Thank you very much!</source>
          <target state="translated">대단히 감사합니다!</target>
        </trans-unit>
        <trans-unit id="45ce50c7b211d702b363bfb840bee66580509d70" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;T&lt;/code&gt; becomes the type that was effectively used to instantiate the method.</source>
          <target state="translated">즉, &lt;code&gt;T&lt;/code&gt; 는 방법을 인스턴스화하는 데 효과적으로 사용 된 유형이됩니다.</target>
        </trans-unit>
        <trans-unit id="8131a4930790d5f701bee6020847e1771585141a" translate="yes" xml:space="preserve">
          <source>That is, a variable&amp;rsquo;s type is the type of the last expression(s) assigned to it.</source>
          <target state="translated">즉, 변수 유형은 마지막으로 지정된 표현식의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="26b424b568e13ce68218525746f47412e8cc662e" translate="yes" xml:space="preserve">
          <source>That is, for every element that is an array or an iterator, extract its elements into the new array.</source>
          <target state="translated">즉, 배열 또는 반복자 인 모든 요소에 대해 해당 요소를 새 배열로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="b4fb5f6034f036bc01ebf1f756d03533c461f7c5" translate="yes" xml:space="preserve">
          <source>That is, inside &quot;lib/{project}&quot; each project's directory exists (&lt;code&gt;src&lt;/code&gt;, &lt;code&gt;spec&lt;/code&gt;, &lt;code&gt;README.md&lt;/code&gt; and so on)</source>
          <target state="translated">즉, &quot;lib / {project}&quot;안에 각 프로젝트의 디렉토리가 존재합니다 ( &lt;code&gt;src&lt;/code&gt; , &lt;code&gt;spec&lt;/code&gt; , &lt;code&gt;README.md&lt;/code&gt; 등)</target>
        </trans-unit>
        <trans-unit id="2a17ec29a059e3813abfceee0d131c97c42d9083" translate="yes" xml:space="preserve">
          <source>That is, you can have different methods with the same name and different number of arguments and they will be considered as separate methods. This is called &lt;em&gt;method overloading&lt;/em&gt;.</source>
          <target state="translated">즉, 동일한 이름과 다른 수의 인수로 다른 메소드를 가질 수 있으며 별도의 메소드로 간주됩니다. 이를 &lt;em&gt;메소드 오버로드&lt;/em&gt; 라고 합니다.</target>
        </trans-unit>
        <trans-unit id="d8feea5969c37f043ca6f1c62ab56b56835ca077" translate="yes" xml:space="preserve">
          <source>That is, you can have different methods with the same name and different number of parameters and they will be considered as separate methods. This is called &lt;em&gt;method overloading&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9b11f676052a98cb35fa397aa307386df90512" translate="yes" xml:space="preserve">
          <source>That logic also doesn't work with proc and method calls, including getters and properties, because nilable (or, more generally, union-typed) procs and methods aren't guaranteed to return the same more-specific type on two successive calls.</source>
          <target state="translated">이 논리는 또한 getter 및 속성을 포함하여 proc 및 method 호출에서 작동하지 않습니다. 왜냐하면 nilable (또는 더 일반적으로 union-typed) proc 및 메소드는 두 개의 연속 호출에서 동일한 특정 유형을 반환한다고 보장하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="1388bbe784d0e82f00dea604e6d39cd04e4d290c" translate="yes" xml:space="preserve">
          <source>That means that any type that responds to &lt;code&gt;[]&lt;/code&gt; with integers can be unpacked in a block argument.</source>
          <target state="translated">즉 , 정수 로 &lt;code&gt;[]&lt;/code&gt; 에 응답하는 모든 유형을 블록 인수로 압축 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="911ba85f2c79dbf3b73c9bef840eeaa2fb259a74" translate="yes" xml:space="preserve">
          <source>That means that any type that responds to &lt;code&gt;[]&lt;/code&gt; with integers can be unpacked in a block parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06475f06870f6869d725636ccc85ecdf9b35232f" translate="yes" xml:space="preserve">
          <source>That means with normalized paths &lt;code&gt;base.join(target.relative_to(base))&lt;/code&gt; is equivalent to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3119ea7f958810d988884ac00ed574cdc0bf762d" translate="yes" xml:space="preserve">
          <source>That means with normalized paths &lt;code&gt;base&lt;a href=&quot;path#join(part):Path-instance-method&quot;&gt;.join(target.relative_to(base)&lt;/a&gt;)&lt;/code&gt; is equivalent to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">That means with normalized paths &lt;code&gt;base&lt;a href=&quot;path#join(part):Path-instance-method&quot;&gt;.join(target.relative_to(base)&lt;/a&gt;)&lt;/code&gt; is equivalent to &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="447333ebfcd44aaafc8a9d6dcfd2ffc962236d4a" translate="yes" xml:space="preserve">
          <source>That way, any &lt;code&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-class-method&quot;&gt;Log.info&lt;/a&gt;&lt;/code&gt; call within the &lt;code&gt;DB&lt;/code&gt; module will use the &lt;code&gt;db&lt;/code&gt; source. And not the top-level &lt;code&gt;&lt;a href=&quot;log&quot;&gt;::Log&lt;/a&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-class-method&quot;&gt;.info&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">That way, any &lt;code&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-class-method&quot;&gt;Log.info&lt;/a&gt;&lt;/code&gt; call within the &lt;code&gt;DB&lt;/code&gt; module will use the &lt;code&gt;db&lt;/code&gt; source. And not the top-level &lt;code&gt;&lt;a href=&quot;log&quot;&gt;::Log&lt;/a&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-class-method&quot;&gt;.info&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05e04251825635170fad0033862b6f6890a9e460" translate="yes" xml:space="preserve">
          <source>That way, any &lt;code&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-class-method&quot;&gt;Log.info&lt;/a&gt;&lt;/code&gt; call within the &lt;code&gt;DB&lt;/code&gt; module will use the &lt;code&gt;db&lt;/code&gt; source. And not the top-level &lt;code&gt;&lt;a href=&quot;log#info(*,exception:Exception?=nil,&amp;amp;)-class-method&quot;&gt;::Log.info&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05db7b7c343d02832b4285cc379b1eb299751c4" translate="yes" xml:space="preserve">
          <source>That will add the signing key and the repository configuration. If you prefer to do it manually execute:</source>
          <target state="translated">서명 키와 리포지토리 구성이 추가됩니다. 수동으로 수행하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="1ecaa7d1b55ea7283265f94373c2d137a8378ee5" translate="yes" xml:space="preserve">
          <source>That will add the signing key and the repository configuration. If you prefer to do it manually, execute the following commands:</source>
          <target state="translated">서명 키와 리포지토리 구성이 추가됩니다. 수동으로 수행하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="83e7d80949994f9958c665bb5616d6023113b59b" translate="yes" xml:space="preserve">
          <source>That's it! With this config file, Travis CI by default will run &lt;code&gt;crystal spec&lt;/code&gt;. Now, we just need to go to Travis CI dashboard to &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#to-get-started-with-travis-ci&quot;&gt;add the GitHub repository&lt;/a&gt;.</source>
          <target state="translated">That's it! With this config file, Travis CI by default will run &lt;code&gt;crystal spec&lt;/code&gt; . Now, we just need to go to Travis CI dashboard to &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#to-get-started-with-travis-ci&quot;&gt;add the GitHub repository&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="759d4db72ea283d974217daa36e6e124cfed8d2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#crystal-build&quot;&gt;&lt;code&gt;crystal build&lt;/code&gt;&lt;/a&gt; command builds a binary executable. The output file has the same name as the source file minus the extension &lt;code&gt;.cr&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#crystal-build&quot;&gt; &lt;code&gt;crystal build&lt;/code&gt; &lt;/a&gt; 명령은 바이너리 실행 파일을 작성합니다. 출력 파일의 이름은 소스 파일에서 확장자 &lt;code&gt;.cr&lt;/code&gt; 을 뺀 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c6d85a03cc1514118e9b17283c183f0b1d0a3673" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#crystal-init&quot;&gt;&lt;code&gt;crystal init&lt;/code&gt;&lt;/a&gt; command helps to initialize a Crystal project folder, setting up a basic project structure. &lt;code&gt;crystal init app &amp;lt;name&amp;gt;&lt;/code&gt; is used for an application, &lt;code&gt;crystal init lib &amp;lt;name&amp;gt;&lt;/code&gt; for a library.</source>
          <target state="translated">&lt;a href=&quot;#crystal-init&quot;&gt; &lt;code&gt;crystal init&lt;/code&gt; &lt;/a&gt; 명령은 기본 프로젝트 구조를 설정하는 크리스탈 프로젝트 폴더를 초기화하는 데 도움이됩니다. &lt;code&gt;crystal init app &amp;lt;name&amp;gt;&lt;/code&gt; 은 응용 프로그램에 사용되고 &lt;code&gt;crystal init lib &amp;lt;name&amp;gt;&lt;/code&gt; 은 라이브러리에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="795e88d956aa8ddf4f747db796b6d8c085ef6a5a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../macros/index#type-information&quot;&gt;&lt;code&gt;@type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../macros/index#method-information&quot;&gt;&lt;code&gt;@def&lt;/code&gt;&lt;/a&gt; variables can be used to get a &lt;code&gt;TypeNode&lt;/code&gt; or &lt;code&gt;Def&lt;/code&gt; object to use the &lt;code&gt;.annotation&lt;/code&gt; method on. However, it is also possible to get &lt;code&gt;TypeNode&lt;/code&gt;/&lt;code&gt;Def&lt;/code&gt; types using other methods on &lt;code&gt;TypeNode&lt;/code&gt;. For example &lt;code&gt;TypeNode.all_subclasses&lt;/code&gt; or &lt;code&gt;TypeNode.methods&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dce443fc82545ac8deb87af8402c994251dd6e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://crystal-lang.org/api/Nil.html&quot;&gt;Nil&lt;/a&gt; type is used to represent the absence of a value, similar to &lt;code&gt;null&lt;/code&gt; in other languages. It only has a single value:</source>
          <target state="translated">&lt;a href=&quot;http://crystal-lang.org/api/Nil.html&quot;&gt;Nil&lt;/a&gt; 유형은 다른 언어에서 &lt;code&gt;null&lt;/code&gt; 과 유사한 값 이 없음 을 나타내는 데 사용 됩니다. 단일 값만 있습니다.</target>
        </trans-unit>
        <trans-unit id="17c4a5ba983843f5aea4e11e5a0fc1f27ac55eb0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc2822&quot;&gt;RFC 2822&lt;/a&gt; datetime format.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2822&quot;&gt;RFC 2822&lt;/a&gt; 날짜 형식입니다.</target>
        </trans-unit>
        <trans-unit id="4ab4eff1bdc42eaac909d9835213e75bfab5898a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; datetime format (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile).</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; 날짜 포맷 ( &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; 프로파일).</target>
        </trans-unit>
        <trans-unit id="fcc87f605187cae7714783b0008eb3aeb91780a9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;macros#type-information&quot;&gt;&lt;code&gt;@type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;macros#method-information&quot;&gt;&lt;code&gt;@def&lt;/code&gt;&lt;/a&gt; variables can be used to get a &lt;code&gt;TypeNode&lt;/code&gt; or &lt;code&gt;Def&lt;/code&gt; object to use the &lt;code&gt;.annotation&lt;/code&gt; method on. However, it is also possible to get &lt;code&gt;TypeNode&lt;/code&gt;/&lt;code&gt;Def&lt;/code&gt; types using other methods on &lt;code&gt;TypeNode&lt;/code&gt;. For example &lt;code&gt;TypeNode.all_subclasses&lt;/code&gt; or &lt;code&gt;TypeNode.methods&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;a href=&quot;macros#type-information&quot;&gt; &lt;code&gt;@type&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;macros#method-information&quot;&gt; &lt;code&gt;@def&lt;/code&gt; &lt;/a&gt; 변수는 가져올 수 있습니다 &lt;code&gt;TypeNode&lt;/code&gt; 또는 &lt;code&gt;Def&lt;/code&gt; 객체가 사용하는 &lt;code&gt;.annotation&lt;/code&gt; 의 에 방법을. 그러나, 얻을 수도 있습니다 &lt;code&gt;TypeNode&lt;/code&gt; / &lt;code&gt;Def&lt;/code&gt; 에 다른 방법을 사용하여 유형을 &lt;code&gt;TypeNode&lt;/code&gt; 을 . 예를 들어 &lt;code&gt;TypeNode.all_subclasses&lt;/code&gt; 또는 &lt;code&gt;TypeNode.methods&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8ad267a02de072c31aaf729045bbcb47074db27a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;new%2c_initialize_and_allocate&quot;&gt;allocate&lt;/a&gt; class method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e285c46b0b0caa88d830ae22cec9c07461edbc2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;new,_initialize_and_allocate&quot;&gt;allocate&lt;/a&gt; class method.</source>
          <target state="translated">는 &lt;a href=&quot;new,_initialize_and_allocate&quot;&gt;할당&lt;/a&gt; 클래스 메소드를.</target>
        </trans-unit>
        <trans-unit id="4a5ddc72996f1445364e8e166d40e3844178b506" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ternary_if&quot;&gt;conditional operator (&lt;code&gt;? :&lt;/code&gt;)&lt;/a&gt; is internally rewritten to an &lt;code&gt;if&lt;/code&gt; expression by the compiler.</source>
          <target state="translated">The &lt;a href=&quot;ternary_if&quot;&gt;conditional operator ( &lt;code&gt;? :&lt;/code&gt; )&lt;/a&gt; is internally rewritten to an &lt;code&gt;if&lt;/code&gt; expression by the compiler.</target>
        </trans-unit>
        <trans-unit id="d4f72334cc91327c1234f2b172d59aa15c18d9ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ternary_if&quot;&gt;conditional operator (&lt;code&gt;? :&lt;/code&gt;)&lt;/a&gt; is the only ternary operator. It not parsed as a method, and its meaning cannot be changed. The compiler transforms it to an &lt;code&gt;if&lt;/code&gt; expression.</source>
          <target state="translated">The &lt;a href=&quot;ternary_if&quot;&gt;conditional operator ( &lt;code&gt;? :&lt;/code&gt; )&lt;/a&gt; is the only ternary operator. It not parsed as a method, and its meaning cannot be changed. The compiler transforms it to an &lt;code&gt;if&lt;/code&gt; expression.</target>
        </trans-unit>
        <trans-unit id="96253c38579dc948c432deceeb44fa844060b4e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!&lt;/code&gt; operator returns a &lt;code&gt;Bool&lt;/code&gt; that results from negating the &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;truthiness&lt;/a&gt; of a value.</source>
          <target state="translated">The &lt;code&gt;!&lt;/code&gt; operator returns a &lt;code&gt;Bool&lt;/code&gt; that results from negating the &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;truthiness&lt;/a&gt; of a value.</target>
        </trans-unit>
        <trans-unit id="8ffe618e2a8ef01a20272c5e56b48b0b333e5993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!&lt;/code&gt; operator returns a &lt;code&gt;Bool&lt;/code&gt; that results from negating the &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;truthyness&lt;/a&gt; of a value.</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; 연산자는 값 의 &lt;a href=&quot;truthy_and_falsey_values&quot;&gt;진실성&lt;/a&gt; 을 부정한 결과 &lt;code&gt;Bool&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="826949364c181f0f85c29985bf14f3106da3fbf9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;#clone&lt;/code&gt; method can't be defined on &lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;. It's not generically available for every type because cycles could be involved, and the clone logic might not need to clone everything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490b93fa8a1e27c8567b9c416cb939c87b9f2632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--static&lt;/code&gt; flag can be used to build a statically-linked executable:</source>
          <target state="translated">&lt;code&gt;--static&lt;/code&gt; 플래그는 정적으로 링크 된 실행 파일을 작성하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ea6e15fc185b6dfeac938fd9a1ffd46ffc3d358a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to which output is written.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 출력이 기록되는.</target>
        </trans-unit>
        <trans-unit id="ac6f996083ee75513b9c0622ab116bc40fbbfd0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to which output is written. This can be changed/wrapped to filter the response body (for example to compress the output).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 출력이 기록되는. 응답 본문을 필터링하기 위해 변경 / 랩핑 할 수 있습니다 (예 : 출력 압축).</target>
        </trans-unit>
        <trans-unit id="3d606796b7ffef005975a53d91be2922acb7c88a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class raises on this method, but some subclasses, notable &lt;code&gt;&lt;a href=&quot;filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; implement it.</source>
          <target state="translated">The &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class raises on this method, but some subclasses, notable &lt;code&gt;&lt;a href=&quot;filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; implement it.</target>
        </trans-unit>
        <trans-unit id="2bfb537ff65327de4be88b51937e23fd9a3c3222" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; starts at position zero for reading.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 는 읽기 위해 위치 0에서 시작.</target>
        </trans-unit>
        <trans-unit id="a2d8623f015a9cb39650eea2561c1944b60bbbe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../request&quot;&gt;HTTP::Request&lt;/a&gt;&lt;/code&gt; to process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../request&quot;&gt;HTTP::Request&lt;/a&gt;&lt;/code&gt; 방법에 관한 것이다.</target>
        </trans-unit>
        <trans-unit id="2449083bb09518a3085fda8069a88dd99b5c3ddf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;base64&quot;&gt;Base64&lt;/a&gt;&lt;/code&gt; module provides for the encoding (&lt;code&gt;&lt;a href=&quot;base64#encode(data,io:IO)-instance-method&quot;&gt;#encode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;base64#strict_encode(data,io:IO)-instance-method&quot;&gt;#strict_encode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;base64#urlsafe_encode(data,io:IO)-instance-method&quot;&gt;#urlsafe_encode&lt;/a&gt;&lt;/code&gt;) and decoding (&lt;code&gt;&lt;a href=&quot;base64#decode(data,io:IO)-instance-method&quot;&gt;#decode&lt;/a&gt;&lt;/code&gt;) of binary data using a base64 representation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;base64&quot;&gt;Base64&lt;/a&gt;&lt;/code&gt; 로 모듈은 부호화 (제공 &lt;code&gt;&lt;a href=&quot;base64#encode(data,io:IO)-instance-method&quot;&gt;#encode&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;base64#strict_encode(data,io:IO)-instance-method&quot;&gt;#strict_encode&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;base64#urlsafe_encode(data,io:IO)-instance-method&quot;&gt;#urlsafe_encode&lt;/a&gt;&lt;/code&gt; ) 및 디코딩 ( &lt;code&gt;&lt;a href=&quot;base64#decode(data,io:IO)-instance-method&quot;&gt;#decode&lt;/a&gt;&lt;/code&gt; base64로 표현을 사용하여 이진 데이터).</target>
        </trans-unit>
        <trans-unit id="a6ee35869cac14a531a7b253e35d51d63147cd54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; mixin enhances an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; with input/output buffering.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 믹스 인은 향상 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 입력 / 출력 버퍼링.</target>
        </trans-unit>
        <trans-unit id="a4baf8b05e49b63254c86b0bfb6a0362441300b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; method is used in a &lt;code&gt;case ... when ... end&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 방법이 사용된다 &lt;code&gt;case ... when ... end&lt;/code&gt; 식.</target>
        </trans-unit>
        <trans-unit id="d7c7f8d472ee8426ef9577c08ba121a7b7c2444b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;classmethods&quot;&gt;Digest::ClassMethods&lt;/a&gt;&lt;/code&gt; module is used in the concrete subclass of &lt;code&gt;&lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt;&lt;/code&gt; that does not require arguments in its construction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d24ad40f5b83fac23ce884f3cf12cda69553f89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; mixin is used by classes whose objects may be ordered.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; 믹스 인은 그 개체 정렬 될 수 클래스가 사용된다.</target>
        </trans-unit>
        <trans-unit id="376b7efcb75448c308ba7fb6037def1bb1b983be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; can also be passed as a callback:</source>
          <target state="translated">The &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; can also be passed as a callback:</target>
        </trans-unit>
        <trans-unit id="ad8290bb90b5f1437858cfc323146ec24775e9b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; can also be passed as a callback:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; 은 또한 콜백으로 전달 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="e2dd8eefa52d45bf3a68c64c8b6b0cedf86a5ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ecr#embed(filename,io_name)-macro&quot;&gt;ECR.embed&lt;/a&gt;&lt;/code&gt; line basically generates this Crystal code:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ecr#embed(filename,io_name)-macro&quot;&gt;ECR.embed&lt;/a&gt;&lt;/code&gt; 의 라인은 기본적으로이 크리스탈 코드를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="d212ff4d4b9a5d2a262b63edb9e728cd1a862022" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ecr#render(filename)-macro&quot;&gt;ECR.render&lt;/a&gt;&lt;/code&gt; basically generates this Crystal code:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ecr#render(filename)-macro&quot;&gt;ECR.render&lt;/a&gt;&lt;/code&gt; 는 기본적으로이 크리스탈 코드를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="a29e0025fd93ab543490b6942bf347c950434113" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; mixin provides collection classes with several traversal, searching, filtering and querying methods.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;&lt;/code&gt; 에서 믹스 인은 필터링 및 검색 방법을 쿼리 여러 순회으로 컬렉션 클래스를 제공한다.</target>
        </trans-unit>
        <trans-unit id="89001ef56839eb3ae93f9aab3105d47bc183f8f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class is the basis for all input and output in Crystal.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 클래스는 크리스탈의 모든 입력과 출력의 기초가된다.</target>
        </trans-unit>
        <trans-unit id="3d97a52980050bd221d532fed1a43c7e655ca59f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class raises on this method, but some subclasses, notable &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; implement it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 클래스는이 방법에 제기하지만, 일부 서브 클래스, 주목할만한 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="bdaab05f0c1838055646bb0617187a2febb2cccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; class raises on this method, but some subclasses, notable &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; implement it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 이 방법에 급 인상,하지만 일부 서브 클래스, 주목할만한 &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; 를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="e66da5ecce6c6e96db5f8e4765ae5c097d33c613" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; mixin provides convenience methods to collection classes that provide an &lt;code&gt;&lt;a href=&quot;iterable#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method that returns an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; over the collection.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; 믹스 인은 제공 컬렉션 클래스에 편리한 방법을 제공합니다 &lt;code&gt;&lt;a href=&quot;iterable#each-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 의 반환 방법 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 를 컬렉션에 걸쳐있다.</target>
        </trans-unit>
        <trans-unit id="f36f5d1994a6867a3e2f50a5f5be8afac215659f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; macro defines how an object is mapped to JSON.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; 매크로 정의는 객체를 JSON에 매핑되는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0916309fbd2e5a0b9ab03c37d215c0445540109b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; class provides a logging utility that you can use to output messages.</source>
          <target state="translated">The &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; class provides a logging utility that you can use to output messages.</target>
        </trans-unit>
        <trans-unit id="d5cf6b45cfcd7d76e10e9132b2e9c19b5a51a967" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; will hold a list of emitted entries.</source>
          <target state="translated">The &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; will hold a list of emitted entries.</target>
        </trans-unit>
        <trans-unit id="014421491d70ac6b110faecf08d5240d3ff0fe32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; class provides a simple but sophisticated logging utility that you can use to output messages.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 클래스는 출력 메시지에 사용할 수있는 간단하지만 정교한 로깅 유틸리티를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="38e8da265a75e7cd0e55b8ead7b933806679cfbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; module is a fictitious module used to document macros and macro methods.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; 모듈은 문서의 매크로와 매크로 방법에 사용되는 가상의 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="ef3cc6f44cf00521552efdff0ffaccd2b27cc9d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; macro is useful when the subset of available macro methods are not enough for your purposes and you need something more powerful. With &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; you can read files at compile time, connect to the internet or to a database.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; 의 사용 가능한 매크로 방법의 부분 집합이 당신의 목적을 위해 충분하지 않습니다 당신이 더 강력한 무언가를 필요로 할 때 매크로 유용합니다. &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; 을 사용하면 컴파일 타임에 파일을 읽고 인터넷이나 데이터베이스에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb4ee1bfa6b4f83e99821f279a58d860dc36da7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;multipart&quot;&gt;MIME::Multipart&lt;/a&gt;&lt;/code&gt; module contains utilities for parsing MIME multipart messages, which contain multiple body parts, each containing a header section and binary body. The &lt;code&gt;multipart/form-data&lt;/code&gt; content-type has a separate set of utilities in the &lt;code&gt;&lt;a href=&quot;../http/formdata&quot;&gt;HTTP::FormData&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;multipart&quot;&gt;MIME::Multipart&lt;/a&gt;&lt;/code&gt; 모듈은 각각 헤더 섹션 진 몸을 포함, 여러 신체 부위를 포함하는 MIME의 다중 메시지를 구문 분석 유틸리티가 포함되어 있습니다. &lt;code&gt;multipart/form-data&lt;/code&gt; 내용 유형은에서 유틸리티 별도의 설정이 &lt;code&gt;&lt;a href=&quot;../http/formdata&quot;&gt;HTTP::FormData&lt;/a&gt;&lt;/code&gt; 모듈을.</target>
        </trans-unit>
        <trans-unit id="fa9e51617d0ad128757f472750772087db256fa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; type has only one possible value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; : 유형은 하나의 가능한 값이 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78aab377343729c1663654f961a01fd4ecf2a0dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; method is used in a &lt;code&gt;case ... when ... end&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 방법이 사용된다 &lt;code&gt;case ... when ... end&lt;/code&gt; 식.</target>
        </trans-unit>
        <trans-unit id="f40a434b8438c33291cb8865734695ab8703dc78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; mixin is used by classes whose objects may be partially ordered.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;partialcomparable&quot;&gt;PartialComparable&lt;/a&gt;&lt;/code&gt; 믹스 인은 그 개체의 일부 주문할 수 클래스가 사용된다.</target>
        </trans-unit>
        <trans-unit id="c7c09b196866b6574ae333546e8a67f52b3f88ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; method is used in a &lt;code&gt;case ... when ... end&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 방법이 사용된다 &lt;code&gt;case ... when ... end&lt;/code&gt; 식.</target>
        </trans-unit>
        <trans-unit id="56f748afe57b86f344e57a94faaf29a894bcfb7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; is a write-only &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, so all &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; methods are available in it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; 쓰기 전용입니다 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , 그래서 모든 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 방법이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="f22660ac8d42e93feed30daded69488777847c0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; to configure and write to.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; 을 구성하고 쓰기에.</target>
        </trans-unit>
        <trans-unit id="25a962fc5650c4478699b05b1bff5c67e2453c4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;samesite#None&quot;&gt;None&lt;/a&gt;&lt;/code&gt; directive requires the &lt;code&gt;secure&lt;/code&gt; attribute to be &lt;code&gt;true&lt;/code&gt; to mitigate risks associated with cross-site access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4eddb6add6350ed80b4785e1894f732898b535" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; module automatically generates methods for JSON serialization when included.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; 포함 할 때 모듈은 자동으로 JSON 직렬화 방법을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="75fe18a3714f0812cf8057f8e6835b0ed0d25d90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; module automatically generates methods for YAML serialization when included.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; 포함 할 때 모듈은 자동으로 YAML 직렬화하는 방법을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="77f52696379fafc552f322224eb96d3c5b2a9bfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; is a write-only &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, so all &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; methods are available on it for sending the response body.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; 쓰기 전용입니다 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , 그래서 모든 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 메소드는 응답 본문을 보내는 것이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e4c8345788aed6fad6d47b4bce5124005fdcff72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; object has &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;headers&lt;/code&gt; properties that can be configured before writing the response body. Once any response output has been written, changing the &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;headers&lt;/code&gt; properties has no effect.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server/response&quot;&gt;HTTP::Server::Response&lt;/a&gt;&lt;/code&gt; 객체가 &lt;code&gt;status&lt;/code&gt; 및 &lt;code&gt;headers&lt;/code&gt; 응답 본체를 작성하기 전에 구성 할 수있는 속성을. 응답 출력이 작성된 후에는 &lt;code&gt;status&lt;/code&gt; 및 &lt;code&gt;headers&lt;/code&gt; 속성을 변경해 도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="136d0870e5c874f19d02d21425b27db16d59ca13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;token/kind&quot;&gt;Kind&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;token/kind&quot;&gt;Kind&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9c3ef6a4b6c110967f8aa9adbdac35c23ad7701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; macro defines how an object is mapped to YAML.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#mapping(**_properties_)-macro&quot;&gt;YAML.mapping&lt;/a&gt;&lt;/code&gt; 매크로를 정의가 개체는 YAML에 매핑되는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f942e7c831d9e0546a5c9c83000e42a6e941c257" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;=&lt;/code&gt; operator syntax sugar is also available to setters and indexers. Note that &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; use the &lt;code&gt;[]?&lt;/code&gt; method to check for key presence.</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 연산자 신택스는 세터 및 인덱서로 사용할 수있다. 그 주 &lt;code&gt;||&lt;/code&gt; 및 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 사용 &lt;code&gt;[]?&lt;/code&gt; 키가 있는지 확인하는 방법.</target>
        </trans-unit>
        <trans-unit id="c3086c00cb302c662c51f6afd5b5b6e30e135d82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@[Flags]&lt;/code&gt; annotation makes the first constant's value be &lt;code&gt;1&lt;/code&gt;, and successive constants are multiplied by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61b8948bb1cbdac7600998768b7bd5447d1eaf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@[Flags]&lt;/code&gt; attribute makes the first constant's value be &lt;code&gt;1&lt;/code&gt;, and successive constants are multiplied by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@[Flags]&lt;/code&gt; 속성은 상기 제 상수의 값이 될 수있게 &lt;code&gt;1&lt;/code&gt; , 연속 한 정수를 곱하여 &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18f2d1ef5d75e8619be63da54545671693c709db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@[ThreadLocal]&lt;/code&gt; annotation can be applied to class variables and C external variables. It makes them be thread local.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c426dfe2ef0e17e729dcdbe617dd04191cfe70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@[ThreadLocal]&lt;/code&gt; attribute can be applied to class variables and C external variables. It makes them be thread local.</source>
          <target state="translated">&lt;code&gt;@[ThreadLocal]&lt;/code&gt; 속성은 클래스 변수 C 외부 변수에 적용될 수있다. 스레드 로컬이됩니다.</target>
        </trans-unit>
        <trans-unit id="75f6774d031682ec26bb77e23ce1ef7148016bb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array#map&lt;/code&gt; method uses the block's type as the generic type for the Array. Without the &lt;code&gt;as&lt;/code&gt; pseudo-method, the inferred type would have been &lt;code&gt;Int32&lt;/code&gt; and we wouldn't have been able to add a &lt;code&gt;Float64&lt;/code&gt; into it.</source>
          <target state="translated">&lt;code&gt;Array#map&lt;/code&gt; 방법은 배열의 일반적인 유형으로 블록의 형식을 사용합니다. 포함하지 않는 &lt;code&gt;as&lt;/code&gt; 의사 방법, 추정 된 유형했을 &lt;code&gt;Int32&lt;/code&gt; 그리고 우리는 추가 할 수 없었을 것이다 &lt;code&gt;Float64&lt;/code&gt; 을 그것으로.</target>
        </trans-unit>
        <trans-unit id="02d67663b426c4e4ee4f49cf674951a5c07b82e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypeNode.instance_vars&lt;/code&gt; can be used to get an array of instance variable &lt;code&gt;MetaVar&lt;/code&gt; objects that would allow reading annotations defined on those instance variables.</source>
          <target state="translated">&lt;code&gt;TypeNode.instance_vars&lt;/code&gt; 는 인스턴스 변수의 배열을 가져올 수 있습니다 &lt;code&gt;MetaVar&lt;/code&gt; 의 그 인스턴스 변수에 정의 된 주석을 읽을 수 있도록 할 개체를.</target>
        </trans-unit>
        <trans-unit id="c1c71c557cb5fd0dfc5542f6e3e69672bbc48e5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; method can be used to read all positional arguments on an annotation as a &lt;code&gt;TupleLiteral&lt;/code&gt;. This method is defined on all annotations by default, and is unique to each applied annotation.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 방법은 같은 주석의 모든 위치 인수를 읽을 수 있습니다 &lt;code&gt;TupleLiteral&lt;/code&gt; . 이 방법은 기본적으로 모든 주석에 정의되어 있으며 적용된 각 주석에 고유합니다.</target>
        </trans-unit>
        <trans-unit id="ff32ae2e211e5b829fc4b02241f187117313fb6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method also allows to cast between pointer types:</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 의사 방법은 포인터 유형 간의 캐스트 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="9cf0bccfbd5465269b0fc897a739f18a7f32078e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method can be used to cast an expression to a &quot;bigger&quot; type. For example:</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 의사 방법은 &quot;더 큰&quot;형식으로 식을 캐스팅 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1bf4746dbe840506cfd688dcb7378d52bf83d129" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method performs a runtime check: if &lt;code&gt;a&lt;/code&gt; wasn't an &lt;code&gt;Int32&lt;/code&gt;, an &lt;a href=&quot;exception_handling&quot;&gt;exception&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 유사 방법을 수행 런타임 검사 : 만약 &lt;code&gt;a&lt;/code&gt; 아니었다 &lt;code&gt;Int32&lt;/code&gt; , &lt;a href=&quot;exception_handling&quot;&gt;예외가&lt;/a&gt; 발생된다.</target>
        </trans-unit>
        <trans-unit id="b7083725c498987142961bc69f0999a8244ccbcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; pseudo-method restricts the types of an expression. For example:</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 유사 방법은 식의 종류를 제한한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d693b0558df5298a67bda8eeaab65d621969f9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as?&lt;/code&gt; pseudo-method is similar to &lt;code&gt;as&lt;/code&gt;, except that it returns &lt;code&gt;nil&lt;/code&gt; instead of raising an exception when the type doesn't match. It also can't be used to cast between pointer types and other types.</source>
          <target state="translated">&lt;code&gt;as?&lt;/code&gt; 의사 방법은 다음과 유사 &lt;code&gt;as&lt;/code&gt; 는 반환 것을 제외하고, &lt;code&gt;nil&lt;/code&gt; 대신 유형이 일치하지 않는 예외를 발생시키는의. 또한 포인터 유형과 다른 유형 사이에 캐스트하는 데 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="11271dbd4a41bb6c28e6c54c4a9891f7760b2a50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before_script&lt;/code&gt; and &lt;code&gt;cache&lt;/code&gt; keys in the file are for running the same script in every job (&lt;code&gt;shards install&lt;/code&gt;) and for hanging onto the files that were created (&lt;code&gt;cache&lt;/code&gt;). They're not necessary if your shard doesn't have any dependencies.</source>
          <target state="translated">The &lt;code&gt;before_script&lt;/code&gt; and &lt;code&gt;cache&lt;/code&gt; keys in the file are for running the same script in every job ( &lt;code&gt;shards install&lt;/code&gt; ) and for hanging onto the files that were created ( &lt;code&gt;cache&lt;/code&gt; ). They're not necessary if your shard doesn't have any dependencies.</target>
        </trans-unit>
        <trans-unit id="3d86936accd4124dfa11b13017f14d802e431fe8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;colorize&lt;/code&gt; method returns a &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; instance, which allows chaining methods together:</source>
          <target state="translated">&lt;code&gt;colorize&lt;/code&gt; 방법은 반환 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; 체인 방법을 함께 할 수 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="cfca9acc6bc8418967a49de47b0288f159aedc8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal build&lt;/code&gt; command builds a dynamically-linked binary executable.</source>
          <target state="translated">&lt;code&gt;crystal build&lt;/code&gt; 명령은 동적으로 링크 된 바이너리 실행 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="60221ce8357bf9321701766410a8923a503e839e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal docs&lt;/code&gt; command generates API documentation from inline docstrings in Crystal files (see &lt;a href=&quot;../conventions/documenting_code&quot;&gt;documenting code&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;crystal docs&lt;/code&gt; 명령은 수정 파일에서 인라인 문서화 문자열 (참조에서 API 문서를 생성 &lt;a href=&quot;../conventions/documenting_code&quot;&gt;문서화 코드&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8c7d32d461b915e078b01a181c6ef731e1790e95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal docs&lt;/code&gt; command generates API documentation from inline docstrings in Crystal files (see &lt;a href=&quot;https://crystal-lang.org/conventions/documenting_code.html&quot;&gt;documenting code&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;crystal docs&lt;/code&gt; 명령은 수정 파일에서 인라인 문서화 문자열 (참조에서 API 문서를 생성 &lt;a href=&quot;https://crystal-lang.org/conventions/documenting_code.html&quot;&gt;문서화 코드&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a2c6ba6f58687334d3ce5f4efc30d9224dd3394b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal env&lt;/code&gt; command prints environment variables used by Crystal.</source>
          <target state="translated">&lt;code&gt;crystal env&lt;/code&gt; 명령은 크리스탈에 의해 사용되는 환경 변수를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="0448efad7e7e9e9d6b2b2403e407507671bde6b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal eval&lt;/code&gt; command reads Crystal source code from command line or stdin, compiles it to a binary executable and immediately runs it.</source>
          <target state="translated">&lt;code&gt;crystal eval&lt;/code&gt; 명령은 명령 줄이나 표준 입력에서 크리스탈 소스 코드를 읽어 바이너리 실행 파일로 컴파일하고 즉시 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="b4766b0e054c96a1444b51194810fba9b9ca962d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal init&lt;/code&gt; command initializes a Crystal project folder.</source>
          <target state="translated">&lt;code&gt;crystal init&lt;/code&gt; 명령은 크리스탈 프로젝트 폴더를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="314bbca54f3cda66d2f8a21d16cd2b1ddb8452d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal play&lt;/code&gt; command starts a webserver serving an interactive Crystal playground.</source>
          <target state="translated">&lt;code&gt;crystal play&lt;/code&gt; 명령은 대화 형 크리스탈 놀이터를 제공하는 웹 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="079101a55486986035bb64f5bf65982ae4a436f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal spec&lt;/code&gt; command compiles and runs a Crystal spec suite.</source>
          <target state="translated">&lt;code&gt;crystal spec&lt;/code&gt; 명령 컴파일 및 실행하는 크리스탈 사양 스위트.</target>
        </trans-unit>
        <trans-unit id="5b9dd66653d154a0ea34d6e3ef2e24d3481cc389" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal tool format&lt;/code&gt; command applies default format to Crystal source files.</source>
          <target state="translated">&lt;code&gt;crystal tool format&lt;/code&gt; 명령은 크리스탈 소스 파일에 기본 포맷을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="59a50dec667b4c30684788f9d54879f6a7c8ef68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crystal version&lt;/code&gt; command prints the Crystal version, LLVM version and default target triple.</source>
          <target state="translated">&lt;code&gt;crystal version&lt;/code&gt; 명령은 크리스탈 버전, 트리플 LLVM 버전 및 기본 대상을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="963b27b62eb97bed4b0c40e8b7b3272de351411e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;describe&lt;/code&gt;/&lt;code&gt;context&lt;/code&gt; that wraps this example or example group.</source>
          <target state="translated">The &lt;code&gt;describe&lt;/code&gt; / &lt;code&gt;context&lt;/code&gt; that wraps this example or example group.</target>
        </trans-unit>
        <trans-unit id="0344dc160755c1bdcfefcc0e04e8d1c88539a83f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method will only be invoked once the object has been fully initialized via the &lt;code&gt;initialize&lt;/code&gt; method. If an exception is raised inside the &lt;code&gt;initialize&lt;/code&gt; method, &lt;code&gt;finalize&lt;/code&gt; won't be invoked. If your class defines a &lt;code&gt;finalize&lt;/code&gt; method, be sure to catch any exceptions that might be raised in the &lt;code&gt;initialize&lt;/code&gt; methods and free resources.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; 개체가 완전히 통해 초기화되고 나면 메소드는 호출 될 것이다 &lt;code&gt;initialize&lt;/code&gt; 방법. &lt;code&gt;initialize&lt;/code&gt; 메소드 내에서 예외가 발생 하면 &lt;code&gt;finalize&lt;/code&gt; 가 호출되지 않습니다. 클래스가 &lt;code&gt;finalize&lt;/code&gt; 메소드를 정의하는 경우 &lt;code&gt;initialize&lt;/code&gt; 메소드 및 여유 자원 에서 발생할 수있는 예외를 포착하십시오 .</target>
        </trans-unit>
        <trans-unit id="2dc586d8c7772c2c755777f82871627e4adcf488" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; variable in the above example is optional.</source>
          <target state="translated">위 예제 의 &lt;code&gt;index&lt;/code&gt; 변수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="828105cb7c8e8451e77576d83d5623cb1be400bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initial_capacity&lt;/code&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If you have an estimate of the maximum number of elements a deque will hold, you should initialize it with that capacity for improved execution performance.</source>
          <target state="translated">&lt;code&gt;initial_capacity&lt;/code&gt; 는 성장의 경우에는 내부 버퍼가 불필요하게 재 할당을 회피하는 데에 유용하다. deque가 보유 할 최대 요소 수의 추정치가있는 경우, 실행 성능 향상을 위해 해당 용량으로 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="04b8e83cea5b8056c015a394838a2e84063296b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instance_sizeof&lt;/code&gt; expression returns an &lt;code&gt;Int32&lt;/code&gt; with the instance size of a given class. For example:</source>
          <target state="translated">&lt;code&gt;instance_sizeof&lt;/code&gt; 의 표현은 반환 &lt;code&gt;Int32&lt;/code&gt; 지정된 클래스의 인스턴스 크기. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86e9f68437efb6eb33253ee818d7638c1e457ac7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;named_args&lt;/code&gt; method can be used to read all key/value pairs on an annotation as a &lt;code&gt;NamedTupleLiteral&lt;/code&gt;. This method is defined on all annotations by default, and is unique to each applied annotation.</source>
          <target state="translated">&lt;code&gt;named_args&lt;/code&gt; 방법은 같은 주석 모든 키 / 값 쌍을 판독하는데 사용될 수있다 &lt;code&gt;NamedTupleLiteral&lt;/code&gt; . 이 방법은 기본적으로 모든 주석에 정의되어 있으며 적용된 각 주석에 고유합니다.</target>
        </trans-unit>
        <trans-unit id="5d1ce040c9328b66d9cae0bb66bf2d14c5a09455" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; expression accepts arguments, and these give the value of the &lt;code&gt;yield&lt;/code&gt; expression that invoked the block:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 표현식은 인수를 받아,이는 값주고 &lt;code&gt;yield&lt;/code&gt; 블록을 호출 표현 :</target>
        </trans-unit>
        <trans-unit id="f4ede1d2e182ddeaf133f3b20cd92f8fe7ba0c4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; expression inside a block exits early from the block (not the method). For example:</source>
          <target state="translated">블록 내부 의 &lt;code&gt;next&lt;/code&gt; 표현식은 블록에서 일찍 종료됩니다 (메소드가 아님). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="59f8b8a3b88edee4251d8666694afb2946c6ee92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pointerof&lt;/code&gt; expression returns a &lt;a href=&quot;http://crystal-lang.org/api/Pointer.html&quot;&gt;Pointer&lt;/a&gt; that points to the contents of a variable or instance variable.</source>
          <target state="translated">&lt;code&gt;pointerof&lt;/code&gt; 의 표현 리턴한다 &lt;a href=&quot;http://crystal-lang.org/api/Pointer.html&quot;&gt;포인터&lt;/a&gt; 가 변수 또는 인스턴스 변수의 내용을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="640e2f0e04734dc60523f591a269ce6ea2deeb35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;print_methods&lt;/code&gt; macro will be run as soon as it is encountered - and will print an empty list as there are no methods defined at that point. Once the second declaration of &lt;code&gt;Foo&lt;/code&gt; is compiled the &lt;code&gt;finished&lt;/code&gt; macro will be run, which will print &lt;code&gt;[bar]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;print_methods&lt;/code&gt; 의 그 시점에서 정의 된 방법이없는 것처럼 빈 목록을 출력합니다 - 매크로가 발견되는 즉시 실행됩니다. &lt;code&gt;Foo&lt;/code&gt; 의 두 번째 선언 이 컴파일되면 &lt;code&gt;finished&lt;/code&gt; 매크로가 실행되고 &lt;code&gt;[bar]&lt;/code&gt; 가 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="7769a33217f60d148a4093f91a18ee3f3d9cb487" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run&lt;/code&gt; command compiles a source file to a binary executable and immediately runs it.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 명령은 바이너리 실행 파일에 소스 파일을 컴파일하고 즉시 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9b6626f886032f0831007e66731f4767216020a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run&lt;/code&gt; command compiles the source file &lt;code&gt;hello_world.cr&lt;/code&gt; to a binary executable in a temporary location and immediately executes it.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 명령은 소스 파일을 컴파일 &lt;code&gt;hello_world.cr&lt;/code&gt; 임시 위치에서 바이너리 실행 파일을하고 즉시 실행합니다.</target>
        </trans-unit>
        <trans-unit id="476c39fdfd41c30f38a5774c70eeba5ebe895ef6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;send&lt;/code&gt; methods may sporadically fail with &lt;code&gt;&lt;a href=&quot;errno#ECONNREFUSED&quot;&gt;Errno::ECONNREFUSED&lt;/a&gt;&lt;/code&gt; when sending datagrams to a non-listening server. Wrap with an exception handler to prevent raising. Example:</source>
          <target state="translated">&lt;code&gt;send&lt;/code&gt; 방법은 산발적으로 실패 할 수 있습니다 &lt;code&gt;&lt;a href=&quot;errno#ECONNREFUSED&quot;&gt;Errno::ECONNREFUSED&lt;/a&gt;&lt;/code&gt; 가 아닌 청취 서버에 데이터 그램을 보낼 때. 발생을 막기 위해 예외 처리기로 감싸십시오. 예:</target>
        </trans-unit>
        <trans-unit id="53312acf6ae771222e3c1652706e0816074f801e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;send&lt;/code&gt; methods may sporadically fail with &lt;code&gt;&lt;a href=&quot;socket/connecterror&quot;&gt;Socket::ConnectError&lt;/a&gt;&lt;/code&gt; when sending datagrams to a non-listening server. Wrap with an exception handler to prevent raising. Example:</source>
          <target state="translated">The &lt;code&gt;send&lt;/code&gt; methods may sporadically fail with &lt;code&gt;&lt;a href=&quot;socket/connecterror&quot;&gt;Socket::ConnectError&lt;/a&gt;&lt;/code&gt; when sending datagrams to a non-listening server. Wrap with an exception handler to prevent raising. Example:</target>
        </trans-unit>
        <trans-unit id="a36cde71d7e58f2803f86c4457bfeab51950dc07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sizeof&lt;/code&gt; expression returns an &lt;code&gt;Int32&lt;/code&gt; with the size in bytes of a given type. For example:</source>
          <target state="translated">&lt;code&gt;sizeof&lt;/code&gt; 표현은 반환 &lt;code&gt;Int32&lt;/code&gt; 지정된 유형의 바이트 크기. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="050175522f85efb6178a3193491b00060fcd72c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeof&lt;/code&gt; expression returns the type of an expression:</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 표현 식의 유형을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="f23b20935a9489a4485479be788dd6cd79706638" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; for this example is &lt;code&gt;mysql://root:root@localhost/test&lt;/code&gt;, and so the module will use the &lt;code&gt;mysql driver&lt;/code&gt; to connect to the MySQL database.</source>
          <target state="translated">The &lt;code&gt;uri&lt;/code&gt; for this example is &lt;code&gt;mysql://root:root@localhost/test&lt;/code&gt; , and so the module will use the &lt;code&gt;mysql driver&lt;/code&gt; to connect to the MySQL database.</target>
        </trans-unit>
        <trans-unit id="c494b62b15d69a92665ae4b4ff266e06fe21f5bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; expression is similar to a call and can receive arguments. For example:</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; 표현은 호출과 유사하며 인수를받을 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d0274a3410c672dca60fd3803cdf66a4f06d7a20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; expression itself has a value: the last expression of the block. For example:</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; 블록의 마지막 식 : 식 자체의 값을 갖는다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84f2a4702b412b7487dc6196411fce9ee9b4f5e8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If the number of elements a hash will hold is known, the hash should be initialized with that capacity for improved performance. Otherwise, the default is 11 and inputs less than 11 are ignored.</source>
          <target state="translated">&lt;em&gt;initial_capacity는&lt;/em&gt; 성장의 경우에는 내부 버퍼가 불필요하게 재 할당을 회피하는 데에 유용하다. 해시가 보유 할 요소의 수를 알고있는 경우 성능 향상을 위해 해시를 해당 용량으로 초기화해야합니다. 그렇지 않으면 기본값은 11이고 11 미만의 입력은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c6da883de0395a540f3169fd41268ac260cf90f5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If the number of elements a hash will hold is known, the hash should be initialized with that capacity for improved performance. Otherwise, the default is 8. Inputs lower than 8 are ignored.</source>
          <target state="translated">The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If the number of elements a hash will hold is known, the hash should be initialized with that capacity for improved performance. Otherwise, the default is 8. Inputs lower than 8 are ignored.</target>
        </trans-unit>
        <trans-unit id="2ed78875a62987193980f5047120cbd761267d03" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffer in case of growth. If you have an estimate of the maximum number of elements an array will hold, the array should be initialized with that capacity for improved performance.</source>
          <target state="translated">&lt;em&gt;initial_capacity는&lt;/em&gt; 성장의 경우에는 내부 버퍼가 불필요하게 재 할당을 회피하는 데에 유용하다. 어레이가 보유 할 최대 요소 수의 추정치가있는 경우 성능 향상을 위해 해당 용량으로 어레이를 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="7baf271fb624856a3469e176c34f8fa3b89283f6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;initial_capacity&lt;/em&gt; is useful to avoid unnecessary reallocations of the internal buffers in case of growth. If you have an estimate of the maximum number of elements the pool will hold it should be initialized with that capacity for improved performance.</source>
          <target state="translated">&lt;em&gt;initial_capacity는&lt;/em&gt; 성장의 경우에는 내부 버퍼가 불필요하게 재 할당을 방지하는 데 유용하다. 풀에 보유 할 최대 요소 수를 예상하면 성능을 향상시키기 위해 해당 용량으로 풀을 보유해야합니다.</target>
        </trans-unit>
        <trans-unit id="082a9afbda2cb1b0f6552fd53000193048db0545" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;invalid&lt;/em&gt; argument can be:</source>
          <target state="translated">&lt;em&gt;유효하지 않은&lt;/em&gt; 인수가 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="116ceb0ceef4ca1cee47533c2e118c6a52fb9b9a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;other&lt;/em&gt; must have the same or fewer elements than this set, and all of elements in the &lt;em&gt;other&lt;/em&gt; set must be present in this set.</source>
          <target state="translated">&lt;em&gt;다른&lt;/em&gt; 세트와 같거나 적은 요소를 가지고 있어야하고, 모든 요소에 &lt;em&gt;다른&lt;/em&gt; 세트는이 세트에 존재한다.</target>
        </trans-unit>
        <trans-unit id="6ffc77fd23d96be3ef2345da029c01227c05e67f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;padding&lt;/em&gt; parameter defaults to &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;false&lt;/code&gt;, enough &lt;code&gt;=&lt;/code&gt; characters are not added to make the output divisible by 4.</source>
          <target state="translated">&lt;em&gt;패딩&lt;/em&gt; 기본값 매개 변수 &lt;code&gt;true&lt;/code&gt; . 때 &lt;code&gt;false&lt;/code&gt; , 충분한 &lt;code&gt;=&lt;/code&gt; 의 문자는 4 출력 나눌 수 있도록 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="45ed0a950ff4677992ea3425dd1059324956f95b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;start&lt;/em&gt; argument can be negative to start counting from the end of the string.</source>
          <target state="translated">&lt;em&gt;시작&lt;/em&gt; 인수는 문자열의 끝에서 계산을 시작하는 음수가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26c74a8102f56eb2c014c035dc7e9ffee86aa61e" translate="yes" xml:space="preserve">
          <source>The Benchmark module provides methods for benchmarking Crystal code, giving detailed reports on the time and memory taken for each task.</source>
          <target state="translated">벤치 마크 모듈은 Crystal 코드 벤치마킹 방법을 제공하여 각 작업에 소요되는 시간과 메모리에 대한 자세한 보고서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="095749f26eb427de78ef0e21faacaa69dec2c444" translate="yes" xml:space="preserve">
          <source>The C &lt;code&gt;char&lt;/code&gt; type is &lt;code&gt;UInt8&lt;/code&gt; in Crystal, so a &lt;code&gt;char*&lt;/code&gt; or a &lt;code&gt;const char*&lt;/code&gt; is &lt;code&gt;UInt8*&lt;/code&gt;. The &lt;code&gt;Char&lt;/code&gt; type in Crystal is a unicode codepoint so it is represented by four bytes, making it similar to an &lt;code&gt;Int32&lt;/code&gt;, not to an &lt;code&gt;UInt8&lt;/code&gt;. There's also the alias &lt;code&gt;LibC::Char&lt;/code&gt; if in doubt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43eea8c10c8c90a84f34a4b4355976aab9f9896e" translate="yes" xml:space="preserve">
          <source>The C name can be put in quotes to be able to write a name that is not a valid identifier:</source>
          <target state="translated">유효한 식별자가 아닌 이름을 쓸 수 있도록 C 이름을 따옴표로 묶을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06b113212ff65a376be85230db339448ba08baf9" translate="yes" xml:space="preserve">
          <source>The Compress::Zip module contains readers and writers of the zip file format, described at &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;PKWARE's site&lt;/a&gt;.</source>
          <target state="translated">The Compress::Zip module contains readers and writers of the zip file format, described at &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;PKWARE's site&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aa2f817b2d97c10cf60b8f8fbcf0b8338c76aec2" translate="yes" xml:space="preserve">
          <source>The Compress::Zlib module contains readers and writers of zlib format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950&lt;/a&gt;.</source>
          <target state="translated">The Compress::Zlib module contains readers and writers of zlib format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ebded078f2c9bc998559ff22d6a51ef0c260511f" translate="yes" xml:space="preserve">
          <source>The Crystal &lt;a href=&quot;https://crystal-lang.org/api&quot;&gt;Standard Library&lt;/a&gt; provides macros which simplify the definition of getter and setter methods:</source>
          <target state="translated">Crystal &lt;a href=&quot;https://crystal-lang.org/api&quot;&gt;Standard Library&lt;/a&gt; 는 getter 및 setter 메소드의 정의를 단순화하는 매크로를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="11bcce27589af8645d623b8e1591692cd37533a1" translate="yes" xml:space="preserve">
          <source>The Crystal compiler doesn't run on Windows &lt;em&gt;yet&lt;/em&gt;. But Crystal can be used with the &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Windows Subsystem for Linux&lt;/a&gt;, a compatibility-layer for Linux executables running natively on Windows 10.</source>
          <target state="translated">Crystal 컴파일러는 &lt;em&gt;아직&lt;/em&gt; Windows에서 실행되지 않습니다 . 그러나 Crystal은 Windows 10에서 기본적으로 실행되는 Linux 실행 파일 용 호환성 계층 인 &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Linux 용 Windows 하위 시스템&lt;/a&gt; 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="246a934abe5eec85f56c980a571d87666319f371" translate="yes" xml:space="preserve">
          <source>The Crystal compiler has a &lt;code&gt;spec&lt;/code&gt; command with tools to constrain which examples get run and tailor the output.</source>
          <target state="translated">Crystal 컴파일러에는 실행되는 예제를 제한하고 출력을 조정하는 도구 가 포함 된 &lt;code&gt;spec&lt;/code&gt; 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac9f8bc907d9554b2d118c48b43c52ba78e9435e" translate="yes" xml:space="preserve">
          <source>The Crystal compiler has a &lt;code&gt;spec&lt;/code&gt; command with tools to constrain which examples get run and tailor the output. All specs of a project are compiled and executed through the command &lt;code&gt;crystal spec&lt;/code&gt;.</source>
          <target state="translated">Crystal 컴파일러에는 실행되는 예제를 제한하고 출력을 조정하는 도구 가 포함 된 &lt;code&gt;spec&lt;/code&gt; 명령이 있습니다. 프로젝트의 모든 스펙은 &lt;code&gt;crystal spec&lt;/code&gt; 명령을 통해 컴파일되고 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="d2853e9df7bba5ea8d57e5fe8ef5ae7ad099086e" translate="yes" xml:space="preserve">
          <source>The Crystal compiler will by default use pkg-config to find the locations of libraries to link with.</source>
          <target state="translated">Crystal 컴파일러는 기본적으로 pkg-config를 사용하여 연결할 라이브러리 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="e8ec4c6d13530e32fb0a267e4fcd82138d0748b0" translate="yes" xml:space="preserve">
          <source>The Crystal repository is hosted at &lt;a href=&quot;https://github.com/crystal-lang/crystal&quot;&gt;crystal-lang/crystal&lt;/a&gt; on GitHub.</source>
          <target state="translated">The Crystal repository is hosted at &lt;a href=&quot;https://github.com/crystal-lang/crystal&quot;&gt;crystal-lang/crystal&lt;/a&gt; on GitHub.</target>
        </trans-unit>
        <trans-unit id="496565dce03820f56e8fc9474e24b5e134107258" translate="yes" xml:space="preserve">
          <source>The Crystal standard library includes some pre-defined annotations:</source>
          <target state="translated">Crystal 표준 라이브러리에는 몇 가지 사전 정의 된 주석이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="513ed30279f67f9dd200d1c674eced1ee2bd6317" translate="yes" xml:space="preserve">
          <source>The DB module, is our place to stand when working with databases in Crystal. As written in the documentation: &lt;em&gt;is a unified interface for database access&lt;/em&gt;.</source>
          <target state="translated">The DB module, is our place to stand when working with databases in Crystal. As written in the documentation: &lt;em&gt;is a unified interface for database access&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="62abce2e3b7d18eb4d632278d60fd828f714c29e" translate="yes" xml:space="preserve">
          <source>The Deflate module contains readers and writers of DEFLATE format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1951.txt&quot;&gt;RFC 1951&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167999917301411bb58f0f7dfb463b58db11dbc9" translate="yes" xml:space="preserve">
          <source>The Digest module contains implementations of hashing algorithms like &lt;code&gt;&lt;a href=&quot;digest/md5&quot;&gt;Digest::MD5&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;digest/sha1&quot;&gt;Digest::SHA1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">The Digest module contains implementations of hashing algorithms like &lt;code&gt;&lt;a href=&quot;digest/md5&quot;&gt;Digest::MD5&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;digest/sha1&quot;&gt;Digest::SHA1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aaa7997408fd8ef83f3611fed91d6c095d4826b" translate="yes" xml:space="preserve">
          <source>The Event Loop, which is just another fiber, being in charge of async tasks, like for example files, sockets, pipes, signals and timers (like doing a &lt;code&gt;sleep&lt;/code&gt;).</source>
          <target state="translated">이벤트 루프는 파일, 소켓, 파이프, 신호 및 타이머와 같은 비동기 작업 (예 : &lt;code&gt;sleep&lt;/code&gt; ) 을 담당하는 또 다른 광섬유 입니다.</target>
        </trans-unit>
        <trans-unit id="2932829212c0aedee2b68bf1bf885f260e8e48c8" translate="yes" xml:space="preserve">
          <source>The Flate module contains readers and writers of DEFLATE format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1951.txt&quot;&gt;RFC 1951&lt;/a&gt;.</source>
          <target state="translated">Flate 모듈에는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc1951.txt&quot;&gt;RFC 1951에&lt;/a&gt; 지정된 DEFLATE 형식 압축 데이터의 리더 및 기록기가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1a3a6862df64d2244b0c478f207f1efd99cc6a8" translate="yes" xml:space="preserve">
          <source>The Gzip module contains readers and writers of gzip format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1952.txt&quot;&gt;RFC 1952&lt;/a&gt;.</source>
          <target state="translated">Gzip 모듈에는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc1952.txt&quot;&gt;RFC 1952에&lt;/a&gt; 지정된 gzip 형식 압축 데이터의 리더 및 기록기가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80874a7a6067509ab808ed784692c5048c982967" translate="yes" xml:space="preserve">
          <source>The HTTP module contains &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;http/server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http/websocket&quot;&gt;HTTP::WebSocket&lt;/a&gt;&lt;/code&gt; implementations.</source>
          <target state="translated">HTTP 모듈에는 &lt;code&gt;&lt;a href=&quot;http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;http/server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;http/websocket&quot;&gt;HTTP::WebSocket&lt;/a&gt;&lt;/code&gt; 구현이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7210a8d45812f1f6ad2d64962710554d301159a0" translate="yes" xml:space="preserve">
          <source>The IEC standard prefixes (&lt;code&gt;Ki&lt;/code&gt;, &lt;code&gt;Mi&lt;/code&gt;, &lt;code&gt;Gi&lt;/code&gt;, &lt;code&gt;Ti&lt;/code&gt;, &lt;code&gt;Pi&lt;/code&gt;, &lt;code&gt;Ei&lt;/code&gt;, &lt;code&gt;Zi&lt;/code&gt;, &lt;code&gt;Yi&lt;/code&gt;) based on powers of 1000.</source>
          <target state="translated">IEC 표준 접두사 ( &lt;code&gt;Ki&lt;/code&gt; , &lt;code&gt;Mi&lt;/code&gt; , &lt;code&gt;Gi&lt;/code&gt; , &lt;code&gt;Ti&lt;/code&gt; , &lt;code&gt;Pi&lt;/code&gt; , &lt;code&gt;Ei&lt;/code&gt; , &lt;code&gt;Zi&lt;/code&gt; , &lt;code&gt;Yi&lt;/code&gt; )는 1000의 거듭 제곱을 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="17b7c182b134c533f4686ee776344c3a59482ff5" translate="yes" xml:space="preserve">
          <source>The IO starts at position zero for reading.</source>
          <target state="translated">IO는 읽기 위해 위치 0에서 시작합니다.</target>
        </trans-unit>
        <trans-unit id="6bafde48904d0ae0de3bcde7c34c01518d44c6c9" translate="yes" xml:space="preserve">
          <source>The ISO 8601 date format.</source>
          <target state="translated">ISO 8601 날짜 형식입니다.</target>
        </trans-unit>
        <trans-unit id="a04d481795c047179a2ee48089b718eba567f7e5" translate="yes" xml:space="preserve">
          <source>The ISO 8601 date time format.</source>
          <target state="translated">ISO 8601 날짜 시간 형식입니다.</target>
        </trans-unit>
        <trans-unit id="1c961e8e18cc38295c61b2a7222c42aefba3c770" translate="yes" xml:space="preserve">
          <source>The ISO 8601 time format.</source>
          <target state="translated">ISO 8601 시간 형식입니다.</target>
        </trans-unit>
        <trans-unit id="43ed1dc44d29b51880fe516a3a988e2cf78bc72f" translate="yes" xml:space="preserve">
          <source>The ISO calendar year to which the week belongs is not always in the same as the year of the regular calendar date. The first three days of January sometimes belong to week 52 (or 53) of the previous year; equally the last three days of December sometimes are already in week 1 of the following year.</source>
          <target state="translated">주가 속한 ISO 달력 연도가 항상 일반 달력 날짜의 연도와 동일하지는 않습니다. 1 월 첫 3 일은 전년도 52 주 (또는 53 주)에 속합니다. 12 월의 마지막 3 일은 때때로 이미 다음 해 1 주차에 있습니다.</target>
        </trans-unit>
        <trans-unit id="228dafd6179d5875e92d7f01e81f1934d3aa42c8" translate="yes" xml:space="preserve">
          <source>The JSON format itself does not specify a time data type, this method just assumes that a string holding a ISO 8601 time format can be interpreted as a time value.</source>
          <target state="translated">JSON 형식 자체는 시간 데이터 유형을 지정하지 않으며,이 방법은 ISO 8601 시간 형식을 보유한 문자열을 시간 값으로 해석 할 수 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="1185e96419d9d1ed2f07417c50469963555dc1b6" translate="yes" xml:space="preserve">
          <source>The JSON format itself does not specify a time data type, this method just assumes that a string holding a RFC 3339 time format will be interpreted as a time value.</source>
          <target state="translated">JSON 형식 자체는 시간 데이터 유형을 지정하지 않으며,이 방법은 RFC 3339 시간 형식을 보유한 문자열이 시간 값으로 해석된다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="e3f3b7b16cf17dc7e84258d17d1db205edf18511" translate="yes" xml:space="preserve">
          <source>The JSON module allows parsing and generating &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; documents.</source>
          <target state="translated">JSON 모듈을 사용하면 &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; 문서를 구문 분석하고 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9369a6cca3d5cf417077b87ec145c7e0d2d32df" translate="yes" xml:space="preserve">
          <source>The JSON module allows parsing and generating &lt;a href=&quot;https://json.org/&quot;&gt;JSON&lt;/a&gt; documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5c6c0766cb92bf425f36b14da6f837c49d4740" translate="yes" xml:space="preserve">
          <source>The OAuth module provides an &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849&quot;&gt;RFC 5849&lt;/a&gt;.</source>
          <target state="translated">OAuth 모듈은 &lt;a href=&quot;https://tools.ietf.org/html/rfc5849&quot;&gt;RFC 5849에&lt;/a&gt; 지정된 &lt;code&gt;&lt;a href=&quot;oauth/consumer&quot;&gt;OAuth::Consumer&lt;/a&gt;&lt;/code&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5e0019e40cebf225476af7fc5485763fd0ab22a9" translate="yes" xml:space="preserve">
          <source>The OAuth module provides an &lt;code&gt;&lt;a href=&quot;oauth2/client&quot;&gt;OAuth2::Client&lt;/a&gt;&lt;/code&gt; as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749&quot;&gt;RFC 6749&lt;/a&gt;.</source>
          <target state="translated">OAuth 모듈은 &lt;a href=&quot;https://tools.ietf.org/html/rfc6749&quot;&gt;RFC 6749에&lt;/a&gt; 지정된 &lt;code&gt;&lt;a href=&quot;oauth2/client&quot;&gt;OAuth2::Client&lt;/a&gt;&lt;/code&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="e3d5ad4cc469d2e7b77356056225510ee84b1bf1" translate="yes" xml:space="preserve">
          <source>The Proc type</source>
          <target state="translated">Proc 유형</target>
        </trans-unit>
        <trans-unit id="fce18036495868d9659f03df3d44dfcec351c534" translate="yes" xml:space="preserve">
          <source>The Program</source>
          <target state="translated">프로그램</target>
        </trans-unit>
        <trans-unit id="3f4b331987b1aaf724056fe853e6d70f80673e09" translate="yes" xml:space="preserve">
          <source>The Runtime Scheduler</source>
          <target state="translated">런타임 스케줄러</target>
        </trans-unit>
        <trans-unit id="102e2b07fdae53df53734526fd9c2db526c4e21b" translate="yes" xml:space="preserve">
          <source>The Runtime Scheduler, in charge of executing all fibers when the time is right.</source>
          <target state="translated">적절한 시간에 모든 파이버를 실행하는 런타임 스케줄러.</target>
        </trans-unit>
        <trans-unit id="e127a192f2256e22ef64756febf709a2977a36a8" translate="yes" xml:space="preserve">
          <source>The SSL server wraps a &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; listening on &lt;code&gt;host:port&lt;/code&gt;.</source>
          <target state="translated">SSL 서버 는 &lt;code&gt;host:port&lt;/code&gt; 에서 수신 대기 하는 &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; 를 랩핑합니다 .</target>
        </trans-unit>
        <trans-unit id="993cd52af8f852fbc873f8473c1d225a3a5acc7e" translate="yes" xml:space="preserve">
          <source>The SSL server wraps a &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; listening on an unused port on &lt;em&gt;host&lt;/em&gt;.</source>
          <target state="translated">SSL 서버 는 &lt;em&gt;호스트&lt;/em&gt; 에서 사용되지 않는 포트에서 수신 대기 하는 &lt;code&gt;&lt;a href=&quot;../tcpserver&quot;&gt;TCPServer&lt;/a&gt;&lt;/code&gt; 를 랩핑 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c1595db4bc4b8523c7b00f405e76d7d591c1dd0a" translate="yes" xml:space="preserve">
          <source>The String version just creates a new &lt;a href=&quot;http://crystal-lang.org/api/Exception.html&quot;&gt;Exception&lt;/a&gt; instance with that message.</source>
          <target state="translated">문자열 버전 은 해당 메시지 로 새 &lt;a href=&quot;http://crystal-lang.org/api/Exception.html&quot;&gt;예외&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8c80d2df18a6198b85456576a2042aee2a69b82d" translate="yes" xml:space="preserve">
          <source>The XML module allows parsing and generating &lt;a href=&quot;https://www.w3.org/XML/&quot;&gt;XML&lt;/a&gt; documents.</source>
          <target state="translated">XML 모듈을 사용하면 &lt;a href=&quot;https://www.w3.org/XML/&quot;&gt;XML&lt;/a&gt; 문서를 구문 분석하고 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fb09953e062ea577b5ddb247457a645d3fb45fa" translate="yes" xml:space="preserve">
          <source>The YAML module provides serialization and deserialization of YAML version 1.1 to/from native Crystal data structures, with the additional independent types specified in http://yaml.org/type/</source>
          <target state="translated">YAML 모듈은 http://yaml.org/type/에 지정된 추가 독립 유형을 사용하여 기본 Crystal 데이터 구조와의 YAML 버전 1.1 직렬화 및 역 직렬화를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a44017a79d04272fe9a78e56baad945f7ca46c5b" translate="yes" xml:space="preserve">
          <source>The YAML::Nodes module provides an implementation of an in-memory YAML document tree. This tree can be generated with the &lt;code&gt;&lt;a href=&quot;nodes#parse(string_or_io:String%7CIO):Document-class-method&quot;&gt;YAML::Nodes.parse&lt;/a&gt;&lt;/code&gt; method or created with a &lt;code&gt;&lt;a href=&quot;nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">YAML :: Nodes 모듈은 메모리 내 YAML 문서 트리의 구현을 제공합니다. 이 트리는 &lt;code&gt;&lt;a href=&quot;nodes#parse(string_or_io:String%7CIO):Document-class-method&quot;&gt;YAML::Nodes.parse&lt;/a&gt;&lt;/code&gt; 메소드로 생성하거나 &lt;code&gt;&lt;a href=&quot;nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt; 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c8dbee7cb1cee8bef1459835cb0aff74e8e33f2" translate="yes" xml:space="preserve">
          <source>The Zip module contains readers and writers of the zip file format, described at &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;PKWARE's site&lt;/a&gt;.</source>
          <target state="translated">Zip 모듈에는 &lt;a href=&quot;https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT&quot;&gt;PKWARE 사이트에&lt;/a&gt; 설명 된 zip 파일 형식의 리더 및 기록기가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ce59e4bdd57d98f027a247e2e6e5544e94683b0" translate="yes" xml:space="preserve">
          <source>The Zlib module contains readers and writers of zlib format compressed data, as specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950&lt;/a&gt;.</source>
          <target state="translated">Zlib 모듈에는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc1950.txt&quot;&gt;RFC 1950에&lt;/a&gt; 지정된 zlib 형식 압축 데이터의 리더 및 기록기가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04ab87542e1530d800ac1df658fae4cbe6b51c49" translate="yes" xml:space="preserve">
          <source>The ability of having immediate feedback on what we are working should be one of the most important characteristics in software development. Imagine making one change to our source code and having to wait 2 weeks to see if it broke something? oh! That would be a nightmare! For this, Continuous Integration will help a team to have immediate and frequent feedback about the status of what they are building.</source>
          <target state="translated">The ability of having immediate feedback on what we are working should be one of the most important characteristics in software development. Imagine making one change to our source code and having to wait 2 weeks to see if it broke something? oh! That would be a nightmare! For this, Continuous Integration will help a team to have immediate and frequent feedback about the status of what they are building.</target>
        </trans-unit>
        <trans-unit id="4b5f00738405f1ed3933e935ceb50dd3dea27652" translate="yes" xml:space="preserve">
          <source>The above &lt;strong&gt;doesn&amp;rsquo;t&lt;/strong&gt; work with instance variables or class variables. To work with these, first assign them to a variable:</source>
          <target state="translated">위의 인스턴스 변수 또는 클래스 변수 &lt;strong&gt;에는&lt;/strong&gt; 작동 &lt;strong&gt;하지 않습니다&lt;/strong&gt; . 이 작업을 수행하려면 먼저 변수에 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="a804ccbb78c43a03510970e8c8f2e9338d5413d2" translate="yes" xml:space="preserve">
          <source>The above also works if there are ands (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) in the condition:</source>
          <target state="translated">위 의 조건에 ands ( &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; )가있는 경우에도 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a1c9efe000b242c646dbfd54fb712ee183d6ea61" translate="yes" xml:space="preserve">
          <source>The above code captures the block of code passed to &lt;code&gt;int_to_int&lt;/code&gt; in the &lt;code&gt;block&lt;/code&gt; variable, and returns it from the method. The type of &lt;code&gt;proc&lt;/code&gt; is &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;&lt;code&gt;Proc(Int32, Int32)&lt;/code&gt;&lt;/a&gt;, a function that accepts a single &lt;code&gt;Int32&lt;/code&gt; argument and returns an &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c602bba78ff08495ac576d900850a987bc8493" translate="yes" xml:space="preserve">
          <source>The above code captures the block of code passed to &lt;code&gt;int_to_int&lt;/code&gt; in the &lt;code&gt;block&lt;/code&gt; variable, and returns it from the method. The type of &lt;code&gt;proc&lt;/code&gt; is &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc(Int32, Int32)&lt;/a&gt;, a function that accepts a single &lt;code&gt;Int32&lt;/code&gt; argument and returns an &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">위의 코드는 &lt;code&gt;block&lt;/code&gt; 변수 에서 &lt;code&gt;int_to_int&lt;/code&gt; 에 전달 된 코드 블록을 캡처 하여 메소드에서 반환합니다. 의 타입 &lt;code&gt;proc&lt;/code&gt; 있다 &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;PROC (INT32, INT32)&lt;/a&gt; 단일받는 기능 &lt;code&gt;Int32&lt;/code&gt; 인수 및 반환 &lt;code&gt;Int32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="482726665ac9e182f65bd69d3da115ac7a67df13" translate="yes" xml:space="preserve">
          <source>The above code gives this compile error:</source>
          <target state="translated">위의 코드는이 컴파일 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a6405d5019e9bc272db6cdff6739c053f2522b0b" translate="yes" xml:space="preserve">
          <source>The above code will make sense once you read the whole language reference, but we can already learn some things.</source>
          <target state="translated">위의 코드는 전체 언어 참조를 읽으면 의미가 있지만 이미 몇 가지 사항을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5706d80d8aec1ab71b41a3a63a014d3965e051b9" translate="yes" xml:space="preserve">
          <source>The above could also be implemented with a Symbol:</source>
          <target state="translated">위의 기호를 사용하여 구현할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c83f99c41c0bff6b77243fc1d08e0f9b2324ef9" translate="yes" xml:space="preserve">
          <source>The above examples use unbuffered channels: when sending a value, if a fiber is waiting on that channel then execution continues on that fiber.</source>
          <target state="translated">위의 예는 버퍼되지 않은 채널을 사용합니다. 값을 보낼 때 파이버가 해당 채널을 기다리는 경우 해당 파이버에서 실행이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="656d5d691a11dc89cab934b727b7b657f2a26bf2" translate="yes" xml:space="preserve">
          <source>The above generates a program that will have the contents of &lt;code&gt;some_file.txt&lt;/code&gt;. The file, however, is read at compile time and will not be needed at runtime.</source>
          <target state="translated">위의 내용은 &lt;code&gt;some_file.txt&lt;/code&gt; 의 내용을 가진 프로그램을 생성합니다 . 그러나 파일은 컴파일 타임에 읽 히며 런타임에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6c433adda1b56a97e3e970be41047634b01806e" translate="yes" xml:space="preserve">
          <source>The above happens even if &lt;code&gt;something_dangerous_that_returns_Int32&lt;/code&gt; never raises, or if &lt;code&gt;a&lt;/code&gt; was assigned a value and then a method that potentially raises is executed:</source>
          <target state="translated">위는 경우에도 발생 &lt;code&gt;something_dangerous_that_returns_Int32&lt;/code&gt; 가 제기되지 않을 경우, 또는 &lt;code&gt;a&lt;/code&gt; 다음 값과 잠재적으로 실행 제기하는 방법을 할당 :</target>
        </trans-unit>
        <trans-unit id="bcb9caec3740c65229c0b2a54051836485d126ee" translate="yes" xml:space="preserve">
          <source>The above is mostly useful with flag enums.</source>
          <target state="translated">위의 내용은 주로 플래그 열거 형에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1621fe8a8f7d10296061ab3f96abd962a66da91a" translate="yes" xml:space="preserve">
          <source>The above is simply rewritten to:</source>
          <target state="translated">위의 내용은 간단히 다음과 같이 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="9768279392033a963a63cadc30475985e7e4b6bb" translate="yes" xml:space="preserve">
          <source>The above is simply syntax sugar of this:</source>
          <target state="translated">위는 단순히 이것의 구문 설탕입니다.</target>
        </trans-unit>
        <trans-unit id="2a07a4b43f1d70c3a43cc842b0248805bbd090f0" translate="yes" xml:space="preserve">
          <source>The above is the same as this:</source>
          <target state="translated">위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57a8c9f43fefd72d2d0f7808adbb754a2c6bc9c7" translate="yes" xml:space="preserve">
          <source>The above is useful for providing overloads based on types, not instances:</source>
          <target state="translated">위의 예는 인스턴스가 아닌 유형을 기반으로 과부하를 제공하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dbbbdd4bb540a3091716b8351544904cd0edd01b" translate="yes" xml:space="preserve">
          <source>The above logic works &lt;strong&gt;only for local variables&lt;/strong&gt;. It doesn&amp;rsquo;t work with instance variables, class variables, or variables bound in a closure. The value of these kinds of variables could potentially be affected by another fiber after the condition was checked, rendering it &lt;code&gt;nil&lt;/code&gt;. It also does not work with constants.</source>
          <target state="translated">위의 논리는 &lt;strong&gt;지역 변수에만&lt;/strong&gt; 적용 &lt;strong&gt;됩니다&lt;/strong&gt; . 인스턴스 변수, 클래스 변수 또는 클로저에 바인딩 된 변수에서는 작동하지 않습니다. 이러한 종류의 변수 값은 조건을 확인한 후 다른 섬유의 영향을 받아 잠재적으로 &lt;code&gt;nil&lt;/code&gt; 이 될 수 있습니다. 상수에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2a6b864cceaad721862897225ec878ce0958f539" translate="yes" xml:space="preserve">
          <source>The above methods delegate to a &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">위의 메소드는 &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 인스턴스에 위임 합니다.</target>
        </trans-unit>
        <trans-unit id="b46c5f49ab483965caa577aae8f803d42b87ba7e" translate="yes" xml:space="preserve">
          <source>The above might not seem to be useful, but it is when, for example, mapping an array of elements:</source>
          <target state="translated">위의 내용은 유용하지 않을 수도 있지만 예를 들어 요소 배열을 매핑하는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="2832d8248ae199f774368b1d496760735fcebca3" translate="yes" xml:space="preserve">
          <source>The above prints &quot;2&quot; and &quot;3&quot;.</source>
          <target state="translated">위는 &quot;2&quot;와 &quot;3&quot;을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="d90554e7b062fa330c4bc308bb8a055de1f577ae" translate="yes" xml:space="preserve">
          <source>The above prints &quot;Before 1&quot; and &quot;Before 2&quot;. The &lt;code&gt;thrice&lt;/code&gt; method didn't execute the &lt;code&gt;puts &quot;Before 3&quot;&lt;/code&gt; expression because of the &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">위의 내용은 &quot;Before 1&quot;과 &quot;Before 2&quot;를 인쇄합니다. &lt;code&gt;thrice&lt;/code&gt; 방법은 실행하지 못했습니다 &lt;code&gt;puts &quot;Before 3&quot;&lt;/code&gt; 때문에 발현 &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3beb91c1e0a6c3144834c6803392d4652beaa01a" translate="yes" xml:space="preserve">
          <source>The above prints &quot;Got 1&quot; and &quot;Got 2&quot;.</source>
          <target state="translated">위의 &quot;Got 1&quot;및 &quot;Got 2&quot;가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="b44d7fd3b0fe5efd71b4f239ad69d0fc010d3afb" translate="yes" xml:space="preserve">
          <source>The above produces:</source>
          <target state="translated">위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5ca4589dcb158eaa50f8ae74813c4cf8260fdaa6" translate="yes" xml:space="preserve">
          <source>The above program prints &quot;10&quot; ten times. The problem is that there's only one variable &lt;code&gt;i&lt;/code&gt; that all spawned fibers refer to, and when &lt;code&gt;Fiber.yield&lt;/code&gt; is executed its value is 10.</source>
          <target state="translated">위의 프로그램은 &quot;10&quot;을 10 번 인쇄합니다. 문제는 모든 스폰 된 파이버가 참조하는 변수 &lt;code&gt;i&lt;/code&gt; 가 하나 &lt;code&gt;Fiber.yield&lt;/code&gt; 가 실행될 때 그 값은 10이라는 것입니다.</target>
        </trans-unit>
        <trans-unit id="54d023ab647646c46ff7e0e093c24819eab0a23a" translate="yes" xml:space="preserve">
          <source>The above program prints &quot;Hello!&quot; twice, once for each &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">위의 프로그램은 &quot;Hello!&quot;를 인쇄합니다. 각 &lt;code&gt;yield&lt;/code&gt; 에 대해 두 번, 한 번 .</target>
        </trans-unit>
        <trans-unit id="078b0861ba82af5a528dc088249014a70f5efb1d" translate="yes" xml:space="preserve">
          <source>The above program spawns two fibers. The first one creates a TCPServer, accepts one connection and reads lines from it, sending them to the channel. There's a second fiber reading lines from standard input. The main fiber reads the first 3 messages sent to the channel, either from the socket or stdin, then the program exits. The &lt;code&gt;gets&lt;/code&gt; calls will block the fibers and tell the Event Loop to continue from there if data comes.</source>
          <target state="translated">위의 프로그램은 두 개의 섬유를 생성합니다. 첫 번째는 TCPServer를 작성하고 한 개의 연결을 승인 한 후 회선을 읽어 채널로 보냅니다. 표준 입력에서 두 번째 광섬유 판독 라인이 있습니다. 메인 파이버는 소켓 또는 stdin에서 채널로 전송 된 처음 3 개의 메시지를 읽은 다음 프로그램이 종료됩니다. 은 &lt;code&gt;gets&lt;/code&gt; 호출이 섬유를 차단하고 데이터가 오면 거기에서 계속 이벤트 루프를 말할 것이다.</target>
        </trans-unit>
        <trans-unit id="11999f0a14eb703100105bc7165779496f6db462" translate="yes" xml:space="preserve">
          <source>The above program works but has a big performance problem: on every iteration a new array is created for &lt;code&gt;[&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;]&lt;/code&gt;. Remember: an array literal is just syntax sugar for creating an instance of an array and adding some values to it, and this will happen over and over on each iteration.</source>
          <target state="translated">위의 프로그램은 작동하지만 큰 성능 문제가 있습니다. 반복 할 때마다 &lt;code&gt;[&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;]&lt;/code&gt; 대해 새 배열이 작성됩니다 . 기억하십시오 : 배열 리터럴은 배열의 인스턴스를 생성하고 그것에 값을 추가하기위한 구문 설탕 일뿐이며, 각 반복마다 반복적으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f7e34974f2e9b5ad2ea8f1d31587680590b5c371" translate="yes" xml:space="preserve">
          <source>The above works, but creates many intermediate arrays: one for the &lt;em&gt;select&lt;/em&gt; call, one for the &lt;em&gt;map&lt;/em&gt; call and one for the &lt;em&gt;take&lt;/em&gt; call. A more efficient way is to invoke &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; without a block, which gives us an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; so we can process the operations lazily:</source>
          <target state="translated">The above works, but creates many intermediate arrays: one for the &lt;em&gt;select&lt;/em&gt; call, one for the &lt;em&gt;map&lt;/em&gt; call and one for the &lt;em&gt;take&lt;/em&gt; call. A more efficient way is to invoke &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; without a block, which gives us an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; so we can process the operations lazily:</target>
        </trans-unit>
        <trans-unit id="7a7ff822add2855066bbeb49a4b5413bd1d285fb" translate="yes" xml:space="preserve">
          <source>The above works, but creates many intermediate arrays: one for the &lt;em&gt;select&lt;/em&gt; call, one for the &lt;em&gt;map&lt;/em&gt; call and one for the &lt;em&gt;take&lt;/em&gt; call. A more efficient way is to invoke &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;block):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; without a block, which gives us an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; so we can process the operations lazily:</source>
          <target state="translated">위의 방법은 작동하지만 &lt;em&gt;선택&lt;/em&gt; 호출, &lt;em&gt;맵&lt;/em&gt; 호출 및 &lt;em&gt;테이크&lt;/em&gt; 콜에 대한 여러 중간 배열을 만듭니다 . 보다 효율적인 방법은 블록없이 &lt;code&gt;&lt;a href=&quot;range#each(&amp;amp;block):Nil-instance-method&quot;&gt;Range#each&lt;/a&gt;&lt;/code&gt; 를 호출 하여 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 를 제공 하여 작업을 느리게 처리 할 수 ​​있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4319040e3f3e88a7eb1830b2d394e99ce08e01cf" translate="yes" xml:space="preserve">
          <source>The advantage of being cooperative is that a lot of the overhead of doing a context switch (switching between threads) is gone.</source>
          <target state="translated">협력적인 장점은 컨텍스트 전환 (스레드 간 전환)을 수행하는 데 따른 많은 오버 헤드가 사라 졌다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a0483a1a0c683c09f20ecc1fd6d2bcfd420e1d72" translate="yes" xml:space="preserve">
          <source>The algorithm has a maximum password length limit of 71 characters (see &lt;a href=&quot;https://security.stackexchange.com/questions/39849/does-bcrypt-have-a-maximum-password-length#answer-39851&quot;&gt;this comment&lt;/a&gt; on stackoverflow).</source>
          <target state="translated">알고리즘의 최대 비밀번호 길이는 71 자로 제한 됩니다 (스택 오버 &lt;a href=&quot;https://security.stackexchange.com/questions/39849/does-bcrypt-have-a-maximum-password-length#answer-39851&quot;&gt;플로우&lt;/a&gt; 에 대한 주석 참조 ).</target>
        </trans-unit>
        <trans-unit id="3294db75e75614f5dd83452e28cedbf76148708a" translate="yes" xml:space="preserve">
          <source>The alphabet uses &lt;code&gt;'-'&lt;/code&gt; instead of &lt;code&gt;'+'&lt;/code&gt; and &lt;code&gt;'_'&lt;/code&gt; instead of &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">알파벳 사용하는 &lt;code&gt;'-'&lt;/code&gt; 대신에 &lt;code&gt;'+'&lt;/code&gt; 와 &lt;code&gt;'_'&lt;/code&gt; 대신 &lt;code&gt;'/'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="035793fc19fac18085aa0de163c96552ee327c1a" translate="yes" xml:space="preserve">
          <source>The amount of time in seconds between keepalive probes.</source>
          <target state="translated">Keepalive 프로브 사이의 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="33aeecac47306b5c4fc40f7e0d08938931d0cd08" translate="yes" xml:space="preserve">
          <source>The amount of time in seconds the connection must be idle before sending keepalive probes.</source>
          <target state="translated">연결 유지 프로브를 보내기 전에 연결이 유휴 상태 여야하는 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="3194bc97bbc1a908e06eeb6fcf94b91e73e87ffb" translate="yes" xml:space="preserve">
          <source>The annotation can then be applied to various items, including:</source>
          <target state="translated">그런 다음 주석을 포함하여 다양한 항목에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d085207e361cfeb24b4e38a7420e6c26047be8ad" translate="yes" xml:space="preserve">
          <source>The answer is that when we defined an &lt;code&gt;initialize&lt;/code&gt; method Crystal defined a &lt;code&gt;new&lt;/code&gt; method for us, like this:</source>
          <target state="translated">대답은 &lt;code&gt;initialize&lt;/code&gt; 메소드를 정의 할 때 Crystal 이 다음과 같이 &lt;code&gt;new&lt;/code&gt; 메소드를 정의한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f5ee68dc06a5633f096fb966481951f55ea2e0bc" translate="yes" xml:space="preserve">
          <source>The argument to sizeof is a &lt;a href=&quot;type_grammar&quot;&gt;type&lt;/a&gt; and is often combined with &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt;:</source>
          <target state="translated">sizeof에 대한 인수는 &lt;a href=&quot;type_grammar&quot;&gt;유형&lt;/a&gt; 이며 종종 &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt; 와 결합됩니다 .</target>
        </trans-unit>
        <trans-unit id="323085345e91d82985e77cff6266ff2095686196" translate="yes" xml:space="preserve">
          <source>The argument to the expression is a &lt;a href=&quot;type_grammar&quot;&gt;type&lt;/a&gt;.</source>
          <target state="translated">표현식에 대한 인수는 &lt;a href=&quot;type_grammar&quot;&gt;유형&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="10e7878a6a31218c4f011d4b711b96bc4b7e921a" translate="yes" xml:space="preserve">
          <source>The arguments are packed into a &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TupleLiteral.html&quot;&gt;&lt;code&gt;TupleLiteral&lt;/code&gt;&lt;/a&gt; and passed to the macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9759706afb143256972cc4ed251794bf1313f8" translate="yes" xml:space="preserve">
          <source>The arguments are packed into an &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt;&lt;code&gt;ArrayLiteral&lt;/code&gt;&lt;/a&gt; and passed to the macro.</source>
          <target state="translated">인수는 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ArrayLiteral.html&quot;&gt; &lt;code&gt;ArrayLiteral&lt;/code&gt; 에&lt;/a&gt; 압축되어 매크로에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a91dcd292727eb9f345153e9183d1ce699549f42" translate="yes" xml:space="preserve">
          <source>The arguments can be string literals, symbol literals or plain names:</source>
          <target state="translated">인수는 문자열 리터럴, 기호 리터럴 또는 일반 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a636e8953678708ca0f21117f0ec983b750f49f3" translate="yes" xml:space="preserve">
          <source>The array's generic type argument &lt;code&gt;T&lt;/code&gt; is inferred from the types of the elements inside the literal. When all elements of the array have the same type, &lt;code&gt;T&lt;/code&gt; equals to that. Otherwise it will be a union of all element types.</source>
          <target state="translated">배열의 제네릭 형식 인수 &lt;code&gt;T&lt;/code&gt; 는 리터럴 내의 요소 형식에서 유추됩니다. 배열의 모든 요소가 동일한 유형을 갖는 경우 &lt;code&gt;T&lt;/code&gt; 는 해당 유형과 같습니다. 그렇지 않으면 모든 요소 유형의 합집합이됩니다.</target>
        </trans-unit>
        <trans-unit id="9f7094e46a09112bb790b3b6e2395450f11027f3" translate="yes" xml:space="preserve">
          <source>The assignment operator &lt;code&gt;=&lt;/code&gt; assigns the value of the second operand to the first operand. The first operand is either a variable (in this case the operator can't be redefined) or a call (in this case the operator can be redefined). See &lt;a href=&quot;assignment&quot;&gt;assignment&lt;/a&gt; for details.</source>
          <target state="translated">The assignment operator &lt;code&gt;=&lt;/code&gt; assigns the value of the second operand to the first operand. The first operand is either a variable (in this case the operator can't be redefined) or a call (in this case the operator can be redefined). See &lt;a href=&quot;assignment&quot;&gt;assignment&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="d0e4d47921b9b0ea4286891ab14c908e3d50fef4" translate="yes" xml:space="preserve">
          <source>The assignment operator &lt;code&gt;=&lt;/code&gt; is the basis for all operators that combine an operator with assignment. The general form is &lt;code&gt;a &amp;lt;op&amp;gt;= b&lt;/code&gt; and the compiler transform that into &lt;code&gt;a = a &amp;lt;op&amp;gt; b&lt;/code&gt;.</source>
          <target state="translated">The assignment operator &lt;code&gt;=&lt;/code&gt; is the basis for all operators that combine an operator with assignment. The general form is &lt;code&gt;a &amp;lt;op&amp;gt;= b&lt;/code&gt; and the compiler transform that into &lt;code&gt;a = a &amp;lt;op&amp;gt; b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02666c97b2fb79ea47a69ae6a189d86846914eff" translate="yes" xml:space="preserve">
          <source>The backslash character \ can be used to escape ^ or - and is otherwise ignored unless it appears at the end of a range or set.</source>
          <target state="translated">백 슬래시 문자 \는 ^ 또는-를 이스케이프하는 데 사용될 수 있으며 범위 나 세트의 끝에 표시되지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5d86a5e86d7e691edfb9db88221d3ee7f764eb3b" translate="yes" xml:space="preserve">
          <source>The begin and end values do not necessarily need to be of the same type: &lt;code&gt;true..1&lt;/code&gt; is a valid range, although pretty useless &lt;code&gt;Enumerable&lt;/code&gt; methods won't work with incompatible types. They need at least to be comparable.</source>
          <target state="translated">begin 및 end 값은 반드시 같은 유형일 필요는 없습니다. &lt;code&gt;true..1&lt;/code&gt; 은 유효한 범위이지만, 쓸모없는 &lt;code&gt;Enumerable&lt;/code&gt; 메소드는 호환되지 않는 유형에서는 작동하지 않습니다. 그들은 적어도 비교할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cd4ddc951b26d069c0e772446bd498bd0bee508a" translate="yes" xml:space="preserve">
          <source>The behavior of the pool can be configured from a set of parameters that can appear as query string in the connection URI.</source>
          <target state="translated">풀의 동작은 연결 URI에서 쿼리 문자열로 표시 될 수있는 매개 변수 집합에서 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="669ab7eefaa697304280f141aa155d3622171703" translate="yes" xml:space="preserve">
          <source>The binary representation of this enum is defined to be same representation as the permission bits of a unix &lt;code&gt;st_mode&lt;/code&gt; field. &lt;code&gt;&lt;a href=&quot;permissions&quot;&gt;File::Permissions&lt;/a&gt;&lt;/code&gt; can also be compared to its underlying bitset, for example &lt;code&gt;File::Permissions::All == 0o777&lt;/code&gt; will always be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 열거의 이진 표현은 unix &lt;code&gt;st_mode&lt;/code&gt; 필드 의 허가 비트와 동일한 표현으로 정의됩니다 . &lt;code&gt;&lt;a href=&quot;permissions&quot;&gt;File::Permissions&lt;/a&gt;&lt;/code&gt; 는 기본 &lt;code&gt;File::Permissions::All == 0o777&lt;/code&gt; 와 비교할 수도 있습니다 (예 : File :: Permissions :: All == 0o777 은 항상 &lt;code&gt;true&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="1ab2f00524963337e2687e919d2ba4266b9852d6" translate="yes" xml:space="preserve">
          <source>The block is called for each ascii character (codepoint less than &lt;code&gt;0x80&lt;/code&gt;) and determines whether the value is to be encoded. When the return value is falsey, the character is encoded. Non-ASCII characters are always encoded.</source>
          <target state="translated">블록은 각 ASCII 문자 ( &lt;code&gt;0x80&lt;/code&gt; 미만의 코드 포인트)에 대해 호출 되며 값을 인코딩할지 여부를 결정합니다. 반환 값이 거짓이면 문자가 인코딩됩니다. 비 ASCII 문자는 항상 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="8735c5f0fae248dce7382e805df5c3e5cb97abe9" translate="yes" xml:space="preserve">
          <source>The block is called for each percent-encoded ASCII character and determines whether the value is to be decoded. When the return value is falsey, the character is decoded. Non-ASCII characters are always decoded.</source>
          <target state="translated">퍼센트 인코딩 된 각 ASCII 문자에 대해 블록이 호출되며 값을 디코딩할지 여부를 결정합니다. 반환 값이 거짓이면 문자가 디코딩됩니다. 비 ASCII 문자는 항상 디코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="b678bb8396299b5eef554b024d236c7cd2a38419" translate="yes" xml:space="preserve">
          <source>The block is only evaluated if the current message is to be emitted to some &lt;code&gt;&lt;a href=&quot;log/backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">The block is only evaluated if the current message is to be emitted to some &lt;code&gt;&lt;a href=&quot;log/backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8043c4c54dcf85a8a523df43794f910f810416a4" translate="yes" xml:space="preserve">
          <source>The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;&lt;a href=&quot;example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;&lt;a href=&quot;example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="170bf1c092f78ac38eb3948095b650af7a241e1f" translate="yes" xml:space="preserve">
          <source>The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;&lt;a href=&quot;spec/example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;&lt;a href=&quot;spec/example/procsy&quot;&gt;Example::Procsy&lt;/a&gt;&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="36ae9e679c7dc429ba208022cdd5e73ce2ddbf96" translate="yes" xml:space="preserve">
          <source>The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;Context::Procsy&lt;/code&gt; object.</source>
          <target state="translated">The block must call &lt;code&gt;run&lt;/code&gt; on the given &lt;code&gt;Context::Procsy&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="b40db3eab6d1f82e10559b92e03e896430461fe8" translate="yes" xml:space="preserve">
          <source>The block must implement a comparison between two elements &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, where &lt;code&gt;a &amp;lt; b&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;a == b&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;a &amp;gt; b&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. The comparison operator &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used for this.</source>
          <target state="translated">블록은 두 요소 &lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 사이의 비교를 구현해야합니다 . 여기서 &lt;code&gt;a &amp;lt; b&lt;/code&gt; 는 &lt;code&gt;-1&lt;/code&gt; 을 , &lt;code&gt;a == b&lt;/code&gt; 는 &lt;code&gt;0&lt;/code&gt; 을 , &lt;code&gt;a &amp;gt; b&lt;/code&gt; 는 &lt;code&gt;1&lt;/code&gt; 을 반환합니다 . 비교 연산자 &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa9315c1524c78e7c0ddfc771ed7729a661d31c6" translate="yes" xml:space="preserve">
          <source>The block must implement a comparison between two elements &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, where &lt;code&gt;a &amp;lt; b&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;a == b&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;a &amp;gt; b&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. The comparison operator &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used for this.</source>
          <target state="translated">블록은 두 요소 &lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 사이의 비교를 구현해야합니다 . 여기서 &lt;code&gt;a &amp;lt; b&lt;/code&gt; 는 &lt;code&gt;-1&lt;/code&gt; 을 , &lt;code&gt;a == b&lt;/code&gt; 는 &lt;code&gt;0&lt;/code&gt; 을 , &lt;code&gt;a &amp;gt; b&lt;/code&gt; 는 &lt;code&gt;1&lt;/code&gt; 을 반환합니다 . 비교 연산자 &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4af3fea31bddb946015db5a49cbbc1446d44eaf" translate="yes" xml:space="preserve">
          <source>The block variable &lt;code&gt;second&lt;/code&gt; also includes the &lt;code&gt;Nil&lt;/code&gt; type because the last &lt;code&gt;yield&lt;/code&gt; expression didn't include a second argument.</source>
          <target state="translated">마지막 &lt;code&gt;yield&lt;/code&gt; 표현식에 두 번째 인수가 포함되지 않았 으므로 블록 변수 &lt;code&gt;second&lt;/code&gt; 에도 &lt;code&gt;Nil&lt;/code&gt; 유형이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a5b828e2a2b316f9f8a28e9b6cc2c272411189e9" translate="yes" xml:space="preserve">
          <source>The browser will send cookies with both cross-site requests and same-site requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65004e032fc6f16412331ec9e39888aa714ed45c" translate="yes" xml:space="preserve">
          <source>The buffer is allocated on the stack, avoiding a heap allocation.</source>
          <target state="translated">버퍼는 힙 할당을 피하면서 스택에 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="5e281794f250e6bc9b7f49810850e5b085ce50f5" translate="yes" xml:space="preserve">
          <source>The buffering behaviour can be turned on/off with the &lt;code&gt;&lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt;#sync=&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;#read_buffering=&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="translated">버퍼링 동작은 &lt;code&gt;&lt;a href=&quot;buffered#sync=(sync)-instance-method&quot;&gt;#sync=&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;buffered#read_buffering=(read_buffering)-instance-method&quot;&gt;#read_buffering=&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 켜거나 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5fac4f5ddc22b92b6edab3ab53e0bf3578ea340" translate="yes" xml:space="preserve">
          <source>The build metadata of this semantic version</source>
          <target state="translated">이 시맨틱 버전의 빌드 메타 데이터</target>
        </trans-unit>
        <trans-unit id="8c028c8d7c168ec897f0714ce745b6b98bb2fdf8" translate="yes" xml:space="preserve">
          <source>The byte following the end of this slice (but not included in it) is defined to be zero. This allows passing the result of this function into C functions that expect a null-terminated &lt;code&gt;&lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt;*&lt;/code&gt;.</source>
          <target state="translated">이 슬라이스의 끝을 따르는 바이트 (포함되지는 않음)는 0으로 정의됩니다. 이를 통해이 함수의 결과를 널 종료 &lt;code&gt;&lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt;*&lt;/code&gt; C 함수로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12a7044b83e5b65e1f3f0799be7549d67873e29d" translate="yes" xml:space="preserve">
          <source>The bytes are encoded into a string of two-digit hexadecimal number (00-ff) per byte.</source>
          <target state="translated">바이트는 바이트 당 2 자리 16 진수 (00-ff) 문자열로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="b1dc181c589c2c81315127fbf5bd01314efb8a97" translate="yes" xml:space="preserve">
          <source>The bytesize returned by the block must be less than or equal to the capacity given to this String, otherwise &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">블록에서 반환 된 바이트 크기는이 문자열에 지정된 용량보다 작거나 같아야합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4ac8f2a086d4777e7a9b6e99489d3c44dad2d5b4" translate="yes" xml:space="preserve">
          <source>The calculation defaults to 5 seconds. During this stage we run the block in sets of the size calculated in the warmup stage. The measurements for those sets are then used to calculate the mean and standard deviation, which are then reported. Additionally we compare the means to that of the fastest.</source>
          <target state="translated">계산의 기본값은 5 초입니다. 이 단계에서는 예열 단계에서 계산 된 크기의 세트로 블록을 실행합니다. 그런 다음 해당 세트의 측정 값을 사용하여 평균 및 표준 편차를 계산 한 다음보고합니다. 또한 우리는 평균을 가장 빠른 방법과 비교합니다.</target>
        </trans-unit>
        <trans-unit id="59713a7aaa52a5d1c1bd0110014985176aee3f58" translate="yes" xml:space="preserve">
          <source>The calendaric calculations are based on the rules of the proleptic Gregorian calendar as specified in &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt;. Leap seconds are ignored.</source>
          <target state="translated">달력 계산은 &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601에&lt;/a&gt; 지정된 다발성 Gregorian 달력의 규칙을 기반으로합니다 . 윤초는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e3e66a336341e952658cec3e2d3462555ba10f88" translate="yes" xml:space="preserve">
          <source>The chained assignment is not only available to &lt;a href=&quot;local_variables&quot;&gt;local variables&lt;/a&gt; but also to &lt;a href=&quot;methods_and_instance_variables&quot;&gt;instance variables&lt;/a&gt;, &lt;a href=&quot;class_variables&quot;&gt;class variables&lt;/a&gt; and setter methods (methods that end with &lt;code&gt;=&lt;/code&gt;).</source>
          <target state="translated">체인 할당은 &lt;a href=&quot;local_variables&quot;&gt;로컬 변수&lt;/a&gt; 뿐만 아니라 &lt;a href=&quot;methods_and_instance_variables&quot;&gt;인스턴스 변수&lt;/a&gt; , &lt;a href=&quot;class_variables&quot;&gt;클래스 변수&lt;/a&gt; 및 setter 메서드 ( &lt;code&gt;=&lt;/code&gt; 로 끝나는 메서드 )에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35a8e6b73f0e3868ba4897491ad122eaaa7fc6aa" translate="yes" xml:space="preserve">
          <source>The character representing the end of a C string.</source>
          <target state="translated">C 문자열의 끝을 나타내는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="c910e16543eb6089a1ced423cb3d9a507173e278" translate="yes" xml:space="preserve">
          <source>The child method can use &lt;code&gt;:inherit:&lt;/code&gt; to explicitly copy the parent's documentation, without the &lt;code&gt;Description copied from ...&lt;/code&gt; text. &lt;code&gt;:inherit:&lt;/code&gt; can also be used to inject the parent's documentation into additional documentation on the child.</source>
          <target state="translated">The child method can use &lt;code&gt;:inherit:&lt;/code&gt; to explicitly copy the parent's documentation, without the &lt;code&gt;Description copied from ...&lt;/code&gt; text. &lt;code&gt;:inherit:&lt;/code&gt; can also be used to inject the parent's documentation into additional documentation on the child.</target>
        </trans-unit>
        <trans-unit id="208619b92138c118ddc080424dc40dd23a936289" translate="yes" xml:space="preserve">
          <source>The class that signals that there are no more elements in an &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 에 더 이상 요소가 없음을 알리는 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="246e83a0b2cce47050e6415df87dfb215152ad82" translate="yes" xml:space="preserve">
          <source>The classic &quot;hello world&quot; program looks like this in Crystal:</source>
          <target state="translated">Crystal에서 고전적인 &quot;hello world&quot;프로그램은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="14e81c614990e3fc64f551193ff5594abcd10c89" translate="yes" xml:space="preserve">
          <source>The closing delimiter may be followed by a number of optional modifiers to adjust the matching behaviour of the regular expression.</source>
          <target state="translated">닫는 분리 문자 다음에는 정규 표현식의 일치 동작을 조정하기위한 여러 선택적 수정자가 올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7486c68cd22b715cee9aba70b79ecf03143997ff" translate="yes" xml:space="preserve">
          <source>The code you write is up to you, but how you write it impacts whether people want to use your library and/or help you maintain it.</source>
          <target state="translated">작성하는 코드는 사용자에게 달려 있지만 작성 방법은 사람들이 라이브러리를 사용 하려는지 및 / 또는 유지 관리하는 데 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="60347285fa183e9559a829be9b82c53c06646d0f" translate="yes" xml:space="preserve">
          <source>The codepoint is the integer representation. The Universal Coded Character Set (UCS) standard, commonly known as Unicode, assigns names and meanings to numbers, these numbers are called codepoints.</source>
          <target state="translated">코드 포인트는 정수 표현입니다. 일반적으로 유니 코드라고하는 UCS (Universal Coded Character Set) 표준은 이름과 의미를 숫자에 할당하며이 숫자를 코드 포인트라고합니다.</target>
        </trans-unit>
        <trans-unit id="330d01950261d11e512866b0d0ec968a379ddfe6" translate="yes" xml:space="preserve">
          <source>The color &lt;code&gt;:default&lt;/code&gt; will just leave the object as it is (but it's an &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; then). That's handy in for example conditions:</source>
          <target state="translated">color &lt;code&gt;:default&lt;/code&gt; 는 객체를 그대로 둡니다 (그러나 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; ). 예를 들어 조건에 편리합니다.</target>
        </trans-unit>
        <trans-unit id="abea7844f29e40b2cc5ce68386f0a7ee86b755a3" translate="yes" xml:space="preserve">
          <source>The column where this node ends.</source>
          <target state="translated">이 노드가 끝나는 열입니다.</target>
        </trans-unit>
        <trans-unit id="660441ea48991c5819506361f40f8e3d2e10c1f2" translate="yes" xml:space="preserve">
          <source>The column where this node starts.</source>
          <target state="translated">이 노드가 시작되는 열입니다.</target>
        </trans-unit>
        <trans-unit id="6ec5d7f24e502f7603f8d48f715a8f383deed6ff" translate="yes" xml:space="preserve">
          <source>The command creates a static website in &lt;code&gt;output_dir&lt;/code&gt; (default &lt;code&gt;./docs&lt;/code&gt;), consisting of HTML files for each Crystal type, in a folder structure mirroring the Crystal namespaces. The entrypoint &lt;code&gt;docs/index.html&lt;/code&gt; can be opened by any web browser. The entire API docs are also stored as a JSON document in &lt;code&gt;$output_dir/index.json&lt;/code&gt;.</source>
          <target state="translated">이 명령은 Crystal 네임 스페이스를 미러링하는 폴더 구조에서 각 Crystal 유형에 대한 HTML 파일로 구성된 &lt;code&gt;output_dir&lt;/code&gt; (기본 &lt;code&gt;./docs&lt;/code&gt; ) 에 정적 웹 사이트를 만듭니다 . 시작점 &lt;code&gt;docs/index.html&lt;/code&gt; 은 모든 웹 브라우저에서 열 수 있습니다. 전체 API 문서도 &lt;code&gt;$output_dir/index.json&lt;/code&gt; 에 JSON 문서로 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="d213795e162c8a7f9cc897850b304185dc131844" translate="yes" xml:space="preserve">
          <source>The comparison is based on the instant time-line, even if the local date-time representation (wall clock) would compare differently.</source>
          <target state="translated">로컬 날짜-시간 표시 (월 시계)가 다르게 비교 되더라도 비교는 인스턴트 타임 라인을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="bccff557d651a67be956e45704f6c6d9373e2852" translate="yes" xml:space="preserve">
          <source>The comparison is performed strictly lexically: &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;./foo&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; treated as equal. To compare paths semantically, they need to be normalized and converted to the same kind.</source>
          <target state="translated">비교는 어휘 적으로 엄격하게 수행됩니다. &lt;code&gt;foo&lt;/code&gt; 와 &lt;code&gt;./foo&lt;/code&gt; 는 동일하게 취급 &lt;em&gt;되지 않습니다&lt;/em&gt; . 경로를 의미 적으로 비교하려면 경로를 정규화하고 동일한 종류로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="9c5e704caf82b468bda81e87129e91c0a1ad8163" translate="yes" xml:space="preserve">
          <source>The comparison operator is usually used to sort values:</source>
          <target state="translated">비교 연산자는 일반적으로 값을 정렬하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8f30e226d5c7e4d38dd234fed09b1a41dc52b2ae" translate="yes" xml:space="preserve">
          <source>The comparison operator.</source>
          <target state="translated">비교 연산자</target>
        </trans-unit>
        <trans-unit id="78b44ee2c15ecf5b5193e5c9005f49099249cf23" translate="yes" xml:space="preserve">
          <source>The comparison operator. Returns &lt;code&gt;0&lt;/code&gt; if the two objects are equal, a negative number if this object is considered less than &lt;em&gt;other&lt;/em&gt;, a positive number if this object is considered greater than &lt;em&gt;other&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if the two objects are not comparable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa25ea08f80503e909fd965e8fb970b9b1b0f4e" translate="yes" xml:space="preserve">
          <source>The comparison operator. Returns &lt;code&gt;0&lt;/code&gt; if the two objects are equal, a negative number if this object is considered less than &lt;em&gt;other&lt;/em&gt;, a positive number if this object is considered greter than &lt;em&gt;other&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if the two objects are not comparable.</source>
          <target state="translated">비교 연산자 반환 &lt;code&gt;0&lt;/code&gt; 개의 오브젝트가 동일한 경우, 이러한 목적은 이하의 것으로 간주되는 경우 음수 &lt;em&gt;다른&lt;/em&gt; , 이러한 목적은보다 greter 간주하는 경우 양수 &lt;em&gt;다른&lt;/em&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 두 개체가 대등하지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="0b20f37bebb82e98c5c70ee9f85d2cc23547b285" translate="yes" xml:space="preserve">
          <source>The compile-time type can be seen by using &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt;:</source>
          <target state="translated">컴파일 타임 유형은 &lt;a href=&quot;typeof&quot;&gt;typeof&lt;/a&gt; 를 사용하여 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="600fad680108c2270229532ed98e82feec48bc5f" translate="yes" xml:space="preserve">
          <source>The compiler infers this annotation for a method if it invokes a method that is marked as &lt;code&gt;@[Raises]&lt;/code&gt; or raises (recursively).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901b23955e8f736b478daa8b55c41b490c08a203" translate="yes" xml:space="preserve">
          <source>The compiler infers this attribute for a method if it invokes a method that is marked as &lt;code&gt;@[Raises]&lt;/code&gt; or raises (recursively).</source>
          <target state="translated">컴파일러는 &lt;code&gt;@[Raises]&lt;/code&gt; 로 표시 되거나 올린 (재귀 적으로) 메소드를 호출하는 경우 메소드에 대해이 속성을 유추합니다 .</target>
        </trans-unit>
        <trans-unit id="4f88ccffd3e268d871f2056efb1090cfcf65873f" translate="yes" xml:space="preserve">
          <source>The compiler is usually moderately smart about the type of local variables. For example:</source>
          <target state="translated">컴파일러는 일반적으로 로컬 변수 유형에 대해 적당합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e296b93503486e9e50ffce4c0ba5d7e1f49d91f4" translate="yes" xml:space="preserve">
          <source>The compiler knows that after the block, &lt;code&gt;x&lt;/code&gt; can be Int32 or String (it could know that it will always be String because the method always yields; this may improve in the future).</source>
          <target state="translated">컴파일러는 블록 뒤에 &lt;code&gt;x&lt;/code&gt; 가 Int32 또는 String 일 수 있음을 알고 있습니다 (메소드가 항상 생성되므로 항상 String 일 것임을 알 수 있습니다. 향후에는 개선 될 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="53f8ad6624549840c274a29bc1f7426230ff0a0e" translate="yes" xml:space="preserve">
          <source>The compiler knows what types are in each key, so when indexing a named tuple with a symbol literal the compiler will return the value for that key and with the expected type, like in the above snippet. Indexing with a symbol literal for which there's no key will give a compile-time error.</source>
          <target state="translated">컴파일러는 각 키에 어떤 유형이 있는지 알고 있으므로 기호 리터럴을 사용하여 명명 된 튜플을 인덱싱 할 때 컴파일러는 위의 스 니펫과 같이 해당 키의 값과 예상되는 유형의 값을 반환합니다. 키가없는 기호 리터럴로 인덱싱하면 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1bc6bfc0d4c299392bdbd27356b3219c7f083103" translate="yes" xml:space="preserve">
          <source>The compiler knows what types are in each position, so when indexing a tuple with an integer literal the compiler will return the value in that index and with the expected type, like in the above snippet. Indexing with an integer literal outside the bounds of the tuple will give a compile-time error.</source>
          <target state="translated">컴파일러는 각 위치에 어떤 유형이 있는지 알고 있으므로 정수 리터럴로 튜플을 인덱싱 할 때 컴파일러는 위의 스 니펫과 같이 해당 인덱스의 값과 예상 된 유형의 값을 반환합니다. 튜플의 범위를 벗어난 정수 리터럴을 사용하여 인덱싱하면 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bbe6a33fa8b555c81cd9d23de5cc4566013ad8b2" translate="yes" xml:space="preserve">
          <source>The compiler recognizes that in case &lt;code&gt;string&lt;/code&gt; is &lt;code&gt;Nil&lt;/code&gt;, the right hand side of the expression &lt;code&gt;string || raise&lt;/code&gt; will be evaluated. Since &lt;code&gt;typeof(raise &quot;Empty input&quot;)&lt;/code&gt; is &lt;code&gt;NoReturn&lt;/code&gt; the execution would not return to the current scope in that case. That leaves only &lt;code&gt;String&lt;/code&gt; as resulting type of the expression.</source>
          <target state="translated">컴파일러는 &lt;code&gt;string&lt;/code&gt; 이 &lt;code&gt;Nil&lt;/code&gt; 인 경우 표현식 &lt;code&gt;string || raise&lt;/code&gt; 의 오른쪽 || 인상 이 평가됩니다. 이후 &lt;code&gt;typeof(raise &quot;Empty input&quot;)&lt;/code&gt; 이다 &lt;code&gt;NoReturn&lt;/code&gt; 실행은이 경우에서의 전류 범위를 반환 할 것이다. 그 결과 표현식의 결과 유형으로 &lt;code&gt;String&lt;/code&gt; 만 남습니다 .</target>
        </trans-unit>
        <trans-unit id="9fd63548bcd1f9432f120809cb637de7949597f1" translate="yes" xml:space="preserve">
          <source>The compiler uses the &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; environment variable as a first lookup destination for static and dynamic libraries that are to be linked. This can be used to provide static versions of libraries that are also available as dynamic libraries.</source>
          <target state="translated">컴파일러는 &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; 환경 변수를 링크 될 정적 및 동적 라이브러리의 첫 번째 검색 대상으로 사용합니다 . 동적 라이브러리로 사용 가능한 정적 버전의 라이브러리를 제공하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d112ea3968e90628ecef4e96c3f030557bcc29d4" translate="yes" xml:space="preserve">
          <source>The compiler will always do this for classes and structs under the same hierarchy: it will find the first superclass from which all types inherit from (excluding &lt;code&gt;Reference&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt;). If it can't find one, the type union remains.</source>
          <target state="translated">컴파일러는 항상 동일한 계층 구조에서 클래스와 구조체에 대해이 작업을 수행합니다. 모든 유형이 상속되는 첫 번째 슈퍼 클래스 ( &lt;code&gt;Reference&lt;/code&gt; , &lt;code&gt;Value&lt;/code&gt; , &lt;code&gt;Int&lt;/code&gt; 및 &lt;code&gt;Float&lt;/code&gt; 제외)를 찾습니다 . 찾을 수없는 경우 유형 공용체가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9aa42ab2fbe7576856d80d14142091ab932b6491" translate="yes" xml:space="preserve">
          <source>The compiler will always resolve a type union to a virtual type if they are under the same hierarchy:</source>
          <target state="translated">컴파일러는 동일한 계층 구조에있는 경우 항상 유형 통합을 가상 유형으로 해석합니다.</target>
        </trans-unit>
        <trans-unit id="f6a828022c5a606925e47b002f9dc2a5f92de454" translate="yes" xml:space="preserve">
          <source>The compiler will automatically declare a &lt;code&gt;status_ptr&lt;/code&gt; variable of type &lt;code&gt;Int32&lt;/code&gt;, because the argument is an &lt;code&gt;Int32*&lt;/code&gt;.</source>
          <target state="translated">인수는 &lt;code&gt;Int32*&lt;/code&gt; 이므로 컴파일러는 &lt;code&gt;Int32&lt;/code&gt; 유형 의 &lt;code&gt;status_ptr&lt;/code&gt; 변수를 자동으로 선언합니다 .</target>
        </trans-unit>
        <trans-unit id="a306452bf90e7af8c0b48f025a714b6e7c6b30cc" translate="yes" xml:space="preserve">
          <source>The compiler will automatically declare a &lt;code&gt;status_ptr&lt;/code&gt; variable of type &lt;code&gt;Int32&lt;/code&gt;, because the parameter's type is &lt;code&gt;Int32*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7116ec73e25c2ce43e86e6ce030554ec2d346a16" translate="yes" xml:space="preserve">
          <source>The compiler will try to be as smart as possible to require less explicit type restrictions. For example, if assigning an &lt;code&gt;if&lt;/code&gt; expression, type will be inferred from the &lt;code&gt;then&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; branches:</source>
          <target state="translated">컴파일러는 명시적인 유형 제한을 덜 요구하기 위해 가능한 한 현명하게 노력합니다. 예를 들어 &lt;code&gt;if&lt;/code&gt; 표현식을 할당 하면 &lt;code&gt;then&lt;/code&gt; 및 &lt;code&gt;else&lt;/code&gt; 분기 에서 type이 유추됩니다 .</target>
        </trans-unit>
        <trans-unit id="a27fbf176c173a4869ddaa838718beb1520d753e" translate="yes" xml:space="preserve">
          <source>The condition is first tested and, if &lt;em&gt;truthy&lt;/em&gt;, the body is executed. That is, the body might never be executed.</source>
          <target state="translated">조건이 먼저 테스트되고, &lt;em&gt;진실&lt;/em&gt; 이라면 본문이 실행됩니다. 즉, 본문이 실행되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45d26e86bf874f16afbe8a5db86b9dcf4fbd0f35" translate="yes" xml:space="preserve">
          <source>The current event kind.</source>
          <target state="translated">현재 이벤트 종류.</target>
        </trans-unit>
        <trans-unit id="16bde7a043bf01f1b6c0a902d4c5a199b7b8753b" translate="yes" xml:space="preserve">
          <source>The current fiber will resume after a period of time and have the property &lt;code&gt;timed_out&lt;/code&gt; set to true.</source>
          <target state="translated">The current fiber will resume after a period of time and have the property &lt;code&gt;timed_out&lt;/code&gt; set to true.</target>
        </trans-unit>
        <trans-unit id="fc0b1ad9eec889bdcd71bc817e8e53befda88330" translate="yes" xml:space="preserve">
          <source>The current fiber will resume after a period of time and have the property &lt;code&gt;timed_out&lt;/code&gt; set to true. The timeout can be cancelled with &lt;code&gt;&lt;a href=&quot;fiber#cancel_timeout-class-method&quot;&gt;.cancel_timeout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">The current fiber will resume after a period of time and have the property &lt;code&gt;timed_out&lt;/code&gt; set to true. The timeout can be cancelled with &lt;code&gt;&lt;a href=&quot;fiber#cancel_timeout-class-method&quot;&gt;.cancel_timeout&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bef575a1ccf5aba6c5ce468bf3a521910a0c63c5" translate="yes" xml:space="preserve">
          <source>The data format must follow the format of &lt;code&gt;mime.types&lt;/code&gt;: Each line declares a MIME type followed by a whitespace-separated list of extensions mapped to this type. Everything following a &lt;code&gt;#&lt;/code&gt; is considered a comment until the end of line. Empty lines are ignored.</source>
          <target state="translated">The data format must follow the format of &lt;code&gt;mime.types&lt;/code&gt; : Each line declares a MIME type followed by a whitespace-separated list of extensions mapped to this type. Everything following a &lt;code&gt;#&lt;/code&gt; is considered a comment until the end of line. Empty lines are ignored.</target>
        </trans-unit>
        <trans-unit id="e5b5bca50bbcb72e98e43922b4012518a5698ff3" translate="yes" xml:space="preserve">
          <source>The data format must follow the format of &lt;code&gt;mime.types&lt;/code&gt;: Each line declares a MIME type followed by a whitespace-separated list of extensions mapped to this type. Everything following a &lt;code&gt;#&lt;/code&gt; is considered a comment until the end of line. Empy line are ignored.</source>
          <target state="translated">데이터 형식은 &lt;code&gt;mime.types&lt;/code&gt; 형식을 따라야합니다 . 각 줄은 MIME 형식을 선언하고이 형식에 매핑 된 공백으로 구분 된 확장 목록을 따릅니다. &lt;code&gt;#&lt;/code&gt; 다음에 나오는 모든 것은 줄 끝까지 주석으로 간주됩니다. Empy 라인은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b6ac557b14252defbc297671bb0f85f77d4fcb5f" translate="yes" xml:space="preserve">
          <source>The default PRNG is &lt;code&gt;&lt;a href=&quot;random/pcg32&quot;&gt;Random::PCG32&lt;/a&gt;&lt;/code&gt; which has a good overall statistical distribution (low bias of generated numbers) and is fast for overall usages on different platforms, but isn't cryptographically secure. If a third party has access to some generated numbers, she may deduce incoming numbers, putting your application at risk.</source>
          <target state="translated">기본 PRNG는 &lt;code&gt;&lt;a href=&quot;random/pcg32&quot;&gt;Random::PCG32&lt;/a&gt;&lt;/code&gt; 이며 전체 통계 분포가 양호하고 (생성 된 수의 바이어스가 적음) 다른 플랫폼에서 전체적으로 사용하기에는 빠르지 만 암호화 적으로 안전하지는 않습니다. 제 3자가 생성 된 일부 번호에 액세스 할 수 있으면 수신 번호를 추론하여 애플리케이션이 위험에 처할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdd51ac360b10bcd84b0c8f91e4e2989fd2773ff" translate="yes" xml:space="preserve">
          <source>The default behaviour is to load the internal defaults as well as the OS-provided MIME database. This can be disabled with &lt;em&gt;load_defaults&lt;/em&gt; set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본 동작은 OS 제공 MIME 데이터베이스뿐만 아니라 내부 기본값을로드하는 것입니다. &lt;em&gt;load_defaults&lt;/em&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dad7af7b0f876da9aa949c42f24000929273f588" translate="yes" xml:space="preserve">
          <source>The default formatter outputs the file and line style command for failing specs which makes it easy to rerun just this individual spec.</source>
          <target state="translated">기본 포맷터는 실패한 스펙에 대한 파일 및 라인 스타일 명령을 출력하므로이 개별 스펙 만 쉽게 다시 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8476fe9067348f586a7a1e1b136271a139fae68" translate="yes" xml:space="preserve">
          <source>The default parameter value can also be a &lt;code&gt;Type.new(...)&lt;/code&gt; method or a class method with a return type restriction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b8cc0309c25e817367b59837ebb7571042e378" translate="yes" xml:space="preserve">
          <source>The default receiver within a captured block can't be changed by using &lt;code&gt;with ... yield&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;with ... yield&lt;/code&gt; 를 사용하여 캡처 된 블록 내의 기본 수신기를 변경할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f44188190e8ff07b62a15512f4e2653bbf1da67d" translate="yes" xml:space="preserve">
          <source>The default value can also be a &lt;code&gt;Type.new(...)&lt;/code&gt; method or a class method with a return type restriction.</source>
          <target state="translated">기본값은 &lt;code&gt;Type.new(...)&lt;/code&gt; 메서드 또는 반환 형식 제한이있는 클래스 메서드 일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af976fa886c4f7b664fc57e291778fd6b49e246c" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2405836e0455b607d437f1441a12ee51443e3dfc" translate="yes" xml:space="preserve">
          <source>The definitions of &quot;concurrency&quot; and &quot;parallelism&quot; sometimes get mixed up, but they are not the same.</source>
          <target state="translated">&quot;동시성&quot;과 &quot;병행 성&quot;의 정의는 때때로 혼동되지만 동일하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="56cc8132a44e585c5a836cac7589ad9dd027f5da" translate="yes" xml:space="preserve">
          <source>The delimiter character &lt;code&gt;/&lt;/code&gt; must be escaped inside slash-delimited regular expression literals. Note that special characters of the PCRE syntax need to be escaped if they are intended as literal characters.</source>
          <target state="translated">구분 문자 &lt;code&gt;/&lt;/code&gt; 는 슬래시로 구분 된 정규 표현식 리터럴 내에서 이스케이프되어야합니다. 리터럴 문자로 의도 된 경우 PCRE 구문의 특수 문자를 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="c9653a8d1e950042ca9213746780e7bc8b914379" translate="yes" xml:space="preserve">
          <source>The development is possible thanks to the community's effort and the continued support of &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84codes&lt;/a&gt;, &lt;a href=&quot;https://nikolamotor.com/&quot;&gt;Nikola Motor Company&lt;/a&gt; and every other &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;sponsor&lt;/a&gt;.</source>
          <target state="translated">The development is possible thanks to the community's effort and the continued support of &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84codes&lt;/a&gt;, &lt;a href=&quot;https://nikolamotor.com/&quot;&gt;Nikola Motor Company&lt;/a&gt; and every other &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;sponsor&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="005cdeadc39a856e459e5bd8473d96fd7f82d81a" translate="yes" xml:space="preserve">
          <source>The development is possible thanks to the community's effort, &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84codes&lt;/a&gt;' support, and every &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;BountySource supporter&lt;/a&gt;.</source>
          <target state="translated">개발은 지역 사회의 노력 덕분에 가능하다 &lt;a href=&quot;https://www.84codes.com/&quot;&gt;84codes&lt;/a&gt; '지원, 모든 &lt;a href=&quot;https://crystal-lang.org/sponsors&quot;&gt;바운티 소스 후원자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7896d2ab08699e91d14ae92a8d97f1b60ffffbf" translate="yes" xml:space="preserve">
          <source>The difference between using &lt;code&gt;do ... end&lt;/code&gt; and &lt;code&gt;{ ... }&lt;/code&gt; is that &lt;code&gt;do ... end&lt;/code&gt; binds to the left-most call, while &lt;code&gt;{ ... }&lt;/code&gt; binds to the right-most call:</source>
          <target state="translated">사용의 차이 &lt;code&gt;do ... end&lt;/code&gt; 과 &lt;code&gt;{ ... }&lt;/code&gt; 즉 &lt;code&gt;do ... end&lt;/code&gt; 가장 왼쪽의 호출에 바인딩 반면, &lt;code&gt;{ ... }&lt;/code&gt; 가장 오른쪽의 호출에 바인딩 :</target>
        </trans-unit>
        <trans-unit id="d932293ad1229ee6d59947cbf56bffd1ddfe6045" translate="yes" xml:space="preserve">
          <source>The directives are:</source>
          <target state="translated">지시문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d3bece92e462e673997e5de7aea3061108ec3fdb" translate="yes" xml:space="preserve">
          <source>The directory used in these examples contains the two regular files (&lt;code&gt;config.h&lt;/code&gt; and &lt;code&gt;main.rb&lt;/code&gt;), the parent directory (&lt;code&gt;..&lt;/code&gt;), and the directory itself (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">이 예제에 사용 된 디렉토리에는 두 개의 일반 파일 ( &lt;code&gt;config.h&lt;/code&gt; 및 &lt;code&gt;main.rb&lt;/code&gt; ), 상위 디렉토리 ( &lt;code&gt;..&lt;/code&gt; ) 및 디렉토리 자체 ( &lt;code&gt;.&lt;/code&gt; )가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8c6593ecc33a17f47a51d532e371454d0a2e960a" translate="yes" xml:space="preserve">
          <source>The document this builder builds.</source>
          <target state="translated">이 빌더가 빌드 한 문서.</target>
        </trans-unit>
        <trans-unit id="dc120a6a054db66ae816e454062bb51eeda15057" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;code&gt;Child#id&lt;/code&gt; would be:</source>
          <target state="translated">The documentation for &lt;code&gt;Child#id&lt;/code&gt; would be:</target>
        </trans-unit>
        <trans-unit id="b848e705cf22eebab3ac54f82de9a55a1df65b7b" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;code&gt;Unicorn#name&lt;/code&gt; would be:</source>
          <target state="translated">The documentation for &lt;code&gt;Unicorn#name&lt;/code&gt; would be:</target>
        </trans-unit>
        <trans-unit id="a72fae4adb9e9233849f2511abb367174fc0113f" translate="yes" xml:space="preserve">
          <source>The documentation of a method is included into the method summary and the method details. The former includes only the first line, the latter includes the entire documentation. In short, it is preferred to:</source>
          <target state="translated">분석법 문서는 분석법 요약 및 분석법 세부 사항에 포함되어 있습니다. 전자는 첫 번째 줄만 포함하고 후자는 전체 문서를 포함합니다. 즉, 다음을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="0937a36b3d81ac8458f6ad89ee30d846b74b3e12" translate="yes" xml:space="preserve">
          <source>The documentation of the function says:</source>
          <target state="translated">이 기능에 대한 문서는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f728086ed3dbe17bdbffeaac3d2343ad483c9c5f" translate="yes" xml:space="preserve">
          <source>The dot (&lt;code&gt;.&lt;/code&gt;) usually put between receiver and method name (i.e. the &lt;em&gt;operator&lt;/em&gt;) can be omitted.</source>
          <target state="translated">The dot ( &lt;code&gt;.&lt;/code&gt; ) usually put between receiver and method name (i.e. the &lt;em&gt;operator&lt;/em&gt;) can be omitted.</target>
        </trans-unit>
        <trans-unit id="672cec25fd6cd4f425093ea7d30c2cab847d8cd3" translate="yes" xml:space="preserve">
          <source>The duration amounts to the actual time elapsed between both instances, on the instant time-line. The difference between local date-time representations may equal to a different duration, depending on time zone transitions.</source>
          <target state="translated">지속 시간은 인스턴스 타임 라인에서 두 인스턴스간에 경과 된 실제 시간에 해당합니다. 현지 날짜-시간 표현의 차이는 시간대 전환에 따라 다른 지속 시간과 동일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c37ea0ffdf358cedefc364ad6f8b92588cd577ca" translate="yes" xml:space="preserve">
          <source>The easiest, but probably most tedious, way is to use explicit type restrictions.</source>
          <target state="translated">가장 쉽지만 가장 지루한 방법은 명시적인 유형 제한을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="63bbeb85167187d17ca0803b3e824665527089f0" translate="yes" xml:space="preserve">
          <source>The empty node. Similar to a &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; but its textual representation is the empty string. This corresponds, for example, to the missing &lt;code&gt;else&lt;/code&gt; branch of an &lt;code&gt;if&lt;/code&gt; without an &lt;code&gt;else&lt;/code&gt;.</source>
          <target state="translated">빈 노드. &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 텍스트 표현은 빈 문자열입니다. 이 대응, 예를 들어, 누락에 &lt;code&gt;else&lt;/code&gt; 지점의 &lt;code&gt;if&lt;/code&gt; 없이 &lt;code&gt;else&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
