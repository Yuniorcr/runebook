<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="8fbfb9688473493b491d902cba0e307d5e635969" translate="yes" xml:space="preserve">
          <source>No runtime checks are performed in these cases because, again, pointers are involved. The need for this cast is even more rare than the previous one, but allows to implement some core types (like String) in Crystal itself, and it also allows passing a Reference type to C functions by casting it to a void pointer.</source>
          <target state="translated">이 경우에도 포인터가 관련되어 있으므로 런타임 검사가 수행되지 않습니다. 이 캐스트에 대한 필요성은 이전 캐스트보다 훨씬 드물지만 Crystal 자체에서 일부 핵심 유형 (문자열)을 구현할 수 있으며 void 유형으로 캐스팅하여 참조 유형을 C 함수에 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8ab05534fb2be1f88e1c33207891f6776cdd5db" translate="yes" xml:space="preserve">
          <source>No shell interpretation is done in &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt; 에서는 쉘 해석이 수행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5c0580667d6055e92a026b8c67fa943060b2c89d" translate="yes" xml:space="preserve">
          <source>No space left on device</source>
          <target state="translated">기기에 남은 공간이 없습니다.</target>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="translated">그러한 파일이나 디렉토리가 없습니다</target>
        </trans-unit>
        <trans-unit id="0cf4a772e5ca24befae7ddee66e425eeaa8130aa" translate="yes" xml:space="preserve">
          <source>No such process</source>
          <target state="translated">그런 과정이 없습니다</target>
        </trans-unit>
        <trans-unit id="6ded8bea31740baa2d151730d57c270b35577c09" translate="yes" xml:space="preserve">
          <source>NoInline</source>
          <target state="translated">NoInline</target>
        </trans-unit>
        <trans-unit id="0221b80b479f2414725845f119f0035d3f14f562" translate="yes" xml:space="preserve">
          <source>NoReturn return type</source>
          <target state="translated">반품 유형</target>
        </trans-unit>
        <trans-unit id="6c2e1228ad057dbdd431c4293d0a9ddee5e1b085" translate="yes" xml:space="preserve">
          <source>Node that represents an implicit object in:</source>
          <target state="translated">내재 된 객체를 나타내는 노드 :</target>
        </trans-unit>
        <trans-unit id="78bfa31fef9201e745d753cb0addc39adc5c1cd9" translate="yes" xml:space="preserve">
          <source>Node#==</source>
          <target state="translated">Node#==</target>
        </trans-unit>
        <trans-unit id="43c1b49bb480b4cc63844ec15f2eb9604aefa57b" translate="yes" xml:space="preserve">
          <source>Node#[]</source>
          <target state="translated">Node#[]</target>
        </trans-unit>
        <trans-unit id="45d6ae83618d6ade7d2594825b6819a12914672d" translate="yes" xml:space="preserve">
          <source>Node#[]=</source>
          <target state="translated">Node#[]=</target>
        </trans-unit>
        <trans-unit id="26161fdb33f341378fa63b95bee2b5a8da312dab" translate="yes" xml:space="preserve">
          <source>Node#[]?</source>
          <target state="translated">Node#[]?</target>
        </trans-unit>
        <trans-unit id="e6149a2f22413a265608253f1cc45884be62f281" translate="yes" xml:space="preserve">
          <source>Node#attribute?</source>
          <target state="translated">Node#attribute?</target>
        </trans-unit>
        <trans-unit id="e601abbcc9220ed9ad3a1ec50b4ac945e5d2b986" translate="yes" xml:space="preserve">
          <source>Node#attributes</source>
          <target state="translated">Node#attributes</target>
        </trans-unit>
        <trans-unit id="2cf2ca78a6a8a61f04f2527e3e4c3476f940f6bb" translate="yes" xml:space="preserve">
          <source>Node#cdata?</source>
          <target state="translated">Node#cdata?</target>
        </trans-unit>
        <trans-unit id="40336f10b17f8d67cd19bdb8d1ad5ddb415bcdd8" translate="yes" xml:space="preserve">
          <source>Node#children</source>
          <target state="translated">Node#children</target>
        </trans-unit>
        <trans-unit id="01620ee7b208a072a4689dfe5ee59ca2d631ec6a" translate="yes" xml:space="preserve">
          <source>Node#comment?</source>
          <target state="translated">Node#comment?</target>
        </trans-unit>
        <trans-unit id="3718122d7a17ee797551278b244a7f0c37083467" translate="yes" xml:space="preserve">
          <source>Node#content</source>
          <target state="translated">Node#content</target>
        </trans-unit>
        <trans-unit id="2ffdd92eccd61d4810af28a129edc1d8be34118f" translate="yes" xml:space="preserve">
          <source>Node#content=</source>
          <target state="translated">Node#content=</target>
        </trans-unit>
        <trans-unit id="b7bc22822e072106cc2b4102f8c3d90fcf650527" translate="yes" xml:space="preserve">
          <source>Node#delete</source>
          <target state="translated">Node#delete</target>
        </trans-unit>
        <trans-unit id="22a2e1d5f4b4f0e0dc8ace0fcf291302a4019a44" translate="yes" xml:space="preserve">
          <source>Node#document</source>
          <target state="translated">Node#document</target>
        </trans-unit>
        <trans-unit id="cf490edb0a435d26d0225a8b0322922a1d0ee8a8" translate="yes" xml:space="preserve">
          <source>Node#document?</source>
          <target state="translated">Node#document?</target>
        </trans-unit>
        <trans-unit id="4b06f183acb7708908a419712d1237fe4ab4cab2" translate="yes" xml:space="preserve">
          <source>Node#element?</source>
          <target state="translated">Node#element?</target>
        </trans-unit>
        <trans-unit id="0f6f35e6cef26cffd6eba9f2a59d19403bf6cabd" translate="yes" xml:space="preserve">
          <source>Node#encoding</source>
          <target state="translated">Node#encoding</target>
        </trans-unit>
        <trans-unit id="0202053806b75ff18c78614fe78e63c4de71a3a4" translate="yes" xml:space="preserve">
          <source>Node#errors</source>
          <target state="translated">Node#errors</target>
        </trans-unit>
        <trans-unit id="74fa40dd9a0d614614620739a406b9a6f40ff0e6" translate="yes" xml:space="preserve">
          <source>Node#first_element_child</source>
          <target state="translated">Node#first_element_child</target>
        </trans-unit>
        <trans-unit id="e15d5b588511170ed82e41280caa8e13b5219602" translate="yes" xml:space="preserve">
          <source>Node#fragment?</source>
          <target state="translated">Node#fragment?</target>
        </trans-unit>
        <trans-unit id="83fb96c2b63c88f1ea13a1329f07ca3ac3eec0b1" translate="yes" xml:space="preserve">
          <source>Node#hash</source>
          <target state="translated">Node#hash</target>
        </trans-unit>
        <trans-unit id="ed2693c1079dce87ec5ef1e1968fb1c36913693b" translate="yes" xml:space="preserve">
          <source>Node#inner_text</source>
          <target state="translated">Node#inner_text</target>
        </trans-unit>
        <trans-unit id="52af2cd5963cc2252918503ce6176440a8b85218" translate="yes" xml:space="preserve">
          <source>Node#inspect</source>
          <target state="translated">Node#inspect</target>
        </trans-unit>
        <trans-unit id="4c539b5caaee1efaa37165de1d10f03dc91cf8a5" translate="yes" xml:space="preserve">
          <source>Node#name</source>
          <target state="translated">Node#name</target>
        </trans-unit>
        <trans-unit id="d8677dbbf7926cf118e1a5bdd17ff493dd9fe071" translate="yes" xml:space="preserve">
          <source>Node#name=</source>
          <target state="translated">Node#name=</target>
        </trans-unit>
        <trans-unit id="d08dd8f005e29dbea3c6a0efb2619c3287329cdd" translate="yes" xml:space="preserve">
          <source>Node#namespace</source>
          <target state="translated">Node#namespace</target>
        </trans-unit>
        <trans-unit id="78d31b556c99dee400558d42240b37c5aac126ea" translate="yes" xml:space="preserve">
          <source>Node#namespace_scopes</source>
          <target state="translated">Node#namespace_scopes</target>
        </trans-unit>
        <trans-unit id="8806c8ccd7cc1fc91e5db201adb5c9149674bd64" translate="yes" xml:space="preserve">
          <source>Node#namespaces</source>
          <target state="translated">Node#namespaces</target>
        </trans-unit>
        <trans-unit id="2934ae9007adb9374e04fe5d7e952567be0b0872" translate="yes" xml:space="preserve">
          <source>Node#next</source>
          <target state="translated">Node#next</target>
        </trans-unit>
        <trans-unit id="64dd42ae25572b0848ac25b4ca0dea7dfea9b2cb" translate="yes" xml:space="preserve">
          <source>Node#next_element</source>
          <target state="translated">Node#next_element</target>
        </trans-unit>
        <trans-unit id="1c71cf1cd464dc52050446c86783fc81f6e0a581" translate="yes" xml:space="preserve">
          <source>Node#next_sibling</source>
          <target state="translated">Node#next_sibling</target>
        </trans-unit>
        <trans-unit id="2dd8be712759f86ca025e5e0cd49c95c4dd8c1d0" translate="yes" xml:space="preserve">
          <source>Node#object_id</source>
          <target state="translated">Node#object_id</target>
        </trans-unit>
        <trans-unit id="d2c5d5f450b311325e31e81b349ab619bea3976d" translate="yes" xml:space="preserve">
          <source>Node#parent</source>
          <target state="translated">Node#parent</target>
        </trans-unit>
        <trans-unit id="c2b8056bfaeeef5ca8a1a7334056c32a6fbb8488" translate="yes" xml:space="preserve">
          <source>Node#previous</source>
          <target state="translated">Node#previous</target>
        </trans-unit>
        <trans-unit id="65d7db623e311693477371a7cfa1ce01d5142fe4" translate="yes" xml:space="preserve">
          <source>Node#previous_element</source>
          <target state="translated">Node#previous_element</target>
        </trans-unit>
        <trans-unit id="357419fd654373bc5a33d2bef183c26033a0029f" translate="yes" xml:space="preserve">
          <source>Node#previous_sibling</source>
          <target state="translated">Node#previous_sibling</target>
        </trans-unit>
        <trans-unit id="9dc12bb4d6c48dba5e8d9b4fa741cec33b4f0c5a" translate="yes" xml:space="preserve">
          <source>Node#processing_instruction?</source>
          <target state="translated">Node#processing_instruction?</target>
        </trans-unit>
        <trans-unit id="6e7f399809a8fc9fa93fc2eebce4297913f97b8b" translate="yes" xml:space="preserve">
          <source>Node#root</source>
          <target state="translated">Node#root</target>
        </trans-unit>
        <trans-unit id="2d7522a79130faf60aff02d04365266b48f5f5e3" translate="yes" xml:space="preserve">
          <source>Node#text</source>
          <target state="translated">Node#text</target>
        </trans-unit>
        <trans-unit id="81a887ee10ab44000ddeab461ab0b7f8c853fd9e" translate="yes" xml:space="preserve">
          <source>Node#text=</source>
          <target state="translated">Node#text=</target>
        </trans-unit>
        <trans-unit id="56a0d4e5064b99d35b561de1247fd47a7bf079b2" translate="yes" xml:space="preserve">
          <source>Node#text?</source>
          <target state="translated">Node#text?</target>
        </trans-unit>
        <trans-unit id="a2d8f3af01bd9aff689e428879c8817f1dd87909" translate="yes" xml:space="preserve">
          <source>Node#to_s</source>
          <target state="translated">Node#to_s</target>
        </trans-unit>
        <trans-unit id="8f2a6530d92a29791b8c88c25be366cc40b26013" translate="yes" xml:space="preserve">
          <source>Node#to_unsafe</source>
          <target state="translated">Node#to_unsafe</target>
        </trans-unit>
        <trans-unit id="0b61643a46cfa43970b0aa2d2cfda55c03e71c1b" translate="yes" xml:space="preserve">
          <source>Node#to_xml</source>
          <target state="translated">Node#to_xml</target>
        </trans-unit>
        <trans-unit id="1815161980586fe2f8d0393368ab615481bcc340" translate="yes" xml:space="preserve">
          <source>Node#type</source>
          <target state="translated">Node#type</target>
        </trans-unit>
        <trans-unit id="6d2bc32342e2c07511f41a193102b5a0c8553ab2" translate="yes" xml:space="preserve">
          <source>Node#unlink</source>
          <target state="translated">Node#unlink</target>
        </trans-unit>
        <trans-unit id="07fbe304459f2622a0901a0b1d03ad99b2593286" translate="yes" xml:space="preserve">
          <source>Node#version</source>
          <target state="translated">Node#version</target>
        </trans-unit>
        <trans-unit id="582caf9f5906e5cb1814f2e84320223bdc805e65" translate="yes" xml:space="preserve">
          <source>Node#xml?</source>
          <target state="translated">Node#xml?</target>
        </trans-unit>
        <trans-unit id="55825a9017cae0cbc8f240ad8c2033d7cb12ed5a" translate="yes" xml:space="preserve">
          <source>Node#xpath</source>
          <target state="translated">Node#xpath</target>
        </trans-unit>
        <trans-unit id="c7656198fbe2c35a55e5b76d335ddb7d9007e42e" translate="yes" xml:space="preserve">
          <source>Node#xpath_bool</source>
          <target state="translated">Node#xpath_bool</target>
        </trans-unit>
        <trans-unit id="e19d904b8e5e00f68cf8a4562df51c92e8b77a21" translate="yes" xml:space="preserve">
          <source>Node#xpath_float</source>
          <target state="translated">Node#xpath_float</target>
        </trans-unit>
        <trans-unit id="b4aeab39b67515373f8c500247820ad92bd47858" translate="yes" xml:space="preserve">
          <source>Node#xpath_node</source>
          <target state="translated">Node#xpath_node</target>
        </trans-unit>
        <trans-unit id="4238bbba331e9e944a39031201381b7b8614ab8e" translate="yes" xml:space="preserve">
          <source>Node#xpath_nodes</source>
          <target state="translated">Node#xpath_nodes</target>
        </trans-unit>
        <trans-unit id="244243ca5244df182122f31a86492a7fd65901d3" translate="yes" xml:space="preserve">
          <source>Node#xpath_string</source>
          <target state="translated">Node#xpath_string</target>
        </trans-unit>
        <trans-unit id="2693aaae0e29b2cdc85621c887dcb817895bb389" translate="yes" xml:space="preserve">
          <source>Node.new</source>
          <target state="translated">Node.new</target>
        </trans-unit>
        <trans-unit id="3f7927612401dafbe3d8326b4f6ec4d480083715" translate="yes" xml:space="preserve">
          <source>Node::Type</source>
          <target state="translated">Node::Type</target>
        </trans-unit>
        <trans-unit id="a089c463801e85b65763516a0f956a251644b9c5" translate="yes" xml:space="preserve">
          <source>Node::Type#attribute_decl?</source>
          <target state="translated">Node::Type#attribute_decl?</target>
        </trans-unit>
        <trans-unit id="25e96d5554038f41e2819bbc53410e2f2d513557" translate="yes" xml:space="preserve">
          <source>Node::Type#attribute_node?</source>
          <target state="translated">Node::Type#attribute_node?</target>
        </trans-unit>
        <trans-unit id="d2cf6934e97dada728448501487b394d32aa3f30" translate="yes" xml:space="preserve">
          <source>Node::Type#cdata_section_node?</source>
          <target state="translated">Node::Type#cdata_section_node?</target>
        </trans-unit>
        <trans-unit id="a3b7d849ffdc5d0a19c4a81642fb0645779e0cb1" translate="yes" xml:space="preserve">
          <source>Node::Type#comment_node?</source>
          <target state="translated">Node::Type#comment_node?</target>
        </trans-unit>
        <trans-unit id="fb3b9da400599a532206b601e036d752ae397812" translate="yes" xml:space="preserve">
          <source>Node::Type#docb_document_node?</source>
          <target state="translated">Node::Type#docb_document_node?</target>
        </trans-unit>
        <trans-unit id="d36567e0378ac1b3fd1cc4ba55df91a925972481" translate="yes" xml:space="preserve">
          <source>Node::Type#document_frag_node?</source>
          <target state="translated">Node::Type#document_frag_node?</target>
        </trans-unit>
        <trans-unit id="a1c53a9f38482902e83984c353ae43855ddac945" translate="yes" xml:space="preserve">
          <source>Node::Type#document_node?</source>
          <target state="translated">Node::Type#document_node?</target>
        </trans-unit>
        <trans-unit id="f7a169e002f339476cb77b938dbc1a4065e3461f" translate="yes" xml:space="preserve">
          <source>Node::Type#document_type_node?</source>
          <target state="translated">Node::Type#document_type_node?</target>
        </trans-unit>
        <trans-unit id="7aa2b06a9475f44c61a3252e84a896be43b072df" translate="yes" xml:space="preserve">
          <source>Node::Type#dtd_node?</source>
          <target state="translated">Node::Type#dtd_node?</target>
        </trans-unit>
        <trans-unit id="cc8879e2d19029e1214d086f9aae679450721bb6" translate="yes" xml:space="preserve">
          <source>Node::Type#element_decl?</source>
          <target state="translated">Node::Type#element_decl?</target>
        </trans-unit>
        <trans-unit id="9c4639a5f4182287738161c21fe3b244f5a61d70" translate="yes" xml:space="preserve">
          <source>Node::Type#element_node?</source>
          <target state="translated">Node::Type#element_node?</target>
        </trans-unit>
        <trans-unit id="d8ef9f17043fe1bbee6b405e17245c8ffbf566cb" translate="yes" xml:space="preserve">
          <source>Node::Type#entity_decl?</source>
          <target state="translated">Node::Type#entity_decl?</target>
        </trans-unit>
        <trans-unit id="36a7d1210160db4c8684a2a0e306545f3b797484" translate="yes" xml:space="preserve">
          <source>Node::Type#entity_node?</source>
          <target state="translated">Node::Type#entity_node?</target>
        </trans-unit>
        <trans-unit id="1908861f7dff8346588812d4f9801d69a515a9e1" translate="yes" xml:space="preserve">
          <source>Node::Type#entity_ref_node?</source>
          <target state="translated">Node::Type#entity_ref_node?</target>
        </trans-unit>
        <trans-unit id="1cbefafcf0e3c67320e9b91716e9ec13cc85cd0c" translate="yes" xml:space="preserve">
          <source>Node::Type#html_document_node?</source>
          <target state="translated">Node::Type#html_document_node?</target>
        </trans-unit>
        <trans-unit id="68e0bffe2eb986ee0f46d4c41805b7bd279a1561" translate="yes" xml:space="preserve">
          <source>Node::Type#namespace_decl?</source>
          <target state="translated">Node::Type#namespace_decl?</target>
        </trans-unit>
        <trans-unit id="386f9e8df058afc85c243add017bf8c4c714daec" translate="yes" xml:space="preserve">
          <source>Node::Type#none?</source>
          <target state="translated">Node::Type#none?</target>
        </trans-unit>
        <trans-unit id="f2abebecce768927e602760b5743ad80dd7b0418" translate="yes" xml:space="preserve">
          <source>Node::Type#notation_node?</source>
          <target state="translated">Node::Type#notation_node?</target>
        </trans-unit>
        <trans-unit id="a82429501113469989759c564b7806714dabd080" translate="yes" xml:space="preserve">
          <source>Node::Type#pi_node?</source>
          <target state="translated">Node::Type#pi_node?</target>
        </trans-unit>
        <trans-unit id="b8abffd442dcb5823d727a426e4fe173272c2d36" translate="yes" xml:space="preserve">
          <source>Node::Type#text_node?</source>
          <target state="translated">Node::Type#text_node?</target>
        </trans-unit>
        <trans-unit id="c0d4e7c51d89dbe1246416985199baef2050fbb6" translate="yes" xml:space="preserve">
          <source>Node::Type#xinclude_end?</source>
          <target state="translated">Node::Type#xinclude_end?</target>
        </trans-unit>
        <trans-unit id="6bcf31dbdc74d839b4d1d2d4237270e29ef25843" translate="yes" xml:space="preserve">
          <source>Node::Type#xinclude_start?</source>
          <target state="translated">Node::Type#xinclude_start?</target>
        </trans-unit>
        <trans-unit id="49765a7705e55c8a87a04c7277d2d760fb7c3f2b" translate="yes" xml:space="preserve">
          <source>NodeSet</source>
          <target state="translated">NodeSet</target>
        </trans-unit>
        <trans-unit id="0bd03869e77c2ac84a35714b6cead6fbb345d92a" translate="yes" xml:space="preserve">
          <source>NodeSet#[]</source>
          <target state="translated">NodeSet#[]</target>
        </trans-unit>
        <trans-unit id="7f85935defbd54903615552ec589a8e3cfc83b2f" translate="yes" xml:space="preserve">
          <source>NodeSet#each</source>
          <target state="translated">NodeSet#each</target>
        </trans-unit>
        <trans-unit id="b298f9784f7134fd3d9625d38d7ef1f9b8e24cd6" translate="yes" xml:space="preserve">
          <source>NodeSet#empty?</source>
          <target state="translated">NodeSet#empty?</target>
        </trans-unit>
        <trans-unit id="82d2319023958566f212bbd296824cce4e2fb9c7" translate="yes" xml:space="preserve">
          <source>NodeSet#hash</source>
          <target state="translated">NodeSet#hash</target>
        </trans-unit>
        <trans-unit id="765f0cc1fe5baebe02e3fce143e629f9b9dc8e5a" translate="yes" xml:space="preserve">
          <source>NodeSet#inspect</source>
          <target state="translated">NodeSet#inspect</target>
        </trans-unit>
        <trans-unit id="9fd44fb712a047928cfaf19c1665a51086465cf6" translate="yes" xml:space="preserve">
          <source>NodeSet#object_id</source>
          <target state="translated">NodeSet#object_id</target>
        </trans-unit>
        <trans-unit id="3bf72a0a5b47fb56f9eb8c1546feacc942335c00" translate="yes" xml:space="preserve">
          <source>NodeSet#size</source>
          <target state="translated">NodeSet#size</target>
        </trans-unit>
        <trans-unit id="94b357d69044d5d42b6c260f8d597e9a21c9af95" translate="yes" xml:space="preserve">
          <source>NodeSet#to_s</source>
          <target state="translated">NodeSet#to_s</target>
        </trans-unit>
        <trans-unit id="486e15c824d9db6f4fdb49a59d4cb374d86396d7" translate="yes" xml:space="preserve">
          <source>NodeSet#to_unsafe</source>
          <target state="translated">NodeSet#to_unsafe</target>
        </trans-unit>
        <trans-unit id="25b3eb2bd0048eb35fc9119d1392d5689dbb5060" translate="yes" xml:space="preserve">
          <source>NodeSet.new</source>
          <target state="translated">NodeSet.new</target>
        </trans-unit>
        <trans-unit id="94209dd278fb5a80f3d96d9acd1e285ff99c472b" translate="yes" xml:space="preserve">
          <source>Nodes.parse</source>
          <target state="translated">Nodes.parse</target>
        </trans-unit>
        <trans-unit id="aec1b5cdd6912056e043ad62c66615f5aecb11e5" translate="yes" xml:space="preserve">
          <source>Nodes::Alias</source>
          <target state="translated">Nodes::Alias</target>
        </trans-unit>
        <trans-unit id="4130d46579409001b75f91155ef2f72cda416541" translate="yes" xml:space="preserve">
          <source>Nodes::Alias#to_yaml</source>
          <target state="translated">Nodes::Alias#to_yaml</target>
        </trans-unit>
        <trans-unit id="6f9c7f2fb51b96f6301151c1fc4441b7a9b2d6a9" translate="yes" xml:space="preserve">
          <source>Nodes::Alias#value</source>
          <target state="translated">Nodes::Alias#value</target>
        </trans-unit>
        <trans-unit id="c527278cad1d0e798ada6992dc47146775201dbe" translate="yes" xml:space="preserve">
          <source>Nodes::Alias#value=</source>
          <target state="translated">Nodes::Alias#value=</target>
        </trans-unit>
        <trans-unit id="8d3549c8d8ed2a53820eec2be4d7dcbd8522a689" translate="yes" xml:space="preserve">
          <source>Nodes::Alias.new</source>
          <target state="translated">Nodes::Alias.new</target>
        </trans-unit>
        <trans-unit id="2461afb1a15987a8ec8db55b2f1365091b177b12" translate="yes" xml:space="preserve">
          <source>Nodes::Builder</source>
          <target state="translated">Nodes::Builder</target>
        </trans-unit>
        <trans-unit id="65b27f7bdfa6eb7956219b1c9ebc8c86b2816c80" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#alias</source>
          <target state="translated">Nodes::Builder#alias</target>
        </trans-unit>
        <trans-unit id="5c9091b20a8dbb0f7ec88f27683c500fe0251e9f" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#document</source>
          <target state="translated">Nodes::Builder#document</target>
        </trans-unit>
        <trans-unit id="c7c22a3e09377222478af623d51fbc574192c80f" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#mapping</source>
          <target state="translated">Nodes::Builder#mapping</target>
        </trans-unit>
        <trans-unit id="310bbc8aeca6bafe5c4df5e04448304151199e8f" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#merge</source>
          <target state="translated">Nodes::Builder#merge</target>
        </trans-unit>
        <trans-unit id="71a86ae10f92c761ca90c3b92c82069272c84a6b" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#scalar</source>
          <target state="translated">Nodes::Builder#scalar</target>
        </trans-unit>
        <trans-unit id="5f4e6f35e2f986c59f6515b637266f742a1321ea" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#sequence</source>
          <target state="translated">Nodes::Builder#sequence</target>
        </trans-unit>
        <trans-unit id="157438f40faed91d2597f5fd40c4a1038b19a668" translate="yes" xml:space="preserve">
          <source>Nodes::Builder.new</source>
          <target state="translated">Nodes::Builder.new</target>
        </trans-unit>
        <trans-unit id="34c8139fa1738d871a7254ac489f2f00fd3d556e" translate="yes" xml:space="preserve">
          <source>Nodes::Document</source>
          <target state="translated">Nodes::Document</target>
        </trans-unit>
        <trans-unit id="e643b0422b6544c97d5ed97801c6f3105fb69fe0" translate="yes" xml:space="preserve">
          <source>Nodes::Document#&amp;lt;&amp;lt;</source>
          <target state="translated">Nodes::Document#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="8d5ff28dfb99e74c0db1597d32ab237b81fa64f5" translate="yes" xml:space="preserve">
          <source>Nodes::Document#nodes</source>
          <target state="translated">Nodes::Document#nodes</target>
        </trans-unit>
        <trans-unit id="633b1e9296f940f331fe29bf327f641db4f86818" translate="yes" xml:space="preserve">
          <source>Nodes::Document#to_yaml</source>
          <target state="translated">Nodes::Document#to_yaml</target>
        </trans-unit>
        <trans-unit id="ddf1358b3bef5218c61e621a98cca7adebc56400" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping</source>
          <target state="translated">Nodes::Mapping</target>
        </trans-unit>
        <trans-unit id="5bc5339bb0fbc6d0aac1ead8e6da69b7966b56f7" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#&amp;lt;&amp;lt;</source>
          <target state="translated">Nodes::Mapping#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="3cbeb0aa343e5e75caf32c8179d6468aafd42c31" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#[]=</source>
          <target state="translated">Nodes::Mapping#[]=</target>
        </trans-unit>
        <trans-unit id="90e701725dbc5c1f96035a118b26e2e6eb7e9eab" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#each</source>
          <target state="translated">Nodes::Mapping#each</target>
        </trans-unit>
        <trans-unit id="645aff6976916b1e932566e1c123ac3868449dae" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#nodes</source>
          <target state="translated">Nodes::Mapping#nodes</target>
        </trans-unit>
        <trans-unit id="cbf6bf56b7ae9b21ef01c60a2d8b1be4c736c5a9" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#style</source>
          <target state="translated">Nodes::Mapping#style</target>
        </trans-unit>
        <trans-unit id="4a3a71e5c33fb687159109ee27e4a454c73439c8" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#style=</source>
          <target state="translated">Nodes::Mapping#style=</target>
        </trans-unit>
        <trans-unit id="d6efbfa5898804cdbfb04c1a66fdc0d2bb2acdd6" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#to_yaml</source>
          <target state="translated">Nodes::Mapping#to_yaml</target>
        </trans-unit>
        <trans-unit id="1cde4839b9874a252fd521780a6059950561cdf5" translate="yes" xml:space="preserve">
          <source>Nodes::Node</source>
          <target state="translated">Nodes::Node</target>
        </trans-unit>
        <trans-unit id="6cbed69f74643d87e0446f0bc83cbbc2891890e1" translate="yes" xml:space="preserve">
          <source>Nodes::Node#anchor</source>
          <target state="translated">Nodes::Node#anchor</target>
        </trans-unit>
        <trans-unit id="048c6b7b20264dad90246f0e6e545b2a0282bfb9" translate="yes" xml:space="preserve">
          <source>Nodes::Node#anchor=</source>
          <target state="translated">Nodes::Node#anchor=</target>
        </trans-unit>
        <trans-unit id="0f37ad02158371a8d07dedd40497e66abbcbb28f" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_column</source>
          <target state="translated">Nodes::Node#end_column</target>
        </trans-unit>
        <trans-unit id="e0dffa71fb7fd0a919392792623b73cd69ff4966" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_column=</source>
          <target state="translated">Nodes::Node#end_column=</target>
        </trans-unit>
        <trans-unit id="3625d95fb43c9491df55581c48cc73aa729a4f85" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_line</source>
          <target state="translated">Nodes::Node#end_line</target>
        </trans-unit>
        <trans-unit id="b60565755108e845d3ae4366f21d378dd4c27bc9" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_line=</source>
          <target state="translated">Nodes::Node#end_line=</target>
        </trans-unit>
        <trans-unit id="efd7a2c6d2848d0fd6a5f163564fd6a0a273ed68" translate="yes" xml:space="preserve">
          <source>Nodes::Node#location</source>
          <target state="translated">Nodes::Node#location</target>
        </trans-unit>
        <trans-unit id="96b4b2816952a57e78ebc3f5c2f3be056d7a4984" translate="yes" xml:space="preserve">
          <source>Nodes::Node#raise</source>
          <target state="translated">Nodes::Node#raise</target>
        </trans-unit>
        <trans-unit id="9c404c2cda916e84783446b6d45739d8704a286e" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_column</source>
          <target state="translated">Nodes::Node#start_column</target>
        </trans-unit>
        <trans-unit id="b6d3f5586772ccc6ce4d78f15938e20390a362b5" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_column=</source>
          <target state="translated">Nodes::Node#start_column=</target>
        </trans-unit>
        <trans-unit id="7b1e2cf2aefaaa1b13355defba2bd7f6ce0e1997" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_line</source>
          <target state="translated">Nodes::Node#start_line</target>
        </trans-unit>
        <trans-unit id="12fb2c5f0e6819d911431a537d1d1ecd6cfb39c5" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_line=</source>
          <target state="translated">Nodes::Node#start_line=</target>
        </trans-unit>
        <trans-unit id="246268312414a1d62bb820ab78dc29cdaba28289" translate="yes" xml:space="preserve">
          <source>Nodes::Node#tag</source>
          <target state="translated">Nodes::Node#tag</target>
        </trans-unit>
        <trans-unit id="4b8b651a120007c7b64df99dd96204b1cc96d3dd" translate="yes" xml:space="preserve">
          <source>Nodes::Node#tag=</source>
          <target state="translated">Nodes::Node#tag=</target>
        </trans-unit>
        <trans-unit id="04e2a2f21820642a719b77eb8d98872b9bd10e1a" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar</source>
          <target state="translated">Nodes::Scalar</target>
        </trans-unit>
        <trans-unit id="267ba15d20e3cea4ecc1727b7e19dc7e4776cecc" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#style</source>
          <target state="translated">Nodes::Scalar#style</target>
        </trans-unit>
        <trans-unit id="9477f4498a4d3367a3afbd2cf5f9fc1e01657cd8" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#style=</source>
          <target state="translated">Nodes::Scalar#style=</target>
        </trans-unit>
        <trans-unit id="018994f44bfb972f09d4df17e449cb35f23756c3" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#to_yaml</source>
          <target state="translated">Nodes::Scalar#to_yaml</target>
        </trans-unit>
        <trans-unit id="2cbef7791caf313eb4e5f78c767058801139dcfe" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#value</source>
          <target state="translated">Nodes::Scalar#value</target>
        </trans-unit>
        <trans-unit id="9613209054c1b5d858b87c3bc749015a74a48410" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#value=</source>
          <target state="translated">Nodes::Scalar#value=</target>
        </trans-unit>
        <trans-unit id="404a620516ee921b02635c20fcc2fafa79f56116" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar.new</source>
          <target state="translated">Nodes::Scalar.new</target>
        </trans-unit>
        <trans-unit id="bbca338585707756271f1a0fe59c08ccc83aa977" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence</source>
          <target state="translated">Nodes::Sequence</target>
        </trans-unit>
        <trans-unit id="c7b124817825dd3a41debbb4d04f864890a65fbf" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#&amp;lt;&amp;lt;</source>
          <target state="translated">Nodes::Sequence#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="d4ff3f09f0c5a8282a9f1b0fd5ab89aaef556c8b" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#each</source>
          <target state="translated">Nodes::Sequence#each</target>
        </trans-unit>
        <trans-unit id="2eba33a774897c13f5360480dda50df67ff057e7" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#nodes</source>
          <target state="translated">Nodes::Sequence#nodes</target>
        </trans-unit>
        <trans-unit id="16368560c916d87f65d7ce89f5d666a7c4175334" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#style</source>
          <target state="translated">Nodes::Sequence#style</target>
        </trans-unit>
        <trans-unit id="eff581700dc4f8a3d84919ea07b1fd97f61628ba" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#style=</source>
          <target state="translated">Nodes::Sequence#style=</target>
        </trans-unit>
        <trans-unit id="160873470ca99452b2594b738fcace692a5c9d89" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#to_yaml</source>
          <target state="translated">Nodes::Sequence#to_yaml</target>
        </trans-unit>
        <trans-unit id="7ffa9af7a01bdfe63c4b9baeab7e5f4ff19fa5f6" translate="yes" xml:space="preserve">
          <source>Non UTF-8 valid strings</source>
          <target state="translated">UTF-8이 아닌 유효한 문자열</target>
        </trans-unit>
        <trans-unit id="0cababce0b45af347657895a02679eff6ed12fe5" translate="yes" xml:space="preserve">
          <source>Non-matching paths are implicitly converted to this path's kind.</source>
          <target state="translated">일치하지 않는 경로는 암시 적으로이 경로 종류로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="2be5fcdd962946d4d3a529bfb37ee67c4054e5b0" translate="yes" xml:space="preserve">
          <source>Normalizes this URI instance.</source>
          <target state="translated">이 URI 인스턴스를 정규화합니다.</target>
        </trans-unit>
        <trans-unit id="e69c1716df1f314f731c86bb9ee456bd2cd42a44" translate="yes" xml:space="preserve">
          <source>Not a STREAM</source>
          <target state="translated">스트림이 아님</target>
        </trans-unit>
        <trans-unit id="338469a733ebda5aa0e30bb1db80e0e157e51892" translate="yes" xml:space="preserve">
          <source>Not a directory</source>
          <target state="translated">디렉토리가 아님</target>
        </trans-unit>
        <trans-unit id="a46c132ceb82a884866928c661aeea17b1e52d95" translate="yes" xml:space="preserve">
          <source>Not all of these files are required for every project, and some might need more customization, but &lt;code&gt;crystal init&lt;/code&gt; creates a good default environment for developing Crystal applications and libraries.</source>
          <target state="translated">이러한 파일 모두가 모든 프로젝트에 필요한 것은 아니며 일부는 더 많은 사용자 정의가 필요할 수 있지만 &lt;code&gt;crystal init&lt;/code&gt; 는 Crystal 응용 프로그램 및 라이브러리 개발을위한 좋은 기본 환경을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="translated">NotImplementedError</target>
        </trans-unit>
        <trans-unit id="f248847a607be640097e4c8d6b08e960990b5ba5" translate="yes" xml:space="preserve">
          <source>NotImplementedError.new</source>
          <target state="translated">NotImplementedError.new</target>
        </trans-unit>
        <trans-unit id="bee777843ba0bff132cea365da745cfe4d1ef416" translate="yes" xml:space="preserve">
          <source>NotReady</source>
          <target state="translated">NotReady</target>
        </trans-unit>
        <trans-unit id="0b38a605c7604157c1f6623655826350bd296bdd" translate="yes" xml:space="preserve">
          <source>NotReady#clone</source>
          <target state="translated">NotReady#clone</target>
        </trans-unit>
        <trans-unit id="81f33c19bb2dc2d83ebac36bddb705df82a87b18" translate="yes" xml:space="preserve">
          <source>NotReady#copy_with</source>
          <target state="translated">NotReady#copy_with</target>
        </trans-unit>
        <trans-unit id="9916f0ba98f0761930b909b343add238e74a8eeb" translate="yes" xml:space="preserve">
          <source>NotReady.new</source>
          <target state="translated">NotReady.new</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="653eb0029613b199ca2a159c9a130bbee701b3b8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:foo&lt;/code&gt; was the result of the interpolation, because that's what was passed to the macro. You can use the method &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt;&lt;code&gt;ASTNode#id&lt;/code&gt;&lt;/a&gt; in these cases, where you just need an identifier.</source>
          <target state="translated">참고 &lt;code&gt;:foo&lt;/code&gt; 그 매크로에 전달 무엇 때문에, 보간의 결과였다. 이 경우 식별자가 필요한 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt; &lt;code&gt;ASTNode#id&lt;/code&gt; &lt;/a&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44bf03f06124b6ebcb12b17ce2968e9ab3a018f4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;math#gamma(value)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; is same as &lt;code&gt;fact(n - 1)&lt;/code&gt; for integer &lt;code&gt;n &amp;gt; 0&lt;/code&gt;. However &lt;code&gt;&lt;a href=&quot;math#gamma(value)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; returns float and can be an approximation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606cba09aff4b3bb673ef53e2c7fc74e8eb1e42f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; is same as &lt;code&gt;fact(n - 1)&lt;/code&gt; for integer &lt;code&gt;n &amp;gt; 0&lt;/code&gt;. However &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; returns float and can be an approximation.</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; 동일하다 &lt;code&gt;fact(n - 1)&lt;/code&gt; 정수 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; . 그러나 &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; 은 float를 반환하며 근사값이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e84b38ede8d752b1d7b15cf80dbc569330895719" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; is always trapped and child processes will always be reaped before the custom handler is called, hence a custom &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; handler must check child processes using &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int)-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt;. Trying to use waitpid with a zero or negative value won't work.</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 는 항상 갇혀와 자식 프로세스는 항상 사용자 정의 핸들러가 호출되기 전에, 따라서 사용자 정의 수확됩니다 &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 의 처리기를 사용하여 자식 프로세스를 확인해야합니다 &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int)-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt; . waitpid를 0 또는 음수 값으로 사용하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d1c9d39aeb1d272fa28c2edbfd4edacec27c76e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; is always trapped and child processes will always be reaped before the custom handler is called, hence a custom &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; handler must check child processes using &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int):Bool-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt;. Trying to use waitpid with a zero or negative value won't work.</source>
          <target state="translated">Note that &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; is always trapped and child processes will always be reaped before the custom handler is called, hence a custom &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; handler must check child processes using &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int):Bool-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt; . Trying to use waitpid with a zero or negative value won't work.</target>
        </trans-unit>
        <trans-unit id="9c6ac41d4df78140a3304ac7c647aae80ec18a80" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;@type&lt;/code&gt; is always the &lt;em&gt;instance&lt;/em&gt; type, even when the macro is invoked in a class method.</source>
          <target state="translated">참고 &lt;code&gt;@type&lt;/code&gt; 은 항상이다 &lt;em&gt;인스턴스&lt;/em&gt; 매크로가 클래스 메서드에서 호출하는 경우에도, 유형입니다.</target>
        </trans-unit>
        <trans-unit id="14394ebd2eaf48799e89fa7b7a5d8f8156c3dce4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;dns_timeout&lt;/code&gt; is currently ignored.</source>
          <target state="translated">참고 &lt;code&gt;dns_timeout&lt;/code&gt; 은 현재 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3f4b94dde6ed397c6878130ccc9375a057d977a4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;private&lt;/code&gt; methods are visible by subclasses:</source>
          <target state="translated">참고 &lt;code&gt;private&lt;/code&gt; 방법이 서브 클래스에 의해 볼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="3e5e40063f571fc5c6540ff9c650e1ea4465bacd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;self&lt;/code&gt; always represents a match against an instance type, even in class methods:</source>
          <target state="translated">참고 &lt;code&gt;self&lt;/code&gt; 에도 항상 클래스 메소드에서 인스턴스 유형에 대한 일치를 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="eb2f5012468a6f7ef49c3a8d9d1e04ef79e77091" translate="yes" xml:space="preserve">
          <source>Note that a pointer is &lt;em&gt;falsey&lt;/em&gt; if it's null (if its address is zero).</source>
          <target state="translated">포인터가 null 인 경우 (주소가 0 인 경우 ) &lt;em&gt;잘못된&lt;/em&gt; 포인터입니다 .</target>
        </trans-unit>
        <trans-unit id="d46faa9261cd50bbe1641e5341e154a76b5b5bc8" translate="yes" xml:space="preserve">
          <source>Note that because expressions are assigned to temporary variables it is possible to exchange variables&amp;rsquo; contents in a single line:</source>
          <target state="translated">식은 임시 변수에 할당되므로 변수 내용을 한 줄로 교환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38cf113f5baae038ab9252dbfdcd896fbfe282cb" translate="yes" xml:space="preserve">
          <source>Note that before &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; is invoked the GC is not setup yet, so nothing that allocates memory in Crystal (like &lt;code&gt;new&lt;/code&gt; for classes) can be used.</source>
          <target state="translated">Note that before &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; is invoked the GC is not setup yet, so nothing that allocates memory in Crystal (like &lt;code&gt;new&lt;/code&gt; for classes) can be used.</target>
        </trans-unit>
        <trans-unit id="de0eb7019cc75c5c1e54abb540ec7b2c88a66a91" translate="yes" xml:space="preserve">
          <source>Note that before &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; is invoked the GC is not setup yet, so nothing that allocates memory in Crystal (like &lt;code&gt;new&lt;/code&gt; for classes) can be used.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; 이 호출 되기 전에 GC가 아직 설정되지 않았으므로 Crystal에 메모리를 할당하는 ( 클래스의 &lt;code&gt;new&lt;/code&gt; 것과 같은) 아무것도 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7187006972af784a25767c86fe52a1c96342c37a" translate="yes" xml:space="preserve">
          <source>Note that due to current language limitations this is only useful when no captured blocks are involved.</source>
          <target state="translated">현재 언어 제한으로 인해 캡처 된 블록이 포함되지 않은 경우에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6ecc691d46d6fa954d2fd488c1ea977c36bc4791" translate="yes" xml:space="preserve">
          <source>Note that if Array invoked &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; on each of the elements above, the output would have been this:</source>
          <target state="translated">위의 각 요소에서 Array가 &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 를 호출 하면 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f6b172d1e9bf668d6f8df441d8a8aac818e1a19" translate="yes" xml:space="preserve">
          <source>Note that if Array invoked &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; on each of the elements above, the output would have been this:</source>
          <target state="translated">위의 각 요소에서 Array가 &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 를 호출 하면 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab48cc399af6948ea12e5a6cdb7a33806bdc31a3" translate="yes" xml:space="preserve">
          <source>Note that if a variable is declared inside one of the branches but not in the other one, at the end of the &lt;code&gt;if&lt;/code&gt; it will also contain the &lt;code&gt;Nil&lt;/code&gt; type.</source>
          <target state="translated">변수가 브랜치 중 하나 안에 선언되었지만 다른 브랜치에는 선언되지 않은 &lt;code&gt;if&lt;/code&gt; 끝에 &lt;code&gt;Nil&lt;/code&gt; 유형 도 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="3294457d3a6398f9b6bc022c5c36ba9fe5fd1a0c" translate="yes" xml:space="preserve">
          <source>Note that if the return type is not specified, nothing gets returned from the proc call:</source>
          <target state="translated">반환 유형을 지정하지 않으면 proc 호출에서 아무것도 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89f0e17c4ecd6fb1b7b7dd1d9f998414e9f8a970" translate="yes" xml:space="preserve">
          <source>Note that if we had defined &lt;code&gt;add&lt;/code&gt; without type restrictions, we would also have gotten a compile time error:</source>
          <target state="translated">타입 제한없이 &lt;code&gt;add&lt;/code&gt; 를 정의했다면 컴파일 타임 에러도 발생했을 것입니다 :</target>
        </trans-unit>
        <trans-unit id="ef7d147b2c1d52dd0284a8a1946be3c558df9a02" translate="yes" xml:space="preserve">
          <source>Note that in the above example &lt;code&gt;T&lt;/code&gt; becomes &lt;code&gt;Int32&lt;/code&gt; because &lt;code&gt;Foo.new(1)&lt;/code&gt; makes &lt;code&gt;U&lt;/code&gt; become &lt;code&gt;Int32&lt;/code&gt;, which in turn makes &lt;code&gt;T&lt;/code&gt; become &lt;code&gt;Int32&lt;/code&gt; via the inclusion of the generic module.</source>
          <target state="translated">위의 예에서 유의 &lt;code&gt;T&lt;/code&gt; 가 된다 &lt;code&gt;Int32&lt;/code&gt; 때문에 &lt;code&gt;Foo.new(1)&lt;/code&gt; 만드는 &lt;code&gt;U&lt;/code&gt; 가 될 &lt;code&gt;Int32&lt;/code&gt; 다시 만들고, &lt;code&gt;T&lt;/code&gt; 가 될 &lt;code&gt;Int32&lt;/code&gt; 일반 모듈을 포함 통하여.</target>
        </trans-unit>
        <trans-unit id="7d518d6d3401b61c62f0118ff3cb8c6c1585114b" translate="yes" xml:space="preserve">
          <source>Note that in the above example trailing and leading spaces, as well as newlines, end up in the resulting string. To avoid this a string can be split into multiple lines by joining multiple literals with a backslash:</source>
          <target state="translated">위의 예제에서 줄 바꿈뿐만 아니라 후행 및 선행 공백은 결과 문자열로 끝납니다. 이를 피하기 위해 여러 리터럴을 백 슬래시로 결합하여 문자열을 여러 줄로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9b432be3d0b443272f7d85d2dd0c9f17399678a" translate="yes" xml:space="preserve">
          <source>Note that in the above example trailing and leading spaces, as well as newlines, end up in the resulting string. To avoid this, you can split a string into multiple lines by joining multiple literals with a backslash:</source>
          <target state="translated">위의 예제에서 줄 바꿈뿐만 아니라 후행 및 선행 공백은 결과 문자열로 끝납니다. 이를 피하기 위해 여러 리터럴을 백 슬래시로 결합하여 문자열을 여러 줄로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3815dc422d7ef8c5b918419a0b18a123e55ec57" translate="yes" xml:space="preserve">
          <source>Note that in the case of the method that yields, the compiler figured this out because there's a &lt;code&gt;yield&lt;/code&gt; expression. To make this more explicit, you can add a dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; argument at the end:</source>
          <target state="translated">yield 메소드의 경우 &lt;code&gt;yield&lt;/code&gt; 표현식 이 있으므로 컴파일러가이를 알아 냈습니다 . 보다 명확하게하기 위해 끝에 더미 &lt;code&gt;&amp;amp;block&lt;/code&gt; 인수를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="caa990d1c828d6d0e21da300d95ab30d21cee400" translate="yes" xml:space="preserve">
          <source>Note that in the case of the method that yields, the compiler figured this out because there's a &lt;code&gt;yield&lt;/code&gt; expression. To make this more explicit, you can add a dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; parameter at the end:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105aded6d0d097b46f4f7af3eced0d28ca1325a4" translate="yes" xml:space="preserve">
          <source>Note that it's not clear how many elements the array has, or which are they, because &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; doesn't guarantee that the string representation is clearly delimited (in the case of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; the quotes are not shown).</source>
          <target state="translated">있기 때문에, 배열이 얼마나 많은 요소를 지우거나 그들이 아니라고 주 &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 는 문자열 표현이 명확하게 (의 경우로 구분되는 것을 보장하지 않습니다 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 따옴표가 표시되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="7d72c7bb216d632b4797fb2eb72c453c7b69a247" translate="yes" xml:space="preserve">
          <source>Note that it's not clear how many elements the array has, or which are they, because &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; doesn't guarantee that the string representation is clearly delimited (in the case of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; the quotes are not shown).</source>
          <target state="translated">있기 때문에, 배열이 얼마나 많은 요소를 지우거나 그들이 아니라고 주 &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 는 문자열 표현이 명확하게 (의 경우로 구분되는 것을 보장하지 않습니다 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 따옴표가 표시되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="a6b49368f8af9706c1274d0e98bd9b7a0c9d7db8" translate="yes" xml:space="preserve">
          <source>Note that literal denoted by &lt;code&gt;%w&lt;/code&gt; does not apply interpolation nor escapes except spaces. Since strings are separated by a single space character () which must be escaped to use it as a part of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79f823d6f017c8d51a6e99118786bdf236f05d" translate="yes" xml:space="preserve">
          <source>Note that literal denoted by &lt;code&gt;%w&lt;/code&gt; does not apply interpolation nor escapes expect spaces. Since strings are separated by a single space character () which must be escaped to use it as a part of a string.</source>
          <target state="translated">&lt;code&gt;%w&lt;/code&gt; 로 표시된 리터럴 은 보간을 적용하지 않으며 이스케이프는 공백을 기대합니다. 문자열은 단일 공백 ​​문자 ()로 구분되므로 문자열의 일부로 사용하려면 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="a36d49f07fe16c569483c35eb69dfd50848d9bc2" translate="yes" xml:space="preserve">
          <source>Note that methods used to traverse a JSON structure, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index:Int):JSON::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index:Int):JSON::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt;, always return a &lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; to allow further traversal. To convert them to &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, etc., use the &lt;code&gt;as_&lt;/code&gt; methods, such as &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#as_i:Int32-instance-method&quot;&gt;#as_i&lt;/a&gt;&lt;/code&gt;, which perform a type check against the raw underlying value. This means that invoking &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; when the underlying value is not a String will raise: the value won't automatically be converted (parsed) to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">JSON 구조 인 &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index:Int):JSON::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index:Int):JSON::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt; 을 탐색하는 데 사용되는 방법은 무엇입니까? 더 많은 순회를 허용하려면 항상 &lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 등으로 변환하려면 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;any#as_i:Int32-instance-method&quot;&gt;#as_i&lt;/a&gt;&lt;/code&gt; 와 같은 &lt;code&gt;as_&lt;/code&gt; 메소드를 사용하십시오 . 이는 원시 기본 값에 대해 유형 검사를 수행합니다. 호출하는 것으로이 방법 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; 기본 값이 문자열이 아닌 올릴 것이다 : 값이 자동으로 변환 (구문 분석)되지 않습니다 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56a016f34fe97bcbe201873e1f081e5fa7fe717f" translate="yes" xml:space="preserve">
          <source>Note that methods used to traverse a YAML structure, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index_or_key):YAML::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index_or_key):YAML::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;#each&lt;/code&gt;, always return a &lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; to allow further traversal. To convert them to &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, etc., use the &lt;code&gt;as_&lt;/code&gt; methods, such as &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#as_a:Array(Any)-instance-method&quot;&gt;#as_a&lt;/a&gt;&lt;/code&gt;, which perform a type check against the raw underlying value. This means that invoking &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; when the underlying value is not a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; will raise: the value won't automatically be converted (parsed) to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">YAML 구조, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index_or_key):YAML::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index_or_key):YAML::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt; 를 탐색하는 데 사용되는 방법은 무엇입니까? 그리고 &lt;code&gt;#each&lt;/code&gt; 는 항상 &lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; 를 반환하여 더 많은 순회를 허용합니다. &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 등으로 변환하려면 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;any#as_a:Array(Any)-instance-method&quot;&gt;#as_a&lt;/a&gt;&lt;/code&gt; 와 같은 &lt;code&gt;as_&lt;/code&gt; 메소드를 사용하십시오.이 메소드 는 원시 기본 값에 대해 유형 검사를 수행합니다. 호출하는 것으로이 방법 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; 기본 값이 아닌 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 올릴 것이다 : 값이 자동으로 변환 (구문 분석)되지 않습니다 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cc773b1f636703780449c1670def448ffc69adf" translate="yes" xml:space="preserve">
          <source>Note that most search and filter methods traverse an Enumerable eagerly, producing an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; as the result. For a lazy alternative refer to the &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; modules.</source>
          <target state="translated">대부분의 검색 및 필터 메소드는 Enumerable을 간절히 통과하여 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 를 생성합니다 . 게으른 대안은 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29749f02130eec66083dc571df2a91a8db209048" translate="yes" xml:space="preserve">
          <source>Note that returning &lt;code&gt;nil&lt;/code&gt; is only useful when defining a partial comparable relationship. One such example is float values: they are generally comparable, except for &lt;code&gt;NaN&lt;/code&gt;. If none of the values of a type are comparable between each other, &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; shouldn't be included.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 을 리턴 하는 것은 부분 비교 가능한 관계를 정의 할 때만 유용합니다. 그러한 예 중 하나는 float 값입니다. &lt;code&gt;NaN&lt;/code&gt; 을 제외하고 일반적으로 비교할 수 있습니다. 유형의 값이 서로 비교할 수 없으면 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; 을 포함하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="e4f2e9b31442b05186a2fc7fb8d67c840735b504" translate="yes" xml:space="preserve">
          <source>Note that the above is really just an example, almost the same can be accomplished with &lt;code&gt;at_exit&lt;/code&gt;. But in some cases redefinition of C's main is needed.</source>
          <target state="translated">위의 예제는 단지 예제 일 &lt;code&gt;at_exit&lt;/code&gt; 거의 동일 합니다. 그러나 어떤 경우에는 C의 메인 재정의가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c32e9458635ee737061354e847fe54176208cf86" translate="yes" xml:space="preserve">
          <source>Note that the first 2 sends are executed without switching to another fiber. However, in the third send the channel's buffer is full, so execution goes to the main fiber. Here the two values are received and the channel is depleted. At the third &lt;code&gt;receive&lt;/code&gt; the main fiber blocks and execution goes to the other fiber, which sends more values, finishes, etc.</source>
          <target state="translated">처음 2 개의 전송은 다른 파이버로 전환하지 않고 실행됩니다. 그러나 세 번째 송신에서는 채널의 버퍼가 가득 차서 주 광섬유로 실행됩니다. 여기서 두 값이 수신되고 채널이 고갈됩니다. 세 번째 는 메인 파이버 블록을 &lt;code&gt;receive&lt;/code&gt; 하고 다른 파이버로 실행하면 더 많은 값, 마감 등을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="202f88babbfe4309e441744e59d1c104b3de83e8" translate="yes" xml:space="preserve">
          <source>Note that the last one can be smaller.</source>
          <target state="translated">마지막 것은 더 작을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b32fdc25391273c0446d061c07fd494394f0d11f" translate="yes" xml:space="preserve">
          <source>Note that the name of the method argument is not important; this works as well:</source>
          <target state="translated">메소드 인수의 이름은 중요하지 않습니다. 이것은 또한 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="c8d8a356425fba891f032289bce989f187cb217c" translate="yes" xml:space="preserve">
          <source>Note that the name of the method parameter is not important; this works as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83998c867b084d47190aee5897fd90188ffc8fc1" translate="yes" xml:space="preserve">
          <source>Note that the node is pasted as-is. If in the previous example we pass a symbol, the generated code becomes invalid:</source>
          <target state="translated">노드는있는 그대로 붙여 넣습니다. 이전 예제에서 심볼을 전달하면 생성 된 코드가 유효하지 않게됩니다.</target>
        </trans-unit>
        <trans-unit id="0eb7060854f0a08b431ae518f99110ccb8593fbd" translate="yes" xml:space="preserve">
          <source>Note that the null character &lt;code&gt;'\0'&lt;/code&gt; will be returned in &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; when the end is reached (as well as when the string is empty). Thus, &lt;code&gt;&lt;a href=&quot;reader#has_next?-instance-method&quot;&gt;#has_next?&lt;/a&gt;&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; only when &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; is equal to the string's bytesize, in which case &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; will always be &lt;code&gt;'\0'&lt;/code&gt;.</source>
          <target state="translated">끝에 도달하면 (문자열이 비어있을 때) 널 문자 &lt;code&gt;'\0'&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; 에 반환됩니다 . 따라서 &lt;code&gt;&lt;a href=&quot;reader#has_next?-instance-method&quot;&gt;#has_next?&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; 가 문자열의 바이트 크기와 같은 경우에만 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .이 경우 &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; 는 항상 &lt;code&gt;'\0'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c6adad0f8f6d4c8198f537244fc2375d2efa3545" translate="yes" xml:space="preserve">
          <source>Note that there are no implicit conversions (except &lt;code&gt;to_unsafe&lt;/code&gt;, which is explained later) when invoking a C function: you must pass the exact type that is expected. For integers and floats you can use the various &lt;code&gt;to_...&lt;/code&gt; methods.</source>
          <target state="translated">C 함수를 호출 할 때 암시 적 변환 ( 나중에 설명 할 &lt;code&gt;to_unsafe&lt;/code&gt; 제외)은 없습니다 . 예상되는 정확한 유형을 전달해야합니다. 정수 및 부동 소수점의 경우 다양한 &lt;code&gt;to_...&lt;/code&gt; 메소드 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9679c70cbbbf3e086500a0853c1d2638d34aab5" translate="yes" xml:space="preserve">
          <source>Note that this only works for characters whose downcase equivalent yields a single codepoint. There are a few characters, like 'İ', than when downcased result in multiple characters (in this case: 'I' and the dot mark).</source>
          <target state="translated">이것은 소문자에 해당하는 단일 코드 포인트를 생성하는 문자에만 적용됩니다. 소문자로 결과가 여러 문자로 표시 될 때보 다 'İ'와 같은 문자가 몇 개 있습니다 (이 경우 'I'및 점 표시).</target>
        </trans-unit>
        <trans-unit id="f20edd4b57b037fbfbd3c4e8a8b1786a2bd7683a" translate="yes" xml:space="preserve">
          <source>Note that this only works for characters whose upcase equivalent yields a single codepoint. There are a few characters, like 'ﬄ', than when upcased result in multiple characters (in this case: 'F', 'F', 'L').</source>
          <target state="translated">이것은 대문자와 동등한 단일 코드 포인트를 생성하는 문자에만 적용됩니다. 'ﬄ'와 같이 대문자로 결과를 여러 문자로 표시 할 때보 다 몇 가지 문자가 있습니다 (이 경우 'F', 'F', 'L').</target>
        </trans-unit>
        <trans-unit id="eb5325a8a4a3588f52f894234ace347876e3838f" translate="yes" xml:space="preserve">
          <source>Note that trying to ignore &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; will actually set the default crystal handler that monitors and reaps child processes. This prevents zombie processes and is required by &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; for example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 를 무시 하려고 하면 실제로 자식 프로세스를 모니터링하고 거두는 기본 crystal 처리기가 설정됩니다. 이것은 좀비 프로세스를 방지 하며 예를 들어 &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; 에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="0c343593ebb904e7e3941adfd4e4eb418b4d1e1d" translate="yes" xml:space="preserve">
          <source>Note that trying to reset &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; will actually set the default crystal handler that monitors and reaps child processes. This prevents zombie processes and is required by &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; for example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 를 재설정 하려고 하면 실제로 자식 프로세스를 모니터링하고 거두는 기본 크리스탈 핸들러가 설정됩니다. 이것은 좀비 프로세스를 방지 하며 예를 들어 &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; 에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="f1a47b6165250421852f2d206b0a535e056b95f0" translate="yes" xml:space="preserve">
          <source>Note that type restrictions do not apply to the variables inside the actual methods.</source>
          <target state="translated">실제 메서드 내의 변수에는 유형 제한이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ddad369c61a967d60eab102822815b8de270004" translate="yes" xml:space="preserve">
          <source>Note that we create a &lt;code&gt;Person&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt; but we defined the initialization in an &lt;code&gt;initialize&lt;/code&gt; method, not in a &lt;code&gt;new&lt;/code&gt; method. Why is this so?</source>
          <target state="translated">우리 는 &lt;code&gt;new&lt;/code&gt; 로 &lt;code&gt;Person&lt;/code&gt; 을 생성 하지만 &lt;code&gt;new&lt;/code&gt; 메소드가 아닌 &lt;code&gt;initialize&lt;/code&gt; 메소드 에서 초기화를 정의했습니다 . 왜 그렇습니까?</target>
        </trans-unit>
        <trans-unit id="3e9b417367499f6e4fe4eb1f291c1d5870403b25" translate="yes" xml:space="preserve">
          <source>Note that we save the box in &lt;code&gt;@@box&lt;/code&gt;. The reason is that if we don't do it, and our code doesn't reference it anymore, the GC will collect it. The C library will of course store the callback, but Crystal's GC has no way of knowing that.</source>
          <target state="translated">&lt;code&gt;@@box&lt;/code&gt; 상자를 저장합니다 . 그 이유는 우리가 그것을하지 않고 코드가 더 이상 참조하지 않으면 GC가 수집하기 때문입니다. C 라이브러리는 물론 콜백을 저장하지만 Crystal의 GC는이를 알 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d283ee35df39561eae27662474ff0f693663439" translate="yes" xml:space="preserve">
          <source>Note that we save the boxed callback in &lt;code&gt;@@box&lt;/code&gt;. The reason is that if we don't do it, and our code doesn't reference it anymore, the GC will collect it. The C library will of course store the callback, but Crystal's GC has no way of knowing that.</source>
          <target state="translated">박스형 콜백을 &lt;code&gt;@@box&lt;/code&gt; 에 저장합니다 . 그 이유는 우리가 그것을하지 않고 코드가 더 이상 참조하지 않으면 GC가 수집하기 때문입니다. C 라이브러리는 물론 콜백을 저장하지만 Crystal의 GC는이를 알 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7df742bb71acad7c16f2a1ebaab70b45ef58534b" translate="yes" xml:space="preserve">
          <source>Note that we won't be using TDD in the example itself, but we will mimic as if the example code is the result of the first iterations.</source>
          <target state="translated">Note that we won't be using TDD in the example itself, but we will mimic as if the example code is the result of the first iterations.</target>
        </trans-unit>
        <trans-unit id="a2aaf45bfa98ad69869830709cccb2c1c0f8f902" translate="yes" xml:space="preserve">
          <source>Note that when the program executes a &lt;code&gt;receive&lt;/code&gt;, that fiber blocks and execution continues with the other fiber. When &lt;code&gt;send&lt;/code&gt; is executed, execution continues with the fiber that was waiting on that channel.</source>
          <target state="translated">프로그램이 &lt;code&gt;receive&lt;/code&gt; 를 실행할 때 해당 파이버 블록 및 실행은 다른 파이버에서 계속됩니다. &lt;code&gt;send&lt;/code&gt; 가 실행될 때 해당 채널에서 대기중인 광섬유로 실행이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="c08f2cf170daa0f783923075996b4317497c50a9" translate="yes" xml:space="preserve">
          <source>Note that you can use any type as an &lt;code&gt;is_a?&lt;/code&gt; test, like abstract classes and modules.</source>
          <target state="translated">모든 유형을 &lt;code&gt;is_a?&lt;/code&gt; 로 사용할 수 있습니까? 추상 클래스 및 모듈과 같은 테스트.</target>
        </trans-unit>
        <trans-unit id="2a0f7deb50ae551bc7fd424200c5053fa3979933" translate="yes" xml:space="preserve">
          <source>Note, however, that fibers don't get executed right away. For example:</source>
          <target state="translated">그러나 파이버는 즉시 실행되지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e021e3232d312c94b658d8347111ffe63c7dff7e" translate="yes" xml:space="preserve">
          <source>Note, however, that functions passed to C can't form closures. If the compiler detects at compile-time that a closure is being passed, an error will be issued:</source>
          <target state="translated">그러나 C로 전달 된 함수는 클로저를 형성 할 수 없습니다. 컴파일러가 컴파일 타임에 클로저가 전달되고 있음을 감지하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="1b70dacbe558c1246db5330f6d672db00269ffc4" translate="yes" xml:space="preserve">
          <source>Note: The actual binary is built in to &lt;code&gt;.build/crystal&lt;/code&gt;, but the &lt;code&gt;bin/crystal&lt;/code&gt; wrapper script is what you should use to run crystal.</source>
          <target state="translated">참고 : 실제 바이너리는 &lt;code&gt;.build/crystal&lt;/code&gt; 에 내장되어 있지만 &lt;code&gt;bin/crystal&lt;/code&gt; 래퍼 스크립트는 crystal을 실행하는 데 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="705f8982949d38e4a11c13a286d327b70b4bb076" translate="yes" xml:space="preserve">
          <source>Note: When using the pg driver, use &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc. instead of &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">참고 : pg 드라이버를 사용할 때는 &lt;code&gt;?&lt;/code&gt; 대신 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; 등을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5594da49c33afb741c4981e27579c2333df588b2" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;case&lt;/code&gt; is not within the macro. The code generated by the macro consists solely of two &lt;code&gt;when&lt;/code&gt; expressions which, by themselves, is not valid Crystal code. We must include &lt;code&gt;case&lt;/code&gt; within the macro in order to make it valid by using &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;:</source>
          <target state="translated">공지 사항이 &lt;code&gt;case&lt;/code&gt; 매크로가 포함되어 있지 않습니다. 매크로에 의해 생성 된 코드는 전적으로 두 가지로 구성되어 , 그 자체로 유효한 크리스탈 코드가 아닙니다 표현. 매크로를 &lt;code&gt;begin&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 을 사용하여 유효하게하려면 &lt;code&gt;case&lt;/code&gt; 를 포함해야합니다 . &lt;code&gt;when&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdda6cfdec3a53b7bf2752325a7b6e92cf980953" translate="yes" xml:space="preserve">
          <source>Notice that the chained calls of &lt;code&gt;plus&lt;/code&gt; return the expected result, but only the first call to it modifies the variable &lt;code&gt;counter&lt;/code&gt;, as the second call operates on the &lt;em&gt;copy&lt;/em&gt; of the struct passed to it from the first call, and this copy is discarded after the expression is executed.</source>
          <target state="translated">체인 된 &lt;code&gt;plus&lt;/code&gt; 호출은 예상 결과를 반환하지만 첫 번째 호출에서만 전달 된 구조체 의 &lt;em&gt;복사본&lt;/em&gt; 에서 두 번째 호출이 작동 하므로 첫 번째 호출 만 변수 &lt;code&gt;counter&lt;/code&gt; 를 수정합니다 . 표현이 실행됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="519130ac6dd4e0f9061baf1d619b8759ef3e2ff7" translate="yes" xml:space="preserve">
          <source>Notice the variables in the inner macro are not available within the &lt;code&gt;verbatim&lt;/code&gt; block. The contents of the block are transferred &quot;as is&quot;, essentially as a string, until re-examined by the compiler.</source>
          <target state="translated">내부 매크로의 변수는 &lt;code&gt;verbatim&lt;/code&gt; 블록 내에서 사용할 수 없습니다 . 블록의 내용은 컴파일러가 다시 검사 할 때까지 본질적으로 문자열로 &quot;있는 그대로&quot;전송됩니다.</target>
        </trans-unit>
        <trans-unit id="3bced83c066f46e331b81e762f9dc26e34928523" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;MyInt&lt;/code&gt; are interchangeable:</source>
          <target state="translated">이제 &lt;code&gt;Int32&lt;/code&gt; 와 &lt;code&gt;MyInt&lt;/code&gt; 는 서로 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="5b90649e919d57402b52f38d180bd0b20a888063" translate="yes" xml:space="preserve">
          <source>Now it works because we are creating a &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc&lt;/a&gt; and we invoke it passing &lt;code&gt;i&lt;/code&gt;, so the value gets copied and now the spawned fiber receives a copy.</source>
          <target state="translated">이제 &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc를&lt;/a&gt; 생성하고 &lt;code&gt;i&lt;/code&gt; 를 전달하여 호출 하므로 값이 복사되고 생성 된 광섬유가 사본을받습니다.</target>
        </trans-unit>
        <trans-unit id="85d42745d4053337e47a54baa048745551627d86" translate="yes" xml:space="preserve">
          <source>Now let's see some examples!</source>
          <target state="translated">Now let's see some examples!</target>
        </trans-unit>
        <trans-unit id="3507c21525981117be474c4da251f3d4c049e3c7" translate="yes" xml:space="preserve">
          <source>Now that we have a good idea about creating a connection, let's present the &lt;strong&gt;second way&lt;/strong&gt; for creating one: &lt;code&gt;DB#open&lt;/code&gt;</source>
          <target state="translated">Now that we have a good idea about creating a connection, let's present the &lt;strong&gt;second way&lt;/strong&gt; for creating one: &lt;code&gt;DB#open&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b98fce16d538680d4aa6be6447c6fc70ad02382c" translate="yes" xml:space="preserve">
          <source>Now the code compiles:</source>
          <target state="translated">이제 코드가 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="c495f62bacebbeced779570a6792af558130531d" translate="yes" xml:space="preserve">
          <source>Now we can create people like this:</source>
          <target state="translated">이제 다음과 같은 사람들을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83967b0b4dbe5e651de53de1bd77ead1f9ef5234" translate="yes" xml:space="preserve">
          <source>Now, if we want to list all the options given by the compiler, we may run &lt;code&gt;crystal&lt;/code&gt; program without any arguments:</source>
          <target state="translated">Now, if we want to list all the options given by the compiler, we may run &lt;code&gt;crystal&lt;/code&gt; program without any arguments:</target>
        </trans-unit>
        <trans-unit id="5be18c15f93e8ee86b416aaf60e9a31487745ada" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s run specs using an external service (for example MySQL):</source>
          <target state="translated">이제 외부 서비스 (예 : MySQL)를 사용하여 사양을 실행 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="1cb5cbf65558d7fb64943ca584c8288d410717a0" translate="yes" xml:space="preserve">
          <source>Now, let's run our application. We have two ways &lt;a href=&quot;../using_the_compiler/index&quot;&gt;using the compiler&lt;/a&gt;:</source>
          <target state="translated">이제 애플리케이션을 실행 해 보겠습니다. &lt;a href=&quot;../using_the_compiler/index&quot;&gt;컴파일러를 사용하는&lt;/a&gt; 두 가지 방법이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3d6cba0bd1778e4bf191dd6bf7e10f4f8b02d2f" translate="yes" xml:space="preserve">
          <source>Now, we will focus on the second main topic: our application&amp;rsquo;s output. For starters, our applications already display information but (I think) we could do better. Let&amp;rsquo;s add more &lt;em&gt;life&lt;/em&gt; (i.e. colors!) to the outputs.</source>
          <target state="translated">이제 두 번째 주요 주제 인 애플리케이션의 출력에 초점을 맞출 것입니다. 우선, 우리의 응용 프로그램은 이미 정보를 표시하지만 (제 생각에는) 더 잘할 수 있습니다. 출력 에 더 많은 &lt;em&gt;생명&lt;/em&gt; (즉, 색상!)을 추가합시다 .</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="6492625a23d53ed86a073d859d8fe2dd6c8d9801" translate="yes" xml:space="preserve">
          <source>Number []</source>
          <target state="translated">숫자 []</target>
        </trans-unit>
        <trans-unit id="2636a975d296386736c0a53e3801027063f7f303" translate="yes" xml:space="preserve">
          <source>Number of 100ms runs during the calculation stage</source>
          <target state="translated">계산 단계 동안 100ms 수</target>
        </trans-unit>
        <trans-unit id="be44a604fc66f0b2a7c7b936e26957f9c8f669d5" translate="yes" xml:space="preserve">
          <source>Number of bytes allocated per operation</source>
          <target state="translated">작업 당 할당 된 바이트 수</target>
        </trans-unit>
        <trans-unit id="9481b83c519a66c32c5b139645e62f2ddeab0b3e" translate="yes" xml:space="preserve">
          <source>Number of cycles needed to run for approx 100ms Calculated during the warmup stage</source>
          <target state="translated">예열 단계 동안 계산 된 약 100ms 동안 실행하는 데 필요한 사이클 수</target>
        </trans-unit>
        <trans-unit id="95b387c44c1efc478cc54ab073ddf2a9d38a2b07" translate="yes" xml:space="preserve">
          <source>Number of seconds decimals can be selected with &lt;em&gt;fraction_digits&lt;/em&gt;. Values accepted are 0 (the default, no decimals), 3 (milliseconds), 6 (microseconds) or 9 (nanoseconds).</source>
          <target state="translated">소수는 &lt;em&gt;fraction_digits&lt;/em&gt; 로 선택할 수 있습니다 . 허용되는 값은 0 (기본값, 소수 없음), 3 (밀리 초), 6 (마이크로 초) 또는 9 (나노초)입니다.</target>
        </trans-unit>
        <trans-unit id="e9a244565d0ece85dcc9b54734202dbc09e3dde3" translate="yes" xml:space="preserve">
          <source>Number slice</source>
          <target state="translated">숫자 조각</target>
        </trans-unit>
        <trans-unit id="043de8bc26f4ee4eb5e981e3060b5eee2e5e3d07" translate="yes" xml:space="preserve">
          <source>Number#*</source>
          <target state="translated">Number#*</target>
        </trans-unit>
        <trans-unit id="503da7a5f31eb0d2d1552e84d3f67dda7d29e882" translate="yes" xml:space="preserve">
          <source>Number#+</source>
          <target state="translated">Number#+</target>
        </trans-unit>
        <trans-unit id="1aa029036de76d28817d24abf2fad6846214e1f3" translate="yes" xml:space="preserve">
          <source>Number#-</source>
          <target state="translated">Number#-</target>
        </trans-unit>
        <trans-unit id="091f0ad2dd0ac454e93c6465c1cf8b48e1a9ed36" translate="yes" xml:space="preserve">
          <source>Number#/</source>
          <target state="translated">Number#/</target>
        </trans-unit>
        <trans-unit id="1d91f6e2b43456caa4e7d8afd37e55839f7435df" translate="yes" xml:space="preserve">
          <source>Number#//</source>
          <target state="translated">Number#//</target>
        </trans-unit>
        <trans-unit id="9d89fd216986768105a3cf1e44df3ec229e0ed1d" translate="yes" xml:space="preserve">
          <source>Number#==</source>
          <target state="translated">Number#==</target>
        </trans-unit>
        <trans-unit id="b9919b826bcc953029e7c2ef5653cfc39f11f455" translate="yes" xml:space="preserve">
          <source>Number#abs</source>
          <target state="translated">Number#abs</target>
        </trans-unit>
        <trans-unit id="1701f7c151bf40af1a848751bb30228328f297f2" translate="yes" xml:space="preserve">
          <source>Number#abs2</source>
          <target state="translated">Number#abs2</target>
        </trans-unit>
        <trans-unit id="9b4a1bd0e384e0f4ec24e0886c45b0052d0a023b" translate="yes" xml:space="preserve">
          <source>Number#cis</source>
          <target state="translated">Number#cis</target>
        </trans-unit>
        <trans-unit id="1057199f0276afa1af81e4b0680cde6318883d03" translate="yes" xml:space="preserve">
          <source>Number#i</source>
          <target state="translated">Number#i</target>
        </trans-unit>
        <trans-unit id="20f8d8bad640d14a67d8415b0d8ce26dd26fadb3" translate="yes" xml:space="preserve">
          <source>Number#sign</source>
          <target state="translated">Number#sign</target>
        </trans-unit>
        <trans-unit id="56978b13282e68f15f515097c6f6c4100b3c9816" translate="yes" xml:space="preserve">
          <source>Number#step</source>
          <target state="translated">Number#step</target>
        </trans-unit>
        <trans-unit id="fac421f373205f15acb0067bb29f82a38cbd5274" translate="yes" xml:space="preserve">
          <source>Number#to_c</source>
          <target state="translated">Number#to_c</target>
        </trans-unit>
        <trans-unit id="5fc2c07fb331448e68f0690b0e1566d1d8648b59" translate="yes" xml:space="preserve">
          <source>Number.zero</source>
          <target state="translated">Number.zero</target>
        </trans-unit>
        <trans-unit id="a24e1894b83d98684bcc3d88d8e9395561377236" translate="yes" xml:space="preserve">
          <source>Number::StepIterator(T, L, B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fc9c0627d353f718d236e88c3be96f2dc3c2ac" translate="yes" xml:space="preserve">
          <source>Numerical argument out of domain</source>
          <target state="translated">도메인 외부의 숫자 인수</target>
        </trans-unit>
        <trans-unit id="ec55bb4c0abfdf374833bccaf8cca81f159223e2" translate="yes" xml:space="preserve">
          <source>OAuth</source>
          <target state="translated">OAuth</target>
        </trans-unit>
        <trans-unit id="a001d9df1300ecf9a29aad8d9b0f309a3cc97221" translate="yes" xml:space="preserve">
          <source>OAuth2</source>
          <target state="translated">OAuth2</target>
        </trans-unit>
        <trans-unit id="d0c768ee28c41df60d2e22bf046fcb5280b905f0" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken</source>
          <target state="translated">OAuth2::AccessToken</target>
        </trans-unit>
        <trans-unit id="24346883c7b993797bbce8626ec7c3b66a627aa9" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken::Bearer</source>
          <target state="translated">OAuth2::AccessToken::Bearer</target>
        </trans-unit>
        <trans-unit id="07bc9d149768dd7f70283338ef9d8be2be475576" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken::Mac</source>
          <target state="translated">OAuth2::AccessToken::Mac</target>
        </trans-unit>
        <trans-unit id="458daefa039c30ece7d8a2fd8d50394d3d01829e" translate="yes" xml:space="preserve">
          <source>OAuth2::Client</source>
          <target state="translated">OAuth2::Client</target>
        </trans-unit>
        <trans-unit id="8c7216a7460ed5206f6ad327a53fc0bac6d2d2a6" translate="yes" xml:space="preserve">
          <source>OAuth2::Error</source>
          <target state="translated">OAuth2::Error</target>
        </trans-unit>
        <trans-unit id="1c638916279cc39fc2f2206a16b465cce34cbb95" translate="yes" xml:space="preserve">
          <source>OAuth2::Session</source>
          <target state="translated">OAuth2::Session</target>
        </trans-unit>
        <trans-unit id="b1fad834f0a5af8312249208b8f8ac356f711787" translate="yes" xml:space="preserve">
          <source>OAuth::AccessToken</source>
          <target state="translated">OAuth::AccessToken</target>
        </trans-unit>
        <trans-unit id="42df58d98bee56779115f35f9fed01ff008a3122" translate="yes" xml:space="preserve">
          <source>OAuth::Consumer</source>
          <target state="translated">OAuth::Consumer</target>
        </trans-unit>
        <trans-unit id="d8c2f74a1b2a904f9381739e52008f84204d8e78" translate="yes" xml:space="preserve">
          <source>OAuth::Error</source>
          <target state="translated">OAuth::Error</target>
        </trans-unit>
        <trans-unit id="19427514732b92b58ea66904254e0c98ad4ff4c0" translate="yes" xml:space="preserve">
          <source>OAuth::Error.new</source>
          <target state="translated">OAuth::Error.new</target>
        </trans-unit>
        <trans-unit id="5d4d04269c633aae6c0d3c0ae722ae6333c9cf38" translate="yes" xml:space="preserve">
          <source>OAuth::RequestToken</source>
          <target state="translated">OAuth::RequestToken</target>
        </trans-unit>
        <trans-unit id="02ce66c3b2f62920ab55a0e848d4ded3f5f982b7" translate="yes" xml:space="preserve">
          <source>OPTIMIZE</source>
          <target state="translated">OPTIMIZE</target>
        </trans-unit>
        <trans-unit id="85120bce76a23e361fb938c44bc73facc906afcd" translate="yes" xml:space="preserve">
          <source>ORMs</source>
          <target state="translated">ORMs</target>
        </trans-unit>
        <trans-unit id="2362f56467bd97d990f9074700b6cc2cd78cbf6a" translate="yes" xml:space="preserve">
          <source>OS-provided MIME database</source>
          <target state="translated">OS 제공 MIME 데이터베이스</target>
        </trans-unit>
        <trans-unit id="b7145cd2e6a6f69510145255e6426e2ea357ed17" translate="yes" xml:space="preserve">
          <source>OWASP Wiki</source>
          <target state="translated">OWASP 위키</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="3e6416c549089d793b355231b4a195dcb855eb09" translate="yes" xml:space="preserve">
          <source>Object Serialization</source>
          <target state="translated">객체 직렬화</target>
        </trans-unit>
        <trans-unit id="1284878f8bf01bfc8401e081705dc57ce6114d4b" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;class#==(other:Class):Bool-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="translated">객체는 단순히 &lt;code&gt;&lt;a href=&quot;class#==(other:Class):Bool-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; 를 호출하여 &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 을 구현 하지만 하위 클래스 (특히 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; )는 대소 문자를 구분하는 의미있는 의미를 제공하기 위해이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1c5f22e7b8abf9733dcde6e5d408d47868255fc" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="translated">객체는 단순히 &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; 를 호출하여 &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 을 구현 하지만 하위 클래스 (특히 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; )는 대소 문자를 구분하는 의미있는 의미를 제공하기 위해이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a61061e4f5862bcfdbbc32ae58d5f11a90fbd967" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;proc#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="translated">객체는 단순히 &lt;code&gt;&lt;a href=&quot;proc#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; 를 호출하여 &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 을 구현 하지만 하위 클래스 (특히 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; )는 대소 문자를 구분하는 의미있는 의미를 제공하기 위해이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="193b577043159d042d3de9c4e747abf9135e4ff6" translate="yes" xml:space="preserve">
          <source>Object#!</source>
          <target state="translated">Object#!</target>
        </trans-unit>
        <trans-unit id="0e2fc4dff1ddd2856e5f0f888b403d2af7439ceb" translate="yes" xml:space="preserve">
          <source>Object#!=</source>
          <target state="translated">Object#!=</target>
        </trans-unit>
        <trans-unit id="da2a8bc0318f32b28ed3b40604520148e0bb9647" translate="yes" xml:space="preserve">
          <source>Object#!~</source>
          <target state="translated">Object#!~</target>
        </trans-unit>
        <trans-unit id="bd71fd3b0efd874a002ef2028c1570bbcc5f03fb" translate="yes" xml:space="preserve">
          <source>Object#==</source>
          <target state="translated">Object#==</target>
        </trans-unit>
        <trans-unit id="ce3b211638137695592739e8e404f666e5eb6419" translate="yes" xml:space="preserve">
          <source>Object#===</source>
          <target state="translated">Object#===</target>
        </trans-unit>
        <trans-unit id="d10e6553e69983754bd8a406d3404923e8364e2c" translate="yes" xml:space="preserve">
          <source>Object#=~</source>
          <target state="translated">Object#=~</target>
        </trans-unit>
        <trans-unit id="ab5ec050f6f4b05feeffa4edb23bad9b7dd8cd4f" translate="yes" xml:space="preserve">
          <source>Object#as</source>
          <target state="translated">Object#as</target>
        </trans-unit>
        <trans-unit id="1adc58659eace0de92c1eaa6fffecc4ba48e1933" translate="yes" xml:space="preserve">
          <source>Object#as?</source>
          <target state="translated">Object#as?</target>
        </trans-unit>
        <trans-unit id="815b677fa448093d21a40e0c1831fd59446ac394" translate="yes" xml:space="preserve">
          <source>Object#back</source>
          <target state="translated">Object#back</target>
        </trans-unit>
        <trans-unit id="12371531b2e743d127f5036873e6a458c0a59881" translate="yes" xml:space="preserve">
          <source>Object#black</source>
          <target state="translated">Object#black</target>
        </trans-unit>
        <trans-unit id="04d583e724eaae4a6f0cfb9072547360769516f4" translate="yes" xml:space="preserve">
          <source>Object#blink</source>
          <target state="translated">Object#blink</target>
        </trans-unit>
        <trans-unit id="8aa0a265133fe978711a4b6792c8ad087981174c" translate="yes" xml:space="preserve">
          <source>Object#blue</source>
          <target state="translated">Object#blue</target>
        </trans-unit>
        <trans-unit id="3696ba5d67d62dbca4ef0ab80df13a196c7221ff" translate="yes" xml:space="preserve">
          <source>Object#bold</source>
          <target state="translated">Object#bold</target>
        </trans-unit>
        <trans-unit id="738e6333f5eb79daf19c71eb8f27d4b544fea448" translate="yes" xml:space="preserve">
          <source>Object#bright</source>
          <target state="translated">Object#bright</target>
        </trans-unit>
        <trans-unit id="f8393b08492037db43339ed83b2bc7e1eff2b480" translate="yes" xml:space="preserve">
          <source>Object#cyan</source>
          <target state="translated">Object#cyan</target>
        </trans-unit>
        <trans-unit id="b855b1cd88b148c6f3b4c7c75d5391a22811e1cd" translate="yes" xml:space="preserve">
          <source>Object#dark_gray</source>
          <target state="translated">Object#dark_gray</target>
        </trans-unit>
        <trans-unit id="99434b723ce585081cf56bd99035acd65277a848" translate="yes" xml:space="preserve">
          <source>Object#default</source>
          <target state="translated">Object#default</target>
        </trans-unit>
        <trans-unit id="8c302b808e470dac1910a9b1391382af8b4ea408" translate="yes" xml:space="preserve">
          <source>Object#dim</source>
          <target state="translated">Object#dim</target>
        </trans-unit>
        <trans-unit id="ca3d5115b04f32fe70b076388269578679d5e873" translate="yes" xml:space="preserve">
          <source>Object#dup</source>
          <target state="translated">Object#dup</target>
        </trans-unit>
        <trans-unit id="ac8ede2d121a1723b18ee301a2a3a831e9ff4e38" translate="yes" xml:space="preserve">
          <source>Object#fore</source>
          <target state="translated">Object#fore</target>
        </trans-unit>
        <trans-unit id="69e9cdef3784b5abb56f55e17af5112816092b2f" translate="yes" xml:space="preserve">
          <source>Object#green</source>
          <target state="translated">Object#green</target>
        </trans-unit>
        <trans-unit id="9be3d354e7bf75ee1c3961451ef6c8a778898fe2" translate="yes" xml:space="preserve">
          <source>Object#hash</source>
          <target state="translated">Object#hash</target>
        </trans-unit>
        <trans-unit id="dfa5378ae76ace37c4345abff5bd343d7d394c56" translate="yes" xml:space="preserve">
          <source>Object#hidden</source>
          <target state="translated">Object#hidden</target>
        </trans-unit>
        <trans-unit id="782f438afdfb9026987c9473bad03c906cfd0f60" translate="yes" xml:space="preserve">
          <source>Object#in?</source>
          <target state="translated">Object#in?</target>
        </trans-unit>
        <trans-unit id="6836f7bdb2cf6e2771db5195ffcb47332e18ef40" translate="yes" xml:space="preserve">
          <source>Object#inspect</source>
          <target state="translated">Object#inspect</target>
        </trans-unit>
        <trans-unit id="d268eef0372df6ada9fd764ce090cf95a09c9f14" translate="yes" xml:space="preserve">
          <source>Object#light_blue</source>
          <target state="translated">Object#light_blue</target>
        </trans-unit>
        <trans-unit id="79eac9e7727704da4d9e4a8c49d122d31d742e6f" translate="yes" xml:space="preserve">
          <source>Object#light_cyan</source>
          <target state="translated">Object#light_cyan</target>
        </trans-unit>
        <trans-unit id="df0e1ac82499ccfacf0052d81b5f9373228f2748" translate="yes" xml:space="preserve">
          <source>Object#light_gray</source>
          <target state="translated">Object#light_gray</target>
        </trans-unit>
        <trans-unit id="912b65837eec0cfd0f7065472026e4ae76641978" translate="yes" xml:space="preserve">
          <source>Object#light_green</source>
          <target state="translated">Object#light_green</target>
        </trans-unit>
        <trans-unit id="90aeddf804641684935f43b71b386639198e0627" translate="yes" xml:space="preserve">
          <source>Object#light_magenta</source>
          <target state="translated">Object#light_magenta</target>
        </trans-unit>
        <trans-unit id="34a725099ea3e1fdc043021e7d688c799174c8ea" translate="yes" xml:space="preserve">
          <source>Object#light_red</source>
          <target state="translated">Object#light_red</target>
        </trans-unit>
        <trans-unit id="f7568274f1a8a1e6d83e99fb1564c134d8106ebe" translate="yes" xml:space="preserve">
          <source>Object#light_yellow</source>
          <target state="translated">Object#light_yellow</target>
        </trans-unit>
        <trans-unit id="91dbdf3d433b07f16ee996b51230890fb7c579fd" translate="yes" xml:space="preserve">
          <source>Object#magenta</source>
          <target state="translated">Object#magenta</target>
        </trans-unit>
        <trans-unit id="1e32f5a9958efa767d67eb3d44e07c4b5c14dd9e" translate="yes" xml:space="preserve">
          <source>Object#mode</source>
          <target state="translated">Object#mode</target>
        </trans-unit>
        <trans-unit id="8ad1b97d5c997aaa611601453f6654a43670da04" translate="yes" xml:space="preserve">
          <source>Object#nil?</source>
          <target state="translated">Object#nil?</target>
        </trans-unit>
        <trans-unit id="d05da3aa73aabe3cae3903ff334563c47eb38582" translate="yes" xml:space="preserve">
          <source>Object#on</source>
          <target state="translated">Object#on</target>
        </trans-unit>
        <trans-unit id="fa10aee7c7093dc9b3839c1a8a7f03d550e22379" translate="yes" xml:space="preserve">
          <source>Object#on_black</source>
          <target state="translated">Object#on_black</target>
        </trans-unit>
        <trans-unit id="114412a531c138591ea41e8070331bc386740851" translate="yes" xml:space="preserve">
          <source>Object#on_blue</source>
          <target state="translated">Object#on_blue</target>
        </trans-unit>
        <trans-unit id="e43f78271c36daede734d3f5219b3fbdc710648b" translate="yes" xml:space="preserve">
          <source>Object#on_cyan</source>
          <target state="translated">Object#on_cyan</target>
        </trans-unit>
        <trans-unit id="691d812aa52f1f62ee0587713634a5a0e31a550c" translate="yes" xml:space="preserve">
          <source>Object#on_dark_gray</source>
          <target state="translated">Object#on_dark_gray</target>
        </trans-unit>
        <trans-unit id="f3fd440c90b07b181b2e5e5e9240b545cefe47f1" translate="yes" xml:space="preserve">
          <source>Object#on_default</source>
          <target state="translated">Object#on_default</target>
        </trans-unit>
        <trans-unit id="d3739f2b3237754dbe0117031dac84cfabe9d990" translate="yes" xml:space="preserve">
          <source>Object#on_green</source>
          <target state="translated">Object#on_green</target>
        </trans-unit>
        <trans-unit id="b62028d8719973ae1f9e3608204c3b83e067146f" translate="yes" xml:space="preserve">
          <source>Object#on_light_blue</source>
          <target state="translated">Object#on_light_blue</target>
        </trans-unit>
        <trans-unit id="48ba49aa8becdd81c206b5c6c971e9ad9768b5b1" translate="yes" xml:space="preserve">
          <source>Object#on_light_cyan</source>
          <target state="translated">Object#on_light_cyan</target>
        </trans-unit>
        <trans-unit id="b3973c3a89d28c6d38bdd74ab33eda6724921aa2" translate="yes" xml:space="preserve">
          <source>Object#on_light_gray</source>
          <target state="translated">Object#on_light_gray</target>
        </trans-unit>
        <trans-unit id="b54178855c30c5f0b092fc18ae57452a6fa9abb0" translate="yes" xml:space="preserve">
          <source>Object#on_light_green</source>
          <target state="translated">Object#on_light_green</target>
        </trans-unit>
        <trans-unit id="ce2cfe2ea16a18610f2feddc71b8136aca7a4c94" translate="yes" xml:space="preserve">
          <source>Object#on_light_magenta</source>
          <target state="translated">Object#on_light_magenta</target>
        </trans-unit>
        <trans-unit id="5aedad530e4e579337b779799c6c19d7cf07625e" translate="yes" xml:space="preserve">
          <source>Object#on_light_red</source>
          <target state="translated">Object#on_light_red</target>
        </trans-unit>
        <trans-unit id="4024434df078b4ef187704e0c6b531529013f3eb" translate="yes" xml:space="preserve">
          <source>Object#on_light_yellow</source>
          <target state="translated">Object#on_light_yellow</target>
        </trans-unit>
        <trans-unit id="273231c5496f16d085230481c96ecb3ee2ef107a" translate="yes" xml:space="preserve">
          <source>Object#on_magenta</source>
          <target state="translated">Object#on_magenta</target>
        </trans-unit>
        <trans-unit id="643e8b41aaa38a4c51816f6f40adf5e68d1e7a99" translate="yes" xml:space="preserve">
          <source>Object#on_red</source>
          <target state="translated">Object#on_red</target>
        </trans-unit>
        <trans-unit id="35779d9d57f0f0920456fd988acaf118bb70d9ee" translate="yes" xml:space="preserve">
          <source>Object#on_white</source>
          <target state="translated">Object#on_white</target>
        </trans-unit>
        <trans-unit id="339a8df54a7f1c471a64081a3483e0bbe4f9b63c" translate="yes" xml:space="preserve">
          <source>Object#on_yellow</source>
          <target state="translated">Object#on_yellow</target>
        </trans-unit>
        <trans-unit id="60cbd34591a2c1d706586c1561550c6d6fc2a5ff" translate="yes" xml:space="preserve">
          <source>Object#red</source>
          <target state="translated">Object#red</target>
        </trans-unit>
        <trans-unit id="08328dc2a98ea039f002184f326f8b6a7a389927" translate="yes" xml:space="preserve">
          <source>Object#reverse</source>
          <target state="translated">Object#reverse</target>
        </trans-unit>
        <trans-unit id="d919ca07916868899f77564daff1c66937ac1639" translate="yes" xml:space="preserve">
          <source>Object#surround</source>
          <target state="translated">Object#surround</target>
        </trans-unit>
        <trans-unit id="2207757d2c018269f15ac6851b7baadafbdf9e48" translate="yes" xml:space="preserve">
          <source>Object#tap</source>
          <target state="translated">Object#tap</target>
        </trans-unit>
        <trans-unit id="83481709340491ab07cd3ea47acf01adc87cbdff" translate="yes" xml:space="preserve">
          <source>Object#to_s</source>
          <target state="translated">Object#to_s</target>
        </trans-unit>
        <trans-unit id="4e6446e4b9b64d2e9af02ef4ab8c3849ec03b92c" translate="yes" xml:space="preserve">
          <source>Object#toggle</source>
          <target state="translated">Object#toggle</target>
        </trans-unit>
        <trans-unit id="4577f031b57b33b7448915bf92f1c64db21a412a" translate="yes" xml:space="preserve">
          <source>Object#try</source>
          <target state="translated">Object#try</target>
        </trans-unit>
        <trans-unit id="a690f333bed9c3963c99291d2128cd1167355f56" translate="yes" xml:space="preserve">
          <source>Object#underline</source>
          <target state="translated">Object#underline</target>
        </trans-unit>
        <trans-unit id="495bbd74a9874872dd7923dc1625525cb78d6deb" translate="yes" xml:space="preserve">
          <source>Object#white</source>
          <target state="translated">Object#white</target>
        </trans-unit>
        <trans-unit id="ecbb2a04d71606bdd2385b4da0c58c96f0da7200" translate="yes" xml:space="preserve">
          <source>Object#yellow</source>
          <target state="translated">Object#yellow</target>
        </trans-unit>
        <trans-unit id="34e12e5e97bedfe766ad6da61d503406db94c052" translate="yes" xml:space="preserve">
          <source>Object.new</source>
          <target state="translated">Object.new</target>
        </trans-unit>
        <trans-unit id="42ea48c0de1b182cde7e4f3b01d99fd977f5e056" translate="yes" xml:space="preserve">
          <source>ObjectExtensions</source>
          <target state="translated">ObjectExtensions</target>
        </trans-unit>
        <trans-unit id="a4f517225e4aa630a3698e0adb15307d109a6dba" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#colorize</source>
          <target state="translated">ObjectExtensions#colorize</target>
        </trans-unit>
        <trans-unit id="eaaf4c82c3dee8bd13e7afa68f65287ba1307b15" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#should</source>
          <target state="translated">ObjectExtensions#should</target>
        </trans-unit>
        <trans-unit id="ad513c02223d0b3b8ce2735f28bd38a20c5da821" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#should_not</source>
          <target state="translated">ObjectExtensions#should_not</target>
        </trans-unit>
        <trans-unit id="32c5a06936a38dfb7fadd22e92f8fd1eec9a0bba" translate="yes" xml:space="preserve">
          <source>Objects of class &lt;code&gt;&lt;a href=&quot;dir&quot;&gt;Dir&lt;/a&gt;&lt;/code&gt; are directory streams representing directories in the underlying file system. They provide a variety of ways to list directories and their contents.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir&quot;&gt;Dir&lt;/a&gt;&lt;/code&gt; 클래스의 객체는 기본 파일 시스템의 디렉토리를 나타내는 디렉토리 스트림입니다. 디렉토리와 내용을 나열하는 다양한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="03e4567313f1db64db2f5fa5bd31c7415bf98b31" translate="yes" xml:space="preserve">
          <source>Obtaining access tokens</source>
          <target state="translated">액세스 토큰 얻기</target>
        </trans-unit>
        <trans-unit id="8af453669fedbc26e57b0af23661518a1dc40120" translate="yes" xml:space="preserve">
          <source>Obtains a request token, also known as &quot;temporary credentials&quot;, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.1&quot;&gt;RFC 5849, Section 2.1&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.1&quot;&gt;RFC 5849 섹션 2.1에&lt;/a&gt; 지정된 &quot;임시 자격 증명&quot;이라고도하는 요청 토큰을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3538fe55b76ef32c585990ea848f331638b40337" translate="yes" xml:space="preserve">
          <source>Octal number conversion</source>
          <target state="translated">8 진수 변환</target>
        </trans-unit>
        <trans-unit id="d3b36c02f078a20a50c3fbe9dd7d57c6f6363a87" translate="yes" xml:space="preserve">
          <source>Octal number conversion:</source>
          <target state="translated">8 진수 변환 :</target>
        </trans-unit>
        <trans-unit id="eac09a049cd870c7a9142a2b16b0e51280aef13f" translate="yes" xml:space="preserve">
          <source>Octal numbers start with &lt;code&gt;0o&lt;/code&gt;:</source>
          <target state="translated">8 진수는 &lt;code&gt;0o&lt;/code&gt; 로 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="42f51ee53c0e463dac0a244e33f4c671f46f1ffb" translate="yes" xml:space="preserve">
          <source>Octal numbers start with a &lt;code&gt;0o&lt;/code&gt;:</source>
          <target state="translated">8 진수는 &lt;code&gt;0o&lt;/code&gt; 로 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="f3f4983b08e439191dc9ccfe532b5d02415f4180" translate="yes" xml:space="preserve">
          <source>Of course the above program can be written without &lt;code&gt;spawn&lt;/code&gt; at all, just with a loop. &lt;code&gt;sleep&lt;/code&gt; is more useful when spawning more than one fiber.</source>
          <target state="translated">물론 위의 프로그램은 루프 없이 &lt;code&gt;spawn&lt;/code&gt; 될 수 있습니다 . &lt;code&gt;sleep&lt;/code&gt; 은 하나 이상의 섬유를 생성 할 때 더 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b08554eb78995a127ae891fcdb418b7a733af3e9" translate="yes" xml:space="preserve">
          <source>Of course, reassigning a variable inside the &lt;code&gt;then&lt;/code&gt; branch makes that variable have a new type based on the expression assigned.</source>
          <target state="translated">물론 &lt;code&gt;then&lt;/code&gt; 분기 내부에 변수를 다시 할당하면 지정된 표현식에 따라 해당 변수에 새로운 유형이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="3f80ea00ca969abbe7141b32ca301328d0eef806" translate="yes" xml:space="preserve">
          <source>Official docs</source>
          <target state="translated">공식 문서</target>
        </trans-unit>
        <trans-unit id="aab171aaab6ee5b748dedb22b090c25a14e9b1b8" translate="yes" xml:space="preserve">
          <source>Oh no! It&amp;rsquo;s broken: we need to handle &lt;strong&gt;invalid options&lt;/strong&gt; and &lt;strong&gt;invalid parameters&lt;/strong&gt; given to an option! For these two situations, the &lt;code&gt;OptionParser&lt;/code&gt; class has two methods: &lt;code&gt;#invalid_option&lt;/code&gt; and &lt;code&gt;#missing_option&lt;/code&gt;</source>
          <target state="translated">오 안돼! 깨졌습니다. &lt;strong&gt;옵션에&lt;/strong&gt; 주어진 &lt;strong&gt;잘못된 옵션&lt;/strong&gt; 과 &lt;strong&gt;잘못된 매개 변수&lt;/strong&gt; 를 처리해야합니다 ! 이 두 상황의 경우 &lt;code&gt;OptionParser&lt;/code&gt; 클래스에는 &lt;code&gt;#invalid_option&lt;/code&gt; 및 &lt;code&gt;#missing_option&lt;/code&gt; 의 두 가지 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c69ed231fb7bf12ecdbb84ece8ce72f0abdd376" translate="yes" xml:space="preserve">
          <source>Oh, and we don't want to write C code to make the code run faster.</source>
          <target state="translated">아, 그리고 우리는 코드가 더 빨리 실행되도록 C 코드를 작성하고 싶지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4c352d33fad8d74f5346c27d2c8f1edd40df286" translate="yes" xml:space="preserve">
          <source>Ok, now we have a connection, let's use it!</source>
          <target state="translated">좋아, 이제 연결이 되었으니 사용하자!</target>
        </trans-unit>
        <trans-unit id="3846ca003c15a5f1a3ea8e78c25c81e9c85dcdb9" translate="yes" xml:space="preserve">
          <source>On Alpine Linux</source>
          <target state="translated">알파인 리눅스</target>
        </trans-unit>
        <trans-unit id="67f3a2244d460ae7e73229adb39482643dafdc7f" translate="yes" xml:space="preserve">
          <source>On Arch Linux</source>
          <target state="translated">아치 리눅스에서</target>
        </trans-unit>
        <trans-unit id="347e95569b23599af2a6e8ec054e97396aa46765" translate="yes" xml:space="preserve">
          <source>On Bash on Ubuntu on Windows</source>
          <target state="translated">Windows의 Ubuntu에서 Bash</target>
        </trans-unit>
        <trans-unit id="53e251c2b48b87ae2bbd586bb6db76a24a8bda8e" translate="yes" xml:space="preserve">
          <source>On Debian and Ubuntu</source>
          <target state="translated">데비안과 우분투에서</target>
        </trans-unit>
        <trans-unit id="683b9ec518c1bacfd6b825a0ecc3f1cb237cf0d0" translate="yes" xml:space="preserve">
          <source>On FreeBSD</source>
          <target state="translated">FreeBSD에서</target>
        </trans-unit>
        <trans-unit id="69825a52c5fa47fd0895c6e2df043bc173a66456" translate="yes" xml:space="preserve">
          <source>On Gentoo Linux</source>
          <target state="translated">젠투 리눅스에서</target>
        </trans-unit>
        <trans-unit id="76281cbfcb0d0c7edffdde40919bc77452ad5359" translate="yes" xml:space="preserve">
          <source>On Linux using Linuxbrew</source>
          <target state="translated">Linuxbrew를 사용하는 Linux에서</target>
        </trans-unit>
        <trans-unit id="932a1eaa0755a6f41cd927e8ef1e7c4b32cbe3d9" translate="yes" xml:space="preserve">
          <source>On Linux using Snap</source>
          <target state="translated">Snap을 사용하는 Linux에서</target>
        </trans-unit>
        <trans-unit id="f0f5a3cdfba1ca0f981780082d406f4e44ff6ef8" translate="yes" xml:space="preserve">
          <source>On OpenBSD, it uses &lt;a href=&quot;https://man.openbsd.org/arc4random&quot;&gt;&lt;code&gt;arc4random&lt;/code&gt;&lt;/a&gt;, on Linux &lt;a href=&quot;http://man7.org/linux/man-pages/man2/getrandom.2.html&quot;&gt;&lt;code&gt;getrandom&lt;/code&gt;&lt;/a&gt; (if the kernel supports it), on Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom&quot;&gt;&lt;code&gt;RtlGenRandom&lt;/code&gt;&lt;/a&gt;, and falls back to reading from &lt;code&gt;/dev/urandom&lt;/code&gt; on UNIX systems.</source>
          <target state="translated">OpenBSD에서는 &lt;a href=&quot;https://man.openbsd.org/arc4random&quot;&gt; &lt;code&gt;arc4random&lt;/code&gt; &lt;/a&gt; , Linux에서는 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/getrandom.2.html&quot;&gt; &lt;code&gt;getrandom&lt;/code&gt; &lt;/a&gt; (커널이 지원하는 경우), Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom&quot;&gt; &lt;code&gt;RtlGenRandom&lt;/code&gt; &lt;/a&gt; 에서는 사용하고 UNIX 시스템에서는 &lt;code&gt;/dev/urandom&lt;/code&gt; 에서 읽기로 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="cac6f4f51ac9ee222e7c3df0f1a43363b1076d1a" translate="yes" xml:space="preserve">
          <source>On OpenSUSE</source>
          <target state="translated">OpenSUSE에서</target>
        </trans-unit>
        <trans-unit id="9a24ee8d9c4b67b41479963b14ee6c87bb879596" translate="yes" xml:space="preserve">
          <source>On OpenSUSE Linux</source>
          <target state="translated">OpenSUSE Linux에서</target>
        </trans-unit>
        <trans-unit id="f278e377a6d94e4211c0da1de0dc0677db0154f5" translate="yes" xml:space="preserve">
          <source>On OpenSUSE, Crystal can be installed from the official rpm package using Zypper.</source>
          <target state="translated">OpenSUSE에서 Crystal은 Zypper를 사용하여 공식 rpm 패키지에서 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f52ffb0e28b31dc900188936e9b95b10abfdabe" translate="yes" xml:space="preserve">
          <source>On POSIX this uses &lt;code&gt;/bin/sh&lt;/code&gt; to process the command string. &lt;em&gt;args&lt;/em&gt; are also passed to the shell, and you need to include the string &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; in the &lt;em&gt;command&lt;/em&gt; to safely insert them there.</source>
          <target state="translated">POSIX에서는 &lt;code&gt;/bin/sh&lt;/code&gt; 를 사용 하여 명령 문자열을 처리합니다. &lt;em&gt;인수&lt;/em&gt; 도 셸로 전달되며, &lt;em&gt;인수&lt;/em&gt; 를 안전하게 삽입 하려면 &lt;em&gt;명령&lt;/em&gt; 에 &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; 문자열을 포함해야합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3086bd1f602303f1997dc2612ec0f85c2d634e39" translate="yes" xml:space="preserve">
          <source>On RedHat and CentOS</source>
          <target state="translated">RedHat 및 CentOS에서</target>
        </trans-unit>
        <trans-unit id="7343eeb06b68d7f228dad819eb7f23082bc25d1e" translate="yes" xml:space="preserve">
          <source>On Windows this is implemented by passing the string as-is to the process, and passing &lt;em&gt;args&lt;/em&gt; is not supported.</source>
          <target state="translated">Windows에서는 문자열을있는 그대로 프로세스에 전달하여 구현되며 &lt;em&gt;인수&lt;/em&gt; 전달 은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f6c1d95eb3b0ab706f0d6b27d5589e558154d6d6" translate="yes" xml:space="preserve">
          <source>On a 64-bit machine it lets us spawn millions and millions of fibers. In a 32-bit machine we can only spawn 512 fibers, which is not a lot. But because 32-bit machines are starting to become obsolete, we'll bet on the future and focus more on 64-bit machines.</source>
          <target state="translated">64 비트 컴퓨터에서는 수백만 및 수백만 개의 광섬유를 생성 할 수 있습니다. 32 비트 머신에서는 512 파이버 만 스폰 할 수 있습니다. 그러나 32 비트 시스템은 더 이상 사용되지 않기 때문에 미래에 내기를 걸고 64 비트 시스템에 더 집중할 것입니다.</target>
        </trans-unit>
        <trans-unit id="2a77b35f1a1d07d9a162b9cd39dd59b8595d0b05" translate="yes" xml:space="preserve">
          <source>On a POSIX system, the following files are tried to be read in sequential order, stopping at the first existing file. These values override those from &lt;code&gt;&lt;a href=&quot;mime#DEFAULT_TYPES&quot;&gt;DEFAULT_TYPES&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">POSIX 시스템에서 다음 파일은 순차적으로 읽히고 첫 번째 기존 파일에서 중지됩니다. 이 값은 &lt;code&gt;&lt;a href=&quot;mime#DEFAULT_TYPES&quot;&gt;DEFAULT_TYPES&lt;/a&gt;&lt;/code&gt; 의 값보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="eb9fe6389579b5c95b14793b61952727c2295441" translate="yes" xml:space="preserve">
          <source>On macOS using Homebrew</source>
          <target state="translated">Homebrew를 사용하는 macOS에서</target>
        </trans-unit>
        <trans-unit id="b784cab36915ec853a14ce24e12a80cb8adf43a1" translate="yes" xml:space="preserve">
          <source>On the other hand, we have &lt;code&gt;NCurses&lt;/code&gt;(New Curses). This library allows developers to create &lt;em&gt;graphical&lt;/em&gt; user interfaces in the terminal. As its name implies, it is an improved version of the library named &lt;code&gt;Curses&lt;/code&gt;, which was developed to support a text-based dungeon-crawling adventure game called Rogue! As you can imagine, there are already &lt;a href=&quot;https://crystalshards.org/?filter=ncurses&quot;&gt;a couple of shards&lt;/a&gt; in the ecosystem that will allow us to use &lt;code&gt;NCurses&lt;/code&gt; in Crystal!</source>
          <target state="translated">반면에 &lt;code&gt;NCurses&lt;/code&gt; (New Curses)가 있습니다. 이 라이브러리를 통해 개발자 는 터미널에서 &lt;em&gt;그래픽&lt;/em&gt; 사용자 인터페이스 를 만들 수 있습니다 . 이름에서 알 수 있듯이이 라이브러리 는 Rogue!라는 텍스트 기반 던전 크롤링 어드벤처 게임을 지원하기 위해 개발 된 &lt;code&gt;Curses&lt;/code&gt; 라는 라이브러리의 개선 된 버전입니다 . 상상할 수 있듯이, 우리가 Crystal에서 &lt;code&gt;NCurses&lt;/code&gt; 를 사용할 수있게 해줄 생태계 에는 이미 &lt;a href=&quot;https://crystalshards.org/?filter=ncurses&quot;&gt;몇 개의 샤드&lt;/a&gt; 가 있습니다 !</target>
        </trans-unit>
        <trans-unit id="71850c74e889fedbfbd17964d5cc6971040bfcf9" translate="yes" xml:space="preserve">
          <source>On unix, this compares device and inode fields, and will compare equal for hard linked files.</source>
          <target state="translated">유닉스에서는 디바이스와 아이 노드 필드를 비교하고 하드 링크 된 파일과 동일하게 비교합니다.</target>
        </trans-unit>
        <trans-unit id="8bde715d72a38d70075a8f69f598f9819061e517" translate="yes" xml:space="preserve">
          <source>On windows, only the &lt;code&gt;&lt;a href=&quot;permissions#OwnerWrite&quot;&gt;OwnerWrite&lt;/a&gt;&lt;/code&gt; bit is effective. All file permissions will either be &lt;code&gt;0o444&lt;/code&gt; for read-only files or &lt;code&gt;0o666&lt;/code&gt; for read-write files. Directories are always mode &lt;code&gt;0o555&lt;/code&gt; for read-only or &lt;code&gt;0o777&lt;/code&gt;.</source>
          <target state="translated">Windows에서는 &lt;code&gt;&lt;a href=&quot;permissions#OwnerWrite&quot;&gt;OwnerWrite&lt;/a&gt;&lt;/code&gt; 비트 만 유효합니다. 모든 파일 권한 중 하나가 될 것입니다 &lt;code&gt;0o444&lt;/code&gt; 읽기 전용 파일 또는 &lt;code&gt;0o666&lt;/code&gt; 읽기 - 쓰기 파일. 디렉토리는 항상 읽기 전용 또는 &lt;code&gt;0o777&lt;/code&gt; 의 경우 &lt;code&gt;0o555&lt;/code&gt; 모드 입니다.</target>
        </trans-unit>
        <trans-unit id="95d654586025b04ee03652c1686c4747992c57ca" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;../installation&quot;&gt;installed&lt;/a&gt;, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="translated">일단 &lt;a href=&quot;../installation&quot;&gt;설치&lt;/a&gt; 되면 Crystal 컴파일러를 &lt;code&gt;crystal&lt;/code&gt; 명령 으로 사용할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="65d57cf3b43133bc6526d879d0556d5e78254b2c" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;https://crystal-lang.org/installation&quot;&gt;installed&lt;/a&gt;, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="translated">일단 &lt;a href=&quot;https://crystal-lang.org/installation&quot;&gt;설치&lt;/a&gt; 되면 Crystal 컴파일러를 &lt;code&gt;crystal&lt;/code&gt; 명령 으로 사용할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="94c77e2ea9d57a683105a1606ab74505e5151c57" translate="yes" xml:space="preserve">
          <source>Once a file is required, the compiler remembers its absolute path and later &lt;code&gt;require&lt;/code&gt;s of that same file will be ignored.</source>
          <target state="translated">파일이 필요하면, 컴파일러는 절대 경로를 기억하고 나중에 &lt;code&gt;require&lt;/code&gt; 같은 파일의이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5ac7785d84ce94eb130ac2e079af8883845b3640" translate="yes" xml:space="preserve">
          <source>Once installed, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="translated">일단 설치되면 Crystal 컴파일러를 &lt;code&gt;crystal&lt;/code&gt; 명령 으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7abff25d36cd948d938a45849882233ebe3278b" translate="yes" xml:space="preserve">
          <source>Once macros generate code, they are parsed with a regular Crystal parser where local variables in the context of the macro invocations are assumed to be defined.</source>
          <target state="translated">매크로가 코드를 생성하면 매크로 호출 컨텍스트에서 로컬 변수가 정의 된 것으로 간주되는 일반 Crystal 파서로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="d1993dc71a2508a1462d76f72a0d86ba2f67b1c2" translate="yes" xml:space="preserve">
          <source>Once positioned in a row, values can be obtained with the several &lt;code&gt;&lt;a href=&quot;csv#%5B%5D(header:String):String-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; methods, which can accept a header name, column position, or header name pattern as a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">행에 일단 배치되면 헤더 이름, 열 위치 또는 헤더 이름 패턴을 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 로 받아 들일 수 있는 여러 &lt;code&gt;&lt;a href=&quot;csv#%5B%5D(header:String):String-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 값을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2cb95abf1e0a1caefcb273fcf6c0f91e64416e8" translate="yes" xml:space="preserve">
          <source>Once the repository is configured you're ready to install Crystal:</source>
          <target state="translated">리포지토리가 구성되면 Crystal을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd842158fe230c8f49fd1e472caaffbd5a141f3e" translate="yes" xml:space="preserve">
          <source>Once the repository is configured, Crystal can be installed:</source>
          <target state="translated">리포지토리가 구성되면 Crystal을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f85c03ff148aa498c4d512549a367691a3cc842e" translate="yes" xml:space="preserve">
          <source>Once you bind it, the function is available inside the &lt;code&gt;C&lt;/code&gt; type as if it was a class method:</source>
          <target state="translated">바인딩하면 &lt;code&gt;C&lt;/code&gt; 메서드 내에서 클래스 메서드처럼 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a88c3869284ffd627f3551ba851efdd2ccaa951" translate="yes" xml:space="preserve">
          <source>Once you install the compiler using one of the following methods, make sure to read &lt;a href=&quot;../using_the_compiler/index&quot;&gt;Using the compiler&lt;/a&gt; to learn how to efficiently use it.</source>
          <target state="translated">다음 방법 중 하나를 사용하여 컴파일러를 설치하면 읽을 수 있는지 확인 &lt;a href=&quot;../using_the_compiler/index&quot;&gt;컴파일러를 사용하여&lt;/a&gt; 효율적으로 사용하는 방법을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a8bdb058ffa1a405649150f5dc2e0ef4885da6" translate="yes" xml:space="preserve">
          <source>Once you install the compiler using one of the following methods, make sure to read &lt;a href=&quot;https://crystal-lang.org/using_the_compiler/&quot;&gt;Using the compiler&lt;/a&gt; to learn how to efficiently use it.</source>
          <target state="translated">다음 방법 중 하나를 사용하여 컴파일러를 설치하면 읽을 수 있는지 확인 &lt;a href=&quot;https://crystal-lang.org/using_the_compiler/&quot;&gt;컴파일러를 사용하여&lt;/a&gt; 효율적으로 사용하는 방법을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="443f3bf1a871809d903652740589c757f6269fe2" translate="yes" xml:space="preserve">
          <source>Once you're up and running, and the build is passing, the build badge will update in your README.</source>
          <target state="translated">설치 및 실행이 완료되고 빌드가 진행되면 README에서 빌드 배지가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="fd54f6f2e3f2b13597a00d0aaf6d2b5746018d40" translate="yes" xml:space="preserve">
          <source>Once your documentation is ready and available, add this documentation badge below the description in your README.md so users know that it exists. (Be sure to replace &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">문서가 준비되고 사용 가능 해지면 README.md의 설명 아래에이 문서 배지를 추가하여 사용자가 문서의 존재를 알 수 있도록하십시오. ( &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; 을 적절히 교체 하십시오 )</target>
        </trans-unit>
        <trans-unit id="db5e5ae7fe051c5f32636aee1a7a61bbe4dd8770" translate="yes" xml:space="preserve">
          <source>Once your documentation is ready and available, you can add a documentation badge to your repository so users know that it exists. In GitLab this badge belongs to the project so we'll cover it in the GitLab instructions below, for GitHub it is common to place it below the description in your README.md like so: (Be sure to replace &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">문서가 준비되고 사용 가능하면 사용자가 문서가 있음을 알 수 있도록 저장소에 문서 배지를 추가 할 수 있습니다. GitLab에서이 배지는 프로젝트에 속하므로 아래 GitLab 지침에서 다루겠습니다. GitHub의 경우 README.md의 설명 아래에 다음과 같이 배치하는 것이 일반적입니다. ( &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; 를 교체해야합니다 . -문서&amp;gt; 그에 따라)</target>
        </trans-unit>
        <trans-unit id="cfde5b2b26cf2f3741b4c99bebb53f1b2141add6" translate="yes" xml:space="preserve">
          <source>One can also create strings with specific byte value in them by using octal and hexadecimal escape sequences:</source>
          <target state="translated">8 진수 및 16 진수 이스케이프 시퀀스를 사용하여 특정 바이트 값을 가진 문자열을 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f1bec126e1bd25efa7273e76abc856ea7b4a80f" translate="yes" xml:space="preserve">
          <source>One can assign any meaning to the operators, but it is advisable to stay within similar semantics to the generic operator meaning to avoid cryptic code that is confusing and behaves unexpectedly.</source>
          <target state="translated">연산자에 어떤 의미도 할당 할 수 있지만, 혼란스럽고 예기치 않게 동작하는 암호 코드를 피하기 위해 일반 연산자 의미와 유사한 의미를 유지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c9f24a94ef6219d1fd7571b6118b65e59e01d85e" translate="yes" xml:space="preserve">
          <source>One can assign any meaning to the operators, but the convention is to follow the above ones to avoid cryptic code, or code that behaves in an unexpected way.</source>
          <target state="translated">연산자에 의미를 부여 할 수 있지만, 규칙은 암호 코드 또는 예기치 않은 방식으로 동작하는 코드를 피하기 위해 위의 코드를 따르는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f57b2379eb4fad27c1b88660f5a8d29c49972eed" translate="yes" xml:space="preserve">
          <source>One curly brace can contain multiple unicode characters each separated by a whitespace.</source>
          <target state="translated">하나의 중괄호에는 공백으로 구분 된 여러 개의 유니 코드 문자가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4211d9850c8af3d4426acdf674731ad3f9d754b" translate="yes" xml:space="preserve">
          <source>One of the best optimizations you can do in a program is avoiding extra/useless memory allocation. A memory allocation happens when you create an instance of a &lt;strong&gt;class&lt;/strong&gt;, which ends up allocating heap memory. Creating an instance of a &lt;strong&gt;struct&lt;/strong&gt; uses stack memory and doesn't incur a performance penalty. If you don't know the difference between stack and heap memory, be sure to &lt;a href=&quot;https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap&quot;&gt;read this&lt;/a&gt;.</source>
          <target state="translated">프로그램에서 수행 할 수있는 최상의 최적화 중 하나는 추가 / 무용 한 메모리 할당을 피하는 것입니다. 메모리 할당은 &lt;strong&gt;클래스&lt;/strong&gt; 의 인스턴스를 만들 때 발생하며 , 이로 인해 힙 메모리가 할당됩니다. &lt;strong&gt;구조체&lt;/strong&gt; 의 인스턴스를 만들면 스택 메모리가 사용되며 성능 저하가 발생하지 않습니다. 스택과 힙 메모리의 차이점을 모르는 &lt;a href=&quot;https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap&quot;&gt;경우이 내용&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="3ad6532910834aaeecbf629ea94ad3368d71e544" translate="yes" xml:space="preserve">
          <source>One of the methods implemented in this module is &lt;code&gt;DB#connect&lt;/code&gt;. Using this method is the &lt;strong&gt;first way&lt;/strong&gt; for creating a connection. Let's see how to use it.</source>
          <target state="translated">이 모듈에서 구현 된 메소드 중 하나는 &lt;code&gt;DB#connect&lt;/code&gt; 입니다. 이 방법을 사용 하는 것이 연결을 만드는 &lt;strong&gt;첫 번째 방법&lt;/strong&gt; 입니다. 그것을 사용하는 방법을 봅시다.</target>
        </trans-unit>
        <trans-unit id="a6b7502cd677f4a309b14d08e7eb7b580cc9c86a" translate="yes" xml:space="preserve">
          <source>One place inheritance can get a little tricky is with arrays. We have to be careful when declaring an array of objects where inheritance is used. For example, consider the following</source>
          <target state="translated">상속이 조금 까다로울 수있는 곳은 배열입니다. 상속이 사용되는 객체 배열을 선언 할 때는주의해야합니다. 예를 들어, 다음을 고려하십시오</target>
        </trans-unit>
        <trans-unit id="f81f80fee140429bd28804d8f52b636cdcffed34" translate="yes" xml:space="preserve">
          <source>One place this might trip you up is when automatic casting comes into play. For example, the following won't work:</source>
          <target state="translated">이 문제가 발생할 수있는 한 곳은 자동 주조가 시작될 때입니다. 예를 들어 다음은 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f280a161ef738766dda3d8b228e872a24a18df3" translate="yes" xml:space="preserve">
          <source>One way to solve it is to do a &lt;code&gt;sleep&lt;/code&gt;:</source>
          <target state="translated">그것을 해결하는 한 가지 방법은 &lt;code&gt;sleep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63942ba63f83588f8ac5019911a1fb270e41f0c5" translate="yes" xml:space="preserve">
          <source>One-shot usage</source>
          <target state="translated">원샷 사용법</target>
        </trans-unit>
        <trans-unit id="e93824c8b8bc3d3dd9f36c17922cc9f035f9405e" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;Exception&lt;/code&gt; instances or subclasses can be raised.</source>
          <target state="translated">&lt;code&gt;Exception&lt;/code&gt; 인스턴스 또는 서브 클래스 만 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="038563582bca4194737ab19fac07bdd784e40f89" translate="yes" xml:space="preserve">
          <source>Only available on UNIX and UNIX-like operating systems.</source>
          <target state="translated">UNIX 및 UNIX 유사 운영 체제에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8e76a4d589aa79313e68736c99d020baecc1be77" translate="yes" xml:space="preserve">
          <source>Only collections of numbers (objects that can be added via an &lt;code&gt;+&lt;/code&gt; method) are supported.</source>
          <target state="translated">숫자 모음 ( &lt;code&gt;+&lt;/code&gt; 방법을 통해 추가 할 수있는 개체 ) 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="598f2d99db84620f99e2263f089ec39cc9af1b1d" translate="yes" xml:space="preserve">
          <source>Only collections of numbers (objects that can be multiplied via a &lt;code&gt;*&lt;/code&gt; method) are supported.</source>
          <target state="translated">숫자 모음 ( &lt;code&gt;*&lt;/code&gt; 메서드 를 통해 곱할 수있는 개체 ) 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="54b85a2f5fded7aeafa3425b9eda52e6f13a9ea4" translate="yes" xml:space="preserve">
          <source>Only integer types are allowed as the underlying type.</source>
          <target state="translated">기본 유형으로 정수 유형 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c2c2a7fdc519cedaff3c0680d65bc1eb94133d18" translate="yes" xml:space="preserve">
          <source>Only primitive integer types, reference types or nilable reference types can be used with an Atomic type.</source>
          <target state="translated">원자 유형에는 기본 정수 유형, 참조 유형 또는 Nullable 참조 유형 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d1581aa9392ab7e5c23436135ae4ef0d2266b19" translate="yes" xml:space="preserve">
          <source>Only transform ASCII characters.</source>
          <target state="translated">ASCII 문자 만 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="d890514bcd8588b08f0f7bf7e26d060997b86f5b" translate="yes" xml:space="preserve">
          <source>Only works for primitive integers and floats (&lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt;, etc.)</source>
          <target state="translated">기본 정수 및 부동 소수점 ( &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; 등) 에서만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7051b80d22d655edbef7d6f97802bad6b9a981a2" translate="yes" xml:space="preserve">
          <source>Open database</source>
          <target state="translated">데이터베이스 열기</target>
        </trans-unit>
        <trans-unit id="ed7003a34fd1abbae7d2b35e80a0769db2b14709" translate="yes" xml:space="preserve">
          <source>OpenSSL</source>
          <target state="translated">OpenSSL</target>
        </trans-unit>
        <trans-unit id="35b366a2a3d0445fcc6195c7e8bf9aa2ec87d29a" translate="yes" xml:space="preserve">
          <source>OpenSSL 0.9.8</source>
          <target state="translated">OpenSSL 0.9.8</target>
        </trans-unit>
        <trans-unit id="b1948a8835e811d7bb8fe3dc8f03cdae689640cb" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.0.1</source>
          <target state="translated">OpenSSL 1.0.1</target>
        </trans-unit>
        <trans-unit id="d3c6ce40f6dd891b1898209548f158bde2dc23bc" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.1</source>
          <target state="translated">OpenSSL 1.1.1</target>
        </trans-unit>
        <trans-unit id="2ab0eab8e9a3414ae8cc24df9c72655ea9e031a7" translate="yes" xml:space="preserve">
          <source>OpenSSL Integration</source>
          <target state="translated">OpenSSL 통합</target>
        </trans-unit>
        <trans-unit id="9ffa3f50427585d801248b6026c59192f0be1ce6" translate="yes" xml:space="preserve">
          <source>OpenSSL::Cipher</source>
          <target state="translated">OpenSSL::Cipher</target>
        </trans-unit>
        <trans-unit id="71da789dfdc7daa2e1675b661f8ca076a9ac8ca1" translate="yes" xml:space="preserve">
          <source>OpenSSL::Cipher::Error</source>
          <target state="translated">OpenSSL::Cipher::Error</target>
        </trans-unit>
        <trans-unit id="0cb4fc3c82441102040f411cdcb0b981436e64fe" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest</source>
          <target state="translated">OpenSSL::Digest</target>
        </trans-unit>
        <trans-unit id="a2421f62739bf9762808971ba462377d3e76d431" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest::Error</source>
          <target state="translated">OpenSSL::Digest::Error</target>
        </trans-unit>
        <trans-unit id="6bb274633e50faaa8400d6736ed1f72ca8fc0a97" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest::UnsupportedError</source>
          <target state="translated">OpenSSL::Digest::UnsupportedError</target>
        </trans-unit>
        <trans-unit id="b74b8a050f17b3e603f6ad1925e752f42f067d6a" translate="yes" xml:space="preserve">
          <source>OpenSSL::DigestBase</source>
          <target state="translated">OpenSSL::DigestBase</target>
        </trans-unit>
        <trans-unit id="7ceb01a2bdbf24ca0d833a18d598753601012942" translate="yes" xml:space="preserve">
          <source>OpenSSL::DigestIO</source>
          <target state="translated">OpenSSL::DigestIO</target>
        </trans-unit>
        <trans-unit id="50762946efe359f8272a6ed5931a8e504734d29c" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error</source>
          <target state="translated">OpenSSL::Error</target>
        </trans-unit>
        <trans-unit id="72f3924f8d108e64cbd7b5e07610a5b2f516382d" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error#code</source>
          <target state="translated">OpenSSL::Error#code</target>
        </trans-unit>
        <trans-unit id="9ccd0da6539bfb2081cb7f141d4a76baff4a3f4b" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error#code?</source>
          <target state="translated">OpenSSL::Error#code?</target>
        </trans-unit>
        <trans-unit id="d4da5c9b02011196ad8f1f28a397406b7616b94d" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error.new</source>
          <target state="translated">OpenSSL::Error.new</target>
        </trans-unit>
        <trans-unit id="373ec72cffa1cd896dec0e5f2bf736f258deb21e" translate="yes" xml:space="preserve">
          <source>OpenSSL::HMAC</source>
          <target state="translated">OpenSSL::HMAC</target>
        </trans-unit>
        <trans-unit id="df94a3a5229cdd070a2e0f2c047dd31e6ddf47ac" translate="yes" xml:space="preserve">
          <source>OpenSSL::MD5</source>
          <target state="translated">OpenSSL::MD5</target>
        </trans-unit>
        <trans-unit id="86875d14d1e01f3c7f1c9603d0f35b14ae6f8dc0" translate="yes" xml:space="preserve">
          <source>OpenSSL::PKCS5</source>
          <target state="translated">OpenSSL::PKCS5</target>
        </trans-unit>
        <trans-unit id="896ea59ba0d9c12c973db4b96634d337d414d940" translate="yes" xml:space="preserve">
          <source>OpenSSL::SHA1</source>
          <target state="translated">OpenSSL::SHA1</target>
        </trans-unit>
        <trans-unit id="fb811faeef41baf244804a56d35e133c533ab860" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL</source>
          <target state="translated">OpenSSL::SSL</target>
        </trans-unit>
        <trans-unit id="ec3665e85695060a943a8abc9a2bb9643aba8839" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context</source>
          <target state="translated">OpenSSL::SSL::Context</target>
        </trans-unit>
        <trans-unit id="232b98343697a329b86820f5a6fb24de61815e48" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context::Client</source>
          <target state="translated">OpenSSL::SSL::Context::Client</target>
        </trans-unit>
        <trans-unit id="ad3f97c6c30ead8cd460aac4a17452af8a138c0e" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context::Server</source>
          <target state="translated">OpenSSL::SSL::Context::Server</target>
        </trans-unit>
        <trans-unit id="ed15213abf2b4ee65c4ebfce0336f6425bd9762d" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error</source>
          <target state="translated">OpenSSL::SSL::Error</target>
        </trans-unit>
        <trans-unit id="2197e923a2ee6f1b90bc655b0468c761aa73e507" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error#error</source>
          <target state="translated">OpenSSL::SSL::Error#error</target>
        </trans-unit>
        <trans-unit id="bd1cd1e9458e6d08aa7c0091d10292d293e3bf14" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error#underlying_eof?</source>
          <target state="translated">OpenSSL::SSL::Error#underlying_eof?</target>
        </trans-unit>
        <trans-unit id="ebd19fc9dc26d826f8eca10aa6b80c162de4ee4c" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error.new</source>
          <target state="translated">OpenSSL::SSL::Error.new</target>
        </trans-unit>
        <trans-unit id="8363239b7df2c0cbe15d2e48efe3d7c741af8185" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Server</source>
          <target state="translated">OpenSSL::SSL::Server</target>
        </trans-unit>
        <trans-unit id="a764af7f9ee1c1215570b8ad95c647bcf5fbb60a" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket</source>
          <target state="translated">OpenSSL::SSL::Socket</target>
        </trans-unit>
        <trans-unit id="49532e2f4f8668e7802d24fa0c878c4b9a61e057" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket::Client</source>
          <target state="translated">OpenSSL::SSL::Socket::Client</target>
        </trans-unit>
        <trans-unit id="22a72dc30f3ed8ca4fd164f53ab80bf86d0e7078" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket::Server</source>
          <target state="translated">OpenSSL::SSL::Socket::Server</target>
        </trans-unit>
        <trans-unit id="1546e1068630b5411f9ffaaabc12cdf957d7b30c" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;filename&lt;/em&gt;, yields it to the given block, and closes it at the end.</source>
          <target state="translated">엽니 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 주어진에서 읽기 위해 &lt;em&gt;파일 이름&lt;/em&gt; , 주어진 블록을 산출하고, 말을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="16a0fda414a2d21471def5f8df15b91f45d81c51" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;filename&lt;/em&gt; 에서 읽을 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 을 엽니 다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52512345b08986612149b7ab7064b1a22de05c54" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;io&lt;/em&gt;, yields it to the given block, and closes it at the end.</source>
          <target state="translated">엽니 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 주어진에서 읽기위한 &lt;em&gt;IO&lt;/em&gt; 수익률을, 지정된 블록에, 그리고 말을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="a0ae274b34e2231176d14a5f25f2b103c92361d5" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io&lt;/em&gt; 에서 읽을 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 을 엽니 다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60bbc54ab6cf8dabf50b3fb6278c1288ad3acceb" translate="yes" xml:space="preserve">
          <source>Opens a TCP socket to a remote TCP server, yields it to the block, then eventually closes the socket when the block returns.</source>
          <target state="translated">원격 TCP 서버에 대한 TCP 소켓을 열고 블록으로 보낸 다음 블록이 반환되면 결국 소켓을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="d905cf0353d48eaf1721274999cd6d041bdd94e4" translate="yes" xml:space="preserve">
          <source>Opens a directory and yields it, closing it at the end of the block.</source>
          <target state="translated">디렉토리를 열고 블록의 끝에서 닫아서 생성합니다.</target>
        </trans-unit>
        <trans-unit id="56707ccf177bafa6b5176c257886e0d16f0f80d8" translate="yes" xml:space="preserve">
          <source>Opens a directory and yields it, closing it at the end of the block. Returns the value of the block.</source>
          <target state="translated">디렉토리를 열고 블록의 끝에서 닫아서 생성합니다. 블록의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e997a182ae5b0adc63476bc3526430253960f786" translate="yes" xml:space="preserve">
          <source>Opens a new websocket to the target host.</source>
          <target state="translated">대상 호스트에 새 웹 소켓을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="f6277f42289401fe712d708b0baaa449b222f4e5" translate="yes" xml:space="preserve">
          <source>Opens a new websocket to the target host. This will also handle the handshake and will raise an exception if the handshake did not complete successfully.</source>
          <target state="translated">대상 호스트에 새 웹 소켓을 엽니 다. 또한 핸드 셰이크를 처리하고 핸드 셰이크가 완료되지 않은 경우 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="55a1a71521e9a393f87958cb8254d4e7576c51d7" translate="yes" xml:space="preserve">
          <source>Opens a new websocket using the information provided by the URI.</source>
          <target state="translated">URI에서 제공 한 정보를 사용하여 새 웹 소켓을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="e8311e03dd6c32aad5d54e7ddc06ce09edb4ddc6" translate="yes" xml:space="preserve">
          <source>Opens a new websocket using the information provided by the URI. This will also handle the handshake and will raise an exception if the handshake did not complete successfully. This method will also raise an exception if the URI is missing the host and/or the path.</source>
          <target state="translated">URI에서 제공 한 정보를 사용하여 새 웹 소켓을 엽니 다. 또한 핸드 셰이크를 처리하고 핸드 셰이크가 완료되지 않은 경우 예외를 발생시킵니다. 이 방법은 URI에 호스트 및 / 또는 경로가없는 경우 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2dcf80ed39d3208350e9412b387a2b789f75c72f" translate="yes" xml:space="preserve">
          <source>Opens an UNIX socket to a filesystem pathname, yields it to the block, then eventually closes the socket when the block returns.</source>
          <target state="translated">파일 시스템 경로 이름에 대한 UNIX 소켓을 열고 블록에 생성 한 다음 블록이 리턴되면 소켓을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="dad0607a61d573b1a48f862174503d87ce54326a" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 이라는 파일을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="f215aefd6f8c039151b5a1ed0ec64dc908a10438" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;. If a file is being created, its initial permissions may be set using the &lt;em&gt;perm&lt;/em&gt; parameter.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 이라는 파일을 엽니 다 . 파일을 작성하는 경우 &lt;em&gt;perm&lt;/em&gt; 매개 변수를 사용하여 초기 권한을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4f6ef1ba388097b3b4316cd983d2191b697ca00" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;. If a file is being created, its initial permissions may be set using the &lt;em&gt;perm&lt;/em&gt; parameter. Then given block will be passed the opened file as an argument, the file will be automatically closed when the block returns.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 이라는 파일을 엽니 다 . 파일을 작성하는 경우 &lt;em&gt;perm&lt;/em&gt; 매개 변수를 사용하여 초기 권한을 설정할 수 있습니다 . 그런 다음 주어진 블록은 열린 파일을 인수로 전달하고 블록이 반환되면 파일이 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="0c1668ac138ae92ffacd3116296d3548db776f14" translate="yes" xml:space="preserve">
          <source>Opera 20</source>
          <target state="translated">오페라 20</target>
        </trans-unit>
        <trans-unit id="41b0fc59d7aad8bc81ae95e641aa3418061b2802" translate="yes" xml:space="preserve">
          <source>Opera 5</source>
          <target state="translated">오페라 5</target>
        </trans-unit>
        <trans-unit id="fad0a017eb9f00073f41816df228a99ee3a83534" translate="yes" xml:space="preserve">
          <source>Opera 57</source>
          <target state="translated">오페라 57</target>
        </trans-unit>
        <trans-unit id="cadca8091d4e123a8758e7e5ae05f2c10df1424d" translate="yes" xml:space="preserve">
          <source>OperandBundleDef</source>
          <target state="translated">OperandBundleDef</target>
        </trans-unit>
        <trans-unit id="879e5fd682673ad57da320a833f4a329427704a9" translate="yes" xml:space="preserve">
          <source>OperandBundleDef#to_unsafe</source>
          <target state="translated">OperandBundleDef#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d75c9b2ebb39228a3902a5c9c77461f23eee7538" translate="yes" xml:space="preserve">
          <source>OperandBundleDef.new</source>
          <target state="translated">OperandBundleDef.new</target>
        </trans-unit>
        <trans-unit id="81af3b19a22306c68182c75bcd2feb4c8391e3d9" translate="yes" xml:space="preserve">
          <source>OperandBundleDef.null</source>
          <target state="translated">OperandBundleDef.null</target>
        </trans-unit>
        <trans-unit id="0fc51a5c314382c855158eda38ff5409a7e69535" translate="yes" xml:space="preserve">
          <source>Operation already in progress</source>
          <target state="translated">이미 진행중인 작업</target>
        </trans-unit>
        <trans-unit id="a2dad54d8bce08503c34abc283c6fe74bd2e9ffc" translate="yes" xml:space="preserve">
          <source>Operation canceled</source>
          <target state="translated">작업 취소</target>
        </trans-unit>
        <trans-unit id="25ef925607b43bca64c3829868d9989b76540d3a" translate="yes" xml:space="preserve">
          <source>Operation not permitted</source>
          <target state="translated">작동이 허용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="b20622c82be5480df90f7091e7835cb1fe2a3c88" translate="yes" xml:space="preserve">
          <source>Operation not supported by device</source>
          <target state="translated">장치가 지원하지 않는 작업</target>
        </trans-unit>
        <trans-unit id="c49e2a256113761881fb1a1fa41d066e27d70d15" translate="yes" xml:space="preserve">
          <source>Operation not supported on socket</source>
          <target state="translated">소켓에서 지원되지 않는 작업</target>
        </trans-unit>
        <trans-unit id="8fdc938d87d0b18a567701392c335d0c883fa4b7" translate="yes" xml:space="preserve">
          <source>Operation now in progress</source>
          <target state="translated">현재 진행중인 작업</target>
        </trans-unit>
        <trans-unit id="59da8b3d4f03013f0b1c074c21c160a523b2efbd" translate="yes" xml:space="preserve">
          <source>Operation timed out</source>
          <target state="translated">작업 시간이 초과되었습니다</target>
        </trans-unit>
        <trans-unit id="db648ff618df972b87b0f378a6996fcda48575ee" translate="yes" xml:space="preserve">
          <source>Operation would block</source>
          <target state="translated">작업 차단</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="5ab53f8310f5b3d7c33f42f382419ed45034e50e" translate="yes" xml:space="preserve">
          <source>Operator Precedence</source>
          <target state="translated">운영자 우선 순위</target>
        </trans-unit>
        <trans-unit id="7eacb7afc0baf3209fb98e725e611af029e601ea" translate="yes" xml:space="preserve">
          <source>Operator expressions are actually parsed as method calls. For example &lt;code&gt;a + b&lt;/code&gt; is semantically equivalent to &lt;code&gt;a.+(b)&lt;/code&gt;, a call to method &lt;code&gt;+&lt;/code&gt; on &lt;code&gt;a&lt;/code&gt; with argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">연산자 식은 실제로 메서드 호출로 구문 분석됩니다. 예를 들어 &lt;code&gt;a + b&lt;/code&gt; 는 &lt;code&gt;a.+(b)&lt;/code&gt; , 인수 &lt;code&gt;b&lt;/code&gt; 를 사용 하여 a 에 &lt;code&gt;a&lt;/code&gt; 메서드 &lt;code&gt;+&lt;/code&gt; 호출 과 의미 상 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="ca40c32c1edab9fd3598b9bdc08da8b555fbd120" translate="yes" xml:space="preserve">
          <source>Operators are implemented like any regular method, and the standard library offers many implementations, for example for math expressions.</source>
          <target state="translated">연산자는 일반 방법과 같이 구현되며 표준 라이브러리는 수학 표현식과 같은 다양한 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1247fa3ac596bbd9dede3183f9cc7c84cde283bf" translate="yes" xml:space="preserve">
          <source>Operators can be invoked too:</source>
          <target state="translated">운영자도 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1fc1801fbce2784e2849c10e00fbcdd34ca3424" translate="yes" xml:space="preserve">
          <source>Operators like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; are regular method calls. For example:</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;-&lt;/code&gt; 와 같은 연산자 는 일반적인 메소드 호출입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca9dd2f2f06508a1a833069661fb237a05a6e393" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt; 의 최적화 된 버전 .</target>
        </trans-unit>
        <trans-unit id="6a4c0f76019362d5870d19d18d9fcfce735e91ce" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt; 의 최적화 된 버전 .</target>
        </trans-unit>
        <trans-unit id="ed7d4a2930966027b63467087844c9531a8fe5ea" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt; 의 최적화 된 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="15ef9ebdae9d866ce763d6623353b58e25a7d56b" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#sample(n:Int,random=Random::DEFAULT)-instance-method&quot;&gt;Enumerable#sample&lt;/a&gt;&lt;/code&gt; that runs in O(1) time when &lt;code&gt;self&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f912979a41d77decb0a0e96e7871ae425d72ea9b" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#sample(n:Int,random=Random::DEFAULT)-instance-method&quot;&gt;Enumerable#sample&lt;/a&gt;&lt;/code&gt; that runs in O(1) time when &lt;code&gt;self&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; range. In these cases, this range is considered to be a distribution of numeric values rather than a collection of elements, and the method simply calls &lt;code&gt;random.rand(self)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf422f1a162700fa2f7eeabf28f46d33070a25e8" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#sample(n:Int,random=Random::DEFAULT)-instance-method&quot;&gt;Enumerable#sample&lt;/a&gt;&lt;/code&gt; that runs in O(1) time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c409cd8f2feda97f6c8a6f7718fcb518b9f04b2d" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; that runs in O(1) time when &lt;code&gt;self&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac552785e4ab9905b79061cbe0b75a860bc1e56b" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; used when &lt;code&gt;other&lt;/code&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; 최적화 된 버전 ? &lt;code&gt;other&lt;/code&gt; 도 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="95e33ab051ff71d8ef58933af6611287bc1203b9" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; used when &lt;code&gt;other&lt;/code&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; 최적화 된 버전 ? &lt;code&gt;other&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="641ac8a8c177d4d16c766cbd69ea117790641772" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;set#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; used when &lt;em&gt;other&lt;/em&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;other&lt;/em&gt; 도 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 경우에 사용되는 최적화 된 &lt;code&gt;&lt;a href=&quot;set#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 버전&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a90b9b30e5d679654838a5621aafaa41f1f88d86" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;Enumerable#join&lt;/code&gt; that performs better when all of the elements in this indexable are strings: the total string bytesize to return can be computed before creating the final string, which performs better because there's no need to do reallocations.</source>
          <target state="translated">이 인덱서 블의 모든 요소가 문자열 인 경우 더 나은 성능을 발휘하는 최적화 된 &lt;code&gt;Enumerable#join&lt;/code&gt; 버전 : 최종 문자열을 만들기 전에 반환 할 총 문자열 바이트 화를 계산할 수 있습니다. 이는 재 할당 할 필요가 없기 때문에 더 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="40dbe8ccfe714d9a944d448d1c3b1b3c2bfff946" translate="yes" xml:space="preserve">
          <source>Optimizing</source>
          <target state="translated">Optimizing</target>
        </trans-unit>
        <trans-unit id="9c404768d955448d9b6f90547eff35b8e6696cf8" translate="yes" xml:space="preserve">
          <source>OptionParser</source>
          <target state="translated">OptionParser</target>
        </trans-unit>
        <trans-unit id="ce9528e3e38e6c3b9d7f601d180c3733ce8ffa97" translate="yes" xml:space="preserve">
          <source>OptionParser#on</source>
          <target state="translated">OptionParser#on</target>
        </trans-unit>
        <trans-unit id="4c5595c4f9644144e22c47527ee218aa39646665" translate="yes" xml:space="preserve">
          <source>OptionParser#stop</source>
          <target state="translated">OptionParser#stop</target>
        </trans-unit>
        <trans-unit id="8a1a8c5af20bcb7d109bc79028ab7166687c727d" translate="yes" xml:space="preserve">
          <source>OptionParser#to_s</source>
          <target state="translated">OptionParser#to_s</target>
        </trans-unit>
        <trans-unit id="20081927571e1bd5393c924a62c8507391676a33" translate="yes" xml:space="preserve">
          <source>OptionParser.new</source>
          <target state="translated">OptionParser.new</target>
        </trans-unit>
        <trans-unit id="579bd1b8c1b458e1807d4863cb5dc61c28a04253" translate="yes" xml:space="preserve">
          <source>OptionParser::Exception</source>
          <target state="translated">OptionParser::Exception</target>
        </trans-unit>
        <trans-unit id="e76fa734dd2ff466ac7558a1c665b2df21d2725e" translate="yes" xml:space="preserve">
          <source>OptionParser::InvalidOption</source>
          <target state="translated">OptionParser::InvalidOption</target>
        </trans-unit>
        <trans-unit id="61913d6fd69063d2647bb8f35d716b5c2244bfe5" translate="yes" xml:space="preserve">
          <source>OptionParser::InvalidOption.new</source>
          <target state="translated">OptionParser::InvalidOption.new</target>
        </trans-unit>
        <trans-unit id="0f0ff85139c0a525e411680134bbb85a42e2f4c0" translate="yes" xml:space="preserve">
          <source>OptionParser::MissingOption</source>
          <target state="translated">OptionParser::MissingOption</target>
        </trans-unit>
        <trans-unit id="7cdbcc6af01bccd6a48694ea08c8ae04d12181c4" translate="yes" xml:space="preserve">
          <source>OptionParser::MissingOption.new</source>
          <target state="translated">OptionParser::MissingOption.new</target>
        </trans-unit>
        <trans-unit id="7f50cfb22adece301dfd4a908d5cb575dd688121" translate="yes" xml:space="preserve">
          <source>Optionally takes a radix base (2 through 36).</source>
          <target state="translated">선택적으로 기수베이스 (2-36)를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="d6bef2abfc17b3b18e4a741c93502630af56b0a2" translate="yes" xml:space="preserve">
          <source>Options#anchored?</source>
          <target state="translated">Options#anchored?</target>
        </trans-unit>
        <trans-unit id="e5f01f8288e7b65eb3d060cb5be26023b50b5829" translate="yes" xml:space="preserve">
          <source>Options#dupnames?</source>
          <target state="translated">Options#dupnames?</target>
        </trans-unit>
        <trans-unit id="0ca941a6cade5d2f34847396c519d6f62afcc7c9" translate="yes" xml:space="preserve">
          <source>Options#extended?</source>
          <target state="translated">Options#extended?</target>
        </trans-unit>
        <trans-unit id="151e72b3291e3aec698cc8b7bbe7283955494d4e" translate="yes" xml:space="preserve">
          <source>Options#ignore_case?</source>
          <target state="translated">Options#ignore_case?</target>
        </trans-unit>
        <trans-unit id="01861f9149108eb7f4abeaa249a24446b3acd626" translate="yes" xml:space="preserve">
          <source>Options#multiline?</source>
          <target state="translated">Options#multiline?</target>
        </trans-unit>
        <trans-unit id="ad804d221db75eee7ed0ed594be446f47a1fb91a" translate="yes" xml:space="preserve">
          <source>Options#no_utf8_check?</source>
          <target state="translated">Options#no_utf8_check?</target>
        </trans-unit>
        <trans-unit id="1fbcfe77aaf91945ce5b8c5ced56cf71ed3793c3" translate="yes" xml:space="preserve">
          <source>Options#none?</source>
          <target state="translated">Options#none?</target>
        </trans-unit>
        <trans-unit id="2906eec841f789e63c79b28ee93631754f10fcaf" translate="yes" xml:space="preserve">
          <source>Options#utf_8?</source>
          <target state="translated">Options#utf_8?</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="81d0a647180d7e504f891d8044c9f9820b909f37" translate="yes" xml:space="preserve">
          <source>Or an 8-bit color:</source>
          <target state="translated">또는 8 비트 색상 :</target>
        </trans-unit>
        <trans-unit id="77ea73487b27dff92efa4e964325478eb4c7a133" translate="yes" xml:space="preserve">
          <source>Or like:</source>
          <target state="translated">또는 같은 :</target>
        </trans-unit>
        <trans-unit id="00bca5f80bf6494d39945a6d4a0ae51017fb18a7" translate="yes" xml:space="preserve">
          <source>Or read a scalar value without dealing explicitly with the ResultSet:</source>
          <target state="translated">또는 ResultSet을 명시 적으로 다루지 않고 스칼라 값을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="c1681dab2291b1817819335e642390c01e9d7e4b" translate="yes" xml:space="preserve">
          <source>Or read a single row:</source>
          <target state="translated">또는 단일 행을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="50fb7f648a3a962ff7f5a3488aa2e336f4eb5cd5" translate="yes" xml:space="preserve">
          <source>Or treat the bytes of a &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; as an &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">또는 &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; 의 바이트를 &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 로 취급하십시오 .</target>
        </trans-unit>
        <trans-unit id="62dec1df796405cf4f91ae0617fa9c0020105561" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;loop&lt;/code&gt;, found in the standard library:</source>
          <target state="translated">또는 표준 라이브러리에있는 &lt;code&gt;loop&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="14372ee8f481a95aad2012587951e64d0d7bd45d" translate="yes" xml:space="preserve">
          <source>Or with a proc returned from a method:</source>
          <target state="translated">또는 메소드에서 proc이 리턴되면</target>
        </trans-unit>
        <trans-unit id="93e5aad9de2d1e96409f5634609f22d25becd93c" translate="yes" xml:space="preserve">
          <source>Or you can use curly braces and specify up to four hexadecimal numbers:</source>
          <target state="translated">또는 중괄호를 사용하고 최대 4 개의 16 진수를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3e02ea62b2c955c1d273df676545ea3817ce05e" translate="yes" xml:space="preserve">
          <source>Or you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):</source>
          <target state="translated">또는 중괄호를 사용하고 최대 6 개의 16 진수 (0-10FFFF)를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="755683a1193430355ffb119767d43c0af66166b8" translate="yes" xml:space="preserve">
          <source>Or, combining the &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;-&amp;gt;&lt;/code&gt; syntaxes:</source>
          <target state="translated">또는 &lt;code&gt;&amp;amp;&lt;/code&gt; 및 &lt;code&gt;-&amp;gt;&lt;/code&gt; 구문을 결합하여</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="9e222308b780c5ed8c85ca43d0327ff3224d6b97" translate="yes" xml:space="preserve">
          <source>Orbs define reusable commands, executors, and jobs so that commonly used pieces of configuration can be condensed into a single line of code.</source>
          <target state="translated">Orbs는 재사용 가능한 명령, 실행기 및 작업을 정의하므로 일반적으로 사용되는 구성 부분을 한 줄의 코드로 압축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8acff31cba5cd69ee51a9a30baa8ae37c702f440" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;alias&lt;/code&gt; declared previously.</source>
          <target state="translated">이전에 선언 된 다른 &lt;code&gt;struct&lt;/code&gt; , &lt;code&gt;union&lt;/code&gt; , &lt;code&gt;enum&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; 또는 &lt;code&gt;alias&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12d9251b938d0b3641433eb8c6518d307585d08c" translate="yes" xml:space="preserve">
          <source>Other connection uris are</source>
          <target state="translated">다른 연결 uris는</target>
        </trans-unit>
        <trans-unit id="e9b9ac89e0cd15f947fad4a1362ea682e23b5d72" translate="yes" xml:space="preserve">
          <source>Other forms</source>
          <target state="translated">다른 형태</target>
        </trans-unit>
        <trans-unit id="22a3c40ecc8a61b65dd5c21936eb3726e093764d" translate="yes" xml:space="preserve">
          <source>Other matchers</source>
          <target state="translated">다른 매처</target>
        </trans-unit>
        <trans-unit id="b77a11af390e306006dc0bd2d92c1fe620175315" translate="yes" xml:space="preserve">
          <source>Other rules</source>
          <target state="translated">다른 규칙</target>
        </trans-unit>
        <trans-unit id="f7a8bbc4a3d7f0d02d09d8b9ceeed2fc7710c0f9" translate="yes" xml:space="preserve">
          <source>Other unary operators</source>
          <target state="translated">기타 단항 연산자</target>
        </trans-unit>
        <trans-unit id="0ebeeed663b0eaf97fb51f9a65daf30bf06c03c2" translate="yes" xml:space="preserve">
          <source>Otherwise a compile-time error is issued.</source>
          <target state="translated">그렇지 않으면 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4574dc5a562c7ad20da2d66150341692a09ee222" translate="yes" xml:space="preserve">
          <source>Otherwise a new relative hierarchical URI is constructed with &lt;code&gt;&lt;a href=&quot;uri#query:String?-instance-method&quot;&gt;#query&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uri#fragment:String?-instance-method&quot;&gt;#fragment&lt;/a&gt;&lt;/code&gt; components from &lt;em&gt;uri&lt;/em&gt; and with a path component that describes a minimum-difference relative path from &lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;uri&lt;/em&gt;'s path.</source>
          <target state="translated">그렇지 않으면 새로운 상대적인 URI는 계층으로 구성된다 &lt;code&gt;&lt;a href=&quot;uri#query:String?-instance-method&quot;&gt;#query&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;uri#fragment:String?-instance-method&quot;&gt;#fragment&lt;/a&gt;&lt;/code&gt; 에서 성분 &lt;em&gt;URI&lt;/em&gt; 로부터 최소 차분 상대 경로를 설명하는 경로 구성 요소 &lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; 를 로 &lt;em&gt;URI&lt;/em&gt; 의 경로.</target>
        </trans-unit>
        <trans-unit id="d9c71af4bf6f908a610b7a9859cad9ebd63d8da4" translate="yes" xml:space="preserve">
          <source>Otherwise the URI is resolved according to the specifications in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC 3986 section 5.2&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 URI는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC 3986 섹션 5.2&lt;/a&gt; 의 사양에 따라 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="59935dc04f0a1d33612bcd86d21db3fa9059b3b5" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;name&lt;/code&gt; is already descriptive enough for Bob's search of &quot;palindrome&quot;. We don't need to repeat the &lt;em&gt;palindrome&lt;/em&gt; keyword. Instead, we'll catch Susan's search for &quot;spelling&quot; and Felipe's search for &quot;text&quot;.</source>
          <target state="translated">우리 &lt;code&gt;name&lt;/code&gt; 은 Bob이 &quot;palindrome&quot;을 검색하기에 충분히 설명 적입니다. &lt;em&gt;회문&lt;/em&gt; 키워드 를 반복 할 필요는 없습니다 . 대신 Susan의 &quot;맞춤법&quot;검색과 Felipe의 &quot;텍스트&quot;검색을 잡을 것입니다.</target>
        </trans-unit>
        <trans-unit id="79eb13d2534b41e018d1b0f067dd27dbef0b28e7" translate="yes" xml:space="preserve">
          <source>Our application or maybe some shards may require libraries and packages. This binary dependencies may be installed using the &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/apt.html&quot;&gt;Apt&lt;/a&gt; command.</source>
          <target state="translated">우리의 응용 프로그램 또는 일부 샤드에는 라이브러리 및 패키지가 필요할 수 있습니다. 이 바이너리 종속성은 &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/apt.html&quot;&gt;Apt&lt;/a&gt; 명령을 사용하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9af88d521559d8c9fe9abcc843d1696cfb2fb066" translate="yes" xml:space="preserve">
          <source>Our application or maybe some shards may required libraries and packages. This binary dependencies may be installed using different methods. Here we are going to show an example using the &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/apt.html&quot;&gt;Apt&lt;/a&gt; command (since the Docker image we are using is based on Ubuntu)</source>
          <target state="translated">우리의 응용 프로그램 또는 일부 샤드에는 라이브러리 및 패키지가 필요할 수 있습니다. 이 바이너리 종속성은 다른 방법을 사용하여 설치할 수 있습니다. 여기에서는 &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/apt.html&quot;&gt;Apt&lt;/a&gt; 명령을 사용하는 예제를 보여줄 것입니다 ( 사용 중인 Docker 이미지가 Ubuntu를 기반으로하기 때문).</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="6de8f008cde2d69d4915957c54ab813be2e4f345" translate="yes" xml:space="preserve">
          <source>OutputMode</source>
          <target state="translated">OutputMode</target>
        </trans-unit>
        <trans-unit id="90fb50388a4a6975b2350288f8eed5cee6d45c91" translate="yes" xml:space="preserve">
          <source>OutputMode#bs0?</source>
          <target state="translated">OutputMode#bs0?</target>
        </trans-unit>
        <trans-unit id="d61d9132dcab371afdeb1a6f44b96bf71a60a2b6" translate="yes" xml:space="preserve">
          <source>OutputMode#bs1?</source>
          <target state="translated">OutputMode#bs1?</target>
        </trans-unit>
        <trans-unit id="d6c3e2ff846ade4f5b1ec6d58053581a4b899839" translate="yes" xml:space="preserve">
          <source>OutputMode#bsdly?</source>
          <target state="translated">OutputMode#bsdly?</target>
        </trans-unit>
        <trans-unit id="99669451bcc9b2de87afd755d802eac46ccf6201" translate="yes" xml:space="preserve">
          <source>OutputMode#cr0?</source>
          <target state="translated">OutputMode#cr0?</target>
        </trans-unit>
        <trans-unit id="21d72f825625524e0e2b87580210f255a0fd2056" translate="yes" xml:space="preserve">
          <source>OutputMode#cr1?</source>
          <target state="translated">OutputMode#cr1?</target>
        </trans-unit>
        <trans-unit id="aa8a3644eb3849c2d7f45cf6264593d64f0c9fb2" translate="yes" xml:space="preserve">
          <source>OutputMode#cr2?</source>
          <target state="translated">OutputMode#cr2?</target>
        </trans-unit>
        <trans-unit id="d1960e3d387e79e78223df7902d10144ca3dd18b" translate="yes" xml:space="preserve">
          <source>OutputMode#cr3?</source>
          <target state="translated">OutputMode#cr3?</target>
        </trans-unit>
        <trans-unit id="1cccfb925bbf025381ce160564f29ced5715e7ec" translate="yes" xml:space="preserve">
          <source>OutputMode#crdly?</source>
          <target state="translated">OutputMode#crdly?</target>
        </trans-unit>
        <trans-unit id="ea19e8809560e92c9aadf5586d865de529e6aea1" translate="yes" xml:space="preserve">
          <source>OutputMode#ff0?</source>
          <target state="translated">OutputMode#ff0?</target>
        </trans-unit>
        <trans-unit id="38005c73f35ec5981433cbcf9ae499635c94aee8" translate="yes" xml:space="preserve">
          <source>OutputMode#ff1?</source>
          <target state="translated">OutputMode#ff1?</target>
        </trans-unit>
        <trans-unit id="63177bee2b418b5b285d8a85231cd84fefb19376" translate="yes" xml:space="preserve">
          <source>OutputMode#ffdly?</source>
          <target state="translated">OutputMode#ffdly?</target>
        </trans-unit>
        <trans-unit id="a777fda951cb8f689270b4b1ac3798d3e9e5b701" translate="yes" xml:space="preserve">
          <source>OutputMode#nl0?</source>
          <target state="translated">OutputMode#nl0?</target>
        </trans-unit>
        <trans-unit id="3b1c21e8eef202ee6fdd148f065b5be2aef25276" translate="yes" xml:space="preserve">
          <source>OutputMode#nl1?</source>
          <target state="translated">OutputMode#nl1?</target>
        </trans-unit>
        <trans-unit id="7decd05bb9287c1b6352b2881f3b01a45d13b7d2" translate="yes" xml:space="preserve">
          <source>OutputMode#nldly?</source>
          <target state="translated">OutputMode#nldly?</target>
        </trans-unit>
        <trans-unit id="54293b275a91e707855f38c5a45170935d237821" translate="yes" xml:space="preserve">
          <source>OutputMode#none?</source>
          <target state="translated">OutputMode#none?</target>
        </trans-unit>
        <trans-unit id="f7b6cdc678e2e1af0bcedbb81efe5a002b7338ba" translate="yes" xml:space="preserve">
          <source>OutputMode#ocrnl?</source>
          <target state="translated">OutputMode#ocrnl?</target>
        </trans-unit>
        <trans-unit id="2e47411e83e13f94262a58bbb9fe4b584c183cfd" translate="yes" xml:space="preserve">
          <source>OutputMode#ofdel?</source>
          <target state="translated">OutputMode#ofdel?</target>
        </trans-unit>
        <trans-unit id="e5ab127ea0233905698502df8d44fc5c3ceec9cc" translate="yes" xml:space="preserve">
          <source>OutputMode#ofill?</source>
          <target state="translated">OutputMode#ofill?</target>
        </trans-unit>
        <trans-unit id="ea5f0311d1a0b2b5da89ded86b508fd877334e67" translate="yes" xml:space="preserve">
          <source>OutputMode#onlcr?</source>
          <target state="translated">OutputMode#onlcr?</target>
        </trans-unit>
        <trans-unit id="284114e5ee31a1db758630d2f4353da69182aabd" translate="yes" xml:space="preserve">
          <source>OutputMode#onlret?</source>
          <target state="translated">OutputMode#onlret?</target>
        </trans-unit>
        <trans-unit id="6f12fb7acb8351494ffc7baaa6b74be8f8fe2095" translate="yes" xml:space="preserve">
          <source>OutputMode#onocr?</source>
          <target state="translated">OutputMode#onocr?</target>
        </trans-unit>
        <trans-unit id="aedcc8c0650517846bf416aa62b7e39c7a8ed9a6" translate="yes" xml:space="preserve">
          <source>OutputMode#opost?</source>
          <target state="translated">OutputMode#opost?</target>
        </trans-unit>
        <trans-unit id="ec5cf5b4b1d2857441efa72b573d68f68c6240a6" translate="yes" xml:space="preserve">
          <source>OutputMode#tab0?</source>
          <target state="translated">OutputMode#tab0?</target>
        </trans-unit>
        <trans-unit id="203a21e606008d7471d6697798ffd3d896448bc5" translate="yes" xml:space="preserve">
          <source>OutputMode#tab1?</source>
          <target state="translated">OutputMode#tab1?</target>
        </trans-unit>
        <trans-unit id="db35db2c7a72bee0721efccb45702be783a35ca9" translate="yes" xml:space="preserve">
          <source>OutputMode#tab2?</source>
          <target state="translated">OutputMode#tab2?</target>
        </trans-unit>
        <trans-unit id="7d03636735cfb87f338079f122c781b56f268d77" translate="yes" xml:space="preserve">
          <source>OutputMode#tab3?</source>
          <target state="translated">OutputMode#tab3?</target>
        </trans-unit>
        <trans-unit id="7daca068105d8fc1a7633bcd9d44debb713d49f7" translate="yes" xml:space="preserve">
          <source>OutputMode#tabdly?</source>
          <target state="translated">OutputMode#tabdly?</target>
        </trans-unit>
        <trans-unit id="ffb6afa086eafd7dd89401bae4cbe88b329ee282" translate="yes" xml:space="preserve">
          <source>OutputMode#vt0?</source>
          <target state="translated">OutputMode#vt0?</target>
        </trans-unit>
        <trans-unit id="5cb67b0de7d0feb48fcd256934759effc91caa48" translate="yes" xml:space="preserve">
          <source>OutputMode#vt1?</source>
          <target state="translated">OutputMode#vt1?</target>
        </trans-unit>
        <trans-unit id="7b1d64d2d663df0404d125a4786f0c13623cd7ad" translate="yes" xml:space="preserve">
          <source>OutputMode#vtdly?</source>
          <target state="translated">OutputMode#vtdly?</target>
        </trans-unit>
        <trans-unit id="e9a605862654b60717ffb6ef6267a4502aa3e98f" translate="yes" xml:space="preserve">
          <source>Outputs any buffered data.</source>
          <target state="translated">버퍼링 된 데이터를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="e19fdf7ae8719c6559e268af8d872c0fbb414308" translate="yes" xml:space="preserve">
          <source>Outputs the current macro's buffer to the standard output.</source>
          <target state="translated">현재 매크로의 버퍼를 표준 출력으로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="d89bbaed7efd54e724af50785285a03474293397" translate="yes" xml:space="preserve">
          <source>Outputs the current macro's buffer to the standard output. Useful for debugging a macro to see what's being generated.</source>
          <target state="translated">현재 매크로의 버퍼를 표준 출력으로 출력합니다. 생성되는 내용을보기 위해 매크로를 디버깅하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ebf17d5fa3a612aef1e5ab876e2674da56b6d858" translate="yes" xml:space="preserve">
          <source>Overflow in &lt;em&gt;nanoseconds&lt;/em&gt; will be transferred to &lt;em&gt;seconds&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;나노초 단위의&lt;/em&gt; 오버플 로는 &lt;em&gt;초로&lt;/em&gt; 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b000a241f4d75ec53eedd988fbc26ef5f3b12fc" translate="yes" xml:space="preserve">
          <source>Overflow in smaller units is transferred to the next larger unit.</source>
          <target state="translated">작은 단위의 오버 플로우는 다음 큰 단위로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="2463e229a293d9ce0593fb8c001c99bade0b894d" translate="yes" xml:space="preserve">
          <source>OverflowError</source>
          <target state="translated">OverflowError</target>
        </trans-unit>
        <trans-unit id="d3ac50cb8bbdb54f1c2d778f07177aef47363371" translate="yes" xml:space="preserve">
          <source>OverflowError.new</source>
          <target state="translated">OverflowError.new</target>
        </trans-unit>
        <trans-unit id="5ce5933b21836de6829bb9840d945728ee76bf5e" translate="yes" xml:space="preserve">
          <source>Overloadable</source>
          <target state="translated">Overloadable</target>
        </trans-unit>
        <trans-unit id="cb2f163ccc20cb7388203cf1edbc6860b44ea0f0" translate="yes" xml:space="preserve">
          <source>Overloading</source>
          <target state="translated">Overloading</target>
        </trans-unit>
        <trans-unit id="ec5878dd8d899636943fffee6342d476f6713cb3" translate="yes" xml:space="preserve">
          <source>Overloads</source>
          <target state="translated">Overloads</target>
        </trans-unit>
        <trans-unit id="037615c11af1d5cf5b00ec33b9b835b8ad7f73bb" translate="yes" xml:space="preserve">
          <source>Overridden by descendants (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;) to provide meaningful pattern-match semantics.</source>
          <target state="translated">의미있는 패턴 일치 의미를 제공하기 위해 자손 (특히 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; )으로 재정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="0aa33439c77b67e9c89316aea0238a05fae8b858" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;&lt;a href=&quot;../enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; to use more performant implementation on integer ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="f4c41e1d7f8f0d8a79fe1756c403108079dcbc1e" translate="yes" xml:space="preserve">
          <source>Overview: HTTP Server</source>
          <target state="translated">개요 : HTTP 서버</target>
        </trans-unit>
        <trans-unit id="7e29cd89d1e555b322df1a2161d027af1a854c87" translate="yes" xml:space="preserve">
          <source>Overview: Hello World!</source>
          <target state="translated">개요 : Hello World!</target>
        </trans-unit>
        <trans-unit id="c56df3927b6efbba6275870d58360075f645f491" translate="yes" xml:space="preserve">
          <source>PCG32#jump</source>
          <target state="translated">PCG32#jump</target>
        </trans-unit>
        <trans-unit id="77b4d024d37c9f62301450e52974747596bd8d44" translate="yes" xml:space="preserve">
          <source>PCG32#new_seed</source>
          <target state="translated">PCG32#new_seed</target>
        </trans-unit>
        <trans-unit id="5755554de978e12e869c25b84fc32a3f69a1ccc2" translate="yes" xml:space="preserve">
          <source>PCG32#next_u</source>
          <target state="translated">PCG32#next_u</target>
        </trans-unit>
        <trans-unit id="8529a091290affc2e204259f8ad6f56bd841b1f0" translate="yes" xml:space="preserve">
          <source>PCG32.new</source>
          <target state="translated">PCG32.new</target>
        </trans-unit>
        <trans-unit id="22eb1a13ae90d4f62d531b9bd571a97affdbc82b" translate="yes" xml:space="preserve">
          <source>PCRE native &lt;code&gt;PCRE_MULTILINE&lt;/code&gt; flag is &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;PCRE_DOTALL&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt;</source>
          <target state="translated">PCRE 기본 &lt;code&gt;PCRE_MULTILINE&lt;/code&gt; 플래그는 &lt;code&gt;2&lt;/code&gt; 이고 &lt;code&gt;PCRE_DOTALL&lt;/code&gt; 은 &lt;code&gt;4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26930739a4b4b02e9193fd2da59cde97866cb90d" translate="yes" xml:space="preserve">
          <source>PCRE optionally permits named capture groups (named subpatterns) to not be unique. Crystal exposes the name table of a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; =&amp;gt; &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, and therefore requires named capture groups to have unique names within a single &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">PCRE는 선택적으로 이름 지정된 캡처 그룹 (이름 지정된 서브 패턴)이 고유하지 않도록 허용합니다. 크리스탈은의 이름 테이블 노출 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; A와 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; =&amp;gt; &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; , 따라서 하나의 내에서 고유 한 이름이 명명 된 캡처 그룹을 필요로 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71bd89c7bfd3984b87de41516d8df173a9093e9a" translate="yes" xml:space="preserve">
          <source>PCRE supports other encodings, but Crystal strings are UTF-8 only, so Crystal regular expressions are also UTF-8 only (by default).</source>
          <target state="translated">PCRE는 다른 인코딩을 지원하지만 Crystal 문자열은 UTF-8만이므로 Crystal 정규식도 UTF-8 만 (기본)입니다.</target>
        </trans-unit>
        <trans-unit id="e8bea2de7c657aa3d51fae53e5c510f1903efb85" translate="yes" xml:space="preserve">
          <source>PKCS5.pbkdf2_hmac</source>
          <target state="translated">PKCS5.pbkdf2_hmac</target>
        </trans-unit>
        <trans-unit id="d3248605a79692bbca00f37be17e4813a2f9ca96" translate="yes" xml:space="preserve">
          <source>PKCS5.pbkdf2_hmac_sha1</source>
          <target state="translated">PKCS5.pbkdf2_hmac_sha1</target>
        </trans-unit>
        <trans-unit id="98e6eeb4029b8e4a5c4b7ad03b7f9ef1787cd9fb" translate="yes" xml:space="preserve">
          <source>POSIX paths are generally case-sensitive, Windows paths case-insensitive (see &lt;code&gt;&lt;a href=&quot;path#(other:Path)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">POSIX 경로는 일반적으로 대소 문자를 구분하고 Windows 경로는 대소 문자를 구분하지 않습니다 ( &lt;code&gt;&lt;a href=&quot;path#(other:Path)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; &amp;lt;=&amp;gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ca96e5e72e15eb4c8a5b3d01fb47a90b7e97b88c" translate="yes" xml:space="preserve">
          <source>POSIX paths use forward slash (&lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt;) as only path separator, Windows paths use backslash (&lt;code&gt;\&lt;/code&gt;) as default separator but also recognize forward slashes.</source>
          <target state="translated">POSIX 경로는 슬래시 ( &lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt; )를 경로 분리 자로 만 사용하고 Windows 경로는 백 슬래시 ( &lt;code&gt;\&lt;/code&gt; )를 기본 분리 자로 사용 하지만 슬래시도 인식합니다.</target>
        </trans-unit>
        <trans-unit id="ac9f7c9888009c72d3a59f38374670bd98949e86" translate="yes" xml:space="preserve">
          <source>Packed</source>
          <target state="translated">Packed</target>
        </trans-unit>
        <trans-unit id="80d1e4bbc367f63b385a90c1ed007368a84d28c1" translate="yes" xml:space="preserve">
          <source>Parameter names should be &lt;em&gt;italicized&lt;/em&gt; (surrounded with single asterisks &lt;code&gt;*&lt;/code&gt; or underscores &lt;code&gt;_&lt;/code&gt;):</source>
          <target state="translated">매개 변수 이름은 &lt;em&gt;이탤릭체로 표시&lt;/em&gt; 해야합니다 (단일 별표 &lt;code&gt;*&lt;/code&gt; 또는 밑줄 &lt;code&gt;_&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c5fff061d9a69994af0e94db7cd809080e7fb5f5" translate="yes" xml:space="preserve">
          <source>ParameterCollection</source>
          <target state="translated">ParameterCollection</target>
        </trans-unit>
        <trans-unit id="76db7163d966f6c58eb80f85ece1af1d05fec1da" translate="yes" xml:space="preserve">
          <source>ParameterCollection#size</source>
          <target state="translated">ParameterCollection#size</target>
        </trans-unit>
        <trans-unit id="0e05259e82129ffaf3d3f720a15142be8ec8b8fb" translate="yes" xml:space="preserve">
          <source>ParameterCollection#to_a</source>
          <target state="translated">ParameterCollection#to_a</target>
        </trans-unit>
        <trans-unit id="f371e0be174f8bbb0f1fe3e5d7a7887272f6ee91" translate="yes" xml:space="preserve">
          <source>ParameterCollection#types</source>
          <target state="translated">ParameterCollection#types</target>
        </trans-unit>
        <trans-unit id="1cb90d19ed499e9cc61b82f2d536e0eca6f13c6b" translate="yes" xml:space="preserve">
          <source>ParameterCollection#unsafe_fetch</source>
          <target state="translated">ParameterCollection#unsafe_fetch</target>
        </trans-unit>
        <trans-unit id="22dbbff4accbc9d702809ed3b32608efb46207e6" translate="yes" xml:space="preserve">
          <source>ParameterCollection.new</source>
          <target state="translated">ParameterCollection.new</target>
        </trans-unit>
        <trans-unit id="67ff13c7b8770635ba46c666f86c0f36ca2c7c34" translate="yes" xml:space="preserve">
          <source>Parameterized options</source>
          <target state="translated">매개 변수화 된 옵션</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="5c9ee68c47acd5d40549e0bc345bb81d10123198" translate="yes" xml:space="preserve">
          <source>Parameters can be added to any request with the &lt;code&gt;&lt;a href=&quot;../uri/params#encode(hash:Hash(String,String%7CArray(String)))-class-method&quot;&gt;URI::Params.encode&lt;/a&gt;&lt;/code&gt; method, which converts a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../namedtuple&quot;&gt;NamedTuple&lt;/a&gt;&lt;/code&gt; to a URL encoded HTTP query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daf85b4cf4f20ad5080b383bf1784507ee194a8" translate="yes" xml:space="preserve">
          <source>Parameters can be added to any request with the &lt;code&gt;&lt;a href=&quot;params#encode(hash:Hash(String,String%7CArray(String)))-class-method&quot;&gt;HTTP::Params#encode&lt;/a&gt;&lt;/code&gt; method, which converts a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../namedtuple&quot;&gt;NamedTuple&lt;/a&gt;&lt;/code&gt; to a URL encoded HTTP query.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;params#encode(hash:Hash(String,String%7CArray(String)))-class-method&quot;&gt;HTTP::Params#encode&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 요청에 매개 변수를 추가 할 수 있습니다.이 메소드는 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../namedtuple&quot;&gt;NamedTuple&lt;/a&gt;&lt;/code&gt; 을 URL 인코딩 된 HTTP 쿼리 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="fb48e22349480e1387ab88e4d77824cf3cffdb58" translate="yes" xml:space="preserve">
          <source>Parameters past the splat parameter without a default value are required named parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21771728acbc50c028bf8be2b7e0d8a9143edbf" translate="yes" xml:space="preserve">
          <source>Parameters past the star can also have default values. It means: they must be passed as named arguments, but they aren't required (so: optional named parameters):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc124689c7040d627a2c6490eec999443990ba30" translate="yes" xml:space="preserve">
          <source>Params</source>
          <target state="translated">Params</target>
        </trans-unit>
        <trans-unit id="a7faf7292e451fb6a6a43d3e494703477a395301" translate="yes" xml:space="preserve">
          <source>Params#==</source>
          <target state="translated">Params#==</target>
        </trans-unit>
        <trans-unit id="51e10e09552914a5e22b09f1d9f97b0d1b702b5b" translate="yes" xml:space="preserve">
          <source>Params#[]</source>
          <target state="translated">Params#[]</target>
        </trans-unit>
        <trans-unit id="ea61107597761aa4c6cc65b2c3425b2f7baca3b1" translate="yes" xml:space="preserve">
          <source>Params#[]=</source>
          <target state="translated">Params#[]=</target>
        </trans-unit>
        <trans-unit id="e8a653293409c97b0f790757f1ebbe345c5d5896" translate="yes" xml:space="preserve">
          <source>Params#[]?</source>
          <target state="translated">Params#[]?</target>
        </trans-unit>
        <trans-unit id="60ab5aefab15f2cb910a9c2335419912b0d0dec3" translate="yes" xml:space="preserve">
          <source>Params#add</source>
          <target state="translated">Params#add</target>
        </trans-unit>
        <trans-unit id="fbe0a724a667069839fa7b7859bea3cb1d453133" translate="yes" xml:space="preserve">
          <source>Params#delete</source>
          <target state="translated">Params#delete</target>
        </trans-unit>
        <trans-unit id="03d5dc4676b0a8caf40e152ddbd7c5a1e3108cce" translate="yes" xml:space="preserve">
          <source>Params#delete_all</source>
          <target state="translated">Params#delete_all</target>
        </trans-unit>
        <trans-unit id="09a14482e7daa6c8126b86ecd34371af0487cf78" translate="yes" xml:space="preserve">
          <source>Params#each</source>
          <target state="translated">Params#each</target>
        </trans-unit>
        <trans-unit id="663d84a261c07e0a89812f33afb89c6f19ed015a" translate="yes" xml:space="preserve">
          <source>Params#empty?</source>
          <target state="translated">Params#empty?</target>
        </trans-unit>
        <trans-unit id="5d8e2859e1d7dda092ab0efa4308678f1acd3d62" translate="yes" xml:space="preserve">
          <source>Params#fetch</source>
          <target state="translated">Params#fetch</target>
        </trans-unit>
        <trans-unit id="09bca57488e3a252bfc6c21284a61461f31ffd7c" translate="yes" xml:space="preserve">
          <source>Params#fetch_all</source>
          <target state="translated">Params#fetch_all</target>
        </trans-unit>
        <trans-unit id="a109e80c6ee8d3255260c20ddde027e21fedff5c" translate="yes" xml:space="preserve">
          <source>Params#has_key?</source>
          <target state="translated">Params#has_key?</target>
        </trans-unit>
        <trans-unit id="27085c8b56987378701a534939ee42c70b225252" translate="yes" xml:space="preserve">
          <source>Params#set_all</source>
          <target state="translated">Params#set_all</target>
        </trans-unit>
        <trans-unit id="04c4549dae96350ca7d94efcbb0fa9fcdd57e54c" translate="yes" xml:space="preserve">
          <source>Params#to_s</source>
          <target state="translated">Params#to_s</target>
        </trans-unit>
        <trans-unit id="c76fbd7196ea21ac97a78af67e15b58e59b5d1d1" translate="yes" xml:space="preserve">
          <source>Params.build</source>
          <target state="translated">Params.build</target>
        </trans-unit>
        <trans-unit id="d985c78d5677008867bf0cff09e1080fe036bd51" translate="yes" xml:space="preserve">
          <source>Params.encode</source>
          <target state="translated">Params.encode</target>
        </trans-unit>
        <trans-unit id="1432b7fb491dc928fb1a321461dfb84e847d23cb" translate="yes" xml:space="preserve">
          <source>Params.new</source>
          <target state="translated">Params.new</target>
        </trans-unit>
        <trans-unit id="0d21d29e2a771abbaae0be8568cb50621c9eb7da" translate="yes" xml:space="preserve">
          <source>Params.parse</source>
          <target state="translated">Params.parse</target>
        </trans-unit>
        <trans-unit id="ad73fd1a2c6d31eae746e734e09a693793745bd9" translate="yes" xml:space="preserve">
          <source>Params:</source>
          <target state="translated">Params:</target>
        </trans-unit>
        <trans-unit id="5223d9ef0ad23145001f6ef26c976129ce16564d" translate="yes" xml:space="preserve">
          <source>Params::Builder</source>
          <target state="translated">Params::Builder</target>
        </trans-unit>
        <trans-unit id="db27affc4098634199e153756d585c4c3966a3b8" translate="yes" xml:space="preserve">
          <source>Params::Builder#add</source>
          <target state="translated">Params::Builder#add</target>
        </trans-unit>
        <trans-unit id="4d294d1479cbe74dd63168034e38b74e512b799a" translate="yes" xml:space="preserve">
          <source>Params::Builder#to_s</source>
          <target state="translated">Params::Builder#to_s</target>
        </trans-unit>
        <trans-unit id="a61f3ac29defca31b17adfbbe01fe9c3604356fb" translate="yes" xml:space="preserve">
          <source>Params::Builder.new</source>
          <target state="translated">Params::Builder.new</target>
        </trans-unit>
        <trans-unit id="8d246aabd931dd53081d05a0c558f4017d5422c2" translate="yes" xml:space="preserve">
          <source>Parentheses in method invocations are optional:</source>
          <target state="translated">메소드 호출의 괄호는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="406c08239fe1e3966e0f02c9c84007b13a818f7c" translate="yes" xml:space="preserve">
          <source>Parse a time string using the formats specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616에&lt;/a&gt; 지정된 형식을 사용하여 시간 문자열 구문 분석</target>
        </trans-unit>
        <trans-unit id="2e023af7635dd7b79d94fb402c84b2c8e86a88df" translate="yes" xml:space="preserve">
          <source>Parse a time string using the formats specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616&lt;/a&gt; and (non-RFC-compliant) &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/wininet/http-cookies#set-cookie-header&quot;&gt;IIS date format&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616&lt;/a&gt; 및 (RFC 비준수) &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/wininet/http-cookies#set-cookie-header&quot;&gt;IIS 날짜 형식&lt;/a&gt; 으로 지정된 형식을 사용하여 시간 문자열을 구문 분석하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1b06823104713a3bfc68ac9636c0666f4735fe3" translate="yes" xml:space="preserve">
          <source>Parse datetime format specified by &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601에&lt;/a&gt; 지정된 날짜 / 시간 형식을 구문 분석하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1a90862b9c3e6dfc47255113afe351607aa8afe" translate="yes" xml:space="preserve">
          <source>Parse time format specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile).</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339에&lt;/a&gt; 의해 지정된 구문 분석 시간 형식 ( &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; 프로파일).</target>
        </trans-unit>
        <trans-unit id="7b15f7722bd706e2bf7b7f0bcfd106d9453aed38" translate="yes" xml:space="preserve">
          <source>Parse time format specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt;.</source>
          <target state="translated">에 의해 지정된 구문 분석 시간 형식 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88c6314c743aed28fae2b84f3a136cb7b30e6c96" translate="yes" xml:space="preserve">
          <source>Parse using SAX2 interface before 2.7.0</source>
          <target state="translated">2.7.0 이전의 SAX2 인터페이스를 사용하여 구문 분석</target>
        </trans-unit>
        <trans-unit id="c53eed71db67aa18808ef66ab385fbdd6ee604b6" translate="yes" xml:space="preserve">
          <source>Parse using XML-1.0 before update 5</source>
          <target state="translated">업데이트 5 전에 XML-1.0을 사용하여 구문 분석</target>
        </trans-unit>
        <trans-unit id="cc44c3a294f03757117c0b2c247df97e73bcfb4f" translate="yes" xml:space="preserve">
          <source>ParseContext</source>
          <target state="translated">ParseContext</target>
        </trans-unit>
        <trans-unit id="e7b412e6b64c72f0b39ecd12eb2bf966610ac1b7" translate="yes" xml:space="preserve">
          <source>ParseContext#read_alias</source>
          <target state="translated">ParseContext#read_alias</target>
        </trans-unit>
        <trans-unit id="42cab48da38553122c86633c157c247f00694f9a" translate="yes" xml:space="preserve">
          <source>ParseContext#read_alias?</source>
          <target state="translated">ParseContext#read_alias?</target>
        </trans-unit>
        <trans-unit id="68790f14db98c74fee526ccb908a22447b31c3cc" translate="yes" xml:space="preserve">
          <source>ParseContext#record_anchor</source>
          <target state="translated">ParseContext#record_anchor</target>
        </trans-unit>
        <trans-unit id="720da7ab0a7077395b959b92e25d031e39b8833c" translate="yes" xml:space="preserve">
          <source>ParseContext.new</source>
          <target state="translated">ParseContext.new</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="2db9a8b40455d11adcaf85066576e52743f8a7f4" translate="yes" xml:space="preserve">
          <source>Parser#each_row</source>
          <target state="translated">Parser#each_row</target>
        </trans-unit>
        <trans-unit id="9c3a7e911295a4af158b58c61032c5bf7235fdec" translate="yes" xml:space="preserve">
          <source>Parser#max_nesting</source>
          <target state="translated">Parser#max_nesting</target>
        </trans-unit>
        <trans-unit id="65ff0086b42eb2cc30791ec449b7b772fd0eac23" translate="yes" xml:space="preserve">
          <source>Parser#max_nesting=</source>
          <target state="translated">Parser#max_nesting=</target>
        </trans-unit>
        <trans-unit id="305ab45171f7b85b11ef46242eda2755bed47838" translate="yes" xml:space="preserve">
          <source>Parser#next_row</source>
          <target state="translated">Parser#next_row</target>
        </trans-unit>
        <trans-unit id="78ba33434abcc8f9bf145361971da77546246e94" translate="yes" xml:space="preserve">
          <source>Parser#parse</source>
          <target state="translated">Parser#parse</target>
        </trans-unit>
        <trans-unit id="f7c935d0cdd7e43af09e5f7a5cf7996ba4388d0c" translate="yes" xml:space="preserve">
          <source>Parser#rewind</source>
          <target state="translated">Parser#rewind</target>
        </trans-unit>
        <trans-unit id="0b113ce17bf83b1f88656384b6797a68c2956f62" translate="yes" xml:space="preserve">
          <source>Parser.new</source>
          <target state="translated">Parser.new</target>
        </trans-unit>
        <trans-unit id="d9bdd85892fbd579f1a3ee0624961722c72e2c6d" translate="yes" xml:space="preserve">
          <source>ParserOptions</source>
          <target state="translated">ParserOptions</target>
        </trans-unit>
        <trans-unit id="f1070c8c9a8dfe71635e51fe69e239df18016dd5" translate="yes" xml:space="preserve">
          <source>ParserOptions#big_lines?</source>
          <target state="translated">ParserOptions#big_lines?</target>
        </trans-unit>
        <trans-unit id="808170234eda45fbe9ba53c7eec2ad2dae0c41c1" translate="yes" xml:space="preserve">
          <source>ParserOptions#compact?</source>
          <target state="translated">ParserOptions#compact?</target>
        </trans-unit>
        <trans-unit id="bae9fde6abe72ebd474aa455df31449dcd6d56c3" translate="yes" xml:space="preserve">
          <source>ParserOptions#dtdattr?</source>
          <target state="translated">ParserOptions#dtdattr?</target>
        </trans-unit>
        <trans-unit id="2fd4c021c4fe9107bfb21397d4c034d812e1e0da" translate="yes" xml:space="preserve">
          <source>ParserOptions#dtdload?</source>
          <target state="translated">ParserOptions#dtdload?</target>
        </trans-unit>
        <trans-unit id="8fed5bba9220354fc714c0989aa13195803ca8a4" translate="yes" xml:space="preserve">
          <source>ParserOptions#dtdvalid?</source>
          <target state="translated">ParserOptions#dtdvalid?</target>
        </trans-unit>
        <trans-unit id="07dd4483f5be3433482852b2744e0d4feaabd88a" translate="yes" xml:space="preserve">
          <source>ParserOptions#huge?</source>
          <target state="translated">ParserOptions#huge?</target>
        </trans-unit>
        <trans-unit id="e6abf479cdf4b679591586c99e38f3fae120c2ca" translate="yes" xml:space="preserve">
          <source>ParserOptions#ignore_enc?</source>
          <target state="translated">ParserOptions#ignore_enc?</target>
        </trans-unit>
        <trans-unit id="e3081c174473ef590c3fb5f57d4f61e3c78c7b62" translate="yes" xml:space="preserve">
          <source>ParserOptions#nobasefix?</source>
          <target state="translated">ParserOptions#nobasefix?</target>
        </trans-unit>
        <trans-unit id="12b0a6c0943dbf270957a275032bd3ded9bc1afb" translate="yes" xml:space="preserve">
          <source>ParserOptions#noblanks?</source>
          <target state="translated">ParserOptions#noblanks?</target>
        </trans-unit>
        <trans-unit id="cfed304882ab95c7fb9a1559df9ef5470f2c0aec" translate="yes" xml:space="preserve">
          <source>ParserOptions#nocdata?</source>
          <target state="translated">ParserOptions#nocdata?</target>
        </trans-unit>
        <trans-unit id="a1b7b2e3e200fe8bac78484157acda43db3baaa4" translate="yes" xml:space="preserve">
          <source>ParserOptions#nodict?</source>
          <target state="translated">ParserOptions#nodict?</target>
        </trans-unit>
        <trans-unit id="3f15cd4e43922e361890852cbcf2f2cf7d05c916" translate="yes" xml:space="preserve">
          <source>ParserOptions#noent?</source>
          <target state="translated">ParserOptions#noent?</target>
        </trans-unit>
        <trans-unit id="6e598f95486072e6b4ef628465a1a3b57dafddcc" translate="yes" xml:space="preserve">
          <source>ParserOptions#noerror?</source>
          <target state="translated">ParserOptions#noerror?</target>
        </trans-unit>
        <trans-unit id="4b8b2179b59548a2e6187873699e82ffd4ba544d" translate="yes" xml:space="preserve">
          <source>ParserOptions#none?</source>
          <target state="translated">ParserOptions#none?</target>
        </trans-unit>
        <trans-unit id="6b21b1586f3239c71d7250d4bfd56c8f7d485b2a" translate="yes" xml:space="preserve">
          <source>ParserOptions#nonet?</source>
          <target state="translated">ParserOptions#nonet?</target>
        </trans-unit>
        <trans-unit id="22d77d4889528a906a785102c8970427111617e4" translate="yes" xml:space="preserve">
          <source>ParserOptions#nowarning?</source>
          <target state="translated">ParserOptions#nowarning?</target>
        </trans-unit>
        <trans-unit id="9eefbf224a8c7dd012a898d324abf9e55fbb856e" translate="yes" xml:space="preserve">
          <source>ParserOptions#noxincnode?</source>
          <target state="translated">ParserOptions#noxincnode?</target>
        </trans-unit>
        <trans-unit id="15f30a5b80d5d70911eb34b58e719b6bb99b8db9" translate="yes" xml:space="preserve">
          <source>ParserOptions#nsclean?</source>
          <target state="translated">ParserOptions#nsclean?</target>
        </trans-unit>
        <trans-unit id="0b57674819ed4eb672dbe3da152403e44cf5af62" translate="yes" xml:space="preserve">
          <source>ParserOptions#old10?</source>
          <target state="translated">ParserOptions#old10?</target>
        </trans-unit>
        <trans-unit id="cdec3a29b7a1fcf1a10a1ecefad08fd4b872b07b" translate="yes" xml:space="preserve">
          <source>ParserOptions#oldsax?</source>
          <target state="translated">ParserOptions#oldsax?</target>
        </trans-unit>
        <trans-unit id="912789aeb009c53960cccf0201ae496c46d17c8e" translate="yes" xml:space="preserve">
          <source>ParserOptions#pedantic?</source>
          <target state="translated">ParserOptions#pedantic?</target>
        </trans-unit>
        <trans-unit id="a1102fcd04a9d127e7f06487aa57182d1ed21a5a" translate="yes" xml:space="preserve">
          <source>ParserOptions#recover?</source>
          <target state="translated">ParserOptions#recover?</target>
        </trans-unit>
        <trans-unit id="0adf879861ad4c9bae730d79d9a45784abafe91a" translate="yes" xml:space="preserve">
          <source>ParserOptions#sax1?</source>
          <target state="translated">ParserOptions#sax1?</target>
        </trans-unit>
        <trans-unit id="1ee7e006f36ab3681707fd55795a295c9f034572" translate="yes" xml:space="preserve">
          <source>ParserOptions#xinclude?</source>
          <target state="translated">ParserOptions#xinclude?</target>
        </trans-unit>
        <trans-unit id="651dc13b5cfd1605864de9cdc0241b17288612b1" translate="yes" xml:space="preserve">
          <source>ParserOptions.default</source>
          <target state="translated">ParserOptions.default</target>
        </trans-unit>
        <trans-unit id="ef1b69bab935224e47350c2d342f9f3f81d9f050" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;raw_url&lt;/code&gt; into an URI.</source>
          <target state="translated">&lt;code&gt;raw_url&lt;/code&gt; 을 URI로 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="8efc94db857740250e94c34d38a6ee49ccbddffa" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;raw_url&lt;/code&gt; into an URI. The &lt;code&gt;raw_url&lt;/code&gt; may be relative or absolute.</source>
          <target state="translated">&lt;code&gt;raw_url&lt;/code&gt; 을 URI로 구문 분석 합니다. &lt;code&gt;raw_url&lt;/code&gt; 는 상대적 또는 절대적 일 수도있다.</target>
        </trans-unit>
        <trans-unit id="4f53291ddd17c25d34890567c8ab1e20c2479a53" translate="yes" xml:space="preserve">
          <source>Parses INI-style configuration from the given string.</source>
          <target state="translated">주어진 문자열에서 INI 스타일 구성을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="e37112ca4884b6c3297f391549ce63d5f42f5f2c" translate="yes" xml:space="preserve">
          <source>Parses INI-style configuration from the given string. Raises a &lt;code&gt;&lt;a href=&quot;ini/parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt; on any errors.</source>
          <target state="translated">주어진 문자열에서 INI 스타일 구성을 구문 분석합니다. 오류가 발생 하면 &lt;code&gt;&lt;a href=&quot;ini/parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1e825fc4a9e20849f6b4796b84d63ada0e480f4f" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;YAML::Document&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;YAML::Document&lt;/code&gt; 로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="ee46e01d56b7f8b43dea7e085bbcdd4890034909" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt; from an URI.</source>
          <target state="translated">URI에서 &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt; 를 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="4a30bee1d812c3b636cfa74dbca52500b2a4c20b" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;ipaddress&quot;&gt;Socket::IPAddress&lt;/a&gt;&lt;/code&gt; from an URI.</source>
          <target state="translated">URI에서 &lt;code&gt;&lt;a href=&quot;ipaddress&quot;&gt;Socket::IPAddress&lt;/a&gt;&lt;/code&gt; 를 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="0c359c0c16b568895b1f7d7af9ac26de4ece5977" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;prerelease&quot;&gt;Prerelease&lt;/a&gt;&lt;/code&gt; from the given pre-release version string</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;prerelease&quot;&gt;Prerelease&lt;/a&gt;&lt;/code&gt; 버전 문자열에서 시험판 을 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="383e9b7454de1a4dc2239d2ae427f22e40e1d746" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;&lt;/code&gt; from the given semantic version string</source>
          <target state="translated">주어진 시맨틱 버전 문자열에서 &lt;code&gt;&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;&lt;/code&gt; 을 파싱</target>
        </trans-unit>
        <trans-unit id="d3f690c91620289066b25c20dc53aa8af4420778" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; denoting a JSON array, yielding each of its elements to the given block.</source>
          <target state="translated">JSON 배열을 나타내는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 구문 분석 하여 각 요소를 지정된 블록으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7bf2000f8a06f4da6f11416f90cbb2c900dc4b41" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; denoting a JSON array, yielding each of its elements to the given block. This is useful for decoding an array and processing its elements without creating an Array in memory, which might be expensive.</source>
          <target state="translated">JSON 배열을 나타내는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 구문 분석 하여 각 요소를 지정된 블록으로 생성합니다. 메모리에 Array를 만들지 않고 배열을 디코딩하고 해당 요소를 처리하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d760fe84205eba461ea686fa682c83fa66ce1bcc" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; from &lt;em&gt;time&lt;/em&gt; string using the given &lt;em&gt;pattern&lt;/em&gt; and &lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; as default location.</source>
          <target state="translated">구문 분석 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 에서 &lt;em&gt;시간이&lt;/em&gt; 주어진 사용하여 문자열 &lt;em&gt;패턴&lt;/em&gt; 과 &lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; 기본 위치로합니다.</target>
        </trans-unit>
        <trans-unit id="816501d1a77ad472dc29612f4fea4166bdbe7753" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; from &lt;em&gt;time&lt;/em&gt; string using the given &lt;em&gt;pattern&lt;/em&gt; and &lt;code&gt;&lt;a href=&quot;time/location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; as default location</source>
          <target state="translated">구문 분석 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 에서 &lt;em&gt;시간이&lt;/em&gt; 주어진 사용하여 문자열 &lt;em&gt;패턴&lt;/em&gt; 및 &lt;code&gt;&lt;a href=&quot;time/location#local-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; 기본 위치 등을</target>
        </trans-unit>
        <trans-unit id="4b276c9439e8117e31cd0541fafdd065ed7ea856" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; from &lt;em&gt;time&lt;/em&gt; string using the given &lt;em&gt;pattern&lt;/em&gt; and &lt;code&gt;&lt;a href=&quot;time/location#local:Location?-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; as default location</source>
          <target state="translated">구문 분석 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 에서 &lt;em&gt;시간이&lt;/em&gt; 주어진 사용하여 문자열 &lt;em&gt;패턴&lt;/em&gt; 및 &lt;code&gt;&lt;a href=&quot;time/location#local:Location?-class-method&quot;&gt;Time::Location.local&lt;/a&gt;&lt;/code&gt; 기본 위치 등을</target>
        </trans-unit>
        <trans-unit id="d51d826decbba2e6f0c134a57c6549c4d1fcfc98" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; from &lt;em&gt;time&lt;/em&gt; string using the given &lt;em&gt;pattern&lt;/em&gt;.</source>
          <target state="translated">구문 분석 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 에서 &lt;em&gt;시간&lt;/em&gt; 문자열 주어진 사용 &lt;em&gt;패턴을&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b2b38d77e233ba7caa5c3b5a5d34f02ac21549ed" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;&lt;a href=&quot;unixaddress&quot;&gt;Socket::UNIXAddress&lt;/a&gt;&lt;/code&gt; from an URI.</source>
          <target state="translated">URI에서 &lt;code&gt;&lt;a href=&quot;unixaddress&quot;&gt;Socket::UNIXAddress&lt;/a&gt;&lt;/code&gt; 를 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="25cc91fe447ae9f36b7f7812b9a3606528b350bc" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;Content-Disposition&lt;/code&gt; header string into a field name and &lt;code&gt;&lt;a href=&quot;formdata/filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Content-Disposition&lt;/code&gt; 헤더 문자열을 필드 이름 및 &lt;code&gt;&lt;a href=&quot;formdata/filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt; 로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="4d80641d08ee95908bb294d117089e1c047a18fa" translate="yes" xml:space="preserve">
          <source>Parses a &lt;code&gt;Content-Disposition&lt;/code&gt; header string into a field name and &lt;code&gt;&lt;a href=&quot;formdata/filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt;. Please note that the &lt;code&gt;Content-Disposition&lt;/code&gt; header for &lt;code&gt;multipart/form-data&lt;/code&gt; is not compatible with the original definition in &lt;a href=&quot;https://tools.ietf.org/html/rfc2183&quot;&gt;RFC 2183&lt;/a&gt;, but are instead specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2388&quot;&gt;RFC 2388&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Content-Disposition&lt;/code&gt; 헤더 문자열을 필드 이름 및 &lt;code&gt;&lt;a href=&quot;formdata/filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt; 로 구문 분석합니다 . &lt;code&gt;multipart/form-data&lt;/code&gt; 의 &lt;code&gt;Content-Disposition&lt;/code&gt; 헤더 는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2183&quot;&gt;RFC 2183&lt;/a&gt; 의 원래 정의와 호환되지 않지만 대신 &lt;a href=&quot;https://tools.ietf.org/html/rfc2388&quot;&gt;RFC 2388에&lt;/a&gt; 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3179042dc1544a4d2d199429a83d8381ecabd34d" translate="yes" xml:space="preserve">
          <source>Parses a CSV or &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; into an array.</source>
          <target state="translated">CSV 또는 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 배열로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="6860c5f1f3e074ffc6b37212fd12111de21375ff" translate="yes" xml:space="preserve">
          <source>Parses a JSON document as a &lt;code&gt;&lt;a href=&quot;json/any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">JSON 문서를 &lt;code&gt;&lt;a href=&quot;json/any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; 로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="5954121e181256c0ad400155d077b04d63e948bd" translate="yes" xml:space="preserve">
          <source>Parses a MIME multipart message, yielding &lt;code&gt;&lt;a href=&quot;../http/headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; and an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; for each body part.</source>
          <target state="translated">MIME 멀티 파트 메시지를 구문 분석하여 각 본문 부분에 대해 &lt;code&gt;&lt;a href=&quot;../http/headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4c603bdffb173c6f35ebd376e1bcb3b1e61da6be" translate="yes" xml:space="preserve">
          <source>Parses a MIME type string representation including any optional parameters, per RFC 1521.</source>
          <target state="translated">RFC 1521에 따라 선택적 매개 변수를 포함하여 MIME 유형 문자열 표현을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="06f4fe712e6928f0ee1d9e91352430ce7b09fc97" translate="yes" xml:space="preserve">
          <source>Parses a MIME type string representation including any optional parameters, per RFC 1521. Media types are the values in &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Content-Disposition&lt;/code&gt; HTTP headers (RFC 2183).</source>
          <target state="translated">RFC 1521에 따라 선택적 매개 변수를 포함하여 MIME 유형 문자열 표시를 구문 분석합니다. 매체 유형은 &lt;code&gt;Content-Type&lt;/code&gt; 및 &lt;code&gt;Content-Disposition&lt;/code&gt; HTTP 헤더 (RFC 2183)의 값입니다.</target>
        </trans-unit>
        <trans-unit id="f0304379867c761b82b64142e07598b4621988e0" translate="yes" xml:space="preserve">
          <source>Parses a multipart/form-data message, yielding a &lt;code&gt;&lt;a href=&quot;formdata/parser&quot;&gt;FormData::Parser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">multipart / form-data 메시지를 구문 분석하여 &lt;code&gt;&lt;a href=&quot;formdata/parser&quot;&gt;FormData::Parser&lt;/a&gt;&lt;/code&gt; 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="78862e0c52e1d9caee5c3a873d835b82ef09b58d" translate="yes" xml:space="preserve">
          <source>Parses a multipart/form-data message, yielding a &lt;code&gt;&lt;a href=&quot;formdata/part&quot;&gt;FormData::Part&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfd214f4d752b0c98f7b4553a17d581328951a3" translate="yes" xml:space="preserve">
          <source>Parses a scalar value from the given &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;노드&lt;/em&gt; 에서 스칼라 값을 구문 분석 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e08972c39324d53b9e5c54975da8373ef18a4500" translate="yes" xml:space="preserve">
          <source>Parses a socket configuration from &lt;em&gt;uri&lt;/em&gt; and adds it to this server.</source>
          <target state="translated">&lt;em&gt;uri&lt;/em&gt; 에서 소켓 구성을 구문 분석 하여이 서버에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b67bd78a1472bf5830fb1e5ff8b15c942b3e500d" translate="yes" xml:space="preserve">
          <source>Parses a socket configuration from &lt;em&gt;uri&lt;/em&gt; and adds it to this server. Returns the effective address it is bound to.</source>
          <target state="translated">&lt;em&gt;uri&lt;/em&gt; 에서 소켓 구성을 구문 분석 하여이 서버에 추가합니다. 바인딩 된 유효 주소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7aa6ae3466a7f9c1a9959ee2d74fc744dc2bdb8b" translate="yes" xml:space="preserve">
          <source>Parses a string according to the core schema, assuming the string had a plain style.</source>
          <target state="translated">문자열에 일반 스타일이 있다고 가정하고 핵심 스키마에 따라 문자열을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="6defa39db92bee8442b6be82fd58fa80f4ea5810" translate="yes" xml:space="preserve">
          <source>Parses a string into a &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">문자열을 &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 으로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="1fea7e720698001e31980aa6e34493ac244089dd" translate="yes" xml:space="preserve">
          <source>Parses a string into a &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">문자열을 &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 으로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="0493e00fd0328600841009965a4b82f49573be56" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and yields it to the block.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 를 구문 분석 하여 블록으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="da49115f942e648ceb7fe844688728348059967d" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; and yields it to the block. Might yield &lt;code&gt;nil&lt;/code&gt; if there's no data in the &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, which probably means that the connection was closed.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 를 구문 분석 하여 블록으로 보냅니다. 얻을 수있는 &lt;code&gt;nil&lt;/code&gt; 에 데이터가 없다면 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 연결이 닫힌 것을 아마 수단.</target>
        </trans-unit>
        <trans-unit id="35c1c6f90e2a3c1806527c0188d3e4b6e9727bc7" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 를 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="623e393ce033fa531fc947d8f7fbfdceec85c951" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; from the given &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Might return &lt;code&gt;nil&lt;/code&gt; if there's no data in the &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, which probably means that the connection was closed.</source>
          <target state="translated">지정된 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 를 구문 분석합니다 . &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 데이터가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 할 수 있습니다 . 이는 아마도 연결이 닫 혔음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7ead4b1e173fcf73436ea31952e8e5d56bb33624" translate="yes" xml:space="preserve">
          <source>Parses an HTML document from &lt;em&gt;io&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에서 HTML 문서를 구문 분석 &lt;em&gt;IO&lt;/em&gt; 와 &lt;em&gt;옵션&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="413abc157c6e1c18dfd70f226c8c6254739d4d3a" translate="yes" xml:space="preserve">
          <source>Parses an HTML document from &lt;em&gt;string&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에서 HTML 문서를 구문 분석 &lt;em&gt;문자열&lt;/em&gt; 과 &lt;em&gt;옵션&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f7e2f11b79aff5cacb8637afc7621634742c1a1" translate="yes" xml:space="preserve">
          <source>Parses an HTTP query and yields each key-value pair.</source>
          <target state="translated">HTTP 쿼리를 구문 분석하고 각 키-값 쌍을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="acae859dc4a65de7fa91a8be2a1be9718cf61efa" translate="yes" xml:space="preserve">
          <source>Parses an HTTP query string into a &lt;code&gt;&lt;a href=&quot;params&quot;&gt;HTTP::Params&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">HTTP 쿼리 문자열을 &lt;code&gt;&lt;a href=&quot;params&quot;&gt;HTTP::Params&lt;/a&gt;&lt;/code&gt; 로 구문 분석</target>
        </trans-unit>
        <trans-unit id="ae2e11fe230b7ca2909e4d4716422cfac0d48f4b" translate="yes" xml:space="preserve">
          <source>Parses an URI query and yields each key-value pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb32bf958c6281b13c56e89294d90c8049d6a4b9" translate="yes" xml:space="preserve">
          <source>Parses an URI query string into a &lt;code&gt;&lt;a href=&quot;params&quot;&gt;URI::Params&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7c8d6ad01f5b3a5f2b8bf344d181749ee661d3" translate="yes" xml:space="preserve">
          <source>Parses an XML document from &lt;em&gt;io&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에서 XML 문서를 구문 분석 &lt;em&gt;IO&lt;/em&gt; 와 &lt;em&gt;옵션&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddf69e8babf123dd8fda2f77b8fb203564526980" translate="yes" xml:space="preserve">
          <source>Parses an XML document from &lt;em&gt;string&lt;/em&gt; with &lt;em&gt;options&lt;/em&gt; into an &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에서 XML 문서를 구문 분석 &lt;em&gt;문자열&lt;/em&gt; 과 &lt;em&gt;옵션&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;xml/node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="849cb5ec477664bc72a8fe8a504b4c2b0dbb4b75" translate="yes" xml:space="preserve">
          <source>Parses multipart MIME messages.</source>
          <target state="translated">멀티 파트 MIME 메시지를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="f230b0680121a0033d55b18827ed8b3ec6f14fb6" translate="yes" xml:space="preserve">
          <source>Parses the given &lt;em&gt;raw_url&lt;/em&gt; into an URI.</source>
          <target state="translated">주어진 &lt;em&gt;raw_url&lt;/em&gt; 을 URI로 파싱합니다 .</target>
        </trans-unit>
        <trans-unit id="12771232ca05ad1eeae3903eb88a3ae613ae2540" translate="yes" xml:space="preserve">
          <source>Parses the given &lt;em&gt;raw_url&lt;/em&gt; into an URI. The &lt;em&gt;raw_url&lt;/em&gt; may be relative or absolute.</source>
          <target state="translated">주어진 &lt;em&gt;raw_url&lt;/em&gt; 을 URI로 파싱합니다 . &lt;em&gt;raw_url는&lt;/em&gt; 상대적 또는 절대적 일 수도있다.</target>
        </trans-unit>
        <trans-unit id="82cc7deef8d423168248ecd66a0bd931893f8fb5" translate="yes" xml:space="preserve">
          <source>Parses the next body part and yields headers as &lt;code&gt;&lt;a href=&quot;../../http/headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; and the body text as an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">다음 본문 부분을 구문 분석하고 헤더를 &lt;code&gt;&lt;a href=&quot;../../http/headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; 로, 본문을 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="d43778ae272601574305a3d7b43cffc4a492cc3e" translate="yes" xml:space="preserve">
          <source>Parses the next form-data part and yields field name, io, &lt;code&gt;&lt;a href=&quot;filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt;, and raw headers.</source>
          <target state="translated">다음 양식 데이터 부분을 구문 분석하고 필드 이름, io, &lt;code&gt;&lt;a href=&quot;filemetadata&quot;&gt;FileMetadata&lt;/a&gt;&lt;/code&gt; 및 원시 헤더를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="62806364a36d38dfaa39d28d958c9baa79f9b836" translate="yes" xml:space="preserve">
          <source>Parses the passed &lt;em&gt;args&lt;/em&gt; (defaults to &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt;), running the handlers associated to each option.</source>
          <target state="translated">전달 된 &lt;em&gt;args&lt;/em&gt; (기본값은 &lt;code&gt;&lt;a href=&quot;toplevel#ARGV&quot;&gt;ARGV&lt;/a&gt;&lt;/code&gt; ) 를 구문 분석하여 각 옵션과 연관된 핸들러를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="a5872c3132a904ef1c3d2bc2da5b5ef5ec4fb120" translate="yes" xml:space="preserve">
          <source>Parsing and generating with &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; 으로 파싱 ​​및 생성</target>
        </trans-unit>
        <trans-unit id="5626a4685de0a82dedc80ce25194df55673df3f1" translate="yes" xml:space="preserve">
          <source>Parsing context that holds anchors and what they refer to.</source>
          <target state="translated">앵커를 보유하고있는 구문 분석 컨텍스트 및 참조</target>
        </trans-unit>
        <trans-unit id="533e0350c45084aebef4e7a249aa0a1d5b52d4ab" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;csv#new(string_or_io:String%7CIO,headers=false,strip=false,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR)-class-method&quot;&gt;CSV#new&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;csv#new(string_or_io:String%7CIO,headers=false,strip=false,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR)-class-method&quot;&gt;CSV#new&lt;/a&gt;&lt;/code&gt; 로 파싱</target>
        </trans-unit>
        <trans-unit id="6e6935aa41a61b4dc5cc6550363fdf313d03df27" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; 로 파싱</target>
        </trans-unit>
        <trans-unit id="2c770069e28411bdc65eb5fc259275b7c344a02b" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; is useful for dealing with a dynamic JSON structure but is slower than using &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; 로 구문 분석 은 동적 JSON 구조를 처리하는 데 유용하지만 &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; 사용보다 속도가 느립니다 .</target>
        </trans-unit>
        <trans-unit id="48c2d92a8610ff29015f17aa9a5b676ebaedc492" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; is useful for dealing with a dynamic JSON structure.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#parse(input:String%7CIO):Any-class-method&quot;&gt;JSON.parse&lt;/a&gt;&lt;/code&gt; 를 사용한 구문 분석 은 동적 JSON 구조를 처리하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c2204fbc04ec86eecd1741b720604d359d22442c" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;#parse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;yaml#parse_all(data:String):Array(Any)-class-method&quot;&gt;#parse_all&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;yaml#parse(data:String%7CIO):Any-class-method&quot;&gt;#parse&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;yaml#parse_all(data:String):Array(Any)-class-method&quot;&gt;#parse_all&lt;/a&gt;&lt;/code&gt; 로 구문 분석</target>
        </trans-unit>
        <trans-unit id="1ef1fe386831ea6e53e4ee59b3a2da492d965330" translate="yes" xml:space="preserve">
          <source>Parsing with &lt;code&gt;from_yaml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from_yaml&lt;/code&gt; 로 파싱</target>
        </trans-unit>
        <trans-unit id="a258d9012947b26080bcd45cc84c5c3eee2d9324" translate="yes" xml:space="preserve">
          <source>PartialComparable</source>
          <target state="translated">PartialComparable</target>
        </trans-unit>
        <trans-unit id="a2d285b314e5611bd89eba12cfd7cb043311ef00" translate="yes" xml:space="preserve">
          <source>PartialComparable#&amp;gt;</source>
          <target state="translated">PartialComparable#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="24ddaf0f398e39d8dbade062cb225da0f5326a26" translate="yes" xml:space="preserve">
          <source>PartialComparable#&amp;lt;</source>
          <target state="translated">PartialComparable#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="2305c2daa0b451a1a8021d8cc6970f5cd48650a0" translate="yes" xml:space="preserve">
          <source>PartialComparable#==</source>
          <target state="translated">PartialComparable#==</target>
        </trans-unit>
        <trans-unit id="e2314c73bec491a9e9caebb240ac6a94b3d2cec0" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder</source>
          <target state="translated">PassManagerBuilder</target>
        </trans-unit>
        <trans-unit id="4efc0f5840ff404f290dbfa13c0528672c91ce21" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#disable_simplify_lib_calls=</source>
          <target state="translated">PassManagerBuilder#disable_simplify_lib_calls=</target>
        </trans-unit>
        <trans-unit id="cacb686a37b24c86d20c7add2431bdba02ca6693" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#disable_unroll_loops=</source>
          <target state="translated">PassManagerBuilder#disable_unroll_loops=</target>
        </trans-unit>
        <trans-unit id="af2738efaaa62c306793e677eaba1a11f90260df" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#finalize</source>
          <target state="translated">PassManagerBuilder#finalize</target>
        </trans-unit>
        <trans-unit id="a2990b5a2f01ad82a0884c8505536d04803f9597" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#opt_level=</source>
          <target state="translated">PassManagerBuilder#opt_level=</target>
        </trans-unit>
        <trans-unit id="8201651dadb58dc216d65b21271d216e053fb81d" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#populate</source>
          <target state="translated">PassManagerBuilder#populate</target>
        </trans-unit>
        <trans-unit id="5fd4b0d09f7ecf8d6b057af3d6e630308985f53d" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#size_level=</source>
          <target state="translated">PassManagerBuilder#size_level=</target>
        </trans-unit>
        <trans-unit id="f6e5087c6b01a17063060e68ac95e78f988a1068" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#to_unsafe</source>
          <target state="translated">PassManagerBuilder#to_unsafe</target>
        </trans-unit>
        <trans-unit id="443f072363eab805fe951bff6db7c3e8e8b4e2e6" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder#use_inliner_with_threshold=</source>
          <target state="translated">PassManagerBuilder#use_inliner_with_threshold=</target>
        </trans-unit>
        <trans-unit id="78d0c79588ea8762acbc9ece8223772418020ac6" translate="yes" xml:space="preserve">
          <source>PassManagerBuilder.new</source>
          <target state="translated">PassManagerBuilder.new</target>
        </trans-unit>
        <trans-unit id="e3c348c186d78a965b147171923bb5c819f50206" translate="yes" xml:space="preserve">
          <source>PassRegistry</source>
          <target state="translated">PassRegistry</target>
        </trans-unit>
        <trans-unit id="85cce852d03c675178433a796ca47488bdb6e32c" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_all</source>
          <target state="translated">PassRegistry#initialize_all</target>
        </trans-unit>
        <trans-unit id="448b27b3521c14270f0113a130fe811d6e3f543f" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_analysis</source>
          <target state="translated">PassRegistry#initialize_analysis</target>
        </trans-unit>
        <trans-unit id="710a8b56d5a4c957ce14bacdfeb9c227824cef82" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_code_gen</source>
          <target state="translated">PassRegistry#initialize_code_gen</target>
        </trans-unit>
        <trans-unit id="b9c0ea3fce6ab8062e7f2a24604ddd865772737a" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_core</source>
          <target state="translated">PassRegistry#initialize_core</target>
        </trans-unit>
        <trans-unit id="1314fa7b2f5e608c1737d4e7ecc5db55a7b94ae1" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_inst_combine</source>
          <target state="translated">PassRegistry#initialize_inst_combine</target>
        </trans-unit>
        <trans-unit id="e6d9501ab316fb9bd1a081990e0a7e96b168d136" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_instrumentation</source>
          <target state="translated">PassRegistry#initialize_instrumentation</target>
        </trans-unit>
        <trans-unit id="494c9e574fc4a6b8a6c8124b9b3eba81c15a0506" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_ipa</source>
          <target state="translated">PassRegistry#initialize_ipa</target>
        </trans-unit>
        <trans-unit id="bc140f7dd46674d029e9472332b14a488f4067a4" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_ipo</source>
          <target state="translated">PassRegistry#initialize_ipo</target>
        </trans-unit>
        <trans-unit id="5bfaf7de751c116ef00944acda89133af1797290" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_obj_c_arc_opts</source>
          <target state="translated">PassRegistry#initialize_obj_c_arc_opts</target>
        </trans-unit>
        <trans-unit id="74ce052fc518339db0f9a7541091780475219b68" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_scalar_opts</source>
          <target state="translated">PassRegistry#initialize_scalar_opts</target>
        </trans-unit>
        <trans-unit id="606ee4c4deb606b739aeadbccedad3c8b5adf8b2" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_target</source>
          <target state="translated">PassRegistry#initialize_target</target>
        </trans-unit>
        <trans-unit id="856764e425b874b4686e8f211b0190d508ed3f5d" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_transform_utils</source>
          <target state="translated">PassRegistry#initialize_transform_utils</target>
        </trans-unit>
        <trans-unit id="359be9880510f4dba83d79b0af864c03640aa5b7" translate="yes" xml:space="preserve">
          <source>PassRegistry#initialize_vectorization</source>
          <target state="translated">PassRegistry#initialize_vectorization</target>
        </trans-unit>
        <trans-unit id="4d7194bf82daddb87870ec4ab65e3989c6ec35d9" translate="yes" xml:space="preserve">
          <source>PassRegistry#to_unsafe</source>
          <target state="translated">PassRegistry#to_unsafe</target>
        </trans-unit>
        <trans-unit id="0e546d83a86ad3979b6bdd1bb3f2f3ae41ab737b" translate="yes" xml:space="preserve">
          <source>PassRegistry.instance</source>
          <target state="translated">PassRegistry.instance</target>
        </trans-unit>
        <trans-unit id="dc8c0104b3a3621810e62f8983830fd1d4e32987" translate="yes" xml:space="preserve">
          <source>PassRegistry.new</source>
          <target state="translated">PassRegistry.new</target>
        </trans-unit>
        <trans-unit id="12b2219ce48b700faa06dd5bf097e9f4660884f8" translate="yes" xml:space="preserve">
          <source>Passes elements to the block until the block returns &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, then stops iterating and returns an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; of all prior elements.</source>
          <target state="translated">블록이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 때까지 요소를 블록에 전달한 다음 반복을 중지하고 모든 이전 요소 의 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a337ffbd94ac99a23b1ac720da1e34a8b3932635" translate="yes" xml:space="preserve">
          <source>Passing a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; to a C function, for example as a callback, is possible as long as the &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; isn't a closure. If it is, either a compile-time or runtime error will happen depending on whether the compiler can check this. The reason is that a &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; is internally represented as two void pointers, one having the function pointer and another the closure data. If just the function pointer is passed, the closure data will be missing at invocation time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 이 클로저가 아닌 한 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 을 C 함수 (예 : 콜백)에 전달하는 것이 가능합니다 . 이 경우 컴파일러에서이를 확인할 수 있는지 여부에 따라 컴파일 타임 또는 런타임 오류가 발생합니다. 그 이유는 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 가 내부적으로 두 개의 void 포인터로 표시되기 때문입니다 . 하나는 함수 포인터를 갖고 다른 하나는 클로저 데이터를 갖습니다. 함수 포인터 만 전달되면 호출시 클로저 데이터가 누락됩니다.</target>
        </trans-unit>
        <trans-unit id="f0691d5f54b9ced61df8368909e90676db18f0b2" translate="yes" xml:space="preserve">
          <source>Passing a Proc to a C function</source>
          <target state="translated">Proc을 C 함수에 전달</target>
        </trans-unit>
        <trans-unit id="7814c03b5c90904df222518706577efea224a175" translate="yes" xml:space="preserve">
          <source>Passing a closure to a C function</source>
          <target state="translated">C 함수에 클로저 전달</target>
        </trans-unit>
        <trans-unit id="29290fac52414bf68dc0b00754f7442bc4d0ec4e" translate="yes" xml:space="preserve">
          <source>Passing arguments to the flags (example: &lt;code&gt;-f filename.txt&lt;/code&gt;)</source>
          <target state="translated">플래그에 인수 전달 (예 : &lt;code&gt;-f filename.txt&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5d5d929fd128e118ec4a5f56a8eb6f96d2568288" translate="yes" xml:space="preserve">
          <source>Passing by value</source>
          <target state="translated">값으로 전달</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="5df7e02d85b64b62871c1840843314bacd48dc02" translate="yes" xml:space="preserve">
          <source>Path handling comes in different kinds depending on operating system:</source>
          <target state="translated">경로 처리는 운영 체제에 따라 다른 종류로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="dcee1130ad763a6a38ca585a1c7049dd02ebdc6e" translate="yes" xml:space="preserve">
          <source>Path#/</source>
          <target state="translated">Path#/</target>
        </trans-unit>
        <trans-unit id="91359e56e1b489716bd0c73da1a6f8f96ac70505" translate="yes" xml:space="preserve">
          <source>Path#join</source>
          <target state="translated">Path#join</target>
        </trans-unit>
        <trans-unit id="7d2be00931d29727622057d14e886b63b7586d65" translate="yes" xml:space="preserve">
          <source>Path#root</source>
          <target state="translated">Path#root</target>
        </trans-unit>
        <trans-unit id="58dcd18a6d607f43272b8f92022a31ca417f305f" translate="yes" xml:space="preserve">
          <source>Path#to_s</source>
          <target state="translated">Path#to_s</target>
        </trans-unit>
        <trans-unit id="f8790bef1749e881494abfdfe7936ebcb82065d6" translate="yes" xml:space="preserve">
          <source>Path.[]</source>
          <target state="translated">Path.[]</target>
        </trans-unit>
        <trans-unit id="53a8d8c33a3370a7f393de8bb5d16d08d68fe09c" translate="yes" xml:space="preserve">
          <source>Path.home</source>
          <target state="translated">Path.home</target>
        </trans-unit>
        <trans-unit id="f1ef33b239fc81b55935ab9f71829c58ae60719d" translate="yes" xml:space="preserve">
          <source>Path.new</source>
          <target state="translated">Path.new</target>
        </trans-unit>
        <trans-unit id="8f9d19d95a5619487f1de37d6577ed99cccbb0c1" translate="yes" xml:space="preserve">
          <source>Path::Error</source>
          <target state="translated">Path::Error</target>
        </trans-unit>
        <trans-unit id="3981bb4e6174daf02500c0abe1e69e27ac2989f4" translate="yes" xml:space="preserve">
          <source>Path::Kind</source>
          <target state="translated">Path::Kind</target>
        </trans-unit>
        <trans-unit id="2b24382f8e6776d571390b1bb56bf2c66ecc7dc1" translate="yes" xml:space="preserve">
          <source>Paths and generics</source>
          <target state="translated">경로와 제네릭</target>
        </trans-unit>
        <trans-unit id="9def4b467eddc3f3f0c7e3aa5c199c905f50658c" translate="yes" xml:space="preserve">
          <source>Pattern match.</source>
          <target state="translated">패턴 일치.</target>
        </trans-unit>
        <trans-unit id="546f913a30fb94d73dbb6d1671429332e4f7fd17" translate="yes" xml:space="preserve">
          <source>Pedantic error reporting</source>
          <target state="translated">Pedantic 오류보고</target>
        </trans-unit>
        <trans-unit id="c40c4330a408dd5eaba809d369fe058a86edf416" translate="yes" xml:space="preserve">
          <source>Peeks into &lt;code&gt;reader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reader&lt;/code&gt; 들여다 본다 .</target>
        </trans-unit>
        <trans-unit id="07e26fdbf0f2089ad33b8dc79745869f2085d40c" translate="yes" xml:space="preserve">
          <source>Peeks into this IO, if possible.</source>
          <target state="translated">가능하면이 IO를 들여다보십시오.</target>
        </trans-unit>
        <trans-unit id="6b6143a03dcb4535ada23637a4bcb7ba2f5d22ab" translate="yes" xml:space="preserve">
          <source>Per convention, the return type of a binary operator should be the type of the first operand (the receiver), so that &lt;code&gt;typeof(a &amp;lt;op&amp;gt; b) == typeof(a)&lt;/code&gt;. Otherwise the assignment operator (&lt;code&gt;a &amp;lt;op&amp;gt;= b&lt;/code&gt;) would unintentionally change the type of &lt;code&gt;a&lt;/code&gt;. There can be reasonable exceptions though. For example in the standard library the float division operator &lt;code&gt;/&lt;/code&gt; on integer types always returns &lt;code&gt;Float64&lt;/code&gt;, because the quotient must not be limited to the value range of integers.</source>
          <target state="translated">규칙에 따라 이항 연산자의 반환 유형은 첫 번째 피연산자 (수신자)의 유형이어야하므로 &lt;code&gt;typeof(a &amp;lt;op&amp;gt; b) == typeof(a)&lt;/code&gt; 입니다. 그렇지 않으면, 할당 연산자 ( &lt;code&gt;a &amp;lt;op&amp;gt;= b&lt;/code&gt; ) 실수의 유형을 변경할 것이다 &lt;code&gt;a&lt;/code&gt; . 하지만 합리적인 예외가있을 수 있습니다. 예를 들어 표준 라이브러리에서 float 나누기 연산자 &lt;code&gt;/&lt;/code&gt; on 정수 유형 은 몫이 정수 값 범위로 제한되지 않아야하기 때문에 항상 &lt;code&gt;Float64&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="936abd4e587b059d279c9193860b61635b618bb1" translate="yes" xml:space="preserve">
          <source>Percent Array Literals</source>
          <target state="translated">배열 리터럴 백분율</target>
        </trans-unit>
        <trans-unit id="1c5f7156b43a20a6efd3082b5edbfdd6cab2fa86" translate="yes" xml:space="preserve">
          <source>Percent regex literals</source>
          <target state="translated">정규 표현식 리터럴</target>
        </trans-unit>
        <trans-unit id="7bd09ecdc1324a196ccfa6d503a00a7714ff7c30" translate="yes" xml:space="preserve">
          <source>Percent string array literal</source>
          <target state="translated">문자열 배열 리터럴 백분율</target>
        </trans-unit>
        <trans-unit id="43c8c7348410365795961665886a4a234678d1cb" translate="yes" xml:space="preserve">
          <source>Percent string literals</source>
          <target state="translated">문자열 리터럴 백분율</target>
        </trans-unit>
        <trans-unit id="e2f553d1b5fe7581b04ce2b2cd2a9702a16c2fa3" translate="yes" xml:space="preserve">
          <source>Percent symbol array literal</source>
          <target state="translated">백분율 기호 배열 리터럴</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="bfbeb71ddd80cafaf19d693c341a20a8556bb956" translate="yes" xml:space="preserve">
          <source>Performing HTTP client requests with OAuth authentication</source>
          <target state="translated">OAuth 인증으로 HTTP 클라이언트 요청 수행</target>
        </trans-unit>
        <trans-unit id="24d5033fe817614b52603ba3911ea7747cdf6dc6" translate="yes" xml:space="preserve">
          <source>Performing HTTP client requests with OAuth2 authentication</source>
          <target state="translated">OAuth2 인증으로 HTTP 클라이언트 요청 수행</target>
        </trans-unit>
        <trans-unit id="f979fb02c47a52e7e92a42753add48171bfbb8dd" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value &amp;amp;= value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atomic_value &amp;amp;= value&lt;/code&gt; 수행 합니다 .</target>
        </trans-unit>
        <trans-unit id="418ed36e6f9d0b5ea8d926da1255f7c8f95360d6" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value &amp;amp;= value&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">&lt;code&gt;atomic_value &amp;amp;= value&lt;/code&gt; 수행 합니다 . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8371e054da91c5b480164267294bc893d3a1fbd3" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value += value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atomic_value += value&lt;/code&gt; 수행 합니다 .</target>
        </trans-unit>
        <trans-unit id="ca3056a4801f49660a90928093a28d7c62208e5b" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value += value&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">&lt;code&gt;atomic_value += value&lt;/code&gt; 수행 합니다 . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e2f5ee2cbd93bdf1aad38b0ab2004e717eaea7b" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value -= value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atomic_value -= value&lt;/code&gt; 수행 합니다 .</target>
        </trans-unit>
        <trans-unit id="8ffd1f51cc303a53989f29f19f5ce04b440c6eb2" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value -= value&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">&lt;code&gt;atomic_value -= value&lt;/code&gt; 수행 합니다 . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="86e2f308b0cee06d4ca59a1b2f379158c94272ef" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = max(atomic_value, value)&lt;/code&gt;.</source>
          <target state="translated">행한다는 &lt;code&gt;atomic_value = max(atomic_value, value)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd2036c7b4d44172a21b49ed64af5bfbd5221b5" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = max(atomic_value, value)&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">행한다는 &lt;code&gt;atomic_value = max(atomic_value, value)&lt;/code&gt; . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e84a67a0872caf2bf88fcc6e7a72518ac0fcc91a" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = min(atomic_value, value)&lt;/code&gt;.</source>
          <target state="translated">행한다 &lt;code&gt;atomic_value = min(atomic_value, value)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="198e9aa0b2a5763837fdb1d82d0425f4abcd3b36" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = min(atomic_value, value)&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">행한다 &lt;code&gt;atomic_value = min(atomic_value, value)&lt;/code&gt; . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="94f4dfee87bbfe05e0a86ca105894cbc7efa663e" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = ~(atomic_value &amp;amp; value)&lt;/code&gt;.</source>
          <target state="translated">수행합니다 &lt;code&gt;atomic_value = ~(atomic_value &amp;amp; value)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="739a6950cb821a79403c35130ee5fe1ddc99a284" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value = ~(atomic_value &amp;amp; value)&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">수행합니다 &lt;code&gt;atomic_value = ~(atomic_value &amp;amp; value)&lt;/code&gt; . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a7a143aa7abb911880bc4e2a972c85dbbf4ed57" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value ^= value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atomic_value ^= value&lt;/code&gt; 수행 합니다 .</target>
        </trans-unit>
        <trans-unit id="38aa31355eda6f2e2fc5fd23b2424920c3d98ac5" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value ^= value&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">&lt;code&gt;atomic_value ^= value&lt;/code&gt; 수행 합니다 . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c08db3606ee0c3777ccdc26b05efc52980f74a3" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value |= value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atomic_value |= value&lt;/code&gt; 수행 합니다 .</target>
        </trans-unit>
        <trans-unit id="ecb06eb7d58ac2e2e73352b162925e206c90d043" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;atomic_value |= value&lt;/code&gt;. Returns the old value.</source>
          <target state="translated">&lt;code&gt;atomic_value |= value&lt;/code&gt; 수행 합니다 . 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d016004473e0e58d7682856755147e33256bb813" translate="yes" xml:space="preserve">
          <source>Permission denied</source>
          <target state="translated">권한이 거부되었습니다</target>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="d31d0886edba4a5908b0f5f27505431eadd0df4d" translate="yes" xml:space="preserve">
          <source>Permissions#group_all?</source>
          <target state="translated">Permissions#group_all?</target>
        </trans-unit>
        <trans-unit id="1486ebf8a11c89c332cb4a748f6df5aff2ed00ba" translate="yes" xml:space="preserve">
          <source>Permissions#group_execute?</source>
          <target state="translated">Permissions#group_execute?</target>
        </trans-unit>
        <trans-unit id="eec8aee157a81420fbbee26c475fc89dc904f1d1" translate="yes" xml:space="preserve">
          <source>Permissions#group_read?</source>
          <target state="translated">Permissions#group_read?</target>
        </trans-unit>
        <trans-unit id="1a0d3ba8e7e727cb204f62aac3b89143af2487c5" translate="yes" xml:space="preserve">
          <source>Permissions#group_write?</source>
          <target state="translated">Permissions#group_write?</target>
        </trans-unit>
        <trans-unit id="3a03b36a2ff318bc3ff41d74d17bbf155cac91fb" translate="yes" xml:space="preserve">
          <source>Permissions#none?</source>
          <target state="translated">Permissions#none?</target>
        </trans-unit>
        <trans-unit id="ac359fef667ff94cc4fda4e3a93466bb2fe2f15f" translate="yes" xml:space="preserve">
          <source>Permissions#other_all?</source>
          <target state="translated">Permissions#other_all?</target>
        </trans-unit>
        <trans-unit id="6d705dac1cd4d0a86f567d5b1f195be0e057a80c" translate="yes" xml:space="preserve">
          <source>Permissions#other_execute?</source>
          <target state="translated">Permissions#other_execute?</target>
        </trans-unit>
        <trans-unit id="4955a40376c50e6d75d52570d8af35bb3ff6f45e" translate="yes" xml:space="preserve">
          <source>Permissions#other_read?</source>
          <target state="translated">Permissions#other_read?</target>
        </trans-unit>
        <trans-unit id="c95f1ab1a9427d4809d41f2d4a4406e390d33387" translate="yes" xml:space="preserve">
          <source>Permissions#other_write?</source>
          <target state="translated">Permissions#other_write?</target>
        </trans-unit>
        <trans-unit id="2bf01052090fbc9ffc87dfe92abc262c51b05a16" translate="yes" xml:space="preserve">
          <source>Permissions#owner_all?</source>
          <target state="translated">Permissions#owner_all?</target>
        </trans-unit>
        <trans-unit id="4091d89736dcceb71361875752f82b1ffce172e8" translate="yes" xml:space="preserve">
          <source>Permissions#owner_execute?</source>
          <target state="translated">Permissions#owner_execute?</target>
        </trans-unit>
        <trans-unit id="32b327b003aedf59016bd18a6ec2f6f03f07998b" translate="yes" xml:space="preserve">
          <source>Permissions#owner_read?</source>
          <target state="translated">Permissions#owner_read?</target>
        </trans-unit>
        <trans-unit id="2df076cccba9b0e1c9bb29dfbd2bdea3c45778ae" translate="yes" xml:space="preserve">
          <source>Permissions#owner_write?</source>
          <target state="translated">Permissions#owner_write?</target>
        </trans-unit>
        <trans-unit id="3b9dd6d48f780b04168ae2e56a6579d8d2f4f862" translate="yes" xml:space="preserve">
          <source>Permissions#to_s</source>
          <target state="translated">Permissions#to_s</target>
        </trans-unit>
        <trans-unit id="d2aeb504a36ab67c4d2098d8f3f5401bd3d02fb9" translate="yes" xml:space="preserve">
          <source>Permissions.new</source>
          <target state="translated">Permissions.new</target>
        </trans-unit>
        <trans-unit id="ca5bfac68ba5dfa60e4440bd8eacce16e3b90957" translate="yes" xml:space="preserve">
          <source>PhiTable</source>
          <target state="translated">PhiTable</target>
        </trans-unit>
        <trans-unit id="130c95b6b9b4be1a3fc37ddf72d7c8fd7b2215ce" translate="yes" xml:space="preserve">
          <source>PhiTable#add</source>
          <target state="translated">PhiTable#add</target>
        </trans-unit>
        <trans-unit id="d9ba1d77b7f0f14fd0212c098858f80784053ebc" translate="yes" xml:space="preserve">
          <source>PhiTable#blocks</source>
          <target state="translated">PhiTable#blocks</target>
        </trans-unit>
        <trans-unit id="941ba22a1602f0c3f40538fc78bfbb5bc576ff39" translate="yes" xml:space="preserve">
          <source>PhiTable#empty?</source>
          <target state="translated">PhiTable#empty?</target>
        </trans-unit>
        <trans-unit id="233ada7f5a421c00df53b4b2b5dfa2b212e16a6b" translate="yes" xml:space="preserve">
          <source>PhiTable#size</source>
          <target state="translated">PhiTable#size</target>
        </trans-unit>
        <trans-unit id="da26190f49f1c9168c1c0498701bfbf9b0ada738" translate="yes" xml:space="preserve">
          <source>PhiTable#values</source>
          <target state="translated">PhiTable#values</target>
        </trans-unit>
        <trans-unit id="29821305cf9e450de7cae7914b7a7273c134524f" translate="yes" xml:space="preserve">
          <source>PhiTable.new</source>
          <target state="translated">PhiTable.new</target>
        </trans-unit>
        <trans-unit id="7d0069ecaa14bb37aabd23c2b52988934072a6e3" translate="yes" xml:space="preserve">
          <source>Philip Wadler, A prettier printer, March 1998</source>
          <target state="translated">필립와 들러, 1998 년 3 월</target>
        </trans-unit>
        <trans-unit id="858e26268c9b3ac9b7d17e5e2f6fc5df7fd1d5d7" translate="yes" xml:space="preserve">
          <source>Pipe the IO so the parent process can read (or write) to the process IO through &lt;code&gt;#input&lt;/code&gt;, &lt;code&gt;#output&lt;/code&gt; or &lt;code&gt;#error&lt;/code&gt;.</source>
          <target state="translated">상위 프로세스가 &lt;code&gt;#input&lt;/code&gt; , &lt;code&gt;#output&lt;/code&gt; 또는 &lt;code&gt;#error&lt;/code&gt; 를 통해 프로세스 IO에 읽거나 쓸 수 있도록 IO를 파이프하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5df1e14fdba13b1a3f9690f736bcb2aac132e72" translate="yes" xml:space="preserve">
          <source>Pipelines</source>
          <target state="translated">Pipelines</target>
        </trans-unit>
        <trans-unit id="8ef57d28e73677c96993fd2b8445c1eec249cdff" translate="yes" xml:space="preserve">
          <source>Pitfalls</source>
          <target state="translated">Pitfalls</target>
        </trans-unit>
        <trans-unit id="2bdecea39dd93aa44ca6e4f3eccd152c0908c4aa" translate="yes" xml:space="preserve">
          <source>Places a shared advisory lock.</source>
          <target state="translated">공유 권고 잠금을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="da4e5e666539ec363ebe4f4b42abc5dbddee47e2" translate="yes" xml:space="preserve">
          <source>Places a shared advisory lock. More than one process may hold a shared lock for a given file at a given time. &lt;code&gt;&lt;a href=&quot;errno#EWOULDBLOCK&quot;&gt;Errno::EWOULDBLOCK&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and an existing exclusive lock is set.</source>
          <target state="translated">공유 권고 잠금을 설정합니다. 지정된 시간에 둘 이상의 프로세스가 지정된 파일에 대한 공유 잠금을 보유 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;errno#EWOULDBLOCK&quot;&gt;Errno::EWOULDBLOCK&lt;/a&gt;&lt;/code&gt; 은 &lt;em&gt;블로킹&lt;/em&gt; 이 &lt;code&gt;false&lt;/code&gt; 로 설정되고 기존 독점 잠금이 설정된 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bcf224429c59c911fea4714d29a96a549d2603c5" translate="yes" xml:space="preserve">
          <source>Places a shared advisory lock. More than one process may hold a shared lock for a given file at a given time. &lt;code&gt;&lt;a href=&quot;io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and an existing exclusive lock is set.</source>
          <target state="translated">공유 권고 잠금을 설정합니다. 둘 이상의 프로세스가 주어진 시간에 주어진 파일에 대해 공유 잠금을 보유 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; &lt;em&gt; 블로킹&lt;/em&gt; 이 &lt;code&gt;false&lt;/code&gt; 로 설정되고 기존 배타적 잠금이 설정된 경우 오류 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="764a8339368a175e346c7c64ff118d0da57fafec" translate="yes" xml:space="preserve">
          <source>Places a shared advisory lock. More than one process may hold a shared lock for a given file descriptor at a given time. &lt;code&gt;&lt;a href=&quot;error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and an existing exclusive lock is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb10532ab2cc04ffe97c89b4152c4bc52a72a389" translate="yes" xml:space="preserve">
          <source>Places an exclusive advisory lock.</source>
          <target state="translated">독점 자문 잠금 장치를 배치합니다.</target>
        </trans-unit>
        <trans-unit id="a72f858c9a5af9131bfc00c0d4848b4eb14e5e0b" translate="yes" xml:space="preserve">
          <source>Places an exclusive advisory lock. Only one process may hold an exclusive lock for a given file at a given time. &lt;code&gt;&lt;a href=&quot;errno#EWOULDBLOCK&quot;&gt;Errno::EWOULDBLOCK&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and any existing lock is set.</source>
          <target state="translated">독점 자문 잠금 장치를 배치합니다. 주어진 시간에 하나의 프로세스 만 주어진 파일에 대한 독점 잠금을 보유 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;errno#EWOULDBLOCK&quot;&gt;Errno::EWOULDBLOCK&lt;/a&gt;&lt;/code&gt; 은 &lt;em&gt;차단&lt;/em&gt; 이 &lt;code&gt;false&lt;/code&gt; 로 설정되고 기존 잠금이 설정된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bb2ae72c7ee5287ae023394503633b1eade08054" translate="yes" xml:space="preserve">
          <source>Places an exclusive advisory lock. Only one process may hold an exclusive lock for a given file at a given time. &lt;code&gt;&lt;a href=&quot;io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and any existing lock is set.</source>
          <target state="translated">독점 자문 잠금을 설정합니다. 주어진 시간에 하나의 프로세스 만이 주어진 파일에 대한 독점 잠금을 보유 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; &lt;em&gt; 블로킹&lt;/em&gt; 이 &lt;code&gt;false&lt;/code&gt; 로 설정되고 기존 잠금이 설정된 경우 오류 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="b2fbf06cbe9d47d2ae412fa6581a1cd0fe9ec151" translate="yes" xml:space="preserve">
          <source>Places an exclusive advisory lock. Only one process may hold an exclusive lock for a given file descriptor at a given time. &lt;code&gt;&lt;a href=&quot;error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; is raised if &lt;em&gt;blocking&lt;/em&gt; is set to &lt;code&gt;false&lt;/code&gt; and any existing lock is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933a284fbf86ef2c0e99679a660986b9ab159b1c" translate="yes" xml:space="preserve">
          <source>Platform-specific exit status code, which usually contains either the exit code or a termination signal.</source>
          <target state="translated">일반적으로 종료 코드 또는 종료 신호가 포함 된 플랫폼 별 종료 상태 코드.</target>
        </trans-unit>
        <trans-unit id="a9c2d1373e533cda49243cdf899e313af5cbdca7" translate="yes" xml:space="preserve">
          <source>Platform-specific exit status code, which usually contains either the exit code or a termination signal. The other &lt;code&gt;&lt;a href=&quot;status&quot;&gt;Process::Status&lt;/a&gt;&lt;/code&gt; methods extract the values from &lt;code&gt;&lt;a href=&quot;status#exit_status:Int32-instance-method&quot;&gt;#exit_status&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">일반적으로 종료 코드 또는 종료 신호가 포함 된 플랫폼 별 종료 상태 코드. 다른 &lt;code&gt;&lt;a href=&quot;status&quot;&gt;Process::Status&lt;/a&gt;&lt;/code&gt; 메소드는 &lt;code&gt;&lt;a href=&quot;status#exit_status:Int32-instance-method&quot;&gt;#exit_status&lt;/a&gt;&lt;/code&gt; 에서 값을 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="8e88835f68e4d0ccede3d152d08546e84e7efbca" translate="yes" xml:space="preserve">
          <source>Please note that the IO object yielded by &lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; is only valid until the block returns.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; 에 의해 생성 된 IO 객체는 블록이 반환 될 때까지만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="d5ea9ca45740e159c5965569aa2304e67be4b594" translate="yes" xml:space="preserve">
          <source>Please note that the IO object yielded by &lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;block)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; is only valid until the block returns.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;block)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; 로 생성 된 IO 객체는 블록이 반환 될 때까지만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="bcbd8e59fb0a130579b301220329e5a158acea5e" translate="yes" xml:space="preserve">
          <source>Please note that the IO object yielded to the block is only valid while the block is executing. The IO is closed as soon as the supplied block returns.</source>
          <target state="translated">블록에 생성 된 IO 개체는 블록이 실행되는 동안에 만 유효합니다. 제공된 블록이 반환 되 자마자 IO가 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="44c25ba6684309e293993e30377524b68e38c179" translate="yes" xml:space="preserve">
          <source>Please note that the scheme will only be used to identify if TLS should be used or not. Therefore, schemes apart from &lt;code&gt;wss&lt;/code&gt; and &lt;code&gt;https&lt;/code&gt; will be treated as the default which is &lt;code&gt;ws&lt;/code&gt;.</source>
          <target state="translated">이 체계는 TLS의 사용 여부를 식별하는 데만 사용됩니다. 따라서 &lt;code&gt;wss&lt;/code&gt; 및 &lt;code&gt;https&lt;/code&gt; 를 제외한 스킴 은 기본값 인 &lt;code&gt;ws&lt;/code&gt; 로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc5de071a8adc9ea913c6f9e5f0005a2d40cc14d" translate="yes" xml:space="preserve">
          <source>Pointer</source>
          <target state="translated">Pointer</target>
        </trans-unit>
        <trans-unit id="8ce16d5fb412148470ca855aa5e05aa5fa623e12" translate="yes" xml:space="preserve">
          <source>Pointer types (&lt;code&gt;Pointer(Int32)&lt;/code&gt;, which can also be written as &lt;code&gt;Int32*&lt;/code&gt;)</source>
          <target state="translated">포인터 유형 ( &lt;code&gt;Pointer(Int32)&lt;/code&gt; , &lt;code&gt;Int32*&lt;/code&gt; 로 쓸 수도 있음 )</target>
        </trans-unit>
        <trans-unit id="487ca11290045cb21415bdffdc1e17fc68112254" translate="yes" xml:space="preserve">
          <source>Pointer#+</source>
          <target state="translated">Pointer#+</target>
        </trans-unit>
        <trans-unit id="f25e16bd11dd3bc3f1e688b4a1f74e23aadd9cba" translate="yes" xml:space="preserve">
          <source>Pointer#-</source>
          <target state="translated">Pointer#-</target>
        </trans-unit>
        <trans-unit id="a202c934255cdfd47626a939c407a180dcfe25a8" translate="yes" xml:space="preserve">
          <source>Pointer#[]</source>
          <target state="translated">Pointer#[]</target>
        </trans-unit>
        <trans-unit id="83849a5dee08c1e2935d8841d9483db930ee8fb0" translate="yes" xml:space="preserve">
          <source>Pointer#[]=</source>
          <target state="translated">Pointer#[]=</target>
        </trans-unit>
        <trans-unit id="53cd248580ed2eea487e6ef19467d4be9e3a02b0" translate="yes" xml:space="preserve">
          <source>Pointer#hash</source>
          <target state="translated">Pointer#hash</target>
        </trans-unit>
        <trans-unit id="9c7db079dcee88c8069aafe915958e03151c095a" translate="yes" xml:space="preserve">
          <source>Pointer#map!</source>
          <target state="translated">Pointer#map!</target>
        </trans-unit>
        <trans-unit id="ec951e02b5712ada33f3bb27eea20820319de0f4" translate="yes" xml:space="preserve">
          <source>Pointer#swap</source>
          <target state="translated">Pointer#swap</target>
        </trans-unit>
        <trans-unit id="b44d703099083f67cfbcfe0c37ccc6de26bfa9f8" translate="yes" xml:space="preserve">
          <source>Pointer#to_s</source>
          <target state="translated">Pointer#to_s</target>
        </trans-unit>
        <trans-unit id="3e9ca7e7e2950ef598116227bd983461c30280ae" translate="yes" xml:space="preserve">
          <source>Pointer(T)</source>
          <target state="translated">Pointer(T)</target>
        </trans-unit>
        <trans-unit id="3d86b3895d708df5389e23dfea8b9171c7f5f036" translate="yes" xml:space="preserve">
          <source>Pointer.new</source>
          <target state="translated">Pointer.new</target>
        </trans-unit>
        <trans-unit id="b4c66b7f825f734359e3595a123822f64326b8c5" translate="yes" xml:space="preserve">
          <source>Pointer.null</source>
          <target state="translated">Pointer.null</target>
        </trans-unit>
        <trans-unit id="191c695407f8c2c3b6071be66b053c415fde09cc" translate="yes" xml:space="preserve">
          <source>Pointer::Appender(T)</source>
          <target state="translated">Pointer::Appender(T)</target>
        </trans-unit>
        <trans-unit id="b754d0a717dca040bdae801c6a0fd50075fb6a9b" translate="yes" xml:space="preserve">
          <source>Positional</source>
          <target state="translated">Positional</target>
        </trans-unit>
        <trans-unit id="06af95a7fc4db27ca7587a240e821b20e0cfb00a" translate="yes" xml:space="preserve">
          <source>Positional arguments can always be matched by name:</source>
          <target state="translated">위치 인수는 항상 이름으로 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4236057327e52f7afaddb6fa5b2f545e3ce2caf2" translate="yes" xml:space="preserve">
          <source>Positional parameters can always be matched by name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05074503cb245be656963fc7d5d3681822867c0" translate="yes" xml:space="preserve">
          <source>Positional values can be accessed at compile time via the &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Annotation.html#%5B%5D%28index%3ANumberLiteral%29%3AASTNode-instance-method&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; method; however, only one index can be accessed at a time.</source>
          <target state="translated">컴파일 시점에 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Annotation.html#%5B%5D%28index%3ANumberLiteral%29%3AASTNode-instance-method&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 위치 값에 액세스 할 수 있습니다 . 그러나 한 번에 하나의 인덱스에만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="668f933c2e05e55fc75dc11d6fc43af86781c7d3" translate="yes" xml:space="preserve">
          <source>Positive values result in a later time, negative values in an earlier time.</source>
          <target state="translated">양수 값은 나중에 발생하고 음수 값은 더 일찍 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0abd76a8799f7d121e69af0d27061eabe68e681d" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;code&gt;&lt;a href=&quot;samesite&quot;&gt;SameSite&lt;/a&gt;&lt;/code&gt; cookie as described in the &lt;a href=&quot;https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1.1&quot;&gt;Same-site Cookies Draft&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1.1&quot;&gt;동일 사이트 쿠키 초안에&lt;/a&gt; 설명 된 &lt;code&gt;&lt;a href=&quot;samesite&quot;&gt;SameSite&lt;/a&gt;&lt;/code&gt; 쿠키의 가능한 값입니다 .</target>
        </trans-unit>
        <trans-unit id="fbc6d8fb57432605b1cb6a23815ffbe9016f3a39" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; is minimum number of digits</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; , &lt;code&gt;o&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 의 정밀도 는 최소 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="8266839ee26dfbfc11ac53de20ea98bbac8ac238" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; is minimum number of digits:</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; , &lt;code&gt;o&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 의 정밀도 는 최소 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="0caf6ba5eb62ec3059f7ad27edc764ae79bb7981" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;e&lt;/code&gt; is number of digits after the decimal point.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 의 정밀도 는 소수점 뒤의 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="fd8de20f2e5dceee036c382bb4af2eaf7a396dd4" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;e&lt;/code&gt; is number of digits after the decimal point:</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 의 정밀도 는 소수점 뒤의 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="c4ceed8009a8d7164e6ac46fed5d852266ac242e" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;f&lt;/code&gt; is number of digits after the decimal point.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 를 위한 정밀도 는 소수점 뒤의 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="6b76bb36d183513a73496e5b8210202d13f9e52e" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;f&lt;/code&gt; is number of digits after the decimal point:</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 의 정밀도 는 소수점 뒤의 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="c1b57cb28d7763d08ecec3f26481017bbb0ebe4d" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;g&lt;/code&gt; is number of significant digits.</source>
          <target state="translated">&lt;code&gt;g&lt;/code&gt; 의 정밀도 는 유효 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="782f8c07b4840023a2375a8d8e87d68f9eec956b" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;g&lt;/code&gt; is number of significant digits:</source>
          <target state="translated">&lt;code&gt;g&lt;/code&gt; 의 정밀도 는 유효 자릿수입니다.</target>
        </trans-unit>
        <trans-unit id="46e03c89c05caf9b73a7b6dbed5fddeb1e248d09" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;s&lt;/code&gt; is maximum number of characters.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 의 정밀도 는 최대 문자 수입니다.</target>
        </trans-unit>
        <trans-unit id="a3345ef8f5a5d7d9332b07c05719d9be6463323d" translate="yes" xml:space="preserve">
          <source>Precision for &lt;code&gt;s&lt;/code&gt; is maximum number of characters:</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 의 정밀도 는 최대 문자 수입니다.</target>
        </trans-unit>
        <trans-unit id="53d0958c18948fe9e80a0e76de46a4a2eea432af" translate="yes" xml:space="preserve">
          <source>Prefer to use the dedicated &lt;code&gt;String.build&lt;/code&gt; optimized for building strings, instead of creating an intermediate &lt;code&gt;IO::Memory&lt;/code&gt; allocation.</source>
          <target state="translated">중간 &lt;code&gt;IO::Memory&lt;/code&gt; 할당 을 생성하는 대신 문자열 구축에 최적화 된 전용 &lt;code&gt;String.build&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d370c9a55177b997a6cba5c43c1148d8986a3824" translate="yes" xml:space="preserve">
          <source>Premature optimization</source>
          <target state="translated">조기 최적화</target>
        </trans-unit>
        <trans-unit id="5122ef0596e88a94a887ee5ced9bc8703ca21f78" translate="yes" xml:space="preserve">
          <source>Prepend multiple values.</source>
          <target state="translated">여러 값을 앞에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="292ad3b8aabf33f7d1b7166038802693ccd2735d" translate="yes" xml:space="preserve">
          <source>Prepend multiple values. The same as &lt;code&gt;&lt;a href=&quot;array#unshift(obj:T)-instance-method&quot;&gt;#unshift&lt;/a&gt;&lt;/code&gt;, but takes an arbitrary number of values to add to the array. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">여러 값을 앞에 추가하십시오. &lt;code&gt;&lt;a href=&quot;array#unshift(obj:T)-instance-method&quot;&gt;#unshift&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 배열에 추가하려면 임의의 수의 값을 사용합니다. &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="bb150cfbb169ed8c47b695048b009e2f1ad460a9" translate="yes" xml:space="preserve">
          <source>Prepend multiple values. The same as &lt;code&gt;&lt;a href=&quot;array#unshift(object:T)-instance-method&quot;&gt;#unshift&lt;/a&gt;&lt;/code&gt;, but takes an arbitrary number of values to add to the array. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47797766fc64ef786dfcb90790e892707fa4687d" translate="yes" xml:space="preserve">
          <source>Prepend.</source>
          <target state="translated">Prepend.</target>
        </trans-unit>
        <trans-unit id="3681202fda56e8131d0227c48ee859a5e5b502ec" translate="yes" xml:space="preserve">
          <source>Prepend. Adds &lt;em&gt;obj&lt;/em&gt; to the beginning of &lt;code&gt;self&lt;/code&gt;, given that the type of the value is &lt;em&gt;T&lt;/em&gt; (which might be a single type or a union of types). This method returns &lt;code&gt;self&lt;/code&gt;, so several calls can be chained. See &lt;code&gt;&lt;a href=&quot;array#shift-instance-method&quot;&gt;#shift&lt;/a&gt;&lt;/code&gt; for the opposite effect.</source>
          <target state="translated">접두사. 값의 유형이 &lt;em&gt;T&lt;/em&gt; (단일 유형 또는 유형의 조합 일 수 있음) 인 경우 &lt;em&gt;obj&lt;/em&gt; 를 &lt;code&gt;self&lt;/code&gt; 시작 부분에 추가합니다 . 이 메소드는 &lt;code&gt;self&lt;/code&gt; 를 리턴 하므로 여러 호출을 연결할 수 있습니다. 반대 효과는 &lt;code&gt;&lt;a href=&quot;array#shift-instance-method&quot;&gt;#shift&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cfb01c9ec818d169ede069d4a05400b4d8322880" translate="yes" xml:space="preserve">
          <source>Prepend. Adds &lt;em&gt;object&lt;/em&gt; to the beginning of &lt;code&gt;self&lt;/code&gt;, given that the type of the value is &lt;em&gt;T&lt;/em&gt; (which might be a single type or a union of types). This method returns &lt;code&gt;self&lt;/code&gt;, so several calls can be chained. See &lt;code&gt;&lt;a href=&quot;array#shift-instance-method&quot;&gt;#shift&lt;/a&gt;&lt;/code&gt; for the opposite effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1b963bf3aab05b999b961bb15d95056a87aa47" translate="yes" xml:space="preserve">
          <source>Prerelease</source>
          <target state="translated">Prerelease</target>
        </trans-unit>
        <trans-unit id="fe2d465eaeed8a6a770588fad91f04afcb76e7b1" translate="yes" xml:space="preserve">
          <source>Prerelease#&amp;lt;=&amp;gt;</source>
          <target state="translated">Prerelease#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0913145744269b0477050a5224c52e251336dabf" translate="yes" xml:space="preserve">
          <source>Prerelease#identifiers</source>
          <target state="translated">Prerelease#identifiers</target>
        </trans-unit>
        <trans-unit id="71da1ee069aaf755f5a4c032991a4feb703ba319" translate="yes" xml:space="preserve">
          <source>Prerelease#to_s</source>
          <target state="translated">Prerelease#to_s</target>
        </trans-unit>
        <trans-unit id="34b13d9e446d7bf517e204eadfb3cc64351a5fe6" translate="yes" xml:space="preserve">
          <source>Prerelease.new</source>
          <target state="translated">Prerelease.new</target>
        </trans-unit>
        <trans-unit id="a3baea6dc4b18d63b7cbf9e42e2e42f4b3631c44" translate="yes" xml:space="preserve">
          <source>Prerelease.parse</source>
          <target state="translated">Prerelease.parse</target>
        </trans-unit>
        <trans-unit id="066e4be36849229aabc0fc44726a289d9a9ec84b" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;code&gt;self&lt;/code&gt; into the given printer.</source>
          <target state="translated">주어진 프린터로 &lt;code&gt;self&lt;/code&gt; 인쇄 됩니다.</target>
        </trans-unit>
        <trans-unit id="810f9c7b5fdc7ce5661c45426eab7e8815a7ad1e" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;obj&lt;/em&gt; into &lt;em&gt;io&lt;/em&gt; with the given &lt;em&gt;width&lt;/em&gt; as a limit and starting with the given &lt;em&gt;indent&lt;/em&gt;ation.</source>
          <target state="translated">Pretty 는 주어진 &lt;em&gt;너비&lt;/em&gt; 를 제한으로 주어진 &lt;em&gt;들여 쓰기로&lt;/em&gt; 시작하여 &lt;em&gt;obj&lt;/em&gt; 를 &lt;em&gt;io&lt;/em&gt; 로 인쇄합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecdd85425669134af93af6a41722c91bbb4f0ad3" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline.</source>
          <target state="translated">Pretty는 &lt;em&gt;오브젝트&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 인쇄 한 다음 줄 바꾸기 를 인쇄 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ac404a4766904fff7dbfb4a174b6a493b82e063b" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline. Returns &lt;em&gt;object&lt;/em&gt;.</source>
          <target state="translated">Pretty는 &lt;em&gt;오브젝트&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 인쇄 한 다음 줄 바꾸기 를 인쇄 &lt;em&gt;합니다&lt;/em&gt; . 반환 &lt;em&gt;객체&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="41d7fabde8a529efbc3f27a505e61c79f9440f3c" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">Pretty는 &lt;em&gt;객체&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 인쇄 한 다음 줄 바꿈을합니다.</target>
        </trans-unit>
        <trans-unit id="cfd92136b0f1d7338743166dbe8c436021d98adc" translate="yes" xml:space="preserve">
          <source>Pretty prints &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">Pretty는 &lt;em&gt;객체&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 인쇄 한 다음 줄 바꿈을합니다. &lt;em&gt;객체를&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4050ab679ddb218baf72c3cb48f3c31ddead9af3" translate="yes" xml:space="preserve">
          <source>Pretty prints each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">예쁜에있는 각 개체 인쇄 &lt;em&gt;목적&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 줄 바꿈 다음을.</target>
        </trans-unit>
        <trans-unit id="e0f159f8c144e548699eeac1944bdc1b3ebf2e20" translate="yes" xml:space="preserve">
          <source>Pretty prints each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">예쁜에있는 각 개체 인쇄 &lt;em&gt;목적&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 줄 바꿈 다음을. &lt;em&gt;객체를&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0fa6dda302fe6a1dcd8ef7c8d56240c004394d20" translate="yes" xml:space="preserve">
          <source>Pretty prints this number as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; in a human-readable format.</source>
          <target state="translated">이 숫자 는 사람이 읽을 수있는 형식으로 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 로 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="63f0e8401001d5c70aacba0a633b4d5bd5ef6e4e" translate="yes" xml:space="preserve">
          <source>PrettyPrint</source>
          <target state="translated">PrettyPrint</target>
        </trans-unit>
        <trans-unit id="5d2d8b188c0068153c7e27daf1a5fd422f7ae88f" translate="yes" xml:space="preserve">
          <source>PrettyPrint#list</source>
          <target state="translated">PrettyPrint#list</target>
        </trans-unit>
        <trans-unit id="6d8346e47b6ff89914cf7423979eb0974c2cdea9" translate="yes" xml:space="preserve">
          <source>PrettyPrint#nest</source>
          <target state="translated">PrettyPrint#nest</target>
        </trans-unit>
        <trans-unit id="7149cfa2f29a1fb76fc106a518c20d21e357a3ff" translate="yes" xml:space="preserve">
          <source>PrettyPrint#text</source>
          <target state="translated">PrettyPrint#text</target>
        </trans-unit>
        <trans-unit id="ffb21df1f44b0bcb7fc8dcc281b759275f95c299" translate="yes" xml:space="preserve">
          <source>PrettyPrint.new</source>
          <target state="translated">PrettyPrint.new</target>
        </trans-unit>
        <trans-unit id="cf882593a7c46e19ffe578a8a66ec9419d8f0415" translate="yes" xml:space="preserve">
          <source>Prevents the cookie from being sent by the browser in all cross-site browsing contexts.</source>
          <target state="translated">모든 사이트 간 브라우징 컨텍스트에서 브라우저가 쿠키를 보내지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="2cadb737a3c128ae8bea9f580dfb32f139a93360" translate="yes" xml:space="preserve">
          <source>Previous owner died</source>
          <target state="translated">이전 소유자가 사망</target>
        </trans-unit>
        <trans-unit id="41519a083509ba68859bad445e1da142cb529a0c" translate="yes" xml:space="preserve">
          <source>Primitive</source>
          <target state="translated">Primitive</target>
        </trans-unit>
        <trans-unit id="e9d98e86258bf3dd4e3e0d74504fab50ddd951ba" translate="yes" xml:space="preserve">
          <source>Primitive types (&lt;code&gt;Int8&lt;/code&gt;, ..., &lt;code&gt;Int64&lt;/code&gt;, &lt;code&gt;UInt8&lt;/code&gt;, ..., &lt;code&gt;UInt64&lt;/code&gt;, &lt;code&gt;Float32&lt;/code&gt;, &lt;code&gt;Float64&lt;/code&gt;)</source>
          <target state="translated">기본 유형 ( &lt;code&gt;Int8&lt;/code&gt; , ..., &lt;code&gt;Int64&lt;/code&gt; , &lt;code&gt;UInt8&lt;/code&gt; , ..., &lt;code&gt;UInt64&lt;/code&gt; , &lt;code&gt;Float32&lt;/code&gt; , &lt;code&gt;Float64&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cf98b684014c2754616ec7c0a2d70e99dc2cc3a6" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;&lt;a href=&quot;location#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;location#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;io로&lt;/em&gt; 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="1dc8fd85430f20c5cc0e511e713fa07acb8258a1" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt; in the format &lt;code&gt;+HH:mm:ss&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+HH:mm:ss&lt;/code&gt; 형식으로 &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;io&lt;/em&gt; 로 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="16b087a3cd716469fc05d93daab4a86d9f2825f1" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt; in the format &lt;code&gt;+HH:mm:ss&lt;/code&gt;. When &lt;em&gt;with_colon&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, the format is &lt;code&gt;+HHmmss&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+HH:mm:ss&lt;/code&gt; 형식으로 &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;io&lt;/em&gt; 로 인쇄 합니다. 때 &lt;em&gt;with_colon이&lt;/em&gt; 있다 &lt;code&gt;false&lt;/code&gt; , 형식은 &lt;code&gt;+HHmmss&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e82254702fdfedd4b5d12adc9859b1711ae3d779" translate="yes" xml:space="preserve">
          <source>Prints &lt;em&gt;utime&lt;/em&gt;, &lt;em&gt;stime&lt;/em&gt;, &lt;em&gt;total&lt;/em&gt; and &lt;em&gt;real&lt;/em&gt; to the given IO.</source>
          <target state="translated">주어진 IO에 &lt;em&gt;utime&lt;/em&gt; , &lt;em&gt;stime&lt;/em&gt; , &lt;em&gt;total&lt;/em&gt; 및 &lt;em&gt;real&lt;/em&gt; 을 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="f81796ee99de4353cc0546f79e81988ae8588dd1" translate="yes" xml:space="preserve">
          <source>Prints AST nodes at compile-time.</source>
          <target state="translated">컴파일 타임에 AST 노드를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="ffa25748a98ab14e00b4c86f9a1dad18748cb256" translate="yes" xml:space="preserve">
          <source>Prints AST nodes at compile-time. Useful for debugging macros.</source>
          <target state="translated">컴파일 타임에 AST 노드를 인쇄합니다. 매크로 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="4442a8e06f019ce0fe1b5e2a91574272bef6a69d" translate="yes" xml:space="preserve">
          <source>Prints a formatted string to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">형식화 된 문자열을 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="d6678afa6175596e20f8ce8efacf671d5d83853f" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their inspected values.</source>
          <target state="translated">검사 된 값과 함께 일련의 표현식을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="4daa35724e84da3fabb8eede2e1ccecf4cc0dc64" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their inspected values. Useful for print style debugging.</source>
          <target state="translated">검사 된 값과 함께 일련의 표현식을 인쇄합니다. 인쇄 스타일 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="90a23b02aead62c4b14579a2c589acf5b0154902" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their pretty printed values.</source>
          <target state="translated">인쇄 된 값과 함께 일련의 표현식을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="d939a25a41794cd9477528551516834365ae3eeb" translate="yes" xml:space="preserve">
          <source>Prints a series of expressions together with their pretty printed values. Useful for print style debugging.</source>
          <target state="translated">인쇄 된 값과 함께 일련의 표현식을 인쇄합니다. 인쇄 스타일 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e9faa603979bcf32f920bc98631b6384c014dd24" translate="yes" xml:space="preserve">
          <source>Prints macro expressions together with their values at compile-time.</source>
          <target state="translated">컴파일 타임에 매크로 표현식을 해당 값과 함께 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="b0fbda09bc607fa1173d3b77f5fa2034653fcc2d" translate="yes" xml:space="preserve">
          <source>Prints macro expressions together with their values at compile-time. Useful for debugging macros.</source>
          <target state="translated">컴파일 타임에 매크로 표현식을 해당 값과 함께 인쇄합니다. 매크로 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0ca380ef8be9e19f606842adc1f948620239c949" translate="yes" xml:space="preserve">
          <source>Prints objects to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; and then invokes &lt;code&gt;STDOUT.flush&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 오브젝트를 인쇄 한 다음 &lt;code&gt;STDOUT.flush&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b81d7bb2f4a18271c83bf485aacbc01e90f8f338" translate="yes" xml:space="preserve">
          <source>Prints objects to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, each followed by a newline.</source>
          <target state="translated">오브젝트를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 인쇄합니다 . 각 행은 개행입니다.</target>
        </trans-unit>
        <trans-unit id="c31eda2caebe502a489c03df6aa4599d13c4c2f3" translate="yes" xml:space="preserve">
          <source>Prints the version of the shard.</source>
          <target state="translated">샤드 버전을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="ca028797daf1ad8373fee69e45a27aa8413bc581" translate="yes" xml:space="preserve">
          <source>Prints this &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;io로&lt;/em&gt; 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="37832ecaee83b9438fc02971c49ba03ea16be563" translate="yes" xml:space="preserve">
          <source>Prints this &lt;code&gt;&lt;a href=&quot;zone&quot;&gt;Zone&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;zone&quot;&gt;Zone&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;io로&lt;/em&gt; 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="eb19c703a6c1d6b58b4e67572ddf2be104096977" translate="yes" xml:space="preserve">
          <source>Prints this integer as a binary value in a human-readable format using a &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat&quot;&gt;BinaryPrefixFormat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;int/binaryprefixformat&quot;&gt;BinaryPrefixFormat&lt;/a&gt;&lt;/code&gt; 을 사용하여이 정수를 사람이 읽을 수있는 형식으로 이진 값으로 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="19e1abe61ff3a87641f002d60ba74def56e5b1f2" translate="yes" xml:space="preserve">
          <source>Prints this number as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using a customizable format.</source>
          <target state="translated">사용자 정의 가능한 형식을 사용 하여이 숫자를 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 로 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="a6a892b1ce5f281a6db6b9e1ec5bbcabecbf74ed" translate="yes" xml:space="preserve">
          <source>Prints to &lt;em&gt;io&lt;/em&gt; all the elements in the collection, separated by &lt;em&gt;separator&lt;/em&gt;.</source>
          <target state="translated">인화하기 &lt;em&gt;io를&lt;/em&gt; 의해 분리 된 컬렉션 내의 모든 요소, &lt;em&gt;세퍼레이터&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="64236822b724b100865451f82b4f11644a30e98a" translate="yes" xml:space="preserve">
          <source>Prints to &lt;em&gt;io&lt;/em&gt; the concatenation of the elements, with the possibility of controlling how the printing is done via a block.</source>
          <target state="translated">인화하기 &lt;em&gt;io를&lt;/em&gt; 기록이 블록을 통해 수행되는 방법을 제어하는 가능성으로 요소의 연결한다.</target>
        </trans-unit>
        <trans-unit id="53bea7b855c92761fc53db7e7e657329722ff553" translate="yes" xml:space="preserve">
          <source>Prints:</source>
          <target state="translated">Prints:</target>
        </trans-unit>
        <trans-unit id="6ef9846296a3401146329564868967f0ac86319d" translate="yes" xml:space="preserve">
          <source>Private methods</source>
          <target state="translated">개인 방법</target>
        </trans-unit>
        <trans-unit id="d32fcb562aa7135148d659e8e2030a7c4ace4c7e" translate="yes" xml:space="preserve">
          <source>Private top-level methods</source>
          <target state="translated">개인 최상위 방법</target>
        </trans-unit>
        <trans-unit id="d432692b4b93c02901318febb8316fbd3365fad5" translate="yes" xml:space="preserve">
          <source>Private top-level types</source>
          <target state="translated">개인 최상위 유형</target>
        </trans-unit>
        <trans-unit id="f3e162337e6cd11e5ada376d6d20b6932d6def7e" translate="yes" xml:space="preserve">
          <source>Private types</source>
          <target state="translated">개인 유형</target>
        </trans-unit>
        <trans-unit id="bc920d708c77ea3169bf5f95d4a05af47bb5bb85" translate="yes" xml:space="preserve">
          <source>Private types can only be referenced inside the namespace where they are defined, and never be fully qualified.</source>
          <target state="translated">개인 형식은 정의 된 네임 스페이스 내에서만 참조 할 수 있으며 정규화 된 형식은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f51d4e0dcedaa3fc409bdb1e06a21dc4a5fd577e" translate="yes" xml:space="preserve">
          <source>Proc</source>
          <target state="translated">Proc</target>
        </trans-unit>
        <trans-unit id="35136705c0a356fcedc56c249710657d43e63977" translate="yes" xml:space="preserve">
          <source>Proc literal</source>
          <target state="translated">Proc 리터럴</target>
        </trans-unit>
        <trans-unit id="1ac72ddd2f12c622c0b9b50633603138184176d8" translate="yes" xml:space="preserve">
          <source>Proc#==</source>
          <target state="translated">Proc#==</target>
        </trans-unit>
        <trans-unit id="f9101c6ca25b9393601df537b73f897cd2deec18" translate="yes" xml:space="preserve">
          <source>Proc#===</source>
          <target state="translated">Proc#===</target>
        </trans-unit>
        <trans-unit id="b23f9f3c6b9d00aa72bb29a85b2dcaefa99b940b" translate="yes" xml:space="preserve">
          <source>Proc#call</source>
          <target state="translated">Proc#call</target>
        </trans-unit>
        <trans-unit id="f53974376558e032de60a88ee681a112c19e11bb" translate="yes" xml:space="preserve">
          <source>Proc#hash</source>
          <target state="translated">Proc#hash</target>
        </trans-unit>
        <trans-unit id="b30e69ee4425913e6c021c3ea4f03e20d536f5cc" translate="yes" xml:space="preserve">
          <source>Proc#to_s</source>
          <target state="translated">Proc#to_s</target>
        </trans-unit>
        <trans-unit id="4de89bff120da227a86f76eed9853784ebb2460a" translate="yes" xml:space="preserve">
          <source>Proc(*T, R)</source>
          <target state="translated">Proc (* T, R)</target>
        </trans-unit>
        <trans-unit id="a02d1ddd5d4f9234960d1968f9d92c37eb0c6e2d" translate="yes" xml:space="preserve">
          <source>Proc.new</source>
          <target state="translated">Proc.new</target>
        </trans-unit>
        <trans-unit id="12f4c13a6a06f999cc56eb966c94f71ef2658a3f" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="translated">Process</target>
        </trans-unit>
        <trans-unit id="383b318db7b487794fb7aa9222053bd9affcb4df" translate="yes" xml:space="preserve">
          <source>Process#kill</source>
          <target state="translated">Process#kill</target>
        </trans-unit>
        <trans-unit id="1a530001904d210754fada35e7bce64f3fa5bef3" translate="yes" xml:space="preserve">
          <source>Process#pid</source>
          <target state="translated">Process#pid</target>
        </trans-unit>
        <trans-unit id="aa5bfbe10c73282e1a4fa7f13a4c35ffd401b942" translate="yes" xml:space="preserve">
          <source>Process#wait</source>
          <target state="translated">Process#wait</target>
        </trans-unit>
        <trans-unit id="afb63622bc87f37676dbb40a96d56b65892024d3" translate="yes" xml:space="preserve">
          <source>Process.exec</source>
          <target state="translated">Process.exec</target>
        </trans-unit>
        <trans-unit id="1b94b3b4bfe9511566a773c8f00848dcff1d066e" translate="yes" xml:space="preserve">
          <source>Process.exit</source>
          <target state="translated">Process.exit</target>
        </trans-unit>
        <trans-unit id="fa35a07ac4dbe154186c2a9507bcd6f37d6327e6" translate="yes" xml:space="preserve">
          <source>Process.fork</source>
          <target state="translated">Process.fork</target>
        </trans-unit>
        <trans-unit id="bb5dfd440db593f131efb98f26468b00c5de6272" translate="yes" xml:space="preserve">
          <source>Process.kill</source>
          <target state="translated">Process.kill</target>
        </trans-unit>
        <trans-unit id="77c08116f513915037db9e40f9addca92531249e" translate="yes" xml:space="preserve">
          <source>Process.new</source>
          <target state="translated">Process.new</target>
        </trans-unit>
        <trans-unit id="280b18dd02909e4a555bc55bd08857d037042b71" translate="yes" xml:space="preserve">
          <source>Process.pgid</source>
          <target state="translated">Process.pgid</target>
        </trans-unit>
        <trans-unit id="3d399f934ccb8ca1c8941c9a5af7f2a597d5d02b" translate="yes" xml:space="preserve">
          <source>Process.pid</source>
          <target state="translated">Process.pid</target>
        </trans-unit>
        <trans-unit id="2781a88f46ebef9af84f652185e502f41f66d5e3" translate="yes" xml:space="preserve">
          <source>Process.ppid</source>
          <target state="translated">Process.ppid</target>
        </trans-unit>
        <trans-unit id="afc0d296314520ab150ef6b9a1f2ee9a91d2bc77" translate="yes" xml:space="preserve">
          <source>Process.run</source>
          <target state="translated">Process.run</target>
        </trans-unit>
        <trans-unit id="355606df5215f8cc939aab9f727ca0819a18aa95" translate="yes" xml:space="preserve">
          <source>Process::Env</source>
          <target state="translated">Process::Env</target>
        </trans-unit>
        <trans-unit id="86286d53df64363d41fd13c2734b85466d2e4b7f" translate="yes" xml:space="preserve">
          <source>Process::Status</source>
          <target state="translated">Process::Status</target>
        </trans-unit>
        <trans-unit id="7383c2c96194e110ab989d138d5e3beb60debf2f" translate="yes" xml:space="preserve">
          <source>Process::Stdio</source>
          <target state="translated">Process::Stdio</target>
        </trans-unit>
        <trans-unit id="43493fe729b92940a3c17f3be7869d7b014ab986" translate="yes" xml:space="preserve">
          <source>Process::Tms</source>
          <target state="translated">Process::Tms</target>
        </trans-unit>
        <trans-unit id="960e8fddc698625d55770887235e931f448d8d54" translate="yes" xml:space="preserve">
          <source>Produces:</source>
          <target state="translated">Produces:</target>
        </trans-unit>
        <trans-unit id="24612fc941f4c5f9ebbcd30e4be422121b387494" translate="yes" xml:space="preserve">
          <source>ProfStats</source>
          <target state="translated">ProfStats</target>
        </trans-unit>
        <trans-unit id="bd02098e02e5408c41e8b9e01c7ed935e3ff94b6" translate="yes" xml:space="preserve">
          <source>ProfStats#bytes_before_gc</source>
          <target state="translated">ProfStats#bytes_before_gc</target>
        </trans-unit>
        <trans-unit id="b1832b92513c8017f7a536a31be5615ecdbe75a1" translate="yes" xml:space="preserve">
          <source>ProfStats#bytes_reclaimed_since_gc</source>
          <target state="translated">ProfStats#bytes_reclaimed_since_gc</target>
        </trans-unit>
        <trans-unit id="267857b9e39649f33095c6caa4dfaa04af7479af" translate="yes" xml:space="preserve">
          <source>ProfStats#bytes_since_gc</source>
          <target state="translated">ProfStats#bytes_since_gc</target>
        </trans-unit>
        <trans-unit id="c05c6721db5f5099aac4b1b0b74ec35fbc62429d" translate="yes" xml:space="preserve">
          <source>ProfStats#clone</source>
          <target state="translated">ProfStats#clone</target>
        </trans-unit>
        <trans-unit id="4d2b63af57f9faed5dfab62f481558d651ef60db" translate="yes" xml:space="preserve">
          <source>ProfStats#copy_with</source>
          <target state="translated">ProfStats#copy_with</target>
        </trans-unit>
        <trans-unit id="67c719d507c68eb2ce2070082dfb327f64fe5aec" translate="yes" xml:space="preserve">
          <source>ProfStats#free_bytes</source>
          <target state="translated">ProfStats#free_bytes</target>
        </trans-unit>
        <trans-unit id="afca28621fc568227f9aa2291371b1b0a8b75e92" translate="yes" xml:space="preserve">
          <source>ProfStats#gc_no</source>
          <target state="translated">ProfStats#gc_no</target>
        </trans-unit>
        <trans-unit id="31fd2f1039b8bb47269cd4a995456dd0ecdff997" translate="yes" xml:space="preserve">
          <source>ProfStats#heap_size</source>
          <target state="translated">ProfStats#heap_size</target>
        </trans-unit>
        <trans-unit id="52700ca145b34afed252827d89d77e450d6d6656" translate="yes" xml:space="preserve">
          <source>ProfStats#markers_m1</source>
          <target state="translated">ProfStats#markers_m1</target>
        </trans-unit>
        <trans-unit id="b80f9c7620d0e4245dc8e27096b99132b56d9be3" translate="yes" xml:space="preserve">
          <source>ProfStats#non_gc_bytes</source>
          <target state="translated">ProfStats#non_gc_bytes</target>
        </trans-unit>
        <trans-unit id="c98113ae10fea527e858b41e04bd7d23dd0f707a" translate="yes" xml:space="preserve">
          <source>ProfStats#reclaimed_bytes_before_gc</source>
          <target state="translated">ProfStats#reclaimed_bytes_before_gc</target>
        </trans-unit>
        <trans-unit id="6ef03d42c0f6b3a027893361bebbfc02820b281c" translate="yes" xml:space="preserve">
          <source>ProfStats#unmapped_bytes</source>
          <target state="translated">ProfStats#unmapped_bytes</target>
        </trans-unit>
        <trans-unit id="b33fc260bb78bad24dd4b22beb32a37ee3c8f76b" translate="yes" xml:space="preserve">
          <source>ProfStats.new</source>
          <target state="translated">ProfStats.new</target>
        </trans-unit>
        <trans-unit id="c6162025e9bb9873eeeccdde168e74f14b65c715" translate="yes" xml:space="preserve">
          <source>Programming Command Line Interface applications (CLI applications) is one of the most entertaining tasks a developer may do. So let&amp;rsquo;s have some fun building our first CLI application in Crystal.</source>
          <target state="translated">프로그래밍 명령 줄 인터페이스 애플리케이션 (CLI 애플리케이션)은 개발자가 할 수있는 가장 재미있는 작업 중 하나입니다. 이제 Crystal에서 첫 번째 CLI 애플리케이션을 재미있게 만들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="1cb0bee5478facc7715136ce6ca34b0fe11136cb" translate="yes" xml:space="preserve">
          <source>Project Status</source>
          <target state="translated">프로젝트 상태</target>
        </trans-unit>
        <trans-unit id="d8b93b59652591cda5649f3f72564d0641579593" translate="yes" xml:space="preserve">
          <source>Propagates to &lt;code&gt;&lt;a href=&quot;server#wrapped:::Socket::Server-instance-method&quot;&gt;#wrapped&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;sync_close&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">전파의 정보는 다음의 제품에 &lt;code&gt;&lt;a href=&quot;server#wrapped:::Socket::Server-instance-method&quot;&gt;#wrapped&lt;/a&gt;&lt;/code&gt; 경우 &lt;code&gt;sync_close&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="244e149a0aac1ed57a66bb43202c8948debe38a2" translate="yes" xml:space="preserve">
          <source>Protected methods</source>
          <target state="translated">보호 된 방법</target>
        </trans-unit>
        <trans-unit id="0f8cc4f34d7f062324d03aa0aea031c22c11c1c9" translate="yes" xml:space="preserve">
          <source>Protection</source>
          <target state="translated">Protection</target>
        </trans-unit>
        <trans-unit id="bd744fb4db62a09ed3f7baf0597942bd79a739ed" translate="yes" xml:space="preserve">
          <source>Protection#checked?</source>
          <target state="translated">Protection#checked?</target>
        </trans-unit>
        <trans-unit id="6cc08b0b1f203a6669082572f6f48e606eab9b41" translate="yes" xml:space="preserve">
          <source>Protection#reentrant?</source>
          <target state="translated">Protection#reentrant?</target>
        </trans-unit>
        <trans-unit id="fc7baaa0eaea5e66eb4e27be61b42fb382b146e5" translate="yes" xml:space="preserve">
          <source>Protection#unchecked?</source>
          <target state="translated">Protection#unchecked?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
