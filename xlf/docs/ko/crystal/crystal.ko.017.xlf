<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="3bad9a34cf83acc80c470c091ee02576ccc660da" translate="yes" xml:space="preserve">
          <source>MatchData#byte_end</source>
          <target state="translated">MatchData#byte_end</target>
        </trans-unit>
        <trans-unit id="20693a69696b56d3b113736f231df16cdfb0f072" translate="yes" xml:space="preserve">
          <source>MatchData#captures</source>
          <target state="translated">MatchData#captures</target>
        </trans-unit>
        <trans-unit id="e7bd5822fa748b3f17640cde4b42f8557fd173c1" translate="yes" xml:space="preserve">
          <source>MatchData#clone</source>
          <target state="translated">MatchData#clone</target>
        </trans-unit>
        <trans-unit id="70a8982828937e4c2d626ddbedb686e90ae7ec87" translate="yes" xml:space="preserve">
          <source>MatchData#dup</source>
          <target state="translated">MatchData#dup</target>
        </trans-unit>
        <trans-unit id="7c8f897bd425eb75ce64e45f3774937ebf6413d0" translate="yes" xml:space="preserve">
          <source>MatchData#end</source>
          <target state="translated">MatchData#end</target>
        </trans-unit>
        <trans-unit id="15861d187a403e30277e4cdc0a1ca6dc9980f9cc" translate="yes" xml:space="preserve">
          <source>MatchData#group_size</source>
          <target state="translated">MatchData#group_size</target>
        </trans-unit>
        <trans-unit id="9edaa57d541d1f0f6cf4b378a4850b45f65b540c" translate="yes" xml:space="preserve">
          <source>MatchData#hash</source>
          <target state="translated">MatchData#hash</target>
        </trans-unit>
        <trans-unit id="d575a2f97a4195ab6ccd756db72b3bdcb1c07850" translate="yes" xml:space="preserve">
          <source>MatchData#inspect</source>
          <target state="translated">MatchData#inspect</target>
        </trans-unit>
        <trans-unit id="290a9189e809e5c3364a3cd9bc85f76f4386488f" translate="yes" xml:space="preserve">
          <source>MatchData#named_captures</source>
          <target state="translated">MatchData#named_captures</target>
        </trans-unit>
        <trans-unit id="145e51cc898340cedeb4161df5a3429bafe21468" translate="yes" xml:space="preserve">
          <source>MatchData#post_match</source>
          <target state="translated">MatchData#post_match</target>
        </trans-unit>
        <trans-unit id="44fd917322c7d4e44851bbbca9a6c741a05d5657" translate="yes" xml:space="preserve">
          <source>MatchData#pre_match</source>
          <target state="translated">MatchData#pre_match</target>
        </trans-unit>
        <trans-unit id="d5905b00c99e5197c0aa3d27b5e307b54a768789" translate="yes" xml:space="preserve">
          <source>MatchData#pretty_print</source>
          <target state="translated">MatchData#pretty_print</target>
        </trans-unit>
        <trans-unit id="102fa497ede990e558ee9e647029f6fdd7a9da48" translate="yes" xml:space="preserve">
          <source>MatchData#regex</source>
          <target state="translated">MatchData#regex</target>
        </trans-unit>
        <trans-unit id="dee89d744681bf382be7229346821978698977e2" translate="yes" xml:space="preserve">
          <source>MatchData#size</source>
          <target state="translated">MatchData#size</target>
        </trans-unit>
        <trans-unit id="a6cd217270fc9f22e3f697c417b7b5903daf167f" translate="yes" xml:space="preserve">
          <source>MatchData#string</source>
          <target state="translated">MatchData#string</target>
        </trans-unit>
        <trans-unit id="9057f48c75cc124bd3ca9a2846731300ceeb52a6" translate="yes" xml:space="preserve">
          <source>MatchData#to_a</source>
          <target state="translated">MatchData#to_a</target>
        </trans-unit>
        <trans-unit id="509ac543e9c552422274cbc56150e6a4334b4f29" translate="yes" xml:space="preserve">
          <source>MatchData#to_h</source>
          <target state="translated">MatchData#to_h</target>
        </trans-unit>
        <trans-unit id="e26d6568e210c6b5995e8b8fa0f905de110f96bf" translate="yes" xml:space="preserve">
          <source>MatchData#to_s</source>
          <target state="translated">MatchData#to_s</target>
        </trans-unit>
        <trans-unit id="e78ee39d8f8e01932dce46cf8ee038a4eb17626d" translate="yes" xml:space="preserve">
          <source>Matches &lt;em&gt;path&lt;/em&gt; against &lt;em&gt;pattern&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;pattern&lt;/em&gt; 과 &lt;em&gt;path&lt;/em&gt; 를 일치 시킵니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="fcd6d581b7a6216acc77a8e0b2185a572454269e" translate="yes" xml:space="preserve">
          <source>Math#acos</source>
          <target state="translated">Math#acos</target>
        </trans-unit>
        <trans-unit id="bfaba7022d39b1cafa8199d3e9ceca5dccc8dc6c" translate="yes" xml:space="preserve">
          <source>Math#asin</source>
          <target state="translated">Math#asin</target>
        </trans-unit>
        <trans-unit id="c407228512d600cdcfd8ccaae529cf705fb0ab80" translate="yes" xml:space="preserve">
          <source>Math#atan</source>
          <target state="translated">Math#atan</target>
        </trans-unit>
        <trans-unit id="0bb900949dae40dbaf12983e21a96c5cda1d0e83" translate="yes" xml:space="preserve">
          <source>Math#cbrt</source>
          <target state="translated">Math#cbrt</target>
        </trans-unit>
        <trans-unit id="bbadd0416dc6f2cded8a1144b1cb6097d3cb9009" translate="yes" xml:space="preserve">
          <source>Math#cos</source>
          <target state="translated">Math#cos</target>
        </trans-unit>
        <trans-unit id="4fdaf895f24625a6fdfd7b3e1907aa986f5c38a7" translate="yes" xml:space="preserve">
          <source>Math#cosh</source>
          <target state="translated">Math#cosh</target>
        </trans-unit>
        <trans-unit id="cf399c48ee98a646b54d2992cdde19b1288659ec" translate="yes" xml:space="preserve">
          <source>Math#erf</source>
          <target state="translated">Math#erf</target>
        </trans-unit>
        <trans-unit id="0e1486ca70c3cbcba5bb41e0a37d0c44f022dd33" translate="yes" xml:space="preserve">
          <source>Math#erfc</source>
          <target state="translated">Math#erfc</target>
        </trans-unit>
        <trans-unit id="ceb4428458becef17b54ef319bcaafe92843ee53" translate="yes" xml:space="preserve">
          <source>Math#exp</source>
          <target state="translated">Math#exp</target>
        </trans-unit>
        <trans-unit id="3895b75896c93cbd312625b4be56fe24b0214294" translate="yes" xml:space="preserve">
          <source>Math#exp2</source>
          <target state="translated">Math#exp2</target>
        </trans-unit>
        <trans-unit id="a7d47fdfcbb7a87aacd8602b4aa2bfe191133b01" translate="yes" xml:space="preserve">
          <source>Math#log</source>
          <target state="translated">Math#log</target>
        </trans-unit>
        <trans-unit id="cdb73fa57891e246ccbb7c20c494ceaa536aa04a" translate="yes" xml:space="preserve">
          <source>Math#log2</source>
          <target state="translated">Math#log2</target>
        </trans-unit>
        <trans-unit id="bf470757a77edd7cbb125767b6957f297fa5870d" translate="yes" xml:space="preserve">
          <source>Math#logb</source>
          <target state="translated">Math#logb</target>
        </trans-unit>
        <trans-unit id="209fdf0e1067f86ffebb1514c8629bee7ba8f38b" translate="yes" xml:space="preserve">
          <source>Math#max</source>
          <target state="translated">Math#max</target>
        </trans-unit>
        <trans-unit id="3446c3734d5e67ee8b71b92ee9b05a7fc41643e2" translate="yes" xml:space="preserve">
          <source>Math#min</source>
          <target state="translated">Math#min</target>
        </trans-unit>
        <trans-unit id="b3426c9735897124239b74445a695f44dc5ea22d" translate="yes" xml:space="preserve">
          <source>Math#sin</source>
          <target state="translated">Math#sin</target>
        </trans-unit>
        <trans-unit id="97acd86aa9462e7cca3230e2c95e4c08bc44f7ff" translate="yes" xml:space="preserve">
          <source>Math#sinh</source>
          <target state="translated">Math#sinh</target>
        </trans-unit>
        <trans-unit id="745a1fb501aafd49f6c4c8868f0cb0647a665c37" translate="yes" xml:space="preserve">
          <source>Math#sqrt</source>
          <target state="translated">Math#sqrt</target>
        </trans-unit>
        <trans-unit id="c3cf8313de873962c69d5a9e90ba8750ec304b6d" translate="yes" xml:space="preserve">
          <source>Math#tan</source>
          <target state="translated">Math#tan</target>
        </trans-unit>
        <trans-unit id="d82695e4e79897e0662f87070cef9725d38a8ce4" translate="yes" xml:space="preserve">
          <source>Math#tanh</source>
          <target state="translated">Math#tanh</target>
        </trans-unit>
        <trans-unit id="06fed61c05128e9f5fbcd700a09ac7686387db5a" translate="yes" xml:space="preserve">
          <source>Maximum Value</source>
          <target state="translated">최대 값</target>
        </trans-unit>
        <trans-unit id="be8ad186f863647af21de84ca18d0db4c5d48db8" translate="yes" xml:space="preserve">
          <source>Maximum permitted combined size of the headers in an HTTP request.</source>
          <target state="translated">HTTP 요청에서 허용되는 최대 헤더 결합 크기입니다.</target>
        </trans-unit>
        <trans-unit id="fd1d67a4fbf1c43758777e34452904d556d96082" translate="yes" xml:space="preserve">
          <source>Maximum permitted size of the request line in an HTTP request.</source>
          <target state="translated">HTTP 요청에서 요청 라인의 최대 허용 크기입니다.</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="0763f98a3b693dec19ec26da9116354e35e769df" translate="yes" xml:space="preserve">
          <source>Meanwhile, other ready-to-execute fibers might start their execution.</source>
          <target state="translated">한편, 즉시 실행 가능한 다른 파이버는 실행을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd2d4cd7b6f390c3eef2dd9699ee5a9bf103720c" translate="yes" xml:space="preserve">
          <source>Measure the number of iterations per second of each task</source>
          <target state="translated">각 작업의 초당 반복 횟수 측정</target>
        </trans-unit>
        <trans-unit id="02149857c8af6b865c044a629b09c4afd3bdcb60" translate="yes" xml:space="preserve">
          <source>Measure the time to construct the string given by the expression: &lt;code&gt;&quot;a&quot;*1_000_000_000&lt;/code&gt;</source>
          <target state="translated">다음 식으로 주어진 문자열을 구성하는 시간을 측정하십시오. &lt;code&gt;&quot;a&quot;*1_000_000_000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37c10de7f646b8536fde52aa46bb0e6a735f76e0" translate="yes" xml:space="preserve">
          <source>Measures the execution time of &lt;em&gt;block&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;block&lt;/em&gt; 의 실행 시간을 측정합니다 .</target>
        </trans-unit>
        <trans-unit id="9af6587df309d75f60f7ebc35a0f82867c34f7b6" translate="yes" xml:space="preserve">
          <source>Measuring Time</source>
          <target state="translated">시간 측정</target>
        </trans-unit>
        <trans-unit id="d3512c759bde8618ce76ae401c536e9d532b4ca2" translate="yes" xml:space="preserve">
          <source>Media type is lowercased and trimmed of white space. Param keys are lowercased.</source>
          <target state="translated">용지 종류가 소문자이며 공백이 제거되었습니다. 매개 변수 키는 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="581c64d5d00f72101c77a8372eca9943ea7f9ef8" translate="yes" xml:space="preserve">
          <source>Media type is lowercased and trimmed of whitespace. Param keys are lowercased.</source>
          <target state="translated">Media type is lowercased and trimmed of whitespace. Param keys are lowercased.</target>
        </trans-unit>
        <trans-unit id="16b984450655fb6f8a1d7415fa977721b1915e7d" translate="yes" xml:space="preserve">
          <source>MediaType</source>
          <target state="translated">MediaType</target>
        </trans-unit>
        <trans-unit id="314904035cef9b45ec50281d1693d81a523a2a6d" translate="yes" xml:space="preserve">
          <source>MediaType#[]</source>
          <target state="translated">MediaType#[]</target>
        </trans-unit>
        <trans-unit id="73277f4e238f828f5f412d2bf9c763fb47cf3b96" translate="yes" xml:space="preserve">
          <source>MediaType#[]=</source>
          <target state="translated">MediaType#[]=</target>
        </trans-unit>
        <trans-unit id="dd3a0a3d23a74af04c3a9fbcb8e6bcf90e1dc53b" translate="yes" xml:space="preserve">
          <source>MediaType#[]?</source>
          <target state="translated">MediaType#[]?</target>
        </trans-unit>
        <trans-unit id="cb3a2f90ff7aecb35dd114f3ea0fe981abfa8661" translate="yes" xml:space="preserve">
          <source>MediaType#each_parameter</source>
          <target state="translated">MediaType#each_parameter</target>
        </trans-unit>
        <trans-unit id="f05ba6980c53413082585cbb197ce56545719c70" translate="yes" xml:space="preserve">
          <source>MediaType#fetch</source>
          <target state="translated">MediaType#fetch</target>
        </trans-unit>
        <trans-unit id="8aad72161dcf83b49c838a2ff494a645680b0467" translate="yes" xml:space="preserve">
          <source>MediaType#media_type</source>
          <target state="translated">MediaType#media_type</target>
        </trans-unit>
        <trans-unit id="1a56b512d34f7d82fd4cab2e305fecff807800cb" translate="yes" xml:space="preserve">
          <source>MediaType#sub_type</source>
          <target state="translated">MediaType#sub_type</target>
        </trans-unit>
        <trans-unit id="e6ed4ac1df1902810a38d5f9a408b82a78ad15b1" translate="yes" xml:space="preserve">
          <source>MediaType#to_s</source>
          <target state="translated">MediaType#to_s</target>
        </trans-unit>
        <trans-unit id="95c8f16d76c51786c89a20713db937e51cefac0e" translate="yes" xml:space="preserve">
          <source>MediaType#type</source>
          <target state="translated">MediaType#type</target>
        </trans-unit>
        <trans-unit id="4dcff3d92c16d43cedcbdb4552d5d9bb36ee359f" translate="yes" xml:space="preserve">
          <source>MediaType.new</source>
          <target state="translated">MediaType.new</target>
        </trans-unit>
        <trans-unit id="e4b3484645361e73553483ad69ca9814da988326" translate="yes" xml:space="preserve">
          <source>MediaType.parse</source>
          <target state="translated">MediaType.parse</target>
        </trans-unit>
        <trans-unit id="9720328f631e246695623783258f72fd2392e8ed" translate="yes" xml:space="preserve">
          <source>MediaType.parse?</source>
          <target state="translated">MediaType.parse?</target>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="8fabe1827e089199e88afbf403282be40411376b" translate="yes" xml:space="preserve">
          <source>Memory#buffer</source>
          <target state="translated">Memory#buffer</target>
        </trans-unit>
        <trans-unit id="0f87256bbee7f8d0f9eb3db3c88e1c06e3231ab0" translate="yes" xml:space="preserve">
          <source>Memory#bytesize</source>
          <target state="translated">Memory#bytesize</target>
        </trans-unit>
        <trans-unit id="4f8a7d521a0d75b08191ae54d75b416a3912a094" translate="yes" xml:space="preserve">
          <source>Memory#clear</source>
          <target state="translated">Memory#clear</target>
        </trans-unit>
        <trans-unit id="f28f34d212823c0200109d994783cab97e86ebc6" translate="yes" xml:space="preserve">
          <source>Memory#close</source>
          <target state="translated">Memory#close</target>
        </trans-unit>
        <trans-unit id="260ecada6be5b92f6563b75ef477ed5dc143f86d" translate="yes" xml:space="preserve">
          <source>Memory#closed?</source>
          <target state="translated">Memory#closed?</target>
        </trans-unit>
        <trans-unit id="8a2619abe6318adc5f32bc7f32ce5ae3a2655e65" translate="yes" xml:space="preserve">
          <source>Memory#empty?</source>
          <target state="translated">Memory#empty?</target>
        </trans-unit>
        <trans-unit id="90699918f5e392bad7045fe89e8dcd1676a89ef7" translate="yes" xml:space="preserve">
          <source>Memory#pos</source>
          <target state="translated">Memory#pos</target>
        </trans-unit>
        <trans-unit id="531cd32e9131ebdadbf42e219f93ca40a792c52c" translate="yes" xml:space="preserve">
          <source>Memory#pos=</source>
          <target state="translated">Memory#pos=</target>
        </trans-unit>
        <trans-unit id="07378f4e9e2d729e2b431dc72ab68dad6d402e69" translate="yes" xml:space="preserve">
          <source>Memory#read</source>
          <target state="translated">Memory#read</target>
        </trans-unit>
        <trans-unit id="c8c402b95f6a18150d843ff0ecae78eac3dfb62c" translate="yes" xml:space="preserve">
          <source>Memory#read_at</source>
          <target state="translated">Memory#read_at</target>
        </trans-unit>
        <trans-unit id="afc600eb616f7ab0f140d1ac5deb8353bc06f8d2" translate="yes" xml:space="preserve">
          <source>Memory#rewind</source>
          <target state="translated">Memory#rewind</target>
        </trans-unit>
        <trans-unit id="6744309893a46ea7a46a889d062e5d147c517b3d" translate="yes" xml:space="preserve">
          <source>Memory#seek</source>
          <target state="translated">Memory#seek</target>
        </trans-unit>
        <trans-unit id="cf8dd1f14a85d3911670449fd789f2fbafaa3b49" translate="yes" xml:space="preserve">
          <source>Memory#size</source>
          <target state="translated">Memory#size</target>
        </trans-unit>
        <trans-unit id="1ebf372bdee0484c4cb98bcf93e4d3edc8c4b2e4" translate="yes" xml:space="preserve">
          <source>Memory#to_s</source>
          <target state="translated">Memory#to_s</target>
        </trans-unit>
        <trans-unit id="fdeaa7bfe9a387aca8ad83799a15b63980baeb1b" translate="yes" xml:space="preserve">
          <source>Memory#to_slice</source>
          <target state="translated">Memory#to_slice</target>
        </trans-unit>
        <trans-unit id="0cb095732d8f3f68e5d553e328423ae327e112b2" translate="yes" xml:space="preserve">
          <source>Memory#write</source>
          <target state="translated">Memory#write</target>
        </trans-unit>
        <trans-unit id="2f9c6b4bb50b2b8565a174467355db187b4e39fc" translate="yes" xml:space="preserve">
          <source>Memory#write_byte</source>
          <target state="translated">Memory#write_byte</target>
        </trans-unit>
        <trans-unit id="81e256e7bbd2a78f0e586b68e27a86e46d0548db" translate="yes" xml:space="preserve">
          <source>Memory.new</source>
          <target state="translated">Memory.new</target>
        </trans-unit>
        <trans-unit id="4e98281dbb7ebfdaab8e9740201a29073745b541" translate="yes" xml:space="preserve">
          <source>MemoryBackend</source>
          <target state="translated">MemoryBackend</target>
        </trans-unit>
        <trans-unit id="17ecbfc1642192ddf92a6497a6661afcec804351" translate="yes" xml:space="preserve">
          <source>MemoryBackend#entries</source>
          <target state="translated">MemoryBackend#entries</target>
        </trans-unit>
        <trans-unit id="1f9f653b0ca7536d5f884345f39f59c486168714" translate="yes" xml:space="preserve">
          <source>MemoryBackend#write</source>
          <target state="translated">MemoryBackend#write</target>
        </trans-unit>
        <trans-unit id="cb13fe46c22d13941f7f9715ef16b9293d5972c1" translate="yes" xml:space="preserve">
          <source>MemoryBuffer</source>
          <target state="translated">MemoryBuffer</target>
        </trans-unit>
        <trans-unit id="03d00fe74eaa2ab2e05e3c1412f84b3a29af0a08" translate="yes" xml:space="preserve">
          <source>MemoryBuffer#dispose</source>
          <target state="translated">MemoryBuffer#dispose</target>
        </trans-unit>
        <trans-unit id="596567be1b3cb993d0b8ca82bd4b807a8309f3e5" translate="yes" xml:space="preserve">
          <source>MemoryBuffer#finalize</source>
          <target state="translated">MemoryBuffer#finalize</target>
        </trans-unit>
        <trans-unit id="60a0ab673a55b03991104f4171b3fe2c4a9698e3" translate="yes" xml:space="preserve">
          <source>MemoryBuffer#to_slice</source>
          <target state="translated">MemoryBuffer#to_slice</target>
        </trans-unit>
        <trans-unit id="c07ae4793012ee44c4200be69d30e0e88449bd24" translate="yes" xml:space="preserve">
          <source>MemoryBuffer#to_unsafe</source>
          <target state="translated">MemoryBuffer#to_unsafe</target>
        </trans-unit>
        <trans-unit id="16ee2d22a91de9f7a0b75b068cf4c82ce9d0cdde" translate="yes" xml:space="preserve">
          <source>MemoryBuffer.from_file</source>
          <target state="translated">MemoryBuffer.from_file</target>
        </trans-unit>
        <trans-unit id="8e31ab52b6ed3e6f705213ebfec3307e4dffd39e" translate="yes" xml:space="preserve">
          <source>MemoryBuffer.new</source>
          <target state="translated">MemoryBuffer.new</target>
        </trans-unit>
        <trans-unit id="404e443e0752834949f3b5f111fbc6265a674dbc" translate="yes" xml:space="preserve">
          <source>Merge CDATA as text nodes</source>
          <target state="translated">CDATA를 텍스트 노드로 병합</target>
        </trans-unit>
        <trans-unit id="709f58d3bd16bfb71386d209e4cb69e8f961497e" translate="yes" xml:space="preserve">
          <source>Merges two named tuples into one, returning a new named tuple.</source>
          <target state="translated">두 개의 명명 된 튜플을 하나로 병합하여 새로운 명명 된 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1cad9959d331d3edb2a396be6b2f48111bfb5f32" translate="yes" xml:space="preserve">
          <source>Merges two named tuples into one, returning a new named tuple. If a key is defined in both tuples, the value and its type is used from &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">두 개의 명명 된 튜플을 하나로 병합하여 새로운 명명 된 튜플을 반환합니다. 키가 두 튜플 모두에 정의되어 있으면 값과 해당 유형이 &lt;em&gt;other&lt;/em&gt; 에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6bf991e7854ed942e57f7a8ae958526d710e4851" translate="yes" xml:space="preserve">
          <source>Message too long</source>
          <target state="translated">너무 긴 메시지</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="72735dda50f234c6f9999058b1a1410fe60f5fa8" translate="yes" xml:space="preserve">
          <source>Metadata which may be available for uploaded files.</source>
          <target state="translated">업로드 된 파일에 사용 가능한 메타 데이터.</target>
        </trans-unit>
        <trans-unit id="ffa11bf1e7e34cef8a6153f8af402de0e5775731" translate="yes" xml:space="preserve">
          <source>Metadata#==</source>
          <target state="translated">Metadata#==</target>
        </trans-unit>
        <trans-unit id="c012e81bf153cbf2c3c17314f0fa4d439c4f8630" translate="yes" xml:space="preserve">
          <source>Metadata#[]</source>
          <target state="translated">Metadata#[]</target>
        </trans-unit>
        <trans-unit id="04d51f2fac649306bdc6a9be3f37a4289ddc23a2" translate="yes" xml:space="preserve">
          <source>Metadata#[]?</source>
          <target state="translated">Metadata#[]?</target>
        </trans-unit>
        <trans-unit id="aff02abaaa6d5c86ab5c381c0c097baefbfcd0a4" translate="yes" xml:space="preserve">
          <source>Metadata#each</source>
          <target state="translated">Metadata#each</target>
        </trans-unit>
        <trans-unit id="f640bcf5723bedc9557fe47c5da0ef9fc0992c3f" translate="yes" xml:space="preserve">
          <source>Metadata#empty?</source>
          <target state="translated">Metadata#empty?</target>
        </trans-unit>
        <trans-unit id="8b8524b751d6f1b3631203a19157c0becb1b186a" translate="yes" xml:space="preserve">
          <source>Metadata#extend</source>
          <target state="translated">Metadata#extend</target>
        </trans-unit>
        <trans-unit id="d605490cb16aea5f456bef50df2ee84f78fd305c" translate="yes" xml:space="preserve">
          <source>Metadata#fetch</source>
          <target state="translated">Metadata#fetch</target>
        </trans-unit>
        <trans-unit id="1aed9783950506d9d17c639590aa7ea5fecc3ce4" translate="yes" xml:space="preserve">
          <source>Metadata#to_s</source>
          <target state="translated">Metadata#to_s</target>
        </trans-unit>
        <trans-unit id="9579510828c428968c0f21f4b912b6b6c0e6f8de" translate="yes" xml:space="preserve">
          <source>Metadata.build</source>
          <target state="translated">Metadata.build</target>
        </trans-unit>
        <trans-unit id="c9e9b73d3832a69c26b986c8887b25a3b7cc185f" translate="yes" xml:space="preserve">
          <source>Metadata.empty</source>
          <target state="translated">Metadata.empty</target>
        </trans-unit>
        <trans-unit id="9e84f4b044fad5a1b8c7c02e76ff26e38b72b517" translate="yes" xml:space="preserve">
          <source>Metadata.new</source>
          <target state="translated">Metadata.new</target>
        </trans-unit>
        <trans-unit id="7b0ac82e79278fae97fbcd626d1c3f49fac09150" translate="yes" xml:space="preserve">
          <source>Metadata::Entry</source>
          <target state="translated">Metadata::Entry</target>
        </trans-unit>
        <trans-unit id="9e81d7f67fc4c81c1a609b8f7a57ac09645e447c" translate="yes" xml:space="preserve">
          <source>Metadata::Type</source>
          <target state="translated">Metadata::Type</target>
        </trans-unit>
        <trans-unit id="fdd492429f7d1bb0a1053ec5c67e3df1b2a7f416" translate="yes" xml:space="preserve">
          <source>Metadata::Type#absolute_symbol?</source>
          <target state="translated">Metadata::Type#absolute_symbol?</target>
        </trans-unit>
        <trans-unit id="3d7e7ce5d6ffdf5d17815ca9c7a51ffc4aa7f562" translate="yes" xml:space="preserve">
          <source>Metadata::Type#access_group?</source>
          <target state="translated">Metadata::Type#access_group?</target>
        </trans-unit>
        <trans-unit id="285ad453de00c807b1fd11a9d3acd8d9910c32ae" translate="yes" xml:space="preserve">
          <source>Metadata::Type#alias_scope?</source>
          <target state="translated">Metadata::Type#alias_scope?</target>
        </trans-unit>
        <trans-unit id="003e5e6a30e751791717de0702d04b51baef3c59" translate="yes" xml:space="preserve">
          <source>Metadata::Type#align?</source>
          <target state="translated">Metadata::Type#align?</target>
        </trans-unit>
        <trans-unit id="feee84b91af2eb21485c7211273d22ac085ac488" translate="yes" xml:space="preserve">
          <source>Metadata::Type#associated?</source>
          <target state="translated">Metadata::Type#associated?</target>
        </trans-unit>
        <trans-unit id="3df8b93525f65445549cf9c022354ea6356c1a78" translate="yes" xml:space="preserve">
          <source>Metadata::Type#callback?</source>
          <target state="translated">Metadata::Type#callback?</target>
        </trans-unit>
        <trans-unit id="01984f91e55ca1a6516e5fae3eb098137c2af699" translate="yes" xml:space="preserve">
          <source>Metadata::Type#callees?</source>
          <target state="translated">Metadata::Type#callees?</target>
        </trans-unit>
        <trans-unit id="c923a07a00e3777659463447ffcadb9dca0683e4" translate="yes" xml:space="preserve">
          <source>Metadata::Type#dbg?</source>
          <target state="translated">Metadata::Type#dbg?</target>
        </trans-unit>
        <trans-unit id="b8bb2ea7f17373e4ac3d938cf36b0dec78f397e6" translate="yes" xml:space="preserve">
          <source>Metadata::Type#dereferenceable?</source>
          <target state="translated">Metadata::Type#dereferenceable?</target>
        </trans-unit>
        <trans-unit id="e2e44f3f6bd1b855f65f68367aeb6d31fbf04b79" translate="yes" xml:space="preserve">
          <source>Metadata::Type#dereferenceable_or_null?</source>
          <target state="translated">Metadata::Type#dereferenceable_or_null?</target>
        </trans-unit>
        <trans-unit id="3be118ac8b683d384dbbcd908564c1deb1241661" translate="yes" xml:space="preserve">
          <source>Metadata::Type#fpmath?</source>
          <target state="translated">Metadata::Type#fpmath?</target>
        </trans-unit>
        <trans-unit id="b8f8c83e579aa8ba60739c37d853fd375d8943d4" translate="yes" xml:space="preserve">
          <source>Metadata::Type#invariant_group?</source>
          <target state="translated">Metadata::Type#invariant_group?</target>
        </trans-unit>
        <trans-unit id="4b26b16f3a3c3200a7078dca5538494164771861" translate="yes" xml:space="preserve">
          <source>Metadata::Type#invariant_load?</source>
          <target state="translated">Metadata::Type#invariant_load?</target>
        </trans-unit>
        <trans-unit id="5afb12e89ff8f73f27cd3bd9a6e6929a8ca8e17a" translate="yes" xml:space="preserve">
          <source>Metadata::Type#irr_loop?</source>
          <target state="translated">Metadata::Type#irr_loop?</target>
        </trans-unit>
        <trans-unit id="63331e4f3bc3e997c3bd8159dab0e271434196f8" translate="yes" xml:space="preserve">
          <source>Metadata::Type#loop?</source>
          <target state="translated">Metadata::Type#loop?</target>
        </trans-unit>
        <trans-unit id="adad1db1f2d4baf8a464a3fa7bbf20910df1d85f" translate="yes" xml:space="preserve">
          <source>Metadata::Type#make_implicit?</source>
          <target state="translated">Metadata::Type#make_implicit?</target>
        </trans-unit>
        <trans-unit id="84fc9aea7c2935826376cd80c1d26c172f8167d6" translate="yes" xml:space="preserve">
          <source>Metadata::Type#mem_parallel_loop_access?</source>
          <target state="translated">Metadata::Type#mem_parallel_loop_access?</target>
        </trans-unit>
        <trans-unit id="0298d9207ca946e3383df0cc184ab626fddb6471" translate="yes" xml:space="preserve">
          <source>Metadata::Type#noalias?</source>
          <target state="translated">Metadata::Type#noalias?</target>
        </trans-unit>
        <trans-unit id="595fb2d129e497ef6880f69eeaf9bf0b9a7a85f4" translate="yes" xml:space="preserve">
          <source>Metadata::Type#nonnull?</source>
          <target state="translated">Metadata::Type#nonnull?</target>
        </trans-unit>
        <trans-unit id="c6ca6292292294efb5be6b3acbd3ca0500f4ce3a" translate="yes" xml:space="preserve">
          <source>Metadata::Type#nontemporal?</source>
          <target state="translated">Metadata::Type#nontemporal?</target>
        </trans-unit>
        <trans-unit id="9e884ea67c83e32aac862a75875cd0f25431da6c" translate="yes" xml:space="preserve">
          <source>Metadata::Type#preserve_access_index?</source>
          <target state="translated">Metadata::Type#preserve_access_index?</target>
        </trans-unit>
        <trans-unit id="bd18944fbe5eca03bdae96328f7fbc1e51a3b6d5" translate="yes" xml:space="preserve">
          <source>Metadata::Type#prof?</source>
          <target state="translated">Metadata::Type#prof?</target>
        </trans-unit>
        <trans-unit id="388b3a2815a5af898cccd1a3eebd48bae90da3b2" translate="yes" xml:space="preserve">
          <source>Metadata::Type#range?</source>
          <target state="translated">Metadata::Type#range?</target>
        </trans-unit>
        <trans-unit id="ad4e7cec9ef3b0688eddd699c27c1d7f0103b798" translate="yes" xml:space="preserve">
          <source>Metadata::Type#section_prefix?</source>
          <target state="translated">Metadata::Type#section_prefix?</target>
        </trans-unit>
        <trans-unit id="b5ae082c88809934a584de5d9adc8bb33b5e84fc" translate="yes" xml:space="preserve">
          <source>Metadata::Type#tbaa?</source>
          <target state="translated">Metadata::Type#tbaa?</target>
        </trans-unit>
        <trans-unit id="f7dbda71e79cf359fb18d7abde4d7e52548dcac9" translate="yes" xml:space="preserve">
          <source>Metadata::Type#tbaa_struct?</source>
          <target state="translated">Metadata::Type#tbaa_struct?</target>
        </trans-unit>
        <trans-unit id="4f39dca4182123cd502615b8576fde16e3e25d12" translate="yes" xml:space="preserve">
          <source>Metadata::Type#type?</source>
          <target state="translated">Metadata::Type#type?</target>
        </trans-unit>
        <trans-unit id="046b694902620ed53f90b09a17da23809d0221fb" translate="yes" xml:space="preserve">
          <source>Metadata::Type#unpredictable?</source>
          <target state="translated">Metadata::Type#unpredictable?</target>
        </trans-unit>
        <trans-unit id="edf0cd4be11e45b643aad831bb4aac187bc66e17" translate="yes" xml:space="preserve">
          <source>Metadata::Value</source>
          <target state="translated">Metadata::Value</target>
        </trans-unit>
        <trans-unit id="c1765c0aa30a8eed33b77629978533200ed4a2d2" translate="yes" xml:space="preserve">
          <source>Metadata::Value#==</source>
          <target state="translated">Metadata::Value#==</target>
        </trans-unit>
        <trans-unit id="f15330cf629ccc7f35a798ce3fe24e01bc4dec8a" translate="yes" xml:space="preserve">
          <source>Metadata::Value#[]</source>
          <target state="translated">Metadata::Value#[]</target>
        </trans-unit>
        <trans-unit id="9ee63d2fe91a608c229de61ea484d7904c2f9eba" translate="yes" xml:space="preserve">
          <source>Metadata::Value#[]?</source>
          <target state="translated">Metadata::Value#[]?</target>
        </trans-unit>
        <trans-unit id="f3f3e25330edf22775e9b7b13180a64cebdce22b" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_a</source>
          <target state="translated">Metadata::Value#as_a</target>
        </trans-unit>
        <trans-unit id="e809e2af7f9db9cfbed6912c79eac7e17477a3eb" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_a?</source>
          <target state="translated">Metadata::Value#as_a?</target>
        </trans-unit>
        <trans-unit id="3f37ffa2758184e6a3d86518bac40ee62915baa4" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_bool</source>
          <target state="translated">Metadata::Value#as_bool</target>
        </trans-unit>
        <trans-unit id="0c1bf5ab98fe97508a82016e27831205e39c452f" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_bool?</source>
          <target state="translated">Metadata::Value#as_bool?</target>
        </trans-unit>
        <trans-unit id="c116cf3b8db9fdc02eb2936a96e1b99823bb5275" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_f</source>
          <target state="translated">Metadata::Value#as_f</target>
        </trans-unit>
        <trans-unit id="52f1f3c170f29e4996b89bb101c9299845d04588" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_f64</source>
          <target state="translated">Metadata::Value#as_f64</target>
        </trans-unit>
        <trans-unit id="652fc49e7d0b13b49e3c4155b3257f918f1f95fa" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_f64?</source>
          <target state="translated">Metadata::Value#as_f64?</target>
        </trans-unit>
        <trans-unit id="98a10247e70dc6733785b52b8e1f3cb0f57255a0" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_f?</source>
          <target state="translated">Metadata::Value#as_f?</target>
        </trans-unit>
        <trans-unit id="614c0552c13cba3364f7363486c6f389cf2f8e72" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_h</source>
          <target state="translated">Metadata::Value#as_h</target>
        </trans-unit>
        <trans-unit id="a682174aeb7511349c0b553eda6f008596c09f2e" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_h?</source>
          <target state="translated">Metadata::Value#as_h?</target>
        </trans-unit>
        <trans-unit id="dc5ce78f1e49da0f589c27c4baf706606fea40f6" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_i</source>
          <target state="translated">Metadata::Value#as_i</target>
        </trans-unit>
        <trans-unit id="03d35fcb79aa1d9ce60e23276aa7b6ee2730ad1b" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_i64</source>
          <target state="translated">Metadata::Value#as_i64</target>
        </trans-unit>
        <trans-unit id="a82d9f5bd0291c0b1cf69acfd556a24d5194b220" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_i64?</source>
          <target state="translated">Metadata::Value#as_i64?</target>
        </trans-unit>
        <trans-unit id="86c03bc4e316e67b64b2f4ea6d2450997d2ef2cf" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_i?</source>
          <target state="translated">Metadata::Value#as_i?</target>
        </trans-unit>
        <trans-unit id="41c3793bd9e6a67b8708b06836c3d33ab2841be7" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_nil</source>
          <target state="translated">Metadata::Value#as_nil</target>
        </trans-unit>
        <trans-unit id="dd102f1ebded1dc79287c2625441e0f8cf49a03f" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_s</source>
          <target state="translated">Metadata::Value#as_s</target>
        </trans-unit>
        <trans-unit id="a9411d1197a5ca070bcbb7e79f976394794d34f6" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_s?</source>
          <target state="translated">Metadata::Value#as_s?</target>
        </trans-unit>
        <trans-unit id="cd199b47b83d6a8fdb26431f3280ee9dc0c51c0a" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_time</source>
          <target state="translated">Metadata::Value#as_time</target>
        </trans-unit>
        <trans-unit id="42208ebce267db6ab7cb6b3066442894b1963bea" translate="yes" xml:space="preserve">
          <source>Metadata::Value#as_time?</source>
          <target state="translated">Metadata::Value#as_time?</target>
        </trans-unit>
        <trans-unit id="6297a7cb4bc55b6905897c892bde0e5b43d1b13f" translate="yes" xml:space="preserve">
          <source>Metadata::Value#clone</source>
          <target state="translated">Metadata::Value#clone</target>
        </trans-unit>
        <trans-unit id="a78a36cf08a95f7571166375e22e530c7c80a2c8" translate="yes" xml:space="preserve">
          <source>Metadata::Value#dig</source>
          <target state="translated">Metadata::Value#dig</target>
        </trans-unit>
        <trans-unit id="fb45b99ef7d0938811560e1cb63c1c8cc237681b" translate="yes" xml:space="preserve">
          <source>Metadata::Value#dig?</source>
          <target state="translated">Metadata::Value#dig?</target>
        </trans-unit>
        <trans-unit id="1121e02d3dc4f3816ec539394cb4695fb3475533" translate="yes" xml:space="preserve">
          <source>Metadata::Value#dup</source>
          <target state="translated">Metadata::Value#dup</target>
        </trans-unit>
        <trans-unit id="863ff92290b7800924256040a6e6240c0a64a2f4" translate="yes" xml:space="preserve">
          <source>Metadata::Value#hash</source>
          <target state="translated">Metadata::Value#hash</target>
        </trans-unit>
        <trans-unit id="32a3e7f1b4c9e907c8e374ba6f1ee21a96188f45" translate="yes" xml:space="preserve">
          <source>Metadata::Value#raw</source>
          <target state="translated">Metadata::Value#raw</target>
        </trans-unit>
        <trans-unit id="6dd63d6e399525c827ccbd6f0f4387c2e4d49d5b" translate="yes" xml:space="preserve">
          <source>Metadata::Value#size</source>
          <target state="translated">Metadata::Value#size</target>
        </trans-unit>
        <trans-unit id="31e7dfb17fad90864635e3c48d80399d0ef1c2ff" translate="yes" xml:space="preserve">
          <source>Metadata::Value.new</source>
          <target state="translated">Metadata::Value.new</target>
        </trans-unit>
        <trans-unit id="702368118aeb1e9de287ccd1ec9a928e1b6d24e2" translate="yes" xml:space="preserve">
          <source>Metadata::Value::Type</source>
          <target state="translated">Metadata::Value::Type</target>
        </trans-unit>
        <trans-unit id="26ee80e7fbf79f3a297fb3c3f378235ecc8e7aee" translate="yes" xml:space="preserve">
          <source>Method Categories</source>
          <target state="translated">방법 카테고리</target>
        </trans-unit>
        <trans-unit id="10e4ca1976a5dec35046b8038b63b14e9548c032" translate="yes" xml:space="preserve">
          <source>Method Detail</source>
          <target state="translated">메소드의 상세</target>
        </trans-unit>
        <trans-unit id="8102ea6074090f4681ab70e02ebe6ece740ec91c" translate="yes" xml:space="preserve">
          <source>Method Summary</source>
          <target state="translated">방법 요약</target>
        </trans-unit>
        <trans-unit id="18754adb324b714a265e93bb8a9892892ff9ee0a" translate="yes" xml:space="preserve">
          <source>Method arguments</source>
          <target state="translated">메소드 인수</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">메소드 호출</target>
        </trans-unit>
        <trans-unit id="3e2b0422abcbfb4ac9f161b1f78b5e9c40a745d2" translate="yes" xml:space="preserve">
          <source>Method information</source>
          <target state="translated">방법 정보</target>
        </trans-unit>
        <trans-unit id="0f9d186ca69df3dd05f322417fd65bec2e750dc5" translate="yes" xml:space="preserve">
          <source>Method names begin with a lowercase letter and, as a convention, only use lowercase letters, underscores and numbers.</source>
          <target state="translated">메소드 이름은 소문자로 시작하며, 일반적으로 소문자, 밑줄 및 숫자 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cc08de319542939048e6cad82e3c58bc9606a0c6" translate="yes" xml:space="preserve">
          <source>Method to save and restore the current logging context.</source>
          <target state="translated">Method to save and restore the current logging context.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="41cb42dfe981ae6d6822b92676c9c47dfb78436e" translate="yes" xml:space="preserve">
          <source>Methods &lt;em&gt;can&lt;/em&gt; be marked as &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;protected&lt;/code&gt;.</source>
          <target state="translated">메소드 &lt;em&gt;는 &lt;/em&gt; &lt;code&gt;private&lt;/code&gt; 또는 &lt;code&gt;protected&lt;/code&gt; 로 표시 될 &lt;em&gt;수&lt;/em&gt; 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17f09fde54687b1211a81b46c7f2bed49f92d919" translate="yes" xml:space="preserve">
          <source>Methods and instance variables</source>
          <target state="translated">메소드와 인스턴스 변수</target>
        </trans-unit>
        <trans-unit id="da0f769797e592acee457c83e82b4178673a012a" translate="yes" xml:space="preserve">
          <source>Methods are public by default: the compiler will always let you invoke them. There is no &lt;code&gt;public&lt;/code&gt; keyword for this reason.</source>
          <target state="translated">메소드는 기본적으로 공용입니다. 컴파일러는 항상 호출 할 수 있도록합니다. 이러한 이유로 &lt;code&gt;public&lt;/code&gt; 키워드 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8fb20785184d509cc0eb5e0487a86275eea3d563" translate="yes" xml:space="preserve">
          <source>Methods can accept a block of code that is executed with the &lt;code&gt;yield&lt;/code&gt; keyword. For example:</source>
          <target state="translated">메소드는 &lt;code&gt;yield&lt;/code&gt; 키워드로 실행되는 코드 블록을 승인 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d2ee9e575aaa056f894905b6cfc235a248500a22" translate="yes" xml:space="preserve">
          <source>Methods overload by several criteria:</source>
          <target state="translated">몇 가지 기준에 의해 메소드 과부하 :</target>
        </trans-unit>
        <trans-unit id="cb6b8a742422567ee74d9fedf3b8f6b204529659" translate="yes" xml:space="preserve">
          <source>Methods that advance the scan offset:</source>
          <target state="translated">스캔 오프셋을 진행시키는 방법 :</target>
        </trans-unit>
        <trans-unit id="d0493253fcb490fee12e9e06556cf3f093830d36" translate="yes" xml:space="preserve">
          <source>Methods that deal with the last match:</source>
          <target state="translated">마지막 일치를 처리하는 방법 :</target>
        </trans-unit>
        <trans-unit id="0ccbad6f1d98f8a0e60f87867fd43335515d070c" translate="yes" xml:space="preserve">
          <source>Methods that deal with the position of the offset:</source>
          <target state="translated">오프셋의 위치를 ​​처리하는 방법 :</target>
        </trans-unit>
        <trans-unit id="5cbdf69417dad9a6f51143a21976bc20abc38d01" translate="yes" xml:space="preserve">
          <source>Methods that look ahead:</source>
          <target state="translated">앞선 방법 :</target>
        </trans-unit>
        <trans-unit id="a891af625dc16285885b80cb6e4d1e841b4d49cc" translate="yes" xml:space="preserve">
          <source>Methods#after_all</source>
          <target state="translated">Methods#after_all</target>
        </trans-unit>
        <trans-unit id="24270af44d20753cd1a99e5b759a52e63014afc2" translate="yes" xml:space="preserve">
          <source>Methods#after_each</source>
          <target state="translated">Methods#after_each</target>
        </trans-unit>
        <trans-unit id="1a80b69eabc0d47482c016d731fa6b7e241b4c6f" translate="yes" xml:space="preserve">
          <source>Methods#around_all</source>
          <target state="translated">Methods#around_all</target>
        </trans-unit>
        <trans-unit id="9b9a241e94b2b883531458aefdf1867d5db874fb" translate="yes" xml:space="preserve">
          <source>Methods#around_each</source>
          <target state="translated">Methods#around_each</target>
        </trans-unit>
        <trans-unit id="d2a9ba00e2562c35dc36fd70e6ab78f95e0fc3c4" translate="yes" xml:space="preserve">
          <source>Methods#assert</source>
          <target state="translated">Methods#assert</target>
        </trans-unit>
        <trans-unit id="f62277fedd9adbc0d1529f9f8a47571affaca052" translate="yes" xml:space="preserve">
          <source>Methods#before_all</source>
          <target state="translated">Methods#before_all</target>
        </trans-unit>
        <trans-unit id="a27d8085a2025fda2c71a9809a6ca650a30759b1" translate="yes" xml:space="preserve">
          <source>Methods#before_each</source>
          <target state="translated">Methods#before_each</target>
        </trans-unit>
        <trans-unit id="075b1c0667407e047b316c43b99cbf411cdb1954" translate="yes" xml:space="preserve">
          <source>Methods#context</source>
          <target state="translated">Methods#context</target>
        </trans-unit>
        <trans-unit id="b6a88da5ccfd7c50b7e9887c8ba011b831f9afae" translate="yes" xml:space="preserve">
          <source>Methods#describe</source>
          <target state="translated">Methods#describe</target>
        </trans-unit>
        <trans-unit id="51d8a8dafb9597d104d17840b2eb7f8a3ece2168" translate="yes" xml:space="preserve">
          <source>Methods#fail</source>
          <target state="translated">Methods#fail</target>
        </trans-unit>
        <trans-unit id="fd1daf32ae9141535e5b6f446f98d4ce3f99b590" translate="yes" xml:space="preserve">
          <source>Methods#it</source>
          <target state="translated">Methods#it</target>
        </trans-unit>
        <trans-unit id="0150fa5c7539a4161235cc4c0801cb5f2f687d50" translate="yes" xml:space="preserve">
          <source>Methods#pending</source>
          <target state="translated">Methods#pending</target>
        </trans-unit>
        <trans-unit id="c30356e8fe6422c0ac6ab1589b2dcb97f598898f" translate="yes" xml:space="preserve">
          <source>Minimum Value</source>
          <target state="translated">최소값</target>
        </trans-unit>
        <trans-unit id="14b62fd7f274dceffcb270ef83f45d9a025fcc65" translate="yes" xml:space="preserve">
          <source>Mirror to GitHub</source>
          <target state="translated">Mirror to GitHub</target>
        </trans-unit>
        <trans-unit id="df7e8412ffcdddc458c5e061cf97f61a94ebb137" translate="yes" xml:space="preserve">
          <source>Miscellaneous methods:</source>
          <target state="translated">기타 방법 :</target>
        </trans-unit>
        <trans-unit id="7956d184e744aedf69b7e63a1d66aaf13a0e03c1" translate="yes" xml:space="preserve">
          <source>Mixing string and byte operations might not give correct results and should be avoided, as string operations might need to read extra bytes in order to get characters in the given encoding.</source>
          <target state="translated">문자열 연산과 바이트 연산을 혼합하면 올바른 결과를 얻지 못할 수 있으므로 문자열 인코딩은 주어진 인코딩에서 문자를 가져 오기 위해 추가 바이트를 읽어야 할 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="5bf33d6dd236bd7612d14fa49d94c785a43c7fe9" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by randomizing the order of elements in the array using the given &lt;em&gt;random&lt;/em&gt; number generator.</source>
          <target state="translated">주어진 &lt;em&gt;난수&lt;/em&gt; 생성기를 사용하여 배열의 요소 순서를 무작위 화하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eff67ecee336a15ea43f1e580cd15c3c8e5bbbb1" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by randomizing the order of elements in the array using the given &lt;em&gt;random&lt;/em&gt; number generator. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;난수&lt;/em&gt; 생성기를 사용하여 배열의 요소 순서를 무작위 화하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다. &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04c947fc3a43617e4e0be0929b5df17b1ba32190" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by randomizing the order of elements in the collection using the given &lt;em&gt;random&lt;/em&gt; number generator.</source>
          <target state="translated">주어진 &lt;em&gt;난수&lt;/em&gt; 생성기를 사용하여 컬렉션의 요소 순서를 무작위로 지정하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="99fbb9f3fa289eaf96f06589a6d254063716adbb" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by randomizing the order of elements in the collection using the given &lt;em&gt;random&lt;/em&gt; number generator. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;난수&lt;/em&gt; 생성기를 사용하여 컬렉션의 요소 순서를 무작위로 지정하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다. &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b5d0737d72590b12fdd1913fe3ba54da138564b" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by sorting all elements based on the comparator in the given block.</source>
          <target state="translated">주어진 블록의 비교자를 기준으로 모든 요소를 ​​정렬하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="265fc6e811ad1fbdb2ee1b832b28911ef40ab7f9" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by sorting all elements based on the return value of their comparison method &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">비교 방법 &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; &amp;lt;=&amp;gt;의 반환 값을 기준으로 모든 요소를 ​​정렬하여 &lt;code&gt;self&lt;/code&gt; 를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="3181919838d40464edad3a59987d72aacad4e73a" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by sorting all elements based on the return value of their comparison method &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">비교 방법 &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; &amp;lt;=&amp;gt;의 반환 값을 기준으로 모든 요소를 ​​정렬하여 &lt;code&gt;self&lt;/code&gt; 를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="74cc5418942863540f4059b1b471e8b64cd876f8" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by sorting all elements.</source>
          <target state="translated">모든 요소를 ​​정렬하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="96009cccedc43e85238408ff6bb38d2cca558f6d" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by sorting all elements. The given block is called for each element, then the comparison method #&amp;lt;=&amp;gt; is called on the object returned from the block to determine sort order.</source>
          <target state="translated">모든 요소를 ​​정렬하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다. 주어진 블록이 각 요소에 대해 호출 된 다음 정렬 순서를 결정하기 위해 블록에서 반환 된 객체에서 비교 방법 # &amp;lt;=&amp;gt;이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="34188a50ce5657011d3f108628d4c3b9cb141969" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt; by sorting all elements. The given block is called for each element, then the comparison method &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; is called on the object returned from the block to determine sort order.</source>
          <target state="translated">모든 요소를 ​​정렬하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다. 주어진 블록이 각 요소에 대해 호출 된 다음 정렬 순서를 결정하기 위해 블록에서 반환 된 객체 에서 비교 방법 &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="de27ec08a3e11c9a872cf3f13166fa1e3d31dfdb" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt;, deleting the elements in the collection for which &lt;code&gt;pattern === element&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pattern === element&lt;/code&gt; 의 콜렉션에서 요소를 삭제하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="40381c72e45ce87cc602a030a5714d9752826f7a" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt;, deleting the elements in the collection for which the passed block returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">전달 된 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 컬렉션의 요소를 삭제하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다 .</target>
        </trans-unit>
        <trans-unit id="6a87dc1ca21f3b81db71d2bc6c73d6231d18b37d" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt;, deleting the elements in the collection for which the passed block returns &lt;code&gt;true&lt;/code&gt;. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">전달 된 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 컬렉션의 요소를 삭제하여 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다 . &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b0f5c90dac5378969d96f760f2e2ac796843a329" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt;, keeping only the elements in the collection for which &lt;code&gt;pattern === element&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pattern === element&lt;/code&gt; 의 컬렉션에있는 요소 만 유지하면서 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="a6b489003fd8423385c13b429ae79bf6793aef01" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt;, keeping only the elements in the collection for which the passed block returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">전달 된 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 컬렉션의 요소 만 유지하면서 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다 .</target>
        </trans-unit>
        <trans-unit id="4fcef541c0bf3116006da3a0ffcd27db1cd1057c" translate="yes" xml:space="preserve">
          <source>Modifies &lt;code&gt;self&lt;/code&gt;, keeping only the elements in the collection for which the passed block returns &lt;code&gt;true&lt;/code&gt;. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">전달 된 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 컬렉션의 요소 만 유지하면서 &lt;code&gt;self&lt;/code&gt; 를 수정 합니다 . &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="3d8658a7f0287e8f94aa70bedf8e5dd3b1b9f7eb" translate="yes" xml:space="preserve">
          <source>Module Type Checking</source>
          <target state="translated">모듈 유형 확인</target>
        </trans-unit>
        <trans-unit id="979b7079891a19789a0e1a47ad20727180bae89a" translate="yes" xml:space="preserve">
          <source>Module#==</source>
          <target state="translated">Module#==</target>
        </trans-unit>
        <trans-unit id="d6a4b63bdc78d976fb39065156c9cd1df3cfa68e" translate="yes" xml:space="preserve">
          <source>Module#add_named_metadata_operand</source>
          <target state="translated">Module#add_named_metadata_operand</target>
        </trans-unit>
        <trans-unit id="8080745c0f1bdfef1a076b280aeae0c736bbc5d3" translate="yes" xml:space="preserve">
          <source>Module#context</source>
          <target state="translated">Module#context</target>
        </trans-unit>
        <trans-unit id="1d74cd306d3660d94b24746e7f9a80634f66f982" translate="yes" xml:space="preserve">
          <source>Module#data_layout=</source>
          <target state="translated">Module#data_layout=</target>
        </trans-unit>
        <trans-unit id="0a68ab2783e2cccb7bb1959901cebd202512cb26" translate="yes" xml:space="preserve">
          <source>Module#dump</source>
          <target state="translated">Module#dump</target>
        </trans-unit>
        <trans-unit id="c300ee04b7394919adb2a93d9bf8b24103ba47d7" translate="yes" xml:space="preserve">
          <source>Module#functions</source>
          <target state="translated">Module#functions</target>
        </trans-unit>
        <trans-unit id="6db85d32d9dd5134fb20420f9689c1a7cfed05f4" translate="yes" xml:space="preserve">
          <source>Module#globals</source>
          <target state="translated">Module#globals</target>
        </trans-unit>
        <trans-unit id="829f26be3f360c72da74ca8c5ef339240d1456f0" translate="yes" xml:space="preserve">
          <source>Module#name</source>
          <target state="translated">Module#name</target>
        </trans-unit>
        <trans-unit id="c7bc396aa2843fed9db5e1a560737e281eb8ff58" translate="yes" xml:space="preserve">
          <source>Module#name=</source>
          <target state="translated">Module#name=</target>
        </trans-unit>
        <trans-unit id="1cc4bb7e1c4b9b25f3b7008eb92228c7db34fdca" translate="yes" xml:space="preserve">
          <source>Module#new_function_pass_manager</source>
          <target state="translated">Module#new_function_pass_manager</target>
        </trans-unit>
        <trans-unit id="01d41e9d4d5c8c5e92e77442fb8e3597456f1290" translate="yes" xml:space="preserve">
          <source>Module#print_to_file</source>
          <target state="translated">Module#print_to_file</target>
        </trans-unit>
        <trans-unit id="38ff937a119c8e4b603a71feab1f00c2660677d2" translate="yes" xml:space="preserve">
          <source>Module#take_ownership</source>
          <target state="translated">Module#take_ownership</target>
        </trans-unit>
        <trans-unit id="a2602fb5e519015b6e17b0c8ba2dcb6122c75c27" translate="yes" xml:space="preserve">
          <source>Module#target=</source>
          <target state="translated">Module#target=</target>
        </trans-unit>
        <trans-unit id="bed4e2a8282fddabc97523e33a3835019aea76fb" translate="yes" xml:space="preserve">
          <source>Module#to_s</source>
          <target state="translated">Module#to_s</target>
        </trans-unit>
        <trans-unit id="947965aa51fbb101cea829e6abe4d43fc99ed8e4" translate="yes" xml:space="preserve">
          <source>Module#to_unsafe</source>
          <target state="translated">Module#to_unsafe</target>
        </trans-unit>
        <trans-unit id="4362bfa192f2adcc6cf1c367a3836de8ea56a417" translate="yes" xml:space="preserve">
          <source>Module#verify</source>
          <target state="translated">Module#verify</target>
        </trans-unit>
        <trans-unit id="f61ebde7c3e9c11c30fa07865544f779189b201a" translate="yes" xml:space="preserve">
          <source>Module#write_bitcode_to_fd</source>
          <target state="translated">Module#write_bitcode_to_fd</target>
        </trans-unit>
        <trans-unit id="097e60bf941ecb4e06c585733848d59e0d5b05e0" translate="yes" xml:space="preserve">
          <source>Module#write_bitcode_to_file</source>
          <target state="translated">Module#write_bitcode_to_file</target>
        </trans-unit>
        <trans-unit id="f9791123d8ba72dcd3e70bf06a66933ff439ed1e" translate="yes" xml:space="preserve">
          <source>Module#write_bitcode_to_memory_buffer</source>
          <target state="translated">Module#write_bitcode_to_memory_buffer</target>
        </trans-unit>
        <trans-unit id="dd28d8eb04ffb95c52fbb92a7232bea139732c27" translate="yes" xml:space="preserve">
          <source>Module#write_bitcode_with_summary_to_file</source>
          <target state="translated">Module#write_bitcode_with_summary_to_file</target>
        </trans-unit>
        <trans-unit id="a178063e52c9bfa476f82d2192f9896d9d8e5265" translate="yes" xml:space="preserve">
          <source>Module.new</source>
          <target state="translated">Module.new</target>
        </trans-unit>
        <trans-unit id="491ce7d538a5c479dc1345b12fe37133d15009a3" translate="yes" xml:space="preserve">
          <source>ModuleFlag</source>
          <target state="translated">ModuleFlag</target>
        </trans-unit>
        <trans-unit id="e2d35e533b64e8df10b471448e9faad20fa45c02" translate="yes" xml:space="preserve">
          <source>ModuleFlag#warning?</source>
          <target state="translated">ModuleFlag#warning?</target>
        </trans-unit>
        <trans-unit id="6a8fbf96d71df6bbb151fec4df5f8e70e994d604" translate="yes" xml:space="preserve">
          <source>ModulePassManager</source>
          <target state="translated">ModulePassManager</target>
        </trans-unit>
        <trans-unit id="0f05dc333cae1a73d3eb458ae4c721749e424d7a" translate="yes" xml:space="preserve">
          <source>ModulePassManager#finalize</source>
          <target state="translated">ModulePassManager#finalize</target>
        </trans-unit>
        <trans-unit id="aaee9b01a8c1e2457eccee6097c406a541b446aa" translate="yes" xml:space="preserve">
          <source>ModulePassManager#run</source>
          <target state="translated">ModulePassManager#run</target>
        </trans-unit>
        <trans-unit id="958b8a56a94cfa3c50aefe46e36051d5522e1401" translate="yes" xml:space="preserve">
          <source>ModulePassManager#to_unsafe</source>
          <target state="translated">ModulePassManager#to_unsafe</target>
        </trans-unit>
        <trans-unit id="b73cb0f6d55b81d89990134705de4e7f047ca943" translate="yes" xml:space="preserve">
          <source>ModulePassManager.new</source>
          <target state="translated">ModulePassManager.new</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="f734a47952304a54014052e19f1343c479e98be7" translate="yes" xml:space="preserve">
          <source>Modules and classes</source>
          <target state="translated">모듈과 클래스</target>
        </trans-unit>
        <trans-unit id="03d40fdd185cee21955309f5f484c9f8a668df90" translate="yes" xml:space="preserve">
          <source>Modules can also be used for type checking.</source>
          <target state="translated">모듈은 유형 확인에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d811d37087bdf546091e8e5198ba9701419e64d9" translate="yes" xml:space="preserve">
          <source>Modules serve two purposes:</source>
          <target state="translated">모듈은 두 가지 용도로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e0f511250a1af99fa7721c44e6fe973f323ed6de" translate="yes" xml:space="preserve">
          <source>Modules, classes and structs can also be generated:</source>
          <target state="translated">모듈, 클래스 및 구조체도 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="884767b7347b50c9b6f982d41d48833762e2cdec" translate="yes" xml:space="preserve">
          <source>MonthSpan</source>
          <target state="translated">MonthSpan</target>
        </trans-unit>
        <trans-unit id="279df064615389c1c281a37195ccf44381322be1" translate="yes" xml:space="preserve">
          <source>MonthSpan#ago</source>
          <target state="translated">MonthSpan#ago</target>
        </trans-unit>
        <trans-unit id="ca8c11f9bfa8fbe5976f936cee5d648b82e7c366" translate="yes" xml:space="preserve">
          <source>MonthSpan#from_now</source>
          <target state="translated">MonthSpan#from_now</target>
        </trans-unit>
        <trans-unit id="c9df75f70f0c4e3e287cc78654a2d6fcbff462a5" translate="yes" xml:space="preserve">
          <source>MonthSpan#value</source>
          <target state="translated">MonthSpan#value</target>
        </trans-unit>
        <trans-unit id="b002747697a3a783cc3d16ea1fdcbcc76034773f" translate="yes" xml:space="preserve">
          <source>MonthSpan.new</source>
          <target state="translated">MonthSpan.new</target>
        </trans-unit>
        <trans-unit id="c44170e4eb85328acffc62cec45c797f36c608d8" translate="yes" xml:space="preserve">
          <source>More details about using the compiler can be found on the manpage &lt;code&gt;man crystal&lt;/code&gt; or in our &lt;a href=&quot;../using_the_compiler/index&quot;&gt;compiler manual&lt;/a&gt;.</source>
          <target state="translated">More details about using the compiler can be found on the manpage &lt;code&gt;man crystal&lt;/code&gt; or in our &lt;a href=&quot;../using_the_compiler/index&quot;&gt;compiler manual&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="511469cf70da414640112c95966ab31bd389362e" translate="yes" xml:space="preserve">
          <source>More information about statically linking &lt;a href=&quot;https://github.com/crystal-lang/crystal/wiki/Static-Linking&quot;&gt;can be found on the wiki&lt;/a&gt;.</source>
          <target state="translated">정적으로 연결하는 것에 대한 자세한 정보 &lt;a href=&quot;https://github.com/crystal-lang/crystal/wiki/Static-Linking&quot;&gt;는 위키에서 찾을 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e96f805e3ad66206f633f82ac0bf487ec0e4265d" translate="yes" xml:space="preserve">
          <source>More options are described in the integrated help: &lt;code&gt;crystal build --help&lt;/code&gt; or man page &lt;code&gt;man crystal&lt;/code&gt;.</source>
          <target state="translated">추가 옵션은 통합 도움말에 설명되어 있습니다. &lt;code&gt;crystal build --help&lt;/code&gt; 또는 man page &lt;code&gt;man crystal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4b834e4f3bd937f33396cfa0de28c09b43b8feb" translate="yes" xml:space="preserve">
          <source>More options are described in the integrated help: &lt;code&gt;crystal eval --help&lt;/code&gt; or man page &lt;code&gt;man crystal&lt;/code&gt;.</source>
          <target state="translated">More options are described in the integrated help: &lt;code&gt;crystal eval --help&lt;/code&gt; or man page &lt;code&gt;man crystal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afbf804f993c78e6e814b73a3f30aa781cdc93bd" translate="yes" xml:space="preserve">
          <source>More options are described in the integrated help: &lt;code&gt;crystal run --help&lt;/code&gt; or man page &lt;code&gt;man crystal&lt;/code&gt;.</source>
          <target state="translated">추가 옵션은 통합 도움말에 설명되어 있습니다 : &lt;code&gt;crystal run --help&lt;/code&gt; 또는 man page &lt;code&gt;man crystal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb10f29375501526498186f6dd3442bbec742aa6" translate="yes" xml:space="preserve">
          <source>More than one type argument is allowed:</source>
          <target state="translated">둘 이상의 유형 인수가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="f8b0c08f1150fcf85394e4ae769835a4e0a5e0af" translate="yes" xml:space="preserve">
          <source>Most importantly, your README should explain:</source>
          <target state="translated">가장 중요한 것은 README가 다음을 설명해야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="812ae3644f66e39331a6b8c7be55b24cd16704d0" translate="yes" xml:space="preserve">
          <source>Most methods simply delegate to the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">대부분의 메소드는 단순히 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="e109b9f2ebe9cb93b26e318d9a9467b8714f63fa" translate="yes" xml:space="preserve">
          <source>Most of the time &lt;code&gt;&lt;a href=&quot;../csv#parse(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR):Array(Array(String))-class-method&quot;&gt;CSV#parse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../csv#each_row(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,&amp;amp;)-class-method&quot;&gt;CSV#each_row&lt;/a&gt;&lt;/code&gt; are more convenient.</source>
          <target state="translated">Most of the time &lt;code&gt;&lt;a href=&quot;../csv#parse(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR):Array(Array(String))-class-method&quot;&gt;CSV#parse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../csv#each_row(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,&amp;amp;)-class-method&quot;&gt;CSV#each_row&lt;/a&gt;&lt;/code&gt; are more convenient.</target>
        </trans-unit>
        <trans-unit id="d9f7213e9b902c7d1fb2ca24326fbce985ee65c2" translate="yes" xml:space="preserve">
          <source>Most of the time &lt;code&gt;&lt;a href=&quot;../csv#parse(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR):Array(Array(String))-class-method&quot;&gt;CSV#parse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../csv#each_row(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,&amp;amp;block)-class-method&quot;&gt;CSV#each_row&lt;/a&gt;&lt;/code&gt; are more convenient.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;&lt;a href=&quot;../csv#parse(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR):Array(Array(String))-class-method&quot;&gt;CSV#parse&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../csv#each_row(string_or_io:String%7CIO,separator:Char=DEFAULT_SEPARATOR,quote_char:Char=DEFAULT_QUOTE_CHAR,&amp;amp;block)-class-method&quot;&gt;CSV#each_row&lt;/a&gt;&lt;/code&gt; 가 더 편리합니다.</target>
        </trans-unit>
        <trans-unit id="1101bef3ceca335886e8948a44566591fbe6a283" translate="yes" xml:space="preserve">
          <source>Most of the time a C function that allows setting a callback also provide an argument for custom data. This custom data is then sent as an argument to the callback. For example, suppose a C function that invokes a callback at every tick, passing that tick:</source>
          <target state="translated">대부분의 경우 콜백 설정을 허용하는 C 함수는 사용자 정의 데이터에 대한 인수도 제공합니다. 그런 다음이 사용자 정의 데이터는 콜백에 인수로 전송됩니다. 예를 들어, 모든 틱마다 콜백을 호출하고 해당 틱을 전달하는 C 함수를 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="fa868296725a05b2070f2b7a411e10fd9776b779" translate="yes" xml:space="preserve">
          <source>Most operators can be implemented as regular methods.</source>
          <target state="translated">Most operators can be implemented as regular methods.</target>
        </trans-unit>
        <trans-unit id="e5d5a0e31045179938cc00f3379ee910e98fef4a" translate="yes" xml:space="preserve">
          <source>Most types in the standard library implement these methods. For user-defined types you can define a &lt;code&gt;self.new(pull : JSON::PullParser)&lt;/code&gt; for parsing and &lt;code&gt;to_json(builder : &lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; for serializing. The following sections show convenient ways to do this using &lt;code&gt;&lt;a href=&quot;json/serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Most types in the standard library implement these methods. For user-defined types you can define a &lt;code&gt;self.new(pull : JSON::PullParser)&lt;/code&gt; for parsing and &lt;code&gt;to_json(builder : &lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; for serializing. The following sections show convenient ways to do this using &lt;code&gt;&lt;a href=&quot;json/serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24b6d864afe8658f4401cacbefb4db1ab2ef9e3f" translate="yes" xml:space="preserve">
          <source>Most types in the standard library implement these methods. For user-defined types you can define a &lt;code&gt;self.new(pull : JSON::PullParser)&lt;/code&gt; for parsing and &lt;code&gt;to_json(builder : &lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; for serializing. The following sections show convenient ways to do this using either &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;json/serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">표준 라이브러리의 대부분의 유형은 이러한 메소드를 구현합니다. 사용자 정의 유형의 경우 구문 분석을 위해 &lt;code&gt;self.new(pull : JSON::PullParser)&lt;/code&gt; 를 정의하고 직렬화를 위해 &lt;code&gt;to_json(builder : &lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;)&lt;/code&gt; 을 정의 할 수 있습니다 . 다음 섹션은 &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;json/serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; 사용하여이를 수행하는 편리한 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9d976453e4791b58990a572e89d605d9c1593dbe" translate="yes" xml:space="preserve">
          <source>Move the array to a constant.</source>
          <target state="translated">배열을 상수로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="0b0fb201c97e9d51c72a1a24cb9852858135874c" translate="yes" xml:space="preserve">
          <source>Moves &lt;em&gt;old_filename&lt;/em&gt; to &lt;em&gt;new_filename&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;old_filename&lt;/em&gt; 을 &lt;em&gt;new_filename으로&lt;/em&gt; 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="2aff9a8723caba93a061123f93fb601f324fa6b1" translate="yes" xml:space="preserve">
          <source>Moves &lt;em&gt;src_path&lt;/em&gt; to &lt;em&gt;dest_path&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;src_path&lt;/em&gt; 를 &lt;em&gt;dest_path로&lt;/em&gt; 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="da0c858618cad58710c4368349cd2ca9f361362e" translate="yes" xml:space="preserve">
          <source>Moves every &lt;em&gt;srcs&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt;.</source>
          <target state="translated">모든 &lt;em&gt;src&lt;/em&gt; 를 &lt;em&gt;dest로&lt;/em&gt; 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="f45ae57ac39343ee148704013399164fb3b9696e" translate="yes" xml:space="preserve">
          <source>Moves from the &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; to its containing &lt;code&gt;&lt;a href=&quot;reader/type#ELEMENT&quot;&gt;XML::Reader::Type::ELEMENT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">로부터 이동 &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; 의 포함에 &lt;code&gt;&lt;a href=&quot;reader/type#ELEMENT&quot;&gt;XML::Reader::Type::ELEMENT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7799d9f193f501094be2b96f6c20d31dc89d670" translate="yes" xml:space="preserve">
          <source>Moves the contents of &lt;em&gt;source&lt;/em&gt; into this slice.</source>
          <target state="translated">&lt;em&gt;소스&lt;/em&gt; 의 내용 을이 슬라이스로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="eafa57f38e02dc78c94b6b024ee861763f625a50" translate="yes" xml:space="preserve">
          <source>Moves the contents of &lt;em&gt;source&lt;/em&gt; into this slice. &lt;em&gt;source&lt;/em&gt; and &lt;code&gt;self&lt;/code&gt; may overlap; the copy is always done in a non-destructive manner.</source>
          <target state="translated">&lt;em&gt;소스&lt;/em&gt; 의 내용 을이 슬라이스로 이동합니다 . &lt;em&gt;소스&lt;/em&gt; 와 &lt;code&gt;self&lt;/code&gt; 가 겹칠 수 있습니다. 복사는 항상 비파괴적인 방식으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="fcd18a69b9136b49ffd47a48ff6f4c209fb8fd96" translate="yes" xml:space="preserve">
          <source>Moves the contents of this slice into &lt;em&gt;target&lt;/em&gt;.</source>
          <target state="translated">이 슬라이스의 내용을 &lt;em&gt;target&lt;/em&gt; 로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="6d00288195476aaa5057ccf4f20fb30cc631c565" translate="yes" xml:space="preserve">
          <source>Moves the contents of this slice into &lt;em&gt;target&lt;/em&gt;. &lt;em&gt;target&lt;/em&gt; and &lt;code&gt;self&lt;/code&gt; may overlap; the copy is always done in a non-destructive manner.</source>
          <target state="translated">이 슬라이스의 내용을 &lt;em&gt;target&lt;/em&gt; 로 이동합니다 . &lt;em&gt;대상&lt;/em&gt; 과 &lt;code&gt;self&lt;/code&gt; 가 겹칠 수 있습니다. 복사는 항상 비파괴적인 방식으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="65e63e6eef694c5c01dd58b6182fb2cdaaaf48be" translate="yes" xml:space="preserve">
          <source>Moves the reader to the next node while skipping subtrees.</source>
          <target state="translated">하위 트리를 건너 뛰면서 판독기를 다음 노드로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="ea1a7db066924ba370a5b7724460437f85c508a1" translate="yes" xml:space="preserve">
          <source>Moves the reader to the next node.</source>
          <target state="translated">리더를 다음 노드로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b391042586479b968aa6d2f65b7ebd5158c17cf7" translate="yes" xml:space="preserve">
          <source>Moves the reader to the next sibling node while skipping subtrees.</source>
          <target state="translated">하위 트리를 건너 뛰면서 판독기를 다음 형제 노드로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="1f7c944393035ca05dd07b54570e8a0a6cdb3acc" translate="yes" xml:space="preserve">
          <source>Moves the scan offset to the end of the string and clears the last match.</source>
          <target state="translated">스캔 오프셋을 문자열 끝으로 이동하고 마지막 일치 항목을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="6b0b4b8292e5c9622dc034d474c081fe1a90838d" translate="yes" xml:space="preserve">
          <source>Moves the write pointer, and the resulting string bytesize, by the given &lt;em&gt;amount&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;양만큼&lt;/em&gt; 쓰기 포인터 및 결과 문자열을 바이트 단위로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="e4a02b0d0a06a4791d1e6e2aec68f3b86bed2eb0" translate="yes" xml:space="preserve">
          <source>Moves to the &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; with the specified name.</source>
          <target state="translated">받는 이동 &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; 지정된 이름.</target>
        </trans-unit>
        <trans-unit id="c4cf93961d996f95ad19fa1991474f2c2faae45c" translate="yes" xml:space="preserve">
          <source>Moves to the first &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; of the node.</source>
          <target state="translated">노드 의 첫 번째 &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; 로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="d1d903edb42690d833908a42931a1bbdd2446450" translate="yes" xml:space="preserve">
          <source>Moves to the next &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; of the node.</source>
          <target state="translated">노드 의 다음 &lt;code&gt;&lt;a href=&quot;reader/type#ATTRIBUTE&quot;&gt;XML::Reader::Type::ATTRIBUTE&lt;/a&gt;&lt;/code&gt; 로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="4faad6c802b39e83086bf59c7e2903092d5a691b" translate="yes" xml:space="preserve">
          <source>MultiWriter</source>
          <target state="translated">MultiWriter</target>
        </trans-unit>
        <trans-unit id="ae03239a13b36868ccbd175600164d70b64ec514" translate="yes" xml:space="preserve">
          <source>MultiWriter#close</source>
          <target state="translated">MultiWriter#close</target>
        </trans-unit>
        <trans-unit id="0e95ea145fa151754775929e181174ace795f224" translate="yes" xml:space="preserve">
          <source>MultiWriter#closed?</source>
          <target state="translated">MultiWriter#closed?</target>
        </trans-unit>
        <trans-unit id="f724a05e79ef7e2df188131fc1a6ecafe21b16d7" translate="yes" xml:space="preserve">
          <source>MultiWriter#flush</source>
          <target state="translated">MultiWriter#flush</target>
        </trans-unit>
        <trans-unit id="f29e50b688025f1165ef08e49acdf1a3cc20025f" translate="yes" xml:space="preserve">
          <source>MultiWriter#read</source>
          <target state="translated">MultiWriter#read</target>
        </trans-unit>
        <trans-unit id="b01f0410ad937fac153a19b2f90b82ce20df1675" translate="yes" xml:space="preserve">
          <source>MultiWriter#sync_close=</source>
          <target state="translated">MultiWriter#sync_close=</target>
        </trans-unit>
        <trans-unit id="51f943db5059e5604ea9191cabe017266933aae2" translate="yes" xml:space="preserve">
          <source>MultiWriter#sync_close?</source>
          <target state="translated">MultiWriter#sync_close?</target>
        </trans-unit>
        <trans-unit id="8e10edf6b1bbebe8c02eaf543639aa22763e6ff2" translate="yes" xml:space="preserve">
          <source>MultiWriter#write</source>
          <target state="translated">MultiWriter#write</target>
        </trans-unit>
        <trans-unit id="e540cc3c8d6e5428254edfb4106e4210cf597393" translate="yes" xml:space="preserve">
          <source>MultiWriter.new</source>
          <target state="translated">MultiWriter.new</target>
        </trans-unit>
        <trans-unit id="efd24a28b44f580fe974280dcd2e82356d7a039c" translate="yes" xml:space="preserve">
          <source>Multiline strings</source>
          <target state="translated">여러 줄 문자열</target>
        </trans-unit>
        <trans-unit id="7fcd793756dba46c52be57d45726b5f4c1565b8d" translate="yes" xml:space="preserve">
          <source>Multipart</source>
          <target state="translated">Multipart</target>
        </trans-unit>
        <trans-unit id="921b43aacbd1fc7fe7c7f2bb57d94def2183afbe" translate="yes" xml:space="preserve">
          <source>Multipart.build</source>
          <target state="translated">Multipart.build</target>
        </trans-unit>
        <trans-unit id="c6dd0ba8e31b38f8c9cc7a286882b5498f92b874" translate="yes" xml:space="preserve">
          <source>Multipart.generate_boundary</source>
          <target state="translated">Multipart.generate_boundary</target>
        </trans-unit>
        <trans-unit id="d13e0b392ebf70547958d6c4bc1b632ed5aceaf9" translate="yes" xml:space="preserve">
          <source>Multipart.parse</source>
          <target state="translated">Multipart.parse</target>
        </trans-unit>
        <trans-unit id="b349e0554083b9e25b00734db42276c646c3a244" translate="yes" xml:space="preserve">
          <source>Multipart.parse_boundary</source>
          <target state="translated">Multipart.parse_boundary</target>
        </trans-unit>
        <trans-unit id="f174fbbd4e736add26db86f145a3dadc96fbe1ac" translate="yes" xml:space="preserve">
          <source>Multipart::Builder</source>
          <target state="translated">Multipart::Builder</target>
        </trans-unit>
        <trans-unit id="df4491acaeacaf2047de7324ed0561fca03f9adb" translate="yes" xml:space="preserve">
          <source>Multipart::Builder#body_part</source>
          <target state="translated">Multipart::Builder#body_part</target>
        </trans-unit>
        <trans-unit id="8a5cf9bd5a4796ebbcb034cd46d12915c0dcbc34" translate="yes" xml:space="preserve">
          <source>Multipart::Builder#boundary</source>
          <target state="translated">Multipart::Builder#boundary</target>
        </trans-unit>
        <trans-unit id="ad3298ffdc36344bc4988dd3954c1946d4507047" translate="yes" xml:space="preserve">
          <source>Multipart::Builder#content_type</source>
          <target state="translated">Multipart::Builder#content_type</target>
        </trans-unit>
        <trans-unit id="16ebd7dfc5230b91b52fb0db5c136d081eb572c2" translate="yes" xml:space="preserve">
          <source>Multipart::Builder#epilogue</source>
          <target state="translated">Multipart::Builder#epilogue</target>
        </trans-unit>
        <trans-unit id="f4743cebadf82d7ee11e507e320fa3dd124af3eb" translate="yes" xml:space="preserve">
          <source>Multipart::Builder#finish</source>
          <target state="translated">Multipart::Builder#finish</target>
        </trans-unit>
        <trans-unit id="5306134128f90c3a7533d4e10d7a5a257b504e95" translate="yes" xml:space="preserve">
          <source>Multipart::Builder#preamble</source>
          <target state="translated">Multipart::Builder#preamble</target>
        </trans-unit>
        <trans-unit id="0a18b772bf50f2c0169d54a014e0ef3139e20a5e" translate="yes" xml:space="preserve">
          <source>Multipart::Builder.new</source>
          <target state="translated">Multipart::Builder.new</target>
        </trans-unit>
        <trans-unit id="ea8dfc3a72a8291c1ef88273504f8425564fc619" translate="yes" xml:space="preserve">
          <source>Multipart::Parser</source>
          <target state="translated">Multipart::Parser</target>
        </trans-unit>
        <trans-unit id="75eeac703cb21e7ca13a79d60b83d048ab05023b" translate="yes" xml:space="preserve">
          <source>Multipart::Parser#has_next?</source>
          <target state="translated">Multipart::Parser#has_next?</target>
        </trans-unit>
        <trans-unit id="6b94572eac7c8ba4e8bd3ae97d4afe98c30c976a" translate="yes" xml:space="preserve">
          <source>Multipart::Parser#next</source>
          <target state="translated">Multipart::Parser#next</target>
        </trans-unit>
        <trans-unit id="481b61b5b5395b765d1a0db6399936843080d85b" translate="yes" xml:space="preserve">
          <source>Multipart::Parser.new</source>
          <target state="translated">Multipart::Parser.new</target>
        </trans-unit>
        <trans-unit id="c62a627ed08372f72dfbca49047daf70accdcb7d" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;rescue&lt;/code&gt; clauses can be specified:</source>
          <target state="translated">여러 &lt;code&gt;rescue&lt;/code&gt; 절을 지정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="181569fe01b27578419bb03cd965a92c9b22f064" translate="yes" xml:space="preserve">
          <source>Multiple assign expression.</source>
          <target state="translated">여러 대입 식.</target>
        </trans-unit>
        <trans-unit id="68b28038e86a42edf48afb5aacdbe71ea0729210" translate="yes" xml:space="preserve">
          <source>Multiple assignment</source>
          <target state="translated">여러 과제</target>
        </trans-unit>
        <trans-unit id="a45dad393a31d11ba97cbd4f06eabec0805d40fe" translate="yes" xml:space="preserve">
          <source>Multiple assignment is also available to methods that end with &lt;code&gt;=&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 로 끝나는 메소드에도 다중 지정을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3159c72a49a1eff6060cc78cde535ed2b16554ff" translate="yes" xml:space="preserve">
          <source>Multiple free variables can be specified too, for matching types of multiple arguments:</source>
          <target state="translated">여러 인수의 일치 유형에 대해 여러 개의 사용 가능한 변수도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c59f55511196ec6a184a3bfc5c552f7567ca905f" translate="yes" xml:space="preserve">
          <source>Multiple sections can be read concurrently.</source>
          <target state="translated">여러 섹션을 동시에 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70f764adf8cc7d6f9cbe66ab4fd56f1687844c75" translate="yes" xml:space="preserve">
          <source>Multiple slower than the fastest entry</source>
          <target state="translated">가장 빠른 항목보다 여러 배</target>
        </trans-unit>
        <trans-unit id="45286067d1e5f5c00f996e44cbe8d95bc7cdd77e" translate="yes" xml:space="preserve">
          <source>Multiple tags can be specified by giving an &lt;a href=&quot;https://crystal-lang.org/api/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://crystal-lang.org/api/Set.html&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Multiple tags can be specified by giving an &lt;a href=&quot;https://crystal-lang.org/api/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt;, such as &lt;a href=&quot;https://crystal-lang.org/api/Array.html&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;https://crystal-lang.org/api/Set.html&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5c7af4c1a4d7e6c3e897a9dc04b5750fed3a4a76" translate="yes" xml:space="preserve">
          <source>Multiplicative</source>
          <target state="translated">Multiplicative</target>
        </trans-unit>
        <trans-unit id="9a7b0651bfd8d1ba95977763ead852270a390c2d" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;code&gt;self&lt;/code&gt; by &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 에 &lt;em&gt;다른 것을&lt;/em&gt; 곱합니다 .</target>
        </trans-unit>
        <trans-unit id="d00ec4ed83ad3b2441f5fcd340c1353fdc709867" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;em&gt;initial&lt;/em&gt; and all results of the passed block for each element in the collection.</source>
          <target state="translated">컬렉션의 각 요소에 대해 전달 된 블록의 &lt;em&gt;초기&lt;/em&gt; 결과와 모든 결과를 곱 합니다.</target>
        </trans-unit>
        <trans-unit id="d0664d4347f6ec38829f7aa29ae2706e21fd3da4" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;em&gt;initial&lt;/em&gt; and all the elements in the collection together.</source>
          <target state="translated">컬렉션의 &lt;em&gt;초기&lt;/em&gt; 요소와 모든 요소를 ​​함께 곱 합니다.</target>
        </trans-unit>
        <trans-unit id="468937094235464016a14646dde60ff6599f0e5f" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;em&gt;initial&lt;/em&gt; and all the elements in the collection together. The type of &lt;em&gt;initial&lt;/em&gt; will be the type of the product, so use this if (for instance) you need to specify a large enough type to avoid overflow.</source>
          <target state="translated">컬렉션의 &lt;em&gt;초기&lt;/em&gt; 요소와 모든 요소를 ​​함께 곱 합니다. 의 유형 &lt;em&gt;초기에는&lt;/em&gt; (예를 들어) 당신이 피하기 오버 플로우에 충분히 큰 유형을 지정해야하는 경우 그래서 이것을 사용, 제품의 유형이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="e868900703e12606bf25d4b5d8b67243e93f5b93" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;em&gt;value&lt;/em&gt; by 2 raised to power &lt;em&gt;exp&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;값&lt;/em&gt; 에 2를 곱하여 power &lt;em&gt;exp를 올립니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="08a405f914a12a4cd7ece348457a9f1f8fa0a27c" translate="yes" xml:space="preserve">
          <source>Multiplies all results of the passed block for each element in the collection.</source>
          <target state="translated">컬렉션의 각 요소에 대해 전달 된 블록의 모든 결과를 곱합니다.</target>
        </trans-unit>
        <trans-unit id="e13ce002bed60fb9a545a7345051583900cf8872" translate="yes" xml:space="preserve">
          <source>Multiplies all the elements in the collection together.</source>
          <target state="translated">컬렉션의 모든 요소를 ​​함께 곱합니다.</target>
        </trans-unit>
        <trans-unit id="3e05d99d3e31b47586f0fa205c4705b79b369473" translate="yes" xml:space="preserve">
          <source>Multiplies the rational by (2 ** &lt;em&gt;other&lt;/em&gt;)</source>
          <target state="translated">유리수에 (2 ** &lt;em&gt;기타&lt;/em&gt; )를 곱합니다</target>
        </trans-unit>
        <trans-unit id="3977533f7c6c46a8ff98e118ce5d032ab3c8aab6" translate="yes" xml:space="preserve">
          <source>Must return an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; over the elements in this collection.</source>
          <target state="translated">이 컬렉션의 요소에 대해 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 를 반환해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3804efc8bd456dc2e61a8517ffaf2cf03d4c8aef" translate="yes" xml:space="preserve">
          <source>Must yield this collection's elements to the block.</source>
          <target state="translated">이 컬렉션의 요소를 블록에 양보해야합니다.</target>
        </trans-unit>
        <trans-unit id="183fc4ba84e8575c7345af82f8c122456e407e06" translate="yes" xml:space="preserve">
          <source>Mutable structs are still allowed, but code involving them must remember that passing a struct to a method actually passes a copy to it, so the method should return the modified struct:</source>
          <target state="translated">가변 구조체는 여전히 허용되지만, 구조체와 관련된 코드는 메서드에 구조체를 전달하면 실제로 복사본을 전달하므로 메서드는 수정 된 구조체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="f5b391a5fa0126b6a9864867034f924455b0621a" translate="yes" xml:space="preserve">
          <source>Mutable structs are still allowed, but you should be careful when writing code involving mutability if you want to avoid surprises that are described below.</source>
          <target state="translated">가변 구조체는 여전히 허용되지만 아래 설명 된 놀라움을 피하려면 가변성 관련 코드를 작성할 때주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="bd2b0f087b02e413546a53c4f93f4cdf1581cc30" translate="yes" xml:space="preserve">
          <source>Mutex</source>
          <target state="translated">Mutex</target>
        </trans-unit>
        <trans-unit id="f510e0e3bff2847856bdc25cc325661e8f40b1cf" translate="yes" xml:space="preserve">
          <source>Mutex#lock</source>
          <target state="translated">Mutex#lock</target>
        </trans-unit>
        <trans-unit id="d679f0d63fe15c3e2c90c409c38c1ed765ce5b2d" translate="yes" xml:space="preserve">
          <source>Mutex.new</source>
          <target state="translated">Mutex.new</target>
        </trans-unit>
        <trans-unit id="a8ad860c15810cce0e7beac1c91da3ab2cb22c47" translate="yes" xml:space="preserve">
          <source>NOTE</source>
          <target state="translated">NOTE</target>
        </trans-unit>
        <trans-unit id="a92aa53eb9a602785fcfe3dff7c7c3ccfcd1609b" translate="yes" xml:space="preserve">
          <source>NOTE &lt;code&gt;.dup&lt;a href=&quot;base#final:Bytes-instance-method&quot;&gt;.final&lt;/a&gt;&lt;/code&gt; call may be used to get an intermediate hash value.</source>
          <target state="translated">NOTE &lt;code&gt;.dup&lt;a href=&quot;base#final:Bytes-instance-method&quot;&gt;.final&lt;/a&gt;&lt;/code&gt; call may be used to get an intermediate hash value.</target>
        </trans-unit>
        <trans-unit id="349f98427995e369489f8bc2f9e089d5f4896cbf" translate="yes" xml:space="preserve">
          <source>NOTE &lt;code&gt;&lt;a href=&quot;http/params&quot;&gt;HTTP::Params&lt;/a&gt;&lt;/code&gt; provides a higher-level API for handling &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; serialized data.</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;http/params&quot;&gt;HTTP::Params&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 직렬화 된 데이터 를 처리하기위한 고급 API를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="876f04ed5a013d748ee977ad3a75c887bbd1b0bf" translate="yes" xml:space="preserve">
          <source>NOTE &lt;code&gt;CDATA&lt;/code&gt; end sequences written within the block need to be escaped manually.</source>
          <target state="translated">NOTE &lt;code&gt;CDATA&lt;/code&gt; end sequences written within the block need to be escaped manually.</target>
        </trans-unit>
        <trans-unit id="dbfb21434f6f751c539f436ca09e54187b4fa6ec" translate="yes" xml:space="preserve">
          <source>NOTE &lt;code&gt;require &quot;uuid/json&quot;&lt;/code&gt; is required to opt-in to this feature.</source>
          <target state="translated">참고 &lt;code&gt;require &quot;uuid/json&quot;&lt;/code&gt; 이 기능에 수신 거부에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f3ef84109d5c58c75f3aa3185286ef139aebe58b" translate="yes" xml:space="preserve">
          <source>NOTE &lt;em&gt;mode&lt;/em&gt; is ignored on windows.</source>
          <target state="translated">참고 &lt;em&gt;모드&lt;/em&gt; 는 창에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7e2d7c7953cc4c1056da244a899e93606b23340c" translate="yes" xml:space="preserve">
          <source>NOTE &lt;em&gt;optval&lt;/em&gt; is restricted to &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; until sizeof works on variables.</source>
          <target state="translated">주 &lt;em&gt;optval&lt;/em&gt; 은 sizeof가 변수에서 작동 할 때까지 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 로 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="2612695948ff4945ff02e43bb2630a0aec3e36f7" translate="yes" xml:space="preserve">
          <source>NOTE &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; must be able to respond to &lt;code&gt;to_slice&lt;/code&gt;.</source>
          <target state="translated">참고 &lt;em&gt;x&lt;/em&gt; 와 &lt;em&gt;y&lt;/em&gt; 는 &lt;code&gt;to_slice&lt;/code&gt; 에 응답 할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7279ea825a9a4d5b7acd7881b3561342cf0a00a6" translate="yes" xml:space="preserve">
          <source>NOTE A gzip stream can contain zero or more members. If it contains no members, &lt;code&gt;&lt;a href=&quot;reader#header:Header?-instance-method&quot;&gt;#header&lt;/a&gt;&lt;/code&gt; will be &lt;code&gt;nil&lt;/code&gt;. If it contains one or more members, only the first header will be recorded here. This is because gzipping multiple members is not common as one usually combines gzip with tar. If, however, multiple members are present then reading from this reader will return the concatenation of all the members.</source>
          <target state="translated">참고 gzip 스트림에는 0 개 이상의 멤버가 포함될 수 있습니다. 멤버가 없으면 &lt;code&gt;&lt;a href=&quot;reader#header:Header?-instance-method&quot;&gt;#header&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;nil&lt;/code&gt; 입니다. 멤버가 하나 이상 포함 된 경우 첫 번째 헤더 만 여기에 기록됩니다. 여러 멤버를 gzipping하는 것은 일반적으로 gzip을 tar와 결합하기 때문에 일반적이지 않기 때문입니다. 그러나 여러 구성원이있는 경우이 독자를 읽으면 모든 구성원의 연결이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="29a839b966a703d86463da8bb0922e4287a1b6c4" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#cd(path)-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir#cd(path)-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="fa7d3500778d2f61929d55a1891d143af2393e90" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#cd(path)-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt; with block</source>
          <target state="translated">참고 블록 이있는 &lt;code&gt;&lt;a href=&quot;dir#cd(path)-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="bfe74c06a80b2a548a698dcd899f75f9edfc8588" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#cd(path:Path%7CString):String-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#cd(path:Path%7CString):String-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93d68c1f75b80c8a15a23c89086150b842e47803" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#cd(path:Path%7CString):String-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt; with block</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#cd(path:Path%7CString):String-class-method&quot;&gt;Dir.cd&lt;/a&gt;&lt;/code&gt; with block</target>
        </trans-unit>
        <trans-unit id="c9de9ef264bc0d06f49825952a8eeae815436329" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="f1d455925b3caf65f763f25575200e80ba3301b0" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#mkdir(path,mode=511)-class-method&quot;&gt;Dir.mkdir&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir#mkdir(path,mode=511)-class-method&quot;&gt;Dir.mkdir&lt;/a&gt;&lt;/code&gt; 의 별명</target>
        </trans-unit>
        <trans-unit id="9b6ba23e54ebcea15aacc23842ed8c1b05e0ff38" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#mkdir(path:Path%7CString,mode=511):Nil-class-method&quot;&gt;Dir.mkdir&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#mkdir(path:Path%7CString,mode=511):Nil-class-method&quot;&gt;Dir.mkdir&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc794e8838253a0957712080b8518eb5b2bd587b" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#mkdir_p(path,mode=511)-class-method&quot;&gt;Dir.mkdir_p&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir#mkdir_p(path,mode=511)-class-method&quot;&gt;Dir.mkdir_p&lt;/a&gt;&lt;/code&gt; 의 별명</target>
        </trans-unit>
        <trans-unit id="bee2679e20d7b2772b9d0a925fbd7f1b8d835684" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#mkdir_p(path:Path%7CString,mode=511):Nil-class-method&quot;&gt;Dir.mkdir_p&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#mkdir_p(path:Path%7CString,mode=511):Nil-class-method&quot;&gt;Dir.mkdir_p&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c14412de7291e9fa65773fe74d121b655682cd6d" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#rmdir(path)-class-method&quot;&gt;Dir.rmdir&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir#rmdir(path)-class-method&quot;&gt;Dir.rmdir&lt;/a&gt;&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="b51fc54fbfd6df1ceacae34e9f9b54e2490db36c" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#rmdir(path:Path%7CString)-class-method&quot;&gt;Dir.rmdir&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;dir#rmdir(path:Path%7CString)-class-method&quot;&gt;Dir.rmdir&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="754470287068b5b838f7a7254576a857d56e6bfd" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#delete(path:Path%7CString)-class-method&quot;&gt;File.delete&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;file#delete(path:Path%7CString)-class-method&quot;&gt;File.delete&lt;/a&gt;&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="bdf5bb64f3a2fa726f423789c6d64a3c4366829f" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#rename(old_filename,new_filename):Nil-class-method&quot;&gt;File.rename&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;file#rename(old_filename,new_filename):Nil-class-method&quot;&gt;File.rename&lt;/a&gt;&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="581594001d8532114d9b18c5ac43b62466c44551" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#rename(old_filename:Path%7CString,new_filename:Path%7CString):Nil-class-method&quot;&gt;File.rename&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#rename(old_filename:Path%7CString,new_filename:Path%7CString):Nil-class-method&quot;&gt;File.rename&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d1376ede95a71b6c68753674c6e1c2a248987ee" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#same_content?(path1:Path%7CString,path2:Path%7CString):Bool-class-method&quot;&gt;File.same_content?&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#same_content?(path1:Path%7CString,path2:Path%7CString):Bool-class-method&quot;&gt;File.same_content?&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63abffb6a4585ab658039fabe0c75f42a79ac017" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#touch(filename:Path%7CString,time:Time=Time.utc)-class-method&quot;&gt;File.touch&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#touch(filename:Path%7CString,time:Time=Time.utc)-class-method&quot;&gt;File.touch&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec044da54034df5010a72cc474b1f8b5106e981b" translate="yes" xml:space="preserve">
          <source>NOTE Alias of &lt;code&gt;&lt;a href=&quot;file#touch(filename:String,time:Time=Time.utc)-class-method&quot;&gt;File.touch&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;file#touch(filename:String,time:Time=Time.utc)-class-method&quot;&gt;File.touch&lt;/a&gt;&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="e3eefc3acc88491138a614189c63436816d77dc1" translate="yes" xml:space="preserve">
          <source>NOTE All keys and values are strings. You must take care to cast other types at runtime, e.g. integer port numbers.</source>
          <target state="translated">참고 모든 키와 값은 문자열입니다. 런타임시 다른 유형 (예 : 정수 포트 번호)을 캐스트하도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="eefaffccd0f19fe2896a4e6f8d08b38c4f3af675" translate="yes" xml:space="preserve">
          <source>NOTE Although a &lt;code&gt;&lt;a href=&quot;channel&quot;&gt;Channel&lt;/a&gt;(&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;)&lt;/code&gt; or any other nilable types like &lt;code&gt;&lt;a href=&quot;channel&quot;&gt;Channel&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;?)&lt;/code&gt; are valid they are discouraged since from certain methods or constructs it receiving a &lt;code&gt;nil&lt;/code&gt; as data will be indistinguishable from a closed channel.</source>
          <target state="translated">NOTE Although a &lt;code&gt;&lt;a href=&quot;channel&quot;&gt;Channel&lt;/a&gt;(&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;)&lt;/code&gt; or any other nilable types like &lt;code&gt;&lt;a href=&quot;channel&quot;&gt;Channel&lt;/a&gt;(&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;?)&lt;/code&gt; are valid they are discouraged since from certain methods or constructs it receiving a &lt;code&gt;nil&lt;/code&gt; as data will be indistinguishable from a closed channel.</target>
        </trans-unit>
        <trans-unit id="091c2845e87d5b144576dda373b023e8085d355c" translate="yes" xml:space="preserve">
          <source>NOTE BigRational are fundamentally more precise than BigDecimals, which makes initialization from them risky.</source>
          <target state="translated">참고 BigRational은 BigDecimal보다 기본적으로 더 정확하므로 초기화가 위험합니다.</target>
        </trans-unit>
        <trans-unit id="6fef8820bbccc7ac5c2963190fa5bebc59d1535b" translate="yes" xml:space="preserve">
          <source>NOTE Drives are only available for Windows paths. It can either be a drive letter (&lt;code&gt;C:&lt;/code&gt;) or a UNC share (&lt;code&gt;\\host\share&lt;/code&gt;).</source>
          <target state="translated">참고 드라이브는 Windows 경로에서만 사용할 수 있습니다. 드라이브 문자 ( &lt;code&gt;C:&lt;/code&gt; :) 또는 UNC 공유 ( &lt;code&gt;\\host\share&lt;/code&gt; ) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb8657978454cb8e7b141b3996d984e3a3ef2fc1" translate="yes" xml:space="preserve">
          <source>NOTE Entries might not have correct values for crc32, compressed_size, uncompressed_size and comment, because when reading a zip file directly from a stream this information might be stored later in the zip stream. If you need this information, consider using &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참고 항목은 스트림에서 직접 zip 파일을 읽을 때이 정보가 나중에 zip 스트림에 저장 될 수 있으므로 crc32, compress_size, uncompressed_size 및 comment에 대한 올바른 값을 갖지 않을 수 있습니다. 이 정보가 필요한 경우 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5fa08af362dcbaf8bb44e6ba6370f2e2faa6799" translate="yes" xml:space="preserve">
          <source>NOTE Floats are fundamentally less precise than BigDecimals, which makes conversion to them risky.</source>
          <target state="translated">참고 Float는 BigDecimal보다 기본적으로 정확도가 떨어 지므로 변환이 위험합니다.</target>
        </trans-unit>
        <trans-unit id="782cff932c69c98ff8b6764dedcda97f12ccb049" translate="yes" xml:space="preserve">
          <source>NOTE Floats are fundamentally less precise than BigDecimals, which makes initialization from them risky.</source>
          <target state="translated">참고 Float는 BigDecimal보다 기본적으로 정확도가 떨어 지므로 초기화가 위험합니다.</target>
        </trans-unit>
        <trans-unit id="ec8ef64206fb6f7b2d6522240a032dd3578c35a3" translate="yes" xml:space="preserve">
          <source>NOTE For the below example to work, a key pair should be attained.</source>
          <target state="translated">참고 아래 예제가 작동하려면 키 페어가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="63c1982517b4458a226dba40186c9ae17bde16b6" translate="yes" xml:space="preserve">
          <source>NOTE If &lt;code&gt;&lt;a href=&quot;toplevel#at_exit(&amp;amp;handler:Int32,Exception?-%3E):Nil-class-method&quot;&gt;at_exit&lt;/a&gt;&lt;/code&gt; is called inside an &lt;code&gt;&lt;a href=&quot;toplevel#at_exit(&amp;amp;handler:Int32,Exception?-%3E):Nil-class-method&quot;&gt;at_exit&lt;/a&gt;&lt;/code&gt; handler, it will be called right after the current &lt;code&gt;&lt;a href=&quot;toplevel#at_exit(&amp;amp;handler:Int32,Exception?-%3E):Nil-class-method&quot;&gt;at_exit&lt;/a&gt;&lt;/code&gt; handler ends, and then other handlers will be invoked.</source>
          <target state="translated">NOTE If &lt;code&gt;&lt;a href=&quot;toplevel#at_exit(&amp;amp;handler:Int32,Exception?-%3E):Nil-class-method&quot;&gt;at_exit&lt;/a&gt;&lt;/code&gt; is called inside an &lt;code&gt;&lt;a href=&quot;toplevel#at_exit(&amp;amp;handler:Int32,Exception?-%3E):Nil-class-method&quot;&gt;at_exit&lt;/a&gt;&lt;/code&gt; handler, it will be called right after the current &lt;code&gt;&lt;a href=&quot;toplevel#at_exit(&amp;amp;handler:Int32,Exception?-%3E):Nil-class-method&quot;&gt;at_exit&lt;/a&gt;&lt;/code&gt; handler ends, and then other handlers will be invoked.</target>
        </trans-unit>
        <trans-unit id="0e3cff8fe8b7acd0fbb83c25328f92ba09492b97" translate="yes" xml:space="preserve">
          <source>NOTE If the content is a &lt;code&gt;&lt;a href=&quot;slice&quot;&gt;Slice&lt;/a&gt;(&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt;, those bytes will be written. If it's an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, all bytes from the &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will be written. Otherwise, the string representation of &lt;em&gt;content&lt;/em&gt; will be written (the result of invoking &lt;code&gt;to_s&lt;/code&gt; on &lt;em&gt;content&lt;/em&gt;).</source>
          <target state="translated">참고 내용이 &lt;code&gt;&lt;a href=&quot;slice&quot;&gt;Slice&lt;/a&gt;(&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt; 이면 해당 바이트가 기록됩니다. 그것이 있다면 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 모든 바이트 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 가 기록됩니다. 그렇지 않으면 &lt;em&gt;컨텐츠&lt;/em&gt; 의 문자열 표현 이 작성됩니다 ( &lt;em&gt;content에서 &lt;/em&gt; &lt;code&gt;to_s&lt;/code&gt; 를 호출 한 결과 ).&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6302892522524e9d1c28bc70167f44b8361e705e" translate="yes" xml:space="preserve">
          <source>NOTE If you'd like to format the context as JSON, remember to &lt;code&gt;require &quot;log/json&quot;&lt;/code&gt;.</source>
          <target state="translated">NOTE If you'd like to format the context as JSON, remember to &lt;code&gt;require &quot;log/json&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b6363ab4556558d20342bde740a56d2dd787e28" translate="yes" xml:space="preserve">
          <source>NOTE It won't trigger if the &lt;code&gt;select&lt;/code&gt; has an &lt;code&gt;else&lt;/code&gt; case (i.e.: a non-blocking select).</source>
          <target state="translated">NOTE It won't trigger if the &lt;code&gt;select&lt;/code&gt; has an &lt;code&gt;else&lt;/code&gt; case (i.e.: a non-blocking select).</target>
        </trans-unit>
        <trans-unit id="f5c95a3f172729641744275008baaac8c8843128" translate="yes" xml:space="preserve">
          <source>NOTE JSON object keys are always strings but they can still be parsed and deserialized to other types. To deserialize, define a &lt;code&gt;T.from_json_object_key?(key : String) : T?&lt;/code&gt; method, which can return &lt;code&gt;nil&lt;/code&gt; if the string can't be parsed into that type. To serialize, define a &lt;code&gt;to_json_object_key : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; method can be serialized that way. All integer and float types in the standard library can be deserialized that way.</source>
          <target state="translated">참고 JSON 객체 키는 항상 문자열이지만 다른 유형으로 구문 분석하고 역 직렬화 할 수 있습니다. 역 직렬화하려면 &lt;code&gt;T.from_json_object_key?(key : String) : T?&lt;/code&gt; 문자열을 해당 유형으로 구문 분석 할 수없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 리턴 할 수있는 메소드 입니다. 직렬화하려면 &lt;code&gt;to_json_object_key : &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 메소드를 직렬화 할 수 있습니다. 표준 라이브러리의 모든 정수 및 부동 소수점 유형은 이러한 방식으로 직렬화 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f90fe7c858835d63ce6ff0224e9ef94f32b5fc3" translate="yes" xml:space="preserve">
          <source>NOTE Maximum of 253 characters are allowed, with 2 bytes reserved for storage. In practice, many platforms will disallow anything longer than 63 characters.</source>
          <target state="translated">참고 최대 253 자까지 허용되며 2 바이트는 저장 용으로 예약되어 있습니다. 실제로 많은 플랫폼에서 63자를 초과하는 것은 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="730369e058d774f918fd33e863c3d282d016218a" translate="yes" xml:space="preserve">
          <source>NOTE Metadata is flushed even when &lt;em&gt;flush_metadata&lt;/em&gt; is false on Windows and DragonFly BSD.</source>
          <target state="translated">NOTE Metadata is flushed even when &lt;em&gt;flush_metadata&lt;/em&gt; is false on Windows and DragonFly BSD.</target>
        </trans-unit>
        <trans-unit id="ebffa40836ef50d461db0e19919f6c862fbdaa8e" translate="yes" xml:space="preserve">
          <source>NOTE Note that the keys in this hash XML attributes that would be used to define this namespace, such as &lt;code&gt;&quot;xmlns:prefix&quot;&lt;/code&gt;, not just the prefix.</source>
          <target state="translated">참고이 네임 스페이스를 정의하는 데 사용되는이 해시 XML 속성의 키 (예 &lt;code&gt;&quot;xmlns:prefix&quot;&lt;/code&gt; 뿐만 아니라 &quot;xmlns : prefix&quot; )에 유의하십시오 .</target>
        </trans-unit>
        <trans-unit id="6db3e461a8f7d4afc614a5319478cfb394e70ee9" translate="yes" xml:space="preserve">
          <source>NOTE Only &lt;code&gt;/&lt;/code&gt; is recognized as path separator in both &lt;em&gt;pattern&lt;/em&gt; and &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">주 &lt;code&gt;/&lt;/code&gt; &lt;em&gt;패턴&lt;/em&gt; 과 &lt;em&gt;경로&lt;/em&gt; 모두에서 경로 구분자 로만 인식됩니다 .</target>
        </trans-unit>
        <trans-unit id="a4aecb2a9a9f9064cc5f33f63f874fc7e0db762a" translate="yes" xml:space="preserve">
          <source>NOTE Path separator in patterns needs to be always &lt;code&gt;/&lt;/code&gt;. The returned file names use system-specific path separators.</source>
          <target state="translated">참고 패턴의 경로 구분 기호는 항상 &lt;code&gt;/&lt;/code&gt; 이어야 합니다. 리턴 된 파일 이름은 시스템 특정 경로 구분 기호를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="59187e0818908c856cfc4c4eb6952e30467f21db" translate="yes" xml:space="preserve">
          <source>NOTE Relative paths are resolved to the current working directory.</source>
          <target state="translated">참고 상대 경로는 현재 작업 디렉토리로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="25368c801cec00617b8fed8662f9df6b881ef394" translate="yes" xml:space="preserve">
          <source>NOTE Since &lt;code&gt;&lt;a href=&quot;metadata&quot;&gt;Log::Metadata&lt;/a&gt;&lt;/code&gt; is immutable, it's safe to share this instance.</source>
          <target state="translated">NOTE Since &lt;code&gt;&lt;a href=&quot;metadata&quot;&gt;Log::Metadata&lt;/a&gt;&lt;/code&gt; is immutable, it's safe to share this instance.</target>
        </trans-unit>
        <trans-unit id="1d38fcd701dd8c04a7cf8a0fb132f824e8cf246a" translate="yes" xml:space="preserve">
          <source>NOTE The actual return value is system-dependent, so it mustn't be relied on in other contexts. See also: &lt;code&gt;&lt;a href=&quot;process#quote_posix(args:Enumerable(String)):String-class-method&quot;&gt;.quote_posix&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">NOTE The actual return value is system-dependent, so it mustn't be relied on in other contexts. See also: &lt;code&gt;&lt;a href=&quot;process#quote_posix(args:Enumerable(String)):String-class-method&quot;&gt;.quote_posix&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb847afc0fa08407e7574d2c90dc776904c5c74" translate="yes" xml:space="preserve">
          <source>NOTE The default value is passed by reference:</source>
          <target state="translated">참고 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b13fb87bb30478cc382b31f5ab3089424d60205" translate="yes" xml:space="preserve">
          <source>NOTE This is a class method, not an instance method because an instance method &lt;code&gt;&lt;a href=&quot;enum#valid?(value:self):Bool-class-method&quot;&gt;.valid?&lt;/a&gt;&lt;/code&gt; is defined by the language when a user defines an enum member named &lt;code&gt;Valid&lt;/code&gt;.</source>
          <target state="translated">NOTE This is a class method, not an instance method because an instance method &lt;code&gt;&lt;a href=&quot;enum#valid?(value:self):Bool-class-method&quot;&gt;.valid?&lt;/a&gt;&lt;/code&gt; is defined by the language when a user defines an enum member named &lt;code&gt;Valid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e6ff8f468bc638fcdbdf66039b4d3f161bc1d2a" translate="yes" xml:space="preserve">
          <source>NOTE This is a pseudo-method provided directly by the Crystal compiler. It cannot be redefined nor overridden.</source>
          <target state="translated">NOTE This is a pseudo-method provided directly by the Crystal compiler. It cannot be redefined nor overridden.</target>
        </trans-unit>
        <trans-unit id="7235adb20bbae2ae8f9fd7bf46b97afaf334ce08" translate="yes" xml:space="preserve">
          <source>NOTE This type might be removed. :nodoc:</source>
          <target state="translated">참고이 유형은 제거되었을 수 있습니다. : 노독 :</target>
        </trans-unit>
        <trans-unit id="a6a21ae72d718464c962103be72e5d82c22d3d7e" translate="yes" xml:space="preserve">
          <source>NOTE Using negative amounts will cause the timeout to not trigger.</source>
          <target state="translated">NOTE Using negative amounts will cause the timeout to not trigger.</target>
        </trans-unit>
        <trans-unit id="55b0c8733cc1646c6190cfb7e66f20565e0b6314" translate="yes" xml:space="preserve">
          <source>NOTE When &lt;code&gt;nil&lt;/code&gt; is returned from &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;array#sort:Array(T)-instance-method&quot;&gt;Array#sort&lt;/a&gt;&lt;/code&gt; and related sorting methods will perform slightly slower.</source>
          <target state="translated">주 &lt;code&gt;nil&lt;/code&gt; 에서 반환 &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;array#sort:Array(T)-instance-method&quot;&gt;Array#sort&lt;/a&gt;&lt;/code&gt; 및 관련 정렬 방법은 약간 느리게 수행합니다.</target>
        </trans-unit>
        <trans-unit id="d4d237d0a64572e1176e210c68b928e573462f66" translate="yes" xml:space="preserve">
          <source>NOTE When using mutable data types as keys, changing the value of a key after it was inserted into the &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; may lead to undefined behaviour. This can be restored by re-indexing the hash with &lt;code&gt;&lt;a href=&quot;hash#rehash:Nil-instance-method&quot;&gt;#rehash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참고 변경 가능한 데이터 형식을 키로 사용하는 경우 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 에 삽입 한 후 키 값을 변경하면 동작이 정의되지 않을 수 있습니다. &lt;code&gt;&lt;a href=&quot;hash#rehash:Nil-instance-method&quot;&gt;#rehash&lt;/a&gt;&lt;/code&gt; 로 해시를 다시 색인화하여 복원 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac7a4a276e814bae7cf3a1f143778bc749524f36" translate="yes" xml:space="preserve">
          <source>NOTE only compression methods 0 (STORED) and 8 (DEFLATED) are supported. Additionally, ZIP64 is not yet supported.</source>
          <target state="translated">참고 압축 방법 0 (STORED) 및 8 (DEFLATED) 만 지원됩니다. 또한 ZIP64는 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="caecbabab506e22afaf08d2e5868c070bd29b95e" translate="yes" xml:space="preserve">
          <source>NOTE the compiler is allowed to cache the executable generated for &lt;em&gt;filename&lt;/em&gt; and only recompile it if any of the files it depends on changes (their modified time). This is why it's &lt;strong&gt;strongly discouraged&lt;/strong&gt; to use a program for &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; that changes in subsequent compilations (for example, if it executes shell commands at compile time, or other macro run programs). It's also strongly discouraged to have a macro run program take a lot of time, because this will slow down compilation times. Reading files is OK, opening an HTTP connection at compile-time will most likely result in very slow compilations.</source>
          <target state="translated">참고 컴파일러는 &lt;em&gt;파일 이름에&lt;/em&gt; 대해 생성 된 실행 파일을 캐시 할 수 있으며 변경에 의존하는 파일 (수정 된 시간)에 따라 다시 컴파일 할 수 있습니다. 그렇기 때문에 후속 컴파일에서 변경되는 &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; 프로그램 (예 : 컴파일시 쉘 명령을 실행하는 경우 또는 다른 매크로 실행 프로그램) 을 사용 &lt;strong&gt;하지 않는 것이 좋습니다&lt;/strong&gt; . 또한 매크로 실행 프로그램에 많은 시간이 걸리도록 권장하지 않습니다. 컴파일 시간이 느려질 것입니다. 파일을 읽을 수 있습니다. 컴파일 타임에 HTTP 연결을 열면 컴파일 속도가 매우 느려집니다.</target>
        </trans-unit>
        <trans-unit id="960bd89045a52326db915c4b7acc913e04b31b69" translate="yes" xml:space="preserve">
          <source>NOTE there should never be a need to call this method instead of using string interpolation.</source>
          <target state="translated">NOTE there should never be a need to call this method instead of using string interpolation.</target>
        </trans-unit>
        <trans-unit id="43009c8f655dfb06149738ce6ac869eb36a0d185" translate="yes" xml:space="preserve">
          <source>NOTE unless created with a block, &lt;code&gt;&lt;a href=&quot;writer#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; must be invoked after all data has been written to a &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Gzip::Writer&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">참고 블록으로 생성하지 않는 한 모든 데이터가 &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Gzip::Writer&lt;/a&gt;&lt;/code&gt; 인스턴스 에 작성된 후에는 &lt;code&gt;&lt;a href=&quot;writer#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8f34b31cce411ed8df552cdefcc683d9d10456b3" translate="yes" xml:space="preserve">
          <source>NOTE unless created with a block, &lt;code&gt;&lt;a href=&quot;writer#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; must be invoked after all data has been written to a Flate::Writer instance.</source>
          <target state="translated">참고 블록으로 작성하지 않으면 모든 데이터가 Flate :: Writer 인스턴스에 작성된 후 &lt;code&gt;&lt;a href=&quot;writer#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="ed9c0611cdbef07eb41b7e26d5ac606c09515632" translate="yes" xml:space="preserve">
          <source>NOTE unless created with a block, &lt;code&gt;&lt;a href=&quot;writer#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; must be invoked after all data has been written to a Zlib::Writer instance.</source>
          <target state="translated">참고 블록으로 생성하지 않으면 모든 데이터가 Zlib :: Writer 인스턴스에 기록 된 후 &lt;code&gt;&lt;a href=&quot;writer#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="fc6dc102d5f300e82e2271e4ae955c63ab12b65c" translate="yes" xml:space="preserve">
          <source>NOTE: Be sure to replace all instances of &lt;code&gt;[your-github-name]&lt;/code&gt; in the Crystal-generated README template with your GitHub username.</source>
          <target state="translated">참고 : Crystal 생성 README 템플릿에서 &lt;code&gt;[your-github-name]&lt;/code&gt; 의 모든 인스턴스를 GitHub 사용자 이름 으로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="09b9a49b57483356eb6388675d70d04ae5331783" translate="yes" xml:space="preserve">
          <source>NOTE: Be sure to replace all instances of &lt;code&gt;[your-github-name]&lt;/code&gt; in the Crystal-generated README template with your GitHub/GitLab username. If you're using GitLab, you'll also want to change all instances of &lt;code&gt;github&lt;/code&gt; with &lt;code&gt;gitlab&lt;/code&gt;.</source>
          <target state="translated">NOTE: Be sure to replace all instances of &lt;code&gt;[your-github-name]&lt;/code&gt; in the Crystal-generated README template with your GitHub/GitLab username. If you're using GitLab, you'll also want to change all instances of &lt;code&gt;github&lt;/code&gt; with &lt;code&gt;gitlab&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ef6e7d46265add741ff4fe57c167f02ded7ffac" translate="yes" xml:space="preserve">
          <source>NOTE: If you like, feel free to replace &lt;code&gt;public&lt;/code&gt; with &lt;code&gt;origin&lt;/code&gt;, or a remote name of your choosing.</source>
          <target state="translated">참고 : 원하는 경우 &lt;code&gt;public&lt;/code&gt; 을 &lt;code&gt;origin&lt;/code&gt; 또는 원하는 원격 이름으로 바꾸 십시오.</target>
        </trans-unit>
        <trans-unit id="2ebc8e18d61fcc01f9ccbcf3a591e0dfb5626c26" translate="yes" xml:space="preserve">
          <source>NOTE: When running interactively, stdin can usually be closed by typing the end of transmission character (&lt;code&gt;Ctrl+D&lt;/code&gt;).</source>
          <target state="translated">참고 : 대화식으로 실행하는 경우 일반적으로 전송 끝 문자 ( &lt;code&gt;Ctrl+D&lt;/code&gt; ) 를 입력하여 stdin을 닫을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="f2ab34573e168918bf72dc73ec10c4b5b1ba3f14" translate="yes" xml:space="preserve">
          <source>Named arguments</source>
          <target state="translated">명명 된 인수</target>
        </trans-unit>
        <trans-unit id="977fe29a2a0f14ecf92912be23cfe4dabeb417fa" translate="yes" xml:space="preserve">
          <source>NamedTuple</source>
          <target state="translated">NamedTuple</target>
        </trans-unit>
        <trans-unit id="e5fd89739edb4241075878a8ca9ea443b7f2cce2" translate="yes" xml:space="preserve">
          <source>NamedTuple#==</source>
          <target state="translated">NamedTuple#==</target>
        </trans-unit>
        <trans-unit id="b7e65e1e2fb241bed6249599d5c7137841adeba2" translate="yes" xml:space="preserve">
          <source>NamedTuple#[]</source>
          <target state="translated">NamedTuple#[]</target>
        </trans-unit>
        <trans-unit id="72196da7b43fffa5b8f9f81a3b2623db33ac4f7c" translate="yes" xml:space="preserve">
          <source>NamedTuple#[]?</source>
          <target state="translated">NamedTuple#[]?</target>
        </trans-unit>
        <trans-unit id="f864eee9111439ed0c3296d1de8fb00a059af7c5" translate="yes" xml:space="preserve">
          <source>NamedTuple#dig</source>
          <target state="translated">NamedTuple#dig</target>
        </trans-unit>
        <trans-unit id="00c14efa74386138d850798ca0e4023673601a51" translate="yes" xml:space="preserve">
          <source>NamedTuple#dig?</source>
          <target state="translated">NamedTuple#dig?</target>
        </trans-unit>
        <trans-unit id="4ad4ec0afa4feb7223471f62ff21929d8bbecf86" translate="yes" xml:space="preserve">
          <source>NamedTuple#each</source>
          <target state="translated">NamedTuple#each</target>
        </trans-unit>
        <trans-unit id="335ce7a773cb900340cbfd3c336f2999d98d96e4" translate="yes" xml:space="preserve">
          <source>NamedTuple#from</source>
          <target state="translated">NamedTuple#from</target>
        </trans-unit>
        <trans-unit id="7642f960050af7d0690c44e746b322dfc6026ffe" translate="yes" xml:space="preserve">
          <source>NamedTuple#hash</source>
          <target state="translated">NamedTuple#hash</target>
        </trans-unit>
        <trans-unit id="1e4281e6589bcdd2a2df1eec2202c2e3bed3d33c" translate="yes" xml:space="preserve">
          <source>NamedTuple#keys</source>
          <target state="translated">NamedTuple#keys</target>
        </trans-unit>
        <trans-unit id="cca66580aea2a19233e343065c6a83f1027ddcdb" translate="yes" xml:space="preserve">
          <source>NamedTuple#map</source>
          <target state="translated">NamedTuple#map</target>
        </trans-unit>
        <trans-unit id="8f5daeec5df33865448e2025a1b9d328f3902287" translate="yes" xml:space="preserve">
          <source>NamedTuple#size</source>
          <target state="translated">NamedTuple#size</target>
        </trans-unit>
        <trans-unit id="f380ad7bc05cf5b1a2182431482cbc0eb35a9567" translate="yes" xml:space="preserve">
          <source>NamedTuple#to_a</source>
          <target state="translated">NamedTuple#to_a</target>
        </trans-unit>
        <trans-unit id="d18bc16178789567a28018bc219663e43ba24679" translate="yes" xml:space="preserve">
          <source>NamedTuple#to_h</source>
          <target state="translated">NamedTuple#to_h</target>
        </trans-unit>
        <trans-unit id="c92405eb141ddc14711632e5922278c55aa93c76" translate="yes" xml:space="preserve">
          <source>NamedTuple#to_s</source>
          <target state="translated">NamedTuple#to_s</target>
        </trans-unit>
        <trans-unit id="e9f08fcadb21572f8545491ec80fed657f4f6799" translate="yes" xml:space="preserve">
          <source>NamedTuple(**T)</source>
          <target state="translated">NamedTuple(**T)</target>
        </trans-unit>
        <trans-unit id="739c032ca2c17ae3e87ee8e2d54627a20444242e" translate="yes" xml:space="preserve">
          <source>NamedTuple.from</source>
          <target state="translated">NamedTuple.from</target>
        </trans-unit>
        <trans-unit id="53ecd203a8b17f320f4d1bd0173d2a2adc8386bc" translate="yes" xml:space="preserve">
          <source>NamedTuple.new</source>
          <target state="translated">NamedTuple.new</target>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="translated">Namespace</target>
        </trans-unit>
        <trans-unit id="52619639484a14ffe5b331b9211d7bcd971ca044" translate="yes" xml:space="preserve">
          <source>Namespace#document</source>
          <target state="translated">Namespace#document</target>
        </trans-unit>
        <trans-unit id="f70ec6cdcc299bdfdb9372d30598fc02119bba78" translate="yes" xml:space="preserve">
          <source>Namespace#hash</source>
          <target state="translated">Namespace#hash</target>
        </trans-unit>
        <trans-unit id="5de5c7172606eb7d623c2c26e3aefd72e3c06424" translate="yes" xml:space="preserve">
          <source>Namespace#href</source>
          <target state="translated">Namespace#href</target>
        </trans-unit>
        <trans-unit id="2cae45bb11fce757d7bf4d2ab077b16a1ba3f42c" translate="yes" xml:space="preserve">
          <source>Namespace#inspect</source>
          <target state="translated">Namespace#inspect</target>
        </trans-unit>
        <trans-unit id="0420df283408d9de4dfc602533c122c7f71c1679" translate="yes" xml:space="preserve">
          <source>Namespace#object_id</source>
          <target state="translated">Namespace#object_id</target>
        </trans-unit>
        <trans-unit id="7ea3fbc1a157a6591e8bb5d52a7a63c5de96b034" translate="yes" xml:space="preserve">
          <source>Namespace#prefix</source>
          <target state="translated">Namespace#prefix</target>
        </trans-unit>
        <trans-unit id="d4feda17f1a83f4ccf68f6176fec92906c8f0d73" translate="yes" xml:space="preserve">
          <source>Namespace#to_s</source>
          <target state="translated">Namespace#to_s</target>
        </trans-unit>
        <trans-unit id="d0c17c712ba2cb30f8480627286f814088b084ca" translate="yes" xml:space="preserve">
          <source>Namespace.new</source>
          <target state="translated">Namespace.new</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="a450e4a7978714d926d1eea310b3ca67de41f9fc" translate="yes" xml:space="preserve">
          <source>Nanoseconds get normalized in the range of &lt;code&gt;0...1_000_000_000&lt;/code&gt;, the nanosecond overflow gets added as seconds.</source>
          <target state="translated">Nanoseconds get normalized in the range of &lt;code&gt;0...1_000_000_000&lt;/code&gt; , the nanosecond overflow gets added as seconds.</target>
        </trans-unit>
        <trans-unit id="b5df0de4a811459d5849b29293457c73093f5765" translate="yes" xml:space="preserve">
          <source>Negative &lt;em&gt;offset&lt;/em&gt; can be used to start the search from the end of the string.</source>
          <target state="translated">Negative &lt;em&gt;offset&lt;/em&gt; can be used to start the search from the end of the string.</target>
        </trans-unit>
        <trans-unit id="3b9c857c2294d19bbe769b7e9135bd77f17dfa8f" translate="yes" xml:space="preserve">
          <source>Negative indices can be used to start counting from the end of the array. Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if trying to access an element outside the array's range.</source>
          <target state="translated">음의 인덱스를 사용하여 배열 끝부터 계산을 시작할 수 있습니다. 발생시킵니다 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; 를 배열의 범위를 벗어나는 요소에 액세스하려고합니다.</target>
        </trans-unit>
        <trans-unit id="a5b23767239f4e47d7c1eacaf202d0c539b937aa" translate="yes" xml:space="preserve">
          <source>Negative indices can be used to start counting from the end of the array. Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if trying to set an element outside the array's range.</source>
          <target state="translated">음의 인덱스를 사용하여 배열 끝부터 계산을 시작할 수 있습니다. 발생시킵니다 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; 를 배열의 범위를 벗어난 요소를 설정하려고합니다.</target>
        </trans-unit>
        <trans-unit id="c37de4c380621a439814b13e8929e2903ca73b92" translate="yes" xml:space="preserve">
          <source>Negative indices can be used to start counting from the end of the array. Returns &lt;code&gt;nil&lt;/code&gt; if trying to access an element outside the array's range.</source>
          <target state="translated">음의 인덱스를 사용하여 배열 끝부터 계산을 시작할 수 있습니다. 배열 범위 밖의 요소에 액세스하려고하면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="8847e8517a39f0174d82d4932451eafb8e660ea0" translate="yes" xml:space="preserve">
          <source>Negative indices can be used to start counting from the end of the slice. Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if trying to set an element outside the slice's range.</source>
          <target state="translated">음수 인덱스를 사용하여 슬라이스 끝부터 계산을 시작할 수 있습니다. 발생시킵니다 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; 를 슬라이스의 범위를 벗어나는 요소를 설정하려고합니다.</target>
        </trans-unit>
        <trans-unit id="6e4af88892e30b5793b001355d93128738194e45" translate="yes" xml:space="preserve">
          <source>Negative indices can be used to start counting from the end of the string.</source>
          <target state="translated">음수 색인을 사용하여 문자열의 끝부터 계산을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad2a17cde79e4476c8ed41b6250081d2536d6126" translate="yes" xml:space="preserve">
          <source>Negative indices count backward from the end of the array (-1 is the last element). Additionally, an empty array is returned when the starting index for an element range is at the end of the array.</source>
          <target state="translated">음수 인덱스는 배열의 끝에서 뒤로 계산됩니다 (-1은 마지막 요소 임). 또한 요소 범위의 시작 인덱스가 배열의 끝에 있으면 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b2bce363dcddbe5e14b7e68732281eaebd46bda2" translate="yes" xml:space="preserve">
          <source>Negative indices count backward from the end of the array. (-1 is the last element).</source>
          <target state="translated">음수 인덱스는 배열의 끝에서부터 거꾸로 세어집니다. (-1은 마지막 요소입니다).</target>
        </trans-unit>
        <trans-unit id="c3e7ac5b84d2f4b33c5c58b9b58af0de2e001152" translate="yes" xml:space="preserve">
          <source>Negative indices count backward from the end of the slice (&lt;code&gt;-1&lt;/code&gt; is the last element). Additionally, an empty slice is returned when the starting index for an element range is at the end of the slice.</source>
          <target state="translated">음수 인덱스는 슬라이스 끝에서 뒤로 계산됩니다 ( &lt;code&gt;-1&lt;/code&gt; 은 마지막 요소 임). 또한 요소 범위의 시작 인덱스가 슬라이스의 끝에 있으면 빈 슬라이스가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ad984dc316eed33fc93617b30e38203be7cd0aac" translate="yes" xml:space="preserve">
          <source>Negative values of &lt;em&gt;from&lt;/em&gt; count from the end of the array.</source>
          <target state="translated">배열의 끝 &lt;em&gt;부터&lt;/em&gt; count 의 음수 값 .</target>
        </trans-unit>
        <trans-unit id="006b04d44e2d1c09c83be37b5679fc46df875a68" translate="yes" xml:space="preserve">
          <source>Negative values of &lt;em&gt;index&lt;/em&gt; count from the end of the array.</source>
          <target state="translated">&lt;em&gt;인덱스의&lt;/em&gt; 음수 값은 배열 끝부터 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="8e825894fec2aca380e9d3b5808ded1d67a1776d" translate="yes" xml:space="preserve">
          <source>Nested macros</source>
          <target state="translated">중첩 매크로</target>
        </trans-unit>
        <trans-unit id="127f49081f658cece5f3811cf0dc1334ffa1512f" translate="yes" xml:space="preserve">
          <source>Nested transactions</source>
          <target state="translated">중첩 된 거래</target>
        </trans-unit>
        <trans-unit id="8ba9abe745a8f0e4e877cc69abc52cdee83e48b7" translate="yes" xml:space="preserve">
          <source>Network dropped connection on reset</source>
          <target state="translated">재설정시 네트워크 연결 끊김</target>
        </trans-unit>
        <trans-unit id="ea849e260b8735345217e4f53f113c9fcde5b394" translate="yes" xml:space="preserve">
          <source>Network is down</source>
          <target state="translated">네트워크가 다운되었습니다</target>
        </trans-unit>
        <trans-unit id="d34a1412dd6535ceabe7960d72728113a96b875c" translate="yes" xml:space="preserve">
          <source>Network is unreachable</source>
          <target state="translated">네트워크에 연결할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="579505f089d16c8974fab126754a2a672cd49602" translate="yes" xml:space="preserve">
          <source>Next configure the repository in Zypper:</source>
          <target state="translated">다음으로 Zypper에서 저장소를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="c1cb583882ba7775ab935ce694b909fbccbea3b8" translate="yes" xml:space="preserve">
          <source>Next follows the full list of operators with their usual meaning.</source>
          <target state="translated">다음은 일반적인 의미로 연산자의 전체 목록을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="e28aa9aed8b55cd9839fff3b3b6051fc321a69bb" translate="yes" xml:space="preserve">
          <source>Next, add the following lines to your &lt;code&gt;.travis.yml&lt;/code&gt;. (Be sure to replace all instances of &lt;code&gt;&amp;lt;YOUR-GITHUB-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">그런 다음 &lt;code&gt;.travis.yml&lt;/code&gt; 에 다음 줄을 추가하십시오 . ( &lt;code&gt;&amp;lt;YOUR-GITHUB-REPOSITORY-NAME&amp;gt;&lt;/code&gt; 의 모든 인스턴스를 적절히 교체 하십시오 )</target>
        </trans-unit>
        <trans-unit id="acfc4174974a8d6e5bd373487ab021b87b0c5013" translate="yes" xml:space="preserve">
          <source>Next, let's setup a &lt;a href=&quot;https://docs.gitlab.com/ee/ci/pipelines.html&quot;&gt;GitLab Pipeline&lt;/a&gt; that can run our tests and build/deploy the docs when we push code to the repo.</source>
          <target state="translated">Next, let's setup a &lt;a href=&quot;https://docs.gitlab.com/ee/ci/pipelines.html&quot;&gt;GitLab Pipeline&lt;/a&gt; that can run our tests and build/deploy the docs when we push code to the repo.</target>
        </trans-unit>
        <trans-unit id="c916da70cd4a32512ca71d70e5cc765d00357df4" translate="yes" xml:space="preserve">
          <source>Nil</source>
          <target state="translated">Nil</target>
        </trans-unit>
        <trans-unit id="755b4cad2734da3d9b5d07092d014b7325592506" translate="yes" xml:space="preserve">
          <source>Nil return type</source>
          <target state="translated">무 반환 타입</target>
        </trans-unit>
        <trans-unit id="2f80557290b1186b7fb4ed20ea4b145a399683a1" translate="yes" xml:space="preserve">
          <source>Nil#==</source>
          <target state="translated">Nil#==</target>
        </trans-unit>
        <trans-unit id="7ea766100850ecf9ad790841559992fc91e75a45" translate="yes" xml:space="preserve">
          <source>Nil#hash</source>
          <target state="translated">Nil#hash</target>
        </trans-unit>
        <trans-unit id="233d140aded7539d600d8573538ff37c51ec363f" translate="yes" xml:space="preserve">
          <source>Nil#to_s</source>
          <target state="translated">Nil#to_s</target>
        </trans-unit>
        <trans-unit id="7067be77706771cb9a0d8a12013660c992e2f2b7" translate="yes" xml:space="preserve">
          <source>Nil#try</source>
          <target state="translated">Nil#try</target>
        </trans-unit>
        <trans-unit id="aea91546e9fe5a333609ebb895460d95b5ae5350" translate="yes" xml:space="preserve">
          <source>Nil.new</source>
          <target state="translated">Nil.new</target>
        </trans-unit>
        <trans-unit id="9fa656f1909973cea33b43a5a44a4051002e9b31" translate="yes" xml:space="preserve">
          <source>NilAssertionError</source>
          <target state="translated">NilAssertionError</target>
        </trans-unit>
        <trans-unit id="401780ac111d90a58dc5d3a9635373ba879475c1" translate="yes" xml:space="preserve">
          <source>NilAssertionError.new</source>
          <target state="translated">NilAssertionError.new</target>
        </trans-unit>
        <trans-unit id="60d64df9f1184752a701042450f599393378919d" translate="yes" xml:space="preserve">
          <source>Nilable</source>
          <target state="translated">Nilable</target>
        </trans-unit>
        <trans-unit id="f130b9c617343f8c039eb502e65e2bfe55e02212" translate="yes" xml:space="preserve">
          <source>No STREAM resources</source>
          <target state="translated">STREAM 리소스가 없습니다</target>
        </trans-unit>
        <trans-unit id="e792e65ee8a80fd8989ad1b66325f180ccd8b365" translate="yes" xml:space="preserve">
          <source>No buffer space available</source>
          <target state="translated">사용 가능한 버퍼 공간이 없습니다.</target>
        </trans-unit>
        <trans-unit id="099e11888438840a8566c983d5b1e6de2dad8524" translate="yes" xml:space="preserve">
          <source>No child processes</source>
          <target state="translated">자식 프로세스가 없습니다</target>
        </trans-unit>
        <trans-unit id="3f04db0b4f432d6c50a7b526129a3fbed9d2ec0e" translate="yes" xml:space="preserve">
          <source>No empty tags</source>
          <target state="translated">빈 태그가 없습니다</target>
        </trans-unit>
        <trans-unit id="6389e9f220a841e221a93b8adf8a978be7e48171" translate="yes" xml:space="preserve">
          <source>No language is 100% safe: some parts will inevitably be low-level, interface with the operating system and involve pointer manipulation. But once you abstract that and operate on a higher level, and assume (after mathematical proof or thorough testing) that the lower grounds are safe, you can be confident that your entire codebase is safe.</source>
          <target state="translated">100 % 안전한 언어는 없습니다 : 일부 부품은 필연적으로 저수준이며 운영 체제와 인터페이스하며 포인터 조작이 필요합니다. 그러나 일단 그것을 추상화하고 더 높은 수준에서 작동하고 (수학적 증거 또는 철저한 테스트 후) 낮은 근거가 안전하다고 가정하면 전체 코드베이스가 안전하다고 확신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac84bf2f78b29d7fcdb0dbd9e9503065301a53a2" translate="yes" xml:space="preserve">
          <source>No locks available</source>
          <target state="translated">사용 가능한 잠금이 없습니다</target>
        </trans-unit>
        <trans-unit id="fa8976efec00bf772feabd966e41dd01c9f38bba" translate="yes" xml:space="preserve">
          <source>No message available on STREAM</source>
          <target state="translated">STREAM에 메시지가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f45ab0b8375bdf5386e021a0b31d679497a33d5c" translate="yes" xml:space="preserve">
          <source>No message of desired type</source>
          <target state="translated">원하는 유형의 메시지가 없습니다</target>
        </trans-unit>
        <trans-unit id="bc97e902b1559d4e5a828e9fffbb6401ed441b33" translate="yes" xml:space="preserve">
          <source>No quotes</source>
          <target state="translated">따옴표 없음</target>
        </trans-unit>
        <trans-unit id="62c6526007299ca03f778b5b7ce0d726354cae0d" translate="yes" xml:space="preserve">
          <source>No route to host</source>
          <target state="translated">호스트 경로가 없습니다</target>
        </trans-unit>
        <trans-unit id="8fbfb9688473493b491d902cba0e307d5e635969" translate="yes" xml:space="preserve">
          <source>No runtime checks are performed in these cases because, again, pointers are involved. The need for this cast is even more rare than the previous one, but allows to implement some core types (like String) in Crystal itself, and it also allows passing a Reference type to C functions by casting it to a void pointer.</source>
          <target state="translated">이 경우에도 포인터가 관련되어 있으므로 런타임 검사가 수행되지 않습니다. 이 캐스트에 대한 필요성은 이전 캐스트보다 훨씬 드물지만 Crystal 자체에서 일부 핵심 유형 (문자열)을 구현할 수 있으며 void 유형으로 캐스팅하여 참조 유형을 C 함수에 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8ab05534fb2be1f88e1c33207891f6776cdd5db" translate="yes" xml:space="preserve">
          <source>No shell interpretation is done in &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt; 에서는 쉘 해석이 수행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5c0580667d6055e92a026b8c67fa943060b2c89d" translate="yes" xml:space="preserve">
          <source>No space left on device</source>
          <target state="translated">기기에 남은 공간이 없습니다.</target>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="translated">그러한 파일이나 디렉토리가 없습니다</target>
        </trans-unit>
        <trans-unit id="0cf4a772e5ca24befae7ddee66e425eeaa8130aa" translate="yes" xml:space="preserve">
          <source>No such process</source>
          <target state="translated">그런 과정이 없습니다</target>
        </trans-unit>
        <trans-unit id="6ded8bea31740baa2d151730d57c270b35577c09" translate="yes" xml:space="preserve">
          <source>NoInline</source>
          <target state="translated">NoInline</target>
        </trans-unit>
        <trans-unit id="0221b80b479f2414725845f119f0035d3f14f562" translate="yes" xml:space="preserve">
          <source>NoReturn return type</source>
          <target state="translated">반품 유형</target>
        </trans-unit>
        <trans-unit id="6c2e1228ad057dbdd431c4293d0a9ddee5e1b085" translate="yes" xml:space="preserve">
          <source>Node that represents an implicit object in:</source>
          <target state="translated">내재 된 객체를 나타내는 노드 :</target>
        </trans-unit>
        <trans-unit id="78bfa31fef9201e745d753cb0addc39adc5c1cd9" translate="yes" xml:space="preserve">
          <source>Node#==</source>
          <target state="translated">Node#==</target>
        </trans-unit>
        <trans-unit id="43c1b49bb480b4cc63844ec15f2eb9604aefa57b" translate="yes" xml:space="preserve">
          <source>Node#[]</source>
          <target state="translated">Node#[]</target>
        </trans-unit>
        <trans-unit id="45d6ae83618d6ade7d2594825b6819a12914672d" translate="yes" xml:space="preserve">
          <source>Node#[]=</source>
          <target state="translated">Node#[]=</target>
        </trans-unit>
        <trans-unit id="26161fdb33f341378fa63b95bee2b5a8da312dab" translate="yes" xml:space="preserve">
          <source>Node#[]?</source>
          <target state="translated">Node#[]?</target>
        </trans-unit>
        <trans-unit id="e6149a2f22413a265608253f1cc45884be62f281" translate="yes" xml:space="preserve">
          <source>Node#attribute?</source>
          <target state="translated">Node#attribute?</target>
        </trans-unit>
        <trans-unit id="e601abbcc9220ed9ad3a1ec50b4ac945e5d2b986" translate="yes" xml:space="preserve">
          <source>Node#attributes</source>
          <target state="translated">Node#attributes</target>
        </trans-unit>
        <trans-unit id="2cf2ca78a6a8a61f04f2527e3e4c3476f940f6bb" translate="yes" xml:space="preserve">
          <source>Node#cdata?</source>
          <target state="translated">Node#cdata?</target>
        </trans-unit>
        <trans-unit id="40336f10b17f8d67cd19bdb8d1ad5ddb415bcdd8" translate="yes" xml:space="preserve">
          <source>Node#children</source>
          <target state="translated">Node#children</target>
        </trans-unit>
        <trans-unit id="01620ee7b208a072a4689dfe5ee59ca2d631ec6a" translate="yes" xml:space="preserve">
          <source>Node#comment?</source>
          <target state="translated">Node#comment?</target>
        </trans-unit>
        <trans-unit id="3718122d7a17ee797551278b244a7f0c37083467" translate="yes" xml:space="preserve">
          <source>Node#content</source>
          <target state="translated">Node#content</target>
        </trans-unit>
        <trans-unit id="2ffdd92eccd61d4810af28a129edc1d8be34118f" translate="yes" xml:space="preserve">
          <source>Node#content=</source>
          <target state="translated">Node#content=</target>
        </trans-unit>
        <trans-unit id="b7bc22822e072106cc2b4102f8c3d90fcf650527" translate="yes" xml:space="preserve">
          <source>Node#delete</source>
          <target state="translated">Node#delete</target>
        </trans-unit>
        <trans-unit id="22a2e1d5f4b4f0e0dc8ace0fcf291302a4019a44" translate="yes" xml:space="preserve">
          <source>Node#document</source>
          <target state="translated">Node#document</target>
        </trans-unit>
        <trans-unit id="cf490edb0a435d26d0225a8b0322922a1d0ee8a8" translate="yes" xml:space="preserve">
          <source>Node#document?</source>
          <target state="translated">Node#document?</target>
        </trans-unit>
        <trans-unit id="4b06f183acb7708908a419712d1237fe4ab4cab2" translate="yes" xml:space="preserve">
          <source>Node#element?</source>
          <target state="translated">Node#element?</target>
        </trans-unit>
        <trans-unit id="0f6f35e6cef26cffd6eba9f2a59d19403bf6cabd" translate="yes" xml:space="preserve">
          <source>Node#encoding</source>
          <target state="translated">Node#encoding</target>
        </trans-unit>
        <trans-unit id="0202053806b75ff18c78614fe78e63c4de71a3a4" translate="yes" xml:space="preserve">
          <source>Node#errors</source>
          <target state="translated">Node#errors</target>
        </trans-unit>
        <trans-unit id="74fa40dd9a0d614614620739a406b9a6f40ff0e6" translate="yes" xml:space="preserve">
          <source>Node#first_element_child</source>
          <target state="translated">Node#first_element_child</target>
        </trans-unit>
        <trans-unit id="e15d5b588511170ed82e41280caa8e13b5219602" translate="yes" xml:space="preserve">
          <source>Node#fragment?</source>
          <target state="translated">Node#fragment?</target>
        </trans-unit>
        <trans-unit id="83fb96c2b63c88f1ea13a1329f07ca3ac3eec0b1" translate="yes" xml:space="preserve">
          <source>Node#hash</source>
          <target state="translated">Node#hash</target>
        </trans-unit>
        <trans-unit id="ed2693c1079dce87ec5ef1e1968fb1c36913693b" translate="yes" xml:space="preserve">
          <source>Node#inner_text</source>
          <target state="translated">Node#inner_text</target>
        </trans-unit>
        <trans-unit id="52af2cd5963cc2252918503ce6176440a8b85218" translate="yes" xml:space="preserve">
          <source>Node#inspect</source>
          <target state="translated">Node#inspect</target>
        </trans-unit>
        <trans-unit id="4c539b5caaee1efaa37165de1d10f03dc91cf8a5" translate="yes" xml:space="preserve">
          <source>Node#name</source>
          <target state="translated">Node#name</target>
        </trans-unit>
        <trans-unit id="d8677dbbf7926cf118e1a5bdd17ff493dd9fe071" translate="yes" xml:space="preserve">
          <source>Node#name=</source>
          <target state="translated">Node#name=</target>
        </trans-unit>
        <trans-unit id="d08dd8f005e29dbea3c6a0efb2619c3287329cdd" translate="yes" xml:space="preserve">
          <source>Node#namespace</source>
          <target state="translated">Node#namespace</target>
        </trans-unit>
        <trans-unit id="78d31b556c99dee400558d42240b37c5aac126ea" translate="yes" xml:space="preserve">
          <source>Node#namespace_scopes</source>
          <target state="translated">Node#namespace_scopes</target>
        </trans-unit>
        <trans-unit id="8806c8ccd7cc1fc91e5db201adb5c9149674bd64" translate="yes" xml:space="preserve">
          <source>Node#namespaces</source>
          <target state="translated">Node#namespaces</target>
        </trans-unit>
        <trans-unit id="2934ae9007adb9374e04fe5d7e952567be0b0872" translate="yes" xml:space="preserve">
          <source>Node#next</source>
          <target state="translated">Node#next</target>
        </trans-unit>
        <trans-unit id="64dd42ae25572b0848ac25b4ca0dea7dfea9b2cb" translate="yes" xml:space="preserve">
          <source>Node#next_element</source>
          <target state="translated">Node#next_element</target>
        </trans-unit>
        <trans-unit id="1c71cf1cd464dc52050446c86783fc81f6e0a581" translate="yes" xml:space="preserve">
          <source>Node#next_sibling</source>
          <target state="translated">Node#next_sibling</target>
        </trans-unit>
        <trans-unit id="2dd8be712759f86ca025e5e0cd49c95c4dd8c1d0" translate="yes" xml:space="preserve">
          <source>Node#object_id</source>
          <target state="translated">Node#object_id</target>
        </trans-unit>
        <trans-unit id="d2c5d5f450b311325e31e81b349ab619bea3976d" translate="yes" xml:space="preserve">
          <source>Node#parent</source>
          <target state="translated">Node#parent</target>
        </trans-unit>
        <trans-unit id="c2b8056bfaeeef5ca8a1a7334056c32a6fbb8488" translate="yes" xml:space="preserve">
          <source>Node#previous</source>
          <target state="translated">Node#previous</target>
        </trans-unit>
        <trans-unit id="65d7db623e311693477371a7cfa1ce01d5142fe4" translate="yes" xml:space="preserve">
          <source>Node#previous_element</source>
          <target state="translated">Node#previous_element</target>
        </trans-unit>
        <trans-unit id="357419fd654373bc5a33d2bef183c26033a0029f" translate="yes" xml:space="preserve">
          <source>Node#previous_sibling</source>
          <target state="translated">Node#previous_sibling</target>
        </trans-unit>
        <trans-unit id="9dc12bb4d6c48dba5e8d9b4fa741cec33b4f0c5a" translate="yes" xml:space="preserve">
          <source>Node#processing_instruction?</source>
          <target state="translated">Node#processing_instruction?</target>
        </trans-unit>
        <trans-unit id="6e7f399809a8fc9fa93fc2eebce4297913f97b8b" translate="yes" xml:space="preserve">
          <source>Node#root</source>
          <target state="translated">Node#root</target>
        </trans-unit>
        <trans-unit id="2d7522a79130faf60aff02d04365266b48f5f5e3" translate="yes" xml:space="preserve">
          <source>Node#text</source>
          <target state="translated">Node#text</target>
        </trans-unit>
        <trans-unit id="81a887ee10ab44000ddeab461ab0b7f8c853fd9e" translate="yes" xml:space="preserve">
          <source>Node#text=</source>
          <target state="translated">Node#text=</target>
        </trans-unit>
        <trans-unit id="56a0d4e5064b99d35b561de1247fd47a7bf079b2" translate="yes" xml:space="preserve">
          <source>Node#text?</source>
          <target state="translated">Node#text?</target>
        </trans-unit>
        <trans-unit id="a2d8f3af01bd9aff689e428879c8817f1dd87909" translate="yes" xml:space="preserve">
          <source>Node#to_s</source>
          <target state="translated">Node#to_s</target>
        </trans-unit>
        <trans-unit id="8f2a6530d92a29791b8c88c25be366cc40b26013" translate="yes" xml:space="preserve">
          <source>Node#to_unsafe</source>
          <target state="translated">Node#to_unsafe</target>
        </trans-unit>
        <trans-unit id="0b61643a46cfa43970b0aa2d2cfda55c03e71c1b" translate="yes" xml:space="preserve">
          <source>Node#to_xml</source>
          <target state="translated">Node#to_xml</target>
        </trans-unit>
        <trans-unit id="1815161980586fe2f8d0393368ab615481bcc340" translate="yes" xml:space="preserve">
          <source>Node#type</source>
          <target state="translated">Node#type</target>
        </trans-unit>
        <trans-unit id="6d2bc32342e2c07511f41a193102b5a0c8553ab2" translate="yes" xml:space="preserve">
          <source>Node#unlink</source>
          <target state="translated">Node#unlink</target>
        </trans-unit>
        <trans-unit id="07fbe304459f2622a0901a0b1d03ad99b2593286" translate="yes" xml:space="preserve">
          <source>Node#version</source>
          <target state="translated">Node#version</target>
        </trans-unit>
        <trans-unit id="582caf9f5906e5cb1814f2e84320223bdc805e65" translate="yes" xml:space="preserve">
          <source>Node#xml?</source>
          <target state="translated">Node#xml?</target>
        </trans-unit>
        <trans-unit id="55825a9017cae0cbc8f240ad8c2033d7cb12ed5a" translate="yes" xml:space="preserve">
          <source>Node#xpath</source>
          <target state="translated">Node#xpath</target>
        </trans-unit>
        <trans-unit id="c7656198fbe2c35a55e5b76d335ddb7d9007e42e" translate="yes" xml:space="preserve">
          <source>Node#xpath_bool</source>
          <target state="translated">Node#xpath_bool</target>
        </trans-unit>
        <trans-unit id="e19d904b8e5e00f68cf8a4562df51c92e8b77a21" translate="yes" xml:space="preserve">
          <source>Node#xpath_float</source>
          <target state="translated">Node#xpath_float</target>
        </trans-unit>
        <trans-unit id="b4aeab39b67515373f8c500247820ad92bd47858" translate="yes" xml:space="preserve">
          <source>Node#xpath_node</source>
          <target state="translated">Node#xpath_node</target>
        </trans-unit>
        <trans-unit id="4238bbba331e9e944a39031201381b7b8614ab8e" translate="yes" xml:space="preserve">
          <source>Node#xpath_nodes</source>
          <target state="translated">Node#xpath_nodes</target>
        </trans-unit>
        <trans-unit id="244243ca5244df182122f31a86492a7fd65901d3" translate="yes" xml:space="preserve">
          <source>Node#xpath_string</source>
          <target state="translated">Node#xpath_string</target>
        </trans-unit>
        <trans-unit id="2693aaae0e29b2cdc85621c887dcb817895bb389" translate="yes" xml:space="preserve">
          <source>Node.new</source>
          <target state="translated">Node.new</target>
        </trans-unit>
        <trans-unit id="3f7927612401dafbe3d8326b4f6ec4d480083715" translate="yes" xml:space="preserve">
          <source>Node::Type</source>
          <target state="translated">Node::Type</target>
        </trans-unit>
        <trans-unit id="a089c463801e85b65763516a0f956a251644b9c5" translate="yes" xml:space="preserve">
          <source>Node::Type#attribute_decl?</source>
          <target state="translated">Node::Type#attribute_decl?</target>
        </trans-unit>
        <trans-unit id="25e96d5554038f41e2819bbc53410e2f2d513557" translate="yes" xml:space="preserve">
          <source>Node::Type#attribute_node?</source>
          <target state="translated">Node::Type#attribute_node?</target>
        </trans-unit>
        <trans-unit id="d2cf6934e97dada728448501487b394d32aa3f30" translate="yes" xml:space="preserve">
          <source>Node::Type#cdata_section_node?</source>
          <target state="translated">Node::Type#cdata_section_node?</target>
        </trans-unit>
        <trans-unit id="a3b7d849ffdc5d0a19c4a81642fb0645779e0cb1" translate="yes" xml:space="preserve">
          <source>Node::Type#comment_node?</source>
          <target state="translated">Node::Type#comment_node?</target>
        </trans-unit>
        <trans-unit id="fb3b9da400599a532206b601e036d752ae397812" translate="yes" xml:space="preserve">
          <source>Node::Type#docb_document_node?</source>
          <target state="translated">Node::Type#docb_document_node?</target>
        </trans-unit>
        <trans-unit id="d36567e0378ac1b3fd1cc4ba55df91a925972481" translate="yes" xml:space="preserve">
          <source>Node::Type#document_frag_node?</source>
          <target state="translated">Node::Type#document_frag_node?</target>
        </trans-unit>
        <trans-unit id="a1c53a9f38482902e83984c353ae43855ddac945" translate="yes" xml:space="preserve">
          <source>Node::Type#document_node?</source>
          <target state="translated">Node::Type#document_node?</target>
        </trans-unit>
        <trans-unit id="f7a169e002f339476cb77b938dbc1a4065e3461f" translate="yes" xml:space="preserve">
          <source>Node::Type#document_type_node?</source>
          <target state="translated">Node::Type#document_type_node?</target>
        </trans-unit>
        <trans-unit id="7aa2b06a9475f44c61a3252e84a896be43b072df" translate="yes" xml:space="preserve">
          <source>Node::Type#dtd_node?</source>
          <target state="translated">Node::Type#dtd_node?</target>
        </trans-unit>
        <trans-unit id="cc8879e2d19029e1214d086f9aae679450721bb6" translate="yes" xml:space="preserve">
          <source>Node::Type#element_decl?</source>
          <target state="translated">Node::Type#element_decl?</target>
        </trans-unit>
        <trans-unit id="9c4639a5f4182287738161c21fe3b244f5a61d70" translate="yes" xml:space="preserve">
          <source>Node::Type#element_node?</source>
          <target state="translated">Node::Type#element_node?</target>
        </trans-unit>
        <trans-unit id="d8ef9f17043fe1bbee6b405e17245c8ffbf566cb" translate="yes" xml:space="preserve">
          <source>Node::Type#entity_decl?</source>
          <target state="translated">Node::Type#entity_decl?</target>
        </trans-unit>
        <trans-unit id="36a7d1210160db4c8684a2a0e306545f3b797484" translate="yes" xml:space="preserve">
          <source>Node::Type#entity_node?</source>
          <target state="translated">Node::Type#entity_node?</target>
        </trans-unit>
        <trans-unit id="1908861f7dff8346588812d4f9801d69a515a9e1" translate="yes" xml:space="preserve">
          <source>Node::Type#entity_ref_node?</source>
          <target state="translated">Node::Type#entity_ref_node?</target>
        </trans-unit>
        <trans-unit id="1cbefafcf0e3c67320e9b91716e9ec13cc85cd0c" translate="yes" xml:space="preserve">
          <source>Node::Type#html_document_node?</source>
          <target state="translated">Node::Type#html_document_node?</target>
        </trans-unit>
        <trans-unit id="68e0bffe2eb986ee0f46d4c41805b7bd279a1561" translate="yes" xml:space="preserve">
          <source>Node::Type#namespace_decl?</source>
          <target state="translated">Node::Type#namespace_decl?</target>
        </trans-unit>
        <trans-unit id="386f9e8df058afc85c243add017bf8c4c714daec" translate="yes" xml:space="preserve">
          <source>Node::Type#none?</source>
          <target state="translated">Node::Type#none?</target>
        </trans-unit>
        <trans-unit id="f2abebecce768927e602760b5743ad80dd7b0418" translate="yes" xml:space="preserve">
          <source>Node::Type#notation_node?</source>
          <target state="translated">Node::Type#notation_node?</target>
        </trans-unit>
        <trans-unit id="a82429501113469989759c564b7806714dabd080" translate="yes" xml:space="preserve">
          <source>Node::Type#pi_node?</source>
          <target state="translated">Node::Type#pi_node?</target>
        </trans-unit>
        <trans-unit id="b8abffd442dcb5823d727a426e4fe173272c2d36" translate="yes" xml:space="preserve">
          <source>Node::Type#text_node?</source>
          <target state="translated">Node::Type#text_node?</target>
        </trans-unit>
        <trans-unit id="c0d4e7c51d89dbe1246416985199baef2050fbb6" translate="yes" xml:space="preserve">
          <source>Node::Type#xinclude_end?</source>
          <target state="translated">Node::Type#xinclude_end?</target>
        </trans-unit>
        <trans-unit id="6bcf31dbdc74d839b4d1d2d4237270e29ef25843" translate="yes" xml:space="preserve">
          <source>Node::Type#xinclude_start?</source>
          <target state="translated">Node::Type#xinclude_start?</target>
        </trans-unit>
        <trans-unit id="49765a7705e55c8a87a04c7277d2d760fb7c3f2b" translate="yes" xml:space="preserve">
          <source>NodeSet</source>
          <target state="translated">NodeSet</target>
        </trans-unit>
        <trans-unit id="0bd03869e77c2ac84a35714b6cead6fbb345d92a" translate="yes" xml:space="preserve">
          <source>NodeSet#[]</source>
          <target state="translated">NodeSet#[]</target>
        </trans-unit>
        <trans-unit id="7f85935defbd54903615552ec589a8e3cfc83b2f" translate="yes" xml:space="preserve">
          <source>NodeSet#each</source>
          <target state="translated">NodeSet#each</target>
        </trans-unit>
        <trans-unit id="b298f9784f7134fd3d9625d38d7ef1f9b8e24cd6" translate="yes" xml:space="preserve">
          <source>NodeSet#empty?</source>
          <target state="translated">NodeSet#empty?</target>
        </trans-unit>
        <trans-unit id="82d2319023958566f212bbd296824cce4e2fb9c7" translate="yes" xml:space="preserve">
          <source>NodeSet#hash</source>
          <target state="translated">NodeSet#hash</target>
        </trans-unit>
        <trans-unit id="765f0cc1fe5baebe02e3fce143e629f9b9dc8e5a" translate="yes" xml:space="preserve">
          <source>NodeSet#inspect</source>
          <target state="translated">NodeSet#inspect</target>
        </trans-unit>
        <trans-unit id="9fd44fb712a047928cfaf19c1665a51086465cf6" translate="yes" xml:space="preserve">
          <source>NodeSet#object_id</source>
          <target state="translated">NodeSet#object_id</target>
        </trans-unit>
        <trans-unit id="3bf72a0a5b47fb56f9eb8c1546feacc942335c00" translate="yes" xml:space="preserve">
          <source>NodeSet#size</source>
          <target state="translated">NodeSet#size</target>
        </trans-unit>
        <trans-unit id="94b357d69044d5d42b6c260f8d597e9a21c9af95" translate="yes" xml:space="preserve">
          <source>NodeSet#to_s</source>
          <target state="translated">NodeSet#to_s</target>
        </trans-unit>
        <trans-unit id="486e15c824d9db6f4fdb49a59d4cb374d86396d7" translate="yes" xml:space="preserve">
          <source>NodeSet#to_unsafe</source>
          <target state="translated">NodeSet#to_unsafe</target>
        </trans-unit>
        <trans-unit id="25b3eb2bd0048eb35fc9119d1392d5689dbb5060" translate="yes" xml:space="preserve">
          <source>NodeSet.new</source>
          <target state="translated">NodeSet.new</target>
        </trans-unit>
        <trans-unit id="94209dd278fb5a80f3d96d9acd1e285ff99c472b" translate="yes" xml:space="preserve">
          <source>Nodes.parse</source>
          <target state="translated">Nodes.parse</target>
        </trans-unit>
        <trans-unit id="aec1b5cdd6912056e043ad62c66615f5aecb11e5" translate="yes" xml:space="preserve">
          <source>Nodes::Alias</source>
          <target state="translated">Nodes::Alias</target>
        </trans-unit>
        <trans-unit id="4130d46579409001b75f91155ef2f72cda416541" translate="yes" xml:space="preserve">
          <source>Nodes::Alias#to_yaml</source>
          <target state="translated">Nodes::Alias#to_yaml</target>
        </trans-unit>
        <trans-unit id="6f9c7f2fb51b96f6301151c1fc4441b7a9b2d6a9" translate="yes" xml:space="preserve">
          <source>Nodes::Alias#value</source>
          <target state="translated">Nodes::Alias#value</target>
        </trans-unit>
        <trans-unit id="c527278cad1d0e798ada6992dc47146775201dbe" translate="yes" xml:space="preserve">
          <source>Nodes::Alias#value=</source>
          <target state="translated">Nodes::Alias#value=</target>
        </trans-unit>
        <trans-unit id="8d3549c8d8ed2a53820eec2be4d7dcbd8522a689" translate="yes" xml:space="preserve">
          <source>Nodes::Alias.new</source>
          <target state="translated">Nodes::Alias.new</target>
        </trans-unit>
        <trans-unit id="2461afb1a15987a8ec8db55b2f1365091b177b12" translate="yes" xml:space="preserve">
          <source>Nodes::Builder</source>
          <target state="translated">Nodes::Builder</target>
        </trans-unit>
        <trans-unit id="65b27f7bdfa6eb7956219b1c9ebc8c86b2816c80" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#alias</source>
          <target state="translated">Nodes::Builder#alias</target>
        </trans-unit>
        <trans-unit id="5c9091b20a8dbb0f7ec88f27683c500fe0251e9f" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#document</source>
          <target state="translated">Nodes::Builder#document</target>
        </trans-unit>
        <trans-unit id="c7c22a3e09377222478af623d51fbc574192c80f" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#mapping</source>
          <target state="translated">Nodes::Builder#mapping</target>
        </trans-unit>
        <trans-unit id="310bbc8aeca6bafe5c4df5e04448304151199e8f" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#merge</source>
          <target state="translated">Nodes::Builder#merge</target>
        </trans-unit>
        <trans-unit id="71a86ae10f92c761ca90c3b92c82069272c84a6b" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#scalar</source>
          <target state="translated">Nodes::Builder#scalar</target>
        </trans-unit>
        <trans-unit id="5f4e6f35e2f986c59f6515b637266f742a1321ea" translate="yes" xml:space="preserve">
          <source>Nodes::Builder#sequence</source>
          <target state="translated">Nodes::Builder#sequence</target>
        </trans-unit>
        <trans-unit id="157438f40faed91d2597f5fd40c4a1038b19a668" translate="yes" xml:space="preserve">
          <source>Nodes::Builder.new</source>
          <target state="translated">Nodes::Builder.new</target>
        </trans-unit>
        <trans-unit id="34c8139fa1738d871a7254ac489f2f00fd3d556e" translate="yes" xml:space="preserve">
          <source>Nodes::Document</source>
          <target state="translated">Nodes::Document</target>
        </trans-unit>
        <trans-unit id="e643b0422b6544c97d5ed97801c6f3105fb69fe0" translate="yes" xml:space="preserve">
          <source>Nodes::Document#&amp;lt;&amp;lt;</source>
          <target state="translated">Nodes::Document#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="8d5ff28dfb99e74c0db1597d32ab237b81fa64f5" translate="yes" xml:space="preserve">
          <source>Nodes::Document#nodes</source>
          <target state="translated">Nodes::Document#nodes</target>
        </trans-unit>
        <trans-unit id="633b1e9296f940f331fe29bf327f641db4f86818" translate="yes" xml:space="preserve">
          <source>Nodes::Document#to_yaml</source>
          <target state="translated">Nodes::Document#to_yaml</target>
        </trans-unit>
        <trans-unit id="ddf1358b3bef5218c61e621a98cca7adebc56400" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping</source>
          <target state="translated">Nodes::Mapping</target>
        </trans-unit>
        <trans-unit id="5bc5339bb0fbc6d0aac1ead8e6da69b7966b56f7" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#&amp;lt;&amp;lt;</source>
          <target state="translated">Nodes::Mapping#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="3cbeb0aa343e5e75caf32c8179d6468aafd42c31" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#[]=</source>
          <target state="translated">Nodes::Mapping#[]=</target>
        </trans-unit>
        <trans-unit id="90e701725dbc5c1f96035a118b26e2e6eb7e9eab" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#each</source>
          <target state="translated">Nodes::Mapping#each</target>
        </trans-unit>
        <trans-unit id="645aff6976916b1e932566e1c123ac3868449dae" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#nodes</source>
          <target state="translated">Nodes::Mapping#nodes</target>
        </trans-unit>
        <trans-unit id="cbf6bf56b7ae9b21ef01c60a2d8b1be4c736c5a9" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#style</source>
          <target state="translated">Nodes::Mapping#style</target>
        </trans-unit>
        <trans-unit id="4a3a71e5c33fb687159109ee27e4a454c73439c8" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#style=</source>
          <target state="translated">Nodes::Mapping#style=</target>
        </trans-unit>
        <trans-unit id="d6efbfa5898804cdbfb04c1a66fdc0d2bb2acdd6" translate="yes" xml:space="preserve">
          <source>Nodes::Mapping#to_yaml</source>
          <target state="translated">Nodes::Mapping#to_yaml</target>
        </trans-unit>
        <trans-unit id="1cde4839b9874a252fd521780a6059950561cdf5" translate="yes" xml:space="preserve">
          <source>Nodes::Node</source>
          <target state="translated">Nodes::Node</target>
        </trans-unit>
        <trans-unit id="6cbed69f74643d87e0446f0bc83cbbc2891890e1" translate="yes" xml:space="preserve">
          <source>Nodes::Node#anchor</source>
          <target state="translated">Nodes::Node#anchor</target>
        </trans-unit>
        <trans-unit id="048c6b7b20264dad90246f0e6e545b2a0282bfb9" translate="yes" xml:space="preserve">
          <source>Nodes::Node#anchor=</source>
          <target state="translated">Nodes::Node#anchor=</target>
        </trans-unit>
        <trans-unit id="0f37ad02158371a8d07dedd40497e66abbcbb28f" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_column</source>
          <target state="translated">Nodes::Node#end_column</target>
        </trans-unit>
        <trans-unit id="e0dffa71fb7fd0a919392792623b73cd69ff4966" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_column=</source>
          <target state="translated">Nodes::Node#end_column=</target>
        </trans-unit>
        <trans-unit id="3625d95fb43c9491df55581c48cc73aa729a4f85" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_line</source>
          <target state="translated">Nodes::Node#end_line</target>
        </trans-unit>
        <trans-unit id="b60565755108e845d3ae4366f21d378dd4c27bc9" translate="yes" xml:space="preserve">
          <source>Nodes::Node#end_line=</source>
          <target state="translated">Nodes::Node#end_line=</target>
        </trans-unit>
        <trans-unit id="efd7a2c6d2848d0fd6a5f163564fd6a0a273ed68" translate="yes" xml:space="preserve">
          <source>Nodes::Node#location</source>
          <target state="translated">Nodes::Node#location</target>
        </trans-unit>
        <trans-unit id="96b4b2816952a57e78ebc3f5c2f3be056d7a4984" translate="yes" xml:space="preserve">
          <source>Nodes::Node#raise</source>
          <target state="translated">Nodes::Node#raise</target>
        </trans-unit>
        <trans-unit id="9c404c2cda916e84783446b6d45739d8704a286e" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_column</source>
          <target state="translated">Nodes::Node#start_column</target>
        </trans-unit>
        <trans-unit id="b6d3f5586772ccc6ce4d78f15938e20390a362b5" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_column=</source>
          <target state="translated">Nodes::Node#start_column=</target>
        </trans-unit>
        <trans-unit id="7b1e2cf2aefaaa1b13355defba2bd7f6ce0e1997" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_line</source>
          <target state="translated">Nodes::Node#start_line</target>
        </trans-unit>
        <trans-unit id="12fb2c5f0e6819d911431a537d1d1ecd6cfb39c5" translate="yes" xml:space="preserve">
          <source>Nodes::Node#start_line=</source>
          <target state="translated">Nodes::Node#start_line=</target>
        </trans-unit>
        <trans-unit id="246268312414a1d62bb820ab78dc29cdaba28289" translate="yes" xml:space="preserve">
          <source>Nodes::Node#tag</source>
          <target state="translated">Nodes::Node#tag</target>
        </trans-unit>
        <trans-unit id="4b8b651a120007c7b64df99dd96204b1cc96d3dd" translate="yes" xml:space="preserve">
          <source>Nodes::Node#tag=</source>
          <target state="translated">Nodes::Node#tag=</target>
        </trans-unit>
        <trans-unit id="04e2a2f21820642a719b77eb8d98872b9bd10e1a" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar</source>
          <target state="translated">Nodes::Scalar</target>
        </trans-unit>
        <trans-unit id="267ba15d20e3cea4ecc1727b7e19dc7e4776cecc" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#style</source>
          <target state="translated">Nodes::Scalar#style</target>
        </trans-unit>
        <trans-unit id="9477f4498a4d3367a3afbd2cf5f9fc1e01657cd8" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#style=</source>
          <target state="translated">Nodes::Scalar#style=</target>
        </trans-unit>
        <trans-unit id="018994f44bfb972f09d4df17e449cb35f23756c3" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#to_yaml</source>
          <target state="translated">Nodes::Scalar#to_yaml</target>
        </trans-unit>
        <trans-unit id="2cbef7791caf313eb4e5f78c767058801139dcfe" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#value</source>
          <target state="translated">Nodes::Scalar#value</target>
        </trans-unit>
        <trans-unit id="9613209054c1b5d858b87c3bc749015a74a48410" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar#value=</source>
          <target state="translated">Nodes::Scalar#value=</target>
        </trans-unit>
        <trans-unit id="404a620516ee921b02635c20fcc2fafa79f56116" translate="yes" xml:space="preserve">
          <source>Nodes::Scalar.new</source>
          <target state="translated">Nodes::Scalar.new</target>
        </trans-unit>
        <trans-unit id="bbca338585707756271f1a0fe59c08ccc83aa977" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence</source>
          <target state="translated">Nodes::Sequence</target>
        </trans-unit>
        <trans-unit id="c7b124817825dd3a41debbb4d04f864890a65fbf" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#&amp;lt;&amp;lt;</source>
          <target state="translated">Nodes::Sequence#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="d4ff3f09f0c5a8282a9f1b0fd5ab89aaef556c8b" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#each</source>
          <target state="translated">Nodes::Sequence#each</target>
        </trans-unit>
        <trans-unit id="2eba33a774897c13f5360480dda50df67ff057e7" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#nodes</source>
          <target state="translated">Nodes::Sequence#nodes</target>
        </trans-unit>
        <trans-unit id="16368560c916d87f65d7ce89f5d666a7c4175334" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#style</source>
          <target state="translated">Nodes::Sequence#style</target>
        </trans-unit>
        <trans-unit id="eff581700dc4f8a3d84919ea07b1fd97f61628ba" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#style=</source>
          <target state="translated">Nodes::Sequence#style=</target>
        </trans-unit>
        <trans-unit id="160873470ca99452b2594b738fcace692a5c9d89" translate="yes" xml:space="preserve">
          <source>Nodes::Sequence#to_yaml</source>
          <target state="translated">Nodes::Sequence#to_yaml</target>
        </trans-unit>
        <trans-unit id="7ffa9af7a01bdfe63c4b9baeab7e5f4ff19fa5f6" translate="yes" xml:space="preserve">
          <source>Non UTF-8 valid strings</source>
          <target state="translated">UTF-8이 아닌 유효한 문자열</target>
        </trans-unit>
        <trans-unit id="0cababce0b45af347657895a02679eff6ed12fe5" translate="yes" xml:space="preserve">
          <source>Non-matching paths are implicitly converted to this path's kind.</source>
          <target state="translated">일치하지 않는 경로는 암시 적으로이 경로 종류로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="2be5fcdd962946d4d3a529bfb37ee67c4054e5b0" translate="yes" xml:space="preserve">
          <source>Normalizes this URI instance.</source>
          <target state="translated">이 URI 인스턴스를 정규화합니다.</target>
        </trans-unit>
        <trans-unit id="e69c1716df1f314f731c86bb9ee456bd2cd42a44" translate="yes" xml:space="preserve">
          <source>Not a STREAM</source>
          <target state="translated">스트림이 아님</target>
        </trans-unit>
        <trans-unit id="338469a733ebda5aa0e30bb1db80e0e157e51892" translate="yes" xml:space="preserve">
          <source>Not a directory</source>
          <target state="translated">디렉토리가 아님</target>
        </trans-unit>
        <trans-unit id="a46c132ceb82a884866928c661aeea17b1e52d95" translate="yes" xml:space="preserve">
          <source>Not all of these files are required for every project, and some might need more customization, but &lt;code&gt;crystal init&lt;/code&gt; creates a good default environment for developing Crystal applications and libraries.</source>
          <target state="translated">이러한 파일 모두가 모든 프로젝트에 필요한 것은 아니며 일부는 더 많은 사용자 정의가 필요할 수 있지만 &lt;code&gt;crystal init&lt;/code&gt; 는 Crystal 응용 프로그램 및 라이브러리 개발을위한 좋은 기본 환경을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="translated">NotImplementedError</target>
        </trans-unit>
        <trans-unit id="f248847a607be640097e4c8d6b08e960990b5ba5" translate="yes" xml:space="preserve">
          <source>NotImplementedError.new</source>
          <target state="translated">NotImplementedError.new</target>
        </trans-unit>
        <trans-unit id="bee777843ba0bff132cea365da745cfe4d1ef416" translate="yes" xml:space="preserve">
          <source>NotReady</source>
          <target state="translated">NotReady</target>
        </trans-unit>
        <trans-unit id="0b38a605c7604157c1f6623655826350bd296bdd" translate="yes" xml:space="preserve">
          <source>NotReady#clone</source>
          <target state="translated">NotReady#clone</target>
        </trans-unit>
        <trans-unit id="81f33c19bb2dc2d83ebac36bddb705df82a87b18" translate="yes" xml:space="preserve">
          <source>NotReady#copy_with</source>
          <target state="translated">NotReady#copy_with</target>
        </trans-unit>
        <trans-unit id="9916f0ba98f0761930b909b343add238e74a8eeb" translate="yes" xml:space="preserve">
          <source>NotReady.new</source>
          <target state="translated">NotReady.new</target>
        </trans-unit>
        <trans-unit id="653eb0029613b199ca2a159c9a130bbee701b3b8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:foo&lt;/code&gt; was the result of the interpolation, because that's what was passed to the macro. You can use the method &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt;&lt;code&gt;ASTNode#id&lt;/code&gt;&lt;/a&gt; in these cases, where you just need an identifier.</source>
          <target state="translated">참고 &lt;code&gt;:foo&lt;/code&gt; 그 매크로에 전달 무엇 때문에, 보간의 결과였다. 이 경우 식별자가 필요한 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt; &lt;code&gt;ASTNode#id&lt;/code&gt; &lt;/a&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="606cba09aff4b3bb673ef53e2c7fc74e8eb1e42f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; is same as &lt;code&gt;fact(n - 1)&lt;/code&gt; for integer &lt;code&gt;n &amp;gt; 0&lt;/code&gt;. However &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; returns float and can be an approximation.</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; 동일하다 &lt;code&gt;fact(n - 1)&lt;/code&gt; 정수 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; . 그러나 &lt;code&gt;&lt;a href=&quot;math#gamma(value:Float64)-instance-method&quot;&gt;#gamma(n)&lt;/a&gt;&lt;/code&gt; 은 float를 반환하며 근사값이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e84b38ede8d752b1d7b15cf80dbc569330895719" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; is always trapped and child processes will always be reaped before the custom handler is called, hence a custom &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; handler must check child processes using &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int)-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt;. Trying to use waitpid with a zero or negative value won't work.</source>
          <target state="translated">참고 &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 는 항상 갇혀와 자식 프로세스는 항상 사용자 정의 핸들러가 호출되기 전에, 따라서 사용자 정의 수확됩니다 &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 의 처리기를 사용하여 자식 프로세스를 확인해야합니다 &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int)-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt; . waitpid를 0 또는 음수 값으로 사용하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d1c9d39aeb1d272fa28c2edbfd4edacec27c76e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; is always trapped and child processes will always be reaped before the custom handler is called, hence a custom &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; handler must check child processes using &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int):Bool-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt;. Trying to use waitpid with a zero or negative value won't work.</source>
          <target state="translated">Note that &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; is always trapped and child processes will always be reaped before the custom handler is called, hence a custom &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; handler must check child processes using &lt;code&gt;&lt;a href=&quot;process#exists?(pid:Int):Bool-class-method&quot;&gt;Process.exists?&lt;/a&gt;&lt;/code&gt; . Trying to use waitpid with a zero or negative value won't work.</target>
        </trans-unit>
        <trans-unit id="9c6ac41d4df78140a3304ac7c647aae80ec18a80" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;@type&lt;/code&gt; is always the &lt;em&gt;instance&lt;/em&gt; type, even when the macro is invoked in a class method.</source>
          <target state="translated">참고 &lt;code&gt;@type&lt;/code&gt; 은 항상이다 &lt;em&gt;인스턴스&lt;/em&gt; 매크로가 클래스 메서드에서 호출하는 경우에도, 유형입니다.</target>
        </trans-unit>
        <trans-unit id="14394ebd2eaf48799e89fa7b7a5d8f8156c3dce4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;dns_timeout&lt;/code&gt; is currently ignored.</source>
          <target state="translated">참고 &lt;code&gt;dns_timeout&lt;/code&gt; 은 현재 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3f4b94dde6ed397c6878130ccc9375a057d977a4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;private&lt;/code&gt; methods are visible by subclasses:</source>
          <target state="translated">참고 &lt;code&gt;private&lt;/code&gt; 방법이 서브 클래스에 의해 볼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="3e5e40063f571fc5c6540ff9c650e1ea4465bacd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;self&lt;/code&gt; always represents a match against an instance type, even in class methods:</source>
          <target state="translated">참고 &lt;code&gt;self&lt;/code&gt; 에도 항상 클래스 메소드에서 인스턴스 유형에 대한 일치를 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="eb2f5012468a6f7ef49c3a8d9d1e04ef79e77091" translate="yes" xml:space="preserve">
          <source>Note that a pointer is &lt;em&gt;falsey&lt;/em&gt; if it's null (if its address is zero).</source>
          <target state="translated">포인터가 null 인 경우 (주소가 0 인 경우 ) &lt;em&gt;잘못된&lt;/em&gt; 포인터입니다 .</target>
        </trans-unit>
        <trans-unit id="d46faa9261cd50bbe1641e5341e154a76b5b5bc8" translate="yes" xml:space="preserve">
          <source>Note that because expressions are assigned to temporary variables it is possible to exchange variables&amp;rsquo; contents in a single line:</source>
          <target state="translated">식은 임시 변수에 할당되므로 변수 내용을 한 줄로 교환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38cf113f5baae038ab9252dbfdcd896fbfe282cb" translate="yes" xml:space="preserve">
          <source>Note that before &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; is invoked the GC is not setup yet, so nothing that allocates memory in Crystal (like &lt;code&gt;new&lt;/code&gt; for classes) can be used.</source>
          <target state="translated">Note that before &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; is invoked the GC is not setup yet, so nothing that allocates memory in Crystal (like &lt;code&gt;new&lt;/code&gt; for classes) can be used.</target>
        </trans-unit>
        <trans-unit id="de0eb7019cc75c5c1e54abb540ec7b2c88a66a91" translate="yes" xml:space="preserve">
          <source>Note that before &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; is invoked the GC is not setup yet, so nothing that allocates memory in Crystal (like &lt;code&gt;new&lt;/code&gt; for classes) can be used.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; 이 호출 되기 전에 GC가 아직 설정되지 않았으므로 Crystal에 메모리를 할당하는 ( 클래스의 &lt;code&gt;new&lt;/code&gt; 것과 같은) 아무것도 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7187006972af784a25767c86fe52a1c96342c37a" translate="yes" xml:space="preserve">
          <source>Note that due to current language limitations this is only useful when no captured blocks are involved.</source>
          <target state="translated">현재 언어 제한으로 인해 캡처 된 블록이 포함되지 않은 경우에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6ecc691d46d6fa954d2fd488c1ea977c36bc4791" translate="yes" xml:space="preserve">
          <source>Note that if Array invoked &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; on each of the elements above, the output would have been this:</source>
          <target state="translated">위의 각 요소에서 Array가 &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 를 호출 하면 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f6b172d1e9bf668d6f8df441d8a8aac818e1a19" translate="yes" xml:space="preserve">
          <source>Note that if Array invoked &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; on each of the elements above, the output would have been this:</source>
          <target state="translated">위의 각 요소에서 Array가 &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 를 호출 하면 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab48cc399af6948ea12e5a6cdb7a33806bdc31a3" translate="yes" xml:space="preserve">
          <source>Note that if a variable is declared inside one of the branches but not in the other one, at the end of the &lt;code&gt;if&lt;/code&gt; it will also contain the &lt;code&gt;Nil&lt;/code&gt; type.</source>
          <target state="translated">변수가 브랜치 중 하나 안에 선언되었지만 다른 브랜치에는 선언되지 않은 &lt;code&gt;if&lt;/code&gt; 끝에 &lt;code&gt;Nil&lt;/code&gt; 유형 도 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="3294457d3a6398f9b6bc022c5c36ba9fe5fd1a0c" translate="yes" xml:space="preserve">
          <source>Note that if the return type is not specified, nothing gets returned from the proc call:</source>
          <target state="translated">반환 유형을 지정하지 않으면 proc 호출에서 아무것도 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89f0e17c4ecd6fb1b7b7dd1d9f998414e9f8a970" translate="yes" xml:space="preserve">
          <source>Note that if we had defined &lt;code&gt;add&lt;/code&gt; without type restrictions, we would also have gotten a compile time error:</source>
          <target state="translated">타입 제한없이 &lt;code&gt;add&lt;/code&gt; 를 정의했다면 컴파일 타임 에러도 발생했을 것입니다 :</target>
        </trans-unit>
        <trans-unit id="ef7d147b2c1d52dd0284a8a1946be3c558df9a02" translate="yes" xml:space="preserve">
          <source>Note that in the above example &lt;code&gt;T&lt;/code&gt; becomes &lt;code&gt;Int32&lt;/code&gt; because &lt;code&gt;Foo.new(1)&lt;/code&gt; makes &lt;code&gt;U&lt;/code&gt; become &lt;code&gt;Int32&lt;/code&gt;, which in turn makes &lt;code&gt;T&lt;/code&gt; become &lt;code&gt;Int32&lt;/code&gt; via the inclusion of the generic module.</source>
          <target state="translated">위의 예에서 유의 &lt;code&gt;T&lt;/code&gt; 가 된다 &lt;code&gt;Int32&lt;/code&gt; 때문에 &lt;code&gt;Foo.new(1)&lt;/code&gt; 만드는 &lt;code&gt;U&lt;/code&gt; 가 될 &lt;code&gt;Int32&lt;/code&gt; 다시 만들고, &lt;code&gt;T&lt;/code&gt; 가 될 &lt;code&gt;Int32&lt;/code&gt; 일반 모듈을 포함 통하여.</target>
        </trans-unit>
        <trans-unit id="7d518d6d3401b61c62f0118ff3cb8c6c1585114b" translate="yes" xml:space="preserve">
          <source>Note that in the above example trailing and leading spaces, as well as newlines, end up in the resulting string. To avoid this a string can be split into multiple lines by joining multiple literals with a backslash:</source>
          <target state="translated">위의 예제에서 줄 바꿈뿐만 아니라 후행 및 선행 공백은 결과 문자열로 끝납니다. 이를 피하기 위해 여러 리터럴을 백 슬래시로 결합하여 문자열을 여러 줄로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9b432be3d0b443272f7d85d2dd0c9f17399678a" translate="yes" xml:space="preserve">
          <source>Note that in the above example trailing and leading spaces, as well as newlines, end up in the resulting string. To avoid this, you can split a string into multiple lines by joining multiple literals with a backslash:</source>
          <target state="translated">위의 예제에서 줄 바꿈뿐만 아니라 후행 및 선행 공백은 결과 문자열로 끝납니다. 이를 피하기 위해 여러 리터럴을 백 슬래시로 결합하여 문자열을 여러 줄로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3815dc422d7ef8c5b918419a0b18a123e55ec57" translate="yes" xml:space="preserve">
          <source>Note that in the case of the method that yields, the compiler figured this out because there's a &lt;code&gt;yield&lt;/code&gt; expression. To make this more explicit, you can add a dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; argument at the end:</source>
          <target state="translated">yield 메소드의 경우 &lt;code&gt;yield&lt;/code&gt; 표현식 이 있으므로 컴파일러가이를 알아 냈습니다 . 보다 명확하게하기 위해 끝에 더미 &lt;code&gt;&amp;amp;block&lt;/code&gt; 인수를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="105aded6d0d097b46f4f7af3eced0d28ca1325a4" translate="yes" xml:space="preserve">
          <source>Note that it's not clear how many elements the array has, or which are they, because &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; doesn't guarantee that the string representation is clearly delimited (in the case of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; the quotes are not shown).</source>
          <target state="translated">있기 때문에, 배열이 얼마나 많은 요소를 지우거나 그들이 아니라고 주 &lt;code&gt;&lt;a href=&quot;bigrational#to_s(io:IO,base:Int=10):Nil-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 는 문자열 표현이 명확하게 (의 경우로 구분되는 것을 보장하지 않습니다 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 따옴표가 표시되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="7d72c7bb216d632b4797fb2eb72c453c7b69a247" translate="yes" xml:space="preserve">
          <source>Note that it's not clear how many elements the array has, or which are they, because &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; doesn't guarantee that the string representation is clearly delimited (in the case of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; the quotes are not shown).</source>
          <target state="translated">있기 때문에, 배열이 얼마나 많은 요소를 지우거나 그들이 아니라고 주 &lt;code&gt;&lt;a href=&quot;object#to_s:String-instance-method&quot;&gt;#to_s&lt;/a&gt;&lt;/code&gt; 는 문자열 표현이 명확하게 (의 경우로 구분되는 것을 보장하지 않습니다 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 따옴표가 표시되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="4d79f823d6f017c8d51a6e99118786bdf236f05d" translate="yes" xml:space="preserve">
          <source>Note that literal denoted by &lt;code&gt;%w&lt;/code&gt; does not apply interpolation nor escapes expect spaces. Since strings are separated by a single space character () which must be escaped to use it as a part of a string.</source>
          <target state="translated">&lt;code&gt;%w&lt;/code&gt; 로 표시된 리터럴 은 보간을 적용하지 않으며 이스케이프는 공백을 기대합니다. 문자열은 단일 공백 ​​문자 ()로 구분되므로 문자열의 일부로 사용하려면 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="a36d49f07fe16c569483c35eb69dfd50848d9bc2" translate="yes" xml:space="preserve">
          <source>Note that methods used to traverse a JSON structure, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index:Int):JSON::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index:Int):JSON::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt;, always return a &lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; to allow further traversal. To convert them to &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, etc., use the &lt;code&gt;as_&lt;/code&gt; methods, such as &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#as_i:Int32-instance-method&quot;&gt;#as_i&lt;/a&gt;&lt;/code&gt;, which perform a type check against the raw underlying value. This means that invoking &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; when the underlying value is not a String will raise: the value won't automatically be converted (parsed) to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">JSON 구조 인 &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index:Int):JSON::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index:Int):JSON::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt; 을 탐색하는 데 사용되는 방법은 무엇입니까? 더 많은 순회를 허용하려면 항상 &lt;code&gt;&lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 등으로 변환하려면 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;any#as_i:Int32-instance-method&quot;&gt;#as_i&lt;/a&gt;&lt;/code&gt; 와 같은 &lt;code&gt;as_&lt;/code&gt; 메소드를 사용하십시오 . 이는 원시 기본 값에 대해 유형 검사를 수행합니다. 호출하는 것으로이 방법 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; 기본 값이 문자열이 아닌 올릴 것이다 : 값이 자동으로 변환 (구문 분석)되지 않습니다 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56a016f34fe97bcbe201873e1f081e5fa7fe717f" translate="yes" xml:space="preserve">
          <source>Note that methods used to traverse a YAML structure, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index_or_key):YAML::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index_or_key):YAML::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;#each&lt;/code&gt;, always return a &lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; to allow further traversal. To convert them to &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, etc., use the &lt;code&gt;as_&lt;/code&gt; methods, such as &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;any#as_a:Array(Any)-instance-method&quot;&gt;#as_a&lt;/a&gt;&lt;/code&gt;, which perform a type check against the raw underlying value. This means that invoking &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; when the underlying value is not a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; will raise: the value won't automatically be converted (parsed) to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">YAML 구조, &lt;code&gt;&lt;a href=&quot;any#%5B%5D(index_or_key):YAML::Any-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;any#%5B%5D?(index_or_key):YAML::Any?-instance-method&quot;&gt;#[]?&lt;/a&gt;&lt;/code&gt; 를 탐색하는 데 사용되는 방법은 무엇입니까? 그리고 &lt;code&gt;#each&lt;/code&gt; 는 항상 &lt;code&gt;&lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;&lt;/code&gt; 를 반환하여 더 많은 순회를 허용합니다. &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 등으로 변환하려면 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;any#as_a:Array(Any)-instance-method&quot;&gt;#as_a&lt;/a&gt;&lt;/code&gt; 와 같은 &lt;code&gt;as_&lt;/code&gt; 메소드를 사용하십시오.이 메소드 는 원시 기본 값에 대해 유형 검사를 수행합니다. 호출하는 것으로이 방법 &lt;code&gt;&lt;a href=&quot;any#as_s:String-instance-method&quot;&gt;#as_s&lt;/a&gt;&lt;/code&gt; 기본 값이 아닌 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 올릴 것이다 : 값이 자동으로 변환 (구문 분석)되지 않습니다 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cc773b1f636703780449c1670def448ffc69adf" translate="yes" xml:space="preserve">
          <source>Note that most search and filter methods traverse an Enumerable eagerly, producing an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; as the result. For a lazy alternative refer to the &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; modules.</source>
          <target state="translated">대부분의 검색 및 필터 메소드는 Enumerable을 간절히 통과하여 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 를 생성합니다 . 게으른 대안은 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29749f02130eec66083dc571df2a91a8db209048" translate="yes" xml:space="preserve">
          <source>Note that returning &lt;code&gt;nil&lt;/code&gt; is only useful when defining a partial comparable relationship. One such example is float values: they are generally comparable, except for &lt;code&gt;NaN&lt;/code&gt;. If none of the values of a type are comparable between each other, &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; shouldn't be included.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 을 리턴 하는 것은 부분 비교 가능한 관계를 정의 할 때만 유용합니다. 그러한 예 중 하나는 float 값입니다. &lt;code&gt;NaN&lt;/code&gt; 을 제외하고 일반적으로 비교할 수 있습니다. 유형의 값이 서로 비교할 수 없으면 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;&lt;/code&gt; 을 포함하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="e4f2e9b31442b05186a2fc7fb8d67c840735b504" translate="yes" xml:space="preserve">
          <source>Note that the above is really just an example, almost the same can be accomplished with &lt;code&gt;at_exit&lt;/code&gt;. But in some cases redefinition of C's main is needed.</source>
          <target state="translated">위의 예제는 단지 예제 일 &lt;code&gt;at_exit&lt;/code&gt; 거의 동일 합니다. 그러나 어떤 경우에는 C의 메인 재정의가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c32e9458635ee737061354e847fe54176208cf86" translate="yes" xml:space="preserve">
          <source>Note that the first 2 sends are executed without switching to another fiber. However, in the third send the channel's buffer is full, so execution goes to the main fiber. Here the two values are received and the channel is depleted. At the third &lt;code&gt;receive&lt;/code&gt; the main fiber blocks and execution goes to the other fiber, which sends more values, finishes, etc.</source>
          <target state="translated">처음 2 개의 전송은 다른 파이버로 전환하지 않고 실행됩니다. 그러나 세 번째 송신에서는 채널의 버퍼가 가득 차서 주 광섬유로 실행됩니다. 여기서 두 값이 수신되고 채널이 고갈됩니다. 세 번째 는 메인 파이버 블록을 &lt;code&gt;receive&lt;/code&gt; 하고 다른 파이버로 실행하면 더 많은 값, 마감 등을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="202f88babbfe4309e441744e59d1c104b3de83e8" translate="yes" xml:space="preserve">
          <source>Note that the last one can be smaller.</source>
          <target state="translated">마지막 것은 더 작을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b32fdc25391273c0446d061c07fd494394f0d11f" translate="yes" xml:space="preserve">
          <source>Note that the name of the method argument is not important; this works as well:</source>
          <target state="translated">메소드 인수의 이름은 중요하지 않습니다. 이것은 또한 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="83998c867b084d47190aee5897fd90188ffc8fc1" translate="yes" xml:space="preserve">
          <source>Note that the node is pasted as-is. If in the previous example we pass a symbol, the generated code becomes invalid:</source>
          <target state="translated">노드는있는 그대로 붙여 넣습니다. 이전 예제에서 심볼을 전달하면 생성 된 코드가 유효하지 않게됩니다.</target>
        </trans-unit>
        <trans-unit id="0eb7060854f0a08b431ae518f99110ccb8593fbd" translate="yes" xml:space="preserve">
          <source>Note that the null character &lt;code&gt;'\0'&lt;/code&gt; will be returned in &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; when the end is reached (as well as when the string is empty). Thus, &lt;code&gt;&lt;a href=&quot;reader#has_next?-instance-method&quot;&gt;#has_next?&lt;/a&gt;&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; only when &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; is equal to the string's bytesize, in which case &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; will always be &lt;code&gt;'\0'&lt;/code&gt;.</source>
          <target state="translated">끝에 도달하면 (문자열이 비어있을 때) 널 문자 &lt;code&gt;'\0'&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; 에 반환됩니다 . 따라서 &lt;code&gt;&lt;a href=&quot;reader#has_next?-instance-method&quot;&gt;#has_next?&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; 가 문자열의 바이트 크기와 같은 경우에만 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .이 경우 &lt;code&gt;&lt;a href=&quot;reader#current_char:Char-instance-method&quot;&gt;#current_char&lt;/a&gt;&lt;/code&gt; 는 항상 &lt;code&gt;'\0'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c6adad0f8f6d4c8198f537244fc2375d2efa3545" translate="yes" xml:space="preserve">
          <source>Note that there are no implicit conversions (except &lt;code&gt;to_unsafe&lt;/code&gt;, which is explained later) when invoking a C function: you must pass the exact type that is expected. For integers and floats you can use the various &lt;code&gt;to_...&lt;/code&gt; methods.</source>
          <target state="translated">C 함수를 호출 할 때 암시 적 변환 ( 나중에 설명 할 &lt;code&gt;to_unsafe&lt;/code&gt; 제외)은 없습니다 . 예상되는 정확한 유형을 전달해야합니다. 정수 및 부동 소수점의 경우 다양한 &lt;code&gt;to_...&lt;/code&gt; 메소드 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9679c70cbbbf3e086500a0853c1d2638d34aab5" translate="yes" xml:space="preserve">
          <source>Note that this only works for characters whose downcase equivalent yields a single codepoint. There are a few characters, like 'İ', than when downcased result in multiple characters (in this case: 'I' and the dot mark).</source>
          <target state="translated">이것은 소문자에 해당하는 단일 코드 포인트를 생성하는 문자에만 적용됩니다. 소문자로 결과가 여러 문자로 표시 될 때보 다 'İ'와 같은 문자가 몇 개 있습니다 (이 경우 'I'및 점 표시).</target>
        </trans-unit>
        <trans-unit id="f20edd4b57b037fbfbd3c4e8a8b1786a2bd7683a" translate="yes" xml:space="preserve">
          <source>Note that this only works for characters whose upcase equivalent yields a single codepoint. There are a few characters, like 'ﬄ', than when upcased result in multiple characters (in this case: 'F', 'F', 'L').</source>
          <target state="translated">이것은 대문자와 동등한 단일 코드 포인트를 생성하는 문자에만 적용됩니다. 'ﬄ'와 같이 대문자로 결과를 여러 문자로 표시 할 때보 다 몇 가지 문자가 있습니다 (이 경우 'F', 'F', 'L').</target>
        </trans-unit>
        <trans-unit id="eb5325a8a4a3588f52f894234ace347876e3838f" translate="yes" xml:space="preserve">
          <source>Note that trying to ignore &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; will actually set the default crystal handler that monitors and reaps child processes. This prevents zombie processes and is required by &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; for example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 를 무시 하려고 하면 실제로 자식 프로세스를 모니터링하고 거두는 기본 crystal 처리기가 설정됩니다. 이것은 좀비 프로세스를 방지 하며 예를 들어 &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; 에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="0c343593ebb904e7e3941adfd4e4eb418b4d1e1d" translate="yes" xml:space="preserve">
          <source>Note that trying to reset &lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; will actually set the default crystal handler that monitors and reaps child processes. This prevents zombie processes and is required by &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; for example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;signal#CHLD&quot;&gt;CHLD&lt;/a&gt;&lt;/code&gt; 를 재설정 하려고 하면 실제로 자식 프로세스를 모니터링하고 거두는 기본 크리스탈 핸들러가 설정됩니다. 이것은 좀비 프로세스를 방지 하며 예를 들어 &lt;code&gt;&lt;a href=&quot;process#wait:Process::Status-instance-method&quot;&gt;Process#wait&lt;/a&gt;&lt;/code&gt; 에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="f1a47b6165250421852f2d206b0a535e056b95f0" translate="yes" xml:space="preserve">
          <source>Note that type restrictions do not apply to the variables inside the actual methods.</source>
          <target state="translated">실제 메서드 내의 변수에는 유형 제한이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ddad369c61a967d60eab102822815b8de270004" translate="yes" xml:space="preserve">
          <source>Note that we create a &lt;code&gt;Person&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt; but we defined the initialization in an &lt;code&gt;initialize&lt;/code&gt; method, not in a &lt;code&gt;new&lt;/code&gt; method. Why is this so?</source>
          <target state="translated">우리 는 &lt;code&gt;new&lt;/code&gt; 로 &lt;code&gt;Person&lt;/code&gt; 을 생성 하지만 &lt;code&gt;new&lt;/code&gt; 메소드가 아닌 &lt;code&gt;initialize&lt;/code&gt; 메소드 에서 초기화를 정의했습니다 . 왜 그렇습니까?</target>
        </trans-unit>
        <trans-unit id="3e9b417367499f6e4fe4eb1f291c1d5870403b25" translate="yes" xml:space="preserve">
          <source>Note that we save the box in &lt;code&gt;@@box&lt;/code&gt;. The reason is that if we don't do it, and our code doesn't reference it anymore, the GC will collect it. The C library will of course store the callback, but Crystal's GC has no way of knowing that.</source>
          <target state="translated">&lt;code&gt;@@box&lt;/code&gt; 상자를 저장합니다 . 그 이유는 우리가 그것을하지 않고 코드가 더 이상 참조하지 않으면 GC가 수집하기 때문입니다. C 라이브러리는 물론 콜백을 저장하지만 Crystal의 GC는이를 알 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d283ee35df39561eae27662474ff0f693663439" translate="yes" xml:space="preserve">
          <source>Note that we save the boxed callback in &lt;code&gt;@@box&lt;/code&gt;. The reason is that if we don't do it, and our code doesn't reference it anymore, the GC will collect it. The C library will of course store the callback, but Crystal's GC has no way of knowing that.</source>
          <target state="translated">박스형 콜백을 &lt;code&gt;@@box&lt;/code&gt; 에 저장합니다 . 그 이유는 우리가 그것을하지 않고 코드가 더 이상 참조하지 않으면 GC가 수집하기 때문입니다. C 라이브러리는 물론 콜백을 저장하지만 Crystal의 GC는이를 알 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7df742bb71acad7c16f2a1ebaab70b45ef58534b" translate="yes" xml:space="preserve">
          <source>Note that we won't be using TDD in the example itself, but we will mimic as if the example code is the result of the first iterations.</source>
          <target state="translated">Note that we won't be using TDD in the example itself, but we will mimic as if the example code is the result of the first iterations.</target>
        </trans-unit>
        <trans-unit id="a2aaf45bfa98ad69869830709cccb2c1c0f8f902" translate="yes" xml:space="preserve">
          <source>Note that when the program executes a &lt;code&gt;receive&lt;/code&gt;, that fiber blocks and execution continues with the other fiber. When &lt;code&gt;send&lt;/code&gt; is executed, execution continues with the fiber that was waiting on that channel.</source>
          <target state="translated">프로그램이 &lt;code&gt;receive&lt;/code&gt; 를 실행할 때 해당 파이버 블록 및 실행은 다른 파이버에서 계속됩니다. &lt;code&gt;send&lt;/code&gt; 가 실행될 때 해당 채널에서 대기중인 광섬유로 실행이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="c08f2cf170daa0f783923075996b4317497c50a9" translate="yes" xml:space="preserve">
          <source>Note that you can use any type as an &lt;code&gt;is_a?&lt;/code&gt; test, like abstract classes and modules.</source>
          <target state="translated">모든 유형을 &lt;code&gt;is_a?&lt;/code&gt; 로 사용할 수 있습니까? 추상 클래스 및 모듈과 같은 테스트.</target>
        </trans-unit>
        <trans-unit id="2a0f7deb50ae551bc7fd424200c5053fa3979933" translate="yes" xml:space="preserve">
          <source>Note, however, that fibers don't get executed right away. For example:</source>
          <target state="translated">그러나 파이버는 즉시 실행되지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e021e3232d312c94b658d8347111ffe63c7dff7e" translate="yes" xml:space="preserve">
          <source>Note, however, that functions passed to C can't form closures. If the compiler detects at compile-time that a closure is being passed, an error will be issued:</source>
          <target state="translated">그러나 C로 전달 된 함수는 클로저를 형성 할 수 없습니다. 컴파일러가 컴파일 타임에 클로저가 전달되고 있음을 감지하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="1b70dacbe558c1246db5330f6d672db00269ffc4" translate="yes" xml:space="preserve">
          <source>Note: The actual binary is built in to &lt;code&gt;.build/crystal&lt;/code&gt;, but the &lt;code&gt;bin/crystal&lt;/code&gt; wrapper script is what you should use to run crystal.</source>
          <target state="translated">참고 : 실제 바이너리는 &lt;code&gt;.build/crystal&lt;/code&gt; 에 내장되어 있지만 &lt;code&gt;bin/crystal&lt;/code&gt; 래퍼 스크립트는 crystal을 실행하는 데 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="705f8982949d38e4a11c13a286d327b70b4bb076" translate="yes" xml:space="preserve">
          <source>Note: When using the pg driver, use &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc. instead of &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">참고 : pg 드라이버를 사용할 때는 &lt;code&gt;?&lt;/code&gt; 대신 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; 등을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5594da49c33afb741c4981e27579c2333df588b2" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;case&lt;/code&gt; is not within the macro. The code generated by the macro consists solely of two &lt;code&gt;when&lt;/code&gt; expressions which, by themselves, is not valid Crystal code. We must include &lt;code&gt;case&lt;/code&gt; within the macro in order to make it valid by using &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;:</source>
          <target state="translated">공지 사항이 &lt;code&gt;case&lt;/code&gt; 매크로가 포함되어 있지 않습니다. 매크로에 의해 생성 된 코드는 전적으로 두 가지로 구성되어 , 그 자체로 유효한 크리스탈 코드가 아닙니다 표현. 매크로를 &lt;code&gt;begin&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 을 사용하여 유효하게하려면 &lt;code&gt;case&lt;/code&gt; 를 포함해야합니다 . &lt;code&gt;when&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdda6cfdec3a53b7bf2752325a7b6e92cf980953" translate="yes" xml:space="preserve">
          <source>Notice that the chained calls of &lt;code&gt;plus&lt;/code&gt; return the expected result, but only the first call to it modifies the variable &lt;code&gt;counter&lt;/code&gt;, as the second call operates on the &lt;em&gt;copy&lt;/em&gt; of the struct passed to it from the first call, and this copy is discarded after the expression is executed.</source>
          <target state="translated">체인 된 &lt;code&gt;plus&lt;/code&gt; 호출은 예상 결과를 반환하지만 첫 번째 호출에서만 전달 된 구조체 의 &lt;em&gt;복사본&lt;/em&gt; 에서 두 번째 호출이 작동 하므로 첫 번째 호출 만 변수 &lt;code&gt;counter&lt;/code&gt; 를 수정합니다 . 표현이 실행됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="519130ac6dd4e0f9061baf1d619b8759ef3e2ff7" translate="yes" xml:space="preserve">
          <source>Notice the variables in the inner macro are not available within the &lt;code&gt;verbatim&lt;/code&gt; block. The contents of the block are transferred &quot;as is&quot;, essentially as a string, until re-examined by the compiler.</source>
          <target state="translated">내부 매크로의 변수는 &lt;code&gt;verbatim&lt;/code&gt; 블록 내에서 사용할 수 없습니다 . 블록의 내용은 컴파일러가 다시 검사 할 때까지 본질적으로 문자열로 &quot;있는 그대로&quot;전송됩니다.</target>
        </trans-unit>
        <trans-unit id="3bced83c066f46e331b81e762f9dc26e34928523" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;MyInt&lt;/code&gt; are interchangeable:</source>
          <target state="translated">이제 &lt;code&gt;Int32&lt;/code&gt; 와 &lt;code&gt;MyInt&lt;/code&gt; 는 서로 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="5b90649e919d57402b52f38d180bd0b20a888063" translate="yes" xml:space="preserve">
          <source>Now it works because we are creating a &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc&lt;/a&gt; and we invoke it passing &lt;code&gt;i&lt;/code&gt;, so the value gets copied and now the spawned fiber receives a copy.</source>
          <target state="translated">이제 &lt;a href=&quot;http://crystal-lang.org/api/Proc.html&quot;&gt;Proc를&lt;/a&gt; 생성하고 &lt;code&gt;i&lt;/code&gt; 를 전달하여 호출 하므로 값이 복사되고 생성 된 광섬유가 사본을받습니다.</target>
        </trans-unit>
        <trans-unit id="85d42745d4053337e47a54baa048745551627d86" translate="yes" xml:space="preserve">
          <source>Now let's see some examples!</source>
          <target state="translated">Now let's see some examples!</target>
        </trans-unit>
        <trans-unit id="3507c21525981117be474c4da251f3d4c049e3c7" translate="yes" xml:space="preserve">
          <source>Now that we have a good idea about creating a connection, let's present the &lt;strong&gt;second way&lt;/strong&gt; for creating one: &lt;code&gt;DB#open&lt;/code&gt;</source>
          <target state="translated">Now that we have a good idea about creating a connection, let's present the &lt;strong&gt;second way&lt;/strong&gt; for creating one: &lt;code&gt;DB#open&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b98fce16d538680d4aa6be6447c6fc70ad02382c" translate="yes" xml:space="preserve">
          <source>Now the code compiles:</source>
          <target state="translated">이제 코드가 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="c495f62bacebbeced779570a6792af558130531d" translate="yes" xml:space="preserve">
          <source>Now we can create people like this:</source>
          <target state="translated">이제 다음과 같은 사람들을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83967b0b4dbe5e651de53de1bd77ead1f9ef5234" translate="yes" xml:space="preserve">
          <source>Now, if we want to list all the options given by the compiler, we may run &lt;code&gt;crystal&lt;/code&gt; program without any arguments:</source>
          <target state="translated">Now, if we want to list all the options given by the compiler, we may run &lt;code&gt;crystal&lt;/code&gt; program without any arguments:</target>
        </trans-unit>
        <trans-unit id="5be18c15f93e8ee86b416aaf60e9a31487745ada" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s run specs using an external service (for example MySQL):</source>
          <target state="translated">이제 외부 서비스 (예 : MySQL)를 사용하여 사양을 실행 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="1cb5cbf65558d7fb64943ca584c8288d410717a0" translate="yes" xml:space="preserve">
          <source>Now, let's run our application. We have two ways &lt;a href=&quot;../using_the_compiler/index&quot;&gt;using the compiler&lt;/a&gt;:</source>
          <target state="translated">이제 애플리케이션을 실행 해 보겠습니다. &lt;a href=&quot;../using_the_compiler/index&quot;&gt;컴파일러를 사용하는&lt;/a&gt; 두 가지 방법이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3d6cba0bd1778e4bf191dd6bf7e10f4f8b02d2f" translate="yes" xml:space="preserve">
          <source>Now, we will focus on the second main topic: our application&amp;rsquo;s output. For starters, our applications already display information but (I think) we could do better. Let&amp;rsquo;s add more &lt;em&gt;life&lt;/em&gt; (i.e. colors!) to the outputs.</source>
          <target state="translated">이제 두 번째 주요 주제 인 애플리케이션의 출력에 초점을 맞출 것입니다. 우선, 우리의 응용 프로그램은 이미 정보를 표시하지만 (제 생각에는) 더 잘할 수 있습니다. 출력 에 더 많은 &lt;em&gt;생명&lt;/em&gt; (즉, 색상!)을 추가합시다 .</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="6492625a23d53ed86a073d859d8fe2dd6c8d9801" translate="yes" xml:space="preserve">
          <source>Number []</source>
          <target state="translated">숫자 []</target>
        </trans-unit>
        <trans-unit id="2636a975d296386736c0a53e3801027063f7f303" translate="yes" xml:space="preserve">
          <source>Number of 100ms runs during the calculation stage</source>
          <target state="translated">계산 단계 동안 100ms 수</target>
        </trans-unit>
        <trans-unit id="be44a604fc66f0b2a7c7b936e26957f9c8f669d5" translate="yes" xml:space="preserve">
          <source>Number of bytes allocated per operation</source>
          <target state="translated">작업 당 할당 된 바이트 수</target>
        </trans-unit>
        <trans-unit id="9481b83c519a66c32c5b139645e62f2ddeab0b3e" translate="yes" xml:space="preserve">
          <source>Number of cycles needed to run for approx 100ms Calculated during the warmup stage</source>
          <target state="translated">예열 단계 동안 계산 된 약 100ms 동안 실행하는 데 필요한 사이클 수</target>
        </trans-unit>
        <trans-unit id="95b387c44c1efc478cc54ab073ddf2a9d38a2b07" translate="yes" xml:space="preserve">
          <source>Number of seconds decimals can be selected with &lt;em&gt;fraction_digits&lt;/em&gt;. Values accepted are 0 (the default, no decimals), 3 (milliseconds), 6 (microseconds) or 9 (nanoseconds).</source>
          <target state="translated">소수는 &lt;em&gt;fraction_digits&lt;/em&gt; 로 선택할 수 있습니다 . 허용되는 값은 0 (기본값, 소수 없음), 3 (밀리 초), 6 (마이크로 초) 또는 9 (나노초)입니다.</target>
        </trans-unit>
        <trans-unit id="e9a244565d0ece85dcc9b54734202dbc09e3dde3" translate="yes" xml:space="preserve">
          <source>Number slice</source>
          <target state="translated">숫자 조각</target>
        </trans-unit>
        <trans-unit id="043de8bc26f4ee4eb5e981e3060b5eee2e5e3d07" translate="yes" xml:space="preserve">
          <source>Number#*</source>
          <target state="translated">Number#*</target>
        </trans-unit>
        <trans-unit id="503da7a5f31eb0d2d1552e84d3f67dda7d29e882" translate="yes" xml:space="preserve">
          <source>Number#+</source>
          <target state="translated">Number#+</target>
        </trans-unit>
        <trans-unit id="1aa029036de76d28817d24abf2fad6846214e1f3" translate="yes" xml:space="preserve">
          <source>Number#-</source>
          <target state="translated">Number#-</target>
        </trans-unit>
        <trans-unit id="091f0ad2dd0ac454e93c6465c1cf8b48e1a9ed36" translate="yes" xml:space="preserve">
          <source>Number#/</source>
          <target state="translated">Number#/</target>
        </trans-unit>
        <trans-unit id="1d91f6e2b43456caa4e7d8afd37e55839f7435df" translate="yes" xml:space="preserve">
          <source>Number#//</source>
          <target state="translated">Number#//</target>
        </trans-unit>
        <trans-unit id="9d89fd216986768105a3cf1e44df3ec229e0ed1d" translate="yes" xml:space="preserve">
          <source>Number#==</source>
          <target state="translated">Number#==</target>
        </trans-unit>
        <trans-unit id="b9919b826bcc953029e7c2ef5653cfc39f11f455" translate="yes" xml:space="preserve">
          <source>Number#abs</source>
          <target state="translated">Number#abs</target>
        </trans-unit>
        <trans-unit id="1701f7c151bf40af1a848751bb30228328f297f2" translate="yes" xml:space="preserve">
          <source>Number#abs2</source>
          <target state="translated">Number#abs2</target>
        </trans-unit>
        <trans-unit id="9b4a1bd0e384e0f4ec24e0886c45b0052d0a023b" translate="yes" xml:space="preserve">
          <source>Number#cis</source>
          <target state="translated">Number#cis</target>
        </trans-unit>
        <trans-unit id="1057199f0276afa1af81e4b0680cde6318883d03" translate="yes" xml:space="preserve">
          <source>Number#i</source>
          <target state="translated">Number#i</target>
        </trans-unit>
        <trans-unit id="20f8d8bad640d14a67d8415b0d8ce26dd26fadb3" translate="yes" xml:space="preserve">
          <source>Number#sign</source>
          <target state="translated">Number#sign</target>
        </trans-unit>
        <trans-unit id="56978b13282e68f15f515097c6f6c4100b3c9816" translate="yes" xml:space="preserve">
          <source>Number#step</source>
          <target state="translated">Number#step</target>
        </trans-unit>
        <trans-unit id="fac421f373205f15acb0067bb29f82a38cbd5274" translate="yes" xml:space="preserve">
          <source>Number#to_c</source>
          <target state="translated">Number#to_c</target>
        </trans-unit>
        <trans-unit id="5fc2c07fb331448e68f0690b0e1566d1d8648b59" translate="yes" xml:space="preserve">
          <source>Number.zero</source>
          <target state="translated">Number.zero</target>
        </trans-unit>
        <trans-unit id="a8fc9c0627d353f718d236e88c3be96f2dc3c2ac" translate="yes" xml:space="preserve">
          <source>Numerical argument out of domain</source>
          <target state="translated">도메인 외부의 숫자 인수</target>
        </trans-unit>
        <trans-unit id="ec55bb4c0abfdf374833bccaf8cca81f159223e2" translate="yes" xml:space="preserve">
          <source>OAuth</source>
          <target state="translated">OAuth</target>
        </trans-unit>
        <trans-unit id="a001d9df1300ecf9a29aad8d9b0f309a3cc97221" translate="yes" xml:space="preserve">
          <source>OAuth2</source>
          <target state="translated">OAuth2</target>
        </trans-unit>
        <trans-unit id="d0c768ee28c41df60d2e22bf046fcb5280b905f0" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken</source>
          <target state="translated">OAuth2::AccessToken</target>
        </trans-unit>
        <trans-unit id="24346883c7b993797bbce8626ec7c3b66a627aa9" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken::Bearer</source>
          <target state="translated">OAuth2::AccessToken::Bearer</target>
        </trans-unit>
        <trans-unit id="07bc9d149768dd7f70283338ef9d8be2be475576" translate="yes" xml:space="preserve">
          <source>OAuth2::AccessToken::Mac</source>
          <target state="translated">OAuth2::AccessToken::Mac</target>
        </trans-unit>
        <trans-unit id="458daefa039c30ece7d8a2fd8d50394d3d01829e" translate="yes" xml:space="preserve">
          <source>OAuth2::Client</source>
          <target state="translated">OAuth2::Client</target>
        </trans-unit>
        <trans-unit id="8c7216a7460ed5206f6ad327a53fc0bac6d2d2a6" translate="yes" xml:space="preserve">
          <source>OAuth2::Error</source>
          <target state="translated">OAuth2::Error</target>
        </trans-unit>
        <trans-unit id="1c638916279cc39fc2f2206a16b465cce34cbb95" translate="yes" xml:space="preserve">
          <source>OAuth2::Session</source>
          <target state="translated">OAuth2::Session</target>
        </trans-unit>
        <trans-unit id="b1fad834f0a5af8312249208b8f8ac356f711787" translate="yes" xml:space="preserve">
          <source>OAuth::AccessToken</source>
          <target state="translated">OAuth::AccessToken</target>
        </trans-unit>
        <trans-unit id="42df58d98bee56779115f35f9fed01ff008a3122" translate="yes" xml:space="preserve">
          <source>OAuth::Consumer</source>
          <target state="translated">OAuth::Consumer</target>
        </trans-unit>
        <trans-unit id="d8c2f74a1b2a904f9381739e52008f84204d8e78" translate="yes" xml:space="preserve">
          <source>OAuth::Error</source>
          <target state="translated">OAuth::Error</target>
        </trans-unit>
        <trans-unit id="19427514732b92b58ea66904254e0c98ad4ff4c0" translate="yes" xml:space="preserve">
          <source>OAuth::Error.new</source>
          <target state="translated">OAuth::Error.new</target>
        </trans-unit>
        <trans-unit id="5d4d04269c633aae6c0d3c0ae722ae6333c9cf38" translate="yes" xml:space="preserve">
          <source>OAuth::RequestToken</source>
          <target state="translated">OAuth::RequestToken</target>
        </trans-unit>
        <trans-unit id="02ce66c3b2f62920ab55a0e848d4ded3f5f982b7" translate="yes" xml:space="preserve">
          <source>OPTIMIZE</source>
          <target state="translated">OPTIMIZE</target>
        </trans-unit>
        <trans-unit id="85120bce76a23e361fb938c44bc73facc906afcd" translate="yes" xml:space="preserve">
          <source>ORMs</source>
          <target state="translated">ORMs</target>
        </trans-unit>
        <trans-unit id="2362f56467bd97d990f9074700b6cc2cd78cbf6a" translate="yes" xml:space="preserve">
          <source>OS-provided MIME database</source>
          <target state="translated">OS 제공 MIME 데이터베이스</target>
        </trans-unit>
        <trans-unit id="b7145cd2e6a6f69510145255e6426e2ea357ed17" translate="yes" xml:space="preserve">
          <source>OWASP Wiki</source>
          <target state="translated">OWASP 위키</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="3e6416c549089d793b355231b4a195dcb855eb09" translate="yes" xml:space="preserve">
          <source>Object Serialization</source>
          <target state="translated">객체 직렬화</target>
        </trans-unit>
        <trans-unit id="1284878f8bf01bfc8401e081705dc57ce6114d4b" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;class#==(other:Class):Bool-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="translated">객체는 단순히 &lt;code&gt;&lt;a href=&quot;class#==(other:Class):Bool-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; 를 호출하여 &lt;code&gt;&lt;a href=&quot;class#===(other)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 을 구현 하지만 하위 클래스 (특히 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; )는 대소 문자를 구분하는 의미있는 의미를 제공하기 위해이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1c5f22e7b8abf9733dcde6e5d408d47868255fc" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="translated">객체는 단순히 &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; 를 호출하여 &lt;code&gt;&lt;a href=&quot;object#===(other:JSON::Any)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 을 구현 하지만 하위 클래스 (특히 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; )는 대소 문자를 구분하는 의미있는 의미를 제공하기 위해이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a61061e4f5862bcfdbbc32ae58d5f11a90fbd967" translate="yes" xml:space="preserve">
          <source>Object simply implements &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;proc#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;, but subclasses (notably &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;) can override it to provide meaningful case-equality semantics.</source>
          <target state="translated">객체는 단순히 &lt;code&gt;&lt;a href=&quot;proc#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; 를 호출하여 &lt;code&gt;&lt;a href=&quot;proc#===(other:self)-instance-method&quot;&gt;#===&lt;/a&gt;&lt;/code&gt; 을 구현 하지만 하위 클래스 (특히 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; )는 대소 문자를 구분하는 의미있는 의미를 제공하기 위해이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="193b577043159d042d3de9c4e747abf9135e4ff6" translate="yes" xml:space="preserve">
          <source>Object#!</source>
          <target state="translated">Object#!</target>
        </trans-unit>
        <trans-unit id="0e2fc4dff1ddd2856e5f0f888b403d2af7439ceb" translate="yes" xml:space="preserve">
          <source>Object#!=</source>
          <target state="translated">Object#!=</target>
        </trans-unit>
        <trans-unit id="da2a8bc0318f32b28ed3b40604520148e0bb9647" translate="yes" xml:space="preserve">
          <source>Object#!~</source>
          <target state="translated">Object#!~</target>
        </trans-unit>
        <trans-unit id="bd71fd3b0efd874a002ef2028c1570bbcc5f03fb" translate="yes" xml:space="preserve">
          <source>Object#==</source>
          <target state="translated">Object#==</target>
        </trans-unit>
        <trans-unit id="ce3b211638137695592739e8e404f666e5eb6419" translate="yes" xml:space="preserve">
          <source>Object#===</source>
          <target state="translated">Object#===</target>
        </trans-unit>
        <trans-unit id="d10e6553e69983754bd8a406d3404923e8364e2c" translate="yes" xml:space="preserve">
          <source>Object#=~</source>
          <target state="translated">Object#=~</target>
        </trans-unit>
        <trans-unit id="ab5ec050f6f4b05feeffa4edb23bad9b7dd8cd4f" translate="yes" xml:space="preserve">
          <source>Object#as</source>
          <target state="translated">Object#as</target>
        </trans-unit>
        <trans-unit id="1adc58659eace0de92c1eaa6fffecc4ba48e1933" translate="yes" xml:space="preserve">
          <source>Object#as?</source>
          <target state="translated">Object#as?</target>
        </trans-unit>
        <trans-unit id="815b677fa448093d21a40e0c1831fd59446ac394" translate="yes" xml:space="preserve">
          <source>Object#back</source>
          <target state="translated">Object#back</target>
        </trans-unit>
        <trans-unit id="12371531b2e743d127f5036873e6a458c0a59881" translate="yes" xml:space="preserve">
          <source>Object#black</source>
          <target state="translated">Object#black</target>
        </trans-unit>
        <trans-unit id="04d583e724eaae4a6f0cfb9072547360769516f4" translate="yes" xml:space="preserve">
          <source>Object#blink</source>
          <target state="translated">Object#blink</target>
        </trans-unit>
        <trans-unit id="8aa0a265133fe978711a4b6792c8ad087981174c" translate="yes" xml:space="preserve">
          <source>Object#blue</source>
          <target state="translated">Object#blue</target>
        </trans-unit>
        <trans-unit id="3696ba5d67d62dbca4ef0ab80df13a196c7221ff" translate="yes" xml:space="preserve">
          <source>Object#bold</source>
          <target state="translated">Object#bold</target>
        </trans-unit>
        <trans-unit id="738e6333f5eb79daf19c71eb8f27d4b544fea448" translate="yes" xml:space="preserve">
          <source>Object#bright</source>
          <target state="translated">Object#bright</target>
        </trans-unit>
        <trans-unit id="f8393b08492037db43339ed83b2bc7e1eff2b480" translate="yes" xml:space="preserve">
          <source>Object#cyan</source>
          <target state="translated">Object#cyan</target>
        </trans-unit>
        <trans-unit id="b855b1cd88b148c6f3b4c7c75d5391a22811e1cd" translate="yes" xml:space="preserve">
          <source>Object#dark_gray</source>
          <target state="translated">Object#dark_gray</target>
        </trans-unit>
        <trans-unit id="99434b723ce585081cf56bd99035acd65277a848" translate="yes" xml:space="preserve">
          <source>Object#default</source>
          <target state="translated">Object#default</target>
        </trans-unit>
        <trans-unit id="8c302b808e470dac1910a9b1391382af8b4ea408" translate="yes" xml:space="preserve">
          <source>Object#dim</source>
          <target state="translated">Object#dim</target>
        </trans-unit>
        <trans-unit id="ca3d5115b04f32fe70b076388269578679d5e873" translate="yes" xml:space="preserve">
          <source>Object#dup</source>
          <target state="translated">Object#dup</target>
        </trans-unit>
        <trans-unit id="ac8ede2d121a1723b18ee301a2a3a831e9ff4e38" translate="yes" xml:space="preserve">
          <source>Object#fore</source>
          <target state="translated">Object#fore</target>
        </trans-unit>
        <trans-unit id="69e9cdef3784b5abb56f55e17af5112816092b2f" translate="yes" xml:space="preserve">
          <source>Object#green</source>
          <target state="translated">Object#green</target>
        </trans-unit>
        <trans-unit id="9be3d354e7bf75ee1c3961451ef6c8a778898fe2" translate="yes" xml:space="preserve">
          <source>Object#hash</source>
          <target state="translated">Object#hash</target>
        </trans-unit>
        <trans-unit id="dfa5378ae76ace37c4345abff5bd343d7d394c56" translate="yes" xml:space="preserve">
          <source>Object#hidden</source>
          <target state="translated">Object#hidden</target>
        </trans-unit>
        <trans-unit id="782f438afdfb9026987c9473bad03c906cfd0f60" translate="yes" xml:space="preserve">
          <source>Object#in?</source>
          <target state="translated">Object#in?</target>
        </trans-unit>
        <trans-unit id="6836f7bdb2cf6e2771db5195ffcb47332e18ef40" translate="yes" xml:space="preserve">
          <source>Object#inspect</source>
          <target state="translated">Object#inspect</target>
        </trans-unit>
        <trans-unit id="d268eef0372df6ada9fd764ce090cf95a09c9f14" translate="yes" xml:space="preserve">
          <source>Object#light_blue</source>
          <target state="translated">Object#light_blue</target>
        </trans-unit>
        <trans-unit id="79eac9e7727704da4d9e4a8c49d122d31d742e6f" translate="yes" xml:space="preserve">
          <source>Object#light_cyan</source>
          <target state="translated">Object#light_cyan</target>
        </trans-unit>
        <trans-unit id="df0e1ac82499ccfacf0052d81b5f9373228f2748" translate="yes" xml:space="preserve">
          <source>Object#light_gray</source>
          <target state="translated">Object#light_gray</target>
        </trans-unit>
        <trans-unit id="912b65837eec0cfd0f7065472026e4ae76641978" translate="yes" xml:space="preserve">
          <source>Object#light_green</source>
          <target state="translated">Object#light_green</target>
        </trans-unit>
        <trans-unit id="90aeddf804641684935f43b71b386639198e0627" translate="yes" xml:space="preserve">
          <source>Object#light_magenta</source>
          <target state="translated">Object#light_magenta</target>
        </trans-unit>
        <trans-unit id="34a725099ea3e1fdc043021e7d688c799174c8ea" translate="yes" xml:space="preserve">
          <source>Object#light_red</source>
          <target state="translated">Object#light_red</target>
        </trans-unit>
        <trans-unit id="f7568274f1a8a1e6d83e99fb1564c134d8106ebe" translate="yes" xml:space="preserve">
          <source>Object#light_yellow</source>
          <target state="translated">Object#light_yellow</target>
        </trans-unit>
        <trans-unit id="91dbdf3d433b07f16ee996b51230890fb7c579fd" translate="yes" xml:space="preserve">
          <source>Object#magenta</source>
          <target state="translated">Object#magenta</target>
        </trans-unit>
        <trans-unit id="1e32f5a9958efa767d67eb3d44e07c4b5c14dd9e" translate="yes" xml:space="preserve">
          <source>Object#mode</source>
          <target state="translated">Object#mode</target>
        </trans-unit>
        <trans-unit id="8ad1b97d5c997aaa611601453f6654a43670da04" translate="yes" xml:space="preserve">
          <source>Object#nil?</source>
          <target state="translated">Object#nil?</target>
        </trans-unit>
        <trans-unit id="d05da3aa73aabe3cae3903ff334563c47eb38582" translate="yes" xml:space="preserve">
          <source>Object#on</source>
          <target state="translated">Object#on</target>
        </trans-unit>
        <trans-unit id="fa10aee7c7093dc9b3839c1a8a7f03d550e22379" translate="yes" xml:space="preserve">
          <source>Object#on_black</source>
          <target state="translated">Object#on_black</target>
        </trans-unit>
        <trans-unit id="114412a531c138591ea41e8070331bc386740851" translate="yes" xml:space="preserve">
          <source>Object#on_blue</source>
          <target state="translated">Object#on_blue</target>
        </trans-unit>
        <trans-unit id="e43f78271c36daede734d3f5219b3fbdc710648b" translate="yes" xml:space="preserve">
          <source>Object#on_cyan</source>
          <target state="translated">Object#on_cyan</target>
        </trans-unit>
        <trans-unit id="691d812aa52f1f62ee0587713634a5a0e31a550c" translate="yes" xml:space="preserve">
          <source>Object#on_dark_gray</source>
          <target state="translated">Object#on_dark_gray</target>
        </trans-unit>
        <trans-unit id="f3fd440c90b07b181b2e5e5e9240b545cefe47f1" translate="yes" xml:space="preserve">
          <source>Object#on_default</source>
          <target state="translated">Object#on_default</target>
        </trans-unit>
        <trans-unit id="d3739f2b3237754dbe0117031dac84cfabe9d990" translate="yes" xml:space="preserve">
          <source>Object#on_green</source>
          <target state="translated">Object#on_green</target>
        </trans-unit>
        <trans-unit id="b62028d8719973ae1f9e3608204c3b83e067146f" translate="yes" xml:space="preserve">
          <source>Object#on_light_blue</source>
          <target state="translated">Object#on_light_blue</target>
        </trans-unit>
        <trans-unit id="48ba49aa8becdd81c206b5c6c971e9ad9768b5b1" translate="yes" xml:space="preserve">
          <source>Object#on_light_cyan</source>
          <target state="translated">Object#on_light_cyan</target>
        </trans-unit>
        <trans-unit id="b3973c3a89d28c6d38bdd74ab33eda6724921aa2" translate="yes" xml:space="preserve">
          <source>Object#on_light_gray</source>
          <target state="translated">Object#on_light_gray</target>
        </trans-unit>
        <trans-unit id="b54178855c30c5f0b092fc18ae57452a6fa9abb0" translate="yes" xml:space="preserve">
          <source>Object#on_light_green</source>
          <target state="translated">Object#on_light_green</target>
        </trans-unit>
        <trans-unit id="ce2cfe2ea16a18610f2feddc71b8136aca7a4c94" translate="yes" xml:space="preserve">
          <source>Object#on_light_magenta</source>
          <target state="translated">Object#on_light_magenta</target>
        </trans-unit>
        <trans-unit id="5aedad530e4e579337b779799c6c19d7cf07625e" translate="yes" xml:space="preserve">
          <source>Object#on_light_red</source>
          <target state="translated">Object#on_light_red</target>
        </trans-unit>
        <trans-unit id="4024434df078b4ef187704e0c6b531529013f3eb" translate="yes" xml:space="preserve">
          <source>Object#on_light_yellow</source>
          <target state="translated">Object#on_light_yellow</target>
        </trans-unit>
        <trans-unit id="273231c5496f16d085230481c96ecb3ee2ef107a" translate="yes" xml:space="preserve">
          <source>Object#on_magenta</source>
          <target state="translated">Object#on_magenta</target>
        </trans-unit>
        <trans-unit id="643e8b41aaa38a4c51816f6f40adf5e68d1e7a99" translate="yes" xml:space="preserve">
          <source>Object#on_red</source>
          <target state="translated">Object#on_red</target>
        </trans-unit>
        <trans-unit id="35779d9d57f0f0920456fd988acaf118bb70d9ee" translate="yes" xml:space="preserve">
          <source>Object#on_white</source>
          <target state="translated">Object#on_white</target>
        </trans-unit>
        <trans-unit id="339a8df54a7f1c471a64081a3483e0bbe4f9b63c" translate="yes" xml:space="preserve">
          <source>Object#on_yellow</source>
          <target state="translated">Object#on_yellow</target>
        </trans-unit>
        <trans-unit id="60cbd34591a2c1d706586c1561550c6d6fc2a5ff" translate="yes" xml:space="preserve">
          <source>Object#red</source>
          <target state="translated">Object#red</target>
        </trans-unit>
        <trans-unit id="08328dc2a98ea039f002184f326f8b6a7a389927" translate="yes" xml:space="preserve">
          <source>Object#reverse</source>
          <target state="translated">Object#reverse</target>
        </trans-unit>
        <trans-unit id="d919ca07916868899f77564daff1c66937ac1639" translate="yes" xml:space="preserve">
          <source>Object#surround</source>
          <target state="translated">Object#surround</target>
        </trans-unit>
        <trans-unit id="2207757d2c018269f15ac6851b7baadafbdf9e48" translate="yes" xml:space="preserve">
          <source>Object#tap</source>
          <target state="translated">Object#tap</target>
        </trans-unit>
        <trans-unit id="83481709340491ab07cd3ea47acf01adc87cbdff" translate="yes" xml:space="preserve">
          <source>Object#to_s</source>
          <target state="translated">Object#to_s</target>
        </trans-unit>
        <trans-unit id="4e6446e4b9b64d2e9af02ef4ab8c3849ec03b92c" translate="yes" xml:space="preserve">
          <source>Object#toggle</source>
          <target state="translated">Object#toggle</target>
        </trans-unit>
        <trans-unit id="4577f031b57b33b7448915bf92f1c64db21a412a" translate="yes" xml:space="preserve">
          <source>Object#try</source>
          <target state="translated">Object#try</target>
        </trans-unit>
        <trans-unit id="a690f333bed9c3963c99291d2128cd1167355f56" translate="yes" xml:space="preserve">
          <source>Object#underline</source>
          <target state="translated">Object#underline</target>
        </trans-unit>
        <trans-unit id="495bbd74a9874872dd7923dc1625525cb78d6deb" translate="yes" xml:space="preserve">
          <source>Object#white</source>
          <target state="translated">Object#white</target>
        </trans-unit>
        <trans-unit id="ecbb2a04d71606bdd2385b4da0c58c96f0da7200" translate="yes" xml:space="preserve">
          <source>Object#yellow</source>
          <target state="translated">Object#yellow</target>
        </trans-unit>
        <trans-unit id="34e12e5e97bedfe766ad6da61d503406db94c052" translate="yes" xml:space="preserve">
          <source>Object.new</source>
          <target state="translated">Object.new</target>
        </trans-unit>
        <trans-unit id="42ea48c0de1b182cde7e4f3b01d99fd977f5e056" translate="yes" xml:space="preserve">
          <source>ObjectExtensions</source>
          <target state="translated">ObjectExtensions</target>
        </trans-unit>
        <trans-unit id="a4f517225e4aa630a3698e0adb15307d109a6dba" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#colorize</source>
          <target state="translated">ObjectExtensions#colorize</target>
        </trans-unit>
        <trans-unit id="eaaf4c82c3dee8bd13e7afa68f65287ba1307b15" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#should</source>
          <target state="translated">ObjectExtensions#should</target>
        </trans-unit>
        <trans-unit id="ad513c02223d0b3b8ce2735f28bd38a20c5da821" translate="yes" xml:space="preserve">
          <source>ObjectExtensions#should_not</source>
          <target state="translated">ObjectExtensions#should_not</target>
        </trans-unit>
        <trans-unit id="32c5a06936a38dfb7fadd22e92f8fd1eec9a0bba" translate="yes" xml:space="preserve">
          <source>Objects of class &lt;code&gt;&lt;a href=&quot;dir&quot;&gt;Dir&lt;/a&gt;&lt;/code&gt; are directory streams representing directories in the underlying file system. They provide a variety of ways to list directories and their contents.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dir&quot;&gt;Dir&lt;/a&gt;&lt;/code&gt; 클래스의 객체는 기본 파일 시스템의 디렉토리를 나타내는 디렉토리 스트림입니다. 디렉토리와 내용을 나열하는 다양한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="03e4567313f1db64db2f5fa5bd31c7415bf98b31" translate="yes" xml:space="preserve">
          <source>Obtaining access tokens</source>
          <target state="translated">액세스 토큰 얻기</target>
        </trans-unit>
        <trans-unit id="8af453669fedbc26e57b0af23661518a1dc40120" translate="yes" xml:space="preserve">
          <source>Obtains a request token, also known as &quot;temporary credentials&quot;, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.1&quot;&gt;RFC 5849, Section 2.1&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.1&quot;&gt;RFC 5849 섹션 2.1에&lt;/a&gt; 지정된 &quot;임시 자격 증명&quot;이라고도하는 요청 토큰을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3538fe55b76ef32c585990ea848f331638b40337" translate="yes" xml:space="preserve">
          <source>Octal number conversion</source>
          <target state="translated">8 진수 변환</target>
        </trans-unit>
        <trans-unit id="d3b36c02f078a20a50c3fbe9dd7d57c6f6363a87" translate="yes" xml:space="preserve">
          <source>Octal number conversion:</source>
          <target state="translated">8 진수 변환 :</target>
        </trans-unit>
        <trans-unit id="eac09a049cd870c7a9142a2b16b0e51280aef13f" translate="yes" xml:space="preserve">
          <source>Octal numbers start with &lt;code&gt;0o&lt;/code&gt;:</source>
          <target state="translated">8 진수는 &lt;code&gt;0o&lt;/code&gt; 로 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="42f51ee53c0e463dac0a244e33f4c671f46f1ffb" translate="yes" xml:space="preserve">
          <source>Octal numbers start with a &lt;code&gt;0o&lt;/code&gt;:</source>
          <target state="translated">8 진수는 &lt;code&gt;0o&lt;/code&gt; 로 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="f3f4983b08e439191dc9ccfe532b5d02415f4180" translate="yes" xml:space="preserve">
          <source>Of course the above program can be written without &lt;code&gt;spawn&lt;/code&gt; at all, just with a loop. &lt;code&gt;sleep&lt;/code&gt; is more useful when spawning more than one fiber.</source>
          <target state="translated">물론 위의 프로그램은 루프 없이 &lt;code&gt;spawn&lt;/code&gt; 될 수 있습니다 . &lt;code&gt;sleep&lt;/code&gt; 은 하나 이상의 섬유를 생성 할 때 더 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b08554eb78995a127ae891fcdb418b7a733af3e9" translate="yes" xml:space="preserve">
          <source>Of course, reassigning a variable inside the &lt;code&gt;then&lt;/code&gt; branch makes that variable have a new type based on the expression assigned.</source>
          <target state="translated">물론 &lt;code&gt;then&lt;/code&gt; 분기 내부에 변수를 다시 할당하면 지정된 표현식에 따라 해당 변수에 새로운 유형이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="3f80ea00ca969abbe7141b32ca301328d0eef806" translate="yes" xml:space="preserve">
          <source>Official docs</source>
          <target state="translated">공식 문서</target>
        </trans-unit>
        <trans-unit id="aab171aaab6ee5b748dedb22b090c25a14e9b1b8" translate="yes" xml:space="preserve">
          <source>Oh no! It&amp;rsquo;s broken: we need to handle &lt;strong&gt;invalid options&lt;/strong&gt; and &lt;strong&gt;invalid parameters&lt;/strong&gt; given to an option! For these two situations, the &lt;code&gt;OptionParser&lt;/code&gt; class has two methods: &lt;code&gt;#invalid_option&lt;/code&gt; and &lt;code&gt;#missing_option&lt;/code&gt;</source>
          <target state="translated">오 안돼! 깨졌습니다. &lt;strong&gt;옵션에&lt;/strong&gt; 주어진 &lt;strong&gt;잘못된 옵션&lt;/strong&gt; 과 &lt;strong&gt;잘못된 매개 변수&lt;/strong&gt; 를 처리해야합니다 ! 이 두 상황의 경우 &lt;code&gt;OptionParser&lt;/code&gt; 클래스에는 &lt;code&gt;#invalid_option&lt;/code&gt; 및 &lt;code&gt;#missing_option&lt;/code&gt; 의 두 가지 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c69ed231fb7bf12ecdbb84ece8ce72f0abdd376" translate="yes" xml:space="preserve">
          <source>Oh, and we don't want to write C code to make the code run faster.</source>
          <target state="translated">아, 그리고 우리는 코드가 더 빨리 실행되도록 C 코드를 작성하고 싶지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4c352d33fad8d74f5346c27d2c8f1edd40df286" translate="yes" xml:space="preserve">
          <source>Ok, now we have a connection, let's use it!</source>
          <target state="translated">좋아, 이제 연결이 되었으니 사용하자!</target>
        </trans-unit>
        <trans-unit id="3846ca003c15a5f1a3ea8e78c25c81e9c85dcdb9" translate="yes" xml:space="preserve">
          <source>On Alpine Linux</source>
          <target state="translated">알파인 리눅스</target>
        </trans-unit>
        <trans-unit id="67f3a2244d460ae7e73229adb39482643dafdc7f" translate="yes" xml:space="preserve">
          <source>On Arch Linux</source>
          <target state="translated">아치 리눅스에서</target>
        </trans-unit>
        <trans-unit id="347e95569b23599af2a6e8ec054e97396aa46765" translate="yes" xml:space="preserve">
          <source>On Bash on Ubuntu on Windows</source>
          <target state="translated">Windows의 Ubuntu에서 Bash</target>
        </trans-unit>
        <trans-unit id="53e251c2b48b87ae2bbd586bb6db76a24a8bda8e" translate="yes" xml:space="preserve">
          <source>On Debian and Ubuntu</source>
          <target state="translated">데비안과 우분투에서</target>
        </trans-unit>
        <trans-unit id="683b9ec518c1bacfd6b825a0ecc3f1cb237cf0d0" translate="yes" xml:space="preserve">
          <source>On FreeBSD</source>
          <target state="translated">FreeBSD에서</target>
        </trans-unit>
        <trans-unit id="69825a52c5fa47fd0895c6e2df043bc173a66456" translate="yes" xml:space="preserve">
          <source>On Gentoo Linux</source>
          <target state="translated">젠투 리눅스에서</target>
        </trans-unit>
        <trans-unit id="76281cbfcb0d0c7edffdde40919bc77452ad5359" translate="yes" xml:space="preserve">
          <source>On Linux using Linuxbrew</source>
          <target state="translated">Linuxbrew를 사용하는 Linux에서</target>
        </trans-unit>
        <trans-unit id="932a1eaa0755a6f41cd927e8ef1e7c4b32cbe3d9" translate="yes" xml:space="preserve">
          <source>On Linux using Snap</source>
          <target state="translated">Snap을 사용하는 Linux에서</target>
        </trans-unit>
        <trans-unit id="f0f5a3cdfba1ca0f981780082d406f4e44ff6ef8" translate="yes" xml:space="preserve">
          <source>On OpenBSD, it uses &lt;a href=&quot;https://man.openbsd.org/arc4random&quot;&gt;&lt;code&gt;arc4random&lt;/code&gt;&lt;/a&gt;, on Linux &lt;a href=&quot;http://man7.org/linux/man-pages/man2/getrandom.2.html&quot;&gt;&lt;code&gt;getrandom&lt;/code&gt;&lt;/a&gt; (if the kernel supports it), on Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom&quot;&gt;&lt;code&gt;RtlGenRandom&lt;/code&gt;&lt;/a&gt;, and falls back to reading from &lt;code&gt;/dev/urandom&lt;/code&gt; on UNIX systems.</source>
          <target state="translated">OpenBSD에서는 &lt;a href=&quot;https://man.openbsd.org/arc4random&quot;&gt; &lt;code&gt;arc4random&lt;/code&gt; &lt;/a&gt; , Linux에서는 &lt;a href=&quot;http://man7.org/linux/man-pages/man2/getrandom.2.html&quot;&gt; &lt;code&gt;getrandom&lt;/code&gt; &lt;/a&gt; (커널이 지원하는 경우), Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom&quot;&gt; &lt;code&gt;RtlGenRandom&lt;/code&gt; &lt;/a&gt; 에서는 사용하고 UNIX 시스템에서는 &lt;code&gt;/dev/urandom&lt;/code&gt; 에서 읽기로 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="cac6f4f51ac9ee222e7c3df0f1a43363b1076d1a" translate="yes" xml:space="preserve">
          <source>On OpenSUSE</source>
          <target state="translated">OpenSUSE에서</target>
        </trans-unit>
        <trans-unit id="9a24ee8d9c4b67b41479963b14ee6c87bb879596" translate="yes" xml:space="preserve">
          <source>On OpenSUSE Linux</source>
          <target state="translated">OpenSUSE Linux에서</target>
        </trans-unit>
        <trans-unit id="f278e377a6d94e4211c0da1de0dc0677db0154f5" translate="yes" xml:space="preserve">
          <source>On OpenSUSE, Crystal can be installed from the official rpm package using Zypper.</source>
          <target state="translated">OpenSUSE에서 Crystal은 Zypper를 사용하여 공식 rpm 패키지에서 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f52ffb0e28b31dc900188936e9b95b10abfdabe" translate="yes" xml:space="preserve">
          <source>On POSIX this uses &lt;code&gt;/bin/sh&lt;/code&gt; to process the command string. &lt;em&gt;args&lt;/em&gt; are also passed to the shell, and you need to include the string &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; in the &lt;em&gt;command&lt;/em&gt; to safely insert them there.</source>
          <target state="translated">POSIX에서는 &lt;code&gt;/bin/sh&lt;/code&gt; 를 사용 하여 명령 문자열을 처리합니다. &lt;em&gt;인수&lt;/em&gt; 도 셸로 전달되며, &lt;em&gt;인수&lt;/em&gt; 를 안전하게 삽입 하려면 &lt;em&gt;명령&lt;/em&gt; 에 &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; 문자열을 포함해야합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3086bd1f602303f1997dc2612ec0f85c2d634e39" translate="yes" xml:space="preserve">
          <source>On RedHat and CentOS</source>
          <target state="translated">RedHat 및 CentOS에서</target>
        </trans-unit>
        <trans-unit id="7343eeb06b68d7f228dad819eb7f23082bc25d1e" translate="yes" xml:space="preserve">
          <source>On Windows this is implemented by passing the string as-is to the process, and passing &lt;em&gt;args&lt;/em&gt; is not supported.</source>
          <target state="translated">Windows에서는 문자열을있는 그대로 프로세스에 전달하여 구현되며 &lt;em&gt;인수&lt;/em&gt; 전달 은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f6c1d95eb3b0ab706f0d6b27d5589e558154d6d6" translate="yes" xml:space="preserve">
          <source>On a 64-bit machine it lets us spawn millions and millions of fibers. In a 32-bit machine we can only spawn 512 fibers, which is not a lot. But because 32-bit machines are starting to become obsolete, we'll bet on the future and focus more on 64-bit machines.</source>
          <target state="translated">64 비트 컴퓨터에서는 수백만 및 수백만 개의 광섬유를 생성 할 수 있습니다. 32 비트 머신에서는 512 파이버 만 스폰 할 수 있습니다. 그러나 32 비트 시스템은 더 이상 사용되지 않기 때문에 미래에 내기를 걸고 64 비트 시스템에 더 집중할 것입니다.</target>
        </trans-unit>
        <trans-unit id="2a77b35f1a1d07d9a162b9cd39dd59b8595d0b05" translate="yes" xml:space="preserve">
          <source>On a POSIX system, the following files are tried to be read in sequential order, stopping at the first existing file. These values override those from &lt;code&gt;&lt;a href=&quot;mime#DEFAULT_TYPES&quot;&gt;DEFAULT_TYPES&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">POSIX 시스템에서 다음 파일은 순차적으로 읽히고 첫 번째 기존 파일에서 중지됩니다. 이 값은 &lt;code&gt;&lt;a href=&quot;mime#DEFAULT_TYPES&quot;&gt;DEFAULT_TYPES&lt;/a&gt;&lt;/code&gt; 의 값보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="eb9fe6389579b5c95b14793b61952727c2295441" translate="yes" xml:space="preserve">
          <source>On macOS using Homebrew</source>
          <target state="translated">Homebrew를 사용하는 macOS에서</target>
        </trans-unit>
        <trans-unit id="b784cab36915ec853a14ce24e12a80cb8adf43a1" translate="yes" xml:space="preserve">
          <source>On the other hand, we have &lt;code&gt;NCurses&lt;/code&gt;(New Curses). This library allows developers to create &lt;em&gt;graphical&lt;/em&gt; user interfaces in the terminal. As its name implies, it is an improved version of the library named &lt;code&gt;Curses&lt;/code&gt;, which was developed to support a text-based dungeon-crawling adventure game called Rogue! As you can imagine, there are already &lt;a href=&quot;https://crystalshards.org/?filter=ncurses&quot;&gt;a couple of shards&lt;/a&gt; in the ecosystem that will allow us to use &lt;code&gt;NCurses&lt;/code&gt; in Crystal!</source>
          <target state="translated">반면에 &lt;code&gt;NCurses&lt;/code&gt; (New Curses)가 있습니다. 이 라이브러리를 통해 개발자 는 터미널에서 &lt;em&gt;그래픽&lt;/em&gt; 사용자 인터페이스 를 만들 수 있습니다 . 이름에서 알 수 있듯이이 라이브러리 는 Rogue!라는 텍스트 기반 던전 크롤링 어드벤처 게임을 지원하기 위해 개발 된 &lt;code&gt;Curses&lt;/code&gt; 라는 라이브러리의 개선 된 버전입니다 . 상상할 수 있듯이, 우리가 Crystal에서 &lt;code&gt;NCurses&lt;/code&gt; 를 사용할 수있게 해줄 생태계 에는 이미 &lt;a href=&quot;https://crystalshards.org/?filter=ncurses&quot;&gt;몇 개의 샤드&lt;/a&gt; 가 있습니다 !</target>
        </trans-unit>
        <trans-unit id="71850c74e889fedbfbd17964d5cc6971040bfcf9" translate="yes" xml:space="preserve">
          <source>On unix, this compares device and inode fields, and will compare equal for hard linked files.</source>
          <target state="translated">유닉스에서는 디바이스와 아이 노드 필드를 비교하고 하드 링크 된 파일과 동일하게 비교합니다.</target>
        </trans-unit>
        <trans-unit id="8bde715d72a38d70075a8f69f598f9819061e517" translate="yes" xml:space="preserve">
          <source>On windows, only the &lt;code&gt;&lt;a href=&quot;permissions#OwnerWrite&quot;&gt;OwnerWrite&lt;/a&gt;&lt;/code&gt; bit is effective. All file permissions will either be &lt;code&gt;0o444&lt;/code&gt; for read-only files or &lt;code&gt;0o666&lt;/code&gt; for read-write files. Directories are always mode &lt;code&gt;0o555&lt;/code&gt; for read-only or &lt;code&gt;0o777&lt;/code&gt;.</source>
          <target state="translated">Windows에서는 &lt;code&gt;&lt;a href=&quot;permissions#OwnerWrite&quot;&gt;OwnerWrite&lt;/a&gt;&lt;/code&gt; 비트 만 유효합니다. 모든 파일 권한 중 하나가 될 것입니다 &lt;code&gt;0o444&lt;/code&gt; 읽기 전용 파일 또는 &lt;code&gt;0o666&lt;/code&gt; 읽기 - 쓰기 파일. 디렉토리는 항상 읽기 전용 또는 &lt;code&gt;0o777&lt;/code&gt; 의 경우 &lt;code&gt;0o555&lt;/code&gt; 모드 입니다.</target>
        </trans-unit>
        <trans-unit id="95d654586025b04ee03652c1686c4747992c57ca" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;../installation&quot;&gt;installed&lt;/a&gt;, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="translated">일단 &lt;a href=&quot;../installation&quot;&gt;설치&lt;/a&gt; 되면 Crystal 컴파일러를 &lt;code&gt;crystal&lt;/code&gt; 명령 으로 사용할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="65d57cf3b43133bc6526d879d0556d5e78254b2c" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;https://crystal-lang.org/installation&quot;&gt;installed&lt;/a&gt;, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="translated">일단 &lt;a href=&quot;https://crystal-lang.org/installation&quot;&gt;설치&lt;/a&gt; 되면 Crystal 컴파일러를 &lt;code&gt;crystal&lt;/code&gt; 명령 으로 사용할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="94c77e2ea9d57a683105a1606ab74505e5151c57" translate="yes" xml:space="preserve">
          <source>Once a file is required, the compiler remembers its absolute path and later &lt;code&gt;require&lt;/code&gt;s of that same file will be ignored.</source>
          <target state="translated">파일이 필요하면, 컴파일러는 절대 경로를 기억하고 나중에 &lt;code&gt;require&lt;/code&gt; 같은 파일의이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5ac7785d84ce94eb130ac2e079af8883845b3640" translate="yes" xml:space="preserve">
          <source>Once installed, the Crystal compiler should be available as &lt;code&gt;crystal&lt;/code&gt; command.</source>
          <target state="translated">일단 설치되면 Crystal 컴파일러를 &lt;code&gt;crystal&lt;/code&gt; 명령 으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7abff25d36cd948d938a45849882233ebe3278b" translate="yes" xml:space="preserve">
          <source>Once macros generate code, they are parsed with a regular Crystal parser where local variables in the context of the macro invocations are assumed to be defined.</source>
          <target state="translated">매크로가 코드를 생성하면 매크로 호출 컨텍스트에서 로컬 변수가 정의 된 것으로 간주되는 일반 Crystal 파서로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="d1993dc71a2508a1462d76f72a0d86ba2f67b1c2" translate="yes" xml:space="preserve">
          <source>Once positioned in a row, values can be obtained with the several &lt;code&gt;&lt;a href=&quot;csv#%5B%5D(header:String):String-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; methods, which can accept a header name, column position, or header name pattern as a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">행에 일단 배치되면 헤더 이름, 열 위치 또는 헤더 이름 패턴을 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 로 받아 들일 수 있는 여러 &lt;code&gt;&lt;a href=&quot;csv#%5B%5D(header:String):String-instance-method&quot;&gt;#[]&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 값을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2cb95abf1e0a1caefcb273fcf6c0f91e64416e8" translate="yes" xml:space="preserve">
          <source>Once the repository is configured you're ready to install Crystal:</source>
          <target state="translated">리포지토리가 구성되면 Crystal을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd842158fe230c8f49fd1e472caaffbd5a141f3e" translate="yes" xml:space="preserve">
          <source>Once the repository is configured, Crystal can be installed:</source>
          <target state="translated">리포지토리가 구성되면 Crystal을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f85c03ff148aa498c4d512549a367691a3cc842e" translate="yes" xml:space="preserve">
          <source>Once you bind it, the function is available inside the &lt;code&gt;C&lt;/code&gt; type as if it was a class method:</source>
          <target state="translated">바인딩하면 &lt;code&gt;C&lt;/code&gt; 메서드 내에서 클래스 메서드처럼 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a88c3869284ffd627f3551ba851efdd2ccaa951" translate="yes" xml:space="preserve">
          <source>Once you install the compiler using one of the following methods, make sure to read &lt;a href=&quot;../using_the_compiler/index&quot;&gt;Using the compiler&lt;/a&gt; to learn how to efficiently use it.</source>
          <target state="translated">다음 방법 중 하나를 사용하여 컴파일러를 설치하면 읽을 수 있는지 확인 &lt;a href=&quot;../using_the_compiler/index&quot;&gt;컴파일러를 사용하여&lt;/a&gt; 효율적으로 사용하는 방법을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a8bdb058ffa1a405649150f5dc2e0ef4885da6" translate="yes" xml:space="preserve">
          <source>Once you install the compiler using one of the following methods, make sure to read &lt;a href=&quot;https://crystal-lang.org/using_the_compiler/&quot;&gt;Using the compiler&lt;/a&gt; to learn how to efficiently use it.</source>
          <target state="translated">다음 방법 중 하나를 사용하여 컴파일러를 설치하면 읽을 수 있는지 확인 &lt;a href=&quot;https://crystal-lang.org/using_the_compiler/&quot;&gt;컴파일러를 사용하여&lt;/a&gt; 효율적으로 사용하는 방법을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="443f3bf1a871809d903652740589c757f6269fe2" translate="yes" xml:space="preserve">
          <source>Once you're up and running, and the build is passing, the build badge will update in your README.</source>
          <target state="translated">설치 및 실행이 완료되고 빌드가 진행되면 README에서 빌드 배지가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="fd54f6f2e3f2b13597a00d0aaf6d2b5746018d40" translate="yes" xml:space="preserve">
          <source>Once your documentation is ready and available, add this documentation badge below the description in your README.md so users know that it exists. (Be sure to replace &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">문서가 준비되고 사용 가능 해지면 README.md의 설명 아래에이 문서 배지를 추가하여 사용자가 문서의 존재를 알 수 있도록하십시오. ( &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; 을 적절히 교체 하십시오 )</target>
        </trans-unit>
        <trans-unit id="db5e5ae7fe051c5f32636aee1a7a61bbe4dd8770" translate="yes" xml:space="preserve">
          <source>Once your documentation is ready and available, you can add a documentation badge to your repository so users know that it exists. In GitLab this badge belongs to the project so we'll cover it in the GitLab instructions below, for GitHub it is common to place it below the description in your README.md like so: (Be sure to replace &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">문서가 준비되고 사용 가능하면 사용자가 문서가 있음을 알 수 있도록 저장소에 문서 배지를 추가 할 수 있습니다. GitLab에서이 배지는 프로젝트에 속하므로 아래 GitLab 지침에서 다루겠습니다. GitHub의 경우 README.md의 설명 아래에 다음과 같이 배치하는 것이 일반적입니다. ( &lt;code&gt;&amp;lt;LINK-TO-YOUR-DOCUMENTATION&amp;gt;&lt;/code&gt; 를 교체해야합니다 . -문서&amp;gt; 그에 따라)</target>
        </trans-unit>
        <trans-unit id="cfde5b2b26cf2f3741b4c99bebb53f1b2141add6" translate="yes" xml:space="preserve">
          <source>One can also create strings with specific byte value in them by using octal and hexadecimal escape sequences:</source>
          <target state="translated">8 진수 및 16 진수 이스케이프 시퀀스를 사용하여 특정 바이트 값을 가진 문자열을 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f1bec126e1bd25efa7273e76abc856ea7b4a80f" translate="yes" xml:space="preserve">
          <source>One can assign any meaning to the operators, but it is advisable to stay within similar semantics to the generic operator meaning to avoid cryptic code that is confusing and behaves unexpectedly.</source>
          <target state="translated">연산자에 어떤 의미도 할당 할 수 있지만, 혼란스럽고 예기치 않게 동작하는 암호 코드를 피하기 위해 일반 연산자 의미와 유사한 의미를 유지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c9f24a94ef6219d1fd7571b6118b65e59e01d85e" translate="yes" xml:space="preserve">
          <source>One can assign any meaning to the operators, but the convention is to follow the above ones to avoid cryptic code, or code that behaves in an unexpected way.</source>
          <target state="translated">연산자에 의미를 부여 할 수 있지만, 규칙은 암호 코드 또는 예기치 않은 방식으로 동작하는 코드를 피하기 위해 위의 코드를 따르는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f57b2379eb4fad27c1b88660f5a8d29c49972eed" translate="yes" xml:space="preserve">
          <source>One curly brace can contain multiple unicode characters each separated by a whitespace.</source>
          <target state="translated">하나의 중괄호에는 공백으로 구분 된 여러 개의 유니 코드 문자가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4211d9850c8af3d4426acdf674731ad3f9d754b" translate="yes" xml:space="preserve">
          <source>One of the best optimizations you can do in a program is avoiding extra/useless memory allocation. A memory allocation happens when you create an instance of a &lt;strong&gt;class&lt;/strong&gt;, which ends up allocating heap memory. Creating an instance of a &lt;strong&gt;struct&lt;/strong&gt; uses stack memory and doesn't incur a performance penalty. If you don't know the difference between stack and heap memory, be sure to &lt;a href=&quot;https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap&quot;&gt;read this&lt;/a&gt;.</source>
          <target state="translated">프로그램에서 수행 할 수있는 최상의 최적화 중 하나는 추가 / 무용 한 메모리 할당을 피하는 것입니다. 메모리 할당은 &lt;strong&gt;클래스&lt;/strong&gt; 의 인스턴스를 만들 때 발생하며 , 이로 인해 힙 메모리가 할당됩니다. &lt;strong&gt;구조체&lt;/strong&gt; 의 인스턴스를 만들면 스택 메모리가 사용되며 성능 저하가 발생하지 않습니다. 스택과 힙 메모리의 차이점을 모르는 &lt;a href=&quot;https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap&quot;&gt;경우이 내용&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="3ad6532910834aaeecbf629ea94ad3368d71e544" translate="yes" xml:space="preserve">
          <source>One of the methods implemented in this module is &lt;code&gt;DB#connect&lt;/code&gt;. Using this method is the &lt;strong&gt;first way&lt;/strong&gt; for creating a connection. Let's see how to use it.</source>
          <target state="translated">이 모듈에서 구현 된 메소드 중 하나는 &lt;code&gt;DB#connect&lt;/code&gt; 입니다. 이 방법을 사용 하는 것이 연결을 만드는 &lt;strong&gt;첫 번째 방법&lt;/strong&gt; 입니다. 그것을 사용하는 방법을 봅시다.</target>
        </trans-unit>
        <trans-unit id="a6b7502cd677f4a309b14d08e7eb7b580cc9c86a" translate="yes" xml:space="preserve">
          <source>One place inheritance can get a little tricky is with arrays. We have to be careful when declaring an array of objects where inheritance is used. For example, consider the following</source>
          <target state="translated">상속이 조금 까다로울 수있는 곳은 배열입니다. 상속이 사용되는 객체 배열을 선언 할 때는주의해야합니다. 예를 들어, 다음을 고려하십시오</target>
        </trans-unit>
        <trans-unit id="f81f80fee140429bd28804d8f52b636cdcffed34" translate="yes" xml:space="preserve">
          <source>One place this might trip you up is when automatic casting comes into play. For example, the following won't work:</source>
          <target state="translated">이 문제가 발생할 수있는 한 곳은 자동 주조가 시작될 때입니다. 예를 들어 다음은 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f280a161ef738766dda3d8b228e872a24a18df3" translate="yes" xml:space="preserve">
          <source>One way to solve it is to do a &lt;code&gt;sleep&lt;/code&gt;:</source>
          <target state="translated">그것을 해결하는 한 가지 방법은 &lt;code&gt;sleep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63942ba63f83588f8ac5019911a1fb270e41f0c5" translate="yes" xml:space="preserve">
          <source>One-shot usage</source>
          <target state="translated">원샷 사용법</target>
        </trans-unit>
        <trans-unit id="e93824c8b8bc3d3dd9f36c17922cc9f035f9405e" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;Exception&lt;/code&gt; instances or subclasses can be raised.</source>
          <target state="translated">&lt;code&gt;Exception&lt;/code&gt; 인스턴스 또는 서브 클래스 만 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="038563582bca4194737ab19fac07bdd784e40f89" translate="yes" xml:space="preserve">
          <source>Only available on UNIX and UNIX-like operating systems.</source>
          <target state="translated">UNIX 및 UNIX 유사 운영 체제에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8e76a4d589aa79313e68736c99d020baecc1be77" translate="yes" xml:space="preserve">
          <source>Only collections of numbers (objects that can be added via an &lt;code&gt;+&lt;/code&gt; method) are supported.</source>
          <target state="translated">숫자 모음 ( &lt;code&gt;+&lt;/code&gt; 방법을 통해 추가 할 수있는 개체 ) 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="598f2d99db84620f99e2263f089ec39cc9af1b1d" translate="yes" xml:space="preserve">
          <source>Only collections of numbers (objects that can be multiplied via a &lt;code&gt;*&lt;/code&gt; method) are supported.</source>
          <target state="translated">숫자 모음 ( &lt;code&gt;*&lt;/code&gt; 메서드 를 통해 곱할 수있는 개체 ) 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="54b85a2f5fded7aeafa3425b9eda52e6f13a9ea4" translate="yes" xml:space="preserve">
          <source>Only integer types are allowed as the underlying type.</source>
          <target state="translated">기본 유형으로 정수 유형 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c2c2a7fdc519cedaff3c0680d65bc1eb94133d18" translate="yes" xml:space="preserve">
          <source>Only primitive integer types, reference types or nilable reference types can be used with an Atomic type.</source>
          <target state="translated">원자 유형에는 기본 정수 유형, 참조 유형 또는 Nullable 참조 유형 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d1581aa9392ab7e5c23436135ae4ef0d2266b19" translate="yes" xml:space="preserve">
          <source>Only transform ASCII characters.</source>
          <target state="translated">ASCII 문자 만 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="d890514bcd8588b08f0f7bf7e26d060997b86f5b" translate="yes" xml:space="preserve">
          <source>Only works for primitive integers and floats (&lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt;, etc.)</source>
          <target state="translated">기본 정수 및 부동 소수점 ( &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; 등) 에서만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7051b80d22d655edbef7d6f97802bad6b9a981a2" translate="yes" xml:space="preserve">
          <source>Open database</source>
          <target state="translated">데이터베이스 열기</target>
        </trans-unit>
        <trans-unit id="ed7003a34fd1abbae7d2b35e80a0769db2b14709" translate="yes" xml:space="preserve">
          <source>OpenSSL</source>
          <target state="translated">OpenSSL</target>
        </trans-unit>
        <trans-unit id="35b366a2a3d0445fcc6195c7e8bf9aa2ec87d29a" translate="yes" xml:space="preserve">
          <source>OpenSSL 0.9.8</source>
          <target state="translated">OpenSSL 0.9.8</target>
        </trans-unit>
        <trans-unit id="b1948a8835e811d7bb8fe3dc8f03cdae689640cb" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.0.1</source>
          <target state="translated">OpenSSL 1.0.1</target>
        </trans-unit>
        <trans-unit id="d3c6ce40f6dd891b1898209548f158bde2dc23bc" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.1</source>
          <target state="translated">OpenSSL 1.1.1</target>
        </trans-unit>
        <trans-unit id="2ab0eab8e9a3414ae8cc24df9c72655ea9e031a7" translate="yes" xml:space="preserve">
          <source>OpenSSL Integration</source>
          <target state="translated">OpenSSL 통합</target>
        </trans-unit>
        <trans-unit id="9ffa3f50427585d801248b6026c59192f0be1ce6" translate="yes" xml:space="preserve">
          <source>OpenSSL::Cipher</source>
          <target state="translated">OpenSSL::Cipher</target>
        </trans-unit>
        <trans-unit id="71da789dfdc7daa2e1675b661f8ca076a9ac8ca1" translate="yes" xml:space="preserve">
          <source>OpenSSL::Cipher::Error</source>
          <target state="translated">OpenSSL::Cipher::Error</target>
        </trans-unit>
        <trans-unit id="0cb4fc3c82441102040f411cdcb0b981436e64fe" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest</source>
          <target state="translated">OpenSSL::Digest</target>
        </trans-unit>
        <trans-unit id="a2421f62739bf9762808971ba462377d3e76d431" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest::Error</source>
          <target state="translated">OpenSSL::Digest::Error</target>
        </trans-unit>
        <trans-unit id="6bb274633e50faaa8400d6736ed1f72ca8fc0a97" translate="yes" xml:space="preserve">
          <source>OpenSSL::Digest::UnsupportedError</source>
          <target state="translated">OpenSSL::Digest::UnsupportedError</target>
        </trans-unit>
        <trans-unit id="b74b8a050f17b3e603f6ad1925e752f42f067d6a" translate="yes" xml:space="preserve">
          <source>OpenSSL::DigestBase</source>
          <target state="translated">OpenSSL::DigestBase</target>
        </trans-unit>
        <trans-unit id="7ceb01a2bdbf24ca0d833a18d598753601012942" translate="yes" xml:space="preserve">
          <source>OpenSSL::DigestIO</source>
          <target state="translated">OpenSSL::DigestIO</target>
        </trans-unit>
        <trans-unit id="50762946efe359f8272a6ed5931a8e504734d29c" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error</source>
          <target state="translated">OpenSSL::Error</target>
        </trans-unit>
        <trans-unit id="72f3924f8d108e64cbd7b5e07610a5b2f516382d" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error#code</source>
          <target state="translated">OpenSSL::Error#code</target>
        </trans-unit>
        <trans-unit id="9ccd0da6539bfb2081cb7f141d4a76baff4a3f4b" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error#code?</source>
          <target state="translated">OpenSSL::Error#code?</target>
        </trans-unit>
        <trans-unit id="d4da5c9b02011196ad8f1f28a397406b7616b94d" translate="yes" xml:space="preserve">
          <source>OpenSSL::Error.new</source>
          <target state="translated">OpenSSL::Error.new</target>
        </trans-unit>
        <trans-unit id="373ec72cffa1cd896dec0e5f2bf736f258deb21e" translate="yes" xml:space="preserve">
          <source>OpenSSL::HMAC</source>
          <target state="translated">OpenSSL::HMAC</target>
        </trans-unit>
        <trans-unit id="df94a3a5229cdd070a2e0f2c047dd31e6ddf47ac" translate="yes" xml:space="preserve">
          <source>OpenSSL::MD5</source>
          <target state="translated">OpenSSL::MD5</target>
        </trans-unit>
        <trans-unit id="86875d14d1e01f3c7f1c9603d0f35b14ae6f8dc0" translate="yes" xml:space="preserve">
          <source>OpenSSL::PKCS5</source>
          <target state="translated">OpenSSL::PKCS5</target>
        </trans-unit>
        <trans-unit id="896ea59ba0d9c12c973db4b96634d337d414d940" translate="yes" xml:space="preserve">
          <source>OpenSSL::SHA1</source>
          <target state="translated">OpenSSL::SHA1</target>
        </trans-unit>
        <trans-unit id="fb811faeef41baf244804a56d35e133c533ab860" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL</source>
          <target state="translated">OpenSSL::SSL</target>
        </trans-unit>
        <trans-unit id="ec3665e85695060a943a8abc9a2bb9643aba8839" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context</source>
          <target state="translated">OpenSSL::SSL::Context</target>
        </trans-unit>
        <trans-unit id="232b98343697a329b86820f5a6fb24de61815e48" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context::Client</source>
          <target state="translated">OpenSSL::SSL::Context::Client</target>
        </trans-unit>
        <trans-unit id="ad3f97c6c30ead8cd460aac4a17452af8a138c0e" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Context::Server</source>
          <target state="translated">OpenSSL::SSL::Context::Server</target>
        </trans-unit>
        <trans-unit id="ed15213abf2b4ee65c4ebfce0336f6425bd9762d" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error</source>
          <target state="translated">OpenSSL::SSL::Error</target>
        </trans-unit>
        <trans-unit id="2197e923a2ee6f1b90bc655b0468c761aa73e507" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error#error</source>
          <target state="translated">OpenSSL::SSL::Error#error</target>
        </trans-unit>
        <trans-unit id="bd1cd1e9458e6d08aa7c0091d10292d293e3bf14" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error#underlying_eof?</source>
          <target state="translated">OpenSSL::SSL::Error#underlying_eof?</target>
        </trans-unit>
        <trans-unit id="ebd19fc9dc26d826f8eca10aa6b80c162de4ee4c" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Error.new</source>
          <target state="translated">OpenSSL::SSL::Error.new</target>
        </trans-unit>
        <trans-unit id="8363239b7df2c0cbe15d2e48efe3d7c741af8185" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Server</source>
          <target state="translated">OpenSSL::SSL::Server</target>
        </trans-unit>
        <trans-unit id="a764af7f9ee1c1215570b8ad95c647bcf5fbb60a" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket</source>
          <target state="translated">OpenSSL::SSL::Socket</target>
        </trans-unit>
        <trans-unit id="49532e2f4f8668e7802d24fa0c878c4b9a61e057" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket::Client</source>
          <target state="translated">OpenSSL::SSL::Socket::Client</target>
        </trans-unit>
        <trans-unit id="22a72dc30f3ed8ca4fd164f53ab80bf86d0e7078" translate="yes" xml:space="preserve">
          <source>OpenSSL::SSL::Socket::Server</source>
          <target state="translated">OpenSSL::SSL::Socket::Server</target>
        </trans-unit>
        <trans-unit id="1546e1068630b5411f9ffaaabc12cdf957d7b30c" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;filename&lt;/em&gt;, yields it to the given block, and closes it at the end.</source>
          <target state="translated">엽니 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 주어진에서 읽기 위해 &lt;em&gt;파일 이름&lt;/em&gt; , 주어진 블록을 산출하고, 말을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="16a0fda414a2d21471def5f8df15b91f45d81c51" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;filename&lt;/em&gt; 에서 읽을 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 을 엽니 다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52512345b08986612149b7ab7064b1a22de05c54" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;io&lt;/em&gt;, yields it to the given block, and closes it at the end.</source>
          <target state="translated">엽니 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 주어진에서 읽기위한 &lt;em&gt;IO&lt;/em&gt; 수익률을, 지정된 블록에, 그리고 말을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="a0ae274b34e2231176d14a5f25f2b103c92361d5" translate="yes" xml:space="preserve">
          <source>Opens a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; for reading from the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io&lt;/em&gt; 에서 읽을 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;Zip::File&lt;/a&gt;&lt;/code&gt; 을 엽니 다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60bbc54ab6cf8dabf50b3fb6278c1288ad3acceb" translate="yes" xml:space="preserve">
          <source>Opens a TCP socket to a remote TCP server, yields it to the block, then eventually closes the socket when the block returns.</source>
          <target state="translated">원격 TCP 서버에 대한 TCP 소켓을 열고 블록으로 보낸 다음 블록이 반환되면 결국 소켓을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="d905cf0353d48eaf1721274999cd6d041bdd94e4" translate="yes" xml:space="preserve">
          <source>Opens a directory and yields it, closing it at the end of the block.</source>
          <target state="translated">디렉토리를 열고 블록의 끝에서 닫아서 생성합니다.</target>
        </trans-unit>
        <trans-unit id="56707ccf177bafa6b5176c257886e0d16f0f80d8" translate="yes" xml:space="preserve">
          <source>Opens a directory and yields it, closing it at the end of the block. Returns the value of the block.</source>
          <target state="translated">디렉토리를 열고 블록의 끝에서 닫아서 생성합니다. 블록의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e997a182ae5b0adc63476bc3526430253960f786" translate="yes" xml:space="preserve">
          <source>Opens a new websocket to the target host.</source>
          <target state="translated">대상 호스트에 새 웹 소켓을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="f6277f42289401fe712d708b0baaa449b222f4e5" translate="yes" xml:space="preserve">
          <source>Opens a new websocket to the target host. This will also handle the handshake and will raise an exception if the handshake did not complete successfully.</source>
          <target state="translated">대상 호스트에 새 웹 소켓을 엽니 다. 또한 핸드 셰이크를 처리하고 핸드 셰이크가 완료되지 않은 경우 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="55a1a71521e9a393f87958cb8254d4e7576c51d7" translate="yes" xml:space="preserve">
          <source>Opens a new websocket using the information provided by the URI.</source>
          <target state="translated">URI에서 제공 한 정보를 사용하여 새 웹 소켓을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="e8311e03dd6c32aad5d54e7ddc06ce09edb4ddc6" translate="yes" xml:space="preserve">
          <source>Opens a new websocket using the information provided by the URI. This will also handle the handshake and will raise an exception if the handshake did not complete successfully. This method will also raise an exception if the URI is missing the host and/or the path.</source>
          <target state="translated">URI에서 제공 한 정보를 사용하여 새 웹 소켓을 엽니 다. 또한 핸드 셰이크를 처리하고 핸드 셰이크가 완료되지 않은 경우 예외를 발생시킵니다. 이 방법은 URI에 호스트 및 / 또는 경로가없는 경우 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2dcf80ed39d3208350e9412b387a2b789f75c72f" translate="yes" xml:space="preserve">
          <source>Opens an UNIX socket to a filesystem pathname, yields it to the block, then eventually closes the socket when the block returns.</source>
          <target state="translated">파일 시스템 경로 이름에 대한 UNIX 소켓을 열고 블록에 생성 한 다음 블록이 리턴되면 소켓을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="dad0607a61d573b1a48f862174503d87ce54326a" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 이라는 파일을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="f215aefd6f8c039151b5a1ed0ec64dc908a10438" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;. If a file is being created, its initial permissions may be set using the &lt;em&gt;perm&lt;/em&gt; parameter.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 이라는 파일을 엽니 다 . 파일을 작성하는 경우 &lt;em&gt;perm&lt;/em&gt; 매개 변수를 사용하여 초기 권한을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4f6ef1ba388097b3b4316cd983d2191b697ca00" translate="yes" xml:space="preserve">
          <source>Opens the file named by &lt;em&gt;filename&lt;/em&gt;. If a file is being created, its initial permissions may be set using the &lt;em&gt;perm&lt;/em&gt; parameter. Then given block will be passed the opened file as an argument, the file will be automatically closed when the block returns.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt; 이라는 파일을 엽니 다 . 파일을 작성하는 경우 &lt;em&gt;perm&lt;/em&gt; 매개 변수를 사용하여 초기 권한을 설정할 수 있습니다 . 그런 다음 주어진 블록은 열린 파일을 인수로 전달하고 블록이 반환되면 파일이 자동으로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="0c1668ac138ae92ffacd3116296d3548db776f14" translate="yes" xml:space="preserve">
          <source>Opera 20</source>
          <target state="translated">오페라 20</target>
        </trans-unit>
        <trans-unit id="41b0fc59d7aad8bc81ae95e641aa3418061b2802" translate="yes" xml:space="preserve">
          <source>Opera 5</source>
          <target state="translated">오페라 5</target>
        </trans-unit>
        <trans-unit id="fad0a017eb9f00073f41816df228a99ee3a83534" translate="yes" xml:space="preserve">
          <source>Opera 57</source>
          <target state="translated">오페라 57</target>
        </trans-unit>
        <trans-unit id="cadca8091d4e123a8758e7e5ae05f2c10df1424d" translate="yes" xml:space="preserve">
          <source>OperandBundleDef</source>
          <target state="translated">OperandBundleDef</target>
        </trans-unit>
        <trans-unit id="879e5fd682673ad57da320a833f4a329427704a9" translate="yes" xml:space="preserve">
          <source>OperandBundleDef#to_unsafe</source>
          <target state="translated">OperandBundleDef#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d75c9b2ebb39228a3902a5c9c77461f23eee7538" translate="yes" xml:space="preserve">
          <source>OperandBundleDef.new</source>
          <target state="translated">OperandBundleDef.new</target>
        </trans-unit>
        <trans-unit id="81af3b19a22306c68182c75bcd2feb4c8391e3d9" translate="yes" xml:space="preserve">
          <source>OperandBundleDef.null</source>
          <target state="translated">OperandBundleDef.null</target>
        </trans-unit>
        <trans-unit id="0fc51a5c314382c855158eda38ff5409a7e69535" translate="yes" xml:space="preserve">
          <source>Operation already in progress</source>
          <target state="translated">이미 진행중인 작업</target>
        </trans-unit>
        <trans-unit id="a2dad54d8bce08503c34abc283c6fe74bd2e9ffc" translate="yes" xml:space="preserve">
          <source>Operation canceled</source>
          <target state="translated">작업 취소</target>
        </trans-unit>
        <trans-unit id="25ef925607b43bca64c3829868d9989b76540d3a" translate="yes" xml:space="preserve">
          <source>Operation not permitted</source>
          <target state="translated">작동이 허용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="b20622c82be5480df90f7091e7835cb1fe2a3c88" translate="yes" xml:space="preserve">
          <source>Operation not supported by device</source>
          <target state="translated">장치가 지원하지 않는 작업</target>
        </trans-unit>
        <trans-unit id="c49e2a256113761881fb1a1fa41d066e27d70d15" translate="yes" xml:space="preserve">
          <source>Operation not supported on socket</source>
          <target state="translated">소켓에서 지원되지 않는 작업</target>
        </trans-unit>
        <trans-unit id="8fdc938d87d0b18a567701392c335d0c883fa4b7" translate="yes" xml:space="preserve">
          <source>Operation now in progress</source>
          <target state="translated">현재 진행중인 작업</target>
        </trans-unit>
        <trans-unit id="59da8b3d4f03013f0b1c074c21c160a523b2efbd" translate="yes" xml:space="preserve">
          <source>Operation timed out</source>
          <target state="translated">작업 시간이 초과되었습니다</target>
        </trans-unit>
        <trans-unit id="db648ff618df972b87b0f378a6996fcda48575ee" translate="yes" xml:space="preserve">
          <source>Operation would block</source>
          <target state="translated">작업 차단</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="5ab53f8310f5b3d7c33f42f382419ed45034e50e" translate="yes" xml:space="preserve">
          <source>Operator Precedence</source>
          <target state="translated">운영자 우선 순위</target>
        </trans-unit>
        <trans-unit id="7eacb7afc0baf3209fb98e725e611af029e601ea" translate="yes" xml:space="preserve">
          <source>Operator expressions are actually parsed as method calls. For example &lt;code&gt;a + b&lt;/code&gt; is semantically equivalent to &lt;code&gt;a.+(b)&lt;/code&gt;, a call to method &lt;code&gt;+&lt;/code&gt; on &lt;code&gt;a&lt;/code&gt; with argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">연산자 식은 실제로 메서드 호출로 구문 분석됩니다. 예를 들어 &lt;code&gt;a + b&lt;/code&gt; 는 &lt;code&gt;a.+(b)&lt;/code&gt; , 인수 &lt;code&gt;b&lt;/code&gt; 를 사용 하여 a 에 &lt;code&gt;a&lt;/code&gt; 메서드 &lt;code&gt;+&lt;/code&gt; 호출 과 의미 상 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="ca40c32c1edab9fd3598b9bdc08da8b555fbd120" translate="yes" xml:space="preserve">
          <source>Operators are implemented like any regular method, and the standard library offers many implementations, for example for math expressions.</source>
          <target state="translated">연산자는 일반 방법과 같이 구현되며 표준 라이브러리는 수학 표현식과 같은 다양한 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1247fa3ac596bbd9dede3183f9cc7c84cde283bf" translate="yes" xml:space="preserve">
          <source>Operators can be invoked too:</source>
          <target state="translated">운영자도 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1fc1801fbce2784e2849c10e00fbcdd34ca3424" translate="yes" xml:space="preserve">
          <source>Operators like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; are regular method calls. For example:</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;-&lt;/code&gt; 와 같은 연산자 는 일반적인 메소드 호출입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca9dd2f2f06508a1a833069661fb237a05a6e393" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;Enumerable#map&lt;/a&gt;&lt;/code&gt; 의 최적화 된 버전 .</target>
        </trans-unit>
        <trans-unit id="6a4c0f76019362d5870d19d18d9fcfce735e91ce" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt; 의 최적화 된 버전 .</target>
        </trans-unit>
        <trans-unit id="ed7d4a2930966027b63467087844c9531a8fe5ea" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;Enumerable#map_with_index&lt;/a&gt;&lt;/code&gt; 의 최적화 된 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="ac552785e4ab9905b79061cbe0b75a860bc1e56b" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; used when &lt;code&gt;other&lt;/code&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; 최적화 된 버전 ? &lt;code&gt;other&lt;/code&gt; 도 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="95e33ab051ff71d8ef58933af6611287bc1203b9" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; used when &lt;code&gt;other&lt;/code&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable#equals?(other:Indexable,&amp;amp;block)-instance-method&quot;&gt;#equals?&lt;/a&gt;&lt;/code&gt; 최적화 된 버전 ? &lt;code&gt;other&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="641ac8a8c177d4d16c766cbd69ea117790641772" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;&lt;a href=&quot;set#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; used when &lt;em&gt;other&lt;/em&gt; is also an &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;other&lt;/em&gt; 도 &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;&lt;/code&gt; 경우에 사용되는 최적화 된 &lt;code&gt;&lt;a href=&quot;set#new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 버전&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a90b9b30e5d679654838a5621aafaa41f1f88d86" translate="yes" xml:space="preserve">
          <source>Optimized version of &lt;code&gt;Enumerable#join&lt;/code&gt; that performs better when all of the elements in this indexable are strings: the total string bytesize to return can be computed before creating the final string, which performs better because there's no need to do reallocations.</source>
          <target state="translated">이 인덱서 블의 모든 요소가 문자열 인 경우 더 나은 성능을 발휘하는 최적화 된 &lt;code&gt;Enumerable#join&lt;/code&gt; 버전 : 최종 문자열을 만들기 전에 반환 할 총 문자열 바이트 화를 계산할 수 있습니다. 이는 재 할당 할 필요가 없기 때문에 더 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="40dbe8ccfe714d9a944d448d1c3b1b3c2bfff946" translate="yes" xml:space="preserve">
          <source>Optimizing</source>
          <target state="translated">Optimizing</target>
        </trans-unit>
        <trans-unit id="9c404768d955448d9b6f90547eff35b8e6696cf8" translate="yes" xml:space="preserve">
          <source>OptionParser</source>
          <target state="translated">OptionParser</target>
        </trans-unit>
        <trans-unit id="ce9528e3e38e6c3b9d7f601d180c3733ce8ffa97" translate="yes" xml:space="preserve">
          <source>OptionParser#on</source>
          <target state="translated">OptionParser#on</target>
        </trans-unit>
        <trans-unit id="4c5595c4f9644144e22c47527ee218aa39646665" translate="yes" xml:space="preserve">
          <source>OptionParser#stop</source>
          <target state="translated">OptionParser#stop</target>
        </trans-unit>
        <trans-unit id="8a1a8c5af20bcb7d109bc79028ab7166687c727d" translate="yes" xml:space="preserve">
          <source>OptionParser#to_s</source>
          <target state="translated">OptionParser#to_s</target>
        </trans-unit>
        <trans-unit id="20081927571e1bd5393c924a62c8507391676a33" translate="yes" xml:space="preserve">
          <source>OptionParser.new</source>
          <target state="translated">OptionParser.new</target>
        </trans-unit>
        <trans-unit id="579bd1b8c1b458e1807d4863cb5dc61c28a04253" translate="yes" xml:space="preserve">
          <source>OptionParser::Exception</source>
          <target state="translated">OptionParser::Exception</target>
        </trans-unit>
        <trans-unit id="e76fa734dd2ff466ac7558a1c665b2df21d2725e" translate="yes" xml:space="preserve">
          <source>OptionParser::InvalidOption</source>
          <target state="translated">OptionParser::InvalidOption</target>
        </trans-unit>
        <trans-unit id="61913d6fd69063d2647bb8f35d716b5c2244bfe5" translate="yes" xml:space="preserve">
          <source>OptionParser::InvalidOption.new</source>
          <target state="translated">OptionParser::InvalidOption.new</target>
        </trans-unit>
        <trans-unit id="0f0ff85139c0a525e411680134bbb85a42e2f4c0" translate="yes" xml:space="preserve">
          <source>OptionParser::MissingOption</source>
          <target state="translated">OptionParser::MissingOption</target>
        </trans-unit>
        <trans-unit id="7cdbcc6af01bccd6a48694ea08c8ae04d12181c4" translate="yes" xml:space="preserve">
          <source>OptionParser::MissingOption.new</source>
          <target state="translated">OptionParser::MissingOption.new</target>
        </trans-unit>
        <trans-unit id="7f50cfb22adece301dfd4a908d5cb575dd688121" translate="yes" xml:space="preserve">
          <source>Optionally takes a radix base (2 through 36).</source>
          <target state="translated">선택적으로 기수베이스 (2-36)를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="d6bef2abfc17b3b18e4a741c93502630af56b0a2" translate="yes" xml:space="preserve">
          <source>Options#anchored?</source>
          <target state="translated">Options#anchored?</target>
        </trans-unit>
        <trans-unit id="e5f01f8288e7b65eb3d060cb5be26023b50b5829" translate="yes" xml:space="preserve">
          <source>Options#dupnames?</source>
          <target state="translated">Options#dupnames?</target>
        </trans-unit>
        <trans-unit id="0ca941a6cade5d2f34847396c519d6f62afcc7c9" translate="yes" xml:space="preserve">
          <source>Options#extended?</source>
          <target state="translated">Options#extended?</target>
        </trans-unit>
        <trans-unit id="151e72b3291e3aec698cc8b7bbe7283955494d4e" translate="yes" xml:space="preserve">
          <source>Options#ignore_case?</source>
          <target state="translated">Options#ignore_case?</target>
        </trans-unit>
        <trans-unit id="01861f9149108eb7f4abeaa249a24446b3acd626" translate="yes" xml:space="preserve">
          <source>Options#multiline?</source>
          <target state="translated">Options#multiline?</target>
        </trans-unit>
        <trans-unit id="ad804d221db75eee7ed0ed594be446f47a1fb91a" translate="yes" xml:space="preserve">
          <source>Options#no_utf8_check?</source>
          <target state="translated">Options#no_utf8_check?</target>
        </trans-unit>
        <trans-unit id="1fbcfe77aaf91945ce5b8c5ced56cf71ed3793c3" translate="yes" xml:space="preserve">
          <source>Options#none?</source>
          <target state="translated">Options#none?</target>
        </trans-unit>
        <trans-unit id="2906eec841f789e63c79b28ee93631754f10fcaf" translate="yes" xml:space="preserve">
          <source>Options#utf_8?</source>
          <target state="translated">Options#utf_8?</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="81d0a647180d7e504f891d8044c9f9820b909f37" translate="yes" xml:space="preserve">
          <source>Or an 8-bit color:</source>
          <target state="translated">또는 8 비트 색상 :</target>
        </trans-unit>
        <trans-unit id="77ea73487b27dff92efa4e964325478eb4c7a133" translate="yes" xml:space="preserve">
          <source>Or like:</source>
          <target state="translated">또는 같은 :</target>
        </trans-unit>
        <trans-unit id="00bca5f80bf6494d39945a6d4a0ae51017fb18a7" translate="yes" xml:space="preserve">
          <source>Or read a scalar value without dealing explicitly with the ResultSet:</source>
          <target state="translated">또는 ResultSet을 명시 적으로 다루지 않고 스칼라 값을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="c1681dab2291b1817819335e642390c01e9d7e4b" translate="yes" xml:space="preserve">
          <source>Or read a single row:</source>
          <target state="translated">또는 단일 행을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="50fb7f648a3a962ff7f5a3488aa2e336f4eb5cd5" translate="yes" xml:space="preserve">
          <source>Or treat the bytes of a &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; as an &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">또는 &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; 의 바이트를 &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 로 취급하십시오 .</target>
        </trans-unit>
        <trans-unit id="62dec1df796405cf4f91ae0617fa9c0020105561" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;loop&lt;/code&gt;, found in the standard library:</source>
          <target state="translated">또는 표준 라이브러리에있는 &lt;code&gt;loop&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="14372ee8f481a95aad2012587951e64d0d7bd45d" translate="yes" xml:space="preserve">
          <source>Or with a proc returned from a method:</source>
          <target state="translated">또는 메소드에서 proc이 리턴되면</target>
        </trans-unit>
        <trans-unit id="93e5aad9de2d1e96409f5634609f22d25becd93c" translate="yes" xml:space="preserve">
          <source>Or you can use curly braces and specify up to four hexadecimal numbers:</source>
          <target state="translated">또는 중괄호를 사용하고 최대 4 개의 16 진수를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3e02ea62b2c955c1d273df676545ea3817ce05e" translate="yes" xml:space="preserve">
          <source>Or you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):</source>
          <target state="translated">또는 중괄호를 사용하고 최대 6 개의 16 진수 (0-10FFFF)를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="755683a1193430355ffb119767d43c0af66166b8" translate="yes" xml:space="preserve">
          <source>Or, combining the &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;-&amp;gt;&lt;/code&gt; syntaxes:</source>
          <target state="translated">또는 &lt;code&gt;&amp;amp;&lt;/code&gt; 및 &lt;code&gt;-&amp;gt;&lt;/code&gt; 구문을 결합하여</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="9e222308b780c5ed8c85ca43d0327ff3224d6b97" translate="yes" xml:space="preserve">
          <source>Orbs define reusable commands, executors, and jobs so that commonly used pieces of configuration can be condensed into a single line of code.</source>
          <target state="translated">Orbs는 재사용 가능한 명령, 실행기 및 작업을 정의하므로 일반적으로 사용되는 구성 부분을 한 줄의 코드로 압축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8acff31cba5cd69ee51a9a30baa8ae37c702f440" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;alias&lt;/code&gt; declared previously.</source>
          <target state="translated">이전에 선언 된 다른 &lt;code&gt;struct&lt;/code&gt; , &lt;code&gt;union&lt;/code&gt; , &lt;code&gt;enum&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; 또는 &lt;code&gt;alias&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12d9251b938d0b3641433eb8c6518d307585d08c" translate="yes" xml:space="preserve">
          <source>Other connection uris are</source>
          <target state="translated">다른 연결 uris는</target>
        </trans-unit>
        <trans-unit id="e9b9ac89e0cd15f947fad4a1362ea682e23b5d72" translate="yes" xml:space="preserve">
          <source>Other forms</source>
          <target state="translated">다른 형태</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
