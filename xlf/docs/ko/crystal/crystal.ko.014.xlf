<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="e7dd92edff7a5d1ac2ecf140c165bf54ef5443f9" translate="yes" xml:space="preserve">
          <source>Emits the end of an attribute.</source>
          <target state="translated">속성의 끝을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a2e43b62d629f8f55be559d60d045a3009071abd" translate="yes" xml:space="preserve">
          <source>Emits the end of an element.</source>
          <target state="translated">요소의 끝을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0c60446eadd27e9b1957ad358c080756626d9a2e" translate="yes" xml:space="preserve">
          <source>Emits the given &lt;em&gt;attributes&lt;/em&gt; with their values.</source>
          <target state="translated">주어진 &lt;em&gt;속성&lt;/em&gt; 을 값으로 방출 합니다.</target>
        </trans-unit>
        <trans-unit id="0ae0981b318db95d72591afd082b65482c6f12fe" translate="yes" xml:space="preserve">
          <source>Emits the scalar &lt;code&gt;&quot;&amp;lt; followed by an alias to the given &lt;em&gt;anchor&lt;/em&gt;.&lt;/code&gt;</source>
          <target state="translated">스칼라 &lt;code&gt;&quot;&amp;lt; followed by an alias to the given &lt;em&gt;anchor&lt;/em&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1150d428b72213506da03ddcb403092e25a92ca4" translate="yes" xml:space="preserve">
          <source>Emits the start of a &lt;code&gt;CDATA&lt;/code&gt; section, invokes the block and then emits the end of the &lt;code&gt;CDATA&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;CDATA&lt;/code&gt; 섹션 의 시작을 내보내고 블록을 호출 한 다음 &lt;code&gt;CDATA&lt;/code&gt; 의 끝을 내 보냅니다. 섹션 .</target>
        </trans-unit>
        <trans-unit id="0d36036c163df1a99777dc29bc017ba25e01ebbc" translate="yes" xml:space="preserve">
          <source>Emits the start of a &lt;code&gt;CDATA&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;CDATA&lt;/code&gt; 섹션 의 시작을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="695b67f496583c42b8c523ac068b78cf4e21bf3b" translate="yes" xml:space="preserve">
          <source>Emits the start of a &lt;code&gt;DTD&lt;/code&gt;, invokes the block and then emits the end of the &lt;code&gt;DTD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DTD&lt;/code&gt; 의 시작을 내보내고 블록을 호출 한 다음 &lt;code&gt;DTD&lt;/code&gt; 의 끝을 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="0f0e3b93b21fd78a52f841d4994a07f3229aef4d" translate="yes" xml:space="preserve">
          <source>Emits the start of a &lt;code&gt;DTD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DTD&lt;/code&gt; 의 시작을 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="21088e18890b1ef517edac1af293b0d6ff505508" translate="yes" xml:space="preserve">
          <source>Emits the start of a comment, invokes the block and then emits the end of the comment.</source>
          <target state="translated">주석의 시작을 내고 블록을 호출 한 다음 주석의 끝을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="e43496c5f398ea9fe6ff5fd9d2399735b58f0211" translate="yes" xml:space="preserve">
          <source>Emits the start of a comment.</source>
          <target state="translated">주석의 시작을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="950c2680a5dadf9917b91c4ac8bdf0cf7d6bf9ff" translate="yes" xml:space="preserve">
          <source>Emits the start of an attribute with namespace info.</source>
          <target state="translated">네임 스페이스 정보가있는 속성의 시작을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="68fbd8cd351824caeb7fd65d4842707503dac687" translate="yes" xml:space="preserve">
          <source>Emits the start of an attribute, invokes the block, and then emits the end of the attribute.</source>
          <target state="translated">속성의 시작을 내고 블록을 호출 한 다음 속성의 끝을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="6ba2c79ffdb44081789582347293ac3b3400ba6c" translate="yes" xml:space="preserve">
          <source>Emits the start of an attribute.</source>
          <target state="translated">속성의 시작을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="08e7c687866bccb6df66eb9779e173d16a52e458" translate="yes" xml:space="preserve">
          <source>Emits the start of an element with namespace info with the given &lt;em&gt;attributes&lt;/em&gt;, invokes the block and then emits the end of the element.</source>
          <target state="translated">지정된 &lt;em&gt;속성을&lt;/em&gt; 가진 네임 스페이스 정보를 가진 요소의 시작을 생성 하고 블록을 호출 한 다음 요소의 끝을 방출합니다.</target>
        </trans-unit>
        <trans-unit id="e4d4233ad701835f01e61f45eb0c54c0691daca5" translate="yes" xml:space="preserve">
          <source>Emits the start of an element with namespace info.</source>
          <target state="translated">네임 스페이스 정보가있는 요소의 시작을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ef14c0f44bb6d702a5ca53bf935e651d20f57b53" translate="yes" xml:space="preserve">
          <source>Emits the start of an element with the given &lt;em&gt;attributes&lt;/em&gt;, invokes the block and then emits the end of the element.</source>
          <target state="translated">주어진 &lt;em&gt;속성으로&lt;/em&gt; 요소의 시작을 내고 블록을 호출 한 다음 요소의 끝을 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7a813fd4f6a10ec1e6dfe2e3c0d495b4597c9317" translate="yes" xml:space="preserve">
          <source>Emits the start of an element.</source>
          <target state="translated">요소의 시작을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="64270b29a96e03bb045ef1648005a7f4fb5cbfaf" translate="yes" xml:space="preserve">
          <source>Emits the start of the document, invokes the block, and then emits the end of the document.</source>
          <target state="translated">문서의 시작을 내고 블록을 호출 한 다음 문서의 끝을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="737f0ebe2fcc158e40d770d9d4b69e0a741564ea" translate="yes" xml:space="preserve">
          <source>Emits the start of the document.</source>
          <target state="translated">문서의 시작을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="caf2abd797290569bd7e384541665668e60eff25" translate="yes" xml:space="preserve">
          <source>Emitter</source>
          <target state="translated">Emitter</target>
        </trans-unit>
        <trans-unit id="a5907984fdaccfeb76de5a092911586370390fa8" translate="yes" xml:space="preserve">
          <source>Emitter#emit</source>
          <target state="translated">Emitter#emit</target>
        </trans-unit>
        <trans-unit id="8318ae1fe208f30051dbb776bdc5cd70d01c2622" translate="yes" xml:space="preserve">
          <source>Empties a &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; and returns it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; 비우고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0fb06f7e682fcb9f20b50dc9fe715ac27dad988b" translate="yes" xml:space="preserve">
          <source>Empty array literals always need a type specification:</source>
          <target state="translated">빈 배열 리터럴에는 항상 형식 사양이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="be5d0ebfd72a415a3e2fa58141337b5b12dd9fd0" translate="yes" xml:space="preserve">
          <source>Empty hash literals always need type specifications:</source>
          <target state="translated">빈 해시 리터럴에는 항상 형식 사양이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="cbaffaefe3ff1fb7558ce560c6aecabbd1772de3" translate="yes" xml:space="preserve">
          <source>Enables character processing for the duration of the given block.</source>
          <target state="translated">주어진 블록 동안 문자 처리를 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="4c1efd10bf3ae6f2ea8ba6db22f97fe5f9dc4d1a" translate="yes" xml:space="preserve">
          <source>Enables character processing for the duration of the given block. The so called cooked mode is the standard behavior of a terminal, doing line wise editing by the terminal and only sending the input to the program on a newline. Only call this when this IO is a TTY, such as a not redirected stdin.</source>
          <target state="translated">주어진 블록 동안 문자 처리를 가능하게합니다. 이른바 쿠킹 모드는 터미널의 표준 동작으로 터미널에서 행 단위로 편집하고 입력을 줄 바꿈으로 프로그램에 보내기 만합니다. 이 IO가 리디렉션되지 않은 stdin과 같은 TTY 인 경우에만 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="89afeae7ba6d962d01dee37c77cd85cb11a0f817" translate="yes" xml:space="preserve">
          <source>Enables character processing for this IO.</source>
          <target state="translated">이 IO에 대한 문자 처리를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="c3bef9edba9c738ce981ddd3c90ac6235eff3bc2" translate="yes" xml:space="preserve">
          <source>Enables character processing for this IO. The so called cooked mode is the standard behavior of a terminal, doing line wise editing by the terminal and only sending the input to the program on a newline. Only call this when this IO is a TTY, such as a not redirected stdin.</source>
          <target state="translated">이 IO에 대한 문자 처리를 활성화합니다. 이른바 쿠킹 모드는 터미널의 표준 동작으로 터미널에서 행 단위로 편집하고 입력을 줄 바꿈으로 프로그램에 보내기 만합니다. 이 IO가 리디렉션되지 않은 stdin과 같은 TTY 인 경우에만 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="5ea261e7c2c08a8aee5f2ab2ff87644f6a48ce8d" translate="yes" xml:space="preserve">
          <source>Enables raw mode for the duration of the given block.</source>
          <target state="translated">주어진 블록 동안 원시 모드를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="bcf373cf0ae6265d9fa2170da730f37b9590fe2d" translate="yes" xml:space="preserve">
          <source>Enables raw mode for the duration of the given block. In raw mode every keypress is directly sent to the program, no interpretation is done by the terminal. Only call this when this IO is a TTY, such as a not redirected stdin.</source>
          <target state="translated">주어진 블록 동안 원시 모드를 활성화합니다. 원시 모드에서는 모든 키 누르기가 프로그램으로 직접 전송되며 터미널에서 해석을 수행하지 않습니다. 이 IO가 리디렉션되지 않은 stdin과 같은 TTY 인 경우에만 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="5e04a294145d67e937a48fbe899446bca12736f7" translate="yes" xml:space="preserve">
          <source>Enables raw mode for this IO.</source>
          <target state="translated">이 IO에 원시 모드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9818a5501ab34cde09860de7027163a5277bc3d1" translate="yes" xml:space="preserve">
          <source>Enables raw mode for this IO. In raw mode every keypress is directly sent to the program, no interpretation is done by the terminal. Only call this when this IO is a TTY, such as a not redirected stdin.</source>
          <target state="translated">이 IO에 원시 모드를 사용합니다. 원시 모드에서는 모든 키 누르기가 프로그램으로 직접 전송되며 터미널에서 해석을 수행하지 않습니다. 이 IO가 리디렉션되지 않은 stdin과 같은 TTY 인 경우에만 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="f6987a815d39288ffeaea7aac606dbc4ac0635cb" translate="yes" xml:space="preserve">
          <source>Encode to IO</source>
          <target state="translated">IO로 인코딩</target>
        </trans-unit>
        <trans-unit id="c9992d5ce080f2851d3c1978f96dd59872094806" translate="yes" xml:space="preserve">
          <source>Encode to bytes</source>
          <target state="translated">바이트로 인코딩</target>
        </trans-unit>
        <trans-unit id="b9434b3ca705e503c43ad3dba76dc09894ef6344" translate="yes" xml:space="preserve">
          <source>Encodes a string to an &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#page-17&quot;&gt;RFC 2616&lt;/a&gt; quoted-string.</source>
          <target state="translated">문자열을 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#page-17&quot;&gt;RFC 2616&lt;/a&gt; 인용 문자열로 인코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="f29b22c8fcebff30350acc048e6675b2f4720730" translate="yes" xml:space="preserve">
          <source>Encodes a string to an &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#page-17&quot;&gt;RFC 2616&lt;/a&gt; quoted-string. Encoded string is written to &lt;em&gt;io&lt;/em&gt;. May raise when &lt;em&gt;string&lt;/em&gt; contains an invalid character.</source>
          <target state="translated">문자열을 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#page-17&quot;&gt;RFC 2616&lt;/a&gt; 인용 문자열로 인코딩 합니다. 인코딩 된 문자열은 &lt;em&gt;io에&lt;/em&gt; 기록됩니다 . 때 제기 할 수 &lt;em&gt;문자열이&lt;/em&gt; 유효하지 않은 문자가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4eb30be2cfb77f0399582f40f2d85adf6a5f4935" translate="yes" xml:space="preserve">
          <source>Encodes a string to an &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#page-17&quot;&gt;RFC 2616&lt;/a&gt; quoted-string. May raise when &lt;em&gt;string&lt;/em&gt; contains an invalid character.</source>
          <target state="translated">문자열을 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#page-17&quot;&gt;RFC 2616&lt;/a&gt; 인용 문자열로 인코딩 합니다. 때 제기 할 수 &lt;em&gt;문자열이&lt;/em&gt; 유효하지 않은 문자가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="246bd720537b824ad80d66ac9b8615d723652c21" translate="yes" xml:space="preserve">
          <source>EncodingOptions</source>
          <target state="translated">EncodingOptions</target>
        </trans-unit>
        <trans-unit id="2aa9754a85b009d4ec0179c9ed6058ab6e6cfc9e" translate="yes" xml:space="preserve">
          <source>EncodingOptions#invalid</source>
          <target state="translated">EncodingOptions#invalid</target>
        </trans-unit>
        <trans-unit id="aeba1f5da2009414738cf0ad34d3692ac32fa28e" translate="yes" xml:space="preserve">
          <source>EncodingOptions#name</source>
          <target state="translated">EncodingOptions#name</target>
        </trans-unit>
        <trans-unit id="389f03666b7170bcc0bd7e6650c0e40c4828d1fc" translate="yes" xml:space="preserve">
          <source>EncodingOptions.check_invalid</source>
          <target state="translated">EncodingOptions.check_invalid</target>
        </trans-unit>
        <trans-unit id="ac8b1fa70c62e209f2a3aae6c9d65f73ab1f8294" translate="yes" xml:space="preserve">
          <source>EncodingOptions.new</source>
          <target state="translated">EncodingOptions.new</target>
        </trans-unit>
        <trans-unit id="ad969bda5b208f9a3d7a4ca21edf61fd5759daf5" translate="yes" xml:space="preserve">
          <source>Ends a YAML stream.</source>
          <target state="translated">YAML 스트림을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="12abf2a36ed951c8405ef97fa8b5f67bf7cabfc9" translate="yes" xml:space="preserve">
          <source>Ends a document.</source>
          <target state="translated">문서를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="7cf571cc745e9e67de846d9f0d8ad9931867985b" translate="yes" xml:space="preserve">
          <source>Ends a mapping.</source>
          <target state="translated">매핑을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="707bd79eac61ab27398e83bc7683951ea7bbf8e1" translate="yes" xml:space="preserve">
          <source>Ends a sequence.</source>
          <target state="translated">시퀀스를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="15e6e7f38453a0d12c80aaddb2dbd38af53c732c" translate="yes" xml:space="preserve">
          <source>EntriesChecker</source>
          <target state="translated">EntriesChecker</target>
        </trans-unit>
        <trans-unit id="a2d7229c5644ca017dd073776fdc19e30bcdc6a9" translate="yes" xml:space="preserve">
          <source>EntriesChecker#check</source>
          <target state="translated">EntriesChecker#check</target>
        </trans-unit>
        <trans-unit id="4c8c5387966375bcd201bca5ff7bba1ee2c71b3a" translate="yes" xml:space="preserve">
          <source>EntriesChecker#clear</source>
          <target state="translated">EntriesChecker#clear</target>
        </trans-unit>
        <trans-unit id="0843050acd38a47bbd9eb7ee4897ebb745d3c0eb" translate="yes" xml:space="preserve">
          <source>EntriesChecker#empty</source>
          <target state="translated">EntriesChecker#empty</target>
        </trans-unit>
        <trans-unit id="5c6c5e300a2bb7a79ae864dd6aba2c5d1e78829f" translate="yes" xml:space="preserve">
          <source>EntriesChecker#entry</source>
          <target state="translated">EntriesChecker#entry</target>
        </trans-unit>
        <trans-unit id="5a6b1f124e77955855c8fff8b3a36e2b576e4d38" translate="yes" xml:space="preserve">
          <source>EntriesChecker#entry?</source>
          <target state="translated">EntriesChecker#entry?</target>
        </trans-unit>
        <trans-unit id="6782b0ef6f5cdc8388a2d4467a2fd6946fe9a8e2" translate="yes" xml:space="preserve">
          <source>EntriesChecker#next</source>
          <target state="translated">EntriesChecker#next</target>
        </trans-unit>
        <trans-unit id="acfb12edbb02fb3e3a1ad469487fcbdc852f2a15" translate="yes" xml:space="preserve">
          <source>EntriesChecker.new</source>
          <target state="translated">EntriesChecker.new</target>
        </trans-unit>
        <trans-unit id="378872f7c195ed1815214b2c13a573e4883cd359" translate="yes" xml:space="preserve">
          <source>Entry#clone</source>
          <target state="translated">Entry#clone</target>
        </trans-unit>
        <trans-unit id="b570e1f90820220c34d2c1826486a4f11bb462d2" translate="yes" xml:space="preserve">
          <source>Entry#context</source>
          <target state="translated">Entry#context</target>
        </trans-unit>
        <trans-unit id="be1090fc74b612f0e175bc2e53463df87898157e" translate="yes" xml:space="preserve">
          <source>Entry#data</source>
          <target state="translated">Entry#data</target>
        </trans-unit>
        <trans-unit id="e7b34e8c8c7d3a982ccdcd790b6ad2027b199060" translate="yes" xml:space="preserve">
          <source>Entry#deleted?</source>
          <target state="translated">Entry#deleted?</target>
        </trans-unit>
        <trans-unit id="ddaae8924ebb64c373503f39c5d1f905dbc5c54b" translate="yes" xml:space="preserve">
          <source>Entry#exception</source>
          <target state="translated">Entry#exception</target>
        </trans-unit>
        <trans-unit id="77de61c4abf996ca7a4e784dcda223752fbf8b58" translate="yes" xml:space="preserve">
          <source>Entry#hash</source>
          <target state="translated">Entry#hash</target>
        </trans-unit>
        <trans-unit id="dfb8ed673a0e2f9b0ec04b4e98ba45fb1e8c1888" translate="yes" xml:space="preserve">
          <source>Entry#key</source>
          <target state="translated">Entry#key</target>
        </trans-unit>
        <trans-unit id="b0fe4e6b3b783063f892f4770fdfd23ac38b9f0d" translate="yes" xml:space="preserve">
          <source>Entry#matches?</source>
          <target state="translated">Entry#matches?</target>
        </trans-unit>
        <trans-unit id="ff48dd065e3956d975bf3b5b03414bb4672fba17" translate="yes" xml:space="preserve">
          <source>Entry#message</source>
          <target state="translated">Entry#message</target>
        </trans-unit>
        <trans-unit id="00698fe6e4e5472d76f5f921ae746618a9048cbf" translate="yes" xml:space="preserve">
          <source>Entry#severity</source>
          <target state="translated">Entry#severity</target>
        </trans-unit>
        <trans-unit id="2f087907422f21d5ac2344bfec45efa5b752d2f4" translate="yes" xml:space="preserve">
          <source>Entry#source</source>
          <target state="translated">Entry#source</target>
        </trans-unit>
        <trans-unit id="d1a6734d8884d81deb2da39b026c11bc922cbee0" translate="yes" xml:space="preserve">
          <source>Entry#timestamp</source>
          <target state="translated">Entry#timestamp</target>
        </trans-unit>
        <trans-unit id="1d3a78ad0ccea0ff1ef12f204f4de9c8628e504a" translate="yes" xml:space="preserve">
          <source>Entry#value</source>
          <target state="translated">Entry#value</target>
        </trans-unit>
        <trans-unit id="3f8f9befa7f689b10be472a7d92d2de4176549aa" translate="yes" xml:space="preserve">
          <source>Entry.deleted</source>
          <target state="translated">Entry.deleted</target>
        </trans-unit>
        <trans-unit id="41d470061bfb31e5f7bd91cbdada0ac5b3d43b9a" translate="yes" xml:space="preserve">
          <source>Entry.new</source>
          <target state="translated">Entry.new</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="787406a5eaccab5294b6ffb5354be6ac09c20a04" translate="yes" xml:space="preserve">
          <source>Enum Members</source>
          <target state="translated">열거 형 멤버</target>
        </trans-unit>
        <trans-unit id="6e2577b538e0b2032214478cb94e515ebda65a62" translate="yes" xml:space="preserve">
          <source>Enum flags</source>
          <target state="translated">열거 형 플래그</target>
        </trans-unit>
        <trans-unit id="22f5f5f0a60dce2d210c6c3dcf3a20b8abcc45b5" translate="yes" xml:space="preserve">
          <source>Enum is the base type of all enums.</source>
          <target state="translated">열거 형은 모든 열거 형의 기본 유형입니다.</target>
        </trans-unit>
        <trans-unit id="a8c93f855da055dedaad2c34c0d28af3ccabce25" translate="yes" xml:space="preserve">
          <source>Enum of supported mechanisms used to pass credentials to the server.</source>
          <target state="translated">Enum of supported mechanisms used to pass credentials to the server.</target>
        </trans-unit>
        <trans-unit id="85c7dc2e35c561be17c99dde7c3ca46d5831aabd" translate="yes" xml:space="preserve">
          <source>Enum#+</source>
          <target state="translated">Enum#+</target>
        </trans-unit>
        <trans-unit id="b170749553ab2ca9acba7392f20175bbf305d33f" translate="yes" xml:space="preserve">
          <source>Enum#-</source>
          <target state="translated">Enum#-</target>
        </trans-unit>
        <trans-unit id="dc414bfac771ef8a40bf6e64a2112c202537efd0" translate="yes" xml:space="preserve">
          <source>Enum#==</source>
          <target state="translated">Enum#==</target>
        </trans-unit>
        <trans-unit id="7c5c8415d14fcc779d679a9aca5bc8f2660a70d7" translate="yes" xml:space="preserve">
          <source>Enum#^</source>
          <target state="translated">Enum#^</target>
        </trans-unit>
        <trans-unit id="32377a420170f345753ae3cc9e371ca8043ac579" translate="yes" xml:space="preserve">
          <source>Enum#each</source>
          <target state="translated">Enum#each</target>
        </trans-unit>
        <trans-unit id="ead7318c3c98f8d9ae138b4e9bd3c1d7467e5d61" translate="yes" xml:space="preserve">
          <source>Enum#hash</source>
          <target state="translated">Enum#hash</target>
        </trans-unit>
        <trans-unit id="f4a1a39adb747df20fe56defdbda41c32394653c" translate="yes" xml:space="preserve">
          <source>Enum#to_i</source>
          <target state="translated">Enum#to_i</target>
        </trans-unit>
        <trans-unit id="e97418a00d907986a35772130461197c858d8623" translate="yes" xml:space="preserve">
          <source>Enum#to_s</source>
          <target state="translated">Enum#to_s</target>
        </trans-unit>
        <trans-unit id="02d70dc48bae9757145e5e9fb942e0402ad1088e" translate="yes" xml:space="preserve">
          <source>Enum#|</source>
          <target state="translated">Enum#|</target>
        </trans-unit>
        <trans-unit id="6bbca8e5fc8604bd5505218b4e9c27ab67cb0e9e" translate="yes" xml:space="preserve">
          <source>Enum#~</source>
          <target state="translated">Enum#~</target>
        </trans-unit>
        <trans-unit id="61b89b7f9e11188eeb490f078c75582843399d92" translate="yes" xml:space="preserve">
          <source>Enum.each</source>
          <target state="translated">Enum.each</target>
        </trans-unit>
        <trans-unit id="e65b267b69f9db4c84335e3a1cc179593a69f3c2" translate="yes" xml:space="preserve">
          <source>Enum.new</source>
          <target state="translated">Enum.new</target>
        </trans-unit>
        <trans-unit id="83df7a7ef8fa21dd3116045758d3e9407ca3149d" translate="yes" xml:space="preserve">
          <source>Enumerable</source>
          <target state="translated">Enumerable</target>
        </trans-unit>
        <trans-unit id="fbc70abd17f2c83d59868d3c7838fabc2bf6e783" translate="yes" xml:space="preserve">
          <source>Enumerable#all?</source>
          <target state="translated">Enumerable#all?</target>
        </trans-unit>
        <trans-unit id="90a49eb88a601125063c15190e7f44d1d6b5c34c" translate="yes" xml:space="preserve">
          <source>Enumerable#any?</source>
          <target state="translated">Enumerable#any?</target>
        </trans-unit>
        <trans-unit id="cd6d545986d78b40ed90b66bb13be77c15fb206a" translate="yes" xml:space="preserve">
          <source>Enumerable#each</source>
          <target state="translated">Enumerable#each</target>
        </trans-unit>
        <trans-unit id="484f5714840577f182d24b9bf99edd39a407483f" translate="yes" xml:space="preserve">
          <source>Enumerable#find</source>
          <target state="translated">Enumerable#find</target>
        </trans-unit>
        <trans-unit id="b9f158c69fc2031d1fbafde25967f169c21ea012" translate="yes" xml:space="preserve">
          <source>Enumerable#grep</source>
          <target state="translated">Enumerable#grep</target>
        </trans-unit>
        <trans-unit id="4cc355dce84eb082348b9c8f70bce905f81dc47c" translate="yes" xml:space="preserve">
          <source>Enumerable#join</source>
          <target state="translated">Enumerable#join</target>
        </trans-unit>
        <trans-unit id="28a12d726162332502ba85385dfde0ec2f9e5d2a" translate="yes" xml:space="preserve">
          <source>Enumerable#map</source>
          <target state="translated">Enumerable#map</target>
        </trans-unit>
        <trans-unit id="ac0a88ab30d7ffc485917e22c62430fedb2a78ad" translate="yes" xml:space="preserve">
          <source>Enumerable#max</source>
          <target state="translated">Enumerable#max</target>
        </trans-unit>
        <trans-unit id="3b3147751cd27af9eba2f30377b57a52b809e5a9" translate="yes" xml:space="preserve">
          <source>Enumerable#max?</source>
          <target state="translated">Enumerable#max?</target>
        </trans-unit>
        <trans-unit id="a201b5695701f16b62b99f4b3ccf1165ff7f8410" translate="yes" xml:space="preserve">
          <source>Enumerable#min</source>
          <target state="translated">Enumerable#min</target>
        </trans-unit>
        <trans-unit id="80a4b3d45064d1dd9cd26ee5c62063b4b5ecb689" translate="yes" xml:space="preserve">
          <source>Enumerable#min?</source>
          <target state="translated">Enumerable#min?</target>
        </trans-unit>
        <trans-unit id="3f9cdc8e3277ce7790a3b9e92da78c6e15700de2" translate="yes" xml:space="preserve">
          <source>Enumerable#one?</source>
          <target state="translated">Enumerable#one?</target>
        </trans-unit>
        <trans-unit id="6c1fc7887887fd5c43b5d701961b02fe958d2f70" translate="yes" xml:space="preserve">
          <source>Enumerable#size</source>
          <target state="translated">Enumerable#size</target>
        </trans-unit>
        <trans-unit id="8682ac146461c51446f964e93135c38c1edd79ed" translate="yes" xml:space="preserve">
          <source>Enumerable#skip</source>
          <target state="translated">Enumerable#skip</target>
        </trans-unit>
        <trans-unit id="426cd02dc6e8596b4d542b66509e0ececb3dbac7" translate="yes" xml:space="preserve">
          <source>Enumerable#sum</source>
          <target state="translated">Enumerable#sum</target>
        </trans-unit>
        <trans-unit id="e372a0fb43d10cbb6d495877446647a7c11147d0" translate="yes" xml:space="preserve">
          <source>Enumerable#to_a</source>
          <target state="translated">Enumerable#to_a</target>
        </trans-unit>
        <trans-unit id="a85bf84cce8fbe5a2be137a302e3b30aa6952c3b" translate="yes" xml:space="preserve">
          <source>Enumerable#to_h</source>
          <target state="translated">Enumerable#to_h</target>
        </trans-unit>
        <trans-unit id="3d2ef3d55cabd2fb34b83f861539bc96a40fcd68" translate="yes" xml:space="preserve">
          <source>Enumerable#zip</source>
          <target state="translated">Enumerable#zip</target>
        </trans-unit>
        <trans-unit id="6a48c713d75de5898f947778d4bcfa2668193fb0" translate="yes" xml:space="preserve">
          <source>Enumerable#zip?</source>
          <target state="translated">Enumerable#zip?</target>
        </trans-unit>
        <trans-unit id="2104b67fab1aae1932b7f3d8c80ec077b0cb8384" translate="yes" xml:space="preserve">
          <source>Enumerable(B)</source>
          <target state="translated">Enumerable(B)</target>
        </trans-unit>
        <trans-unit id="4935af1b99a6f1addedcf6c0353f653e9dbfb9ce" translate="yes" xml:space="preserve">
          <source>Enumerable(T)</source>
          <target state="translated">Enumerable(T)</target>
        </trans-unit>
        <trans-unit id="b9e710c736653085d7f364d59c11dd559928b1aa" translate="yes" xml:space="preserve">
          <source>Enumerable({K, V})</source>
          <target state="translated">열거 가능 ({K, V})</target>
        </trans-unit>
        <trans-unit id="09a19c0cb3cb08f7ab70201aa435fc4f35d7e70e" translate="yes" xml:space="preserve">
          <source>Enumerable::Chunk</source>
          <target state="translated">Enumerable::Chunk</target>
        </trans-unit>
        <trans-unit id="988786033b3e94b188e986b056d53d3a1ac6953d" translate="yes" xml:space="preserve">
          <source>Enumerable::Chunk::Alone</source>
          <target state="translated">Enumerable::Chunk::Alone</target>
        </trans-unit>
        <trans-unit id="db4253ff6433e06b97a15bd370d490e7adb174fe" translate="yes" xml:space="preserve">
          <source>Enumerable::Chunk::Drop</source>
          <target state="translated">Enumerable::Chunk::Drop</target>
        </trans-unit>
        <trans-unit id="dcaf628759b750175e1e4fbddf02f67a8feb76fc" translate="yes" xml:space="preserve">
          <source>Enumerable::EmptyError</source>
          <target state="translated">Enumerable::EmptyError</target>
        </trans-unit>
        <trans-unit id="451b8dad775be5f503075997c7e6dfe4609d6e78" translate="yes" xml:space="preserve">
          <source>Enumerable::EmptyError.new</source>
          <target state="translated">Enumerable::EmptyError.new</target>
        </trans-unit>
        <trans-unit id="528e7d32f45d447be811ef56f4af8c277dea65e0" translate="yes" xml:space="preserve">
          <source>Enumerates all addresses this server is bound to.</source>
          <target state="translated">이 서버가 바인딩 된 모든 주소를 열거합니다.</target>
        </trans-unit>
        <trans-unit id="decf7169aeba5189b72c5729c0a40adce6b694fd" translate="yes" xml:space="preserve">
          <source>Enumerates over the items, chunking them together based on the return value of the block.</source>
          <target state="translated">블록의 반환 값을 기준으로 항목을 청킹하여 항목을 열거합니다.</target>
        </trans-unit>
        <trans-unit id="cb9577222a41a096bf546003f481c996c33e0508" translate="yes" xml:space="preserve">
          <source>Enumeration follows the order that the corresponding keys were inserted.</source>
          <target state="translated">열거는 해당 키가 삽입 된 순서를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="f3104dd45718e6d1ac6a03b91ae67193ae8361f0" translate="yes" xml:space="preserve">
          <source>Enums</source>
          <target state="translated">Enums</target>
        </trans-unit>
        <trans-unit id="198653c3ee7a2e2bb6268ef00d74156d09634b42" translate="yes" xml:space="preserve">
          <source>Enums are a type-safe alternative to &lt;a href=&quot;http://crystal-lang.org/api/Symbol.html&quot;&gt;Symbol&lt;/a&gt;. For example, an API's method can specify a &lt;a href=&quot;type_restrictions&quot;&gt;type restriction&lt;/a&gt; using an enum type:</source>
          <target state="translated">열거 형은 &lt;a href=&quot;http://crystal-lang.org/api/Symbol.html&quot;&gt;Symbol&lt;/a&gt; 의 형식에 안전한 대안 입니다. 예를 들어, API의 메소드 는 열거 형을 사용하여 &lt;a href=&quot;type_restrictions&quot;&gt;유형 제한&lt;/a&gt; 을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd84356c306cd5a2edcb7883bcc45cc04e22b620" translate="yes" xml:space="preserve">
          <source>Enums from integers</source>
          <target state="translated">정수의 열거 형</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="2146fcb0846e5f014cc0d28c4755d62d1079ff2c" translate="yes" xml:space="preserve">
          <source>EpochConverter</source>
          <target state="translated">EpochConverter</target>
        </trans-unit>
        <trans-unit id="0c2b6ef11c903f63a85df31320103b00117204b1" translate="yes" xml:space="preserve">
          <source>EpochConverter.from_json</source>
          <target state="translated">EpochConverter.from_json</target>
        </trans-unit>
        <trans-unit id="cb86724dca8131dee2c7d7bee09465df8f3854f9" translate="yes" xml:space="preserve">
          <source>EpochConverter.from_yaml</source>
          <target state="translated">EpochConverter.from_yaml</target>
        </trans-unit>
        <trans-unit id="8300bb74f3c7b4c674f99d27706b8f126308333a" translate="yes" xml:space="preserve">
          <source>EpochConverter.to_json</source>
          <target state="translated">EpochConverter.to_json</target>
        </trans-unit>
        <trans-unit id="3789d4628b7885b447cc3132b7c65eecb0ae1305" translate="yes" xml:space="preserve">
          <source>EpochConverter.to_yaml</source>
          <target state="translated">EpochConverter.to_yaml</target>
        </trans-unit>
        <trans-unit id="21e1a39ac9bf7cb33e5d917eb70d69565c1ff3a7" translate="yes" xml:space="preserve">
          <source>EpochMillisConverter</source>
          <target state="translated">EpochMillisConverter</target>
        </trans-unit>
        <trans-unit id="922b8df65057a49f31bb7a10784170b1d4b50abc" translate="yes" xml:space="preserve">
          <source>EpochMillisConverter.from_json</source>
          <target state="translated">EpochMillisConverter.from_json</target>
        </trans-unit>
        <trans-unit id="bf11259ac3c8aaa6376e3cf037d98d07fbfe50e9" translate="yes" xml:space="preserve">
          <source>EpochMillisConverter.from_yaml</source>
          <target state="translated">EpochMillisConverter.from_yaml</target>
        </trans-unit>
        <trans-unit id="e4b512262631b05b5d8e343df8f7c3522f95b19c" translate="yes" xml:space="preserve">
          <source>EpochMillisConverter.to_json</source>
          <target state="translated">EpochMillisConverter.to_json</target>
        </trans-unit>
        <trans-unit id="9ac21ec777fdae5a5eef57460f0ae2dbad8cbeb8" translate="yes" xml:space="preserve">
          <source>EpochMillisConverter.to_yaml</source>
          <target state="translated">EpochMillisConverter.to_yaml</target>
        </trans-unit>
        <trans-unit id="7a9900d84e1403f9c455cfd34c5bb3f62971e633" translate="yes" xml:space="preserve">
          <source>Equality</source>
          <target state="translated">Equality</target>
        </trans-unit>
        <trans-unit id="e8bb13b0809ce1852332b719f4e9f2159358bf4b" translate="yes" xml:space="preserve">
          <source>Equality of elements is determined according to &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">요소의 동일성은 &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt; 에 따라 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="703318af45aa3f4248c0caae040eb5bf04856a42" translate="yes" xml:space="preserve">
          <source>Equality with another object.</source>
          <target state="translated">다른 물체와의 평등.</target>
        </trans-unit>
        <trans-unit id="18c9637bf59c102a676463c4a381513e99ec73b2" translate="yes" xml:space="preserve">
          <source>Equality with another object. Always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">다른 물체와의 평등. 항상 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bfb3c229884733f2dc5229bf73c81ab04d2ab9ee" translate="yes" xml:space="preserve">
          <source>Equality.</source>
          <target state="translated">Equality.</target>
        </trans-unit>
        <trans-unit id="dd1e8e62399cc943edc8f96b67fab499d04d446f" translate="yes" xml:space="preserve">
          <source>Equality. Returns &lt;code&gt;true&lt;/code&gt; if each element in &lt;code&gt;self&lt;/code&gt; is equal to each corresponding element in &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">평등. 반환 &lt;code&gt;true&lt;/code&gt; 의 각 요소 경우 &lt;code&gt;self&lt;/code&gt; 의 각 해당 요소와 동일한 &lt;em&gt;다른&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="22428b6d2f7b02990f0b5cbbad52a609cb0e2815" translate="yes" xml:space="preserve">
          <source>Equality. Two regexes are equal if their sources and options are the same.</source>
          <target state="translated">평등. 소스와 옵션이 동일하면 두 개의 정규 표현식이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="949738166f23b4eab04549fa5390ef10290dde6d" translate="yes" xml:space="preserve">
          <source>Equivalence, Identity and Type</source>
          <target state="translated">동등성, 정체성 및 유형</target>
        </trans-unit>
        <trans-unit id="2ef9a67a2555f8c32aeb7444fb2e958345590847" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt;, but makes modification on the current object rather that returning a new one.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 새 객체를 반환하는 대신 현재 객체를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="03635da2fa49b51912ee9564ca2545fd98dd92da" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt;, but makes modification on the current object rather that returning a new one. Returns &lt;code&gt;nil&lt;/code&gt; if no changes were made.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 새 객체를 반환하는 대신 현재 객체를 수정합니다. 변경 사항이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f36e3676109f9e125c9bb79ea28f7c05e167f5c7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt;, but makes modification on the current object rather that returning a new one.</source>
          <target state="translated">Equivalent to &lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt; , but makes modification on the current object rather that returning a new one.</target>
        </trans-unit>
        <trans-unit id="c4bc04366f0863f761f7bd4d6e09fc98332599e1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt;, but makes modification on the current object rather that returning a new one. Returns &lt;code&gt;nil&lt;/code&gt; if no changes were made.</source>
          <target state="translated">Equivalent to &lt;code&gt;&lt;a href=&quot;hash#reject(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#reject&lt;/a&gt;&lt;/code&gt; , but makes modification on the current object rather that returning a new one. Returns &lt;code&gt;nil&lt;/code&gt; if no changes were made.</target>
        </trans-unit>
        <trans-unit id="212e96c18cb094af0a3f6b78734797d44f657bb3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; but makes modification on the current object rather that returning a new one.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 새 오브젝트를 리턴하는 대신 현재 오브젝트를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="3b5f81ce6fd61416665df22fb6a9d5ebf3e27e02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; but makes modification on the current object rather that returning a new one. Returns &lt;code&gt;nil&lt;/code&gt; if no changes were made</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3EUNDERSCORE)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; 와 동일 하지만 새 오브젝트를 리턴하는 대신 현재 오브젝트를 수정합니다. 변경 사항이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환</target>
        </trans-unit>
        <trans-unit id="2613da3cfab69f2799d47f1d6b786aac768e5b38" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; but makes modification on the current object rather that returning a new one.</source>
          <target state="translated">Equivalent to &lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; but makes modification on the current object rather that returning a new one.</target>
        </trans-unit>
        <trans-unit id="89c445ab6fc922bd5eb7b4f237f00610620b5ee4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; but makes modification on the current object rather that returning a new one. Returns &lt;code&gt;nil&lt;/code&gt; if no changes were made</source>
          <target state="translated">Equivalent to &lt;code&gt;&lt;a href=&quot;hash#select(&amp;amp;block:K,V-%3E_)-instance-method&quot;&gt;Hash#select&lt;/a&gt;&lt;/code&gt; but makes modification on the current object rather that returning a new one. Returns &lt;code&gt;nil&lt;/code&gt; if no changes were made</target>
        </trans-unit>
        <trans-unit id="d8bf3fea74cb51ac9ebccafa9b5bfc9e28b1c902" translate="yes" xml:space="preserve">
          <source>Errno</source>
          <target state="translated">Errno</target>
        </trans-unit>
        <trans-unit id="caad936daf3b7aa7b3a2729aa5f1df60572f3c25" translate="yes" xml:space="preserve">
          <source>Errno wraps and gives access to libc's errno. This is mostly useful when dealing with C libraries.</source>
          <target state="translated">Errno는 libc의 errno를 랩핑하고 액세스합니다. 이것은 C 라이브러리를 다룰 때 주로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="053700d438d77beef1b99eccf6469f5d44b88276" translate="yes" xml:space="preserve">
          <source>Errno#eio?</source>
          <target state="translated">Errno#eio?</target>
        </trans-unit>
        <trans-unit id="9c9e6fd036735eb669a3dc55bcf5b40365bee1e2" translate="yes" xml:space="preserve">
          <source>Errno#errno</source>
          <target state="translated">Errno#errno</target>
        </trans-unit>
        <trans-unit id="0f82770aee79f06e9e8d9fb5367fe04aefe18a1e" translate="yes" xml:space="preserve">
          <source>Errno#errno_message</source>
          <target state="translated">Errno#errno_message</target>
        </trans-unit>
        <trans-unit id="4a7c36f4ee09501e8f355a7723cea624ab65d2e5" translate="yes" xml:space="preserve">
          <source>Errno.new</source>
          <target state="translated">Errno.new</target>
        </trans-unit>
        <trans-unit id="e1bdff6281bfb685bbe206fd167410781e0131a4" translate="yes" xml:space="preserve">
          <source>Errno.value</source>
          <target state="translated">Errno.value</target>
        </trans-unit>
        <trans-unit id="e1ecf6874739eb7aa32ae1b8df8af92e469d7022" translate="yes" xml:space="preserve">
          <source>Errno.value=</source>
          <target state="translated">Errno.value=</target>
        </trans-unit>
        <trans-unit id="63753a4eacd6a1715a3699480c21ccf144a56a65" translate="yes" xml:space="preserve">
          <source>Error raised when an invalid pattern is used.</source>
          <target state="translated">잘못된 패턴을 사용하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="441c4e5aa8c59a894a04039c4f26123cabb982c1" translate="yes" xml:space="preserve">
          <source>ErrorHandler</source>
          <target state="translated">ErrorHandler</target>
        </trans-unit>
        <trans-unit id="33359b5ecb0930f9d80b282a55d45b9ac5e57df6" translate="yes" xml:space="preserve">
          <source>ErrorHandler#call</source>
          <target state="translated">ErrorHandler#call</target>
        </trans-unit>
        <trans-unit id="bb4c96038c2942c717f39511b222116067f9ffa9" translate="yes" xml:space="preserve">
          <source>ErrorHandler.new</source>
          <target state="translated">ErrorHandler.new</target>
        </trans-unit>
        <trans-unit id="eaef7a116f0d7a190a8878317f95877c7bd85201" translate="yes" xml:space="preserve">
          <source>Escapes special characters in HTML, namely &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;'&lt;/code&gt;.</source>
          <target state="translated">HTML에서 특수 문자 ( &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&quot;&lt;/code&gt; 및 &lt;code&gt;'&lt;/code&gt; )를 이스케이프 합니다.</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="b5e9cac0435913c3bda6e7d8b8f6fa9692f3179d" translate="yes" xml:space="preserve">
          <source>Especially useful for debugging binary protocols on an IO, to understand better when and how data is sent or received.</source>
          <target state="translated">데이터가 전송되는시기와 방법을 더 잘 이해하기 위해 IO에서 이진 프로토콜을 디버깅하는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="14ec7f300768f2027bf3ecaf292b43eb64a9df23" translate="yes" xml:space="preserve">
          <source>Establishes a handler for a &lt;em&gt;flag&lt;/em&gt; or subcommand.</source>
          <target state="translated">Establishes a handler for a &lt;em&gt;flag&lt;/em&gt; or subcommand.</target>
        </trans-unit>
        <trans-unit id="ac2531c0d3d224c711041ce7b91d6cd356a49204" translate="yes" xml:space="preserve">
          <source>Establishes a handler for a &lt;em&gt;flag&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;플래그&lt;/em&gt; 처리기를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d059cd3a2694d4dd841648312445f1d9a4bbc769" translate="yes" xml:space="preserve">
          <source>Establishes a handler for a pair of short and long flags.</source>
          <target state="translated">한 쌍의 짧은 플래그와 긴 플래그에 대한 핸들러를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c7d5d8c4d3b8858441eac034a29a220b9e467a74" translate="yes" xml:space="preserve">
          <source>Establishes the initial message for the help printout.</source>
          <target state="translated">도움말 출력을위한 초기 메시지를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="16cf9dea8d911c9e46b555b5bfab6193002ed8b4" translate="yes" xml:space="preserve">
          <source>Establishes the initial message for the help printout. Typically, you want to write here the name of your program, and a one-line template of its invocation.</source>
          <target state="translated">도움말 출력을위한 초기 메시지를 설정합니다. 일반적으로 여기에 프로그램 이름과 한 줄의 호출 템플릿을 작성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="59259a3891257eb8deb02c78e73d93056cce4f96" translate="yes" xml:space="preserve">
          <source>Even though the instance has two &lt;code&gt;Int32&lt;/code&gt; fields, the compiler always includes an extra &lt;code&gt;Int32&lt;/code&gt; field for the type id of the object. That's why the instance size ends up being 12 and not 8.</source>
          <target state="translated">인스턴스에 두 개의 &lt;code&gt;Int32&lt;/code&gt; 필드 가 있지만 컴파일러에는 항상 객체의 유형 ID에 대한 추가 &lt;code&gt;Int32&lt;/code&gt; 필드가 포함됩니다 . 이것이 인스턴스 크기가 8이 아닌 12가되는 이유입니다.</target>
        </trans-unit>
        <trans-unit id="5560b1a6fdd25c2f3ea9dd3c88ff21bedcb02c25" translate="yes" xml:space="preserve">
          <source>Even though the standard library has Time parsers given a &lt;em&gt;fixed&lt;/em&gt; format, the format in YAML, http://yaml.org/type/timestamp.html, can consist of just the date part, and following it any number of spaces, or 't', or 'T' can follow, with many optional components. So, we implement this in a more efficient way to avoid parsing the same string with many possible formats (there's also no way to specify any number of spaces with Time::Format, or an &quot;or&quot; like in a Regex).</source>
          <target state="translated">표준 라이브러리에 &lt;em&gt;고정&lt;/em&gt; 형식이 지정된 시간 파서가 있더라도 YAML 형식 (http://yaml.org/type/timestamp.html)은 날짜 부분으로 구성 될 수 있으며 그 뒤에 여러 공백 또는 ' t '또는'T '는 많은 선택적 구성 요소와 함께 따를 수 있습니다. 따라서 우리는 가능한 많은 형식으로 동일한 문자열을 구문 분석하는 것을 피하기 위해보다 효율적인 방법으로 이것을 구현합니다 (Time :: Format 또는 Regex와 같은 &quot;또는&quot;으로 공백을 지정할 수있는 방법도 없습니다).</target>
        </trans-unit>
        <trans-unit id="c5beec4cb59717ee4a3011425b3ab1af3f12e909" translate="yes" xml:space="preserve">
          <source>Event loop</source>
          <target state="translated">이벤트 루프</target>
        </trans-unit>
        <trans-unit id="87b4ee1e5faa0913700f2e3b2845843f3f90b95e" translate="yes" xml:space="preserve">
          <source>EventKind</source>
          <target state="translated">EventKind</target>
        </trans-unit>
        <trans-unit id="cd903cd7d247bb8e383959ab8564dce51ec15478" translate="yes" xml:space="preserve">
          <source>EventKind#alias?</source>
          <target state="translated">EventKind#alias?</target>
        </trans-unit>
        <trans-unit id="cf00256b6efd5824133520fb0fd11e52ab206199" translate="yes" xml:space="preserve">
          <source>EventKind#document_end?</source>
          <target state="translated">EventKind#document_end?</target>
        </trans-unit>
        <trans-unit id="8ee560d38e238cf5060c6411c357bf56d10a62cc" translate="yes" xml:space="preserve">
          <source>EventKind#document_start?</source>
          <target state="translated">EventKind#document_start?</target>
        </trans-unit>
        <trans-unit id="8687b13cad7643b4ec312a27db0e065a235bea59" translate="yes" xml:space="preserve">
          <source>EventKind#mapping_end?</source>
          <target state="translated">EventKind#mapping_end?</target>
        </trans-unit>
        <trans-unit id="0e3ed5873dd9592d39db673856fcfe0141ad4e31" translate="yes" xml:space="preserve">
          <source>EventKind#mapping_start?</source>
          <target state="translated">EventKind#mapping_start?</target>
        </trans-unit>
        <trans-unit id="55687815676356f0583370f46242f95bb7f7e4d4" translate="yes" xml:space="preserve">
          <source>EventKind#none?</source>
          <target state="translated">EventKind#none?</target>
        </trans-unit>
        <trans-unit id="ffeed0948f2a59de0eda44e69eaacff93bf3a14c" translate="yes" xml:space="preserve">
          <source>EventKind#scalar?</source>
          <target state="translated">EventKind#scalar?</target>
        </trans-unit>
        <trans-unit id="555e63b1c61b480cc8b70a568df44153486b9a18" translate="yes" xml:space="preserve">
          <source>EventKind#sequence_end?</source>
          <target state="translated">EventKind#sequence_end?</target>
        </trans-unit>
        <trans-unit id="0113f806cfbc54567dd2d72b3a9243f722911881" translate="yes" xml:space="preserve">
          <source>EventKind#sequence_start?</source>
          <target state="translated">EventKind#sequence_start?</target>
        </trans-unit>
        <trans-unit id="a524ca5d4cbdb0c4cf36e61e25a6da58fd3b84b8" translate="yes" xml:space="preserve">
          <source>EventKind#stream_end?</source>
          <target state="translated">EventKind#stream_end?</target>
        </trans-unit>
        <trans-unit id="76e5eb1da73d8b5628d568026f8ba82098fd3037" translate="yes" xml:space="preserve">
          <source>EventKind#stream_start?</source>
          <target state="translated">EventKind#stream_start?</target>
        </trans-unit>
        <trans-unit id="0b5db8144317bec9354ea0fe168b461d91ac7312" translate="yes" xml:space="preserve">
          <source>EventLoop</source>
          <target state="translated">EventLoop</target>
        </trans-unit>
        <trans-unit id="5e79d81fe93e730043c357e8c8b0755af322f15c" translate="yes" xml:space="preserve">
          <source>EventLoop.after_fork</source>
          <target state="translated">EventLoop.after_fork</target>
        </trans-unit>
        <trans-unit id="c497abd3b196e3fe75c451991426e8f2b8731302" translate="yes" xml:space="preserve">
          <source>EventLoop.create_fd_read_event</source>
          <target state="translated">EventLoop.create_fd_read_event</target>
        </trans-unit>
        <trans-unit id="a7ea15d505f2ef050b63e463b913707258a0a865" translate="yes" xml:space="preserve">
          <source>EventLoop.create_fd_write_event</source>
          <target state="translated">EventLoop.create_fd_write_event</target>
        </trans-unit>
        <trans-unit id="c37da755049d4d39a6bc80ded060600aaf9141dd" translate="yes" xml:space="preserve">
          <source>EventLoop.create_resume_event</source>
          <target state="translated">EventLoop.create_resume_event</target>
        </trans-unit>
        <trans-unit id="d0e8313d6aeb07635597ba99d19c80fa030ff4f6" translate="yes" xml:space="preserve">
          <source>EventLoop.run_once</source>
          <target state="translated">EventLoop.run_once</target>
        </trans-unit>
        <trans-unit id="668fe3075b1c8f275c8cdda0675518e270a9253f" translate="yes" xml:space="preserve">
          <source>Evented</source>
          <target state="translated">Evented</target>
        </trans-unit>
        <trans-unit id="03a5d4484354cab453b3aea03cd83226f87ec99c" translate="yes" xml:space="preserve">
          <source>Evented#evented_close</source>
          <target state="translated">Evented#evented_close</target>
        </trans-unit>
        <trans-unit id="d0a81929784ca0bb37fc0b0de515286358c117d5" translate="yes" xml:space="preserve">
          <source>Evented#evented_read</source>
          <target state="translated">Evented#evented_read</target>
        </trans-unit>
        <trans-unit id="518209167e5a70511e59641de2b3fb29c05f9431" translate="yes" xml:space="preserve">
          <source>Evented#evented_reopen</source>
          <target state="translated">Evented#evented_reopen</target>
        </trans-unit>
        <trans-unit id="466f6f79fe3c7607324cff4b8e7e76f4a31161e5" translate="yes" xml:space="preserve">
          <source>Evented#evented_send</source>
          <target state="translated">Evented#evented_send</target>
        </trans-unit>
        <trans-unit id="2f6eb19c19c9133755d0277b9e166b3c151e0901" translate="yes" xml:space="preserve">
          <source>Evented#evented_write</source>
          <target state="translated">Evented#evented_write</target>
        </trans-unit>
        <trans-unit id="72b0eac897e18d8cf0f58a6f0f21bca2e4460aac" translate="yes" xml:space="preserve">
          <source>Evented#read_timeout</source>
          <target state="translated">Evented#read_timeout</target>
        </trans-unit>
        <trans-unit id="f0b0d349cd61c0b45d2d17f856409205ef61326d" translate="yes" xml:space="preserve">
          <source>Evented#read_timeout=</source>
          <target state="translated">Evented#read_timeout=</target>
        </trans-unit>
        <trans-unit id="a6cbd08d9f5d45b8d7215d0d6e7983531beb23f6" translate="yes" xml:space="preserve">
          <source>Evented#write_timeout</source>
          <target state="translated">Evented#write_timeout</target>
        </trans-unit>
        <trans-unit id="d04372f636bffb569a00719d68475388ab88a0ca" translate="yes" xml:space="preserve">
          <source>Evented#write_timeout=</source>
          <target state="translated">Evented#write_timeout=</target>
        </trans-unit>
        <trans-unit id="3ae5d2eff341edece1c42541cbb87d49399cff39" translate="yes" xml:space="preserve">
          <source>Every class except &lt;code&gt;Object&lt;/code&gt;, the hierarchy root, inherits from another class (its superclass). If you don't specify one it defaults to &lt;code&gt;Reference&lt;/code&gt; for classes and &lt;code&gt;Struct&lt;/code&gt; for structs.</source>
          <target state="translated">계층 구조 루트 인 &lt;code&gt;Object&lt;/code&gt; 를 제외한 모든 클래스 는 다른 클래스 (수퍼 클래스)에서 상속됩니다. 하나를 지정하지 않으면 기본적으로 클래스에 대한 &lt;code&gt;Reference&lt;/code&gt; 및 &lt;code&gt;Struct&lt;/code&gt; 대한 구조로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="07944c5c8767da981fbd9d979fce8fe35fea627c" translate="yes" xml:space="preserve">
          <source>Every expression whose code paths all result in &lt;code&gt;NoReturn&lt;/code&gt; will be &lt;code&gt;NoReturn&lt;/code&gt; as well. &lt;code&gt;NoReturn&lt;/code&gt; does not show up in a union type because it would essentially be included in every expression's type. It is only used when an expression will never return to the current scope.</source>
          <target state="translated">코드 경로가 모두 &lt;code&gt;NoReturn&lt;/code&gt; 이되는 모든 표현식 도 &lt;code&gt;NoReturn&lt;/code&gt; 이 됩니다. &lt;code&gt;NoReturn&lt;/code&gt; 은 기본적으로 모든 표현식 유형에 포함되므로 공용체 유형으로 표시되지 않습니다. 표현식이 현재 범위로 돌아 가지 않을 때만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fd94594170309f8911ad7b00589b33e514a1ff96" translate="yes" xml:space="preserve">
          <source>Every parameter added is directly written to an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, where keys and values are properly escaped.</source>
          <target state="translated">추가 된 모든 매개 변수는 키에 직접 이스케이프 되는 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 직접 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="c246187b070d36efc094c7d5ff725967defce1c8" translate="yes" xml:space="preserve">
          <source>Every tempfile is operated as a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;, including initializing, reading and writing.</source>
          <target state="translated">모든 임시 파일은 초기화, 읽기 및 쓰기를 포함 하여 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; 로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="0d524c7d6ecc072f91b3e04678032f9f05d9229d" translate="yes" xml:space="preserve">
          <source>Every time you use an alias the compiler replaces it with the type it refers to.</source>
          <target state="translated">별명을 사용할 때마다 컴파일러는이를 별명 유형으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="54049aaf2c43863caadc14eec3091d62a29f447e" translate="yes" xml:space="preserve">
          <source>Everything is an object</source>
          <target state="translated">모든 것이 대상이다</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="e1496bbfe6aa5f2fb9b5acc6f3e53f84fb545c55" translate="yes" xml:space="preserve">
          <source>Example (loopback):</source>
          <target state="translated">예 (루프백) :</target>
        </trans-unit>
        <trans-unit id="eb67f3cb7f2b1a4e4b08122570f96f879de8ea98" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;inherited&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;inherited&lt;/code&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="479cd26a603291f95f15e795a70251f4820f4a23" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;method_added&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;method_added&lt;/code&gt; 의 예 :</target>
        </trans-unit>
        <trans-unit id="8b7b2902ada62152aa006581f00c227e45955aae" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;method_missing&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;method_missing&lt;/code&gt; 의 예 :</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="16356b2e0b5f20500c4ced6e3b650ea9f40ef7bb" translate="yes" xml:space="preserve">
          <source>Example#block</source>
          <target state="translated">Example#block</target>
        </trans-unit>
        <trans-unit id="b64a136931cfb1d4845075b63f0735a5c26fe081" translate="yes" xml:space="preserve">
          <source>Example#filter_by_focus</source>
          <target state="translated">Example#filter_by_focus</target>
        </trans-unit>
        <trans-unit id="64cd5dcb64e468112b14bafa4b79b07a04d2c293" translate="yes" xml:space="preserve">
          <source>Example#filter_by_line</source>
          <target state="translated">Example#filter_by_line</target>
        </trans-unit>
        <trans-unit id="fae0e442ebda4cd56e0dfd5e46aa09b155466d3a" translate="yes" xml:space="preserve">
          <source>Example#filter_by_locations</source>
          <target state="translated">Example#filter_by_locations</target>
        </trans-unit>
        <trans-unit id="157f43144836595b6261ff8cece5378e1a970432" translate="yes" xml:space="preserve">
          <source>Example#filter_by_pattern</source>
          <target state="translated">Example#filter_by_pattern</target>
        </trans-unit>
        <trans-unit id="05767d957c8593b3b994127a95cd590f916e8282" translate="yes" xml:space="preserve">
          <source>Example#filter_by_split</source>
          <target state="translated">Example#filter_by_split</target>
        </trans-unit>
        <trans-unit id="cba8c4bdc0f535e80cb93925705eecee39da0855" translate="yes" xml:space="preserve">
          <source>Example#run</source>
          <target state="translated">Example#run</target>
        </trans-unit>
        <trans-unit id="91b02da0370d395933f5c1617a4890b040cf3833" translate="yes" xml:space="preserve">
          <source>Example.new</source>
          <target state="translated">Example.new</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="f6217924be2185a7118ef0314d3cf21bed2d85f4" translate="yes" xml:space="preserve">
          <source>Example: compress a file</source>
          <target state="translated">예 : 파일 압축</target>
        </trans-unit>
        <trans-unit id="f06e4ee31bd4f2d912eaeb57e348e408db3d5cfe" translate="yes" xml:space="preserve">
          <source>Example: decompress a gzip file</source>
          <target state="translated">예 : gzip 파일 압축 해제</target>
        </trans-unit>
        <trans-unit id="e64e0bb7e1431b503c928d660269c83b11dcbea5" translate="yes" xml:space="preserve">
          <source>Example::Procsy</source>
          <target state="translated">Example::Procsy</target>
        </trans-unit>
        <trans-unit id="9b3f89e3fa4c9388e7bc35a7d553bdfbe868a06d" translate="yes" xml:space="preserve">
          <source>Example::Procsy#example</source>
          <target state="translated">Example::Procsy#example</target>
        </trans-unit>
        <trans-unit id="8328712fe5485d0c0b9088eef814fcc64128ca47" translate="yes" xml:space="preserve">
          <source>Example::Procsy#run</source>
          <target state="translated">Example::Procsy#run</target>
        </trans-unit>
        <trans-unit id="333d3b0a9a7dad12b027777c136f190bd86a0380" translate="yes" xml:space="preserve">
          <source>ExampleGroup</source>
          <target state="translated">ExampleGroup</target>
        </trans-unit>
        <trans-unit id="95663fc1caf191b2a01d0a8ea2c5bbf659f6b21e" translate="yes" xml:space="preserve">
          <source>ExampleGroup.new</source>
          <target state="translated">ExampleGroup.new</target>
        </trans-unit>
        <trans-unit id="35f1838ed24f6c8c3b03b52538d1916783f69a81" translate="yes" xml:space="preserve">
          <source>ExampleGroup::Procsy</source>
          <target state="translated">ExampleGroup::Procsy</target>
        </trans-unit>
        <trans-unit id="e3b08df99bc39ba303a383f1ece2008c1e0b8ac0" translate="yes" xml:space="preserve">
          <source>ExampleGroup::Procsy#example_group</source>
          <target state="translated">ExampleGroup::Procsy#example_group</target>
        </trans-unit>
        <trans-unit id="9d5ee09930f17498f668bebf11ad85723d764157" translate="yes" xml:space="preserve">
          <source>ExampleGroup::Procsy#run</source>
          <target state="translated">ExampleGroup::Procsy#run</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fc8fc0a701a42686262cb66203c441ac5a5ddc4b" translate="yes" xml:space="preserve">
          <source>Examples of flags:</source>
          <target state="translated">플래그의 예 :</target>
        </trans-unit>
        <trans-unit id="faf53eac4c36715b2ebdf44b74a573bc7a6406a5" translate="yes" xml:space="preserve">
          <source>Examples of precisions:</source>
          <target state="translated">정밀도의 예 :</target>
        </trans-unit>
        <trans-unit id="692c4009249c70605a8003862ef441800ecab31d" translate="yes" xml:space="preserve">
          <source>Examples of this can be found in &lt;a href=&quot;https://crystal-lang.org/api/IO/FileDescriptor.html#finalize-instance-method&quot;&gt;&lt;code&gt;IO::FileDescriptor#finalize&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://crystal-lang.org/api/OpenSSL/Digest.html#finalize-instance-method&quot;&gt;&lt;code&gt;OpenSSL::Digest#finalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이에 대한 예는 &lt;a href=&quot;https://crystal-lang.org/api/IO/FileDescriptor.html#finalize-instance-method&quot;&gt; &lt;code&gt;IO::FileDescriptor#finalize&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://crystal-lang.org/api/OpenSSL/Digest.html#finalize-instance-method&quot;&gt; &lt;code&gt;OpenSSL::Digest#finalize&lt;/code&gt; &lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c408818361d64e7ccc5a094b54a85cb027ebcc8" translate="yes" xml:space="preserve">
          <source>Examples of valid flags:</source>
          <target state="translated">유효한 플래그의 예 :</target>
        </trans-unit>
        <trans-unit id="d32ad6d6d80a5acbdc1295260d794ab70b291071" translate="yes" xml:space="preserve">
          <source>Examples of valid subcommands:</source>
          <target state="translated">Examples of valid subcommands:</target>
        </trans-unit>
        <trans-unit id="2cd8a2f12507a32198ecab41859556b4f6b75697" translate="yes" xml:space="preserve">
          <source>Examples of width:</source>
          <target state="translated">폭의 예 :</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">예외 처리</target>
        </trans-unit>
        <trans-unit id="2c867e159c24233f8db7291b7117f181ae54016e" translate="yes" xml:space="preserve">
          <source>Exception and its descendants are used to communicate between raise and rescue statements in &lt;code&gt;begin ... end&lt;/code&gt; blocks. Exception objects carry information about the exception &amp;ndash; its type (the exception&amp;rsquo;s class name), an optional descriptive string, and optional traceback information. Exception subclasses may add additional information.</source>
          <target state="translated">예외와 그 자손은 &lt;code&gt;begin ... end&lt;/code&gt; 블록의 raise 문과 rescue 문 사이의 통신에 사용됩니다 . 예외 객체에는 예외 유형 (예외 클래스 이름), 선택적 설명 문자열 및 선택적 역 추적 정보에 대한 정보가 있습니다. 예외 서브 클래스는 추가 정보를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4b0dfe7027c1d349ba13a7e79558e44ec341bd8" translate="yes" xml:space="preserve">
          <source>Exception handling</source>
          <target state="translated">예외 처리</target>
        </trans-unit>
        <trans-unit id="35d7a68a280641e4ca156f84590c7dbc093922fb" translate="yes" xml:space="preserve">
          <source>Exception handling and rolling back</source>
          <target state="translated">예외 처리 및 롤백</target>
        </trans-unit>
        <trans-unit id="9af1237749f1f707ac907564929847c7b43cc2a0" translate="yes" xml:space="preserve">
          <source>Exception handling has a short syntax form: assume a method or block definition is an implicit &lt;code&gt;begin ... end&lt;/code&gt; expression, then specify &lt;code&gt;rescue&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, and &lt;code&gt;ensure&lt;/code&gt; clauses:</source>
          <target state="translated">방법 또는 블록 정의에 암시 적 가정 : 예외 처리는 짧은 구문 형태가 &lt;code&gt;begin ... end&lt;/code&gt; 식을 한 후 지정 &lt;code&gt;rescue&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; 및 &lt;code&gt;ensure&lt;/code&gt; 조항 :</target>
        </trans-unit>
        <trans-unit id="9666aba447a862cb5f3a83a8eefae9387e0d0947" translate="yes" xml:space="preserve">
          <source>Exception thrown on a JSON parse error.</source>
          <target state="translated">JSON 구문 분석 오류에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="8d65fbb67b5bfd9dfff86ee3117c0397fbb804d0" translate="yes" xml:space="preserve">
          <source>Exception thrown on a YAML parse error.</source>
          <target state="translated">YAML 구문 분석 오류에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="07760cfcbb8f1940e2bee4afc658ad103bc1ed0e" translate="yes" xml:space="preserve">
          <source>Exception thrown on an INI parse error.</source>
          <target state="translated">INI 구문 분석 오류에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="60b3c6cc209b30b82252cb9fda84be58db78bfb0" translate="yes" xml:space="preserve">
          <source>Exception#backtrace</source>
          <target state="translated">Exception#backtrace</target>
        </trans-unit>
        <trans-unit id="8b72d09bd1d194423dfdfde3d0128efcf3ca3af4" translate="yes" xml:space="preserve">
          <source>Exception#backtrace?</source>
          <target state="translated">Exception#backtrace?</target>
        </trans-unit>
        <trans-unit id="b09274c39d8cb6b850955056c84242a2d1cbcdab" translate="yes" xml:space="preserve">
          <source>Exception#callstack</source>
          <target state="translated">Exception#callstack</target>
        </trans-unit>
        <trans-unit id="e0e84825aa56ffb07086bce1704d28c32b50bf68" translate="yes" xml:space="preserve">
          <source>Exception#callstack=</source>
          <target state="translated">Exception#callstack=</target>
        </trans-unit>
        <trans-unit id="34abe2c8a17d68047b3b1badbd49906d91afc679" translate="yes" xml:space="preserve">
          <source>Exception#cause</source>
          <target state="translated">Exception#cause</target>
        </trans-unit>
        <trans-unit id="53654d78bb1802b473d4b0a5035a08a6b8bc22bf" translate="yes" xml:space="preserve">
          <source>Exception#inspect</source>
          <target state="translated">Exception#inspect</target>
        </trans-unit>
        <trans-unit id="c2eb025c0480ff188e3f9c14d211fa47325771bc" translate="yes" xml:space="preserve">
          <source>Exception#inspect_with_backtrace</source>
          <target state="translated">Exception#inspect_with_backtrace</target>
        </trans-unit>
        <trans-unit id="d66cdf08192be4fbd56eaa2889f6b40e85607be3" translate="yes" xml:space="preserve">
          <source>Exception#message</source>
          <target state="translated">Exception#message</target>
        </trans-unit>
        <trans-unit id="dfb80eb9cac714c615a19d29adda48f53cb4dad6" translate="yes" xml:space="preserve">
          <source>Exception#to_s</source>
          <target state="translated">Exception#to_s</target>
        </trans-unit>
        <trans-unit id="6606d76800a8de4f263dab77920dafeb051a9700" translate="yes" xml:space="preserve">
          <source>Exception.new</source>
          <target state="translated">Exception.new</target>
        </trans-unit>
        <trans-unit id="f0c0349b46cb137595b8446f454962494c2c7a22" translate="yes" xml:space="preserve">
          <source>Exception::CallStack::RepeatedFrame</source>
          <target state="translated">Exception::CallStack::RepeatedFrame</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="f547cb19a065c523d12c177772e065389331b019" translate="yes" xml:space="preserve">
          <source>Exceptions to the general expansion formula are the logical operators:</source>
          <target state="translated">Exceptions to the general expansion formula are the logical operators:</target>
        </trans-unit>
        <trans-unit id="fd889211f4920bfa0e9aec228a2f5f1b21c958de" translate="yes" xml:space="preserve">
          <source>Exclusive OR.</source>
          <target state="translated">독점적 OR.</target>
        </trans-unit>
        <trans-unit id="5b2c49708477b167f72d879ed4efe33305fda945" translate="yes" xml:space="preserve">
          <source>Exclusive OR. Returns &lt;code&gt;true&lt;/code&gt; if this bool is different from &lt;em&gt;other&lt;/em&gt;, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">독점적 OR. 반환 &lt;code&gt;true&lt;/code&gt; 이 부울이 다른 경우 &lt;em&gt;다른&lt;/em&gt; 그렇지 않으면 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0233eba4e19efdcef5da485af2c2db8b0901f32a" translate="yes" xml:space="preserve">
          <source>Exec</source>
          <target state="translated">Exec</target>
        </trans-unit>
        <trans-unit id="b63162a783524a1ec5efa41e95fe5121b9b98b72" translate="yes" xml:space="preserve">
          <source>Exec format error</source>
          <target state="translated">실행 형식 오류</target>
        </trans-unit>
        <trans-unit id="73dea9f5a18be20c469548bef0e5e03e47f11165" translate="yes" xml:space="preserve">
          <source>ExecStdio</source>
          <target state="translated">ExecStdio</target>
        </trans-unit>
        <trans-unit id="b6ed7a640d3833f0af2095b31b1ee1965ea5bd20" translate="yes" xml:space="preserve">
          <source>Execute the SQL command.</source>
          <target state="translated">SQL 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0abe0a11224b17546f2a1b5ed8ffd0344091ea1b" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request and yields the response to the block.</source>
          <target state="translated">DELETE 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="71c7b831e8a72a80768f6d4623a0cf9a2ca312bf" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">DELETE 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="98a0e3ee0c61cef7f60e988171fe8e3ee4e86487" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a DELETE request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ee0071f2f6acfbf740e7fedfc4e590f47115942" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">양식 데이터로 DELETE 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="667d34d33892936147be1bb11d6352c750534362" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">양식 데이터로 DELETE 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba206d511ad3cac1e9c29340f8e99595dbf1379f" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request with form data and yields the response to the block.</source>
          <target state="translated">폼 데이터로 DELETE 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="038bdbb8038db218afc6a4f601a6d323aa92c5c9" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 DELETE 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="12f834492d7047895f3801d65357b204a9c3d12d" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 DELETE 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="be04ebeab23acaa88c822387330a2b2f1d447b5c" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a DELETE request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="c22c03c9ecca7a9b9a2cfb16af3733f37855845d" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a DELETE request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="06c910ae0301318389891d51d83ad198b9c75f86" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request.</source>
          <target state="translated">DELETE 요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="03db598f5031f058ce89d9f540b78f405648b4af" translate="yes" xml:space="preserve">
          <source>Executes a DELETE request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">DELETE 요청을 실행합니다. 응답에는 본문이 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 있으며 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="f82b73c6aad38ccba7eb053e9d9dc204e6f4aad7" translate="yes" xml:space="preserve">
          <source>Executes a GET request and yields the response to the block.</source>
          <target state="translated">GET 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="219db79f493657ea60d9a419fa468b740562374b" translate="yes" xml:space="preserve">
          <source>Executes a GET request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">GET 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="010946c0e51ea95b0897c3a0d7b0c3a1a73fcb81" translate="yes" xml:space="preserve">
          <source>Executes a GET request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a GET request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19516027e6dcbbe7d64802d787eaebe3aa8ae447" translate="yes" xml:space="preserve">
          <source>Executes a GET request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">양식 데이터로 GET 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44ea600512f875f8aec54cec763920428013fbed" translate="yes" xml:space="preserve">
          <source>Executes a GET request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">양식 데이터로 GET 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b51ef25461044359f06b67865703aaa1356f623e" translate="yes" xml:space="preserve">
          <source>Executes a GET request with form data and yields the response to the block.</source>
          <target state="translated">폼 데이터로 GET 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e13ecfa5c74877c6d0fb22ac295baefe0b81ca28" translate="yes" xml:space="preserve">
          <source>Executes a GET request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 GET 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="43eabccb9a2922c6d2e3eea7d5a55946e1acd9d3" translate="yes" xml:space="preserve">
          <source>Executes a GET request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 GET 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="26d14863fde42af5a338249a38206d79d9d73657" translate="yes" xml:space="preserve">
          <source>Executes a GET request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a GET request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="87ea8ba13101afe59c9a95fea60eec16733a5b3c" translate="yes" xml:space="preserve">
          <source>Executes a GET request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a GET request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="b005ad425d1e82fc880ec9e2bb6dba83c602be9c" translate="yes" xml:space="preserve">
          <source>Executes a GET request.</source>
          <target state="translated">GET 요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7b435bf9fc0352649135641cb9c837ff19a781bb" translate="yes" xml:space="preserve">
          <source>Executes a GET request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">GET 요청을 실행합니다. 응답에는 본문이 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 있으며 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="954e6c044281a3d39677f7eb6287a2b7243e4c16" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request and yields the response to the block.</source>
          <target state="translated">HEAD 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4c29c8fd1c8b67a4c58649146c2d00ffd95cc805" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">HEAD 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="d77ced263d6fd185eb6f7070d2ed1e2e4893a5ac" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a HEAD request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b74cfbd28aff6c502fa9585524cd61ce013e98a6" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">폼 데이터로 HEAD 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="39d04e6c54bd3661dc98b434d01affad4e5de4c1" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 HEAD 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c04b7a893147e138e86d21189f8b670831f4a36f" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request with form data and yields the response to the block.</source>
          <target state="translated">폼 데이터로 HEAD 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b802fa7dc7ff78aa395dc9fd8d8dc68222b16735" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 HEAD 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="93fc9a242551560eea74b538e0ae75a8462123d3" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 HEAD 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4898539e2926287f746da421f87b137a287d075" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a HEAD request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="440422a2c0f226de42afbe6b577f3fc9a3f72e49" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a HEAD request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="24cbf081f7c4f5a2e958e4029dc6cd258897d69c" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request.</source>
          <target state="translated">HEAD 요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="cb7a397261cd4076631b09665be00d47fc7ecb48" translate="yes" xml:space="preserve">
          <source>Executes a HEAD request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">HEAD 요청을 실행합니다. 응답에는 본문이 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 있으며 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="5757fa6d72b140b3d641aa3c35cbb16886cb9517" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request and yields the response to the block.</source>
          <target state="translated">OPTIONS 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d922e7298b49a33bbd98e7f9866f6a7374b37eea" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">OPTIONS 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="f9a25596de42565a7f72bd16c1458a840b36b2cc" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a OPTIONS request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="236890cff02d4a7d5c25ba3c873481aedf7473e1" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">양식 데이터로 OPTIONS 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="181496ee1236c8e059c1ab30bdf27d16ec89b60a" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">양식 데이터로 OPTIONS 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 . &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e018714869e2020d8367e335a0495201504da3f" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request with form data and yields the response to the block.</source>
          <target state="translated">폼 데이터로 OPTIONS 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="67925765f68705a360fc20bb3f4da05601d5eef6" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 OPTIONS 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="93fecb3a4c9bcefedf59a5cb8620ce79aa156bc1" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 OPTIONS 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe52ae1c23789dc2554a3aefc8722fadfdfe05b5" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a OPTIONS request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="126a29a82e670b936264364f05847cca6b2bbe9e" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a OPTIONS request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="3a5d78a0f520c6fa0e9ed25f538491c7e72befe9" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request.</source>
          <target state="translated">OPTIONS 요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f0b29a646065afe475560ad2cc34c809f2c33eab" translate="yes" xml:space="preserve">
          <source>Executes a OPTIONS request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">OPTIONS 요청을 실행합니다. 응답에는 본문이 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 있으며 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="695df8d91f95afda3580d7cf8a3d74d6bb4034ac" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request and yields the response to the block.</source>
          <target state="translated">PATCH 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="57216753e412fab7847131aa42b38229faec4851" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">PATCH 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="960b4aeca3e8eebf118e16397537e1ccbf48a772" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a PATCH request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ecaaf2b65206f2b968c11804e4c52901e8e9fb3" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">양식 데이터로 PATCH 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1bd6922a0e68e858557f0b52edc10899ab292a0f" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">양식 데이터로 PATCH 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b049647b791926b88246a63cec4e0a2b624c184d" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request with form data and yields the response to the block.</source>
          <target state="translated">폼 데이터로 PATCH 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8b2f2b2249f9f66507018fcd6c723ec5f1759e68" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 PATCH 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb703e369a8e4fe155d88e2ac4737f85d38250cd" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 PATCH 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e8befa4583a2aa373ab3e476a902994fd1d2273" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a PATCH request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="9ace0e44aeaa39c34e1ca0231b4058a7b0fb92a0" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a PATCH request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="e846526029e2332c29ea42e1d8c71a88f275f961" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request.</source>
          <target state="translated">PATCH 요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="03c0ae16713f9e7fdc2239155a6929ea949b44c7" translate="yes" xml:space="preserve">
          <source>Executes a PATCH request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">PATCH 요청을 실행합니다. 응답에는 본문이 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 있으며 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="d44d0da939963422666b2a6eef00d1eac7abfa9f" translate="yes" xml:space="preserve">
          <source>Executes a POST request and yields the response to the block.</source>
          <target state="translated">POST 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9fd9b778831b5e8dd5ec95c67e564356479b46ba" translate="yes" xml:space="preserve">
          <source>Executes a POST request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">POST 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="002074d59d78e97066554a7fb12914cc5d3be59d" translate="yes" xml:space="preserve">
          <source>Executes a POST request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a POST request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbf68c0088f0b733c6181c5dd711a781ace0845d" translate="yes" xml:space="preserve">
          <source>Executes a POST request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">양식 데이터로 POST 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="86398897a03783f9f3e1f0bbd569450bf97062af" translate="yes" xml:space="preserve">
          <source>Executes a POST request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">양식 데이터로 POST 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8d8480c60a20a99f5153367bfa9acee9448903f" translate="yes" xml:space="preserve">
          <source>Executes a POST request with form data and yields the response to the block.</source>
          <target state="translated">양식 데이터로 POST 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e21d65ec2ee3678c1d3d97619408372c8267d9c2" translate="yes" xml:space="preserve">
          <source>Executes a POST request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">양식 데이터로 POST 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="68c5b4cff8dbd3a902e82e3535d992cf28ffc50a" translate="yes" xml:space="preserve">
          <source>Executes a POST request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">양식 데이터로 POST 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e04f78ee94ee1a0d188d1037ca3210a62dc8a0f7" translate="yes" xml:space="preserve">
          <source>Executes a POST request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a POST request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="7f980a181b4b4cac68e5a00b11aaab05b8f752a6" translate="yes" xml:space="preserve">
          <source>Executes a POST request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a POST request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="9ec9cf7e3618145285dcff8ccb44a71173672762" translate="yes" xml:space="preserve">
          <source>Executes a POST request.</source>
          <target state="translated">POST 요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="98b833a8ac859f6f03e562a894798df0e3167606" translate="yes" xml:space="preserve">
          <source>Executes a POST request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">POST 요청을 실행합니다. 응답에는 본문이 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 있으며 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="faa06852574c0314b082183ba5c3ec46c68447f6" translate="yes" xml:space="preserve">
          <source>Executes a PUT request and yields the response to the block.</source>
          <target state="translated">PUT 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4b608b1ff5a320be8192f3ab7ab771b319c21bbd" translate="yes" xml:space="preserve">
          <source>Executes a PUT request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">PUT 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="1b24adc46808820136bcf7ae56bb1e2384713489" translate="yes" xml:space="preserve">
          <source>Executes a PUT request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a PUT request and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0de38c6b9684ef39739c6c6d8a53530445e8765" translate="yes" xml:space="preserve">
          <source>Executes a PUT request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">폼 데이터로 PUT 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d5998c79e50ef240f5f9bf69bdad30060d054227" translate="yes" xml:space="preserve">
          <source>Executes a PUT request with form data and returns a &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 PUT 요청을 실행하고 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;Response&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9856e60da09a6946b203e59a1ce45b8ad76fded" translate="yes" xml:space="preserve">
          <source>Executes a PUT request with form data and yields the response to the block.</source>
          <target state="translated">폼 데이터로 PUT 요청을 실행하고 블록에 대한 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="35bebc0b4d439e98df9526c475f8443abc4e841b" translate="yes" xml:space="preserve">
          <source>Executes a PUT request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 PUT 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-Type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6d92dd60b2d6fd894308b7d4ebde62935d23237" translate="yes" xml:space="preserve">
          <source>Executes a PUT request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">폼 데이터로 PUT 요청을 실행하고 블록에 대한 응답을 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다. &quot;Content-type&quot;헤더는 &quot;application / x-www-form-urlencoded&quot;로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="546dadd2e8117104b90b6954aedc4f277c47c003" translate="yes" xml:space="preserve">
          <source>Executes a PUT request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a PUT request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-Type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="978a890d512bd2cca9952617066dcf3ced9cc5d8" translate="yes" xml:space="preserve">
          <source>Executes a PUT request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;. The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">Executes a PUT request with form data and yields the response to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; . The &quot;Content-type&quot; header is set to &quot;application/x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="904bca9cea160d3d8fceeed93dbbeed20c974a67" translate="yes" xml:space="preserve">
          <source>Executes a PUT request.</source>
          <target state="translated">PUT 요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f4fb864ecef58c4bbe4d6706adc121e20a039220" translate="yes" xml:space="preserve">
          <source>Executes a PUT request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">PUT 요청을 실행합니다. 응답에는 본문이 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 있으며 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7b0dcec7511d0ea931f7ec97f8738cf043117c7" translate="yes" xml:space="preserve">
          <source>Executes a process and waits for it to complete.</source>
          <target state="translated">프로세스를 실행하고 완료 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="c7bb54e366a3ce80e0ad5261d230d22b11e27b5c" translate="yes" xml:space="preserve">
          <source>Executes a process, yields the block, and then waits for it to finish.</source>
          <target state="translated">프로세스를 실행하고 블록을 생성 한 후 완료 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="a2b1a19fb31c1067c36bedfd4b740605b1b7e4de" translate="yes" xml:space="preserve">
          <source>Executes a request request and yields an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; to the block.</source>
          <target state="translated">요청 요청을 실행 하고 블록에 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="436657335f190e4c6b25ea46d39a30783fb34045" translate="yes" xml:space="preserve">
          <source>Executes a request request and yields an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">요청 요청을 실행 하고 블록에 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 를 생성합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="26ec71bdb1daa686962de62a5c80df8719b9a7fd" translate="yes" xml:space="preserve">
          <source>Executes a request request and yields an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a request request and yields an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; to the block. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5623ea8979d1a5a538d1db04c5d910a911b9daad" translate="yes" xml:space="preserve">
          <source>Executes a request.</source>
          <target state="translated">요청을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3506ebef59c53a5ae98fb47a6ccf54fff87628fe" translate="yes" xml:space="preserve">
          <source>Executes a request. The response will have its body as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, accessed via &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">요청을 실행합니다. 응답은 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; 를 통해 액세스되는 본문을 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 으로 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="eb64361bd7015069081dea362e7395fac7e30f97" translate="yes" xml:space="preserve">
          <source>Executes a request. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">요청을 실행합니다. 응답의 본문은 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 되는 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="c609ffb68162d27456317701365c857df22c5e68" translate="yes" xml:space="preserve">
          <source>Executes a request. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Executes a request. The response will have its body as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; accessed via &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f3aa335328508d2840042aa96ec2e619e8ca4e2" translate="yes" xml:space="preserve">
          <source>Executes a system command and returns the output as a &lt;code&gt;&lt;a href=&quot;macros/macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">시스템 명령을 실행하고 출력을 &lt;code&gt;&lt;a href=&quot;macros/macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2baefa0d94921619c6b2a2df42ec1f3cd8164bcd" translate="yes" xml:space="preserve">
          <source>Executes a system command and returns the output as a &lt;code&gt;&lt;a href=&quot;macros/macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt;. Gives a compile-time error if the command failed to execute.</source>
          <target state="translated">시스템 명령을 실행하고 출력을 &lt;code&gt;&lt;a href=&quot;macros/macroid&quot;&gt;MacroId&lt;/a&gt;&lt;/code&gt; 로 반환합니다 . 명령 실행에 실패하면 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2e7de08f427900719c163f77cac1db3da4a7ae2b" translate="yes" xml:space="preserve">
          <source>Executes the given block after each spec in the current context runs.</source>
          <target state="translated">Executes the given block after each spec in the current context runs.</target>
        </trans-unit>
        <trans-unit id="261cecc4c33f4a226408e22fb65b10c7948832af" translate="yes" xml:space="preserve">
          <source>Executes the given block after the last spec in the current context runs.</source>
          <target state="translated">Executes the given block after the last spec in the current context runs.</target>
        </trans-unit>
        <trans-unit id="faa56c3ef30f905147f7ea29b17f3f54e228e81f" translate="yes" xml:space="preserve">
          <source>Executes the given block before each spec in the current context runs.</source>
          <target state="translated">Executes the given block before each spec in the current context runs.</target>
        </trans-unit>
        <trans-unit id="c3a0fd1817051a7c549fd7ad905a2d47e15b0cb1" translate="yes" xml:space="preserve">
          <source>Executes the given block before the first spec in the current context runs.</source>
          <target state="translated">Executes the given block before the first spec in the current context runs.</target>
        </trans-unit>
        <trans-unit id="d37e5b963b532a0d4e28bdae18481f0d86fa0653" translate="yes" xml:space="preserve">
          <source>Executes the given block when each spec in the current context runs.</source>
          <target state="translated">Executes the given block when each spec in the current context runs.</target>
        </trans-unit>
        <trans-unit id="3462e0d18767dd9fefc08c9fa6f0cb2317b2fbd2" translate="yes" xml:space="preserve">
          <source>Executes the given block when the current context runs.</source>
          <target state="translated">Executes the given block when the current context runs.</target>
        </trans-unit>
        <trans-unit id="99bb99ec343a0ab634a5cd2e6f472e685d27b548" translate="yes" xml:space="preserve">
          <source>Executes the given command in a subshell.</source>
          <target state="translated">주어진 명령을 서브 쉘에서 실행합니다.</target>
        </trans-unit>
        <trans-unit id="da3f56bfefcd8f3fae06e888a429495d33691844" translate="yes" xml:space="preserve">
          <source>Executes the given command in a subshell. Standard input, output and error are inherited. Returns &lt;code&gt;true&lt;/code&gt; if the command gives zero exit code, &lt;code&gt;false&lt;/code&gt; otherwise. The special &lt;code&gt;$?&lt;/code&gt; variable is set to a &lt;code&gt;&lt;a href=&quot;process/status&quot;&gt;Process::Status&lt;/a&gt;&lt;/code&gt; associated with this execution.</source>
          <target state="translated">주어진 명령을 서브 쉘에서 실행합니다. 표준 입력, 출력 및 오류가 상속됩니다. 명령이 종료 코드를 제공 하지 않으면 &lt;code&gt;false&lt;/code&gt; 그렇지 않으면 false를 리턴 &lt;code&gt;true&lt;/code&gt; . 특별한 &lt;code&gt;$?&lt;/code&gt; 변수는 이 실행과 관련된 &lt;code&gt;&lt;a href=&quot;process/status&quot;&gt;Process::Status&lt;/a&gt;&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="e4aad4ea6e357b8f2217087f131c89cb4ed08273" translate="yes" xml:space="preserve">
          <source>Executes the main user code.</source>
          <target state="translated">기본 사용자 코드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f7907c9ea316296e3955c73352c27ff7f7879f7e" translate="yes" xml:space="preserve">
          <source>Executes the main user code. This normally is executed after initializing the GC and before executing &lt;code&gt;at_exit&lt;/code&gt; handlers.</source>
          <target state="translated">기본 사용자 코드를 실행합니다. 이것은 일반적으로 GC를 초기화 한 후 &lt;code&gt;at_exit&lt;/code&gt; 핸들러 를 실행하기 전에 실행 됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a81397abb244edb78c9e29e3ebb081b8098c3f2" translate="yes" xml:space="preserve">
          <source>Executes the wrapped example group, possibly executing other &lt;code&gt;around_all&lt;/code&gt; hooks before that.</source>
          <target state="translated">Executes the wrapped example group, possibly executing other &lt;code&gt;around_all&lt;/code&gt; hooks before that.</target>
        </trans-unit>
        <trans-unit id="26d784d1a37eb18370d139eed8adee1278d5c5f6" translate="yes" xml:space="preserve">
          <source>Executes the wrapped example, possibly executing other &lt;code&gt;around_each&lt;/code&gt; hooks before that.</source>
          <target state="translated">Executes the wrapped example, possibly executing other &lt;code&gt;around_each&lt;/code&gt; hooks before that.</target>
        </trans-unit>
        <trans-unit id="cb8237666999330a5083f0cd9d7efd4a698e2cb7" translate="yes" xml:space="preserve">
          <source>Execution of a program</source>
          <target state="translated">프로그램의 실행</target>
        </trans-unit>
        <trans-unit id="95e477bde23f11bb4c31728c747f61253fec747a" translate="yes" xml:space="preserve">
          <source>Exit status:</source>
          <target state="translated">종료 상태 :</target>
        </trans-unit>
        <trans-unit id="7648d177d3d77b812fc7d451b11c5e4f4fca9a4e" translate="yes" xml:space="preserve">
          <source>Expands the node to a &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; that can be searched with XPath etc.</source>
          <target state="translated">XPath 등을 사용하여 검색 할 수 있는 &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; 노드를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="7a8d91de20848911ed12529dd991f3c0815e1c23" translate="yes" xml:space="preserve">
          <source>Expands the node to a &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; that can be searched with XPath etc. The returned &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; is only valid until the next call to &lt;code&gt;&lt;a href=&quot;reader#read-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">XPath 등을 사용하여 검색 할 수 있는 &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; 노드를 확장합니다 . 반환 된 &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; 는 다음 &lt;code&gt;&lt;a href=&quot;reader#read-instance-method&quot;&gt;#read&lt;/a&gt;&lt;/code&gt; 호출까지만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="ad7c70de24ef0f3d5aeaa4dfea7a9644a78c2cd0" translate="yes" xml:space="preserve">
          <source>Expectations</source>
          <target state="translated">Expectations</target>
        </trans-unit>
        <trans-unit id="42146fdc07d1dfab260bfe1647093f316a0c6223" translate="yes" xml:space="preserve">
          <source>Expectations are used by &lt;code&gt;&lt;a href=&quot;objectextensions#should(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;Spec::ObjectExtensions#should&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;objectextensions#should_not(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;Spec::ObjectExtensions#should_not&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;objectextensions#should(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;Spec::ObjectExtensions#should&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;objectextensions#should_not(expectation,file=__FILE__,line=__LINE__)-instance-method&quot;&gt;Spec::ObjectExtensions#should_not&lt;/a&gt;&lt;/code&gt; 의해 예상이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e25819a546691333cd8fa3c2922913c83ac1389" translate="yes" xml:space="preserve">
          <source>Expectations are used by &lt;code&gt;&lt;a href=&quot;objectextensions#should(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__):TforallT-instance-method&quot;&gt;Spec::ObjectExtensions#should&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;objectextensions#should_not(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__)forallT-instance-method&quot;&gt;Spec::ObjectExtensions#should_not&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Expectations are used by &lt;code&gt;&lt;a href=&quot;objectextensions#should(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__):TforallT-instance-method&quot;&gt;Spec::ObjectExtensions#should&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;objectextensions#should_not(expectation:BeAExpectation(T),file=__FILE__,line=__LINE__)forallT-instance-method&quot;&gt;Spec::ObjectExtensions#should_not&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0884080350228276cd1ac45b454322e784431126" translate="yes" xml:space="preserve">
          <source>Expectations be_a</source>
          <target state="translated">기대 be_a</target>
        </trans-unit>
        <trans-unit id="6886c79b4d69d10fc2bcd90f64d06d1250b6680c" translate="yes" xml:space="preserve">
          <source>Expectations define if the value being tested (&lt;em&gt;actual&lt;/em&gt;) matches a certain value or specific criteria.</source>
          <target state="translated">기대 값은 테스트중인 값 ( &lt;em&gt;실제&lt;/em&gt; )이 특정 값 또는 특정 기준과 일치 하는지 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="3da47e7066c6f744beadcce337e9d454bedfbd01" translate="yes" xml:space="preserve">
          <source>Expectations#be</source>
          <target state="translated">Expectations#be</target>
        </trans-unit>
        <trans-unit id="b7a9024a0ee1e3be2b3c4407e7a04bc093b9f051" translate="yes" xml:space="preserve">
          <source>Expectations#be_close</source>
          <target state="translated">Expectations#be_close</target>
        </trans-unit>
        <trans-unit id="c56c7f065b750234817b5ce7869e094fcedbdddc" translate="yes" xml:space="preserve">
          <source>Expectations#be_empty</source>
          <target state="translated">Expectations#be_empty</target>
        </trans-unit>
        <trans-unit id="a2e72ccbff2c7ddcfd96f97f27ebfaf20a18c75b" translate="yes" xml:space="preserve">
          <source>Expectations#be_false</source>
          <target state="translated">Expectations#be_false</target>
        </trans-unit>
        <trans-unit id="d7f3bbe102a87a2e7d5daea4577aad83ab7a433a" translate="yes" xml:space="preserve">
          <source>Expectations#be_falsey</source>
          <target state="translated">Expectations#be_falsey</target>
        </trans-unit>
        <trans-unit id="e38766b5beddfafd0d213a12cd0b8a0ccde8f03f" translate="yes" xml:space="preserve">
          <source>Expectations#be_nil</source>
          <target state="translated">Expectations#be_nil</target>
        </trans-unit>
        <trans-unit id="10c0e8d4111ea33ad4935e3b1c28341aa429217c" translate="yes" xml:space="preserve">
          <source>Expectations#be_true</source>
          <target state="translated">Expectations#be_true</target>
        </trans-unit>
        <trans-unit id="c4f4def40dae21a25f9cf68ff8e9f6089029d85d" translate="yes" xml:space="preserve">
          <source>Expectations#be_truthy</source>
          <target state="translated">Expectations#be_truthy</target>
        </trans-unit>
        <trans-unit id="cba54153424b54c22cc23b3d29db603f289aa2e8" translate="yes" xml:space="preserve">
          <source>Expectations#contain</source>
          <target state="translated">Expectations#contain</target>
        </trans-unit>
        <trans-unit id="53a7c7f7d3bc9b605b272f38f525f8113c76c4c0" translate="yes" xml:space="preserve">
          <source>Expectations#end_with</source>
          <target state="translated">Expectations#end_with</target>
        </trans-unit>
        <trans-unit id="2c7eb63fa6516e2c0d207b141f18b07d3683969d" translate="yes" xml:space="preserve">
          <source>Expectations#eq</source>
          <target state="translated">Expectations#eq</target>
        </trans-unit>
        <trans-unit id="fea8d0d6e3ce0f61aaef65f165d9c690acc2e74f" translate="yes" xml:space="preserve">
          <source>Expectations#expect_raises</source>
          <target state="translated">Expectations#expect_raises</target>
        </trans-unit>
        <trans-unit id="ede390d8c842458a026d1944590691122ba28917" translate="yes" xml:space="preserve">
          <source>Expectations#match</source>
          <target state="translated">Expectations#match</target>
        </trans-unit>
        <trans-unit id="de613d5d231329e7aef0618fe615ea8890d0db91" translate="yes" xml:space="preserve">
          <source>Expectations#start_with</source>
          <target state="translated">Expectations#start_with</target>
        </trans-unit>
        <trans-unit id="fda02bbdaa225f013315d7a37f7ad94174c150e8" translate="yes" xml:space="preserve">
          <source>Expecting errors</source>
          <target state="translated">예상되는 오류</target>
        </trans-unit>
        <trans-unit id="db145433ac73955f20ab7d5f2cf79fe75e7b15ab" translate="yes" xml:space="preserve">
          <source>Expects to be called on a named tuple whose values are types, creates a tuple from the given hash, with types casted appropriately.</source>
          <target state="translated">값이 유형 인 명명 된 튜플에서 호출 될 것으로 예상되는 유형으로 적절한 해시에서 튜플을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bd67db393c94c5b4df405d64de987e05b79adaef" translate="yes" xml:space="preserve">
          <source>Expects to be called on a named tuple whose values are types, creates a tuple from the given hash, with types casted appropriately. The hash keys must be either symbols or strings.</source>
          <target state="translated">값이 유형 인 명명 된 튜플에서 호출 될 것으로 예상되는 유형으로 적절한 해시에서 튜플을 만듭니다. 해시 키는 기호 또는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="d7b9009a8e73d366dd57a9f6633036b0a9b722c4" translate="yes" xml:space="preserve">
          <source>Expects to be called on a tuple of types, creates a tuple from the given array, with types casted appropriately.</source>
          <target state="translated">형식의 튜플에서 호출 될 것으로 예상되는 형식으로 지정된 배열에서 튜플을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="43d6fe903cc9d1c2eca905fe5acaed9d12016ede" translate="yes" xml:space="preserve">
          <source>Experimental features are subject to change or be removed despite the &lt;a href=&quot;https://semver.org/&quot;&gt;https://semver.org/&lt;/a&gt; guarantees.</source>
          <target state="translated">Experimental features are subject to change or be removed despite the &lt;a href=&quot;https://semver.org/&quot;&gt;https://semver.org/&lt;/a&gt; guarantees.</target>
        </trans-unit>
        <trans-unit id="3743f0126f158028c3a6f8776f8393243f47fb32" translate="yes" xml:space="preserve">
          <source>Explicit array literals in loops is one way to create temporary objects, but these can also be created via method calls. For example &lt;code&gt;Hash#keys&lt;/code&gt; will return a new array with the keys each time it's invoked. Instead of doing that, you can use &lt;code&gt;Hash#each_key&lt;/code&gt;, &lt;code&gt;Hash#has_key?&lt;/code&gt; and other methods.</source>
          <target state="translated">루프의 명시 적 배열 리터럴은 임시 객체를 생성하는 한 가지 방법이지만 메소드 호출을 통해 생성 할 수도 있습니다. 예를 들어 &lt;code&gt;Hash#keys&lt;/code&gt; 는 호출 될 때마다 키 가있는 새 배열을 반환합니다. 그렇게하는 대신 &lt;code&gt;Hash#each_key&lt;/code&gt; , &lt;code&gt;Hash#has_key?&lt;/code&gt; 그리고 다른 방법들.</target>
        </trans-unit>
        <trans-unit id="27d438d70b1a5edba65606d493a7b9808bcd6e22" translate="yes" xml:space="preserve">
          <source>Explicit commit and rollback</source>
          <target state="translated">명시 적 커밋 및 롤백</target>
        </trans-unit>
        <trans-unit id="5e759cb36b4c256f4255097bcb3bcf6e8cbaa13d" translate="yes" xml:space="preserve">
          <source>Explicit types can be specified by immediately following the closing bracket with &lt;code&gt;of&lt;/code&gt; (separated by whitespace), a key type (&lt;code&gt;K&lt;/code&gt;) followed by &lt;code&gt;=&amp;gt;&lt;/code&gt; as delimiter and a value type (&lt;code&gt;V&lt;/code&gt;). This overwrites the inferred types and can be used for example to create a hash that holds only some types initially but can accept other types as well.</source>
          <target state="translated">명시 적 형식으로 즉시 폐쇄 브래킷에 따라 지정 될 수 &lt;code&gt;of&lt;/code&gt; (공백으로 구분), 키 입력 ( &lt;code&gt;K&lt;/code&gt; 는 ) 다음 &lt;code&gt;=&amp;gt;&lt;/code&gt; 분리 및 값 유형 AS ( &lt;code&gt;V&lt;/code&gt; ). 이는 유추 된 유형을 덮어 쓰고 예를 들어 일부 유형 만 초기에 보유하지만 다른 유형도 허용하는 해시를 작성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34533450ac1f4cb8a131c86d48accad539bed843" translate="yes" xml:space="preserve">
          <source>Exponential</source>
          <target state="translated">Exponential</target>
        </trans-unit>
        <trans-unit id="6523456f314cae2648da15bd6a91c807fa899514" translate="yes" xml:space="preserve">
          <source>Exponential form conversion</source>
          <target state="translated">지수 형태 변환</target>
        </trans-unit>
        <trans-unit id="53faffff805bf81d40c635f1c7d2ad6da93853a2" translate="yes" xml:space="preserve">
          <source>Exponential form conversion:</source>
          <target state="translated">Exponential form conversion:</target>
        </trans-unit>
        <trans-unit id="19b9173fe04a1d0c2978b4dcd65bb9ae968a7cbb" translate="yes" xml:space="preserve">
          <source>Extended Modules</source>
          <target state="translated">확장 모듈</target>
        </trans-unit>
        <trans-unit id="9701324532f19e419b11cf9c15f094c8208b6f7d" translate="yes" xml:space="preserve">
          <source>Extended range of the JEDEC units (&lt;code&gt;K&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;, &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;) which equals to the prefixes of the SI system except for uppercase &lt;code&gt;K&lt;/code&gt; and is based on powers of 1024.</source>
          <target state="translated">대문자 &lt;code&gt;K&lt;/code&gt; 를 제외한 SI 시스템의 접두사와 같고 1024의 거듭 제곱을 기반으로 하는 JEDEC 장치 ( &lt;code&gt;K&lt;/code&gt; , &lt;code&gt;M&lt;/code&gt; , &lt;code&gt;G&lt;/code&gt; , &lt;code&gt;T&lt;/code&gt; , &lt;code&gt;P&lt;/code&gt; , &lt;code&gt;E&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;Y&lt;/code&gt; ) 의 확장 된 범위 .</target>
        </trans-unit>
        <trans-unit id="d775d0d0e8d609ee45b518ead9e9933fc56377a8" translate="yes" xml:space="preserve">
          <source>Extends the current &lt;code&gt;&lt;a href=&quot;../fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; logging context.</source>
          <target state="translated">Extends the current &lt;code&gt;&lt;a href=&quot;../fiber&quot;&gt;Fiber&lt;/a&gt;&lt;/code&gt; logging context.</target>
        </trans-unit>
        <trans-unit id="6905479558c83b370a9902792d46ae6444edc719" translate="yes" xml:space="preserve">
          <source>Extensions: &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;JSON::Serializable::Strict&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;JSON::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">확장 : &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;JSON::Serializable::Strict&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;JSON::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ee01760e8b17bdfd7cee2a94ae542cddd5d12a1" translate="yes" xml:space="preserve">
          <source>Extensions: &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;YAML::Serializable::Strict&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;YAML::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">확장 : &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;YAML::Serializable::Strict&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;YAML::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10c775d4812d154b017112d4a334352b32b068f0" translate="yes" xml:space="preserve">
          <source>Extern</source>
          <target state="translated">Extern</target>
        </trans-unit>
        <trans-unit id="a2c3a77ac174c7a8b0704c3be89754d824f5617c" translate="yes" xml:space="preserve">
          <source>External names</source>
          <target state="translated">외부 이름</target>
        </trans-unit>
        <trans-unit id="7e18e4bcf6fc6abbedb304ee0049475038a2ea12" translate="yes" xml:space="preserve">
          <source>Extra named arguments are placed in the double splat method argument, as a &lt;a href=&quot;literals/named_tuple&quot;&gt;NamedTuple&lt;/a&gt;, if it exists, otherwise it's an error.</source>
          <target state="translated">여분의 명명 된 인수는 존재하는 경우 &lt;a href=&quot;literals/named_tuple&quot;&gt;NamedTuple&lt;/a&gt; 로 이중 splat 메소드 인수에 배치되며 그렇지 않으면 오류입니다.</target>
        </trans-unit>
        <trans-unit id="ce1513b151859bd98f187273dbbfb3c4cd9d3742" translate="yes" xml:space="preserve">
          <source>Extracts a string corresponding to string[offset,&lt;em&gt;len&lt;/em&gt;], without advancing the scan offset.</source>
          <target state="translated">스캔 오프셋을 진행시키지 않고 string [offset, &lt;em&gt;len&lt;/em&gt; ]에 해당하는 문자열을 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="5cfac8e470c53ee9d436c2da42960acb249a62ca" translate="yes" xml:space="preserve">
          <source>Extracts the multipart boundary from the Content-Type header.</source>
          <target state="translated">Content-Type 헤더에서 멀티 파트 경계를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="4ec456785c21a5601bc7a48bdf3db7ec1f6993a4" translate="yes" xml:space="preserve">
          <source>Extracts the multipart boundary from the Content-Type header. May return &lt;code&gt;nil&lt;/code&gt; is the boundary was not found.</source>
          <target state="translated">Content-Type 헤더에서 멀티 파트 경계를 추출합니다. 경계가 발견되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b240bd1aef549aae787777e72c514ed278b4c9e" translate="yes" xml:space="preserve">
          <source>FIXME</source>
          <target state="translated">FIXME</target>
        </trans-unit>
        <trans-unit id="b9bf749cdfebaa696b9c19a7ab7c84d9535caf44" translate="yes" xml:space="preserve">
          <source>Fails an example.</source>
          <target state="translated">예제를 실패합니다.</target>
        </trans-unit>
        <trans-unit id="4efb6cb7c018f0c686d4e9d68b615950223b4dd1" translate="yes" xml:space="preserve">
          <source>Family</source>
          <target state="translated">Family</target>
        </trans-unit>
        <trans-unit id="23fcfcd79d98d6a49db35ad02fd2b9e06763d8d6" translate="yes" xml:space="preserve">
          <source>Family#inet6?</source>
          <target state="translated">Family#inet6?</target>
        </trans-unit>
        <trans-unit id="da7384cd6da02e44204910eefc8200a8269b76e5" translate="yes" xml:space="preserve">
          <source>Family#inet?</source>
          <target state="translated">Family#inet?</target>
        </trans-unit>
        <trans-unit id="6f920896cc80aa8717844e483cfb5f537eb83215" translate="yes" xml:space="preserve">
          <source>Family#unix?</source>
          <target state="translated">Family#unix?</target>
        </trans-unit>
        <trans-unit id="75254695f7c410bfdf581acfdee0e1c5a8ecb657" translate="yes" xml:space="preserve">
          <source>Family#unspec?</source>
          <target state="translated">Family#unspec?</target>
        </trans-unit>
        <trans-unit id="8db6a2f1d3b7e19e518ffa8979d7ad15359af460" translate="yes" xml:space="preserve">
          <source>Fast</source>
          <target state="translated">Fast</target>
        </trans-unit>
        <trans-unit id="a11af345be0ad2900c226acd3c3f760f4ccbb170" translate="yes" xml:space="preserve">
          <source>Fiber</source>
          <target state="translated">Fiber</target>
        </trans-unit>
        <trans-unit id="11f7306d24aafce1a0f71157ab0f79711dd19218" translate="yes" xml:space="preserve">
          <source>Fiber#name</source>
          <target state="translated">Fiber#name</target>
        </trans-unit>
        <trans-unit id="8887513c0b6df47e220790fc51d882c775f36862" translate="yes" xml:space="preserve">
          <source>Fiber#to_s</source>
          <target state="translated">Fiber#to_s</target>
        </trans-unit>
        <trans-unit id="e55b60e686061e28ab8adbb760164d1ac62e2e3f" translate="yes" xml:space="preserve">
          <source>Fiber.new</source>
          <target state="translated">Fiber.new</target>
        </trans-unit>
        <trans-unit id="8aaed73e3b6d71eeadbe74a10bdb1f1c7e83575f" translate="yes" xml:space="preserve">
          <source>Fiber::Context</source>
          <target state="translated">Fiber::Context</target>
        </trans-unit>
        <trans-unit id="4f4dcff63e10d7087f0a9efd049d6a32685ce6e2" translate="yes" xml:space="preserve">
          <source>Fibers</source>
          <target state="translated">Fibers</target>
        </trans-unit>
        <trans-unit id="f26c78d583ab9593f6531a06dc584e3e07694e1f" translate="yes" xml:space="preserve">
          <source>Fibers are cooperative. That means execution can only be drawn from a fiber when it offers it. It can't be interrupted in its execution at random. In order to make concurrency work, fibers must make sure to occasionally provide hooks for the scheduler to swap in other fibers. IO operations like reading from a file descriptor are natural implementations for this and the developer does not need to take further action on that. When IO access can't be served immediately by a buffer, the fiber will automatically wait and yield execution. When IO is ready it's going to be resumed through the event loop.</source>
          <target state="translated">Fibers are cooperative. That means execution can only be drawn from a fiber when it offers it. It can't be interrupted in its execution at random. In order to make concurrency work, fibers must make sure to occasionally provide hooks for the scheduler to swap in other fibers. IO operations like reading from a file descriptor are natural implementations for this and the developer does not need to take further action on that. When IO access can't be served immediately by a buffer, the fiber will automatically wait and yield execution. When IO is ready it's going to be resumed through the event loop.</target>
        </trans-unit>
        <trans-unit id="8a399e34a0a73c0e25037f908f45ccbc2d9dd734" translate="yes" xml:space="preserve">
          <source>Fibers ready to be executed: for example when you spawn a fiber, it's ready to be executed.</source>
          <target state="translated">파이버를 실행할 준비가되었습니다. 예를 들어 파이버를 스폰하면 바로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03b04fe1e89c86672da71a592da959564dab03d9" translate="yes" xml:space="preserve">
          <source>Fibers that voluntarily asked to wait: this is done with &lt;code&gt;Fiber.yield&lt;/code&gt;, which means &quot;I can continue executing, but I'll give you some time to execute other fibers if you want&quot;.</source>
          <target state="translated">자발적으로 기다린 파이버 :이 작업은 &lt;code&gt;Fiber.yield&lt;/code&gt; 로 수행됩니다. &quot;계속 실행할 수 있지만 원하는 경우 다른 파이버를 실행할 시간이 있습니다&quot;.</target>
        </trans-unit>
        <trans-unit id="c89a4203256e552d231e3ac4b397347ef8e20ded" translate="yes" xml:space="preserve">
          <source>Fibers, unlike threads, are cooperative. Threads are pre-emptive: the operating system might interrupt a thread at any time and start executing another one. A fiber must explicitly tell the Runtime Scheduler to switch to another fiber. For example if there's I/O to be waited on, a fiber will tell the scheduler &quot;Look, I have to wait for this I/O to be available, you continue executing other fibers and come back to me when that I/O is ready&quot;.</source>
          <target state="translated">실과 달리 섬유는 협동 적입니다. 스레드는 선제 적입니다. 운영 체제는 언제든지 스레드를 중단하고 다른 스레드를 실행할 수 있습니다. 파이버는 명시 적으로 런타임 스케줄러에게 다른 파이버로 전환하도록 지시해야합니다. 예를 들어, 대기중인 I / O가있는 경우 파이버는 스케줄러에게 &quot;이 I / O가 사용 가능할 때까지 기다려야합니다. 다른 광섬유를 계속 실행하고 해당 I / O가있을 때 다시 돌아옵니다. 준비된&quot;.</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="e4abf36a5ea54ec41cce22ec0fe706639aba0b93" translate="yes" xml:space="preserve">
          <source>File exists</source>
          <target state="translated">파일이 존재</target>
        </trans-unit>
        <trans-unit id="8a87b64cae5a39a0265ada62f19e089c25fa123c" translate="yes" xml:space="preserve">
          <source>File name too long</source>
          <target state="translated">파일 이름이 너무 깁니다</target>
        </trans-unit>
        <trans-unit id="09b348c5672c25463e2da56eb16482293f291083" translate="yes" xml:space="preserve">
          <source>File paths match the namespace of their contents. Files are named after the class or namespace they define, with &lt;em&gt;underscore-case&lt;/em&gt;.</source>
          <target state="translated">파일 경로는 내용의 네임 스페이스와 일치합니다. 파일은 정의한 클래스 또는 네임 스페이스의 이름을 &lt;em&gt;밑줄로 표시&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a0704a4eaa055ab08e3766911e446737f4f2a445" translate="yes" xml:space="preserve">
          <source>File too large</source>
          <target state="translated">파일이 너무 큽니다</target>
        </trans-unit>
        <trans-unit id="cd30a823d17f61ce12ab4076408f4fa436dd25f0" translate="yes" xml:space="preserve">
          <source>File#[]</source>
          <target state="translated">File#[]</target>
        </trans-unit>
        <trans-unit id="fa7bfe00b6c708a72a124b855555fa58eb149e8b" translate="yes" xml:space="preserve">
          <source>File#[]?</source>
          <target state="translated">File#[]?</target>
        </trans-unit>
        <trans-unit id="a7236bea59448e641af9ee6a2ba54d9c6a515c02" translate="yes" xml:space="preserve">
          <source>File#close</source>
          <target state="translated">File#close</target>
        </trans-unit>
        <trans-unit id="82031dac554e66a08b4b2c9e04d4022f74ebc1c3" translate="yes" xml:space="preserve">
          <source>File#closed?</source>
          <target state="translated">File#closed?</target>
        </trans-unit>
        <trans-unit id="b865f9b2dd3d41ef9950d9f3a844251efe6f3dc3" translate="yes" xml:space="preserve">
          <source>File#comment</source>
          <target state="translated">File#comment</target>
        </trans-unit>
        <trans-unit id="d629ef95df2c21804e8c7221de5ef7584782d52e" translate="yes" xml:space="preserve">
          <source>File#entries</source>
          <target state="translated">File#entries</target>
        </trans-unit>
        <trans-unit id="384eb8623e0376fe5f699ac165e361bf52a698ed" translate="yes" xml:space="preserve">
          <source>File#path</source>
          <target state="translated">File#path</target>
        </trans-unit>
        <trans-unit id="66582c0469f9f6393217a08612df9df205237a33" translate="yes" xml:space="preserve">
          <source>File#size</source>
          <target state="translated">File#size</target>
        </trans-unit>
        <trans-unit id="6988016c431ebd6e6c317325c6e84423081ce115" translate="yes" xml:space="preserve">
          <source>File.copy</source>
          <target state="translated">File.copy</target>
        </trans-unit>
        <trans-unit id="9fbc5d4589c162fcce9da5963c1d8e2c379229e2" translate="yes" xml:space="preserve">
          <source>File.info</source>
          <target state="translated">File.info</target>
        </trans-unit>
        <trans-unit id="f1e49f6b5e0b53f8c0e5d78636df68cdf46b2e59" translate="yes" xml:space="preserve">
          <source>File.join</source>
          <target state="translated">File.join</target>
        </trans-unit>
        <trans-unit id="2f76e0766e66a08115c6090b2b54f1377015c3e4" translate="yes" xml:space="preserve">
          <source>File.link</source>
          <target state="translated">File.link</target>
        </trans-unit>
        <trans-unit id="d3a4f24fc51b86d42ab2b63c25f02cf331e7a9f9" translate="yes" xml:space="preserve">
          <source>File.new</source>
          <target state="translated">File.new</target>
        </trans-unit>
        <trans-unit id="96a922eac195c76af955e957fed70887e6a1650d" translate="yes" xml:space="preserve">
          <source>File.open</source>
          <target state="translated">File.open</target>
        </trans-unit>
        <trans-unit id="a66bb6f49f199599abd88941ce2fa2dadabe4751" translate="yes" xml:space="preserve">
          <source>File.read</source>
          <target state="translated">File.read</target>
        </trans-unit>
        <trans-unit id="c4ac5b96c6d318e21a95c79930fdc0fa5c5eb718" translate="yes" xml:space="preserve">
          <source>File.size</source>
          <target state="translated">File.size</target>
        </trans-unit>
        <trans-unit id="5a6ad1d363dc4d256abf089eeadc6ad42b425d19" translate="yes" xml:space="preserve">
          <source>File::AccessDeniedError</source>
          <target state="translated">File::AccessDeniedError</target>
        </trans-unit>
        <trans-unit id="40ce20d3565051ca3e292f29a50127ce56943cf9" translate="yes" xml:space="preserve">
          <source>File::AlreadyExistsError</source>
          <target state="translated">File::AlreadyExistsError</target>
        </trans-unit>
        <trans-unit id="21ed8dabb690537785810214a01d077c85673667" translate="yes" xml:space="preserve">
          <source>File::BadPatternError</source>
          <target state="translated">File::BadPatternError</target>
        </trans-unit>
        <trans-unit id="24ee78a9eeba7d067a2e663abc741f7314d8675a" translate="yes" xml:space="preserve">
          <source>File::Entry</source>
          <target state="translated">File::Entry</target>
        </trans-unit>
        <trans-unit id="5d29ee091e228fe42a906fc17fe5b9a5c94d91c5" translate="yes" xml:space="preserve">
          <source>File::Entry#open</source>
          <target state="translated">File::Entry#open</target>
        </trans-unit>
        <trans-unit id="2c7bc9a089ecebc200b124af9cce388e6aee37a3" translate="yes" xml:space="preserve">
          <source>File::Error</source>
          <target state="translated">File::Error</target>
        </trans-unit>
        <trans-unit id="56a12d78fbcd4db5a2a3f77147d724cb9de0fb30" translate="yes" xml:space="preserve">
          <source>File::Error#file</source>
          <target state="translated">File::Error#file</target>
        </trans-unit>
        <trans-unit id="d93c33b3986d8a439da34fa1bcb82101c85b85b7" translate="yes" xml:space="preserve">
          <source>File::Error#other</source>
          <target state="translated">File::Error#other</target>
        </trans-unit>
        <trans-unit id="9156d81996cf29526b58cc862c591126f334ade7" translate="yes" xml:space="preserve">
          <source>File::Error.new</source>
          <target state="translated">File::Error.new</target>
        </trans-unit>
        <trans-unit id="42f1f8e9389f43c937223d5966b34bf46bd93b83" translate="yes" xml:space="preserve">
          <source>File::Flags</source>
          <target state="translated">File::Flags</target>
        </trans-unit>
        <trans-unit id="45a497ab20034600d67e01b51493aaca53bbe579" translate="yes" xml:space="preserve">
          <source>File::Info</source>
          <target state="translated">File::Info</target>
        </trans-unit>
        <trans-unit id="1363caf843deb30ad29e215d6a6256b3cf7c7aab" translate="yes" xml:space="preserve">
          <source>File::NotFoundError</source>
          <target state="translated">File::NotFoundError</target>
        </trans-unit>
        <trans-unit id="5a8313ed3c9de5dd20f73d9c47999b86e70d691a" translate="yes" xml:space="preserve">
          <source>File::Type</source>
          <target state="translated">File::Type</target>
        </trans-unit>
        <trans-unit id="3be19f444c1f1fca9334fcd350beec149a67fdb0" translate="yes" xml:space="preserve">
          <source>FileDescriptor</source>
          <target state="translated">FileDescriptor</target>
        </trans-unit>
        <trans-unit id="025b7fa859c06fcbe7d7ba26ff84b51a9cb40c35" translate="yes" xml:space="preserve">
          <source>FileDescriptor cooked_from_tc_mode!</source>
          <target state="translated">FileDescriptor cooked_from_tc_mode!</target>
        </trans-unit>
        <trans-unit id="0592189e9d32a337084cf70036da248a3d46969c" translate="yes" xml:space="preserve">
          <source>FileDescriptor noecho_from_tc_mode!</source>
          <target state="translated">FileDescriptor noecho_from_tc_mode!</target>
        </trans-unit>
        <trans-unit id="f42822ec98b35165fe1dc273407f0493f2384dae" translate="yes" xml:space="preserve">
          <source>FileDescriptor raw_from_tc_mode!</source>
          <target state="translated">FileDescriptor raw_from_tc_mode!</target>
        </trans-unit>
        <trans-unit id="fbbb66078c07364f22cbfdcde36a9313fafda4fd" translate="yes" xml:space="preserve">
          <source>FileDescriptor#blocking</source>
          <target state="translated">FileDescriptor#blocking</target>
        </trans-unit>
        <trans-unit id="561e64544f7e230ab28ad9ce7350da8624ba717a" translate="yes" xml:space="preserve">
          <source>FileDescriptor#blocking=</source>
          <target state="translated">FileDescriptor#blocking=</target>
        </trans-unit>
        <trans-unit id="39244af895c763618d4da8edd2237a00e944d02c" translate="yes" xml:space="preserve">
          <source>FileDescriptor#close_on_exec=</source>
          <target state="translated">FileDescriptor#close_on_exec=</target>
        </trans-unit>
        <trans-unit id="613713095140fa0fc096e21e3b72f80e0699f9e1" translate="yes" xml:space="preserve">
          <source>FileDescriptor#close_on_exec?</source>
          <target state="translated">FileDescriptor#close_on_exec?</target>
        </trans-unit>
        <trans-unit id="a208b44216a1800606e07fa9c2ee06bae561839b" translate="yes" xml:space="preserve">
          <source>FileDescriptor#closed?</source>
          <target state="translated">FileDescriptor#closed?</target>
        </trans-unit>
        <trans-unit id="543641520f3aefb107bdeec62362984fb3e857ce" translate="yes" xml:space="preserve">
          <source>FileDescriptor#cooked</source>
          <target state="translated">FileDescriptor#cooked</target>
        </trans-unit>
        <trans-unit id="07ec42a01e0b6134c0ebe6e2b9f0f84b2eab7dea" translate="yes" xml:space="preserve">
          <source>FileDescriptor#cooked!</source>
          <target state="translated">FileDescriptor#cooked!</target>
        </trans-unit>
        <trans-unit id="14efb983d37c6d49e5069cccf613c940dcd2eef4" translate="yes" xml:space="preserve">
          <source>FileDescriptor#fcntl</source>
          <target state="translated">FileDescriptor#fcntl</target>
        </trans-unit>
        <trans-unit id="e9529937a71316107cfb84a64f00f1cd6ac2c9dc" translate="yes" xml:space="preserve">
          <source>FileDescriptor#fd</source>
          <target state="translated">FileDescriptor#fd</target>
        </trans-unit>
        <trans-unit id="839f6c560485a16fb870f18615370cfb5dd552da" translate="yes" xml:space="preserve">
          <source>FileDescriptor#finalize</source>
          <target state="translated">FileDescriptor#finalize</target>
        </trans-unit>
        <trans-unit id="1dce110e046a74c57ebb8e0e5f6b64e827ad899d" translate="yes" xml:space="preserve">
          <source>FileDescriptor#info</source>
          <target state="translated">FileDescriptor#info</target>
        </trans-unit>
        <trans-unit id="a25ef43065b1029064ea5cba2d2a166a94e3231e" translate="yes" xml:space="preserve">
          <source>FileDescriptor#inspect</source>
          <target state="translated">FileDescriptor#inspect</target>
        </trans-unit>
        <trans-unit id="749505346bb37e2576f319eb748afd454339858c" translate="yes" xml:space="preserve">
          <source>FileDescriptor#noecho</source>
          <target state="translated">FileDescriptor#noecho</target>
        </trans-unit>
        <trans-unit id="133ae7a7f97cfe847ad25a82ca935cf2d75aeae5" translate="yes" xml:space="preserve">
          <source>FileDescriptor#noecho!</source>
          <target state="translated">FileDescriptor#noecho!</target>
        </trans-unit>
        <trans-unit id="b1354893757c619e3e6ad5c15e13f7e19067474e" translate="yes" xml:space="preserve">
          <source>FileDescriptor#pos</source>
          <target state="translated">FileDescriptor#pos</target>
        </trans-unit>
        <trans-unit id="b2a8a1fdd864e28046d36688f3ecbadef56b2aca" translate="yes" xml:space="preserve">
          <source>FileDescriptor#pos=</source>
          <target state="translated">FileDescriptor#pos=</target>
        </trans-unit>
        <trans-unit id="542e4af866c387ae76d5edd243176db711f01aed" translate="yes" xml:space="preserve">
          <source>FileDescriptor#pretty_print</source>
          <target state="translated">FileDescriptor#pretty_print</target>
        </trans-unit>
        <trans-unit id="1c9f7e30b99e615aa88a35652ce18b98b2edcf03" translate="yes" xml:space="preserve">
          <source>FileDescriptor#raw</source>
          <target state="translated">FileDescriptor#raw</target>
        </trans-unit>
        <trans-unit id="5c44995f91029a94f8c02958e18e8dae3d35314a" translate="yes" xml:space="preserve">
          <source>FileDescriptor#raw!</source>
          <target state="translated">FileDescriptor#raw!</target>
        </trans-unit>
        <trans-unit id="0c08225900f7e658ad3dc53aabc7367ce5ed9ea6" translate="yes" xml:space="preserve">
          <source>FileDescriptor#reopen</source>
          <target state="translated">FileDescriptor#reopen</target>
        </trans-unit>
        <trans-unit id="fa4d086a1680195de6f721582aee97b07918c684" translate="yes" xml:space="preserve">
          <source>FileDescriptor#seek</source>
          <target state="translated">FileDescriptor#seek</target>
        </trans-unit>
        <trans-unit id="3a767187efa22e9f2738089dba154a6691eed5a3" translate="yes" xml:space="preserve">
          <source>FileDescriptor#tty?</source>
          <target state="translated">FileDescriptor#tty?</target>
        </trans-unit>
        <trans-unit id="179c326523a9ad3a7741a2d8ae2b55c3a35f0a1c" translate="yes" xml:space="preserve">
          <source>FileDescriptor.fcntl</source>
          <target state="translated">FileDescriptor.fcntl</target>
        </trans-unit>
        <trans-unit id="8f959204ee9f989bea6665daca3d42f63e67d201" translate="yes" xml:space="preserve">
          <source>FileDescriptor.new</source>
          <target state="translated">FileDescriptor.new</target>
        </trans-unit>
        <trans-unit id="f0ea80b9c9030141bda7f468b821cc4cd92f3ba2" translate="yes" xml:space="preserve">
          <source>FileInfo</source>
          <target state="translated">FileInfo</target>
        </trans-unit>
        <trans-unit id="277924d445aa47dbf3cd662c59567b6635b39354" translate="yes" xml:space="preserve">
          <source>FileInfo#comment</source>
          <target state="translated">FileInfo#comment</target>
        </trans-unit>
        <trans-unit id="910ff7890196304a3f272fda430502e3432eae46" translate="yes" xml:space="preserve">
          <source>FileInfo#comment=</source>
          <target state="translated">FileInfo#comment=</target>
        </trans-unit>
        <trans-unit id="be4bbd7386c32ec8537adf4e6f95862d9ba73d78" translate="yes" xml:space="preserve">
          <source>FileInfo#compressed_size</source>
          <target state="translated">FileInfo#compressed_size</target>
        </trans-unit>
        <trans-unit id="094b73166ad41d51cf8a547194895b6e944ad6a7" translate="yes" xml:space="preserve">
          <source>FileInfo#compressed_size=</source>
          <target state="translated">FileInfo#compressed_size=</target>
        </trans-unit>
        <trans-unit id="41cc01d4370ba338e9dbecb5b81f8d793c28c1ae" translate="yes" xml:space="preserve">
          <source>FileInfo#compression_method</source>
          <target state="translated">FileInfo#compression_method</target>
        </trans-unit>
        <trans-unit id="05261b08165fa48e0a6bc46c61232613bbcf72d0" translate="yes" xml:space="preserve">
          <source>FileInfo#compression_method=</source>
          <target state="translated">FileInfo#compression_method=</target>
        </trans-unit>
        <trans-unit id="cd143af14bb6cc61fedce777450f5526a72ee3f1" translate="yes" xml:space="preserve">
          <source>FileInfo#crc32</source>
          <target state="translated">FileInfo#crc32</target>
        </trans-unit>
        <trans-unit id="fd6047a7bb4333faebb488185654865c8c2942e0" translate="yes" xml:space="preserve">
          <source>FileInfo#crc32=</source>
          <target state="translated">FileInfo#crc32=</target>
        </trans-unit>
        <trans-unit id="17c921fbfb6878cc01e3d1622b67715718fc30a6" translate="yes" xml:space="preserve">
          <source>FileInfo#dir?</source>
          <target state="translated">FileInfo#dir?</target>
        </trans-unit>
        <trans-unit id="dc39e8ddfa9c436f15591c1e731d68993643ad3f" translate="yes" xml:space="preserve">
          <source>FileInfo#extra</source>
          <target state="translated">FileInfo#extra</target>
        </trans-unit>
        <trans-unit id="f13558b006e3125bf6b870b00f65dc33320206be" translate="yes" xml:space="preserve">
          <source>FileInfo#extra=</source>
          <target state="translated">FileInfo#extra=</target>
        </trans-unit>
        <trans-unit id="17d4dc7e5f335e7d94e020f907f7104844c6d838" translate="yes" xml:space="preserve">
          <source>FileInfo#file?</source>
          <target state="translated">FileInfo#file?</target>
        </trans-unit>
        <trans-unit id="095cee7cf0c831363995a23e1a4c0a35faf4eda2" translate="yes" xml:space="preserve">
          <source>FileInfo#filename</source>
          <target state="translated">FileInfo#filename</target>
        </trans-unit>
        <trans-unit id="79890f93f8e2985f28c6bc9ffd20ff98dccd6f7c" translate="yes" xml:space="preserve">
          <source>FileInfo#filename=</source>
          <target state="translated">FileInfo#filename=</target>
        </trans-unit>
        <trans-unit id="5365ce3c25133b9163ad62daeeacdab8273af08f" translate="yes" xml:space="preserve">
          <source>FileInfo#general_purpose_bit_flag</source>
          <target state="translated">FileInfo#general_purpose_bit_flag</target>
        </trans-unit>
        <trans-unit id="c0e3f2a254bd92b4915fce9e2ca8fad3d73265c7" translate="yes" xml:space="preserve">
          <source>FileInfo#general_purpose_bit_flag=</source>
          <target state="translated">FileInfo#general_purpose_bit_flag=</target>
        </trans-unit>
        <trans-unit id="7abd742b7c7e6adf5a00bc024c7cde2f463adc26" translate="yes" xml:space="preserve">
          <source>FileInfo#offset</source>
          <target state="translated">FileInfo#offset</target>
        </trans-unit>
        <trans-unit id="f6ab5330d5912f154fa2568d0310bc9aa9339736" translate="yes" xml:space="preserve">
          <source>FileInfo#offset=</source>
          <target state="translated">FileInfo#offset=</target>
        </trans-unit>
        <trans-unit id="839e80ea342d7e02cd063a786df6bb9d50f07b6f" translate="yes" xml:space="preserve">
          <source>FileInfo#time</source>
          <target state="translated">FileInfo#time</target>
        </trans-unit>
        <trans-unit id="0eb1af2c081adb50c0e84c8bfd313f966a3cc539" translate="yes" xml:space="preserve">
          <source>FileInfo#time=</source>
          <target state="translated">FileInfo#time=</target>
        </trans-unit>
        <trans-unit id="936fa3b1fcf61a69e1d14da497d315eb0c4315a2" translate="yes" xml:space="preserve">
          <source>FileInfo#uncompressed_size</source>
          <target state="translated">FileInfo#uncompressed_size</target>
        </trans-unit>
        <trans-unit id="a18790c4cbd018141ca8ad60f2d6f607f400f8e1" translate="yes" xml:space="preserve">
          <source>FileInfo#uncompressed_size=</source>
          <target state="translated">FileInfo#uncompressed_size=</target>
        </trans-unit>
        <trans-unit id="d85c2ba15f01abc70342df2a15eb5baab41ce98c" translate="yes" xml:space="preserve">
          <source>FileInfo#version</source>
          <target state="translated">FileInfo#version</target>
        </trans-unit>
        <trans-unit id="c6978d2e3b4223fb45a61ebbba7652d10e7d01cb" translate="yes" xml:space="preserve">
          <source>FileInfo#version=</source>
          <target state="translated">FileInfo#version=</target>
        </trans-unit>
        <trans-unit id="af6cabb7f90a83dda8850cd5c7d2b0c1a95bba25" translate="yes" xml:space="preserve">
          <source>FileInfo.new</source>
          <target state="translated">FileInfo.new</target>
        </trans-unit>
        <trans-unit id="ccc04d2e97177e40149e89b27964a37f305c854c" translate="yes" xml:space="preserve">
          <source>FileUtils</source>
          <target state="translated">FileUtils</target>
        </trans-unit>
        <trans-unit id="6c0909a7b7194ae60c41fc21d5b07967428c3e83" translate="yes" xml:space="preserve">
          <source>FileUtils#cd</source>
          <target state="translated">FileUtils#cd</target>
        </trans-unit>
        <trans-unit id="41c266b6f5dc665364ac9f26290a43293de04e1c" translate="yes" xml:space="preserve">
          <source>FileUtils#cmp</source>
          <target state="translated">FileUtils#cmp</target>
        </trans-unit>
        <trans-unit id="5fcde3e9fe45e705ce7b78677512d90f571f123b" translate="yes" xml:space="preserve">
          <source>FileUtils#cp</source>
          <target state="translated">FileUtils#cp</target>
        </trans-unit>
        <trans-unit id="d977a3766c5235cc8eb16e1463f6a83c242d418f" translate="yes" xml:space="preserve">
          <source>FileUtils#cp_r</source>
          <target state="translated">FileUtils#cp_r</target>
        </trans-unit>
        <trans-unit id="3a391c46e0683b046249d168883472f896feb5b3" translate="yes" xml:space="preserve">
          <source>FileUtils#ln</source>
          <target state="translated">FileUtils#ln</target>
        </trans-unit>
        <trans-unit id="48d2ede8081d4226f28866d1769b10434bffe83f" translate="yes" xml:space="preserve">
          <source>FileUtils#ln_s</source>
          <target state="translated">FileUtils#ln_s</target>
        </trans-unit>
        <trans-unit id="b04829277d5ef5f97f17dbbf11face6106a7028e" translate="yes" xml:space="preserve">
          <source>FileUtils#mv</source>
          <target state="translated">FileUtils#mv</target>
        </trans-unit>
        <trans-unit id="2d0950910a1f8c818acb1e4b1cdca1e519ec4c6e" translate="yes" xml:space="preserve">
          <source>FileUtils#pwd</source>
          <target state="translated">FileUtils#pwd</target>
        </trans-unit>
        <trans-unit id="fd6cef4b99bb6556db2fd6d3e32e6395cb2d2cfb" translate="yes" xml:space="preserve">
          <source>FileUtils#rm</source>
          <target state="translated">FileUtils#rm</target>
        </trans-unit>
        <trans-unit id="297c9f0b3c14bab035cdeb7778f7542cfcf56fa3" translate="yes" xml:space="preserve">
          <source>FileUtils#rm_r</source>
          <target state="translated">FileUtils#rm_r</target>
        </trans-unit>
        <trans-unit id="347f45000ea603dcb3c257956a1d15069f093b8b" translate="yes" xml:space="preserve">
          <source>Files are cached based on the modification time, so subsequent request for the same location name will most likely return the same instance of &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt;, unless the time zone database has been updated in between.</source>
          <target state="translated">같은 위치 이름에 대한 후속 요청이 대부분의 동일한 인스턴스 반환 있도록 파일은 수정 시간에 따라 캐시 &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 시간대 데이터베이스 사이에 업데이트되지 않는 한,.</target>
        </trans-unit>
        <trans-unit id="8437a224fd99db91ed5c925b83c83127ccc811da" translate="yes" xml:space="preserve">
          <source>Files created from &lt;code&gt;&lt;a href=&quot;file#tempfile(prefix:String?,suffix:String?,*,dir:String=Dir.tempdir,encoding=nil,invalid=nil)-class-method&quot;&gt;.tempfile&lt;/a&gt;&lt;/code&gt; are stored in a directory that handles temporary files (&lt;code&gt;&lt;a href=&quot;dir#tempdir:String-class-method&quot;&gt;Dir.tempdir&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;file#tempfile(prefix:String?,suffix:String?,*,dir:String=Dir.tempdir,encoding=nil,invalid=nil)-class-method&quot;&gt;.tempfile&lt;/a&gt;&lt;/code&gt; 에서 작성된 파일 은 임시 파일 ( &lt;code&gt;&lt;a href=&quot;dir#tempdir:String-class-method&quot;&gt;Dir.tempdir&lt;/a&gt;&lt;/code&gt; ) 을 처리하는 디렉토리에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="bef9e009150808cacf393b84bd9ad182023cdf95" translate="yes" xml:space="preserve">
          <source>Filling cookies by parsing the &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; headers in the given &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">파싱하여 쿠키를 작성 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;Set&lt;/a&gt;-&lt;a href=&quot;cookie&quot;&gt;Cookie&lt;/a&gt;&lt;/code&gt; 주어진에서 헤더 &lt;code&gt;&lt;a href=&quot;headers&quot;&gt;HTTP::Headers&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7793d21e9213db34affc740969dafbeb8b06024" translate="yes" xml:space="preserve">
          <source>Fills a given slice with random bytes.</source>
          <target state="translated">주어진 슬라이스를 임의의 바이트로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="0dd2a4a3876a17c9d10b5a03d3a2015fb4e5d626" translate="yes" xml:space="preserve">
          <source>Fills the array by substituting all elements with the given value.</source>
          <target state="translated">주어진 값으로 모든 요소를 ​​대체하여 배열을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="f536991084575923272255a14b91163f58df4050" translate="yes" xml:space="preserve">
          <source>Finalizes the multipart message, this method must be called before the generated multipart message written to the IO is considered valid.</source>
          <target state="translated">멀티 파트 메시지를 마무리합니다.이 메소드는 IO에 작성된 생성 된 멀티 파트 메시지가 유효한 것으로 간주되기 전에 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7e860673d1143abd38e20053e795b4a449e65886" translate="yes" xml:space="preserve">
          <source>Finalizes the multipart message, this method must be called to properly end the multipart message.</source>
          <target state="translated">멀티 파트 메시지를 마무리합니다. 멀티 파트 메시지를 올바르게 종료하려면이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2e374839e7f822a7f0826cc39e43602a11670f3" translate="yes" xml:space="preserve">
          <source>Finally, when using a splat argument in a method definition its type will be a tuple of the call arguments:</source>
          <target state="translated">마지막으로, 메소드 정의에서 splat 인수를 사용할 때 해당 유형은 호출 인수의 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="83b2e3e6a7fddc1735cfd31dc3a033bac9316392" translate="yes" xml:space="preserve">
          <source>Finally, you can omit the &lt;code&gt;case&lt;/code&gt;'s value:</source>
          <target state="translated">마지막으로 &lt;code&gt;case&lt;/code&gt; 값을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff8719035af06f1282b52de450ddedd94cfa88eb" translate="yes" xml:space="preserve">
          <source>Find an available connection in the pool.</source>
          <target state="translated">풀에서 사용 가능한 연결을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="85d9398ba3b67b2be849914861e9d0cf0f5d17b4" translate="yes" xml:space="preserve">
          <source>Finder</source>
          <target state="translated">Finder</target>
        </trans-unit>
        <trans-unit id="6bb15c9dd8b587ba3a043196d9a4213d0147dea8" translate="yes" xml:space="preserve">
          <source>Finder#best_match</source>
          <target state="translated">Finder#best_match</target>
        </trans-unit>
        <trans-unit id="d92a713e8dfd261e3b0b8338ba315762c030fbd2" translate="yes" xml:space="preserve">
          <source>Finder#test</source>
          <target state="translated">Finder#test</target>
        </trans-unit>
        <trans-unit id="c8005d2804c40b347c7305a6ef5415aeb3ab9e96" translate="yes" xml:space="preserve">
          <source>Finder.find</source>
          <target state="translated">Finder.find</target>
        </trans-unit>
        <trans-unit id="5125f48860f90efcef313b4e93d05ebf3228ef29" translate="yes" xml:space="preserve">
          <source>Finder.new</source>
          <target state="translated">Finder.new</target>
        </trans-unit>
        <trans-unit id="42daac614cb01e3ba9ce8592cf9034bcdda4c64a" translate="yes" xml:space="preserve">
          <source>Finds match of &lt;em&gt;regex&lt;/em&gt; like &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt;, but it returns &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Finds match of &lt;em&gt;regex&lt;/em&gt; like &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt; , but it returns &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="3a0eeee5341682d8eadfa49d29c749c3e07e9b47" translate="yes" xml:space="preserve">
          <source>Finds match of &lt;em&gt;regex&lt;/em&gt; like &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt;, but it returns &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; value. It neither returns &lt;code&gt;MatchData&lt;/code&gt; nor assigns it to the &lt;code&gt;$~&lt;/code&gt; variable.</source>
          <target state="translated">Finds match of &lt;em&gt;regex&lt;/em&gt; like &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt; , but it returns &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; value. It neither returns &lt;code&gt;MatchData&lt;/code&gt; nor assigns it to the &lt;code&gt;$~&lt;/code&gt; variable.</target>
        </trans-unit>
        <trans-unit id="eb2329c369b4e96ce86d80b191df6a284d5ef09d" translate="yes" xml:space="preserve">
          <source>Finds match of &lt;em&gt;regex&lt;/em&gt;, starting at &lt;em&gt;pos&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;pos&lt;/em&gt; 에서 시작하여 &lt;em&gt;정규 표현식&lt;/em&gt; 과 일치하는 것을 찾습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3eb8ea7dda3b68958189f8cd77d08fe18c87d287" translate="yes" xml:space="preserve">
          <source>Finds match of &lt;em&gt;regex&lt;/em&gt;, starting at &lt;em&gt;pos&lt;/em&gt;. It also updates &lt;code&gt;$~&lt;/code&gt; with the result.</source>
          <target state="translated">Finds match of &lt;em&gt;regex&lt;/em&gt;, starting at &lt;em&gt;pos&lt;/em&gt;. It also updates &lt;code&gt;$~&lt;/code&gt; with the result.</target>
        </trans-unit>
        <trans-unit id="22e891e9750f96c6d225a56fac9df50ef05b363f" translate="yes" xml:space="preserve">
          <source>Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings added within the given block.</source>
          <target state="translated">Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings added within the given block.</target>
        </trans-unit>
        <trans-unit id="e5af45dc8be58489cdf5c347f0cd22eb775dd66b" translate="yes" xml:space="preserve">
          <source>Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings added within the given block. &lt;em&gt;tolerance&lt;/em&gt; can be used to set maximum Levenshtein distance allowed.</source>
          <target state="translated">Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings added within the given block. &lt;em&gt;tolerance&lt;/em&gt; can be used to set maximum Levenshtein distance allowed.</target>
        </trans-unit>
        <trans-unit id="90e36746ddab0c4f11f0441b90a4985f8c3df268" translate="yes" xml:space="preserve">
          <source>Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings provided in &lt;em&gt;all_names&lt;/em&gt;.</source>
          <target state="translated">Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings provided in &lt;em&gt;all_names&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="8d4deef921759efdeb7930c335c3a1ec48ab1493" translate="yes" xml:space="preserve">
          <source>Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings provided in &lt;em&gt;all_names&lt;/em&gt;. &lt;em&gt;tolerance&lt;/em&gt; can be used to set maximum Levenshtein distance allowed.</source>
          <target state="translated">Finds the best match for &lt;em&gt;name&lt;/em&gt; among strings provided in &lt;em&gt;all_names&lt;/em&gt;. &lt;em&gt;tolerance&lt;/em&gt; can be used to set maximum Levenshtein distance allowed.</target>
        </trans-unit>
        <trans-unit id="bee682b0a828d49e0ef9f6e2966bf0945c319524" translate="yes" xml:space="preserve">
          <source>Finds the closest string to a given string amongst many strings.</source>
          <target state="translated">많은 문자열 중에서 주어진 문자열에 가장 가까운 문자열을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="241e6f1cbb942e22ab4e91ad13f821dbce84883d" translate="yes" xml:space="preserve">
          <source>Firefox 1</source>
          <target state="translated">Firefox 1</target>
        </trans-unit>
        <trans-unit id="c1e04a664d0fa1e6d636657917cb8f7f9bb37b0d" translate="yes" xml:space="preserve">
          <source>Firefox 27</source>
          <target state="translated">Firefox 27</target>
        </trans-unit>
        <trans-unit id="bc2e7793495839dd162228b4c117b72a3f00eea6" translate="yes" xml:space="preserve">
          <source>Firefox 63</source>
          <target state="translated">Firefox 63</target>
        </trans-unit>
        <trans-unit id="f7f71f9ecabfb2226f9e1503a9634630c02de25d" translate="yes" xml:space="preserve">
          <source>First add the signing key:</source>
          <target state="translated">먼저 서명 키를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="1336b6366d9676b6b36a60f4274713c4d082d73d" translate="yes" xml:space="preserve">
          <source>First component of &lt;code&gt;&lt;a href=&quot;mediatype#media_type:String-instance-method&quot;&gt;#media_type&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mediatype#media_type:String-instance-method&quot;&gt;#media_type&lt;/a&gt;&lt;/code&gt; 의 첫 번째 구성 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="6f3d5d01249cc207c6ae7042411faa064517fde3" translate="yes" xml:space="preserve">
          <source>First let's make sure to &lt;a href=&quot;https://crystal-lang.org/install/&quot;&gt;install the compiler&lt;/a&gt; correctly so that we may try all the examples listed in this book.</source>
          <target state="translated">First let's make sure to &lt;a href=&quot;https://crystal-lang.org/install/&quot;&gt;install the compiler&lt;/a&gt; correctly so that we may try all the examples listed in this book.</target>
        </trans-unit>
        <trans-unit id="b761cafe3084f1b9eacc12a138bd19e6578e5756" translate="yes" xml:space="preserve">
          <source>First positional arguments are matched with positional method arguments. The number of these must be at least the number of positional arguments without a default value. If there's a splat method argument with a name (the case without a name is explained below), more positional arguments are allowed and they are captured as a tuple. Positional arguments never match past the splat method argument.</source>
          <target state="translated">첫 번째 위치 인수는 위치 메소드 인수와 일치합니다. 이것의 수는 최소한 기본값이없는 위치 인수의 수 여야합니다. 이름이있는 splat 메소드 인수가있는 경우 (이름이없는 경우 아래에 설명되어 있음) 더 많은 위치 인수가 허용되며 튜플로 캡처됩니다. 위치 인수는 splat 메소드 인수를 지나서 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ea6c37ac632d254992d89a9292c56ae5eed7d3e" translate="yes" xml:space="preserve">
          <source>First we need to add Docker as a service in &lt;code&gt;.travis.yml&lt;/code&gt;, and then we can use &lt;code&gt;docker&lt;/code&gt; commands in our build steps, like this:</source>
          <target state="translated">First we need to add Docker as a service in &lt;code&gt;.travis.yml&lt;/code&gt; , and then we can use &lt;code&gt;docker&lt;/code&gt; commands in our build steps, like this:</target>
        </trans-unit>
        <trans-unit id="8c8ca04d7aadadad214cf7d03c4eaaf25e5bf36a" translate="yes" xml:space="preserve">
          <source>First you have to add the repository to your APT configuration. For easy setup just run in your command line:</source>
          <target state="translated">먼저 리포지토리를 APT 구성에 추가해야합니다. 쉬운 설정을 위해 명령 줄에서 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a49e51a3f93ed563c5cd047660b66aa25ee2bfb2" translate="yes" xml:space="preserve">
          <source>First you have to add the repository to your YUM configuration. For easy setup just run in your command line:</source>
          <target state="translated">먼저 YUM 구성에 저장소를 추가해야합니다. 쉬운 설정을 위해 명령 줄에서 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="fe4bf0596c243d804fff886e0197a087fbb0bdc6" translate="yes" xml:space="preserve">
          <source>First, in this example, we are using a transaction (check the &lt;a href=&quot;https://crystal-lang.org/reference/database/transactions.html&quot;&gt;transactions&lt;/a&gt; section for more information on this topic) Second, it's important to notice that the connection given by the transaction &lt;strong&gt;is the same connection&lt;/strong&gt; that we were working with, before the transaction begin. That is, there is only &lt;strong&gt;one&lt;/strong&gt; connection at all times in our program. And last, we are using the method &lt;code&gt;#exec&lt;/code&gt; and &lt;code&gt;#query&lt;/code&gt;. You may read more about executing queries in the &lt;a href=&quot;https://crystal-lang.org/reference/database/&quot;&gt;database&lt;/a&gt; section.</source>
          <target state="translated">First, in this example, we are using a transaction (check the &lt;a href=&quot;https://crystal-lang.org/reference/database/transactions.html&quot;&gt;transactions&lt;/a&gt; section for more information on this topic) Second, it's important to notice that the connection given by the transaction &lt;strong&gt;is the same connection&lt;/strong&gt; that we were working with, before the transaction begin. That is, there is only &lt;strong&gt;one&lt;/strong&gt; connection at all times in our program. And last, we are using the method &lt;code&gt;#exec&lt;/code&gt; and &lt;code&gt;#query&lt;/code&gt; . You may read more about executing queries in the &lt;a href=&quot;https://crystal-lang.org/reference/database/&quot;&gt;database&lt;/a&gt; section.</target>
        </trans-unit>
        <trans-unit id="828acc626279626e5c9cacd5b20e2e4739c49482" translate="yes" xml:space="preserve">
          <source>First, note the &lt;code&gt;self.new&lt;/code&gt; notation. This is a &lt;a href=&quot;class_methods&quot;&gt;class method&lt;/a&gt; that belongs to the &lt;strong&gt;class&lt;/strong&gt;&lt;code&gt;Person&lt;/code&gt;, not to particular instances of that class. This is why we can do &lt;code&gt;Person.new&lt;/code&gt;.</source>
          <target state="translated">먼저 &lt;code&gt;self.new&lt;/code&gt; 표기법에 유의하십시오 . 이것은 &lt;a href=&quot;class_methods&quot;&gt;클래스의&lt;/a&gt; 특정 인스턴스가 아닌 &lt;code&gt;Person&lt;/code&gt; &lt;strong&gt;클래스에&lt;/strong&gt; 속하는 클래스 메소드 입니다 . 이것이 &lt;code&gt;Person.new&lt;/code&gt; 할 수있는 이유 입니다.</target>
        </trans-unit>
        <trans-unit id="0aa13cf173106a0d5135c79bd6833150bbbd1c94" translate="yes" xml:space="preserve">
          <source>First, the program spawns a fiber but doesn't execute it yet. When we invoke &lt;code&gt;channel.receive&lt;/code&gt;, the main fiber blocks and execution continues with the spawned fiber. Then &lt;code&gt;channel.send(nil)&lt;/code&gt; is invoked, and so execution continues at &lt;code&gt;channel.receive&lt;/code&gt;, which was waiting for a value. Then the main fiber continues executing and finishes, so the program exits without giving the other fiber a chance to print &quot;After send&quot;.</source>
          <target state="translated">먼저, 프로그램은 파이버를 생성하지만 아직 실행하지는 않습니다. &lt;code&gt;channel.receive&lt;/code&gt; 를 호출 하면 기본 파이버 블록 및 실행이 생성 된 파이버에서 계속됩니다. 그런 다음 &lt;code&gt;channel.send(nil)&lt;/code&gt; 이 호출되므로 value.를 기다리고 있던 &lt;code&gt;channel.receive&lt;/code&gt; 에서 실행이 계속됩니다 . 그런 다음 주 광섬유는 계속 실행되고 종료되므로 다른 광섬유에 &quot;보내기 후&quot;를 인쇄 할 기회를주지 않고 프로그램이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="09169ce9120a8a88d616c8486845070da23f76ad" translate="yes" xml:space="preserve">
          <source>Fixed Offset</source>
          <target state="translated">고정 오프셋</target>
        </trans-unit>
        <trans-unit id="d9b4854f1939c99f5cae05de2ed3aeb0671fa99e" translate="yes" xml:space="preserve">
          <source>Flag keywords must be the first word in their respective line and must be in all caps. An optional trailing colon is preferred for readability.</source>
          <target state="translated">플래그 키워드는 해당 줄의 첫 번째 단어 여야하며 모두 대문자 여야합니다. 가독성을 위해 선택적 후행 콜론이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="6c6c17f30ad282a8f49db40e39ec5a50535c2ff1" translate="yes" xml:space="preserve">
          <source>Flag#clear</source>
          <target state="translated">Flag#clear</target>
        </trans-unit>
        <trans-unit id="37670fd1431794467e5b23691b74bcd7b9992a34" translate="yes" xml:space="preserve">
          <source>Flag#test_and_set</source>
          <target state="translated">Flag#test_and_set</target>
        </trans-unit>
        <trans-unit id="32af16484670a7ba88f83ae203d5fea7824c53cb" translate="yes" xml:space="preserve">
          <source>Flag.new</source>
          <target state="translated">Flag.new</target>
        </trans-unit>
        <trans-unit id="e4daecae23538d406db5e41d7a9314bf72e3a6a3" translate="yes" xml:space="preserve">
          <source>Flagging Classes, Modules, and Methods</source>
          <target state="translated">클래스, 모듈 및 메소드 플래그</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="7d47a9ef29870dc4214c134a7e0459b2ef5bdd63" translate="yes" xml:space="preserve">
          <source>Flags enum</source>
          <target state="translated">플래그 열거 형</target>
        </trans-unit>
        <trans-unit id="05d3f16a7b6e7d548c1ee1cef6f1281fb82981a6" translate="yes" xml:space="preserve">
          <source>Flags enums</source>
          <target state="translated">플래그 열거 형</target>
        </trans-unit>
        <trans-unit id="fc40768155a63f33690265bf54cce1679feb5477" translate="yes" xml:space="preserve">
          <source>Flags modify the behavior of the format specifiers:</source>
          <target state="translated">Flags modify the behavior of the format specifiers:</target>
        </trans-unit>
        <trans-unit id="ef2a8df23f2dc8578e63c9bae1265116f677dc21" translate="yes" xml:space="preserve">
          <source>Flags must start with a dash or double dash. They can also have an optional argument, which will get passed to the block. Each flag has a description, which will be used for the help message.</source>
          <target state="translated">플래그는 대시 또는 이중 대시로 시작해야합니다. 또한 선택적 인수를 가질 수 있으며,이 인수는 블록으로 전달됩니다. 각 플래그에는 설명이 있으며 도움말 메시지에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="92fb9784373b06bc4627a643b7ae04ce5af28f86" translate="yes" xml:space="preserve">
          <source>Flags#none?</source>
          <target state="translated">Flags#none?</target>
        </trans-unit>
        <trans-unit id="a04374f8e64b3318b5a49f78a45f5044f9db64ae" translate="yes" xml:space="preserve">
          <source>Flags#set_group?</source>
          <target state="translated">Flags#set_group?</target>
        </trans-unit>
        <trans-unit id="73b1fa80bbfc35e56b16fd4dee0bc197d84e51ae" translate="yes" xml:space="preserve">
          <source>Flags#set_user?</source>
          <target state="translated">Flags#set_user?</target>
        </trans-unit>
        <trans-unit id="3f024e40d4eb796a5f1034c315d586ab67dabe16" translate="yes" xml:space="preserve">
          <source>Flags#sticky?</source>
          <target state="translated">Flags#sticky?</target>
        </trans-unit>
        <trans-unit id="ecc7d7beb9d1106da72dc86ea29e664535253cbd" translate="yes" xml:space="preserve">
          <source>Flate</source>
          <target state="translated">Flate</target>
        </trans-unit>
        <trans-unit id="95bb676630809a0a59f4ed2881b826e04b222858" translate="yes" xml:space="preserve">
          <source>Flate::Error</source>
          <target state="translated">Flate::Error</target>
        </trans-unit>
        <trans-unit id="b443c9370a442d5c0a560b9ce938d3a9be613ed3" translate="yes" xml:space="preserve">
          <source>Flate::Error.new</source>
          <target state="translated">Flate::Error.new</target>
        </trans-unit>
        <trans-unit id="5d751ee40b5dd91c733ab79f62388dda80fb6886" translate="yes" xml:space="preserve">
          <source>Flate::Reader</source>
          <target state="translated">Flate::Reader</target>
        </trans-unit>
        <trans-unit id="f74308e81952b0ec627902645dca426fd998dfd6" translate="yes" xml:space="preserve">
          <source>Flate::Writer</source>
          <target state="translated">Flate::Writer</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="56caee26fb23730fc2badb53d0aa22dfbdf00899" translate="yes" xml:space="preserve">
          <source>Float divivision that will obey the left hand side argument type.</source>
          <target state="translated">왼쪽 인수 유형을 따르는 플로트 분할입니다.</target>
        </trans-unit>
        <trans-unit id="9e32203b5a9f5c2b32a3fee202e82eb4b52afe7f" translate="yes" xml:space="preserve">
          <source>Float is the base type of all floating point numbers.</source>
          <target state="translated">부동은 모든 부동 소수점 숫자의 기본 유형입니다.</target>
        </trans-unit>
        <trans-unit id="f8eca2e615f4728d56700eeefe17351e71e0d4cc" translate="yes" xml:space="preserve">
          <source>Float#%</source>
          <target state="translated">Float#%</target>
        </trans-unit>
        <trans-unit id="1b83bf3ba025d5d69328c2069f486942b16e7f7c" translate="yes" xml:space="preserve">
          <source>Float#-</source>
          <target state="translated">Float#-</target>
        </trans-unit>
        <trans-unit id="a0a0b3dcf6628db2b43ac6b00b627e91f8d7e9ff" translate="yes" xml:space="preserve">
          <source>Float#//</source>
          <target state="translated">Float#//</target>
        </trans-unit>
        <trans-unit id="1f77b4b8c520810c448ef139fd1bbb820e8cb6ab" translate="yes" xml:space="preserve">
          <source>Float#days</source>
          <target state="translated">Float#days</target>
        </trans-unit>
        <trans-unit id="bb5ff345b40de85eb6a1f9393ba689043f99cb1c" translate="yes" xml:space="preserve">
          <source>Float#fdiv</source>
          <target state="translated">Float#fdiv</target>
        </trans-unit>
        <trans-unit id="539b4703fe4364e6bb8f3b9ac0e52a2d781e81c8" translate="yes" xml:space="preserve">
          <source>Float#hash</source>
          <target state="translated">Float#hash</target>
        </trans-unit>
        <trans-unit id="14982d978b3f2cce0f0e4ea5b177a712c7b911fb" translate="yes" xml:space="preserve">
          <source>Float#nan?</source>
          <target state="translated">Float#nan?</target>
        </trans-unit>
        <trans-unit id="998fe0ecccd6998cadc40e0fa0fe0e5aaebd09d4" translate="yes" xml:space="preserve">
          <source>Float32</source>
          <target state="translated">Float32</target>
        </trans-unit>
        <trans-unit id="111bac082a7e5af9041742107a3b4b273bb459f9" translate="yes" xml:space="preserve">
          <source>Float32#!=</source>
          <target state="translated">Float32#!=</target>
        </trans-unit>
        <trans-unit id="17f278a17221ed74d09e87d775fda40f150643e7" translate="yes" xml:space="preserve">
          <source>Float32#*</source>
          <target state="translated">Float32#*</target>
        </trans-unit>
        <trans-unit id="9386da43c69eccc55381196bb72843517bdd7a71" translate="yes" xml:space="preserve">
          <source>Float32#**</source>
          <target state="translated">Float32#**</target>
        </trans-unit>
        <trans-unit id="e93c1b663be3572f6ee5cc7a791a7fcd55a0aa80" translate="yes" xml:space="preserve">
          <source>Float32#+</source>
          <target state="translated">Float32#+</target>
        </trans-unit>
        <trans-unit id="af16f707c8545dd52f0fbb49fd3f471ae6c59a95" translate="yes" xml:space="preserve">
          <source>Float32#-</source>
          <target state="translated">Float32#-</target>
        </trans-unit>
        <trans-unit id="a74d52814f7620091b8155643a48f9d36d80103b" translate="yes" xml:space="preserve">
          <source>Float32#/</source>
          <target state="translated">Float32#/</target>
        </trans-unit>
        <trans-unit id="ed4c18f2fbb07d7f4f8792ecdd02423e51427c97" translate="yes" xml:space="preserve">
          <source>Float32#==</source>
          <target state="translated">Float32#==</target>
        </trans-unit>
        <trans-unit id="ceb02f409a78f4efbe98a9ddfb0cfa626b14a339" translate="yes" xml:space="preserve">
          <source>Float64</source>
          <target state="translated">Float64</target>
        </trans-unit>
        <trans-unit id="9671b9e249816455e7ffad7fcf4a7fe6fb69d6d9" translate="yes" xml:space="preserve">
          <source>Float64#!=</source>
          <target state="translated">Float64#!=</target>
        </trans-unit>
        <trans-unit id="0ed1b90ae26de7ecb49bf1b91b60ead01ea87dc3" translate="yes" xml:space="preserve">
          <source>Float64#*</source>
          <target state="translated">Float64#*</target>
        </trans-unit>
        <trans-unit id="3077797544d3d8a79fd41b570189e41e3daab740" translate="yes" xml:space="preserve">
          <source>Float64#**</source>
          <target state="translated">Float64#**</target>
        </trans-unit>
        <trans-unit id="7012ff83915116d1d115385d85ce30c27f20cf63" translate="yes" xml:space="preserve">
          <source>Float64#+</source>
          <target state="translated">Float64#+</target>
        </trans-unit>
        <trans-unit id="074b9063e9fe8ccdb1c421cbdab85f8fd01e9395" translate="yes" xml:space="preserve">
          <source>Float64#-</source>
          <target state="translated">Float64#-</target>
        </trans-unit>
        <trans-unit id="a3faed468b1ee3f3b49d9281bbcb59d3e203094a" translate="yes" xml:space="preserve">
          <source>Float64#/</source>
          <target state="translated">Float64#/</target>
        </trans-unit>
        <trans-unit id="5eda9011050ad4eab9d8c0d4ff6cd25e3da563e1" translate="yes" xml:space="preserve">
          <source>Float64#==</source>
          <target state="translated">Float64#==</target>
        </trans-unit>
        <trans-unit id="ae063ff6dd9c1dc3cf63b976ab24f814f32f0b9c" translate="yes" xml:space="preserve">
          <source>Float::Printer::CachedPowers::Power</source>
          <target state="translated">Float::Printer::CachedPowers::Power</target>
        </trans-unit>
        <trans-unit id="0195a04f5c744dde1f793d7119ed9449c04b159b" translate="yes" xml:space="preserve">
          <source>Float::Printer::DiyFP</source>
          <target state="translated">Float::Printer::DiyFP</target>
        </trans-unit>
        <trans-unit id="519413ba01859acbd447fe17890a9f85f64637c3" translate="yes" xml:space="preserve">
          <source>Floating point conversion</source>
          <target state="translated">부동 소수점 변환</target>
        </trans-unit>
        <trans-unit id="87a7a62c09133e8095c4eaf7c8024eb6ef74ecaf" translate="yes" xml:space="preserve">
          <source>Floating point conversion:</source>
          <target state="translated">Floating point conversion:</target>
        </trans-unit>
        <trans-unit id="c9fdb9f56bbed11dccf6a43b0581d80890cf2517" translate="yes" xml:space="preserve">
          <source>Floats</source>
          <target state="translated">Floats</target>
        </trans-unit>
        <trans-unit id="01b1b932fcfd4e5ecbdbb8faabdca497309f555b" translate="yes" xml:space="preserve">
          <source>Flushes &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;toplevel#STDERR&quot;&gt;STDERR&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;toplevel#STDERR&quot;&gt;STDERR&lt;/a&gt;&lt;/code&gt; 플러시</target>
        </trans-unit>
        <trans-unit id="c3ffaf13b17a20326f6fa59208569921fb0404c4" translate="yes" xml:space="preserve">
          <source>Flushes &lt;code&gt;writer&lt;/code&gt;.</source>
          <target state="translated">플러시 &lt;code&gt;writer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e204ec806c48862d4a4a058ac464312135c2e881" translate="yes" xml:space="preserve">
          <source>Flushes all data written to this File to the disk device so that all changed information can be retrieved even if the system crashes or is rebooted.</source>
          <target state="translated">이 파일에 기록 된 모든 데이터를 디스크 장치에 플러시하여 시스템이 충돌하거나 재부팅하더라도 변경된 모든 정보를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4c2bc0bd494c9967f0000ec145cb1717b1fddc0" translate="yes" xml:space="preserve">
          <source>Flushes all data written to this File to the disk device so that all changed information can be retrieved even if the system crashes or is rebooted. The call blocks until the device reports that the transfer has completed. To reduce disk activity the &lt;em&gt;flush_metadata&lt;/em&gt; parameter can be set to false, then the syscall &lt;em&gt;fdatasync&lt;/em&gt; will be used and only data required for subsequent data retrieval is flushed. Metadata such as modified time and access time is not written.</source>
          <target state="translated">이 파일에 기록 된 모든 데이터를 디스크 장치에 플러시하므로 시스템이 충돌하거나 재부팅하더라도 변경된 모든 정보를 검색 할 수 있습니다. 장치에서 전송이 완료되었다고보고 할 때까지 통화가 차단됩니다. 디스크 활동을 줄이려면 &lt;em&gt;flush_metadata&lt;/em&gt; 매개 변수를 false로 설정하면 syscall &lt;em&gt;fdatasync&lt;/em&gt; 가 사용되고 후속 데이터 검색에 필요한 데이터 만 플러시됩니다. 수정 된 시간 및 액세스 시간과 같은 메타 데이터는 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d720989f77cb5d4781ae8a9ce903ad9a07952ff6" translate="yes" xml:space="preserve">
          <source>Flushes and closes the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시하고 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="debae9de750e6602b1f60228f4a47835e941b672" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data and the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">버퍼링 된 데이터와 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="01167f6e48f14e76412ba515306fe65ab02d1dde" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data and the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">버퍼링 된 데이터와 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 . &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a76e68829206ecceb208de1896d480465fa08ce2" translate="yes" xml:space="preserve">
          <source>Flushes any pending data to the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">보류중인 데이터를 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="60be3f1234a73a5ec0c2f13e01d1a3b391e1e6be" translate="yes" xml:space="preserve">
          <source>Flushes buffered data, if any.</source>
          <target state="translated">버퍼링 된 데이터가있는 경우 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="4960b45dc2a48e6332f75b2709d7b2525f2135bc" translate="yes" xml:space="preserve">
          <source>Flushes data, forcing writing the gzip header if no data has been written yet.</source>
          <target state="translated">아직 데이터가 작성되지 않은 경우 gzip 헤더를 강제로 작성하여 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="f4409d66ef6df6d61cbae2cce6e308c693f13608" translate="yes" xml:space="preserve">
          <source>Flushes data, forcing writing the zlib header if no data has been written yet.</source>
          <target state="translated">아직 데이터가 작성되지 않은 경우 zlib 헤더를 강제로 작성하여 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="05556c699620327df05f73ca4f3b7806803c9481" translate="yes" xml:space="preserve">
          <source>Flushes the output.</source>
          <target state="translated">출력을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="28aa14c8e269c37150bbc6a0226fefce49f26300" translate="yes" xml:space="preserve">
          <source>Flushes the output. This method must be implemented if wrapping the response output.</source>
          <target state="translated">출력을 플러시합니다. 응답 출력을 랩핑하는 경우이 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="a00c3cba2e23fcf91493d43a309452279edce98d" translate="yes" xml:space="preserve">
          <source>Flushes the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="8631220f41187b95567b50ddf9fc5e8d3a7bd8a2" translate="yes" xml:space="preserve">
          <source>Flushes the wrapped &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">래핑 된 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="dc8f1f15416710ec9678106a80069a0d431e3486" translate="yes" xml:space="preserve">
          <source>Flushes the wrapped &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">래핑 된 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="21405fc5e82c20e5d6c1929bb4fc85dd5fa57dc6" translate="yes" xml:space="preserve">
          <source>Focusing on a group of specs</source>
          <target state="translated">사양 그룹에 집중</target>
        </trans-unit>
        <trans-unit id="5552094f4f8300e627c19950b2359ade23e2045b" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; and create a new release every time your push new code to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning에&lt;/a&gt; 따라 새 코드를 &lt;code&gt;master&lt;/code&gt; 할 때마다 새 릴리스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6b14f0d0d605aa8bd1a3a1d4a455f3da113baf23" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;.</source>
          <target state="translated">Follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="795fe52c1ce70bbd6213af4dddf0b39ce8ff729b" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot;&gt;these guidelines&lt;/a&gt; to get your repo up &amp;amp; running on Travis CI.</source>
          <target state="translated">Travis CI에서 리포지토리를 실행하려면 &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot;&gt;다음 지침&lt;/a&gt; 을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="b3459316834da782a3de44111702841fb9619c07" translate="yes" xml:space="preserve">
          <source>Follow the instructions here: &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&quot;&gt;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&lt;/a&gt;</source>
          <target state="translated">Follow the instructions here: &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&quot;&gt;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5ff45b6dc7c3c5fb18b1cc3968b030bd1a3cbe1" translate="yes" xml:space="preserve">
          <source>Follow these conventions so your code will be more accessible to other developers.</source>
          <target state="translated">다른 개발자가 코드에보다 쉽게 ​​액세스 할 수 있도록 이러한 규칙을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="4fa54cc19f934301da0bf4d114df48b6da8f35ce" translate="yes" xml:space="preserve">
          <source>Follow these instructions</source>
          <target state="translated">이 지침을 따르십시오</target>
        </trans-unit>
        <trans-unit id="c1fe308ce8831f183ed2124edda4df999509a238" translate="yes" xml:space="preserve">
          <source>Follow these tips to get the best out of your programs, both in speed and memory terms.</source>
          <target state="translated">다음 팁을 따라 속도와 메모리 측면에서 프로그램을 최대한 활용하십시오.</target>
        </trans-unit>
        <trans-unit id="0eecc01ca60cbd8bb566f3989e86b3f6600e056f" translate="yes" xml:space="preserve">
          <source>Following a match, the special variables $N (e.g., $1, $2, $3, ...) can be used to access a capture group. Trying to access an invalid capture group will raise an exception. Note that it is possible to have a successful match with a nil capture:</source>
          <target state="translated">일치 후에 특수 변수 $ N (예 : $ 1, $ 2, $ 3, ...)을 사용하여 캡처 그룹에 액세스 할 수 있습니다. 유효하지 않은 캡처 그룹에 액세스하려고하면 예외가 발생합니다. nil 캡처와 성공적으로 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aa61e51dd7d5a38f034b4edddb82ec22e904695" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://crystal-lang.org/api/Reference.html&quot;&gt;Reference&lt;/a&gt; types, the size is the same as the size of a pointer:</source>
          <target state="translated">내용은 &lt;a href=&quot;http://crystal-lang.org/api/Reference.html&quot;&gt;참조&lt;/a&gt; 유형, 크기는 포인터의 크기와 동일합니다 :</target>
        </trans-unit>
        <trans-unit id="570f08282077b6f419398ac92caf5462e0312d13" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt; arguments you can take advantage of auto-splatting and do not need parentheses:</source>
          <target state="translated">For &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt; arguments you can take advantage of auto-splatting and do not need parentheses:</target>
        </trans-unit>
        <trans-unit id="fa0494a2c0825c19384cd4f7c93216e8b38e30f8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; types, the size is the same as the size of a pointer:</source>
          <target state="translated">For &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; types, the size is the same as the size of a pointer:</target>
        </trans-unit>
        <trans-unit id="cc54b4312aa4437e3c0cadeb440c7e0ef389ad03" translate="yes" xml:space="preserve">
          <source>For HTML &lt;em&gt;parsing&lt;/em&gt; see module XML, especially &lt;code&gt;&lt;a href=&quot;xml#parse_html(string:String,options:HTMLParserOptions=HTMLParserOptions.default):Node-class-method&quot;&gt;XML.parse_html&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">HTML &lt;em&gt;구문 분석에&lt;/em&gt; 대해서는 모듈 XML, 특히 &lt;code&gt;&lt;a href=&quot;xml#parse_html(string:String,options:HTMLParserOptions=HTMLParserOptions.default):Node-class-method&quot;&gt;XML.parse_html&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad7d720219578cfe42f642b91c781867265a0ff8" translate="yes" xml:space="preserve">
          <source>For a generic type like &lt;code&gt;Set&lt;/code&gt;, the generic type &lt;code&gt;T&lt;/code&gt; is inferred from the types of the elements in the same way as with the array literal. The above is equivalent to:</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 과 같은 제네릭 형식의 경우 제네릭 형식 &lt;code&gt;T&lt;/code&gt; 는 배열 리터럴과 같은 방식으로 요소의 형식에서 유추됩니다. 위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c5684c6057489832549326137fda53ad95382bf7" translate="yes" xml:space="preserve">
          <source>For a generic type, the generic types are inferred from the types of the keys and values in the same way as with the hash literal.</source>
          <target state="translated">제네릭 형식의 경우 제네릭 형식은 해시 리터럴과 같은 방식으로 키 및 값 형식에서 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="c368da259a5f3c2564d9ac831e16eee3e3d50c7c" translate="yes" xml:space="preserve">
          <source>For a given instance/class variable, when a rule can be applied and a type can be guessed, the type is added to a set. When no more rules can be applied, the inferred type will be the &lt;a href=&quot;union_types&quot;&gt;union&lt;/a&gt; of those types. Additionally, if the compiler infers that an instance variable isn't always initialized, it will also include the &lt;a href=&quot;literals/nil&quot;&gt;Nil&lt;/a&gt; type.</source>
          <target state="translated">주어진 인스턴스 / 클래스 변수에 대해 규칙을 적용하고 유형을 추측 할 수있는 경우 유형이 세트에 추가됩니다. 더 이상 규칙을 적용 할 수없는 경우 유추 된 유형이 해당 유형 의 &lt;a href=&quot;union_types&quot;&gt;합집합&lt;/a&gt; 입니다. 또한 컴파일러에서 인스턴스 변수가 항상 초기화되지는 않는다고 추론하는 경우 &lt;a href=&quot;literals/nil&quot;&gt;Nil&lt;/a&gt; 유형 도 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="10b8169b4ba0a06c6f2ca618790582f6768ba0d8" translate="yes" xml:space="preserve">
          <source>For a more correct method see the method that receives a block.</source>
          <target state="translated">보다 정확한 방법은 블록을받는 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aca117beab382164ac1b18e77e37547f5a300260" translate="yes" xml:space="preserve">
          <source>For a non-generic type like &lt;code&gt;HTTP::Headers&lt;/code&gt;, this is equivalent to:</source>
          <target state="translated">&lt;code&gt;HTTP::Headers&lt;/code&gt; 와 같은 제네릭이 아닌 유형의 경우 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c4286450b574d876439fc596b8a58248b9c52ddb" translate="yes" xml:space="preserve">
          <source>For a non-generic type like &lt;code&gt;IO::Memory&lt;/code&gt;, this is equivalent to:</source>
          <target state="translated">&lt;code&gt;IO::Memory&lt;/code&gt; 와 같은 제네릭이 아닌 유형의 경우 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9eaacccf32adec0915a806c6e63fbdb37f1e5be1" translate="yes" xml:space="preserve">
          <source>For a quick example of how to authenticate an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; with OAuth if you already have an access token, check the &lt;code&gt;&lt;a href=&quot;../oauth&quot;&gt;OAuth&lt;/a&gt;&lt;/code&gt; module description.</source>
          <target state="translated">액세스 토큰이 이미있는 경우 OAuth 로 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 를 인증하는 방법에 대한 간단한 예 는 &lt;code&gt;&lt;a href=&quot;../oauth&quot;&gt;OAuth&lt;/a&gt;&lt;/code&gt; 모듈 설명을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d6a218ed2d258ef9f7626975aea21b94ba7dece" translate="yes" xml:space="preserve">
          <source>For a quick example of how to authenticate an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; with OAuth2 if you already have an access token, check the &lt;code&gt;&lt;a href=&quot;../oauth2&quot;&gt;OAuth2&lt;/a&gt;&lt;/code&gt; module description.</source>
          <target state="translated">액세스 토큰이 이미있는 경우 OAuth2 로 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 를 인증하는 방법에 대한 간단한 예 는 &lt;code&gt;&lt;a href=&quot;../oauth2&quot;&gt;OAuth2&lt;/a&gt;&lt;/code&gt; 모듈 설명을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d51ff3d2280ec5b77b63f365da2c95be981778c" translate="yes" xml:space="preserve">
          <source>For a safe alternative, see &lt;code&gt;&lt;a href=&quot;slice&quot;&gt;Slice&lt;/a&gt;&lt;/code&gt;, which is a pointer with a size and with bounds checking.</source>
          <target state="translated">안전한 대안 은 크기 및 경계 검사가 포함 된 포인터 인 &lt;code&gt;&lt;a href=&quot;slice&quot;&gt;Slice&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7826f7064e81e0d6049c3f63e6610fcf1862bdc" translate="yes" xml:space="preserve">
          <source>For an example usage, see &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt;'s explanation about sending Procs to C.</source>
          <target state="translated">사용법 예는 Procs를 C로 보내는 방법에 대한 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 의 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4880ffecab60bbea247339c187df53056398541" translate="yes" xml:space="preserve">
          <source>For an unquoted identifier the same naming rules apply as for methods. It can contain alphanumeric characters, underscore (&lt;code&gt;_&lt;/code&gt;) or characters with a code point greater than &lt;code&gt;159&lt;/code&gt;(&lt;code&gt;0x9F&lt;/code&gt;). It must not start with a number and may end with an exclamation mark (&lt;code&gt;!&lt;/code&gt;) or question mark (&lt;code&gt;?&lt;/code&gt;).</source>
          <target state="translated">따옴표없는 식별자의 경우 동일한 이름 지정 규칙이 메소드와 동일하게 적용됩니다. 영숫자, 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) 또는 코드 포인트가 &lt;code&gt;159&lt;/code&gt; ( &lt;code&gt;0x9F&lt;/code&gt; ) 보다 큰 문자를 포함 할 수 있습니다 . 숫자로 시작해서는 안되며 느낌표 ( &lt;code&gt;!&lt;/code&gt; ) 또는 물음표 ( &lt;code&gt;?&lt;/code&gt; )로 끝날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8fc0f056a92b720841623726c25ae26976536b8" translate="yes" xml:space="preserve">
          <source>For both server and client applications exist more specialized subclassses &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;SSL::Context::Server&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;context/client&quot;&gt;SSL::Context::Client&lt;/a&gt;&lt;/code&gt; which need to be instantiated appropriately.</source>
          <target state="translated">For both server and client applications exist more specialized subclassses &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;SSL::Context::Server&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;context/client&quot;&gt;SSL::Context::Client&lt;/a&gt;&lt;/code&gt; which need to be instantiated appropriately.</target>
        </trans-unit>
        <trans-unit id="dbef1aca33f9c6b7a4542474c3cb83370254d98e" translate="yes" xml:space="preserve">
          <source>For building Crystal yourself, the required installation is available in the ports tree.</source>
          <target state="translated">Crystal을 직접 구축하려면 포트 트리에서 필요한 설치를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="550628869db111a93e12244f85b134e68606a0db" translate="yes" xml:space="preserve">
          <source>For building the Crystal compiler itself, a few other dependencies are needed, see &lt;a href=&quot;https://github.com/crystal-lang/crystal/wiki/All-required-libraries#ubuntu&quot;&gt;wiki page&lt;/a&gt;. They are not required for regular compiler use.</source>
          <target state="translated">Crystal 컴파일러 자체를 빌드하려면 몇 가지 다른 종속성이 필요합니다 ( &lt;a href=&quot;https://github.com/crystal-lang/crystal/wiki/All-required-libraries#ubuntu&quot;&gt;wiki page 참조)&lt;/a&gt; . 정기적 인 컴파일러 사용에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2986aed88a68cdaecfa52d018447976072126666" translate="yes" xml:space="preserve">
          <source>For comparing an expression against a &lt;code&gt;case&lt;/code&gt;'s value the &lt;em&gt;case equality operator&lt;/em&gt;&lt;code&gt;===&lt;/code&gt; is used. It is defined as a method on &lt;a href=&quot;https://crystal-lang.org/api/Object.html#%3D%3D%3D%28other%29-instance-method&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and can be overridden by subclasses to provide meaningful semantics in case statements. For example, &lt;a href=&quot;https://crystal-lang.org/api/Class.html#%3D%3D%3D%28other%29-instance-method&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; defines case equality as when an object is an instance of that class, &lt;a href=&quot;https://crystal-lang.org/api/Regex.html#%3D%3D%3D%28other%3AString%29-instance-method&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; as when the value matches the regular expression and &lt;a href=&quot;https://crystal-lang.org/api/Range.html#%3D%3D%3D%28value%29-instance-method&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; as when the value is included in that range.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 값과 표현식을 비교하기 위해 &lt;em&gt;대소 문자 같음 연산자 &lt;/em&gt; &lt;code&gt;===&lt;/code&gt; 가 사용됩니다. &lt;a href=&quot;https://crystal-lang.org/api/Object.html#%3D%3D%3D%28other%29-instance-method&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 의 메소드 로 정의되며 서브 클래스로 대체하여 case 문에 의미가있는 의미를 제공 할 수 있습니다. 예를 들어, &lt;a href=&quot;https://crystal-lang.org/api/Class.html#%3D%3D%3D%28other%29-instance-method&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 는 객체가 해당 클래스의 인스턴스 인 경우와 같이 대소 문자가 &lt;a href=&quot;https://crystal-lang.org/api/Regex.html#%3D%3D%3D%28other%3AString%29-instance-method&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; , 정규식 과 값이 일치하는 경우 Regex , 값이 해당 범위에 포함 된 경우 와 같은 &lt;a href=&quot;https://crystal-lang.org/api/Range.html#%3D%3D%3D%28value%29-instance-method&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bce7e492d53dc04162d4945679388f33dc412eca" translate="yes" xml:space="preserve">
          <source>For details on the format string, see &lt;code&gt;&lt;a href=&quot;toplevel#sprintf(format_string,args:Array%7CTuple):String-class-method&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">형식 문자열에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;toplevel#sprintf(format_string,args:Array%7CTuple):String-class-method&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc96fd9d74b97fd0e0fcde1657b07a4e83a1845f" translate="yes" xml:space="preserve">
          <source>For each element in the collection the block is passed an accumulator value (&lt;em&gt;memo&lt;/em&gt;) and the element. The result becomes the new value for &lt;em&gt;memo&lt;/em&gt;. At the end of the iteration, the final value of &lt;em&gt;memo&lt;/em&gt; is the return value for the method. The initial value for the accumulator is the first element in the collection.</source>
          <target state="translated">컬렉션의 각 요소에 대해 블록에 누산기 값 ( &lt;em&gt;memo&lt;/em&gt; )과 요소 가 전달 됩니다. 결과는 새로운 &lt;em&gt;메모&lt;/em&gt; 값이됩니다 . 반복이 끝날 때 &lt;em&gt;메모&lt;/em&gt; 의 최종 값은 메소드의 리턴 값입니다. 누산기의 초기 값은 컬렉션의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="5944bf5df25ccb25e1bafd921fc562dddd9f9027" translate="yes" xml:space="preserve">
          <source>For everything I/O related there's an event loop. Some time-consuming operations are delegated to it, and while the event loop waits for that operation to finish the program can continue executing other fibers. A simple example of this is waiting for data to come through a socket.</source>
          <target state="translated">모든 I / O 관련 이벤트 루프가 있습니다. 시간이 많이 걸리는 작업이 여기에 위임되며, 이벤트 루프가 해당 작업이 완료 될 때까지 기다리는 동안 프로그램은 다른 광섬유를 계속 실행할 수 있습니다. 간단한 예는 데이터가 소켓을 통과하기를 기다리는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b52a23452ff52840cbfbeb39cd7ea18e73acc7b5" translate="yes" xml:space="preserve">
          <source>For everything else this uses the defaults of your OpenSSL. Use this only if undoing the defaults that &lt;code&gt;&lt;a href=&quot;client#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; sets is too much hassle.</source>
          <target state="translated">다른 모든 경우에는 OpenSSL의 기본값을 사용합니다. &lt;code&gt;&lt;a href=&quot;client#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 세트가 너무 번거로운 기본값을 취소하면이 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bc5c2b95d1d6b28fc693f7f2d7a95fff00422179" translate="yes" xml:space="preserve">
          <source>For everything else this uses the defaults of your OpenSSL. Use this only if undoing the defaults that &lt;code&gt;&lt;a href=&quot;server#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; sets is too much hassle.</source>
          <target state="translated">다른 모든 경우에는 OpenSSL의 기본값을 사용합니다. &lt;code&gt;&lt;a href=&quot;server#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 세트가 너무 번거로운 기본값을 취소하면이 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe8c04c2f9dcb7822b0a7b7cd9f6e21002d5460e" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;arc4random&lt;/code&gt; is used on OpenBSD, whereas on Linux it uses &lt;code&gt;getrandom&lt;/code&gt; (if the kernel supports it) and fallbacks on reading from &lt;code&gt;/dev/urandom&lt;/code&gt; on UNIX systems.</source>
          <target state="translated">예를 들어, &lt;code&gt;arc4random&lt;/code&gt; 은 OpenBSD에서 사용되는 반면, Linux에서는 &lt;code&gt;getrandom&lt;/code&gt; (커널이 지원하는 경우)을 사용하고 UNIX 시스템의 &lt;code&gt;/dev/urandom&lt;/code&gt; 에서 읽을 때 폴 백이 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="8ef83af9279f797fa6c67ef5fa8d3a15e616544d" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;HTTP::WebSocket&lt;/code&gt; is defined in &lt;code&gt;src/http/web_socket.cr&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;HTTP::WebSocket&lt;/code&gt; 은 &lt;code&gt;src/http/web_socket.cr&lt;/code&gt; 에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c886bfa5ba48123a2a9c9c176a07618f85b9f352" translate="yes" xml:space="preserve">
          <source>For example, a block which is given an object to use as the default receiver by being invoked with &lt;code&gt;with ... yield&lt;/code&gt; can access macros defined within that object's ancestors chain:</source>
          <target state="translated">예를 들어 &lt;code&gt;with ... yield&lt;/code&gt; 와 함께 호출하여 기본 수신자로 사용할 객체가 주어진 블록은 해당 객체의 조상 체인 내에 정의 된 매크로에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6cb6b7e6f5a5bc4d6daa3ee9420b926d5345161" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;2007-03-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2007-04-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2007-04-30&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 추가 &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;2007-03-31&lt;/code&gt; 잘못된 일이 발생할 것 &lt;code&gt;2007-04-31&lt;/code&gt; 조정됩니다 &lt;code&gt;2007-04-30&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21aa84a363700bcf6a1762f73b17e896b5628447" translate="yes" xml:space="preserve">
          <source>For example, an initial handler might handle exceptions raised from subsequent handlers and return a &lt;code&gt;500 &lt;a href=&quot;server&quot;&gt;Server&lt;/a&gt; Error&lt;/code&gt; status (see &lt;code&gt;&lt;a href=&quot;errorhandler&quot;&gt;HTTP::ErrorHandler&lt;/a&gt;&lt;/code&gt;). The next handler might log all incoming requests (see &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt;). And the final handler deals with routing and application logic.</source>
          <target state="translated">예를 들어, 초기 핸들러는 후속 핸들러에서 발생한 예외를 처리하고 &lt;code&gt;500 &lt;a href=&quot;server&quot;&gt;Server&lt;/a&gt; Error&lt;/code&gt; 상태를 리턴 할 수 있습니다 ( &lt;code&gt;&lt;a href=&quot;errorhandler&quot;&gt;HTTP::ErrorHandler&lt;/a&gt;&lt;/code&gt; 참조 ). 다음 핸들러는 들어오는 모든 요청을 기록 할 수 있습니다 ( &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; 참조 ). 마지막 처리기는 라우팅 및 응용 프로그램 논리를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="8b19aa5814870af3702b53dd76cc72d358563015" translate="yes" xml:space="preserve">
          <source>For example, consecutive even numbers and odd numbers can be chunked as follows.</source>
          <target state="translated">예를 들어, 연속 짝수와 홀수는 다음과 같이 청크 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41c684a31f3524d52a1715c94cffaf66d2e32c0d" translate="yes" xml:space="preserve">
          <source>For example, for &lt;code&gt;def write(to file)&lt;/code&gt; returns &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;def write(to file)&lt;/code&gt; &lt;code&gt;file&lt;/code&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="317f924bf360123556a3443e51624ae5246c16ba" translate="yes" xml:space="preserve">
          <source>For example, for &lt;code&gt;def write(to file)&lt;/code&gt; returns &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 대한 &lt;code&gt;def write(to file)&lt;/code&gt; 반환 &lt;code&gt;to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66c49ec2261767ac49a82e698ce2932f3124aa52" translate="yes" xml:space="preserve">
          <source>For example, if you put &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; in &lt;code&gt;project.cr&lt;/code&gt; and run &lt;code&gt;crystal src/project.cr&lt;/code&gt; in the project's root directory, it will find &lt;code&gt;foo&lt;/code&gt; in &lt;code&gt;lib/foo/foo.cr&lt;/code&gt;.</source>
          <target state="translated">당신이 넣어 예를 들어, &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; 에 &lt;code&gt;project.cr&lt;/code&gt; 및 실행 &lt;code&gt;crystal src/project.cr&lt;/code&gt; 프로젝트의 루트 디렉토리에, 그것을 발견 할 것이다 &lt;code&gt;foo&lt;/code&gt; 는 에 &lt;code&gt;lib/foo/foo.cr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9e67a31bb11ec604af8c8e9082271fb75f01fb8" translate="yes" xml:space="preserve">
          <source>For example, invoking &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt;&lt;code&gt;ASTNode#id&lt;/code&gt;&lt;/a&gt; in the above example solves the problem:</source>
          <target state="translated">예를 들어, 위 예제에서 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt; &lt;code&gt;ASTNode#id&lt;/code&gt; &lt;/a&gt; 를 호출 하면 문제가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="b69fc5ce16b8a0a5ebcc38193e0fa40c7457cbd3" translate="yes" xml:space="preserve">
          <source>For example, one-by-one increasing subsequences can be chunked as follows:</source>
          <target state="translated">예를 들어, 하나씩 증가하는 서브 시퀀스는 다음과 같이 청크 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2879cb60b7eca56ff67cb19bfa45f99ab882a68f" translate="yes" xml:space="preserve">
          <source>For example, reassigning a variable with a different expression makes it have that expression&amp;rsquo;s type:</source>
          <target state="translated">예를 들어, 다른 표현식으로 변수를 다시 할당하면 해당 표현식의 유형을 갖게됩니다.</target>
        </trans-unit>
        <trans-unit id="94dd85a55cb68881bcc30d3977ed131badb89dd1" translate="yes" xml:space="preserve">
          <source>For example, subtracting &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;2007-05-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2007-04-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2007-04-30&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 감산 &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; 으로부터 &lt;code&gt;2007-05-31&lt;/code&gt; 하면 무효 일자 초래 &lt;code&gt;2007-04-31&lt;/code&gt; 조정한다 &lt;code&gt;2007-04-30&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6a547713042ab7e6d1295ee4aa0b0f54281d06f" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;String&lt;/code&gt; class implements &lt;code&gt;to_unsafe&lt;/code&gt; to return &lt;code&gt;UInt8*&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;String&lt;/code&gt; 클래스는 &lt;code&gt;to_unsafe&lt;/code&gt; 를 구현 하여 &lt;code&gt;UInt8*&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="16e29e30fa6e657d020201252796a2f36818a276" translate="yes" xml:space="preserve">
          <source>For example, the standard library includes a &lt;code&gt;times&lt;/code&gt; method on integers, allowing you to write:</source>
          <target state="translated">예를 들어 표준 라이브러리에는 정수에 대한 &lt;code&gt;times&lt;/code&gt; 메소드가 포함되어 있으므로 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4c8244f9aad81aa0ddc306686164c14e2fa2c5a" translate="yes" xml:space="preserve">
          <source>For example, this code will end up invoking this method:</source>
          <target state="translated">For example, this code will end up invoking this method:</target>
        </trans-unit>
        <trans-unit id="1502994e7d97a67e47f2896302a91bc786437f38" translate="yes" xml:space="preserve">
          <source>For example, this code:</source>
          <target state="translated">예를 들어이 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b0128547a3832d5fb9b72b8718fa1b16fdb1f81" translate="yes" xml:space="preserve">
          <source>For example, this is a simple &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; on top of a &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 이것은 &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt; 위에 간단한 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="bf707e68569d1425396d0a54c13a9c1b3af93b5f" translate="yes" xml:space="preserve">
          <source>For example, this is an iterator that returns a sequence of &lt;code&gt;N&lt;/code&gt; zeros:</source>
          <target state="translated">예를 들어, 이것은 &lt;code&gt;N&lt;/code&gt; 0 의 시퀀스를 리턴하는 반복자입니다 .</target>
        </trans-unit>
        <trans-unit id="b4e2f3b7d65e9d6a6a4b832629acc9e627adf3f3" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end at each ASCII uppercase letter:</source>
          <target state="translated">예를 들어, 각 ASCII 대문자로 끝나는 청크를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="47a8ea0f4a1269a04f9d1d65110a6b7f96ec157c" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end at each uppercase letter:</source>
          <target state="translated">예를 들어, 각 대문자로 끝나는 청크를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6e533eba8e14f07b4f6a616214ab26fee71fb3b2" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end just before each ASCII uppercase letter:</source>
          <target state="translated">예를 들어, 각 ASCII 대문자 직전에 끝나는 청크를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="98ca64b547029e315a2a8d18cc4daec641e04fb8" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end just before each uppercase letter:</source>
          <target state="translated">예를 들어, 각각의 대문자 직전에 끝나는 청크를 얻으려면 :</target>
        </trans-unit>
        <trans-unit id="c68186cc707cd14db5d72672fb96594175dc524c" translate="yes" xml:space="preserve">
          <source>For example, we can define four different &lt;code&gt;become_older&lt;/code&gt; methods:</source>
          <target state="translated">예를 들어, 우리는 네 가지 다른 &lt;code&gt;become_older&lt;/code&gt; 메소드를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1b4de881b395856c5cc75cea2ff35b98cfa974b" translate="yes" xml:space="preserve">
          <source>For example, we can start a &lt;a href=&quot;https://docs.travis-ci.com/user/database-setup/#mysql&quot;&gt;MySQL&lt;/a&gt; database service by adding a &lt;code&gt;services:&lt;/code&gt; section to our &lt;code&gt;.travis.yml&lt;/code&gt;:</source>
          <target state="translated">For example, we can start a &lt;a href=&quot;https://docs.travis-ci.com/user/database-setup/#mysql&quot;&gt;MySQL&lt;/a&gt; database service by adding a &lt;code&gt;services:&lt;/code&gt; section to our &lt;code&gt;.travis.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d78358d9619d79b975fc843ac47ea68037fbd0df" translate="yes" xml:space="preserve">
          <source>For hosts with multiple interfaces, each multicast transmission is sent from the primary network interface.</source>
          <target state="translated">인터페이스가 여러 개인 호스트의 경우 각 멀티 캐스트 전송은 기본 네트워크 인터페이스에서 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="2fab9170018d39758237ecb172c55fdc1a388487" translate="yes" xml:space="preserve">
          <source>For hosts with multiple interfaces, each multicast transmission is sent from the primary network interface. This function overrides the default IPv4 interface address for subsequent transmissions. Setting the interface to &lt;code&gt;0.0.0.0&lt;/code&gt; will select the default interface. Raises &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; unless the socket is IPv4 and an IPv4 address is provided.</source>
          <target state="translated">인터페이스가 여러 개인 호스트의 경우 각 멀티 캐스트 전송은 기본 네트워크 인터페이스에서 전송됩니다. 이 기능은 후속 전송을 위해 기본 IPv4 인터페이스 주소를 무시합니다. 인터페이스를 &lt;code&gt;0.0.0.0&lt;/code&gt; 으로 설정하면 기본 인터페이스가 선택됩니다. 발생시킵니다 &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; 소켓에서 IPv4하고 IPv4 주소가 제공되지 않는.</target>
        </trans-unit>
        <trans-unit id="3b4393186038f211a02c5180f1fc6142f85d00d4" translate="yes" xml:space="preserve">
          <source>For hosts with multiple interfaces, each multicast transmission is sent from the primary network interface. This function overrides the default IPv6 interface for subsequent transmissions. Setting the interface to index &lt;code&gt;0&lt;/code&gt; will select the default interface.</source>
          <target state="translated">인터페이스가 여러 개인 호스트의 경우 각 멀티 캐스트 전송은 기본 네트워크 인터페이스에서 전송됩니다. 이 기능은 후속 전송을 위해 기본 IPv6 인터페이스를 재정의합니다. 인터페이스를 인덱스 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 기본 인터페이스가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="6049ea6349182fe529c207b85e155d721f406573" translate="yes" xml:space="preserve">
          <source>For instance, in a production system, you may have your &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; set to &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; or even &lt;code&gt;&lt;a href=&quot;logger#WARN&quot;&gt;WARN&lt;/a&gt;&lt;/code&gt;. When you are developing the system, however, you probably want to know about the program&amp;rsquo;s internal state, and would set the &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 프로덕션 시스템에서 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;logger#WARN&quot;&gt;WARN&lt;/a&gt;&lt;/code&gt; 으로 설정 했을 수 있습니다 . 그러나 시스템을 개발할 때 프로그램의 내부 상태를 알고 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt; 로 설정 하려고 합니다.</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="4e742955f3e245d49a5db8ef4cf7e22e14fd4172" translate="yes" xml:space="preserve">
          <source>For more information on getter and setter macros, see the standard library documentation for &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#getter%28%2Anames%2C%26block%29-macro&quot;&gt;Object#getter&lt;/a&gt;, &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#setter%28%2Anames%29-macro&quot;&gt;Object#setter&lt;/a&gt;, and &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#property%28%2Anames%2C%26block%29-macro&quot;&gt;Object#property&lt;/a&gt;.</source>
          <target state="translated">getter 및 setter 매크로에 대한 자세한 내용은 &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#getter%28%2Anames%2C%26block%29-macro&quot;&gt;Object # getter&lt;/a&gt; , &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#setter%28%2Anames%29-macro&quot;&gt;Object # setter&lt;/a&gt; 및 &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#property%28%2Anames%2C%26block%29-macro&quot;&gt;Object # property에&lt;/a&gt; 대한 표준 라이브러리 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea9d18f814a67697af6dc1fa3d3310674f336896" translate="yes" xml:space="preserve">
          <source>For negative &lt;em&gt;n&lt;/em&gt;, equivalent to &lt;code&gt;(-n).times { unshift(pop) }&lt;/code&gt;.</source>
          <target state="translated">음수 &lt;em&gt;n의&lt;/em&gt; 경우 &lt;code&gt;(-n).times { unshift(pop) }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81236a91ea21e77ce418e1018869c13c97324f13" translate="yes" xml:space="preserve">
          <source>For nested procs (and any type, in general), you can use parentheses:</source>
          <target state="translated">중첩 된 proc (및 일반적으로 모든 유형)의 경우 괄호를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="556c113dfe267840d82dc9f10117d8800723fbd3" translate="yes" xml:space="preserve">
          <source>For normalized URIs, the following is true:</source>
          <target state="translated">정규화 된 URI의 경우 다음이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6cf2f5344b9abe33bede60b8f1c24dd64363490" translate="yes" xml:space="preserve">
          <source>For now it's just a way to implement &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; in a way that the initial value given to it has the type of the first type in the union, if the type is a union.</source>
          <target state="translated">지금 은 형식이 공용체 인 경우 초기 값에 공용체의 첫 번째 형식이있는 방식으로 &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; 을 구현하는 방법 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="c56e8f3dae7c421f1b47c588cfc87abfc3ad242c" translate="yes" xml:space="preserve">
          <source>For now, its methods are purely lexical, there is no direct filesystem access.</source>
          <target state="translated">현재로서는 그 방법은 순전히 어휘 적이며 직접적인 파일 시스템 액세스는 없습니다.</target>
        </trans-unit>
        <trans-unit id="b133a3f63922e98b7cc8ee395f629fc3448c3f8f" translate="yes" xml:space="preserve">
          <source>For number types there is also &lt;code&gt;&lt;a href=&quot;number#static_array(*nums)-macro&quot;&gt;Number.static_array&lt;/a&gt;&lt;/code&gt; which can be used to initialize a static array:</source>
          <target state="translated">숫자 유형의 경우 정적 배열을 초기화하는 데 사용할 수있는 &lt;code&gt;&lt;a href=&quot;number#static_array(*nums)-macro&quot;&gt;Number.static_array&lt;/a&gt;&lt;/code&gt; 도 있습니다.</target>
        </trans-unit>
        <trans-unit id="74fe1f5c7e6e8e7b455d22772d1dae57eb726745" translate="yes" xml:space="preserve">
          <source>For numeric fields, the precision controls the number of decimal places displayed.</source>
          <target state="translated">숫자 필드의 경우 정밀도는 표시되는 소수 자릿수를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="b3e9f0413a5c38b20ccb8dceedff4d4330951de7" translate="yes" xml:space="preserve">
          <source>For our second application, we will add a &lt;em&gt;text decoration&lt;/em&gt; (&lt;code&gt;blink&lt;/code&gt;in this case):</source>
          <target state="translated">For our second application, we will add a &lt;em&gt;text decoration&lt;/em&gt; ( &lt;code&gt;blink&lt;/code&gt; in this case):</target>
        </trans-unit>
        <trans-unit id="a4b694987c179a33a5f7598698f5cf34271e4093" translate="yes" xml:space="preserve">
          <source>For positive &lt;em&gt;n&lt;/em&gt;, equivalent to &lt;code&gt;n.times { push(shift) }&lt;/code&gt;.</source>
          <target state="translated">양수 &lt;em&gt;n의&lt;/em&gt; 경우 &lt;code&gt;n.times { push(shift) }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff64f160ed47134177a89d4b27896cf65d9b5a46" translate="yes" xml:space="preserve">
          <source>For querying if a time is at a specific day of week, &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; offers named predicate methods, delegating to &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">특정 요일에 시간이 있는지 쿼리하기 위해 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 은 명명 된 술어 메소드를 제공하여 &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt; 에 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="36040c025d6634d38c82cd03d1ff9715be9430f4" translate="yes" xml:space="preserve">
          <source>For string fields, the precision determines the maximum number of characters to be copied from the string.</source>
          <target state="translated">문자열 필드의 경우 정밀도는 문자열에서 복사 할 최대 문자 수를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="1d6183253455fd6156b690c7d5d0c03140222fe8" translate="yes" xml:space="preserve">
          <source>For that reason, this method returns a tuple &lt;code&gt;year, week&lt;/code&gt; consisting of the calendar year to which the calendar week belongs and the ordinal number of the week within that year.</source>
          <target state="translated">따라서이 메소드는 튜플 &lt;code&gt;year, week&lt;/code&gt; 반환합니다. 주는 달력 주가 속한 연도 및 해당 연도의 서수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b533dca6314f5a712911cd5589c5007226e40283" translate="yes" xml:space="preserve">
          <source>For the above example to output the docs at &lt;code&gt;public&lt;/code&gt; with custom canonical base url, and entrypoint &lt;code&gt;src/my_app.cr&lt;/code&gt;, the following arguments can be used:</source>
          <target state="translated">위의 예에서 사용자 정의 표준 기본 URL 및 &lt;code&gt;src/my_app.cr&lt;/code&gt; 을 사용하여 &lt;code&gt;public&lt;/code&gt; 으로 문서를 출력 하려면 다음 인수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a73b66f81031402de286d776f78d1424356e484a" translate="yes" xml:space="preserve">
          <source>For this reason, Crystal needs to know, in an obvious way (as obvious as to a human), the types of instance and &lt;a href=&quot;class_variables&quot;&gt;class&lt;/a&gt; variables.</source>
          <target state="translated">이러한 이유로 Crystal은 인스턴스 및 &lt;a href=&quot;class_variables&quot;&gt;클래스&lt;/a&gt; 변수 의 유형을 사람에게 분명하게 알 수 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="9a5d3e8c5e0eb937e7d830e4f87673056ffe17b6" translate="yes" xml:space="preserve">
          <source>For this reason, iterating a String in this way is not optimal, and in fact has a complexity of &lt;code&gt;O(n^2)&lt;/code&gt;:</source>
          <target state="translated">이러한 이유로 문자열을 이런 식으로 반복하는 것은 최적이 아니며 실제로 &lt;code&gt;O(n^2)&lt;/code&gt; 의 복잡성을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="d04104accf008a1b1939acb82635652f5116c5a0" translate="yes" xml:space="preserve">
          <source>For this to be useful the method name should have some reference to the module, otherwise chances of name clashes are high.</source>
          <target state="translated">이것이 유용하려면 메소드 이름에 모듈에 대한 참조가 있어야합니다. 그렇지 않으면 이름이 충돌 할 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="559776cbe6be7ebc9336840a9a8c4a25d150e70a" translate="yes" xml:space="preserve">
          <source>For this to work, the type given to &lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; must implement &lt;code&gt;to_yaml(builder : &lt;a href=&quot;yaml/nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">이것이 작동하려면 &lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; 에 지정된 유형이 &lt;code&gt;to_yaml(builder : &lt;a href=&quot;yaml/nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt; )를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7523e1820fe3142f4efe2f003ee80f8406a9abe4" translate="yes" xml:space="preserve">
          <source>For those who don't know, a palindrome is a word which is spelled the same way forwards as it is backwards. e.g. racecar, mom, dad, kayak, madam</source>
          <target state="translated">모르는 사람들에게 회문은 뒤로와 같은 방식으로 철자가 나오는 단어입니다. 예 : 레이싱 카, 엄마, 아빠, 카약, 부인</target>
        </trans-unit>
        <trans-unit id="ccddf92c67b977011ae35e5278ff74d2b8f773d5" translate="yes" xml:space="preserve">
          <source>For unit tests, it is recommended to follow the conventions for method names: Outer &lt;code&gt;describe&lt;/code&gt; is the name of the class, inner &lt;code&gt;describe&lt;/code&gt; targets methods. Instance methods are prefixed with &lt;code&gt;#&lt;/code&gt;, class methods with &lt;code&gt;.&lt;/code&gt;.</source>
          <target state="translated">단위 테스트의 경우 메소드 이름에 대한 규칙을 따르는 것이 좋습니다. 외부 &lt;code&gt;describe&lt;/code&gt; 은 클래스 이름, 내부 &lt;code&gt;describe&lt;/code&gt; 대상 메소드입니다. 인스턴스 메소드 앞에는 &lt;code&gt;#&lt;/code&gt; , 클래스 메소드에는 접두사가 붙 습니다 &lt;code&gt;.&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a76e5f1b8637b5a3c3e7541d8835ab4b8020e6b4" translate="yes" xml:space="preserve">
          <source>For values below and including 127 this matches the ASCII codes and thus its byte representation.</source>
          <target state="translated">127 이하의 값은 ASCII 코드 및 바이트 표현과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8d827d40f60ab45e8297a869ad324475ed67ab61" translate="yes" xml:space="preserve">
          <source>Forbid network access</source>
          <target state="translated">네트워크 액세스 금지</target>
        </trans-unit>
        <trans-unit id="f119e0e6ec262c960ff4eeda388fb60e172af208" translate="yes" xml:space="preserve">
          <source>Force HTML serialization on XML doc</source>
          <target state="translated">XML 문서에서 HTML 직렬화 강제</target>
        </trans-unit>
        <trans-unit id="769ed60a6b1ef5425d7cbaa69cd3a96da0529c3d" translate="yes" xml:space="preserve">
          <source>Force XHTML1 specific rules</source>
          <target state="translated">XHTML1 특정 규칙 강제</target>
        </trans-unit>
        <trans-unit id="276eb3e62a79cd359419fcb443db993dd1d67375" translate="yes" xml:space="preserve">
          <source>Force XML serialization on HTML doc</source>
          <target state="translated">HTML 문서에서 XML 직렬화 강제</target>
        </trans-unit>
        <trans-unit id="15af0be9bcb8bd8dfc9df46aa725a1a4b939637c" translate="yes" xml:space="preserve">
          <source>Force pattern anchoring.</source>
          <target state="translated">Force pattern anchoring.</target>
        </trans-unit>
        <trans-unit id="434249f3da6b64e5211a71f6ee9f5f1a1c8bbcbf" translate="yes" xml:space="preserve">
          <source>Forces content written to this writer to be flushed to this writer's &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 라이터에 쓰여진 내용을이 라이터의 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 플러시 시킵니다.</target>
        </trans-unit>
        <trans-unit id="a767fbe89030fec3486fe27230894f937be24454" translate="yes" xml:space="preserve">
          <source>Fork it (&amp;lt;https://github.com/crystal-lang/crystal/fork&amp;gt;)</source>
          <target state="translated">포크 (&amp;lt;https://github.com/crystal-lang/crystal/fork&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="b92b85002a3fb316a5c6e08beb73b6cb9ed9d64d" translate="yes" xml:space="preserve">
          <source>FormData</source>
          <target state="translated">FormData</target>
        </trans-unit>
        <trans-unit id="9a15e8036f37c2873256112a520381c764c6ea2e" translate="yes" xml:space="preserve">
          <source>FormData.build</source>
          <target state="translated">FormData.build</target>
        </trans-unit>
        <trans-unit id="46235ed94b8460f8c332f9d99dd1b27a3e16998b" translate="yes" xml:space="preserve">
          <source>FormData.parse</source>
          <target state="translated">FormData.parse</target>
        </trans-unit>
        <trans-unit id="b18e13d9989430928fe9e2bab7b0d6c9f1970985" translate="yes" xml:space="preserve">
          <source>FormData.parse_content_disposition</source>
          <target state="translated">FormData.parse_content_disposition</target>
        </trans-unit>
        <trans-unit id="ae26e8d649ecf79c3c0920b30068a814e528e587" translate="yes" xml:space="preserve">
          <source>FormData::Builder</source>
          <target state="translated">FormData::Builder</target>
        </trans-unit>
        <trans-unit id="c29b5499201dec2d3460d8420516cd8af63b8281" translate="yes" xml:space="preserve">
          <source>FormData::Builder#boundary</source>
          <target state="translated">FormData::Builder#boundary</target>
        </trans-unit>
        <trans-unit id="c032d6732864956c735f6e083cc8f6c83bcb28ea" translate="yes" xml:space="preserve">
          <source>FormData::Builder#content_type</source>
          <target state="translated">FormData::Builder#content_type</target>
        </trans-unit>
        <trans-unit id="e6ffb3d8ec58cde6a939da24a70ec4fbcff46889" translate="yes" xml:space="preserve">
          <source>FormData::Builder#field</source>
          <target state="translated">FormData::Builder#field</target>
        </trans-unit>
        <trans-unit id="d798f7dd86a74c4a16eedaade0f8711571359225" translate="yes" xml:space="preserve">
          <source>FormData::Builder#file</source>
          <target state="translated">FormData::Builder#file</target>
        </trans-unit>
        <trans-unit id="42e22eee2a22dcaea169679c3a45a9f9fb4dfbc4" translate="yes" xml:space="preserve">
          <source>FormData::Builder#finish</source>
          <target state="translated">FormData::Builder#finish</target>
        </trans-unit>
        <trans-unit id="4fc0ab44b8b0fa369b3a3620b0ffd9471aed208c" translate="yes" xml:space="preserve">
          <source>FormData::Builder.new</source>
          <target state="translated">FormData::Builder.new</target>
        </trans-unit>
        <trans-unit id="be9733bb5afb866a873fed2229e6107f04f0b690" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata</source>
          <target state="translated">FormData::FileMetadata</target>
        </trans-unit>
        <trans-unit id="11ab1976fdf3a0322d7a09805428953711de2ac5" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#clone</source>
          <target state="translated">FormData::FileMetadata#clone</target>
        </trans-unit>
        <trans-unit id="582073e3cdf51c4de346a4c9f3145aa24ae66fca" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#copy_with</source>
          <target state="translated">FormData::FileMetadata#copy_with</target>
        </trans-unit>
        <trans-unit id="913d5d29637ffebbcf29aa8857444aa87f7780e9" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#creation_time</source>
          <target state="translated">FormData::FileMetadata#creation_time</target>
        </trans-unit>
        <trans-unit id="c74a47706c332e2a2bd1a2a6286aa0aae160b049" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#filename</source>
          <target state="translated">FormData::FileMetadata#filename</target>
        </trans-unit>
        <trans-unit id="1ffa98a8cd3e395735558449c6167b94b632d61f" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#modification_time</source>
          <target state="translated">FormData::FileMetadata#modification_time</target>
        </trans-unit>
        <trans-unit id="04711e46cec893b95e66b2d42cf6841f2cd06230" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#read_time</source>
          <target state="translated">FormData::FileMetadata#read_time</target>
        </trans-unit>
        <trans-unit id="7a09dd28e26809503b6af4e276ce4f5f379f85b9" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#size</source>
          <target state="translated">FormData::FileMetadata#size</target>
        </trans-unit>
        <trans-unit id="ddab053d06b65db9ec68a0a880da1efca899b5ab" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata.new</source>
          <target state="translated">FormData::FileMetadata.new</target>
        </trans-unit>
        <trans-unit id="0ec54804900d7b4e4de9df4afeff780a8bfff7df" translate="yes" xml:space="preserve">
          <source>FormData::Parser</source>
          <target state="translated">FormData::Parser</target>
        </trans-unit>
        <trans-unit id="987c25191d2d012a201555b7acb9d76bf024912f" translate="yes" xml:space="preserve">
          <source>FormData::Parser#has_next?</source>
          <target state="translated">FormData::Parser#has_next?</target>
        </trans-unit>
        <trans-unit id="9ec0860c0b724236bdd553eb124575f43ff7f476" translate="yes" xml:space="preserve">
          <source>FormData::Parser#next</source>
          <target state="translated">FormData::Parser#next</target>
        </trans-unit>
        <trans-unit id="7ee1cdfb02154ba5ad9dd1d46a170a5eb8e7d03c" translate="yes" xml:space="preserve">
          <source>FormData::Parser.new</source>
          <target state="translated">FormData::Parser.new</target>
        </trans-unit>
        <trans-unit id="53431a99bfd77f8d6a7231548ebf0022507e5021" translate="yes" xml:space="preserve">
          <source>FormData::Part</source>
          <target state="translated">FormData::Part</target>
        </trans-unit>
        <trans-unit id="4573099caf180d98688092744edb211a8437bd2b" translate="yes" xml:space="preserve">
          <source>FormData::Part#body</source>
          <target state="translated">FormData::Part#body</target>
        </trans-unit>
        <trans-unit id="dab1bc23d027248cc341db159c49334056afc55e" translate="yes" xml:space="preserve">
          <source>FormData::Part#creation_time</source>
          <target state="translated">FormData::Part#creation_time</target>
        </trans-unit>
        <trans-unit id="26e9372e225db1098313d79ce5fcafd9e1bd5c85" translate="yes" xml:space="preserve">
          <source>FormData::Part#filename</source>
          <target state="translated">FormData::Part#filename</target>
        </trans-unit>
        <trans-unit id="08ace5929c7c01c268076dd18e8877bef09bcb19" translate="yes" xml:space="preserve">
          <source>FormData::Part#headers</source>
          <target state="translated">FormData::Part#headers</target>
        </trans-unit>
        <trans-unit id="eabf565ac0d1714e65b02199603e5633cbf10fa5" translate="yes" xml:space="preserve">
          <source>FormData::Part#modification_time</source>
          <target state="translated">FormData::Part#modification_time</target>
        </trans-unit>
        <trans-unit id="778daf73383cc2b69526a005be78e7cd48c6150b" translate="yes" xml:space="preserve">
          <source>FormData::Part#name</source>
          <target state="translated">FormData::Part#name</target>
        </trans-unit>
        <trans-unit id="fdfdc4fd71a253598052177e5dd2038f8745f441" translate="yes" xml:space="preserve">
          <source>FormData::Part#read_time</source>
          <target state="translated">FormData::Part#read_time</target>
        </trans-unit>
        <trans-unit id="2df75dfc1ce4e765f5e02f6e41814a683fdf7f4b" translate="yes" xml:space="preserve">
          <source>FormData::Part#size</source>
          <target state="translated">FormData::Part#size</target>
        </trans-unit>
        <trans-unit id="9d42dd4041272127d0e625f6d867115a3f767039" translate="yes" xml:space="preserve">
          <source>FormData::Part.new</source>
          <target state="translated">FormData::Part.new</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="cf42c0221fc8822ae38cb3c379af59c3619e747a" translate="yes" xml:space="preserve">
          <source>Format a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; object as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using the format specified as &lt;code&gt;sane-cookie-date&lt;/code&gt; by &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.1&quot;&gt;RFC 6265&lt;/a&gt; which is according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616&lt;/a&gt; a &lt;a href=&quot;https://tools.ietf.org/html/rfc1123#page-55&quot;&gt;RFC 1123&lt;/a&gt; format with explicit timezone &lt;code&gt;GMT&lt;/code&gt; (interpreted as &lt;code&gt;UTC&lt;/code&gt;).</source>
          <target state="translated">포맷 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; A와 객체를 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 로 지정된 형식을 사용하여 &lt;code&gt;sane-cookie-date&lt;/code&gt; 로 &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.1&quot;&gt;RFC 6265를&lt;/a&gt; 따라하는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc1123#page-55&quot;&gt;RFC 1123&lt;/a&gt; 명시 적 시간대와 형식 &lt;code&gt;GMT&lt;/code&gt; (해석 &lt;code&gt;UTC&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a2bfce095b2762f88ae9777af5caf0c775ce0a04" translate="yes" xml:space="preserve">
          <source>Format save output</source>
          <target state="translated">형식 저장 출력</target>
        </trans-unit>
        <trans-unit id="b499d780f12a94da22ba35f82630583100d0b079" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile).</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; ( &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; 프로파일)로 지정된 형식을 사용하여 형식을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="641c141dccfac77206deeaba6bbd8ed130c84e0d" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile). into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; ( &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; 프로파일)로 지정된 형식을 사용하여 형식을 지정하십시오 . 주어진 &lt;em&gt;io에&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="60eef4ad68792ac98a07903b00b91f0d53684193" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt; into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt; 에 의해 지정된 형식으로 지정된 &lt;em&gt;io&lt;/em&gt; 로 형식을 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="be15c063b63355d288fe765faba2275a21328d47" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt;.</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822에&lt;/a&gt; 지정된 형식을 사용하여 형식을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e559669d4a4eadafe8f7b742a2976f581fad17f1" translate="yes" xml:space="preserve">
          <source>Format with non-significant whitespace</source>
          <target state="translated">중요하지 않은 공백으로 포맷</target>
        </trans-unit>
        <trans-unit id="4efaf653e6c9a99bc9a555b48b94ad156d60917c" translate="yes" xml:space="preserve">
          <source>Format#format</source>
          <target state="translated">Format#format</target>
        </trans-unit>
        <trans-unit id="56936970105c98cc75e8662c6d82466b093ef76e" translate="yes" xml:space="preserve">
          <source>Format#from_json</source>
          <target state="translated">Format#from_json</target>
        </trans-unit>
        <trans-unit id="ad7e38a7115d7e6ffa8e5b734c117a5c96f09d46" translate="yes" xml:space="preserve">
          <source>Format#from_yaml</source>
          <target state="translated">Format#from_yaml</target>
        </trans-unit>
        <trans-unit id="e37b69b8a7618fc35461975abbe9fc27fa27c55e" translate="yes" xml:space="preserve">
          <source>Format#parse</source>
          <target state="translated">Format#parse</target>
        </trans-unit>
        <trans-unit id="5d47f3d608c5c80fb28a7b6dbaac3cf7bd33d7ab" translate="yes" xml:space="preserve">
          <source>Format#pattern</source>
          <target state="translated">Format#pattern</target>
        </trans-unit>
        <trans-unit id="fcfa2d36cf93f688439c2751ad2f5b2312207026" translate="yes" xml:space="preserve">
          <source>Format#to_json</source>
          <target state="translated">Format#to_json</target>
        </trans-unit>
        <trans-unit id="af58ca755833eddb7bb8419be49360f046dddb16" translate="yes" xml:space="preserve">
          <source>Format#to_yaml</source>
          <target state="translated">Format#to_yaml</target>
        </trans-unit>
        <trans-unit id="b44549c2963dc9351595f81dc1290b9ff0d02131" translate="yes" xml:space="preserve">
          <source>Format.new</source>
          <target state="translated">Format.new</target>
        </trans-unit>
        <trans-unit id="0616661677b98941ad1ac60b12693963d969d95d" translate="yes" xml:space="preserve">
          <source>Format::HTTP_DATE</source>
          <target state="translated">Format::HTTP_DATE</target>
        </trans-unit>
        <trans-unit id="cc47b2cd325368a8ea87e2c1282eb523211dd997" translate="yes" xml:space="preserve">
          <source>Format::HTTP_DATE.format</source>
          <target state="translated">Format::HTTP_DATE.format</target>
        </trans-unit>
        <trans-unit id="4b3052b97bc192bd7cfbaf4b3f667f058f876cda" translate="yes" xml:space="preserve">
          <source>Format::HTTP_DATE.parse</source>
          <target state="translated">Format::HTTP_DATE.parse</target>
        </trans-unit>
        <trans-unit id="c0504141eebc129deef39d6cd3c2260e1ceb485a" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE</source>
          <target state="translated">Format::ISO_8601_DATE</target>
        </trans-unit>
        <trans-unit id="9261e89578fa816d3dbf6588a3fe96def4c75e0e" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE.format</source>
          <target state="translated">Format::ISO_8601_DATE.format</target>
        </trans-unit>
        <trans-unit id="93c5fe15ef2ad4823dae48d23345c7568cfc647f" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE.parse</source>
          <target state="translated">Format::ISO_8601_DATE.parse</target>
        </trans-unit>
        <trans-unit id="a0589d83f3d60182300badd595a8b4e9688fc9d5" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE_TIME</source>
          <target state="translated">Format::ISO_8601_DATE_TIME</target>
        </trans-unit>
        <trans-unit id="063c0238d8f6fabfc5b23b78d3815e7805f551fb" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE_TIME.format</source>
          <target state="translated">Format::ISO_8601_DATE_TIME.format</target>
        </trans-unit>
        <trans-unit id="f287969ef8ed1028b166139ba20221116d2d0d11" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE_TIME.parse</source>
          <target state="translated">Format::ISO_8601_DATE_TIME.parse</target>
        </trans-unit>
        <trans-unit id="1959e0a1d5d4f5a793f2ca4ad8d2025fc33f2254" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_TIME</source>
          <target state="translated">Format::ISO_8601_TIME</target>
        </trans-unit>
        <trans-unit id="7c73aa0b1f99c982a57d35387fc8d1b719619b27" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_TIME.format</source>
          <target state="translated">Format::ISO_8601_TIME.format</target>
        </trans-unit>
        <trans-unit id="0fb31a0b844cb783c15d71b378930f468d5145e9" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_TIME.parse</source>
          <target state="translated">Format::ISO_8601_TIME.parse</target>
        </trans-unit>
        <trans-unit id="b425faaf04762fb3822cde5f2a145d48dfab2d69" translate="yes" xml:space="preserve">
          <source>Format::RFC_2822</source>
          <target state="translated">Format::RFC_2822</target>
        </trans-unit>
        <trans-unit id="6675dd6a91c4119c2cbfcab03204c6771446add4" translate="yes" xml:space="preserve">
          <source>Format::RFC_2822.format</source>
          <target state="translated">Format::RFC_2822.format</target>
        </trans-unit>
        <trans-unit id="4fd47fce1afbc54fac883dbb8cd87aa1aaf8a6a9" translate="yes" xml:space="preserve">
          <source>Format::RFC_2822.parse</source>
          <target state="translated">Format::RFC_2822.parse</target>
        </trans-unit>
        <trans-unit id="3de53a9a7da272f52759f578f6d1ab2fef5ac47e" translate="yes" xml:space="preserve">
          <source>Format::RFC_3339</source>
          <target state="translated">Format::RFC_3339</target>
        </trans-unit>
        <trans-unit id="f446a8516407a5ca729ae09c39f52d17adc3e112" translate="yes" xml:space="preserve">
          <source>Format::RFC_3339.format</source>
          <target state="translated">Format::RFC_3339.format</target>
        </trans-unit>
        <trans-unit id="69e346532a61bfd66e5c5bcf4ceabfb4cc494090" translate="yes" xml:space="preserve">
          <source>Format::RFC_3339.parse</source>
          <target state="translated">Format::RFC_3339.parse</target>
        </trans-unit>
        <trans-unit id="9749765581a063011acc13ac2f5a6c2e0ab5e0e4" translate="yes" xml:space="preserve">
          <source>Format::YAML_DATE</source>
          <target state="translated">Format::YAML_DATE</target>
        </trans-unit>
        <trans-unit id="f436a7f4bc286f909511fbdf4d2a155c81cbed73" translate="yes" xml:space="preserve">
          <source>Format::YAML_DATE.format</source>
          <target state="translated">Format::YAML_DATE.format</target>
        </trans-unit>
        <trans-unit id="f5bb7f1cceec887f2535e2be4aea5e25c09b6daa" translate="yes" xml:space="preserve">
          <source>Format::YAML_DATE.parse?</source>
          <target state="translated">Format::YAML_DATE.parse?</target>
        </trans-unit>
        <trans-unit id="26409d9c8cdc08fb6598f53e6d6ec5ec7413e214" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">포맷합니다 &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="068f4f6756c071c2aa3a01070485270b1f3ae9d9" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io&lt;/em&gt; 로 &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 포맷합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9236d3e03512749fb32842c13319b66670ea955" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io&lt;/em&gt; 로 &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 포맷합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63ebcfdd15fb9fa10c3cc44eae751c5c8f6352ea" translate="yes" xml:space="preserve">
          <source>Formats this &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; according to the pattern in &lt;em&gt;format&lt;/em&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io &lt;/em&gt;&lt;em&gt;형식&lt;/em&gt; 의 패턴에 따라이 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;형식화&lt;/em&gt; 합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="040f8316cdc09eca08f1f37c6cccfc318caabff1" translate="yes" xml:space="preserve">
          <source>Formats this &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; according to the pattern in &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt; 의 패턴에 따라이 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;형식화합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1ae42b52d64655839743c546b646a36f423ad845" translate="yes" xml:space="preserve">
          <source>Formatter</source>
          <target state="translated">Formatter</target>
        </trans-unit>
        <trans-unit id="436b740b28ff5a90a83b6a1a3fd297d9ee9ec7ac" translate="yes" xml:space="preserve">
          <source>Formatter#format</source>
          <target state="translated">Formatter#format</target>
        </trans-unit>
        <trans-unit id="2a48d9dfe0ae12b17b9d57036f04f2597bac423a" translate="yes" xml:space="preserve">
          <source>Formatter.new</source>
          <target state="translated">Formatter.new</target>
        </trans-unit>
        <trans-unit id="41f5c37223636a01a0c383839c234ba4370120b0" translate="yes" xml:space="preserve">
          <source>Formatting and Parsing Time</source>
          <target state="translated">포맷팅 및 파싱 시간</target>
        </trans-unit>
        <trans-unit id="b84bb720cb300cdb66d642fda5209f27c585eaf8" translate="yes" xml:space="preserve">
          <source>Forwarding non-captured blocks</source>
          <target state="translated">캡처되지 않은 블록 전달</target>
        </trans-unit>
        <trans-unit id="26ae44dbc214b1819030cfd6b28ebe9faacf0ad4" translate="yes" xml:space="preserve">
          <source>Forwards &lt;code&gt;&lt;a href=&quot;any#to_json_object_key-instance-method&quot;&gt;#to_json_object_key&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;any#raw:Type-instance-method&quot;&gt;#raw&lt;/a&gt;&lt;/code&gt; if it responds to that method, raises &lt;code&gt;&lt;a href=&quot;../json/error&quot;&gt;JSON::Error&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">해당 메소드에 응답하면 &lt;code&gt;&lt;a href=&quot;any#to_json_object_key-instance-method&quot;&gt;#to_json_object_key&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;any#raw:Type-instance-method&quot;&gt;#raw&lt;/a&gt;&lt;/code&gt; 로 전달하고 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;../json/error&quot;&gt;JSON::Error&lt;/a&gt;&lt;/code&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="37e71ff5520b2459edcefa77de1c3c2506be127d" translate="yes" xml:space="preserve">
          <source>Forwards missing methods to &lt;em&gt;delegate&lt;/em&gt;.</source>
          <target state="translated">누락 된 메서드를 &lt;em&gt;위임&lt;/em&gt; 하도록 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="5f99878be141d36c2b0a19c86417fcb85398b86c" translate="yes" xml:space="preserve">
          <source>Free variables</source>
          <target state="translated">자유 변수</target>
        </trans-unit>
        <trans-unit id="faf24e02dd62fe775db5e9ce34305c390c736e1d" translate="yes" xml:space="preserve">
          <source>FreeBSD includes the Crystal compiler in the ports tree, starting from version FreeBSD 11.0.</source>
          <target state="translated">FreeBSD는 FreeBSD 11.0 버전부터 포트 트리에 Crystal 컴파일러를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7eaf14b210b5b40c2dc6d93dcef611c04d4040d7" translate="yes" xml:space="preserve">
          <source>Fresh variables</source>
          <target state="translated">신선한 변수</target>
        </trans-unit>
        <trans-unit id="fde8bdaf263c300f13df95222c6cb7549044c1a7" translate="yes" xml:space="preserve">
          <source>From a tar.gz</source>
          <target state="translated">tar.gz에서</target>
        </trans-unit>
        <trans-unit id="96f6aa37fe48e824ff53f024cc80ea1929b5fcfc" translate="yes" xml:space="preserve">
          <source>From here choose your next steps:</source>
          <target state="translated">From here choose your next steps:</target>
        </trans-unit>
        <trans-unit id="d0f2d400f1a0359df7d6127ebe1d4b8a8ff94b02" translate="yes" xml:space="preserve">
          <source>From here the guide differs depending on whether you are hosting your repo on GitHub or GitLab. If you're hosting somewhere else, please feel free to write up a guide and add it to this book!</source>
          <target state="translated">From here the guide differs depending on whether you are hosting your repo on GitHub or GitLab. If you're hosting somewhere else, please feel free to write up a guide and add it to this book!</target>
        </trans-unit>
        <trans-unit id="76fbb996d53b1908ff8489a20bd2d194921341e8" translate="yes" xml:space="preserve">
          <source>From methods</source>
          <target state="translated">방법에서</target>
        </trans-unit>
        <trans-unit id="4096750433ded6b0d29d371eefc43fc226d06bf2" translate="yes" xml:space="preserve">
          <source>From sources</source>
          <target state="translated">출처에서</target>
        </trans-unit>
        <trans-unit id="1027b4a693cc991ae39bc602c1be4e5da4749f4a" translate="yes" xml:space="preserve">
          <source>From this you can see that the main routine is simply the program itself: there's no need to define a &quot;main&quot; function or something similar.</source>
          <target state="translated">이것으로부터 메인 루틴이 단순히 프로그램 자체라는 것을 알 수 있습니다. &quot;메인&quot;기능이나 이와 유사한 것을 정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">기능 이름</target>
        </trans-unit>
        <trans-unit id="d9a41e2766a1818c1a2b009b7fe9c3ea498c67db" translate="yes" xml:space="preserve">
          <source>Function names in Crystal can be different from the C name. The following example shows how to bind the C function name &lt;code&gt;SDL_Init&lt;/code&gt; as &lt;code&gt;LibSDL.init&lt;/code&gt; in Crystal.</source>
          <target state="translated">Crystal의 함수 이름은 C 이름과 다를 수 있습니다. 다음 예는 Crystal에서 C 함수 이름 &lt;code&gt;SDL_Init&lt;/code&gt; 를 &lt;code&gt;LibSDL.init&lt;/code&gt; 로 바인딩하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bd60afb17eb1373b022a0f63e0359e2dbf61df32" translate="yes" xml:space="preserve">
          <source>Function names in a &lt;code&gt;lib&lt;/code&gt; definition can start with an upper case letter. That's different from methods and function definitions outside a &lt;code&gt;lib&lt;/code&gt;, which must start with a lower case letter.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 정의의 함수 이름 은 대문자로 시작할 수 있습니다. 그것은 소문자로 시작 해야하는 &lt;code&gt;lib&lt;/code&gt; 외부의 메소드 및 함수 정의와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="1775d6d229c09c127b9640c5b78d4c4c6d982d34" translate="yes" xml:space="preserve">
          <source>Function not implemented</source>
          <target state="translated">구현되지 않은 기능</target>
        </trans-unit>
        <trans-unit id="cd21de702e363d313856d31f0b31e899ff98db81" translate="yes" xml:space="preserve">
          <source>Function types (&lt;code&gt;Function(Int32, Int32)&lt;/code&gt;, which can also be written as &lt;code&gt;Int32 -&amp;gt; Int32&lt;/code&gt;)</source>
          <target state="translated">함수 유형 ( &lt;code&gt;Function(Int32, Int32)&lt;/code&gt; , &lt;code&gt;Int32 -&amp;gt; Int32&lt;/code&gt; 로도 쓸 수 있음 )</target>
        </trans-unit>
        <trans-unit id="72d994a709ff20f21bd01cabfec7aa99c96ec4b4" translate="yes" xml:space="preserve">
          <source>Function#add_attribute</source>
          <target state="translated">Function#add_attribute</target>
        </trans-unit>
        <trans-unit id="33ed2742cecbc552890dfd3837be5395cf6e4612" translate="yes" xml:space="preserve">
          <source>Function#add_target_dependent_attribute</source>
          <target state="translated">Function#add_target_dependent_attribute</target>
        </trans-unit>
        <trans-unit id="e9a0fc792f4b765098a92960f3ba1aea9da360bd" translate="yes" xml:space="preserve">
          <source>Function#attributes</source>
          <target state="translated">Function#attributes</target>
        </trans-unit>
        <trans-unit id="d6905ff963e01061d0a7f2a3b2bf0ae086730d37" translate="yes" xml:space="preserve">
          <source>Function#basic_blocks</source>
          <target state="translated">Function#basic_blocks</target>
        </trans-unit>
        <trans-unit id="141d57e58f0f8b3eee1d90c8450ad0e6ab8359c3" translate="yes" xml:space="preserve">
          <source>Function#call_convention</source>
          <target state="translated">Function#call_convention</target>
        </trans-unit>
        <trans-unit id="0aed350e50cd7716b32de9cade030a6d50b2af10" translate="yes" xml:space="preserve">
          <source>Function#call_convention=</source>
          <target state="translated">Function#call_convention=</target>
        </trans-unit>
        <trans-unit id="c664cd9f6ee6e8ec680c965fdc192d70466e7e8f" translate="yes" xml:space="preserve">
          <source>Function#delete</source>
          <target state="translated">Function#delete</target>
        </trans-unit>
        <trans-unit id="644f1263586ac1f86ffaf3d1a1913da2f78ff243" translate="yes" xml:space="preserve">
          <source>Function#function_type</source>
          <target state="translated">Function#function_type</target>
        </trans-unit>
        <trans-unit id="0d106c354df8c475a87c7a263a1004e0076f870c" translate="yes" xml:space="preserve">
          <source>Function#naked?</source>
          <target state="translated">Function#naked?</target>
        </trans-unit>
        <trans-unit id="8bfa23d2b89550c5c1a8f34f16ea61b0b57c332d" translate="yes" xml:space="preserve">
          <source>Function#params</source>
          <target state="translated">Function#params</target>
        </trans-unit>
        <trans-unit id="1432c63ccf749d35693c43ec9d067dcfaea30c3a" translate="yes" xml:space="preserve">
          <source>Function#personality_function=</source>
          <target state="translated">Function#personality_function=</target>
        </trans-unit>
        <trans-unit id="6f86ced355584e85ca5c2a8fe40550ab751bfc0f" translate="yes" xml:space="preserve">
          <source>Function#return_type</source>
          <target state="translated">Function#return_type</target>
        </trans-unit>
        <trans-unit id="4cebb702ce617f3d8b07e1aa236b41e3ef5b3762" translate="yes" xml:space="preserve">
          <source>Function#varargs?</source>
          <target state="translated">Function#varargs?</target>
        </trans-unit>
        <trans-unit id="2f35d347b5e853f5f9eafcdc11c9f0e4fd6a5bee" translate="yes" xml:space="preserve">
          <source>FunctionCollection</source>
          <target state="translated">FunctionCollection</target>
        </trans-unit>
        <trans-unit id="fed4fa54bd81a6c153cbb5415da6248c9f4111de" translate="yes" xml:space="preserve">
          <source>FunctionCollection#[]</source>
          <target state="translated">FunctionCollection#[]</target>
        </trans-unit>
        <trans-unit id="db1eb84dc5cada4f9fd150018d8f08dfcd6ed9d5" translate="yes" xml:space="preserve">
          <source>FunctionCollection#[]?</source>
          <target state="translated">FunctionCollection#[]?</target>
        </trans-unit>
        <trans-unit id="8ae0f0b55f8041076537b6eadbbb245a021180ee" translate="yes" xml:space="preserve">
          <source>FunctionCollection#add</source>
          <target state="translated">FunctionCollection#add</target>
        </trans-unit>
        <trans-unit id="17e32167031073966cd3a69c5d605bac4f354955" translate="yes" xml:space="preserve">
          <source>FunctionCollection#each</source>
          <target state="translated">FunctionCollection#each</target>
        </trans-unit>
        <trans-unit id="0713e9e94bbf10952762e8e12fd5a44b061e20c1" translate="yes" xml:space="preserve">
          <source>FunctionCollection.new</source>
          <target state="translated">FunctionCollection.new</target>
        </trans-unit>
        <trans-unit id="8631e42e8f73878cad556ec23bfcb15c599a689d" translate="yes" xml:space="preserve">
          <source>FunctionPassManager</source>
          <target state="translated">FunctionPassManager</target>
        </trans-unit>
        <trans-unit id="5ab74eef53153f9dd2c49837987c0e454820067c" translate="yes" xml:space="preserve">
          <source>FunctionPassManager#finalize</source>
          <target state="translated">FunctionPassManager#finalize</target>
        </trans-unit>
        <trans-unit id="e48d04965c138e8c5fd9fd8bb7e5359cbe390694" translate="yes" xml:space="preserve">
          <source>FunctionPassManager#run</source>
          <target state="translated">FunctionPassManager#run</target>
        </trans-unit>
        <trans-unit id="ec540c14ccdff5dc594c78478206db444b3ed812" translate="yes" xml:space="preserve">
          <source>FunctionPassManager#to_unsafe</source>
          <target state="translated">FunctionPassManager#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d2051c5d356c592b7ae9fe46242064cbba9ca8f8" translate="yes" xml:space="preserve">
          <source>FunctionPassManager.new</source>
          <target state="translated">FunctionPassManager.new</target>
        </trans-unit>
        <trans-unit id="78bd4cbc5e4871b29d00acf37102b419f8e95640" translate="yes" xml:space="preserve">
          <source>FunctionPassManager::Runner</source>
          <target state="translated">FunctionPassManager::Runner</target>
        </trans-unit>
        <trans-unit id="4c08c23284d8d59487bde634eebc2d6d77857366" translate="yes" xml:space="preserve">
          <source>FunctionPassManager::Runner#run</source>
          <target state="translated">FunctionPassManager::Runner#run</target>
        </trans-unit>
        <trans-unit id="242f71a2e8f0f0dae64281bf65d247c13b380212" translate="yes" xml:space="preserve">
          <source>FunctionPassManager::Runner.new</source>
          <target state="translated">FunctionPassManager::Runner.new</target>
        </trans-unit>
        <trans-unit id="99a3e18460e703b6b52b26b4155c66c3e3ba24bc" translate="yes" xml:space="preserve">
          <source>GC</source>
          <target state="translated">GC</target>
        </trans-unit>
        <trans-unit id="a9afc117e4540c7fddc93d9f14b8820ad4253ac6" translate="yes" xml:space="preserve">
          <source>GC.free</source>
          <target state="translated">GC.free</target>
        </trans-unit>
        <trans-unit id="443f225fa8259e6047ec3da28eeb27704ee03de9" translate="yes" xml:space="preserve">
          <source>GC.init</source>
          <target state="translated">GC.init</target>
        </trans-unit>
        <trans-unit id="1b4a551d58e17d222d99fcecb1bca3664223c6c3" translate="yes" xml:space="preserve">
          <source>GC::ProfStats</source>
          <target state="translated">GC::ProfStats</target>
        </trans-unit>
        <trans-unit id="cad3c0791c331beb74abf540ed4977ba5650da33" translate="yes" xml:space="preserve">
          <source>GC::Stats</source>
          <target state="translated">GC::Stats</target>
        </trans-unit>
        <trans-unit id="323014e7f21041a6225ced7c39f47bc6d05809c9" translate="yes" xml:space="preserve">
          <source>Garbage Collector: to clean up &quot;no longer used&quot; memory.</source>
          <target state="translated">가비지 콜렉터 : &quot;더 이상 사용되지 않은&quot;메모리를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="ec42eae74dc27fb80f26aa62c3a27bc1e9d31f69" translate="yes" xml:space="preserve">
          <source>General type-safe interface</source>
          <target state="translated">일반적인 유형 안전 인터페이스</target>
        </trans-unit>
        <trans-unit id="0b1bc89864eda0c643cbd43680a430a8610cf85e" translate="yes" xml:space="preserve">
          <source>Generate subclasses of &lt;code&gt;&lt;a href=&quot;log/staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt; from a string with interpolations</source>
          <target state="translated">Generate subclasses of &lt;code&gt;&lt;a href=&quot;log/staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt; from a string with interpolations</target>
        </trans-unit>
        <trans-unit id="da78d68656176ea84dc14d5490297ab86df26eb3" translate="yes" xml:space="preserve">
          <source>Generate, read and verify &lt;code&gt;&lt;a href=&quot;../bcrypt&quot;&gt;Crypto::Bcrypt&lt;/a&gt;&lt;/code&gt; hashes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../bcrypt&quot;&gt;Crypto::Bcrypt&lt;/a&gt;&lt;/code&gt; 해시 생성, 읽기 및 확인</target>
        </trans-unit>
        <trans-unit id="483065c403e85e9b5d6275c41c5c4660ce675fa0" translate="yes" xml:space="preserve">
          <source>Generates &lt;em&gt;n&lt;/em&gt; random bytes that are encoded into base64.</source>
          <target state="translated">base64로 인코딩 된 &lt;em&gt;n 개의&lt;/em&gt; 임의 바이트를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="f0fadb2cb9e15cd0296fe9691448f6eca2d5ab28" translate="yes" xml:space="preserve">
          <source>Generates RFC 4122 v4 UUID.</source>
          <target state="translated">RFC 4122 v4 UUID를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6c7b9bee62963bd11d7c4b19a4ebe2a33addb9da" translate="yes" xml:space="preserve">
          <source>Generates UUID from &lt;em&gt;bytes&lt;/em&gt;, applying &lt;em&gt;version&lt;/em&gt; and &lt;em&gt;variant&lt;/em&gt; to the UUID if present.</source>
          <target state="translated">&lt;em&gt;바이트&lt;/em&gt; 와 UUID를 생성 하고 &lt;em&gt;버전&lt;/em&gt; 과 &lt;em&gt;변형&lt;/em&gt; 을 UUID에 적용 합니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="9d962a677e9fd478a4cac8d463149fbc148c1976" translate="yes" xml:space="preserve">
          <source>Generates a hexadecimal string based on &lt;em&gt;n&lt;/em&gt; random bytes.</source>
          <target state="translated">&lt;em&gt;n 개의&lt;/em&gt; 임의 바이트를 기반으로 16 진 문자열을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="afd125609cc8fca5666f5a7c7c5fbbdcdbab952b" translate="yes" xml:space="preserve">
          <source>Generates a new TLS client context with sane defaults for a client connection.</source>
          <target state="translated">Generates a new TLS client context with sane defaults for a client connection.</target>
        </trans-unit>
        <trans-unit id="e3f4db7493e26c5fdadef55c90ec09149e883ee8" translate="yes" xml:space="preserve">
          <source>Generates a new TLS server context with sane defaults for a server connection.</source>
          <target state="translated">서버 연결에 대한 기본 기본값을 사용하여 새 TLS 서버 컨텍스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f86e1acbf988d6bf34ccc5e0ae165600ac9e79a8" translate="yes" xml:space="preserve">
          <source>Generates a random &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">임의의 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="7d3023d5e29d6b7090d343676b30fbc4cb2080da" translate="yes" xml:space="preserve">
          <source>Generates a random &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;1&lt;/code&gt; 사이 의 임의의 &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ba79c9b0ad3ac4644177de30312daacc9656df44" translate="yes" xml:space="preserve">
          <source>Generates a random integer which is greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than &lt;em&gt;max&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 보다 크고 &lt;em&gt;max&lt;/em&gt; 보다 작은 임의의 정수를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="9521587d3509b9013604a1332b513727ef266247" translate="yes" xml:space="preserve">
          <source>Generates a random unsigned integer.</source>
          <target state="translated">임의의 부호없는 정수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fd81a02fbb446799a8d4ccf5f58bd2e64b282e3b" translate="yes" xml:space="preserve">
          <source>Generates a slice filled with &lt;em&gt;n&lt;/em&gt; random bytes.</source>
          <target state="translated">&lt;em&gt;n 개의&lt;/em&gt; 임의 바이트로 채워진 슬라이스를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="f005e208eeb531241b0c88d5a6a31818d7a2fbeb" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;&lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; hash value for this object.</source>
          <target state="translated">이 객체 의 &lt;code&gt;&lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; 해시 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="3d3cff8b91dec76dacf77eee8cc9ee28632d4f10" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; hash value for this object.</source>
          <target state="translated">이 객체 의 &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; 해시 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="cb83bb5513d44f19055319ce1c8d1e31579935f5" translate="yes" xml:space="preserve">
          <source>Generates an INI-style configuration from a given hash.</source>
          <target state="translated">지정된 해시에서 INI 스타일 구성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e71397115f5f9a857f0d9f6392c0b08e35bba1e9" translate="yes" xml:space="preserve">
          <source>Generates random numbers from a secure source provided by the system.</source>
          <target state="translated">시스템이 제공 한 보안 소스에서 난수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0edb628a9542a14f813bd7de9f8386b56c8a58b5" translate="yes" xml:space="preserve">
          <source>Generates:</source>
          <target state="translated">Generates:</target>
        </trans-unit>
        <trans-unit id="8d6873375773b715a55ad609b73706d0e3e954a7" translate="yes" xml:space="preserve">
          <source>Generating</source>
          <target state="translated">Generating</target>
        </trans-unit>
        <trans-unit id="1125cd6c09015ea6ddee900989ddc85eb364176c" translate="yes" xml:space="preserve">
          <source>Generating with &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;):Nil-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Generating with &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;):Nil-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e603ef685ab4d71e74ed0bd538306e244905ded3" translate="yes" xml:space="preserve">
          <source>Generating with &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt; 로 생성</target>
        </trans-unit>
        <trans-unit id="b21c1476569529ed43deb2a32837f2fc9c98fac4" translate="yes" xml:space="preserve">
          <source>Generating with &lt;code&gt;to_json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;to_json&lt;/code&gt; 으로 생성</target>
        </trans-unit>
        <trans-unit id="9cbd748a3f653ce37101e16fc7adce84e181ab1a" translate="yes" xml:space="preserve">
          <source>Generic (useful) information about system operation</source>
          <target state="translated">시스템 작동에 대한 일반 (유용한) 정보</target>
        </trans-unit>
        <trans-unit id="65750b23ac892f289517e6c4c742293326961028" translate="yes" xml:space="preserve">
          <source>Generic JSON error.</source>
          <target state="translated">일반 JSON 오류</target>
        </trans-unit>
        <trans-unit id="33810662706c9092d5e5b948dfdedded4e611f7f" translate="yes" xml:space="preserve">
          <source>Generic Type Argument</source>
          <target state="translated">제네릭 형식 인수</target>
        </trans-unit>
        <trans-unit id="0eec0953ed7b87df6d15e144d57f2ab3a7f37e50" translate="yes" xml:space="preserve">
          <source>Generic classes and structs can be inherited. When inheriting you can specify an instance of the generic type, or delegate type variables:</source>
          <target state="translated">일반 클래스와 구조체는 상속 될 수 있습니다. 상속 할 때 제네릭 형식의 인스턴스를 지정하거나 형식 변수를 위임 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="049805455f6075a4285aa631d2f872467a2424b1" translate="yes" xml:space="preserve">
          <source>Generic structs and modules</source>
          <target state="translated">일반적인 구조체와 모듈</target>
        </trans-unit>
        <trans-unit id="d64f429cbbf8ba34a9a8add30a8c8f2a8f65c3f0" translate="yes" xml:space="preserve">
          <source>Generic types inheritance</source>
          <target state="translated">제네릭 형식 상속</target>
        </trans-unit>
        <trans-unit id="241c2a37392921378a3f0db985295b611089f317" translate="yes" xml:space="preserve">
          <source>GenericValue</source>
          <target state="translated">GenericValue</target>
        </trans-unit>
        <trans-unit id="46e47b69dc5de36edc023ef3ecac77ead88313ed" translate="yes" xml:space="preserve">
          <source>GenericValue#finalize</source>
          <target state="translated">GenericValue#finalize</target>
        </trans-unit>
        <trans-unit id="5b4478c5c5159d8cda061ee8a9d1dece1ecaf501" translate="yes" xml:space="preserve">
          <source>GenericValue#to_b</source>
          <target state="translated">GenericValue#to_b</target>
        </trans-unit>
        <trans-unit id="4e0c7a11c786fa0eb5fa3393621c66c121ca8a87" translate="yes" xml:space="preserve">
          <source>GenericValue#to_f32</source>
          <target state="translated">GenericValue#to_f32</target>
        </trans-unit>
        <trans-unit id="98f317e3b904e282e6469f9f262c5234b13f9ed6" translate="yes" xml:space="preserve">
          <source>GenericValue#to_f64</source>
          <target state="translated">GenericValue#to_f64</target>
        </trans-unit>
        <trans-unit id="967b86a91915d7870df6dffa628aea4596f947d6" translate="yes" xml:space="preserve">
          <source>GenericValue#to_i</source>
          <target state="translated">GenericValue#to_i</target>
        </trans-unit>
        <trans-unit id="ebfa33b019477ddd455df6b7d1678c6b34974998" translate="yes" xml:space="preserve">
          <source>GenericValue#to_i64</source>
          <target state="translated">GenericValue#to_i64</target>
        </trans-unit>
        <trans-unit id="3d5d724474181945a87d98c4f79d217691cc6212" translate="yes" xml:space="preserve">
          <source>GenericValue#to_pointer</source>
          <target state="translated">GenericValue#to_pointer</target>
        </trans-unit>
        <trans-unit id="fb10d9f40c066fc820a5ae4be1d30318346085b9" translate="yes" xml:space="preserve">
          <source>GenericValue#to_string</source>
          <target state="translated">GenericValue#to_string</target>
        </trans-unit>
        <trans-unit id="37405cf61c0a59ee9fcfca73d7a61d5fd66f87b2" translate="yes" xml:space="preserve">
          <source>GenericValue#to_u64</source>
          <target state="translated">GenericValue#to_u64</target>
        </trans-unit>
        <trans-unit id="30cf36cb8c6a50474e4a72ecb909920ee3c00edc" translate="yes" xml:space="preserve">
          <source>GenericValue#to_unsafe</source>
          <target state="translated">GenericValue#to_unsafe</target>
        </trans-unit>
        <trans-unit id="0a05820ad3444e0d51d915dd1c1887c685961b73" translate="yes" xml:space="preserve">
          <source>GenericValue.new</source>
          <target state="translated">GenericValue.new</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="ce19bd3f6dfc058e3e1c7c245c35b813ed70ee1a" translate="yes" xml:space="preserve">
          <source>Generics allow you to parameterize a type based on other type. Consider a Box type:</source>
          <target state="translated">제네릭을 사용하면 다른 유형에 따라 유형을 매개 변수화 할 수 있습니다. 상자 유형을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="02588562da23ba3a1a60b020bf4ec4258ae0e37b" translate="yes" xml:space="preserve">
          <source>Generics are especially useful for implementing collection types. &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt; are generic types, as is &lt;code&gt;Pointer&lt;/code&gt;.</source>
          <target state="translated">제네릭은 특히 컬렉션 유형을 구현하는 데 유용합니다. &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Hash&lt;/code&gt; , &lt;code&gt;Set&lt;/code&gt; 은 &lt;code&gt;Pointer&lt;/code&gt; 와 같은 일반 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="74abd4e367bcdb56b18e2ae30bcd2aacc6bb9c2a" translate="yes" xml:space="preserve">
          <source>Gentoo Linux includes the Crystal compiler in the main overlay.</source>
          <target state="translated">젠투 리눅스는 메인 오버레이에 Crystal 컴파일러를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="185187f80dd7a733eba62e844b9ba7b3b8c67e50" translate="yes" xml:space="preserve">
          <source>Gets a string from &lt;code&gt;reader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reader&lt;/code&gt; 에서 문자열을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6c5411fef46f25b9827504d28e5d37a5db503170" translate="yes" xml:space="preserve">
          <source>Gets an access token from a previously obtained request token and an &lt;em&gt;oauth_verifier&lt;/em&gt; obtained from an authorize URI, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.3&quot;&gt;RFC 5849, Section 2.3&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.3&quot;&gt;RFC 5849 섹션 2.3에&lt;/a&gt; 지정된대로 이전에 얻은 요청 토큰 및 권한 부여 URI에서 얻은 &lt;em&gt;oauth_verifier&lt;/em&gt; 에서 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="a911e04d4721e04739507a5374819ba7318601ea" translate="yes" xml:space="preserve">
          <source>Gets an access token using a refresh token, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-6&quot;&gt;RFC 6749, Section 6&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-6&quot;&gt;RFC 6749 섹션 6에&lt;/a&gt; 지정된 새로 고침 토큰을 사용하여 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="6202be15644d203da0628967963de643712896fa" translate="yes" xml:space="preserve">
          <source>Gets an access token using an authorization code, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.1.3&quot;&gt;RFC 6749, Section 4.1.3&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.1.3&quot;&gt;RFC 6749, 섹션 4.1.3에&lt;/a&gt; 지정된 인증 코드를 사용하여 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="6b093328f248b4713383dd1b200d93cdc3f744cb" translate="yes" xml:space="preserve">
          <source>Gets an access token using client credentials, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.4.2&quot;&gt;RFC 6749, Section 4.4.2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.4.2&quot;&gt;RFC 6749 섹션 4.4.2에&lt;/a&gt; 지정된 클라이언트 자격 증명을 사용하여 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="454c68f501446681ff3eed78387eb9cd66af86c3" translate="yes" xml:space="preserve">
          <source>Gets an access token using the resource owner credentials, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.3.2&quot;&gt;RFC 6749, Section 4.3.2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.3.2&quot;&gt;RFC 6749, 섹션 4.3.2에&lt;/a&gt; 지정된대로 리소스 소유자 자격 증명을 사용하여 액세스 토큰을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c9cd40fccb0d94b2abefabd53f5542c1d8d92f76" translate="yes" xml:space="preserve">
          <source>Gets the attribute content for the &lt;em&gt;attribute&lt;/em&gt; given by name.</source>
          <target state="translated">에 대한 속성의 콘텐츠를 가져옵니다 &lt;em&gt;속성&lt;/em&gt; 이름으로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="597dc4b464017a1b810e55a37b95b820496e7393" translate="yes" xml:space="preserve">
          <source>Gets the attribute content for the &lt;em&gt;attribute&lt;/em&gt; given by name. Raises &lt;code&gt;&lt;a href=&quot;../keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; if attribute is not found.</source>
          <target state="translated">에 대한 속성의 콘텐츠를 가져옵니다 &lt;em&gt;속성&lt;/em&gt; 이름으로 제공합니다. 발생시킵니다 &lt;code&gt;&lt;a href=&quot;../keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; 를를 속성이 발견되지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="c2a15834407a0000b7f1b654ea2577ac8acea1f0" translate="yes" xml:space="preserve">
          <source>Gets the attribute content for the &lt;em&gt;attribute&lt;/em&gt; given by name. Returns &lt;code&gt;nil&lt;/code&gt; if attribute is not found.</source>
          <target state="translated">에 대한 속성의 콘텐츠를 가져옵니다 &lt;em&gt;속성&lt;/em&gt; 이름으로 제공합니다. 속성이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="47c99bfca70dad332dd906ae34f412eb3767d8ca" translate="yes" xml:space="preserve">
          <source>Gets the current &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; for the given &lt;em&gt;key&lt;/em&gt; or &lt;code&gt;nil&lt;/code&gt; if none is set.</source>
          <target state="translated">현재 가져옵니다 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; 주어진에 대한 &lt;em&gt;키&lt;/em&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 아무것도 설정되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="248272ec50333a0ed19e9173bf5b90799e5ec8c6" translate="yes" xml:space="preserve">
          <source>Gets the current &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; for the given &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;키에&lt;/em&gt; 대한 현재 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; 를 가져옵니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74b715909119630b285cd320a5ef62c142bb99df" translate="yes" xml:space="preserve">
          <source>Gets the document for this Node as a &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 노드의 문서를 &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; 로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f8e439bf381b2bc663d72c74e50c5149e1adfa37" translate="yes" xml:space="preserve">
          <source>Gets the list of children for this node as a &lt;code&gt;&lt;a href=&quot;nodeset&quot;&gt;XML::NodeSet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 노드의 자식리스트를 &lt;code&gt;&lt;a href=&quot;nodeset&quot;&gt;XML::NodeSet&lt;/a&gt;&lt;/code&gt; 로 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="3842c47123da4ba03e2de8ecbb6383f53e5484bc" translate="yes" xml:space="preserve">
          <source>Gets the value of an environment variable at compile-time, or &lt;code&gt;nil&lt;/code&gt; if it doesn't exist.</source>
          <target state="translated">컴파일 타임에 환경 변수의 값을 가져 오거나 존재하지 않는 경우 &lt;code&gt;nil&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ac912e83d25ab4c1d028d8b85b3c09f13de1a492" translate="yes" xml:space="preserve">
          <source>Gets the value pointed at this pointer's address plus &lt;code&gt;offset * sizeof(T)&lt;/code&gt;.</source>
          <target state="translated">이 포인터의 주소와 &lt;code&gt;offset * sizeof(T)&lt;/code&gt; 지정된 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5a743423cf7bbdd346e177ec08875ed99792c883" translate="yes" xml:space="preserve">
          <source>Gets the value pointed by this pointer.</source>
          <target state="translated">이 포인터가 가리키는 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="29dde79e94af4ddc43743a123e656f27a0e42db2" translate="yes" xml:space="preserve">
          <source>Getters and setters</source>
          <target state="translated">게터와 세터</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="e90742eb6d4ea9a533916ec22aac63a1d3c8c141" translate="yes" xml:space="preserve">
          <source>Getting started: Command Line Interface Application</source>
          <target state="translated">Getting started: Command Line Interface Application</target>
        </trans-unit>
        <trans-unit id="63de3c068853816c1318d515893e6dc566ecc9de" translate="yes" xml:space="preserve">
          <source>Getting started: HTTP Server</source>
          <target state="translated">Getting started: HTTP Server</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="e61fe3ded14edcc0df05befc99f58906cf361eb0" translate="yes" xml:space="preserve">
          <source>GitHub Releases</source>
          <target state="translated">GitHub 릴리즈</target>
        </trans-unit>
        <trans-unit id="69ec326a5b6841d0fe925c7e5fb49d46d58a3f57" translate="yes" xml:space="preserve">
          <source>GitLab also has a &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/releases.html&quot;&gt;releases feature&lt;/a&gt; that let's you associate files and a description with this tag. That way you can (for example) distribute binaries.</source>
          <target state="translated">GitLab also has a &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/releases.html&quot;&gt;releases feature&lt;/a&gt; that let's you associate files and a description with this tag. That way you can (for example) distribute binaries.</target>
        </trans-unit>
        <trans-unit id="6fb429020773f0c0bbb8400e6f573952673b9e03" translate="yes" xml:space="preserve">
          <source>Given a valid keyword, Crystal will automatically generate visual flags that help highlight problems, notes and/or possible issues.</source>
          <target state="translated">유효한 키워드가 있으면 Crystal은 문제, 메모 및 / 또는 가능한 문제를 강조하는 데 도움이되는 시각적 플래그를 자동으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="82a8be040b46d3fbfc9127ebdf0724b876e13233" translate="yes" xml:space="preserve">
          <source>Given the examples, it may come to our attention that &lt;strong&gt;the number of connections is relevant&lt;/strong&gt;. If we are programming a short living application with only one user starting requests to the database then a single connection managed by us (i.e. a &lt;code&gt;DB::Connection&lt;/code&gt; object) should be enough (think of a command line application that receives parameters, then starts a request to the database and finally displays the result to the user) On the other hand, if we are building a system with many concurrent users and with heavy database access, then we should use a &lt;code&gt;DB::Database&lt;/code&gt; object; which by using a connection pool will have a number of connections already prepared and ready to use (no bootstrap/initialization-time penalizations). Or imagine that you are building a long-living application (like a background job) then a connection pool will free you from the responsibility of monitoring the state of the connection: is it alive or does it need to reconnect?</source>
          <target state="translated">Given the examples, it may come to our attention that &lt;strong&gt;the number of connections is relevant&lt;/strong&gt;. If we are programming a short living application with only one user starting requests to the database then a single connection managed by us (i.e. a &lt;code&gt;DB::Connection&lt;/code&gt; object) should be enough (think of a command line application that receives parameters, then starts a request to the database and finally displays the result to the user) On the other hand, if we are building a system with many concurrent users and with heavy database access, then we should use a &lt;code&gt;DB::Database&lt;/code&gt; object; which by using a connection pool will have a number of connections already prepared and ready to use (no bootstrap/initialization-time penalizations). Or imagine that you are building a long-living application (like a background job) then a connection pool will free you from the responsibility of monitoring the state of the connection: is it alive or does it need to reconnect?</target>
        </trans-unit>
        <trans-unit id="658f3af10668ba9db8155a8cdfe0b82d03e29031" translate="yes" xml:space="preserve">
          <source>Given the same number of arguments, the compiler will try to sort them by leaving the less restrictive ones to the end:</source>
          <target state="translated">동일한 개수의 인수가 주어지면 컴파일러는 덜 제한적인 인수를 끝에 남겨서 정렬하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="5d6229469a9b6343c9395790826084f2f26f6d02" translate="yes" xml:space="preserve">
          <source>Gives a compile-time error if the file doesn't exist or if reading the file fails.</source>
          <target state="translated">파일이 없거나 파일 읽기에 실패하면 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b25fb36d96a83da69e3793a310e146df18d10c84" translate="yes" xml:space="preserve">
          <source>Gives a compile-time error with the given &lt;em&gt;message&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;메시지&lt;/em&gt; 와 함께 컴파일 타임 오류를 제공 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e5f8b75d8cb15275f9402ca76e3a1235ac555c39" translate="yes" xml:space="preserve">
          <source>Gives a compile-time error with the given &lt;em&gt;message&lt;/em&gt;. This will highlight this node in the error message.</source>
          <target state="translated">주어진 &lt;em&gt;메시지&lt;/em&gt; 와 함께 컴파일 타임 오류를 제공 &lt;em&gt;합니다&lt;/em&gt; . 오류 메시지에서이 노드가 강조 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4ab36b2fa1feba713a85484881423c416488b11b" translate="yes" xml:space="preserve">
          <source>Gives a hint to the compiler to always inline a method:</source>
          <target state="translated">컴파일러에게 항상 메소드를 인라인하는 힌트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9523cf6339fd4cee21bf2a729ef44a6e64c0dc61" translate="yes" xml:space="preserve">
          <source>GlobalCollection</source>
          <target state="translated">GlobalCollection</target>
        </trans-unit>
        <trans-unit id="33a104a25d403d07a29040b9d4cfbce655e6fa0a" translate="yes" xml:space="preserve">
          <source>GlobalCollection#[]</source>
          <target state="translated">GlobalCollection#[]</target>
        </trans-unit>
        <trans-unit id="616def6964f931bcecc7573c5a5dc03369f2b817" translate="yes" xml:space="preserve">
          <source>GlobalCollection#[]?</source>
          <target state="translated">GlobalCollection#[]?</target>
        </trans-unit>
        <trans-unit id="2ecf7582ca239142bf895689a7bbf8e65f91fac5" translate="yes" xml:space="preserve">
          <source>GlobalCollection#add</source>
          <target state="translated">GlobalCollection#add</target>
        </trans-unit>
        <trans-unit id="1de574efbdfa0dbbc7fecb54428fe9e7854b9964" translate="yes" xml:space="preserve">
          <source>GlobalCollection.new</source>
          <target state="translated">GlobalCollection.new</target>
        </trans-unit>
        <trans-unit id="e5fc8e58167f8c8fe63eb4c952edf94d645b45a0" translate="yes" xml:space="preserve">
          <source>Go ahead and delete the default &lt;code&gt;travis.yml&lt;/code&gt; that comes with the project. We won't be needing it.</source>
          <target state="translated">Go ahead and delete the default &lt;code&gt;travis.yml&lt;/code&gt; that comes with the project. We won't be needing it.</target>
        </trans-unit>
        <trans-unit id="7a9f119b1fe0918d1d0757bfde6e58c2033a929b" translate="yes" xml:space="preserve">
          <source>Good examples of the above are &lt;code&gt;&lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt;Number#divmod&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;Enumerable#minmax&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">위의 좋은 예는 &lt;code&gt;&lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt;Number#divmod&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;Enumerable#minmax&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7afa0bd37a9ff8715547823b67f37ddb334f4998" translate="yes" xml:space="preserve">
          <source>Gracefully terminates the server.</source>
          <target state="translated">서버를 정상적으로 종료합니다.</target>
        </trans-unit>
        <trans-unit id="f015d9fd3cb9ef1fda8080a19d127bda7473bca9" translate="yes" xml:space="preserve">
          <source>Gracefully terminates the server. It will process currently accepted requests, but it won't accept new connections.</source>
          <target state="translated">서버를 정상적으로 종료합니다. 현재 승인 된 요청을 처리하지만 새 연결은 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="91bb266617e23b370aa2f7ca013ddea693880bcb" translate="yes" xml:space="preserve">
          <source>Great!</source>
          <target state="translated">Great!</target>
        </trans-unit>
        <trans-unit id="7c5cbdb615d7a319514cf4aca5ef3b4fdc54d5ab" translate="yes" xml:space="preserve">
          <source>Great! That was easy! Now imagine using this string as the banner for our All My CLI application, it's easy if you try:</source>
          <target state="translated">Great! That was easy! Now imagine using this string as the banner for our All My CLI application, it's easy if you try:</target>
        </trans-unit>
        <trans-unit id="a937c07826cfc293e1c27eb0ed3c8605420fe1b7" translate="yes" xml:space="preserve">
          <source>Great! These applications look awesome! But, &lt;strong&gt;what happens when we pass an option that is not declared?&lt;/strong&gt; For example -n</source>
          <target state="translated">Great! These applications look awesome! But, &lt;strong&gt;what happens when we pass an option that is not declared?&lt;/strong&gt; For example -n</target>
        </trans-unit>
        <trans-unit id="0e53114b32b18e2352f805f5a415a65e6dd6a2f7" translate="yes" xml:space="preserve">
          <source>Group#==</source>
          <target state="translated">Group#==</target>
        </trans-unit>
        <trans-unit id="e1c621da7025c7837ad3dd79e2a0b1951bcc792f" translate="yes" xml:space="preserve">
          <source>Group#hash</source>
          <target state="translated">Group#hash</target>
        </trans-unit>
        <trans-unit id="c47fb3cc8b3698c5dda67891040f723e33de442b" translate="yes" xml:space="preserve">
          <source>Group#id</source>
          <target state="translated">Group#id</target>
        </trans-unit>
        <trans-unit id="34792d92c6213d63b2fea63898fe349b9721b366" translate="yes" xml:space="preserve">
          <source>Group#name</source>
          <target state="translated">Group#name</target>
        </trans-unit>
        <trans-unit id="030a5113448460d1e749f269ea4d8f644e763fc0" translate="yes" xml:space="preserve">
          <source>Group#to_s</source>
          <target state="translated">Group#to_s</target>
        </trans-unit>
        <trans-unit id="014eef4372ee93fc5206071695450bb123644c3f" translate="yes" xml:space="preserve">
          <source>Group.find_by</source>
          <target state="translated">Group.find_by</target>
        </trans-unit>
        <trans-unit id="eb1e4843115916d8a99e3c30fde9ba5cae4d4e65" translate="yes" xml:space="preserve">
          <source>Group.find_by?</source>
          <target state="translated">Group.find_by?</target>
        </trans-unit>
        <trans-unit id="04db27ab7b86dcc91db1ae67b9be7fa786713955" translate="yes" xml:space="preserve">
          <source>Groups can be retrieved by either group name or their group ID:</source>
          <target state="translated">그룹 이름 또는 그룹 ID로 그룹을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="d78100b5c449d5e58c1f503629522472e4c7f896" translate="yes" xml:space="preserve">
          <source>Guides: CircleCI</source>
          <target state="translated">Guides: CircleCI</target>
        </trans-unit>
        <trans-unit id="75280749b7724f3bc4cbf5aac4d7e73b5dc70703" translate="yes" xml:space="preserve">
          <source>Guides: Concurrency</source>
          <target state="translated">가이드 : 동시성</target>
        </trans-unit>
        <trans-unit id="b2f2b21644ddb8c8057845839e7befc75306e592" translate="yes" xml:space="preserve">
          <source>Guides: Continuous Integration</source>
          <target state="translated">Guides: Continuous Integration</target>
        </trans-unit>
        <trans-unit id="a920f3dbc8d86d08b0ac15f2a6f69240bb9a9d59" translate="yes" xml:space="preserve">
          <source>Guides: Hosting on GitHub</source>
          <target state="translated">Guides: Hosting on GitHub</target>
        </trans-unit>
        <trans-unit id="01d13731e52054b91d10afb329a3ecab59439dd8" translate="yes" xml:space="preserve">
          <source>Guides: Hosting on GitLab</source>
          <target state="translated">Guides: Hosting on GitLab</target>
        </trans-unit>
        <trans-unit id="72c51ddd4e8a1494b98124975d25093706fa2c76" translate="yes" xml:space="preserve">
          <source>Guides: Performance</source>
          <target state="translated">가이드 : 성능</target>
        </trans-unit>
        <trans-unit id="ad83d958178c3588ad38b07d9066a4f0e06c5f76" translate="yes" xml:space="preserve">
          <source>Guides: Testing Crystal Code</source>
          <target state="translated">가이드 : Crystal Code 테스트</target>
        </trans-unit>
        <trans-unit id="1f070394a11a30072617fdacfdfe1bfa9f676117" translate="yes" xml:space="preserve">
          <source>Guides: Travis CI</source>
          <target state="translated">Guides: Travis CI</target>
        </trans-unit>
        <trans-unit id="b08a77a4977ca5f4311e2aa56e9ca52d2dc35f5b" translate="yes" xml:space="preserve">
          <source>Guides: Writing Shards</source>
          <target state="translated">가이드 : 샤드 작성</target>
        </trans-unit>
        <trans-unit id="39cca1d5e41ae5e6a70bbebcc97f972c9be94398" translate="yes" xml:space="preserve">
          <source>Gzip</source>
          <target state="translated">Gzip</target>
        </trans-unit>
        <trans-unit id="43b7d8ca37c6574d78b858e7d38f9117b020e923" translate="yes" xml:space="preserve">
          <source>Gzip::Error</source>
          <target state="translated">Gzip::Error</target>
        </trans-unit>
        <trans-unit id="4d980ded7c45eb27b07c81de4fcaca9a69ec8230" translate="yes" xml:space="preserve">
          <source>Gzip::Header</source>
          <target state="translated">Gzip::Header</target>
        </trans-unit>
        <trans-unit id="8ad0b61dffb48aea914a5c199099b0b899158fc6" translate="yes" xml:space="preserve">
          <source>Gzip::Header#comment</source>
          <target state="translated">Gzip::Header#comment</target>
        </trans-unit>
        <trans-unit id="f6ed1a74eb7909e899771e2cd6a4ac5ddfdb527a" translate="yes" xml:space="preserve">
          <source>Gzip::Header#comment=</source>
          <target state="translated">Gzip::Header#comment=</target>
        </trans-unit>
        <trans-unit id="75298549c65c4bfbdf14b76b75cf52d6ecf5a9f1" translate="yes" xml:space="preserve">
          <source>Gzip::Header#extra</source>
          <target state="translated">Gzip::Header#extra</target>
        </trans-unit>
        <trans-unit id="9959a0d8d1de80dee6d53205699ca74e38116784" translate="yes" xml:space="preserve">
          <source>Gzip::Header#extra=</source>
          <target state="translated">Gzip::Header#extra=</target>
        </trans-unit>
        <trans-unit id="86f0c280027b4e656cea54eb4a01d869426f9c3b" translate="yes" xml:space="preserve">
          <source>Gzip::Header#modification_time</source>
          <target state="translated">Gzip::Header#modification_time</target>
        </trans-unit>
        <trans-unit id="487c0af71311e500b5d84bbcfa4a1f321b109f05" translate="yes" xml:space="preserve">
          <source>Gzip::Header#modification_time=</source>
          <target state="translated">Gzip::Header#modification_time=</target>
        </trans-unit>
        <trans-unit id="e115d697e9c7d82646ae982cc917c9a8232e1ee6" translate="yes" xml:space="preserve">
          <source>Gzip::Header#name</source>
          <target state="translated">Gzip::Header#name</target>
        </trans-unit>
        <trans-unit id="f19506678152ad135e1c495041c89b0c73a41321" translate="yes" xml:space="preserve">
          <source>Gzip::Header#name=</source>
          <target state="translated">Gzip::Header#name=</target>
        </trans-unit>
        <trans-unit id="76fa5d7a02c8606808a07b243f8cecfcce2d5219" translate="yes" xml:space="preserve">
          <source>Gzip::Header#os</source>
          <target state="translated">Gzip::Header#os</target>
        </trans-unit>
        <trans-unit id="6cdd368e67d69a48c1b1c6b961e5bb5eed487418" translate="yes" xml:space="preserve">
          <source>Gzip::Header#os=</source>
          <target state="translated">Gzip::Header#os=</target>
        </trans-unit>
        <trans-unit id="38497a3d54759d01ef9b0da7cfd0e67f5081e745" translate="yes" xml:space="preserve">
          <source>Gzip::Reader</source>
          <target state="translated">Gzip::Reader</target>
        </trans-unit>
        <trans-unit id="02f08f7bc9cf2ccd1f4b70687ea49cc0aa2ca555" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#closed?</source>
          <target state="translated">Gzip::Reader#closed?</target>
        </trans-unit>
        <trans-unit id="f5964883f16e674495f323b26fe392d43df6a9da" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#header</source>
          <target state="translated">Gzip::Reader#header</target>
        </trans-unit>
        <trans-unit id="5621dbe5fa324eba47917dcf0a887059191bc2d1" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#sync_close=</source>
          <target state="translated">Gzip::Reader#sync_close=</target>
        </trans-unit>
        <trans-unit id="d8b75b0410e08ec2fd11da77abc1521033f97e33" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#sync_close?</source>
          <target state="translated">Gzip::Reader#sync_close?</target>
        </trans-unit>
        <trans-unit id="5a6d3cf339c59f2c29dbfa981bdec73b1963a950" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_close</source>
          <target state="translated">Gzip::Reader#unbuffered_close</target>
        </trans-unit>
        <trans-unit id="46a185a8e6d78a9cc3e1329e2b6a5e99c2079fe4" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_flush</source>
          <target state="translated">Gzip::Reader#unbuffered_flush</target>
        </trans-unit>
        <trans-unit id="b06a0dfd76b0c38631be96138f30ae162102fa10" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_read</source>
          <target state="translated">Gzip::Reader#unbuffered_read</target>
        </trans-unit>
        <trans-unit id="334d4477fbadb88e627734e17b71028fb0dc507b" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_rewind</source>
          <target state="translated">Gzip::Reader#unbuffered_rewind</target>
        </trans-unit>
        <trans-unit id="78bdc5e0ec1b769e3e5a3afee30485452210ca93" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_write</source>
          <target state="translated">Gzip::Reader#unbuffered_write</target>
        </trans-unit>
        <trans-unit id="11a5655a7bc7f3d7144730788d0093d9e1b7d4b8" translate="yes" xml:space="preserve">
          <source>Gzip::Reader.new</source>
          <target state="translated">Gzip::Reader.new</target>
        </trans-unit>
        <trans-unit id="bcfb44377fb40fb55f769c2a38ad2900baeecd95" translate="yes" xml:space="preserve">
          <source>Gzip::Reader.open</source>
          <target state="translated">Gzip::Reader.open</target>
        </trans-unit>
        <trans-unit id="a569ae9805fd3e2981af9466c81de3ff6314adc0" translate="yes" xml:space="preserve">
          <source>Gzip::Writer</source>
          <target state="translated">Gzip::Writer</target>
        </trans-unit>
        <trans-unit id="853cf2d6a8da5a68df4d843aaca33a93977e8e2b" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#close</source>
          <target state="translated">Gzip::Writer#close</target>
        </trans-unit>
        <trans-unit id="278416be976e5a3ac40905249a35da8aa6feae94" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#closed?</source>
          <target state="translated">Gzip::Writer#closed?</target>
        </trans-unit>
        <trans-unit id="5e2e46734692e082cb3b722f9261fbe90f388597" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#flush</source>
          <target state="translated">Gzip::Writer#flush</target>
        </trans-unit>
        <trans-unit id="e270e7427961a0a7cfb3df69fd9255c57dd165b6" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#header</source>
          <target state="translated">Gzip::Writer#header</target>
        </trans-unit>
        <trans-unit id="ae9b9119f6eeee9f13ed06a7cce808ee2a0d894d" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#read</source>
          <target state="translated">Gzip::Writer#read</target>
        </trans-unit>
        <trans-unit id="7276df99215b83a36b0dcf0ea13a74df730eeeae" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#sync_close=</source>
          <target state="translated">Gzip::Writer#sync_close=</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
