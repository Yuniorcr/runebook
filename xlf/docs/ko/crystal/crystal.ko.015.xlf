<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="3f024e40d4eb796a5f1034c315d586ab67dabe16" translate="yes" xml:space="preserve">
          <source>Flags#sticky?</source>
          <target state="translated">Flags#sticky?</target>
        </trans-unit>
        <trans-unit id="ecc7d7beb9d1106da72dc86ea29e664535253cbd" translate="yes" xml:space="preserve">
          <source>Flate</source>
          <target state="translated">Flate</target>
        </trans-unit>
        <trans-unit id="95bb676630809a0a59f4ed2881b826e04b222858" translate="yes" xml:space="preserve">
          <source>Flate::Error</source>
          <target state="translated">Flate::Error</target>
        </trans-unit>
        <trans-unit id="b443c9370a442d5c0a560b9ce938d3a9be613ed3" translate="yes" xml:space="preserve">
          <source>Flate::Error.new</source>
          <target state="translated">Flate::Error.new</target>
        </trans-unit>
        <trans-unit id="5d751ee40b5dd91c733ab79f62388dda80fb6886" translate="yes" xml:space="preserve">
          <source>Flate::Reader</source>
          <target state="translated">Flate::Reader</target>
        </trans-unit>
        <trans-unit id="f74308e81952b0ec627902645dca426fd998dfd6" translate="yes" xml:space="preserve">
          <source>Flate::Writer</source>
          <target state="translated">Flate::Writer</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="56caee26fb23730fc2badb53d0aa22dfbdf00899" translate="yes" xml:space="preserve">
          <source>Float divivision that will obey the left hand side argument type.</source>
          <target state="translated">왼쪽 인수 유형을 따르는 플로트 분할입니다.</target>
        </trans-unit>
        <trans-unit id="9e32203b5a9f5c2b32a3fee202e82eb4b52afe7f" translate="yes" xml:space="preserve">
          <source>Float is the base type of all floating point numbers.</source>
          <target state="translated">부동은 모든 부동 소수점 숫자의 기본 유형입니다.</target>
        </trans-unit>
        <trans-unit id="f8eca2e615f4728d56700eeefe17351e71e0d4cc" translate="yes" xml:space="preserve">
          <source>Float#%</source>
          <target state="translated">Float#%</target>
        </trans-unit>
        <trans-unit id="1b83bf3ba025d5d69328c2069f486942b16e7f7c" translate="yes" xml:space="preserve">
          <source>Float#-</source>
          <target state="translated">Float#-</target>
        </trans-unit>
        <trans-unit id="a0a0b3dcf6628db2b43ac6b00b627e91f8d7e9ff" translate="yes" xml:space="preserve">
          <source>Float#//</source>
          <target state="translated">Float#//</target>
        </trans-unit>
        <trans-unit id="1f77b4b8c520810c448ef139fd1bbb820e8cb6ab" translate="yes" xml:space="preserve">
          <source>Float#days</source>
          <target state="translated">Float#days</target>
        </trans-unit>
        <trans-unit id="bb5ff345b40de85eb6a1f9393ba689043f99cb1c" translate="yes" xml:space="preserve">
          <source>Float#fdiv</source>
          <target state="translated">Float#fdiv</target>
        </trans-unit>
        <trans-unit id="539b4703fe4364e6bb8f3b9ac0e52a2d781e81c8" translate="yes" xml:space="preserve">
          <source>Float#hash</source>
          <target state="translated">Float#hash</target>
        </trans-unit>
        <trans-unit id="14982d978b3f2cce0f0e4ea5b177a712c7b911fb" translate="yes" xml:space="preserve">
          <source>Float#nan?</source>
          <target state="translated">Float#nan?</target>
        </trans-unit>
        <trans-unit id="998fe0ecccd6998cadc40e0fa0fe0e5aaebd09d4" translate="yes" xml:space="preserve">
          <source>Float32</source>
          <target state="translated">Float32</target>
        </trans-unit>
        <trans-unit id="111bac082a7e5af9041742107a3b4b273bb459f9" translate="yes" xml:space="preserve">
          <source>Float32#!=</source>
          <target state="translated">Float32#!=</target>
        </trans-unit>
        <trans-unit id="17f278a17221ed74d09e87d775fda40f150643e7" translate="yes" xml:space="preserve">
          <source>Float32#*</source>
          <target state="translated">Float32#*</target>
        </trans-unit>
        <trans-unit id="9386da43c69eccc55381196bb72843517bdd7a71" translate="yes" xml:space="preserve">
          <source>Float32#**</source>
          <target state="translated">Float32#**</target>
        </trans-unit>
        <trans-unit id="e93c1b663be3572f6ee5cc7a791a7fcd55a0aa80" translate="yes" xml:space="preserve">
          <source>Float32#+</source>
          <target state="translated">Float32#+</target>
        </trans-unit>
        <trans-unit id="af16f707c8545dd52f0fbb49fd3f471ae6c59a95" translate="yes" xml:space="preserve">
          <source>Float32#-</source>
          <target state="translated">Float32#-</target>
        </trans-unit>
        <trans-unit id="a74d52814f7620091b8155643a48f9d36d80103b" translate="yes" xml:space="preserve">
          <source>Float32#/</source>
          <target state="translated">Float32#/</target>
        </trans-unit>
        <trans-unit id="ed4c18f2fbb07d7f4f8792ecdd02423e51427c97" translate="yes" xml:space="preserve">
          <source>Float32#==</source>
          <target state="translated">Float32#==</target>
        </trans-unit>
        <trans-unit id="ceb02f409a78f4efbe98a9ddfb0cfa626b14a339" translate="yes" xml:space="preserve">
          <source>Float64</source>
          <target state="translated">Float64</target>
        </trans-unit>
        <trans-unit id="9671b9e249816455e7ffad7fcf4a7fe6fb69d6d9" translate="yes" xml:space="preserve">
          <source>Float64#!=</source>
          <target state="translated">Float64#!=</target>
        </trans-unit>
        <trans-unit id="0ed1b90ae26de7ecb49bf1b91b60ead01ea87dc3" translate="yes" xml:space="preserve">
          <source>Float64#*</source>
          <target state="translated">Float64#*</target>
        </trans-unit>
        <trans-unit id="3077797544d3d8a79fd41b570189e41e3daab740" translate="yes" xml:space="preserve">
          <source>Float64#**</source>
          <target state="translated">Float64#**</target>
        </trans-unit>
        <trans-unit id="7012ff83915116d1d115385d85ce30c27f20cf63" translate="yes" xml:space="preserve">
          <source>Float64#+</source>
          <target state="translated">Float64#+</target>
        </trans-unit>
        <trans-unit id="074b9063e9fe8ccdb1c421cbdab85f8fd01e9395" translate="yes" xml:space="preserve">
          <source>Float64#-</source>
          <target state="translated">Float64#-</target>
        </trans-unit>
        <trans-unit id="a3faed468b1ee3f3b49d9281bbcb59d3e203094a" translate="yes" xml:space="preserve">
          <source>Float64#/</source>
          <target state="translated">Float64#/</target>
        </trans-unit>
        <trans-unit id="5eda9011050ad4eab9d8c0d4ff6cd25e3da563e1" translate="yes" xml:space="preserve">
          <source>Float64#==</source>
          <target state="translated">Float64#==</target>
        </trans-unit>
        <trans-unit id="ae063ff6dd9c1dc3cf63b976ab24f814f32f0b9c" translate="yes" xml:space="preserve">
          <source>Float::Printer::CachedPowers::Power</source>
          <target state="translated">Float::Printer::CachedPowers::Power</target>
        </trans-unit>
        <trans-unit id="0195a04f5c744dde1f793d7119ed9449c04b159b" translate="yes" xml:space="preserve">
          <source>Float::Printer::DiyFP</source>
          <target state="translated">Float::Printer::DiyFP</target>
        </trans-unit>
        <trans-unit id="519413ba01859acbd447fe17890a9f85f64637c3" translate="yes" xml:space="preserve">
          <source>Floating point conversion</source>
          <target state="translated">부동 소수점 변환</target>
        </trans-unit>
        <trans-unit id="87a7a62c09133e8095c4eaf7c8024eb6ef74ecaf" translate="yes" xml:space="preserve">
          <source>Floating point conversion:</source>
          <target state="translated">Floating point conversion:</target>
        </trans-unit>
        <trans-unit id="c9fdb9f56bbed11dccf6a43b0581d80890cf2517" translate="yes" xml:space="preserve">
          <source>Floats</source>
          <target state="translated">Floats</target>
        </trans-unit>
        <trans-unit id="01b1b932fcfd4e5ecbdbb8faabdca497309f555b" translate="yes" xml:space="preserve">
          <source>Flushes &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;toplevel#STDERR&quot;&gt;STDERR&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;toplevel#STDERR&quot;&gt;STDERR&lt;/a&gt;&lt;/code&gt; 플러시</target>
        </trans-unit>
        <trans-unit id="c3ffaf13b17a20326f6fa59208569921fb0404c4" translate="yes" xml:space="preserve">
          <source>Flushes &lt;code&gt;writer&lt;/code&gt;.</source>
          <target state="translated">플러시 &lt;code&gt;writer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3da024820efb565b607b545a6398eec561e709f6" translate="yes" xml:space="preserve">
          <source>Flushes all data written to this File Descriptor to the disk device so that all changed information can be retrieved even if the system crashes or is rebooted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ec5ac852226c85004b480da39c7a177322cd94" translate="yes" xml:space="preserve">
          <source>Flushes all data written to this File Descriptor to the disk device so that all changed information can be retrieved even if the system crashes or is rebooted. The call blocks until the device reports that the transfer has completed. To reduce disk activity the &lt;em&gt;flush_metadata&lt;/em&gt; parameter can be set to false, then the syscall &lt;em&gt;fdatasync&lt;/em&gt; will be used and only data required for subsequent data retrieval is flushed. Metadata such as modified time and access time is not written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e204ec806c48862d4a4a058ac464312135c2e881" translate="yes" xml:space="preserve">
          <source>Flushes all data written to this File to the disk device so that all changed information can be retrieved even if the system crashes or is rebooted.</source>
          <target state="translated">이 파일에 기록 된 모든 데이터를 디스크 장치에 플러시하여 시스템이 충돌하거나 재부팅하더라도 변경된 모든 정보를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4c2bc0bd494c9967f0000ec145cb1717b1fddc0" translate="yes" xml:space="preserve">
          <source>Flushes all data written to this File to the disk device so that all changed information can be retrieved even if the system crashes or is rebooted. The call blocks until the device reports that the transfer has completed. To reduce disk activity the &lt;em&gt;flush_metadata&lt;/em&gt; parameter can be set to false, then the syscall &lt;em&gt;fdatasync&lt;/em&gt; will be used and only data required for subsequent data retrieval is flushed. Metadata such as modified time and access time is not written.</source>
          <target state="translated">이 파일에 기록 된 모든 데이터를 디스크 장치에 플러시하므로 시스템이 충돌하거나 재부팅하더라도 변경된 모든 정보를 검색 할 수 있습니다. 장치에서 전송이 완료되었다고보고 할 때까지 통화가 차단됩니다. 디스크 활동을 줄이려면 &lt;em&gt;flush_metadata&lt;/em&gt; 매개 변수를 false로 설정하면 syscall &lt;em&gt;fdatasync&lt;/em&gt; 가 사용되고 후속 데이터 검색에 필요한 데이터 만 플러시됩니다. 수정 된 시간 및 액세스 시간과 같은 메타 데이터는 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d720989f77cb5d4781ae8a9ce903ad9a07952ff6" translate="yes" xml:space="preserve">
          <source>Flushes and closes the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시하고 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="debae9de750e6602b1f60228f4a47835e941b672" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data and the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">버퍼링 된 데이터와 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="01167f6e48f14e76412ba515306fe65ab02d1dde" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data and the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">버퍼링 된 데이터와 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 . &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a76e68829206ecceb208de1896d480465fa08ce2" translate="yes" xml:space="preserve">
          <source>Flushes any pending data to the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">보류중인 데이터를 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 로 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="60be3f1234a73a5ec0c2f13e01d1a3b391e1e6be" translate="yes" xml:space="preserve">
          <source>Flushes buffered data, if any.</source>
          <target state="translated">버퍼링 된 데이터가있는 경우 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="4960b45dc2a48e6332f75b2709d7b2525f2135bc" translate="yes" xml:space="preserve">
          <source>Flushes data, forcing writing the gzip header if no data has been written yet.</source>
          <target state="translated">아직 데이터가 작성되지 않은 경우 gzip 헤더를 강제로 작성하여 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="f4409d66ef6df6d61cbae2cce6e308c693f13608" translate="yes" xml:space="preserve">
          <source>Flushes data, forcing writing the zlib header if no data has been written yet.</source>
          <target state="translated">아직 데이터가 작성되지 않은 경우 zlib 헤더를 강제로 작성하여 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="05556c699620327df05f73ca4f3b7806803c9481" translate="yes" xml:space="preserve">
          <source>Flushes the output.</source>
          <target state="translated">출력을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="28aa14c8e269c37150bbc6a0226fefce49f26300" translate="yes" xml:space="preserve">
          <source>Flushes the output. This method must be implemented if wrapping the response output.</source>
          <target state="translated">출력을 플러시합니다. 응답 출력을 랩핑하는 경우이 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="a00c3cba2e23fcf91493d43a309452279edce98d" translate="yes" xml:space="preserve">
          <source>Flushes the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="8631220f41187b95567b50ddf9fc5e8d3a7bd8a2" translate="yes" xml:space="preserve">
          <source>Flushes the wrapped &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">래핑 된 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="dc8f1f15416710ec9678106a80069a0d431e3486" translate="yes" xml:space="preserve">
          <source>Flushes the wrapped &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">래핑 된 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="21405fc5e82c20e5d6c1929bb4fc85dd5fa57dc6" translate="yes" xml:space="preserve">
          <source>Focusing on a group of specs</source>
          <target state="translated">사양 그룹에 집중</target>
        </trans-unit>
        <trans-unit id="5552094f4f8300e627c19950b2359ade23e2045b" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; and create a new release every time your push new code to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning에&lt;/a&gt; 따라 새 코드를 &lt;code&gt;master&lt;/code&gt; 할 때마다 새 릴리스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6b14f0d0d605aa8bd1a3a1d4a455f3da113baf23" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;.</source>
          <target state="translated">Follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="795fe52c1ce70bbd6213af4dddf0b39ce8ff729b" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot;&gt;these guidelines&lt;/a&gt; to get your repo up &amp;amp; running on Travis CI.</source>
          <target state="translated">Travis CI에서 리포지토리를 실행하려면 &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot;&gt;다음 지침&lt;/a&gt; 을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="b3459316834da782a3de44111702841fb9619c07" translate="yes" xml:space="preserve">
          <source>Follow the instructions here: &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&quot;&gt;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&lt;/a&gt;</source>
          <target state="translated">Follow the instructions here: &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&quot;&gt;https://docs.gitlab.com/ee/workflow/repository_mirroring.html#setting-up-a-push-mirror-from-gitlab-to-github-core&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5ff45b6dc7c3c5fb18b1cc3968b030bd1a3cbe1" translate="yes" xml:space="preserve">
          <source>Follow these conventions so your code will be more accessible to other developers.</source>
          <target state="translated">다른 개발자가 코드에보다 쉽게 ​​액세스 할 수 있도록 이러한 규칙을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="4fa54cc19f934301da0bf4d114df48b6da8f35ce" translate="yes" xml:space="preserve">
          <source>Follow these instructions</source>
          <target state="translated">이 지침을 따르십시오</target>
        </trans-unit>
        <trans-unit id="c1fe308ce8831f183ed2124edda4df999509a238" translate="yes" xml:space="preserve">
          <source>Follow these tips to get the best out of your programs, both in speed and memory terms.</source>
          <target state="translated">다음 팁을 따라 속도와 메모리 측면에서 프로그램을 최대한 활용하십시오.</target>
        </trans-unit>
        <trans-unit id="0eecc01ca60cbd8bb566f3989e86b3f6600e056f" translate="yes" xml:space="preserve">
          <source>Following a match, the special variables $N (e.g., $1, $2, $3, ...) can be used to access a capture group. Trying to access an invalid capture group will raise an exception. Note that it is possible to have a successful match with a nil capture:</source>
          <target state="translated">일치 후에 특수 변수 $ N (예 : $ 1, $ 2, $ 3, ...)을 사용하여 캡처 그룹에 액세스 할 수 있습니다. 유효하지 않은 캡처 그룹에 액세스하려고하면 예외가 발생합니다. nil 캡처와 성공적으로 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aa61e51dd7d5a38f034b4edddb82ec22e904695" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://crystal-lang.org/api/Reference.html&quot;&gt;Reference&lt;/a&gt; types, the size is the same as the size of a pointer:</source>
          <target state="translated">내용은 &lt;a href=&quot;http://crystal-lang.org/api/Reference.html&quot;&gt;참조&lt;/a&gt; 유형, 크기는 포인터의 크기와 동일합니다 :</target>
        </trans-unit>
        <trans-unit id="570f08282077b6f419398ac92caf5462e0312d13" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt; arguments you can take advantage of auto-splatting and do not need parentheses:</source>
          <target state="translated">For &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt; arguments you can take advantage of auto-splatting and do not need parentheses:</target>
        </trans-unit>
        <trans-unit id="2e5addf1e5ef132ab04ce3e6b64b2c876cdb4409" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt; parameters you can take advantage of auto-splatting and do not need parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fa88495605210addf92862d5239b043639fc27" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;float32&quot;&gt;Float32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; this is equivalent to &lt;code&gt;&lt;a href=&quot;math#ilogb(value:Float32)-instance-method&quot;&gt;#ilogb&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1750da8efb229c31b57a582fe5f52a308022b9d6" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;float32&quot;&gt;Float32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; this is equivalent to &lt;code&gt;&lt;a href=&quot;math#ldexp(value,exp)-instance-method&quot;&gt;#ldexp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0494a2c0825c19384cd4f7c93216e8b38e30f8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; types, the size is the same as the size of a pointer:</source>
          <target state="translated">For &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; types, the size is the same as the size of a pointer:</target>
        </trans-unit>
        <trans-unit id="cc54b4312aa4437e3c0cadeb440c7e0ef389ad03" translate="yes" xml:space="preserve">
          <source>For HTML &lt;em&gt;parsing&lt;/em&gt; see module XML, especially &lt;code&gt;&lt;a href=&quot;xml#parse_html(string:String,options:HTMLParserOptions=HTMLParserOptions.default):Node-class-method&quot;&gt;XML.parse_html&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">HTML &lt;em&gt;구문 분석에&lt;/em&gt; 대해서는 모듈 XML, 특히 &lt;code&gt;&lt;a href=&quot;xml#parse_html(string:String,options:HTMLParserOptions=HTMLParserOptions.default):Node-class-method&quot;&gt;XML.parse_html&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad7d720219578cfe42f642b91c781867265a0ff8" translate="yes" xml:space="preserve">
          <source>For a generic type like &lt;code&gt;Set&lt;/code&gt;, the generic type &lt;code&gt;T&lt;/code&gt; is inferred from the types of the elements in the same way as with the array literal. The above is equivalent to:</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 과 같은 제네릭 형식의 경우 제네릭 형식 &lt;code&gt;T&lt;/code&gt; 는 배열 리터럴과 같은 방식으로 요소의 형식에서 유추됩니다. 위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c5684c6057489832549326137fda53ad95382bf7" translate="yes" xml:space="preserve">
          <source>For a generic type, the generic types are inferred from the types of the keys and values in the same way as with the hash literal.</source>
          <target state="translated">제네릭 형식의 경우 제네릭 형식은 해시 리터럴과 같은 방식으로 키 및 값 형식에서 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="c368da259a5f3c2564d9ac831e16eee3e3d50c7c" translate="yes" xml:space="preserve">
          <source>For a given instance/class variable, when a rule can be applied and a type can be guessed, the type is added to a set. When no more rules can be applied, the inferred type will be the &lt;a href=&quot;union_types&quot;&gt;union&lt;/a&gt; of those types. Additionally, if the compiler infers that an instance variable isn't always initialized, it will also include the &lt;a href=&quot;literals/nil&quot;&gt;Nil&lt;/a&gt; type.</source>
          <target state="translated">주어진 인스턴스 / 클래스 변수에 대해 규칙을 적용하고 유형을 추측 할 수있는 경우 유형이 세트에 추가됩니다. 더 이상 규칙을 적용 할 수없는 경우 유추 된 유형이 해당 유형 의 &lt;a href=&quot;union_types&quot;&gt;합집합&lt;/a&gt; 입니다. 또한 컴파일러에서 인스턴스 변수가 항상 초기화되지는 않는다고 추론하는 경우 &lt;a href=&quot;literals/nil&quot;&gt;Nil&lt;/a&gt; 유형 도 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="10b8169b4ba0a06c6f2ca618790582f6768ba0d8" translate="yes" xml:space="preserve">
          <source>For a more correct method see the method that receives a block.</source>
          <target state="translated">보다 정확한 방법은 블록을받는 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aca117beab382164ac1b18e77e37547f5a300260" translate="yes" xml:space="preserve">
          <source>For a non-generic type like &lt;code&gt;HTTP::Headers&lt;/code&gt;, this is equivalent to:</source>
          <target state="translated">&lt;code&gt;HTTP::Headers&lt;/code&gt; 와 같은 제네릭이 아닌 유형의 경우 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c4286450b574d876439fc596b8a58248b9c52ddb" translate="yes" xml:space="preserve">
          <source>For a non-generic type like &lt;code&gt;IO::Memory&lt;/code&gt;, this is equivalent to:</source>
          <target state="translated">&lt;code&gt;IO::Memory&lt;/code&gt; 와 같은 제네릭이 아닌 유형의 경우 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9eaacccf32adec0915a806c6e63fbdb37f1e5be1" translate="yes" xml:space="preserve">
          <source>For a quick example of how to authenticate an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; with OAuth if you already have an access token, check the &lt;code&gt;&lt;a href=&quot;../oauth&quot;&gt;OAuth&lt;/a&gt;&lt;/code&gt; module description.</source>
          <target state="translated">액세스 토큰이 이미있는 경우 OAuth 로 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 를 인증하는 방법에 대한 간단한 예 는 &lt;code&gt;&lt;a href=&quot;../oauth&quot;&gt;OAuth&lt;/a&gt;&lt;/code&gt; 모듈 설명을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d6a218ed2d258ef9f7626975aea21b94ba7dece" translate="yes" xml:space="preserve">
          <source>For a quick example of how to authenticate an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; with OAuth2 if you already have an access token, check the &lt;code&gt;&lt;a href=&quot;../oauth2&quot;&gt;OAuth2&lt;/a&gt;&lt;/code&gt; module description.</source>
          <target state="translated">액세스 토큰이 이미있는 경우 OAuth2 로 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 를 인증하는 방법에 대한 간단한 예 는 &lt;code&gt;&lt;a href=&quot;../oauth2&quot;&gt;OAuth2&lt;/a&gt;&lt;/code&gt; 모듈 설명을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d51ff3d2280ec5b77b63f365da2c95be981778c" translate="yes" xml:space="preserve">
          <source>For a safe alternative, see &lt;code&gt;&lt;a href=&quot;slice&quot;&gt;Slice&lt;/a&gt;&lt;/code&gt;, which is a pointer with a size and with bounds checking.</source>
          <target state="translated">안전한 대안 은 크기 및 경계 검사가 포함 된 포인터 인 &lt;code&gt;&lt;a href=&quot;slice&quot;&gt;Slice&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7826f7064e81e0d6049c3f63e6610fcf1862bdc" translate="yes" xml:space="preserve">
          <source>For an example usage, see &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt;'s explanation about sending Procs to C.</source>
          <target state="translated">사용법 예는 Procs를 C로 보내는 방법에 대한 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 의 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4880ffecab60bbea247339c187df53056398541" translate="yes" xml:space="preserve">
          <source>For an unquoted identifier the same naming rules apply as for methods. It can contain alphanumeric characters, underscore (&lt;code&gt;_&lt;/code&gt;) or characters with a code point greater than &lt;code&gt;159&lt;/code&gt;(&lt;code&gt;0x9F&lt;/code&gt;). It must not start with a number and may end with an exclamation mark (&lt;code&gt;!&lt;/code&gt;) or question mark (&lt;code&gt;?&lt;/code&gt;).</source>
          <target state="translated">따옴표없는 식별자의 경우 동일한 이름 지정 규칙이 메소드와 동일하게 적용됩니다. 영숫자, 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) 또는 코드 포인트가 &lt;code&gt;159&lt;/code&gt; ( &lt;code&gt;0x9F&lt;/code&gt; ) 보다 큰 문자를 포함 할 수 있습니다 . 숫자로 시작해서는 안되며 느낌표 ( &lt;code&gt;!&lt;/code&gt; ) 또는 물음표 ( &lt;code&gt;?&lt;/code&gt; )로 끝날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8fc0f056a92b720841623726c25ae26976536b8" translate="yes" xml:space="preserve">
          <source>For both server and client applications exist more specialized subclassses &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;SSL::Context::Server&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;context/client&quot;&gt;SSL::Context::Client&lt;/a&gt;&lt;/code&gt; which need to be instantiated appropriately.</source>
          <target state="translated">For both server and client applications exist more specialized subclassses &lt;code&gt;&lt;a href=&quot;context/server&quot;&gt;SSL::Context::Server&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;context/client&quot;&gt;SSL::Context::Client&lt;/a&gt;&lt;/code&gt; which need to be instantiated appropriately.</target>
        </trans-unit>
        <trans-unit id="dbef1aca33f9c6b7a4542474c3cb83370254d98e" translate="yes" xml:space="preserve">
          <source>For building Crystal yourself, the required installation is available in the ports tree.</source>
          <target state="translated">Crystal을 직접 구축하려면 포트 트리에서 필요한 설치를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="550628869db111a93e12244f85b134e68606a0db" translate="yes" xml:space="preserve">
          <source>For building the Crystal compiler itself, a few other dependencies are needed, see &lt;a href=&quot;https://github.com/crystal-lang/crystal/wiki/All-required-libraries#ubuntu&quot;&gt;wiki page&lt;/a&gt;. They are not required for regular compiler use.</source>
          <target state="translated">Crystal 컴파일러 자체를 빌드하려면 몇 가지 다른 종속성이 필요합니다 ( &lt;a href=&quot;https://github.com/crystal-lang/crystal/wiki/All-required-libraries#ubuntu&quot;&gt;wiki page 참조)&lt;/a&gt; . 정기적 인 컴파일러 사용에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2986aed88a68cdaecfa52d018447976072126666" translate="yes" xml:space="preserve">
          <source>For comparing an expression against a &lt;code&gt;case&lt;/code&gt;'s value the &lt;em&gt;case equality operator&lt;/em&gt;&lt;code&gt;===&lt;/code&gt; is used. It is defined as a method on &lt;a href=&quot;https://crystal-lang.org/api/Object.html#%3D%3D%3D%28other%29-instance-method&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and can be overridden by subclasses to provide meaningful semantics in case statements. For example, &lt;a href=&quot;https://crystal-lang.org/api/Class.html#%3D%3D%3D%28other%29-instance-method&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; defines case equality as when an object is an instance of that class, &lt;a href=&quot;https://crystal-lang.org/api/Regex.html#%3D%3D%3D%28other%3AString%29-instance-method&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; as when the value matches the regular expression and &lt;a href=&quot;https://crystal-lang.org/api/Range.html#%3D%3D%3D%28value%29-instance-method&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; as when the value is included in that range.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 값과 표현식을 비교하기 위해 &lt;em&gt;대소 문자 같음 연산자 &lt;/em&gt; &lt;code&gt;===&lt;/code&gt; 가 사용됩니다. &lt;a href=&quot;https://crystal-lang.org/api/Object.html#%3D%3D%3D%28other%29-instance-method&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 의 메소드 로 정의되며 서브 클래스로 대체하여 case 문에 의미가있는 의미를 제공 할 수 있습니다. 예를 들어, &lt;a href=&quot;https://crystal-lang.org/api/Class.html#%3D%3D%3D%28other%29-instance-method&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 는 객체가 해당 클래스의 인스턴스 인 경우와 같이 대소 문자가 &lt;a href=&quot;https://crystal-lang.org/api/Regex.html#%3D%3D%3D%28other%3AString%29-instance-method&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; , 정규식 과 값이 일치하는 경우 Regex , 값이 해당 범위에 포함 된 경우 와 같은 &lt;a href=&quot;https://crystal-lang.org/api/Range.html#%3D%3D%3D%28value%29-instance-method&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bce7e492d53dc04162d4945679388f33dc412eca" translate="yes" xml:space="preserve">
          <source>For details on the format string, see &lt;code&gt;&lt;a href=&quot;toplevel#sprintf(format_string,args:Array%7CTuple):String-class-method&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">형식 문자열에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;toplevel#sprintf(format_string,args:Array%7CTuple):String-class-method&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc96fd9d74b97fd0e0fcde1657b07a4e83a1845f" translate="yes" xml:space="preserve">
          <source>For each element in the collection the block is passed an accumulator value (&lt;em&gt;memo&lt;/em&gt;) and the element. The result becomes the new value for &lt;em&gt;memo&lt;/em&gt;. At the end of the iteration, the final value of &lt;em&gt;memo&lt;/em&gt; is the return value for the method. The initial value for the accumulator is the first element in the collection.</source>
          <target state="translated">컬렉션의 각 요소에 대해 블록에 누산기 값 ( &lt;em&gt;memo&lt;/em&gt; )과 요소 가 전달 됩니다. 결과는 새로운 &lt;em&gt;메모&lt;/em&gt; 값이됩니다 . 반복이 끝날 때 &lt;em&gt;메모&lt;/em&gt; 의 최종 값은 메소드의 리턴 값입니다. 누산기의 초기 값은 컬렉션의 첫 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="5944bf5df25ccb25e1bafd921fc562dddd9f9027" translate="yes" xml:space="preserve">
          <source>For everything I/O related there's an event loop. Some time-consuming operations are delegated to it, and while the event loop waits for that operation to finish the program can continue executing other fibers. A simple example of this is waiting for data to come through a socket.</source>
          <target state="translated">모든 I / O 관련 이벤트 루프가 있습니다. 시간이 많이 걸리는 작업이 여기에 위임되며, 이벤트 루프가 해당 작업이 완료 될 때까지 기다리는 동안 프로그램은 다른 광섬유를 계속 실행할 수 있습니다. 간단한 예는 데이터가 소켓을 통과하기를 기다리는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b52a23452ff52840cbfbeb39cd7ea18e73acc7b5" translate="yes" xml:space="preserve">
          <source>For everything else this uses the defaults of your OpenSSL. Use this only if undoing the defaults that &lt;code&gt;&lt;a href=&quot;client#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; sets is too much hassle.</source>
          <target state="translated">다른 모든 경우에는 OpenSSL의 기본값을 사용합니다. &lt;code&gt;&lt;a href=&quot;client#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 세트가 너무 번거로운 기본값을 취소하면이 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bc5c2b95d1d6b28fc693f7f2d7a95fff00422179" translate="yes" xml:space="preserve">
          <source>For everything else this uses the defaults of your OpenSSL. Use this only if undoing the defaults that &lt;code&gt;&lt;a href=&quot;server#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; sets is too much hassle.</source>
          <target state="translated">다른 모든 경우에는 OpenSSL의 기본값을 사용합니다. &lt;code&gt;&lt;a href=&quot;server#new(method:LibSSL::SSLMethod=Context.default_method)-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 세트가 너무 번거로운 기본값을 취소하면이 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe8c04c2f9dcb7822b0a7b7cd9f6e21002d5460e" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;arc4random&lt;/code&gt; is used on OpenBSD, whereas on Linux it uses &lt;code&gt;getrandom&lt;/code&gt; (if the kernel supports it) and fallbacks on reading from &lt;code&gt;/dev/urandom&lt;/code&gt; on UNIX systems.</source>
          <target state="translated">예를 들어, &lt;code&gt;arc4random&lt;/code&gt; 은 OpenBSD에서 사용되는 반면, Linux에서는 &lt;code&gt;getrandom&lt;/code&gt; (커널이 지원하는 경우)을 사용하고 UNIX 시스템의 &lt;code&gt;/dev/urandom&lt;/code&gt; 에서 읽을 때 폴 백이 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="8ef83af9279f797fa6c67ef5fa8d3a15e616544d" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;HTTP::WebSocket&lt;/code&gt; is defined in &lt;code&gt;src/http/web_socket.cr&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;HTTP::WebSocket&lt;/code&gt; 은 &lt;code&gt;src/http/web_socket.cr&lt;/code&gt; 에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c886bfa5ba48123a2a9c9c176a07618f85b9f352" translate="yes" xml:space="preserve">
          <source>For example, a block which is given an object to use as the default receiver by being invoked with &lt;code&gt;with ... yield&lt;/code&gt; can access macros defined within that object's ancestors chain:</source>
          <target state="translated">예를 들어 &lt;code&gt;with ... yield&lt;/code&gt; 와 함께 호출하여 기본 수신자로 사용할 객체가 주어진 블록은 해당 객체의 조상 체인 내에 정의 된 매크로에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e512353cdf56b3a2e85ff65fed371463f9483c08" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;1.month&lt;/code&gt; to &lt;code&gt;2007-03-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2007-04-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2007-04-30&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cb6b7e6f5a5bc4d6daa3ee9420b926d5345161" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;2007-03-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2007-04-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2007-04-30&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 추가 &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;2007-03-31&lt;/code&gt; 잘못된 일이 발생할 것 &lt;code&gt;2007-04-31&lt;/code&gt; 조정됩니다 &lt;code&gt;2007-04-30&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21aa84a363700bcf6a1762f73b17e896b5628447" translate="yes" xml:space="preserve">
          <source>For example, an initial handler might handle exceptions raised from subsequent handlers and return a &lt;code&gt;500 &lt;a href=&quot;server&quot;&gt;Server&lt;/a&gt; Error&lt;/code&gt; status (see &lt;code&gt;&lt;a href=&quot;errorhandler&quot;&gt;HTTP::ErrorHandler&lt;/a&gt;&lt;/code&gt;). The next handler might log all incoming requests (see &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt;). And the final handler deals with routing and application logic.</source>
          <target state="translated">예를 들어, 초기 핸들러는 후속 핸들러에서 발생한 예외를 처리하고 &lt;code&gt;500 &lt;a href=&quot;server&quot;&gt;Server&lt;/a&gt; Error&lt;/code&gt; 상태를 리턴 할 수 있습니다 ( &lt;code&gt;&lt;a href=&quot;errorhandler&quot;&gt;HTTP::ErrorHandler&lt;/a&gt;&lt;/code&gt; 참조 ). 다음 핸들러는 들어오는 모든 요청을 기록 할 수 있습니다 ( &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; 참조 ). 마지막 처리기는 라우팅 및 응용 프로그램 논리를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="8b19aa5814870af3702b53dd76cc72d358563015" translate="yes" xml:space="preserve">
          <source>For example, consecutive even numbers and odd numbers can be chunked as follows.</source>
          <target state="translated">예를 들어, 연속 짝수와 홀수는 다음과 같이 청크 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41c684a31f3524d52a1715c94cffaf66d2e32c0d" translate="yes" xml:space="preserve">
          <source>For example, for &lt;code&gt;def write(to file)&lt;/code&gt; returns &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;def write(to file)&lt;/code&gt; &lt;code&gt;file&lt;/code&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="317f924bf360123556a3443e51624ae5246c16ba" translate="yes" xml:space="preserve">
          <source>For example, for &lt;code&gt;def write(to file)&lt;/code&gt; returns &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 대한 &lt;code&gt;def write(to file)&lt;/code&gt; 반환 &lt;code&gt;to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66c49ec2261767ac49a82e698ce2932f3124aa52" translate="yes" xml:space="preserve">
          <source>For example, if you put &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; in &lt;code&gt;project.cr&lt;/code&gt; and run &lt;code&gt;crystal src/project.cr&lt;/code&gt; in the project's root directory, it will find &lt;code&gt;foo&lt;/code&gt; in &lt;code&gt;lib/foo/foo.cr&lt;/code&gt;.</source>
          <target state="translated">당신이 넣어 예를 들어, &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; 에 &lt;code&gt;project.cr&lt;/code&gt; 및 실행 &lt;code&gt;crystal src/project.cr&lt;/code&gt; 프로젝트의 루트 디렉토리에, 그것을 발견 할 것이다 &lt;code&gt;foo&lt;/code&gt; 는 에 &lt;code&gt;lib/foo/foo.cr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9e67a31bb11ec604af8c8e9082271fb75f01fb8" translate="yes" xml:space="preserve">
          <source>For example, invoking &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt;&lt;code&gt;ASTNode#id&lt;/code&gt;&lt;/a&gt; in the above example solves the problem:</source>
          <target state="translated">예를 들어, 위 예제에서 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/ASTNode.html#id%3AMacroId-instance-method&quot;&gt; &lt;code&gt;ASTNode#id&lt;/code&gt; &lt;/a&gt; 를 호출 하면 문제가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="b69fc5ce16b8a0a5ebcc38193e0fa40c7457cbd3" translate="yes" xml:space="preserve">
          <source>For example, one-by-one increasing subsequences can be chunked as follows:</source>
          <target state="translated">예를 들어, 하나씩 증가하는 서브 시퀀스는 다음과 같이 청크 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2879cb60b7eca56ff67cb19bfa45f99ab882a68f" translate="yes" xml:space="preserve">
          <source>For example, reassigning a variable with a different expression makes it have that expression&amp;rsquo;s type:</source>
          <target state="translated">예를 들어, 다른 표현식으로 변수를 다시 할당하면 해당 표현식의 유형을 갖게됩니다.</target>
        </trans-unit>
        <trans-unit id="7aaba832b6ad9575a10b1d684eb7701cbf9109e4" translate="yes" xml:space="preserve">
          <source>For example, subtracting &lt;code&gt;1.month&lt;/code&gt; from &lt;code&gt;2007-05-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2007-04-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2007-04-30&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dd85a55cb68881bcc30d3977ed131badb89dd1" translate="yes" xml:space="preserve">
          <source>For example, subtracting &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;2007-05-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2007-04-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2007-04-30&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 감산 &lt;code&gt;1&lt;a href=&quot;time#month:Int32-instance-method&quot;&gt;.month&lt;/a&gt;&lt;/code&gt; 으로부터 &lt;code&gt;2007-05-31&lt;/code&gt; 하면 무효 일자 초래 &lt;code&gt;2007-04-31&lt;/code&gt; 조정한다 &lt;code&gt;2007-04-30&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6a547713042ab7e6d1295ee4aa0b0f54281d06f" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;String&lt;/code&gt; class implements &lt;code&gt;to_unsafe&lt;/code&gt; to return &lt;code&gt;UInt8*&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;String&lt;/code&gt; 클래스는 &lt;code&gt;to_unsafe&lt;/code&gt; 를 구현 하여 &lt;code&gt;UInt8*&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="16e29e30fa6e657d020201252796a2f36818a276" translate="yes" xml:space="preserve">
          <source>For example, the standard library includes a &lt;code&gt;times&lt;/code&gt; method on integers, allowing you to write:</source>
          <target state="translated">예를 들어 표준 라이브러리에는 정수에 대한 &lt;code&gt;times&lt;/code&gt; 메소드가 포함되어 있으므로 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4c8244f9aad81aa0ddc306686164c14e2fa2c5a" translate="yes" xml:space="preserve">
          <source>For example, this code will end up invoking this method:</source>
          <target state="translated">For example, this code will end up invoking this method:</target>
        </trans-unit>
        <trans-unit id="1502994e7d97a67e47f2896302a91bc786437f38" translate="yes" xml:space="preserve">
          <source>For example, this code:</source>
          <target state="translated">예를 들어이 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b0128547a3832d5fb9b72b8718fa1b16fdb1f81" translate="yes" xml:space="preserve">
          <source>For example, this is a simple &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; on top of a &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 이것은 &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt; 위에 간단한 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="bf707e68569d1425396d0a54c13a9c1b3af93b5f" translate="yes" xml:space="preserve">
          <source>For example, this is an iterator that returns a sequence of &lt;code&gt;N&lt;/code&gt; zeros:</source>
          <target state="translated">예를 들어, 이것은 &lt;code&gt;N&lt;/code&gt; 0 의 시퀀스를 리턴하는 반복자입니다 .</target>
        </trans-unit>
        <trans-unit id="b4e2f3b7d65e9d6a6a4b832629acc9e627adf3f3" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end at each ASCII uppercase letter:</source>
          <target state="translated">예를 들어, 각 ASCII 대문자로 끝나는 청크를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="47a8ea0f4a1269a04f9d1d65110a6b7f96ec157c" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end at each uppercase letter:</source>
          <target state="translated">예를 들어, 각 대문자로 끝나는 청크를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6e533eba8e14f07b4f6a616214ab26fee71fb3b2" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end just before each ASCII uppercase letter:</source>
          <target state="translated">예를 들어, 각 ASCII 대문자 직전에 끝나는 청크를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="98ca64b547029e315a2a8d18cc4daec641e04fb8" translate="yes" xml:space="preserve">
          <source>For example, to get chunks that end just before each uppercase letter:</source>
          <target state="translated">예를 들어, 각각의 대문자 직전에 끝나는 청크를 얻으려면 :</target>
        </trans-unit>
        <trans-unit id="c68186cc707cd14db5d72672fb96594175dc524c" translate="yes" xml:space="preserve">
          <source>For example, we can define four different &lt;code&gt;become_older&lt;/code&gt; methods:</source>
          <target state="translated">예를 들어, 우리는 네 가지 다른 &lt;code&gt;become_older&lt;/code&gt; 메소드를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1b4de881b395856c5cc75cea2ff35b98cfa974b" translate="yes" xml:space="preserve">
          <source>For example, we can start a &lt;a href=&quot;https://docs.travis-ci.com/user/database-setup/#mysql&quot;&gt;MySQL&lt;/a&gt; database service by adding a &lt;code&gt;services:&lt;/code&gt; section to our &lt;code&gt;.travis.yml&lt;/code&gt;:</source>
          <target state="translated">For example, we can start a &lt;a href=&quot;https://docs.travis-ci.com/user/database-setup/#mysql&quot;&gt;MySQL&lt;/a&gt; database service by adding a &lt;code&gt;services:&lt;/code&gt; section to our &lt;code&gt;.travis.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d78358d9619d79b975fc843ac47ea68037fbd0df" translate="yes" xml:space="preserve">
          <source>For hosts with multiple interfaces, each multicast transmission is sent from the primary network interface.</source>
          <target state="translated">인터페이스가 여러 개인 호스트의 경우 각 멀티 캐스트 전송은 기본 네트워크 인터페이스에서 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="2fab9170018d39758237ecb172c55fdc1a388487" translate="yes" xml:space="preserve">
          <source>For hosts with multiple interfaces, each multicast transmission is sent from the primary network interface. This function overrides the default IPv4 interface address for subsequent transmissions. Setting the interface to &lt;code&gt;0.0.0.0&lt;/code&gt; will select the default interface. Raises &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; unless the socket is IPv4 and an IPv4 address is provided.</source>
          <target state="translated">인터페이스가 여러 개인 호스트의 경우 각 멀티 캐스트 전송은 기본 네트워크 인터페이스에서 전송됩니다. 이 기능은 후속 전송을 위해 기본 IPv4 인터페이스 주소를 무시합니다. 인터페이스를 &lt;code&gt;0.0.0.0&lt;/code&gt; 으로 설정하면 기본 인터페이스가 선택됩니다. 발생시킵니다 &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; 소켓에서 IPv4하고 IPv4 주소가 제공되지 않는.</target>
        </trans-unit>
        <trans-unit id="3b4393186038f211a02c5180f1fc6142f85d00d4" translate="yes" xml:space="preserve">
          <source>For hosts with multiple interfaces, each multicast transmission is sent from the primary network interface. This function overrides the default IPv6 interface for subsequent transmissions. Setting the interface to index &lt;code&gt;0&lt;/code&gt; will select the default interface.</source>
          <target state="translated">인터페이스가 여러 개인 호스트의 경우 각 멀티 캐스트 전송은 기본 네트워크 인터페이스에서 전송됩니다. 이 기능은 후속 전송을 위해 기본 IPv6 인터페이스를 재정의합니다. 인터페이스를 인덱스 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 기본 인터페이스가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="6049ea6349182fe529c207b85e155d721f406573" translate="yes" xml:space="preserve">
          <source>For instance, in a production system, you may have your &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; set to &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; or even &lt;code&gt;&lt;a href=&quot;logger#WARN&quot;&gt;WARN&lt;/a&gt;&lt;/code&gt;. When you are developing the system, however, you probably want to know about the program&amp;rsquo;s internal state, and would set the &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 프로덕션 시스템에서 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;logger#WARN&quot;&gt;WARN&lt;/a&gt;&lt;/code&gt; 으로 설정 했을 수 있습니다 . 그러나 시스템을 개발할 때 프로그램의 내부 상태를 알고 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt; 로 설정 하려고 합니다.</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="4e742955f3e245d49a5db8ef4cf7e22e14fd4172" translate="yes" xml:space="preserve">
          <source>For more information on getter and setter macros, see the standard library documentation for &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#getter%28%2Anames%2C%26block%29-macro&quot;&gt;Object#getter&lt;/a&gt;, &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#setter%28%2Anames%29-macro&quot;&gt;Object#setter&lt;/a&gt;, and &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#property%28%2Anames%2C%26block%29-macro&quot;&gt;Object#property&lt;/a&gt;.</source>
          <target state="translated">getter 및 setter 매크로에 대한 자세한 내용은 &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#getter%28%2Anames%2C%26block%29-macro&quot;&gt;Object # getter&lt;/a&gt; , &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#setter%28%2Anames%29-macro&quot;&gt;Object # setter&lt;/a&gt; 및 &lt;a href=&quot;https://crystal-lang.org/api/latest/Object.html#property%28%2Anames%2C%26block%29-macro&quot;&gt;Object # property에&lt;/a&gt; 대한 표준 라이브러리 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea9d18f814a67697af6dc1fa3d3310674f336896" translate="yes" xml:space="preserve">
          <source>For negative &lt;em&gt;n&lt;/em&gt;, equivalent to &lt;code&gt;(-n).times { unshift(pop) }&lt;/code&gt;.</source>
          <target state="translated">음수 &lt;em&gt;n의&lt;/em&gt; 경우 &lt;code&gt;(-n).times { unshift(pop) }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81236a91ea21e77ce418e1018869c13c97324f13" translate="yes" xml:space="preserve">
          <source>For nested procs (and any type, in general), you can use parentheses:</source>
          <target state="translated">중첩 된 proc (및 일반적으로 모든 유형)의 경우 괄호를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="556c113dfe267840d82dc9f10117d8800723fbd3" translate="yes" xml:space="preserve">
          <source>For normalized URIs, the following is true:</source>
          <target state="translated">정규화 된 URI의 경우 다음이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6cf2f5344b9abe33bede60b8f1c24dd64363490" translate="yes" xml:space="preserve">
          <source>For now it's just a way to implement &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; in a way that the initial value given to it has the type of the first type in the union, if the type is a union.</source>
          <target state="translated">지금 은 형식이 공용체 인 경우 초기 값에 공용체의 첫 번째 형식이있는 방식으로 &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; 을 구현하는 방법 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="c56e8f3dae7c421f1b47c588cfc87abfc3ad242c" translate="yes" xml:space="preserve">
          <source>For now, its methods are purely lexical, there is no direct filesystem access.</source>
          <target state="translated">현재로서는 그 방법은 순전히 어휘 적이며 직접적인 파일 시스템 액세스는 없습니다.</target>
        </trans-unit>
        <trans-unit id="b133a3f63922e98b7cc8ee395f629fc3448c3f8f" translate="yes" xml:space="preserve">
          <source>For number types there is also &lt;code&gt;&lt;a href=&quot;number#static_array(*nums)-macro&quot;&gt;Number.static_array&lt;/a&gt;&lt;/code&gt; which can be used to initialize a static array:</source>
          <target state="translated">숫자 유형의 경우 정적 배열을 초기화하는 데 사용할 수있는 &lt;code&gt;&lt;a href=&quot;number#static_array(*nums)-macro&quot;&gt;Number.static_array&lt;/a&gt;&lt;/code&gt; 도 있습니다.</target>
        </trans-unit>
        <trans-unit id="74fe1f5c7e6e8e7b455d22772d1dae57eb726745" translate="yes" xml:space="preserve">
          <source>For numeric fields, the precision controls the number of decimal places displayed.</source>
          <target state="translated">숫자 필드의 경우 정밀도는 표시되는 소수 자릿수를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="b22e2137ad64ccf028838d9176dfdd2233423590" translate="yes" xml:space="preserve">
          <source>For numerical types, it is the value &lt;code&gt;0&lt;/code&gt; expressed in the respective type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d058830edddf824fb6940d2e88f5bee1667be38e" translate="yes" xml:space="preserve">
          <source>For numerical types, it is the value &lt;code&gt;1&lt;/code&gt; expressed in the respective type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e9f0413a5c38b20ccb8dceedff4d4330951de7" translate="yes" xml:space="preserve">
          <source>For our second application, we will add a &lt;em&gt;text decoration&lt;/em&gt; (&lt;code&gt;blink&lt;/code&gt;in this case):</source>
          <target state="translated">For our second application, we will add a &lt;em&gt;text decoration&lt;/em&gt; ( &lt;code&gt;blink&lt;/code&gt; in this case):</target>
        </trans-unit>
        <trans-unit id="a4b694987c179a33a5f7598698f5cf34271e4093" translate="yes" xml:space="preserve">
          <source>For positive &lt;em&gt;n&lt;/em&gt;, equivalent to &lt;code&gt;n.times { push(shift) }&lt;/code&gt;.</source>
          <target state="translated">양수 &lt;em&gt;n의&lt;/em&gt; 경우 &lt;code&gt;n.times { push(shift) }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff64f160ed47134177a89d4b27896cf65d9b5a46" translate="yes" xml:space="preserve">
          <source>For querying if a time is at a specific day of week, &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; offers named predicate methods, delegating to &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">특정 요일에 시간이 있는지 쿼리하기 위해 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 은 명명 된 술어 메소드를 제공하여 &lt;code&gt;&lt;a href=&quot;time#day_of_week:Time::DayOfWeek-instance-method&quot;&gt;#day_of_week&lt;/a&gt;&lt;/code&gt; 에 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="36040c025d6634d38c82cd03d1ff9715be9430f4" translate="yes" xml:space="preserve">
          <source>For string fields, the precision determines the maximum number of characters to be copied from the string.</source>
          <target state="translated">문자열 필드의 경우 정밀도는 문자열에서 복사 할 최대 문자 수를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="1d6183253455fd6156b690c7d5d0c03140222fe8" translate="yes" xml:space="preserve">
          <source>For that reason, this method returns a tuple &lt;code&gt;year, week&lt;/code&gt; consisting of the calendar year to which the calendar week belongs and the ordinal number of the week within that year.</source>
          <target state="translated">따라서이 메소드는 튜플 &lt;code&gt;year, week&lt;/code&gt; 반환합니다. 주는 달력 주가 속한 연도 및 해당 연도의 서수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b533dca6314f5a712911cd5589c5007226e40283" translate="yes" xml:space="preserve">
          <source>For the above example to output the docs at &lt;code&gt;public&lt;/code&gt; with custom canonical base url, and entrypoint &lt;code&gt;src/my_app.cr&lt;/code&gt;, the following arguments can be used:</source>
          <target state="translated">위의 예에서 사용자 정의 표준 기본 URL 및 &lt;code&gt;src/my_app.cr&lt;/code&gt; 을 사용하여 &lt;code&gt;public&lt;/code&gt; 으로 문서를 출력 하려면 다음 인수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a73b66f81031402de286d776f78d1424356e484a" translate="yes" xml:space="preserve">
          <source>For this reason, Crystal needs to know, in an obvious way (as obvious as to a human), the types of instance and &lt;a href=&quot;class_variables&quot;&gt;class&lt;/a&gt; variables.</source>
          <target state="translated">이러한 이유로 Crystal은 인스턴스 및 &lt;a href=&quot;class_variables&quot;&gt;클래스&lt;/a&gt; 변수 의 유형을 사람에게 분명하게 알 수 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="9a5d3e8c5e0eb937e7d830e4f87673056ffe17b6" translate="yes" xml:space="preserve">
          <source>For this reason, iterating a String in this way is not optimal, and in fact has a complexity of &lt;code&gt;O(n^2)&lt;/code&gt;:</source>
          <target state="translated">이러한 이유로 문자열을 이런 식으로 반복하는 것은 최적이 아니며 실제로 &lt;code&gt;O(n^2)&lt;/code&gt; 의 복잡성을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="d04104accf008a1b1939acb82635652f5116c5a0" translate="yes" xml:space="preserve">
          <source>For this to be useful the method name should have some reference to the module, otherwise chances of name clashes are high.</source>
          <target state="translated">이것이 유용하려면 메소드 이름에 모듈에 대한 참조가 있어야합니다. 그렇지 않으면 이름이 충돌 할 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="559776cbe6be7ebc9336840a9a8c4a25d150e70a" translate="yes" xml:space="preserve">
          <source>For this to work, the type given to &lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; must implement &lt;code&gt;to_yaml(builder : &lt;a href=&quot;yaml/nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">이것이 작동하려면 &lt;code&gt;&lt;a href=&quot;yaml#dump(object,io:IO)-class-method&quot;&gt;YAML.dump&lt;/a&gt;&lt;/code&gt; 에 지정된 유형이 &lt;code&gt;to_yaml(builder : &lt;a href=&quot;yaml/nodes/builder&quot;&gt;YAML::Nodes::Builder&lt;/a&gt;&lt;/code&gt; )를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7523e1820fe3142f4efe2f003ee80f8406a9abe4" translate="yes" xml:space="preserve">
          <source>For those who don't know, a palindrome is a word which is spelled the same way forwards as it is backwards. e.g. racecar, mom, dad, kayak, madam</source>
          <target state="translated">모르는 사람들에게 회문은 뒤로와 같은 방식으로 철자가 나오는 단어입니다. 예 : 레이싱 카, 엄마, 아빠, 카약, 부인</target>
        </trans-unit>
        <trans-unit id="ccddf92c67b977011ae35e5278ff74d2b8f773d5" translate="yes" xml:space="preserve">
          <source>For unit tests, it is recommended to follow the conventions for method names: Outer &lt;code&gt;describe&lt;/code&gt; is the name of the class, inner &lt;code&gt;describe&lt;/code&gt; targets methods. Instance methods are prefixed with &lt;code&gt;#&lt;/code&gt;, class methods with &lt;code&gt;.&lt;/code&gt;.</source>
          <target state="translated">단위 테스트의 경우 메소드 이름에 대한 규칙을 따르는 것이 좋습니다. 외부 &lt;code&gt;describe&lt;/code&gt; 은 클래스 이름, 내부 &lt;code&gt;describe&lt;/code&gt; 대상 메소드입니다. 인스턴스 메소드 앞에는 &lt;code&gt;#&lt;/code&gt; , 클래스 메소드에는 접두사가 붙 습니다 &lt;code&gt;.&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a76e5f1b8637b5a3c3e7541d8835ab4b8020e6b4" translate="yes" xml:space="preserve">
          <source>For values below and including 127 this matches the ASCII codes and thus its byte representation.</source>
          <target state="translated">127 이하의 값은 ASCII 코드 및 바이트 표현과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8d827d40f60ab45e8297a869ad324475ed67ab61" translate="yes" xml:space="preserve">
          <source>Forbid network access</source>
          <target state="translated">네트워크 액세스 금지</target>
        </trans-unit>
        <trans-unit id="f119e0e6ec262c960ff4eeda388fb60e172af208" translate="yes" xml:space="preserve">
          <source>Force HTML serialization on XML doc</source>
          <target state="translated">XML 문서에서 HTML 직렬화 강제</target>
        </trans-unit>
        <trans-unit id="769ed60a6b1ef5425d7cbaa69cd3a96da0529c3d" translate="yes" xml:space="preserve">
          <source>Force XHTML1 specific rules</source>
          <target state="translated">XHTML1 특정 규칙 강제</target>
        </trans-unit>
        <trans-unit id="276eb3e62a79cd359419fcb443db993dd1d67375" translate="yes" xml:space="preserve">
          <source>Force XML serialization on HTML doc</source>
          <target state="translated">HTML 문서에서 XML 직렬화 강제</target>
        </trans-unit>
        <trans-unit id="15af0be9bcb8bd8dfc9df46aa725a1a4b939637c" translate="yes" xml:space="preserve">
          <source>Force pattern anchoring.</source>
          <target state="translated">Force pattern anchoring.</target>
        </trans-unit>
        <trans-unit id="434249f3da6b64e5211a71f6ee9f5f1a1c8bbcbf" translate="yes" xml:space="preserve">
          <source>Forces content written to this writer to be flushed to this writer's &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 라이터에 쓰여진 내용을이 라이터의 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 플러시 시킵니다.</target>
        </trans-unit>
        <trans-unit id="a767fbe89030fec3486fe27230894f937be24454" translate="yes" xml:space="preserve">
          <source>Fork it (&amp;lt;https://github.com/crystal-lang/crystal/fork&amp;gt;)</source>
          <target state="translated">포크 (&amp;lt;https://github.com/crystal-lang/crystal/fork&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="b92b85002a3fb316a5c6e08beb73b6cb9ed9d64d" translate="yes" xml:space="preserve">
          <source>FormData</source>
          <target state="translated">FormData</target>
        </trans-unit>
        <trans-unit id="9a15e8036f37c2873256112a520381c764c6ea2e" translate="yes" xml:space="preserve">
          <source>FormData.build</source>
          <target state="translated">FormData.build</target>
        </trans-unit>
        <trans-unit id="46235ed94b8460f8c332f9d99dd1b27a3e16998b" translate="yes" xml:space="preserve">
          <source>FormData.parse</source>
          <target state="translated">FormData.parse</target>
        </trans-unit>
        <trans-unit id="b18e13d9989430928fe9e2bab7b0d6c9f1970985" translate="yes" xml:space="preserve">
          <source>FormData.parse_content_disposition</source>
          <target state="translated">FormData.parse_content_disposition</target>
        </trans-unit>
        <trans-unit id="ae26e8d649ecf79c3c0920b30068a814e528e587" translate="yes" xml:space="preserve">
          <source>FormData::Builder</source>
          <target state="translated">FormData::Builder</target>
        </trans-unit>
        <trans-unit id="c29b5499201dec2d3460d8420516cd8af63b8281" translate="yes" xml:space="preserve">
          <source>FormData::Builder#boundary</source>
          <target state="translated">FormData::Builder#boundary</target>
        </trans-unit>
        <trans-unit id="c032d6732864956c735f6e083cc8f6c83bcb28ea" translate="yes" xml:space="preserve">
          <source>FormData::Builder#content_type</source>
          <target state="translated">FormData::Builder#content_type</target>
        </trans-unit>
        <trans-unit id="e6ffb3d8ec58cde6a939da24a70ec4fbcff46889" translate="yes" xml:space="preserve">
          <source>FormData::Builder#field</source>
          <target state="translated">FormData::Builder#field</target>
        </trans-unit>
        <trans-unit id="d798f7dd86a74c4a16eedaade0f8711571359225" translate="yes" xml:space="preserve">
          <source>FormData::Builder#file</source>
          <target state="translated">FormData::Builder#file</target>
        </trans-unit>
        <trans-unit id="42e22eee2a22dcaea169679c3a45a9f9fb4dfbc4" translate="yes" xml:space="preserve">
          <source>FormData::Builder#finish</source>
          <target state="translated">FormData::Builder#finish</target>
        </trans-unit>
        <trans-unit id="4fc0ab44b8b0fa369b3a3620b0ffd9471aed208c" translate="yes" xml:space="preserve">
          <source>FormData::Builder.new</source>
          <target state="translated">FormData::Builder.new</target>
        </trans-unit>
        <trans-unit id="be9733bb5afb866a873fed2229e6107f04f0b690" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata</source>
          <target state="translated">FormData::FileMetadata</target>
        </trans-unit>
        <trans-unit id="11ab1976fdf3a0322d7a09805428953711de2ac5" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#clone</source>
          <target state="translated">FormData::FileMetadata#clone</target>
        </trans-unit>
        <trans-unit id="582073e3cdf51c4de346a4c9f3145aa24ae66fca" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#copy_with</source>
          <target state="translated">FormData::FileMetadata#copy_with</target>
        </trans-unit>
        <trans-unit id="913d5d29637ffebbcf29aa8857444aa87f7780e9" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#creation_time</source>
          <target state="translated">FormData::FileMetadata#creation_time</target>
        </trans-unit>
        <trans-unit id="c74a47706c332e2a2bd1a2a6286aa0aae160b049" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#filename</source>
          <target state="translated">FormData::FileMetadata#filename</target>
        </trans-unit>
        <trans-unit id="1ffa98a8cd3e395735558449c6167b94b632d61f" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#modification_time</source>
          <target state="translated">FormData::FileMetadata#modification_time</target>
        </trans-unit>
        <trans-unit id="04711e46cec893b95e66b2d42cf6841f2cd06230" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#read_time</source>
          <target state="translated">FormData::FileMetadata#read_time</target>
        </trans-unit>
        <trans-unit id="7a09dd28e26809503b6af4e276ce4f5f379f85b9" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata#size</source>
          <target state="translated">FormData::FileMetadata#size</target>
        </trans-unit>
        <trans-unit id="ddab053d06b65db9ec68a0a880da1efca899b5ab" translate="yes" xml:space="preserve">
          <source>FormData::FileMetadata.new</source>
          <target state="translated">FormData::FileMetadata.new</target>
        </trans-unit>
        <trans-unit id="0ec54804900d7b4e4de9df4afeff780a8bfff7df" translate="yes" xml:space="preserve">
          <source>FormData::Parser</source>
          <target state="translated">FormData::Parser</target>
        </trans-unit>
        <trans-unit id="987c25191d2d012a201555b7acb9d76bf024912f" translate="yes" xml:space="preserve">
          <source>FormData::Parser#has_next?</source>
          <target state="translated">FormData::Parser#has_next?</target>
        </trans-unit>
        <trans-unit id="9ec0860c0b724236bdd553eb124575f43ff7f476" translate="yes" xml:space="preserve">
          <source>FormData::Parser#next</source>
          <target state="translated">FormData::Parser#next</target>
        </trans-unit>
        <trans-unit id="7ee1cdfb02154ba5ad9dd1d46a170a5eb8e7d03c" translate="yes" xml:space="preserve">
          <source>FormData::Parser.new</source>
          <target state="translated">FormData::Parser.new</target>
        </trans-unit>
        <trans-unit id="53431a99bfd77f8d6a7231548ebf0022507e5021" translate="yes" xml:space="preserve">
          <source>FormData::Part</source>
          <target state="translated">FormData::Part</target>
        </trans-unit>
        <trans-unit id="4573099caf180d98688092744edb211a8437bd2b" translate="yes" xml:space="preserve">
          <source>FormData::Part#body</source>
          <target state="translated">FormData::Part#body</target>
        </trans-unit>
        <trans-unit id="dab1bc23d027248cc341db159c49334056afc55e" translate="yes" xml:space="preserve">
          <source>FormData::Part#creation_time</source>
          <target state="translated">FormData::Part#creation_time</target>
        </trans-unit>
        <trans-unit id="26e9372e225db1098313d79ce5fcafd9e1bd5c85" translate="yes" xml:space="preserve">
          <source>FormData::Part#filename</source>
          <target state="translated">FormData::Part#filename</target>
        </trans-unit>
        <trans-unit id="08ace5929c7c01c268076dd18e8877bef09bcb19" translate="yes" xml:space="preserve">
          <source>FormData::Part#headers</source>
          <target state="translated">FormData::Part#headers</target>
        </trans-unit>
        <trans-unit id="eabf565ac0d1714e65b02199603e5633cbf10fa5" translate="yes" xml:space="preserve">
          <source>FormData::Part#modification_time</source>
          <target state="translated">FormData::Part#modification_time</target>
        </trans-unit>
        <trans-unit id="778daf73383cc2b69526a005be78e7cd48c6150b" translate="yes" xml:space="preserve">
          <source>FormData::Part#name</source>
          <target state="translated">FormData::Part#name</target>
        </trans-unit>
        <trans-unit id="fdfdc4fd71a253598052177e5dd2038f8745f441" translate="yes" xml:space="preserve">
          <source>FormData::Part#read_time</source>
          <target state="translated">FormData::Part#read_time</target>
        </trans-unit>
        <trans-unit id="2df75dfc1ce4e765f5e02f6e41814a683fdf7f4b" translate="yes" xml:space="preserve">
          <source>FormData::Part#size</source>
          <target state="translated">FormData::Part#size</target>
        </trans-unit>
        <trans-unit id="9d42dd4041272127d0e625f6d867115a3f767039" translate="yes" xml:space="preserve">
          <source>FormData::Part.new</source>
          <target state="translated">FormData::Part.new</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="cf42c0221fc8822ae38cb3c379af59c3619e747a" translate="yes" xml:space="preserve">
          <source>Format a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; object as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using the format specified as &lt;code&gt;sane-cookie-date&lt;/code&gt; by &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.1&quot;&gt;RFC 6265&lt;/a&gt; which is according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616&lt;/a&gt; a &lt;a href=&quot;https://tools.ietf.org/html/rfc1123#page-55&quot;&gt;RFC 1123&lt;/a&gt; format with explicit timezone &lt;code&gt;GMT&lt;/code&gt; (interpreted as &lt;code&gt;UTC&lt;/code&gt;).</source>
          <target state="translated">포맷 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; A와 객체를 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 로 지정된 형식을 사용하여 &lt;code&gt;sane-cookie-date&lt;/code&gt; 로 &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.1&quot;&gt;RFC 6265를&lt;/a&gt; 따라하는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;RFC 2616 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc1123#page-55&quot;&gt;RFC 1123&lt;/a&gt; 명시 적 시간대와 형식 &lt;code&gt;GMT&lt;/code&gt; (해석 &lt;code&gt;UTC&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a2bfce095b2762f88ae9777af5caf0c775ce0a04" translate="yes" xml:space="preserve">
          <source>Format save output</source>
          <target state="translated">형식 저장 출력</target>
        </trans-unit>
        <trans-unit id="b499d780f12a94da22ba35f82630583100d0b079" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile).</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; ( &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; 프로파일)로 지정된 형식을 사용하여 형식을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="641c141dccfac77206deeaba6bbd8ed130c84e0d" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; (&lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; profile). into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC 3339&lt;/a&gt; ( &lt;a href=&quot;http://xml.coverpages.org/ISO-FDIS-8601.pdf&quot;&gt;ISO 8601&lt;/a&gt; 프로파일)로 지정된 형식을 사용하여 형식을 지정하십시오 . 주어진 &lt;em&gt;io에&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="60eef4ad68792ac98a07903b00b91f0d53684193" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt; into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt; 에 의해 지정된 형식으로 지정된 &lt;em&gt;io&lt;/em&gt; 로 형식을 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="be15c063b63355d288fe765faba2275a21328d47" translate="yes" xml:space="preserve">
          <source>Format this time using the format specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt;.</source>
          <target state="translated">이번에는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822에&lt;/a&gt; 지정된 형식을 사용하여 형식을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e559669d4a4eadafe8f7b742a2976f581fad17f1" translate="yes" xml:space="preserve">
          <source>Format with non-significant whitespace</source>
          <target state="translated">중요하지 않은 공백으로 포맷</target>
        </trans-unit>
        <trans-unit id="4efaf653e6c9a99bc9a555b48b94ad156d60917c" translate="yes" xml:space="preserve">
          <source>Format#format</source>
          <target state="translated">Format#format</target>
        </trans-unit>
        <trans-unit id="56936970105c98cc75e8662c6d82466b093ef76e" translate="yes" xml:space="preserve">
          <source>Format#from_json</source>
          <target state="translated">Format#from_json</target>
        </trans-unit>
        <trans-unit id="ad7e38a7115d7e6ffa8e5b734c117a5c96f09d46" translate="yes" xml:space="preserve">
          <source>Format#from_yaml</source>
          <target state="translated">Format#from_yaml</target>
        </trans-unit>
        <trans-unit id="e37b69b8a7618fc35461975abbe9fc27fa27c55e" translate="yes" xml:space="preserve">
          <source>Format#parse</source>
          <target state="translated">Format#parse</target>
        </trans-unit>
        <trans-unit id="5d47f3d608c5c80fb28a7b6dbaac3cf7bd33d7ab" translate="yes" xml:space="preserve">
          <source>Format#pattern</source>
          <target state="translated">Format#pattern</target>
        </trans-unit>
        <trans-unit id="fcfa2d36cf93f688439c2751ad2f5b2312207026" translate="yes" xml:space="preserve">
          <source>Format#to_json</source>
          <target state="translated">Format#to_json</target>
        </trans-unit>
        <trans-unit id="af58ca755833eddb7bb8419be49360f046dddb16" translate="yes" xml:space="preserve">
          <source>Format#to_yaml</source>
          <target state="translated">Format#to_yaml</target>
        </trans-unit>
        <trans-unit id="b44549c2963dc9351595f81dc1290b9ff0d02131" translate="yes" xml:space="preserve">
          <source>Format.new</source>
          <target state="translated">Format.new</target>
        </trans-unit>
        <trans-unit id="0616661677b98941ad1ac60b12693963d969d95d" translate="yes" xml:space="preserve">
          <source>Format::HTTP_DATE</source>
          <target state="translated">Format::HTTP_DATE</target>
        </trans-unit>
        <trans-unit id="cc47b2cd325368a8ea87e2c1282eb523211dd997" translate="yes" xml:space="preserve">
          <source>Format::HTTP_DATE.format</source>
          <target state="translated">Format::HTTP_DATE.format</target>
        </trans-unit>
        <trans-unit id="4b3052b97bc192bd7cfbaf4b3f667f058f876cda" translate="yes" xml:space="preserve">
          <source>Format::HTTP_DATE.parse</source>
          <target state="translated">Format::HTTP_DATE.parse</target>
        </trans-unit>
        <trans-unit id="c0504141eebc129deef39d6cd3c2260e1ceb485a" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE</source>
          <target state="translated">Format::ISO_8601_DATE</target>
        </trans-unit>
        <trans-unit id="9261e89578fa816d3dbf6588a3fe96def4c75e0e" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE.format</source>
          <target state="translated">Format::ISO_8601_DATE.format</target>
        </trans-unit>
        <trans-unit id="93c5fe15ef2ad4823dae48d23345c7568cfc647f" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE.parse</source>
          <target state="translated">Format::ISO_8601_DATE.parse</target>
        </trans-unit>
        <trans-unit id="a0589d83f3d60182300badd595a8b4e9688fc9d5" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE_TIME</source>
          <target state="translated">Format::ISO_8601_DATE_TIME</target>
        </trans-unit>
        <trans-unit id="063c0238d8f6fabfc5b23b78d3815e7805f551fb" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE_TIME.format</source>
          <target state="translated">Format::ISO_8601_DATE_TIME.format</target>
        </trans-unit>
        <trans-unit id="f287969ef8ed1028b166139ba20221116d2d0d11" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_DATE_TIME.parse</source>
          <target state="translated">Format::ISO_8601_DATE_TIME.parse</target>
        </trans-unit>
        <trans-unit id="1959e0a1d5d4f5a793f2ca4ad8d2025fc33f2254" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_TIME</source>
          <target state="translated">Format::ISO_8601_TIME</target>
        </trans-unit>
        <trans-unit id="7c73aa0b1f99c982a57d35387fc8d1b719619b27" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_TIME.format</source>
          <target state="translated">Format::ISO_8601_TIME.format</target>
        </trans-unit>
        <trans-unit id="0fb31a0b844cb783c15d71b378930f468d5145e9" translate="yes" xml:space="preserve">
          <source>Format::ISO_8601_TIME.parse</source>
          <target state="translated">Format::ISO_8601_TIME.parse</target>
        </trans-unit>
        <trans-unit id="b425faaf04762fb3822cde5f2a145d48dfab2d69" translate="yes" xml:space="preserve">
          <source>Format::RFC_2822</source>
          <target state="translated">Format::RFC_2822</target>
        </trans-unit>
        <trans-unit id="6675dd6a91c4119c2cbfcab03204c6771446add4" translate="yes" xml:space="preserve">
          <source>Format::RFC_2822.format</source>
          <target state="translated">Format::RFC_2822.format</target>
        </trans-unit>
        <trans-unit id="4fd47fce1afbc54fac883dbb8cd87aa1aaf8a6a9" translate="yes" xml:space="preserve">
          <source>Format::RFC_2822.parse</source>
          <target state="translated">Format::RFC_2822.parse</target>
        </trans-unit>
        <trans-unit id="3de53a9a7da272f52759f578f6d1ab2fef5ac47e" translate="yes" xml:space="preserve">
          <source>Format::RFC_3339</source>
          <target state="translated">Format::RFC_3339</target>
        </trans-unit>
        <trans-unit id="f446a8516407a5ca729ae09c39f52d17adc3e112" translate="yes" xml:space="preserve">
          <source>Format::RFC_3339.format</source>
          <target state="translated">Format::RFC_3339.format</target>
        </trans-unit>
        <trans-unit id="69e346532a61bfd66e5c5bcf4ceabfb4cc494090" translate="yes" xml:space="preserve">
          <source>Format::RFC_3339.parse</source>
          <target state="translated">Format::RFC_3339.parse</target>
        </trans-unit>
        <trans-unit id="9749765581a063011acc13ac2f5a6c2e0ab5e0e4" translate="yes" xml:space="preserve">
          <source>Format::YAML_DATE</source>
          <target state="translated">Format::YAML_DATE</target>
        </trans-unit>
        <trans-unit id="f436a7f4bc286f909511fbdf4d2a155c81cbed73" translate="yes" xml:space="preserve">
          <source>Format::YAML_DATE.format</source>
          <target state="translated">Format::YAML_DATE.format</target>
        </trans-unit>
        <trans-unit id="f5bb7f1cceec887f2535e2be4aea5e25c09b6daa" translate="yes" xml:space="preserve">
          <source>Format::YAML_DATE.parse?</source>
          <target state="translated">Format::YAML_DATE.parse?</target>
        </trans-unit>
        <trans-unit id="26409d9c8cdc08fb6598f53e6d6ec5ec7413e214" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">포맷합니다 &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="068f4f6756c071c2aa3a01070485270b1f3ae9d9" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io&lt;/em&gt; 로 &lt;code&gt;&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 포맷합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9236d3e03512749fb32842c13319b66670ea955" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; into the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io&lt;/em&gt; 로 &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 포맷합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63ebcfdd15fb9fa10c3cc44eae751c5c8f6352ea" translate="yes" xml:space="preserve">
          <source>Formats this &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; according to the pattern in &lt;em&gt;format&lt;/em&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;io &lt;/em&gt;&lt;em&gt;형식&lt;/em&gt; 의 패턴에 따라이 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;형식화&lt;/em&gt; 합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="040f8316cdc09eca08f1f37c6cccfc318caabff1" translate="yes" xml:space="preserve">
          <source>Formats this &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; according to the pattern in &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt; 의 패턴에 따라이 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 을 &lt;em&gt;형식화합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1ae42b52d64655839743c546b646a36f423ad845" translate="yes" xml:space="preserve">
          <source>Formatter</source>
          <target state="translated">Formatter</target>
        </trans-unit>
        <trans-unit id="436b740b28ff5a90a83b6a1a3fd297d9ee9ec7ac" translate="yes" xml:space="preserve">
          <source>Formatter#format</source>
          <target state="translated">Formatter#format</target>
        </trans-unit>
        <trans-unit id="2a48d9dfe0ae12b17b9d57036f04f2597bac423a" translate="yes" xml:space="preserve">
          <source>Formatter.new</source>
          <target state="translated">Formatter.new</target>
        </trans-unit>
        <trans-unit id="41f5c37223636a01a0c383839c234ba4370120b0" translate="yes" xml:space="preserve">
          <source>Formatting and Parsing Time</source>
          <target state="translated">포맷팅 및 파싱 시간</target>
        </trans-unit>
        <trans-unit id="b84bb720cb300cdb66d642fda5209f27c585eaf8" translate="yes" xml:space="preserve">
          <source>Forwarding non-captured blocks</source>
          <target state="translated">캡처되지 않은 블록 전달</target>
        </trans-unit>
        <trans-unit id="26ae44dbc214b1819030cfd6b28ebe9faacf0ad4" translate="yes" xml:space="preserve">
          <source>Forwards &lt;code&gt;&lt;a href=&quot;any#to_json_object_key-instance-method&quot;&gt;#to_json_object_key&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;any#raw:Type-instance-method&quot;&gt;#raw&lt;/a&gt;&lt;/code&gt; if it responds to that method, raises &lt;code&gt;&lt;a href=&quot;../json/error&quot;&gt;JSON::Error&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">해당 메소드에 응답하면 &lt;code&gt;&lt;a href=&quot;any#to_json_object_key-instance-method&quot;&gt;#to_json_object_key&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;any#raw:Type-instance-method&quot;&gt;#raw&lt;/a&gt;&lt;/code&gt; 로 전달하고 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;../json/error&quot;&gt;JSON::Error&lt;/a&gt;&lt;/code&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="37e71ff5520b2459edcefa77de1c3c2506be127d" translate="yes" xml:space="preserve">
          <source>Forwards missing methods to &lt;em&gt;delegate&lt;/em&gt;.</source>
          <target state="translated">누락 된 메서드를 &lt;em&gt;위임&lt;/em&gt; 하도록 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="5f99878be141d36c2b0a19c86417fcb85398b86c" translate="yes" xml:space="preserve">
          <source>Free variables</source>
          <target state="translated">자유 변수</target>
        </trans-unit>
        <trans-unit id="faf24e02dd62fe775db5e9ce34305c390c736e1d" translate="yes" xml:space="preserve">
          <source>FreeBSD includes the Crystal compiler in the ports tree, starting from version FreeBSD 11.0.</source>
          <target state="translated">FreeBSD는 FreeBSD 11.0 버전부터 포트 트리에 Crystal 컴파일러를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7eaf14b210b5b40c2dc6d93dcef611c04d4040d7" translate="yes" xml:space="preserve">
          <source>Fresh variables</source>
          <target state="translated">신선한 변수</target>
        </trans-unit>
        <trans-unit id="fde8bdaf263c300f13df95222c6cb7549044c1a7" translate="yes" xml:space="preserve">
          <source>From a tar.gz</source>
          <target state="translated">tar.gz에서</target>
        </trans-unit>
        <trans-unit id="96f6aa37fe48e824ff53f024cc80ea1929b5fcfc" translate="yes" xml:space="preserve">
          <source>From here choose your next steps:</source>
          <target state="translated">From here choose your next steps:</target>
        </trans-unit>
        <trans-unit id="d0f2d400f1a0359df7d6127ebe1d4b8a8ff94b02" translate="yes" xml:space="preserve">
          <source>From here the guide differs depending on whether you are hosting your repo on GitHub or GitLab. If you're hosting somewhere else, please feel free to write up a guide and add it to this book!</source>
          <target state="translated">From here the guide differs depending on whether you are hosting your repo on GitHub or GitLab. If you're hosting somewhere else, please feel free to write up a guide and add it to this book!</target>
        </trans-unit>
        <trans-unit id="784e2263cf874be06182c4b7b7f6ddaf6dd0f13f" translate="yes" xml:space="preserve">
          <source>From here, you can jump to anywhere you want in this document. Although, if you are new to the Crystal Language, we suggest that you continue reading the &lt;a href=&quot;getting_started/index&quot;&gt;Getting started&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fbb996d53b1908ff8489a20bd2d194921341e8" translate="yes" xml:space="preserve">
          <source>From methods</source>
          <target state="translated">방법에서</target>
        </trans-unit>
        <trans-unit id="4096750433ded6b0d29d371eefc43fc226d06bf2" translate="yes" xml:space="preserve">
          <source>From sources</source>
          <target state="translated">출처에서</target>
        </trans-unit>
        <trans-unit id="1027b4a693cc991ae39bc602c1be4e5da4749f4a" translate="yes" xml:space="preserve">
          <source>From this you can see that the main routine is simply the program itself: there's no need to define a &quot;main&quot; function or something similar.</source>
          <target state="translated">이것으로부터 메인 루틴이 단순히 프로그램 자체라는 것을 알 수 있습니다. &quot;메인&quot;기능이나 이와 유사한 것을 정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">기능 이름</target>
        </trans-unit>
        <trans-unit id="d9a41e2766a1818c1a2b009b7fe9c3ea498c67db" translate="yes" xml:space="preserve">
          <source>Function names in Crystal can be different from the C name. The following example shows how to bind the C function name &lt;code&gt;SDL_Init&lt;/code&gt; as &lt;code&gt;LibSDL.init&lt;/code&gt; in Crystal.</source>
          <target state="translated">Crystal의 함수 이름은 C 이름과 다를 수 있습니다. 다음 예는 Crystal에서 C 함수 이름 &lt;code&gt;SDL_Init&lt;/code&gt; 를 &lt;code&gt;LibSDL.init&lt;/code&gt; 로 바인딩하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bd60afb17eb1373b022a0f63e0359e2dbf61df32" translate="yes" xml:space="preserve">
          <source>Function names in a &lt;code&gt;lib&lt;/code&gt; definition can start with an upper case letter. That's different from methods and function definitions outside a &lt;code&gt;lib&lt;/code&gt;, which must start with a lower case letter.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 정의의 함수 이름 은 대문자로 시작할 수 있습니다. 그것은 소문자로 시작 해야하는 &lt;code&gt;lib&lt;/code&gt; 외부의 메소드 및 함수 정의와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="1775d6d229c09c127b9640c5b78d4c4c6d982d34" translate="yes" xml:space="preserve">
          <source>Function not implemented</source>
          <target state="translated">구현되지 않은 기능</target>
        </trans-unit>
        <trans-unit id="cd21de702e363d313856d31f0b31e899ff98db81" translate="yes" xml:space="preserve">
          <source>Function types (&lt;code&gt;Function(Int32, Int32)&lt;/code&gt;, which can also be written as &lt;code&gt;Int32 -&amp;gt; Int32&lt;/code&gt;)</source>
          <target state="translated">함수 유형 ( &lt;code&gt;Function(Int32, Int32)&lt;/code&gt; , &lt;code&gt;Int32 -&amp;gt; Int32&lt;/code&gt; 로도 쓸 수 있음 )</target>
        </trans-unit>
        <trans-unit id="72d994a709ff20f21bd01cabfec7aa99c96ec4b4" translate="yes" xml:space="preserve">
          <source>Function#add_attribute</source>
          <target state="translated">Function#add_attribute</target>
        </trans-unit>
        <trans-unit id="33ed2742cecbc552890dfd3837be5395cf6e4612" translate="yes" xml:space="preserve">
          <source>Function#add_target_dependent_attribute</source>
          <target state="translated">Function#add_target_dependent_attribute</target>
        </trans-unit>
        <trans-unit id="e9a0fc792f4b765098a92960f3ba1aea9da360bd" translate="yes" xml:space="preserve">
          <source>Function#attributes</source>
          <target state="translated">Function#attributes</target>
        </trans-unit>
        <trans-unit id="d6905ff963e01061d0a7f2a3b2bf0ae086730d37" translate="yes" xml:space="preserve">
          <source>Function#basic_blocks</source>
          <target state="translated">Function#basic_blocks</target>
        </trans-unit>
        <trans-unit id="141d57e58f0f8b3eee1d90c8450ad0e6ab8359c3" translate="yes" xml:space="preserve">
          <source>Function#call_convention</source>
          <target state="translated">Function#call_convention</target>
        </trans-unit>
        <trans-unit id="0aed350e50cd7716b32de9cade030a6d50b2af10" translate="yes" xml:space="preserve">
          <source>Function#call_convention=</source>
          <target state="translated">Function#call_convention=</target>
        </trans-unit>
        <trans-unit id="c664cd9f6ee6e8ec680c965fdc192d70466e7e8f" translate="yes" xml:space="preserve">
          <source>Function#delete</source>
          <target state="translated">Function#delete</target>
        </trans-unit>
        <trans-unit id="644f1263586ac1f86ffaf3d1a1913da2f78ff243" translate="yes" xml:space="preserve">
          <source>Function#function_type</source>
          <target state="translated">Function#function_type</target>
        </trans-unit>
        <trans-unit id="0d106c354df8c475a87c7a263a1004e0076f870c" translate="yes" xml:space="preserve">
          <source>Function#naked?</source>
          <target state="translated">Function#naked?</target>
        </trans-unit>
        <trans-unit id="8bfa23d2b89550c5c1a8f34f16ea61b0b57c332d" translate="yes" xml:space="preserve">
          <source>Function#params</source>
          <target state="translated">Function#params</target>
        </trans-unit>
        <trans-unit id="1432c63ccf749d35693c43ec9d067dcfaea30c3a" translate="yes" xml:space="preserve">
          <source>Function#personality_function=</source>
          <target state="translated">Function#personality_function=</target>
        </trans-unit>
        <trans-unit id="6f86ced355584e85ca5c2a8fe40550ab751bfc0f" translate="yes" xml:space="preserve">
          <source>Function#return_type</source>
          <target state="translated">Function#return_type</target>
        </trans-unit>
        <trans-unit id="4cebb702ce617f3d8b07e1aa236b41e3ef5b3762" translate="yes" xml:space="preserve">
          <source>Function#varargs?</source>
          <target state="translated">Function#varargs?</target>
        </trans-unit>
        <trans-unit id="2f35d347b5e853f5f9eafcdc11c9f0e4fd6a5bee" translate="yes" xml:space="preserve">
          <source>FunctionCollection</source>
          <target state="translated">FunctionCollection</target>
        </trans-unit>
        <trans-unit id="fed4fa54bd81a6c153cbb5415da6248c9f4111de" translate="yes" xml:space="preserve">
          <source>FunctionCollection#[]</source>
          <target state="translated">FunctionCollection#[]</target>
        </trans-unit>
        <trans-unit id="db1eb84dc5cada4f9fd150018d8f08dfcd6ed9d5" translate="yes" xml:space="preserve">
          <source>FunctionCollection#[]?</source>
          <target state="translated">FunctionCollection#[]?</target>
        </trans-unit>
        <trans-unit id="8ae0f0b55f8041076537b6eadbbb245a021180ee" translate="yes" xml:space="preserve">
          <source>FunctionCollection#add</source>
          <target state="translated">FunctionCollection#add</target>
        </trans-unit>
        <trans-unit id="17e32167031073966cd3a69c5d605bac4f354955" translate="yes" xml:space="preserve">
          <source>FunctionCollection#each</source>
          <target state="translated">FunctionCollection#each</target>
        </trans-unit>
        <trans-unit id="0713e9e94bbf10952762e8e12fd5a44b061e20c1" translate="yes" xml:space="preserve">
          <source>FunctionCollection.new</source>
          <target state="translated">FunctionCollection.new</target>
        </trans-unit>
        <trans-unit id="8631e42e8f73878cad556ec23bfcb15c599a689d" translate="yes" xml:space="preserve">
          <source>FunctionPassManager</source>
          <target state="translated">FunctionPassManager</target>
        </trans-unit>
        <trans-unit id="5ab74eef53153f9dd2c49837987c0e454820067c" translate="yes" xml:space="preserve">
          <source>FunctionPassManager#finalize</source>
          <target state="translated">FunctionPassManager#finalize</target>
        </trans-unit>
        <trans-unit id="e48d04965c138e8c5fd9fd8bb7e5359cbe390694" translate="yes" xml:space="preserve">
          <source>FunctionPassManager#run</source>
          <target state="translated">FunctionPassManager#run</target>
        </trans-unit>
        <trans-unit id="ec540c14ccdff5dc594c78478206db444b3ed812" translate="yes" xml:space="preserve">
          <source>FunctionPassManager#to_unsafe</source>
          <target state="translated">FunctionPassManager#to_unsafe</target>
        </trans-unit>
        <trans-unit id="d2051c5d356c592b7ae9fe46242064cbba9ca8f8" translate="yes" xml:space="preserve">
          <source>FunctionPassManager.new</source>
          <target state="translated">FunctionPassManager.new</target>
        </trans-unit>
        <trans-unit id="78bd4cbc5e4871b29d00acf37102b419f8e95640" translate="yes" xml:space="preserve">
          <source>FunctionPassManager::Runner</source>
          <target state="translated">FunctionPassManager::Runner</target>
        </trans-unit>
        <trans-unit id="4c08c23284d8d59487bde634eebc2d6d77857366" translate="yes" xml:space="preserve">
          <source>FunctionPassManager::Runner#run</source>
          <target state="translated">FunctionPassManager::Runner#run</target>
        </trans-unit>
        <trans-unit id="242f71a2e8f0f0dae64281bf65d247c13b380212" translate="yes" xml:space="preserve">
          <source>FunctionPassManager::Runner.new</source>
          <target state="translated">FunctionPassManager::Runner.new</target>
        </trans-unit>
        <trans-unit id="99a3e18460e703b6b52b26b4155c66c3e3ba24bc" translate="yes" xml:space="preserve">
          <source>GC</source>
          <target state="translated">GC</target>
        </trans-unit>
        <trans-unit id="a9afc117e4540c7fddc93d9f14b8820ad4253ac6" translate="yes" xml:space="preserve">
          <source>GC.free</source>
          <target state="translated">GC.free</target>
        </trans-unit>
        <trans-unit id="443f225fa8259e6047ec3da28eeb27704ee03de9" translate="yes" xml:space="preserve">
          <source>GC.init</source>
          <target state="translated">GC.init</target>
        </trans-unit>
        <trans-unit id="1b4a551d58e17d222d99fcecb1bca3664223c6c3" translate="yes" xml:space="preserve">
          <source>GC::ProfStats</source>
          <target state="translated">GC::ProfStats</target>
        </trans-unit>
        <trans-unit id="cad3c0791c331beb74abf540ed4977ba5650da33" translate="yes" xml:space="preserve">
          <source>GC::Stats</source>
          <target state="translated">GC::Stats</target>
        </trans-unit>
        <trans-unit id="323014e7f21041a6225ced7c39f47bc6d05809c9" translate="yes" xml:space="preserve">
          <source>Garbage Collector: to clean up &quot;no longer used&quot; memory.</source>
          <target state="translated">가비지 콜렉터 : &quot;더 이상 사용되지 않은&quot;메모리를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="ec42eae74dc27fb80f26aa62c3a27bc1e9d31f69" translate="yes" xml:space="preserve">
          <source>General type-safe interface</source>
          <target state="translated">일반적인 유형 안전 인터페이스</target>
        </trans-unit>
        <trans-unit id="0b1bc89864eda0c643cbd43680a430a8610cf85e" translate="yes" xml:space="preserve">
          <source>Generate subclasses of &lt;code&gt;&lt;a href=&quot;log/staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt; from a string with interpolations</source>
          <target state="translated">Generate subclasses of &lt;code&gt;&lt;a href=&quot;log/staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt; from a string with interpolations</target>
        </trans-unit>
        <trans-unit id="da78d68656176ea84dc14d5490297ab86df26eb3" translate="yes" xml:space="preserve">
          <source>Generate, read and verify &lt;code&gt;&lt;a href=&quot;../bcrypt&quot;&gt;Crypto::Bcrypt&lt;/a&gt;&lt;/code&gt; hashes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../bcrypt&quot;&gt;Crypto::Bcrypt&lt;/a&gt;&lt;/code&gt; 해시 생성, 읽기 및 확인</target>
        </trans-unit>
        <trans-unit id="483065c403e85e9b5d6275c41c5c4660ce675fa0" translate="yes" xml:space="preserve">
          <source>Generates &lt;em&gt;n&lt;/em&gt; random bytes that are encoded into base64.</source>
          <target state="translated">base64로 인코딩 된 &lt;em&gt;n 개의&lt;/em&gt; 임의 바이트를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="f0fadb2cb9e15cd0296fe9691448f6eca2d5ab28" translate="yes" xml:space="preserve">
          <source>Generates RFC 4122 v4 UUID.</source>
          <target state="translated">RFC 4122 v4 UUID를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6c7b9bee62963bd11d7c4b19a4ebe2a33addb9da" translate="yes" xml:space="preserve">
          <source>Generates UUID from &lt;em&gt;bytes&lt;/em&gt;, applying &lt;em&gt;version&lt;/em&gt; and &lt;em&gt;variant&lt;/em&gt; to the UUID if present.</source>
          <target state="translated">&lt;em&gt;바이트&lt;/em&gt; 와 UUID를 생성 하고 &lt;em&gt;버전&lt;/em&gt; 과 &lt;em&gt;변형&lt;/em&gt; 을 UUID에 적용 합니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="9d962a677e9fd478a4cac8d463149fbc148c1976" translate="yes" xml:space="preserve">
          <source>Generates a hexadecimal string based on &lt;em&gt;n&lt;/em&gt; random bytes.</source>
          <target state="translated">&lt;em&gt;n 개의&lt;/em&gt; 임의 바이트를 기반으로 16 진 문자열을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="afd125609cc8fca5666f5a7c7c5fbbdcdbab952b" translate="yes" xml:space="preserve">
          <source>Generates a new TLS client context with sane defaults for a client connection.</source>
          <target state="translated">Generates a new TLS client context with sane defaults for a client connection.</target>
        </trans-unit>
        <trans-unit id="e3f4db7493e26c5fdadef55c90ec09149e883ee8" translate="yes" xml:space="preserve">
          <source>Generates a new TLS server context with sane defaults for a server connection.</source>
          <target state="translated">서버 연결에 대한 기본 기본값을 사용하여 새 TLS 서버 컨텍스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f86e1acbf988d6bf34ccc5e0ae165600ac9e79a8" translate="yes" xml:space="preserve">
          <source>Generates a random &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">임의의 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="7d3023d5e29d6b7090d343676b30fbc4cb2080da" translate="yes" xml:space="preserve">
          <source>Generates a random &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;1&lt;/code&gt; 사이 의 임의의 &lt;code&gt;&lt;a href=&quot;float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; 를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ba79c9b0ad3ac4644177de30312daacc9656df44" translate="yes" xml:space="preserve">
          <source>Generates a random integer which is greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than &lt;em&gt;max&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 보다 크고 &lt;em&gt;max&lt;/em&gt; 보다 작은 임의의 정수를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="9521587d3509b9013604a1332b513727ef266247" translate="yes" xml:space="preserve">
          <source>Generates a random unsigned integer.</source>
          <target state="translated">임의의 부호없는 정수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fd81a02fbb446799a8d4ccf5f58bd2e64b282e3b" translate="yes" xml:space="preserve">
          <source>Generates a slice filled with &lt;em&gt;n&lt;/em&gt; random bytes.</source>
          <target state="translated">&lt;em&gt;n 개의&lt;/em&gt; 임의 바이트로 채워진 슬라이스를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="f005e208eeb531241b0c88d5a6a31818d7a2fbeb" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;&lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; hash value for this object.</source>
          <target state="translated">이 객체 의 &lt;code&gt;&lt;a href=&quot;../uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; 해시 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="3d3cff8b91dec76dacf77eee8cc9ee28632d4f10" translate="yes" xml:space="preserve">
          <source>Generates an &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; hash value for this object.</source>
          <target state="translated">이 객체 의 &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; 해시 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="cb83bb5513d44f19055319ce1c8d1e31579935f5" translate="yes" xml:space="preserve">
          <source>Generates an INI-style configuration from a given hash.</source>
          <target state="translated">지정된 해시에서 INI 스타일 구성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e71397115f5f9a857f0d9f6392c0b08e35bba1e9" translate="yes" xml:space="preserve">
          <source>Generates random numbers from a secure source provided by the system.</source>
          <target state="translated">시스템이 제공 한 보안 소스에서 난수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0edb628a9542a14f813bd7de9f8386b56c8a58b5" translate="yes" xml:space="preserve">
          <source>Generates:</source>
          <target state="translated">Generates:</target>
        </trans-unit>
        <trans-unit id="8d6873375773b715a55ad609b73706d0e3e954a7" translate="yes" xml:space="preserve">
          <source>Generating</source>
          <target state="translated">Generating</target>
        </trans-unit>
        <trans-unit id="1125cd6c09015ea6ddee900989ddc85eb364176c" translate="yes" xml:space="preserve">
          <source>Generating with &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;):Nil-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Generating with &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;):Nil-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e603ef685ab4d71e74ed0bd538306e244905ded3" translate="yes" xml:space="preserve">
          <source>Generating with &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt; 로 생성</target>
        </trans-unit>
        <trans-unit id="b21c1476569529ed43deb2a32837f2fc9c98fac4" translate="yes" xml:space="preserve">
          <source>Generating with &lt;code&gt;to_json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;to_json&lt;/code&gt; 으로 생성</target>
        </trans-unit>
        <trans-unit id="9cbd748a3f653ce37101e16fc7adce84e181ab1a" translate="yes" xml:space="preserve">
          <source>Generic (useful) information about system operation</source>
          <target state="translated">시스템 작동에 대한 일반 (유용한) 정보</target>
        </trans-unit>
        <trans-unit id="65750b23ac892f289517e6c4c742293326961028" translate="yes" xml:space="preserve">
          <source>Generic JSON error.</source>
          <target state="translated">일반 JSON 오류</target>
        </trans-unit>
        <trans-unit id="33810662706c9092d5e5b948dfdedded4e611f7f" translate="yes" xml:space="preserve">
          <source>Generic Type Argument</source>
          <target state="translated">제네릭 형식 인수</target>
        </trans-unit>
        <trans-unit id="0eec0953ed7b87df6d15e144d57f2ab3a7f37e50" translate="yes" xml:space="preserve">
          <source>Generic classes and structs can be inherited. When inheriting you can specify an instance of the generic type, or delegate type variables:</source>
          <target state="translated">일반 클래스와 구조체는 상속 될 수 있습니다. 상속 할 때 제네릭 형식의 인스턴스를 지정하거나 형식 변수를 위임 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="049805455f6075a4285aa631d2f872467a2424b1" translate="yes" xml:space="preserve">
          <source>Generic structs and modules</source>
          <target state="translated">일반적인 구조체와 모듈</target>
        </trans-unit>
        <trans-unit id="d64f429cbbf8ba34a9a8add30a8c8f2a8f65c3f0" translate="yes" xml:space="preserve">
          <source>Generic types inheritance</source>
          <target state="translated">제네릭 형식 상속</target>
        </trans-unit>
        <trans-unit id="241c2a37392921378a3f0db985295b611089f317" translate="yes" xml:space="preserve">
          <source>GenericValue</source>
          <target state="translated">GenericValue</target>
        </trans-unit>
        <trans-unit id="46e47b69dc5de36edc023ef3ecac77ead88313ed" translate="yes" xml:space="preserve">
          <source>GenericValue#finalize</source>
          <target state="translated">GenericValue#finalize</target>
        </trans-unit>
        <trans-unit id="5b4478c5c5159d8cda061ee8a9d1dece1ecaf501" translate="yes" xml:space="preserve">
          <source>GenericValue#to_b</source>
          <target state="translated">GenericValue#to_b</target>
        </trans-unit>
        <trans-unit id="4e0c7a11c786fa0eb5fa3393621c66c121ca8a87" translate="yes" xml:space="preserve">
          <source>GenericValue#to_f32</source>
          <target state="translated">GenericValue#to_f32</target>
        </trans-unit>
        <trans-unit id="98f317e3b904e282e6469f9f262c5234b13f9ed6" translate="yes" xml:space="preserve">
          <source>GenericValue#to_f64</source>
          <target state="translated">GenericValue#to_f64</target>
        </trans-unit>
        <trans-unit id="967b86a91915d7870df6dffa628aea4596f947d6" translate="yes" xml:space="preserve">
          <source>GenericValue#to_i</source>
          <target state="translated">GenericValue#to_i</target>
        </trans-unit>
        <trans-unit id="ebfa33b019477ddd455df6b7d1678c6b34974998" translate="yes" xml:space="preserve">
          <source>GenericValue#to_i64</source>
          <target state="translated">GenericValue#to_i64</target>
        </trans-unit>
        <trans-unit id="3d5d724474181945a87d98c4f79d217691cc6212" translate="yes" xml:space="preserve">
          <source>GenericValue#to_pointer</source>
          <target state="translated">GenericValue#to_pointer</target>
        </trans-unit>
        <trans-unit id="fb10d9f40c066fc820a5ae4be1d30318346085b9" translate="yes" xml:space="preserve">
          <source>GenericValue#to_string</source>
          <target state="translated">GenericValue#to_string</target>
        </trans-unit>
        <trans-unit id="37405cf61c0a59ee9fcfca73d7a61d5fd66f87b2" translate="yes" xml:space="preserve">
          <source>GenericValue#to_u64</source>
          <target state="translated">GenericValue#to_u64</target>
        </trans-unit>
        <trans-unit id="30cf36cb8c6a50474e4a72ecb909920ee3c00edc" translate="yes" xml:space="preserve">
          <source>GenericValue#to_unsafe</source>
          <target state="translated">GenericValue#to_unsafe</target>
        </trans-unit>
        <trans-unit id="0a05820ad3444e0d51d915dd1c1887c685961b73" translate="yes" xml:space="preserve">
          <source>GenericValue.new</source>
          <target state="translated">GenericValue.new</target>
        </trans-unit>
        <trans-unit id="80dadd86173d0ff3979257793d4e45beb238b6a2" translate="yes" xml:space="preserve">
          <source>Generics</source>
          <target state="translated">Generics</target>
        </trans-unit>
        <trans-unit id="ce19bd3f6dfc058e3e1c7c245c35b813ed70ee1a" translate="yes" xml:space="preserve">
          <source>Generics allow you to parameterize a type based on other type. Consider a Box type:</source>
          <target state="translated">제네릭을 사용하면 다른 유형에 따라 유형을 매개 변수화 할 수 있습니다. 상자 유형을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="02588562da23ba3a1a60b020bf4ec4258ae0e37b" translate="yes" xml:space="preserve">
          <source>Generics are especially useful for implementing collection types. &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt; are generic types, as is &lt;code&gt;Pointer&lt;/code&gt;.</source>
          <target state="translated">제네릭은 특히 컬렉션 유형을 구현하는 데 유용합니다. &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Hash&lt;/code&gt; , &lt;code&gt;Set&lt;/code&gt; 은 &lt;code&gt;Pointer&lt;/code&gt; 와 같은 일반 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="74abd4e367bcdb56b18e2ae30bcd2aacc6bb9c2a" translate="yes" xml:space="preserve">
          <source>Gentoo Linux includes the Crystal compiler in the main overlay.</source>
          <target state="translated">젠투 리눅스는 메인 오버레이에 Crystal 컴파일러를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="185187f80dd7a733eba62e844b9ba7b3b8c67e50" translate="yes" xml:space="preserve">
          <source>Gets a string from &lt;code&gt;reader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reader&lt;/code&gt; 에서 문자열을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6c5411fef46f25b9827504d28e5d37a5db503170" translate="yes" xml:space="preserve">
          <source>Gets an access token from a previously obtained request token and an &lt;em&gt;oauth_verifier&lt;/em&gt; obtained from an authorize URI, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.3&quot;&gt;RFC 5849, Section 2.3&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-2.3&quot;&gt;RFC 5849 섹션 2.3에&lt;/a&gt; 지정된대로 이전에 얻은 요청 토큰 및 권한 부여 URI에서 얻은 &lt;em&gt;oauth_verifier&lt;/em&gt; 에서 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="a911e04d4721e04739507a5374819ba7318601ea" translate="yes" xml:space="preserve">
          <source>Gets an access token using a refresh token, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-6&quot;&gt;RFC 6749, Section 6&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-6&quot;&gt;RFC 6749 섹션 6에&lt;/a&gt; 지정된 새로 고침 토큰을 사용하여 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="6202be15644d203da0628967963de643712896fa" translate="yes" xml:space="preserve">
          <source>Gets an access token using an authorization code, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.1.3&quot;&gt;RFC 6749, Section 4.1.3&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.1.3&quot;&gt;RFC 6749, 섹션 4.1.3에&lt;/a&gt; 지정된 인증 코드를 사용하여 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="6b093328f248b4713383dd1b200d93cdc3f744cb" translate="yes" xml:space="preserve">
          <source>Gets an access token using client credentials, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.4.2&quot;&gt;RFC 6749, Section 4.4.2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.4.2&quot;&gt;RFC 6749 섹션 4.4.2에&lt;/a&gt; 지정된 클라이언트 자격 증명을 사용하여 액세스 토큰을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="454c68f501446681ff3eed78387eb9cd66af86c3" translate="yes" xml:space="preserve">
          <source>Gets an access token using the resource owner credentials, as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.3.2&quot;&gt;RFC 6749, Section 4.3.2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.3.2&quot;&gt;RFC 6749, 섹션 4.3.2에&lt;/a&gt; 지정된대로 리소스 소유자 자격 증명을 사용하여 액세스 토큰을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c9cd40fccb0d94b2abefabd53f5542c1d8d92f76" translate="yes" xml:space="preserve">
          <source>Gets the attribute content for the &lt;em&gt;attribute&lt;/em&gt; given by name.</source>
          <target state="translated">에 대한 속성의 콘텐츠를 가져옵니다 &lt;em&gt;속성&lt;/em&gt; 이름으로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="597dc4b464017a1b810e55a37b95b820496e7393" translate="yes" xml:space="preserve">
          <source>Gets the attribute content for the &lt;em&gt;attribute&lt;/em&gt; given by name. Raises &lt;code&gt;&lt;a href=&quot;../keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; if attribute is not found.</source>
          <target state="translated">에 대한 속성의 콘텐츠를 가져옵니다 &lt;em&gt;속성&lt;/em&gt; 이름으로 제공합니다. 발생시킵니다 &lt;code&gt;&lt;a href=&quot;../keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; 를를 속성이 발견되지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="c2a15834407a0000b7f1b654ea2577ac8acea1f0" translate="yes" xml:space="preserve">
          <source>Gets the attribute content for the &lt;em&gt;attribute&lt;/em&gt; given by name. Returns &lt;code&gt;nil&lt;/code&gt; if attribute is not found.</source>
          <target state="translated">에 대한 속성의 콘텐츠를 가져옵니다 &lt;em&gt;속성&lt;/em&gt; 이름으로 제공합니다. 속성이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="47c99bfca70dad332dd906ae34f412eb3767d8ca" translate="yes" xml:space="preserve">
          <source>Gets the current &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; for the given &lt;em&gt;key&lt;/em&gt; or &lt;code&gt;nil&lt;/code&gt; if none is set.</source>
          <target state="translated">현재 가져옵니다 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; 주어진에 대한 &lt;em&gt;키&lt;/em&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 아무것도 설정되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="248272ec50333a0ed19e9173bf5b90799e5ec8c6" translate="yes" xml:space="preserve">
          <source>Gets the current &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; for the given &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;키에&lt;/em&gt; 대한 현재 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; 를 가져옵니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74b715909119630b285cd320a5ef62c142bb99df" translate="yes" xml:space="preserve">
          <source>Gets the document for this Node as a &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 노드의 문서를 &lt;code&gt;&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;&lt;/code&gt; 로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f8e439bf381b2bc663d72c74e50c5149e1adfa37" translate="yes" xml:space="preserve">
          <source>Gets the list of children for this node as a &lt;code&gt;&lt;a href=&quot;nodeset&quot;&gt;XML::NodeSet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 노드의 자식리스트를 &lt;code&gt;&lt;a href=&quot;nodeset&quot;&gt;XML::NodeSet&lt;/a&gt;&lt;/code&gt; 로 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="3842c47123da4ba03e2de8ecbb6383f53e5484bc" translate="yes" xml:space="preserve">
          <source>Gets the value of an environment variable at compile-time, or &lt;code&gt;nil&lt;/code&gt; if it doesn't exist.</source>
          <target state="translated">컴파일 타임에 환경 변수의 값을 가져 오거나 존재하지 않는 경우 &lt;code&gt;nil&lt;/code&gt; 을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ac912e83d25ab4c1d028d8b85b3c09f13de1a492" translate="yes" xml:space="preserve">
          <source>Gets the value pointed at this pointer's address plus &lt;code&gt;offset * sizeof(T)&lt;/code&gt;.</source>
          <target state="translated">이 포인터의 주소와 &lt;code&gt;offset * sizeof(T)&lt;/code&gt; 지정된 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5a743423cf7bbdd346e177ec08875ed99792c883" translate="yes" xml:space="preserve">
          <source>Gets the value pointed by this pointer.</source>
          <target state="translated">이 포인터가 가리키는 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="29dde79e94af4ddc43743a123e656f27a0e42db2" translate="yes" xml:space="preserve">
          <source>Getters and setters</source>
          <target state="translated">게터와 세터</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="e90742eb6d4ea9a533916ec22aac63a1d3c8c141" translate="yes" xml:space="preserve">
          <source>Getting started: Command Line Interface Application</source>
          <target state="translated">Getting started: Command Line Interface Application</target>
        </trans-unit>
        <trans-unit id="63de3c068853816c1318d515893e6dc566ecc9de" translate="yes" xml:space="preserve">
          <source>Getting started: HTTP Server</source>
          <target state="translated">Getting started: HTTP Server</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="e61fe3ded14edcc0df05befc99f58906cf361eb0" translate="yes" xml:space="preserve">
          <source>GitHub Releases</source>
          <target state="translated">GitHub 릴리즈</target>
        </trans-unit>
        <trans-unit id="69ec326a5b6841d0fe925c7e5fb49d46d58a3f57" translate="yes" xml:space="preserve">
          <source>GitLab also has a &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/releases.html&quot;&gt;releases feature&lt;/a&gt; that let's you associate files and a description with this tag. That way you can (for example) distribute binaries.</source>
          <target state="translated">GitLab also has a &lt;a href=&quot;https://docs.gitlab.com/ee/workflow/releases.html&quot;&gt;releases feature&lt;/a&gt; that let's you associate files and a description with this tag. That way you can (for example) distribute binaries.</target>
        </trans-unit>
        <trans-unit id="6fb429020773f0c0bbb8400e6f573952673b9e03" translate="yes" xml:space="preserve">
          <source>Given a valid keyword, Crystal will automatically generate visual flags that help highlight problems, notes and/or possible issues.</source>
          <target state="translated">유효한 키워드가 있으면 Crystal은 문제, 메모 및 / 또는 가능한 문제를 강조하는 데 도움이되는 시각적 플래그를 자동으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="82a8be040b46d3fbfc9127ebdf0724b876e13233" translate="yes" xml:space="preserve">
          <source>Given the examples, it may come to our attention that &lt;strong&gt;the number of connections is relevant&lt;/strong&gt;. If we are programming a short living application with only one user starting requests to the database then a single connection managed by us (i.e. a &lt;code&gt;DB::Connection&lt;/code&gt; object) should be enough (think of a command line application that receives parameters, then starts a request to the database and finally displays the result to the user) On the other hand, if we are building a system with many concurrent users and with heavy database access, then we should use a &lt;code&gt;DB::Database&lt;/code&gt; object; which by using a connection pool will have a number of connections already prepared and ready to use (no bootstrap/initialization-time penalizations). Or imagine that you are building a long-living application (like a background job) then a connection pool will free you from the responsibility of monitoring the state of the connection: is it alive or does it need to reconnect?</source>
          <target state="translated">Given the examples, it may come to our attention that &lt;strong&gt;the number of connections is relevant&lt;/strong&gt;. If we are programming a short living application with only one user starting requests to the database then a single connection managed by us (i.e. a &lt;code&gt;DB::Connection&lt;/code&gt; object) should be enough (think of a command line application that receives parameters, then starts a request to the database and finally displays the result to the user) On the other hand, if we are building a system with many concurrent users and with heavy database access, then we should use a &lt;code&gt;DB::Database&lt;/code&gt; object; which by using a connection pool will have a number of connections already prepared and ready to use (no bootstrap/initialization-time penalizations). Or imagine that you are building a long-living application (like a background job) then a connection pool will free you from the responsibility of monitoring the state of the connection: is it alive or does it need to reconnect?</target>
        </trans-unit>
        <trans-unit id="658f3af10668ba9db8155a8cdfe0b82d03e29031" translate="yes" xml:space="preserve">
          <source>Given the same number of arguments, the compiler will try to sort them by leaving the less restrictive ones to the end:</source>
          <target state="translated">동일한 개수의 인수가 주어지면 컴파일러는 덜 제한적인 인수를 끝에 남겨서 정렬하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="c4c1677435f70be138dcd8cef767ef856dbd5d3f" translate="yes" xml:space="preserve">
          <source>Given the same number of parameters, the compiler will try to sort them by leaving the less restrictive ones to the end:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6229469a9b6343c9395790826084f2f26f6d02" translate="yes" xml:space="preserve">
          <source>Gives a compile-time error if the file doesn't exist or if reading the file fails.</source>
          <target state="translated">파일이 없거나 파일 읽기에 실패하면 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b25fb36d96a83da69e3793a310e146df18d10c84" translate="yes" xml:space="preserve">
          <source>Gives a compile-time error with the given &lt;em&gt;message&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;메시지&lt;/em&gt; 와 함께 컴파일 타임 오류를 제공 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e5f8b75d8cb15275f9402ca76e3a1235ac555c39" translate="yes" xml:space="preserve">
          <source>Gives a compile-time error with the given &lt;em&gt;message&lt;/em&gt;. This will highlight this node in the error message.</source>
          <target state="translated">주어진 &lt;em&gt;메시지&lt;/em&gt; 와 함께 컴파일 타임 오류를 제공 &lt;em&gt;합니다&lt;/em&gt; . 오류 메시지에서이 노드가 강조 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4ab36b2fa1feba713a85484881423c416488b11b" translate="yes" xml:space="preserve">
          <source>Gives a hint to the compiler to always inline a method:</source>
          <target state="translated">컴파일러에게 항상 메소드를 인라인하는 힌트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9523cf6339fd4cee21bf2a729ef44a6e64c0dc61" translate="yes" xml:space="preserve">
          <source>GlobalCollection</source>
          <target state="translated">GlobalCollection</target>
        </trans-unit>
        <trans-unit id="33a104a25d403d07a29040b9d4cfbce655e6fa0a" translate="yes" xml:space="preserve">
          <source>GlobalCollection#[]</source>
          <target state="translated">GlobalCollection#[]</target>
        </trans-unit>
        <trans-unit id="616def6964f931bcecc7573c5a5dc03369f2b817" translate="yes" xml:space="preserve">
          <source>GlobalCollection#[]?</source>
          <target state="translated">GlobalCollection#[]?</target>
        </trans-unit>
        <trans-unit id="2ecf7582ca239142bf895689a7bbf8e65f91fac5" translate="yes" xml:space="preserve">
          <source>GlobalCollection#add</source>
          <target state="translated">GlobalCollection#add</target>
        </trans-unit>
        <trans-unit id="1de574efbdfa0dbbc7fecb54428fe9e7854b9964" translate="yes" xml:space="preserve">
          <source>GlobalCollection.new</source>
          <target state="translated">GlobalCollection.new</target>
        </trans-unit>
        <trans-unit id="e5fc8e58167f8c8fe63eb4c952edf94d645b45a0" translate="yes" xml:space="preserve">
          <source>Go ahead and delete the default &lt;code&gt;travis.yml&lt;/code&gt; that comes with the project. We won't be needing it.</source>
          <target state="translated">Go ahead and delete the default &lt;code&gt;travis.yml&lt;/code&gt; that comes with the project. We won't be needing it.</target>
        </trans-unit>
        <trans-unit id="7a9f119b1fe0918d1d0757bfde6e58c2033a929b" translate="yes" xml:space="preserve">
          <source>Good examples of the above are &lt;code&gt;&lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt;Number#divmod&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;Enumerable#minmax&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">위의 좋은 예는 &lt;code&gt;&lt;a href=&quot;number#divmod(number)-instance-method&quot;&gt;Number#divmod&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;Enumerable#minmax&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7afa0bd37a9ff8715547823b67f37ddb334f4998" translate="yes" xml:space="preserve">
          <source>Gracefully terminates the server.</source>
          <target state="translated">서버를 정상적으로 종료합니다.</target>
        </trans-unit>
        <trans-unit id="f015d9fd3cb9ef1fda8080a19d127bda7473bca9" translate="yes" xml:space="preserve">
          <source>Gracefully terminates the server. It will process currently accepted requests, but it won't accept new connections.</source>
          <target state="translated">서버를 정상적으로 종료합니다. 현재 승인 된 요청을 처리하지만 새 연결은 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="91bb266617e23b370aa2f7ca013ddea693880bcb" translate="yes" xml:space="preserve">
          <source>Great!</source>
          <target state="translated">Great!</target>
        </trans-unit>
        <trans-unit id="7c5cbdb615d7a319514cf4aca5ef3b4fdc54d5ab" translate="yes" xml:space="preserve">
          <source>Great! That was easy! Now imagine using this string as the banner for our All My CLI application, it's easy if you try:</source>
          <target state="translated">Great! That was easy! Now imagine using this string as the banner for our All My CLI application, it's easy if you try:</target>
        </trans-unit>
        <trans-unit id="a937c07826cfc293e1c27eb0ed3c8605420fe1b7" translate="yes" xml:space="preserve">
          <source>Great! These applications look awesome! But, &lt;strong&gt;what happens when we pass an option that is not declared?&lt;/strong&gt; For example -n</source>
          <target state="translated">Great! These applications look awesome! But, &lt;strong&gt;what happens when we pass an option that is not declared?&lt;/strong&gt; For example -n</target>
        </trans-unit>
        <trans-unit id="0e53114b32b18e2352f805f5a415a65e6dd6a2f7" translate="yes" xml:space="preserve">
          <source>Group#==</source>
          <target state="translated">Group#==</target>
        </trans-unit>
        <trans-unit id="e1c621da7025c7837ad3dd79e2a0b1951bcc792f" translate="yes" xml:space="preserve">
          <source>Group#hash</source>
          <target state="translated">Group#hash</target>
        </trans-unit>
        <trans-unit id="c47fb3cc8b3698c5dda67891040f723e33de442b" translate="yes" xml:space="preserve">
          <source>Group#id</source>
          <target state="translated">Group#id</target>
        </trans-unit>
        <trans-unit id="34792d92c6213d63b2fea63898fe349b9721b366" translate="yes" xml:space="preserve">
          <source>Group#name</source>
          <target state="translated">Group#name</target>
        </trans-unit>
        <trans-unit id="030a5113448460d1e749f269ea4d8f644e763fc0" translate="yes" xml:space="preserve">
          <source>Group#to_s</source>
          <target state="translated">Group#to_s</target>
        </trans-unit>
        <trans-unit id="014eef4372ee93fc5206071695450bb123644c3f" translate="yes" xml:space="preserve">
          <source>Group.find_by</source>
          <target state="translated">Group.find_by</target>
        </trans-unit>
        <trans-unit id="eb1e4843115916d8a99e3c30fde9ba5cae4d4e65" translate="yes" xml:space="preserve">
          <source>Group.find_by?</source>
          <target state="translated">Group.find_by?</target>
        </trans-unit>
        <trans-unit id="04db27ab7b86dcc91db1ae67b9be7fa786713955" translate="yes" xml:space="preserve">
          <source>Groups can be retrieved by either group name or their group ID:</source>
          <target state="translated">그룹 이름 또는 그룹 ID로 그룹을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="d78100b5c449d5e58c1f503629522472e4c7f896" translate="yes" xml:space="preserve">
          <source>Guides: CircleCI</source>
          <target state="translated">Guides: CircleCI</target>
        </trans-unit>
        <trans-unit id="75280749b7724f3bc4cbf5aac4d7e73b5dc70703" translate="yes" xml:space="preserve">
          <source>Guides: Concurrency</source>
          <target state="translated">가이드 : 동시성</target>
        </trans-unit>
        <trans-unit id="b2f2b21644ddb8c8057845839e7befc75306e592" translate="yes" xml:space="preserve">
          <source>Guides: Continuous Integration</source>
          <target state="translated">Guides: Continuous Integration</target>
        </trans-unit>
        <trans-unit id="a920f3dbc8d86d08b0ac15f2a6f69240bb9a9d59" translate="yes" xml:space="preserve">
          <source>Guides: Hosting on GitHub</source>
          <target state="translated">Guides: Hosting on GitHub</target>
        </trans-unit>
        <trans-unit id="01d13731e52054b91d10afb329a3ecab59439dd8" translate="yes" xml:space="preserve">
          <source>Guides: Hosting on GitLab</source>
          <target state="translated">Guides: Hosting on GitLab</target>
        </trans-unit>
        <trans-unit id="72c51ddd4e8a1494b98124975d25093706fa2c76" translate="yes" xml:space="preserve">
          <source>Guides: Performance</source>
          <target state="translated">가이드 : 성능</target>
        </trans-unit>
        <trans-unit id="ad83d958178c3588ad38b07d9066a4f0e06c5f76" translate="yes" xml:space="preserve">
          <source>Guides: Testing Crystal Code</source>
          <target state="translated">가이드 : Crystal Code 테스트</target>
        </trans-unit>
        <trans-unit id="1f070394a11a30072617fdacfdfe1bfa9f676117" translate="yes" xml:space="preserve">
          <source>Guides: Travis CI</source>
          <target state="translated">Guides: Travis CI</target>
        </trans-unit>
        <trans-unit id="b08a77a4977ca5f4311e2aa56e9ca52d2dc35f5b" translate="yes" xml:space="preserve">
          <source>Guides: Writing Shards</source>
          <target state="translated">가이드 : 샤드 작성</target>
        </trans-unit>
        <trans-unit id="39cca1d5e41ae5e6a70bbebcc97f972c9be94398" translate="yes" xml:space="preserve">
          <source>Gzip</source>
          <target state="translated">Gzip</target>
        </trans-unit>
        <trans-unit id="43b7d8ca37c6574d78b858e7d38f9117b020e923" translate="yes" xml:space="preserve">
          <source>Gzip::Error</source>
          <target state="translated">Gzip::Error</target>
        </trans-unit>
        <trans-unit id="4d980ded7c45eb27b07c81de4fcaca9a69ec8230" translate="yes" xml:space="preserve">
          <source>Gzip::Header</source>
          <target state="translated">Gzip::Header</target>
        </trans-unit>
        <trans-unit id="8ad0b61dffb48aea914a5c199099b0b899158fc6" translate="yes" xml:space="preserve">
          <source>Gzip::Header#comment</source>
          <target state="translated">Gzip::Header#comment</target>
        </trans-unit>
        <trans-unit id="f6ed1a74eb7909e899771e2cd6a4ac5ddfdb527a" translate="yes" xml:space="preserve">
          <source>Gzip::Header#comment=</source>
          <target state="translated">Gzip::Header#comment=</target>
        </trans-unit>
        <trans-unit id="75298549c65c4bfbdf14b76b75cf52d6ecf5a9f1" translate="yes" xml:space="preserve">
          <source>Gzip::Header#extra</source>
          <target state="translated">Gzip::Header#extra</target>
        </trans-unit>
        <trans-unit id="9959a0d8d1de80dee6d53205699ca74e38116784" translate="yes" xml:space="preserve">
          <source>Gzip::Header#extra=</source>
          <target state="translated">Gzip::Header#extra=</target>
        </trans-unit>
        <trans-unit id="86f0c280027b4e656cea54eb4a01d869426f9c3b" translate="yes" xml:space="preserve">
          <source>Gzip::Header#modification_time</source>
          <target state="translated">Gzip::Header#modification_time</target>
        </trans-unit>
        <trans-unit id="487c0af71311e500b5d84bbcfa4a1f321b109f05" translate="yes" xml:space="preserve">
          <source>Gzip::Header#modification_time=</source>
          <target state="translated">Gzip::Header#modification_time=</target>
        </trans-unit>
        <trans-unit id="e115d697e9c7d82646ae982cc917c9a8232e1ee6" translate="yes" xml:space="preserve">
          <source>Gzip::Header#name</source>
          <target state="translated">Gzip::Header#name</target>
        </trans-unit>
        <trans-unit id="f19506678152ad135e1c495041c89b0c73a41321" translate="yes" xml:space="preserve">
          <source>Gzip::Header#name=</source>
          <target state="translated">Gzip::Header#name=</target>
        </trans-unit>
        <trans-unit id="76fa5d7a02c8606808a07b243f8cecfcce2d5219" translate="yes" xml:space="preserve">
          <source>Gzip::Header#os</source>
          <target state="translated">Gzip::Header#os</target>
        </trans-unit>
        <trans-unit id="6cdd368e67d69a48c1b1c6b961e5bb5eed487418" translate="yes" xml:space="preserve">
          <source>Gzip::Header#os=</source>
          <target state="translated">Gzip::Header#os=</target>
        </trans-unit>
        <trans-unit id="38497a3d54759d01ef9b0da7cfd0e67f5081e745" translate="yes" xml:space="preserve">
          <source>Gzip::Reader</source>
          <target state="translated">Gzip::Reader</target>
        </trans-unit>
        <trans-unit id="02f08f7bc9cf2ccd1f4b70687ea49cc0aa2ca555" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#closed?</source>
          <target state="translated">Gzip::Reader#closed?</target>
        </trans-unit>
        <trans-unit id="f5964883f16e674495f323b26fe392d43df6a9da" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#header</source>
          <target state="translated">Gzip::Reader#header</target>
        </trans-unit>
        <trans-unit id="5621dbe5fa324eba47917dcf0a887059191bc2d1" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#sync_close=</source>
          <target state="translated">Gzip::Reader#sync_close=</target>
        </trans-unit>
        <trans-unit id="d8b75b0410e08ec2fd11da77abc1521033f97e33" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#sync_close?</source>
          <target state="translated">Gzip::Reader#sync_close?</target>
        </trans-unit>
        <trans-unit id="5a6d3cf339c59f2c29dbfa981bdec73b1963a950" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_close</source>
          <target state="translated">Gzip::Reader#unbuffered_close</target>
        </trans-unit>
        <trans-unit id="46a185a8e6d78a9cc3e1329e2b6a5e99c2079fe4" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_flush</source>
          <target state="translated">Gzip::Reader#unbuffered_flush</target>
        </trans-unit>
        <trans-unit id="b06a0dfd76b0c38631be96138f30ae162102fa10" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_read</source>
          <target state="translated">Gzip::Reader#unbuffered_read</target>
        </trans-unit>
        <trans-unit id="334d4477fbadb88e627734e17b71028fb0dc507b" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_rewind</source>
          <target state="translated">Gzip::Reader#unbuffered_rewind</target>
        </trans-unit>
        <trans-unit id="78bdc5e0ec1b769e3e5a3afee30485452210ca93" translate="yes" xml:space="preserve">
          <source>Gzip::Reader#unbuffered_write</source>
          <target state="translated">Gzip::Reader#unbuffered_write</target>
        </trans-unit>
        <trans-unit id="11a5655a7bc7f3d7144730788d0093d9e1b7d4b8" translate="yes" xml:space="preserve">
          <source>Gzip::Reader.new</source>
          <target state="translated">Gzip::Reader.new</target>
        </trans-unit>
        <trans-unit id="bcfb44377fb40fb55f769c2a38ad2900baeecd95" translate="yes" xml:space="preserve">
          <source>Gzip::Reader.open</source>
          <target state="translated">Gzip::Reader.open</target>
        </trans-unit>
        <trans-unit id="a569ae9805fd3e2981af9466c81de3ff6314adc0" translate="yes" xml:space="preserve">
          <source>Gzip::Writer</source>
          <target state="translated">Gzip::Writer</target>
        </trans-unit>
        <trans-unit id="853cf2d6a8da5a68df4d843aaca33a93977e8e2b" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#close</source>
          <target state="translated">Gzip::Writer#close</target>
        </trans-unit>
        <trans-unit id="278416be976e5a3ac40905249a35da8aa6feae94" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#closed?</source>
          <target state="translated">Gzip::Writer#closed?</target>
        </trans-unit>
        <trans-unit id="5e2e46734692e082cb3b722f9261fbe90f388597" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#flush</source>
          <target state="translated">Gzip::Writer#flush</target>
        </trans-unit>
        <trans-unit id="e270e7427961a0a7cfb3df69fd9255c57dd165b6" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#header</source>
          <target state="translated">Gzip::Writer#header</target>
        </trans-unit>
        <trans-unit id="ae9b9119f6eeee9f13ed06a7cce808ee2a0d894d" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#read</source>
          <target state="translated">Gzip::Writer#read</target>
        </trans-unit>
        <trans-unit id="7276df99215b83a36b0dcf0ea13a74df730eeeae" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#sync_close=</source>
          <target state="translated">Gzip::Writer#sync_close=</target>
        </trans-unit>
        <trans-unit id="ef05b62ca2096a82ab11c65985c96e3536e7aa77" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#sync_close?</source>
          <target state="translated">Gzip::Writer#sync_close?</target>
        </trans-unit>
        <trans-unit id="b4ed4b242f65e4b1567504f8aa9fe17900b9fc59" translate="yes" xml:space="preserve">
          <source>Gzip::Writer#write</source>
          <target state="translated">Gzip::Writer#write</target>
        </trans-unit>
        <trans-unit id="9f4d47380e82d9fd60534d291c9f4e9f78bcee35" translate="yes" xml:space="preserve">
          <source>Gzip::Writer.new</source>
          <target state="translated">Gzip::Writer.new</target>
        </trans-unit>
        <trans-unit id="1f1436c3fd374298cc4a46e9436290b5c785a7b5" translate="yes" xml:space="preserve">
          <source>Gzip::Writer.open</source>
          <target state="translated">Gzip::Writer.open</target>
        </trans-unit>
        <trans-unit id="d549e0beea6a9d4f727d1681bf983b28128c2aa9" translate="yes" xml:space="preserve">
          <source>HMAC can be used to verify the integrity of a message as well as the authenticity.</source>
          <target state="translated">HMAC를 사용하여 메시지의 무결성과 진위 여부를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="545ab765be89bc6dd54ebd8dec3217867f3fddb0" translate="yes" xml:space="preserve">
          <source>HMAC.digest</source>
          <target state="translated">HMAC.digest</target>
        </trans-unit>
        <trans-unit id="f7a9c9335e2585595e888eb72c1c5ffe10203199" translate="yes" xml:space="preserve">
          <source>HMAC.hexdigest</source>
          <target state="translated">HMAC.hexdigest</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="3a6bbc88c1626bc721ac2e648f079a6a74c449fe" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions</source>
          <target state="translated">HTMLParserOptions</target>
        </trans-unit>
        <trans-unit id="6984b12448eb8041c43c6d4bbcdd6682226e6c4d" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#compact?</source>
          <target state="translated">HTMLParserOptions#compact?</target>
        </trans-unit>
        <trans-unit id="0caace75227e00730fe0e1ade97608e532db5b2e" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#ignore_enc?</source>
          <target state="translated">HTMLParserOptions#ignore_enc?</target>
        </trans-unit>
        <trans-unit id="de14dfda6c2bb8154d45de0c70afbb9cbdd632a3" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#noblanks?</source>
          <target state="translated">HTMLParserOptions#noblanks?</target>
        </trans-unit>
        <trans-unit id="7eb03dcbe3dbc39cfce9b90333c698ee75a7fd98" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#nodefdtd?</source>
          <target state="translated">HTMLParserOptions#nodefdtd?</target>
        </trans-unit>
        <trans-unit id="ea130e078664e0e824cb4eb3b906543dd4b7666e" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#noerror?</source>
          <target state="translated">HTMLParserOptions#noerror?</target>
        </trans-unit>
        <trans-unit id="36dab5279c2d56a653502290dae7fe72d4deb634" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#noimplied?</source>
          <target state="translated">HTMLParserOptions#noimplied?</target>
        </trans-unit>
        <trans-unit id="7c18915ca399188f45ad3d433ab3cc5e11632b70" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#none?</source>
          <target state="translated">HTMLParserOptions#none?</target>
        </trans-unit>
        <trans-unit id="04b8cf50218cbdb03ff4af77e3ea2ad7f6960c50" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#nonet?</source>
          <target state="translated">HTMLParserOptions#nonet?</target>
        </trans-unit>
        <trans-unit id="9a107427ad34d4346f0ac4633bf67818a3ffb577" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#nowarning?</source>
          <target state="translated">HTMLParserOptions#nowarning?</target>
        </trans-unit>
        <trans-unit id="bd40a18890f803792954dbbc515b5a8b9063cbcf" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#pedantic?</source>
          <target state="translated">HTMLParserOptions#pedantic?</target>
        </trans-unit>
        <trans-unit id="dc5bc9af2c9919c87e14c46438a3d95822e64a99" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions#recover?</source>
          <target state="translated">HTMLParserOptions#recover?</target>
        </trans-unit>
        <trans-unit id="6b724866fa0811faeeaafe581052a9f65bbd03ec" translate="yes" xml:space="preserve">
          <source>HTMLParserOptions.default</source>
          <target state="translated">HTMLParserOptions.default</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="18dd8e4843e11485d6e5e349126f0c85a871b12d" translate="yes" xml:space="preserve">
          <source>HTTP Server</source>
          <target state="translated">HTTP 서버</target>
        </trans-unit>
        <trans-unit id="5eed6f34049b3da6943fb18707aee1351156a50d" translate="yes" xml:space="preserve">
          <source>HTTP params builder.</source>
          <target state="translated">HTTP 매개 변수 빌더.</target>
        </trans-unit>
        <trans-unit id="8531bc6e6faa0640b6ec26d96cfca4a62079c31e" translate="yes" xml:space="preserve">
          <source>HTTP::Client</source>
          <target state="translated">HTTP::Client</target>
        </trans-unit>
        <trans-unit id="0ee4e74d1c2518d9c0eb62c5b194147fe03ce2f6" translate="yes" xml:space="preserve">
          <source>HTTP::Client::Response</source>
          <target state="translated">HTTP::Client::Response</target>
        </trans-unit>
        <trans-unit id="ca270fc3f09ad0d489097275ee98a60786b9659b" translate="yes" xml:space="preserve">
          <source>HTTP::CompressHandler</source>
          <target state="translated">HTTP::CompressHandler</target>
        </trans-unit>
        <trans-unit id="30759471096e09d6a3d210d12f56c20d5ef35615" translate="yes" xml:space="preserve">
          <source>HTTP::Cookie</source>
          <target state="translated">HTTP::Cookie</target>
        </trans-unit>
        <trans-unit id="e8b9ab8f14b0a8cc310db20845a7e261262f938b" translate="yes" xml:space="preserve">
          <source>HTTP::Cookies</source>
          <target state="translated">HTTP::Cookies</target>
        </trans-unit>
        <trans-unit id="b9925ba64799bd0a4cbc315e868046af68b04307" translate="yes" xml:space="preserve">
          <source>HTTP::ErrorHandler</source>
          <target state="translated">HTTP::ErrorHandler</target>
        </trans-unit>
        <trans-unit id="c1894ff0f5ddc0b2ac0f924e9d32aacf591d6d0c" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Builder</source>
          <target state="translated">HTTP::FormData::Builder</target>
        </trans-unit>
        <trans-unit id="1cdf7dc2289d761ee91fbc347ac5fe392b520dc9" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Error</source>
          <target state="translated">HTTP::FormData::Error</target>
        </trans-unit>
        <trans-unit id="a0173cfb23ab24dce798a13a21f475b42a3ccf30" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::FileMetadata</source>
          <target state="translated">HTTP::FormData::FileMetadata</target>
        </trans-unit>
        <trans-unit id="b3aa0ae732dc07877744a0406b7074539b2cd306" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Parser</source>
          <target state="translated">HTTP::FormData::Parser</target>
        </trans-unit>
        <trans-unit id="3f82ecd62f625263e7e51fb752225c11717bc51f" translate="yes" xml:space="preserve">
          <source>HTTP::FormData::Part</source>
          <target state="translated">HTTP::FormData::Part</target>
        </trans-unit>
        <trans-unit id="d1aa9c26d3bb500b12b7d65e95bd1abe1bda58c0" translate="yes" xml:space="preserve">
          <source>HTTP::Handler</source>
          <target state="translated">HTTP::Handler</target>
        </trans-unit>
        <trans-unit id="406233beee0713493ee7c9a9930a38e0bbab63b3" translate="yes" xml:space="preserve">
          <source>HTTP::Headers</source>
          <target state="translated">HTTP::Headers</target>
        </trans-unit>
        <trans-unit id="b53cd6f0648d6079df3ba3bc449ff73675331057" translate="yes" xml:space="preserve">
          <source>HTTP::LogHandler</source>
          <target state="translated">HTTP::LogHandler</target>
        </trans-unit>
        <trans-unit id="d39b7d70fe2838835c27f635661b4ab50397dda9" translate="yes" xml:space="preserve">
          <source>HTTP::Params</source>
          <target state="translated">HTTP::Params</target>
        </trans-unit>
        <trans-unit id="04ac4bb7a83f8d3e2943f4d1d7478aa75501311f" translate="yes" xml:space="preserve">
          <source>HTTP::Params::Builder</source>
          <target state="translated">HTTP::Params::Builder</target>
        </trans-unit>
        <trans-unit id="31b12f4beb9f43f4f74a069c54f1528b9a809c38" translate="yes" xml:space="preserve">
          <source>HTTP::Request</source>
          <target state="translated">HTTP::Request</target>
        </trans-unit>
        <trans-unit id="560ab9c8b4f4b5692d0f58bbc85ac044313a38e4" translate="yes" xml:space="preserve">
          <source>HTTP::Server</source>
          <target state="translated">HTTP::Server</target>
        </trans-unit>
        <trans-unit id="eee1eb096bbf676c5df713aa98621fe5d9567128" translate="yes" xml:space="preserve">
          <source>HTTP::Server::ClientError</source>
          <target state="translated">HTTP::Server::ClientError</target>
        </trans-unit>
        <trans-unit id="11b9ab086d84d0de0421a5a306a8ce48fad2204e" translate="yes" xml:space="preserve">
          <source>HTTP::Server::Context</source>
          <target state="translated">HTTP::Server::Context</target>
        </trans-unit>
        <trans-unit id="061bb2f3d554abd68f08ef984cccbccaa14dde3c" translate="yes" xml:space="preserve">
          <source>HTTP::Server::RequestProcessor</source>
          <target state="translated">HTTP::Server::RequestProcessor</target>
        </trans-unit>
        <trans-unit id="50da75a2feb4ae51ec8c94215b024bd2ca6aeedf" translate="yes" xml:space="preserve">
          <source>HTTP::Server::Response</source>
          <target state="translated">HTTP::Server::Response</target>
        </trans-unit>
        <trans-unit id="bc55cabc1f381e1824d630f8e8629caa5b59b8c0" translate="yes" xml:space="preserve">
          <source>HTTP::StaticFileHandler</source>
          <target state="translated">HTTP::StaticFileHandler</target>
        </trans-unit>
        <trans-unit id="19a5213bed2b831aa8abda12c6df9de104ead231" translate="yes" xml:space="preserve">
          <source>HTTP::StaticFileHandler::DirectoryListing</source>
          <target state="translated">HTTP::StaticFileHandler::DirectoryListing</target>
        </trans-unit>
        <trans-unit id="a656ea4ec962e11dbf0a36f3191cd460491fb006" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocket</source>
          <target state="translated">HTTP::WebSocket</target>
        </trans-unit>
        <trans-unit id="0258eb53c4f9d702ded65a51dab081dd28892586" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocket::Protocol::PacketInfo</source>
          <target state="translated">HTTP::WebSocket::Protocol::PacketInfo</target>
        </trans-unit>
        <trans-unit id="ee3ebc5213a7e01c8fd8d0273622f72b42535541" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocket::Protocol::StreamIO</source>
          <target state="translated">HTTP::WebSocket::Protocol::StreamIO</target>
        </trans-unit>
        <trans-unit id="0256d58e4db6b2bbbcd689cc0761f824affd4d46" translate="yes" xml:space="preserve">
          <source>HTTP::WebSocketHandler</source>
          <target state="translated">HTTP::WebSocketHandler</target>
        </trans-unit>
        <trans-unit id="be0212bf33313087973171061ef96d564becfb55" translate="yes" xml:space="preserve">
          <source>Handler</source>
          <target state="translated">Handler</target>
        </trans-unit>
        <trans-unit id="90b9ffac2daa6fce2f90baec485eefcb8d192089" translate="yes" xml:space="preserve">
          <source>Handler chain</source>
          <target state="translated">핸들러 체인</target>
        </trans-unit>
        <trans-unit id="c1d8bf2d107568a22ae86f01decc355206ccc115" translate="yes" xml:space="preserve">
          <source>Handler#call</source>
          <target state="translated">Handler#call</target>
        </trans-unit>
        <trans-unit id="e6290d2c64c7e9d6f0be374dc007e496d78bf20a" translate="yes" xml:space="preserve">
          <source>Handler#call_next</source>
          <target state="translated">Handler#call_next</target>
        </trans-unit>
        <trans-unit id="f79baed716280a95ca7c626de69992fccda52d68" translate="yes" xml:space="preserve">
          <source>Handler#next</source>
          <target state="translated">Handler#next</target>
        </trans-unit>
        <trans-unit id="91050df6cafe95ae3d76a6675dd8aeafa1bcc695" translate="yes" xml:space="preserve">
          <source>Handler#next=</source>
          <target state="translated">Handler#next=</target>
        </trans-unit>
        <trans-unit id="f72e16cc6c896cea3f15d11e6764ba916bacb2d6" translate="yes" xml:space="preserve">
          <source>Handler::HandlerProc</source>
          <target state="translated">Handler::HandlerProc</target>
        </trans-unit>
        <trans-unit id="ba2129f9ab38c4e790bb059ad0b666a2058d8a9c" translate="yes" xml:space="preserve">
          <source>Handles unhandled exceptions</source>
          <target state="translated">처리되지 않은 예외 처리</target>
        </trans-unit>
        <trans-unit id="baabe04c8ddddf592485f739f6defd8c0e0d9cd7" translate="yes" xml:space="preserve">
          <source>Has no effect if &lt;em&gt;count&lt;/em&gt; is zero or negative.</source>
          <target state="translated">&lt;em&gt;개수&lt;/em&gt; 가 0이거나 음수 이면 효과가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="9bbaa2995b04bedc7df9c6ff56afa97e3875c96f" translate="yes" xml:space="preserve">
          <source>Has the &lt;code&gt;&lt;a href=&quot;encodingoptions#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;encodingoptions#invalid:Symbol?-instance-method&quot;&gt;#invalid&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">가지고 &lt;code&gt;&lt;a href=&quot;encodingoptions#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;encodingoptions#invalid:Symbol?-instance-method&quot;&gt;#invalid&lt;/a&gt;&lt;/code&gt; 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="93b801fba2111be8ccbb089d9214c250693dc035" translate="yes" xml:space="preserve">
          <source>Hash#==</source>
          <target state="translated">Hash#==</target>
        </trans-unit>
        <trans-unit id="5a6fa79771123268744228cdf4258ff84a1eda13" translate="yes" xml:space="preserve">
          <source>Hash#[]</source>
          <target state="translated">Hash#[]</target>
        </trans-unit>
        <trans-unit id="07e45ae0598f7495619d79e68e804784f6d30f3a" translate="yes" xml:space="preserve">
          <source>Hash#[]=</source>
          <target state="translated">Hash#[]=</target>
        </trans-unit>
        <trans-unit id="036db11a100433b880eb2758037effaea2780f3d" translate="yes" xml:space="preserve">
          <source>Hash#[]?</source>
          <target state="translated">Hash#[]?</target>
        </trans-unit>
        <trans-unit id="f29010467d5779e1b6e8494c4682c7db1d08fa68" translate="yes" xml:space="preserve">
          <source>Hash#dig</source>
          <target state="translated">Hash#dig</target>
        </trans-unit>
        <trans-unit id="594e74d465ef6da116668c39440bd56ecfdba7a5" translate="yes" xml:space="preserve">
          <source>Hash#dig?</source>
          <target state="translated">Hash#dig?</target>
        </trans-unit>
        <trans-unit id="7c9d9f11e2fbd80554c648413862326e1455f1b4" translate="yes" xml:space="preserve">
          <source>Hash#dup</source>
          <target state="translated">Hash#dup</target>
        </trans-unit>
        <trans-unit id="54bf770bb146a0c8a179e773a8b419949c6166f7" translate="yes" xml:space="preserve">
          <source>Hash#each</source>
          <target state="translated">Hash#each</target>
        </trans-unit>
        <trans-unit id="da40684411ccc4d3dd825051039a0b200ea8f38c" translate="yes" xml:space="preserve">
          <source>Hash#hash</source>
          <target state="translated">Hash#hash</target>
        </trans-unit>
        <trans-unit id="2bbad7df40418a3d06b45f3ac307cb80d6261b1c" translate="yes" xml:space="preserve">
          <source>Hash#keys</source>
          <target state="translated">Hash#keys</target>
        </trans-unit>
        <trans-unit id="fd6b8d91f6f3f5ef393e449b77f8a570c370f97f" translate="yes" xml:space="preserve">
          <source>Hash#put</source>
          <target state="translated">Hash#put</target>
        </trans-unit>
        <trans-unit id="c8d8e494db4d6a06b525e3c89aac986971bd6af1" translate="yes" xml:space="preserve">
          <source>Hash#size</source>
          <target state="translated">Hash#size</target>
        </trans-unit>
        <trans-unit id="557a3f8d83a74e0888fd0979371510d431525e69" translate="yes" xml:space="preserve">
          <source>Hash#to_a</source>
          <target state="translated">Hash#to_a</target>
        </trans-unit>
        <trans-unit id="5db4a70e3cc2a56a8fac3d5b5850832d6a6a9765" translate="yes" xml:space="preserve">
          <source>Hash#to_h</source>
          <target state="translated">Hash#to_h</target>
        </trans-unit>
        <trans-unit id="9801139d746d454c9df9d3a74220c377e4405674" translate="yes" xml:space="preserve">
          <source>Hash#to_s</source>
          <target state="translated">Hash#to_s</target>
        </trans-unit>
        <trans-unit id="908a362ce333128051a5476739681f064e12584a" translate="yes" xml:space="preserve">
          <source>Hash(K, V)</source>
          <target state="translated">해시 (K, V)</target>
        </trans-unit>
        <trans-unit id="93d86cc5155b6ceed71fbe5fed0cd2e578a7cf81" translate="yes" xml:space="preserve">
          <source>Hash-like</source>
          <target state="translated">Hash-like</target>
        </trans-unit>
        <trans-unit id="2f53ad4c1c9699116021dc3b0f09cdf2d63e1ed0" translate="yes" xml:space="preserve">
          <source>Hash-like Type Literal</source>
          <target state="translated">해시와 같은 유형 리터럴</target>
        </trans-unit>
        <trans-unit id="8b5cbb097e856fbd170dca25c3cd05b141e1779a" translate="yes" xml:space="preserve">
          <source>Hash.new</source>
          <target state="translated">Hash.new</target>
        </trans-unit>
        <trans-unit id="c60d8d19295931fd0a096bc2089d59d0fff65a0b" translate="yes" xml:space="preserve">
          <source>Hash.zip</source>
          <target state="translated">Hash.zip</target>
        </trans-unit>
        <trans-unit id="907770c8afbe58a25a664731fd0f385884692d56" translate="yes" xml:space="preserve">
          <source>Hash::Entry</source>
          <target state="translated">Hash::Entry</target>
        </trans-unit>
        <trans-unit id="34eff1db7ac1a03ace84a7e85fd4aa4c847be375" translate="yes" xml:space="preserve">
          <source>Hash::Entry(K, V)</source>
          <target state="translated">해시 :: 항목 (K, V)</target>
        </trans-unit>
        <trans-unit id="4f419ccc82fa6879f689852e64f87b9ac88c0b82" translate="yes" xml:space="preserve">
          <source>HashValueConverter</source>
          <target state="translated">HashValueConverter</target>
        </trans-unit>
        <trans-unit id="767e2ee46ba84c76844b8ed7bd652adeafb2eb70" translate="yes" xml:space="preserve">
          <source>HashValueConverter.from_json</source>
          <target state="translated">HashValueConverter.from_json</target>
        </trans-unit>
        <trans-unit id="b2ba5b1eb59e6af9e14d98384470e9215108f24a" translate="yes" xml:space="preserve">
          <source>HashValueConverter.to_json</source>
          <target state="translated">HashValueConverter.to_json</target>
        </trans-unit>
        <trans-unit id="e27a3b12c1ed9c1c65fe771c32fc4d39d1e3e1c3" translate="yes" xml:space="preserve">
          <source>Hashes a password.</source>
          <target state="translated">비밀번호를 해시합니다.</target>
        </trans-unit>
        <trans-unit id="0c57a34d22aec2ff1dd787b0e9a09a214ef2e057" translate="yes" xml:space="preserve">
          <source>Hashes are typically created with a hash literal denoted by curly braces (&lt;code&gt;{ }&lt;/code&gt;) enclosing a list of pairs using &lt;code&gt;=&amp;gt;&lt;/code&gt; as delimiter between key and value and separated by commas &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">해시는 보통 중괄호 해시 문자 표시와 함께 생성된다 ( &lt;code&gt;{ }&lt;/code&gt; )를 사용하여 쌍 목록을 둘러싸 &lt;code&gt;=&amp;gt;&lt;/code&gt; 키 값 쉼표로 구분 사이의 분리와 같은 &lt;code&gt;,&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c34e6e8b8e8f83b9030ee3a86cae16c3f14d6f4e" translate="yes" xml:space="preserve">
          <source>Hashes data incrementally.</source>
          <target state="translated">Hashes data incrementally.</target>
        </trans-unit>
        <trans-unit id="39a3bb1667d623182b5f5222fba148ee40ddfe7c" translate="yes" xml:space="preserve">
          <source>Have a syntax similar to Ruby (but compatibility with it is not a goal)</source>
          <target state="translated">Ruby와 비슷한 구문을 사용하십시오 (그러나 호환성은 목표가 아닙니다)</target>
        </trans-unit>
        <trans-unit id="a1d3b8f4548ffb54c5e442e8b57f91b8eebb5176" translate="yes" xml:space="preserve">
          <source>Have a syntax similar to Ruby (but compatibility with it is not a goal).</source>
          <target state="translated">Ruby와 비슷한 구문을 사용하십시오 (그러나 호환성은 목표가 아닙니다).</target>
        </trans-unit>
        <trans-unit id="b7e62b981be984047553e73ff51046494db49526" translate="yes" xml:space="preserve">
          <source>Have an annotation that when applied to an instance variable determines if that instance variable should be serialized, or with what key. Crystal's &lt;a href=&quot;https://crystal-lang.org/api/JSON/Serializable.html&quot;&gt;&lt;code&gt;JSON::Serializable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://crystal-lang.org/api/YAML/Serializable.html&quot;&gt;&lt;code&gt;YAML::Serializable&lt;/code&gt;&lt;/a&gt; are examples of this.</source>
          <target state="translated">인스턴스 변수에 적용될 때 해당 인스턴스 변수를 직렬화해야하는지 또는 어떤 키로 결정해야하는 주석이 있습니다. Crystal의 &lt;a href=&quot;https://crystal-lang.org/api/JSON/Serializable.html&quot;&gt; &lt;code&gt;JSON::Serializable&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://crystal-lang.org/api/YAML/Serializable.html&quot;&gt; &lt;code&gt;YAML::Serializable&lt;/code&gt; &lt;/a&gt; 이 그 예입니다.</target>
        </trans-unit>
        <trans-unit id="937c9c8ff098bf3e8bc525476385ab90fa10c2c1" translate="yes" xml:space="preserve">
          <source>Have compile-time evaluation and generation of code, to avoid boilerplate code.</source>
          <target state="translated">상용구 코드를 피하려면 컴파일 타임 평가 및 코드 생성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a06d5405179f1da6e7350ced79d305285aeb6ac9" translate="yes" xml:space="preserve">
          <source>Have no fear using blocks for readability or code reuse, it won't affect the resulting executable performance.</source>
          <target state="translated">가독성이나 코드 재사용을 위해 블록을 사용하는 것을 두려워하지 마십시오. 실행 가능한 성능에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31341c6f0c7af677ffb8fadcb92038e8ac2b6193" translate="yes" xml:space="preserve">
          <source>Header</source>
          <target state="translated">Header</target>
        </trans-unit>
        <trans-unit id="051a9db7d2a9bef7cf131e42300214bd0da05d76" translate="yes" xml:space="preserve">
          <source>Header#comment</source>
          <target state="translated">Header#comment</target>
        </trans-unit>
        <trans-unit id="761e8f275b50c6471992b57e6b738d995bdc9e71" translate="yes" xml:space="preserve">
          <source>Header#comment=</source>
          <target state="translated">Header#comment=</target>
        </trans-unit>
        <trans-unit id="0c513bd0cda343eb72f2c8d0697bfa82896bcbb3" translate="yes" xml:space="preserve">
          <source>Header#extra</source>
          <target state="translated">Header#extra</target>
        </trans-unit>
        <trans-unit id="437a09e93729a13635a502dd95e488af639499f5" translate="yes" xml:space="preserve">
          <source>Header#extra=</source>
          <target state="translated">Header#extra=</target>
        </trans-unit>
        <trans-unit id="78aec10d26ea1ebfcbb81c8d28a6d884c184a872" translate="yes" xml:space="preserve">
          <source>Header#modification_time</source>
          <target state="translated">Header#modification_time</target>
        </trans-unit>
        <trans-unit id="bce0beea51e50581648a33e0129cd477186aea1c" translate="yes" xml:space="preserve">
          <source>Header#modification_time=</source>
          <target state="translated">Header#modification_time=</target>
        </trans-unit>
        <trans-unit id="46232efc88b82e2745dec7d409f098e5a829c9c5" translate="yes" xml:space="preserve">
          <source>Header#name</source>
          <target state="translated">Header#name</target>
        </trans-unit>
        <trans-unit id="e765b80ab5e7d9326ca72f2c969dedfd5ac07331" translate="yes" xml:space="preserve">
          <source>Header#name=</source>
          <target state="translated">Header#name=</target>
        </trans-unit>
        <trans-unit id="4229f1f1fc31b9e8f8b386b34376f2d55e981c7e" translate="yes" xml:space="preserve">
          <source>Header#os</source>
          <target state="translated">Header#os</target>
        </trans-unit>
        <trans-unit id="9d5e463f06c09e73c9ec498f2f0d9efb1f4e5884" translate="yes" xml:space="preserve">
          <source>Header#os=</source>
          <target state="translated">Header#os=</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="5dbc8279476f56b16f623ae1e928c6655bbc0efc" translate="yes" xml:space="preserve">
          <source>Headers method_missing</source>
          <target state="translated">헤더 method_missing</target>
        </trans-unit>
        <trans-unit id="3bdd201b6d5a378ed85ee5586e400d02a31b7b27" translate="yes" xml:space="preserve">
          <source>Headers#==</source>
          <target state="translated">Headers#==</target>
        </trans-unit>
        <trans-unit id="e2454e1a2adec4c4abce57e9d316c30599cefcc1" translate="yes" xml:space="preserve">
          <source>Headers#[]</source>
          <target state="translated">Headers#[]</target>
        </trans-unit>
        <trans-unit id="dcc8344bc32ccfbf4489f0f0432cfe514a247c70" translate="yes" xml:space="preserve">
          <source>Headers#[]=</source>
          <target state="translated">Headers#[]=</target>
        </trans-unit>
        <trans-unit id="21b3fc0102338474d9ab6e45175c197f156e953a" translate="yes" xml:space="preserve">
          <source>Headers#[]?</source>
          <target state="translated">Headers#[]?</target>
        </trans-unit>
        <trans-unit id="3c209b759fee993bc05201f94b3572e5c24afef3" translate="yes" xml:space="preserve">
          <source>Headers#add</source>
          <target state="translated">Headers#add</target>
        </trans-unit>
        <trans-unit id="4fa736ca236bcba03df9382e7c3bc39bf507f8ef" translate="yes" xml:space="preserve">
          <source>Headers#add?</source>
          <target state="translated">Headers#add?</target>
        </trans-unit>
        <trans-unit id="8e9e7c829c52d85e2d0a6fad6c077a234ecadcea" translate="yes" xml:space="preserve">
          <source>Headers#clone</source>
          <target state="translated">Headers#clone</target>
        </trans-unit>
        <trans-unit id="919f05fab2cdc2d9ac3fd125dd4ee077fc40c0b6" translate="yes" xml:space="preserve">
          <source>Headers#delete</source>
          <target state="translated">Headers#delete</target>
        </trans-unit>
        <trans-unit id="5c0851b57a17e97a14fe58383fd71fc9150aa285" translate="yes" xml:space="preserve">
          <source>Headers#dup</source>
          <target state="translated">Headers#dup</target>
        </trans-unit>
        <trans-unit id="a7abd60e1c7bfb5f8d1f9ca3f212807f515ffc9e" translate="yes" xml:space="preserve">
          <source>Headers#each</source>
          <target state="translated">Headers#each</target>
        </trans-unit>
        <trans-unit id="132fe3906deb7ad5b136a2d55e6ee01c91b554ce" translate="yes" xml:space="preserve">
          <source>Headers#empty?</source>
          <target state="translated">Headers#empty?</target>
        </trans-unit>
        <trans-unit id="d91fa6c0b375331417a67e8550ab974559707c4f" translate="yes" xml:space="preserve">
          <source>Headers#fetch</source>
          <target state="translated">Headers#fetch</target>
        </trans-unit>
        <trans-unit id="5a723ae21779e04a99a6f50d938c0347fa187b3b" translate="yes" xml:space="preserve">
          <source>Headers#get</source>
          <target state="translated">Headers#get</target>
        </trans-unit>
        <trans-unit id="202678bd81460ced28e15771d51c30dd78625e71" translate="yes" xml:space="preserve">
          <source>Headers#get?</source>
          <target state="translated">Headers#get?</target>
        </trans-unit>
        <trans-unit id="800d94dc63b20b7f29861e3a0160a06471f009b1" translate="yes" xml:space="preserve">
          <source>Headers#has_key?</source>
          <target state="translated">Headers#has_key?</target>
        </trans-unit>
        <trans-unit id="2b3eca4da4d17c1ff75227db3a4d9140db56ddb5" translate="yes" xml:space="preserve">
          <source>Headers#includes_word?</source>
          <target state="translated">Headers#includes_word?</target>
        </trans-unit>
        <trans-unit id="09106d17dccce21c0fcc26f3e0828954e7b1e43c" translate="yes" xml:space="preserve">
          <source>Headers#inspect</source>
          <target state="translated">Headers#inspect</target>
        </trans-unit>
        <trans-unit id="4500103e68ac1af6e421eb085d7f84a10430303e" translate="yes" xml:space="preserve">
          <source>Headers#merge!</source>
          <target state="translated">Headers#merge!</target>
        </trans-unit>
        <trans-unit id="395e373b743f49fe17bafc3e749b05c15b1248e8" translate="yes" xml:space="preserve">
          <source>Headers#pretty_print</source>
          <target state="translated">Headers#pretty_print</target>
        </trans-unit>
        <trans-unit id="5c9142190a4b6693bd9bb99c976f4ea1a1faef20" translate="yes" xml:space="preserve">
          <source>Headers#same?</source>
          <target state="translated">Headers#same?</target>
        </trans-unit>
        <trans-unit id="711c3766bd68d25186e6c869be56117a72266c78" translate="yes" xml:space="preserve">
          <source>Headers#to_s</source>
          <target state="translated">Headers#to_s</target>
        </trans-unit>
        <trans-unit id="e5a411595dbd9bb72b3a4ce6a62ee0834c3d00a1" translate="yes" xml:space="preserve">
          <source>Headers#valid_value?</source>
          <target state="translated">Headers#valid_value?</target>
        </trans-unit>
        <trans-unit id="14a8bd037ef7b52bc95e83523180fe03a50f36bf" translate="yes" xml:space="preserve">
          <source>Headers.new</source>
          <target state="translated">Headers.new</target>
        </trans-unit>
        <trans-unit id="eefe9851770f512e80ee651b7755471b0cd6db44" translate="yes" xml:space="preserve">
          <source>Hello Crystal</source>
          <target state="translated">Hello Crystal</target>
        </trans-unit>
        <trans-unit id="2ef7bde608ce5404e97d5f042f95f89f1c232871" translate="yes" xml:space="preserve">
          <source>Hello World!</source>
          <target state="translated">안녕하세요 세계!</target>
        </trans-unit>
        <trans-unit id="07c83249c9dbef3c97618592cb70882535487498" translate="yes" xml:space="preserve">
          <source>Helper DSL module for emitting log entries with data.</source>
          <target state="translated">Helper DSL module for emitting log entries with data.</target>
        </trans-unit>
        <trans-unit id="4df1a9b69e1c2b1ae743303fdd119f9fec23b1b2" translate="yes" xml:space="preserve">
          <source>Helper method to use colorize with &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Helper method to use colorize with &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8d02feabc0878176f8623dd2a0a45bcff2814aa" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; contains the pattern &lt;code&gt;/hay/&lt;/code&gt;, so it matches:</source>
          <target state="translated">여기서 &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; 에는 &lt;code&gt;/hay/&lt;/code&gt; 패턴이 포함 되므로 다음과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="64b11dd9b570744de1c495e829ead08fa8ac4026" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; does not contain the pattern &lt;code&gt;/needle/&lt;/code&gt;, so it doesn't match:</source>
          <target state="translated">여기서 &lt;code&gt;&quot;haystack&quot;&lt;/code&gt; 은 &lt;code&gt;/needle/&lt;/code&gt; 패턴을 포함 하지 않으므로 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dc4803158de8582311848d52873f94aee5800f48" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;channel.send&lt;/code&gt; is executed first, but since there's no one waiting for a value (yet), execution continues in other fibers. The second fiber is executed, there's a value on the channel, it's obtained, and execution continues, first with the first fiber, then with the main fiber, because &lt;code&gt;Fiber.yield&lt;/code&gt; puts a fiber at the end of the execution queue.</source>
          <target state="translated">여기서 &lt;code&gt;channel.send&lt;/code&gt; 가 먼저 실행되지만 값 (아직)을 기다리는 사람이 없으므로 다른 광섬유에서 실행이 계속됩니다. &lt;code&gt;Fiber.yield&lt;/code&gt; 는 실행 큐의 끝에 파이버를 배치 하기 때문에 두 번째 파이버가 실행되고 채널에 값이 있고 획득되며 첫 번째 파이버부터 첫 번째 파이버부터 주 파이버로 실행이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="3cfdf1d2ea720c414da50bb4c701cb11852af2c4" translate="yes" xml:space="preserve">
          <source>Here is a first example installing the &lt;code&gt;libsqlite3&lt;/code&gt; development package using the &lt;a href=&quot;https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon&quot;&gt;APT addon&lt;/a&gt;:</source>
          <target state="translated">Here is a first example installing the &lt;code&gt;libsqlite3&lt;/code&gt; development package using the &lt;a href=&quot;https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon&quot;&gt;APT addon&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="6fff5ed1ca4cdfd2d06699f9d3524d1264939a54" translate="yes" xml:space="preserve">
          <source>Here is an example installing the &lt;code&gt;libsqlite3&lt;/code&gt; development package:</source>
          <target state="translated">Here is an example installing the &lt;code&gt;libsqlite3&lt;/code&gt; development package:</target>
        </trans-unit>
        <trans-unit id="927f883723bbe204a16d65975684ef91abcdc775" translate="yes" xml:space="preserve">
          <source>Here is an example of such an invalid macro:</source>
          <target state="translated">잘못된 매크로의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="791d940bf7e69e4aabd0f851e5fe73d3822b0f3f" translate="yes" xml:space="preserve">
          <source>Here is the example:</source>
          <target state="translated">Here is the example:</target>
        </trans-unit>
        <trans-unit id="c1d1177271d462a31930b23608f48344767667fa" translate="yes" xml:space="preserve">
          <source>Here is the new test file for testing against the database:</source>
          <target state="translated">Here is the new test file for testing against the database:</target>
        </trans-unit>
        <trans-unit id="ca704d600b4c9241812692970cb74dedb269ff38" translate="yes" xml:space="preserve">
          <source>Here rule 5 (argument's default value) is used, and because the constant resolves to an integer literal, &lt;code&gt;@lucky_number&lt;/code&gt; is inferred to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">여기서 규칙 5 (인수의 기본값)가 사용되며 상수가 정수 리터럴로 해석되므로 &lt;code&gt;@lucky_number&lt;/code&gt; 는 &lt;code&gt;Int32&lt;/code&gt; 로 추론됩니다 .</target>
        </trans-unit>
        <trans-unit id="ef1974c9e92341e92517df9a75b8cb863488dc07" translate="yes" xml:space="preserve">
          <source>Here rule 5 (default parameter value) is used, and because the constant resolves to an integer literal, &lt;code&gt;@lucky_number&lt;/code&gt; is inferred to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b25f33ee1217fe67cd933566c920032175c409f" translate="yes" xml:space="preserve">
          <source>Here we are sending literal values, but the spawned fiber might compute this value by, for example, reading a file, or getting it from a socket. When this fiber will have to wait for I/O, other fibers will be able to continue executing code until I/O is ready, and finally when the value is ready and sent through the channel, the main fiber will receive it. For example:</source>
          <target state="translated">여기서는 리터럴 값을 보내지 만 생성 된 광섬유는 예를 들어 파일을 읽거나 소켓에서 가져 와서이 값을 계산할 수 있습니다. 이 파이버가 I / O를 기다려야 할 때 다른 파이버는 I / O가 준비 될 때까지 코드를 계속 실행할 수 있으며 마지막으로 값이 준비되어 채널을 통해 전송되면 주 파이버가이를 수신합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c40193c279e2f7ec9bd68f81f2e6a8a7ce17f69e" translate="yes" xml:space="preserve">
          <source>Here we have two fibers: one reads from a socket and the other does a &lt;code&gt;sleep&lt;/code&gt;. When the first fiber reaches the &lt;code&gt;socket.gets&lt;/code&gt; line, it gets suspended, the Event Loop is told to continue executing this fiber when there's data in the socket, and the program continues with the second fiber. This fiber wants to sleep for 5 seconds, so the Event Loop is told to continue with this fiber in 5 seconds. If there aren't other fibers to execute, the Event Loop will wait until either of these events happen, without consuming CPU time.</source>
          <target state="translated">여기에는 두 개의 광섬유가 있습니다. 하나는 소켓에서 읽고 다른 하나는 &lt;code&gt;sleep&lt;/code&gt; 합니다. 첫 번째 파이버가 &lt;code&gt;socket.gets&lt;/code&gt; 행에 도달하면 일시 중단되고 소켓에 데이터가있을 때 이벤트 루프가이 파이버를 계속 실행하라는 메시지가 표시되고 프로그램은 두 번째 파이버로 계속됩니다. 이 파이버는 5 초 동안 휴면 상태를 유지하기 위해 5 초 후에이 루프를 계속 진행하도록 Event Loop에 지시됩니다. 실행할 다른 파이버가없는 경우 이벤트 루프는 CPU 시간을 소비하지 않고 이러한 이벤트 중 하나가 발생할 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="d866e046ae404ea87d8cf2035ce4163fa0ecec1e" translate="yes" xml:space="preserve">
          <source>Here we have two more examples to continue our first steps in Crystal:</source>
          <target state="translated">Here we have two more examples to continue our first steps in Crystal:</target>
        </trans-unit>
        <trans-unit id="778d70bb36e337f938dd2c5941061e5107080462" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the final result, with invalid/missing options handling, plus other new options:</source>
          <target state="translated">Here&amp;rsquo;s the final result, with invalid/missing options handling, plus other new options:</target>
        </trans-unit>
        <trans-unit id="8064817ba593748e0cd1b51ba80518f2cf685dc3" translate="yes" xml:space="preserve">
          <source>Here's the list of items we want to achieve:</source>
          <target state="translated">Here's the list of items we want to achieve:</target>
        </trans-unit>
        <trans-unit id="a273a1e65183e7e2253338ddbf57d97e85ad1de6" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;person&lt;/code&gt; is an instance of &lt;code&gt;Person&lt;/code&gt;.</source>
          <target state="translated">여기에서 &lt;code&gt;person&lt;/code&gt; 은 &lt;code&gt;Person&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="8fa3cfb029c24c2b9ed74872be0c73919fd60a4f" translate="yes" xml:space="preserve">
          <source>Here, the right-hand side of the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; expression is also guaranteed to have &lt;code&gt;a&lt;/code&gt; as not &lt;code&gt;Nil&lt;/code&gt;.</source>
          <target state="translated">여기서, 오른쪽의 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 의 발현은이 보장 &lt;code&gt;a&lt;/code&gt; 하지 &lt;code&gt;Nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0576dafa3a6d78002d0ec77bd8c59311af63412a" translate="yes" xml:space="preserve">
          <source>Heredoc</source>
          <target state="translated">Heredoc</target>
        </trans-unit>
        <trans-unit id="7c55511090f1089e293a93e8d898f24f687884b5" translate="yes" xml:space="preserve">
          <source>Hexadecimal number conversion</source>
          <target state="translated">16 진수 변환</target>
        </trans-unit>
        <trans-unit id="6545a66293ad097bd78a4eb79c30cc399e147b98" translate="yes" xml:space="preserve">
          <source>Hexadecimal number conversion:</source>
          <target state="translated">Hexadecimal number conversion:</target>
        </trans-unit>
        <trans-unit id="603a8106c52c2dbf7c9614f1ce6e95d9d79a5eb7" translate="yes" xml:space="preserve">
          <source>Hexadecimal numbers start with &lt;code&gt;0x&lt;/code&gt;:</source>
          <target state="translated">16 진 숫자는 &lt;code&gt;0x&lt;/code&gt; 로 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="fe6afcbcf1e0df0d7250ec4a085cd52d5d029c9d" translate="yes" xml:space="preserve">
          <source>Hexdump</source>
          <target state="translated">Hexdump</target>
        </trans-unit>
        <trans-unit id="da5a74a209d870c306d59b65492d0a8b9435247e" translate="yes" xml:space="preserve">
          <source>Hexdump#close</source>
          <target state="translated">Hexdump#close</target>
        </trans-unit>
        <trans-unit id="7b85a0aa8132959bc660e70693c40cd50ef0f62c" translate="yes" xml:space="preserve">
          <source>Hexdump#closed?</source>
          <target state="translated">Hexdump#closed?</target>
        </trans-unit>
        <trans-unit id="219d5a7b7b51877ef091c550c9a10cef983b4c92" translate="yes" xml:space="preserve">
          <source>Hexdump#flush</source>
          <target state="translated">Hexdump#flush</target>
        </trans-unit>
        <trans-unit id="44705432250670e992222330972a059724cf8c9b" translate="yes" xml:space="preserve">
          <source>Hexdump#peek</source>
          <target state="translated">Hexdump#peek</target>
        </trans-unit>
        <trans-unit id="bf0f934e385b16308966ecd9d36b6beb162de9fd" translate="yes" xml:space="preserve">
          <source>Hexdump#pos</source>
          <target state="translated">Hexdump#pos</target>
        </trans-unit>
        <trans-unit id="c28e283aefb9d2ad3e1f9a7f7dd2f09cd09f3f46" translate="yes" xml:space="preserve">
          <source>Hexdump#pos=</source>
          <target state="translated">Hexdump#pos=</target>
        </trans-unit>
        <trans-unit id="1f404e8cd923acc800891b1495436bdf6f9b3705" translate="yes" xml:space="preserve">
          <source>Hexdump#read</source>
          <target state="translated">Hexdump#read</target>
        </trans-unit>
        <trans-unit id="4c3dcb1581f3910e185b3d9c0e2afe7f6ed4efc7" translate="yes" xml:space="preserve">
          <source>Hexdump#seek</source>
          <target state="translated">Hexdump#seek</target>
        </trans-unit>
        <trans-unit id="c7672dcab8125622f6b85a1d54c6268303359642" translate="yes" xml:space="preserve">
          <source>Hexdump#tty?</source>
          <target state="translated">Hexdump#tty?</target>
        </trans-unit>
        <trans-unit id="fbffdd9db25916feac91bd53be09ba993d403976" translate="yes" xml:space="preserve">
          <source>Hexdump#write</source>
          <target state="translated">Hexdump#write</target>
        </trans-unit>
        <trans-unit id="d7cc49c0e4bec681b0f067cceaef085f6075e003" translate="yes" xml:space="preserve">
          <source>Hexdump.new</source>
          <target state="translated">Hexdump.new</target>
        </trans-unit>
        <trans-unit id="f573ad3ac7fc86286d023b12c5fea40870af7bef" translate="yes" xml:space="preserve">
          <source>Hi and welcome to Crystal's Reference Book!</source>
          <target state="translated">Hi and welcome to Crystal's Reference Book!</target>
        </trans-unit>
        <trans-unit id="46a30dfff438dd7f0069657801938d02fdc101c4" translate="yes" xml:space="preserve">
          <source>Holds a binary representation of an IP address, either translated from a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, or directly received from an opened connection (e.g. &lt;code&gt;Socket#local_address&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 에서 변환 되거나 열린 연결에서 직접 수신 된 IP 주소의 이진 표현을 보유 합니다 (예 : &lt;code&gt;Socket#local_address&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb0e27d131b0fb1bb1f1bd7eab4602c60be2e15d" translate="yes" xml:space="preserve">
          <source>Holds the local path of an UNIX address, usually coming from an opened connection (e.g. &lt;code&gt;Socket#local_address&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">일반적으로 열린 연결에서 오는 UNIX 주소의 로컬 경로를 유지합니다 (예 : &lt;code&gt;Socket#local_address&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../socket#receive(max_message_size=512):Tuple(String,Address)-instance-method&quot;&gt;Socket#receive&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="eaff8022f26233772f4537f350a881de3ba45171" translate="yes" xml:space="preserve">
          <source>Hooks are defined here due to load order problems.</source>
          <target state="translated">로드 순서 문제로 인해 후크가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a5a7e131a5cb8762553101bda765297974113fa2" translate="yes" xml:space="preserve">
          <source>Host is down</source>
          <target state="translated">호스트가 다운되었습니다</target>
        </trans-unit>
        <trans-unit id="8766cde612147dd786d60bb7dcf31734d856c751" translate="yes" xml:space="preserve">
          <source>Hosting</source>
          <target state="translated">Hosting</target>
        </trans-unit>
        <trans-unit id="2df682f4b02b09385ba149d6befba013d6d9e4fe" translate="yes" xml:space="preserve">
          <source>Hosting on GitHub</source>
          <target state="translated">Hosting on GitHub</target>
        </trans-unit>
        <trans-unit id="8642f07780421b0d3170c056f1f8c7cbd916dc28" translate="yes" xml:space="preserve">
          <source>Hosting on GitLab</source>
          <target state="translated">Hosting on GitLab</target>
        </trans-unit>
        <trans-unit id="9e77be24e1d9f9a6429fa6d7b1acd7b51eaccf82" translate="yes" xml:space="preserve">
          <source>Hosting your &lt;code&gt;docs&lt;/code&gt; on GitHub-Pages</source>
          <target state="translated">GitHub-Pages에서 &lt;code&gt;docs&lt;/code&gt; 호스팅</target>
        </trans-unit>
        <trans-unit id="1eb744033fe4560751f29c39db95a0df2b9d2fee" translate="yes" xml:space="preserve">
          <source>How call arguments are matched to method arguments</source>
          <target state="translated">호출 인수가 메소드 인수와 일치하는 방법</target>
        </trans-unit>
        <trans-unit id="068f8597b4a7f2f076c15dda8c8469c45585a147" translate="yes" xml:space="preserve">
          <source>How call arguments are matched to method parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f4b754bd1c140f2cc2c9137f70310a8ea91174" translate="yes" xml:space="preserve">
          <source>How do we use a connection from the &lt;code&gt;database&lt;/code&gt; object? For this, we could ask the database for a connection using the method &lt;code&gt;Database#checkout&lt;/code&gt;. But, doing this will require to explicitly return the connection to the pool using &lt;code&gt;Connection#release&lt;/code&gt;. Here is an example:</source>
          <target state="translated">How do we use a connection from the &lt;code&gt;database&lt;/code&gt; object? For this, we could ask the database for a connection using the method &lt;code&gt;Database#checkout&lt;/code&gt; . But, doing this will require to explicitly return the connection to the pool using &lt;code&gt;Connection#release&lt;/code&gt; . Here is an example:</target>
        </trans-unit>
        <trans-unit id="e371f986aec612c968c497a3937bf4fb676656ac" translate="yes" xml:space="preserve">
          <source>How to redirect the standard input, output and error IO of a process.</source>
          <target state="translated">프로세스의 표준 입력, 출력 및 오류 IO를 리디렉션하는 방법</target>
        </trans-unit>
        <trans-unit id="e13e18f3a4a56aeb9973b0c1bdfe43af2d3c3e20" translate="yes" xml:space="preserve">
          <source>How to use it</source>
          <target state="translated">사용 방법</target>
        </trans-unit>
        <trans-unit id="ac8ed596ec4132a0adc4a8e0f97e1224bbc61518" translate="yes" xml:space="preserve">
          <source>How to write and release Crystal Shards.</source>
          <target state="translated">Crystal Shards 작성 및 해제 방법</target>
        </trans-unit>
        <trans-unit id="0f964e53591b69ca73b21e833f34ed05161357a0" translate="yes" xml:space="preserve">
          <source>However, &lt;em&gt;index&lt;/em&gt; can be the position that is exactly the end of the string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd74bb3935a3003d7a2963e09eb3bb855887c76a" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;x&lt;/code&gt; is closured by a proc, the type is always the mixed type of all assignments to it:</source>
          <target state="translated">그러나 &lt;code&gt;x&lt;/code&gt; 가 proc에 의해 닫히면 유형은 항상 모든 할당의 혼합 유형입니다.</target>
        </trans-unit>
        <trans-unit id="f35bd7dddf28cf69b02ca56b241fe0738f8b2a62" translate="yes" xml:space="preserve">
          <source>However, if the programmer makes a typo, say &lt;code&gt;:reed&lt;/code&gt;, the error will only be caught at runtime, while attempting to use &lt;code&gt;Color::Reed&lt;/code&gt; will result in a compile-time error.</source>
          <target state="translated">그러나 프로그래머가 &lt;code&gt;:reed&lt;/code&gt; 와 같은 오타를 만들면 &lt;code&gt;Color::Reed&lt;/code&gt; 를 사용하려고 시도하는 동안 런타임에만 오류가 발생 하고 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ffa5c9f6d035a54423deeb161b811eff44fa5d5f" translate="yes" xml:space="preserve">
          <source>However, if you are writing a program and you realize that writing a semantically equivalent, faster version involves just minor changes, you shouldn't miss that opportunity.</source>
          <target state="translated">그러나 프로그램을 작성하고 있고 의미 적으로 동등한 고속 버전을 작성하는 데 약간의 변경 만 포함된다는 것을 알고 있다면 그러한 기회를 놓치지 마십시오.</target>
        </trans-unit>
        <trans-unit id="dcd0c8d34eda6de7b6020677f4f478d4cc1b7814" translate="yes" xml:space="preserve">
          <source>However, if you need to define a special main C function, you can redefine main and invoke &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; from it:</source>
          <target state="translated">However, if you need to define a special main C function, you can redefine main and invoke &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; from it:</target>
        </trans-unit>
        <trans-unit id="5d6957cdeb6d005f85c0e6800fa91696e04ce669" translate="yes" xml:space="preserve">
          <source>However, if you need to define a special main C function, you can redefine main and invoke &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; from it:</source>
          <target state="translated">그러나 특별한 main C 함수를 정의해야하는 경우 main을 재정의하고 &lt;code&gt;&lt;a href=&quot;crystal#main(&amp;amp;block)-class-method&quot;&gt;Crystal.main&lt;/a&gt;&lt;/code&gt; 을 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95df589eb012dfeb83f9f75716a6024ed36f80ea" translate="yes" xml:space="preserve">
          <source>However, regular code usually never involves pointer manipulation or uninitialized variables. And C bindings are usually wrapped in safe wrappers that include null pointers and bounds checks.</source>
          <target state="translated">그러나 일반 코드에는 일반적으로 포인터 조작 또는 초기화되지 않은 변수가 포함되지 않습니다. 그리고 C 바인딩은 일반적으로 널 포인터 및 바운드 검사를 포함하는 안전한 래퍼로 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="8b76d8d52f1865e0b036a6b81ccef3542eef7b58" translate="yes" xml:space="preserve">
          <source>However, some C functions accept callbacks to be executed by other C functions. For example, suppose a fictitious library:</source>
          <target state="translated">그러나 일부 C 함수는 다른 C 함수에 의해 실행되는 콜백을 수락합니다. 예를 들어, 가상의 라이브러리를 가정 해보십시오.</target>
        </trans-unit>
        <trans-unit id="8b7f6f61db4cffcfc40af4c731fa331d5dca2ce5" translate="yes" xml:space="preserve">
          <source>However, the compiler cannot always figure out the order because there isn't always a total ordering, so it's always better to put less restrictive methods at the end.</source>
          <target state="translated">그러나 컴파일러는 항상 전체 순서가 없기 때문에 순서를 파악할 수 없으므로 끝에 제한이 적은 메소드를 배치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="38a4bdb40af442e7e74a86fa577e8408da50a983" translate="yes" xml:space="preserve">
          <source>However, you can change this default type:</source>
          <target state="translated">그러나이 기본 유형을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c340af4d2168e057117e243b06e715ad8dc2e6c" translate="yes" xml:space="preserve">
          <source>Html output will be in &lt;code&gt;_book&lt;/code&gt; folder (some links won't work if opening the files locally). There is also a docker environment to avoid installing dependencies globally:</source>
          <target state="translated">HTML 출력은 &lt;code&gt;_book&lt;/code&gt; 폴더에 있습니다 (파일을 로컬로 열면 일부 링크가 작동하지 않음). 전 세계적으로 종속성을 설치하지 않도록 도커 환경이 있습니다.</target>
        </trans-unit>
        <trans-unit id="02342873892967fe32540d86bc32dd82a38485c0" translate="yes" xml:space="preserve">
          <source>I want to use &lt;a href=&quot;ci/circleci&quot;&gt;CircleCI&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ci/circleci&quot;&gt;CircleCI&lt;/a&gt; 를 사용하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="bd1714835d6bb9cb205af10f267a1f90fb156bc8" translate="yes" xml:space="preserve">
          <source>I want to use &lt;a href=&quot;ci/travis&quot;&gt;Travis CI&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ci/travis&quot;&gt;Travis CI&lt;/a&gt; 를 사용하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="584bf0af3d5c08f8d1ee3689c314ee42c7b3e951" translate="yes" xml:space="preserve">
          <source>I want to use &lt;a href=&quot;circleci&quot;&gt;CircleCI&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa4284716c87e2119a85e429eee0610df244b86" translate="yes" xml:space="preserve">
          <source>I want to use &lt;a href=&quot;travis&quot;&gt;Travis CI&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbb4168ae41092fa1e5acdd9525dbb76efe7843" translate="yes" xml:space="preserve">
          <source>I.e. This method returns &lt;code&gt;ceil(log2(self &amp;lt; 0 ? -self : self + 1))&lt;/code&gt;.</source>
          <target state="translated">Ie이 메서드는 &lt;code&gt;ceil(log2(self &amp;lt; 0 ? -self : self + 1))&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cfb8efb0ed2a0e843062bd494febb53b03f95265" translate="yes" xml:space="preserve">
          <source>IE 11 on Windows 7</source>
          <target state="translated">Windows 7의 IE 11</target>
        </trans-unit>
        <trans-unit id="6969542799be4f3a836d0ff1c8e7f05eee2ed94d" translate="yes" xml:space="preserve">
          <source>IE8 on Windows XP</source>
          <target state="translated">Windows XP의 IE8</target>
        </trans-unit>
        <trans-unit id="6bd2d044f529b888aa92832232e1060e3cde18a1" translate="yes" xml:space="preserve">
          <source>IIS date format</source>
          <target state="translated">IIS 날짜 형식</target>
        </trans-unit>
        <trans-unit id="e7eb1f3fa97480d0a00295acb4acc566a473a87d" translate="yes" xml:space="preserve">
          <source>INI</source>
          <target state="translated">INI</target>
        </trans-unit>
        <trans-unit id="65d5be4140c13b9f503e89562431940c3b4bc0b0" translate="yes" xml:space="preserve">
          <source>INI::ParseException</source>
          <target state="translated">INI::ParseException</target>
        </trans-unit>
        <trans-unit id="e407745dc4da76300d463243d1a952838b027c7c" translate="yes" xml:space="preserve">
          <source>INI::ParseException#column_number</source>
          <target state="translated">INI::ParseException#column_number</target>
        </trans-unit>
        <trans-unit id="3a2e48ddb307c94937c4d59c28c00ad2af7f2fcf" translate="yes" xml:space="preserve">
          <source>INI::ParseException#line_number</source>
          <target state="translated">INI::ParseException#line_number</target>
        </trans-unit>
        <trans-unit id="50d9b7a39e7f505f02b85cbc33b04759d49da3c7" translate="yes" xml:space="preserve">
          <source>INI::ParseException#location</source>
          <target state="translated">INI::ParseException#location</target>
        </trans-unit>
        <trans-unit id="9c0cbe1c5ec5f64712786bf65345241d335843e8" translate="yes" xml:space="preserve">
          <source>INI::ParseException.new</source>
          <target state="translated">INI::ParseException.new</target>
        </trans-unit>
        <trans-unit id="9d8fb39373007c2c84580d473e2a6e10a1f4c15d" translate="yes" xml:space="preserve">
          <source>IO</source>
          <target state="translated">IO</target>
        </trans-unit>
        <trans-unit id="566a670e61a8e4d1e7efd6c23a278bfde47594e4" translate="yes" xml:space="preserve">
          <source>IO object that prints an hexadecimal dump of all transferred data.</source>
          <target state="translated">전송 된 모든 데이터의 16 진 덤프를 인쇄하는 IO 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="a0ebc553c0950444335888850c35bc5b45771325" translate="yes" xml:space="preserve">
          <source>IO returns &lt;code&gt;false&lt;/code&gt;, but including types may override.</source>
          <target state="translated">IO는 &lt;code&gt;false&lt;/code&gt; 를 반환 하지만 유형을 포함하면 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b3e934523e5e4c5624e48558e159f8018d99fc6" translate="yes" xml:space="preserve">
          <source>IO#gets</source>
          <target state="translated">IO#gets</target>
        </trans-unit>
        <trans-unit id="423eb4a376ec712f40c7e1408db4ff6669560264" translate="yes" xml:space="preserve">
          <source>IO#peek</source>
          <target state="translated">IO#peek</target>
        </trans-unit>
        <trans-unit id="954a624f78bfa13a5a43dd6b7e5c884fd29c7c34" translate="yes" xml:space="preserve">
          <source>IO#pos</source>
          <target state="translated">IO#pos</target>
        </trans-unit>
        <trans-unit id="58aa9f7c224480ddf10a3a8c4d95eea27bfd49c7" translate="yes" xml:space="preserve">
          <source>IO#pos=</source>
          <target state="translated">IO#pos=</target>
        </trans-unit>
        <trans-unit id="64e6ee169eecef39a002bf2d04d707d5fefd7206" translate="yes" xml:space="preserve">
          <source>IO#puts</source>
          <target state="translated">IO#puts</target>
        </trans-unit>
        <trans-unit id="b8d5b753485372e43ef8ab3728b6602a027f9c10" translate="yes" xml:space="preserve">
          <source>IO#read</source>
          <target state="translated">IO#read</target>
        </trans-unit>
        <trans-unit id="0f93e29eaa1f0a1508bd05d5499b79652e99f70f" translate="yes" xml:space="preserve">
          <source>IO#seek</source>
          <target state="translated">IO#seek</target>
        </trans-unit>
        <trans-unit id="4d3e8f80b93fab222b9a665b89cf260a1df3515f" translate="yes" xml:space="preserve">
          <source>IO#skip</source>
          <target state="translated">IO#skip</target>
        </trans-unit>
        <trans-unit id="4830578fcb01624f1856c33ede245bb67a18506b" translate="yes" xml:space="preserve">
          <source>IO#tell</source>
          <target state="translated">IO#tell</target>
        </trans-unit>
        <trans-unit id="87820103dae801e709ff0bd27dc4c15b9c916495" translate="yes" xml:space="preserve">
          <source>IO#tty?</source>
          <target state="translated">IO#tty?</target>
        </trans-unit>
        <trans-unit id="7a35965f2eee33ad6fee8ef156ec97a0d062675d" translate="yes" xml:space="preserve">
          <source>IO.copy</source>
          <target state="translated">IO.copy</target>
        </trans-unit>
        <trans-unit id="b2c9083534e83ccaf77b01fd67845c0794c627bb" translate="yes" xml:space="preserve">
          <source>IO.pipe</source>
          <target state="translated">IO.pipe</target>
        </trans-unit>
        <trans-unit id="01c59c2ffab19b9e3d2cd09ae7382ebb4c7d93fd" translate="yes" xml:space="preserve">
          <source>IO::Buffered</source>
          <target state="translated">IO::Buffered</target>
        </trans-unit>
        <trans-unit id="21372f0faca58d77b3760d8e20d82058c3a3add7" translate="yes" xml:space="preserve">
          <source>IO::ByteFormat</source>
          <target state="translated">IO::ByteFormat</target>
        </trans-unit>
        <trans-unit id="1f83187aff6da4492c71736db0994d22f5ab761a" translate="yes" xml:space="preserve">
          <source>IO::Delimited</source>
          <target state="translated">IO::Delimited</target>
        </trans-unit>
        <trans-unit id="b70b25b85e44b867bb083365484d8108b3160beb" translate="yes" xml:space="preserve">
          <source>IO::Digest</source>
          <target state="translated">IO::Digest</target>
        </trans-unit>
        <trans-unit id="660b803bc10a1456374b44f202aca0ae510119be" translate="yes" xml:space="preserve">
          <source>IO::EOFError</source>
          <target state="translated">IO::EOFError</target>
        </trans-unit>
        <trans-unit id="e76d1c22ca830f1b5152f3c5940ba3ee970dce00" translate="yes" xml:space="preserve">
          <source>IO::EOFError.new</source>
          <target state="translated">IO::EOFError.new</target>
        </trans-unit>
        <trans-unit id="fc63595f77c7ad1c4a87b4946062e09109228e68" translate="yes" xml:space="preserve">
          <source>IO::EncodingOptions</source>
          <target state="translated">IO::EncodingOptions</target>
        </trans-unit>
        <trans-unit id="20cab7e58a4e883b7238720cefc2352e4ba554db" translate="yes" xml:space="preserve">
          <source>IO::Error</source>
          <target state="translated">IO::Error</target>
        </trans-unit>
        <trans-unit id="a0bd78bb2c694b3fe4fd3dc98a9e578e90af0ea9" translate="yes" xml:space="preserve">
          <source>IO::Evented</source>
          <target state="translated">IO::Evented</target>
        </trans-unit>
        <trans-unit id="5e2d31a604cbc6cf47d3adc4391b38121479004c" translate="yes" xml:space="preserve">
          <source>IO::FileDescriptor</source>
          <target state="translated">IO::FileDescriptor</target>
        </trans-unit>
        <trans-unit id="ea027f90d536fb5e480dabc212b039c72ea5f8fb" translate="yes" xml:space="preserve">
          <source>IO::Hexdump</source>
          <target state="translated">IO::Hexdump</target>
        </trans-unit>
        <trans-unit id="f2e43aec5630fd2afdf4c6087c2e5b71959c78ac" translate="yes" xml:space="preserve">
          <source>IO::Memory</source>
          <target state="translated">IO::Memory</target>
        </trans-unit>
        <trans-unit id="56d5aeb5c5671555b689dccef8134c28c4bcdf1f" translate="yes" xml:space="preserve">
          <source>IO::MultiWriter</source>
          <target state="translated">IO::MultiWriter</target>
        </trans-unit>
        <trans-unit id="f9da106e13aabf1b761fca029eb2d9b11645aca6" translate="yes" xml:space="preserve">
          <source>IO::Seek</source>
          <target state="translated">IO::Seek</target>
        </trans-unit>
        <trans-unit id="0228e622c1deebc8786bc6eb1f5e15485eea47b8" translate="yes" xml:space="preserve">
          <source>IO::Sized</source>
          <target state="translated">IO::Sized</target>
        </trans-unit>
        <trans-unit id="2bf6f5a0af49d19225382797be0e98d2947ade2d" translate="yes" xml:space="preserve">
          <source>IO::Stapled</source>
          <target state="translated">IO::Stapled</target>
        </trans-unit>
        <trans-unit id="3a3240210832c6f780d752d4db09983165bfc504" translate="yes" xml:space="preserve">
          <source>IO::Timeout</source>
          <target state="translated">IO::Timeout</target>
        </trans-unit>
        <trans-unit id="ba990ce438ed234c5d33812d3d62d9da0c776982" translate="yes" xml:space="preserve">
          <source>IO::TimeoutError</source>
          <target state="translated">IO::TimeoutError</target>
        </trans-unit>
        <trans-unit id="482dfdc8812701af27fb84d3cc5a94cd408b6ee0" translate="yes" xml:space="preserve">
          <source>IOBackend</source>
          <target state="translated">IOBackend</target>
        </trans-unit>
        <trans-unit id="72b05a379b1e0bd2b557e431954dbeadccfe91d8" translate="yes" xml:space="preserve">
          <source>IOBackend#format</source>
          <target state="translated">IOBackend#format</target>
        </trans-unit>
        <trans-unit id="117d34748acb4627526074ce8a371af45c51e9dc" translate="yes" xml:space="preserve">
          <source>IOBackend#formatter</source>
          <target state="translated">IOBackend#formatter</target>
        </trans-unit>
        <trans-unit id="fbcf2161931679beccf2d2ca7fca2338a5d42eca" translate="yes" xml:space="preserve">
          <source>IOBackend#formatter=</source>
          <target state="translated">IOBackend#formatter=</target>
        </trans-unit>
        <trans-unit id="09d800eda63beed75491826efd13679351220593" translate="yes" xml:space="preserve">
          <source>IOBackend#io</source>
          <target state="translated">IOBackend#io</target>
        </trans-unit>
        <trans-unit id="282a4aa489218815963fb59f42f8a7bc45dc5b27" translate="yes" xml:space="preserve">
          <source>IOBackend#io=</source>
          <target state="translated">IOBackend#io=</target>
        </trans-unit>
        <trans-unit id="b95ff91ca3bf425bca0f1e71450c03ed487b45f3" translate="yes" xml:space="preserve">
          <source>IOBackend#write</source>
          <target state="translated">IOBackend#write</target>
        </trans-unit>
        <trans-unit id="d203e533d69cf2bb0d3478bcf986326ebb668df2" translate="yes" xml:space="preserve">
          <source>IOBackend.new</source>
          <target state="translated">IOBackend.new</target>
        </trans-unit>
        <trans-unit id="53d460bd6d289b3cc74a6a3560cd60cca1d1c118" translate="yes" xml:space="preserve">
          <source>IP address representation.</source>
          <target state="translated">IP 주소 표현.</target>
        </trans-unit>
        <trans-unit id="bd07fb46e99cb2fe8d13d04faa7e9fca91c4a40b" translate="yes" xml:space="preserve">
          <source>IPAddress</source>
          <target state="translated">IPAddress</target>
        </trans-unit>
        <trans-unit id="ff943fedcc139bc9c0d34034e597b1c2e5b8bb89" translate="yes" xml:space="preserve">
          <source>IPAddress#==</source>
          <target state="translated">IPAddress#==</target>
        </trans-unit>
        <trans-unit id="91b3280f2b9b55985f5d83c0a95721c83d0abf88" translate="yes" xml:space="preserve">
          <source>IPAddress#address</source>
          <target state="translated">IPAddress#address</target>
        </trans-unit>
        <trans-unit id="9b20017a26654d7631c1a96c2ef7062b19a5d437" translate="yes" xml:space="preserve">
          <source>IPAddress#inspect</source>
          <target state="translated">IPAddress#inspect</target>
        </trans-unit>
        <trans-unit id="30eec978c47a5d4457cee5fb6c1c5dc2196fe6e2" translate="yes" xml:space="preserve">
          <source>IPAddress#loopback?</source>
          <target state="translated">IPAddress#loopback?</target>
        </trans-unit>
        <trans-unit id="99f74bacacdd372aae0d3868d541ebeaec8a2392" translate="yes" xml:space="preserve">
          <source>IPAddress#port</source>
          <target state="translated">IPAddress#port</target>
        </trans-unit>
        <trans-unit id="0d1ee1efe44f2a0b2ea8b4d806eec6caafd2d123" translate="yes" xml:space="preserve">
          <source>IPAddress#pretty_print</source>
          <target state="translated">IPAddress#pretty_print</target>
        </trans-unit>
        <trans-unit id="e9aec66cdca49eaa51b0dd5f0a4b99f56e87f3b7" translate="yes" xml:space="preserve">
          <source>IPAddress#to_s</source>
          <target state="translated">IPAddress#to_s</target>
        </trans-unit>
        <trans-unit id="d2993a51a2825bdfdc71445bb22215c30648314e" translate="yes" xml:space="preserve">
          <source>IPAddress#to_unsafe</source>
          <target state="translated">IPAddress#to_unsafe</target>
        </trans-unit>
        <trans-unit id="3635a6e2db5f7c152b2118e59154e14cebbfaf18" translate="yes" xml:space="preserve">
          <source>IPAddress#unspecified?</source>
          <target state="translated">IPAddress#unspecified?</target>
        </trans-unit>
        <trans-unit id="8beb7de16738c3111b39fb73b14862ccb25e5bfb" translate="yes" xml:space="preserve">
          <source>IPAddress.from</source>
          <target state="translated">IPAddress.from</target>
        </trans-unit>
        <trans-unit id="18e1aaffd534cd31d310e4314838add13ea3c7fd" translate="yes" xml:space="preserve">
          <source>IPAddress.new</source>
          <target state="translated">IPAddress.new</target>
        </trans-unit>
        <trans-unit id="12846dc8d01982baf0e3baf0d88ec66a1ed6c819" translate="yes" xml:space="preserve">
          <source>IPAddress.parse</source>
          <target state="translated">IPAddress.parse</target>
        </trans-unit>
        <trans-unit id="187e8ad927a0dc4f33b57ce0c2a1bd751d5005fd" translate="yes" xml:space="preserve">
          <source>IPS::Entry</source>
          <target state="translated">IPS::Entry</target>
        </trans-unit>
        <trans-unit id="5cd3524fe4042a9ad5cb73dc1aa09456d7866021" translate="yes" xml:space="preserve">
          <source>IPS::Entry#action</source>
          <target state="translated">IPS::Entry#action</target>
        </trans-unit>
        <trans-unit id="32a7c63dbb5eab4e734b33d11b9d03a4a91ec822" translate="yes" xml:space="preserve">
          <source>IPS::Entry#action=</source>
          <target state="translated">IPS::Entry#action=</target>
        </trans-unit>
        <trans-unit id="8507578a118008eecab0c86186a54633814fe558" translate="yes" xml:space="preserve">
          <source>IPS::Entry#bytes_per_op</source>
          <target state="translated">IPS::Entry#bytes_per_op</target>
        </trans-unit>
        <trans-unit id="9abed2cfad8bed6df2d7b3d3f8b022ee2ed924ee" translate="yes" xml:space="preserve">
          <source>IPS::Entry#bytes_per_op=</source>
          <target state="translated">IPS::Entry#bytes_per_op=</target>
        </trans-unit>
        <trans-unit id="94bd22db3f9fe284caaefaf976caef57f82811bd" translate="yes" xml:space="preserve">
          <source>IPS::Entry#bytes_per_op?</source>
          <target state="translated">IPS::Entry#bytes_per_op?</target>
        </trans-unit>
        <trans-unit id="0acd3517fbe6494ebd8b46d14b597145046164fe" translate="yes" xml:space="preserve">
          <source>IPS::Entry#calculate_stats</source>
          <target state="translated">IPS::Entry#calculate_stats</target>
        </trans-unit>
        <trans-unit id="c712ff5406aae0fab5950549e5fdf92dfd3ef785" translate="yes" xml:space="preserve">
          <source>IPS::Entry#call</source>
          <target state="translated">IPS::Entry#call</target>
        </trans-unit>
        <trans-unit id="3208d85d06f4b6c9274cb539def26afd57cc542d" translate="yes" xml:space="preserve">
          <source>IPS::Entry#call_for_100ms</source>
          <target state="translated">IPS::Entry#call_for_100ms</target>
        </trans-unit>
        <trans-unit id="3ad7bdb026e97e404bafe71c5a80b7b69ef2c4ca" translate="yes" xml:space="preserve">
          <source>IPS::Entry#cycles</source>
          <target state="translated">IPS::Entry#cycles</target>
        </trans-unit>
        <trans-unit id="3af1ef1f3189b14da9283ba7ec7a445bed76e008" translate="yes" xml:space="preserve">
          <source>IPS::Entry#cycles=</source>
          <target state="translated">IPS::Entry#cycles=</target>
        </trans-unit>
        <trans-unit id="3a74a3f49bad5e1798e47c13ea71a9fd89d8c19d" translate="yes" xml:space="preserve">
          <source>IPS::Entry#cycles?</source>
          <target state="translated">IPS::Entry#cycles?</target>
        </trans-unit>
        <trans-unit id="7da7bedc7960e7afbed27a7061797a1f3d17a5ba" translate="yes" xml:space="preserve">
          <source>IPS::Entry#human_compare</source>
          <target state="translated">IPS::Entry#human_compare</target>
        </trans-unit>
        <trans-unit id="967a16fbbe84e14ee6276ccd6e2d96d11f6bdbcc" translate="yes" xml:space="preserve">
          <source>IPS::Entry#human_iteration_time</source>
          <target state="translated">IPS::Entry#human_iteration_time</target>
        </trans-unit>
        <trans-unit id="205c42faef28fed689dc6450bb1131a195c2b6c0" translate="yes" xml:space="preserve">
          <source>IPS::Entry#human_mean</source>
          <target state="translated">IPS::Entry#human_mean</target>
        </trans-unit>
        <trans-unit id="f0fb2461d5bb91aa88104601418e57094b1a8e20" translate="yes" xml:space="preserve">
          <source>IPS::Entry#label</source>
          <target state="translated">IPS::Entry#label</target>
        </trans-unit>
        <trans-unit id="24d603d16095977bf379517f14a48b3506080e57" translate="yes" xml:space="preserve">
          <source>IPS::Entry#label=</source>
          <target state="translated">IPS::Entry#label=</target>
        </trans-unit>
        <trans-unit id="c1be7e35357fd1554a50661f13d2c4ef033b9e7a" translate="yes" xml:space="preserve">
          <source>IPS::Entry#mean</source>
          <target state="translated">IPS::Entry#mean</target>
        </trans-unit>
        <trans-unit id="36a86a454f3ed41d1d6c7635f61a6c183441c101" translate="yes" xml:space="preserve">
          <source>IPS::Entry#mean=</source>
          <target state="translated">IPS::Entry#mean=</target>
        </trans-unit>
        <trans-unit id="813602f114068048be1ec0dc015cbe2dd673b204" translate="yes" xml:space="preserve">
          <source>IPS::Entry#mean?</source>
          <target state="translated">IPS::Entry#mean?</target>
        </trans-unit>
        <trans-unit id="ed38b4527e036a975379b8a6a72ac69a55a83487" translate="yes" xml:space="preserve">
          <source>IPS::Entry#ran?</source>
          <target state="translated">IPS::Entry#ran?</target>
        </trans-unit>
        <trans-unit id="9907f36b9ee723d962153ae268f130acfb2e85f7" translate="yes" xml:space="preserve">
          <source>IPS::Entry#relative_stddev</source>
          <target state="translated">IPS::Entry#relative_stddev</target>
        </trans-unit>
        <trans-unit id="01d6a92304e0614a9e8d57db664bf1e6796dd770" translate="yes" xml:space="preserve">
          <source>IPS::Entry#relative_stddev=</source>
          <target state="translated">IPS::Entry#relative_stddev=</target>
        </trans-unit>
        <trans-unit id="2b03cafaa10d9c66c85b9efe3975e9fa3701657f" translate="yes" xml:space="preserve">
          <source>IPS::Entry#relative_stddev?</source>
          <target state="translated">IPS::Entry#relative_stddev?</target>
        </trans-unit>
        <trans-unit id="6e74a828ed1512f7a1c005602a955eb22f220660" translate="yes" xml:space="preserve">
          <source>IPS::Entry#set_cycles</source>
          <target state="translated">IPS::Entry#set_cycles</target>
        </trans-unit>
        <trans-unit id="a0f048f1bd755deba238cc1d7ff06313256ff862" translate="yes" xml:space="preserve">
          <source>IPS::Entry#size</source>
          <target state="translated">IPS::Entry#size</target>
        </trans-unit>
        <trans-unit id="7dfe2b5f7c8495c06b202f0c9f75134f17787910" translate="yes" xml:space="preserve">
          <source>IPS::Entry#size=</source>
          <target state="translated">IPS::Entry#size=</target>
        </trans-unit>
        <trans-unit id="ebd3f04b36ba7b722464f34e3ed28b8530652e53" translate="yes" xml:space="preserve">
          <source>IPS::Entry#size?</source>
          <target state="translated">IPS::Entry#size?</target>
        </trans-unit>
        <trans-unit id="5706783e76346cc79d4d7881d1c879e1deb85ef9" translate="yes" xml:space="preserve">
          <source>IPS::Entry#slower</source>
          <target state="translated">IPS::Entry#slower</target>
        </trans-unit>
        <trans-unit id="f9157a117e07322ccbfda6cdb723aff3a5177e2c" translate="yes" xml:space="preserve">
          <source>IPS::Entry#slower=</source>
          <target state="translated">IPS::Entry#slower=</target>
        </trans-unit>
        <trans-unit id="c3a7062e78b6bc62ee92b074d9a991f8d4267462" translate="yes" xml:space="preserve">
          <source>IPS::Entry#slower?</source>
          <target state="translated">IPS::Entry#slower?</target>
        </trans-unit>
        <trans-unit id="c4c74149071433ee1e367907d082be98d2ba6e3f" translate="yes" xml:space="preserve">
          <source>IPS::Entry#stddev</source>
          <target state="translated">IPS::Entry#stddev</target>
        </trans-unit>
        <trans-unit id="651157a8768893bf91474e1aecb5d32fc628e130" translate="yes" xml:space="preserve">
          <source>IPS::Entry#stddev=</source>
          <target state="translated">IPS::Entry#stddev=</target>
        </trans-unit>
        <trans-unit id="fb6e7f806bb8ee40beb341537753a660b0731146" translate="yes" xml:space="preserve">
          <source>IPS::Entry#stddev?</source>
          <target state="translated">IPS::Entry#stddev?</target>
        </trans-unit>
        <trans-unit id="85cf8c7ddb90481b6a70e9ed16a068ea144f13ce" translate="yes" xml:space="preserve">
          <source>IPS::Entry#variance</source>
          <target state="translated">IPS::Entry#variance</target>
        </trans-unit>
        <trans-unit id="7d23d788bdb6b5ee607ef5f3968cf6bae85381ca" translate="yes" xml:space="preserve">
          <source>IPS::Entry#variance=</source>
          <target state="translated">IPS::Entry#variance=</target>
        </trans-unit>
        <trans-unit id="81162b3d4f15be4379ee8465a237d9d9675a27ae" translate="yes" xml:space="preserve">
          <source>IPS::Entry#variance?</source>
          <target state="translated">IPS::Entry#variance?</target>
        </trans-unit>
        <trans-unit id="cd0fe766412b54b23f12e39e383a9b38467b4f72" translate="yes" xml:space="preserve">
          <source>IPS::Entry.new</source>
          <target state="translated">IPS::Entry.new</target>
        </trans-unit>
        <trans-unit id="fc0a4ec4acf9d51175d4caad6e38cdff26432fc9" translate="yes" xml:space="preserve">
          <source>IPS::Job</source>
          <target state="translated">IPS::Job</target>
        </trans-unit>
        <trans-unit id="282111bedc015dbc0cb7c222dda43e7939d7c57f" translate="yes" xml:space="preserve">
          <source>IPS::Job#execute</source>
          <target state="translated">IPS::Job#execute</target>
        </trans-unit>
        <trans-unit id="b3c06c73790bdbcf40a653656912db2e3df6c35e" translate="yes" xml:space="preserve">
          <source>IPS::Job#items</source>
          <target state="translated">IPS::Job#items</target>
        </trans-unit>
        <trans-unit id="c74c7fdfcf49c63dbc1d5e3aa1ebee583d5907d9" translate="yes" xml:space="preserve">
          <source>IPS::Job#items=</source>
          <target state="translated">IPS::Job#items=</target>
        </trans-unit>
        <trans-unit id="ae1a8d67c2220c0e54ff9551a1b1a7ce0e3a3d5a" translate="yes" xml:space="preserve">
          <source>IPS::Job#report</source>
          <target state="translated">IPS::Job#report</target>
        </trans-unit>
        <trans-unit id="8d5953a348176d3e57606b464bb265aac10b6d03" translate="yes" xml:space="preserve">
          <source>IPS::Job.new</source>
          <target state="translated">IPS::Job.new</target>
        </trans-unit>
        <trans-unit id="f4f73036f2160743e22e15df55aaacea0c9c24bd" translate="yes" xml:space="preserve">
          <source>IPSocket</source>
          <target state="translated">IPSocket</target>
        </trans-unit>
        <trans-unit id="3eae0e58485237fdc34771557919a03fd98bf521" translate="yes" xml:space="preserve">
          <source>IPv4 addresses in &lt;code&gt;10.0.0.0/8&lt;/code&gt;, &lt;code&gt;172.16.0.0/12&lt;/code&gt; and &lt;code&gt;192.168.0.0/16&lt;/code&gt; as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1918&quot;&gt;RFC 1918&lt;/a&gt; and IPv6 Unique Local Addresses in &lt;code&gt;fc00::/7&lt;/code&gt; as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc4193&quot;&gt;RFC 4193&lt;/a&gt; are considered private.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4121d0729d3383b3e475d56a3cb1ea70f85743" translate="yes" xml:space="preserve">
          <source>ISAAC#new_seed</source>
          <target state="translated">ISAAC#new_seed</target>
        </trans-unit>
        <trans-unit id="d35cbb0b70fd21bccd8d8f868f4b0f174d7e355d" translate="yes" xml:space="preserve">
          <source>ISAAC#next_u</source>
          <target state="translated">ISAAC#next_u</target>
        </trans-unit>
        <trans-unit id="acc8af541fff3394a1e9faef770cd91730b0aba8" translate="yes" xml:space="preserve">
          <source>ISAAC.new</source>
          <target state="translated">ISAAC.new</target>
        </trans-unit>
        <trans-unit id="aba22a08c3d8f577a02d3f2eee47803c962e2bb7" translate="yes" xml:space="preserve">
          <source>ISO 8601 allows some freedom over the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format intended for use in internet protocols and standards.</source>
          <target state="translated">ISO 8601은 인터넷 프로토콜 및 표준에 사용하기위한 고정 형식을 엄격하게 정의 할 수있는 구문 및 RFC 3339 연습에 대한 자유를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="348f15754036855bc0c47f269778d209d8be246d" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;&lt;a href=&quot;params#clone:self-instance-method&quot;&gt;#clone&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfa9ec514a6d7ba9642f6555bb77f5b3067b53d" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;&lt;a href=&quot;params#dup:self-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1a745105ff9b6c357cf50bdd91090ffef6ae55" translate="yes" xml:space="preserve">
          <source>Identifier removed</source>
          <target state="translated">식별자 제거</target>
        </trans-unit>
        <trans-unit id="1e93e317f014b06d6be17bf1cbc4a58a08ff9299" translate="yes" xml:space="preserve">
          <source>Identifiers may contain any unicode characters. Individual symbols are separated by a single space character () which must be escaped to use it as a part of an identifier.</source>
          <target state="translated">식별자에는 유니 코드 문자가 포함될 수 있습니다. 개별 기호는 단일 공백 ​​문자 ()로 구분되며이 문자를 식별자의 일부로 사용하려면 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="696f8d0b72d4a63b474ef8b387292cf251a3b628" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../env&quot;&gt;ENV&lt;/a&gt;[&quot;TZ&quot;]&lt;/code&gt; is not set, the system's local time zone data will be used (&lt;code&gt;/etc/localtime&lt;/code&gt; on unix-based systems).</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;../env&quot;&gt;ENV&lt;/a&gt;[&quot;TZ&quot;]&lt;/code&gt; 로 설정되지 않고, 시스템의 로컬 시간대 데이터 (사용될 &lt;code&gt;/etc/localtime&lt;/code&gt; UNIX 기반 시스템 참조).</target>
        </trans-unit>
        <trans-unit id="6309788fd36df3106e50e46ec0bb407990ddd58f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;delimited#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;delimited#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 이 폐쇄, &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 기본 닫습니다 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="df565692580464904b72cc05c4672d4618cfed50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;multiwriter#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close all of the underlying IOs.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;multiwriter#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 이 폐쇄, &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 기본 IO를 모두 닫습니다.</target>
        </trans-unit>
        <trans-unit id="0e2dcb097408e4145c1763e9539ef0671c1c6ac0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;reader#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this IO will close the underlying IO.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;reader#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; 기본 IO를 닫습니다이 IO를 폐쇄.</target>
        </trans-unit>
        <trans-unit id="19bdc7a23cb0ddbbc370614aeb44bb709db2be01" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;server#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this server will close the wrapped server.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;server#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; ,이 서버를 폐쇄하는 것은 랩 서버를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="176c57a5f3d2f30907b441f29f06fc87152a4b1a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;sized#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;sized#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 이 폐쇄, &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 기본 닫습니다 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="90c86068c82d52746191a17ebb946efaecbcb07a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;socket#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this socket will close the underlying IO.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;socket#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; ,이 소켓을 닫는 것은 기본 IO를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="aabeb33ab5cf2649b99f1d81e9d3f97f7785ffa9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 이 폐쇄, &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 를 기본 닫습니다 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 들.</target>
        </trans-unit>
        <trans-unit id="faa9fe823f5e8f053665595e8e5f2e1b8653c5c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, it will also close the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;stapled#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 이다 &lt;code&gt;true&lt;/code&gt; , 그것은 또한 기본 종료됩니다 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 들.</target>
        </trans-unit>
        <trans-unit id="d84a8acd3481dbcb7d432a5cda140a291b0b58fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#normal_exit?-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the exit code of the process.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;status#normal_exit?-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; , 프로세스의 종료 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="404a5472fbbe7159062d4a079a2ec107013e58b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#normal_exit?:Bool-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the exit code of the process.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;status#normal_exit?:Bool-instance-method&quot;&gt;#normal_exit?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; , 프로세스의 종료 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9ce56af18819ea8ae30de92f63e36238ef03660b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; , 수익 &lt;em&gt;신호&lt;/em&gt; 프로세스가 수신 처리하지 못했다는.</target>
        </trans-unit>
        <trans-unit id="d4b1bd00aa116410f238d2ab34e3736aaea21704" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle. Will raise if &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; , 수익 &lt;em&gt;신호&lt;/em&gt; 프로세스가 수신 처리하지 못했다는. &lt;code&gt;&lt;a href=&quot;status#signal_exit?-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 경우 발생합니까? 이다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a18990c52011352748357760211345dc8685ce0d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; , 수익 &lt;em&gt;신호&lt;/em&gt; 프로세스가 수신 처리하지 못했다는.</target>
        </trans-unit>
        <trans-unit id="54629c120bb9f2431571a5b1bd503b1e86baa7f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns the &lt;em&gt;Signal&lt;/em&gt; the process received and didn't handle. Will raise if &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; , 수익 &lt;em&gt;신호&lt;/em&gt; 프로세스가 수신 처리하지 못했다는. &lt;code&gt;&lt;a href=&quot;status#signal_exit?:Bool-instance-method&quot;&gt;#signal_exit?&lt;/a&gt;&lt;/code&gt; 이면 발생합니까? 이다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2579719b0bc535062b54d6f68cf3486b68812be" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;uri#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; is empty in an hierarchical URI, &lt;code&gt;&quot;/&quot;&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118b99c87b9f334fe135ea24ea60ca095da620a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;writer#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, closing this IO will close the underlying IO.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;writer#sync_close?:Bool-instance-method&quot;&gt;#sync_close?&lt;/a&gt;&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; 기본 IO를 닫습니다이 IO를 폐쇄.</target>
        </trans-unit>
        <trans-unit id="6f5c618cd8069294c00c33511ad14e5f66c57dc7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, the formatted &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; will be used as &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , 포맷 된 &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; 이 로 사용됩니다 &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; (참조 &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="ed14ae205e8b50ac900092813bf7c57bc5a54db2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;MyHash&lt;/code&gt; is generic, the above is equivalent to this:</source>
          <target state="translated">&lt;code&gt;MyHash&lt;/code&gt; 가 일반적인 경우 위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9633387b451b3f09cffe8b4c0728a615bf78682" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Point&lt;/code&gt; is inherited, an array of such type should also account for the fact that other types can be inside it, so the size of each element should grow to accommodate that. That is certainly unexpected. So, non-abstract structs can't be inherited from. Abstract structs, on the other hand, will have descendants, so it is expected that an array of them will account for the possibility of having multiple types inside it.</source>
          <target state="translated">경우 &lt;code&gt;Point&lt;/code&gt; 상속, 이러한 유형의 어레이는 각 원소의 크기가 성장을 수용해야하므로, 다른 종류가 그 안에있을 수 있다는 사실을 설명한다. 확실히 예상치 못한 일입니다. 따라서 비추 상 구조체는 상속 할 수 없습니다. 반면 추상 구조체에는 자손이 있으므로 그 안에 배열이 여러 유형이있을 가능성을 설명해야합니다.</target>
        </trans-unit>
        <trans-unit id="001824d6a11cb5f87430d46237946d9fcfe13e12" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; are under the same hierarchy, and their nearest common ancestor &lt;code&gt;Parent&lt;/code&gt; is not &lt;code&gt;Reference&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt; nor &lt;code&gt;Value&lt;/code&gt;, the resulting type is &lt;code&gt;Parent+&lt;/code&gt;. This is called a virtual type, which basically means the compiler will now see the type as being &lt;code&gt;Parent&lt;/code&gt; or any of its subtypes.</source>
          <target state="translated">경우 &lt;code&gt;T1&lt;/code&gt; 과 &lt;code&gt;T2&lt;/code&gt; 는 동일한 계층에서, 그리고 가장 가까운 공통 조상의 &lt;code&gt;Parent&lt;/code&gt; 아닌 &lt;code&gt;Reference&lt;/code&gt; , &lt;code&gt;Struct&lt;/code&gt; , &lt;code&gt;Int&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; 도 &lt;code&gt;Value&lt;/code&gt; , 결과 유형은 &lt;code&gt;Parent+&lt;/code&gt; . 이를 가상 유형이라고하며, 기본적으로 컴파일러는 이제 유형을 &lt;code&gt;Parent&lt;/code&gt; 또는 하위 유형으로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="cfcde4d4b19cac8e803c09f648ae18a646571057" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; then this is equivalent to &lt;code&gt;&lt;a href=&quot;number#slice(*nums,read_only=false)-macro&quot;&gt;Number.slice&lt;/a&gt;&lt;/code&gt; (numbers will be coerced to the type &lt;code&gt;T&lt;/code&gt;)</source>
          <target state="translated">경우 &lt;code&gt;T&lt;/code&gt; 는 A는 &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; 다음이에 해당 &lt;code&gt;&lt;a href=&quot;number#slice(*nums,read_only=false)-macro&quot;&gt;Number.slice&lt;/a&gt;&lt;/code&gt; (번호는 타입 강제 변환됩니다 &lt;code&gt;T&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c508a87dc0d0dfb6bbb2a994f5702cb16978cb67" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compress&lt;/code&gt; isn't set to &lt;code&gt;false&lt;/code&gt;, and no &lt;code&gt;Accept-Encoding&lt;/code&gt; header is explicitly specified, an HTTP::Client will add an &lt;code&gt;&quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;&lt;/code&gt; header, and automatically decompress the response body/body_io.</source>
          <target state="translated">경우 &lt;code&gt;compress&lt;/code&gt; 로 설정되지 않은 &lt;code&gt;false&lt;/code&gt; , 더 &lt;code&gt;Accept-Encoding&lt;/code&gt; 헤더 것은 명시 적으로 HTTP : 클라이언트가 추가되며, 지정 &lt;code&gt;&quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;&lt;/code&gt; 자동으로 헤더 및 응답 본문 / body_io 압축을 해제.</target>
        </trans-unit>
        <trans-unit id="c9443900999907e25a9a3699f28e5a935063e785" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">경우 &lt;code&gt;focus&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; 만이 &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; 으로 표시하고, 다른 &lt;code&gt;focus: true&lt;/code&gt; , 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9b6e440c50d9b5a5b10130dd64bb721bd20927fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">경우 &lt;code&gt;focus&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; 만이 &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; 으로 표시하고, 다른 &lt;code&gt;focus: true&lt;/code&gt; , 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c43cbb0cd26e2eaac009a678d114ac2ec97686ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">경우 &lt;code&gt;focus&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; 만이 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 으로 표시하고, 다른 &lt;code&gt;focus: true&lt;/code&gt; , 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="d13b463286ea732bbaa1d0ec1b05709a9f8c5451" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">경우 &lt;code&gt;focus&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; 만이 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 으로 표시하고, 다른 &lt;code&gt;focus: true&lt;/code&gt; , 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="f6d7ded0d009f0c6ff76df23628f806a0c4bd196" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;focus&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only this test, and others marked with &lt;code&gt;focus: true&lt;/code&gt;, will run.</source>
          <target state="translated">경우 &lt;code&gt;focus&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; , 표시 만이 테스트, 그리고 다른 &lt;code&gt;focus: true&lt;/code&gt; , 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="40b8f4fc8c1858269ed8034bc4b0514d2f9963f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;host&lt;/code&gt; is not empty, it will be prepended to &lt;code&gt;&lt;a href=&quot;unixaddress#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; to form a relative path.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; 가 비어 있지 않은 경우 상대 경로를 형성 하기 위해 &lt;code&gt;&lt;a href=&quot;unixaddress#path:String-instance-method&quot;&gt;#path&lt;/a&gt;&lt;/code&gt; 앞에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="0afcb2d5562ff7693e73d94564b16c12cae0354d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;node&lt;/code&gt; parses to a null value, returns &lt;code&gt;nil&lt;/code&gt;, otherwise invokes the given block.</source>
          <target state="translated">경우 &lt;code&gt;node&lt;/code&gt; 널 값으로 파싱, 반환 &lt;code&gt;nil&lt;/code&gt; 을 , 그렇지 않으면 주어진 블록을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="bf531f12e26b5c03372773ce0a2f9504bd05586c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; range, it provides O(1) implementation, otherwise it is same as &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;self&lt;/code&gt; A는 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 범위는, 그렇지 않으면 그것과 동일, O (1) 구현을 제공 &lt;code&gt;&lt;a href=&quot;enumerable#sum-instance-method&quot;&gt;Enumerable#sum&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31a9e43c95323f0200030968fdd2b35a8560a9f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt;'s size is the same as &lt;em&gt;other&lt;/em&gt;'s size, this method yields elements from &lt;code&gt;self&lt;/code&gt; and &lt;em&gt;other&lt;/em&gt; in tandem: if the block returns true for all of them, this method returns &lt;code&gt;true&lt;/code&gt;. Otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;self&lt;/code&gt; 의 크기가 동일하다 &lt;em&gt;다른&lt;/em&gt; 의 크기 '에서이 방법 수율 요소 &lt;code&gt;self&lt;/code&gt; 와 &lt;em&gt;다른&lt;/em&gt; 직렬에 : 모두를위한 진정한 블록을 반환,이 메서드가 반환하는 경우 &lt;code&gt;true&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf2489b31bd4768233dc45aa6e65c3c8b215192c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is assigned something else after the block, the compiler knows the type changed:</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 는 블록 후 다른 뭔가를 할당, 컴파일러가 변경 유형을 알고있다 :</target>
        </trans-unit>
        <trans-unit id="a5b062925c845396eae106827a0314b752e9836c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;backreferences&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; (the default value), &lt;em&gt;replacement&lt;/em&gt; can include backreferences:</source>
          <target state="translated">경우 &lt;em&gt;역 참조가&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; (기본값), &lt;em&gt;대체&lt;/em&gt; 역 참조를 포함 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f648955f6dd8544bc8a2903673e1f4e3e9b8dc88" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;command&lt;/em&gt; contains no spaces and &lt;em&gt;args&lt;/em&gt; is given, it will become its argument list.</source>
          <target state="translated">경우 &lt;em&gt;명령은&lt;/em&gt; 공백과 포함 &lt;em&gt;인수가&lt;/em&gt; 주어지지, 그것의 인수 목록이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="ce1e70f9c6dc375c5f06cd46945845804bc1450b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;command&lt;/em&gt; contains spaces and &lt;em&gt;args&lt;/em&gt; is given, &lt;em&gt;command&lt;/em&gt; must include &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; (including the quotes) to receive the argument list.</source>
          <target state="translated">경우 &lt;em&gt;명령은&lt;/em&gt; 공간과 포함 &lt;em&gt;인수가&lt;/em&gt; 주어, &lt;em&gt;명령을&lt;/em&gt; 포함해야 &lt;code&gt;&quot;${@}&quot;&lt;/code&gt; (따옴표 포함) 인수 목록을받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45c3de480bb4db74776b8b33618c1c66da449ce4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is bigger than the number of elements in the array, returns an empty array.</source>
          <target state="translated">경우 &lt;em&gt;카운트가&lt;/em&gt; 배열의 요소 수보다 큰, 빈 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe0e995399fcadb3f8c8f91b22de715523c4592b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is bigger than the number of elements in the collection, returns an empty array.</source>
          <target state="translated">경우 &lt;em&gt;카운트가&lt;/em&gt; 컬렉션에있는 요소의 개수보다 큰, 빈 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3cff5feb6241c1079b517e48db098f878df765f6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is bigger than the number of elements in the collection, returns as many as possible. This include the case of calling it over an empty collection, in which case it returns an empty array.</source>
          <target state="translated">경우 &lt;em&gt;카운트가&lt;/em&gt; 컬렉션에있는 요소의 개수보다 큰, 가능한 한 많은으로 반환합니다. 여기에는 빈 컬렉션을 호출하는 경우가 포함되며이 경우 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4b341eeb963983de41f3ef55fc807427c76167f2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is greater than the number of bits of this integer, returns 0</source>
          <target state="translated">경우 &lt;em&gt;카운트&lt;/em&gt; 이 정수의 비트 수보다 큰 경우, 0을 반환</target>
        </trans-unit>
        <trans-unit id="f4b25a88855e5f5c0b4950b0b463568bc8446bbc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is negative, &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d16d63e314d6f981adf805cb2d0e19621bea1d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is negative, a left shift is performed</source>
          <target state="translated">경우에 &lt;em&gt;카운트가&lt;/em&gt; 네거티브이고, 좌측 시프트를 행한다</target>
        </trans-unit>
        <trans-unit id="b1b0da30675a7f8de5eef3d0b1990a5608f449d1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is negative, a right shift is performed</source>
          <target state="translated">경우에 &lt;em&gt;카운트가&lt;/em&gt; 네거티브이고, 우측 시프트를 행한다</target>
        </trans-unit>
        <trans-unit id="5905bfba811efd936414e9db6f91154ff1bcb612" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;count&lt;/em&gt; is zero, &lt;em&gt;value&lt;/em&gt; is inserted at &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="translated">경우에 &lt;em&gt;카운트가&lt;/em&gt; 제로이고, &lt;em&gt;값이&lt;/em&gt; 삽입된다 &lt;em&gt;인덱스&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ce2f1b6b72d1830f1bec3b922c6517174b82ef04" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;decimal_places&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, all significant decimal places are printed (similar to &lt;code&gt;#to_s&lt;/code&gt;). If the argument has a numeric value, the number of visible decimal places will be fixed to that amount.</source>
          <target state="translated">경우 &lt;em&gt;DECIMAL_PLACES가&lt;/em&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , 모든 중요한 소수점은 (유사 인쇄 &lt;code&gt;#to_s&lt;/code&gt; ). 인수에 숫자 값이 있으면 표시되는 소수점 이하 자릿수가 해당 양으로 고정됩니다.</target>
        </trans-unit>
        <trans-unit id="115a61602aeae7203aae7dece9983de6574631fd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;denominator&lt;/em&gt; is 0, this will raise an exception.</source>
          <target state="translated">경우 &lt;em&gt;분모가&lt;/em&gt; 0이며,이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4f36629bbf6c3d4cef6f46ab2b338c6c05c0d2fd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dest_dir&lt;/em&gt; is not a directory, raises an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;dest_dir&lt;/em&gt; 이 디렉토리가 아닌 경우 &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="bfee9e01c7a4bff75c159a7d05cc10d525bd9cbf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;directory_listing&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, directory listing is disabled. This means that paths matching directories are ignored and next handler is called.</source>
          <target state="translated">경우 &lt;em&gt;directory_listing이&lt;/em&gt; 있습니다 &lt;code&gt;false&lt;/code&gt; , 디렉토리 목록을 사용할 수 없습니다. 이는 디렉토리와 일치하는 경로가 무시되고 다음 핸들러가 호출됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c8b5d853bd93e12cea13f5afd52f21eb1556e369" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;expand_base&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;em&gt;base&lt;/em&gt; itself will be expanded in &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; if it is not an absolute path. This guarantees the method returns an absolute path (assuming that &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; is absolute).</source>
          <target state="translated">경우 &lt;em&gt;expand_base가&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; , &lt;em&gt;기초&lt;/em&gt; 자체가 확대 될 &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; 는 절대 경로가 아닌 경우. 이렇게하면 메서드가 절대 경로를 반환합니다 ( &lt;code&gt;&lt;a href=&quot;dir#current:String-class-method&quot;&gt;Dir.current&lt;/a&gt;&lt;/code&gt; 가 절대 경로라고 가정 ).</target>
        </trans-unit>
        <trans-unit id="dfff6100ca8880d8ae619d927854f24108d530ed" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;fallthrough&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, this handler does not call next handler when request method is neither GET or HEAD, then serves &lt;code&gt;405 Method Not Allowed&lt;/code&gt;. Otherwise, it calls next handler.</source>
          <target state="translated">경우 &lt;em&gt;위해 fallthrough이&lt;/em&gt; 있다 &lt;code&gt;false&lt;/code&gt; ,이 핸들러는 요청 방법도 GET 또는 HEAD입니다 다음 핸들러를 호출하지 않습니다, 다음 역할을 &lt;code&gt;405 Method Not Allowed&lt;/code&gt; . 그렇지 않으면 다음 핸들러를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f526ba3b4eb326f43ba94631830b6fa9dd84bd42" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;follow_symlinks&lt;/em&gt; is set (the default), symbolic links are followed. Otherwise, symbolic links return information on the symlink itself.</source>
          <target state="translated">경우 &lt;em&gt;follow_symlinks이&lt;/em&gt; (기본값)로 설정, 기호 링크 따라야한다. 그렇지 않으면 심볼릭 링크가 심볼릭 링크 자체에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d22c7ebe10fe7967f687cd9177e44841ed9f8838" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;headers&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, row values can be accessed with header names or patterns. Headers are always stripped.</source>
          <target state="translated">&lt;em&gt;headers&lt;/em&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;em&gt;헤더&lt;/em&gt; 이름 또는 패턴으로 행 값에 액세스 할 수 있습니다. 헤더는 항상 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="df996ed683780316a967e337fd14403d28d934ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;index&lt;/em&gt; is outside the bounds of the string, &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fbee7b3d6311cb0d870a5fbf1e230e260d6931" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;index&lt;/em&gt; is outside the bounds of the string, &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2eb1afe7020efb6c3e7594c8335ccd697d415c6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;key&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; contains a null-byte an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">경우 &lt;em&gt;키&lt;/em&gt; 또는 &lt;em&gt;값이&lt;/em&gt; 널 바이트를 포함하는 &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9e65be4b66c30ae73f6229f7368512720e9da983" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;limit&lt;/em&gt; is present, the array will be limited to &lt;em&gt;limit&lt;/em&gt; items and the final item will contain the remainder of the string.</source>
          <target state="translated">경우 &lt;em&gt;한계가&lt;/em&gt; 존재 배열이 제한됩니다 &lt;em&gt;제한&lt;/em&gt; 항목과 마지막 항목은 문자열의 나머지 부분을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="05d991cbb1a6f148364ea70b4bea463f4cfdb90b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;limit&lt;/em&gt; is present, up to &lt;em&gt;limit&lt;/em&gt; new strings will be created, with the entire remainder added to the last string.</source>
          <target state="translated">경우 &lt;em&gt;한계가&lt;/em&gt; 존재하는 최대 &lt;em&gt;한도&lt;/em&gt; 새로운 문자열은 마지막 문자열에 추가 전체 나머지, 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="956488a99c627f88b0b8d1646f6f57b3fc4ac483" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lower&lt;/em&gt; is true, lower camelcase will be returned (the first letter is downcased).</source>
          <target state="translated">경우 &lt;em&gt;낮은는&lt;/em&gt; 사실, 낮은 낙타 표기법은 (첫 글자가 downcased됩니다) 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bffa5477730573d263536395079bc63220191087" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lower&lt;/em&gt; is true, lower camelcase will be written (the first letter is downcased).</source>
          <target state="translated">경우 &lt;em&gt;낮은는&lt;/em&gt; 사실, 낮은 낙타 표기법은 (첫 글자가 downcased됩니다) 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="fff52173390ecb60674a8bd8d76db9e1610faa2d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;match_hidden&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; the pattern will match hidden files and folders.</source>
          <target state="translated">경우 &lt;em&gt;match_hidden이&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; 패턴은 숨겨진 파일과 폴더를 일치합니다.</target>
        </trans-unit>
        <trans-unit id="fccf4f6039a3be2aa91638eedd6a9ca9828b1e86" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;message&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, the default message for &lt;em&gt;status&lt;/em&gt; is used provided by &lt;code&gt;&lt;a href=&quot;../status#description:String?-instance-method&quot;&gt;HTTP::Status#description&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;message&lt;/em&gt; 가 &lt;code&gt;nil&lt;/code&gt; 인 경우 &lt;em&gt;status&lt;/em&gt; 의 기본 메시지 는 &lt;code&gt;&lt;a href=&quot;../status#description:String?-instance-method&quot;&gt;HTTP::Status#description&lt;/a&gt;&lt;/code&gt; 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="2d67ea054e60e53ff93b07e22b356d281d0ab5c0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;message&lt;/em&gt; is a string, it matches if the exception's error message contains that string. If &lt;em&gt;message&lt;/em&gt; is a regular expression, it is used to match the error message.</source>
          <target state="translated">경우 &lt;em&gt;메시지가&lt;/em&gt; 문자열 인 예외의 오류 메시지가 해당 문자열을 포함하는 경우, 그것은 일치합니다. &lt;em&gt;메시지&lt;/em&gt; 가 정규식 인 경우 오류 메시지와 일치시키는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0331c9ca7f98fa42634ea6fc79272138a5f13ea9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is greater than the size of &lt;code&gt;self&lt;/code&gt;, all values will be removed from &lt;code&gt;self&lt;/code&gt; without raising an error.</source>
          <target state="translated">경우 &lt;em&gt;n은&lt;/em&gt; 크기보다 큰 &lt;code&gt;self&lt;/code&gt; , 모든 값에서 삭제 &lt;code&gt;self&lt;/code&gt; 에러를 발생시키지 않고.</target>
        </trans-unit>
        <trans-unit id="ffda41aba9f04619155715dd2271140da5a593c6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offset&lt;/em&gt; is given, it defines the position to &lt;em&gt;end&lt;/em&gt; the search (elements beyond this point are ignored).</source>
          <target state="translated">경우 &lt;em&gt;오프셋이&lt;/em&gt; 주어집니다, 그것은 할 수있는 위치를 정의 &lt;em&gt;종료&lt;/em&gt; 검색 (이 지점을 넘어 요소는 무시됩니다).</target>
        </trans-unit>
        <trans-unit id="60d078df7bf0aab4171defe954eb11b9c30cc61f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offset&lt;/em&gt; is given, the search starts from that index towards the first elements in &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;em&gt;오프셋&lt;/em&gt; 주어진 검색이 최초의 요소를 향해 그 인덱스에서 시작하는 &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0238d61b41d5a362f7256c1e2c2a3ce19c122c25" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;port&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, the existing default port for the &lt;em&gt;scheme&lt;/em&gt;, if any, will be unregistered.</source>
          <target state="translated">경우 &lt;em&gt;포트&lt;/em&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 는 대한 기존의 기본 포트 &lt;em&gt;방식이&lt;/em&gt; 있는 경우, 등록 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="6977acf4283ba5a98a2bfca0a1ce4cc9efabf12d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;remove_empty&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, any empty strings are not yielded.</source>
          <target state="translated">경우 &lt;em&gt;remove_empty이&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; , 빈 문자열이 굴복하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ef8dc17fa9384b73c535ec7ba87f83d9e1b27d9f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;remove_empty&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, any empty strings are removed from the result.</source>
          <target state="translated">경우 &lt;em&gt;remove_empty이&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; , 빈 문자열은 결과에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="1684a4928ad6ac9568e1e053c3911624c9b10319" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, the method will create a new array for each chunk</source>
          <target state="translated">경우 &lt;em&gt;재사용&lt;/em&gt; 이다 &lt;code&gt;false&lt;/code&gt; , 상기 방법은 각 청크를위한 새로운 배열을 생성 할</target>
        </trans-unit>
        <trans-unit id="c451a834de5ed8b3bf6ff443447ee0473649b5ea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, the method will create a new array and reuse it.</source>
          <target state="translated">경우 &lt;em&gt;재사용이&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; , 방법은 새로운 배열을 생성하고 재사용 할 것이다.</target>
        </trans-unit>
        <trans-unit id="43891ffe4967f64ff183af8a6d31446ec93dd6a5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, that array will be reused</source>
          <target state="translated">경우 &lt;em&gt;재사용&lt;/em&gt; 이다 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; , 그 배열은 재사용 될</target>
        </trans-unit>
        <trans-unit id="37cfe537d2c94bf7215651550e0d45d92d7ac877" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, this array will be reused</source>
          <target state="translated">경우 &lt;em&gt;재사용&lt;/em&gt; 인 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 이 배열 재사용 될</target>
        </trans-unit>
        <trans-unit id="73bc52c555d7d08614f2ad6e46dbec1869f702c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an instance of &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; or a similar collection type (implementing &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;#shift&lt;/code&gt; and &lt;code&gt;#size&lt;/code&gt;) it will be used.</source>
          <target state="translated">&lt;em&gt;재사용&lt;/em&gt; 이 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; 또는 유사한 콜렉션 유형 의 인스턴스 인 경우 (구현 &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;#shift&lt;/code&gt; 및 &lt;code&gt;#size&lt;/code&gt; ) 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c7ecad99943e84db09dee5580ed37e4213eca24" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is an instance of &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; or a similar collection type (implementing &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;#shift&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;enumerable#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt;) it will be used.</source>
          <target state="translated">&lt;em&gt;재사용&lt;/em&gt; 이 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;deque&quot;&gt;Deque&lt;/a&gt;&lt;/code&gt; 또는 유사한 콜렉션 유형 의 인스턴스 인 경우 (구현 &lt;code&gt;#&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;#shift&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;enumerable#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt; ) 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="272a2b66d32510445ff1cbbc6b1ac09996322b98" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is falsey, the array will not be reused.</source>
          <target state="translated">경우 &lt;em&gt;재사용&lt;/em&gt; falsey이다 어레이 재사용하지 않는다.</target>
        </trans-unit>
        <trans-unit id="71c7aaa7bf4894847f2d8855c4c82b407a5d57f4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is given, the array can be reused</source>
          <target state="translated">경우 &lt;em&gt;재사용이&lt;/em&gt; 부여되며,이 배열은 재사용 될 수있다</target>
        </trans-unit>
        <trans-unit id="acdb08315081f9f2abf430f088329a2ad5ed8b73" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse&lt;/em&gt; is truthy, the method will create a new array and reuse it.</source>
          <target state="translated">경우 &lt;em&gt;재사용&lt;/em&gt; truthy이고, 상기 방법은 새로운 배열을 생성하고 재사용한다.</target>
        </trans-unit>
        <trans-unit id="a0f8a943e7ebf91fc52658b99bb50526423627e4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reuse_port&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, it enables the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; socket option, which allows multiple processes to bind to the same port.</source>
          <target state="translated">경우 &lt;em&gt;reuse_port이&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; , 그것은 수 &lt;code&gt;SO_REUSEPORT&lt;/code&gt; 의 같은 포트에 바인딩 여러 프로세스를 수있는 소켓 옵션을.</target>
        </trans-unit>
        <trans-unit id="460e68d8ef01e52ccd847c95228ab1a81ae0f55f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;separator&lt;/em&gt; is an empty regex (&lt;code&gt;//&lt;/code&gt;), the string will be separated into one-character strings.</source>
          <target state="translated">경우 &lt;em&gt;세퍼레이터&lt;/em&gt; (빈 정규식 &lt;code&gt;//&lt;/code&gt; ) 문자열 한 문자열로 분리한다.</target>
        </trans-unit>
        <trans-unit id="6c5f8cbaee524f2c4f2334388b72c4f46b8e6a02" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;separator&lt;/em&gt; is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), the string will be separated into one-character strings.</source>
          <target state="translated">경우 &lt;em&gt;세퍼레이터&lt;/em&gt; 빈 문자열이다 ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ) 문자열 한 문자열로 분리한다.</target>
        </trans-unit>
        <trans-unit id="1d3e1bca9ef7687283745e998a999eac4b830638" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;shell&lt;/em&gt; is false, the &lt;em&gt;command&lt;/em&gt; is the path to the executable to run, along with a list of &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">경우 &lt;em&gt;쉘이&lt;/em&gt; 거짓의 &lt;em&gt;명령&lt;/em&gt; 의 목록과 함께 실행할 수있는 실행 파일의 경로입니다 &lt;em&gt;인수&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f5dfd84ce3fd8c08742503259661e81a01e56d3b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;shell&lt;/em&gt; is true, the &lt;em&gt;command&lt;/em&gt; should be the full command line including space-separated args.</source>
          <target state="translated">경우 &lt;em&gt;쉘이&lt;/em&gt; 사실의 &lt;em&gt;명령은&lt;/em&gt; 공백으로 구분 된 인수를 포함하여 전체 명령 줄을해야합니다.</target>
        </trans-unit>
        <trans-unit id="725538d905b838905f9ab875e612f31912c2adb2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;significant&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, the number of &lt;em&gt;precision&lt;/em&gt; digits is preserved after the decimal separator.</source>
          <target state="translated">경우 &lt;em&gt;상당한가&lt;/em&gt; 인 &lt;code&gt;false&lt;/code&gt; 의 수 &lt;em&gt;정밀도&lt;/em&gt; 자리 소수 분리 후 보존된다.</target>
        </trans-unit>
        <trans-unit id="c96afdc56d5b9a96d63e0d74761eb1df8876ce12" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strict&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, unknown properties in the JSON document will raise a parse exception. The default is &lt;code&gt;false&lt;/code&gt;, so unknown properties are silently ignored.</source>
          <target state="translated">경우 &lt;em&gt;엄격한가&lt;/em&gt; 있다 &lt;code&gt;true&lt;/code&gt; 은 JSON 문서에서 알 수없는 속성은 구문 분석 예외가 발생합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 이므로 알 수없는 속성은 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0fefb1581a602a24a51452e46da58e4e30b5563c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strip&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, row values are stripped with &lt;code&gt;&lt;a href=&quot;string#strip(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; before being returned from methods.</source>
          <target state="translated">경우 &lt;em&gt;스트립&lt;/em&gt; 입니다 &lt;code&gt;true&lt;/code&gt; , 행 값으로 제거됩니다 &lt;code&gt;&lt;a href=&quot;string#strip(&amp;amp;block:Char-%3E_)-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; 방법에서 반환되기 전에.</target>
        </trans-unit>
        <trans-unit id="7f5619350cd94ed727536b115906de1cf65f9f36" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strip&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, row values are stripped with &lt;code&gt;&lt;a href=&quot;string#strip-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; before being returned from methods.</source>
          <target state="translated">경우 &lt;em&gt;스트립&lt;/em&gt; 입니다 &lt;code&gt;true&lt;/code&gt; , 행 값으로 제거됩니다 &lt;code&gt;&lt;a href=&quot;string#strip-instance-method&quot;&gt;String#strip&lt;/a&gt;&lt;/code&gt; 방법에서 반환되기 전에.</target>
        </trans-unit>
        <trans-unit id="00da179e0cf5508f54b883ae8b4b41f80e78faa5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;suffix&lt;/em&gt; is given, it is stripped from the end.</source>
          <target state="translated">경우 &lt;em&gt;접미사가&lt;/em&gt; 주어집니다, 그것은 끝에서 제거된다.</target>
        </trans-unit>
        <trans-unit id="57b9dd1a18c0f04acbb6bd1d460d97e4ee61da98" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;suffix&lt;/em&gt; is present at the end of &lt;em&gt;path&lt;/em&gt;, it is removed.</source>
          <target state="translated">경우 &lt;em&gt;접미어&lt;/em&gt; 의 끝에 존재 &lt;em&gt;로&lt;/em&gt; 이를 제거한다.</target>
        </trans-unit>
        <trans-unit id="8fd6c4ea1183c6cb703cc6142ce080e7dea54752" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tls&lt;/em&gt; is given it will be used, if not a new TLS context will be created. If &lt;em&gt;tls&lt;/em&gt; is given and &lt;em&gt;uri&lt;/em&gt; is a HTTP URI, &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised. In any case the active context can be accessed through &lt;code&gt;&lt;a href=&quot;client#tls-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;em&gt;TLS가&lt;/em&gt; 주어진다으로 새 TLS 컨텍스트가 생성 될 경우는, 사용됩니다. 경우 &lt;em&gt;TLS가&lt;/em&gt; 제공되고 &lt;em&gt;URI는&lt;/em&gt; HTTP를 URI이다, &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 발생합니다. 어쨌든 활성 컨텍스트는 &lt;code&gt;&lt;a href=&quot;client#tls-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c379043ff3594986fc6183b2c9a437092428c69" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tls&lt;/em&gt; is given it will be used, if not a new TLS context will be created. If &lt;em&gt;tls&lt;/em&gt; is given and &lt;em&gt;uri&lt;/em&gt; is a HTTP URI, &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised. In any case the active context can be accessed through &lt;code&gt;&lt;a href=&quot;client#tls:OpenSSL::SSL::Context::Client-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;tls&lt;/em&gt; 가 제공 되면 사용되며, 그렇지 않으면 새 TLS 컨텍스트가 생성됩니다. 경우 &lt;em&gt;TLS가&lt;/em&gt; 제공되고 &lt;em&gt;URI는&lt;/em&gt; HTTP를 URI이다, &lt;code&gt;&lt;a href=&quot;../argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 발생합니다. 어떤 경우에도 활성 컨텍스트는 &lt;code&gt;&lt;a href=&quot;client#tls:OpenSSL::SSL::Context::Client-instance-method&quot;&gt;#tls&lt;/a&gt;&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba20ca9f75b8443d3f1bb355bcb98a37b25105fb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;to&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, iteration is open ended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd458694ffcc4a1f6a690d5aea29ba6ff5b7d49a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;trailing_string&lt;/em&gt; is given, it will be appended to the result unless this array is empty. This lets you splat an array and optionally write a trailing comma if needed.</source>
          <target state="translated">경우 &lt;em&gt;trailing_string이&lt;/em&gt; 주어집니다, 그것은이 배열은 빈 상태 (empty)이 아닌 결과에 추가됩니다. 이를 통해 배열을 표시하고 필요한 경우 후행 쉼표를 선택적으로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ea19159934dac81ccdfd55dbbd27fab3e0d80b2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;trailing_string&lt;/em&gt; is given, it will be appended to the result unless this hash is empty. This lets you splat a hash and optionally write a trailing comma if needed.</source>
          <target state="translated">경우 &lt;em&gt;trailing_string이&lt;/em&gt; 주어집니다, 그것은이 해시는 빈 상태 (empty)이 아닌 결과에 추가됩니다. 이를 통해 해시를 표시하고 필요한 경우 후행 쉼표를 선택적으로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4eb308eca6bac920389452dc48babc78692dae13" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;type&lt;/em&gt; is not a valid restriction for the expression type, it is a compile-time error. If &lt;em&gt;type&lt;/em&gt; is a valid restriction for the expression, but &lt;code&gt;self&lt;/code&gt; can't be restricted to &lt;em&gt;type&lt;/em&gt;, it raises at runtime. &lt;em&gt;type&lt;/em&gt; may be a wider restriction than the expression type, the resulting type is narrowed to the minimal restriction.</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt; 이 식 유형에 대해 유효한 제한이 아닌 경우 컴파일 타임 오류입니다. 경우 &lt;em&gt;유형&lt;/em&gt; 표현에 대한 유효한 제한하지만, &lt;code&gt;self&lt;/code&gt; 제한 될 수없는 &lt;em&gt;입력&lt;/em&gt; , 그것은 런타임에 발생합니다. &lt;em&gt;유형&lt;/em&gt; 은 표현식 유형보다 더 넓은 제한 일 수 있으며 결과 유형은 최소 제한으로 좁혀집니다.</target>
        </trans-unit>
        <trans-unit id="0a4f47777321239bbad1144e63dabb61454f1c71" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;uri&lt;/em&gt; is &lt;code&gt;&lt;a href=&quot;uri#absolute?:Bool-instance-method&quot;&gt;#absolute?&lt;/a&gt;&lt;/code&gt;, or if this URI is &lt;code&gt;&lt;a href=&quot;uri#opaque?:Bool-instance-method&quot;&gt;#opaque?&lt;/a&gt;&lt;/code&gt;, then an exact copy of &lt;em&gt;uri&lt;/em&gt; is returned.</source>
          <target state="translated">만약 &lt;em&gt;URI&lt;/em&gt; 입니다 &lt;code&gt;&lt;a href=&quot;uri#absolute?:Bool-instance-method&quot;&gt;#absolute?&lt;/a&gt;&lt;/code&gt; 또는이 URI가 &lt;code&gt;&lt;a href=&quot;uri#opaque?:Bool-instance-method&quot;&gt;#opaque?&lt;/a&gt;&lt;/code&gt; 경우 &lt;em&gt;uri&lt;/em&gt; 의 정확한 사본 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ec201bb966188105c8ad4c91c6479a116e74e6f5" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;break&lt;/code&gt; receives many arguments, they are automatically transformed to a &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt;:</source>
          <target state="translated">경우 &lt;code&gt;break&lt;/code&gt; 많은 인수를 받아, 그들은 자동으로 변환되는 &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;튜플&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0b24d2ecb05952057f3291d41e23ff7d03e2a1ac" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;break&lt;/code&gt; receives no arguments, it's the same as receiving a single &lt;code&gt;nil&lt;/code&gt; argument:</source>
          <target state="translated">경우 &lt;code&gt;break&lt;/code&gt; 인수를받지 않습니다, 그것은 하나의 수신과 동일합니다 &lt;code&gt;nil&lt;/code&gt; 인수를 :</target>
        </trans-unit>
        <trans-unit id="86ad0bae85f62fbd9b3784141c15526304a7c805" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;next&lt;/code&gt; receives many arguments, they are automatically transformed to a &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple&lt;/a&gt;. If it receives no arguments it's the same as receiving a single &lt;code&gt;nil&lt;/code&gt; argument.</source>
          <target state="translated">만약 &lt;code&gt;next&lt;/code&gt; 인수가 많은 인수를 수신 자동으로 &lt;a href=&quot;http://crystal-lang.org/api/Tuple.html&quot;&gt;Tuple로&lt;/a&gt; 변환됩니다 . 인수를받지 못하면 단일 &lt;code&gt;nil&lt;/code&gt; 인수 를받는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d90deef2f1796c81473a99bc04948113b105bcea" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;when&lt;/code&gt;'s expression is a type, &lt;code&gt;is_a?&lt;/code&gt; is used. Additionally, if the case expression is a variable or a variable assignment the type of the variable is restricted:</source>
          <target state="translated">A는 경우 &lt;code&gt;when&lt;/code&gt; 의 표현 형식이다 &lt;code&gt;is_a?&lt;/code&gt; 사용. 또한 케이스 표현식이 변수 또는 변수 지정 인 경우 변수 유형이 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="554c18f585bf1139efd97817741c6c3ae42ff6ce" translate="yes" xml:space="preserve">
          <source>If a C function executes a user-provided callback that might raise, it must be annotated with the &lt;code&gt;@[Raises]&lt;/code&gt; annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1275db804d6f688817d997747002010d07281288" translate="yes" xml:space="preserve">
          <source>If a C function executes a user-provided callback that might raise, it must be annotated with the &lt;code&gt;@[Raises]&lt;/code&gt; attribute.</source>
          <target state="translated">C 함수가 발생할 수있는 사용자 제공 콜백을 실행하는 경우 &lt;code&gt;@[Raises]&lt;/code&gt; 속성 으로 주석을 달아야 합니다.</target>
        </trans-unit>
        <trans-unit id="4624e5f4350d5bfe950e64b9d775049af83af268" translate="yes" xml:space="preserve">
          <source>If a block has a single argument and invokes a method on it, the block can be replaced with the short syntax argument.</source>
          <target state="translated">블록에 단일 인수가 있고 그 위에 메소드를 호출하면 블록을 짧은 구문 인수로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5a9bf8208727848fc168ed5956db5e366183b47" translate="yes" xml:space="preserve">
          <source>If a block has a single parameter and invokes a method on it, the block can be replaced with the short syntax argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda02f6332b9a517b76784d07383f35c533591d2" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a getter is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#class_getter(*names,&amp;amp;block)-macro&quot;&gt;#class_getter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">매크로가 블록에 제공되면 블록 내용으로 지연 초기화되는 변수로 게터가 생성됩니다. 예를 들어 &lt;code&gt;&lt;a href=&quot;object#class_getter(*names,&amp;amp;block)-macro&quot;&gt;#class_getter&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . . .</target>
        </trans-unit>
        <trans-unit id="f3255356325e21f103994e0f204ebb59138c35ca" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a getter is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#getter(*names,&amp;amp;block)-macro&quot;&gt;#getter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">매크로가 블록에 주어진 경우, 블록 내용으로 지연 초기화되는 변수를 사용하여 게터가 생성됩니다 (예 : &lt;code&gt;&lt;a href=&quot;object#getter(*names,&amp;amp;block)-macro&quot;&gt;#getter&lt;/a&gt;&lt;/code&gt; 참조) . . .</target>
        </trans-unit>
        <trans-unit id="6a5e92ae62fb761acc8ca32626109f7bbce4d456" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a getter is generated with a variable that is lazily initialized with the block's contents:</source>
          <target state="translated">매크로가 블록에 주어지면 게터는 블록의 내용으로 느리게 초기화되는 변수로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="968e2064a6b9d129f86af5ba7c53fb91181908a3" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a property is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#class_property(*names,&amp;amp;block)-macro&quot;&gt;#class_property&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">매크로가 블록에 제공되면 블록 내용으로 지연 초기화되는 변수를 사용하여 속성이 생성됩니다. 예를 들어 &lt;code&gt;&lt;a href=&quot;object#class_property(*names,&amp;amp;block)-macro&quot;&gt;#class_property&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . . .</target>
        </trans-unit>
        <trans-unit id="773fb2a94f5c917726e3e308539d9daddbb11923" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a property is generated with a variable that is lazily initialized with the block's contents, for examples see &lt;code&gt;&lt;a href=&quot;object#property(*names,&amp;amp;block)-macro&quot;&gt;#property&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">매크로가 블록에 제공되면 블록의 내용으로 느리게 초기화되는 변수로 속성이 생성됩니다. 예를 들어 &lt;code&gt;&lt;a href=&quot;object#property(*names,&amp;amp;block)-macro&quot;&gt;#property&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . . .</target>
        </trans-unit>
        <trans-unit id="9fcf39e23eb0d908c8c0b74559ca49c69c448fab" translate="yes" xml:space="preserve">
          <source>If a block is given to the macro, a property is generated with a variable that is lazily initialized with the block's contents:</source>
          <target state="translated">매크로가 블록에 주어지면, 블록 내용으로 느리게 초기화되는 변수로 속성이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d25cbfd0418113ef3d1669d23d04affb698639e4" translate="yes" xml:space="preserve">
          <source>If a class defines a &lt;code&gt;finalize&lt;/code&gt; method, when an instance of that class is garbage-collected that method will be invoked:</source>
          <target state="translated">클래스가 &lt;code&gt;finalize&lt;/code&gt; 메소드를 정의하면 해당 클래스의 인스턴스가 가비지 수집 될 때 해당 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4dc3832dd2ff2b1092aedb57ee07ac8681f721d9" translate="yes" xml:space="preserve">
          <source>If a class defines a &lt;code&gt;new&lt;/code&gt; or &lt;code&gt;initialize&lt;/code&gt; then its superclass constructors are not inherited:</source>
          <target state="translated">클래스가 &lt;code&gt;new&lt;/code&gt; 클래스를 정의 하거나 &lt;code&gt;initialize&lt;/code&gt; 하면 수퍼 클래스 생성자가 상속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c53a94921a12c91801261440bc9e9867c6f7338" translate="yes" xml:space="preserve">
          <source>If a connection can't be created, or if a connection loss occurs while the statement is performed the above process is repeated.</source>
          <target state="translated">연결을 만들 수 없거나 명령문이 수행되는 동안 연결이 끊어지면 위의 프로세스가 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="309d0203d542b54f01020c65e0417a449527233b" translate="yes" xml:space="preserve">
          <source>If a connection is lost or can't be established retry at most &lt;code&gt;retry_attempts&lt;/code&gt; times waiting &lt;code&gt;retry_delay&lt;/code&gt; seconds between each try.</source>
          <target state="translated">연결이 끊어 지거나 설정할 수없는 경우 각 시도 사이에 &lt;code&gt;retry_delay&lt;/code&gt; 초 대기하는 최대 &lt;code&gt;retry_attempts&lt;/code&gt; 시간에 재 시도하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8a982b21b46b69125af765ff5d3d1dae7ce6efe" translate="yes" xml:space="preserve">
          <source>If a directory named &quot;filename&quot; is found and it contains a file named &quot;filename.cr&quot; directly underneath it, it is required.</source>
          <target state="translated">&quot;filename&quot;이라는 디렉토리가 발견되고 &quot;filename.cr&quot;이라는 이름의 파일이 바로 아래에 포함 된 경우에는 필수입니다.</target>
        </trans-unit>
        <trans-unit id="5e11533df20d53af351c31a9f8d7e6aa4d799230" translate="yes" xml:space="preserve">
          <source>If a directory named &quot;filename&quot; is found with a directory &quot;src&quot; in it and it contains a directory named &quot;filename&quot; directly underneath it with a &quot;filename.cr&quot; file inside it, it is required.</source>
          <target state="translated">&quot;filename&quot;이라는 디렉토리가 &quot;src&quot;디렉토리에 있고 그 안에 &quot;filename.cr&quot;파일이있는 &quot;filename&quot;이라는 디렉토리가 있으면 그 디렉토리가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="73ffab83dfb6539dbe52609e3cf715bc11b94d67" translate="yes" xml:space="preserve">
          <source>If a directory named &quot;filename&quot; is found with a directory &quot;src&quot; in it and it contains a file named &quot;filename.cr&quot; directly underneath it, it is required.</source>
          <target state="translated">&quot;filename&quot;이라는 이름의 디렉토리가 &quot;src&quot;디렉토리에 있고 그 아래에 &quot;filename.cr&quot;이라는 이름의 파일이 있으면 그 디렉토리가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="20c7979eadf699837e62443808e4d73ebef44e38" translate="yes" xml:space="preserve">
          <source>If a file named &quot;filename.cr&quot; is found in the require path, it is required.</source>
          <target state="translated">&quot;filename.cr&quot;이라는 파일이 require 경로에 있으면 파일이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="28468817fe8e7e6797b5ba70b2570b89887a4ff0" translate="yes" xml:space="preserve">
          <source>If a file named &quot;filename.cr&quot; is found relative to the current file, it is required.</source>
          <target state="translated">&quot;filename.cr&quot;이라는 파일이 현재 파일과 관련이있는 경우 파일이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="32f9561c964634c2d022a4372cad8b4a126620bd" translate="yes" xml:space="preserve">
          <source>If a location has only one offset (such as &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt;) it is considered &lt;em&gt;fixed&lt;/em&gt;.</source>
          <target state="translated">위치에 &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;UTC&lt;/a&gt;&lt;/code&gt; 와 같은 오프셋이 하나만 있으면 &lt;em&gt;고정 된&lt;/em&gt; 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b311403f23440df1393607caac90911054301e0" translate="yes" xml:space="preserve">
          <source>If a response has a &lt;code&gt;Content-Type&lt;/code&gt; header with a charset, that charset is set as the encoding of the returned IO (or used for creating a String for the body). Invalid bytes in the given encoding are silently ignored when reading text content.</source>
          <target state="translated">응답 에 문자 세트 가있는 &lt;code&gt;Content-Type&lt;/code&gt; 헤더가있는 경우 해당 문자 세트는 리턴 된 IO의 인코딩으로 설정되거나 본문의 문자열을 작성하는 데 사용됩니다. 주어진 인코딩에서 유효하지 않은 바이트는 텍스트 내용을 읽을 때 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="29c0c6d5033d8a26831d04bff23deaba4617edb5" translate="yes" xml:space="preserve">
          <source>If a set starts with a ^, it is negated. The sequence c1-c2 means all characters between and including c1 and c2 and is known as a range.</source>
          <target state="translated">세트가 ^로 시작하면 무효화됩니다. c1-c2 시퀀스는 c1과 c2 사이의 모든 문자를 의미하며 범위라고합니다.</target>
        </trans-unit>
        <trans-unit id="29bc19ca9733034c745ef2a08e6efcada1bf810b" translate="yes" xml:space="preserve">
          <source>If a string with those contents was already present in the pool, that one is returned. Otherwise a new string is created, put in the pool and returned.</source>
          <target state="translated">해당 내용이 포함 된 문자열이 이미 풀에 있으면 해당 문자열이 반환됩니다. 그렇지 않으면 새 문자열이 작성되어 풀에 넣어 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="296d5c6ea451381e09f3824461d839430ce28726" translate="yes" xml:space="preserve">
          <source>If a type declaration is given, a variable with that name is declared with that type, as nilable.</source>
          <target state="translated">타입 선언이 주어지면, 그 이름을 가진 변수는 그 타입으로 nilable로 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="0528e9deaae7ee8b5857c66327d14eef4f1934f3" translate="yes" xml:space="preserve">
          <source>If a type declaration is given, a variable with that name is declared with that type.</source>
          <target state="translated">유형 선언이 제공되면 해당 이름의 변수가 해당 유형으로 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="0c0b544a5bb8f8f33b23206e23d5af2b7a55431b" translate="yes" xml:space="preserve">
          <source>If a type defines a &lt;code&gt;to_unsafe&lt;/code&gt; method, when passing it to C the value returned by this method will be passed. For example:</source>
          <target state="translated">유형이 &lt;code&gt;to_unsafe&lt;/code&gt; 메소드를 정의하면 C에 전달할 때이 메소드가 리턴 한 값이 전달됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7de33be1a14369f4655c08c0d8e3fc92e9cfa818" translate="yes" xml:space="preserve">
          <source>If a value already exists for &lt;code&gt;key&lt;/code&gt;, that (old) value is returned. Otherwise the given block is invoked with &lt;em&gt;key&lt;/em&gt; and its value is returned.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 에 대한 값이 이미 존재 하면 해당 (이전) 값이 반환됩니다. 그렇지 않으면 주어진 블록이 &lt;em&gt;키로&lt;/em&gt; 호출 되고 그 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7ca2fb4c2d48f906ba4e7129cead6edd36b249b1" translate="yes" xml:space="preserve">
          <source>If a variable is the condition of an &lt;code&gt;if&lt;/code&gt;, inside the &lt;code&gt;then&lt;/code&gt; branch the variable will be considered as not having the &lt;code&gt;Nil&lt;/code&gt; type:</source>
          <target state="translated">변수가 &lt;code&gt;if&lt;/code&gt; 의 조건 인 경우 &lt;code&gt;then&lt;/code&gt; 분기 내부 에서 변수는 &lt;code&gt;Nil&lt;/code&gt; 유형이 없는 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd7a8c3abdcbe456f939bef9243b80fa3fb882bb" translate="yes" xml:space="preserve">
          <source>If all elements are equal, the comparison is based on the size of the arrays.</source>
          <target state="translated">모든 요소가 동일하면 비교는 배열의 크기를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="a7fdcd001c33b216adca2d93b3602f5b1a19e4ce" translate="yes" xml:space="preserve">
          <source>If all the elements are equal, then the result is based on a comparison of the tuple sizes. Thus, two tuples are &quot;equal&quot; according to &lt;code&gt;&lt;a href=&quot;tuple#(other:self)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; if, and only if, they have the same size and the value of each element is equal to the value of the corresponding element in the other tuple.</source>
          <target state="translated">모든 요소가 동일하면 결과는 튜플 크기의 비교를 기반으로합니다. 따라서 두 튜플의 크기가 같고 각 요소의 값이 다른 튜플의 해당 요소의 값과 같은 경우에만 &lt;code&gt;&lt;a href=&quot;tuple#(other:self)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; &amp;lt;=&amp;gt;에 따라 &quot;동일&quot; 합니다.</target>
        </trans-unit>
        <trans-unit id="28238e464f82ac83594452ad3d15d6ee8311283e" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt; branch is empty, or it&amp;rsquo;s missing, it&amp;rsquo;s considered as if it had &lt;code&gt;nil&lt;/code&gt; in it:</source>
          <target state="translated">는 IF &lt;code&gt;if&lt;/code&gt; 지점이 비어 있거나 누락의 IT했던 것처럼, 그것은 간주 &lt;code&gt;nil&lt;/code&gt; 그것에 :</target>
        </trans-unit>
        <trans-unit id="7bca3ea9dbbaacf32811461e40b613efa549724b" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt;'s condition is &lt;code&gt;var.nil?&lt;/code&gt; then the type of &lt;code&gt;var&lt;/code&gt; in the &lt;code&gt;then&lt;/code&gt; branch is known by the compiler to be &lt;code&gt;Nil&lt;/code&gt;, and to be known as non-&lt;code&gt;Nil&lt;/code&gt; in the &lt;code&gt;else&lt;/code&gt; branch:</source>
          <target state="translated">에 If &lt;code&gt;if&lt;/code&gt; 의 조건은 &lt;code&gt;var.nil?&lt;/code&gt; 다음의 유형 &lt;code&gt;var&lt;/code&gt; 에서 &lt;code&gt;then&lt;/code&gt; 지점은되도록 컴파일러 알려져 &lt;code&gt;Nil&lt;/code&gt; , 및 비라고도 할 &lt;code&gt;Nil&lt;/code&gt; 에서 &lt;code&gt;else&lt;/code&gt; 지점 :</target>
        </trans-unit>
        <trans-unit id="e3e5a233d577ff732f4c518211068ebd91019d57" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt;'s condition is a &lt;code&gt;responds_to?&lt;/code&gt; test, in the &lt;code&gt;then&lt;/code&gt; branch the type of a variable is guaranteed to be restricted to the types that respond to that method:</source>
          <target state="translated">는 IF &lt;code&gt;if&lt;/code&gt; 의 조건은이다 &lt;code&gt;responds_to?&lt;/code&gt; 테스트 &lt;code&gt;then&lt;/code&gt; 분기에서 변수 유형은 해당 메소드에 응답하는 유형으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="a2eb49eced4ef35afb79545782ff0d82f0e21965" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt;'s condition is an &lt;code&gt;is_a?&lt;/code&gt; test, the type of a variable is guaranteed to be restricted by that type in the &lt;code&gt;then&lt;/code&gt; branch.</source>
          <target state="translated">는 IF &lt;code&gt;if&lt;/code&gt; 의 조건은이다 &lt;code&gt;is_a?&lt;/code&gt; 테스트에서 변수 유형은 &lt;code&gt;then&lt;/code&gt; 분기 에서 해당 유형에 의해 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="972a3ca3d3cfcb7795698193335367b6ccbb24d9" translate="yes" xml:space="preserve">
          <source>If an encoding is not set, the default one is UTF-8.</source>
          <target state="translated">인코딩이 설정되지 않은 경우 기본 인코딩은 UTF-8입니다.</target>
        </trans-unit>
        <trans-unit id="93fdb6d64dcc5bc9608ffe1ffa361a0151e5ce5c" translate="yes" xml:space="preserve">
          <source>If an enum's value doesn't match a member's value, the raw value is returned as a string.</source>
          <target state="translated">열거 형 값이 멤버 값과 일치하지 않으면 원시 값이 문자열로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a0a438805c1dbc6915edc3c31e83678fe2bbd339" translate="yes" xml:space="preserve">
          <source>If any configurations or choices in Crystal regarding SSL settings and security are found to be lacking or need improvement please &lt;a href=&quot;https://github.com/crystal-lang/crystal/issues/new&quot;&gt;open an issue&lt;/a&gt; and let us know.</source>
          <target state="translated">SSL 설정 및 보안과 관련하여 Crystal에서 구성 또는 선택 사항이 없거나 개선이 필요한 &lt;a href=&quot;https://github.com/crystal-lang/crystal/issues/new&quot;&gt;경우 문제&lt;/a&gt; 를 열어 알려주십시오.</target>
        </trans-unit>
        <trans-unit id="7fc4a06e0c9b4cb3f0d3cd847a9ce5405b06999c" translate="yes" xml:space="preserve">
          <source>If any such thing is marked with &lt;code&gt;focus: true&lt;/code&gt; then only those examples will run.</source>
          <target state="translated">그러한 것들에 &lt;code&gt;focus: true&lt;/code&gt; 이 표시되어 있으면 true입니다. 그런 경우 해당 예제 만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="4469f519d20cfd1b7cdd7fde6f9ad62038fcb4e0" translate="yes" xml:space="preserve">
          <source>If for any reason you can't or don't want to use one of the previous installation methods, you can still download Crystal in a standalone .tar.gz file with everything you need to get started.</source>
          <target state="translated">어떤 이유로 든 이전 설치 방법 중 하나를 사용하지 않거나 사용하지 않으려는 경우 시작하는 데 필요한 모든 것을 갖춘 독립 실행 형 .tar.gz 파일로 Crystal을 다운로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="385688564b637f21d4357f4e0ce387a98a4f7e8e" translate="yes" xml:space="preserve">
          <source>If in the handler chain this header is overridden to &lt;code&gt;Connection: close&lt;/code&gt;, then the connection will not be reused after the request has been processed.</source>
          <target state="translated">핸들러 체인에서이 헤더가 &lt;code&gt;Connection: close&lt;/code&gt; 대체 되면 요청이 처리 된 후 연결이 재사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cea8a35cdabe9e52a13baf969fcdd1c8c87adbee" translate="yes" xml:space="preserve">
          <source>If it is impossible for a type to be restricted by another type, a compile-time error is issued:</source>
          <target state="translated">다른 유형으로 유형을 제한 할 수없는 경우 컴파일 타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0946538feb79690729e16e7903db8a75f9865387" translate="yes" xml:space="preserve">
          <source>If it passes, then the pipeline will move onto the second job we defined here which &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/#pages&quot;&gt;we must name&lt;/a&gt; &quot;pages&quot;. This is a special job just for deploying content to your gitlab pages site! This one is executed after tests have passed because we specified that it should occur in the &quot;deploy&quot; stage. It again runs the commands in &lt;code&gt;script&lt;/code&gt; (this time building the docs), but this time we tell it to preserve the path &lt;code&gt;public&lt;/code&gt; (where we stashed the docs) as an artifact of the job.</source>
          <target state="translated">통과하면 파이프 라인은 여기서 정의한 두 번째 작업으로 이동 &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/#pages&quot;&gt;하며&lt;/a&gt; &quot;페이지&quot; 라는 이름을 지정해야합니다 . 이것은 gitlab 페이지 사이트에 콘텐츠를 배포하기위한 특별한 작업입니다! 이것은 &quot;배포&quot;단계에서 발생하도록 지정했기 때문에 테스트를 통과 한 후에 실행됩니다. &lt;code&gt;script&lt;/code&gt; 에서 명령을 다시 실행 하지만 (이번에는 문서 작성), 이번에 는 작업의 아티팩트로서 &lt;code&gt;public&lt;/code&gt; 경로 (문서를 숨긴 위치) 를 보존하도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="e3a93e8b288ee4de32903b58922b5bfa5b952de6" translate="yes" xml:space="preserve">
          <source>If logging to multiple locations is required, an &lt;code&gt;&lt;a href=&quot;io/multiwriter&quot;&gt;IO::MultiWriter&lt;/a&gt;&lt;/code&gt; can be used.</source>
          <target state="translated">여러 위치에 로깅이 필요한 경우 &lt;code&gt;&lt;a href=&quot;io/multiwriter&quot;&gt;IO::MultiWriter&lt;/a&gt;&lt;/code&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ab481b872d208e634ee411b824c732f9e72242b" translate="yes" xml:space="preserve">
          <source>If multiple annotations of the same type are applied, the &lt;code&gt;.annotation&lt;/code&gt; method will return the &lt;em&gt;last&lt;/em&gt; one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c217a922f6fc129df64f00228e51d2a7f58788" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered for the same spec, the blocks defined in the outermost context go first. Blocks on the same context are executed in order of definition.</source>
          <target state="translated">동일한 스펙에 여러 블록이 등록 된 경우 가장 바깥 쪽 컨텍스트에 정의 된 블록이 먼저 이동합니다. 동일한 컨텍스트의 블록은 정의 된 순서대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6e6ff6ccc20eb475828f6f2b95538575d0e04599" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered on the same context, they are executed in order of definition.</source>
          <target state="translated">동일한 컨텍스트에 여러 블록이 등록 된 경우 정의 된 순서대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="7e6f22de11e26a8e1484dda50c08d119ab0085ce" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered they run in the order that they are given.</source>
          <target state="translated">여러 블록이 등록 된 경우 주어진 순서대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="8c6fef3d734fecba44a536270e0b9dd6cab28d13" translate="yes" xml:space="preserve">
          <source>If multiple blocks are registered they run in the reversed order that they are given.</source>
          <target state="translated">여러 개의 블록이 등록 된 경우 주어진 순서와 반대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="017abab863def559b69d37c00a872a39ad1060a1" translate="yes" xml:space="preserve">
          <source>If multiple heredocs start in the same line, their bodies are read sequentially:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad73e78278f9484f7b0fbf6bb49ebecd32051ac" translate="yes" xml:space="preserve">
          <source>If necessary a variable can be defined as a union type at compile time</source>
          <target state="translated">필요한 경우 컴파일 타임에 변수를 공용체 유형으로 정의 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="58e98a80654eceeb65aba067e72ab9c54378da31" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;source&lt;/code&gt; argument is provided, the Crystal source is read from standard input. The binary executable is stored in a temporary location between compiling and running.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 인수가 제공 되지 않으면 표준 입력에서 Crystal 소스를 읽습니다. 이진 실행 파일은 컴파일과 실행 사이의 임시 위치에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="4e5c36032086e8d25d1ee94fc16efdd9aa72ba1c" translate="yes" xml:space="preserve">
          <source>If no command is given, &lt;code&gt;install&lt;/code&gt; will be run by default.</source>
          <target state="translated">명령이 없으면 기본적으로 &lt;code&gt;install&lt;/code&gt; 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="d65837f03ca6eb16967c172d8f011101ae9ec2e8" translate="yes" xml:space="preserve">
          <source>If no encoding is set, this is the same as &lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인코딩이 설정되지 않은 경우 &lt;code&gt;&lt;a href=&quot;io#read(slice:Bytes)-instance-method&quot;&gt;#read(slice)&lt;/a&gt;&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="f634a6142d7788c2424463a1543fcd14444cc918" translate="yes" xml:space="preserve">
          <source>If no encoding is set, this is the same as &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인코딩이 설정되지 않은 경우 &lt;code&gt;&lt;a href=&quot;io#read_byte:UInt8?-instance-method&quot;&gt;#read_byte&lt;/a&gt;&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="68c3ae19aa60292eaffd48e18f07b0724f82ad31" translate="yes" xml:space="preserve">
          <source>If no set is given, all characters are matched.</source>
          <target state="translated">세트를 지정하지 않으면 모든 문자가 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d6eb809c04bae729e529facf3e683320653a4155" translate="yes" xml:space="preserve">
          <source>If no time zone data could be found (i.e. the previous methods failed), &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">표준 시간대 데이터를 찾을 수 없으면 (즉, 이전 방법이 실패한 경우) &lt;code&gt;&lt;a href=&quot;location#UTC&quot;&gt;Location::UTC&lt;/a&gt;&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cb03fa512ad66ec4676da7b846b3c82347188876" translate="yes" xml:space="preserve">
          <source>If one of the branches never reaches past the end of an &lt;code&gt;if&lt;/code&gt;, like in the case of a &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;raise&lt;/code&gt;, that type is not considered at the end of the &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">분기 중 하나가 &lt;code&gt;if&lt;/code&gt; 의 끝을지나 도달하지 못하면 , &lt;code&gt;return&lt;/code&gt; , &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;raise&lt;/code&gt; 의 &lt;code&gt;if&lt;/code&gt; 와 같이 if 의 끝에서 해당 유형이 고려되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="66926c43b273615d7a07ef1bd9e1558cc0e8b4eb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;JSON::Serializable::Strict&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the JSON document will raise a parse exception. By default the unknown properties are silently ignored. If the &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;JSON::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the JSON document will be stored in a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;)&lt;/code&gt;. On serialization, any keys inside json_unmapped will be serialized and appended to the current json object.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;JSON::Serializable::Strict&lt;/a&gt;&lt;/code&gt; 모듈이 포함되면, JSON 문서에서 알 수없는 속성은 구문 분석 예외가 발생합니다. 기본적으로 알 수없는 속성은 자동으로 무시됩니다. &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;JSON::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; 모듈이 포함되어 있으면 JSON 문서의 알 수없는 속성이 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;JSON::Any&lt;/a&gt;)&lt;/code&gt; 됩니다. 직렬화하면 json_unmapped 내의 모든 키가 직렬화되어 현재 json 객체에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="47f1cee8780d6c7edf11074277c01476f2a7365f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;YAML::Serializable::Strict&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the YAML document will raise a parse exception. By default the unknown properties are silently ignored. If the &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;YAML::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; module is included, unknown properties in the YAML document will be stored in a &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;)&lt;/code&gt;. On serialization, any keys inside yaml_unmapped will be serialized appended to the current yaml object.</source>
          <target state="translated">는 IF &lt;code&gt;&lt;a href=&quot;serializable/strict&quot;&gt;YAML::Serializable::Strict&lt;/a&gt;&lt;/code&gt; 모듈이 포함되면, YAML 문서에서 알 수없는 속성은 구문 분석 예외가 발생합니다. 기본적으로 알 수없는 속성은 자동으로 무시됩니다. &lt;code&gt;&lt;a href=&quot;serializable/unmapped&quot;&gt;YAML::Serializable::Unmapped&lt;/a&gt;&lt;/code&gt; 모듈이 포함되어 있으면 YAML 문서의 알 수없는 속성이 &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;any&quot;&gt;YAML::Any&lt;/a&gt;)&lt;/code&gt; 됩니다. 직렬화시 yaml_unmapped 내의 모든 키는 현재 yaml 객체에 직렬화되어 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="af54965c1e8223a5c3eac35821b271d536952f66" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Host&lt;/code&gt; header contains a port number, it is stripped off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc4a520fc094d5fd531e4e77712649f865a0072" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;max_pool_size&lt;/code&gt; was reached and a connection is needed, wait up to &lt;code&gt;checkout_timeout&lt;/code&gt; seconds for an existing connection to become available.</source>
          <target state="translated">는 IF &lt;code&gt;max_pool_size&lt;/code&gt; 가 도달 한과 연결이 필요하다 기다려야 &lt;code&gt;checkout_timeout&lt;/code&gt; 사용할 수있게하기 위해 기존의 연결을 위해 초.</target>
        </trans-unit>
        <trans-unit id="11b7b0af5326f18bb1872eb5e8f05ff255ad4d26" translate="yes" xml:space="preserve">
          <source>If the &lt;strong&gt;rollback is fired by an exception at the inner_tx block&lt;/strong&gt; all the changes including the ones in the &lt;code&gt;outer_tx&lt;/code&gt; are rollbacked.</source>
          <target state="translated">경우 &lt;strong&gt;롤백이 inner_tx 블록에서 예외에 의해 발사되는&lt;/strong&gt; 에있는 사람을 포함하여 모든 변경 &lt;code&gt;outer_tx&lt;/code&gt; 는 롤백 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="130a17de1aedbe126b0430113f1a68cdc36e9bac" translate="yes" xml:space="preserve">
          <source>If the DEFLATED compression method is used, crc32, compressed size and uncompressed size will be computed from the data written to the yielded IO.</source>
          <target state="translated">DEFLATED 압축 방법을 사용하면 crc32, 압축 크기 및 압축되지 않은 크기가 산출 된 IO에 기록 된 데이터에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="c7b106f99ea5122124ed7ab1952f8e77059625b4" translate="yes" xml:space="preserve">
          <source>If the STORED compression method is used, its crc32, compressed size and uncompressed size &lt;strong&gt;must&lt;/strong&gt; be set and be correct with respect to the data that will be written to the yielded &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">STORED 압축 방법을 사용하는 경우 crc32, 압축 된 크기 및 압축되지 않은 크기 가 설정 &lt;strong&gt;되어야&lt;/strong&gt; 하며 산출 된 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 기록 될 데이터와 관련하여 정확 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b012656f1ef204b001b3d2401194b36c0ab9b117" translate="yes" xml:space="preserve">
          <source>If the STORED compression method is used, its crc32, compressed size and uncompressed size &lt;strong&gt;must&lt;/strong&gt; be set and be correct with respect to the data that will be written to the yielded &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">STORED 압축 방법을 사용하는 경우 crc32, 압축 크기 및 압축되지 않은 크기 &lt;strong&gt;를&lt;/strong&gt; 설정하고 산출 된 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 기록 할 데이터와 관련하여 정확 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="90e6faf1d3fc8756628b3b7218d9a9c5c048e245" translate="yes" xml:space="preserve">
          <source>If the URI does not have any authority information, the result is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a846a71dadd41428c0cc438a00dd0c50422272fc" translate="yes" xml:space="preserve">
          <source>If the argument isn't a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">인수가 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 가 아닌 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1f772fbe1f888579ef981b7a1d2e747acef67e03" translate="yes" xml:space="preserve">
          <source>If the array is empty, it does not yield.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c2f93592018b614d681ec9dd7d75a024d0606b" translate="yes" xml:space="preserve">
          <source>If the assigned value is not exactly the same as the property's type, &lt;a href=&quot;to_unsafe&quot;&gt;to_unsafe&lt;/a&gt; will be tried.</source>
          <target state="translated">할당 된 값이 속성 유형과 정확히 같지 않으면 &lt;a href=&quot;to_unsafe&quot;&gt;to_unsafe&lt;/a&gt; 가 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="f3ca8a7a61236453a2351ee950948913e9a99a4a" translate="yes" xml:space="preserve">
          <source>If the block returns &lt;code&gt;false&lt;/code&gt;, the finding element exists behind. If the block returns &lt;code&gt;true&lt;/code&gt;, the finding element is itself or exists in front.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e7b14b1420dbb9f2775057dc24c158bd3146f2" translate="yes" xml:space="preserve">
          <source>If the block returns &lt;code&gt;false&lt;/code&gt;, the finding element exists behind. If the block returns &lt;code&gt;true&lt;/code&gt;, the finding element is itself or exists infront.</source>
          <target state="translated">블록이 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 찾기 요소가 뒤에 있습니다. 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 찾기 요소 자체 또는 앞에 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cb3a0e72e321dee29720a1350b3a9b30f8bccc0" translate="yes" xml:space="preserve">
          <source>If the block returns &lt;code&gt;false&lt;/code&gt;, the finding value exists behind. If the block returns &lt;code&gt;true&lt;/code&gt;, the finding value is itself or exists in front.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19408c12d6284c35f83ff55e7ad0ba021cc768e1" translate="yes" xml:space="preserve">
          <source>If the block returns &lt;code&gt;false&lt;/code&gt;, the finding value exists behind. If the block returns &lt;code&gt;true&lt;/code&gt;, the finding value is itself or exists infront.</source>
          <target state="translated">블록이 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 찾은 값이 뒤에 있습니다. 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 결과 값은 그 자체이거나 내부에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="4a257cbcb34af22097b1346a0e71359fd1d43a60" translate="yes" xml:space="preserve">
          <source>If the callback passed to &lt;code&gt;store_callback&lt;/code&gt; raises, then &lt;code&gt;execute_callback&lt;/code&gt; will raise. However, the compiler doesn't know that &lt;code&gt;execute_callback&lt;/code&gt; can potentially raise because it is not marked as &lt;code&gt;@[Raises]&lt;/code&gt; and the compiler has no way to figure this out. In these cases you have to manually mark such functions:</source>
          <target state="translated">&lt;code&gt;store_callback&lt;/code&gt; 에 전달 된 콜백이 발생 하면 &lt;code&gt;execute_callback&lt;/code&gt; 이 발생합니다. 그러나 컴파일러는 &lt;code&gt;execute_callback&lt;/code&gt; 이 &lt;code&gt;@[Raises]&lt;/code&gt; 로 표시되어 있지 않고 컴파일러가이를 알아낼 방법이 없기 때문에 잠재적으로 발생할 수 있음을 알지 못합니다 . 이 경우 이러한 기능을 수동으로 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="3c6966c5ccc56a7b6009eeb0d1fe5004d7b58966" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">컬렉션이 비어 있으면 &lt;code&gt;0&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9fdab30020c44d65432e3de9fb25291e29e70a07" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">컬렉션이 비어 있으면 &lt;code&gt;1&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="976811b186833933c1cc5d4b1b7c7e2447cdbd47" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;code&gt;additive_identity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d0bb561759ede99b2ce7d1b59995ab43f14c26" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;code&gt;multiplicative_identity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbbd6708cd876e1976bbc4db04349abb5431214" translate="yes" xml:space="preserve">
          <source>If the collection is empty, returns &lt;em&gt;initial&lt;/em&gt;.</source>
          <target state="translated">컬렉션이 비어 있으면 &lt;em&gt;initial을&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf1d385502513194a04c3ebe890af4cc82dac31e" translate="yes" xml:space="preserve">
          <source>If the compiler can't detect this at compile-time, an exception will be raised at runtime.</source>
          <target state="translated">컴파일러가 컴파일 타임에이를 감지 할 수 없으면 런타임에 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="18e22bb4c0c2d9d6a34e081434fea3fdbbde88c4" translate="yes" xml:space="preserve">
          <source>If the constant denotes a type, you get back a &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt;&lt;code&gt;TypeNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상수가 유형을 나타내는 경우 &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt; &lt;code&gt;TypeNode&lt;/code&gt; &lt;/a&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d29a8f505f3d2aab85079cf352a0708db2499686" translate="yes" xml:space="preserve">
          <source>If the constant is a constant (like &lt;code&gt;A = 1&lt;/code&gt;), then its value as an &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;ASTNode&lt;/a&gt;&lt;/code&gt; is returned. If the constant is a type, the type is returned as a &lt;code&gt;&lt;a href=&quot;typenode&quot;&gt;TypeNode&lt;/a&gt;&lt;/code&gt;. Otherwise, &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">상수가 상수 ( &lt;code&gt;A = 1&lt;/code&gt; 과 같은 )이면 &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;ASTNode&lt;/a&gt;&lt;/code&gt; 로서의 값 이 리턴됩니다. 상수가 유형 인 경우 유형은 &lt;code&gt;&lt;a href=&quot;typenode&quot;&gt;TypeNode&lt;/a&gt;&lt;/code&gt; 로 리턴됩니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;nilliteral&quot;&gt;NilLiteral&lt;/a&gt;&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1482446c286f9dccb86600e7bd3b41f453a1d003" translate="yes" xml:space="preserve">
          <source>If the day-of-month resulting from shifting by &lt;em&gt;years&lt;/em&gt; and &lt;em&gt;months&lt;/em&gt; would be invalid, the date is adjusted to the last valid day of the month. For example, adding one month to &lt;code&gt;2018-08-31&lt;/code&gt; would result in the invalid date &lt;code&gt;2018-09-31&lt;/code&gt; which will be adjusted to &lt;code&gt;2018-09-30&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;연도&lt;/em&gt; 및 &lt;em&gt;월 단위로&lt;/em&gt; 이동하여 발생한 날짜가 유효하지 않은 경우 날짜는 해당 월의 마지막 유효 날짜로 조정됩니다. 예를 들어, 1 개월을 추가 &lt;code&gt;2018-08-31&lt;/code&gt; 잘못된 일이 발생할 것 &lt;code&gt;2018-09-31&lt;/code&gt; 으로 조정됩니다 &lt;code&gt;2018-09-30&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b38825a3829588a49956f7e617fd75538df14905" translate="yes" xml:space="preserve">
          <source>If the file does not exist, it will be created.</source>
          <target state="translated">파일이 존재하지 않으면 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="d98f3fcc4efdea14c860a494d11a0e16af437e20" translate="yes" xml:space="preserve">
          <source>If the given size is zero, the amount of UTF-8 codepoints will be lazily computed when needed.</source>
          <target state="translated">주어진 크기가 0이면, 필요할 때 UTF-8 코드 포인트의 양이 느리게 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="c916d3697b63ccd18cd4c4eaa521f835428adb24" translate="yes" xml:space="preserve">
          <source>If the increment generates a &quot;carry&quot;, the character to the left of it is incremented. This process repeats until there is no carry, adding an additional character if necessary.</source>
          <target state="translated">증가가 &quot;캐리&quot;를 생성하면 왼쪽의 문자가 증가합니다. 이 프로세스는 캐리가 없을 때까지 반복되며 필요한 경우 추가 문자를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="432445db70e7576655c3d4952ad03213490208fe" translate="yes" xml:space="preserve">
          <source>If the location name cannot be found, &lt;code&gt;&lt;a href=&quot;location/invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; is raised. If the loader encounters a format error in the time zone database, &lt;code&gt;&lt;a href=&quot;location/invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">위치 이름을 찾을 수 없으면 &lt;code&gt;&lt;a href=&quot;location/invalidlocationnameerror&quot;&gt;InvalidLocationNameError&lt;/a&gt;&lt;/code&gt; 가 발생합니다. 표준 시간대 데이터베이스에서 로더에 형식 오류 가 발생 하면 &lt;code&gt;&lt;a href=&quot;location/invalidtzdataerror&quot;&gt;InvalidTZDataError&lt;/a&gt;&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a3116c00c05640f85cb3dad876cae435f6fb6b9e" translate="yes" xml:space="preserve">
          <source>If the method has arguments, you must specify their types:</source>
          <target state="translated">메소드에 인수가있는 경우 해당 유형을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6104756bf7883942dce444d263c542c3055c83a8" translate="yes" xml:space="preserve">
          <source>If the method has other required arguments, the short syntax argument should also be supplied in the method's argument list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72b0ddbe2378832f2b36cca43b523e5bb6bd7ef" translate="yes" xml:space="preserve">
          <source>If the method has other required parameters, the short syntax argument should also be supplied in the method's argument list.</source>
          <target state="translated">메소드에 다른 필수 매개 변수가있는 경우 메소드의 인수 목록에 짧은 구문 인수도 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="ff8071ee539d80c35c9f7aa4a58f03b3695ea441" translate="yes" xml:space="preserve">
          <source>If the method has parameters, you must specify their types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43085200c6cbbb5bf9064bbeb2562e7ef9a9b893" translate="yes" xml:space="preserve">
          <source>If the object is empty, it does not yield.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effd214f7ab2ff0c70af0dcbdd8d59302f827e61" translate="yes" xml:space="preserve">
          <source>If the path is empty or &lt;code&gt;&quot;.&quot;&lt;/code&gt;, it returns &lt;code&gt;&quot;.&quot;&lt;/code&gt;. If the path is rooted and in the top-most hierarchy, the root path is returned.</source>
          <target state="translated">경로가 비어 있거나 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 인 경우 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 반환합니다 .&quot; . 경로가 루팅되고 최상위 계층에있는 경우 루트 경로가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="221d2f4974b514fa2008b059ee0504bf10881c70" translate="yes" xml:space="preserve">
          <source>If the path is empty, it returns &lt;code&gt;&quot;.&quot;&lt;/code&gt;. If the path is rooted and in the top-most hierarchy, the root path is returned.</source>
          <target state="translated">경로가 비어 있으면 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 를 반환합니다 . . 경로가 루트이고 최상위 계층에 있으면 루트 경로가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c7b02d9326a2b21752830927a6e250f2888effd8" translate="yes" xml:space="preserve">
          <source>If the path turns to be empty, the current directory (&lt;code&gt;&quot;.&quot;&lt;/code&gt;) is returned.</source>
          <target state="translated">경로가 비어 있으면 현재 디렉토리 ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; )가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f4ff4dd28574680ae9433784f3952e8ae72b4963" translate="yes" xml:space="preserve">
          <source>If the pool is not allowed to create a new connection, wait a for a connection to become available.</source>
          <target state="translated">풀에서 새 연결을 만들 수 없으면 연결을 사용할 수있을 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="27c842a9518f899eae31205ecdf0b9890d26cce7" translate="yes" xml:space="preserve">
          <source>If the ports collection is not already installed, it can be downloaded using &lt;code&gt;portsnap fetch&lt;/code&gt; or &lt;code&gt;git clone https://github.com/freebsd/freebsd-ports&lt;/code&gt;.</source>
          <target state="translated">포트 콜렉션이 아직 설치되지 않은 경우 &lt;code&gt;portsnap fetch&lt;/code&gt; 또는 &lt;code&gt;git clone https://github.com/freebsd/freebsd-ports&lt;/code&gt; 를 사용하여 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80ab6ab1ba149af1866bc07b0ade3208abefa72a" translate="yes" xml:space="preserve">
          <source>If the resulting date-time is ambiguous due to time zone transitions, a correct time will be returned, but it does not guarantee which.</source>
          <target state="translated">표준 시간대 전환으로 인해 결과 날짜-시간이 모호한 경우 정확한 시간이 반환되지만 어떤 날짜를 보장하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="32deab680675f255674ae2216b5571519f29d1e6" translate="yes" xml:space="preserve">
          <source>If the return type is void you can omit it:</source>
          <target state="translated">반환 유형이 무효 인 경우 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23145595903fc2e398483b41a77943f18f2f8ea0" translate="yes" xml:space="preserve">
          <source>If the right-hand side contains just one expression, the type is indexed for each variable on the left-hand side like so:</source>
          <target state="translated">오른쪽에식이 하나만 포함되어 있으면 왼쪽의 각 변수에 대해 형식이 다음과 같이 인덱싱됩니다.</target>
        </trans-unit>
        <trans-unit id="1a1615eef18d7467f6b12e6fafb540dc8e47c72c" translate="yes" xml:space="preserve">
          <source>If the server is closed after invoking this method, an &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; (closed stream) exception must be raised.</source>
          <target state="translated">이 메소드를 호출 한 후 서버가 닫히면 &lt;code&gt;&lt;a href=&quot;../io/error&quot;&gt;IO::Error&lt;/a&gt;&lt;/code&gt; (닫힌 스트림) 예외가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="17220bbdcc986124d2db207f05fdfcfc10cffda3" translate="yes" xml:space="preserve">
          <source>If the specified line is the beginning of a &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; section, all specs inside that group are run.</source>
          <target state="translated">지정된 행이 &lt;code&gt;describe&lt;/code&gt; 또는 &lt;code&gt;context&lt;/code&gt; 섹션 의 시작 인 경우 해당 그룹 내의 모든 스펙이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="310af15d1c29c31cd75e4cd3e20b1ccb4c4c344e" translate="yes" xml:space="preserve">
          <source>If the string representation of an object ends with a newline, no additional newline is printed for that object.</source>
          <target state="translated">개체의 문자열 표현이 줄 바꿈으로 끝나는 경우 해당 개체에 대한 추가 줄 바꿈이 인쇄되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6bd8e040f4bdc958e54c848037c1287f76dfe1df" translate="yes" xml:space="preserve">
          <source>If the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered greater than the shorter one.</source>
          <target state="translated">문자열의 길이가 다르고 가장 짧은 길이와 비교할 때 문자열이 같은 경우 더 긴 문자열이 짧은 문자열보다 큰 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a6527dc160c2b321a81a51ed6cdd8d710d455ab4" translate="yes" xml:space="preserve">
          <source>If the value is actually an integer, it is converted to float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e214baed165f5d751977ae5c039d98205089a2" translate="yes" xml:space="preserve">
          <source>If the value is not a &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;, returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997dadb1318cf650445d0948cae3076f1bb5f6fa" translate="yes" xml:space="preserve">
          <source>If the value is not a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf77e0c1f081970d7c8c1ef3ba794b5fae88f04" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fin in an &lt;code&gt;&lt;a href=&quot;../int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce14a88084fc8cea056bd5fe8d1a8460c65f659f" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a &lt;code&gt;&lt;a href=&quot;../float64&quot;&gt;Float64&lt;/a&gt;&lt;/code&gt; variable, it returns &lt;code&gt;nil&lt;/code&gt;. If the value was actually an integer, it is converted to a float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20069f82656719feeda5656d5be1ce42f884f3f6" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a Int16 variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3341ec85468f37083fee08aaa1ac04a684c5e0b1" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a Int32 variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea44dabc32e1e92819aa1d8d6056423e5a2911b5" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a Int64 variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f255594c8e9bf56bdcf9fbe2c4e1a3e34b34a373" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a Int8 variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac789429871410dc20da7df9cc7fb3cfd17c66df" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a UInt16 variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2cca2d92c2ec4a7aa14e66dc36d54683e74a57" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a UInt32 variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644f8572c5162ff6fe14fc467df059dd72a8e98a" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in a UInt8 variable, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bb87d9d46e79c27bf0740957d6e9c76f640539" translate="yes" xml:space="preserve">
          <source>If the value is not an integer or does not fit in an &lt;code&gt;&lt;a href=&quot;../float32&quot;&gt;Float32&lt;/a&gt;&lt;/code&gt;, it returns &lt;code&gt;nil&lt;/code&gt;. If the value was actually an integer, it is converted to a float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8663c7a4de5671e97b7aafc659817ea16c4d0c42" translate="yes" xml:space="preserve">
          <source>If there are conditional breaks, the call's return value type will be a union of the type of the block's value and the type of the many &lt;code&gt;break&lt;/code&gt;s:</source>
          <target state="translated">조건부 나누기가있는 경우 호출의 반환 값 형식은 블록 값 형식과 여러 &lt;code&gt;break&lt;/code&gt; 형식의 합집합입니다 .</target>
        </trans-unit>
        <trans-unit id="f741ac83e90685ec4d575b72b74860aa6a511d7b" translate="yes" xml:space="preserve">
          <source>If there are multiple annotations of the same type applied to the same instance variable/method/type, the &lt;code&gt;.annotations(type : TypeNode)&lt;/code&gt; method can be used. This will work on anything that &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; would, but instead returns an &lt;code&gt;ArrayLiteral(Annotation)&lt;/code&gt;.</source>
          <target state="translated">동일한 인스턴스 변수 / 메소드 / 유형에 동일한 유형의 주석이 여러 개있는 경우 &lt;code&gt;.annotations(type : TypeNode)&lt;/code&gt; 메소드를 사용할 수 있습니다. 이것은 &lt;code&gt;.annotation(type : TypeNode)&lt;/code&gt; 할 수있는 작업에서 작동 하지만 대신 &lt;code&gt;ArrayLiteral(Annotation)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d818234a1ae7fa56c9771266ecf90c17f9f46093" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;DB::ResultSet&lt;/code&gt; yielded, return the connection to the pool. Otherwise, the connection will be returned to the pool when the ResultSet is closed.</source>
          <target state="translated">생성 된 &lt;code&gt;DB::ResultSet&lt;/code&gt; 이 없으면 풀에 대한 연결을 리턴하십시오. 그렇지 않으면 ResultSet이 닫힐 때 연결이 풀로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4a93ba56cc5b74f39d96d3f5dfc76165f0f0f51d" translate="yes" xml:space="preserve">
          <source>If there is no time zone information in the formatted time, &lt;em&gt;location&lt;/em&gt; will be assumed. When &lt;em&gt;location&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, in such a case the parser will raise &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">형식화 된 시간에 시간대 정보가 없으면 &lt;em&gt;위치&lt;/em&gt; 가 가정됩니다. 때 &lt;em&gt;위치&lt;/em&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 이러한 경우 파서는 올릴 &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a01d1818bbb7a8a9bc8b63b52ab1c1fe4c2e683" translate="yes" xml:space="preserve">
          <source>If there is no time zone information in the formatted time, the parser will raise &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">포맷 된 시간에 시간대 정보가 없으면 파서는 &lt;code&gt;&lt;a href=&quot;time/format/error&quot;&gt;Time::Format::Error&lt;/a&gt;&lt;/code&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="4a024e2ef7b2e827498e91756e32eacfa1a13315" translate="yes" xml:space="preserve">
          <source>If there is not a valid number at the start of this string, or if the resulting integer doesn't fit an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, an &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">이 문자열의 시작에 유효한 숫자가 아닌 경우 결과 정수가 맞지 않는 경우, 또는 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;argumenterror&quot;&gt;ArgumentError&lt;/a&gt;&lt;/code&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="46f6f65bddde630c02d1f85d21fdd9be267c2643" translate="yes" xml:space="preserve">
          <source>If there was an error decoding the current char because of an invalid UTF-8 byte sequence, returns the byte that produced the invalid encoding.</source>
          <target state="translated">유효하지 않은 UTF-8 바이트 시퀀스로 인해 현재 문자를 디코딩하는 중에 오류가 발생하면 유효하지 않은 인코딩을 생성 한 바이트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2e3d294487015981ed52691e8078049c2fe4e25e" translate="yes" xml:space="preserve">
          <source>If there was an error decoding the current char because of an invalid UTF-8 byte sequence, returns the byte that produced the invalid encoding. Returns &lt;code&gt;0&lt;/code&gt; if the char would've been out of bounds. Otherwise returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">유효하지 않은 UTF-8 바이트 시퀀스로 인해 현재 문자를 디코딩하는 중에 오류가 발생하면 유효하지 않은 인코딩을 생성 한 바이트를 반환합니다. 문자가 범위를 벗어나면 &lt;code&gt;0&lt;/code&gt; 을 반환 합니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5613446b53d266ad630c4d08a8e7171a0064b9f6" translate="yes" xml:space="preserve">
          <source>If there's a match, the scanner advances the scan offset, the last match is saved, and it returns the size of the skip. Otherwise it returns &lt;code&gt;nil&lt;/code&gt; and does not advance the offset.</source>
          <target state="translated">일치하는 항목이 있으면 스캐너가 스캔 오프셋을 진행시키고 마지막 일치 항목을 저장 한 다음 건너 뛰기 크기를 반환합니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 오프셋을 진행시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="454cb822e207c8c8cf1e19d8344909cc77a4fb69" translate="yes" xml:space="preserve">
          <source>If there's a match, the scanner advances the scan offset, the last match is saved, and it returns the size of the skipped match. Otherwise it returns &lt;code&gt;nil&lt;/code&gt; and does not advance the offset.</source>
          <target state="translated">일치하는 항목이 있으면 스캐너가 스캔 오프셋을 진행시키고 마지막 일치 항목을 저장 한 다음 건너 뛴 일치 크기를 반환합니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 오프셋을 진행시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="38616dfa48ed0248b98643665b1e0b8cf8dffcc0" translate="yes" xml:space="preserve">
          <source>If this value is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; is enabled by default.</source>
          <target state="translated">이 값이 &lt;code&gt;true&lt;/code&gt; 이면 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; 가 기본적으로 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="35575ed49a091bc12d7e1c0bbd8827ace030b455" translate="yes" xml:space="preserve">
          <source>If this value is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; is enabled by default. But if this value is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; is disabled.</source>
          <target state="translated">이 값이 &lt;code&gt;true&lt;/code&gt; 이면 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; 가 기본적으로 활성화됩니다. 그러나이 값이 &lt;code&gt;false&lt;/code&gt; 인 경우 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Colorize::Object&lt;/a&gt;&lt;/code&gt; 가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="e0eb8b0ab697add0a4d8d83b45749ec3d21b24b0" translate="yes" xml:space="preserve">
          <source>If we define two modules with names &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">이름이 &lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;B&lt;/code&gt; 인 두 개의 모듈을 정의하는 경우 :</target>
        </trans-unit>
        <trans-unit id="b10fcc81f2422a2fdc0e50c3e6e7886be06fa50a" translate="yes" xml:space="preserve">
          <source>If we hadn't used &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt;, the generated code would have been this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044b28684b72ceaa1d72ef53c31f8adb0e20c8d4" translate="yes" xml:space="preserve">
          <source>If we hand't use &lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt;, the generated code would have been this:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;macroid#id:MacroId-instance-method&quot;&gt;#id&lt;/a&gt;&lt;/code&gt; 를 직접 사용하지 않으면 생성 된 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7aed342b224e23ce6746d8a74445928b5115e54b" translate="yes" xml:space="preserve">
          <source>If we read Travis CI job log, we will find that every time the job runs, Travis CI needs to fetch the libraries needed to run the application:</source>
          <target state="translated">Travis CI 작업 로그를 읽으면 작업이 실행될 때마다 Travis CI가 애플리케이션을 실행하는 데 필요한 라이브러리를 가져와야한다는 것을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfc038e00b2204b168d33c626192675a2517e2aa" translate="yes" xml:space="preserve">
          <source>If we want to execute the spawned fiber for ever, we can use &lt;code&gt;sleep&lt;/code&gt; without arguments:</source>
          <target state="translated">스폰 된 광섬유를 영원히 실행하려면 인수없이 &lt;code&gt;sleep&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d9280951a9e662fe5b8046acbaf7c8f1fdd33c5" translate="yes" xml:space="preserve">
          <source>If you are new to continuous integration (or you want to refresh the basic concepts) we may start reading the &lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/&quot;&gt;core concepts guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e472ade7f51ebc623e4e6a83cde28efdb269e3e3" translate="yes" xml:space="preserve">
          <source>If you commit the above file to your project and push, you'll trigger your first run of the new pipeline.</source>
          <target state="translated">위 파일을 프로젝트에 커밋하고 푸시하면 새 파이프 라인의 첫 번째 실행이 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="6844a6a8a18710d78630335246bf6cb26d11be1c" translate="yes" xml:space="preserve">
          <source>If you compile the above program with the &lt;code&gt;tool hierarchy&lt;/code&gt; command you will see this for &lt;code&gt;Person&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;tool hierarchy&lt;/code&gt; 명령으로 위의 프로그램을 컴파일하면 &lt;code&gt;Person&lt;/code&gt; 에 대해 다음을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a5d9509f2e3cc93a293efb11c650a6eea9e41e6" translate="yes" xml:space="preserve">
          <source>If you declare your type as a &lt;strong&gt;struct&lt;/strong&gt; instead of a &lt;strong&gt;class&lt;/strong&gt;, creating an instance of it will use stack memory, which is much cheaper than heap memory and doesn't put pressure on the GC.</source>
          <target state="translated">&lt;strong&gt;클래스&lt;/strong&gt; 대신 &lt;strong&gt;구조체&lt;/strong&gt; 로 유형을 선언 하면 인스턴스를 만들면 스택 메모리가 사용됩니다.이 메모리는 힙 메모리보다 훨씬 저렴하며 GC에 부담을주지 않습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc4b9d71eeb3fef7f237163eb09797ef2f7941d5" translate="yes" xml:space="preserve">
          <source>If you define the function inline in the same call you can omit the argument types, the compiler will add the types for you based on the &lt;code&gt;fun&lt;/code&gt; signature:</source>
          <target state="translated">동일한 호출에서 함수를 인라인으로 정의하면 인수 유형을 생략 할 수 있습니다. 컴파일러는 &lt;code&gt;fun&lt;/code&gt; 특성 에 따라 유형을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="b83c59fdebe99f3aa9fe1805dfa2ac97242d8fd5" translate="yes" xml:space="preserve">
          <source>If you define the function inline in the same call you can omit the parameter types, the compiler will add the types for you based on the &lt;code&gt;fun&lt;/code&gt; signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67bb5d71d0e06a738efd339fa7554f58881d74a" translate="yes" xml:space="preserve">
          <source>If you don't mark them, &lt;code&gt;begin/rescue&lt;/code&gt; blocks that surround this function's calls won't work as expected.</source>
          <target state="translated">표시하지 않으면 이 함수의 호출을 둘러싼 &lt;code&gt;begin/rescue&lt;/code&gt; 블록이 예상대로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3db8912b4d9e5567c619bc268526af5712d19120" translate="yes" xml:space="preserve">
          <source>If you get an error like:</source>
          <target state="translated">다음과 같은 오류가 발생하면</target>
        </trans-unit>
        <trans-unit id="aeeea1ef3b64a8f67465b1f2348da76bcc1837f8" translate="yes" xml:space="preserve">
          <source>If you haven't already, &lt;a href=&quot;https://travis-ci.org/&quot;&gt;sign up for Travis CI&lt;/a&gt;.</source>
          <target state="translated">아직 &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI에 가입&lt;/a&gt; 하지 않은 경우 가입하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb6f69c8b2e0eae9c3276ff96b3c9d77258e7286" translate="yes" xml:space="preserve">
          <source>If you like, feel free to replace &lt;code&gt;public&lt;/code&gt; with &lt;code&gt;origin&lt;/code&gt;, or a remote name of your choosing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb93ed7816b90ae167ea57614085e15d43c2026" translate="yes" xml:space="preserve">
          <source>If you need to build a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; where the maximum capacity is unknown, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최대 용량을 알 수없는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 빌드해야하는 경우 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a515903a331c7adf2a4850ada40f94faf4622500" translate="yes" xml:space="preserve">
          <source>If you need to build a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; where the maximum capacity is unknown, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최대 용량을 알 수없는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 작성해야하는 경우 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="12a923702bc9ca4c96af26a508dad9123fb36bd3" translate="yes" xml:space="preserve">
          <source>If you need to change the default level, backend or sources call &lt;code&gt;&lt;a href=&quot;log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; upon startup.</source>
          <target state="translated">기본 수준을 변경해야하는 경우 백엔드 또는 소스는 &lt;code&gt;&lt;a href=&quot;log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; 때 Log.setup 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="a2ebf0251c708c2036534da99067a903ab91a8e0" translate="yes" xml:space="preserve">
          <source>If you need to dynamically build a string, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">문자열을 동적으로 빌드해야하는 경우 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24a4231ffd3145a2e17ccd826fc00864537ec792" translate="yes" xml:space="preserve">
          <source>If you need to dynamically build a string, use &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">문자열을 동적으로 빌드해야하는 경우 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;block):self-class-method&quot;&gt;String#build&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;io/memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19e33e349997459fbeb1a2aa3c48d52562ec234a" translate="yes" xml:space="preserve">
          <source>If you need to execute the body at least once and then check for a breaking condition, you can do this:</source>
          <target state="translated">본문을 한 번 이상 실행 한 다음 중단 조건을 확인해야하는 경우 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9b91cffcb640dd04b3df67370094008cc11ca90" translate="yes" xml:space="preserve">
          <source>If you need to set any compile-time flags not set implicitly through &lt;code&gt;--target&lt;/code&gt;, you can use the &lt;code&gt;-D&lt;/code&gt; command line flag.</source>
          <target state="translated">&lt;code&gt;--target&lt;/code&gt; 을 통해 암시 적으로 설정되지 않은 컴파일 타임 플래그를 설정해야하는 경우 &lt;code&gt;-D&lt;/code&gt; 명령 줄 플래그를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="632f7f303044a9bffe7b52f89142e5036a1cbcce" translate="yes" xml:space="preserve">
          <source>If you need to write a string that has many double quotes, parentheses, or similar characters, you can use alternative literals:</source>
          <target state="translated">큰 따옴표, 괄호 또는 유사한 문자가 많은 문자열을 작성해야하는 경우 대체 리터럴을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="356d8adc679d48604a349e3a8b9ddc0c9ee281c9" translate="yes" xml:space="preserve">
          <source>If you omit an explicit type restriction, the compiler will try to infer the type of instance and class variables using a bunch of syntactic rules.</source>
          <target state="translated">명시 적 유형 제한을 생략하면 컴파일러는 많은 구문 규칙을 사용하여 인스턴스 및 클래스 변수 유형을 유추하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="412e16a2d2db6af9b1f9b8f07b27f452be9f7cdf" translate="yes" xml:space="preserve">
          <source>If you redefine a method, the last definition will take precedence.</source>
          <target state="translated">메소드를 재정의하면 마지막 정의가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="410a8318180bd09eff41e8cc0b660bd1142155fb" translate="yes" xml:space="preserve">
          <source>If you run the compiler from somewhere else, say the &lt;code&gt;src&lt;/code&gt; folder, &lt;code&gt;lib&lt;/code&gt; will not be in the path and &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; can't be resolved.</source>
          <target state="translated">다른 곳에서 컴파일러를 실행하면 &lt;code&gt;src&lt;/code&gt; 폴더와 같이 &lt;code&gt;lib&lt;/code&gt; 가 경로에 없으며 &lt;code&gt;require &quot;foo&quot;&lt;/code&gt; 확인할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="82fc48b1ca3b16ed67a1b5bc62801d66a551c05c" translate="yes" xml:space="preserve">
          <source>If you try to read a token which is not the one currently under the cursor location, an exception &lt;code&gt;&lt;a href=&quot;parseexception&quot;&gt;ParseException&lt;/a&gt;&lt;/code&gt; will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46635aca929eb0dc9cdfc2bcf0aeea8a0a18975a" translate="yes" xml:space="preserve">
          <source>If you want a method to only accept the type Int32 (not instances of it), you use &lt;code&gt;.class&lt;/code&gt;:</source>
          <target state="translated">메소드가 Int32 유형 만 허용하려면 (인스턴스 아님) &lt;code&gt;.class&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="df566aa68ecfbf6dfa5f7b5378bc80293d2d6ebb" translate="yes" xml:space="preserve">
          <source>If you want to contribute then you might want to install Crystal from sources.</source>
          <target state="translated">기여하고 싶다면 소스에서 Crystal을 설치하는 것이 좋습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
