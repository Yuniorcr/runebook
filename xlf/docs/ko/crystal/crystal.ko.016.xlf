<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="5f59918ff367bc32efced5deba138d5dc0263842" translate="yes" xml:space="preserve">
          <source>If you want to invoke the program's method, even though the current type defines a method with the same name, prefix the call with &lt;code&gt;::&lt;/code&gt;:</source>
          <target state="translated">프로그램의 메소드를 호출하려면 현재 유형이 동일한 이름의 메소드를 정의하더라도 &lt;code&gt;::&lt;/code&gt; 앞에 접두어를 붙입니다 .</target>
        </trans-unit>
        <trans-unit id="9020343752a86deb77b79cd68b3d8b90dd55555d" translate="yes" xml:space="preserve">
          <source>If you want to log an exception, you can indicate it in the &lt;code&gt;exception:&lt;/code&gt; named argument.</source>
          <target state="translated">예외를 기록하려면 &lt;code&gt;exception:&lt;/code&gt; named 인수 에 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35c586a9a5f5e8f10a1de56e853440af82e8a1e4" translate="yes" xml:space="preserve">
          <source>If you want to pass &lt;code&gt;NULL&lt;/code&gt; instead of a callback, just pass &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">콜백 대신 &lt;code&gt;NULL&lt;/code&gt; 을 전달하려면 &lt;code&gt;nil&lt;/code&gt; 을 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="95ba118065f124836ada1dae1c7d7a1c2f20798b" translate="yes" xml:space="preserve">
          <source>If you want to verify that all your code has been formatted with &lt;code&gt;crystal tool format&lt;/code&gt;, add a script for &lt;code&gt;crystal tool format --check&lt;/code&gt;. If the code is not formatted correctly, this will &lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;break the build&lt;/a&gt; just as failing tests would.</source>
          <target state="translated">당신은 당신의 코드가로 포맷되어 있는지 확인하려면 &lt;code&gt;crystal tool format&lt;/code&gt; 에 대한 스크립트 추가 &lt;code&gt;crystal tool format --check&lt;/code&gt; . 코드가 올바르게 포맷되지 않으면 테스트 실패와 마찬가지로 &lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;빌드&lt;/a&gt; 가 중단 됩니다 .</target>
        </trans-unit>
        <trans-unit id="cf4aef3252cad6456eca00eb1161df1deafc2382" translate="yes" xml:space="preserve">
          <source>If you would like more information about &lt;code&gt;bin/crystal&lt;/code&gt;, check out the &lt;a href=&quot;../using_the_compiler/index&quot;&gt;using the compiler&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;code&gt;bin/crystal&lt;/code&gt; 에 대한 자세한 내용을 보려면 &lt;a href=&quot;../using_the_compiler/index&quot;&gt;컴파일러&lt;/a&gt; 설명서 사용을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb82b7bc70519f4f2db16a6ca379e6c49c78895f" translate="yes" xml:space="preserve">
          <source>If you'd like you can also add a &lt;code&gt;shields.io&lt;/code&gt; badge for the release. GitLab doesn't have full support for this kind of thing, and until someone adds a &lt;a href=&quot;https://github.com/badges/shields/blob/master/doc/TUTORIAL.md&quot;&gt;version badge for gitlab&lt;/a&gt; to shields.io, we'll have to just code in the version number in the URLs directly.</source>
          <target state="translated">원하는 경우 릴리스에 대한 &lt;code&gt;shields.io&lt;/code&gt; 배지를 추가 할 수도 있습니다 . GitLab은 이런 종류의 것을 완벽하게 지원하지 않으며 누군가 &lt;a href=&quot;https://github.com/badges/shields/blob/master/doc/TUTORIAL.md&quot;&gt;gitlab 용 버전 배지를 shields.io&lt;/a&gt; 에 추가 할 때까지 URL에 직접 버전 번호를 코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="cc2b9dfcd7352fe0bb387189e0d5ab88b584c912" translate="yes" xml:space="preserve">
          <source>If you're on a &lt;code&gt;-RELEASE&lt;/code&gt; version of FreeBSD, by default &lt;code&gt;pkg&lt;/code&gt; is configured for the &lt;code&gt;quarterly&lt;/code&gt; package set, which is updated every quarter (except for security patches, which are included ASAP).</source>
          <target state="translated">FreeBSD 의 &lt;code&gt;-RELEASE&lt;/code&gt; 버전 을 사용하는 경우 , 기본적으로 &lt;code&gt;pkg&lt;/code&gt; 은 &lt;code&gt;quarterly&lt;/code&gt; 패키지 세트로 구성되며, 분기 마다 업데이트됩니다 (ASAP에 포함 된 보안 패치 제외).</target>
        </trans-unit>
        <trans-unit id="5e759f241669f8bab60848fe61cabfe006f9ba86" translate="yes" xml:space="preserve">
          <source>If you're planning to contribute to the language itself you might find useful to install LLVM as well. So replace the last line with:</source>
          <target state="translated">언어 자체에 기여할 계획이라면 LLVM도 설치하는 것이 좋습니다. 따라서 마지막 줄을 다음으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="6618bc7455279890292923d513388ccc28194ee3" translate="yes" xml:space="preserve">
          <source>If you've been following along, your &lt;code&gt;.travis.yml&lt;/code&gt; file should look something like this:</source>
          <target state="translated">따라 &lt;code&gt;.travis.yml&lt;/code&gt; 면 .travis.yml 파일은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="081a86d8835d5147ede55f7c5f68848f67509bf5" translate="yes" xml:space="preserve">
          <source>If your shard builds an application, both &lt;code&gt;shard.yml&lt;/code&gt; and &lt;code&gt;shard.lock&lt;/code&gt; should be checked into version control to provide reproducible dependency installs. If it is only a library for other shards to depend on, &lt;code&gt;shard.lock&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; be checked in, only &lt;code&gt;shard.yml&lt;/code&gt;. It's good advice to add it to &lt;code&gt;.gitignore&lt;/code&gt; (the &lt;a href=&quot;../using_the_compiler/index#crystal-init&quot;&gt;&lt;code&gt;crystal init&lt;/code&gt;&lt;/a&gt; does this automatically when initializing a &lt;code&gt;lib&lt;/code&gt; repository).</source>
          <target state="translated">shard가 애플리케이션을 빌드하는 경우 &lt;code&gt;shard.yml&lt;/code&gt; 및 &lt;code&gt;shard.lock&lt;/code&gt; 을 모두 버전 제어에 체크인하여 재현 가능한 종속성 설치를 제공해야합니다. 다른 샤드가 의존하는 라이브러리 인 경우 &lt;code&gt;shard.lock&lt;/code&gt; 은 체크인 &lt;em&gt;하지 &lt;/em&gt; &lt;code&gt;shard.yml&lt;/code&gt; 만 체크인 해야합니다 . &lt;code&gt;.gitignore&lt;/code&gt; 에 추가하는 것이 좋습니다 ( &lt;code&gt;lib&lt;/code&gt; 저장소를 초기화 할 때 &lt;a href=&quot;../using_the_compiler/index#crystal-init&quot;&gt; &lt;code&gt;crystal init&lt;/code&gt; &lt;/a&gt; 가 자동으로 수행 합니다).</target>
        </trans-unit>
        <trans-unit id="f704f1f4341c2e007c25bf130f73a86589aaf7f3" translate="yes" xml:space="preserve">
          <source>Ignore internal document encoding hint</source>
          <target state="translated">내부 문서 인코딩 힌트 무시</target>
        </trans-unit>
        <trans-unit id="9f18df8db617aed015b3aee7008f1bc14e64ec36" translate="yes" xml:space="preserve">
          <source>Ignore white space and &lt;code&gt;#&lt;/code&gt; comments.</source>
          <target state="translated">공백과 &lt;code&gt;#&lt;/code&gt; 개의 주석을 무시하십시오 .</target>
        </trans-unit>
        <trans-unit id="e769494ea641bd01735c8978b12dae80bc631fc2" translate="yes" xml:space="preserve">
          <source>Illegal byte sequence</source>
          <target state="translated">잘못된 바이트 시퀀스</target>
        </trans-unit>
        <trans-unit id="3176fdb344f7026fb9cd9da003d83547cd35fc12" translate="yes" xml:space="preserve">
          <source>Illegal seek</source>
          <target state="translated">불법 탐색</target>
        </trans-unit>
        <trans-unit id="baba298a8e3227dae43870b3d2918fa910e82d50" translate="yes" xml:space="preserve">
          <source>Image: &lt;code&gt;https://img.shields.io/badge/docs-available-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">이미지 : &lt;code&gt;https://img.shields.io/badge/docs-available-brightgreen.svg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88424dd93bbaf80447a4c645f9560b90b2285a0f" translate="yes" xml:space="preserve">
          <source>Image: &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">이미지 : &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12ec9ca858442888f051cfcf01d2d10b2f0cf875" translate="yes" xml:space="preserve">
          <source>Immediately resumes execution of this fiber.</source>
          <target state="translated">이 광섬유의 실행을 즉시 재개합니다.</target>
        </trans-unit>
        <trans-unit id="9bb823f2686162658d58ba28d762df95e581159c" translate="yes" xml:space="preserve">
          <source>Immutable structured metadata information for logging.</source>
          <target state="translated">로깅을위한 변경 불가능한 구조화 된 메타 데이터 정보입니다.</target>
        </trans-unit>
        <trans-unit id="b78785e84488212efeb2df817e6c0811fde489e5" translate="yes" xml:space="preserve">
          <source>Implement XInclude substitution</source>
          <target state="translated">XInclude 대체 구현</target>
        </trans-unit>
        <trans-unit id="aa3d0e1b2fa62620ef593c210a94d8c687db07c1" translate="yes" xml:space="preserve">
          <source>Implementation based on Mathias Bynens' &lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;punnycode.js&lt;/a&gt; project.</source>
          <target state="translated">Mathias Bynens의 &lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;punnycode.js&lt;/a&gt; 프로젝트 기반 구현 .</target>
        </trans-unit>
        <trans-unit id="b7193857d3b73c5303f625327d016375cad6c9bd" translate="yes" xml:space="preserve">
          <source>Implementation is based on an open hash table. Two objects refer to the same hash key when their hash value (&lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt;) is identical and both objects are equal to each other (&lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">구현은 개방 해시 테이블을 기반으로합니다. 해시 값 ( &lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt; )이 동일하고 두 객체가 서로 동일한 경우 ( &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt; ) 두 객체는 ​​동일한 해시 키를 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="7ca53fef26c6216135423574d73f480c1c3ce1dc" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a char and a string.</source>
          <target state="translated">char 및 문자열의 문자열 보간 구현.</target>
        </trans-unit>
        <trans-unit id="804771dc966ccb9578ced5c9bbbaa9d8c9b44561" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a single non-string value.</source>
          <target state="translated">문자열이 아닌 단일 값의 문자열 보간 구현.</target>
        </trans-unit>
        <trans-unit id="7bcf16ecba3652e5eb6eaec31b49c78673d34506" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a single string.</source>
          <target state="translated">단일 문자열의 문자열 보간 구현.</target>
        </trans-unit>
        <trans-unit id="3f7545dceab2eb0fe1c696018b9d94838a025a5b" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a string and a char.</source>
          <target state="translated">문자열 및 문자의 문자열 보간 구현.</target>
        </trans-unit>
        <trans-unit id="3aa5c022db189a15e98bb1512edd10acfe6df38f" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of multiple string values.</source>
          <target state="translated">여러 문자열 값의 문자열 보간 구현.</target>
        </trans-unit>
        <trans-unit id="9bcc47eeb4dca96f58981e24b921fd1c2924b349" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of multiple, possibly non-string values.</source>
          <target state="translated">문자열이 아닌 여러 값의 문자열 보간 구현.</target>
        </trans-unit>
        <trans-unit id="f88a8bea59b1255ab1ee0d9099c85cd391463728" translate="yes" xml:space="preserve">
          <source>Implementor that returns &lt;code&gt;&lt;a href=&quot;usedefault&quot;&gt;Channel::UseDefault&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;selectaction#execute:DeliveryState-instance-method&quot;&gt;#execute&lt;/a&gt;&lt;/code&gt; must redefine &lt;code&gt;&lt;a href=&quot;selectaction#default_result-instance-method&quot;&gt;#default_result&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;selectaction#execute:DeliveryState-instance-method&quot;&gt;#execute&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;usedefault&quot;&gt;Channel::UseDefault&lt;/a&gt;&lt;/code&gt; 를 반환하는 구현 자는 &lt;code&gt;&lt;a href=&quot;selectaction#default_result-instance-method&quot;&gt;#default_result&lt;/a&gt;&lt;/code&gt; 를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a13cf35486afca7a9a49f42ce8dd25245bef7d4" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt; 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="6febf3423b5a2fd5d708d0cafafae45278263e8d" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;#accept?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구현 &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;#accept?&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48ecd16311ac50b33f9d47da09f4b77c6cc353d5" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt;::Socket::Server#accept&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22608e8092985c6549a29f91270383e8e65f44a0" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt;::Socket::Server#accept?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771d136be14b58d53e398f9de37fd2c088f2aed5" translate="yes" xml:space="preserve">
          <source>Implements the Adler32 checksum algorithm.</source>
          <target state="translated">Adler32 체크섬 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="28275372538968891a6e160064b912d23ba38d2c" translate="yes" xml:space="preserve">
          <source>Implements the CRC32 checksum algorithm.</source>
          <target state="translated">CRC32 체크섬 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="522d7f2bf78da2c71f62f15e7ea93767f964798c" translate="yes" xml:space="preserve">
          <source>Implements the MD5 digest algorithm.</source>
          <target state="translated">MD5 다이제스트 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="6e6517a6b07ad2994f4db48b1a5fca25d96b5794" translate="yes" xml:space="preserve">
          <source>Implements the SHA1 digest algorithm.</source>
          <target state="translated">SHA1 다이제스트 알고리즘을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="331ea055bb5028802932bef7914697137c7c319d" translate="yes" xml:space="preserve">
          <source>Implements the SHA256 digest algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2a402452510e86b45d4cadb8a3b15de0147275" translate="yes" xml:space="preserve">
          <source>Implements the SHA512 digest algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c33c1d5f4fa18cbeb1939fec24c2dc189e85fc" translate="yes" xml:space="preserve">
          <source>Implicit constants, &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt;, are automatically added to these enums, where &lt;code&gt;None&lt;/code&gt; has the value &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt; has the &quot;or&quot;ed value of all constants.</source>
          <target state="translated">암시 적 상수 &lt;code&gt;None&lt;/code&gt; 과 &lt;code&gt;All&lt;/code&gt; 은이 열거에 자동으로 추가됩니다. 여기서 &lt;code&gt;None&lt;/code&gt; 은 &lt;code&gt;0&lt;/code&gt; 값을 가지며 &lt;code&gt;All&lt;/code&gt; 은 모든 상수의 &quot;또는&quot;값을가집니다.</target>
        </trans-unit>
        <trans-unit id="6e67fca40f0865559decb7988447ee1a5d8afa90" translate="yes" xml:space="preserve">
          <source>Implicit-object allowed</source>
          <target state="translated">암시 적 객체 허용</target>
        </trans-unit>
        <trans-unit id="9097990aa250d8f26c2cfe005b8d4cc9d881781d" translate="yes" xml:space="preserve">
          <source>In Crystal everything is an object. The definition of an object boils down to these points:</source>
          <target state="translated">Crystal에서는 모든 것이 객체입니다. 객체의 정의는 다음과 같이 요약됩니다.</target>
        </trans-unit>
        <trans-unit id="bbbbe6b64b087c3c38ecd283503cbc87993ea670" translate="yes" xml:space="preserve">
          <source>In Crystal we have two ways of building this connection. And so, coming up next, we are going to present examples with some advice on when to use each one.</source>
          <target state="translated">Crystal에는이 연결을 구축하는 두 가지 방법이 있습니다. 그래서 다음에는 각각을 언제 사용해야하는지에 대한 몇 가지 조언과 함께 예제를 제시 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="5adb3016af8e6fb7aa092ef4f2cbea0f28a08306" translate="yes" xml:space="preserve">
          <source>In Crystal, &lt;code&gt;puts&lt;/code&gt; will invoke &lt;code&gt;to_s(io)&lt;/code&gt; on the object, passing it the IO to which the string representation should be written.</source>
          <target state="translated">Crystal에서 &lt;code&gt;puts&lt;/code&gt; 는 객체에서 &lt;code&gt;to_s(io)&lt;/code&gt; 를 호출 하여 문자열 표현이 쓰여질 IO를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="ba9466fcc2a8dc340d36e807c6fd6035b41d1e3d" translate="yes" xml:space="preserve">
          <source>In Debian derived distributions, you can use the official Crystal repository.</source>
          <target state="translated">데비안 파생 배포판에서는 공식 Crystal 리포지토리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3420906df7a8098222f85752d96256b7fae157a9" translate="yes" xml:space="preserve">
          <source>In RedHat derived distributions, you can use the official Crystal repository.</source>
          <target state="translated">RedHat 파생 배포판에서 공식 Crystal 리포지토리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc0b7757f3880ee62287025aecd965f943f82021" translate="yes" xml:space="preserve">
          <source>In a Docker-based &lt;em&gt;runner&lt;/em&gt; we need to run &lt;code&gt;shards install&lt;/code&gt; explicitly, like this:</source>
          <target state="translated">Docker 기반 &lt;em&gt;실행기&lt;/em&gt; 에서는 다음과 같이 &lt;code&gt;shards install&lt;/code&gt; 을 명시 적으로 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b20d35e011fcff7c9bfba4fa9e8f1fd220651dd6" translate="yes" xml:space="preserve">
          <source>In all of these cases you can use the special &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; suffixes:</source>
          <target state="translated">이 모든 경우에 특수 &lt;code&gt;*&lt;/code&gt; 및 &lt;code&gt;**&lt;/code&gt; 접미사를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3933f8aefcde5fa10556fdc0355de356ee6b2888" translate="yes" xml:space="preserve">
          <source>In all the previous examples, the rolling back is &lt;strong&gt;implicit&lt;/strong&gt;, but we can also tell the transaction to rollback:</source>
          <target state="translated">이전의 모든 예에서 롤백은 &lt;strong&gt;암시 적이&lt;/strong&gt; 지만 트랜잭션에 롤백을 지시 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dd338898fb2109e29819cb3d608e19399d6e3c9" translate="yes" xml:space="preserve">
          <source>In binary file mode, line endings are not converted to CRLF on Windows.</source>
          <target state="translated">이진 파일 모드에서 줄 끝은 Windows에서 CRLF로 변환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f057cf08f3968ab6ed1ba375b21b72ec05df09e" translate="yes" xml:space="preserve">
          <source>In both cases you can use nested names and they will be looked up in nested directories:</source>
          <target state="translated">두 경우 모두 중첩 된 이름을 사용할 수 있으며 중첩 된 디렉토리에서 조회됩니다.</target>
        </trans-unit>
        <trans-unit id="0531d97dcdf79342365f9992f005c8e70a5ff968" translate="yes" xml:space="preserve">
          <source>In case an example needs to be pending on some condition that requires executing it, this allows to mark it as such rather than letting it fail or never run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c06fabb66d59476ecdf33963fba52384551264" translate="yes" xml:space="preserve">
          <source>In case we are wondering what the job &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal#jobs-test&quot;&gt;crystal/test&lt;/a&gt; does, we always may see the source code.</source>
          <target state="translated">작업 &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal#jobs-test&quot;&gt;수정 / 테스트&lt;/a&gt; 가 무엇을하는지 궁금한 경우 항상 소스 코드를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="caaf8b4d9afa41bb58f840ef379bc2c3ad6329f7" translate="yes" xml:space="preserve">
          <source>In case we want to build richer CLI applications, there are libraries that can help us. Here we will name two well-known libraries: &lt;code&gt;Readline&lt;/code&gt; and &lt;code&gt;NCurses&lt;/code&gt;.</source>
          <target state="translated">더 풍부한 CLI 애플리케이션을 구축하려는 경우 도움이 될 수있는 라이브러리가 있습니다. 여기서는 잘 알려진 두 라이브러리 인 &lt;code&gt;Readline&lt;/code&gt; 과 &lt;code&gt;NCurses&lt;/code&gt; 의 이름을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="af5f6851b0dc51557521b3f2a040fcad95429166" translate="yes" xml:space="preserve">
          <source>In class names, acronyms are &lt;em&gt;all-uppercase&lt;/em&gt;. For example, &lt;code&gt;HTTP&lt;/code&gt;, and &lt;code&gt;LibXML&lt;/code&gt;.</source>
          <target state="translated">클래스 이름에서 두문자어는 &lt;em&gt;모두 대문자&lt;/em&gt; 입니다. 예를 들어, &lt;code&gt;HTTP&lt;/code&gt; 및 &lt;code&gt;LibXML&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="92b90c702b82602a8ad11637852efc2a0a14c17d" translate="yes" xml:space="preserve">
          <source>In code examples, the comment &lt;code&gt;#=&amp;gt;&lt;/code&gt; is used to show the value of an expression. For example:</source>
          <target state="translated">코드 예제에서 &lt;code&gt;#=&amp;gt;&lt;/code&gt; 주석은 표현식의 값을 표시하는 데 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dd8e35bbf336b39b920f37a26849fc466895e2d6" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; changes to a different location while preserving the same wall time, which results in different instants on the time line.</source>
          <target state="translated">반대로 &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; 은 동일한 벽 시간을 유지하면서 다른 위치로 변경되어 타임 라인에 다른 순간이 생깁니다 .</target>
        </trans-unit>
        <trans-unit id="91252187c9622577b97522e09b6689e3975ee758" translate="yes" xml:space="preserve">
          <source>In either case, &lt;code&gt;&amp;amp;.some_method&lt;/code&gt; is an argument passed to &lt;code&gt;method&lt;/code&gt;. This argument is syntactically equivalent to the block variants. It is only syntactic sugar and does not have any performance penalty.</source>
          <target state="translated">두 경우 모두 &lt;code&gt;&amp;amp;.some_method&lt;/code&gt; 는 &lt;code&gt;method&lt;/code&gt; 에 전달 된 인수 입니다. 이 인수는 구문 적으로 블록 변형과 동일합니다. 그것은 구문 설탕 일뿐이며 성능 저하가 없습니다.</target>
        </trans-unit>
        <trans-unit id="baabc5553f8c1404a113ef41725f49489e618aa7" translate="yes" xml:space="preserve">
          <source>In fact, the above code doesn't need the return type restriction in &lt;code&gt;self.unknown&lt;/code&gt;. The reason is that the compiler will also look at a class method's body and if it can apply one of the previous rules (it's a &lt;code&gt;new&lt;/code&gt; method, or it's a literal, etc.) it will infer the type from that expression. So, the above can be simply written like this:</source>
          <target state="translated">사실, 위의 코드는 &lt;code&gt;self.unknown&lt;/code&gt; 에서 반환 유형 제한이 필요하지 않습니다 . 그 이유는 컴파일러가 클래스 메서드의 본문을 살펴보고 이전 규칙 중 하나를 적용 할 수있는 경우 ( &lt;code&gt;new&lt;/code&gt; 메서드이거나 리터럴 등) 해당 식에서 형식을 유추합니다. 따라서 위와 같이 간단하게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5e98a764080798c366f229c0388793139f23457" translate="yes" xml:space="preserve">
          <source>In floored division, given two integers x and y:</source>
          <target state="translated">바닥 나누기에서 두 개의 정수 x와 y가 주어집니다.</target>
        </trans-unit>
        <trans-unit id="6c7bdc1551e860e2537e62a30de5df863b4efb84" translate="yes" xml:space="preserve">
          <source>In generated documentation the dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; method will always appear, regardless of you writing it or not.</source>
          <target state="translated">생성 된 문서에서 더미 &lt;code&gt;&amp;amp;block&lt;/code&gt; 방법은 작성 여부에 관계없이 항상 나타납니다.</target>
        </trans-unit>
        <trans-unit id="5c0d97ace8f4764818f14af7c2827d661b52d173" translate="yes" xml:space="preserve">
          <source>In its basic form, it allows matching a value against other values:</source>
          <target state="translated">기본 형식으로 다른 값과 값을 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba3d240203a8b6c79f2e44535d1881beb0aa8f5e" translate="yes" xml:space="preserve">
          <source>In macro definitions, arguments are passed as their AST nodes, giving you access to them in macro expansions (&lt;code&gt;{{some_macro_argument}}&lt;/code&gt;). However that is not true for macro defs. Here the argument list is that of the method generated by the macro def. You cannot access their compile-time value.</source>
          <target state="translated">매크로 정의에서 인수는 AST 노드로 전달되어 매크로 확장 ( &lt;code&gt;{{some_macro_argument}}&lt;/code&gt; ) 에서 액세스 할 수 있습니다 . 그러나 매크로 정의의 경우에는 그렇지 않습니다. 여기서 인수 목록은 매크로 def에 의해 생성 된 메소드의 인수 목록입니다. 컴파일 타임 값에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="94787ae1d7dc4b98ad101c6e6e42c45d18f1d1de" translate="yes" xml:space="preserve">
          <source>In macro definitions, arguments are passed as their AST nodes, giving you access to them in macro expansions (&lt;code&gt;{{some_macro_argument}}&lt;/code&gt;). However that is not true for macro defs. Here the parameter list is that of the method generated by the macro def. You cannot access the call arguments during compile-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdf26967d789974e8d26a48672ad46762c3b391" translate="yes" xml:space="preserve">
          <source>In many programming languages what will happen is that &lt;code&gt;to_s&lt;/code&gt;, or a similar method for converting the object to its string representation, will be invoked, and then that string will be written to the standard output. This works, but it has a flaw: it creates an intermediate string, in heap memory, only to write it and then discard it. This, involves a heap memory allocation and gives a bit of work to the GC.</source>
          <target state="translated">많은 프로그래밍 언어에서 발생하는 일은 &lt;code&gt;to_s&lt;/code&gt; 또는 객체를 문자열 표현으로 변환하는 비슷한 방법이 호출 된 다음 해당 문자열이 표준 출력에 기록됩니다. 이것은 작동하지만 결함이 있습니다 : 힙 메모리에 중간 문자열을 작성하여 쓰고 나서 버립니다. 이것은 힙 메모리 할당을 포함하며 GC에 약간의 작업을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d6fcf1095841b67382c241734de7c6c3270ef129" translate="yes" xml:space="preserve">
          <source>In method names, acronyms are &lt;em&gt;all-lowercase&lt;/em&gt;. For example &lt;code&gt;#from_json&lt;/code&gt;, &lt;code&gt;#to_io&lt;/code&gt;.</source>
          <target state="translated">메소드 이름에서 두문자어는 &lt;em&gt;모두 소문자&lt;/em&gt; 입니다. 예를 들어 &lt;code&gt;#from_json&lt;/code&gt; , &lt;code&gt;#to_io&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3a360bf63eddcf8c579e6470067ffcccdad8911d" translate="yes" xml:space="preserve">
          <source>In native &lt;em&gt;runners&lt;/em&gt; (&lt;code&gt;language: crystal&lt;/code&gt;), Travis CI already automatically installs shards dependencies using &lt;code&gt;shards install&lt;/code&gt;. To improve build performance we may add &lt;a href=&quot;#caching&quot;&gt;caching&lt;/a&gt; on top of that.</source>
          <target state="translated">네이티브 &lt;em&gt;러너&lt;/em&gt; ( &lt;code&gt;language: crystal&lt;/code&gt; )에서 Travis CI는 이미 &lt;code&gt;shards install&lt;/code&gt; 을 사용하여 샤드 종속성을 자동으로 설치합니다 . 빌드 성능을 향상시키기 위해 그 위에 &lt;a href=&quot;#caching&quot;&gt;캐싱&lt;/a&gt; 을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="abef0c25fad769d15456af4cd758bf852ce49066" translate="yes" xml:space="preserve">
          <source>In one moment a transfer is made from one account to the other. For example, &lt;em&gt;John transfers $50 to Sarah&lt;/em&gt;</source>
          <target state="translated">한 순간에 한 계정에서 다른 계정으로 이체가 이루어집니다. 예를 들어, &lt;em&gt;John은 $ 50를 Sarah에게 옮깁니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9b20353fa4a607cc54a9a084e3781b0d325118f" translate="yes" xml:space="preserve">
          <source>In order to achieve this, the compiler executable provides two flags:</source>
          <target state="translated">이를 달성하기 위해 컴파일러 실행 파일은 두 개의 플래그를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="232cb10cff65d24e1741174be11a5f0db58c43bc" translate="yes" xml:space="preserve">
          <source>In order to create a new object with the same value as an existing one, there are two possible routes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fca536d6d8a121e64fa8a24226d59515e156fc8" translate="yes" xml:space="preserve">
          <source>In order to release a Crystal Shard, and follow along with this tutorial, you will need the following:</source>
          <target state="translated">Crystal Shard를 릴리스하고이 학습서를 따르려면 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c4ec4613d00ad33e166ff9c24337bc30ce5d64f2" translate="yes" xml:space="preserve">
          <source>In our case, we are going to use &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal&quot;&gt;Crystal&amp;rsquo;s Orb&lt;/a&gt;</source>
          <target state="translated">우리의 경우에는 &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal&quot;&gt;Crystal의 Orb&lt;/a&gt; 를 사용할 것입니다.</target>
        </trans-unit>
        <trans-unit id="45845528a893d7f07d0dcb0adb6bf6678c74e3ff" translate="yes" xml:space="preserve">
          <source>In regular code &lt;code&gt;Int32 -&amp;gt; String&lt;/code&gt; is a syntax error.</source>
          <target state="translated">일반 코드에서 &lt;code&gt;Int32 -&amp;gt; String&lt;/code&gt; 은 구문 오류입니다.</target>
        </trans-unit>
        <trans-unit id="43c7a4d4741aa6515f174c290b51cd5a14d9ddd0" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32*&lt;/code&gt; means invoking the &lt;code&gt;*&lt;/code&gt; method on &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">정규 코드에서 &lt;code&gt;Int32*&lt;/code&gt; 수단은 호출 &lt;code&gt;*&lt;/code&gt; 에있어서 &lt;code&gt;Int32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3f6356268a6e30bf06632cfbb11e2a11cbb4d50" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32?&lt;/code&gt; is a syntax error.</source>
          <target state="translated">일반 코드에서 &lt;code&gt;Int32?&lt;/code&gt; 구문 오류입니다.</target>
        </trans-unit>
        <trans-unit id="9b8f7507152673e1002b12bbe28c9c0d23bcc529" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32?&lt;/code&gt; is an &lt;code&gt;Int32 | ::Nil&lt;/code&gt; union type itself.</source>
          <target state="translated">일반 코드에서 &lt;code&gt;Int32?&lt;/code&gt; 는 &lt;code&gt;Int32 | ::Nil&lt;/code&gt; 유니온 타입 자체.</target>
        </trans-unit>
        <trans-unit id="492f078cffe16fb68d2167d03739db05308b94af" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32[8]&lt;/code&gt; means invoking the &lt;code&gt;[]&lt;/code&gt; method on &lt;code&gt;Int32&lt;/code&gt; with &lt;code&gt;8&lt;/code&gt; as an argument.</source>
          <target state="translated">일반 코드에서 &lt;code&gt;Int32[8]&lt;/code&gt; 은 &lt;code&gt;Int32&lt;/code&gt; 에서 &lt;code&gt;8&lt;/code&gt; 을 인수로 사용 하여 &lt;code&gt;[]&lt;/code&gt; 메서드를 호출하는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="526586a834f1acd181071ee8a67839e86c895c7f" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;{Int32, String}&lt;/code&gt; is a tuple instance containing &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; as its elements. This is different than the above tuple &lt;strong&gt;type&lt;/strong&gt;.</source>
          <target state="translated">일반 코드에서 &lt;code&gt;{Int32, String}&lt;/code&gt; 은 &lt;code&gt;Int32&lt;/code&gt; 및 &lt;code&gt;String&lt;/code&gt; 을 요소로 포함하는 튜플 인스턴스 입니다. 이것은 위의 튜플 &lt;strong&gt;유형&lt;/strong&gt; 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="95a61b2f88a6519db2174b4c0fd81ab4104e656f" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;{x: Int32, y: String}&lt;/code&gt; is a named tuple instance containing &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; for &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. This is different than the above named tuple &lt;strong&gt;type&lt;/strong&gt;.</source>
          <target state="translated">일반 코드에서 &lt;code&gt;{x: Int32, y: String}&lt;/code&gt; 은 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 에 대한 &lt;code&gt;Int32&lt;/code&gt; 및 &lt;code&gt;String&lt;/code&gt; 을 포함하는 명명 된 튜플 인스턴스 입니다. 이것은 위에서 언급 한 tuple &lt;strong&gt;type&lt;/strong&gt; 과 다릅니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9197929b078049f3d920b613864a5137ba83476e" translate="yes" xml:space="preserve">
          <source>In short, avoid &lt;code&gt;&amp;amp;block&lt;/code&gt; forwarding when &lt;code&gt;yield&lt;/code&gt; is involved.</source>
          <target state="translated">쇼트 피에서 &lt;code&gt;&amp;amp;block&lt;/code&gt; 을 전달할 때 &lt;code&gt;yield&lt;/code&gt; 참여하고있다.</target>
        </trans-unit>
        <trans-unit id="20ff5b78c5e6b747a3030301d6331afba01439db" translate="yes" xml:space="preserve">
          <source>In such cases, the choice of time zone, and therefore the time, is not well-defined. This method returns a time that is correct in one of the two zones involved in the transition, but it does not guarantee which.</source>
          <target state="translated">이러한 경우 시간대 선택, 따라서 시간이 잘 정의되어 있지 않습니다. 이 방법은 전환과 관련된 두 영역 중 하나에서 정확한 시간을 반환하지만 어느 것을 보장하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a0c05f42e0f0e35e6860c2aa34f779c5ad03453" translate="yes" xml:space="preserve">
          <source>In test files, specs are structured by example groups which are defined by &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; sections. Typically a top level &lt;code&gt;describe&lt;/code&gt; defines the outer unit (such as a class) to be tested by the spec. Further &lt;code&gt;describe&lt;/code&gt; sections can be nested within the outer unit to specify smaller units under test (such as individual methods).</source>
          <target state="translated">테스트 파일에서 스펙은 &lt;code&gt;describe&lt;/code&gt; 및 &lt;code&gt;context&lt;/code&gt; 섹션으로 정의 된 예제 그룹으로 구성됩니다 . 일반적으로 최상위 레벨 &lt;code&gt;describe&lt;/code&gt; 은 스펙에서 테스트 할 외부 장치 (예 : 클래스)를 정의합니다. 추가 &lt;code&gt;describe&lt;/code&gt; 섹션은 외부 장치 내에 중첩되어 테스트중인 더 작은 단위 (예 : 개별 방법)를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70bbec41f3009635d972183771280ceb207e601f" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;Badges&lt;/em&gt; section of the &lt;em&gt;General&lt;/em&gt; settings, we'll first add a release badge. The link is: &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/pipelines&lt;/code&gt; and the &lt;em&gt;Badge Image URL&lt;/em&gt; is: &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/badges/master/pipeline.svg&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;일반&lt;/em&gt; 설정 의 &lt;em&gt;배지&lt;/em&gt; 섹션에서 먼저 릴리스 배지를 추가합니다. 링크 : &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/pipelines&lt;/code&gt; 및 &lt;em&gt;배지 이미지 URL&lt;/em&gt; : &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/badges/master/pipeline.svg&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df7797ad4b749b9838697b2454d45f1289a82261" translate="yes" xml:space="preserve">
          <source>In the IPv4 family, loopback addresses are all addresses in the subnet &lt;code&gt;127.0.0.0/24&lt;/code&gt;. In IPv6 &lt;code&gt;::1&lt;/code&gt; is the loopback address.</source>
          <target state="translated">IPv4 제품군에서 루프백 주소는 모두 서브넷 &lt;code&gt;127.0.0.0/24&lt;/code&gt; 의 주소입니다 . IPv6에서 &lt;code&gt;::1&lt;/code&gt; 은 루프백 주소입니다.</target>
        </trans-unit>
        <trans-unit id="5571ff15655a22733fe5015d3a6e2b504b7002f6" translate="yes" xml:space="preserve">
          <source>In the above case, &lt;code&gt;@lucky_number&lt;/code&gt; will be inferred to be &lt;code&gt;Int32 | Nil&lt;/code&gt;: &lt;code&gt;Int32&lt;/code&gt; because 42 was assigned to it, and &lt;code&gt;Nil&lt;/code&gt; because it wasn't assigned in all of the class' initialize methods.</source>
          <target state="translated">위의 경우 &lt;code&gt;@lucky_number&lt;/code&gt; 는 &lt;code&gt;Int32 | Nil&lt;/code&gt; : 42가 할당 &lt;code&gt;Int32&lt;/code&gt; , 모든 클래스의 initialize 메소드에 할당되지 않았으므로 &lt;code&gt;Nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8efa502e913abbc79dcda531f8a0990c2a080c79" translate="yes" xml:space="preserve">
          <source>In the above case, the compiler will still infer &lt;code&gt;@name&lt;/code&gt; to be &lt;code&gt;String&lt;/code&gt;, and later will give a compile time error, when fully typing that method, saying that &lt;code&gt;Int32&lt;/code&gt; can't be assigned to a variable of type &lt;code&gt;String&lt;/code&gt;. Use an explicit type restriction if &lt;code&gt;@name&lt;/code&gt; isn't supposed to be a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">위의 경우 컴파일러는 여전히 &lt;code&gt;@name&lt;/code&gt; 을 &lt;code&gt;String&lt;/code&gt; 으로 유추 하고 나중에 해당 메소드를 완전히 입력하면 &lt;code&gt;Int32&lt;/code&gt; 를 &lt;code&gt;String&lt;/code&gt; 유형의 변수에 지정할 수 없다는 컴파일 시간 오류를 발생시킵니다 . &lt;code&gt;@name&lt;/code&gt; 이 &lt;code&gt;String&lt;/code&gt; 이 아닌 경우 명시 적 유형 제한을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="48ed7572b4d153af5a9de9d9ab6e906482e280b1" translate="yes" xml:space="preserve">
          <source>In the above code we didn't have to specify the type arguments of &lt;code&gt;MyBox&lt;/code&gt;, the compiler inferred them following this process:</source>
          <target state="translated">위의 코드에서 &lt;code&gt;MyBox&lt;/code&gt; 의 형식 인수를 지정할 필요가 없었으며 컴파일러는 다음과 같은 과정을 통해 유추했습니다.</target>
        </trans-unit>
        <trans-unit id="a818a2bc286641ec8480d71d3ba85299f97abeb4" translate="yes" xml:space="preserve">
          <source>In the above code, &lt;code&gt;a&lt;/code&gt; is a union of &lt;code&gt;Int32 | String&lt;/code&gt;. If for some reason we are sure &lt;code&gt;a&lt;/code&gt; is an &lt;code&gt;Int32&lt;/code&gt; after the &lt;code&gt;if&lt;/code&gt;, we can force the compiler to treat it like one:</source>
          <target state="translated">위의 코드에서 &lt;code&gt;a&lt;/code&gt; 는 &lt;code&gt;Int32 | String&lt;/code&gt; . 어떤 이유로 우리는 &lt;code&gt;if&lt;/code&gt; 다음에 &lt;code&gt;a&lt;/code&gt; 가 &lt;code&gt;Int32&lt;/code&gt; 라고 확신 한다면 컴파일러가 그것을 하나처럼 취급하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b85f665ae6c92e2a3db22fa56a75e055c972b04" translate="yes" xml:space="preserve">
          <source>In the above example &lt;code&gt;@lucky_number&lt;/code&gt; will be inferred to be &lt;code&gt;Int32 | Nil&lt;/code&gt;. This is very useful for lazily initialized variables.</source>
          <target state="translated">위의 예에서 &lt;code&gt;@lucky_number&lt;/code&gt; 는 &lt;code&gt;Int32 | Nil&lt;/code&gt; . 이는 지연 초기화 변수에 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="124ada8309146e0f4c168bc700ffa0393754b23e" translate="yes" xml:space="preserve">
          <source>In the above example the type of &lt;code&gt;&amp;amp;block&lt;/code&gt; wasn't specified: this just means that the captured block doesn't have arguments and doesn't return anything.</source>
          <target state="translated">위의 예에서 &lt;code&gt;&amp;amp;block&lt;/code&gt; 의 유형 이 지정되지 않았습니다. 이것은 캡처 된 블록에 인수가없고 아무 것도 반환하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="52d0821b1b1a52f013f18d4998ae7cbb3ad8aa4b" translate="yes" xml:space="preserve">
          <source>In the above example the type of &lt;code&gt;&amp;amp;block&lt;/code&gt; wasn't specified: this just means that the captured block doesn't take any arguments and doesn't return anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a7642382c651738fddc7f605477138fd4fcf59" translate="yes" xml:space="preserve">
          <source>In the above example we used &lt;code&gt;nil&lt;/code&gt; just to communicate that the fiber ended. We can also use channels to communicate values between fibers:</source>
          <target state="translated">위의 예에서 우리는 &lt;code&gt;nil&lt;/code&gt; 을 사용 하여 광섬유가 끝났다는 것을 전달했습니다. 채널을 사용하여 파이버간에 값을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d75092753e0f0d0e7a607d9814119db70549412" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;invoke&lt;/code&gt; receives a block. We can't pass &lt;code&gt;proc&lt;/code&gt; directly to it because &lt;code&gt;invoke&lt;/code&gt; doesn't receive regular arguments, just a block argument. We use &lt;code&gt;&amp;amp;&lt;/code&gt; to specify that we really want to pass &lt;code&gt;proc&lt;/code&gt; as the block argument. Otherwise:</source>
          <target state="translated">위 예제에서 &lt;code&gt;invoke&lt;/code&gt; 는 블록을받습니다. &lt;code&gt;invoke&lt;/code&gt; 는 일반적인 인수를받지 않고 블록 인수 만 받기 때문에 &lt;code&gt;proc&lt;/code&gt; 을 직접 전달할 수 없습니다 . 우리는 사용 &lt;code&gt;&amp;amp;&lt;/code&gt; 우리가 정말 통과하도록 지정할 &lt;code&gt;proc&lt;/code&gt; 블록 인수로. 그렇지 않으면:</target>
        </trans-unit>
        <trans-unit id="d3dbe0c0ea2d5e5cc5ba04c9b70d7366c234db59" translate="yes" xml:space="preserve">
          <source>In the above example, even though &lt;code&gt;x&lt;/code&gt; is a local variable, it was captured by the proc literal. In this case the compiler allocates &lt;code&gt;x&lt;/code&gt; on the heap and uses it as the context data of the proc to make it work, because normally local variables live in the stack and are gone after a method returns.</source>
          <target state="translated">위의 예에서 &lt;code&gt;x&lt;/code&gt; 는 로컬 변수이지만 proc 리터럴에 의해 캡처되었습니다. 이 경우 컴파일러 는 힙에 &lt;code&gt;x&lt;/code&gt; 를 할당 하고이를 proc의 컨텍스트 데이터로 사용하여 작업을 수행합니다. 일반적으로 로컬 변수는 스택에 존재하고 메소드가 반환 된 후에 사라지기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="a91f1497e93bf47302926f3080552ab1b7bead36" translate="yes" xml:space="preserve">
          <source>In the above example, it is as if we pasted the &lt;code&gt;size&lt;/code&gt; method from the module into the &lt;code&gt;Items&lt;/code&gt; class. The way this really works is by making each type have a list of ancestors, or parents. By default this list starts with the superclass. As modules are included they are &lt;strong&gt;prepended&lt;/strong&gt; to this list. When a method is not found in a type it is looked up in this list. When you invoke &lt;code&gt;super&lt;/code&gt;, the first type in this ancestors list is used.</source>
          <target state="translated">위 예제에서, 우리는 &lt;code&gt;size&lt;/code&gt; 메소드를 모듈에서 &lt;code&gt;Items&lt;/code&gt; 클래스에 붙여 넣은 것처럼 보입니다 . 이것이 실제로 작동하는 방식은 각 유형에 조상 또는 부모 목록이 있도록하는 것입니다. 기본적으로이 목록은 수퍼 클래스로 시작합니다. 모듈이 포함 되면이 목록 &lt;strong&gt;앞에 붙&lt;/strong&gt; 습니다. 유형에 메소드가 없으면이 목록에서 조회됩니다. &lt;code&gt;super&lt;/code&gt; 를 호출하면 이 상위 목록의 첫 번째 유형이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="87c6bc18e6c0d45245b059a944b3bf024ed56dae" translate="yes" xml:space="preserve">
          <source>In the above example, three indexed variables are declared, assigned values, and then printed, displaying their corresponding indices.</source>
          <target state="translated">위의 예에서, 세 개의 색인화 된 변수가 선언되고 값이 할당 된 다음 해당 색인이 표시되어 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="d122c215033c5da6e1628b04dc3f3c56c303fd64" translate="yes" xml:space="preserve">
          <source>In the above example, trying to invoke a method on the returned value will give a compile time error unless both &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; define that method:</source>
          <target state="translated">위의 예제에서 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; 이 모두 해당 메소드를 정의 하지 않으면 리턴 된 값에서 메소드를 호출하려고하면 컴파일 시간 오류가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="51415e1d10034628d167c7a1b19bbc3f9d76ff9c" translate="yes" xml:space="preserve">
          <source>In the above example, we start a transaction simply by calling the method &lt;code&gt;Database#transaction&lt;/code&gt; (how we get the &lt;code&gt;database&lt;/code&gt; object is encapsulated in the method &lt;code&gt;get_bank_db&lt;/code&gt; and is out of the scope of this document). The &lt;code&gt;block&lt;/code&gt; is the body of the transaction. When the &lt;code&gt;block&lt;/code&gt; gets executed (without any error) then an &lt;strong&gt;implicit commit&lt;/strong&gt; is finally executed to persist the changes in the database. If an exception is raised by one of the operations, then an &lt;strong&gt;implicit rollback&lt;/strong&gt; is executed, bringing the database to the state before the transaction started.</source>
          <target state="translated">위의 예에서 &lt;code&gt;Database#transaction&lt;/code&gt; 메소드를 호출하여 트랜잭션을 시작 합니다 ( &lt;code&gt;database&lt;/code&gt; 오브젝트가 &lt;code&gt;get_bank_db&lt;/code&gt; 메소드에 캡슐화되어 있고이 문서의 범위를 벗어남). &lt;code&gt;block&lt;/code&gt; 거래의 기관이다. &lt;code&gt;block&lt;/code&gt; 이 오류없이 실행될 때 데이터베이스의 변경 사항을 유지하기 위해 &lt;strong&gt;암시 적 커밋&lt;/strong&gt; 이 마지막으로 실행됩니다. 작업 중 하나에 의해 예외가 발생하면 &lt;strong&gt;암시 적 롤백&lt;/strong&gt; 이 실행되어 데이터베이스가 트랜잭션이 시작되기 전의 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="fcef7a51e128206daec27d6a7e4f9aa89371cab0" translate="yes" xml:space="preserve">
          <source>In the case of flags enums, this invokes &lt;code&gt;&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;#includes?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">플래그 열거의 경우 &lt;code&gt;&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;#includes?&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a7dd16b5b05f743bcfad7a9a5465ff9f7a7ddad" translate="yes" xml:space="preserve">
          <source>In the case of regular enums, this compares by equality (&lt;code&gt;&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">정규 열거 형의 경우 이는 동등성 ( &lt;code&gt;&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; )으로 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="2bcd9f4e856948e8a3be2a8f5fb09b0eb29b464e" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@age&lt;/code&gt; is inferred to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">다음 예제에서 &lt;code&gt;@age&lt;/code&gt; 는 &lt;code&gt;Int32&lt;/code&gt; 로 추론됩니다 .</target>
        </trans-unit>
        <trans-unit id="4a5b0626fee0a18d632f9443ed431c26862140e0" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; because the method argument &lt;code&gt;name&lt;/code&gt; has a type restriction of type &lt;code&gt;String&lt;/code&gt;, and that argument is assigned to &lt;code&gt;@name&lt;/code&gt;.</source>
          <target state="translated">다음 예제 에서 메소드 인수 &lt;code&gt;name&lt;/code&gt; 의 유형 제한 유형이 &lt;code&gt;String&lt;/code&gt; 이고 해당 인수가 &lt;code&gt;@name&lt;/code&gt; 에 지정 되므로 &lt;code&gt;@name&lt;/code&gt; 은 &lt;code&gt;String&lt;/code&gt; 것으로 추론됩니다 .</target>
        </trans-unit>
        <trans-unit id="ce63603b8610d09aae6c81774d40acf755771ebf" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; because the method parameter &lt;code&gt;name&lt;/code&gt; has a type restriction of type &lt;code&gt;String&lt;/code&gt;, and that parameter is assigned to &lt;code&gt;@name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7313dce0ee84b164076b56b4581f51dde5ec706" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@address&lt;/code&gt; is inferred to be &lt;code&gt;Address&lt;/code&gt;, because the class method &lt;code&gt;Address.unknown&lt;/code&gt; has a return type restriction of &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">다음 예제 에서 클래스 메소드 &lt;code&gt;Address.unknown&lt;/code&gt; 의 리턴 유형 제한은 &lt;code&gt;Address&lt;/code&gt; 이므로 &lt;code&gt;@address&lt;/code&gt; 는 &lt;code&gt;Address&lt;/code&gt; 로 추론됩니다 .</target>
        </trans-unit>
        <trans-unit id="a49029b9c2bcaa1c2e4dd77cea777c2e41fb65b4" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@address&lt;/code&gt; is inferred to be &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">다음 예에서 &lt;code&gt;@address&lt;/code&gt; 는 &lt;code&gt;Address&lt;/code&gt; 로 추론됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3ca8f892e668e16502b6aaabe088f879f063a50" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;@age&lt;/code&gt; to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">다음 예제에서 &lt;code&gt;@name&lt;/code&gt; 은 &lt;code&gt;String&lt;/code&gt; 이고 &lt;code&gt;@age&lt;/code&gt; 는 &lt;code&gt;Int32&lt;/code&gt; 라는 것으로 추론됩니다 .</target>
        </trans-unit>
        <trans-unit id="9df5a618b3865cffd7845a48b17f694f112e9529" translate="yes" xml:space="preserve">
          <source>In the following example, because the default value of &lt;code&gt;name&lt;/code&gt; is a string literal, and it's later assigned to &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt; will be added to the set of inferred types.</source>
          <target state="translated">다음 예에서, 때문에 기본값 &lt;code&gt;name&lt;/code&gt; 문자열 리터럴이며, 나중에에 할당 &lt;code&gt;@name&lt;/code&gt; , &lt;code&gt;String&lt;/code&gt; 추론 유형의 세트에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a0b5af7a3b99d804b6630e30b044d9107e3bfa8b" translate="yes" xml:space="preserve">
          <source>In the general case, when two types &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; are combined, the result is a union &lt;code&gt;T1 | T2&lt;/code&gt;. However, there are a few cases where the resulting type is a different type.</source>
          <target state="translated">일반적으로 두 가지 유형 &lt;code&gt;T1&lt;/code&gt; 과 &lt;code&gt;T2&lt;/code&gt; 가 결합되면 결과는 공용체 &lt;code&gt;T1 | T2&lt;/code&gt; . 그러나 결과 유형이 다른 유형 인 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="41bd7d3571e98f2aabd047cdca17487d0bc0458d" translate="yes" xml:space="preserve">
          <source>In the next example we will let the &lt;code&gt;database&lt;/code&gt; object &lt;em&gt;to manage the connections by itself&lt;/em&gt;, like this:</source>
          <target state="translated">다음 예에서는 다음과 같이 &lt;code&gt;database&lt;/code&gt; 개체 &lt;em&gt;가 연결을 자체적으로 관리하도록 할&lt;/em&gt; 것입니다.</target>
        </trans-unit>
        <trans-unit id="ce0574c23dbe80e313faea3ea12ecec94b14f2eb" translate="yes" xml:space="preserve">
          <source>In the next subsections, we are going to present 2 continuous integration tools: &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI&lt;/a&gt; and use them with a Crystal example application.</source>
          <target state="translated">다음 하위 섹션에서는 &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; 및 &lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI의&lt;/a&gt; 두 가지 연속 통합 도구를 소개 하고이를 Crystal 예제 응용 프로그램과 함께 사용합니다.</target>
        </trans-unit>
        <trans-unit id="68060a64d5ca9a24e2d3d6068708a62ef681950d" translate="yes" xml:space="preserve">
          <source>In the previous example &lt;code&gt;self&lt;/code&gt; is the same as writing &lt;code&gt;Person&lt;/code&gt;. But, in general, &lt;code&gt;self&lt;/code&gt; is the same as writing the type that will finally own that method, which, when modules are involved, becomes more useful.</source>
          <target state="translated">이전 예제에서 &lt;code&gt;self&lt;/code&gt; 는 &lt;code&gt;Person&lt;/code&gt; 작성과 동일 합니다. 그러나 일반적으로 &lt;code&gt;self&lt;/code&gt; 는 모듈이 포함될 때 더 유용하게되는 해당 메소드를 최종적으로 소유 할 유형을 작성하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9aa883f457852d8bf98bb91416c402f814326240" translate="yes" xml:space="preserve">
          <source>In this case the implementation can pre-compute the needed string bytesize and so it's a bit more performant than interpolating non-string values.</source>
          <target state="translated">이 경우 구현은 필요한 문자열 바이트 크기를 미리 계산할 수 있으므로 문자열이 아닌 값을 보간하는 것보다 약간 더 성능이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2f54375bbc65672792f9802cbb3ea684975e5eb3" translate="yes" xml:space="preserve">
          <source>In this case the implementation just does &lt;code&gt;char + value&lt;/code&gt;.</source>
          <target state="translated">이 경우 구현은 &lt;code&gt;char + value&lt;/code&gt; 만 수행 합니다 .</target>
        </trans-unit>
        <trans-unit id="307c91e8acff393270feb3e4d95f94d3af69419a" translate="yes" xml:space="preserve">
          <source>In this case the implementation just does &lt;code&gt;value + char&lt;/code&gt;.</source>
          <target state="translated">이 경우 구현은 &lt;code&gt;value + char&lt;/code&gt; 만 수행 합니다 .</target>
        </trans-unit>
        <trans-unit id="4a931b3128febf1a6b6aa5a78431119a9eae0ebb" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the result of calling &lt;code&gt;value.to_s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ef2a6c682e1903f787b9168f40e0c66a6a5535" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the result of calling &lt;code&gt;value&lt;a href=&quot;string#to_s:String-instance-method&quot;&gt;.to_s&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 경우 구현은 &lt;code&gt;value&lt;a href=&quot;string#to_s:String-instance-method&quot;&gt;.to_s&lt;/a&gt;&lt;/code&gt; 를 호출 한 결과를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="df8b0ef75fdb17df030881f8958c1f3bf6d87fa8" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the same string.</source>
          <target state="translated">이 경우 구현은 동일한 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4386753354e6ccd734cdcefc2e3c9a530b2d1415" translate="yes" xml:space="preserve">
          <source>In this case the implementation will call &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; with the given values.</source>
          <target state="translated">이 경우 구현은 주어진 값으로 &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="514e6fa2040cfbd7a473f42da2776658c65cb65d" translate="yes" xml:space="preserve">
          <source>In this case, leading whitespace is not included in the resulting string.</source>
          <target state="translated">이 경우 선행 공백은 결과 문자열에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7fd23cc1df5b309a251dda223a31fb375d169840" translate="yes" xml:space="preserve">
          <source>In this case, no runtime checks are done: pointers are unsafe and this type of casting is usually only needed in C bindings and low-level code.</source>
          <target state="translated">이 경우 런타임 검사가 수행되지 않습니다. 포인터는 안전하지 않으며이 유형의 캐스팅은 일반적으로 C 바인딩 및 저수준 코드에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ecc6b01e1f0b852bb60481077333828a0cfca72f" translate="yes" xml:space="preserve">
          <source>In this case, the block receives a parameter that represents the parameter passed to the option.</source>
          <target state="translated">이 경우 블록은 옵션에 전달 된 매개 변수를 나타내는 매개 변수를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="58cd2acc0f451b15658845bd31b1dcd0ff9563dc" translate="yes" xml:space="preserve">
          <source>In this section we are going to present some configuration examples to see how CircleCI implements some &lt;a href=&quot;https://circleci.com/docs/2.0/concepts/&quot;&gt;continuous integration concepts&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 CircleCI가 몇 가지 &lt;a href=&quot;https://circleci.com/docs/2.0/concepts/&quot;&gt;지속적인 통합 개념을&lt;/a&gt; 구현하는 방법을 확인하기 위해 몇 가지 구성 예를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ea2499982ba0ec5f98ffa6abd04f63800ca33fcb" translate="yes" xml:space="preserve">
          <source>In this section we are going to use &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; as our continuous-integration service. In a &lt;a href=&quot;https://circleci.com/docs/2.0/about-circleci/#section=welcome&quot;&gt;few words&lt;/a&gt; CircleCI automates your software builds, tests, and deployments. It supports &lt;a href=&quot;https://circleci.com/docs/2.0/demo-apps/#section=welcome&quot;&gt;different programming languages&lt;/a&gt; and for our particular case, it supports the &lt;a href=&quot;https://circleci.com/docs/2.0/language-crystal/&quot;&gt;Crystal language&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; 를 지속적인 통합 서비스로 사용할 것 입니다. 간단히 &lt;a href=&quot;https://circleci.com/docs/2.0/about-circleci/#section=welcome&quot;&gt;말해&lt;/a&gt; CircleCI는 소프트웨어 빌드, 테스트 및 배포를 자동화합니다. &lt;a href=&quot;https://circleci.com/docs/2.0/demo-apps/#section=welcome&quot;&gt;다양한 프로그래밍 언어를&lt;/a&gt; 지원하며 특정 경우에는 &lt;a href=&quot;https://circleci.com/docs/2.0/language-crystal/&quot;&gt;Crystal 언어를&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="1b268c510de8c14bbd5befa833dc45236404d1b0" translate="yes" xml:space="preserve">
          <source>In this section we are going to use &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; as our continuous-integration service. Travis CI is &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#more-than-running-tests&quot;&gt;mostly used&lt;/a&gt; for building and running tests for projects hosted at GitHub. It supports &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#selecting-a-different-programming-language&quot;&gt;different programming languages&lt;/a&gt; and for our particular case, it supports the &lt;a href=&quot;https://docs.travis-ci.com/user/languages/crystal/&quot;&gt;Crystal language&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; 를 지속적인 통합 서비스로 사용할 것 입니다. Travis CI는 &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#more-than-running-tests&quot;&gt;주로&lt;/a&gt; GitHub에서 호스팅되는 프로젝트의 테스트를 빌드하고 실행하는 데 사용됩니다 . &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#selecting-a-different-programming-language&quot;&gt;다양한 프로그래밍 언어를&lt;/a&gt; 지원하며 특정 경우에는 &lt;a href=&quot;https://docs.travis-ci.com/user/languages/crystal/&quot;&gt;Crystal 언어를&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="c25af0a6ae35089113e88ba9d5bc7c35374c0be7" translate="yes" xml:space="preserve">
          <source>In this tutorial, we'll be making a Crystal library called &lt;em&gt;palindrome-example&lt;/em&gt;.</source>
          <target state="translated">이 튜토리얼에서는 &lt;em&gt;palindrome-example&lt;/em&gt; 이라는 Crystal 라이브러리 &lt;em&gt;를&lt;/em&gt; 만듭니다.</target>
        </trans-unit>
        <trans-unit id="111a36bf8332a4163ec695bc63042943efe48fc1" translate="yes" xml:space="preserve">
          <source>In this way a block can be saved as a callback:</source>
          <target state="translated">이런 식으로 블록을 콜백으로 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b7dad6455dba565c9aa636279b2b42b57e655e4" translate="yes" xml:space="preserve">
          <source>In this way a module can be used as a namespace:</source>
          <target state="translated">이런 식으로 모듈을 네임 스페이스로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40f3ad3b83ad9ee22a604db1b623b84c7bb74df7" translate="yes" xml:space="preserve">
          <source>In this way generic types are less tedious to work with.</source>
          <target state="translated">이런 식으로 제네릭 형식은 작업하기가 덜 지루합니다.</target>
        </trans-unit>
        <trans-unit id="c7104d6ead642bbdcc16e9c61e87c72cd9a230e5" translate="yes" xml:space="preserve">
          <source>In this way we pass a pointer of &lt;code&gt;status_ptr&lt;/code&gt; to the function for it to fill its value.</source>
          <target state="translated">이런 식으로 &lt;code&gt;status_ptr&lt;/code&gt; 의 포인터를 함수에 전달하여 값을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="87a24f3eecbef741fef7cad513c261c725035de8" translate="yes" xml:space="preserve">
          <source>In those cases the iteration is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93de36436727da023b0275426c9ce5fcb0b002ae" translate="yes" xml:space="preserve">
          <source>In truncated division, given two integers x and y:</source>
          <target state="translated">잘린 나누기에서 두 개의 정수 x와 y가 주어집니다.</target>
        </trans-unit>
        <trans-unit id="eb4753ffe674feb5c9e2bb5af076e1e8c15a4c5a" translate="yes" xml:space="preserve">
          <source>In type restrictions, generic type arguments and other places where a type is expected, you can use a shorter syntax, as explained in the &lt;a href=&quot;../type_grammar&quot;&gt;type grammar&lt;/a&gt;:</source>
          <target state="translated">유형 제한, 일반 유형 인수 및 유형이 예상되는 기타 위치에서 &lt;a href=&quot;../type_grammar&quot;&gt;문법 유형에&lt;/a&gt; 설명 된대로 더 짧은 구문을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af93d6778e838a9db8bbbb9727cb630672bebd9b" translate="yes" xml:space="preserve">
          <source>In type restrictions, generic type arguments and other places where a type is expected, you can use a shorter syntax, as explained in the &lt;a href=&quot;../type_grammar&quot;&gt;type&lt;/a&gt;:</source>
          <target state="translated">에 설명 된대로 유형 제한, 제네릭 형식 인수 및 형식이 예상되는 다른 장소에서, 당신은 짧은 구문을 사용할 수 있습니다 &lt;a href=&quot;../type_grammar&quot;&gt;유형&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="81d1db0ef06261c321c2ce9f91cd5a1a34aca9de" translate="yes" xml:space="preserve">
          <source>In verbose mode prints the exception with its backtrace to the response, else a generic error message is returned to the client. Use the &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; before this to log the exception on the server side.</source>
          <target state="translated">상세 모드에서는 역 추적과 함께 예외를 응답에 인쇄합니다. 그렇지 않으면 일반 오류 메시지가 클라이언트에 리턴됩니다. 이 전에 &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; 를 사용하여 서버 측에서 예외를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="ef5582041da47fc0ca7c272b426adebeda6b6760" translate="yes" xml:space="preserve">
          <source>In verbose mode prints the exception with its backtrace to the response. Otherwise a generic error message is returned to the client.</source>
          <target state="translated">상세 모드에서는 응답에 대한 역 추적과 함께 예외를 인쇄합니다. 그렇지 않으면 일반 오류 메시지가 클라이언트에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="462205bf0a89cdc74a3011f60c8b25f7f515c495" translate="yes" xml:space="preserve">
          <source>In your terminal: &lt;code&gt;crystal init lib &amp;lt;YOUR-SHARD-NAME&amp;gt;&lt;/code&gt;</source>
          <target state="translated">터미널에서 : &lt;code&gt;crystal init lib &amp;lt;YOUR-SHARD-NAME&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb4f7828c46ac4c3d9f95d485eb13b699f135c25" translate="yes" xml:space="preserve">
          <source>Inappropriate ioctl for device</source>
          <target state="translated">기기에 부적절한 ioctl</target>
        </trans-unit>
        <trans-unit id="f9ea7c6310c5a06fef902644d25893b4d79e0078" translate="yes" xml:space="preserve">
          <source>Include the following line to allow configuration from environment variables.</source>
          <target state="translated">환경 변수에서 구성을 허용하려면 다음 행을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="da1d01d8cbbdaafc58904654ab11eedc627a6259" translate="yes" xml:space="preserve">
          <source>Included Modules</source>
          <target state="translated">포함 된 모듈</target>
        </trans-unit>
        <trans-unit id="21cab9a496932542bfe0aaa92041e8f1bf57af88" translate="yes" xml:space="preserve">
          <source>Includes the current position of the offset, the total size of the string, and five characters near the current position.</source>
          <target state="translated">오프셋의 현재 위치, 문자열의 총 크기 및 현재 위치 근처의 5자를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="26fe5bd7005257d25d665a6cd555f50ace814b67" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; will create &lt;code&gt;&lt;a href=&quot;serializable#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;self.from_json&lt;/code&gt; methods on the current class, and a constructor which takes a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt;. By default, these methods serialize into a json object containing the value of every instance variable, the keys being the instance variable name. Most primitives and collections supported as instance variable values (string, integer, array, hash, etc.), along with objects which define to_json and a constructor taking a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt;. Union types are also supported, including unions with nil. If multiple types in a union parse correctly, it is undefined which one will be chosen.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; 을 포함 하면 현재 클래스에서 &lt;code&gt;&lt;a href=&quot;serializable#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;self.from_json&lt;/code&gt; 메소드와 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; 생성하는 생성자가 작성됩니다 . 기본적으로 이러한 메소드는 모든 인스턴스 변수의 값을 포함하는 json 객체로 직렬화되며 키는 인스턴스 변수 이름입니다. 대부분의 프리미티브와 컬렉션은 to_json을 정의하는 객체와 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; 생성하는 생성자와 함께 인스턴스 변수 값 (문자열, 정수, 배열, 해시 등)으로 지원 됩니다. nil이있는 공용체를 포함하여 공용체 유형도 지원됩니다. 통합의 여러 유형이 올바르게 구문 분석되면 어떤 유형을 선택할지 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dddcc5b735eadc1af1b2a356449896a4f8df55ef" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; will create &lt;code&gt;&lt;a href=&quot;serializable#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;#to_yaml&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;self.from_yaml&lt;/code&gt; methods on the current class, and a constructor which takes a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt;. By default, these methods serialize into a yaml object containing the value of every instance variable, the keys being the instance variable name. Most primitives and collections supported as instance variable values (string, integer, array, hash, etc.), along with objects which define to_yaml and a constructor taking a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt;. Union types are also supported, including unions with nil. If multiple types in a union parse correctly, it is undefined which one will be chosen.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; 을 포함 하면 현재 클래스에서 &lt;code&gt;&lt;a href=&quot;serializable#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;#to_yaml&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;self.from_yaml&lt;/code&gt; 메소드와 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; 를 취하는 생성자가 작성됩니다 . 기본적으로 이러한 메소드는 모든 인스턴스 변수의 값을 포함하는 yaml 객체로 직렬화되며 키는 인스턴스 변수 이름입니다. 대부분의 프리미티브와 컬렉션은 to_yaml을 정의하는 객체와 &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; 생성하는 생성자와 함께 인스턴스 변수 값 (문자열, 정수, 배열, 해시 등)으로 지원 됩니다. nil이있는 공용체를 포함하여 공용체 유형도 지원됩니다. 통합의 여러 유형이 올바르게 구문 분석되면 어떤 유형을 선택할지 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab464ce8f134afcd16e7505da7fc547187588711" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; method, which compares the receiver against another object, returning:</source>
          <target state="translated">유형을 포함 하면 수신자를 다른 객체와 비교하여 다음을 반환 하는 &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 메소드를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="43fae64fc81923761b8ca1bdb4a3828cf6c92bf1" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method, which yields successive members of the collection.</source>
          <target state="translated">유형을 포함하면 &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 메소드를 제공해야하며 이는 컬렉션의 연속 멤버를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="29224445152eac3f72a08a9a33b8cba43f3d267a" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method, which yields successive members of the collection.</source>
          <target state="translated">포함 형식은 컬렉션의 연속 멤버를 생성 하는 &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; 메서드를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1aa2788cdc8e7cfe875775088a98530e243656f1" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; method, which compares the receiver against another object, returning a negative number, &lt;code&gt;0&lt;/code&gt;, a positive number or &lt;code&gt;nil&lt;/code&gt; depending on whether the receiver is less than, equal to, greater than the other object, or no order can be established.</source>
          <target state="translated">유형을 포함하면 &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 메소드를 제공해야 합니다. 수신자는 다른 오브젝트와 비교하여 수신자가 다른 오브젝트 보다 작거나 같거나 더 큰지 여부에 따라 음수, &lt;code&gt;0&lt;/code&gt; , 양수 또는 &lt;code&gt;nil&lt;/code&gt; 을 리턴합니다. 주문을 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a14219f8778db41eddc5fe7f7e4da01bbbd1253" translate="yes" xml:space="preserve">
          <source>Increases the indentation for breakables inside the current group.</source>
          <target state="translated">현재 그룹 내에서 깨지기 쉬운 파일에 대한 들여 쓰기를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="7f3ff4432c3a065ae2f44aff2a4430dfb6e9133b" translate="yes" xml:space="preserve">
          <source>Index Accessors</source>
          <target state="translated">인덱스 접근 자</target>
        </trans-unit>
        <trans-unit id="b5f75282b6cff2071f4955c844b900068b106883" translate="yes" xml:space="preserve">
          <source>Index accessors</source>
          <target state="translated">인덱스 접근 자</target>
        </trans-unit>
        <trans-unit id="d7bcf5defb30f792a057878148025a6c7e500c0d" translate="yes" xml:space="preserve">
          <source>Index accessors are used to query a value by index or key, for example an array item or map entry. The nilable variant &lt;code&gt;[]?&lt;/code&gt; is supposed to return &lt;code&gt;nil&lt;/code&gt; when the index is not found, while the non-nilable variant raises in that case. Implementations in the standard-library usually raise &lt;a href=&quot;https://crystal-lang.org/api/latest/KeyError.html&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://crystal-lang.org/api/latest/IndexError.html&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인덱스 접근자는 인덱스 또는 키 (예 : 배열 항목 또는 맵 항목)로 값을 쿼리하는 데 사용됩니다. nilable 변형 &lt;code&gt;[]?&lt;/code&gt; 인덱스를 찾을 수 없을 때 &lt;code&gt;nil&lt;/code&gt; 을 반환 하는 반면 nilable이 아닌 변형은이 경우 발생합니다. 표준 라이브러리의 구현은 일반적으로 &lt;a href=&quot;https://crystal-lang.org/api/latest/KeyError.html&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://crystal-lang.org/api/latest/IndexError.html&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="d6dc6f3198e1ab65580dfebac35a07a14e7e38f6" translate="yes" xml:space="preserve">
          <source>Index: Crystal Programming Language</source>
          <target state="translated">인덱스 : Crystal Programming Language</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="19de3299a3897fa0771a50182b11e1e8be821894" translate="yes" xml:space="preserve">
          <source>IndexError.new</source>
          <target state="translated">IndexError.new</target>
        </trans-unit>
        <trans-unit id="d8b6addd60debc77c2c9b03c90e8b626de36d170" translate="yes" xml:space="preserve">
          <source>Indexable</source>
          <target state="translated">Indexable</target>
        </trans-unit>
        <trans-unit id="c79cefe685814aa2f049a41f6ffc4e30d84b145c" translate="yes" xml:space="preserve">
          <source>Indexable#[]</source>
          <target state="translated">Indexable#[]</target>
        </trans-unit>
        <trans-unit id="df7babee602f0988fd98bb2f1d95a43bfac7caa9" translate="yes" xml:space="preserve">
          <source>Indexable#[]?</source>
          <target state="translated">Indexable#[]?</target>
        </trans-unit>
        <trans-unit id="05db1f01edfbc59515f166e88d4fd5b24f07c8e7" translate="yes" xml:space="preserve">
          <source>Indexable#dig</source>
          <target state="translated">Indexable#dig</target>
        </trans-unit>
        <trans-unit id="7af3718bc62736c3dfedac8bdc3d7da673715ce9" translate="yes" xml:space="preserve">
          <source>Indexable#dig?</source>
          <target state="translated">Indexable#dig?</target>
        </trans-unit>
        <trans-unit id="32b96fcd989302177599a91423fda4968c15acb5" translate="yes" xml:space="preserve">
          <source>Indexable#each</source>
          <target state="translated">Indexable#each</target>
        </trans-unit>
        <trans-unit id="7630382d1564302d2e2a8a2c487c20cb9b1b28b2" translate="yes" xml:space="preserve">
          <source>Indexable#hash</source>
          <target state="translated">Indexable#hash</target>
        </trans-unit>
        <trans-unit id="5723cc35dcf1bfe6bbb83dbe157b2d8b7b86b9a4" translate="yes" xml:space="preserve">
          <source>Indexable#join</source>
          <target state="translated">Indexable#join</target>
        </trans-unit>
        <trans-unit id="f1c21620b0bd8bdc033ef481e54e15c2d9fde8b0" translate="yes" xml:space="preserve">
          <source>Indexable#last</source>
          <target state="translated">Indexable#last</target>
        </trans-unit>
        <trans-unit id="4df56a7f87f1d712659a55c82d479f1c99939c9d" translate="yes" xml:space="preserve">
          <source>Indexable#size</source>
          <target state="translated">Indexable#size</target>
        </trans-unit>
        <trans-unit id="238e9f22f6c210dabfb3a95cc042e94e4ad66efe" translate="yes" xml:space="preserve">
          <source>Indexable#to_a</source>
          <target state="translated">Indexable#to_a</target>
        </trans-unit>
        <trans-unit id="ee0e2d3a57fd1cf7ddedb21fd52f835db33214e5" translate="yes" xml:space="preserve">
          <source>Indexable(T)</source>
          <target state="translated">Indexable(T)</target>
        </trans-unit>
        <trans-unit id="9d93b049bf4950dbec2b7d9c03737e03e1882b07" translate="yes" xml:space="preserve">
          <source>Indexable(Union(*T))</source>
          <target state="translated">Indexable(Union(*T))</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="0416c4a1d681a8fdc755037de993bdd49fa79545" translate="yes" xml:space="preserve">
          <source>Indexing starts at &lt;code&gt;0&lt;/code&gt;. A negative index is assumed to be relative to the end of the container: &lt;code&gt;-1&lt;/code&gt; indicates the last element, &lt;code&gt;-2&lt;/code&gt; is the next to last element, and so on.</source>
          <target state="translated">인덱싱은 &lt;code&gt;0&lt;/code&gt; 에서 시작합니다 . 음수 인덱스는 컨테이너의 끝을 기준으로 가정합니다. &lt;code&gt;-1&lt;/code&gt; 은 마지막 요소를 나타내고 &lt;code&gt;-2&lt;/code&gt; 는 마지막 요소 다음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ff4eafbd37e7902b944d838c2cde789f85ab1f7f" translate="yes" xml:space="preserve">
          <source>Indexing with a symbol that is only known at runtime will return a value whose type is the union of all the types in the named tuple, and might raise &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">런타임시에만 알려진 기호를 사용하여 인덱싱하면 유형이 명명 된 튜플의 모든 유형의 합집합 인 값을 반환하고 &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; 가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2caf89b3f9c705f50f90dbbb42966840fe3ba4c9" translate="yes" xml:space="preserve">
          <source>Indexing with an integer value that is only known at runtime will return a value whose type is the union of all the types in the tuple, and might raise &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">런타임시에만 알려진 정수 값을 사용하여 인덱싱하면 해당 유형이 튜플에있는 모든 유형의 합집합 인 값이 반환되고 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; 가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22ff70971870dbb59096c430e7b50b74e869044a" translate="yes" xml:space="preserve">
          <source>Indicates the call convention of a &lt;a href=&quot;../c_bindings/fun&quot;&gt;lib fun&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;../c_bindings/fun&quot;&gt;lib fun&lt;/a&gt; 의 호출 규칙을 나타냅니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fe205a81f47d8626e156d49fd481c57d8bb84c94" translate="yes" xml:space="preserve">
          <source>Indicates the possible hash algorithms for &lt;code&gt;&lt;a href=&quot;../openssl&quot;&gt;OpenSSL&lt;/a&gt;&lt;/code&gt; digest operations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../openssl&quot;&gt;OpenSSL&lt;/a&gt;&lt;/code&gt; 다이제스트 작업에 가능한 해시 알고리즘을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c9b3891cb26f0afc8f7ff60705c05c1d74b7dcb4" translate="yes" xml:space="preserve">
          <source>Info that &lt;code&gt;describe&lt;/code&gt;, &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; all have in common.</source>
          <target state="translated">정보는 &lt;code&gt;describe&lt;/code&gt; , &lt;code&gt;context&lt;/code&gt; 하고 &lt;code&gt;it&lt;/code&gt; 모두 공통점이있다.</target>
        </trans-unit>
        <trans-unit id="211f828d6f28bcc064ab08a81d3eea6343094a2a" translate="yes" xml:space="preserve">
          <source>Info#directory?</source>
          <target state="translated">Info#directory?</target>
        </trans-unit>
        <trans-unit id="555f919b4df3de254a8116361968e47b73856f7e" translate="yes" xml:space="preserve">
          <source>Info#file?</source>
          <target state="translated">Info#file?</target>
        </trans-unit>
        <trans-unit id="c19de402a865facf8738f953f5b3cea929ac9070" translate="yes" xml:space="preserve">
          <source>Info#flags</source>
          <target state="translated">Info#flags</target>
        </trans-unit>
        <trans-unit id="f74f97b45c200e1a01e4223bf1a54bf53d7e3800" translate="yes" xml:space="preserve">
          <source>Info#group</source>
          <target state="translated">Info#group</target>
        </trans-unit>
        <trans-unit id="d95b51d0127ae694191c0cee6c3d001768e04ca8" translate="yes" xml:space="preserve">
          <source>Info#group_id</source>
          <target state="translated">Info#group_id</target>
        </trans-unit>
        <trans-unit id="c557ef53f8bf8c3d8b352f500bfa9c605ff912d1" translate="yes" xml:space="preserve">
          <source>Info#modification_time</source>
          <target state="translated">Info#modification_time</target>
        </trans-unit>
        <trans-unit id="abbb4b0e1f640dfdfc8cb04ffa078cec69437063" translate="yes" xml:space="preserve">
          <source>Info#owner</source>
          <target state="translated">Info#owner</target>
        </trans-unit>
        <trans-unit id="7686462e432ff523e94a65c84705cc753f67de17" translate="yes" xml:space="preserve">
          <source>Info#owner_id</source>
          <target state="translated">Info#owner_id</target>
        </trans-unit>
        <trans-unit id="2cbcbed738d550b11fc7f09535150b157ff0bd78" translate="yes" xml:space="preserve">
          <source>Info#permissions</source>
          <target state="translated">Info#permissions</target>
        </trans-unit>
        <trans-unit id="bbfbc280aca1bd08275922fcf5683a9bff351752" translate="yes" xml:space="preserve">
          <source>Info#same_file?</source>
          <target state="translated">Info#same_file?</target>
        </trans-unit>
        <trans-unit id="8f76514c8d7427a911d17937ee22793264048637" translate="yes" xml:space="preserve">
          <source>Info#size</source>
          <target state="translated">Info#size</target>
        </trans-unit>
        <trans-unit id="1069ce11cd747c58056412e13320fc85bdd1c62b" translate="yes" xml:space="preserve">
          <source>Info#symlink?</source>
          <target state="translated">Info#symlink?</target>
        </trans-unit>
        <trans-unit id="131f0f2ef479d04720650444b3026d8bff5acb48" translate="yes" xml:space="preserve">
          <source>Info#type</source>
          <target state="translated">Info#type</target>
        </trans-unit>
        <trans-unit id="fd9e1e8fb8993dc0d9e9eeef8c93cc0189fa0b6d" translate="yes" xml:space="preserve">
          <source>Info.new</source>
          <target state="translated">Info.new</target>
        </trans-unit>
        <trans-unit id="3919f37f92b72d7d934c42faeef036bec6d07752" translate="yes" xml:space="preserve">
          <source>Informative</source>
          <target state="translated">Informative</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="5a9a718dd3cec7e2db3f95ddec3dcd166bff098e" translate="yes" xml:space="preserve">
          <source>Inheriting Documentation</source>
          <target state="translated">문서 상속</target>
        </trans-unit>
        <trans-unit id="ee4ac1c94b979fbbefb5d6504272ba72bca8e107" translate="yes" xml:space="preserve">
          <source>Inheriting documentation only works on &lt;em&gt;instance&lt;/em&gt;, non-constructor methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73aa49eaa4b825dc0db4ce8945a56681d937f402" translate="yes" xml:space="preserve">
          <source>Initializes a shard folder and creates a &lt;code&gt;shard.yml&lt;/code&gt;.</source>
          <target state="translated">샤드 폴더를 초기화하고 &lt;code&gt;shard.yml&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="079cd7451c2f33776e2d43a15299490325b9d402" translate="yes" xml:space="preserve">
          <source>Initializes an instance seeded from a system source.</source>
          <target state="translated">시스템 소스에서 시드 된 인스턴스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="e3feee74bdbd58050136cbaaf33ab5797560f65d" translate="yes" xml:space="preserve">
          <source>Initializes an instance with the given &lt;em&gt;seed&lt;/em&gt; and &lt;em&gt;sequence&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt;seed&lt;/em&gt; 와 &lt;em&gt;sequence&lt;/em&gt; 로 인스턴스를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="a02f1240730d62d775f24cef4c75c62f97f3d2a2" translate="yes" xml:space="preserve">
          <source>Initializes the GC</source>
          <target state="translated">GC를 초기화합니다</target>
        </trans-unit>
        <trans-unit id="cc218c2e160f72aaf4bd66baecf606176dbdfee8" translate="yes" xml:space="preserve">
          <source>Initializes the MIME database loading contents from a file.</source>
          <target state="translated">파일에서 MIME 데이터베이스로드 내용을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="6c2631e1bd6441c38f62d38f6c5e2eda71db2b45" translate="yes" xml:space="preserve">
          <source>Initializes the MIME database.</source>
          <target state="translated">MIME 데이터베이스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="67704b2a377775925196685fd1c04cfb5a7c685c" translate="yes" xml:space="preserve">
          <source>Initializes this handler to log to the given &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 로그하도록이 핸들러를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="a6f41200b6d51a2b0a4e22a2949eb0f878c8d407" translate="yes" xml:space="preserve">
          <source>Input/output error</source>
          <target state="translated">입출력 오류</target>
        </trans-unit>
        <trans-unit id="48a10ed30072d4eb54080a4b477ad2480832a17b" translate="yes" xml:space="preserve">
          <source>InputMode</source>
          <target state="translated">InputMode</target>
        </trans-unit>
        <trans-unit id="ea9cbaf61598ef8489f9448debe9d96258545178" translate="yes" xml:space="preserve">
          <source>InputMode#brkint?</source>
          <target state="translated">InputMode#brkint?</target>
        </trans-unit>
        <trans-unit id="f5b1e9eb8d41546c9c0bc12ee611b836d18b045d" translate="yes" xml:space="preserve">
          <source>InputMode#icrnl?</source>
          <target state="translated">InputMode#icrnl?</target>
        </trans-unit>
        <trans-unit id="7fe14c0807d2e2119a097ab2c65d048ff6c3d2e8" translate="yes" xml:space="preserve">
          <source>InputMode#ignbrk?</source>
          <target state="translated">InputMode#ignbrk?</target>
        </trans-unit>
        <trans-unit id="07bc9f299a0b4597d4e7d9fd3f01eb09387ed1ea" translate="yes" xml:space="preserve">
          <source>InputMode#igncr?</source>
          <target state="translated">InputMode#igncr?</target>
        </trans-unit>
        <trans-unit id="8e6342c1809c583298f0e791e4aa19c85c9665eb" translate="yes" xml:space="preserve">
          <source>InputMode#ignpar?</source>
          <target state="translated">InputMode#ignpar?</target>
        </trans-unit>
        <trans-unit id="c70c126727f7464b259080460db08e721d2acc50" translate="yes" xml:space="preserve">
          <source>InputMode#inlcr?</source>
          <target state="translated">InputMode#inlcr?</target>
        </trans-unit>
        <trans-unit id="63b9e5c743fc33b9576b58396eb4a7ce77b3a4e1" translate="yes" xml:space="preserve">
          <source>InputMode#inpck?</source>
          <target state="translated">InputMode#inpck?</target>
        </trans-unit>
        <trans-unit id="0b208d03058a4ba2584d967881a3dd1fc49fa09b" translate="yes" xml:space="preserve">
          <source>InputMode#istrip?</source>
          <target state="translated">InputMode#istrip?</target>
        </trans-unit>
        <trans-unit id="52f8cf6cc1e5d5fab19e1de801849f67a48bf5c0" translate="yes" xml:space="preserve">
          <source>InputMode#ixany?</source>
          <target state="translated">InputMode#ixany?</target>
        </trans-unit>
        <trans-unit id="4393acb3d3e23d05e8ab73b5e6e0d9d9df6bde5a" translate="yes" xml:space="preserve">
          <source>InputMode#ixoff?</source>
          <target state="translated">InputMode#ixoff?</target>
        </trans-unit>
        <trans-unit id="6047be95a8a78ddb1ec7a95ed048207f63dcdfef" translate="yes" xml:space="preserve">
          <source>InputMode#ixon?</source>
          <target state="translated">InputMode#ixon?</target>
        </trans-unit>
        <trans-unit id="53cd219e3fcfca10ea5a789e3faf2a8a0729e539" translate="yes" xml:space="preserve">
          <source>InputMode#none?</source>
          <target state="translated">InputMode#none?</target>
        </trans-unit>
        <trans-unit id="ea136f1aa1cdcfd24aae5df9fa61e76957e3edbd" translate="yes" xml:space="preserve">
          <source>InputMode#parmrk?</source>
          <target state="translated">InputMode#parmrk?</target>
        </trans-unit>
        <trans-unit id="1424ec1956956356c2428404a376c4ef7da02718" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;object&lt;/em&gt; before the element at &lt;em&gt;index&lt;/em&gt; and shifting successive elements, if any.</source>
          <target state="translated">&lt;em&gt;인덱스&lt;/em&gt; 의 요소 앞에 &lt;em&gt;객체&lt;/em&gt; 를 삽입 하고 연속적인 요소가있는 경우 이동합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="641353f1acbc86a3146b793a84b36357f2a9c579" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;object&lt;/em&gt; before the element at &lt;em&gt;index&lt;/em&gt; and shifting successive elements, if any. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;인덱스&lt;/em&gt; 의 요소 앞에 &lt;em&gt;객체&lt;/em&gt; 를 삽입 하고 연속적인 요소가있는 경우 이동합니다. &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="669b482fd3443d0e4b555121d0836c3c77953668" translate="yes" xml:space="preserve">
          <source>Insert a new item before the item at &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;index의&lt;/em&gt; 항목 앞에 새 항목을 삽입하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c30453bac2b40ed5569d54efb87eaafda2c1766" translate="yes" xml:space="preserve">
          <source>Insert a new item before the item at &lt;em&gt;index&lt;/em&gt;. Items to the right of this one will have their indices incremented.</source>
          <target state="translated">&lt;em&gt;index의&lt;/em&gt; 항목 앞에 새 항목을 삽입하십시오 . 이 항목의 오른쪽에있는 항목의 색인이 증가합니다.</target>
        </trans-unit>
        <trans-unit id="5dfcdce8e330cf70f09d335158de3344bf482eca" translate="yes" xml:space="preserve">
          <source>Insert the following markdown build badge below the description in your README.md: (be sure to replace &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">README.md의 설명 아래에 다음 마크 다운 빌드 배지를 삽입하십시오 ( &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; 을 적절히 교체 하십시오 )</target>
        </trans-unit>
        <trans-unit id="79bfe8293c52165db712b7851720a089934100fb" translate="yes" xml:space="preserve">
          <source>Inside an &lt;code&gt;if&lt;/code&gt;'s branch the type of a variable is the one it got assigned in that branch, or the one that it had before the branch if it was not reassigned:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 의 분기 내부 에서 변수의 유형은 해당 분기에 지정된 변수이거나, 재 지정되지 않은 경우 분기 이전에 있었던 변수의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="48347e1765f4c25d196f4770862b167229fc6698" translate="yes" xml:space="preserve">
          <source>Inspection:</source>
          <target state="translated">Inspection:</target>
        </trans-unit>
        <trans-unit id="8794287335edc08cb0e7d9595e1c2caef264d686" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline.</source>
          <target state="translated">&lt;em&gt;개체&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 검사 한 다음 줄 바꿈 을 검사 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8dd0e034a31cabd0dd6dfefaa78c95b41d73e8be" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline. Returns &lt;em&gt;object&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;개체&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 검사 한 다음 줄 바꿈 을 검사 &lt;em&gt;합니다&lt;/em&gt; . 반환 &lt;em&gt;객체&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="82b9fbcf2cd1acbe12c532ec73e34d1049da7f3e" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">&lt;em&gt;객체&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 검사 한 다음 줄 바꿈을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a9cccf2ce48c034cb15c334694329c222e943f12" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;객체&lt;/em&gt; 를 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 에 검사 한 다음 줄 바꿈을 수행합니다. &lt;em&gt;객체를&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b00edb8f50cfaab32f5ce41ac4dcdfa3ba22100a" translate="yes" xml:space="preserve">
          <source>Inspects each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">각 검사 대상 &lt;em&gt;물체&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; , 개행 하였다.</target>
        </trans-unit>
        <trans-unit id="15165d65c21e0a5e31e84fa1d4957edb3cae8c6d" translate="yes" xml:space="preserve">
          <source>Inspects each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">각 검사 대상 &lt;em&gt;물체&lt;/em&gt; 에 &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; , 개행 하였다. &lt;em&gt;객체를&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2466e6c5910e6bf74df9f4f82d2332639c23c538" translate="yes" xml:space="preserve">
          <source>Inspects this path to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">이 경로를 &lt;em&gt;io로&lt;/em&gt; 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="e0e303864f9f232d82cce74c2cbb80e5eb573e15" translate="yes" xml:space="preserve">
          <source>Inspired by &lt;a href=&quot;http://rspec.info/&quot;&gt;Rspec&lt;/a&gt;, it includes a domain specific language (DSL) that allows you to write examples in a way similar to plain english.</source>
          <target state="translated">&lt;a href=&quot;http://rspec.info/&quot;&gt;Rspec&lt;/a&gt; 에서 영감을 얻은 DSL (Domain Specific Language)은 일반 영어와 유사한 방식으로 예제를 작성할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="026a10d33b98158b23aa84e14be00d4a7535b2fb" translate="yes" xml:space="preserve">
          <source>Install Package</source>
          <target state="translated">패키지 설치</target>
        </trans-unit>
        <trans-unit id="a5c63974011e21c8a3854d4404ae4c847f419401" translate="yes" xml:space="preserve">
          <source>Install Port</source>
          <target state="translated">포트 설치</target>
        </trans-unit>
        <trans-unit id="ecb676bc1d527af4bf1d1e60b4dbcf29dff3682b" translate="yes" xml:space="preserve">
          <source>Install binary dependencies</source>
          <target state="translated">바이너리 종속성 설치</target>
        </trans-unit>
        <trans-unit id="64a770b567d94e5af17d2b38d7fc2930e48e28d6" translate="yes" xml:space="preserve">
          <source>Install shards packages</source>
          <target state="translated">샤드 패키지 설치</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="93299bfceb205192aa4908d74e536163a4f60bd1" translate="yes" xml:space="preserve">
          <source>Installation: From a tar.gz</source>
          <target state="translated">설치 : tar.gz에서</target>
        </trans-unit>
        <trans-unit id="31ea18871fd5bb7a83a164ee47bbaabaf473e8fb" translate="yes" xml:space="preserve">
          <source>Installation: From sources</source>
          <target state="translated">설치 : 출처에서</target>
        </trans-unit>
        <trans-unit id="ae3b811b3acefcd0e3787d7d0a5b02df7721ec9c" translate="yes" xml:space="preserve">
          <source>Installation: On Alpine Linux</source>
          <target state="translated">설치 : Alpine Linux에서</target>
        </trans-unit>
        <trans-unit id="84621496885b87cf395a2b7fc3f5c707aed94b60" translate="yes" xml:space="preserve">
          <source>Installation: On Arch Linux</source>
          <target state="translated">설치 : 아치 리눅스에서</target>
        </trans-unit>
        <trans-unit id="14b146755e997311386480108139d6e7d3e3ceff" translate="yes" xml:space="preserve">
          <source>Installation: On Debian and Ubuntu</source>
          <target state="translated">설치 : 데비안 및 우분투</target>
        </trans-unit>
        <trans-unit id="02843fcfc91d316cb947685c4aad3101d85c0fe5" translate="yes" xml:space="preserve">
          <source>Installation: On FreeBSD</source>
          <target state="translated">설치 : FreeBSD</target>
        </trans-unit>
        <trans-unit id="2b6827c56ecea00ab98538167517bde8641b4f53" translate="yes" xml:space="preserve">
          <source>Installation: On Gentoo Linux</source>
          <target state="translated">설치 : 젠투 리눅스</target>
        </trans-unit>
        <trans-unit id="ca83100367cd95451e2cdb129b748615d4e17ea5" translate="yes" xml:space="preserve">
          <source>Installation: On Linux using Linuxbrew</source>
          <target state="translated">설치 : Linuxbrew를 사용하는 Linux에서</target>
        </trans-unit>
        <trans-unit id="aac7c0cdba93b9e7f203765ffffb49b1b2eb9b3c" translate="yes" xml:space="preserve">
          <source>Installation: On Linux using Snap</source>
          <target state="translated">설치 : Snap을 사용하는 Linux에서</target>
        </trans-unit>
        <trans-unit id="5b8307a549d8a17ee93295fb77c3ef8198ede888" translate="yes" xml:space="preserve">
          <source>Installation: On OpenSUSE</source>
          <target state="translated">설치 : OpenSUSE에서</target>
        </trans-unit>
        <trans-unit id="977a24e5a96063c232ee2bf38a77622f04ae8831" translate="yes" xml:space="preserve">
          <source>Installation: On RedHat and CentOS</source>
          <target state="translated">설치 : RedHat 및 CentOS</target>
        </trans-unit>
        <trans-unit id="b9c9b45d7f36185f544fe4b2106ed0ca8a1af51d" translate="yes" xml:space="preserve">
          <source>Installation: On macOS using Homebrew</source>
          <target state="translated">설치 : Homebrew를 사용하는 macOS에서</target>
        </trans-unit>
        <trans-unit id="2a989538e88bba588f01f4b9d2d7226c2e1adeb5" translate="yes" xml:space="preserve">
          <source>Installation: Windows Subsystem for Linux</source>
          <target state="translated">설치 : Linux 용 Windows 서브 시스템</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="2b75e0ebdeabdcdf1e0dd0005d36c6d27323a6c3" translate="yes" xml:space="preserve">
          <source>Installing binary dependencies</source>
          <target state="translated">바이너리 의존성 설치</target>
        </trans-unit>
        <trans-unit id="560516499f15e40cd28d0ae743e0a74d14626dde" translate="yes" xml:space="preserve">
          <source>Installing shards packages</source>
          <target state="translated">샤드 패키지 설치</target>
        </trans-unit>
        <trans-unit id="c0d0c0b27a5607a7a13affdba23a3f796628e001" translate="yes" xml:space="preserve">
          <source>Installing the shard</source>
          <target state="translated">샤드 설치</target>
        </trans-unit>
        <trans-unit id="29920c295454d02c33c602160a9238a8af27099a" translate="yes" xml:space="preserve">
          <source>Instance Method Detail</source>
          <target state="translated">인스턴스 메소드 세부 사항</target>
        </trans-unit>
        <trans-unit id="95ec3ffd8dc53a1d99d736ad3933ef452d4ad2e9" translate="yes" xml:space="preserve">
          <source>Instance Method Summary</source>
          <target state="translated">인스턴스 메소드 요약</target>
        </trans-unit>
        <trans-unit id="7e668b525c2f1215b004e6856abf44b1d38d3384" translate="yes" xml:space="preserve">
          <source>Instance and class methods</source>
          <target state="translated">인스턴스 및 클래스 메소드</target>
        </trans-unit>
        <trans-unit id="625ad1613b53ad4be00259e6cb712cf9bd80fe98" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="779c3bbdafc342613b070ca3ebd350a5ca45a805" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 로부터 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="495386fae8728da628e10ba3a1f4ca8927dad678" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="e271f85116eb91729a7311f905499fc67d59a9b0" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="dc54bcc13746373ebce84768c3360d5b952bacf5" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="7de513b46c2d258a82234d55cf0fed4f87b22a46" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 로부터 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="8b5ad0022bca9c10a82bd2fffc0f4a588e8ee18f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="b955ebe67b3313bb658feacd5e9b8966d8a36a03" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../abi&quot;&gt;LLVM::ABI&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../abi&quot;&gt;LLVM::ABI&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="76df7a846356daf25378fd3f2a31782fbbc75775" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../accesstoken&quot;&gt;OAuth2::AccessToken&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../accesstoken&quot;&gt;OAuth2::AccessToken&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="d472670d7e231672d035a16e5399209ac632bd01" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../context&quot;&gt;OpenSSL::SSL::Context&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../context&quot;&gt;OpenSSL::SSL::Context&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="b8076e3298ef1a45b1cceaff1d226f354208a938" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2090310805dfad76c53e0c4e51617b1fea7eef" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../digest/base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../digest/base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="a72b5063f6bf807b810b9d813c086cce18ab649a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../error&quot;&gt;OpenSSL::Error&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error&quot;&gt;OpenSSL::Error&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="d3193f43864977bd8a126845f1b32d028e2da268" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="d9a21025e00e8a6bfa6fd188fdf7e00e88d25999" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="af43034df2a7db3fa5db0296cf9604db98eff03e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 로부터 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="992396af83e54e6d38524bc981e78a173758a3d3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../openssl/digest&quot;&gt;OpenSSL::Digest&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78d09fd15ef4505c7df21c705ff186d5d5896f4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="595723d4cdf205de378899f2c04433910d60b241" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="902a04107a176049bcdb5a6a6821bdbd93838591" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;Crystal::Macros::ASTNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;Crystal::Macros::ASTNode&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="fb7a5d13bab606ab9a668bf9fadeceb8f6be741d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="c6b53340d25780935441e456b7fefb921af56c15" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="f12f325e35239d1d4ac651641d8eba69d54b03ba" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;binaryop&quot;&gt;Crystal::Macros::BinaryOp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;binaryop&quot;&gt;Crystal::Macros::BinaryOp&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="37b484e4bd032119ce29dff68cfc389ba2eefd83" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;context&quot;&gt;Spec::Context&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;context&quot;&gt;Spec::Context&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="c0ef9c86432b4eaf19770de2e4b10f425cf806e4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;error&quot;&gt;File::Error&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;error&quot;&gt;File::Error&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="8adcab79aad39ccd4ad1fa22b8031281765f9876" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="58889bc238f3f9243128c75d384acd6d96355aa7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="bd639e78d199d451a642528d5f1b499810aab90c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="549f4aa52a2f99158653e49dcd2be2a4ceb74955" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;ipsocket&quot;&gt;IPSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ipsocket&quot;&gt;IPSocket&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="922b7ec525116ba2b6f9744547ce8137d96b6e17" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="504f9b81ae5086cf927f532a9913f5682856629d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 로부터 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="e9e34b3b2e38bd897a768504f5edb3a3a25bdef9" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="03d5dfbac341191fc15752140322f90293951972" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f91efe764607d03b3ef4de866bc882e5c4508b04" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; 클래스로부터 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f6654b3bf70076fb6ae098c1603c233a43588c29" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;tcpsocket&quot;&gt;TCPSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tcpsocket&quot;&gt;TCPSocket&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="13d063324b14232dbcf382db359e6a5647c6eb12" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;unaryexpression&quot;&gt;Crystal::Macros::UnaryExpression&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;unaryexpression&quot;&gt;Crystal::Macros::UnaryExpression&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="a1b614fe3d8b250a81a9c6fc997ac78b5b335d27" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;unixsocket&quot;&gt;UNIXSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클래스 &lt;code&gt;&lt;a href=&quot;unixsocket&quot;&gt;UNIXSocket&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="2b07d582b15cc6bc994385bc8a839f48b8cc2163" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;x86&quot;&gt;LLVM::ABI::X86&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;x86&quot;&gt;LLVM::ABI::X86&lt;/a&gt;&lt;/code&gt; 클래스에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="07a8acace28ea36366dfd45a2a0aba0756fc0332" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;../../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="a2ed540ea434b65c8276d053321d121427881bb0" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;../../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="8e234cd72db496d0e0b23779af06cbe1e7606679" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="2edd9ce4b71b7fa0fb68833358f0d39aa4d9124c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;node&quot;&gt;YAML :: Nodes :: Node&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="19f077ce0ba9a600a23cdef15a484fd65e7aded1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="1ce20134551a90d41c9dd992163ea84e49f82e5a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="176de805f58e1ddeda315cfce34628cbd1025577" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="d11548c1616a9cad4dd53b0f119d6c7682dfe51a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="8b2d4d04ef9f939712716d72d20f5a4a02b9514f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;prerelease&quot;&gt;SemanticVersion :: Prerelease&lt;/a&gt; ) 에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="ce89da18135892a4e78b6a6501866f08e2bed7b3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드 ( &lt;a href=&quot;span&quot;&gt;Time :: Span&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="cd716cbe21c05123809dc0613db630653673d7ab" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f482136cdbc0a4a7962b03e6b2d57246dfa835" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="5dcea3a3bac179e9b675b41bdbc8f91ce9a48620" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;basicblock&quot;&gt;LLVM :: BasicBlock&lt;/a&gt; ) 에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="34b0ddb90a6b4232644256bc68eb8ab60f31da70" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;cookie&quot;&gt;HTTP :: Cookie&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="54b0adde0c8a9ecc78cc9749536aa4abdde688d8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;node&quot;&gt;XML :: Node&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="843f8b20707d49e0489d41c7af1b8a524329a67c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="bea7f333ade27e3b4fe49b6f15b7131f0f3863f8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드 ({ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt; ( &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; )})</target>
        </trans-unit>
        <trans-unit id="64138db181683ef3f4efc8d0ff8f8b75a0f09105" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드 ({ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; })</target>
        </trans-unit>
        <trans-unit id="caf4af3a1c2edb69d9acb5d9768a8fd824ae5a6b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;metadata/value&quot;&gt;Log::Metadata::Value&lt;/a&gt;})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;metadata/value&quot;&gt;Log::Metadata::Value&lt;/a&gt;})&lt;/code&gt; 모듈 ({ &lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt; , &lt;a href=&quot;metadata/value&quot;&gt;Log :: Metadata :: Value&lt;/a&gt; }) 에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="5fed9eeaedfce68f0bc3a21a257e72335f0d02f3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Compress::Zip::FileInfo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Compress::Zip::FileInfo&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="ec9ee768bf2e0e991886622325536634609e0fea" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Zip::FileInfo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Zip::FileInfo&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="7f43d471a0ee157f5c9e550cd5f6ae083e9db6f8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드 ( &lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2508026a5b4ad63a2b63d43b5b58182478a99593" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="382d6b3d67cbde7a87dcfe9b892d553b1e0179cf" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드 ( &lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3bb884ca1e3deb301ab9699fe0b1d8ed45f79d85" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1697a7f62c96941f72b1ae1a1e51efed46b5ad11" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="ada2e6d483a5a9aa8bd26bdd22069162436fbf73" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="6104b557931f550106bfaef0ba7b87b0618d1950" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="763447b55c2378aa9bb7188392e64701e6c87db7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;colorize/objectextensions&quot;&gt;Colorize::ObjectExtensions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;colorize/objectextensions&quot;&gt;Colorize::ObjectExtensions&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="a3c09eab66b8fcbc1296c2a743be2313ed71fe6a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;array&quot;&gt;Array (T)&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="60696d81504a878b276cd154e86985cf39592652" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f693e93b23fb60614fae8915331e9a46c9767a9b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f59d7437e715d1fd88063417f5ff8a57e5b5a5e6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="966e8f4216ed7f57ddc41a054effb5be8b30b319" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="172ab3d22a92c4c6cb60a69518c1cd873998bb45" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="16670e88ef001e42b5e4866e2e9cc7884cdfc82d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="69b4ab7d9c3aa6666b642abef9abb0fcb4397dcb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="d0093445e65ceb4ed874ac618ce508121d00a863" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f0c34bc6bdc658dc7efe4410dd9b8631c04047a8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)&lt;/code&gt; 에서 상속 된 인스턴스 메소드 ( &lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="918a356c1cd630c5ccfeeee027da8b326301528f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="6904031db5a94884fd6ce9cc3d8a48bdec9b103a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="df2d69a3f1c794c9e047c3ea546e2bf6a053de32" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;pointer&quot;&gt;Pointer (T)&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="b87287803c89561dddaea6106b0f4e44ea3e06ce" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f19feadd87570b6ce794943af3a82cf30bc03a83" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;slice&quot;&gt;Slice (T)&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="58896b1fca39ca27d30559b2e1b530b6a07a245e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="7edb5b38a0e022b285be0ba79123f36dc1285703" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드 ( &lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4c7204115b26fd9dcabbccaefd9ebb2981b576f4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="ab44b2220d4fac863ac3c629acdfaf6ab9c422a8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)&lt;/code&gt; ( &lt;a href=&quot;tuple&quot;&gt;Tuple (* T)&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="adcb6edfc39d721d5978a401737c4f2823827ec8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt; 에서 상속 된 인스턴스 메소드 ( &lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="52592ff5c9270879c50529d8f34ded1452fbbf46" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;configuration&quot;&gt;Log::Configuration&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;configuration&quot;&gt;Log::Configuration&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="a2a15a713d0246dc5a56f0fb318bee674782aeeb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;digestbase&quot;&gt;OpenSSL::DigestBase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;digestbase&quot;&gt;OpenSSL::DigestBase&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="1c21d4887f60046357206343c0e7562fb7d9f130" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;dispatcher&quot;&gt;Log::Dispatcher&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b5447df39ccb2a1331ad2caa39b6e2e8040fa3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(B)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(B)&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="26801ea74bcce4fa50803d16f05a123f68ef282c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="8e190b9658c707564fdb7568e97ee93403bddb1e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(Union(*T))&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="6f1deafbd488c9638b0ef185b18965877f2e8e0f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable({K, V})&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable({K, V})&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="a036f831ce2c4ef2871580edf77ea91edc24ea8d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="bf6acbca2831b860e8a2d113f3b3863142cbe2c4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="11126c8993ceb2fedad5b98f3569e326ed320495" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="d81707053aef30e815cdfcd70b77c517639ef03b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="19c334872a4b8191880c20c5e11d5c466de3e189" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(T)&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="ed56f4609ce42aec0bd5f0f4388236f30d7f049f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(Union(*T))&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="e180e274d409a47b9c4de49b979ecdb6b772ddab" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="5e3629b4f97532cfc945381c519877a4e39ee4fb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="2f785ecc4d0cbda96e34ea756b8cd693e9a78b56" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;io/evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">모듈 &lt;code&gt;&lt;a href=&quot;io/evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="6939fd73835944e54e120b7ef84da10198cfb61e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;item&quot;&gt;Spec::Item&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;item&quot;&gt;Spec::Item&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="08c5b58c69f36ce6a880552e8a8f5a2399bee7bc" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(B)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(B)&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="387a0827abec2164a5c8e409494666a8f4d9f65b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(T)&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="284ea93b21422c1844ad76bc2f946067818d25f3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(Union(*T))&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="9db72ef176f33f82127711118bf20ba5e5f71ec3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable({K, V})&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable({K, V})&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="50eb67acdc7e8315fa8537f937c808b4cb593275" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; 모듈 ( &lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt; ) 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="8bd94e9cceea37cd2a1f0c6372adff5d60e254d4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드 ( &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e0ad2ae8c740fcbf03ded02e3980a0b3d18da51b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f0255d48df50033a5c08288854202c8d1e281ff1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/expectations&quot;&gt;Spec::Expectations&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;spec/expectations&quot;&gt;Spec::Expectations&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="42798e60708f25559436f78375082afd9ce75e5e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/methods&quot;&gt;Spec::Methods&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;spec/methods&quot;&gt;Spec::Methods&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="94116eac0714ebe5c05ac72d9bcf9316127dd5f7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/objectextensions&quot;&gt;Spec::ObjectExtensions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;spec/objectextensions&quot;&gt;Spec::ObjectExtensions&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="c6b2fc96c213aeacdaf3a28e0d584c60ab716699" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="2bd902ebd90c947a05ed362303944a9b69cbb8f1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;valuemethods&quot;&gt;LLVM::ValueMethods&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;valuemethods&quot;&gt;LLVM::ValueMethods&lt;/a&gt;&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="e5012ba8f5fe9dfe226fa3cd955fe32147cdcfa6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;Crystal::System::FileDescriptor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Crystal::System::FileDescriptor&lt;/code&gt; 모듈에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="8ccf7f6da732198e30eab3e0580f002c36ac0d1a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;Spec::Item&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Spec::Item&lt;/code&gt; 모듈에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="b88cce42690ad0f5f76343c477168535a131fbe6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="4ff438d3401a260d7ce9eb30def0d7baff2cd0a9" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;../../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="9d05c77e3d09c739427b5f89392f4952f24d7709" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="ef63b4a729b6e6df8cd557cd417e5409a3541cce" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">구조체 &lt;code&gt;&lt;a href=&quot;../../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="d36d1647ad771953e663750241ff94128dfa757e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="638b5d4647bb4fbe2c338746fff2fb9dc2ad83bb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="1fca12ff7f28f5b966a2ba2a61c10a2439c0cf6c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">구조체 &lt;code&gt;&lt;a href=&quot;../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="c711cc6273df85f8080896391e6ce93972754dd7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="aa6282d77aaeda0f7354735036dffa1dddeba68c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="f419c143cfa7f7b9440dba7a9007059e7a8ff490" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="414cfcce8f945f8be68a800e2b7bee693375d55e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="3c91c5467521d8d79f59e290aef53a2d47a1cdd8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="776889a99f5efbde8af0b0831e059b4b4aa9279f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="668b9755f9042fe08fc8b737c9c9d824a05936bd" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="99520548a5b6fa1368fc225b4b330725766f4adb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">구조체 &lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="7fd122fc7b8952ccaa5aa25eefe74cb5db77fa2a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; 에서 상속 된 인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="22f04c4ba964874db6809362b1a8926b072c78c2" translate="yes" xml:space="preserve">
          <source>Instance variables</source>
          <target state="translated">인스턴스 변수</target>
        </trans-unit>
        <trans-unit id="6ea55c865bf1db46d6a04d21a747577b7c0d892a" translate="yes" xml:space="preserve">
          <source>Instance variables can also be initialized outside &lt;code&gt;initialize&lt;/code&gt; methods:</source>
          <target state="translated">인스턴스 변수는 외부 초기화 될 수 &lt;code&gt;initialize&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="787f100278103ea55c1573c04de928c8d31f8940" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; are focused on telling time &amp;ndash; using a &quot;wall clock&quot;. When &lt;code&gt;&lt;a href=&quot;time#local(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;Time.local&lt;/a&gt;&lt;/code&gt; is called multiple times, the difference between the returned instances is not guaranteed to equal to the time elapsed between making the calls; even the order of the returned &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instances might not reflect invocation order.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 인스턴스는 &quot;벽시계&quot;를 사용하여 시간을 알려주는 데 중점을 둡니다. &lt;code&gt;&lt;a href=&quot;time#local(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;Time.local&lt;/a&gt;&lt;/code&gt; 이 여러 번 호출 되면 반환 된 인스턴스 간의 차이가 호출하는 데 경과 한 시간과 같지 않을 수 있습니다. 반환 된 &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; 인스턴스 의 순서조차 호출 순서를 반영하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e1e9e6b7c9ad5f0cd5bd359d068c9fe5d7ea585" translate="yes" xml:space="preserve">
          <source>Instances of this class are passed to an &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; handler.</source>
          <target state="translated">이 클래스의 인스턴스는 &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; 핸들러 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="730c339a7cd2a34beae6a3ce5d3f2837c7778306" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object. When you write to this instance, it compresses the data and writes it to the underlying &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 클래스의 인스턴스는 다른 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 개체를 래핑 합니다. 이 인스턴스에 쓸 때 데이터를 압축하고 기본 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="6218b9f36ba046e184c7444708b6484cebc0c566" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object. When you write to this instance, it compresses the data and writes it to the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 클래스의 인스턴스는 다른 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 객체를 래핑 합니다. 이 인스턴스에 쓸 때 데이터를 압축하고 기본 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="b34aab868c8ca2315f30dfd86b2b8df252f0586c" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another IO object. When you read from this instance instance, it reads data from the underlying IO, decompresses it, and returns it to the caller.</source>
          <target state="translated">이 클래스의 인스턴스는 다른 IO 객체를 래핑합니다. 이 인스턴스 인스턴스에서 읽으면 기본 IO에서 데이터를 읽고 압축을 풀고 호출자에게 반환합니다.</target>
        </trans-unit>
        <trans-unit id="13c9cd759c1f241349f73a04fdb9c2476486f765" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another IO object. When you write to this instance, it compresses the data and writes it to the underlying IO.</source>
          <target state="translated">이 클래스의 인스턴스는 다른 IO 객체를 래핑합니다. 이 인스턴스에 쓰면 데이터를 압축하여 기본 IO에 씁니다.</target>
        </trans-unit>
        <trans-unit id="ca033777d8c3f289a99184f1752669c350d26b63" translate="yes" xml:space="preserve">
          <source>Instantiations of this static array type:</source>
          <target state="translated">이 정적 배열 유형의 인스턴스화 :</target>
        </trans-unit>
        <trans-unit id="c76f8cee37fc229387acc13bf2f685b115ed1ea8" translate="yes" xml:space="preserve">
          <source>Instead of defining a type with &lt;code&gt;class&lt;/code&gt; you can do so with &lt;code&gt;struct&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 로 타입을 정의하는 대신 &lt;code&gt;struct&lt;/code&gt; 로 그렇게 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2ffda3100c78567eeeb1e2dc7fef014e52e11c6e" translate="yes" xml:space="preserve">
          <source>Instead of overriding you can define specialized methods by using type restrictions:</source>
          <target state="translated">재정의하는 대신 유형 제한을 사용하여 특수한 방법을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b11719da4548e1706888bad4b177eb045d8911db" translate="yes" xml:space="preserve">
          <source>Instruction per second interface of the &lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; 모듈 의 초당 인터페이스 지침 .</target>
        </trans-unit>
        <trans-unit id="0144aee16de362b8548a5809ab084131370d5d14" translate="yes" xml:space="preserve">
          <source>Instruction per second interface of the &lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; module. Yields a &lt;code&gt;Job&lt;/code&gt; to which one can report the benchmarks. See the module's description.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; 모듈 의 초당 인터페이스 지침 . 벤치 마크를보고 할 수 있는 &lt;code&gt;Job&lt;/code&gt; 을 생성합니다. 모듈 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9641d1ce9a478b6f9da69bf971baae267dbf6f60" translate="yes" xml:space="preserve">
          <source>InstructionCollection</source>
          <target state="translated">InstructionCollection</target>
        </trans-unit>
        <trans-unit id="325d1a8404f78d8f05362a503ff4609ff4d5505a" translate="yes" xml:space="preserve">
          <source>InstructionCollection#each</source>
          <target state="translated">InstructionCollection#each</target>
        </trans-unit>
        <trans-unit id="8092c85b13a9e74beafe3a848690f6673f837906" translate="yes" xml:space="preserve">
          <source>InstructionCollection#empty?</source>
          <target state="translated">InstructionCollection#empty?</target>
        </trans-unit>
        <trans-unit id="3b011d60b7a501a710d14dd573a9a3f63a12909c" translate="yes" xml:space="preserve">
          <source>InstructionCollection#first</source>
          <target state="translated">InstructionCollection#first</target>
        </trans-unit>
        <trans-unit id="3af946580a8862571557ab4997a650a90ba5fbe4" translate="yes" xml:space="preserve">
          <source>InstructionCollection#first?</source>
          <target state="translated">InstructionCollection#first?</target>
        </trans-unit>
        <trans-unit id="921e48132d33f22227fb915723ea5df6dc38f0ca" translate="yes" xml:space="preserve">
          <source>InstructionCollection.new</source>
          <target state="translated">InstructionCollection.new</target>
        </trans-unit>
        <trans-unit id="9e15ffe9f019f86fb538eafeda4b4d81fe289d37" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after each spec spec in the spec suite.</source>
          <target state="translated">사양 실행기에게 사양 모음의 각 사양 사양 후에 지정된 블록을 실행하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="2cc75473bf4efca67b9902a5e4b992bb68e8c345" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after each spec, regardless of where this method is invoked.</source>
          <target state="translated">이 메소드의 호출 장소에 관계없이, 스펙 실행자가 각 스펙 후에 지정된 블록을 실행하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="4db3e37585fe9a67dde7dfd3fc884bded980ccaa" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after the entire spec suite.</source>
          <target state="translated">전체 스펙 스위트 이후에 지정된 블록을 실행하도록 스펙 실행자를 지시합니다.</target>
        </trans-unit>
        <trans-unit id="d07b257a57c2eb91f93758c12ff49b64a9f419a1" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before each spec in the spec suite.</source>
          <target state="translated">사양 실행자에게 사양 모음의 각 사양 전에 지정된 블록을 실행하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="cd6ad32d2a805084d6088d0982fd833061948213" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before each spec, regardless of where this method is invoked.</source>
          <target state="translated">이 메소드의 호출 장소에 관계없이 스펙 실행자가 각 스펙 전에 지정된 블록을 실행하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="85d8afa840bdd7bdc4d583b2aabe1d99e4de6439" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before the entire spec suite.</source>
          <target state="translated">스펙 실행 프로그램이 전체 스펙 스위트 전에 지정된 블록을 실행하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="84f6f555d0b79687c61b705b4f99f50fce51012f" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block when each spec in the spec suite runs.</source>
          <target state="translated">사양 모음의 각 사양이 실행될 때 지정된 블록을 실행하도록 사양 실행기에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="5c89edcac2811a6a9e8072517cae7f3cbfd5049d" translate="yes" xml:space="preserve">
          <source>Int</source>
          <target state="translated">Int</target>
        </trans-unit>
        <trans-unit id="ff9f1f4210ebddbaf6813b6ad77c222fe4a2a1ae" translate="yes" xml:space="preserve">
          <source>Int is the base type of all integer types.</source>
          <target state="translated">Int는 모든 정수 유형의 기본 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d8a5fb226a10b6ab88f7d8bc1dd047605ceef5dc" translate="yes" xml:space="preserve">
          <source>Int#%</source>
          <target state="translated">Int#%</target>
        </trans-unit>
        <trans-unit id="030862b9ab0152efff5681b2a892117029e77594" translate="yes" xml:space="preserve">
          <source>Int#*</source>
          <target state="translated">Int#*</target>
        </trans-unit>
        <trans-unit id="ce9bb39ae6c471aac3a456621e3e5bc0408430a2" translate="yes" xml:space="preserve">
          <source>Int#**</source>
          <target state="translated">Int#**</target>
        </trans-unit>
        <trans-unit id="53752164d6689a371fd3d1255693b2b1355445e8" translate="yes" xml:space="preserve">
          <source>Int#+</source>
          <target state="translated">Int#+</target>
        </trans-unit>
        <trans-unit id="cc697fa100544136830a160ba9658473d1053f87" translate="yes" xml:space="preserve">
          <source>Int#-</source>
          <target state="translated">Int#-</target>
        </trans-unit>
        <trans-unit id="9485f1697e12c0b60fdeb597a7fe963f9ddbf62f" translate="yes" xml:space="preserve">
          <source>Int#/</source>
          <target state="translated">Int#/</target>
        </trans-unit>
        <trans-unit id="fd242c10d71f110b986bfbeef6b93c15a01f415d" translate="yes" xml:space="preserve">
          <source>Int#//</source>
          <target state="translated">Int#//</target>
        </trans-unit>
        <trans-unit id="cbb892a132e098c7b5e734082146c4b95686224d" translate="yes" xml:space="preserve">
          <source>Int#===</source>
          <target state="translated">Int#===</target>
        </trans-unit>
        <trans-unit id="a0c5ed31c675d0ef11dc689b7c4930883e00af85" translate="yes" xml:space="preserve">
          <source>Int#abs</source>
          <target state="translated">Int#abs</target>
        </trans-unit>
        <trans-unit id="b75df43afa268bc06119d7183ea5268dff7d58db" translate="yes" xml:space="preserve">
          <source>Int#bit</source>
          <target state="translated">Int#bit</target>
        </trans-unit>
        <trans-unit id="ea27b1e20b29ea10caffa83614ed792169e3cd1b" translate="yes" xml:space="preserve">
          <source>Int#bits</source>
          <target state="translated">Int#bits</target>
        </trans-unit>
        <trans-unit id="6c14ccf5584ba617995ce53c082d7280a8f01f1b" translate="yes" xml:space="preserve">
          <source>Int#ceil</source>
          <target state="translated">Int#ceil</target>
        </trans-unit>
        <trans-unit id="922c8d382d2d804ab2140efe9b3b792025929e7e" translate="yes" xml:space="preserve">
          <source>Int#chr</source>
          <target state="translated">Int#chr</target>
        </trans-unit>
        <trans-unit id="3d4aa190c2012d69cc4b9b7012d406eac5e79e2b" translate="yes" xml:space="preserve">
          <source>Int#day</source>
          <target state="translated">Int#day</target>
        </trans-unit>
        <trans-unit id="edfade1d972ea942990e3162fc8191ec1a6b7527" translate="yes" xml:space="preserve">
          <source>Int#days</source>
          <target state="translated">Int#days</target>
        </trans-unit>
        <trans-unit id="09fb2858cc149035de46bf4c65a0242a2d4fe273" translate="yes" xml:space="preserve">
          <source>Int#fdiv</source>
          <target state="translated">Int#fdiv</target>
        </trans-unit>
        <trans-unit id="40e130c1b1298c9ee0dfeec15ec725ec8c734338" translate="yes" xml:space="preserve">
          <source>Int#gcd</source>
          <target state="translated">Int#gcd</target>
        </trans-unit>
        <trans-unit id="9922096f3bb77c14935c8af38769d5b755d6c394" translate="yes" xml:space="preserve">
          <source>Int#gcm</source>
          <target state="translated">Int#gcm</target>
        </trans-unit>
        <trans-unit id="766410356bd81ee7b7388104fad9c2a289431782" translate="yes" xml:space="preserve">
          <source>Int#hash</source>
          <target state="translated">Int#hash</target>
        </trans-unit>
        <trans-unit id="614a071fece4caa7fc27664e760c1e1281d91d50" translate="yes" xml:space="preserve">
          <source>Int#hour</source>
          <target state="translated">Int#hour</target>
        </trans-unit>
        <trans-unit id="a38ef96d87696d7445a98fa08f72a823f861ecb5" translate="yes" xml:space="preserve">
          <source>Int#lcm</source>
          <target state="translated">Int#lcm</target>
        </trans-unit>
        <trans-unit id="449d5b1614b9c1e455dd45da75e9aee37cb8fe43" translate="yes" xml:space="preserve">
          <source>Int#odd?</source>
          <target state="translated">Int#odd?</target>
        </trans-unit>
        <trans-unit id="8d603910a50b5f6e47e6566f66f87884aab64272" translate="yes" xml:space="preserve">
          <source>Int#pred</source>
          <target state="translated">Int#pred</target>
        </trans-unit>
        <trans-unit id="8820592ff885e1cd4c61f4f10403d36e4d56c049" translate="yes" xml:space="preserve">
          <source>Int#succ</source>
          <target state="translated">Int#succ</target>
        </trans-unit>
        <trans-unit id="116d767faee502f87f93b6068fb1db6a1a7d35e0" translate="yes" xml:space="preserve">
          <source>Int#tdiv</source>
          <target state="translated">Int#tdiv</target>
        </trans-unit>
        <trans-unit id="57f4523513a63275b1ae650f5a8f018a138579c2" translate="yes" xml:space="preserve">
          <source>Int#to</source>
          <target state="translated">Int#to</target>
        </trans-unit>
        <trans-unit id="040a925af57573c3896a745a984fe8031cce7ab0" translate="yes" xml:space="preserve">
          <source>Int#to_s</source>
          <target state="translated">Int#to_s</target>
        </trans-unit>
        <trans-unit id="b480ebfd49e625f00cd377222e7ec6c727fd5b9b" translate="yes" xml:space="preserve">
          <source>Int#upto</source>
          <target state="translated">Int#upto</target>
        </trans-unit>
        <trans-unit id="800ef8abdcdf618d3043dc01bbda27c9e8346b1b" translate="yes" xml:space="preserve">
          <source>Int#week</source>
          <target state="translated">Int#week</target>
        </trans-unit>
        <trans-unit id="ae143499c2fb4ce7f956070c135c7c063b1fa6a7" translate="yes" xml:space="preserve">
          <source>Int#year</source>
          <target state="translated">Int#year</target>
        </trans-unit>
        <trans-unit id="11ff3e382b1e55c47deedc59ec85fa9e5152f578" translate="yes" xml:space="preserve">
          <source>Int#~</source>
          <target state="translated">Int#~</target>
        </trans-unit>
        <trans-unit id="de86a870104fb0a5a2a80ba8c78d8f536c9c7510" translate="yes" xml:space="preserve">
          <source>Int128</source>
          <target state="translated">Int128</target>
        </trans-unit>
        <trans-unit id="16e6160662f3625a557b8630a33bd5a5ede2d481" translate="yes" xml:space="preserve">
          <source>Int128#*</source>
          <target state="translated">Int128#*</target>
        </trans-unit>
        <trans-unit id="c0ed7ccbece559f519bf04bf9c53fdba2f96b707" translate="yes" xml:space="preserve">
          <source>Int128#+</source>
          <target state="translated">Int128#+</target>
        </trans-unit>
        <trans-unit id="7f8b82278b1ec306e8b8443702fdca81f2e0f27b" translate="yes" xml:space="preserve">
          <source>Int128#-</source>
          <target state="translated">Int128#-</target>
        </trans-unit>
        <trans-unit id="9a480060666d575974093cba6371099473558123" translate="yes" xml:space="preserve">
          <source>Int128#/</source>
          <target state="translated">Int128#/</target>
        </trans-unit>
        <trans-unit id="e68470d4e9ddc057231b69763257f485fa5eec41" translate="yes" xml:space="preserve">
          <source>Int128#^</source>
          <target state="translated">Int128#^</target>
        </trans-unit>
        <trans-unit id="70fdbfdadef595acb25ded1cd7ebcd61b5beb7c8" translate="yes" xml:space="preserve">
          <source>Int128#|</source>
          <target state="translated">Int128#|</target>
        </trans-unit>
        <trans-unit id="7982e8c08d84551a97dde8c3cc98e03fc2d6082c" translate="yes" xml:space="preserve">
          <source>Int16</source>
          <target state="translated">Int16</target>
        </trans-unit>
        <trans-unit id="7c42afdeb337ac1a816b9ed6c735e4b98846051c" translate="yes" xml:space="preserve">
          <source>Int16#!=</source>
          <target state="translated">Int16#!=</target>
        </trans-unit>
        <trans-unit id="8942b9c26ebc108847ae383238e48ed5ac0fbbf0" translate="yes" xml:space="preserve">
          <source>Int16#*</source>
          <target state="translated">Int16#*</target>
        </trans-unit>
        <trans-unit id="b41a557cd79ebd8a73f46143ae944c6c36dcb177" translate="yes" xml:space="preserve">
          <source>Int16#+</source>
          <target state="translated">Int16#+</target>
        </trans-unit>
        <trans-unit id="5a204510b2f347ae701f9b47cd6a270455ea13b0" translate="yes" xml:space="preserve">
          <source>Int16#-</source>
          <target state="translated">Int16#-</target>
        </trans-unit>
        <trans-unit id="239eaf4148edf3d42b490a8d52793ee6e0910ece" translate="yes" xml:space="preserve">
          <source>Int16#/</source>
          <target state="translated">Int16#/</target>
        </trans-unit>
        <trans-unit id="b59142ef94839a8df88b043de57cd2e4231509cb" translate="yes" xml:space="preserve">
          <source>Int16#==</source>
          <target state="translated">Int16#==</target>
        </trans-unit>
        <trans-unit id="210c7377b582fa4c57278392d983745c92757801" translate="yes" xml:space="preserve">
          <source>Int16#^</source>
          <target state="translated">Int16#^</target>
        </trans-unit>
        <trans-unit id="6aee87e56fc310b8f710f28870cc99908bcd3a08" translate="yes" xml:space="preserve">
          <source>Int16#|</source>
          <target state="translated">Int16#|</target>
        </trans-unit>
        <trans-unit id="f4753a4dee54ee10a75b28c6d04eb9ea0d19acce" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="translated">Int32</target>
        </trans-unit>
        <trans-unit id="617053928b45f497d709580b805e0be1b6e42569" translate="yes" xml:space="preserve">
          <source>Int32#!=</source>
          <target state="translated">Int32#!=</target>
        </trans-unit>
        <trans-unit id="4075c7476cd1608c8c7f384fae9b08651d18a4c9" translate="yes" xml:space="preserve">
          <source>Int32#*</source>
          <target state="translated">Int32#*</target>
        </trans-unit>
        <trans-unit id="40d72d7dfd3185c69ea1b4adb363a7d043adf1fe" translate="yes" xml:space="preserve">
          <source>Int32#+</source>
          <target state="translated">Int32#+</target>
        </trans-unit>
        <trans-unit id="63db2e9e5eb63c386b3e9886304db6ae0185df01" translate="yes" xml:space="preserve">
          <source>Int32#-</source>
          <target state="translated">Int32#-</target>
        </trans-unit>
        <trans-unit id="a790f68105b37d6bec879910a2724484fb2873f8" translate="yes" xml:space="preserve">
          <source>Int32#/</source>
          <target state="translated">Int32#/</target>
        </trans-unit>
        <trans-unit id="edd4164714d97c02fa9a5b30f9dc7f436507a173" translate="yes" xml:space="preserve">
          <source>Int32#==</source>
          <target state="translated">Int32#==</target>
        </trans-unit>
        <trans-unit id="80c9b3dbb330728f8fb842c5187b6b44f255afe9" translate="yes" xml:space="preserve">
          <source>Int32#^</source>
          <target state="translated">Int32#^</target>
        </trans-unit>
        <trans-unit id="8d9f882f40be19cbfa275d6465c7a2cd1d4143d3" translate="yes" xml:space="preserve">
          <source>Int32#|</source>
          <target state="translated">Int32#|</target>
        </trans-unit>
        <trans-unit id="180fcbe698d0f2c44101a06215c472930bbd0a01" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="translated">Int64</target>
        </trans-unit>
        <trans-unit id="f22f5c57f3f28f66388d1a1bb671743594d00962" translate="yes" xml:space="preserve">
          <source>Int64#!=</source>
          <target state="translated">Int64#!=</target>
        </trans-unit>
        <trans-unit id="aeb615a96ff19fc2e417afeb7d8f1e5389c0ed58" translate="yes" xml:space="preserve">
          <source>Int64#*</source>
          <target state="translated">Int64#*</target>
        </trans-unit>
        <trans-unit id="c0f4200d7139d47ee4267ba8a1f111611fd68a06" translate="yes" xml:space="preserve">
          <source>Int64#+</source>
          <target state="translated">Int64#+</target>
        </trans-unit>
        <trans-unit id="a048bf109a15b2fef5e3a443b44ce6df44443713" translate="yes" xml:space="preserve">
          <source>Int64#-</source>
          <target state="translated">Int64#-</target>
        </trans-unit>
        <trans-unit id="d286f33385d9c7c16d334e089349476618bfaa1e" translate="yes" xml:space="preserve">
          <source>Int64#/</source>
          <target state="translated">Int64#/</target>
        </trans-unit>
        <trans-unit id="f459af14f4da2a906631902aef19498e8631f1b3" translate="yes" xml:space="preserve">
          <source>Int64#==</source>
          <target state="translated">Int64#==</target>
        </trans-unit>
        <trans-unit id="83d37ed4a289e28472fa2950b09c01844d3f6a48" translate="yes" xml:space="preserve">
          <source>Int64#^</source>
          <target state="translated">Int64#^</target>
        </trans-unit>
        <trans-unit id="ff68b73826f573b3bc2380fa09a6d04ad3788de0" translate="yes" xml:space="preserve">
          <source>Int64#|</source>
          <target state="translated">Int64#|</target>
        </trans-unit>
        <trans-unit id="a96d87d7c8b3dcfbd0b1d669a1f16d6b32c2a364" translate="yes" xml:space="preserve">
          <source>Int8</source>
          <target state="translated">Int8</target>
        </trans-unit>
        <trans-unit id="aa9139bedef204c2cb0b32f8500378365a93f127" translate="yes" xml:space="preserve">
          <source>Int8#!=</source>
          <target state="translated">Int8#!=</target>
        </trans-unit>
        <trans-unit id="4f5649e931ffb56d92314ee734400dd3f6ad2a0b" translate="yes" xml:space="preserve">
          <source>Int8#*</source>
          <target state="translated">Int8#*</target>
        </trans-unit>
        <trans-unit id="9e23c5bf945549ee7b8d7f358f305d157268fde0" translate="yes" xml:space="preserve">
          <source>Int8#+</source>
          <target state="translated">Int8#+</target>
        </trans-unit>
        <trans-unit id="05c5e2d7be02b316e49148b15f0f9604bf958315" translate="yes" xml:space="preserve">
          <source>Int8#-</source>
          <target state="translated">Int8#-</target>
        </trans-unit>
        <trans-unit id="cb8e144c20f228163b38065ffa493736438150c7" translate="yes" xml:space="preserve">
          <source>Int8#/</source>
          <target state="translated">Int8#/</target>
        </trans-unit>
        <trans-unit id="9c3aedd9076452217fe05ce1a6994f8fe3cb7ec8" translate="yes" xml:space="preserve">
          <source>Int8#==</source>
          <target state="translated">Int8#==</target>
        </trans-unit>
        <trans-unit id="724186007727dbbafaf2f2bbf2031c5314901dc2" translate="yes" xml:space="preserve">
          <source>Int8#^</source>
          <target state="translated">Int8#^</target>
        </trans-unit>
        <trans-unit id="f538c6ff3ecfa6b3c72985c1de34c282a09febfd" translate="yes" xml:space="preserve">
          <source>Int8#|</source>
          <target state="translated">Int8#|</target>
        </trans-unit>
        <trans-unit id="cf1fa4361fb43ea84994dcb7c9f13a2bea0ba2f4" translate="yes" xml:space="preserve">
          <source>Int8.new</source>
          <target state="translated">Int8.new</target>
        </trans-unit>
        <trans-unit id="309fee8187082f78425e5e7c6a0b5c8fec85b726" translate="yes" xml:space="preserve">
          <source>IntPredicate</source>
          <target state="translated">IntPredicate</target>
        </trans-unit>
        <trans-unit id="42d2d97eb493277f59670eb0ecba56dade5b89b8" translate="yes" xml:space="preserve">
          <source>IntPredicate#eq?</source>
          <target state="translated">IntPredicate#eq?</target>
        </trans-unit>
        <trans-unit id="b6dc2f39b130e14e868864c14f37e6399cfca7b7" translate="yes" xml:space="preserve">
          <source>IntPredicate#ne?</source>
          <target state="translated">IntPredicate#ne?</target>
        </trans-unit>
        <trans-unit id="23327858be73ee78376de9e29ca4daaaeb774a8b" translate="yes" xml:space="preserve">
          <source>IntPredicate#sge?</source>
          <target state="translated">IntPredicate#sge?</target>
        </trans-unit>
        <trans-unit id="75e0109e6356c7488fab20a1a007c31c2dcaca76" translate="yes" xml:space="preserve">
          <source>IntPredicate#sgt?</source>
          <target state="translated">IntPredicate#sgt?</target>
        </trans-unit>
        <trans-unit id="a9f94f8cc70c0e6ea7a42aed58a8a12f4f443564" translate="yes" xml:space="preserve">
          <source>IntPredicate#sle?</source>
          <target state="translated">IntPredicate#sle?</target>
        </trans-unit>
        <trans-unit id="98e15d591b9866f7e368b7941f433e6a5783d6ba" translate="yes" xml:space="preserve">
          <source>IntPredicate#slt?</source>
          <target state="translated">IntPredicate#slt?</target>
        </trans-unit>
        <trans-unit id="da463d8c03f71cfd9e05a7094f78f524e2453547" translate="yes" xml:space="preserve">
          <source>IntPredicate#uge?</source>
          <target state="translated">IntPredicate#uge?</target>
        </trans-unit>
        <trans-unit id="616ea781e97a084fac07e94a955bef3588b14d3b" translate="yes" xml:space="preserve">
          <source>IntPredicate#ugt?</source>
          <target state="translated">IntPredicate#ugt?</target>
        </trans-unit>
        <trans-unit id="ea766709ea2602f633912764e7eb7398b7a0ab37" translate="yes" xml:space="preserve">
          <source>IntPredicate#ule?</source>
          <target state="translated">IntPredicate#ule?</target>
        </trans-unit>
        <trans-unit id="b5d5233ab5121da530682e630dea47d20552dce7" translate="yes" xml:space="preserve">
          <source>IntPredicate#ult?</source>
          <target state="translated">IntPredicate#ult?</target>
        </trans-unit>
        <trans-unit id="724b5422dc05c791b8cf0befd732972c0409722e" translate="yes" xml:space="preserve">
          <source>Integers</source>
          <target state="translated">Integers</target>
        </trans-unit>
        <trans-unit id="78ff6add61075bc88dbed579e8ec292cb807f7db" translate="yes" xml:space="preserve">
          <source>Intermediate multiplication will wrap around silently in case of overflow.</source>
          <target state="translated">오버플로가 발생하면 중간 곱셈이 자동으로 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="a182524348a8e585a50beb28f32c5dbeff8717be" translate="yes" xml:space="preserve">
          <source>Internally a symbol is represented as an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, so it's very efficient.</source>
          <target state="translated">내부적으로 심볼은 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 로 표시되므로 매우 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="07a6455c4971bd24c8ce79f996a088d36ba7cb1a" translate="yes" xml:space="preserve">
          <source>Internally, symbols are implemented as constants with a numeric value of type &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">내부적으로 기호는 &lt;code&gt;Int32&lt;/code&gt; 유형의 숫자 ​​값을 사용하여 상수로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="8561b0950c770bea073ea4bb33239c8d5abfd1d1" translate="yes" xml:space="preserve">
          <source>Internally, the compiler rewrites command literals to calls to the top-level method &lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#%60(command&quot;&gt;&lt;code&gt;`()&lt;/code&gt;&lt;/a&gt;:String-class-method) with a string literal containing the command as argument: &lt;code&gt;`echo #{argument}` &lt;/code&gt; and &lt;code&gt;%x(echo #{argument})&lt;/code&gt; are rewritten to &lt;code&gt;`(&quot;echo #{argument}&quot;)&lt;/code&gt;.</source>
          <target state="translated">내부적으로 컴파일러는 명령 리터럴을 최상위 메소드 &lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#%60(command&quot;&gt; &lt;code&gt;`()&lt;/code&gt; &lt;/a&gt; : String-class-method)를 호출하여 명령으로 인수로 포함하는 문자열 리터럴로 &lt;code&gt;`echo #{argument}` &lt;/code&gt; 및 &lt;code&gt;%x(echo #{argument})&lt;/code&gt; 는 &lt;code&gt;`(&quot;echo #{argument}&quot;)&lt;/code&gt; ) 로 다시 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="590ff985c5a73514b022b125e5ecd4b9e7c63c2c" translate="yes" xml:space="preserve">
          <source>Internally, the compiler rewrites command literals to calls to the top-level method &lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#%60(command):String-class-method&quot;&gt;&lt;code&gt;`()&lt;/code&gt;&lt;/a&gt; with a string literal containing the command as argument: &lt;code&gt;`echo #{argument}`&lt;/code&gt; and &lt;code&gt;%x(echo #{argument})&lt;/code&gt; are rewritten to &lt;code&gt;`(&quot;echo #{argument}&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e2d293daa9d8c84ee4d742cc245a7c4de2b1a7" translate="yes" xml:space="preserve">
          <source>Internally, the time is stored as an &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; representing seconds from epoch (&lt;code&gt;0001-01-01 00:00:00.0 UTC&lt;/code&gt;) and an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; representing nanosecond-of-second with value range &lt;code&gt;0..999_999_999&lt;/code&gt;.</source>
          <target state="translated">내부적으로 시간은 에포크에서 초를 나타내는 &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;0001-01-01 00:00:00.0 UTC&lt;/code&gt; ) 및 값 범위가 &lt;code&gt;0..999_999_999&lt;/code&gt; 인 나노초를 나타내는 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 로 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="d774038263eef90e66a521a0124a4a6a5d6fe4ae" translate="yes" xml:space="preserve">
          <source>Interpolated strings are transformed by the compiler to append to a string IO so that it automatically avoids intermediate strings. The example above translates to:</source>
          <target state="translated">보간 된 문자열은 컴파일러에 의해 변환되어 문자열 IO에 추가되어 중간 문자열을 자동으로 피합니다. 위의 예는 다음과 같이 번역됩니다.</target>
        </trans-unit>
        <trans-unit id="2ac1841fd698dde8b6be69a3e373fd857dc87713" translate="yes" xml:space="preserve">
          <source>Interpolates &lt;em&gt;other&lt;/em&gt; into the string using &lt;code&gt;Kernel#sprintf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Kernel#sprintf&lt;/code&gt; 를 사용하여 &lt;em&gt;다른&lt;/em&gt; 문자열을 보간합니다 .</target>
        </trans-unit>
        <trans-unit id="2695086fe014c5ee3f78e837bdbb65489dd1b3fd" translate="yes" xml:space="preserve">
          <source>Interpolates &lt;em&gt;other&lt;/em&gt; into the string using top-level &lt;code&gt;::sprintf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="8279ca448a0ab5697985d6ac3096ea1121f6590a" translate="yes" xml:space="preserve">
          <source>Interpolation can be disabled by escaping the &lt;code&gt;#&lt;/code&gt; character with a backslash or by using a non-interpolating string literal like &lt;code&gt;%q()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 문자를 백 슬래시로 이스케이프하거나 &lt;code&gt;%q()&lt;/code&gt; 와 같은 보간되지 않는 문자열 리터럴을 사용하여 보간을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="203dd8f222ef6ee7a0085ccde00e27f9606acbeb" translate="yes" xml:space="preserve">
          <source>Interpolation is implemented using a &lt;a href=&quot;http://crystal-lang.org/api/String/Builder.html&quot;&gt;String::Builder&lt;/a&gt; and invoking &lt;code&gt;Object#to_s(IO)&lt;/code&gt; on each expression enclosed by &lt;code&gt;#{...}&lt;/code&gt;. The expression &lt;code&gt;&quot;sum: #{a} + #{b} = #{a + b}&quot;&lt;/code&gt; is equivalent to:</source>
          <target state="translated">보간은 &lt;a href=&quot;http://crystal-lang.org/api/String/Builder.html&quot;&gt;String :: Builder를&lt;/a&gt; 사용하여 구현 되며 &lt;code&gt;#{...}&lt;/code&gt; 로 묶인 각 표현식에서 &lt;code&gt;Object#to_s(IO)&lt;/code&gt; 를 호출 합니다. 표현은 &lt;code&gt;&quot;sum: #{a} + #{b} = #{a + b}&quot;&lt;/code&gt; 에 상당 :</target>
        </trans-unit>
        <trans-unit id="14e99587a630151c74d807401b256a84d8024138" translate="yes" xml:space="preserve">
          <source>Interpolation works in regular expression literals just as it does in &lt;a href=&quot;string&quot;&gt;string literals&lt;/a&gt;. Be aware that using this feature will cause an exception to be raised at runtime, if the resulting string results in an invalid regular expression.</source>
          <target state="translated">보간은 &lt;a href=&quot;string&quot;&gt;문자열 리터럴&lt;/a&gt; 에서와 마찬가지로 정규식 리터럴에서 작동합니다 . 결과 문자열이 유효하지 않은 정규식을 생성하는 경우이 기능을 사용하면 런타임시 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e946dbbe87720ea29ef7eba132fed7777c7ec02e" translate="yes" xml:space="preserve">
          <source>Interpolation works in regular expression literals just as it does in string literals. Be aware that using this feature will cause an exception to be raised at runtime, if the resulting string would not be a valid regular expression.</source>
          <target state="translated">보간은 문자열 리터럴에서와 같이 정규식 리터럴에서 작동합니다. 결과 문자열이 유효한 정규식이 아닌 경우이 기능을 사용하면 런타임시 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="35aec9dea1d5266672223745d817ff394e4b0339" translate="yes" xml:space="preserve">
          <source>Interprets this string as containing a sequence of hexadecimal values and decodes it as a slice of bytes.</source>
          <target state="translated">이 문자열을 일련의 16 진 값을 포함하는 것으로 해석하고 바이트 조각으로 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="e7b79b2978dc2b067cf00a9d08bb433b78da020b" translate="yes" xml:space="preserve">
          <source>Interprets this string as containing a sequence of hexadecimal values and decodes it as a slice of bytes. Two consecutive bytes in the string represent a byte in the returned slice.</source>
          <target state="translated">이 문자열을 일련의 16 진 값을 포함하는 것으로 해석하고 바이트 조각으로 디코딩합니다. 문자열에서 두 개의 연속 바이트는 반환 된 슬라이스의 바이트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c4425f38834670c21aafe50ba6134b8282e16b90" translate="yes" xml:space="preserve">
          <source>Interrupted system call</source>
          <target state="translated">중단 된 시스템 호출</target>
        </trans-unit>
        <trans-unit id="dd40ef5a82184e855e7d20253e995f84f3e72386" translate="yes" xml:space="preserve">
          <source>Intersection: returns a new set containing elements common to both sets.</source>
          <target state="translated">교차 : 두 세트에 공통 인 요소가 포함 된 새 세트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="45ff4427a9f1fb0c18cbcdf6b26d6a2d22f2df2f" translate="yes" xml:space="preserve">
          <source>Invalid argument</source>
          <target state="translated">잘못된 인수</target>
        </trans-unit>
        <trans-unit id="75e51d1b0bad3a5c76a90346800ed0b9632bdf99" translate="yes" xml:space="preserve">
          <source>Invalid chars (in the range U+D800..U+DFFF) are encoded with the unicode replacement char value &lt;code&gt;0xfffd&lt;/code&gt;.</source>
          <target state="translated">유효하지 않은 문자 (U + D800..U + DFFF 범위)는 유니 코드 대체 문자 값 &lt;code&gt;0xfffd&lt;/code&gt; 로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d62df85231310e8d5fe78ea4e88593efd0006a9" translate="yes" xml:space="preserve">
          <source>Invalid values are encoded using the unicode replacement char with codepoint &lt;code&gt;0xfffd&lt;/code&gt;.</source>
          <target state="translated">유효하지 않은 값은 코드 포인트가 &lt;code&gt;0xfffd&lt;/code&gt; 인 유니 코드 대체 문자를 사용하여 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="d879133f90013d89c52a565c9cffb0c0ab147a5e" translate="yes" xml:space="preserve">
          <source>InvalidBigDecimalException</source>
          <target state="translated">InvalidBigDecimalException</target>
        </trans-unit>
        <trans-unit id="07a11ef64e873369f79deae1dd1f6e621b52b9f5" translate="yes" xml:space="preserve">
          <source>InvalidBigDecimalException.new</source>
          <target state="translated">InvalidBigDecimalException.new</target>
        </trans-unit>
        <trans-unit id="83c98896354dcb37a5b41f0710d5ba593dc57415" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError</source>
          <target state="translated">InvalidByteSequenceError</target>
        </trans-unit>
        <trans-unit id="46b8312a80435648dbb3cfa519b4d587d62f61b8" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError.new</source>
          <target state="translated">InvalidByteSequenceError.new</target>
        </trans-unit>
        <trans-unit id="915701f62a525253f72f96eb63151564af9562c1" translate="yes" xml:space="preserve">
          <source>Inverts all bits in the array.</source>
          <target state="translated">배열의 모든 비트를 반전시킵니다.</target>
        </trans-unit>
        <trans-unit id="8aef6c40ab904b771c1629b9328deec25e336505" translate="yes" xml:space="preserve">
          <source>Inverts all bits in the array. Falses become &lt;code&gt;true&lt;/code&gt; and vice versa.</source>
          <target state="translated">배열의 모든 비트를 반전시킵니다. 거짓은 &lt;code&gt;true&lt;/code&gt; 되고 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="1d441ed4c58e304b58418ecca1ff23c31e41e9f0" translate="yes" xml:space="preserve">
          <source>Inverts keys and values.</source>
          <target state="translated">키와 값을 반전시킵니다.</target>
        </trans-unit>
        <trans-unit id="28808e7e4a6b05374bcd974c6780e1cdb52e6947" translate="yes" xml:space="preserve">
          <source>Inverts keys and values. If there are duplicated values, the last key becomes the new value.</source>
          <target state="translated">키와 값을 반전시킵니다. 중복 된 값이 있으면 마지막 키가 새 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="b29109c6685cc329fa3b9d890158fe5ec8b0ad6e" translate="yes" xml:space="preserve">
          <source>Invocations can be nested in order to capture each source in their own &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자체 &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; 에서 각 소스를 캡처하기 위해 호출을 중첩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29a86efefc08f766779a7d5ac4fb5269e193aa28" translate="yes" xml:space="preserve">
          <source>Invoke this method on an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; before executing an HTTP request.</source>
          <target state="translated">HTTP 요청을 실행하기 전에 &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 에서이 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="7aa3a51e95d32582d4da3b08fedb735c5b5aa9ca" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;at_exit&lt;/code&gt; handlers</source>
          <target state="translated">&lt;code&gt;at_exit&lt;/code&gt; 핸들러 를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="e84d499067fbb3e0a3de544ae02e145c98325eda" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;next&lt;/code&gt; on the wrapped iterator and returns &lt;code&gt;stop&lt;/code&gt; if the given value was a &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">래핑 된 반복자에서 &lt;code&gt;next&lt;/code&gt; 를 호출 하고 지정된 값이 &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt; 경우 &lt;code&gt;stop&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="de8ea797249046496cbd124627b2a1e6b67795c2" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;next&lt;/code&gt; on the wrapped iterator and returns &lt;code&gt;stop&lt;/code&gt; if the given value was a &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt;. Otherwise, returns the value.</source>
          <target state="translated">래핑 된 반복자에서 &lt;code&gt;next&lt;/code&gt; 를 호출 하고 지정된 값이 &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt; 경우 &lt;code&gt;stop&lt;/code&gt; 을 리턴합니다 . 그렇지 않으면 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02438a065f28c4d5e07aa723e37693050f303a09" translate="yes" xml:space="preserve">
          <source>Invokes the block for each of the given &lt;em&gt;node&lt;/em&gt;s keys and values, resolving merge keys (&amp;lt;&amp;lt;) when found (keys and values of the resolved merge mappings are yielded, recursively).</source>
          <target state="translated">주어진 각 &lt;em&gt;노드&lt;/em&gt; 의 키 및 값에 대한 블록을 호출하여 발견 될 때 병합 키 (&amp;lt;&amp;lt;)를 해결합니다 (해결 된 병합 맵핑의 키 및 값은 재귀 적으로 생성됩니다).</target>
        </trans-unit>
        <trans-unit id="8385e16485f1cca3a2d76c65bc11828324e0163b" translate="yes" xml:space="preserve">
          <source>Invokes the block once for each row in this CSV, yielding &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">이 CSV의 각 행에 대해 블록을 한 번 호출하여 &lt;code&gt;self&lt;/code&gt; 를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="0d89efefe422c82462c7cb4c2e0b825e59a12272" translate="yes" xml:space="preserve">
          <source>Invokes the given &lt;em&gt;block&lt;/em&gt;</source>
          <target state="translated">주어진 &lt;em&gt;블록을&lt;/em&gt; 호출&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e62acc6438fad58c6927a4c011279656eb56d2c" translate="yes" xml:space="preserve">
          <source>Invokes the given block for each element of &lt;code&gt;self&lt;/code&gt;, replacing the element with the value returned by the block.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 각 요소에 대해 주어진 블록을 호출하여 요소를 블록이 반환 한 값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="8b8f503a8307bfbec2c26d9e33e8e1e0241b2889" translate="yes" xml:space="preserve">
          <source>Invokes the given block for each element of &lt;code&gt;self&lt;/code&gt;, replacing the element with the value returned by the block. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 각 요소에 대해 주어진 블록을 호출하여 요소를 블록이 반환 한 값으로 바꿉니다. &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3c98cc1f99c2fd578cced906f6c13d1c71b294e1" translate="yes" xml:space="preserve">
          <source>Invokes the given block with each &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; in this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 각 &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 로 지정된 블록을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="558f5f6ed4eaee763fc7be5b1cc4b683e83599a9" translate="yes" xml:space="preserve">
          <source>Invokes the given block with each &lt;em&gt;line&lt;/em&gt; in this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, where a line is defined by the arguments passed to this method, which can be the same ones as in the &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 각 &lt;em&gt;줄&lt;/em&gt; 을 사용하여 주어진 블록을 호출합니다 . &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; 메소드에 전달 된 인수에 의해 행이 정의됩니다.이 인수는 #gets 메소드 와 동일 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b26383f6bb1af450d3fba7998fff022f698dc9a" translate="yes" xml:space="preserve">
          <source>Invokes the given block with each byte (&lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt;) in this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 의 각 바이트 ( &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt; )로 지정된 블록을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="156490680a11be4dc17e176296871669bc11d53b" translate="yes" xml:space="preserve">
          <source>Invokes the given block with the sequence of numbers starting at &lt;code&gt;self&lt;/code&gt;, incremented by &lt;em&gt;by&lt;/em&gt; on each call, and with an optional &lt;em&gt;to&lt;/em&gt;.</source>
          <target state="translated">에서 시작하는 번호의 순서에 주어진 블록을 호출 &lt;code&gt;self&lt;/code&gt; 에 의해 증가 &lt;em&gt;에 의해&lt;/em&gt; 각각의 호출에, 및 선택적으로 &lt;em&gt;에&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c45edf559d3bc6bb2c31eb962d2eee2e1b0ea107" translate="yes" xml:space="preserve">
          <source>Invokes this &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; and returns the result.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; 을 호출 하고 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b673c6a72896107ce4c1c1720830db2d7090b84b" translate="yes" xml:space="preserve">
          <source>Invoking</source>
          <target state="translated">Invoking</target>
        </trans-unit>
        <trans-unit id="2b58236c28262a0145db427d2dce68ca8624e043" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;&lt;a href=&quot;pullparser#read_next:EventKind-instance-method&quot;&gt;#read_next&lt;/a&gt;&lt;/code&gt; reads the next event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;pullparser#read_next:EventKind-instance-method&quot;&gt;#read_next&lt;/a&gt;&lt;/code&gt; 를 호출하면 다음 이벤트를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="a193eaed15e06b5adaf4d36c21d57d8bb6045b84" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;&lt;a href=&quot;reference#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; on a &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; allocates a new instance on the heap. The instance's memory is automatically freed (garbage-collected) when the instance is no longer referred by any other entity in the program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;reference#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; 를 호출하면 힙에 새 인스턴스가 할당됩니다. 인스턴스가 더 이상 프로그램의 다른 엔티티에 의해 참조되지 않으면 인스턴스의 메모리는 자동으로 해제됩니다 (가비지 수집).</target>
        </trans-unit>
        <trans-unit id="d82b06adf1a876d702b6a3905d8d56b51827e40e" translate="yes" xml:space="preserve">
          <source>Is a directory</source>
          <target state="translated">디렉토리인가</target>
        </trans-unit>
        <trans-unit id="53455c7c74fd74db45e82be0cf4bea5c8e068f2a" translate="yes" xml:space="preserve">
          <source>Is equivalent to this code:</source>
          <target state="translated">이 코드와 동일합니다 :</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1ebd5482f2fe3d68fca757b459cad0585790de2b" translate="yes" xml:space="preserve">
          <source>Is the same as writing:</source>
          <target state="translated">글쓰기와 동일합니다 :</target>
        </trans-unit>
        <trans-unit id="bc143ae2a93c710a2cfc98cc0ba68108d9eda5a6" translate="yes" xml:space="preserve">
          <source>It accepts multiple arguments, and the result is the union of the expression types:</source>
          <target state="translated">여러 인수를 허용하며 결과는 표현식 유형의 합집합입니다.</target>
        </trans-unit>
        <trans-unit id="25a4e799d99c7294806f559139d9db9702d615a9" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow decreasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the moneth.</source>
          <target state="translated">오버플로로 인해 연도가 감소하는 개월 수를 추가합니다. 결과 월이 유효하지 않은 경우, 유효일의 마지막 유효 날짜로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="a24602cb349e58f12a47a7a3c747b521c2ecd7a4" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow decreasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d19cc2623700c513b188e3430e6fbfa3c1e3e4a" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow increasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the moneth.</source>
          <target state="translated">오버플로로 인해 월 수가 증가합니다. 결과 월이 유효하지 않은 경우, 유효일의 마지막 유효 날짜로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="fc716745c3a6b8df172fa66e08d09e6461d4a1d4" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow increasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e7ebd4c12aa41dd3dd3a73040cb0023d98db91" translate="yes" xml:space="preserve">
          <source>It can be useful to read ints and floats without losing precision, or to read an object and deserialize it later based on some condition.</source>
          <target state="translated">정밀도를 잃지 않고 int와 float를 읽거나, 어떤 조건에 따라 나중에 객체를 읽고 역 직렬화하는 것이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3913f47304263c694a73a849afcd806e1fe1919a" translate="yes" xml:space="preserve">
          <source>It can respond to some methods</source>
          <target state="translated">일부 방법에 응답 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d0abefad6ac5edb54665e9b0bc20ad2c3b0cae5e" translate="yes" xml:space="preserve">
          <source>It compares the elements of both arrays in the same position using the &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; operator. As soon as one of such comparisons returns a non-zero value, that result is the return value of the comparison.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 연산자를 사용하여 동일한 위치에서 두 배열의 요소를 비교합니다 . 이러한 비교 중 하나가 0이 아닌 값을 반환하자마자 결과는 비교의 반환 값입니다.</target>
        </trans-unit>
        <trans-unit id="8b2df94acaebb3f052ec0332272a9bd5125dcb80" translate="yes" xml:space="preserve">
          <source>It compares the elements of both slices in the same position using the &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; operator. As soon as one of such comparisons returns a non-zero value, that result is the return value of the comparison.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 연산자를 사용하여 동일한 위치에서 두 슬라이스의 요소를 비교합니다 . 이러한 비교 중 하나가 0이 아닌 값을 반환하자마자 결과는 비교의 반환 값입니다.</target>
        </trans-unit>
        <trans-unit id="64aa730d9d744511cd0b0a8fb3b5954f779dc0ef" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;gt;&lt;/code&gt; so it will work for any type that supports that method.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; 를 사용하여 비교 하므로 해당 방법을 지원하는 모든 유형에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5a22f978ac64e7d513badd1fb3a7071a5bcaf62c" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;gt;&lt;/code&gt; so the block must return a type that supports that method</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; 를 사용하여 비교 하므로 블록은 해당 메소드를 지원하는 유형을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="98c9d20a5502153269c963c849b822b83e292e5a" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;lt;&lt;/code&gt; so it will work for any type that supports that method.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 를 사용하여 비교 하므로 해당 방법을 지원하는 모든 유형에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="885c6a11fa3aeee34c5898eb00aa7d7eca897dfb" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;lt;&lt;/code&gt; so the block must return a type that supports that method</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 를 사용하여 비교 하므로 블록은 해당 메소드를 지원하는 유형을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="ff2f7e261c940c0d24f850f16e8b930367d6c442" translate="yes" xml:space="preserve">
          <source>It contains a list of zone offsets and rules for transitioning between them.</source>
          <target state="translated">여기에는 구역 오프셋 목록과 전환을위한 규칙이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccf4db640a5dabfdd27410bba064eed5f42177bc" translate="yes" xml:space="preserve">
          <source>It contains the &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt;, hour-minute-second format (see &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; in seconds and &lt;code&gt;&quot;DST&quot;&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;zone#dst?:Bool-instance-method&quot;&gt;#dst?&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;&quot;STD&quot;&lt;/code&gt;.</source>
          <target state="translated">그것은 포함 &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; ,시 - 분 - 초 형식 (참조 &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt; 를 ) &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; 초와 &lt;code&gt;&quot;DST&quot;&lt;/code&gt; 경우 &lt;code&gt;&lt;a href=&quot;zone#dst?:Bool-instance-method&quot;&gt;#dst?&lt;/a&gt;&lt;/code&gt; 그렇지 않으면 &lt;code&gt;&quot;STD&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="16c8e0b6e0e196a6711e536d90f0fa17cdbf743e" translate="yes" xml:space="preserve">
          <source>It doesn't write any output for entries generated from the root logger. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</source>
          <target state="translated">루트 로거에서 생성 된 항목에 대한 출력은 작성하지 않습니다. 매개 변수 &lt;code&gt;before&lt;/code&gt; 과 &lt;code&gt;after&lt;/code&gt; 제공 될 수는 값을 주위에 기록 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d31e057adf26df22c9683811e18e7b269ca6cbe" translate="yes" xml:space="preserve">
          <source>It doesn't write any output if the context is empty. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</source>
          <target state="translated">It doesn't write any output if the context is empty. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</target>
        </trans-unit>
        <trans-unit id="8af5ee78944b7ddbda039e242f6334610d6bcecc" translate="yes" xml:space="preserve">
          <source>It doesn't write any output if the entry data is empty. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</source>
          <target state="translated">It doesn't write any output if the entry data is empty. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</target>
        </trans-unit>
        <trans-unit id="302288508730f79c7cbcae4e723cca4e5250ecf0" translate="yes" xml:space="preserve">
          <source>It doesn't write any output unless there is an exception in the entry. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value. &lt;code&gt;before&lt;/code&gt; defaults to &lt;code&gt;'\n'&lt;/code&gt; so the exception is written on a separate line</source>
          <target state="translated">It doesn't write any output unless there is an exception in the entry. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value. &lt;code&gt;before&lt;/code&gt; defaults to &lt;code&gt;'\n'&lt;/code&gt; so the exception is written on a separate line</target>
        </trans-unit>
        <trans-unit id="bee3adb7e538057430c079ddf7809891f1e53ade" translate="yes" xml:space="preserve">
          <source>It expects the URI to include &lt;code&gt;&lt;scheme&gt;://&lt;/scheme&gt;&lt;/code&gt; where &lt;code&gt;scheme&lt;/code&gt; as well as any additional URI components (such as &lt;code&gt;fragment&lt;/code&gt; or &lt;code&gt;query&lt;/code&gt;) are ignored.</source>
          <target state="translated">URI에 포함될 것으로 예상합니다 &lt;code&gt;&lt;scheme&gt;://&lt;/scheme&gt;&lt;/code&gt; 여기서 &lt;code&gt;scheme&lt;/code&gt; 및 추가 URI 구성 요소 (예 : &lt;code&gt;fragment&lt;/code&gt; 또는 &lt;code&gt;query&lt;/code&gt; )는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f14bd2ffe2da93fef16cda1c33f9bcd51e0645d5" translate="yes" xml:space="preserve">
          <source>It expects the URI to include &lt;code&gt;&lt;scheme&gt;://&lt;host&gt;:&lt;/host&gt;&lt;/scheme&gt;&lt;/code&gt; where &lt;code&gt;scheme&lt;/code&gt; as well as any additional URI components (such as &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;query&lt;/code&gt;) are ignored.</source>
          <target state="translated">URI에 포함될 것으로 예상합니다 &lt;code&gt;&lt;scheme&gt;://&lt;host&gt;:&lt;/host&gt;&lt;/scheme&gt;&lt;/code&gt; 여기서 &lt;code&gt;scheme&lt;/code&gt; 및 추가 URI 구성 요소 (예 : &lt;code&gt;path&lt;/code&gt; 또는 &lt;code&gt;query&lt;/code&gt; )는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a595fe54697df1012f2586e134b6f1fae4d5f6cf" translate="yes" xml:space="preserve">
          <source>It has a type</source>
          <target state="translated">유형이 있습니다</target>
        </trans-unit>
        <trans-unit id="8c24e36af14871b3d53eeac8703e7e91d7593f16" translate="yes" xml:space="preserve">
          <source>It has the same effect as writing &lt;code&gt;is_a?(Nil)&lt;/code&gt; but it's shorter and easier to read and write.</source>
          <target state="translated">&lt;code&gt;is_a?(Nil)&lt;/code&gt; 를 쓰는 것과 같은 효과가 있지만 더 짧고 읽기 쉽고 쓰기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="2a36866f0aaba4310877a1d4b4772c5da1f4b07d" translate="yes" xml:space="preserve">
          <source>It is a difference from &lt;code&gt;&lt;a href=&quot;matchdata#to_a-instance-method&quot;&gt;#to_a&lt;/a&gt;&lt;/code&gt; that the result array does not contain the match for the entire &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;self[0]&lt;/code&gt;).</source>
          <target state="translated">결과 배열에 전체 &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;self[0]&lt;/code&gt; )에 대한 일치 항목이 포함되어 있지 &lt;code&gt;&lt;a href=&quot;matchdata#to_a-instance-method&quot;&gt;#to_a&lt;/a&gt;&lt;/code&gt; 점은 #to_a 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="95c8d8e5bdb5904742399caf4e5bea65975e9705" translate="yes" xml:space="preserve">
          <source>It is a pseudo-method because it only accepts a symbol literal as its argument, and is also treated specially by the compiler, as explained in &lt;a href=&quot;if_varresponds_to&quot;&gt;if var.responds_to?(...)&lt;/a&gt;.</source>
          <target state="translated">의사 리터럴은 인수로 기호 리터럴 만 허용하기 때문에 &lt;a href=&quot;if_varresponds_to&quot;&gt;var.responds_to? (...)에&lt;/a&gt; 설명 된대로 컴파일러에서 특별히 처리하기 때문에 의사 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="7b57860ae8c66522eccf8931742069c8809da815" translate="yes" xml:space="preserve">
          <source>It is a pseudo-method because the compiler knows about it and it can affect type information, as explained in &lt;a href=&quot;if_var_nil&quot;&gt;if var.nil?(...)&lt;/a&gt;.</source>
          <target state="translated">컴파일러가 알고 있고 &lt;a href=&quot;if_var_nil&quot;&gt;var.nil? (...)에&lt;/a&gt; 설명 된대로 유형 정보에 영향을 줄 수 있기 때문에 의사 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="937a99e3a9fdce4c06e8a92d2e57f0d815b54bec" translate="yes" xml:space="preserve">
          <source>It is a pseudo-method because the compiler knows about it and it can affect type information, as explained in &lt;a href=&quot;if_varis_a&quot;&gt;if var.is_a?(...)&lt;/a&gt;. Also, it accepts a &lt;a href=&quot;type_grammar&quot;&gt;type&lt;/a&gt; that must be known at compile-time as its argument.</source>
          <target state="translated">컴파일러가 알고 있고 &lt;a href=&quot;if_varis_a&quot;&gt;var.is_a? (...)에&lt;/a&gt; 설명 된대로 유형 정보에 영향을 줄 수 있기 때문에 의사 방법 입니다. 또한 컴파일 타임에 인수로 알고 있어야 하는 &lt;a href=&quot;type_grammar&quot;&gt;유형&lt;/a&gt; 을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="159f956badd281a8e32b6eaf96b75f8db1ca0b21" translate="yes" xml:space="preserve">
          <source>It is a type of message authentication code (MAC) involving a hash function in combination with a key.</source>
          <target state="translated">키와 함께 해시 함수를 포함하는 일종의 메시지 인증 코드 (MAC)입니다.</target>
        </trans-unit>
        <trans-unit id="237913c6bcadae39fa3d26be926828ed008b1be9" translate="yes" xml:space="preserve">
          <source>It is a very common practice to pass options to the application. For example, we may run &lt;code&gt;crystal -v&lt;/code&gt; and Crystal will display:</source>
          <target state="translated">It is a very common practice to pass options to the application. For example, we may run &lt;code&gt;crystal -v&lt;/code&gt; and Crystal will display:</target>
        </trans-unit>
        <trans-unit id="bdb59b00a40f24088f1d8f23ca89cab9c5119f0c" translate="yes" xml:space="preserve">
          <source>It is also possible to bind a generic &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(socket : Socket::Server)&lt;/a&gt;&lt;/code&gt; which can be used for custom network protocol configurations.</source>
          <target state="translated">사용자 지정 네트워크 프로토콜 구성에 사용할 수있는 &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(socket : Socket::Server)&lt;/a&gt;&lt;/code&gt; 를 사용하여 일반 &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; 를 바인딩 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8645b7b5be4322400c7f055820e804fac796140b" translate="yes" xml:space="preserve">
          <source>It is conceptually similar to an operating system thread but with less overhead and completely internal to the Crystal process. The runtime includes a scheduler which schedules execution of fibers.</source>
          <target state="translated">It is conceptually similar to an operating system thread but with less overhead and completely internal to the Crystal process. The runtime includes a scheduler which schedules execution of fibers.</target>
        </trans-unit>
        <trans-unit id="d119e59fb133e03d944b34c8efdd3041b1d8d3a6" translate="yes" xml:space="preserve">
          <source>It is created by enclosing an UTF-8 character in single quotes.</source>
          <target state="translated">UTF-8 문자를 작은 따옴표로 묶어 작성합니다.</target>
        </trans-unit>
        <trans-unit id="34a504fe621647db7eba2c16f92b9f776be6d075" translate="yes" xml:space="preserve">
          <source>It is encouraged to delete a tempfile after using it, which ensures they are not left behind in your filesystem until garbage collected.</source>
          <target state="translated">임시 파일은 사용 후 삭제하여 가비지 수집 될 때까지 파일 시스템에 남아 있지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="a858ee4ba3877abdf058491e979bc86b9f765b9a" translate="yes" xml:space="preserve">
          <source>It is for convenience with using on &lt;code&gt;case&lt;/code&gt; statement.</source>
          <target state="translated">on &lt;code&gt;case&lt;/code&gt; 문 을 사용하면 편리 합니다.</target>
        </trans-unit>
        <trans-unit id="77f9cfd4ae4c989f3382c47847d1940ec9eb787e" translate="yes" xml:space="preserve">
          <source>It is functionally equivalent to &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기능적으로 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1cd134619d2958d7e14f48e16071c31b92c57181" translate="yes" xml:space="preserve">
          <source>It is functionally equivalent to &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">It is functionally equivalent to &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="564df31c38824b71c71434a836be7a7e7b8c792b" translate="yes" xml:space="preserve">
          <source>It is generally recommended to keep instances in UTC and only apply a local time zone when formatting for user display, unless the domain logic requires having a specific time zone (for example for calendaric operations).</source>
          <target state="translated">도메인 논리에 특정 시간대 (예 : 달력 작업)가 필요한 경우가 아니면 인스턴스를 UTC로 유지하고 사용자 표시 형식을 지정할 때 로컬 시간대 만 적용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c775346f2939dec769906b9bc1a5335723d76575" translate="yes" xml:space="preserve">
          <source>It is implemented under the hood with &lt;a href=&quot;https://gmplib.org/&quot;&gt;GMP&lt;/a&gt;.</source>
          <target state="translated">그것은 &lt;a href=&quot;https://gmplib.org/&quot;&gt;GMP&lt;/a&gt; 와 함께 후드 아래에서 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c4b139867eccd18018e961b39e1273a93d49775" translate="yes" xml:space="preserve">
          <source>It is important to have in mind that if one of the operations fails then the final state would be inconsistent. So we need to execute the &lt;strong&gt;two operations&lt;/strong&gt; (deposit and withdraw) as &lt;strong&gt;one operation&lt;/strong&gt;. And if an error occurs then we would like to go back in time as if that one operation was never executed.</source>
          <target state="translated">작업 중 하나가 실패하면 최종 상태가 일치하지 않는다는 것을 명심해야합니다. 따라서 &lt;strong&gt;두 작업&lt;/strong&gt; (예금 및 인출)을 &lt;strong&gt;하나의 작업&lt;/strong&gt; 으로 실행해야 &lt;strong&gt;합니다&lt;/strong&gt; . 그리고 오류가 발생하면 한 번의 작업이 실행되지 않은 것처럼 시간을 거슬러 돌아가고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="d427db589a10935ea6290aaa43929a1648b20aad" translate="yes" xml:space="preserve">
          <source>It is initially configured according to system environment settings, but its value can be changed:</source>
          <target state="translated">처음에는 시스템 환경 설정에 따라 구성되지만 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4627c7657bca304a1b42c4cb171e3f0bd0ff79c" translate="yes" xml:space="preserve">
          <source>It is internally represented by a pair of &lt;code&gt;&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt;: value and scale. Value contains the actual value, and scale tells the decimal point place. E.g. when value is &lt;code&gt;1234&lt;/code&gt; and scale &lt;code&gt;2&lt;/code&gt;, the result is &lt;code&gt;12.34&lt;/code&gt;.</source>
          <target state="translated">It is internally represented by a pair of &lt;code&gt;&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; : value and scale. Value contains the actual value, and scale tells the decimal point place. E.g. when value is &lt;code&gt;1234&lt;/code&gt; and scale &lt;code&gt;2&lt;/code&gt; , the result is &lt;code&gt;12.34&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07b43129ae7c929430bf865127c986d6b053f16b" translate="yes" xml:space="preserve">
          <source>It is often used in generic code, to make use of the compiler's type inference capabilities:</source>
          <target state="translated">컴파일러의 형식 유추 기능을 사용하기 위해 일반 코드에서 자주 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="76bd642c8a468e701cf996857ecd9cf03463815b" translate="yes" xml:space="preserve">
          <source>It is possible to define a macro which generates one or more macro definitions. You must escape macro expressions of the inner macro by preceding them with a backslash character &quot;\&quot; to prevent them from being evaluated by the outer macro.</source>
          <target state="translated">하나 이상의 매크로 정의를 생성하는 매크로를 정의 할 수 있습니다. 내부 매크로의 매크로 표현식 앞에는 백 슬래시 문자 &quot;\&quot;를 붙여 외부 매크로에 의해 평가되지 않도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="a17205b781b0b2cdfb7451d646dd1abd9036df89" translate="yes" xml:space="preserve">
          <source>It is possible to directly call methods on heredoc string literals, or use them inside parentheses:</source>
          <target state="translated">heredoc 문자열 리터럴에서 메소드를 직접 호출하거나 괄호 안에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a13802aebfb819e9918605d1e0f2fddf9dd00b19" translate="yes" xml:space="preserve">
          <source>It is possible to make a custom RNG by including &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; and implementing &lt;code&gt;&lt;a href=&quot;random#next_u-instance-method&quot;&gt;#next_u&lt;/a&gt;&lt;/code&gt; to return an unsigned number of a pre-determined type (usually &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt;). The numbers generated by your RNG must be uniformly distributed in the whole range of possible values for that type (e.g. &lt;code&gt;0u32..UInt32::MAX&lt;/code&gt;). This allows all other methods of &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; to be based on this and still produce uniformly distributed results. Your &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; class should also have a way to initialize it. For pseudo-random number generators that will usually be an integer seed, but there are no rigid requirements for the initialization.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 을 포함 하고 &lt;code&gt;&lt;a href=&quot;random#next_u-instance-method&quot;&gt;#next_u&lt;/a&gt;&lt;/code&gt; 를 구현 하여 부호없는 수의 미리 결정된 유형 (일반적으로 &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt; ) 을 반환 하여 사용자 정의 RNG를 만들 수 있습니다. RNG가 생성 한 숫자는 해당 유형에 대해 가능한 모든 범위의 값으로 균일하게 분포되어야합니다 (예 : &lt;code&gt;0u32..UInt32::MAX&lt;/code&gt; ). 이를 통해 &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 다른 모든 방법을 기반으로하고 균일하게 분포 된 결과를 생성 할 수 있습니다. 귀하의 &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; 클래스는 초기화 할 수있는 방법이 있어야합니다. 의사 난수 생성기의 경우 일반적으로 정수 시드이지만 초기화에 대한 엄격한 요구 사항은 없습니다.</target>
        </trans-unit>
        <trans-unit id="0a32de1d0907515530fd1d90acb3378a4eb2462b" translate="yes" xml:space="preserve">
          <source>It is recommended to use a secure source, such as &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; or ChaCha20 for anything that needs security, such as online games, identification tokens, salts, initializing a PRNG, ... These PRNG are slower but cryptographically secure, so a third party can't deduce incoming numbers.</source>
          <target state="translated">온라인 게임, 식별 토큰, 소금, PRNG 초기화 등과 같이 보안이 필요한 모든 항목 에는 &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; 또는 ChaCha20 과 같은 안전한 소스를 사용하는 것이 좋습니다 . 이러한 PRNG는 느리지 만 암호로 안전하므로 제 3자가 들어오는 숫자를 추론 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3ae83b2915e1a4466f14ff7ff6bb1f15cebfb925" translate="yes" xml:space="preserve">
          <source>It is recommended to use the secure &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; as a source or another cryptographically quality PRNG such as &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; or ChaCha20.</source>
          <target state="translated">안전한 &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; 를 소스 또는 &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; 또는 ChaCha20 과 같은 다른 암호화 품질 PRNG 로 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="93f040c1cfc8994c9d56e7ac0117cadc647caeec" translate="yes" xml:space="preserve">
          <source>It is strongly recommended to use a cryptographically random source for &lt;em&gt;random&lt;/em&gt;, such as &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">강력위한 암호화 임의 소스의 사용을 권장 &lt;em&gt;임의&lt;/em&gt; 같은, &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f6ac9f1048cf822d468cd15e661673e36ae88d2" translate="yes" xml:space="preserve">
          <source>It is the caller's responsibility to remove the file when no longer needed.</source>
          <target state="translated">더 이상 필요하지 않은 경우 파일을 제거하는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="2b8edaca6788c7c913ff2a8beb35d142e0febf69" translate="yes" xml:space="preserve">
          <source>It is the only zone offset used in &lt;code&gt;&lt;a href=&quot;../location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; 에서 사용되는 유일한 영역 오프셋 입니다.</target>
        </trans-unit>
        <trans-unit id="8bc04793196384156ba81caa2f1399203a06d06b" translate="yes" xml:space="preserve">
          <source>It is typically created with a char literal by enclosing an UTF-8 character in single quotes.</source>
          <target state="translated">일반적으로 UTF-8 문자를 작은 따옴표로 묶어 char 리터럴로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="167d5320042ed31381da530503f6ac23afa57bb8" translate="yes" xml:space="preserve">
          <source>It is usually used inside a &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">일반적으로 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; 섹션 내에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4925fe775480210a04ad8c30ae3c7ba3153377ae" translate="yes" xml:space="preserve">
          <source>It is usually used inside a &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">It is usually used inside a &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; section.</target>
        </trans-unit>
        <trans-unit id="5073dd9e365b46368647b27c355fe6170f4f9ff7" translate="yes" xml:space="preserve">
          <source>It is valid to pass &lt;code&gt;&lt;a href=&quot;string#bytesize:Int32-instance-method&quot;&gt;#bytesize&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;index&lt;/em&gt;, and in this case the answer will be the size of this string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string#bytesize:Int32-instance-method&quot;&gt;#bytesize&lt;/a&gt;&lt;/code&gt; 를 &lt;em&gt;index&lt;/em&gt; 에 전달하는 것이 유효 하며,이 경우 답은이 문자열의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="493a4de947e7d1d3de0e26cd7b606a362a97a832" translate="yes" xml:space="preserve">
          <source>It is valid to pass &lt;code&gt;&lt;a href=&quot;string#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;index&lt;/em&gt;, and in this case the answer will be the bytesize of this string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt; 를 &lt;em&gt;index&lt;/em&gt; 에 전달하는 것이 유효 하며,이 경우 답은이 문자열의 바이트 크기입니다.</target>
        </trans-unit>
        <trans-unit id="23adbd354ecbde6eb0ab83184916b8c2916f8ab2" translate="yes" xml:space="preserve">
          <source>It manages dependencies for Crystal projects and libraries with reproducible installs across computers and systems.</source>
          <target state="translated">컴퓨터와 시스템에서 재현 가능한 설치로 Crystal 프로젝트 및 라이브러리의 종속성을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="449ff91ee23573155e7d4a0e39db55c0b1700016" translate="yes" xml:space="preserve">
          <source>It may contain non-ASCII bytes, including NUL bytes.</source>
          <target state="translated">NUL 바이트를 포함하여 비 ASCII 바이트를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58fdb45f3edc2b0d0cf9249c0e92699e387f4432" translate="yes" xml:space="preserve">
          <source>It provides constants for the defined HTTP status codes as well as helper methods to easily identify the type of response.</source>
          <target state="translated">정의 된 HTTP 상태 코드에 대한 상수와 응답 유형을 쉽게 식별 할 수있는 도우미 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4acfe4168ffd08c7f5fdc1065860bec12d8925a7" translate="yes" xml:space="preserve">
          <source>It reads the beginning of the array, yield each value of the array, and reads the end of the array. You have to consumes the values, if any, so the pull parser does not fail when reading the end of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c499df0a8ff0d2fb4a7b4036713e8f3fa611a3ae" translate="yes" xml:space="preserve">
          <source>It reads the beginning of the object, yield each key and key location, and reads the end of the object. You have to consumes the values, if any, so the pull parser does not fail when reading the end of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78714368442c6514c207f75da6d297b10e34ace6" translate="yes" xml:space="preserve">
          <source>It receives an optional &lt;code&gt;StringLiteral&lt;/code&gt; as single argument containing a deprecation notice.</source>
          <target state="translated">사용 중단 통지가 포함 된 단일 인수로 선택적 &lt;code&gt;StringLiteral&lt;/code&gt; 을 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="c9fa8ed0ae1208a201958346fe7993b890913758" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; when the channel was successfully closed, or &lt;code&gt;false&lt;/code&gt; if it was already closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf197db26f12c9c2de1086aeebd1ad7308d08664" translate="yes" xml:space="preserve">
          <source>It returns a copy of this instance if it already has POSIX kind. Otherwise a new instance is created with &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; and all occurences of backslash file separators (&lt;code&gt;\\&lt;/code&gt;) replaced by forward slash (&lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">POSIX 종류가 이미 있으면이 인스턴스의 복사본을 반환합니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; 로 새 인스턴스가 작성 되고 모든 백 슬래시 파일 구분 기호 ( &lt;code&gt;\\&lt;/code&gt; )가 슬래시 ( &lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt; ) 로 바뀝니다 .</target>
        </trans-unit>
        <trans-unit id="6a4dda6286339e4fadd712638892ec51890d1660" translate="yes" xml:space="preserve">
          <source>It returns a copy of this instance if it already has POSIX kind. Otherwise a new instance is created with &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; and all occurrences of backslash file separators (&lt;code&gt;\\&lt;/code&gt;) replaced by forward slash (&lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">It returns a copy of this instance if it already has POSIX kind. Otherwise a new instance is created with &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; and all occurrences of backslash file separators ( &lt;code&gt;\\&lt;/code&gt; ) replaced by forward slash ( &lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="be9495c2413e841c571d654c5194a0eb85e3b84f" translate="yes" xml:space="preserve">
          <source>It returns the rescued exception.</source>
          <target state="translated">구조 된 예외를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c027793c4fcbf7f7be6aed911c23cf2d476fffe0" translate="yes" xml:space="preserve">
          <source>It returns:</source>
          <target state="translated">다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5497a697168334130e08eb2adbeb0c076753e7ac" translate="yes" xml:space="preserve">
          <source>It rounds the number to the nearest thousands magnitude with &lt;em&gt;precision&lt;/em&gt; number of significant digits. The order of magnitude is expressed with an appended quantifier. By default, SI prefixes are used (see &lt;code&gt;&lt;a href=&quot;number#SI_PREFIXES&quot;&gt;SI_PREFIXES&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;정확한&lt;/em&gt; 유효 자릿수를 사용 하여 숫자를 가장 가까운 천 단위 크기로 반올림합니다 . 크기의 순서는 추가 된 정량 자로 표시됩니다. 기본적으로 SI 접두사가 사용됩니다 ( &lt;code&gt;&lt;a href=&quot;number#SI_PREFIXES&quot;&gt;SI_PREFIXES&lt;/a&gt;&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c18d9b5d8b79b72fafcd7ca5abdfcee3fc0cc37c" translate="yes" xml:space="preserve">
          <source>It serves both to perform requests by an &lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; and to represent requests received by an &lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 요청을 수행 하고 &lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; 가 수신 한 요청을 나타내는 역할을합니다 .</target>
        </trans-unit>
        <trans-unit id="794ae442eba44e431cf5d24f153591464bbc6c52" translate="yes" xml:space="preserve">
          <source>It skips the whole value, not only the next lexer's token. For example if the next value is an array, the whole array will be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbb4e023c23a413deb4479f471e2f3f01f2e1c6" translate="yes" xml:space="preserve">
          <source>It takes named arguments, a named tuple literal or a hash literal as argument, in which attributes and types are defined. Once defined, &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; populates properties of the class from the YAML document.</source>
          <target state="translated">It takes named arguments, a named tuple literal or a hash literal as argument, in which attributes and types are defined. Once defined, &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; populates properties of the class from the YAML document.</target>
        </trans-unit>
        <trans-unit id="f7049c154fa6f27376835c94cf2fd87ee45c09e2" translate="yes" xml:space="preserve">
          <source>It takes named arguments, a named tuple literal or a hash literal as argument, in which attributes and types are defined. Once defined, &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; populates properties of the class from the YAML document.</source>
          <target state="translated">속성과 형식이 정의 된 명명 된 인수, 명명 된 튜플 리터럴 또는 해시 리터럴을 인수로 사용합니다. 일단 정의되면 &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; 은 YAML 문서에서 클래스의 속성을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="d5c0d431a80075a7942c1f346e95742aa9e44d78" translate="yes" xml:space="preserve">
          <source>It uses &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_INTERMEDIATE&quot;&gt;CIPHERS_INTERMEDIATE&lt;/a&gt;&lt;/code&gt; compatibility level by default.</source>
          <target state="translated">It uses &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_INTERMEDIATE&quot;&gt;CIPHERS_INTERMEDIATE&lt;/a&gt;&lt;/code&gt; compatibility level by default.</target>
        </trans-unit>
        <trans-unit id="83eaec2ee83fea897efaeb75438fee5d109e0390" translate="yes" xml:space="preserve">
          <source>It uses &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_OLD&quot;&gt;CIPHERS_OLD&lt;/a&gt;&lt;/code&gt; compatibility level by default.</source>
          <target state="translated">It uses &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_OLD&quot;&gt;CIPHERS_OLD&lt;/a&gt;&lt;/code&gt; compatibility level by default.</target>
        </trans-unit>
        <trans-unit id="60fb0f0c52217e2ab553c0d16178da5b46c43198" translate="yes" xml:space="preserve">
          <source>It uses a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;cryptographically secure pseudorandom number generator (CSPRNG)&lt;/a&gt; for cryptography and secure usages such as generating secret keys, or to seed another pseudorandom number generator (PRNG).</source>
          <target state="translated">It uses a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;cryptographically secure pseudorandom number generator (CSPRNG)&lt;/a&gt; for cryptography and secure usages such as generating secret keys, or to seed another pseudorandom number generator (PRNG).</target>
        </trans-unit>
        <trans-unit id="0ac5ab36bbcd609f08d13ddb13ccc42fbb6ba0cb" translate="yes" xml:space="preserve">
          <source>It usually consists of a continent and city name separated by a slash, for example &lt;code&gt;Europe/Berlin&lt;/code&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;Europe/Berlin&lt;/code&gt; 과 같이 슬래시로 구분 된 대륙과 도시 이름으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e688c3ec268b37e21ee8bbf51b03c4f3fc6affd8" translate="yes" xml:space="preserve">
          <source>It's also possible to change the text decoration:</source>
          <target state="translated">텍스트 장식을 변경할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a0455648ab1162c692f5930d431e16bf57083cb" translate="yes" xml:space="preserve">
          <source>It's an error specifying more block arguments than those yielded:</source>
          <target state="translated">생성 된 것보다 많은 블록 인수를 지정하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="03ca19dfa7ebdec55130b5f764f3b716c7a62b6e" translate="yes" xml:space="preserve">
          <source>It's an error specifying more block parameters than the arguments yielded:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6883cf46102cc538a015336c0491ab0512234fae" translate="yes" xml:space="preserve">
          <source>It's fine to have your own style, but sticking to &lt;a href=&quot;../conventions/coding_style&quot;&gt;some core rubrics defined by the Crystal team&lt;/a&gt; can help keep your code consistent, readable and usable for other developers.</source>
          <target state="translated">자신 만의 스타일을 갖는 것은 좋지만 &lt;a href=&quot;../conventions/coding_style&quot;&gt;Crystal 팀이 정의한 일부 핵심 루 브릭을&lt;/a&gt; 고수하면 코드를 일관성있게 읽고 읽을 수 있으며 다른 개발자가 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60587587f639b7c4e503898074105495d5fe3e4c" translate="yes" xml:space="preserve">
          <source>It's good practice to do GitHub Releases.</source>
          <target state="translated">GitHub 릴리스를 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5876e4db9f1889238b8f42d10ed6f9752e75963c" translate="yes" xml:space="preserve">
          <source>It's hard for anyone to use your project if they can't find it. &lt;a href=&quot;https://crystalshards.xyz/&quot;&gt;crystalshards.xyz&lt;/a&gt; is currently the go-to place for Crystal libraries, so that's what we'll optimize for.</source>
          <target state="translated">프로젝트를 찾을 수 없으면 누구나 프로젝트를 사용하기가 어렵습니다. &lt;a href=&quot;https://crystalshards.xyz/&quot;&gt;crystalshards.xyz&lt;/a&gt; 는 현재 Crystal 라이브러리로 이동하기에 가장 적합한 곳입니다.</target>
        </trans-unit>
        <trans-unit id="56afe37629c80637e20b023cc788f813c83b45cc" translate="yes" xml:space="preserve">
          <source>It's macro methods are the same as &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">매크로 메소드는 &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="06f28846369c72b7284ecf0cba91626ba4bfab2c" translate="yes" xml:space="preserve">
          <source>It's possible to send a PING frame, which the client must respond to with a PONG, or the server can send an unsolicited PONG frame which the client should not respond to.</source>
          <target state="translated">클라이언트가 PONG으로 응답해야하는 PING 프레임을 보내거나 서버가 클라이언트가 응답하지 않아야하는 요청하지 않은 PONG 프레임을 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b4ec62eb2939f6ee38dd49b764e111e9e5558ac" translate="yes" xml:space="preserve">
          <source>It's the opposite of &lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">It's the opposite of &lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="231347e530baf0c7c4425dc74499994820ba5f6c" translate="yes" xml:space="preserve">
          <source>It's the opposite of &lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt; 의 반대 입니까? .</target>
        </trans-unit>
        <trans-unit id="a8cf25d78c9b2b652ed85fd67057b2a4a00e8b4c" translate="yes" xml:space="preserve">
          <source>It's worth mentioning that the method returns a &lt;code&gt;DB::Connection&lt;/code&gt; object. Although more specifically, it returns a &lt;code&gt;MySql::Connection&lt;/code&gt; object, it doesn't matter because all types of connections should be polymorphic. So hereinafter we will work with a &lt;code&gt;DB::Connection&lt;/code&gt; instance, helping us to abstract from specific issues of each database engine.</source>
          <target state="translated">It's worth mentioning that the method returns a &lt;code&gt;DB::Connection&lt;/code&gt; object. Although more specifically, it returns a &lt;code&gt;MySql::Connection&lt;/code&gt; object, it doesn't matter because all types of connections should be polymorphic. So hereinafter we will work with a &lt;code&gt;DB::Connection&lt;/code&gt; instance, helping us to abstract from specific issues of each database engine.</target>
        </trans-unit>
        <trans-unit id="514ccb313006539ff17b5104b2b97ca6141c435d" translate="yes" xml:space="preserve">
          <source>Item#description</source>
          <target state="translated">Item#description</target>
        </trans-unit>
        <trans-unit id="5d2dc0a46f1ea60de533cd998be8071d91ebb80e" translate="yes" xml:space="preserve">
          <source>Item#end_line</source>
          <target state="translated">Item#end_line</target>
        </trans-unit>
        <trans-unit id="8c60c518c9b6c8acc678fe5ccfe046bebc13fdf9" translate="yes" xml:space="preserve">
          <source>Item#file</source>
          <target state="translated">Item#file</target>
        </trans-unit>
        <trans-unit id="717df2e4f3e33d328a1262969b0e6497d7e6b37d" translate="yes" xml:space="preserve">
          <source>Item#focus?</source>
          <target state="translated">Item#focus?</target>
        </trans-unit>
        <trans-unit id="31295b20aa98e9d225b05b6fc1136a43c3952900" translate="yes" xml:space="preserve">
          <source>Item#line</source>
          <target state="translated">Item#line</target>
        </trans-unit>
        <trans-unit id="0dd14bdcb1103820516adeb11f498bb3006e302b" translate="yes" xml:space="preserve">
          <source>Item#parent</source>
          <target state="translated">Item#parent</target>
        </trans-unit>
        <trans-unit id="216d640b17873cbd7290ec70afa86dd8944cedcc" translate="yes" xml:space="preserve">
          <source>Item#tags</source>
          <target state="translated">Item#tags</target>
        </trans-unit>
        <trans-unit id="08ca6a3da933ca6826a2f4d3fcc919af71d7e380" translate="yes" xml:space="preserve">
          <source>Iterable</source>
          <target state="translated">Iterable</target>
        </trans-unit>
        <trans-unit id="21855f7001acdc97654d5a2c2abb5f3919a52a83" translate="yes" xml:space="preserve">
          <source>Iterable#each</source>
          <target state="translated">Iterable#each</target>
        </trans-unit>
        <trans-unit id="9cee6129111866e425b821724e81eac09e86ecd8" translate="yes" xml:space="preserve">
          <source>Iterable(B)</source>
          <target state="translated">Iterable(B)</target>
        </trans-unit>
        <trans-unit id="4e6de4230c85208856db75cca457616e4f81ae48" translate="yes" xml:space="preserve">
          <source>Iterable(T)</source>
          <target state="translated">Iterable(T)</target>
        </trans-unit>
        <trans-unit id="da99d66ecc6e9b83d3c1331105b9a4ead856a295" translate="yes" xml:space="preserve">
          <source>Iterable({K, V})</source>
          <target state="translated">반복 가능 ({K, V})</target>
        </trans-unit>
        <trans-unit id="801351cc068c434ed200af6fbfd20b18162b4e4a" translate="yes" xml:space="preserve">
          <source>Iterates each member of the enum.</source>
          <target state="translated">열거 형의 각 멤버를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="16fba05dd79033eb190f672f6d386739c8d872be" translate="yes" xml:space="preserve">
          <source>Iterates each member of the enum. It won't iterate the &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt; members of flags enums.</source>
          <target state="translated">열거 형의 각 멤버를 반복합니다. 플래그 열거 형 의 &lt;code&gt;None&lt;/code&gt; 및 &lt;code&gt;All&lt;/code&gt; 멤버를 반복하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d4c6894cc6e51e490a6ebf1212dbe54f16948393" translate="yes" xml:space="preserve">
          <source>Iterates each values in a Flags Enum.</source>
          <target state="translated">Flags Enum의 각 값을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="c403105725e2c5a9ae8a9e84a9c683aafcf7ae19" translate="yes" xml:space="preserve">
          <source>Iterates from &lt;code&gt;&lt;a href=&quot;range#begin:B-instance-method&quot;&gt;#begin&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;range#end:E-instance-method&quot;&gt;#end&lt;/a&gt;&lt;/code&gt; incrementing by the amount of &lt;em&gt;step&lt;/em&gt; on each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd910d63ae8656ba71a2f689d17b32ea9d6c2c1" translate="yes" xml:space="preserve">
          <source>Iterates from &lt;code&gt;self&lt;/code&gt; to &lt;em&gt;limit&lt;/em&gt; incrementing by the amount of &lt;em&gt;step&lt;/em&gt; on each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9844ae35720e688efec34e8da61dcfa88727b71c" translate="yes" xml:space="preserve">
          <source>Iterates from &lt;code&gt;self&lt;/code&gt; to &lt;em&gt;limit&lt;/em&gt; incrementing by the amount of &lt;em&gt;step&lt;/em&gt; on each iteration. If &lt;em&gt;exclusive&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;em&gt;limit&lt;/em&gt; is excluded from the iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d5090413ecc016fc08697af8c43ee36ed32aa5" translate="yes" xml:space="preserve">
          <source>Iterates over all &lt;code&gt;KEY=VALUE&lt;/code&gt; pairs of environment variables, yielding both the &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">모든 &lt;code&gt;KEY=VALUE&lt;/code&gt; 쌍의 환경 변수를 반복 하여 &lt;em&gt;key&lt;/em&gt; 와 &lt;em&gt;value를&lt;/em&gt; 생성 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="07b1d9ca8566c25f29a89572a5ef9c83d35b6070" translate="yes" xml:space="preserve">
          <source>Iterates over the collection in slices of size &lt;em&gt;count&lt;/em&gt;, and runs the block for each of those.</source>
          <target state="translated">size &lt;em&gt;count&lt;/em&gt; 조각으로 콜렉션을 반복하고 각각에 대해 블록을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="9434f35e1f5f4333a4fdfd22e95dadb99cea4150" translate="yes" xml:space="preserve">
          <source>Iterates over the collection yielding chunks of size &lt;em&gt;count&lt;/em&gt;, but advancing one by one.</source>
          <target state="translated">콜렉션을 반복하여 size &lt;em&gt;count의&lt;/em&gt; 청크를 생성 하지만 하나씩 진행합니다.</target>
        </trans-unit>
        <trans-unit id="437525573ad0750b9b85ef1c24fe9e477f2a0fa7" translate="yes" xml:space="preserve">
          <source>Iterates over the collection yielding pairs of adjacent items, but advancing one by one.</source>
          <target state="translated">Iterates over the collection yielding pairs of adjacent items, but advancing one by one.</target>
        </trans-unit>
        <trans-unit id="ad3203cc17231cf37624d0f5aea4a82be1f2b777" translate="yes" xml:space="preserve">
          <source>Iterates over the collection, passing each element and the initial object &lt;em&gt;obj&lt;/em&gt;.</source>
          <target state="translated">컬렉션을 반복하여 각 요소와 초기 객체 &lt;em&gt;obj를&lt;/em&gt; 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="50c07aa61b9e3bbd1a7513ac7002fafeef65f3e3" translate="yes" xml:space="preserve">
          <source>Iterates over the collection, passing each element and the initial object &lt;em&gt;obj&lt;/em&gt;. Returns that object.</source>
          <target state="translated">컬렉션을 반복하여 각 요소와 초기 객체 &lt;em&gt;obj를&lt;/em&gt; 전달합니다 . 해당 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4be626cd2843ed4e65e3be982133d99c50840328" translate="yes" xml:space="preserve">
          <source>Iterates over the collection, yielding both the elements and their index.</source>
          <target state="translated">컬렉션을 반복하여 요소와 인덱스를 모두 생성합니다.</target>
        </trans-unit>
        <trans-unit id="da696b666cf9e80879bb77507bdec0e9053bbe98" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of this range in reverse order, passing each in turn to the block.</source>
          <target state="translated">이 범위의 요소를 역순으로 반복하여 각 요소를 차례로 블록으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="458662c0cf3d4f48e3590d5e232c0feb69bc6bfd" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of this range, passing each in turn to the block.</source>
          <target state="translated">이 범위의 요소를 반복하여 각 요소를 차례로 블록으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="15a1c576cff75174b984f38bd74d03ebdffdc135" translate="yes" xml:space="preserve">
          <source>Iterates over this range, passing each nth element to the block.</source>
          <target state="translated">이 범위를 반복하여 각 n 번째 요소를 블록으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="2cac53ebd6210e9b26809ca3d2e05daf9a3acf9f" translate="yes" xml:space="preserve">
          <source>Iterating strings</source>
          <target state="translated">문자열 반복</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="79d2d7a05aff325222fd6b8233dededcec0b8178" translate="yes" xml:space="preserve">
          <source>Iteration stops when any of the iterators runs out of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="81008a1d5603847c92ae6ec8f5c8beee1b025f88" translate="yes" xml:space="preserve">
          <source>Iterator#cons</source>
          <target state="translated">Iterator#cons</target>
        </trans-unit>
        <trans-unit id="76fc7977dd2976eff1cac89908bf603d719d2328" translate="yes" xml:space="preserve">
          <source>Iterator#each</source>
          <target state="translated">Iterator#each</target>
        </trans-unit>
        <trans-unit id="7d09fd8578cf22aed8e798bc7e4b7e569bb2dd01" translate="yes" xml:space="preserve">
          <source>Iterator#map</source>
          <target state="translated">Iterator#map</target>
        </trans-unit>
        <trans-unit id="1eacb03f472cc021031d0c7d999df0406a28e2b6" translate="yes" xml:space="preserve">
          <source>Iterator#next</source>
          <target state="translated">Iterator#next</target>
        </trans-unit>
        <trans-unit id="9b0d92d49d483fa2962c2e91898e4fc7eb7e6a0d" translate="yes" xml:space="preserve">
          <source>Iterator#skip</source>
          <target state="translated">Iterator#skip</target>
        </trans-unit>
        <trans-unit id="aa4528dbc0009d2105dbd09970dc1a51ff877f04" translate="yes" xml:space="preserve">
          <source>Iterator#step</source>
          <target state="translated">Iterator#step</target>
        </trans-unit>
        <trans-unit id="10880ed735aa8f0eb23bf19eb29ba54180e18a87" translate="yes" xml:space="preserve">
          <source>Iterator#stop</source>
          <target state="translated">Iterator#stop</target>
        </trans-unit>
        <trans-unit id="22099b9f07c141f8c7dbaf911190abad9e6641d7" translate="yes" xml:space="preserve">
          <source>Iterator#tap</source>
          <target state="translated">Iterator#tap</target>
        </trans-unit>
        <trans-unit id="472fb70214809a7170e15a9eb4969ff6ad0aa3be" translate="yes" xml:space="preserve">
          <source>Iterator#uniq</source>
          <target state="translated">Iterator#uniq</target>
        </trans-unit>
        <trans-unit id="a1df69ea7687d308728ef15cb7f4d54d76052c75" translate="yes" xml:space="preserve">
          <source>Iterator#zip</source>
          <target state="translated">Iterator#zip</target>
        </trans-unit>
        <trans-unit id="92a6f7690d3f67a5c2a34fb79ce33a081d403ded" translate="yes" xml:space="preserve">
          <source>Iterator(T)</source>
          <target state="translated">Iterator(T)</target>
        </trans-unit>
        <trans-unit id="bb09d01284857f13b83a78fb893791b953d86861" translate="yes" xml:space="preserve">
          <source>Iterator.of</source>
          <target state="translated">Iterator.of</target>
        </trans-unit>
        <trans-unit id="4897718268df751c4f61583a5f4fae0a77d463f7" translate="yes" xml:space="preserve">
          <source>Iterator.stop</source>
          <target state="translated">Iterator.stop</target>
        </trans-unit>
        <trans-unit id="5674e76e082100f7018e4be02db322d282a31e82" translate="yes" xml:space="preserve">
          <source>Iterator::Stop</source>
          <target state="translated">Iterator::Stop</target>
        </trans-unit>
        <trans-unit id="2dbea495944c028a03d60c813a69f24633c27700" translate="yes" xml:space="preserve">
          <source>IteratorWrapper</source>
          <target state="translated">IteratorWrapper</target>
        </trans-unit>
        <trans-unit id="dfe3f404cb6e226371e69d371c8303dc1253de6e" translate="yes" xml:space="preserve">
          <source>IteratorWrapper wrapped_next</source>
          <target state="translated">IteratorWrapper wrapped_next</target>
        </trans-unit>
        <trans-unit id="c84785865f5c1faf41f21bb5b59c8153b605867e" translate="yes" xml:space="preserve">
          <source>Its first argument changes the foreground color:</source>
          <target state="translated">첫 번째 인수는 전경색을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="3f41999f8965951932b6ceb36fccb21c6ee6e4f6" translate="yes" xml:space="preserve">
          <source>Its macro methods are nearly the same as &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Its macro methods are nearly the same as &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d552b9b23b8db34ab12baac8aba7d28f7e24e77c" translate="yes" xml:space="preserve">
          <source>JITCompiler</source>
          <target state="translated">JITCompiler</target>
        </trans-unit>
        <trans-unit id="3e0b16b267f4986b5cc2b0091ccc5e13a11f2a3a" translate="yes" xml:space="preserve">
          <source>JITCompiler#dispose</source>
          <target state="translated">JITCompiler#dispose</target>
        </trans-unit>
        <trans-unit id="72492aa85a3aa9a50bf31b81058a39e271717d3a" translate="yes" xml:space="preserve">
          <source>JITCompiler#finalize</source>
          <target state="translated">JITCompiler#finalize</target>
        </trans-unit>
        <trans-unit id="79734fbfe144e716e2047fbdcec07f81863cda76" translate="yes" xml:space="preserve">
          <source>JITCompiler#get_pointer_to_global</source>
          <target state="translated">JITCompiler#get_pointer_to_global</target>
        </trans-unit>
        <trans-unit id="6d57741ee7b281945d9ff1b2b50a218d841c3e82" translate="yes" xml:space="preserve">
          <source>JITCompiler#run_function</source>
          <target state="translated">JITCompiler#run_function</target>
        </trans-unit>
        <trans-unit id="cb79308d799296c6df78ec46f77ca99f13a10b8a" translate="yes" xml:space="preserve">
          <source>JITCompiler#to_unsafe</source>
          <target state="translated">JITCompiler#to_unsafe</target>
        </trans-unit>
        <trans-unit id="311eb8d84ee8573f9143997f47e5d0bfd987ab46" translate="yes" xml:space="preserve">
          <source>JITCompiler.new</source>
          <target state="translated">JITCompiler.new</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="6d57aff05d797dfa147cf5d55dc71690f4221e62" translate="yes" xml:space="preserve">
          <source>JSON key-value pairs that are outside of the OAuth2 spec are stored in this property in case they are needed.</source>
          <target state="translated">OAuth2 스펙 외부에있는 JSON 키-값 쌍은 필요한 경우이 특성에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="86bddeceaa4a22fc72d98fda9a69be516973be25" translate="yes" xml:space="preserve">
          <source>JSON key-value pairs that are outside of the OAuth2 spec are stored in this property in case they are needed. Their value is the raw JSON string found in the JSON value (with possible changes in the string format, but preserving JSON semantic). For example if the value was &lt;code&gt;[1, 2, 3]&lt;/code&gt; then the value in this hash will be the string &quot;[1,2,3]&quot;.</source>
          <target state="translated">OAuth2 스펙 외부에있는 JSON 키-값 쌍은 필요한 경우이 특성에 저장됩니다. 해당 값은 JSON 값에서 찾을 수있는 원시 JSON 문자열입니다 (문자열 형식은 변경 가능하지만 JSON 의미는 유지함). 예를 들어 값이 &lt;code&gt;[1, 2, 3]&lt;/code&gt; 경우이 해시의 값은 문자열 &quot;[1,2,3]&quot;이됩니다.</target>
        </trans-unit>
        <trans-unit id="b03b0b78981bc28291880680db9f0f18c219bd56" translate="yes" xml:space="preserve">
          <source>JSON::Any</source>
          <target state="translated">JSON::Any</target>
        </trans-unit>
        <trans-unit id="c1adf47961de54bd3ef64648aab56e21d5a5a448" translate="yes" xml:space="preserve">
          <source>JSON::Builder</source>
          <target state="translated">JSON::Builder</target>
        </trans-unit>
        <trans-unit id="8cdb133c62b94222b3c6a6c8ade57450226f2207" translate="yes" xml:space="preserve">
          <source>JSON::Builder::ArrayState</source>
          <target state="translated">JSON::Builder::ArrayState</target>
        </trans-unit>
        <trans-unit id="fadaf0adfab09753ab4e070c66630e979e4d00d4" translate="yes" xml:space="preserve">
          <source>JSON::Builder::DocumentEndState</source>
          <target state="translated">JSON::Builder::DocumentEndState</target>
        </trans-unit>
        <trans-unit id="73a0ffddeeb72ee2b3b9d7656e14ba6de3c07751" translate="yes" xml:space="preserve">
          <source>JSON::Builder::DocumentStartState</source>
          <target state="translated">JSON::Builder::DocumentStartState</target>
        </trans-unit>
        <trans-unit id="5cac541a839de8f5e97339e955aa3b9ad4ef0bea" translate="yes" xml:space="preserve">
          <source>JSON::Builder::ObjectState</source>
          <target state="translated">JSON::Builder::ObjectState</target>
        </trans-unit>
        <trans-unit id="d9863ca26568c54b73d4b0ad14b34a946d34392b" translate="yes" xml:space="preserve">
          <source>JSON::Builder::StartState</source>
          <target state="translated">JSON::Builder::StartState</target>
        </trans-unit>
        <trans-unit id="0b3cf54a7bf262de75716747fb1438e03ab612ba" translate="yes" xml:space="preserve">
          <source>JSON::Error</source>
          <target state="translated">JSON::Error</target>
        </trans-unit>
        <trans-unit id="e652e0d3c0b8150e0896d321b55ba31e274be02b" translate="yes" xml:space="preserve">
          <source>JSON::Field</source>
          <target state="translated">JSON::Field</target>
        </trans-unit>
        <trans-unit id="01136816887cd3b845c84deb7784651dd3b84657" translate="yes" xml:space="preserve">
          <source>JSON::Lexer</source>
          <target state="translated">JSON::Lexer</target>
        </trans-unit>
        <trans-unit id="797a5912c907c727c595cef1d9575f6d23188e9b" translate="yes" xml:space="preserve">
          <source>JSON::MappingError</source>
          <target state="translated">JSON::MappingError</target>
        </trans-unit>
        <trans-unit id="721586a408a2497bff3cd650e2605d74da972249" translate="yes" xml:space="preserve">
          <source>JSON::MappingError#attribute</source>
          <target state="translated">JSON::MappingError#attribute</target>
        </trans-unit>
        <trans-unit id="827858537c6bb3e59add58f5024b4145e2a57531" translate="yes" xml:space="preserve">
          <source>JSON::MappingError#klass</source>
          <target state="translated">JSON::MappingError#klass</target>
        </trans-unit>
        <trans-unit id="de52742aca88c5feaa2c4685fa1a0d45b5d68cd8" translate="yes" xml:space="preserve">
          <source>JSON::MappingError.new</source>
          <target state="translated">JSON::MappingError.new</target>
        </trans-unit>
        <trans-unit id="1bdf5bca0c244ac7e53965d2d0d78ecda0bfed5a" translate="yes" xml:space="preserve">
          <source>JSON::ParseException</source>
          <target state="translated">JSON::ParseException</target>
        </trans-unit>
        <trans-unit id="14ce61553a6ba7e71a3b50c4fb7b2cf6948078fb" translate="yes" xml:space="preserve">
          <source>JSON::ParseException#column_number</source>
          <target state="translated">JSON::ParseException#column_number</target>
        </trans-unit>
        <trans-unit id="fd6401ae902008000da859ed79005abc01081a3c" translate="yes" xml:space="preserve">
          <source>JSON::ParseException#line_number</source>
          <target state="translated">JSON::ParseException#line_number</target>
        </trans-unit>
        <trans-unit id="8ebbb48f13498878568266f0ef1b277f28f1ccfe" translate="yes" xml:space="preserve">
          <source>JSON::ParseException#location</source>
          <target state="translated">JSON::ParseException#location</target>
        </trans-unit>
        <trans-unit id="5a2208ef37acaa079038ca9ea777f2ede2c2066b" translate="yes" xml:space="preserve">
          <source>JSON::ParseException.new</source>
          <target state="translated">JSON::ParseException.new</target>
        </trans-unit>
        <trans-unit id="210f49994dc8b74d5f6f6caa864a330c6dce7240" translate="yes" xml:space="preserve">
          <source>JSON::Parser</source>
          <target state="translated">JSON::Parser</target>
        </trans-unit>
        <trans-unit id="dad1aa2e616c4804e9d57f2514a1a45c64dbe51c" translate="yes" xml:space="preserve">
          <source>JSON::PullParser</source>
          <target state="translated">JSON::PullParser</target>
        </trans-unit>
        <trans-unit id="d8d159c81431f75709387ecfc11a68aff2e4b8c0" translate="yes" xml:space="preserve">
          <source>JSON::SerializableError</source>
          <target state="translated">JSON::SerializableError</target>
        </trans-unit>
        <trans-unit id="49957832dc2d365f32502d561e3e415cd7a1ec72" translate="yes" xml:space="preserve">
          <source>JSON::Token</source>
          <target state="translated">JSON::Token</target>
        </trans-unit>
        <trans-unit id="8c74f28d8bf8330962e596574f900ae47e150930" translate="yes" xml:space="preserve">
          <source>Java 11</source>
          <target state="translated">Java 11</target>
        </trans-unit>
        <trans-unit id="6965b22569ccbc2d8dd3cf367d9c6b8f37411617" translate="yes" xml:space="preserve">
          <source>Java 6</source>
          <target state="translated">Java 6</target>
        </trans-unit>
        <trans-unit id="fbeb77483b6d1b3098e616abf683425d9a32b989" translate="yes" xml:space="preserve">
          <source>Java 8u31</source>
          <target state="translated">Java 8u31</target>
        </trans-unit>
        <trans-unit id="bd72869a330087cfe42486d0e37438efc054165a" translate="yes" xml:space="preserve">
          <source>Just like a class or a struct, you can define methods for enums:</source>
          <target state="translated">클래스 나 구조체처럼 열거 형에 대한 메소드를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c76f97582b9cefc13e0faeb17d594f0bfca9056d" translate="yes" xml:space="preserve">
          <source>Just like the other variant, but you can set the initial value of the accumulator.</source>
          <target state="translated">다른 변형과 마찬가지로 누산기의 초기 값을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2e13012469b35cc715afa2d86b2f20f71654f16" translate="yes" xml:space="preserve">
          <source>Keeps &lt;em&gt;digits&lt;/em&gt; significant digits of this number in the given &lt;em&gt;base&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6526cb0b460c5757c8a3173eb88b61dc53862a" translate="yes" xml:space="preserve">
          <source>Keeps &lt;em&gt;digits&lt;/em&gt; significants digits of this number in the given &lt;em&gt;base&lt;/em&gt;.</source>
          <target state="translated">주어진 숫자에서이 &lt;em&gt;숫자의&lt;/em&gt; 유효 자릿수를 유지 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="dcdc7b1b69ed74ff1eefeeee6ac727cbf6c876e4" translate="yes" xml:space="preserve">
          <source>Key/value</source>
          <target state="translated">Key/value</target>
        </trans-unit>
        <trans-unit id="374e8590be500826c7d343cb59fec0f206c2c523" translate="yes" xml:space="preserve">
          <source>KeyBindingProc</source>
          <target state="translated">KeyBindingProc</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="180d421b2ea3d7832bb9833d631e9be48e49f6c7" translate="yes" xml:space="preserve">
          <source>Keys are matched case-insensitive. String values are treated equal to an array values with the same string as single element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9534d70e7d02c74e1866ae136e1dcf1d8544f1" translate="yes" xml:space="preserve">
          <source>Keys are read by invoking &lt;code&gt;from_json_object_key?&lt;/code&gt; on this hash's key type (&lt;code&gt;K&lt;/code&gt;), which must return a value of type &lt;code&gt;K&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;nil&lt;/code&gt; is returned a &lt;code&gt;&lt;a href=&quot;json/parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;code&gt;from_json_object_key?&lt;/code&gt; 를 호출하여 키를 읽 습니까? 이 해시의 키 타입 ( &lt;code&gt;K&lt;/code&gt; )에서 타입 &lt;code&gt;K&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 의 값을 반환해야합니다 . 경우 &lt;code&gt;nil&lt;/code&gt; 반환됩니다 &lt;code&gt;&lt;a href=&quot;json/parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9273383ae64df8f1b372db98ea4ba08b59acfdfd" translate="yes" xml:space="preserve">
          <source>Keys are serialized by invoking &lt;code&gt;to_json_object_key&lt;/code&gt; on them. Values are serialized with the usual &lt;code&gt;&lt;a href=&quot;hash#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json(json : JSON::Builder)&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">키는 &lt;code&gt;to_json_object_key&lt;/code&gt; 를 호출하여 직렬화됩니다 . 값은 일반적인 &lt;code&gt;&lt;a href=&quot;hash#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json(json : JSON::Builder)&lt;/a&gt;&lt;/code&gt; 메소드 로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="9aa19a4d11de40b1f70b3c8ba4d213213a811bcf" translate="yes" xml:space="preserve">
          <source>Kind#posix?</source>
          <target state="translated">Kind#posix?</target>
        </trans-unit>
        <trans-unit id="c69613af46fdb432e68c2d836af22b13ef5d076b" translate="yes" xml:space="preserve">
          <source>Kind#windows?</source>
          <target state="translated">Kind#windows?</target>
        </trans-unit>
        <trans-unit id="8e81f8da9bf20ac68903b79eb88468c315f82796" translate="yes" xml:space="preserve">
          <source>Kind.native</source>
          <target state="translated">Kind.native</target>
        </trans-unit>
        <trans-unit id="a230d4a66845b14c7d2a6ab825e82549a7f4cacc" translate="yes" xml:space="preserve">
          <source>LLVM</source>
          <target state="translated">LLVM</target>
        </trans-unit>
        <trans-unit id="3af7dc24d98dd6ad5792635bf314908d01227cf0" translate="yes" xml:space="preserve">
          <source>LLVM &amp;gt;= 3.9</source>
          <target state="translated">LLVM&amp;gt; = 3.9</target>
        </trans-unit>
        <trans-unit id="f2abeff0b40a905438fb436921d6fdbd12f6683b" translate="yes" xml:space="preserve">
          <source>LLVM::ABI</source>
          <target state="translated">LLVM::ABI</target>
        </trans-unit>
        <trans-unit id="b766dab78d8a3849c9852bff63fcb4cf9cc0088e" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::AArch64</source>
          <target state="translated">LLVM::ABI::AArch64</target>
        </trans-unit>
        <trans-unit id="2c51725babc80b06ecf0b438efafec38e415c927" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::ARM</source>
          <target state="translated">LLVM::ABI::ARM</target>
        </trans-unit>
        <trans-unit id="efdc65111d34329f104b994fc1fb855f89682195" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::ArgType</source>
          <target state="translated">LLVM::ABI::ArgType</target>
        </trans-unit>
        <trans-unit id="09356d92c80cefad0a6321582019e14f8e01ee55" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::FunctionType</source>
          <target state="translated">LLVM::ABI::FunctionType</target>
        </trans-unit>
        <trans-unit id="4829151c4b849aedaa7a10548809b0ad7b75ce94" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::X86</source>
          <target state="translated">LLVM::ABI::X86</target>
        </trans-unit>
        <trans-unit id="46f25225754920d4a1ea64cf822ea0ef993172c0" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::X86_64</source>
          <target state="translated">LLVM::ABI::X86_64</target>
        </trans-unit>
        <trans-unit id="c8b8c332604094292fcfda0141e288bb75297bb9" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::X86_Win64</source>
          <target state="translated">LLVM::ABI::X86_Win64</target>
        </trans-unit>
        <trans-unit id="ae02234332e344344478a943eab21acf56e4737d" translate="yes" xml:space="preserve">
          <source>LLVM::BasicBlock</source>
          <target state="translated">LLVM::BasicBlock</target>
        </trans-unit>
        <trans-unit id="a29188390719576a8d4f11a342f95e8dbd581966" translate="yes" xml:space="preserve">
          <source>LLVM::BasicBlockCollection</source>
          <target state="translated">LLVM::BasicBlockCollection</target>
        </trans-unit>
        <trans-unit id="bd541bb453e01e94ab2b4ff07cdfa0a07562bb09" translate="yes" xml:space="preserve">
          <source>LLVM::Builder</source>
          <target state="translated">LLVM::Builder</target>
        </trans-unit>
        <trans-unit id="2e8fe2ec04763a3ab9a798d7d4efc79aacdb58d0" translate="yes" xml:space="preserve">
          <source>LLVM::Context</source>
          <target state="translated">LLVM::Context</target>
        </trans-unit>
        <trans-unit id="7fffe33531b85b6f48117e62feddbdf800353410" translate="yes" xml:space="preserve">
          <source>LLVM::DIBuilder</source>
          <target state="translated">LLVM::DIBuilder</target>
        </trans-unit>
        <trans-unit id="2bf548c237a6d5ea0bb18ad43b9b65f9fa894dba" translate="yes" xml:space="preserve">
          <source>LLVM::Function</source>
          <target state="translated">LLVM::Function</target>
        </trans-unit>
        <trans-unit id="6621c84105b48844ec9324cf1fb84fdb37b31190" translate="yes" xml:space="preserve">
          <source>LLVM::FunctionCollection</source>
          <target state="translated">LLVM::FunctionCollection</target>
        </trans-unit>
        <trans-unit id="ed14b6eb0f4552291cb0ab0ebe117da7efb45038" translate="yes" xml:space="preserve">
          <source>LLVM::FunctionPassManager</source>
          <target state="translated">LLVM::FunctionPassManager</target>
        </trans-unit>
        <trans-unit id="28a0fb0a2199587b41a2e1e6f17100d11fd95979" translate="yes" xml:space="preserve">
          <source>LLVM::FunctionPassManager::Runner</source>
          <target state="translated">LLVM::FunctionPassManager::Runner</target>
        </trans-unit>
        <trans-unit id="ac89a453d6b08a7577122c56c9f9f1592e821f44" translate="yes" xml:space="preserve">
          <source>LLVM::GenericValue</source>
          <target state="translated">LLVM::GenericValue</target>
        </trans-unit>
        <trans-unit id="ac3e75248eead55c4202f56ec54495147805cc29" translate="yes" xml:space="preserve">
          <source>LLVM::GlobalCollection</source>
          <target state="translated">LLVM::GlobalCollection</target>
        </trans-unit>
        <trans-unit id="393c3f73ef484e17fde9d3c73cb7b6f6f08266e5" translate="yes" xml:space="preserve">
          <source>LLVM::InstructionCollection</source>
          <target state="translated">LLVM::InstructionCollection</target>
        </trans-unit>
        <trans-unit id="a066b2ca2f3ff68781c61079da5421404dff0a48" translate="yes" xml:space="preserve">
          <source>LLVM::JITCompiler</source>
          <target state="translated">LLVM::JITCompiler</target>
        </trans-unit>
        <trans-unit id="1de3159c833534a9499829fdf0ad3280667eea95" translate="yes" xml:space="preserve">
          <source>LLVM::MemoryBuffer</source>
          <target state="translated">LLVM::MemoryBuffer</target>
        </trans-unit>
        <trans-unit id="86d6674c482f3e330b5ccaaacbd9cf62983fb3ec" translate="yes" xml:space="preserve">
          <source>LLVM::Metadata</source>
          <target state="translated">LLVM::Metadata</target>
        </trans-unit>
        <trans-unit id="aa9270784a5808612d3ec037faabe2038e05ead4" translate="yes" xml:space="preserve">
          <source>LLVM::Module</source>
          <target state="translated">LLVM::Module</target>
        </trans-unit>
        <trans-unit id="ebc82c0d85aba9dbaaa08d405a37edc3162bc171" translate="yes" xml:space="preserve">
          <source>LLVM::ModulePassManager</source>
          <target state="translated">LLVM::ModulePassManager</target>
        </trans-unit>
        <trans-unit id="8b1448363d392bf598bbf97378d8a386bcd04ef4" translate="yes" xml:space="preserve">
          <source>LLVM::OperandBundleDef</source>
          <target state="translated">LLVM::OperandBundleDef</target>
        </trans-unit>
        <trans-unit id="956235bca106eedaf580949906ac9c6f57731208" translate="yes" xml:space="preserve">
          <source>LLVM::ParameterCollection</source>
          <target state="translated">LLVM::ParameterCollection</target>
        </trans-unit>
        <trans-unit id="a1d0bebbe164b8bdd16ced8f7488b3d8c649721a" translate="yes" xml:space="preserve">
          <source>LLVM::PassManagerBuilder</source>
          <target state="translated">LLVM::PassManagerBuilder</target>
        </trans-unit>
        <trans-unit id="20c61b5f2a89714eb0659fe1992bf622f2452967" translate="yes" xml:space="preserve">
          <source>LLVM::PassRegistry</source>
          <target state="translated">LLVM::PassRegistry</target>
        </trans-unit>
        <trans-unit id="4b13ec41e86348fbe7909e8577f197220cf10401" translate="yes" xml:space="preserve">
          <source>LLVM::PhiTable</source>
          <target state="translated">LLVM::PhiTable</target>
        </trans-unit>
        <trans-unit id="e18075df1669f42f9f5effd0a10595cc84567b0c" translate="yes" xml:space="preserve">
          <source>LLVM::Target</source>
          <target state="translated">LLVM::Target</target>
        </trans-unit>
        <trans-unit id="03315d96615d63549abab276ebf6e19e4b7fafa9" translate="yes" xml:space="preserve">
          <source>LLVM::TargetData</source>
          <target state="translated">LLVM::TargetData</target>
        </trans-unit>
        <trans-unit id="43adbe9208215fa82eb0c49d2516c520521f730d" translate="yes" xml:space="preserve">
          <source>LLVM::TargetMachine</source>
          <target state="translated">LLVM::TargetMachine</target>
        </trans-unit>
        <trans-unit id="4435490dc71b864b5f1be05d0c067fa0fa8cc247" translate="yes" xml:space="preserve">
          <source>LLVM::Type</source>
          <target state="translated">LLVM::Type</target>
        </trans-unit>
        <trans-unit id="f0a1fc9564534676203ce56efde2241940a9de04" translate="yes" xml:space="preserve">
          <source>LLVM::Value</source>
          <target state="translated">LLVM::Value</target>
        </trans-unit>
        <trans-unit id="3ac35358baf271447fca4ff816a9dd24f1374708" translate="yes" xml:space="preserve">
          <source>LLVM::ValueMethods</source>
          <target state="translated">LLVM::ValueMethods</target>
        </trans-unit>
        <trans-unit id="1ef711f499820bd0a8a57e7a5c521593ec8ed715" translate="yes" xml:space="preserve">
          <source>Label of the benchmark</source>
          <target state="translated">벤치 마크 라벨</target>
        </trans-unit>
        <trans-unit id="b52e6ec9fa3d5c13a402c0dc8beb63c9192cad04" translate="yes" xml:space="preserve">
          <source>Language Reference</source>
          <target state="translated">언어 참조</target>
        </trans-unit>
        <trans-unit id="fd623c775a7a5517ed0d06b451021da5bb73103f" translate="yes" xml:space="preserve">
          <source>Largest finite value</source>
          <target state="translated">가장 큰 유한 값</target>
        </trans-unit>
        <trans-unit id="3d4fc789599fd69c0acb9650f814c9bbb7b2b398" translate="yes" xml:space="preserve">
          <source>Last but not least: beware of denial of services! Always protect your application using an external strategy (eg: rate limiting), otherwise endpoints that verifies bcrypt hashes will be an easy target.</source>
          <target state="translated">마지막으로, 서비스 거부에주의하십시오! 항상 외부 전략 (예 : 속도 제한)을 사용하여 응용 프로그램을 보호하십시오. 그렇지 않으면 bcrypt 해시를 확인하는 엔드 포인트가 쉬운 대상이됩니다.</target>
        </trans-unit>
        <trans-unit id="c51ec4cbdbdfc04b448fdf9ea52e70612175fa0c" translate="yes" xml:space="preserve">
          <source>Lazily parses and returns the request's query component.</source>
          <target state="translated">지연은 요청의 쿼리 구성 요소를 구문 분석하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6fd3aa1501cd5cbcf47947cfc545f8ba6fd82061" translate="yes" xml:space="preserve">
          <source>Leading whitespace is removed from the heredoc contents according to the number of whitespace in the last line before the heredoc identifier.</source>
          <target state="translated">heredoc 식별자 앞의 마지막 줄에있는 공백 수에 따라 heredoc 내용에서 선행 공백이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="604be9e658978151a811c06511186137964e02f2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s build a really simple application that shows a string with colors! We will use yellow font on a black background:</source>
          <target state="translated">Let&amp;rsquo;s build a really simple application that shows a string with colors! We will use yellow font on a black background:</target>
        </trans-unit>
        <trans-unit id="b1d058fa249e338caf30c664e966eee2c2c92504" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create another application: &lt;em&gt;when passing the option &lt;code&gt;-g&lt;/code&gt; / &lt;code&gt;--goodbye_hello&lt;/code&gt;, the application will say hello to a given name &lt;strong&gt;passed as a parameter to the option&lt;/strong&gt;&lt;/em&gt;.</source>
          <target state="translated">Let&amp;rsquo;s create another application: &lt;em&gt;when passing the option &lt;code&gt;-g&lt;/code&gt; / &lt;code&gt;--goodbye_hello&lt;/code&gt; , the application will say hello to a given name &lt;strong&gt;passed as a parameter to the option&lt;/strong&gt;&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="1622dd410d5532fe1eeae972ec43aec4695e36bf" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with a simple example. We are going to run the tests &lt;strong&gt;using latest&lt;/strong&gt; Crystal release:</source>
          <target state="translated">Let&amp;rsquo;s start with a simple example. We are going to run the tests &lt;strong&gt;using latest&lt;/strong&gt; Crystal release:</target>
        </trans-unit>
        <trans-unit id="4f625305942546e2ad1976517f013c364ab61a77" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it!</source>
          <target state="translated">Let&amp;rsquo;s try it!</target>
        </trans-unit>
        <trans-unit id="a7fa6398f3d91bafe115dd0e5e591b33dc24c6a3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try the renewed application &amp;hellip; and &lt;em&gt;hear&lt;/em&gt; the difference!! &lt;strong&gt;Now&lt;/strong&gt; we have two fabulous apps!!</source>
          <target state="translated">Let&amp;rsquo;s try the renewed application &amp;hellip; and &lt;em&gt;hear&lt;/em&gt; the difference!! &lt;strong&gt;Now&lt;/strong&gt; we have two fabulous apps!!</target>
        </trans-unit>
        <trans-unit id="408e839e9d2712d81cc08b2f53b273669290191d" translate="yes" xml:space="preserve">
          <source>Let's build another &lt;em&gt;fabulous&lt;/em&gt; application with the following feature:</source>
          <target state="translated">Let's build another &lt;em&gt;fabulous&lt;/em&gt; application with the following feature:</target>
        </trans-unit>
        <trans-unit id="123cb4c4e46ae282f59fafcfeae7c6e5cfc15c01" translate="yes" xml:space="preserve">
          <source>Let's compare the times:</source>
          <target state="translated">시간을 비교해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="b35b214690c6e278417152087e344ef62c5df760" translate="yes" xml:space="preserve">
          <source>Let's push these changes. Travis CI will run, and it will install dependencies, but then it will cache the shards cache folder which, usually, is &lt;code&gt;~/.cache/shards&lt;/code&gt;. The following runs will use the cached dependencies.</source>
          <target state="translated">Let's push these changes. Travis CI will run, and it will install dependencies, but then it will cache the shards cache folder which, usually, is &lt;code&gt;~/.cache/shards&lt;/code&gt; . The following runs will use the cached dependencies.</target>
        </trans-unit>
        <trans-unit id="518052e02a7f199567a9f23165f7acb990cf3cc4" translate="yes" xml:space="preserve">
          <source>Let's see another example:</source>
          <target state="translated">Let's see another example:</target>
        </trans-unit>
        <trans-unit id="886d581a78cba947c2d8f7c84814775c5fe3c38f" translate="yes" xml:space="preserve">
          <source>Let's start with two examples to familiarize ourselves with the language.</source>
          <target state="translated">언어에 익숙해 지도록 두 가지 예를 시작하겠습니다.</target>
        </trans-unit>
        <trans-unit id="dfca6ba0d6aef88f69bacf0c4ee92bf19be9af12" translate="yes" xml:space="preserve">
          <source>Let's suppose we want to pin a specific Crystal release (maybe we want to make sure the shard compiles and works with that version) for example &lt;a href=&quot;https://github.com/crystal-lang/crystal/releases/tag/0.31.1&quot;&gt;Crystal 0.31.1&lt;/a&gt;.</source>
          <target state="translated">Let's suppose we want to pin a specific Crystal release (maybe we want to make sure the shard compiles and works with that version) for example &lt;a href=&quot;https://github.com/crystal-lang/crystal/releases/tag/0.31.1&quot;&gt;Crystal 0.31.1&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="062f547985ed430e63c9f22185ee751e601f8c9b" translate="yes" xml:space="preserve">
          <source>Let's try it!</source>
          <target state="translated">Let's try it!</target>
        </trans-unit>
        <trans-unit id="87aa8b80dc98b7bb76b6b2e0e83be6b8c0fce3a4" translate="yes" xml:space="preserve">
          <source>Lets make John's pet talk:</source>
          <target state="translated">존의 애완 동물 이야기를 해보자.</target>
        </trans-unit>
        <trans-unit id="0be58065827c0c55029971feac76d75af08b2cc3" translate="yes" xml:space="preserve">
          <source>Levenshtein</source>
          <target state="translated">Levenshtein</target>
        </trans-unit>
        <trans-unit id="38669da6a5b94f1c84a7088439a90f3944baba7f" translate="yes" xml:space="preserve">
          <source>Levenshtein distance methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bdb0a040e6326fe99352351cb5a72ae82951e2" translate="yes" xml:space="preserve">
          <source>Levenshtein.find</source>
          <target state="translated">Levenshtein.find</target>
        </trans-unit>
        <trans-unit id="59d3fb39c961676e87e1ad81ac552a3e8624c5d7" translate="yes" xml:space="preserve">
          <source>Levenshtein::Finder</source>
          <target state="translated">Levenshtein::Finder</target>
        </trans-unit>
        <trans-unit id="d71415841f8065930f7d2a88f2d0b4434a4d73d7" translate="yes" xml:space="preserve">
          <source>Levensthein distance methods.</source>
          <target state="translated">레벤 테인 거리 방법.</target>
        </trans-unit>
        <trans-unit id="14f7e7b6ae00ba207bdd95defa89166fdde8de12" translate="yes" xml:space="preserve">
          <source>Lexer#next_token</source>
          <target state="translated">Lexer#next_token</target>
        </trans-unit>
        <trans-unit id="c835f60dfef3e0dc43c16046597c09c589c5df1e" translate="yes" xml:space="preserve">
          <source>Lexer#next_token_expect_object_key</source>
          <target state="translated">Lexer#next_token_expect_object_key</target>
        </trans-unit>
        <trans-unit id="6cdb0913c50d36a5d6113a67ec143018a18fc175" translate="yes" xml:space="preserve">
          <source>Lexer#quote_char</source>
          <target state="translated">Lexer#quote_char</target>
        </trans-unit>
        <trans-unit id="cf569f6d9170e2bfb05155a4c23c46f74a56a886" translate="yes" xml:space="preserve">
          <source>Lexer#rewind</source>
          <target state="translated">Lexer#rewind</target>
        </trans-unit>
        <trans-unit id="33ef6e55f3ac361c61aa7871911d6741a3086852" translate="yes" xml:space="preserve">
          <source>Lexer#separator</source>
          <target state="translated">Lexer#separator</target>
        </trans-unit>
        <trans-unit id="fc5277f79ab983c4a072554a025ec478aaaddbaf" translate="yes" xml:space="preserve">
          <source>Lexer#skip</source>
          <target state="translated">Lexer#skip</target>
        </trans-unit>
        <trans-unit id="e105c6842c2063736af156635ff50582ece60fa0" translate="yes" xml:space="preserve">
          <source>Lexer#skip=</source>
          <target state="translated">Lexer#skip=</target>
        </trans-unit>
        <trans-unit id="a7aaa7b80cfc45d8c6329b93360488b1613ba36b" translate="yes" xml:space="preserve">
          <source>Lexer#token</source>
          <target state="translated">Lexer#token</target>
        </trans-unit>
        <trans-unit id="52df2c0d6f1b1d56be28fd240ab8aa8a54fd27f9" translate="yes" xml:space="preserve">
          <source>Lexer.new</source>
          <target state="translated">Lexer.new</target>
        </trans-unit>
        <trans-unit id="1736d56ad06476934c60a388b3520d14f71bc9ba" translate="yes" xml:space="preserve">
          <source>Library authors are advised to put their definitions inside a module to avoid name clashes. The standard library usually doesn't have a namespace as its types and methods are very common, to avoid writing long names.</source>
          <target state="translated">라이브러리 작성자는 이름 충돌을 피하기 위해 해당 정의를 모듈 안에 넣는 것이 좋습니다. 표준 라이브러리에는 긴 이름을 쓰지 않기 위해 유형과 메서드가 매우 일반적이므로 네임 스페이스가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7cec90d9a893d7a57df44cadf9f6412918df9f79" translate="yes" xml:space="preserve">
          <source>Libs</source>
          <target state="translated">Libs</target>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="translated">Apache 라이센스, 버전 2.0에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="54fa72fff8a0abd23965a5dcc45d9464bf030997" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Int, &lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44afe7367ed61f1a552a96a1289be04e9c6479aa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of bounds.</source>
          <target state="translated">Like &lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of bounds.</target>
        </trans-unit>
        <trans-unit id="f8117333c848ceead3cf2ebcb9fc60d67cffa76d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of range.</source>
          <target state="translated">&lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; 와 유사 하지만 &lt;em&gt;시작&lt;/em&gt; 색인이 범위를 벗어나 면 &lt;code&gt;nil&lt;/code&gt; 을 리턴 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2faa49a404924168ec0283364b105bd8c0330c8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Range(Int, Int)]&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of range.</source>
          <target state="translated">마찬가지로 &lt;code&gt;#[Range(Int, Int)]&lt;/code&gt; 하지만, 반환 &lt;code&gt;nil&lt;/code&gt; 경우 범위의 시작이 범위를 벗어났습니다.</target>
        </trans-unit>
        <trans-unit id="bda170ef2ed29c2b7f3d400075babe7db06bf57d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Range]&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of bounds.</source>
          <target state="translated">Like &lt;code&gt;#[Range]&lt;/code&gt; , but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of bounds.</target>
        </trans-unit>
        <trans-unit id="b6d1a92ef917cc4e4f7322372edc1cfd3235d919" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Range]&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of range.</source>
          <target state="translated">Like &lt;code&gt;#[Range]&lt;/code&gt; , but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of range.</target>
        </trans-unit>
        <trans-unit id="b7b0a77e7fe1e4d57e1280f673c49ca884a7d8aa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt;, but mutates &lt;code&gt;self&lt;/code&gt; instead of allocating a new object.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 새 객체를 할당하는 대신 &lt;code&gt;self&lt;/code&gt; 를 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="e841729e14c4fc4ff91cdb61f9991b82bd98d7c0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt;, but mutates &lt;code&gt;self&lt;/code&gt; instead of allocating a new object.</source>
          <target state="translated">Like &lt;code&gt;&lt;a href=&quot;array#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt; , but mutates &lt;code&gt;self&lt;/code&gt; instead of allocating a new object.</target>
        </trans-unit>
        <trans-unit id="c927c223388c6cc98ad9c6b71f2f162af54bcc3d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#pop(&amp;amp;)-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346a17ea65928aff9e81a09c1d95b67671239e11" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is empty.</source>
          <target state="translated">마찬가지로 &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; 하지만 반환 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;code&gt;self&lt;/code&gt; 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c8cc9372a289d46319628a9617c0da3c012db0a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 블록은 요소와 해당 색인 모두에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="22d4df9a262f8b1fae59a90027c24b2dc6d1d8bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max-instance-method&quot;&gt;#max&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#max-instance-method&quot;&gt;#max&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 컬렉션이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b75abf028c2e38794417e1070ec656a09c94d5eb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; but instead of the element, returns the value returned by the block.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 요소 대신 블록에서 반환 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c63714128e187f2e2322343d88891641f3f00f23" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 컬렉션이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3c86e3406468d6c564bf76ebd45854e71bc7fd0c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_of&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#max_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_of&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 컬렉션이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e7da451a3d9cabf9666f07d7cb73d6efc4df6953" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min-instance-method&quot;&gt;#min&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#min-instance-method&quot;&gt;#min&lt;/a&gt;&lt;/code&gt; 과 비슷 하지만 컬렉션이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="265fb96f4b74ee827b45d8fa453731f3cce961d6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; but instead of the element, returns the value returned by the block.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 요소 대신 블록에서 반환 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="84267a8bca46b3f94996ecb9cd973e3b697ab036" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 컬렉션이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5963f7939b92a2a486153c5e028d3675187397f3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_of&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#min_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_of&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 컬렉션이 비어 있으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e39fb794a9708a0d7d9e6770c8d432ff720df4d2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;#minmax&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;{nil, nil}&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">컬렉션이 비어 있으면 &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;#minmax&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 &lt;code&gt;{nil, nil}&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d982ce4ddb66cf7a172a0239c0aaee464fe55339" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#minmax_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_by&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;{nil, nil}&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">컬렉션이 비어 있으면 &lt;code&gt;&lt;a href=&quot;enumerable#minmax_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_by&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 &lt;code&gt;{nil, nil}&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0d93b083798cdbaaf8779491b12058b21032e155" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#minmax_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_of&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;{nil, nil}&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#minmax_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_of&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 컬렉션이 비어 있으면 &lt;code&gt;{nil, nil}&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f8e9b9dc0bd6353a13f759605d875a2c0f075775" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;fileutils#ln_s(src_path:String,dest_path:String)-instance-method&quot;&gt;#ln_s(String, String)&lt;/a&gt;&lt;/code&gt;, but overwrites &lt;code&gt;dest_path&lt;/code&gt; if it exists and is not a directory or if &lt;code&gt;dest_path/src_path&lt;/code&gt; exists.</source>
          <target state="translated">마찬가지로 &lt;code&gt;&lt;a href=&quot;fileutils#ln_s(src_path:String,dest_path:String)-instance-method&quot;&gt;#ln_s(String, String)&lt;/a&gt;&lt;/code&gt; 하지만, 덮어 쓰기는 &lt;code&gt;dest_path&lt;/code&gt; 이 존재하고 디렉토리가 아닌 경우 또는 경우 &lt;code&gt;dest_path/src_path&lt;/code&gt; 가 존재한다.</target>
        </trans-unit>
        <trans-unit id="ee46604acab34d6c8faea39a27728a4d5518f231" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but yields 2 arguments, the element and its index</source>
          <target state="translated">Like &lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; , but yields 2 arguments, the element and its index</target>
        </trans-unit>
        <trans-unit id="8e94c88068363130679488e131c5abe836a992f2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but yields 2 arguments, the element and its index</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 처럼 ! 이지만 요소와 색인의 두 가지 인수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="76742a7dc4d268e93751bd23e106b23d62ad8377" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">Like &lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; , but the block gets passed both the element and its index.</target>
        </trans-unit>
        <trans-unit id="679ed74cfac9efaa8d9335840342ca632499af3a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 처럼 ! 하지만 블록은 요소와 해당 인덱스 모두에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d5e0a16329eda10d56c1a55d48bb407facab7dec" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;slice#map(*,read_only=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;slice#map(*,read_only=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 블록은 요소와 해당 색인 모두에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="477a1d1ca9dd0d0d03e48bc78002254a2e8b0e69" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">Like &lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; , but the block gets passed both the element and its index.</target>
        </trans-unit>
        <trans-unit id="8f413abfd5dd5cf833951eb503f2372b65800280" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 처럼 ! 하지만 블록은 요소와 해당 인덱스 모두에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f22bc19984fc88a105b365c1c07008c58bef2c8a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;staticarray#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;staticarray#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 블록은 요소와 해당 색인 모두에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="05e8acf23ecc57d88e74777a2ed271fa2028b3ff" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;string#byte_slice(start:Int,count:Int):String-instance-method&quot;&gt;#byte_slice(Int, Int)&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of bounds.</source>
          <target state="translated">Like &lt;code&gt;&lt;a href=&quot;string#byte_slice(start:Int,count:Int):String-instance-method&quot;&gt;#byte_slice(Int, Int)&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of bounds.</target>
        </trans-unit>
        <trans-unit id="49774c331353bc1b08cf8c2dfd396654754bb8d5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">Like &lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; , but the block gets passed both the element and its index.</target>
        </trans-unit>
        <trans-unit id="588e904faa4cc7b928e6a18a5d6ad596701b81a9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;block)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;block)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 블록은 요소와 해당 색인 모두에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="1d9505c9bdb28e2e2699dea50b24886a1e28f38c" translate="yes" xml:space="preserve">
          <source>Likewise, other Crystal logic can be implemented in ECR text.</source>
          <target state="translated">마찬가지로 다른 Crystal 로직도 ECR 텍스트로 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cabb5c2ae8384dc97babe35a4e5646126d742bc2" translate="yes" xml:space="preserve">
          <source>Likewise, we can wait for multiple fibers to complete execution, and gather their values:</source>
          <target state="translated">마찬가지로 여러 파이버가 실행을 완료하고 그 값을 수집 할 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="61a403a0d61ce05c392e1457e343cdab1eef188e" translate="yes" xml:space="preserve">
          <source>LineControl</source>
          <target state="translated">LineControl</target>
        </trans-unit>
        <trans-unit id="01671b023b88357a5cd9035d0aa06f99fafa1ace" translate="yes" xml:space="preserve">
          <source>LineControl#tciflush?</source>
          <target state="translated">LineControl#tciflush?</target>
        </trans-unit>
        <trans-unit id="d15d0abf77777df5d6cb2ef17032f72dd8111f11" translate="yes" xml:space="preserve">
          <source>LineControl#tcioff?</source>
          <target state="translated">LineControl#tcioff?</target>
        </trans-unit>
        <trans-unit id="1ec01bb1e4054e9ad0891b990d5cacf20547ec72" translate="yes" xml:space="preserve">
          <source>LineControl#tcioflush?</source>
          <target state="translated">LineControl#tcioflush?</target>
        </trans-unit>
        <trans-unit id="e669b8adc37550d524377cb8fdde782b97c2a0a0" translate="yes" xml:space="preserve">
          <source>LineControl#tcion?</source>
          <target state="translated">LineControl#tcion?</target>
        </trans-unit>
        <trans-unit id="7dd3fb3aa57acbb2a1482fd711352899b024b7e7" translate="yes" xml:space="preserve">
          <source>LineControl#tcoflush?</source>
          <target state="translated">LineControl#tcoflush?</target>
        </trans-unit>
        <trans-unit id="83a451847eee38fb54367e03fed6eb4d9d8e81cb" translate="yes" xml:space="preserve">
          <source>LineControl#tcooff?</source>
          <target state="translated">LineControl#tcooff?</target>
        </trans-unit>
        <trans-unit id="6a600cc1290f10606f153ba1cba35e422ca6b594" translate="yes" xml:space="preserve">
          <source>LineControl#tcoon?</source>
          <target state="translated">LineControl#tcoon?</target>
        </trans-unit>
        <trans-unit id="a89adfcc25f87fb64c9b7ba426374d63db16c52b" translate="yes" xml:space="preserve">
          <source>LineControl#tcsadrain?</source>
          <target state="translated">LineControl#tcsadrain?</target>
        </trans-unit>
        <trans-unit id="4967b2cd89fa48573e7579e09a75008261e89dfa" translate="yes" xml:space="preserve">
          <source>LineControl#tcsaflush?</source>
          <target state="translated">LineControl#tcsaflush?</target>
        </trans-unit>
        <trans-unit id="12a0707215ed6cfa7f2eb1f999f13d612a4c1d6e" translate="yes" xml:space="preserve">
          <source>LineControl#tcsanow?</source>
          <target state="translated">LineControl#tcsanow?</target>
        </trans-unit>
        <trans-unit id="d0517071aa376e797705058bbad4b658954b9930" translate="yes" xml:space="preserve">
          <source>Link</source>
          <target state="translated">Link</target>
        </trans-unit>
        <trans-unit id="8a4b04e6aac7c92c0ae4026c56d0dddb791c6efe" translate="yes" xml:space="preserve">
          <source>Link: &lt;a href=&quot;https://gitlab.com/&quot;&gt;https://gitlab.com/&lt;/a&gt;</source>
          <target state="translated">Link: &lt;a href=&quot;https://gitlab.com/&quot;&gt;https://gitlab.com/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f4ae835289a42cb74ea59363cd9e6f09a1a512f" translate="yes" xml:space="preserve">
          <source>Link: &lt;code&gt;https://&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;.gitlab.io/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Link: &lt;code&gt;https://&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;.gitlab.io/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca8902dd2ec3e25499d0b9590167283f45e9f04c" translate="yes" xml:space="preserve">
          <source>Link: &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">Link: &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b27dc31140950c016978fcb4c144b7b2d3cbc47c" translate="yes" xml:space="preserve">
          <source>Linkage</source>
          <target state="translated">Linkage</target>
        </trans-unit>
        <trans-unit id="9f6978db6a02c3bd9083a27790beae1915fd6ef3" translate="yes" xml:space="preserve">
          <source>Linkage#appending?</source>
          <target state="translated">Linkage#appending?</target>
        </trans-unit>
        <trans-unit id="4ba64672a5e076017201728566597ac17fd54451" translate="yes" xml:space="preserve">
          <source>Linkage#available_externally?</source>
          <target state="translated">Linkage#available_externally?</target>
        </trans-unit>
        <trans-unit id="90a2fa7ee198a997071b2392890a723a97e305a6" translate="yes" xml:space="preserve">
          <source>Linkage#common?</source>
          <target state="translated">Linkage#common?</target>
        </trans-unit>
        <trans-unit id="3006cbc963feff09e7b5a650bf224f30b3091103" translate="yes" xml:space="preserve">
          <source>Linkage#dll_export?</source>
          <target state="translated">Linkage#dll_export?</target>
        </trans-unit>
        <trans-unit id="62b54cb737eedabfea9aa113fd287e2b77c5dcae" translate="yes" xml:space="preserve">
          <source>Linkage#dll_import?</source>
          <target state="translated">Linkage#dll_import?</target>
        </trans-unit>
        <trans-unit id="334728d7eeec8101f433b57495f797af225435af" translate="yes" xml:space="preserve">
          <source>Linkage#external?</source>
          <target state="translated">Linkage#external?</target>
        </trans-unit>
        <trans-unit id="abde9e901fc86a258aaae1f41b3cb57fa38c37a7" translate="yes" xml:space="preserve">
          <source>Linkage#external_weak?</source>
          <target state="translated">Linkage#external_weak?</target>
        </trans-unit>
        <trans-unit id="32aa75cd6c18bac2be64ba02bbb9c30640c346a4" translate="yes" xml:space="preserve">
          <source>Linkage#ghost?</source>
          <target state="translated">Linkage#ghost?</target>
        </trans-unit>
        <trans-unit id="04f2bfe4c5533888a6dce31270dcf3f57b594ce4" translate="yes" xml:space="preserve">
          <source>Linkage#internal?</source>
          <target state="translated">Linkage#internal?</target>
        </trans-unit>
        <trans-unit id="536bda20b9e3410ec2fffc2f643b9ad719549206" translate="yes" xml:space="preserve">
          <source>Linkage#link_once_any?</source>
          <target state="translated">Linkage#link_once_any?</target>
        </trans-unit>
        <trans-unit id="fcbf4f2d6f6ef6bc759c73dabcd2dd4deead5fe9" translate="yes" xml:space="preserve">
          <source>Linkage#link_once_odr?</source>
          <target state="translated">Linkage#link_once_odr?</target>
        </trans-unit>
        <trans-unit id="6e0d896a256b365c6c82fbcb72cf1bab6925d7b9" translate="yes" xml:space="preserve">
          <source>Linkage#link_once_odr_auto_hide?</source>
          <target state="translated">Linkage#link_once_odr_auto_hide?</target>
        </trans-unit>
        <trans-unit id="5c598a2d782b8d6d40c9c0bd46e887ddf1daaca6" translate="yes" xml:space="preserve">
          <source>Linkage#linker_private?</source>
          <target state="translated">Linkage#linker_private?</target>
        </trans-unit>
        <trans-unit id="b03d963b8bca52dd6df13e96979bc1aeda3a0eb8" translate="yes" xml:space="preserve">
          <source>Linkage#linker_private_weak?</source>
          <target state="translated">Linkage#linker_private_weak?</target>
        </trans-unit>
        <trans-unit id="b83cc293843c374ecd2af09ed4e1d412d4b03ae2" translate="yes" xml:space="preserve">
          <source>Linkage#private?</source>
          <target state="translated">Linkage#private?</target>
        </trans-unit>
        <trans-unit id="23c9b053b1449798e0bc6f797b957a022718b403" translate="yes" xml:space="preserve">
          <source>Linkage#weak_any?</source>
          <target state="translated">Linkage#weak_any?</target>
        </trans-unit>
        <trans-unit id="afafa064b74e6c5de9630841ba137d0c1a8dd512" translate="yes" xml:space="preserve">
          <source>Linkage#weak_odr?</source>
          <target state="translated">Linkage#weak_odr?</target>
        </trans-unit>
        <trans-unit id="f27f3ca9ba440e3da3e466b92f6aaf945fa47231" translate="yes" xml:space="preserve">
          <source>Linked version of OpenSSL need to be checked for supporting specific protocols and ciphers.</source>
          <target state="translated">특정 프로토콜 및 암호를 지원하려면 OpenSSL의 링크 된 버전을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2cf97442cf3a9ce9b907593c9596985a5eb8e1a" translate="yes" xml:space="preserve">
          <source>List of all entries in the benchmark.</source>
          <target state="translated">벤치 마크의 모든 항목 목록</target>
        </trans-unit>
        <trans-unit id="34895b4491fa04f5cbd7fa52cba85581715b73cb" translate="yes" xml:space="preserve">
          <source>List of all entries in the benchmark. After #execute, these are populated with the resulting statistics.</source>
          <target state="translated">벤치 마크의 모든 항목 목록 #execute 후 결과 통계로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="8d9bc0e8b5bf216fbc6c157bd8f8c7a8d35fccc8" translate="yes" xml:space="preserve">
          <source>List of metacharacters that need to be escaped.</source>
          <target state="translated">이스케이프해야하는 메타 문자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="57eddd9fd848a945b626f0253c30c5d46091a0d7" translate="yes" xml:space="preserve">
          <source>List of operators</source>
          <target state="translated">List of operators</target>
        </trans-unit>
        <trans-unit id="a0574842123374ee77707d75a17ad4ec6cf02c75" translate="yes" xml:space="preserve">
          <source>Lists the installed dependencies and their versions.</source>
          <target state="translated">설치된 종속성 및 해당 버전을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="92e97e035f44f8980e413b0d3167603ea36902ee" translate="yes" xml:space="preserve">
          <source>Literal</source>
          <target state="translated">Literal</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="4b75844b8c02eaa032013b906d46bc59d53b7cde" translate="yes" xml:space="preserve">
          <source>Literals: Array</source>
          <target state="translated">리터럴 : 배열</target>
        </trans-unit>
        <trans-unit id="ea6f077a10141306566bf85447228b2facc2745e" translate="yes" xml:space="preserve">
          <source>Literals: Bool</source>
          <target state="translated">리터럴 : Bool</target>
        </trans-unit>
        <trans-unit id="233aba591a8054f6aed4a76a17f96014e9363925" translate="yes" xml:space="preserve">
          <source>Literals: Char</source>
          <target state="translated">리터럴 : Char</target>
        </trans-unit>
        <trans-unit id="ec246d5ceda6b53e5bbd7a01e09c49b6d56394b4" translate="yes" xml:space="preserve">
          <source>Literals: Command literal</source>
          <target state="translated">리터럴 : 명령 리터럴</target>
        </trans-unit>
        <trans-unit id="f5462d6a86a215d6228a11ebd5c02094207825d7" translate="yes" xml:space="preserve">
          <source>Literals: Floats</source>
          <target state="translated">리터럴 : 수레</target>
        </trans-unit>
        <trans-unit id="3e407d86a37652d1bec6c17459fadce4c84f9d90" translate="yes" xml:space="preserve">
          <source>Literals: Hash</source>
          <target state="translated">리터럴 : 해시</target>
        </trans-unit>
        <trans-unit id="3468b69beb08ae542f912c8e20be35188afe56df" translate="yes" xml:space="preserve">
          <source>Literals: Integers</source>
          <target state="translated">리터럴 : 정수</target>
        </trans-unit>
        <trans-unit id="e4378fab7ac228b7c046d54950d01c015113c04f" translate="yes" xml:space="preserve">
          <source>Literals: NamedTuple</source>
          <target state="translated">리터럴 : NamedTuple</target>
        </trans-unit>
        <trans-unit id="06f90410ceb093a53bee28a654ba7328e871bd52" translate="yes" xml:space="preserve">
          <source>Literals: Nil</source>
          <target state="translated">리터럴 : 무기 호</target>
        </trans-unit>
        <trans-unit id="acf3597238ad593de4a81f196d0bb5458a176c9b" translate="yes" xml:space="preserve">
          <source>Literals: Proc</source>
          <target state="translated">리터럴 : Proc</target>
        </trans-unit>
        <trans-unit id="83b59b88264c64eede13fda01936058c9a191487" translate="yes" xml:space="preserve">
          <source>Literals: Range</source>
          <target state="translated">리터럴 : 범위</target>
        </trans-unit>
        <trans-unit id="eb4042329aa69a13fe56b13ae92ad96de6c73199" translate="yes" xml:space="preserve">
          <source>Literals: Regular Expressions</source>
          <target state="translated">리터럴 : 정규식</target>
        </trans-unit>
        <trans-unit id="f7447e2b76a629aa19420cf7cf46cdff3a5aa8d6" translate="yes" xml:space="preserve">
          <source>Literals: String</source>
          <target state="translated">리터럴 : 문자열</target>
        </trans-unit>
        <trans-unit id="a706d990e28bb7938655236ac99d224f8d25125b" translate="yes" xml:space="preserve">
          <source>Literals: Symbol</source>
          <target state="translated">리터럴 : 기호</target>
        </trans-unit>
        <trans-unit id="35dc2a3ff5ffac01474f9988568bf390051a8b72" translate="yes" xml:space="preserve">
          <source>Literals: Tuple</source>
          <target state="translated">리터럴 : 터플</target>
        </trans-unit>
        <trans-unit id="c8fb56725cdbd2ddef060b1599393c2090a498b1" translate="yes" xml:space="preserve">
          <source>Load the external subset</source>
          <target state="translated">외부 서브 세트로드</target>
        </trans-unit>
        <trans-unit id="fb340c9d1672c9fe76a09c37a919a87b4c63eb1f" translate="yes" xml:space="preserve">
          <source>Loaded values override previously defined mappings.</source>
          <target state="translated">로드 된 값은 이전에 정의 된 매핑보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="29b2b8dcb12a8ad042e22dd494bf8fbb11691d6a" translate="yes" xml:space="preserve">
          <source>Loading a custom MIME database</source>
          <target state="translated">사용자 정의 MIME 데이터베이스로드</target>
        </trans-unit>
        <trans-unit id="8d4ff695efe04f2448917b199032253d0cad92c0" translate="yes" xml:space="preserve">
          <source>Loads a bcrypt hash.</source>
          <target state="translated">bcrypt 해시를로드합니다.</target>
        </trans-unit>
        <trans-unit id="a1f254c812c1ef585d8615b817ff6acf088bee48" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; with the given &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">지정된 &lt;em&gt;이름으로 &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 을 로드합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="510a1cd62879c3a55e9820ad64d56a80b891eabd" translate="yes" xml:space="preserve">
          <source>Loads the local time zone according to the current application environment.</source>
          <target state="translated">현재 애플리케이션 환경에 따라 현지 시간대를로드합니다.</target>
        </trans-unit>
        <trans-unit id="fabf0703109710fed22f74f958c204133fc85234" translate="yes" xml:space="preserve">
          <source>Local Time Zone</source>
          <target state="translated">현지 시간대</target>
        </trans-unit>
        <trans-unit id="ff5148d6cff2251fbb44fa24ac71e87831f6949a" translate="yes" xml:space="preserve">
          <source>Local Variables</source>
          <target state="translated">지역 변수</target>
        </trans-unit>
        <trans-unit id="573faf18825a085ecfb3336ef224bcc2ae1d82cf" translate="yes" xml:space="preserve">
          <source>Local variables</source>
          <target state="translated">지역 변수</target>
        </trans-unit>
        <trans-unit id="b403f50cd9a5f8f922d2b8e7d70bbb8e764b4257" translate="yes" xml:space="preserve">
          <source>Local variables start with lowercase letters. They are declared when you first assign them a value.</source>
          <target state="translated">지역 변수는 소문자로 시작합니다. 값을 처음 할당 할 때 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="478df254596a4a4a51b18fe7c43423e110e9c8b9" translate="yes" xml:space="preserve">
          <source>LocalMode</source>
          <target state="translated">LocalMode</target>
        </trans-unit>
        <trans-unit id="7e3fa59744396db63746e3108cbd3a6f4dd2fede" translate="yes" xml:space="preserve">
          <source>LocalMode#echo?</source>
          <target state="translated">LocalMode#echo?</target>
        </trans-unit>
        <trans-unit id="350765e637400a21652eb657a65366cc093f01ff" translate="yes" xml:space="preserve">
          <source>LocalMode#echoe?</source>
          <target state="translated">LocalMode#echoe?</target>
        </trans-unit>
        <trans-unit id="f0a715cfc66237e24741207791d746b83e921c9d" translate="yes" xml:space="preserve">
          <source>LocalMode#echok?</source>
          <target state="translated">LocalMode#echok?</target>
        </trans-unit>
        <trans-unit id="1d0c47336df662e3f4241bac8054dfb378ec6854" translate="yes" xml:space="preserve">
          <source>LocalMode#echonl?</source>
          <target state="translated">LocalMode#echonl?</target>
        </trans-unit>
        <trans-unit id="c1b0b6ade4df27ae1fbc5c2b98047723b0c248d4" translate="yes" xml:space="preserve">
          <source>LocalMode#icanon?</source>
          <target state="translated">LocalMode#icanon?</target>
        </trans-unit>
        <trans-unit id="fee3ae83eac2380204f752ebb2d573dde232957d" translate="yes" xml:space="preserve">
          <source>LocalMode#iexten?</source>
          <target state="translated">LocalMode#iexten?</target>
        </trans-unit>
        <trans-unit id="64a3ce0eff2d6c1aa71261c83b2172b243fb15ce" translate="yes" xml:space="preserve">
          <source>LocalMode#isig?</source>
          <target state="translated">LocalMode#isig?</target>
        </trans-unit>
        <trans-unit id="7e7df72a29ed9d70ba67db067aae37822c68c5c0" translate="yes" xml:space="preserve">
          <source>LocalMode#noflsh?</source>
          <target state="translated">LocalMode#noflsh?</target>
        </trans-unit>
        <trans-unit id="2d4a72ad2742661bfdb1c9bd1255760aebd4195f" translate="yes" xml:space="preserve">
          <source>LocalMode#none?</source>
          <target state="translated">LocalMode#none?</target>
        </trans-unit>
        <trans-unit id="b61be914f1706cdef098cb8e3a88e6d9f7d425f1" translate="yes" xml:space="preserve">
          <source>LocalMode#tostop?</source>
          <target state="translated">LocalMode#tostop?</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="2fb7398ae107f4c1237c61593dbbad5d2d6575e3" translate="yes" xml:space="preserve">
          <source>Location#==</source>
          <target state="translated">Location#==</target>
        </trans-unit>
        <trans-unit id="af03bfd94384c2ce585a69894ca66e3aaf7a80b8" translate="yes" xml:space="preserve">
          <source>Location#fixed?</source>
          <target state="translated">Location#fixed?</target>
        </trans-unit>
        <trans-unit id="7a8a0f93b1784fe121d98a416a3ac9dc75d68c0c" translate="yes" xml:space="preserve">
          <source>Location#hash</source>
          <target state="translated">Location#hash</target>
        </trans-unit>
        <trans-unit id="b453917b4c38a93fab61e9a6e661fa90f63afb4f" translate="yes" xml:space="preserve">
          <source>Location#inspect</source>
          <target state="translated">Location#inspect</target>
        </trans-unit>
        <trans-unit id="f53f4bcc39754498a7c355dfae5bf8cc3e0fc12a" translate="yes" xml:space="preserve">
          <source>Location#local?</source>
          <target state="translated">Location#local?</target>
        </trans-unit>
        <trans-unit id="89cf70bf72158e593221d69a19980c610ec0d988" translate="yes" xml:space="preserve">
          <source>Location#lookup</source>
          <target state="translated">Location#lookup</target>
        </trans-unit>
        <trans-unit id="6398908f01346408a5e29b478192c1ce88de93bb" translate="yes" xml:space="preserve">
          <source>Location#name</source>
          <target state="translated">Location#name</target>
        </trans-unit>
        <trans-unit id="c5f7360acf5ee08d1492cfecb479342690cfae48" translate="yes" xml:space="preserve">
          <source>Location#to_s</source>
          <target state="translated">Location#to_s</target>
        </trans-unit>
        <trans-unit id="3c9864f52bbbb76fb010f551a2e301c766c5d4a7" translate="yes" xml:space="preserve">
          <source>Location#utc?</source>
          <target state="translated">Location#utc?</target>
        </trans-unit>
        <trans-unit id="4695794b3d87ca6ab4957046dcb6e84bd1c62fc5" translate="yes" xml:space="preserve">
          <source>Location#zones</source>
          <target state="translated">Location#zones</target>
        </trans-unit>
        <trans-unit id="d035c6e8a9bad42537e3f95ee84ebae90471ecc3" translate="yes" xml:space="preserve">
          <source>Location.fixed</source>
          <target state="translated">Location.fixed</target>
        </trans-unit>
        <trans-unit id="a3c6af7857396d1699705ea585bdd9ebe333150f" translate="yes" xml:space="preserve">
          <source>Location.load</source>
          <target state="translated">Location.load</target>
        </trans-unit>
        <trans-unit id="52a9586a75921e1368162e89a743fb00ed9bb0db" translate="yes" xml:space="preserve">
          <source>Location.load_local</source>
          <target state="translated">Location.load_local</target>
        </trans-unit>
        <trans-unit id="36d48920a4e4797a77aa16e8380cee04944c71d7" translate="yes" xml:space="preserve">
          <source>Location.local</source>
          <target state="translated">Location.local</target>
        </trans-unit>
        <trans-unit id="696bf036ba7ec49a4526cdf748d8afc2f6d8769e" translate="yes" xml:space="preserve">
          <source>Location.local=</source>
          <target state="translated">Location.local=</target>
        </trans-unit>
        <trans-unit id="fe83c8e415ad5c7825489bd4034ae05714cd1357" translate="yes" xml:space="preserve">
          <source>Location::Zone</source>
          <target state="translated">Location::Zone</target>
        </trans-unit>
        <trans-unit id="651c0ed739b8a5d39c9984433cc4a15e3a9655f5" translate="yes" xml:space="preserve">
          <source>Location::Zone#dst?</source>
          <target state="translated">Location::Zone#dst?</target>
        </trans-unit>
        <trans-unit id="debdde49529dc51554ee29f61389e8fabbd63a0c" translate="yes" xml:space="preserve">
          <source>Location::Zone#format</source>
          <target state="translated">Location::Zone#format</target>
        </trans-unit>
        <trans-unit id="2d3daff9c83ff776355db391005591ad921760a4" translate="yes" xml:space="preserve">
          <source>Location::Zone#inspect</source>
          <target state="translated">Location::Zone#inspect</target>
        </trans-unit>
        <trans-unit id="527af66989ccf151067b00252637870147564420" translate="yes" xml:space="preserve">
          <source>Location::Zone#name</source>
          <target state="translated">Location::Zone#name</target>
        </trans-unit>
        <trans-unit id="558c26816bee03e97cdca14ee36cabff465ae74f" translate="yes" xml:space="preserve">
          <source>Location::Zone#offset</source>
          <target state="translated">Location::Zone#offset</target>
        </trans-unit>
        <trans-unit id="91807c20d7f2cde1d96f46ebb3fc1e478ddc003c" translate="yes" xml:space="preserve">
          <source>Location::Zone.new</source>
          <target state="translated">Location::Zone.new</target>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="770c6848b5c828b51fb36e0a5849a8a083473fae" translate="yes" xml:space="preserve">
          <source>Log#for</source>
          <target state="translated">Log#for</target>
        </trans-unit>
        <trans-unit id="db760bd3b495cb8b894dac57cf0cb419e8b98dc7" translate="yes" xml:space="preserve">
          <source>Log#info</source>
          <target state="translated">Log#info</target>
        </trans-unit>
        <trans-unit id="5999ba6b5bbfc933b735cd47192bf28362f3a52d" translate="yes" xml:space="preserve">
          <source>Log#warn</source>
          <target state="translated">Log#warn</target>
        </trans-unit>
        <trans-unit id="6fb3007f69cd63f5895f656dcda8f6948b599765" translate="yes" xml:space="preserve">
          <source>Log.for</source>
          <target state="translated">Log.for</target>
        </trans-unit>
        <trans-unit id="f64cad34b8fc5061b2d804a43fdaa076e8dd8793" translate="yes" xml:space="preserve">
          <source>Log.info</source>
          <target state="translated">Log.info</target>
        </trans-unit>
        <trans-unit id="43c688c2386b1181fc193b76a96a1b48afd167dc" translate="yes" xml:space="preserve">
          <source>Log.warn</source>
          <target state="translated">Log.warn</target>
        </trans-unit>
        <trans-unit id="a154877284cd49920f591bf158e2ee1330e855e5" translate="yes" xml:space="preserve">
          <source>Log::AsyncDispatcher</source>
          <target state="translated">Log::AsyncDispatcher</target>
        </trans-unit>
        <trans-unit id="931d6e554d3edcbd73cd8cf099c441bb0649b144" translate="yes" xml:space="preserve">
          <source>Log::Backend</source>
          <target state="translated">Log::Backend</target>
        </trans-unit>
        <trans-unit id="61b9a6ef613b0b913855e097a04b09b600accbc1" translate="yes" xml:space="preserve">
          <source>Log::BroadcastBackend</source>
          <target state="translated">Log::BroadcastBackend</target>
        </trans-unit>
        <trans-unit id="7fe141f16bf60d05d78691cb1188d634cbe7dbb3" translate="yes" xml:space="preserve">
          <source>Log::Builder</source>
          <target state="translated">Log::Builder</target>
        </trans-unit>
        <trans-unit id="905ab2b3de457d996919a11ea06cb606006bbe21" translate="yes" xml:space="preserve">
          <source>Log::Configuration</source>
          <target state="translated">Log::Configuration</target>
        </trans-unit>
        <trans-unit id="2f574b7e4e8aa23d51fa397aa2d2f40006971f5f" translate="yes" xml:space="preserve">
          <source>Log::Context</source>
          <target state="translated">Log::Context</target>
        </trans-unit>
        <trans-unit id="9e41c970345c081c7acea7f3b2b70dd337f9bf59" translate="yes" xml:space="preserve">
          <source>Log::Dispatcher</source>
          <target state="translated">Log::Dispatcher</target>
        </trans-unit>
        <trans-unit id="7a73e4ab8b2e89e47b1eba748ea86466ca8f303d" translate="yes" xml:space="preserve">
          <source>Log::Emitter</source>
          <target state="translated">Log::Emitter</target>
        </trans-unit>
        <trans-unit id="56b4fa94523b6aa1beed530ac2f6c6d55cb11af3" translate="yes" xml:space="preserve">
          <source>Log::EntriesChecker</source>
          <target state="translated">Log::EntriesChecker</target>
        </trans-unit>
        <trans-unit id="b5844087653d8ba6fabcf6c58cf1ee5cd090fe10" translate="yes" xml:space="preserve">
          <source>Log::Entry</source>
          <target state="translated">Log::Entry</target>
        </trans-unit>
        <trans-unit id="fb7b1bd6e018f49d2f5779fdb54373ddfe3bd7a2" translate="yes" xml:space="preserve">
          <source>Log::Formatter</source>
          <target state="translated">Log::Formatter</target>
        </trans-unit>
        <trans-unit id="78a09ea453867fcfb9123d070aab858a27b2f119" translate="yes" xml:space="preserve">
          <source>Log::IOBackend</source>
          <target state="translated">Log::IOBackend</target>
        </trans-unit>
        <trans-unit id="96cc72dcc8cecf3a9600146a877b5788aef1a223" translate="yes" xml:space="preserve">
          <source>Log::MemoryBackend</source>
          <target state="translated">Log::MemoryBackend</target>
        </trans-unit>
        <trans-unit id="d503d9d7c13790a9bf05989f3e90445e04fe8a19" translate="yes" xml:space="preserve">
          <source>Log::Metadata</source>
          <target state="translated">Log::Metadata</target>
        </trans-unit>
        <trans-unit id="3a6f6770226a49978cf0f33b9e8c2f9146b7cd5a" translate="yes" xml:space="preserve">
          <source>Log::Metadata::Value</source>
          <target state="translated">Log::Metadata::Value</target>
        </trans-unit>
        <trans-unit id="3ed24cf838297d559e4dd48b38494367aa53e6ec" translate="yes" xml:space="preserve">
          <source>Log::ShortFormat</source>
          <target state="translated">Log::ShortFormat</target>
        </trans-unit>
        <trans-unit id="8c74857f69e5cd4952bc7ed2b6c6938c48672f07" translate="yes" xml:space="preserve">
          <source>Log::StaticFormatter</source>
          <target state="translated">Log::StaticFormatter</target>
        </trans-unit>
        <trans-unit id="44e700533439b05a7e6ff9f0b1378da2aecc7778" translate="yes" xml:space="preserve">
          <source>Log::SyncDispatcher</source>
          <target state="translated">Log::SyncDispatcher</target>
        </trans-unit>
        <trans-unit id="bbf273cae05e9e833c2e7b95b5157d9071509d83" translate="yes" xml:space="preserve">
          <source>LogHandler</source>
          <target state="translated">LogHandler</target>
        </trans-unit>
        <trans-unit id="6c7692ed3d6aad1243ba6b87d2e38f55519b7d75" translate="yes" xml:space="preserve">
          <source>LogHandler#call</source>
          <target state="translated">LogHandler#call</target>
        </trans-unit>
        <trans-unit id="d4558647898148b5d8695b9ae975743ce82fbfa8" translate="yes" xml:space="preserve">
          <source>LogHandler.new</source>
          <target state="translated">LogHandler.new</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="61cf6db1074ecb354e93079eb8555cbcbda21ff0" translate="yes" xml:space="preserve">
          <source>Logger#info</source>
          <target state="translated">Logger#info</target>
        </trans-unit>
        <trans-unit id="131f8614861c4e80a41a4248ee1b995e91b5289c" translate="yes" xml:space="preserve">
          <source>Logger#log</source>
          <target state="translated">Logger#log</target>
        </trans-unit>
        <trans-unit id="55ff6c4b3565da4f95cda96a0525937d7147965f" translate="yes" xml:space="preserve">
          <source>Logger#warn</source>
          <target state="translated">Logger#warn</target>
        </trans-unit>
        <trans-unit id="4d635d1a5e3cc9b7e5b82d9c42d1fd23f6ba51c4" translate="yes" xml:space="preserve">
          <source>Logger.new</source>
          <target state="translated">Logger.new</target>
        </trans-unit>
        <trans-unit id="122f1700f952290f57d9cb80437f579187bf8842" translate="yes" xml:space="preserve">
          <source>Logical</source>
          <target state="translated">Logical</target>
        </trans-unit>
        <trans-unit id="c5d5c5fb2a8798e4f962780fba63386de96b07b6" translate="yes" xml:space="preserve">
          <source>Logical AND</source>
          <target state="translated">논리 AND</target>
        </trans-unit>
        <trans-unit id="e9b0aefdf7ed2c67abbfc572bbc5743979450674" translate="yes" xml:space="preserve">
          <source>Logical OR</source>
          <target state="translated">논리 OR</target>
        </trans-unit>
        <trans-unit id="7145d1148d0d2119dde9926f90f3f9643e2ef960" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if &lt;em&gt;severity&lt;/em&gt; is higher or equal with the logger's current severity.</source>
          <target state="translated">로그 &lt;em&gt;메시지는&lt;/em&gt; 경우 &lt;em&gt;심각도가&lt;/em&gt; 높은 또는 로거의 현재 심각도와 동일.</target>
        </trans-unit>
        <trans-unit id="4d8a958ec2385360b17bed9cd1e1aad3c074ee14" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if &lt;em&gt;severity&lt;/em&gt; is higher or equal with the logger's current severity. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">로그 &lt;em&gt;메시지는&lt;/em&gt; 경우 &lt;em&gt;심각도가&lt;/em&gt; 높은 또는 로거의 현재 심각도와 동일. &lt;em&gt;progname&lt;/em&gt; 은이 로거에 설정된 기본 &lt;em&gt;progname을&lt;/em&gt; 대체합니다.</target>
        </trans-unit>
        <trans-unit id="82c52840a5729059cf58e6f23b3bb4aefa42039d" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d3082815c63bfb81d2842a53eb068e1af0b0a043" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;progname&lt;/em&gt; 은이 로거에 설정된 기본 &lt;em&gt;progname을&lt;/em&gt; 대체합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2670ad860e5abf79163b213268e2b044a9ff32f8" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="09481344b874ea7039706729c117c89555437978" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;progname&lt;/em&gt; 은이 로거에 설정된 기본 &lt;em&gt;progname을&lt;/em&gt; 대체합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a14d54ebd2327d28934e8d478a915b705dee23d" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt; 보다 낮거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="47102b3b8a6489920d9440cc3a97fe3a02656791" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt; 보다 낮거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;progname&lt;/em&gt; 은이 로거에 설정된 기본 &lt;em&gt;progname을&lt;/em&gt; 대체합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79513661b3e0427f406a66547fec7d278ad05f61" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="718abbe660dbcaccb38a2965aa59c950da6ba6f8" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;progname&lt;/em&gt; 은이 로거에 설정된 기본 &lt;em&gt;progname을&lt;/em&gt; 대체합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee33190677ea47dd1b957f95191ab19d9ce38fd7" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="47a1fe61a633a614dac01c439156be1ad4f55f42" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">로거의 현재 심각도가 &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt; 보다 작거나 같은 경우 &lt;em&gt;메시지를&lt;/em&gt; 기록 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt;progname&lt;/em&gt; 은이 로거에 설정된 기본 &lt;em&gt;progname을&lt;/em&gt; 대체합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
