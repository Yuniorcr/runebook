<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="homebrew">
    <body>
      <group id="homebrew">
        <trans-unit id="f7b5d8e7180e9fed7cbf71f34b2344474e2e22e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Because of a required workaround for &lt;code&gt;npm@5&lt;/code&gt; calling &lt;code&gt;npm pack&lt;/code&gt; we currently don&amp;rsquo;t support installing modules (from non-npm registry tarballs), which require a prepublish step (e.g. for transpiling sources). See &lt;a href=&quot;https://github.com/Homebrew/brew/pull/2820&quot;&gt;Homebrew/brew#2820&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;npm@5&lt;/code&gt; 호출 &lt;code&gt;npm pack&lt;/code&gt; 에 대한 필수 해결 방법으로 인해 현재 npm이 아닌 레지스트리 타르볼에서 모듈을 설치할 수 없으며 사전 게시 단계 (예 : 소스 변환)가 필요합니다. 자세한 내용은 &lt;a href=&quot;https://github.com/Homebrew/brew/pull/2820&quot;&gt;Homebrew / brew # 2820&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d1dc39bcd923fd5ebfb3f55a6e5d989beaf38d12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; macOS&amp;rsquo;s system Python does not provide &lt;code&gt;pip&lt;/code&gt;. Follow the &lt;a href=&quot;https://pip.readthedocs.io/en/stable/installing/#install-pip&quot;&gt;pip documentation&lt;/a&gt; to install it for your system Python if you would like it.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; macOS의 시스템 Python은 &lt;code&gt;pip&lt;/code&gt; 를 제공하지 않습니다 . 원하는 경우 &lt;a href=&quot;https://pip.readthedocs.io/en/stable/installing/#install-pip&quot;&gt;pip 설명서&lt;/a&gt; 에 따라 시스템 Python에 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="44049e7b2fe2264238af466a416da1ea32fdf4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;s are not allowed in Homebrew/homebrew-core as they are not tested by CI.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt;&lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt; &lt;code&gt;option&lt;/code&gt; &lt;/a&gt; 은 CI에 의해 테스트되지 않으므로 Homebrew / homebrew-core에서는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c5665aaadc1a3a9a34a4dd8b99a4a02f5696a9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;:optional&lt;/code&gt; and &lt;code&gt;:recommended&lt;/code&gt; are not allowed in Homebrew/homebrew-core as they are not tested by CI.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;:optional&lt;/code&gt; 및 &lt;code&gt;:recommended&lt;/code&gt; 는 CI에 의해 테스트되지 않았으므로 Homebrew / homebrew-core에서 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82425bc893ff25ca0ba6a4a52e70e5fc470d139c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only use &lt;code&gt;strategy&lt;/code&gt; when it&amp;rsquo;s necessary&lt;/strong&gt;. For example, if livecheck is already using &lt;code&gt;Git&lt;/code&gt; for a URL, it&amp;rsquo;s not necessary to use &lt;code&gt;strategy :git&lt;/code&gt;. However, if &lt;code&gt;Git&lt;/code&gt; applies to a URL but we need to use &lt;code&gt;PageMatch&lt;/code&gt;, it&amp;rsquo;s necessary to use &lt;code&gt;strategy :page_match&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;필요한 경우 에만 &lt;code&gt;strategy&lt;/code&gt; 사용 하십시오&lt;/strong&gt; . 예를 들어, livecheck가 이미 URL에 &lt;code&gt;Git&lt;/code&gt; 을 사용하고 있다면 , &lt;code&gt;strategy :git&lt;/code&gt; 을 사용할 필요가 없습니다 : git . 그러나 &lt;code&gt;Git&lt;/code&gt; 이 URL에 적용되지만 &lt;code&gt;PageMatch&lt;/code&gt; 를 사용해야하는 경우 &lt;code&gt;strategy :page_match&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8fca4c6669c073fc20ef1b1a07bfb6943b8dff3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only use the &lt;code&gt;GithubLatest&lt;/code&gt; strategy when it&amp;rsquo;s necessary and correct&lt;/strong&gt;. Github.com rate limits requests and we try to minimize our use of this strategy to avoid hitting the rate limit on CI or when using &lt;code&gt;brew livecheck --tap&lt;/code&gt; on large taps (e.g. homebrew/core). The &lt;code&gt;Git&lt;/code&gt; strategy is often sufficient and we only need to use &lt;code&gt;GithubLatest&lt;/code&gt; when the &amp;ldquo;latest&amp;rdquo; release is different than the newest version from the tags.</source>
          <target state="translated">&lt;strong&gt;필요하고 올바른 경우 에만 &lt;code&gt;GithubLatest&lt;/code&gt; 전략을 사용 하십시오&lt;/strong&gt; . Github.com 비율은 요청을 제한하고 CI에 대한 비율 제한에 도달하지 않거나 &lt;code&gt;brew livecheck --tap&lt;/code&gt; on large taps (예 : homebrew / core)를 사용할 때이 전략의 사용을 최소화하려고합니다 . &lt;code&gt;Git&lt;/code&gt; 전략은 종종 충분하며 우리는 사용할 필요가 &lt;code&gt;GithubLatest&lt;/code&gt; 을 은 &quot;최신&quot;릴리스 태그의 최신 버전과 다른 경우.</target>
        </trans-unit>
        <trans-unit id="c39fb21dabb60700098faceafff8b1b1208548e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regexes should be made case insensitive, whenever possible&lt;/strong&gt;, by adding &lt;code&gt;i&lt;/code&gt; at the end (e.g. &lt;code&gt;/.../i&lt;/code&gt; or &lt;code&gt;%r{...}i&lt;/code&gt;). This improves reliability, as the regex will handle changes in letter case without needing modifications.</source>
          <target state="translated">&lt;strong&gt;정규식은 가능할 때마다&lt;/strong&gt; 끝에 &lt;code&gt;i&lt;/code&gt; 를 추가하여 &lt;strong&gt;대소 문자를 구분하지 않아야합니다&lt;/strong&gt; (예 : &lt;code&gt;/.../i&lt;/code&gt; 또는 &lt;code&gt;%r{...}i&lt;/code&gt; ). 정규식이 수정없이 대소 문자 변경을 처리하므로 안정성이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="1cf1ff64d4f4b12b394f6a2850e3009fa2993b56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regexes should only use a capturing group around the version text&lt;/strong&gt;. For example, in &lt;code&gt;/href=.*?example-v?(\d+(?:\.\d+)+)(?:-src)?\.t/i&lt;/code&gt;, we&amp;rsquo;re only using a capturing group around the version test (matching a version like &lt;code&gt;1.2&lt;/code&gt;, &lt;code&gt;1.2.3&lt;/code&gt;, etc.) and we&amp;rsquo;re using non-capturing groups elsewhere (e.g. &lt;code&gt;(?:-src)?&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;정규식은 버전 텍스트 주위에 캡처 링 그룹 만 사용해야합니다&lt;/strong&gt; . 예를 들어, &lt;code&gt;/href=.*?example-v?(\d+(?:\.\d+)+)(?:-src)?\.t/i&lt;/code&gt; 에서 우리는 버전 테스트 ( &lt;code&gt;1.2&lt;/code&gt; , &lt;code&gt;1.2.3&lt;/code&gt; 등과 같은 버전과 일치 ) 및 다른 곳에서 캡처되지 않는 그룹을 사용하고 있습니다 (예 : &lt;code&gt;(?:-src)?&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a4c1ad42dedb0c6864a1206c5f76ed48ac0fdaf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regional, Localized&lt;/strong&gt;: Any version that isn&amp;rsquo;t the US English one, when that exists.</source>
          <target state="translated">&lt;strong&gt;지역, 현지화&lt;/strong&gt; : 존재하는 경우 미국 영어 버전이 아닌 모든 버전.</target>
        </trans-unit>
        <trans-unit id="ed7160aef51312cf89c23894db0dba6506fed2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Research available sources to select a URL&lt;/strong&gt;. Try removing the file name from &lt;code&gt;stable&lt;/code&gt;/&lt;code&gt;url&lt;/code&gt;, to see if this is a directory listing page. If that doesn&amp;rsquo;t work, try to find a page that links to the file (e.g. a download page). If it&amp;rsquo;s not possible to find the newest version on the website, try checking other sources from the formula/cask. When necessary, search for other sources outside of the formula/cask.</source>
          <target state="translated">&lt;strong&gt;URL을 선택하기 위해 사용 가능한 출처를 조사합니다&lt;/strong&gt; . &lt;code&gt;stable&lt;/code&gt; / &lt;code&gt;url&lt;/code&gt; 에서 파일 이름을 제거하여 이것이 디렉토리 목록 페이지인지 확인하십시오. 그래도 작동하지 않으면 파일로 연결되는 페이지 (예 : 다운로드 페이지)를 찾으십시오. 웹 사이트에서 최신 버전을 찾을 수없는 경우 공식 / 통에서 다른 출처를 확인하십시오. 필요한 경우 공식 / 통 외부의 다른 소스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="0d87dc5587b8ad6cf05db01718aee601be8e7da9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Run &lt;code&gt;brew update&lt;/code&gt; twice and &lt;code&gt;brew doctor&lt;/code&gt; (and fix all the warnings) &lt;em&gt;before&lt;/em&gt; creating an issue!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;문제 &lt;em&gt;를&lt;/em&gt; 만들기 &lt;em&gt;전에 &lt;/em&gt; &lt;code&gt;brew update&lt;/code&gt; 두 번 실행 하고 &lt;code&gt;brew doctor&lt;/code&gt; 하고 모든 경고를 수정하십시오 !&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e27dc54b2098213413dde22b41c655412519210" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stable&lt;/strong&gt;: The latest version provided by the developer defined by them as such.</source>
          <target state="translated">&lt;strong&gt;Stable&lt;/strong&gt; : 개발자가 제공하는 최신 버전으로 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ba2ab0394462650ed83afdc214bc19e61bd08127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tap&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tap&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21d8e87a8ac045b49adf36450f3e4c5f4001e3a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Trial&lt;/strong&gt;: Time-limited version that stops working entirely after it expires, requiring payment to lift the limitation.</source>
          <target state="translated">&lt;strong&gt;평가판&lt;/strong&gt; : 만료 후 완전히 작동하지 않는 시간 제한 버전으로, 제한을 해제하려면 비용을 지불해야합니다.</target>
        </trans-unit>
        <trans-unit id="34d933c3718705e601a22fc1f6c7e05159470b01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unofficial&lt;/strong&gt;: An &lt;em&gt;allegedly&lt;/em&gt; unmodified compiled binary, by a third-party, of a binary that has no existing build by the owner of the source code.</source>
          <target state="translated">&lt;strong&gt;비공식&lt;/strong&gt; : 소스 코드 소유자가 기존 빌드가없는 바이너리의 수정되지 않은 &lt;em&gt;것으로 추정되는&lt;/em&gt; 컴파일 바이너리.</target>
        </trans-unit>
        <trans-unit id="1f40d5c314129de6997873043fb5711fa863c8e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use &lt;code&gt;[._-]&lt;/code&gt; in place of a period/underscore/hyphen between the software name and version in a file name&lt;/strong&gt;. For a file named &lt;code&gt;example-1.2.3.tar.gz&lt;/code&gt;, &lt;code&gt;example[._-]v?(\d+(?:\.\d+)+)\.t&lt;/code&gt; will continue matching if the upstream file name format changes to &lt;code&gt;example_1.2.3.tar.gz&lt;/code&gt; or &lt;code&gt;example.1.2.3.tar.gz&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;파일 이름에서 소프트웨어 이름과 버전 사이에 마침표 / 밑줄 / 하이픈 대신 &lt;code&gt;[._-]&lt;/code&gt; 를 사용 합니다&lt;/strong&gt; . &lt;code&gt;example-1.2.3.tar.gz&lt;/code&gt; 라는 파일의 경우 , &lt;code&gt;example[._-]v?(\d+(?:\.\d+)+)\.t&lt;/code&gt; 는 업스트림 파일 이름 형식이 &lt;code&gt;example_1.2.3.tar.gz&lt;/code&gt; 변경되면 일치를 계속합니다 . .2.3.tar.gz 또는 &lt;code&gt;example.1.2.3.tar.gz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d968a9f0fd2795ee213ed28840e292b84097509e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use &lt;code&gt;\.t&lt;/code&gt; in place of &lt;code&gt;\.tgz&lt;/code&gt;, &lt;code&gt;\.tar\.gz&lt;/code&gt;, etc.&lt;/strong&gt; There are a variety of different file extensions for tarballs (e.g. &lt;code&gt;.tar.bz2&lt;/code&gt;, &lt;code&gt;tbz2&lt;/code&gt;, &lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.tgz&lt;/code&gt;, &lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.txz&lt;/code&gt;, etc.) and the upstream source may switch from one compression format to another over time. &lt;code&gt;\.t&lt;/code&gt; avoids this issue by matching current and future formats starting with &lt;code&gt;t&lt;/code&gt;. Outside of tarballs, we use the full file extension in the regex like &lt;code&gt;\.zip&lt;/code&gt;, &lt;code&gt;\.jar&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;\.tgz&lt;/code&gt; , &lt;code&gt;\.tar\.gz&lt;/code&gt; 등 대신 &lt;code&gt;\.t&lt;/code&gt; 를 사용하십시오 .&lt;/strong&gt; 타르볼에는 다양한 파일 확장자가 있습니다 (예 : &lt;code&gt;.tar.bz2&lt;/code&gt; , &lt;code&gt;tbz2&lt;/code&gt; , &lt;code&gt;.tar.gz&lt;/code&gt; , &lt;code&gt;.tgz&lt;/code&gt; , &lt;code&gt;.tar.xz&lt;/code&gt; , &lt;code&gt;.txz&lt;/code&gt; 등) 및 업스트림 소스는 시간이 지남에 따라 한 압축 형식에서 다른 압축 형식으로 전환 될 수 있습니다. &lt;code&gt;\.t&lt;/code&gt; 는 &lt;code&gt;t&lt;/code&gt; 로 시작하는 현재 및 미래 형식을 일치 시켜이 문제를 방지합니다 . tarball 외부에서는 &lt;code&gt;\.zip&lt;/code&gt; , &lt;code&gt;\.jar&lt;/code&gt; 등과 같은 정규 표현식의 전체 파일 확장자를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="87f12eed5e27876f00c646564f2336a687a0aba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the debug output to understand the situation&lt;/strong&gt;. &lt;code&gt;brew livecheck --debug &amp;lt;formula&amp;gt;|&amp;lt;cask&amp;gt;&lt;/code&gt; provides information about which URLs livecheck tries, any strategies that apply, matched versions, etc.</source>
          <target state="translated">&lt;strong&gt;디버그 출력을 사용하여 상황을 이해하십시오&lt;/strong&gt; . &lt;code&gt;brew livecheck --debug &amp;lt;formula&amp;gt;|&amp;lt;cask&amp;gt;&lt;/code&gt; 는 livecheck가 시도하는 URL, 적용되는 전략, 일치 버전 등에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="171070b7d30e56081aa2c75b52828f5d5d87c113" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vendorless&lt;/strong&gt;: A binary distributed without an official website, like a forum posting.</source>
          <target state="translated">&lt;strong&gt;Vendorless&lt;/strong&gt; : 포럼 게시물과 같이 공식 웹 사이트없이 배포되는 바이너리입니다.</target>
        </trans-unit>
        <trans-unit id="9b96ea4ae95080e97a55044a51c8c5a36199b075" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; When you &lt;code&gt;brew install&lt;/code&gt; formulae that provide Python bindings, you should &lt;strong&gt;not be in an active virtual environment&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; Python 바인딩을 제공하는 &lt;code&gt;brew install&lt;/code&gt; 수식을 추출 할 때는 &lt;strong&gt;활성 가상 환경에 있지 않아야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0df78e13ffe3d250166515fded5f5a73f7641530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Walled&lt;/strong&gt;: When the download URL is both behind a login/registration form and from a host that differs from the homepage.</source>
          <target state="translated">&lt;strong&gt;Walled&lt;/strong&gt; : 다운로드 URL이 로그인 / 등록 양식 뒤에 있거나 홈페이지와 다른 호스트의 URL 인 경우.</target>
        </trans-unit>
        <trans-unit id="2f5f5db92629ace35fcd59ef7161ba76de2d616c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning!&lt;/strong&gt; Python may crash (see &lt;a href=&quot;common-issues&quot;&gt;Common Issues&lt;/a&gt;) if you &lt;code&gt;import &amp;lt;module&amp;gt;&lt;/code&gt; from a brewed Python if you ran &lt;code&gt;brew install &amp;lt;formula_with_python_bindings&amp;gt;&lt;/code&gt; against the system Python. If you decide to switch to the brewed Python, then reinstall all formulae with Python bindings (e.g. &lt;code&gt;pyside&lt;/code&gt;, &lt;code&gt;wxwidgets&lt;/code&gt;, &lt;code&gt;pygtk&lt;/code&gt;, &lt;code&gt;pygobject&lt;/code&gt;, &lt;code&gt;opencv&lt;/code&gt;, &lt;code&gt;vtk&lt;/code&gt; and &lt;code&gt;boost-python&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;경고! &lt;/strong&gt;시스템 Python에 대해 &lt;code&gt;brew install &amp;lt;formula_with_python_bindings&amp;gt;&lt;/code&gt; 를 실행하면 brewed Python에서 &lt;code&gt;import &amp;lt;module&amp;gt;&lt;/code&gt; 을 가져 오면 Python이 충돌 할 수 있습니다 ( &lt;a href=&quot;common-issues&quot;&gt;일반적인 문제&lt;/a&gt; 참조 ) . 추출 된 Python으로 전환하기로 결정한 경우 Python 바인딩을 사용하여 모든 수식을 다시 설치하십시오 (예 : &lt;code&gt;pyside&lt;/code&gt; , &lt;code&gt;wxwidgets&lt;/code&gt; , &lt;code&gt;pygtk&lt;/code&gt; , &lt;code&gt;pygobject&lt;/code&gt; , &lt;code&gt;opencv&lt;/code&gt; , &lt;code&gt;vtk&lt;/code&gt; 및 &lt;code&gt;boost-python&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="77ffc10ccfedc28d435fb900804fec4246b3d3e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We don&amp;rsquo;t accept formulae without a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt;&lt;code&gt;homepage&lt;/code&gt;&lt;/a&gt;!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt; &lt;code&gt;homepage&lt;/code&gt; &lt;/a&gt; 가 없으면 공식을 사용할 수 없습니다 !&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3378d0d6b3b22d0f6a0cc3ad975088b8f2a0ad08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We don&amp;rsquo;t accept new formulae into Homebrew/homebrew-core without a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#license-class_method&quot;&gt;&lt;code&gt;license&lt;/code&gt;&lt;/a&gt;!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://rubydoc.brew.sh/Formula#license-class_method&quot;&gt; &lt;code&gt;license&lt;/code&gt; &lt;/a&gt; 없이는 Homebrew / homebrew-core에 새로운 공식을 허용하지 않습니다 !&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09fb06a7de98bfd7e61219dcff12181eaf36059f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;opt prefix&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;opt 접두사&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f996ccb9212faa7a51e45a0d3b6d5ade80b29c1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt; Sudo is dangerous, and you installed TextMate.app without sudo anyway.</source>
          <target state="translated">&lt;strong&gt;tl; dr&lt;/strong&gt; Sudo는 위험하므로 sudo없이 TextMate.app를 설치했습니다.</target>
        </trans-unit>
        <trans-unit id="5598f778a621e7dde1ef93bafb1c4168aba2298d" translate="yes" xml:space="preserve">
          <source>@HomebrewOnLinux on Twitter</source>
          <target state="translated">트위터의 @HomebrewOnLinux</target>
        </trans-unit>
        <trans-unit id="e71610593989570bcb98e35eb017bd307f14624f" translate="yes" xml:space="preserve">
          <source>@Linuxbrew on Twitter</source>
          <target state="translated">트위터에 @Linuxbrew</target>
        </trans-unit>
        <trans-unit id="aa7e66ffda0c4200893e166c427a12c3bdf75d21" translate="yes" xml:space="preserve">
          <source>@mxcl was too concerned with the beer theme and didn&amp;rsquo;t consider that the project may actually prove popular. By the time he realised it was, it was too late. However, today, the first Google hit for &amp;ldquo;homebrew&amp;rdquo; is not beer related ;‑)</source>
          <target state="translated">@mxcl은 맥주 테마에 너무 관심이 있었고 프로젝트가 실제로 인기가 있다고 생각하지 않았습니다. 그가 깨달았을 때 너무 늦었다. 그러나 오늘, &quot;homebrew&quot;에 대한 Google의 첫 히트는 맥주와 관련이 없습니다. ;-)</target>
        </trans-unit>
        <trans-unit id="b4d41aa3df45e2a37696a26fa05320179ca82ceb" translate="yes" xml:space="preserve">
          <source>A 64-bit Intel CPU &lt;sup&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">64 비트 Intel CPU &lt;sup&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="38b286712110aa3f248acd387f4bc2ea351541ae" translate="yes" xml:space="preserve">
          <source>A 64-bit Intel CPU or Apple Silicon CPU &lt;sup&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">64 비트 Intel CPU 또는 Apple Silicon CPU &lt;sup&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ac80090771237d56d5145a554d4485c105c2ebe5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;taps&quot;&gt;tap&lt;/a&gt; is Homebrew-speak for a Git repository containing extra formulae. Homebrew has the capability to add (and remove) multiple taps to your local installation with the &lt;code&gt;brew tap&lt;/code&gt; and &lt;code&gt;brew untap&lt;/code&gt; commands. Type &lt;code&gt;man brew&lt;/code&gt; in your terminal. The main repository at &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt;, often called &lt;code&gt;homebrew/core&lt;/code&gt;, is always built-in.</source>
          <target state="translated">&lt;a href=&quot;taps&quot;&gt;탭&lt;/a&gt; 추가 수식이 포함 된 Git 저장소에 대한 브루 발언이다. Homebrew에는 &lt;code&gt;brew tap&lt;/code&gt; 및 &lt;code&gt;brew untap&lt;/code&gt; 명령 을 사용하여 여러 탭을 로컬 설치에 추가 및 제거 할 수 있습니다 . 터미널에 &lt;code&gt;man brew&lt;/code&gt; 를 입력 하십시오. &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt; 의 메인 리포지토리 ( &lt;code&gt;homebrew/core&lt;/code&gt; 라고도 함 )는 항상 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfe10f58baa8b4a68e9f1eb2cfd4b3c66261d1b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;devel&lt;/code&gt; spec is specified in a block:</source>
          <target state="translated">&lt;code&gt;devel&lt;/code&gt; 사양은 블록에 지정되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fc6f3462ff116b364fddc6f850709f522def228a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;formula_renames.json&lt;/code&gt; example for a formula rename:</source>
          <target state="translated">&lt;code&gt;formula_renames.json&lt;/code&gt; 의 수식 바꾸기 예 :</target>
        </trans-unit>
        <trans-unit id="22d3b6ff42ea313028a39ead28f7eb11f4bf3cce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;keg_only :versioned_formula&lt;/code&gt; should not &lt;code&gt;post_install&lt;/code&gt; anything in the &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; that conflicts with or duplicates the main counterpart (or other versioned formulae). For example, a &lt;code&gt;node@6&lt;/code&gt; formula should not install its &lt;code&gt;npm&lt;/code&gt; into &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; like the &lt;code&gt;node&lt;/code&gt; formula does.</source>
          <target state="translated">&lt;code&gt;keg_only :versioned_formula&lt;/code&gt; 해야하지 &lt;code&gt;post_install&lt;/code&gt; 에서 아무것도 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 와의 충돌 또는 메인 대응 (또는 다른 버전이 공식을) 복제있다. 예를 들어 &lt;code&gt;node@6&lt;/code&gt; 공식은 &lt;code&gt;node&lt;/code&gt; 공식 과 같이 &lt;code&gt;npm&lt;/code&gt; 을 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 에 설치해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd944efc453a076d5773dbae076786775ae65575" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;keg_only :versioned_formula&lt;/code&gt; should not &lt;code&gt;post_install&lt;/code&gt; anything in the &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; that conflicts with or duplicates the non-versioned counterpart (or other versioned formulae). For example, a &lt;code&gt;node@6&lt;/code&gt; formula should not install its &lt;code&gt;npm&lt;/code&gt; into &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; like the &lt;code&gt;node&lt;/code&gt; formula does.</source>
          <target state="translated">&lt;code&gt;keg_only :versioned_formula&lt;/code&gt; 해야하지 &lt;code&gt;post_install&lt;/code&gt; 에서 아무것도 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 와의 충돌 또는 비 버전 대응 (또는 다른 버전 화 공식을) 복제있다. 예를 들어, &lt;code&gt;node@6&lt;/code&gt; 공식은 &lt;code&gt;node&lt;/code&gt; 공식 과 같이 &lt;code&gt;npm&lt;/code&gt; 을 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 에 설치하면 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="1cbc22fcfaa6c5bd8a399eb7107270b5e2d1ae42" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;needs response&lt;/code&gt; label on a PR means that the Homebrew maintainers need you to respond to previous comments.</source>
          <target state="translated">PR 의 &lt;code&gt;needs response&lt;/code&gt; 레이블은 Homebrew 유지 보수 담당자가 이전 의견에 응답해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f23676ea7ac91f4abb49c5220c6a879c5c60df10" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;strategy&lt;/code&gt; block for &lt;code&gt;Git&lt;/code&gt; is a bit different, as the block receives an array of tag strings instead of a page content string. Similar to the &lt;code&gt;PageMatch&lt;/code&gt; example, this is converting tags with a date format like &lt;code&gt;2020-01-01&lt;/code&gt; into &lt;code&gt;20200101&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Git&lt;/code&gt; 의 &lt;code&gt;strategy&lt;/code&gt; 블록 은 블록이 페이지 콘텐츠 문자열 대신 태그 문자열 배열을 수신 하므로 약간 다릅니다. 받는 유사 &lt;code&gt;PageMatch&lt;/code&gt; 의 예,이 같은 날짜 형식으로 태그를 변환됩니다 &lt;code&gt;2020-01-01&lt;/code&gt; 에 &lt;code&gt;20200101&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c5dd6b0c4c47c1eec42dc2b8858f7489738d370" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;formula&lt;/em&gt; is a package definition written in Ruby. It can be created with &lt;code&gt;brew create &amp;lt;URL&amp;gt;&lt;/code&gt; where &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; is a zip or tarball, installed with &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;, and debugged with &lt;code&gt;brew install --debug --verbose &amp;lt;formula&amp;gt;&lt;/code&gt;. Formulae use the &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;Formula API&lt;/a&gt; which provides various Homebrew-specific helpers.</source>
          <target state="translated">&lt;em&gt;수식&lt;/em&gt; 루비 작성된 패키지 정의된다. &lt;code&gt;brew create &amp;lt;URL&amp;gt;&lt;/code&gt; 을 사용하여 작성할 수 있습니다. 여기서 &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; 은 zip 또는 tarball이며 &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt; 로 &lt;code&gt;brew install --debug --verbose &amp;lt;formula&amp;gt;&lt;/code&gt; 되고 brew install --debug --verbose &amp;lt;formula&amp;gt;로 디버깅됩니다 . 수식 은 다양한 Homebrew 관련 도우미를 제공 하는 &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;Formula API&lt;/a&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="feb7b9a4a54c21d9536960a8839b5abf3e78224c" translate="yes" xml:space="preserve">
          <source>A Bourne-compatible shell for installation (e.g. &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt;) &lt;sup&gt;&lt;a href=&quot;#4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">설치를위한 Bourne 호환 쉘 (예 : &lt;code&gt;bash&lt;/code&gt; 또는 &lt;code&gt;zsh&lt;/code&gt; ) &lt;sup&gt;&lt;a href=&quot;#4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c898929d03b87ea3e0d90d861ee186a21f10bfda" translate="yes" xml:space="preserve">
          <source>A Git repository of &lt;strong&gt;Formulae&lt;/strong&gt; and/or commands</source>
          <target state="translated">&lt;strong&gt;수식&lt;/strong&gt; 및 / 또는 명령 의 Git 리포지토리</target>
        </trans-unit>
        <trans-unit id="186e46fca8f63e57d9aa4c09142f2097d828e147" translate="yes" xml:space="preserve">
          <source>A Hash (e.g. &lt;code&gt;=&amp;gt;&lt;/code&gt;) adds information to a dependency. Given a String or Symbol, the value can be one or more of the following values:</source>
          <target state="translated">해시 (예 : &lt;code&gt;=&amp;gt;&lt;/code&gt; )는 정보를 종속성에 추가합니다. 문자열 또는 기호가 주어지면 값은 다음 값 중 하나 이상일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec69ffb20abf1ad231b45a6cf8ab372503cc8cc7" translate="yes" xml:space="preserve">
          <source>A Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#cid&quot;&gt;analytics user ID&lt;/a&gt;, e.g. &lt;code&gt;1BAB65CC-FE7F-4D8C-AB45-B7DB5A6BA9CB&lt;/code&gt;. This is generated by &lt;code&gt;uuidgen&lt;/code&gt; and stored in the repository-specific Git configuration variable &lt;code&gt;homebrew.analyticsuuid&lt;/code&gt; within &lt;code&gt;$(brew --repository)/.git/config&lt;/code&gt;. This does not allow us to track individual users, but does enable us to accurately measure user counts versus event counts. The ID is specific to the Homebrew package manager, and does not permit Homebrew maintainers to e.g. track you across websites you visit.</source>
          <target state="translated">Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#cid&quot;&gt;분석 사용자 ID&lt;/a&gt; (예 : &lt;code&gt;1BAB65CC-FE7F-4D8C-AB45-B7DB5A6BA9CB&lt;/code&gt; ) . 이것은 &lt;code&gt;uuidgen&lt;/code&gt; 에 의해 생성되고 &lt;code&gt;$(brew --repository)/.git/config&lt;/code&gt; 내의 저장소 별 Git 구성 변수 &lt;code&gt;homebrew.analyticsuuid&lt;/code&gt; 에 저장됩니다 . 이를 통해 개별 사용자를 추적 할 수는 없지만 사용자 수와 이벤트 수를 정확하게 측정 할 수 있습니다. 이 ID는 Homebrew 패키지 관리자에 고유하며 Homebrew 관리자가 방문하는 웹 사이트에서 사용자를 추적하는 것을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7aef4a8bda798173e8fd7eddb81bdd08de1b872e" translate="yes" xml:space="preserve">
          <source>A Homebrew analytics user ID, e.g. &lt;code&gt;1BAB65CC-FE7F-4D8C-AB45-B7DB5A6BA9CB&lt;/code&gt;. This is generated by &lt;code&gt;uuidgen&lt;/code&gt; and stored in the repository-specific Git configuration variable &lt;code&gt;homebrew.analyticsuuid&lt;/code&gt; within &lt;code&gt;$(brew --repository)/.git/config&lt;/code&gt;. This does not allow us to track individual users but does enable us to accurately measure user counts vs. event counts (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#cid)</source>
          <target state="translated">사제 분석 사용자 ID, 예 &lt;code&gt;1BAB65CC-FE7F-4D8C-AB45-B7DB5A6BA9CB&lt;/code&gt; . 이것은 &lt;code&gt;uuidgen&lt;/code&gt; 에 의해 생성되며 &lt;code&gt;$(brew --repository)/.git/config&lt;/code&gt; 내의 저장소 별 Git 구성 변수 &lt;code&gt;homebrew.analyticsuuid&lt;/code&gt; 에 저장됩니다 . 이를 통해 개별 사용자를 추적 할 수는 없지만 사용자 수와 이벤트 수를 정확하게 측정 할 수 있습니다 (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#cid)</target>
        </trans-unit>
        <trans-unit id="551ee6b5796fb4edeafdaf223aa95a8807efd293" translate="yes" xml:space="preserve">
          <source>A String (e.g. &lt;code&gt;&quot;jpeg&quot;&lt;/code&gt;) specifies a formula dependency.</source>
          <target state="translated">문자열 (예 : &lt;code&gt;&quot;jpeg&quot;&lt;/code&gt; )은 수식 종속성을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bcf740d71dc8da88b34471a47e2e0bb5bfde511a" translate="yes" xml:space="preserve">
          <source>A Symbol (e.g. &lt;code&gt;:x11&lt;/code&gt;) specifies a &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/a&gt; which can be fulfilled by one or more formulae, casks or other system-wide installed software (e.g. X11).</source>
          <target state="translated">기호 (예 &lt;code&gt;:x11&lt;/code&gt; ) 는 하나 이상의 공식, 통 또는 기타 시스템 전체에 설치된 소프트웨어 (예 : X11)로 충족 될 수 있는 &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt; &lt;code&gt;Requirement&lt;/code&gt; &lt;/a&gt; 을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="08bccfead11559fdf2de6a541aab4be1af5920db" translate="yes" xml:space="preserve">
          <source>A Symbol (e.g. &lt;code&gt;:xcode&lt;/code&gt;) specifies a &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/a&gt; which can be fulfilled by one or more formulae, casks or other system-wide installed software (e.g. Xcode).</source>
          <target state="translated">기호 (예 &lt;code&gt;:xcode&lt;/code&gt; ) 는 하나 이상의 공식, 캐스 크 또는 기타 시스템 전체에 설치된 소프트웨어 (예 : Xcode)로 충족 될 수 있는 &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt; &lt;code&gt;Requirement&lt;/code&gt; &lt;/a&gt; 을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="a2d7484137ca6db883d0126409ddb35fe6ca75d9" translate="yes" xml:space="preserve">
          <source>A best effort to determine the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; will be made if the value is not supplied by the user.</source>
          <target state="translated">사용자가 값을 제공하지 않으면 &lt;em&gt; &lt;code&gt;SHA-256&lt;/code&gt; &lt;/em&gt; 을 결정하기위한 최선의 노력을 다할 것입니다.</target>
        </trans-unit>
        <trans-unit id="67c30ad83da58a5904a78309bb8c4a111d6b4900" translate="yes" xml:space="preserve">
          <source>A comma-separated list of hostnames and domain names excluded from proxying by &lt;code&gt;curl&lt;/code&gt;(1), &lt;code&gt;git&lt;/code&gt;(1) and &lt;code&gt;svn&lt;/code&gt;(1) when downloading through Homebrew.</source>
          <target state="translated">Homebrew를 통해 다운로드 할 때 &lt;code&gt;curl&lt;/code&gt; (1), &lt;code&gt;git&lt;/code&gt; (1) 및 &lt;code&gt;svn&lt;/code&gt; (1)에 의해 프록시에서 제외 된 호스트 이름 및 도메인 이름의 쉼표로 구분 된 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="72132de57cb5009c7a2ce4e55db9bcbde7ccc252" translate="yes" xml:space="preserve">
          <source>A failed build looks like this:</source>
          <target state="translated">실패한 빌드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="90214caf4d72f86fed07c017effe5949b804f5fa" translate="yes" xml:space="preserve">
          <source>A formula should be deprecated to indicate to users that the formula should not be used and will be disabled in the future. Deprecated formulae should be maintained by the Homebrew maintainers so they can still build from source and their bottles continue to work (even if unmaintained upstream). If this is not possible, they should be disabled.</source>
          <target state="translated">사용자에게 수식을 사용해서는 안되며 앞으로 비활성화 될 것임을 나타 내기 위해 수식을 더 이상 사용하지 않아야합니다. 더 이상 사용되지 않는 공식은 Homebrew 유지 관리자가 유지 관리하여 소스에서 계속 빌드 할 수 있고 병이 계속 작동하도록해야합니다 (업스트림 유지가 유지되지 않더라도). 이것이 가능하지 않으면 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="014e99675ad009d3019975d0d6e7dc16f037d8e7" translate="yes" xml:space="preserve">
          <source>A formula should be disabled to indicate to users that the formula cannot be used and will be removed in the future. Disabled formulae may no longer build from source or have working bottles.</source>
          <target state="translated">사용자에게 수식을 사용할 수 없으며 앞으로 제거 될 것임을 나타내려면 수식을 비활성화해야합니다. 비활성화 된 공식은 더 이상 소스에서 생성되거나 작동하는 병이 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="776245b0182641ff36cf102cbf276589274efe66" translate="yes" xml:space="preserve">
          <source>A formula should be removed if it does not meet our criteria for &lt;a href=&quot;acceptable-formulae&quot;&gt;acceptable formulae&lt;/a&gt; or &lt;a href=&quot;versions&quot;&gt;versioned formulae&lt;/a&gt;, has a non-open-source license, or has been disabled for over a year.</source>
          <target state="translated">공식이 &lt;a href=&quot;acceptable-formulae&quot;&gt;허용 가능한 공식&lt;/a&gt; 또는 &lt;a href=&quot;versions&quot;&gt;버전이 지정된 공식에&lt;/a&gt; 대한 기준을 충족하지 않거나 , 비 오픈 소스 라이선스가 있거나, 1 년 이상 비활성화 된 경우 공식을 제거해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1a7175f763d75a32108334f6e0c7506222f56810" translate="yes" xml:space="preserve">
          <source>A full example:</source>
          <target state="translated">전체 예 :</target>
        </trans-unit>
        <trans-unit id="2f914977c62b6dc8731eb8b1f7048d0642cfc25b" translate="yes" xml:space="preserve">
          <source>A general meeting of the members may be called by either an ordinary resolution of the PLC or a majority of the entire membership. The membership must be given at least three weeks notice of a general meeting.</source>
          <target state="translated">회원 총회는 PLC의 일반 결의 또는 전체 회원의 과반수에 의해 소집 될 수 있습니다. 회원은 총회에 대해 최소 3 주 전에 통지해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4aef626cc64c57ec317cc7dc3c4337d29ee538c" translate="yes" xml:space="preserve">
          <source>A general meeting of the members may be called by the PLC with at least three weeks notice.</source>
          <target state="translated">PLC는 회원의 총회를 최소 3 주 전에 통지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0cc70b73e89bd54fd073e19a30665502692c1f4" translate="yes" xml:space="preserve">
          <source>A good example formula for minor conflict is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/mbedtls.rb&quot;&gt;&lt;code&gt;mbedtls&lt;/code&gt;&lt;/a&gt;, which ships and compiles a &amp;ldquo;Hello World&amp;rdquo; executable. This is obviously non-essential to &lt;code&gt;mbedtls&lt;/code&gt;&amp;rsquo;s functionality, and conflict with the popular GNU &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/hello.rb&quot;&gt;&lt;code&gt;hello&lt;/code&gt;&lt;/a&gt; formula would be overkill, so we just &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/966273060ad507fea490bd931971963de8b1a1dc/Formula/mbedtls.rb#L30-L31&quot;&gt;remove it&lt;/a&gt; during the installation process.</source>
          <target state="translated">사소한 충돌에 대한 좋은 공식 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/mbedtls.rb&quot;&gt; &lt;code&gt;mbedtls&lt;/code&gt; &lt;/a&gt; 이며 &quot;Hello World&quot;실행 파일을 제공하고 컴파일합니다. 이것은 분명히 &lt;code&gt;mbedtls&lt;/code&gt; 의 기능에 필수적 이지 않으며 널리 사용되는 GNU &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/hello.rb&quot;&gt; &lt;code&gt;hello&lt;/code&gt; &lt;/a&gt; 공식 과의 충돌은 과도 할 수 있으므로 설치 과정에서 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/966273060ad507fea490bd931971963de8b1a1dc/Formula/mbedtls.rb#L30-L31&quot;&gt;제거합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b83cde496fbc9874aca7d5b632a5495987bb021" translate="yes" xml:space="preserve">
          <source>A good example formula for minor conflict is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/mbedtls.rb&quot;&gt;&lt;code&gt;mbedtls&lt;/code&gt;&lt;/a&gt;, which ships and compiles a &amp;ldquo;Hello World&amp;rdquo; executable. This is obviously non-essential to &lt;code&gt;mbedtls&lt;/code&gt;&amp;rsquo;s functionality, and conflict with the popular GNU &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/hello.rb&quot;&gt;&lt;code&gt;hello&lt;/code&gt;&lt;/a&gt; formula would be overkill, so we just &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/966273060ad507fea490bd931971963de8b1a1dc/Formula/mbedtls.rb#L30-L31&quot;&gt;remove it&lt;/a&gt; during the installation process.</source>
          <target state="translated">사소한 충돌에 대한 좋은 예 는 &quot;Hello World&quot;실행 파일을 제공하고 컴파일하는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/mbedtls.rb&quot;&gt; &lt;code&gt;mbedtls&lt;/code&gt; &lt;/a&gt; 입니다. 이것은 분명히 &lt;code&gt;mbedtls&lt;/code&gt; 의 기능에 필수적 이지 않으며 인기있는 GNU &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/hello.rb&quot;&gt; &lt;code&gt;hello&lt;/code&gt; &lt;/a&gt; 수식 과의 충돌은 지나치 므로 설치 과정에서 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/966273060ad507fea490bd931971963de8b1a1dc/Formula/mbedtls.rb#L30-L31&quot;&gt;제거합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89ce45eb997d2d92906c05bfdd1df1676539cb0e" translate="yes" xml:space="preserve">
          <source>A majority of the entire membership of the PLC is required to pass an ordinary resolution.</source>
          <target state="translated">PLC의 전체 멤버쉽의 대다수는 일반 해상도를 통과해야합니다.</target>
        </trans-unit>
        <trans-unit id="bfa3481a53fb0c22a1274dfec83c0bde02c0d827" translate="yes" xml:space="preserve">
          <source>A meeting of the PLC may be called by any two of its members with at least three weeks notice, unless all PLC members agree to a shorter notice period.</source>
          <target state="translated">모든 PLC 구성원이 짧은 통지 기간에 동의하지 않는 한 적어도 3 주 전에 통지하여 PLC 회의를 소집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9a6f11f007df2f7a1695a148e7a6379d6b85442" translate="yes" xml:space="preserve">
          <source>A member may be removed from Homebrew by an ordinary resolution of the PLC. A removed member may be reinstated by the usual admission process.</source>
          <target state="translated">구성원은 PLC의 일반적인 해결 방법에 따라 Homebrew에서 제거 될 수 있습니다. 제거 된 회원은 일반적인 입학 절차에 따라 복원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68a031f140bfe12d7e01852fcca3200597d94810" translate="yes" xml:space="preserve">
          <source>A member of the PLC may be removed from the PLC by a special resolution of the membership.</source>
          <target state="translated">PLC의 구성원은 구성원의 특별 결의에 따라 PLC에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a0746f0d6e56fc0c0dbe4b9498048234d875ab4" translate="yes" xml:space="preserve">
          <source>A member of the TSC, except the Project Leader, may be removed from the TSC by an ordinary resolution of the PLC.</source>
          <target state="translated">프로젝트 리더를 제외한 TSC의 구성원은 PLC의 일반적인 결의에 따라 TSC에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bbe21a972ec94335cdd0945bcf7f2c27e61c1c0" translate="yes" xml:space="preserve">
          <source>A non-technical decision of the Project Leader may be overruled by an ordinary resolution of the PLC.</source>
          <target state="translated">프로젝트 리더의 비 기술적 결정은 PLC의 일반적인 결의에 의해 무효화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23748515d9a191b7941308b5934e89324aae0f9c" translate="yes" xml:space="preserve">
          <source>A number of people in this situation are either forcefully linking &lt;code&gt;keg_only&lt;/code&gt; tools with &lt;code&gt;brew link --force&lt;/code&gt; or moving default system utilities out of the &lt;code&gt;PATH&lt;/code&gt; and replacing them with manually-created symlinks to the Homebrew-provided tool.</source>
          <target state="translated">이 상황에있는 많은 사람들이 &lt;code&gt;keg_only&lt;/code&gt; 도구를 &lt;code&gt;brew link --force&lt;/code&gt; 와 강제로 연결 하거나 기본 시스템 유틸리티를 &lt;code&gt;PATH&lt;/code&gt; 외부로 옮기고 Homebrew에서 제공 한 도구에 대한 수동으로 생성 된 심볼릭 링크로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="f1b1f56c3f8fed558498a446db0ffb1fed54d571" translate="yes" xml:space="preserve">
          <source>A passed build looks like this:</source>
          <target state="translated">전달 된 빌드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e0fce6e91cb5f1c3e3fb12091409b423794a086f" translate="yes" xml:space="preserve">
          <source>A piece of software that was recently released to great fanfare&amp;mdash;everyone is talking about it on Twitter and Hacker News and we&amp;rsquo;ve even gotten multiple premature submissions for it. That&amp;rsquo;s a clear case of an app that will reach the threshold in no time so that&amp;rsquo;s a PR we won&amp;rsquo;t close immediately (but may wait to merge).</source>
          <target state="translated">최근에 큰 팡파르로 출시 된 소프트웨어의 일부입니다. 모두가 Twitter와 Hacker News에서 이에 대해 이야기하고 있으며 이에 대한 조기 제출을 여러 번 받았습니다. 이는 곧 임계 값에 도달하는 앱의 분명한 경우이므로 즉시 닫지 않을 PR입니다 (하지만 병합되기를 기다릴 수 있음).</target>
        </trans-unit>
        <trans-unit id="e9542fe91ff57a06ae9842f1ca31393ee3d0c343" translate="yes" xml:space="preserve">
          <source>A poorly-worded example of a custom reason would be:</source>
          <target state="translated">사용자 지정 이유의 잘못된 단어 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="abaf0992c25f44999c715dc70109d3b11f8a4a3d" translate="yes" xml:space="preserve">
          <source>A popular app that has their own website but the developers use GitHub for hosting the binaries. That repository won&amp;rsquo;t be notable but the app may be.</source>
          <target state="translated">자체 웹 사이트가 있지만 개발자가 바이너리 호스팅을 위해 GitHub를 사용하는 인기있는 앱입니다. 그 저장소는 눈에 띄지 않지만 앱은 그럴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b59e4ac1ece2d969cf01438ac2b7385c382bc087" translate="yes" xml:space="preserve">
          <source>A possible workaround (which puts executable scripts in &lt;code&gt;~/Library/Python/&amp;lt;X&amp;gt;.&amp;lt;Y&amp;gt;/bin&lt;/code&gt;) is:</source>
          <target state="translated">가능한 해결 방법 ( &lt;code&gt;~/Library/Python/&amp;lt;X&amp;gt;.&amp;lt;Y&amp;gt;/bin&lt;/code&gt; 에 실행 가능 스크립트를 배치 )은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7db164437369494dd1546a8beddd51bdbdac6c70" translate="yes" xml:space="preserve">
          <source>A pull request is made &amp;ldquo;on&amp;rdquo; a repository; that repository is &amp;ldquo;at&amp;rdquo; a URL</source>
          <target state="translated">풀 요청은 저장소에서 &quot;온&quot;됩니다. 해당 저장소는 URL에 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ae5cb0281ae2ba3a5469a0114611456e50f32d1" translate="yes" xml:space="preserve">
          <source>A quick word on naming</source>
          <target state="translated">명명에 대한 간단한 단어</target>
        </trans-unit>
        <trans-unit id="c677b65f85c4b64467066956958e4c90f3d50070" translate="yes" xml:space="preserve">
          <source>A simple (and typical) example:</source>
          <target state="translated">간단한 (그리고 전형적인) 예 :</target>
        </trans-unit>
        <trans-unit id="1fa7324241eaa0d703030f0c5eda1eb0a3222b95" translate="yes" xml:space="preserve">
          <source>A space-separated list of licenses. Homebrew will refuse to install a formula if it or any of its dependencies has a license on this list.</source>
          <target state="translated">공백으로 구분 된 라이센스 목록입니다. Homebrew는이 목록에 라이센스가있는 경우 공식 설치를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="df54fd17af4cef84d05f7ebc59a51f41648498e6" translate="yes" xml:space="preserve">
          <source>A special resolution requires a two-thirds supermajority of the votes cast.</source>
          <target state="translated">특별 결의안은 투표의 3 분의 2를 초과하는 투표를 요구합니다.</target>
        </trans-unit>
        <trans-unit id="4d667c193726cac9296ea9953d5bb9c2efb766e4" translate="yes" xml:space="preserve">
          <source>A strip level of &lt;code&gt;-p1&lt;/code&gt; is assumed. It can be overridden using a symbol argument:</source>
          <target state="translated">스트립 레벨 &lt;code&gt;-p1&lt;/code&gt; 이 가정됩니다. symbol 인수를 사용하여 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b0b40ed9a65696ab115cbfa9c7d2e33480c0595" translate="yes" xml:space="preserve">
          <source>A symlink to the active version of a &lt;strong&gt;Keg&lt;/strong&gt;</source>
          <target state="translated">a의 활성 버전에 대한 심볼릭 링크 &lt;strong&gt;나무통&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92ab07cc893e28fa1ad9ca09a39a001707f1f218" translate="yes" xml:space="preserve">
          <source>A tap is just a Git repository so you don&amp;rsquo;t have to do anything specific when making modifications, apart from committing and pushing your changes.</source>
          <target state="translated">탭은 Git 저장소 일 뿐이므로 변경 사항을 커밋하고 푸시하는 것 외에 수정을 할 때 특정 작업을 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ae35a6959e9d7e652228e2ccc47532a444291efa" translate="yes" xml:space="preserve">
          <source>A tap is usually a Git repository available online, but you can use anything as long as it&amp;rsquo;s a protocol that Git understands, or even just a directory with files in it. If hosted on GitHub, we recommend that the repository&amp;rsquo;s name start with &lt;code&gt;homebrew-&lt;/code&gt; so the short &lt;code&gt;brew tap&lt;/code&gt; command can be used. See the &lt;a href=&quot;manpage&quot;&gt;manpage&lt;/a&gt; for more information on repository naming.</source>
          <target state="translated">탭은 일반적으로 온라인에서 사용할 수있는 Git 저장소이지만 Git이 이해하는 프로토콜이거나 파일이 들어있는 디렉토리 인 경우에만 사용할 수 있습니다. GitHub에서 호스팅되는 경우 리포지토리 이름은 &lt;code&gt;homebrew-&lt;/code&gt; 로 시작하는 것이 좋습니다. 따라서 짧은 &lt;code&gt;brew tap&lt;/code&gt; 명령을 사용할 수 있습니다. 리포지토리 이름 지정에 대한 자세한 내용은 &lt;a href=&quot;manpage&quot;&gt;맨 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7fa91dac827306d1711e336940b6dd39cabb5336" translate="yes" xml:space="preserve">
          <source>A technical decision of the Project Leader may be overruled by an ordinary resolution of the TSC.</source>
          <target state="translated">프로젝트 리더의 기술적 결정은 TSC의 일반적인 결의에 의해 기각 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe5271d9a2ef18c3a90be11a746db9bad427f11e" translate="yes" xml:space="preserve">
          <source>A temporary directory somewhere on your system</source>
          <target state="translated">시스템 어딘가에 임시 디렉토리</target>
        </trans-unit>
        <trans-unit id="40c07bfab9180dbef8a780a4634e3a9f599bf81a" translate="yes" xml:space="preserve">
          <source>A well-worded example of a custom reason would be:</source>
          <target state="translated">사용자 정의 이유의 잘 표현 된 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b502d46f95a05464f4d5dec377c55b9a70fec211" translate="yes" xml:space="preserve">
          <source>AGM: Annual General Meeting</source>
          <target state="translated">AGM : 연례 총회</target>
        </trans-unit>
        <trans-unit id="29d8dec43e88b47582179de53ef2720d981e8ab1" translate="yes" xml:space="preserve">
          <source>ARM</source>
          <target state="translated">ARM</target>
        </trans-unit>
        <trans-unit id="dad57a4c245a8007c90257aef0514c8b6a0f600c" translate="yes" xml:space="preserve">
          <source>AUTHORS</source>
          <target state="translated">AUTHORS</target>
        </trans-unit>
        <trans-unit id="8a2fc5735241f34f4072a3334b451caeba612711" translate="yes" xml:space="preserve">
          <source>Acceptable Casks</source>
          <target state="translated">허용되는 통</target>
        </trans-unit>
        <trans-unit id="33f7fdaa6af24aae269f93c52031125d409b3ebd" translate="yes" xml:space="preserve">
          <source>Acceptable Formulae</source>
          <target state="translated">허용되는 공식</target>
        </trans-unit>
        <trans-unit id="3cebff4bbbbbac809fa616d3358cfb3c99d16396" translate="yes" xml:space="preserve">
          <source>Acceptable versioned formulae</source>
          <target state="translated">허용되는 버전이 지정된 수식</target>
        </trans-unit>
        <trans-unit id="f84f561c66114fb83ff1212912978df8f7b821de" translate="yes" xml:space="preserve">
          <source>Activate a previously installed version of a formula</source>
          <target state="translated">이전에 설치된 버전의 수식 활성화</target>
        </trans-unit>
        <trans-unit id="32302041263025a4d56629de469494c15b6bda3a" translate="yes" xml:space="preserve">
          <source>Activate the virtualenv &lt;em&gt;after&lt;/em&gt; you&amp;rsquo;ve brewed, or brew in a fresh terminal window. Homebrew will still install Python modules into Homebrew&amp;rsquo;s &lt;code&gt;site-packages&lt;/code&gt; and &lt;em&gt;not&lt;/em&gt; into the virtual environment&amp;rsquo;s site-package.</source>
          <target state="translated">추출한 &lt;em&gt;후&lt;/em&gt; virtualenv를 활성화 하거나 새로운 터미널 창에서 추출하십시오. 브루은 여전히 브루의에 파이썬 모듈을 설치합니다 &lt;code&gt;site-packages&lt;/code&gt; 및 &lt;em&gt;하지&lt;/em&gt; 가상 환경의 사이트 패키지에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4d6ff44ceb83830bf440b8fa2eea2f1e800c463" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;--full&lt;/code&gt; to either the one- or two-argument invocations above to have Git make a complete clone rather than a shallow one. Full is the default for Homebrew developers.</source>
          <target state="translated">위의 1 또는 2 인수 호출에 &lt;code&gt;--full&lt;/code&gt; 을 추가 하여 Git이 얕은 클론이 아닌 완전한 클론을 만들도록하십시오. 전체는 Homebrew 개발자의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="994553e4f96408963412322ba83a2b37fa8b5c63" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;+&lt;/code&gt; to indicate that the user can choose a later version of the same license:</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 를 추가 하여 사용자가 동일한 라이선스의 최신 버전을 선택할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="974bb3aa09929b75bfd8dbbe12ec41cc5c2236ed" translate="yes" xml:space="preserve">
          <source>Add a test to the formula</source>
          <target state="translated">수식에 테스트 추가</target>
        </trans-unit>
        <trans-unit id="7fac479a8fc95492a2867e205e44b7fa10b76893" translate="yes" xml:space="preserve">
          <source>Add a valid test to the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#test-class_method&quot;&gt;&lt;code&gt;test do&lt;/code&gt;&lt;/a&gt; block of the formula. This will be run by &lt;code&gt;brew test foo&lt;/code&gt; and the &lt;a href=&quot;brew-test-bot&quot;&gt;Brew Test Bot&lt;/a&gt;.</source>
          <target state="translated">수식 의 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#test-class_method&quot;&gt; &lt;code&gt;test do&lt;/code&gt; &lt;/a&gt; 블록에 유효한 테스트를 추가하십시오 . 이것은 &lt;code&gt;brew test foo&lt;/code&gt; 와 &lt;a href=&quot;brew-test-bot&quot;&gt;Brew Test Bot에&lt;/a&gt; 의해 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="6aac2ff51cc6c97c65083840eb92c0231ef770ce" translate="yes" xml:space="preserve">
          <source>Add aliases by creating symlinks in an &lt;code&gt;Aliases&lt;/code&gt; directory in the tap root.</source>
          <target state="translated">탭 루트 의 &lt;code&gt;Aliases&lt;/code&gt; 디렉토리에 심볼릭 링크를 작성하여 별명을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="6723bfe77efc9e5b4f5ca4fecae4d160497dd5e1" translate="yes" xml:space="preserve">
          <source>Add your pushable forked repository as a new remote:</source>
          <target state="translated">푸시 가능한 분기 저장소를 새 리모컨으로 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="bf464c47d2b1a803d5d1aeee01dd79da08f8c42e" translate="yes" xml:space="preserve">
          <source>Adding Software to Homebrew</source>
          <target state="translated">Homebrew에 소프트웨어 추가</target>
        </trans-unit>
        <trans-unit id="0e50a910b17b336c5c1c495487444c456e6af994" translate="yes" xml:space="preserve">
          <source>Adding optional steps</source>
          <target state="translated">선택적 단계 추가</target>
        </trans-unit>
        <trans-unit id="8e0611293a86e3b7ca70e39ab97bf64e43495184" translate="yes" xml:space="preserve">
          <source>Additional commands, including external commands, can of course be written to provide more detailed information. There are a couple of disadvantages here. First, it means writing Ruby against a possibly changing Homebrew codebase. There will be more code to touch during refactors, and Homebrew can&amp;rsquo;t guarantee that external commands will continue to work. Second, it means designing the commands themselves, specifying input parameters and output formats.</source>
          <target state="translated">더 자세한 정보를 제공하기 위해 외부 명령을 포함한 추가 명령을 작성할 수 있습니다. 여기에는 몇 가지 단점이 있습니다. 첫째, 변경 가능한 Homebrew 코드베이스에 대해 Ruby를 작성하는 것을 의미합니다. 리팩터링 중에 더 많은 코드를 터치해야하며, Homebrew는 외부 명령이 계속 작동한다고 보장 할 수 없습니다. 둘째, 입력 매개 변수 및 출력 형식을 지정하여 명령 자체를 설계하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="585cd143deeeb1a01f6621a73f897c161836c8a3" translate="yes" xml:space="preserve">
          <source>Additional commentary that explains why Homebrew does some of the things it does.</source>
          <target state="translated">Homebrew가 그 일을하는 이유를 설명하는 추가 해설.</target>
        </trans-unit>
        <trans-unit id="1c6c65c2bc343767f9e4ceba77b11fde342eaf20" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; formulae must also not depend on proprietary software/casks except the following:</source>
          <target state="translated">또한 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;홈브류 / 코어&lt;/a&gt; 공식은 다음을 제외하고 독점 소프트웨어 / 통에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b68c301320cfd8bba2d2f0d8e5e5729014ad25e3" translate="yes" xml:space="preserve">
          <source>Additionally, if you receive &amp;ldquo;zsh compinit: insecure directories&amp;rdquo; warnings when attempting to load these completions, you may need to run this:</source>
          <target state="translated">또한 이러한 완료를로드 할 때 &quot;zsh compinit : 안전하지 않은 디렉토리&quot;경고가 표시되면 다음을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="ef551900d40a6fa2853fc9ddb5e38536500d2886" translate="yes" xml:space="preserve">
          <source>Advanced formula tricks</source>
          <target state="translated">고급 수식 트릭</target>
        </trans-unit>
        <trans-unit id="7d1e77575afadff67e6044def2840057a5f0b917" translate="yes" xml:space="preserve">
          <source>Advice on potential workarounds</source>
          <target state="translated">잠재적 해결 방법에 대한 조언</target>
        </trans-unit>
        <trans-unit id="6b80626e4d90564266c69312b55b63eb2425d6a2" translate="yes" xml:space="preserve">
          <source>After March 1, 2020, the Project Leader may not be a member of the PLC.</source>
          <target state="translated">2020 년 3 월 1 일 이후 프로젝트 리더는 PLC의 구성원이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3861135c7e5f86a96564867fc09431ce477f312d" translate="yes" xml:space="preserve">
          <source>After no code changes have happened for at least a couple of hours (ideally 24 hours) and you are confident there&amp;rsquo;s no major regressions on the current &lt;code&gt;master&lt;/code&gt; branch you can create a new Git tag. Ideally this should be signed with your GPG key. This can then be pushed to GitHub.</source>
          <target state="translated">최소 2 시간 (이상적으로는 24 시간) 동안 코드 변경이 발생하지 않고 현재 &lt;code&gt;master&lt;/code&gt; 브랜치 에 큰 회귀가 없다고 확신 하면 새 Git 태그를 만들 수 있습니다. 이상적으로는 GPG 키로 서명해야합니다. 그런 다음 GitHub로 푸시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="292daeddba49c5d95402823a22ac65abc4fbdc7e" translate="yes" xml:space="preserve">
          <source>After no code changes have happened for at least a few hours (ideally 24 hours) and you are confident there&amp;rsquo;s no major regressions on the current &lt;code&gt;master&lt;/code&gt; branch you can create a new Git tag. Ideally this should be signed with your GPG key. This can then be pushed to GitHub.</source>
          <target state="translated">최소한 몇 시간 (이상적으로 24 시간) 동안 코드 변경이 발생하지 않고 현재 &lt;code&gt;master&lt;/code&gt; 브랜치 에 큰 회귀가 없다고 확신 하면 새 Git 태그를 만들 수 있습니다. 이상적으로는 GPG 키로 서명해야합니다. 그런 다음 GitHub로 푸시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fb190ee5a88883356f320f3ad0bc50bb76d93eb" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;brew update&lt;/code&gt;, you receive a Git error warning about untracked files or local changes that would be overwritten by a checkout or merge, followed by a list of files inside your Homebrew installation.</source>
          <target state="translated">&lt;code&gt;brew update&lt;/code&gt; 를 실행 한 후 체크 아웃 또는 병합으로 덮어 쓴 추적되지 않은 파일 또는 로컬 변경 사항에 대한 Git 오류 경고가 표시되고 Homebrew 설치 내의 파일 목록이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="b0235d5549bc6d4c66cb671461a5b1319f61e33d" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;brew upgrade&lt;/code&gt;, you may notice some casks you think should be upgrading, aren&amp;rsquo;t.</source>
          <target state="translated">&lt;code&gt;brew upgrade&lt;/code&gt; 를 실행 한 후 업그레이드 해야한다고 생각하는 일부 캐스 크는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5fe62a0d0589cf7e1ffa8393f18d5f54b5568f0" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;Kegs&lt;/strong&gt; are installed here</source>
          <target state="translated">모든 &lt;strong&gt;통&lt;/strong&gt; 은 여기에 설치됩니다</target>
        </trans-unit>
        <trans-unit id="52e5842affe5fdbce72efb1d3ae78f5cad8fd08b" translate="yes" xml:space="preserve">
          <source>All internal and external Homebrew commands can provide styled &lt;code&gt;--help&lt;/code&gt; output by using lines starting with &lt;code&gt;#:&lt;/code&gt; (a comment then &lt;code&gt;:&lt;/code&gt; character in both Bash and Ruby) which are then output by &lt;code&gt;--help&lt;/code&gt;.</source>
          <target state="translated">내부 및 외부 브루 명령을 제공 할 수 스타일 &lt;code&gt;--help&lt;/code&gt; 로 시작하는 라인을 사용하여 출력을 &lt;code&gt;#:&lt;/code&gt; (후 주석 &lt;code&gt;:&lt;/code&gt; 그때 출력 갈라 루비 모두 문자) &lt;code&gt;--help&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="e0fa9e87f7bcf7c8950ccee6b45ac60428ce1bc0" translate="yes" xml:space="preserve">
          <source>All licenses are identified by their license identifier from the &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDX License List&lt;/a&gt;.</source>
          <target state="translated">모든 라이선스는 &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDX 라이선스 목록&lt;/a&gt; 의 라이선스 식별자로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="becd48e73b8c1ecad15f893af3dafc7d74cf1379" translate="yes" xml:space="preserve">
          <source>All members will follow the &lt;a href=&quot;https://github.com/Homebrew/.github/blob/HEAD/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Homebrew Code of Conduct&lt;/a&gt;. Changes to the code of conduct must be approved by the PLC.</source>
          <target state="translated">모든 회원은 &lt;a href=&quot;https://github.com/Homebrew/.github/blob/HEAD/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Homebrew 행동 강령을&lt;/a&gt; 따릅니다 . 행동 강령에 대한 변경은 PLC의 승인을 받아야합니다.</target>
        </trans-unit>
        <trans-unit id="34b77c5c77c361f7a9a274801826ef37f31566d2" translate="yes" xml:space="preserve">
          <source>All members will follow the &lt;a href=&quot;https://github.com/Homebrew/.github/blob/master/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Homebrew Code of Conduct&lt;/a&gt;. Changes to the code of conduct must be approved by the PLC.</source>
          <target state="translated">모든 회원은 &lt;a href=&quot;https://github.com/Homebrew/.github/blob/master/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Homebrew 행동 수칙을&lt;/a&gt; 따릅니다 . 행동 강령 변경은 PLC의 승인을 받아야합니다.</target>
        </trans-unit>
        <trans-unit id="0e75c91e6b4149a2e42ed03f73ff758ba5c35174" translate="yes" xml:space="preserve">
          <source>All of the Python module dependencies of the application (and their dependencies, recursively) should be declared as &lt;code&gt;resource&lt;/code&gt;s in the formula and installed into the virtualenv, as well. Each dependency should be explicitly specified; please do not rely on &lt;code&gt;setup.py&lt;/code&gt; or &lt;code&gt;pip&lt;/code&gt; to perform automatic dependency resolution, for the &lt;a href=&quot;acceptable-formulae#we-dont-like-install-scripts-that-download-unversioned-things&quot;&gt;reasons described here&lt;/a&gt;.</source>
          <target state="translated">애플리케이션의 모든 Python 모듈 종속성 (및 해당 종속성은 재귀 적으로)은 공식에서 &lt;code&gt;resource&lt;/code&gt; 로 선언되고 virtualenv에도 설치 되어야합니다 . 각 종속성은 명시 적으로 지정해야합니다. &lt;a href=&quot;acceptable-formulae#we-dont-like-install-scripts-that-download-unversioned-things&quot;&gt;여기에 설명&lt;/a&gt; 된 이유로 &lt;code&gt;setup.py&lt;/code&gt; 또는 &lt;code&gt;pip&lt;/code&gt; 를 사용하여 자동 종속성 해결을 수행 하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="165e887e0736f430a4ead11651293887f1dbb9b8" translate="yes" xml:space="preserve">
          <source>All your terminology needs can be &lt;a href=&quot;formula-cookbook#homebrew-terminology&quot;&gt;found here&lt;/a&gt;.</source>
          <target state="translated">모든 용어 요구 사항은 &lt;a href=&quot;formula-cookbook#homebrew-terminology&quot;&gt;여기에서 찾을 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5cb11451aec34e60971c961e2d5b921bff727c8" translate="yes" xml:space="preserve">
          <source>Allows you to alias your Homebrew commands. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-aliases/blob/HEAD/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="translated">Homebrew 명령의 별칭을 지정할 수 있습니다. 자세한 정보와 사용법 은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-aliases/blob/HEAD/README.md&quot;&gt; &lt;code&gt;README&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4b473542f29ff22154e643e8cfe47c8795a02c8" translate="yes" xml:space="preserve">
          <source>Allows you to alias your Homebrew commands. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-aliases/blob/master/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="translated">Homebrew 명령의 별칭을 지정할 수 있습니다. 자세한 정보 및 사용법 은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-aliases/blob/master/README.md&quot;&gt; &lt;code&gt;README&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2690032bff3c7ff137c1b4a0cffba71d1b10955" translate="yes" xml:space="preserve">
          <source>Also note that such a formula would only be compatible with the same Node major version it originally was compiled with. This means that we need to revision every formula with a Node native addon with every major version bump of the &lt;code&gt;node&lt;/code&gt; formula. To make sure we don&amp;rsquo;t overlook your formula on a Node major version bump, write a meaningful test which would fail in such a case (invoked with an ABI-incompatible Node version).</source>
          <target state="translated">또한 이러한 공식은 원래 컴파일 된 것과 동일한 Node 주 버전과 만 호환됩니다. 이것은 우리가 &lt;code&gt;node&lt;/code&gt; 공식 의 모든 주요 버전 범프와 함께 노드 기본 애드온으로 모든 공식을 수정해야 함을 의미합니다 . Node 주 버전 범프에서 수식을 간과하지 않으려면 ABI와 호환되지 않는 Node 버전으로 호출 된 경우에는 실패 할 수있는 의미있는 테스트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7175d76d5fdda2630ffa638f6cff5e30f886c5fc" translate="yes" xml:space="preserve">
          <source>Alternative Installation</source>
          <target state="translated">대체 설치</target>
        </trans-unit>
        <trans-unit id="85175f96821c72bb5767d9b8649c24e07d63f7c3" translate="yes" xml:space="preserve">
          <source>Alternative Installs</source>
          <target state="translated">대체 설치</target>
        </trans-unit>
        <trans-unit id="f1cda4c14399110aa6bb82b64f63c69472d28aac" translate="yes" xml:space="preserve">
          <source>Alternatively you could &lt;code&gt;curl&lt;/code&gt; the JSON at &lt;code&gt;https://registry.npmjs.org/&amp;lt;name&amp;gt;&lt;/code&gt; and look for the value of &lt;code&gt;versions[&amp;lt;version&amp;gt;].dist.tarball&lt;/code&gt; for the correct tarball URL.</source>
          <target state="translated">또는 &lt;code&gt;https://registry.npmjs.org/&amp;lt;name&amp;gt;&lt;/code&gt; 에서 JSON을 &lt;code&gt;curl&lt;/code&gt; 올바른 tarball URL에 대한 &lt;code&gt;versions[&amp;lt;version&amp;gt;].dist.tarball&lt;/code&gt; 값을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1d7f26651916d4f350ed734d0af1b38a52119e2" translate="yes" xml:space="preserve">
          <source>Alternatively, this will prevent analytics from ever being sent:</source>
          <target state="translated">또는 이렇게하면 분석이 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fdedef15d4b81992a54e17ccb1de2677a349da9b" translate="yes" xml:space="preserve">
          <source>Alternatively, you may provide the &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/blob/HEAD/USAGE.md#options&quot;&gt;&lt;code&gt;--no-quarantine&lt;/code&gt; flag&lt;/a&gt; at install time to not add this feature to a specific app.</source>
          <target state="translated">또는 설치시 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/blob/HEAD/USAGE.md#options&quot;&gt; &lt;code&gt;--no-quarantine&lt;/code&gt; 플래그&lt;/a&gt; 를 제공 하여이 기능을 특정 앱에 추가하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee70571402e607d0c22460a484ae6c77af9a3371" translate="yes" xml:space="preserve">
          <source>Amongst other things, the logistics of such requests are unsustainable for Homebrew Cask. Before making a request of this nature, you must read through previous related issues, as well as any other issues they link to, to get a full understanding of why that is the case, and why &amp;ldquo;but project &lt;em&gt;x&lt;/em&gt; does &lt;em&gt;y&lt;/em&gt;&amp;rdquo; arguments aren&amp;rsquo;t applicable, and not every package manager is the same.</source>
          <target state="translated">무엇보다도 이러한 요청의 물류는 Homebrew Cask에 지속 불가능합니다. 이러한 성격의 요청을하기 전에 이전의 관련 문제와 관련 문제를 모두 읽어야 그 이유와 &quot;하지만 프로젝트 &lt;em&gt;x&lt;/em&gt; 가 &lt;em&gt;y를 수행합니다&lt;/em&gt; &quot;인수가없는 이유를 완전히 이해해야합니다. t 적용 가능하며 모든 패키지 관리자가 동일하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="7024d30781ab4b96582c9d50d4e9aa9bc10057b9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;extension of Homebrew&lt;/a&gt; to describe dependencies</source>
          <target state="translated">의존성을 설명하기위한 &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;Homebrew&lt;/a&gt; 의 확장</target>
        </trans-unit>
        <trans-unit id="7962ebe6a77d83c97cfa2ab736c201ec4b151f19" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;extension of Homebrew&lt;/a&gt; to install macOS native apps</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;브루의 확장은&lt;/a&gt; 맥 OS 네이티브 응용 프로그램을 설치합니다</target>
        </trans-unit>
        <trans-unit id="3f85040a61c8ec2c87659b1b6eb785cb91012427" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;BuildError&lt;/code&gt; event category and the Homebrew formula that failed to install, e.g. &lt;code&gt;wget&lt;/code&gt; as the action and an event label e.g. &lt;code&gt;macOS 10.12&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 와 히트 유형 &lt;code&gt;BuildError&lt;/code&gt; 의 이벤트 범주 및 설치에 실패한 브루 공식, 예를 들어, &lt;code&gt;wget&lt;/code&gt; 과 활동과 및 이벤트 라벨 예를 들어, &lt;code&gt;macOS 10.12&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9302c92ffc33fae6babef60f845afc457da39a2e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;cask_install&lt;/code&gt; event category and the Homebrew cask from a non-private GitHub tap you install as the action and an event label as above. This allows us to identify the casks that need fixing and where more easily.</source>
          <target state="translated">개인용이 아닌 GitHub 의 &lt;code&gt;cask_install&lt;/code&gt; 이벤트 범주 및 Homebrew 캐스 크가 있는 &lt;code&gt;event&lt;/code&gt; 적중 유형은 위와 같이 조치 및 이벤트 레이블로 설치합니다. 이를 통해 고정이 필요한 통을 더 쉽게 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4e392d0cc01ebe365e8233f58f201a598ef6369" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;install&lt;/code&gt; event category and the Homebrew formula from a non-private GitHub tap you install plus any used options, e.g. &lt;code&gt;wget --with-pcre&lt;/code&gt; as the action and an event label e.g. &lt;code&gt;macOS 10.12, non-/usr/local, CI&lt;/code&gt; to indicate the OS version, non-standard installation location and invocation as part of CI. This allows us to identify the formulae that need fixing and where more easily.</source>
          <target state="translated">비공개 이벤트 GitHub 탭 의 &lt;code&gt;install&lt;/code&gt; 이벤트 범주 및 Homebrew 공식이 있는 &lt;code&gt;event&lt;/code&gt; 적중 유형과 함께 사용하는 옵션 (예 : &lt;code&gt;wget --with-pcre&lt;/code&gt; ) 및 이벤트 레이블 (예 : &lt;code&gt;macOS 10.12, non-/usr/local, CI&lt;/code&gt; 는 OS 버전, 비표준 설치 위치 및 CI의 일부로 호출을 나타냅니다. 이를 통해 수정이 필요한 곳과 더 쉽게 수식을 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="623aa1a7a8e860b4633699fa9522fac1b7842c76" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;event&lt;/code&gt; hit type with the &lt;code&gt;install_on_request&lt;/code&gt; event category and the Homebrew formula from a non-private GitHub tap you have requested to install (e.g. explicitly named it with a &lt;code&gt;brew install&lt;/code&gt;) plus options and an event label as above. This allows us to differentiate the formulae that users intend to install from those pulled in as dependencies.</source>
          <target state="translated">&lt;code&gt;install_on_request&lt;/code&gt; 이벤트 카테고리와 비공개 GitHub 탭의 Homebrew 공식 (예 : &lt;code&gt;brew install&lt;/code&gt; 으로 명시 적으로 이름 지정 )과 옵션 및 이벤트 레이블이 있는 &lt;code&gt;event&lt;/code&gt; 적중 유형이 위와 같이 표시됩니다. 이를 통해 사용자가 설치하려는 공식과 종속성으로 가져온 공식을 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1241af957f9eadfaf46c729bada549d4a12fc440" translate="yes" xml:space="preserve">
          <source>An SSL/TLS (https) &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt;&lt;code&gt;homepage&lt;/code&gt;&lt;/a&gt; is preferred, if one is available.</source>
          <target state="translated">사용 가능한 경우 SSL / TLS (https) &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt; &lt;code&gt;homepage&lt;/code&gt; &lt;/a&gt; 가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="fdc372bfa7d1682cf34bdc26ea50cf9110b6c93b" translate="yes" xml:space="preserve">
          <source>An additional method is available in the formula DSL.</source>
          <target state="translated">공식 DSL에는 추가 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9a3cb40ed9abedf6e1870f1aa09fb6ca4893b0e" translate="yes" xml:space="preserve">
          <source>An alternative</source>
          <target state="translated">대안</target>
        </trans-unit>
        <trans-unit id="c2613fe5faf09dcfd62b694aae33c717f5c95cf8" translate="yes" xml:space="preserve">
          <source>An app from a code repository that is not notable enough (under 30 forks, 30 watchers, 75 stars).</source>
          <target state="translated">충분히 눈에 띄지 않는 코드 저장소의 앱 (포크 30 개, 감시자 30 명, 별 75 개 미만).</target>
        </trans-unit>
        <trans-unit id="de0dce88cb945bfc4f29ed5d10f0fd0053090c3c" translate="yes" xml:space="preserve">
          <source>An arbitrary file or URL: Homebrew can install formulae via URL, e.g. &lt;code&gt;https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/git.rb&lt;/code&gt;, or from a local path. It could point to either a formula file or a bottle. In the case of a URL, the downloaded file will be cached for later use.</source>
          <target state="translated">임의의 파일 또는 URL : Homebrew는 URL (예 : &lt;code&gt;https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/git.rb&lt;/code&gt; ) 또는 로컬 경로 를 통해 공식을 설치할 수 있습니다 . 수식 파일이나 병을 가리킬 수 있습니다. URL의 경우 다운로드 한 파일은 나중에 사용하기 위해 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="985af5dfaab67c9f687e4f9272abb9c719b908b4" translate="yes" xml:space="preserve">
          <source>An arbitrary file: Homebrew can install formulae from a local path. It can point to either a formula file or a bottle.</source>
          <target state="translated">임의 파일 : Homebrew는 로컬 경로에서 수식을 설치할 수 있습니다. 공식 파일이나 병을 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90d0263465e316985f417b7098ff52681bf26e40" translate="yes" xml:space="preserve">
          <source>An arbitrary file: Homebrew can install formulae from a local path. It can point to either a formula file or a bottle. Prefix relative paths with &lt;code&gt;./&lt;/code&gt; to prevent them from being interpreted as a formula or tap name.</source>
          <target state="translated">임의 파일 : Homebrew는 로컬 경로에서 수식을 설치할 수 있습니다. 공식 파일이나 병을 가리킬 수 있습니다. 공식 또는 탭 이름으로 해석되지 않도록 상대 경로 앞에 &lt;code&gt;./&lt;/code&gt; 를 붙입니다.</target>
        </trans-unit>
        <trans-unit id="13edb0cad8ff6b4bcbd4d10d46b28841475556fa" translate="yes" xml:space="preserve">
          <source>An empty line is required before the &lt;code&gt;__END__&lt;/code&gt; line.</source>
          <target state="translated">&lt;code&gt;__END__&lt;/code&gt; 줄 앞에 빈 줄이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="19c3444095251b9280e27be1a6bb53fa44b2fe6f" translate="yes" xml:space="preserve">
          <source>An example of this is:</source>
          <target state="translated">이에 대한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="675e6eb5cbfc50ed10b820fe0b8f4943c608fa0d" translate="yes" xml:space="preserve">
          <source>An example using &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 를 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="2b8b595a150329e6cd070ea70f560f4c72101f01" translate="yes" xml:space="preserve">
          <source>An executable script for a command named &lt;code&gt;extcmd&lt;/code&gt; should be named &lt;code&gt;brew-extcmd&lt;/code&gt;. The script itself can use any suitable shebang (&lt;code&gt;#!&lt;/code&gt;) line, so an external script can be written in Bash, Ruby, or even Python. Unlike the ruby commands this file must not end with a language-specific suffix (&lt;code&gt;.sh&lt;/code&gt;, or &lt;code&gt;.py&lt;/code&gt;). This file will be run via &lt;code&gt;exec&lt;/code&gt; with some Homebrew variables set as environment variables, and passed any additional command-line arguments.</source>
          <target state="translated">이름이 &lt;code&gt;extcmd&lt;/code&gt; 인 명령의 실행 가능 스크립트 이름은 &lt;code&gt;brew-extcmd&lt;/code&gt; 입니다. 스크립트 자체는 적절한 shebang ( &lt;code&gt;#!&lt;/code&gt; ) 행을 사용할 수 있으므로 외부 스크립트를 Bash, Ruby 또는 Python으로 작성할 수 있습니다. 루비 명령과 달리이 파일은 언어 별 접미사 ( &lt;code&gt;.sh&lt;/code&gt; 또는 &lt;code&gt;.py&lt;/code&gt; ) 로 끝나서는 안됩니다 . 이 파일은 환경 변수로 설정된 일부 Homebrew 변수와 함께 &lt;code&gt;exec&lt;/code&gt; 를 통해 실행 되며 추가 명령 줄 인수를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="7d92f25a7a5e8a381ff92acfe4e36ae75298c9ec" translate="yes" xml:space="preserve">
          <source>An external command &lt;code&gt;extcmd&lt;/code&gt; implemented as a Ruby command should be named &lt;code&gt;brew-extcmd.rb&lt;/code&gt;. The command is executed by doing a &lt;code&gt;require&lt;/code&gt; on the full pathname. As the command is &lt;code&gt;require&lt;/code&gt;d, it has full access to the Homebrew &amp;ldquo;environment&amp;rdquo;, i.e. all global variables and modules that any internal command has access to. Be wary of using Homebrew internals; they may change at any time without warning.</source>
          <target state="translated">Ruby 명령으로 구현 된 외부 명령 &lt;code&gt;extcmd&lt;/code&gt; 의 이름은 &lt;code&gt;brew-extcmd.rb&lt;/code&gt; 입니다. 이 명령은 전체 경로 이름을 &lt;code&gt;require&lt;/code&gt; 하여 실행됩니다 . 이 명령은 d 가 &lt;code&gt;require&lt;/code&gt; Homebrew &quot;환경&quot;, 즉 모든 내부 명령이 액세스 할 수있는 모든 전역 변수 및 모듈에 대한 전체 액세스 권한이 있습니다. Homebrew 내부 사용에주의하십시오. 경고없이 언제든지 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fed99edb9ea82b3afb1e12489290850010765ca5" translate="yes" xml:space="preserve">
          <source>An introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="51062104b0a2a8c06d3d2303b51369f32cb36dd9" translate="yes" xml:space="preserve">
          <source>An option to avoid sudo is to use an access control list. For example:</source>
          <target state="translated">sudo를 피하는 옵션은 액세스 제어 목록을 사용하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="068c877ef49f20db249a1306e1f34feaf914cffa" translate="yes" xml:space="preserve">
          <source>An ordinary resolution requires a majority of the votes cast.</source>
          <target state="translated">일반적인 결의안은 투표의 과반수를 요구합니다.</target>
        </trans-unit>
        <trans-unit id="7e0f021d9277cbd032b6da042c46d282bd34d102" translate="yes" xml:space="preserve">
          <source>And for an authenticated HTTP proxy:</source>
          <target state="translated">인증 된 HTTP 프록시의 경우 :</target>
        </trans-unit>
        <trans-unit id="4f90a8d9b2071ff95b242efee884479cfba93ba8" translate="yes" xml:space="preserve">
          <source>And of course, you can simply &lt;code&gt;brew link &amp;lt;formula&amp;gt;&lt;/code&gt; again afterwards!</source>
          <target state="translated">물론 나중에 &lt;code&gt;brew link &amp;lt;formula&amp;gt;&lt;/code&gt; 다시 만들 수도 있습니다 !</target>
        </trans-unit>
        <trans-unit id="c899c04545880e2629c974191dacd1a8cb564498" translate="yes" xml:space="preserve">
          <source>And then to define the effects the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;s have:</source>
          <target state="translated">그리고 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt; &lt;code&gt;option&lt;/code&gt; &lt;/a&gt; 의 효과를 정의하려면 :</target>
        </trans-unit>
        <trans-unit id="410c9d9ef9c903236d47d4941484e79373e25ec6" translate="yes" xml:space="preserve">
          <source>Anonymous Aggregate User Behaviour Analytics</source>
          <target state="translated">익명의 집계 사용자 행동 분석</target>
        </trans-unit>
        <trans-unit id="f246a80372618a34242f5067ce19c01ccac126e5" translate="yes" xml:space="preserve">
          <source>Another alternative is to use &lt;code&gt;perlbrew&lt;/code&gt; to install a separate copy of Perl in your home directory, or wherever you like:</source>
          <target state="translated">또 다른 대안은 &lt;code&gt;perlbrew&lt;/code&gt; 를 사용 하여 홈 디렉토리 또는 원하는 위치에 별도의 Perl 사본을 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0d7bc450e326e837ce653a9b0c45c0adbc3f18ca" translate="yes" xml:space="preserve">
          <source>Another example would be configuration files that should not be overwritten on package upgrades. If after installation you find that to-be-persisted configuration files are not copied but instead &lt;em&gt;symlinked&lt;/em&gt; into &lt;code&gt;/usr/local/etc/&lt;/code&gt; from the Cellar, this can often be rectified by passing an appropriate argument to the package&amp;rsquo;s configure script. That argument will vary depending on a given package&amp;rsquo;s configure script and/or Makefile, but one example might be: &lt;code&gt;--sysconfdir=#{etc}&lt;/code&gt;</source>
          <target state="translated">다른 예로는 패키지 업그레이드시 덮어 쓰지 않아야하는 구성 파일이 있습니다. 설치 후 지속 구성 파일이 복사되지 않고 &lt;em&gt;Cellar&lt;/em&gt; 에서 &lt;code&gt;/usr/local/etc/&lt;/code&gt; 로 &lt;em&gt;심볼릭 링크&lt;/em&gt; 되어 있는 경우, 패키지의 구성 스크립트에 적절한 인수를 전달하여 수정 될 수 있습니다. 해당 인수는 지정된 패키지의 구성 스크립트 및 / 또는 Makefile에 따라 달라 지지만 한 가지 예는 다음과 같습니다. &lt;code&gt;--sysconfdir=#{etc}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbac9b4083778d1fe1c321c0ca6f287d15dffa3f" translate="yes" xml:space="preserve">
          <source>Any approved amendments will take effect three weeks after the close of voting.</source>
          <target state="translated">승인 된 모든 개정안은 투표 마감 3 주 후에 발효됩니다.</target>
        </trans-unit>
        <trans-unit id="5b25c04c4d6dcdb7973c038304e1d95b5f4ef994" translate="yes" xml:space="preserve">
          <source>Any member may propose an amendment via pull request on GitHub against this document.</source>
          <target state="translated">모든 회원은이 문서에 대한 GitHub의 풀 요청을 통해 수정안을 제안 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7960f14e75c6313c4c35127a47de7ded724df84c" translate="yes" xml:space="preserve">
          <source>Any member may refer any question or dispute to the PLC. All technical matters should first be referred to the TSC. Non-technical matters may be referred directly to the PLC. Members will make a good faith effort to resolve any disputes prior to referral to the PLC.</source>
          <target state="translated">모든 회원은 질문이나 분쟁을 PLC에 문의 할 수 있습니다. 모든 기술 문제는 먼저 TSC에 문의해야합니다. 비 기술적 인 문제는 PLC에 직접 언급 될 수 있습니다. 회원은 PLC에 의뢰하기 전에 분쟁을 해결하기 위해 성실히 노력할 것입니다.</target>
        </trans-unit>
        <trans-unit id="2fd1cc47135143c7a736004a22e36cc0e1ce5dca" translate="yes" xml:space="preserve">
          <source>Any member may refer any question or dispute to the PLC. All technical matters should first be referred to the TSC. Non-technical matters may be referred directly to the PLC. Members will make a good faith effort to resolve any disputes with compromise prior to referral to the PLC.</source>
          <target state="translated">모든 회원은 질문이나 분쟁을 PLC에 회부 할 수 있습니다. 모든 기술 문제는 먼저 TSC에 문의해야합니다. 비 기술적 인 문제는 PLC에 직접 문의 할 수 있습니다. 회원은 PLC에 회부하기 전에 타협이있는 모든 분쟁을 해결하기 위해 성실하게 노력합니다.</target>
        </trans-unit>
        <trans-unit id="4dd56de3285782a105481e64616f618cb3e430e9" translate="yes" xml:space="preserve">
          <source>Any member may refer any technical question or dispute to the TSC. Members will make a good faith effort to resolve any disputes prior to referral to the TSC.</source>
          <target state="translated">회원은 기술 관련 질문이나 분쟁을 TSC에 회부 할 수 있습니다. 회원은 TSC에 의뢰하기 전에 분쟁을 해결하기 위해 성실히 노력할 것입니다.</target>
        </trans-unit>
        <trans-unit id="401e772ab8ca2e0abb643c972a94e855bbd8f4c8" translate="yes" xml:space="preserve">
          <source>Any member may refer any technical question or dispute to the TSC. Members will make a good faith effort to resolve any disputes with compromise prior to referral to the TSC.</source>
          <target state="translated">모든 회원은 기술적 인 질문이나 분쟁을 TSC에 회부 할 수 있습니다. 회원은 TSC에 회부하기 전에 타협과 관련된 모든 분쟁을 해결하기 위해 성실하게 노력할 것입니다.</target>
        </trans-unit>
        <trans-unit id="8e9598ccdc4a8cb45b4a20d4bac8636010f6017e" translate="yes" xml:space="preserve">
          <source>Any vacancy of the Project Leader will be filled by appointment of the PLC.</source>
          <target state="translated">PLC를 임명하면 프로젝트 리더의 공석이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="48f4b58e14066379ba42db06a6fcb2264dcbfa45" translate="yes" xml:space="preserve">
          <source>Append these options to all &lt;code&gt;cask&lt;/code&gt; commands. All &lt;code&gt;--*dir&lt;/code&gt; options, &lt;code&gt;--language&lt;/code&gt;, &lt;code&gt;--require-sha&lt;/code&gt;, &lt;code&gt;--no-quarantine&lt;/code&gt; and &lt;code&gt;--no-binaries&lt;/code&gt; are supported. For example, you might add something like the following to your &lt;code&gt;~/.profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, or &lt;code&gt;~/.zshenv&lt;/code&gt;:</source>
          <target state="translated">이 옵션을 모든 &lt;code&gt;cask&lt;/code&gt; 명령에 추가하십시오 . 모든 &lt;code&gt;--*dir&lt;/code&gt; 옵션은 &lt;code&gt;--language&lt;/code&gt; , &lt;code&gt;--require-sha&lt;/code&gt; , &lt;code&gt;--no-quarantine&lt;/code&gt; 및 &lt;code&gt;--no-binaries&lt;/code&gt; 지원됩니다. 예를 들어 &lt;code&gt;~/.profile&lt;/code&gt; , &lt;code&gt;~/.bash_profile&lt;/code&gt; 또는 &lt;code&gt;~/.zshenv&lt;/code&gt; 에 다음과 같은 내용을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c583b4c4b65a7d36a74f348c96aa245602aa372" translate="yes" xml:space="preserve">
          <source>Apple has assigned this directory for non-system utilities. This means there are no files in &lt;code&gt;/usr/local&lt;/code&gt; by default, so there is no need to worry about messing up existing or system tools.</source>
          <target state="translated">Apple은 비 시스템 유틸리티에이 디렉토리를 지정했습니다. 이는 기본적으로 &lt;code&gt;/usr/local&lt;/code&gt; 에 파일 이 없으므로 기존 도구 나 시스템 도구를 엉망으로 만들 걱정이 없습니다.</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="47f9243776cfe5818704bf61d98600e0e98525d8" translate="yes" xml:space="preserve">
          <source>Applications should be installed into a Python &lt;a href=&quot;https://virtualenv.pypa.io/en/stable/&quot;&gt;virtualenv&lt;/a&gt; environment rooted in &lt;code&gt;libexec&lt;/code&gt;. This prevents the app&amp;rsquo;s Python modules from contaminating the system site-packages and vice versa.</source>
          <target state="translated">&lt;code&gt;libexec&lt;/code&gt; 에 기반한 Python &lt;a href=&quot;https://virtualenv.pypa.io/en/stable/&quot;&gt;virtualenv&lt;/a&gt; 환경에 애플리케이션을 설치해야합니다 . 이렇게하면 앱의 Python 모듈이 시스템 사이트 패키지를 오염시키지 않으며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="ab71efefeb495d69c021595cfd966b81daec352b" translate="yes" xml:space="preserve">
          <source>Applications should unconditionally bundle all of their Python-language dependencies and libraries and should install any unsatisfied dependencies; these strategies are discussed in depth in the following sections.</source>
          <target state="translated">응용 프로그램은 모든 Python 언어 종속성 및 라이브러리를 무조건 번들로 묶어야하며 만족스럽지 않은 모든 종속성을 설치해야합니다. 이러한 전략은 다음 섹션에서 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8106e3a4db5f2f9fcbc813328fb7fe84d390add7" translate="yes" xml:space="preserve">
          <source>Applications that are compatible with Python 2 &lt;strong&gt;should&lt;/strong&gt; use the Apple-provided system Python in &lt;code&gt;/usr/bin&lt;/code&gt; on systems that provide Python 2.7. No explicit Python dependency is needed since &lt;code&gt;/usr/bin&lt;/code&gt; is always in &lt;code&gt;PATH&lt;/code&gt; for Homebrew formulae.</source>
          <target state="translated">파이썬 2와 호환되는 응용 프로그램이 &lt;strong&gt;있어야&lt;/strong&gt; 에 애플에서 제공하는 시스템 파이썬을 사용 &lt;code&gt;/usr/bin&lt;/code&gt; 파이썬 2.7을 제공하는 시스템. &lt;code&gt;/usr/bin&lt;/code&gt; 이 항상 Homebrew 공식의 &lt;code&gt;PATH&lt;/code&gt; 에 있으므로 명시적인 Python 종속성이 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="da20ed87cb33dcb8666690769c619374c8a50f28" translate="yes" xml:space="preserve">
          <source>Apply the bottle commit and publish bottles to Bintray or GitHub Releases.</source>
          <target state="translated">병 커밋을 적용하고 병을 Bintray 또는 GitHub 릴리스에 게시합니다.</target>
        </trans-unit>
        <trans-unit id="9c4cdf1ec43f4c36a71eeedf414837d1cf98d632" translate="yes" xml:space="preserve">
          <source>Apps that bundle malware</source>
          <target state="translated">멀웨어를 번들로 제공하는 앱</target>
        </trans-unit>
        <trans-unit id="3c5584fb37b88a7f3aeccc8d18836b7442143330" translate="yes" xml:space="preserve">
          <source>Are you missing your favorite software in Homebrew? Then you&amp;rsquo;re the perfect person to resolve this problem.</source>
          <target state="translated">Homebrew에서 좋아하는 소프트웨어를 놓치고 있습니까? 그렇다면 당신은이 문제를 해결할 수있는 완벽한 사람입니다.</target>
        </trans-unit>
        <trans-unit id="2f296dfc4fc991e872722cadb1e4f4650bc3f96b" translate="yes" xml:space="preserve">
          <source>As Homebrew became primarily a binary package manager, most users were fulfilling &lt;code&gt;Requirement&lt;/code&gt;s with the &lt;code&gt;default_formula&lt;/code&gt;, not with arbitrary alternatives. To improve quality and reduce variation, Homebrew now exclusively supports using the default formula, as an ordinary dependency, and no longer supports using arbitrary alternatives.</source>
          <target state="translated">브루 주로 바이너리 패키지 관리자되면서, 대부분의 사용자가 수행 한 &lt;code&gt;Requirement&lt;/code&gt; s를 가진 &lt;code&gt;default_formula&lt;/code&gt; 이 아닌 임의의 대안은. 품질을 개선하고 변형을 줄이기 위해 이제 Homebrew는 기본 수식을 일반 종속성으로 독점적으로 지원하며 더 이상 임의의 대안을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b54e964064aa2d092bdbc52529684622e21a6ffa" translate="yes" xml:space="preserve">
          <source>As a general rule, &lt;a href=&quot;https://rubydoc.brew.sh/Formula#conflicts_with-class_method&quot;&gt;&lt;code&gt;conflicts_with&lt;/code&gt;&lt;/a&gt; should be a last-resort option. It&amp;rsquo;s a fairly blunt instrument.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#conflicts_with-class_method&quot;&gt; &lt;code&gt;conflicts_with&lt;/code&gt; &lt;/a&gt; 는 마지막 복원 옵션이어야합니다. 상당히 무뚝뚝한 악기입니다.</target>
        </trans-unit>
        <trans-unit id="5cea5ed4edfac807d25132e2d8d86f85d883d58e" translate="yes" xml:space="preserve">
          <source>As a result, we recommend you give formulae a different name if you want to make them easier to install. Note that there is (intentionally) no way of replacing dependencies of core formulae with those from taps.</source>
          <target state="translated">따라서 수식을 더 쉽게 설치하려면 수식에 다른 이름을 지정하는 것이 좋습니다. 핵심 공식의 종속성을 탭의 종속성으로 대체하는 방법은 의도적으로 없습니다.</target>
        </trans-unit>
        <trans-unit id="dddf73cd98dcce7c884fe24956533693e61e8e3f" translate="yes" xml:space="preserve">
          <source>As an example:</source>
          <target state="translated">예로서:</target>
        </trans-unit>
        <trans-unit id="13b6417553a10adebeb6be7d437fe7c5b9a4103e" translate="yes" xml:space="preserve">
          <source>As far as we can tell it would be impossible for Google to match the randomly generated Homebrew-only analytics user ID to any other Google Analytics user ID. If Google turned evil the only thing they could do would be to lie about anonymising IP addresses and attempt to match users based on IP addresses.</source>
          <target state="translated">Google에서 임의로 생성 된 Homebrew 전용 분석 사용자 ID를 다른 Google Analytics 사용자 ID와 일치시키는 것은 불가능합니다. Google이 악의로 변한 경우 익명 IP 주소에 대해 거짓말을하고 IP 주소를 기반으로 사용자를 일치시키는 것만 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef54e6b931df8b368206ea8bb35e57773347036f" translate="yes" xml:space="preserve">
          <source>As you&amp;rsquo;re likely aware, a lot of macOS software can upgrade itself:</source>
          <target state="translated">아시다시피 많은 macOS 소프트웨어가 스스로 업그레이드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4946dc1ae7f3ba4c86d7842c0afeffe0d567d83" translate="yes" xml:space="preserve">
          <source>Ask for clarification of anything you don&amp;rsquo;t understand and for help with anything you don&amp;rsquo;t know how to do.</source>
          <target state="translated">이해하지 못하는 것은 무엇인지 명확하게하고 방법을 모르는 것은 도움을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="9a854abe110d1c58236ebdb8aa56ed7f9ca41e4c" translate="yes" xml:space="preserve">
          <source>At Homebrew, we like to put the name of the formula up front like so: &lt;code&gt;foobar 7.3 (new formula)&lt;/code&gt;. This may seem crazy short, but you&amp;rsquo;ll find that forcing yourself to summarise the commit encourages you to be atomic and concise. If you can&amp;rsquo;t summarise it in 50-80 characters, you&amp;rsquo;re probably trying to commit two commits as one. For a more thorough explanation, please read Tim Pope&amp;rsquo;s excellent blog post, &lt;a href=&quot;https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;A Note About Git Commit Messages&lt;/a&gt;.</source>
          <target state="translated">Homebrew에서 우리는 공식의 이름을 &lt;code&gt;foobar 7.3 (new formula)&lt;/code&gt; 과 같이 앞에두고 싶습니다 . 이것은 미치게 보일지 모르지만, 커밋을 요약하도록 강요하면 원자적이고 간결 해집니다. 50-80 자로 요약 할 수 없다면 두 개의 커밋을 하나로 커밋하려고 시도한 것입니다. 보다 자세한 설명은 Tim Pope의 훌륭한 블로그 게시물 인 &lt;a href=&quot;https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;Git Commit Messages에 대한 참고 사항을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41dded417052424bdcf3c39f6c8664147fae6806" translate="yes" xml:space="preserve">
          <source>Atom</source>
          <target state="translated">Atom</target>
        </trans-unit>
        <trans-unit id="11181d366dbeae43e196f45009bdf2ffc1fb288a" translate="yes" xml:space="preserve">
          <source>Audit the formula</source>
          <target state="translated">공식 감사</target>
        </trans-unit>
        <trans-unit id="4cb5ef29c094696fc8ed8b094db0ee990657c91b" translate="yes" xml:space="preserve">
          <source>Automatically check for updates once per this seconds interval.</source>
          <target state="translated">이 초 간격마다 업데이트를 자동으로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="71ca70704010ae80e6d0285de88e2d35ae94f2fe" translate="yes" xml:space="preserve">
          <source>Automatically determine the installation prefix for non-Homebrew software. Using the output from this command, you can install your own software into the Cellar and then link it into Homebrew&amp;rsquo;s prefix with &lt;code&gt;brew link&lt;/code&gt;.</source>
          <target state="translated">Homebrew 이외의 소프트웨어에 대한 설치 접두사를 자동으로 결정합니다. 이 명령의 출력을 사용하여 고유 한 소프트웨어를 Cellar에 설치 한 다음 &lt;code&gt;brew link&lt;/code&gt; 가있는 Homebrew의 접두사에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97ef6898f36f06470559f4724b00c45b21757749" translate="yes" xml:space="preserve">
          <source>Avoid gender-specific language when not necessary</source>
          <target state="translated">필요하지 않은 경우 성별에 따른 언어를 피하십시오</target>
        </trans-unit>
        <trans-unit id="f27b4498916a33880b824b737f7942a5ce32dac3" translate="yes" xml:space="preserve">
          <source>Avoiding sudo altogether for Perl</source>
          <target state="translated">Perl에 대한 sudo를 완전히 피하십시오</target>
        </trans-unit>
        <trans-unit id="81758ac7a6165269b9e7cc6a784800c6a6db6aaa" translate="yes" xml:space="preserve">
          <source>Await feedback or a merge from Homebrew&amp;rsquo;s maintainers. We typically respond to all PRs within a couple days, but it may take up to a week, depending on the maintainers&amp;rsquo; workload.</source>
          <target state="translated">Homebrew의 관리자에게 피드백 또는 병합을 기다리십시오. 일반적으로 며칠 내에 모든 PR에 응답하지만 관리자의 작업 부하에 따라 최대 1 주일이 소요될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dda8c520f4fbfda1830a8a497556d722a3fd113" translate="yes" xml:space="preserve">
          <source>BUGS</source>
          <target state="translated">BUGS</target>
        </trans-unit>
        <trans-unit id="cc37fd3a1ca362cb350073e98a2f7ce5dd93ac86" translate="yes" xml:space="preserve">
          <source>Bad makefiles</source>
          <target state="translated">나쁜 makefile</target>
        </trans-unit>
        <trans-unit id="f4d52093053a68096de508ccde5c9eb529d2330c" translate="yes" xml:space="preserve">
          <source>Basic instructions</source>
          <target state="translated">기본 지침</target>
        </trans-unit>
        <trans-unit id="4f6a61d1d048a2e80dafb6f831e8fbe69298b96f" translate="yes" xml:space="preserve">
          <source>Be careful as this is a destructive operation.</source>
          <target state="translated">이것은 파괴적인 작업이므로주의하십시오.</target>
        </trans-unit>
        <trans-unit id="efb94bf3c7a7244e4e3a6625062ad810f5a401bf" translate="yes" xml:space="preserve">
          <source>Before creating the tag you should delete any &lt;code&gt;odisabled&lt;/code&gt; code, make any &lt;code&gt;odeprecated&lt;/code&gt; code &lt;code&gt;odisabled&lt;/code&gt; and add any new &lt;code&gt;odeprecations&lt;/code&gt; that are desired.</source>
          <target state="translated">태그를 만들기 전에 &lt;code&gt;odisabled&lt;/code&gt; 코드를 삭제하고 &lt;code&gt;odeprecated&lt;/code&gt; 코드를 &lt;code&gt;odisabled&lt;/code&gt; 로 만들고 원하는 새로운 &lt;code&gt;odeprecations&lt;/code&gt; 을 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="de1d6f3f3ffd0cf4a9af89949ad7187b289cba0e" translate="yes" xml:space="preserve">
          <source>Before creating the tag you should delete any &lt;code&gt;odisabled&lt;/code&gt; code, make any &lt;code&gt;odeprecated&lt;/code&gt; code &lt;code&gt;odisabled&lt;/code&gt;, uncomment any &lt;code&gt;# odeprecated&lt;/code&gt; code and add any new &lt;code&gt;odeprecations&lt;/code&gt; that are desired.</source>
          <target state="translated">당신이 어떤 삭제해야 태그 만들기 전에 &lt;code&gt;odisabled&lt;/code&gt; 코드를, 어떤 만들 &lt;code&gt;odeprecated&lt;/code&gt; 코드 &lt;code&gt;odisabled&lt;/code&gt; , 주석 어떤 &lt;code&gt;# odeprecated&lt;/code&gt; 코드와 새로운 추가 &lt;code&gt;odeprecations&lt;/code&gt; 요구된다.</target>
        </trans-unit>
        <trans-unit id="a048e8aa5030610dcad594a448becb2caf5487ca" translate="yes" xml:space="preserve">
          <source>Before submitting a Cask to any of our repos, you must read &lt;a href=&quot;#finding-a-home-for-your-cask&quot;&gt;our documentation on acceptable Casks&lt;/a&gt; and perform a (at least quick) search to see if there were any previous attempts to introduce it.</source>
          <target state="translated">우리의 저장소에 Cask를 제출하기 전에 &lt;a href=&quot;#finding-a-home-for-your-cask&quot;&gt;수용 가능한&lt;/a&gt; Cask에 대한 문서를 읽고 (적어도 빠른) 검색을 수행하여 이전에 도입하려는 시도가 있었는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="a1b6f70554e1c6f71a8c4f6370e3079d23b9f2c6" translate="yes" xml:space="preserve">
          <source>Before submitting a new formula make sure you read over our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;contribution guidelines&lt;/a&gt;.</source>
          <target state="translated">새 공식을 제출하기 전에 Google의 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;기여 가이드 라인&lt;/a&gt; 을 읽어 보시기 바랍니다 .</target>
        </trans-unit>
        <trans-unit id="784ebc0c18d63e014eee6e4582fc1f866cd6699d" translate="yes" xml:space="preserve">
          <source>Before submitting a new formula make sure you read over our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;contribution guidelines&lt;/a&gt;.</source>
          <target state="translated">새 공식을 제출하기 전에 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;기여 가이드 라인&lt;/a&gt; 을 반드시 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="c1667649b0a52dfbd50fe0e392ec1033ae016af8" translate="yes" xml:space="preserve">
          <source>Before submitting a new formula make sure your package:</source>
          <target state="translated">새로운 공식을 제출하기 전에 패키지를 확인하십시오 :</target>
        </trans-unit>
        <trans-unit id="7a09df7d03219d3a7c22a3b375d896c4217a526a" translate="yes" xml:space="preserve">
          <source>Before submitting a trial, make sure it can be made into a full working version without the need to be redownloaded. If an App provides a trial but the only way to buy the full version is via the Mac App Store, it does not belong in any of the official repos. Freemium versions are fine.</source>
          <target state="translated">평가판을 제출하기 전에 다시 다운로드 할 필요없이 정식 버전으로 만들 수 있는지 확인하십시오. 앱이 평가판을 제공하지만 정식 버전을 구입하는 유일한 방법이 Mac App Store를 통해서라면 공식 리포지토리에 속하지 않습니다. 부분 유료화 버전은 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="b123b7015a0b73e5de2d533c41ffb7f49e565984" translate="yes" xml:space="preserve">
          <source>Before you start, please check the open pull requests for &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;homebrew-core&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/pulls&quot;&gt;linuxbrew-core&lt;/a&gt;, to make sure no one else beat you to the punch.</source>
          <target state="translated">시작하기 전에 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;homebrew-core&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/pulls&quot;&gt;linuxbrew-core에&lt;/a&gt; 대한 공개 풀 요청을 확인하여 다른 사람이 당신을 이길 수 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="add9c0eb58dda120ea1e575e5903461f6dc59942" translate="yes" xml:space="preserve">
          <source>Beta, Unstable, Development, Nightly, or Legacy</source>
          <target state="translated">베타, 불안정, 개발, 야간 또는 레거시</target>
        </trans-unit>
        <trans-unit id="967382f86044b6efc91dfee8f4e2b4ed941211cd" translate="yes" xml:space="preserve">
          <source>Bindings</source>
          <target state="translated">Bindings</target>
        </trans-unit>
        <trans-unit id="84119209b15b17b1d219b85b28464df00cdfafee" translate="yes" xml:space="preserve">
          <source>Bindings are a special case of libraries that allow Python code to interact with a library or application implemented in another language.</source>
          <target state="translated">바인딩은 파이썬 코드가 다른 언어로 구현 된 라이브러리 나 응용 프로그램과 상호 작용할 수 있도록하는 특수한 라이브러리 사례입니다.</target>
        </trans-unit>
        <trans-unit id="f14acd8fab7f5603b254669cceb8492ab78e7443" translate="yes" xml:space="preserve">
          <source>Bindings should follow the same advice for Python module dependencies as libraries; see below for more.</source>
          <target state="translated">바인딩은 파이썬 모듈 의존성에 대해 라이브러리와 같은 조언을 따라야합니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aa14ddbb1e2699aaf0b41c8e4b66445c8eb6f00a" translate="yes" xml:space="preserve">
          <source>Bottle DSL (Domain Specific Language)</source>
          <target state="translated">병 DSL (도메인 특정 언어)</target>
        </trans-unit>
        <trans-unit id="b80e36933cfde95bba4ed0109df590ead315debe" translate="yes" xml:space="preserve">
          <source>Bottles</source>
          <target state="translated">Bottles</target>
        </trans-unit>
        <trans-unit id="ebfd2a9e249f645f2700b5cece8c06ac50f53727" translate="yes" xml:space="preserve">
          <source>Bottles (Binary Packages)</source>
          <target state="translated">병 (바이너리 패키지)</target>
        </trans-unit>
        <trans-unit id="89596860c32e469f3018ed75b0e206ab8a281fba" translate="yes" xml:space="preserve">
          <source>Bottles (binary packages)</source>
          <target state="translated">병 (이진 패키지)</target>
        </trans-unit>
        <trans-unit id="b9cd6baa8a0b150d3b4354534eb00534b6ace463" translate="yes" xml:space="preserve">
          <source>Bottles are created using the &lt;a href=&quot;brew-test-bot&quot;&gt;Brew Test Bot&lt;/a&gt;, usually when people submit pull requests to Homebrew. The &lt;code&gt;bottle do&lt;/code&gt; block is updated by maintainers when they merge a pull request. For the Homebrew organisations&amp;rsquo; taps they are uploaded to and downloaded from &lt;a href=&quot;https://bintray.com/homebrew&quot;&gt;Bintray&lt;/a&gt;.</source>
          <target state="translated">병은 일반적으로 사람들이 Homebrew에 pull 요청을 제출할 때 &lt;a href=&quot;brew-test-bot&quot;&gt;Brew Test Bot을&lt;/a&gt; 사용하여 생성됩니다 . &lt;code&gt;bottle do&lt;/code&gt; 가 끌어 오기 요청을 병합 할 때 블록은 관리자들에 의해 업데이트됩니다. Homebrew 조직의 탭의 경우 &lt;a href=&quot;https://bintray.com/homebrew&quot;&gt;Bintray에&lt;/a&gt; 업로드되고 다운로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc6f4b830ffae9ea75f365c9edcf5baa708c8d08" translate="yes" xml:space="preserve">
          <source>Bottles are created using the &lt;a href=&quot;brew-test-bot&quot;&gt;Brew Test Bot&lt;/a&gt;. This happens mostly when people submit pull requests to Homebrew and the &lt;code&gt;bottle do&lt;/code&gt; block is updated by maintainers when they &lt;code&gt;brew pull --bottle&lt;/code&gt; the contents of a pull request. For the Homebrew organisations&amp;rsquo; taps they are uploaded to and downloaded from &lt;a href=&quot;https://bintray.com/homebrew&quot;&gt;Bintray&lt;/a&gt;.</source>
          <target state="translated">병은 &lt;a href=&quot;brew-test-bot&quot;&gt;Brew 테스트 봇을&lt;/a&gt; 사용하여 생성됩니다 . 이것은 주로 사람들이 Homebrew에 끌어 오기 요청을 제출할 때 발생하며, &lt;code&gt;brew pull --bottle&lt;/code&gt; 는 끌어 오기 를 추출 할 때 관리자 가 끌어 오기 요청의 내용을 &lt;code&gt;bottle do&lt;/code&gt; 업데이트합니다 . Homebrew 조직의 탭은 &lt;a href=&quot;https://bintray.com/homebrew&quot;&gt;Bintray에&lt;/a&gt; 업로드 및 다운로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="aea9b72587fa3c0ae7f326c9c45974eb01ad92d1" translate="yes" xml:space="preserve">
          <source>Bottles are produced by installing a formula with &lt;code&gt;brew install --build-bottle &amp;lt;formula&amp;gt;&lt;/code&gt; and then bottling it with &lt;code&gt;brew bottle &amp;lt;formula&amp;gt;&lt;/code&gt;. This outputs the bottle DSL which should be inserted into the formula file.</source>
          <target state="translated">&lt;code&gt;brew install --build-bottle &amp;lt;formula&amp;gt;&lt;/code&gt; 을 사용 하여 공식을 설치 한 다음 &lt;code&gt;brew bottle &amp;lt;formula&amp;gt;&lt;/code&gt; 을 사용 하여 병 을 병에 넣습니다 . 그러면 수식 파일에 삽입해야하는 병 DSL이 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="ec727f3e58a4e24a5f2538c1db605f8397a3bb05" translate="yes" xml:space="preserve">
          <source>Bottles are simple gzipped tarballs of compiled binaries. Any metadata is stored in a formula&amp;rsquo;s bottle DSL and in the bottle filename (i.e. macOS version, revision).</source>
          <target state="translated">병은 컴파일 된 이진 파일의 간단한 압축 된 타르볼입니다. 모든 메타 데이터는 공식의 bottle DSL 및 bottle 파일 이름 (예 : macOS 버전, 개정판)에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="46c1cada7e12b3879f080e83254e5bca09d37029" translate="yes" xml:space="preserve">
          <source>Bottles have a DSL to be used in formulae which is contained in the &lt;code&gt;bottle do ... end&lt;/code&gt; block.</source>
          <target state="translated">병에는 &lt;code&gt;bottle do ... end&lt;/code&gt; 블록에 포함 된 공식에 사용되는 DSL이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="75698d815c51168d7365d71d872068b9cc7cbca1" translate="yes" xml:space="preserve">
          <source>Bottles will not be used if the user requests it (see above), if the formula requests it (with &lt;code&gt;pour_bottle?&lt;/code&gt;), if any options are specified during installation (bottles are all compiled with default options), if the bottle is not up to date (e.g. lacking a checksum) or if the bottle&amp;rsquo;s &lt;code&gt;cellar&lt;/code&gt; is not &lt;code&gt;:any&lt;/code&gt; nor equal to the current &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt;.</source>
          <target state="translated">설치 중에 옵션이 지정 되어 &lt;code&gt;pour_bottle?&lt;/code&gt; (병이 모두 기본 옵션으로 컴파일 됨), 병이 최대가 아닌 경우 사용자가 병을 요청하면 (위 참조) 병이 사용되는 경우 (위 참조) 병이 사용되지 않습니다 ( pour_bottle? 날짜 (예 : 체크섬 부족) 또는 병 &lt;code&gt;cellar&lt;/code&gt; 가 &lt;code&gt;:any&lt;/code&gt; 과 같지 않은 경우 : 현재 &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt; 과 같거나 같지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="3a669c3fd9f67c73c4b5a5459e18aa7da26a4966" translate="yes" xml:space="preserve">
          <source>Brew Test Bot</source>
          <target state="translated">브루 테스트 봇</target>
        </trans-unit>
        <trans-unit id="e5edc18089dcf504a8c2481990d3c9bf09174b26" translate="yes" xml:space="preserve">
          <source>Brew Test Bot For Maintainers</source>
          <target state="translated">관리자를위한 추출 테스트 봇</target>
        </trans-unit>
        <trans-unit id="ab34aa5158f17df2684724524bfb683192a9d6d1" translate="yes" xml:space="preserve">
          <source>Brewed Python modules</source>
          <target state="translated">양조 된 파이썬 모듈</target>
        </trans-unit>
        <trans-unit id="2ba117675e2690fc1906a76ac935b7b8fbe20c09" translate="yes" xml:space="preserve">
          <source>Brewed Ruby installs executables to &lt;code&gt;$(brew --prefix)/opt/ruby/bin&lt;/code&gt; without sudo. You should add this to your path. See the caveats in the &lt;code&gt;ruby&lt;/code&gt; formula for up-to-date information.</source>
          <target state="translated">Brewed Ruby는 sudo없이 &lt;code&gt;$(brew --prefix)/opt/ruby/bin&lt;/code&gt; 실행 파일을 설치합니다 . 이것을 경로에 추가해야합니다. 최신 정보 는 &lt;code&gt;ruby&lt;/code&gt; 공식 의 경고를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2c1c1a41770789a3194dde76c3bf9c71fce88fd" translate="yes" xml:space="preserve">
          <source>British/Commonwealth English over American English, in general</source>
          <target state="translated">일반적으로 미국 영어보다 영국 / 연방 영어</target>
        </trans-unit>
        <trans-unit id="5f2f142ecc4f6157f5f3efc95b77519e73f38355" translate="yes" xml:space="preserve">
          <source>Build Python 2 bindings with the system Python by default (don&amp;rsquo;t add an option) and they should be usable with any binary-compatible Python. If that isn&amp;rsquo;t the case, it&amp;rsquo;s an upstream bug; &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;here&amp;rsquo;s some advice for resolving it&lt;/a&gt;.</source>
          <target state="translated">기본적으로 시스템 Python으로 Python 2 바인딩을 빌드하고 (옵션을 추가하지 마십시오) 이진 호환 Python에서 사용할 수 있어야합니다. 그렇지 않은 경우 업스트림 버그입니다. &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;이를 해결하기위한 몇 가지 조언이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e2faddc21d448749b08bc5834af52ee77a372ec" translate="yes" xml:space="preserve">
          <source>Build bottles for these formulae with GitHub Actions.</source>
          <target state="translated">GitHub Actions를 사용하여 이러한 수식에 대한 병을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ea666ab76229fd30f7179e78105b27f9645a5ab4" translate="yes" xml:space="preserve">
          <source>Build flags</source>
          <target state="translated">빌드 플래그</target>
        </trans-unit>
        <trans-unit id="475045e6dcc498aef4aab77008dfb15af7ca11c2" translate="yes" xml:space="preserve">
          <source>Building Against Non-Homebrew Dependencies</source>
          <target state="translated">비 Homebrew 종속성에 대한 빌드</target>
        </trans-unit>
        <trans-unit id="aca6c8a1f1d408537ea56c968172121e516be39c" translate="yes" xml:space="preserve">
          <source>Bundler for non-Ruby dependencies from Homebrew, Homebrew Cask and the Mac App Store. See &lt;code&gt;brew bundle --help&lt;/code&gt;.</source>
          <target state="translated">Homebrew, Homebrew Cask 및 Mac App Store의 비 Ruby 종속성에 대한 번 들러. &lt;code&gt;brew bundle --help&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9085e3e6ed79a715d0dfaff1ea82cc93f5829caa" translate="yes" xml:space="preserve">
          <source>Bundler for non-Ruby dependencies from Homebrew, Homebrew Cask, Mac App Store and Whalebrew.</source>
          <target state="translated">Homebrew, Homebrew Cask, Mac App Store 및 Whalebrew의 비 Ruby 종속성을위한 번 들러입니다.</target>
        </trans-unit>
        <trans-unit id="fe4a98ffa7a658c05f32407b1dd3d6220fdf700e" translate="yes" xml:space="preserve">
          <source>But There Is No Stable Version!</source>
          <target state="translated">그러나 안정적인 버전이 없습니다!</target>
        </trans-unit>
        <trans-unit id="0089b5a32c590507ebc5a4d534fa46d01dda08f3" translate="yes" xml:space="preserve">
          <source>But be consistent within a single document</source>
          <target state="translated">그러나 단일 문서 내에서 일관성을 유지하십시오</target>
        </trans-unit>
        <trans-unit id="b55014531fb704542fddb361a711c8d67ac85032" translate="yes" xml:space="preserve">
          <source>But we&amp;rsquo;d still like for users to enjoy some kind of protection while minimising occurrences of legitimate developers being branded as malware carriers. To do so, we evaluate casks on a case-by-case basis and any user is free to bring a potential malware case to our attention. However, it is important to never forget the last line of defence is &lt;em&gt;always&lt;/em&gt; the user.</source>
          <target state="translated">그러나 우리는 여전히 사용자가 일종의 보호 기능을 누리면서 합법적 인 개발자가 멀웨어 캐리어로 브랜드화되는 것을 최소화하기를 바랍니다. 이를 위해 우리는 사례별로 캐스 크를 평가하고 모든 사용자는 잠재적 인 멀웨어 사례를 우리에게 알려줄 수 있습니다. 그러나 최후의 방어선이 &lt;em&gt;항상&lt;/em&gt; 사용자라는 사실을 잊지 않는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="d2f2201ecd09717758020d1ab1efa3d4273b8554" translate="yes" xml:space="preserve">
          <source>By default packages that require BLAS/LAPACK linear algebra interfaces should link to &lt;a href=&quot;https://www.openblas.net/&quot;&gt;OpenBLAS&lt;/a&gt; using &lt;code&gt;depends_on &quot;openblas&quot;&lt;/code&gt; and passing &lt;code&gt;-DBLA_VENDOR=OpenBLAS&lt;/code&gt; to CMake (applies to CMake based formula only) rather than Apple&amp;rsquo;s Accelerate framework, or the default reference lapack implementation. Apple&amp;rsquo;s implementation of BLAS/LAPACK is outdated and may introduce hard-to-debug problems. The reference &lt;code&gt;lapack&lt;/code&gt; formula is fine, although it is not actively maintained or tuned. For this reason, formulae needing BLAS/LAPACK should link with OpenBLAS.</source>
          <target state="translated">BLAS 필요할 기본 패키지 저자 / LAPACK 선형 대수 인터페이스에 연결되어야 &lt;a href=&quot;https://www.openblas.net/&quot;&gt;OpenBLAS&lt;/a&gt; 사용 &lt;code&gt;depends_on &quot;openblas&quot;&lt;/code&gt; 및 전달 &lt;code&gt;-DBLA_VENDOR=OpenBLAS&lt;/code&gt; 을 CMake로 (적용 CMake 기반 화학식 만 행)보다 애플 가속기구, 또는 디폴트 참조 LAPACK 구현. Apple의 BLAS / LAPACK 구현은 구식이며 디버그하기 어려운 문제가 발생할 수 있습니다. 참조 &lt;code&gt;lapack&lt;/code&gt; 공식은 적극적으로 유지 관리되거나 조정되지 않았지만 괜찮습니다. 따라서 BLAS / LAPACK이 필요한 공식은 OpenBLAS와 연결되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d5538b44726dd54da8af2720010e0e93c0b8b8a0" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;brew release&lt;/code&gt; will bump the patch version number. Pass &lt;code&gt;--major&lt;/code&gt; or &lt;code&gt;--minor&lt;/code&gt; to bump the major or minor version numbers, respectively. The command will fail if the previous major or minor release was made less than one month ago.</source>
          <target state="translated">기본적으로 &lt;code&gt;brew release&lt;/code&gt; 는 패치 버전 번호를 증가시킵니다. 패스 &lt;code&gt;--major&lt;/code&gt; 또는 &lt;code&gt;--minor&lt;/code&gt; 각각 메이저 또는 마이너 버전 번호를 범프. 이전 주 또는 부 릴리스가 한 달 미만 전에 만들어진 경우 명령이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="d561281ad26debde10330b3ff838d725b27d4c91" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;uses&lt;/code&gt; shows all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as a required or recommended dependency.</source>
          <target state="translated">기본적으로 &lt;code&gt;uses&lt;/code&gt; 프로그램을 지정하는 모든 수식을 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 요구 또는 권장 의존성 등을.</target>
        </trans-unit>
        <trans-unit id="44e26d2aeed140d096f19a03056f300591b34237" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;uses&lt;/code&gt; shows usage of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; by stable builds.</source>
          <target state="translated">기본적으로 &lt;code&gt;uses&lt;/code&gt; 은 안정적인 빌드에 의한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="32d6dae66a69d36a1ccbb7ac4d909bc762802e6d" translate="yes" xml:space="preserve">
          <source>By default, bottles will be built for the oldest CPU supported by the OS/architecture you&amp;rsquo;re building for (Core 2 for 64-bit OSs). This ensures that bottles are compatible with all computers you might distribute them to. If you &lt;em&gt;really&lt;/em&gt; want your bottles to be optimised for something else, you can pass the &lt;code&gt;--bottle-arch=&lt;/code&gt; option to build for another architecture; for example, &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt;. Just remember that if you build for a newer architecture some of your users might get binaries they can&amp;rsquo;t run and that would be sad!</source>
          <target state="translated">기본적으로 Bottle은 빌드중인 OS / 아키텍처에서 지원하는 가장 오래된 CPU (64 비트 OS 용 Core 2) 용으로 빌드됩니다. 이렇게하면 병을 배포 할 수있는 모든 컴퓨터와 호환됩니다. 당신이 경우 &lt;em&gt;정말&lt;/em&gt; 당신의 병이 다른 뭔가를 최적화하려면, 당신은 통과 할 수 &lt;code&gt;--bottle-arch=&lt;/code&gt; 다른 아키텍처에 대한 빌드 옵션을; 예를 들어 &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt; . 새로운 아키텍처를 위해 빌드하는 경우 일부 사용자는 바이너리를 실행할 수 없으며 이는 슬프다는 점을 기억하십시오!</target>
        </trans-unit>
        <trans-unit id="73605df8c1e8e0542fe83cc2cd05e409608ec801" translate="yes" xml:space="preserve">
          <source>By default, bottles will be built for the oldest CPU supported by the OS/architecture you&amp;rsquo;re building for (Core 2 for 64-bit OSs). This ensures that bottles are compatible with all computers you might distribute them to. If you &lt;em&gt;really&lt;/em&gt; want your bottles to be optimized for something else, you can pass the &lt;code&gt;--bottle-arch=&lt;/code&gt; option to build for another architecture; for example, &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt;. Just remember that if you build for a newer architecture some of your users might get binaries they can&amp;rsquo;t run and that would be sad!</source>
          <target state="translated">기본적으로 bottle은 빌드하려는 OS / 아키텍처 (64 비트 OS의 경우 코어 2)에서 지원하는 가장 오래된 CPU를 위해 빌드됩니다. 이렇게하면 병이 배포 할 수있는 모든 컴퓨터와 호환됩니다. 당신이 경우 &lt;em&gt;정말&lt;/em&gt; 당신의 병이 다른 뭔가를 최적화하려면, 당신은 통과 할 수 &lt;code&gt;--bottle-arch=&lt;/code&gt; 다른 아키텍처에 대한 빌드 옵션을; 예를 들어, &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt; 입니다. 최신 아키텍처를 구축하면 일부 사용자는 바이너리를 얻을 수 있으며 슬프다는 것을 기억하십시오!</target>
        </trans-unit>
        <trans-unit id="cb6bdf1c74332fb43d5cd7e372e04a21a1fee288" translate="yes" xml:space="preserve">
          <source>By default, only Homebrew dependencies are listed.</source>
          <target state="translated">기본적으로 Homebrew 종속성 만 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="d6e9dbad74806f6475aa17c42346342773bc28d2" translate="yes" xml:space="preserve">
          <source>By default, version information is displayed in interactive shells, and suppressed otherwise.</source>
          <target state="translated">기본적으로 버전 정보는 대화식 쉘에 표시되며 그렇지 않으면 억제됩니다.</target>
        </trans-unit>
        <trans-unit id="83f7df5c1cb3bbb2c5aa0e4da571b50f5041ba4e" translate="yes" xml:space="preserve">
          <source>C++ Standard Libraries</source>
          <target state="translated">C ++ 표준 라이브러리</target>
        </trans-unit>
        <trans-unit id="710d29c7505c1572481073da112d0cf51ff1e5f8" translate="yes" xml:space="preserve">
          <source>COMMANDS</source>
          <target state="translated">COMMANDS</target>
        </trans-unit>
        <trans-unit id="f2a7554fbc437080e675167bf66edfe879daac52" translate="yes" xml:space="preserve">
          <source>CUSTOM EXTERNAL COMMANDS</source>
          <target state="translated">커스텀 외부 명령</target>
        </trans-unit>
        <trans-unit id="5c44c756a1d4b4bdbfa96ea7ba683c4158f41ade" translate="yes" xml:space="preserve">
          <source>Can I edit formulae myself?</source>
          <target state="translated">수식을 직접 편집 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="b876336e0cef9cd7293808e17c3062c0938587d3" translate="yes" xml:space="preserve">
          <source>Can I install my own stuff to &lt;code&gt;/usr/local&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;/usr/local&lt;/code&gt; 에 내 물건을 설치할 수 있습니까 ?</target>
        </trans-unit>
        <trans-unit id="7207f78425be8a3c3eeec4adf11558335e424229" translate="yes" xml:space="preserve">
          <source>Can I make new formulae?</source>
          <target state="translated">새로운 공식을 만들 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="a6f183fb34132767d41b3c3f33d3a972522296e7" translate="yes" xml:space="preserve">
          <source>Can install software to your home directory and so does not require &lt;em&gt;sudo&lt;/em&gt;</source>
          <target state="translated">홈 디렉토리에 소프트웨어를 설치할 수 있으므로 &lt;em&gt;sudo&lt;/em&gt; 가 필요하지 않습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42354ba88037d7a88466e5e90d37058b742589a9" translate="yes" xml:space="preserve">
          <source>Capitalise all list items if you want, even if they&amp;rsquo;re not complete sentences; just be consistent within each list, and preferably, throughout the whole page</source>
          <target state="translated">문장이 완성되지 않은 경우에도 원하는 경우 모든 목록 항목을 대문자로 표시하십시오. 각 목록 내에서 일관성을 유지하고 전체 페이지에서</target>
        </trans-unit>
        <trans-unit id="611e0004201651d94d84acdc64ea2edd5901168b" translate="yes" xml:space="preserve">
          <source>Capitalise repository names to match the user and repository names on GitHub. Keep tap names in lower case.</source>
          <target state="translated">GitHub의 사용자 및 저장소 이름과 일치하도록 저장소 이름을 대문자로 만드십시오. 탭 이름은 소문자로 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="e9abbff88ea43d04264341c59fafcb48e7052099" translate="yes" xml:space="preserve">
          <source>Capitalised proper nouns</source>
          <target state="translated">대명사</target>
        </trans-unit>
        <trans-unit id="cd6e3ab1820a815c9a59933a0dfcd9b51d5b6748" translate="yes" xml:space="preserve">
          <source>Casks</source>
          <target state="translated">Casks</target>
        </trans-unit>
        <trans-unit id="a4ce7734f9c3e22c3ce713e8a79941ba6c69be20" translate="yes" xml:space="preserve">
          <source>Casks can also be installed from a tap. Casks can be included in taps with formulae, or in a tap with just casks. Place any cask files you wish to make available in a &lt;code&gt;Casks&lt;/code&gt; directory at the top level of your tap.</source>
          <target state="translated">캐스 크는 탭에서 설치할 수도 있습니다. 캐스 크는 포뮬러가있는 탭에 포함되거나 캐스 크 만있는 탭에 포함될 수 있습니다. 탭의 최상위 수준 에있는 &lt;code&gt;Casks&lt;/code&gt; 디렉토리에 사용하려는 모든 cask 파일을 배치합니다 .</target>
        </trans-unit>
        <trans-unit id="0b500b400bdbaf245d807c71a8f6b32603e258c2" translate="yes" xml:space="preserve">
          <source>Casks which do not reach a minimum notability threshold (see &lt;a href=&quot;#rejected-casks&quot;&gt;Rejected Casks&lt;/a&gt;) aren&amp;rsquo;t accepted in the main repositories because the increased maintenance burden doesn&amp;rsquo;t justify the poor usage numbers they will likely get. This notability check is performed automatically by the audit commands we provide, but its decisions aren&amp;rsquo;t set in stone. A cask which fails the notability check can be added if it is:</source>
          <target state="translated">최소 주목도 임계 값에 도달하지 않는 통 ( &lt;a href=&quot;#rejected-casks&quot;&gt;거부 된 통&lt;/a&gt; 참조 )은 유지 관리 부담이 증가해도 발생할 가능성이있는 사용량이 적다는 것을 정당화하지 않기 때문에 주 저장소에서 허용되지 않습니다. 이 주목 성 검사는 우리가 제공하는 감사 명령에 의해 자동으로 수행되지만 결정이 확정 된 것은 아닙니다. 다음과 같은 경우 Notability 검사에 실패한 캐스 크를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4af187e3eb785045506abecd53af2b97e7786e33" translate="yes" xml:space="preserve">
          <source>Casks which use &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/blob/HEAD/doc/cask_language_reference/stanzas/version.md#version-latest&quot;&gt;&lt;code&gt;version :latest&lt;/code&gt;&lt;/a&gt; are also excluded, because we have no way to track the version they&amp;rsquo;re in. It helps to ask the developers of such software to provide versioned releases (i.e. have the version in the path of the download &lt;code&gt;url&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/blob/HEAD/doc/cask_language_reference/stanzas/version.md#version-latest&quot;&gt; &lt;code&gt;version :latest&lt;/code&gt; &lt;/a&gt; 를 사용하는 캐스 크 도 제외됩니다. 그 이유는 그들이있는 버전을 추적 할 방법이 없기 때문입니다. 그러한 소프트웨어의 개발자에게 버전이있는 릴리스를 제공하도록 요청하는 것이 도움이됩니다 (예 : 다운로드 &lt;code&gt;url&lt;/code&gt; 경로에 버전이 있음 ). .</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="4ddf497c6f38258a23544e6ce8884705b83adbd5" translate="yes" xml:space="preserve">
          <source>Cellar (&lt;code&gt;cellar&lt;/code&gt;)</source>
          <target state="translated">지하실 ( &lt;code&gt;cellar&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3129815c7a48ea7e3cb97d417e813e3019c6511b" translate="yes" xml:space="preserve">
          <source>Chances are that certain apps will give you a popup message like this:</source>
          <target state="translated">특정 앱이 다음과 같은 팝업 메시지를 표시 할 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="df193b9a4f534e2af136c9a41a25026a43c5fcfb" translate="yes" xml:space="preserve">
          <source>Change to the directory containing Homebrew formulae:</source>
          <target state="translated">Homebrew 공식이 포함 된 디렉토리로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="4a3f73e50fe9c5d9dad4e788b8dd4553a7b866f1" translate="yes" xml:space="preserve">
          <source>Change to the directory containing your Homebrew installation:</source>
          <target state="translated">Homebrew 설치가 포함 된 디렉토리로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="596271547b9c31a6459912f14ddeac4a4d9a52c6" translate="yes" xml:space="preserve">
          <source>Changing your &lt;code&gt;PATH&lt;/code&gt; using that command ensures the change only exists for the duration of that shell session. Once you are no longer in that session, the &lt;code&gt;PATH&lt;/code&gt; reverts to the prior state.</source>
          <target state="translated">해당 명령을 사용 하여 &lt;code&gt;PATH&lt;/code&gt; 를 변경하면 해당 셸 세션 동안에 만 변경 사항이 존재합니다. 해당 세션에 더 이상 있지 않으면 &lt;code&gt;PATH&lt;/code&gt; 가 이전 상태로 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="5cc7d1eb705d5c3b232700dae9f9a4e913df37c8" translate="yes" xml:space="preserve">
          <source>Check &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; for Homebrew coding style violations.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 에서 Homebrew 코딩 스타일 위반이 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a9c875413e86e0992a17f4a91bd75b6f52b4183" translate="yes" xml:space="preserve">
          <source>Check &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for Homebrew coding style violations. This should be run before submitting a new formula or cask. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;|&lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; are provided, check all locally available formulae and casks and skip style checks. Will exit with a non-zero status if any errors are found.</source>
          <target state="translated">Homebrew 코딩 스타일 위반에 대한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 확인하십시오 . 새 공식 또는 통을 제출하기 전에 실행해야합니다. &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이없는 경우 | &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 이 제공되면 현지에서 사용 가능한 모든 공식과 통을 확인하고 스타일 검사를 건너 뜁니다. 오류가 발견되면 0이 아닌 상태로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="c92b6213e765d08614e1108acb63b262aa8fea32" translate="yes" xml:space="preserve">
          <source>Check &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for Homebrew coding style violations. This should be run before submitting a new formula. Will exit with a non-zero status if any errors are found, which can be useful for implementing pre-commit hooks. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are provided, all of them are checked.</source>
          <target state="translated">Homebrew 코딩 스타일 위반에 대한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 확인하십시오 . 새 수식을 제출하기 전에 실행해야합니다. 오류가 발견되면 0이 아닌 상태로 종료됩니다. 이는 커밋 전 후크를 구현하는 데 유용 할 수 있습니다. &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 제공 되지 않으면 모두 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="7b32df4b9433443c468c836d55ea40422bb603a7" translate="yes" xml:space="preserve">
          <source>Check all casks with unversioned URLs in a given &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; for updates.</source>
          <target state="translated">업데이트를 위해 주어진 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에서 버전이없는 URL이있는 모든 캐스 크를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c320344f8d26e9e2ed891192a027e530fe7b4cf" translate="yes" xml:space="preserve">
          <source>Check for common issues</source>
          <target state="translated">일반적인 문제 확인</target>
        </trans-unit>
        <trans-unit id="afcfb98a2d3b70a1feaabef4bd81582516160a07" translate="yes" xml:space="preserve">
          <source>Check for dependencies</source>
          <target state="translated">의존성 점검</target>
        </trans-unit>
        <trans-unit id="dc4eecdc6ef5b21ff5b306260669cb837561bfbf" translate="yes" xml:space="preserve">
          <source>Check for newer versions of formulae and/or casks from upstream.</source>
          <target state="translated">업스트림에서 최신 버전의 공식 및 / 또는 통을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="11c8162a48ce20193c010610334635f209d31607" translate="yes" xml:space="preserve">
          <source>Check for newer versions of formulae from upstream.</source>
          <target state="translated">업스트림에서 최신 버전의 공식을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e21a59d66d94f3695597984a697c1748b4e7daa7" translate="yes" xml:space="preserve">
          <source>Check for typechecking errors using Sorbet.</source>
          <target state="translated">Sorbet을 사용하여 유형 검사 오류를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a99591f7ec830e612e01513cc042ff84f2c36c93" translate="yes" xml:space="preserve">
          <source>Check for:</source>
          <target state="translated">확인 :</target>
        </trans-unit>
        <trans-unit id="1dd555ed1914dfbad6baeb9232d2a6903cd43a06" translate="yes" xml:space="preserve">
          <source>Check formulae or files for conformance to Homebrew style guidelines.</source>
          <target state="translated">Homebrew 스타일 가이드 라인을 준수하는지 수식 또는 파일을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1d33d0f4749e759a4aceb4c04cc31345108b857f" translate="yes" xml:space="preserve">
          <source>Check if all dependencies are installed from the &lt;code&gt;Brewfile&lt;/code&gt;.</source>
          <target state="translated">모든 종속성이 &lt;code&gt;Brewfile&lt;/code&gt; 에서 설치되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1ef19abace31804c962ce0e1a88d0e6aaeb94df2" translate="yes" xml:space="preserve">
          <source>Check if the formula you are updating is a dependency for any other formulae by running &lt;code&gt;brew uses &amp;lt;formula&amp;gt;&lt;/code&gt;. If it is a dependency, run &lt;code&gt;brew reinstall&lt;/code&gt; for all the dependencies after it is installed and verify they work correctly.</source>
          <target state="translated">&lt;code&gt;brew uses &amp;lt;formula&amp;gt;&lt;/code&gt; 을 실행하여 업데이트중인 공식이 다른 공식에 종속되는지 확인하십시오 . 종속성 인 경우 &lt;code&gt;brew reinstall&lt;/code&gt; 실행하십시오. 후 모든 종속성에 대해 를 하고 올바르게 작동하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a300ebf156e309ecc602572e395c14f89eb25d9a" translate="yes" xml:space="preserve">
          <source>Check if there is a new upstream version of a formula. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-livecheck/blob/master/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="translated">새로운 업스트림 버전의 수식이 있는지 확인하십시오. 자세한 정보 및 사용법 은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-livecheck/blob/master/README.md&quot;&gt; &lt;code&gt;README&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4eb6a2dbdf4cd8b879d06184591c2c58e75ba22" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;homebrew-on-linux&quot;&gt;the Homebrew on Linux installation documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;homebrew-on-linux&quot;&gt;Linux에서 Homebrew 설치 문서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="97212d539da13da77bcd28f8d00883ca29d0c97d" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;license-guidelines&quot;&gt;License Guidelines&lt;/a&gt; for examples of complex license expressions in Homebrew formulae.</source>
          <target state="translated">Homebrew 공식에서 복잡한 라이센스 표현의 예 는 &lt;a href=&quot;license-guidelines&quot;&gt;라이센스 지침&lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="875146f92f7f3a24e3c3b9f38de2630328d216ea" translate="yes" xml:space="preserve">
          <source>Check out the &lt;code&gt;master&lt;/code&gt; branch:</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 브랜치를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a15bb2cb15d4cd4b24363cddabb5277361f3afa" translate="yes" xml:space="preserve">
          <source>Check out what MacPorts and Fink do:</source>
          <target state="translated">MacPorts 및 Fink의 기능을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="87e9aa0e5b7da29b4ba3bfcbd08d52979cedcedb" translate="yes" xml:space="preserve">
          <source>Check out your branch again:</source>
          <target state="translated">지점을 다시 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9abd4f9306b06bc417546d92f8c1d9384734cd6d" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;Homebrew/brew pull requests&lt;/a&gt; and &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;issues&lt;/a&gt; to see if there is anything pressing that needs to be fixed or merged before the next release. If so, fix and merge these changes.</source>
          <target state="translated">체크 &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;브루 / 양조 풀 요청&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;문제를&lt;/a&gt; 요구 고정 또는 다음 릴리스 전에 병합 될 것을 눌러있는 일이 있는지. 그렇다면 이러한 변경 사항을 수정하고 병합하십시오.</target>
        </trans-unit>
        <trans-unit id="c43e0dd33429aa68602487f3df369a3492a44dc8" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;Homebrew/brew pull requests&lt;/a&gt;, &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;issues&lt;/a&gt;, &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues&quot;&gt;Homebrew/core issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt; to see if there is anything pressing that needs to be fixed or merged before the next release. If so, fix and merge these changes.</source>
          <target state="translated">체크 &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;브루 / 양조 풀 요청&lt;/a&gt; , &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;문제&lt;/a&gt; , &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues&quot;&gt;브루 / 핵심 문제&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;브루 / 토론 (포럼)&lt;/a&gt; 의 요구가 고정 또는 다음 릴리스 전에 병합 될 것을 눌러있는 일이 있는지. 그렇다면 이러한 변경 사항을 수정하고 병합하십시오.</target>
        </trans-unit>
        <trans-unit id="a42e9d106ecabf0e4d619db9d97f76d610a7c3d1" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;Homebrew/brew pull requests&lt;/a&gt;, &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;issues&lt;/a&gt;, &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues&quot;&gt;Homebrew/homebrew-core issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt; to see if there is anything pressing that needs to be fixed or merged before the next release. If so, fix and merge these changes.</source>
          <target state="translated">체크 &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;브루 / 양조 풀 요청&lt;/a&gt; , &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;문제&lt;/a&gt; , &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues&quot;&gt;브루 / 자작 코어 문제&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;브루 / 토론 (포럼)&lt;/a&gt; 의 요구가 고정 또는 다음 릴리스 전에 병합 될 것을 눌러있는 일이 있는지. 그렇다면 이러한 변경 사항을 수정하고 병합하십시오.</target>
        </trans-unit>
        <trans-unit id="1e6c17923f5d74dcfbebbeb5cbf4e93c361440f1" translate="yes" xml:space="preserve">
          <source>Check the build system</source>
          <target state="translated">빌드 시스템 확인</target>
        </trans-unit>
        <trans-unit id="3bfb78638fb1d75424f1479a6d97507aff5ca16c" translate="yes" xml:space="preserve">
          <source>Check the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for missing dependencies. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given, check all installed brews.</source>
          <target state="translated">누락 된 종속성에 대해 주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 확인하십시오 . &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 없으면 설치된 모든 추출기를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="efa19147c08edfd8b09d1c99c1b7eeda45a2b9ef" translate="yes" xml:space="preserve">
          <source>Check the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; kegs for missing dependencies. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are provided, check all kegs. Will exit with a non-zero status if any kegs are found to be missing dependencies.</source>
          <target state="translated">누락 된 종속성에 대해 주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 통을 확인하십시오 . &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 가 제공 되지 않으면 모든 통을 확인하십시오. 종속 항목이 누락 된 케 그가 발견되면 0이 아닌 상태로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="7b09b4ec7f1849fef858ca43c1e5da5a4e086590" translate="yes" xml:space="preserve">
          <source>Check the library links for kegs of installed formulae. Raises an error if run on uninstalled formulae.</source>
          <target state="translated">설치된 공식의 통에 대한 라이브러리 링크를 확인하십시오. 제거 된 수식에서 실행할 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7f590b46bb2341ac1fafaf03d3a6da551cd837fd" translate="yes" xml:space="preserve">
          <source>Check the library links from the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; kegs. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are provided, check all kegs. Raises an error if run on uninstalled formulae.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 통 에서 라이브러리 링크를 확인하십시오 . &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 가 제공 되지 않으면 모든 통을 확인하십시오. 제거 된 수식에서 실행하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="423f925e41568a0021796cdb6e761652765539c4" translate="yes" xml:space="preserve">
          <source>Check the package&amp;rsquo;s &lt;code&gt;README&lt;/code&gt;. Does the package install with &lt;code&gt;./configure&lt;/code&gt;, &lt;code&gt;cmake&lt;/code&gt;, or something else? Delete the commented out &lt;code&gt;cmake&lt;/code&gt; lines if the package uses &lt;code&gt;./configure&lt;/code&gt;.</source>
          <target state="translated">패키지의 &lt;code&gt;README&lt;/code&gt; 를 확인하십시오 . 패키지가 &lt;code&gt;./configure&lt;/code&gt; , &lt;code&gt;cmake&lt;/code&gt; 또는 다른 것으로 설치됩니까? 패키지가 &lt;code&gt;./configure&lt;/code&gt; 를 사용하는 경우 주석 처리 된 &lt;code&gt;cmake&lt;/code&gt; 행을 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8dfd95150be0c20fb466eeda2938e963dabf0c7" translate="yes" xml:space="preserve">
          <source>Check the top of the e.g. &lt;code&gt;./configure&lt;/code&gt; output. Some configure scripts do not recognise e.g. &lt;code&gt;--disable-debug&lt;/code&gt;. If you see a warning about it, remove the option from the formula.</source>
          <target state="translated">예를 들어 &lt;code&gt;./configure&lt;/code&gt; 출력 의 상단을 확인하십시오 . 일부 configure 스크립트는 &lt;code&gt;--disable-debug&lt;/code&gt; 를 인식하지 못합니다. . 경고가 표시되면 수식에서 옵션을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a2e138cb44a3a62839fc5998ee391a03e5d806db" translate="yes" xml:space="preserve">
          <source>Check to see if the issue has been reported</source>
          <target state="translated">문제가보고되었는지 확인</target>
        </trans-unit>
        <trans-unit id="8b44bd9661dc26ab0bfe07939979252225ae19b7" translate="yes" xml:space="preserve">
          <source>Check your system for potential problems. Doctor exits with a non-zero status if any potential problems are found. Please note that these warnings are just used to help the Homebrew maintainers with debugging if you file an issue. If everything you use Homebrew for is working fine: please don&amp;rsquo;t worry or file an issue; just ignore this.</source>
          <target state="translated">잠재적 인 문제가 있는지 시스템을 점검하십시오. 잠재적 인 문제가 발견되면 닥터는 0이 아닌 상태로 종료됩니다. 이 경고는 문제를 제기 할 경우 Homebrew 관리자가 디버깅하는 데 도움을주기 위해 사용됩니다. Homebrew를 사용하는 모든 것이 제대로 작동하는 경우 걱정하거나 문제를 제기하지 마십시오. 이것을 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="13e95285e46a6262922e7766574bbdc87fb8747b" translate="yes" xml:space="preserve">
          <source>Check your system for potential problems. Will exit with a non-zero status if any potential problems are found. Please note that these warnings are just used to help the Homebrew maintainers with debugging if you file an issue. If everything you use Homebrew for is working fine: please don&amp;rsquo;t worry or file an issue; just ignore this.</source>
          <target state="translated">시스템에 잠재적 인 문제가 있는지 확인하십시오. 잠재적 인 문제가 발견되면 0이 아닌 상태로 종료됩니다. 이 경고는 문제를 제기하는 경우 Homebrew 관리자가 디버깅하는 데 도움이되는 데 사용됩니다. Homebrew를 사용하는 모든 것이 잘 작동하는 경우 : 걱정하지 말고 문제를 제기하십시오. 그냥 무시하세요.</target>
        </trans-unit>
        <trans-unit id="61b29464698841563ca7472285fe6b4635494641" translate="yes" xml:space="preserve">
          <source>Checklist</source>
          <target state="translated">Checklist</target>
        </trans-unit>
        <trans-unit id="8acccab7f490b23c0adde4b83d2374fa3b02e386" translate="yes" xml:space="preserve">
          <source>Checks style of the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; using RuboCop.</source>
          <target state="translated">RuboCop을 사용하여 주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 스타일을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b1ce22fc4884f4e7679f353a8db26d0684f254a0" translate="yes" xml:space="preserve">
          <source>Checksum (&lt;code&gt;sha256&lt;/code&gt;)</source>
          <target state="translated">체크섬 ( &lt;code&gt;sha256&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1c543deadca67f476118db1bda901ab0970117fa" translate="yes" xml:space="preserve">
          <source>Clang is the default C/C++ compiler on macOS (and has been for a long time). Software that doesn&amp;rsquo;t build with it hasn&amp;rsquo;t been adequately ported to macOS.</source>
          <target state="translated">Clang은 macOS의 기본 C / C ++ 컴파일러이며 오랫동안 사용되었습니다. 빌드되지 않은 소프트웨어는 macOS에 제대로 포팅되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="970423396db9a5db3ab146030f36eab03c9bccf9" translate="yes" xml:space="preserve">
          <source>Class Types</source>
          <target state="translated">클래스 유형</target>
        </trans-unit>
        <trans-unit id="919b31af623e30618fff2bd20d4b08509aecfcbc" translate="yes" xml:space="preserve">
          <source>Cleanup all cached files older than this many days.</source>
          <target state="translated">이 기간보다 오래된 모든 캐시 된 파일을 정리합니다.</target>
        </trans-unit>
        <trans-unit id="4f4ed9ce21c23e3a135f0f3673cc5ccb265b211a" translate="yes" xml:space="preserve">
          <source>Collecting the OS version allows us to decide what versions of macOS to prioritise and support and identify build failures that occur only on single versions.</source>
          <target state="translated">OS 버전을 수집하면 단일 버전에서만 발생하는 빌드 실패를 우선 순위 화하고 지원하고 식별 할 수있는 macOS 버전을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2ccc5699fd8637d310a7856e7dce7bbd49532b5" translate="yes" xml:space="preserve">
          <source>Command Line Tools (CLT) for Xcode: &lt;code&gt;xcode-select --install&lt;/code&gt;, &lt;a href=&quot;https://developer.apple.com/downloads&quot;&gt;developer.apple.com/downloads&lt;/a&gt; or &lt;a href=&quot;https://itunes.apple.com/us/app/xcode/id497799835&quot;&gt;Xcode&lt;/a&gt;&lt;sup&gt;&lt;a href=&quot;#3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">Xcode 용 명령 행 도구 (CLT) : &lt;code&gt;xcode-select --install&lt;/code&gt; , &lt;a href=&quot;https://developer.apple.com/downloads&quot;&gt;developer.apple.com/downloads&lt;/a&gt; 또는 &lt;a href=&quot;https://itunes.apple.com/us/app/xcode/id497799835&quot;&gt;Xcode &lt;/a&gt;&lt;sup&gt;&lt;a href=&quot;#3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d2f68e48fb9920fb72b1cd62191b7b05339f3db0" translate="yes" xml:space="preserve">
          <source>Command types</source>
          <target state="translated">명령 유형</target>
        </trans-unit>
        <trans-unit id="f6a34aed307783f0ded7923ea56787d9214b9a39" translate="yes" xml:space="preserve">
          <source>Commands:</source>
          <target state="translated">Commands:</target>
        </trans-unit>
        <trans-unit id="aee97edd2a89aaa08f9a4fb325f5a132c27f8e96" translate="yes" xml:space="preserve">
          <source>Commas</source>
          <target state="translated">Commas</target>
        </trans-unit>
        <trans-unit id="1a1873ab51c74e8b39327ee42dade7a407e5a22d" translate="yes" xml:space="preserve">
          <source>Commit</source>
          <target state="translated">Commit</target>
        </trans-unit>
        <trans-unit id="947e7b97bab7426e538ad2e316ff8cc01353ec17" translate="yes" xml:space="preserve">
          <source>Common Issues</source>
          <target state="translated">일반적인 문제</target>
        </trans-unit>
        <trans-unit id="f87b5729607ca7ae6225bc161541aed4891ee426" translate="yes" xml:space="preserve">
          <source>Common Issues for Maintainers</source>
          <target state="translated">관리자를위한 일반적인 문제</target>
        </trans-unit>
        <trans-unit id="d1316581062d038e378108bdb174e9058174441b" translate="yes" xml:space="preserve">
          <source>Common reasons to reject a Cask entirely:</source>
          <target state="translated">Cask를 완전히 거부하는 일반적인 이유 :</target>
        </trans-unit>
        <trans-unit id="5a4bb741dfa32540d06538a8547f9b7e3c6d4705" translate="yes" xml:space="preserve">
          <source>Common reasons to reject a Cask from the main repo:</source>
          <target state="translated">기본 저장소에서 Cask를 거부하는 일반적인 이유 :</target>
        </trans-unit>
        <trans-unit id="f0a4a94d4ea44ef7f33fe13625f75db025a9523d" translate="yes" xml:space="preserve">
          <source>Compiler selection</source>
          <target state="translated">컴파일러 선택</target>
        </trans-unit>
        <trans-unit id="13ec0de6207a94d5571105231a58d435fd1714e4" translate="yes" xml:space="preserve">
          <source>Complex SPDX License Expressions</source>
          <target state="translated">복잡한 SPDX 라이센스 표현식</target>
        </trans-unit>
        <trans-unit id="f43c12e1b59750e7dd33a24ddf91fc08f7b0f3db" translate="yes" xml:space="preserve">
          <source>Concluding remarks</source>
          <target state="translated">끝 맺는 말</target>
        </trans-unit>
        <trans-unit id="117ca20e53cabe8f604eec41aa3df14058a7f520" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;bash&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bash&lt;/code&gt; 에서 완료 구성</target>
        </trans-unit>
        <trans-unit id="cab3f8a9e42209f4a782350bda17df1d4b1be67a" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;fish&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 에서 완성 구성</target>
        </trans-unit>
        <trans-unit id="8a7143811bd7ea6b815ac516925c93b2d2f8fefd" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;zsh&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;zsh&lt;/code&gt; 에서 완료 구성</target>
        </trans-unit>
        <trans-unit id="6f57d20124b31599ae37ed78fd2086236d66b51c" translate="yes" xml:space="preserve">
          <source>Congratulations, you&amp;rsquo;ve moved a formula to a tap!</source>
          <target state="translated">축하합니다. 수식을 탭으로 이동했습니다.</target>
        </trans-unit>
        <trans-unit id="62a7842bf23bcf1c00d3723550321c87bef59371" translate="yes" xml:space="preserve">
          <source>Cons: negative comments are common and people take this as a chance to complain about Homebrew (regardless of their usage)</source>
          <target state="translated">단점 : 부정적인 의견이 일반적이며 사람들은이 사용법에 관계없이 Homebrew에 대해 불만을 제기 할 수있는 기회로 생각합니다.</target>
        </trans-unit>
        <trans-unit id="fdd5f5dc6df4f2f7acb072423047d78e3645efdf" translate="yes" xml:space="preserve">
          <source>Consider adding evaluating the output in your dotfiles (e.g. &lt;code&gt;~/.profile&lt;/code&gt;) with &lt;code&gt;eval $(brew shellenv)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval $(brew shellenv)&lt;/code&gt; 를 사용하여 도트 파일에서 출력 평가 (예 : &lt;code&gt;~/.profile&lt;/code&gt; )를 추가하십시오</target>
        </trans-unit>
        <trans-unit id="5f32187912966ae696462866d4538d29e93e7d16" translate="yes" xml:space="preserve">
          <source>Consider whether to submit it to other sources e.g. Hacker News, Reddit.</source>
          <target state="translated">Hacker News, Reddit과 같은 다른 출처로 제출할 것인지 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="ddc83df6a9ca8becff741d403c07315d10336da0" translate="yes" xml:space="preserve">
          <source>Consult this file for the list of formulae to check by default when no formula argument is passed to &lt;code&gt;brew livecheck&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew livecheck&lt;/code&gt; 에 공식 인수가 전달되지 않은 경우 기본적으로 확인할 공식 목록은이 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f66ec5e52609255d1b1c42190479896d204b2e7" translate="yes" xml:space="preserve">
          <source>Contains the SHA-256 hash of a bottle for a particular version of macOS.</source>
          <target state="translated">특정 버전의 macOS 용 병의 SHA-256 해시를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">Contributors</target>
        </trans-unit>
        <trans-unit id="24527fc2d648437506495f883a07a22c2878f8d4" translate="yes" xml:space="preserve">
          <source>Control Homebrew&amp;rsquo;s anonymous aggregate user behaviour analytics. Read more at &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;.</source>
          <target state="translated">Homebrew의 익명 집계 사용자 행동 분석을 제어합니다. &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt; 에서 자세히 알아 보십시오 .</target>
        </trans-unit>
        <trans-unit id="8d8ccac879a9ea578f9fdd39f1e2f07be318f708" translate="yes" xml:space="preserve">
          <source>Control whether Homebrew automatically links external tap shell completion files. Read more at &lt;a href=&quot;shell-completion&quot;&gt;https://docs.brew.sh/Shell-Completion&lt;/a&gt;.</source>
          <target state="translated">Homebrew가 외부 탭 셸 완성 파일을 자동으로 연결할지 여부를 제어합니다. &lt;a href=&quot;shell-completion&quot;&gt;https://docs.brew.sh/Shell-Completion&lt;/a&gt; 에서 자세히 알아 보십시오 .</target>
        </trans-unit>
        <trans-unit id="874390641cb656a6a92196ce1104f746e3a54f87" translate="yes" xml:space="preserve">
          <source>Convenience tools</source>
          <target state="translated">편의 도구</target>
        </trans-unit>
        <trans-unit id="4c14933b757e63fd39113fe3e86f94cefa849b18" translate="yes" xml:space="preserve">
          <source>Core &lt;code&gt;brew&lt;/code&gt; code related pull request</source>
          <target state="translated">코어 &lt;code&gt;brew&lt;/code&gt; 코드 관련 풀 요청</target>
        </trans-unit>
        <trans-unit id="2156bcb852bc98dce96fbe3af021ea400afd4789" translate="yes" xml:space="preserve">
          <source>Create a Homebrew installation wherever you extract the tarball. Whichever &lt;code&gt;brew&lt;/code&gt; command is called is where the packages will be installed. You can use this as you see fit, e.g. a system set of libs in &lt;code&gt;/usr/local&lt;/code&gt; and tweaked formulae for development in &lt;code&gt;~/homebrew&lt;/code&gt;.</source>
          <target state="translated">tarball을 추출 할 때마다 Homebrew 설치를 작성하십시오. 어떤 &lt;code&gt;brew&lt;/code&gt; 명령을 호출 하든 패키지가 설치됩니다. 예를 들어 &lt;code&gt;/usr/local&lt;/code&gt; 의 시스템 라이브러리 세트 와 &lt;code&gt;~/homebrew&lt;/code&gt; 의 개발을 위해 조정 된 공식과 같이 이것을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9e6ecc14bb76dbd4ad31f17699881b5176aba52" translate="yes" xml:space="preserve">
          <source>Create a commit to increment the revision of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. If no revision is present, &amp;ldquo;revision 1&amp;rdquo; will be added.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 개정을 증가시키는 커밋을 만듭니다 . 개정이없는 경우 &quot;개정 1&quot;이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5afdd5f37fb90ff6eb0faea0a1760d7a4dc9a649" translate="yes" xml:space="preserve">
          <source>Create a commit to increment the revision of the formula. If no revision is present, &amp;ldquo;revision 1&amp;rdquo; will be added.</source>
          <target state="translated">수식의 개정을 증가시키는 커밋을 만듭니다. 개정판이 없으면 &quot;revision 1&quot;이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="797f1b37a14ce1af4e5c87ebd9ac5622fe7658a4" translate="yes" xml:space="preserve">
          <source>Create a new branch from the latest &lt;code&gt;master&lt;/code&gt; branch:</source>
          <target state="translated">최신 &lt;code&gt;master&lt;/code&gt; 브랜치 에서 새 브랜치를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3ba2ab36ece2991f4f78a3552c7dcebbd21fe8ba" translate="yes" xml:space="preserve">
          <source>Create a new draft Homebrew/brew release with the appropriate version number and release notes.</source>
          <target state="translated">적절한 버전 번호와 릴리스 정보를 사용하여 새로운 초안 Homebrew / brew 릴리스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="afd83cb14799014cd4e32e7c55d3f83b8b038cfd" translate="yes" xml:space="preserve">
          <source>Create a new issue on the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues/new/choose&quot;&gt;Homebrew/homebrew-core issue tracker&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/issues/new/choose&quot;&gt;Homebrew/linuxbrew-core issue tracker&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues/new/choose&quot;&gt;Homebrew / homebrew-core 이슈 트래커&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/issues/new/choose&quot;&gt;Homebrew / linuxbrew-core 이슈 트래커&lt;/a&gt; 에서 새로운 이슈 만들기</target>
        </trans-unit>
        <trans-unit id="129970b308fe32e467d81f3e4a26f03bc7233c48" translate="yes" xml:space="preserve">
          <source>Create a pull request to the corresponding tap deleting the old formula file, adding the new formula file, and adding it to &lt;code&gt;formula_renames.json&lt;/code&gt; with a commit message like &lt;code&gt;newack: renamed from ack&lt;/code&gt;. Use the canonical name (e.g. &lt;code&gt;ack&lt;/code&gt; instead of &lt;code&gt;user/repo/ack&lt;/code&gt;).</source>
          <target state="translated">해당 탭에 대한 풀 요청을 작성하여 이전 공식 파일을 삭제하고 새 공식 파일을 추가 한 후 &lt;code&gt;newack: renamed from ack&lt;/code&gt; 같은 커밋 메시지와 함께 &lt;code&gt;formula_renames.json&lt;/code&gt; 에 추가하십시오 . (예를 들면 정식 이름을 사용하여 &lt;code&gt;ack&lt;/code&gt; 대신 &lt;code&gt;user/repo/ack&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="02d4ee035d3dece1df6b89918483457e04431d68" translate="yes" xml:space="preserve">
          <source>Create a pull request to the new tap adding the formula file as-is from the original tap. Fix any test failures that may occur due to the stricter requirements for new formulae than existing formula (e.g. &lt;code&gt;brew audit --strict&lt;/code&gt; must pass for that formula).</source>
          <target state="translated">원래 탭에서 그대로 공식 파일을 추가하여 새 탭에 대한 풀 요청을 작성하십시오. 기존 공식보다 새로운 공식에 대한 엄격한 요구 사항으로 인해 발생할 수있는 테스트 실패를 수정하십시오 (예 : &lt;code&gt;brew audit --strict&lt;/code&gt; 는 해당 공식에 대해 통과해야 함).</target>
        </trans-unit>
        <trans-unit id="90549c50f3330cca39df3726349e5c2fbbacf339" translate="yes" xml:space="preserve">
          <source>Create a pull request to the original tap deleting the formula file and add it to &lt;code&gt;tap_migrations.json&lt;/code&gt; with a commit message like &lt;code&gt;gv: migrate to homebrew/core&lt;/code&gt;.</source>
          <target state="translated">공식 파일을 삭제하여 원래 탭에 대한 풀 요청을 작성하고 &lt;code&gt;gv: migrate to homebrew/core&lt;/code&gt; 와 같은 커밋 메시지와 함께 &lt;code&gt;tap_migrations.json&lt;/code&gt; 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e0e2fbd555478b8ba381f851445c7787f9c64c6" translate="yes" xml:space="preserve">
          <source>Create a pull request to update &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; with a new version.</source>
          <target state="translated">새 버전으로 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 를 업데이트하기위한 pull 요청을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="d717ed92f6fe58597bf2b3e66fe5ac4d56c2879c" translate="yes" xml:space="preserve">
          <source>Create a pull request to update &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; with a new URL or a new tag.</source>
          <target state="translated">풀 요청을 생성하여 새 URL 또는 새 태그로 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 업데이트 합니다.</target>
        </trans-unit>
        <trans-unit id="f272eb5255a90307ea4561b51faef5bfe6c392cd" translate="yes" xml:space="preserve">
          <source>Create a pull request to update a formula with a new URL or a new tag.</source>
          <target state="translated">새 URL 또는 새 태그로 공식을 업데이트하기위한 풀 요청을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="66986a6b5e894243cb6e9828d87ac111ff6a4030" translate="yes" xml:space="preserve">
          <source>Create an issue</source>
          <target state="translated">이슈 만들기</target>
        </trans-unit>
        <trans-unit id="3dbcca8732f5a8388d50be2de8f7879d4884de0d" translate="yes" xml:space="preserve">
          <source>Create your pull request from a new branch</source>
          <target state="translated">새 지점에서 풀 요청 작성</target>
        </trans-unit>
        <trans-unit id="c26bbac237bbf7e450510360d820b75a048906a0" translate="yes" xml:space="preserve">
          <source>Creates the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; and opens it in an editor.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 만들고 편집기에서 엽니 다.</target>
        </trans-unit>
        <trans-unit id="ce9539754af5e6564cb585c386e48fb85b44fe13" translate="yes" xml:space="preserve">
          <source>Creating a Homebrew Issue</source>
          <target state="translated">홈브류 이슈 만들기</target>
        </trans-unit>
        <trans-unit id="7bc778c12e899e1f9cc13dc6bd47aca71934ccc9" translate="yes" xml:space="preserve">
          <source>Creating a check</source>
          <target state="translated">수표 만들기</target>
        </trans-unit>
        <trans-unit id="ef61b4bbe955d6710717ab6a7be873eb68b7cf3d" translate="yes" xml:space="preserve">
          <source>Creating a tap</source>
          <target state="translated">탭 만들기</target>
        </trans-unit>
        <trans-unit id="518e4efe69388d0030975af803b4fccebe90ca66" translate="yes" xml:space="preserve">
          <source>Creating the diff</source>
          <target state="translated">diff 만들기</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="b1135a03f2d984031c2d840e31e1490d1b4d4094" translate="yes" xml:space="preserve">
          <source>Cross-compilers based on GCC will typically be &amp;ldquo;keg-only&amp;rdquo; and therefore not linked into the path by default.</source>
          <target state="translated">GCC 기반의 크로스 컴파일러는 일반적으로 &quot;케그 전용&quot;이므로 기본적으로 경로에 연결되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a9892524ceff732b3bcdb5f0d3e90e560dd733c" translate="yes" xml:space="preserve">
          <source>Custom GCC and Cross Compilers</source>
          <target state="translated">맞춤형 GCC 및 크로스 컴파일러</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="8ce166fb5e233130dd1ccab65d5ab716895cba1a" translate="yes" xml:space="preserve">
          <source>DEVELOPER COMMANDS</source>
          <target state="translated">개발자 명령</target>
        </trans-unit>
        <trans-unit id="1180597894cf6c0db27abcbbcf4be09e2d1a72e1" translate="yes" xml:space="preserve">
          <source>Debian or Ubuntu</source>
          <target state="translated">데비안 또는 우분투</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="a07d4c81cadaeb18c6dc8f2e02b77a1d82615e5c" translate="yes" xml:space="preserve">
          <source>Definitions for dynamic code (i.e. meta-programming) are generated using &lt;code&gt;srb rbi hidden-definitions&lt;/code&gt;.</source>
          <target state="translated">동적 코드 (예 : 메타 프로그래밍)에 &lt;code&gt;srb rbi hidden-definitions&lt;/code&gt; 사용하여 생성 됩니다 .</target>
        </trans-unit>
        <trans-unit id="5a5860d7bcaa9eb8c72e7bb82c9e9ce64adff4a6" translate="yes" xml:space="preserve">
          <source>Definitions for missing constants are generated using &lt;code&gt;srb rbi todo&lt;/code&gt;.</source>
          <target state="translated">누락 된 상수에 대한 정의는 &lt;code&gt;srb rbi todo&lt;/code&gt; 를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="c919d23a5f2969b7978a543c52fb626df8a21b56" translate="yes" xml:space="preserve">
          <source>Depending on the change you want to make, you need to send the pull request to the appropriate one of Homebrew&amp;rsquo;s main repositories. If you want to submit a change to Homebrew core code (the &lt;code&gt;brew&lt;/code&gt; implementation), you should open the pull request on &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;Homebrew/brew&lt;/a&gt;. If you want to submit a change for a formula, you should open the pull request on the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; tap or another &lt;a href=&quot;https://github.com/Homebrew&quot;&gt;official tap&lt;/a&gt;, based on the formula type.</source>
          <target state="translated">변경하려는 사항에 따라 풀 요청을 해당 Homebrew의 주요 리포지토리 중 하나로 보내야합니다. Homebrew 핵심 코드 ( &lt;code&gt;brew&lt;/code&gt; 구현)에 대한 변경 사항을 제출하려면 &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;Homebrew / brew&lt;/a&gt; 에서 풀 요청을 열어야합니다 . 수식에 대한 변경 사항을 제출 하려면 수식 유형 에 따라 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;홈 브루 / 코어&lt;/a&gt; 탭 또는 다른 &lt;a href=&quot;https://github.com/Homebrew&quot;&gt;공식 탭&lt;/a&gt; 에서 풀 요청을 열어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a44a6dc924e8c683a898ce809f6e09e17be03838" translate="yes" xml:space="preserve">
          <source>Deprecate and Disable Reasons</source>
          <target state="translated">지원 중단 및 비활성화 이유</target>
        </trans-unit>
        <trans-unit id="7bcf31da20786c7f02fed0cc7ca27488b843827e" translate="yes" xml:space="preserve">
          <source>Deprecating and disabling a formula</source>
          <target state="translated">공식 지원 중단 및 비활성화</target>
        </trans-unit>
        <trans-unit id="b022c48375506a62d22ecdccf566c6c0d8825024" translate="yes" xml:space="preserve">
          <source>Deprecating, Disabling, and Removing Formulae</source>
          <target state="translated">공식 폐기, 비활성화 및 제거</target>
        </trans-unit>
        <trans-unit id="66bb12951e7ca5cb554a9728924da50f3effa1ba" translate="yes" xml:space="preserve">
          <source>Deprecation</source>
          <target state="translated">Deprecation</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="c1b578bfc25252fd6a838a3e527c5808fd92fdcd" translate="yes" xml:space="preserve">
          <source>Detailed explanation about why we use Method Signatures and its syntax can be found &lt;a href=&quot;https://sorbet.org/docs/sigs&quot;&gt;here&lt;/a&gt;. The only extra thing to keep in mind is that we add method signatures to RBI files instead of the actual method definition in the code. This way we preserve the original code structure and everything related to Sorbet is kept within the &lt;code&gt;Library/Homebrew/sorbet&lt;/code&gt; directory.</source>
          <target state="translated">Method Signatures를 사용하는 이유와 구문에 대한 자세한 설명은 &lt;a href=&quot;https://sorbet.org/docs/sigs&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있습니다 . 기억해야 할 유일한 추가 사항은 코드의 실제 메서드 정의 대신 RBI 파일에 메서드 서명을 추가한다는 것입니다. 이렇게하면 원래 코드 구조를 보존하고 Sorbet과 관련된 모든 것이 &lt;code&gt;Library/Homebrew/sorbet&lt;/code&gt; 디렉토리에 보관됩니다 .</target>
        </trans-unit>
        <trans-unit id="fac074b8ffe9497e559ed18aed69093efc761db5" translate="yes" xml:space="preserve">
          <source>Detecting whether a &lt;code&gt;setup.py&lt;/code&gt; uses &lt;code&gt;setup()&lt;/code&gt; from setuptools or distutils is difficult, but we always need to pass this flag to setuptools-based scripts. &lt;code&gt;pip&lt;/code&gt; faces the same problem that we do and forces &lt;code&gt;setup()&lt;/code&gt; to use the setuptools version by loading a shim around &lt;code&gt;setup.py&lt;/code&gt; that imports setuptools before doing anything else. Since setuptools monkey-patches distutils and replaces its &lt;code&gt;setup&lt;/code&gt; function, this provides a single, consistent interface. We have borrowed this code and use it in &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setup.py&lt;/code&gt; 가 setuptools 또는 distutils에서 &lt;code&gt;setup()&lt;/code&gt; 을 사용 하는지 여부를 감지하는 것은 어렵지만 항상이 플래그를 setuptools 기반 스크립트로 전달해야합니다. &lt;code&gt;pip&lt;/code&gt; 같은 문제에 직면 우리가하고 강제한다는 &lt;code&gt;setup()&lt;/code&gt; 주위에 심을로드하여 setuptools에 버전을 사용하는 &lt;code&gt;setup.py&lt;/code&gt; 그 무엇을하기 전에 수입 setuptools에가. setuptools는 distutils를 패치하고 &lt;code&gt;setup&lt;/code&gt; 기능을 대체하므로 단일의 일관된 인터페이스를 제공합니다. 이 코드를 빌려 &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; 에서 사용했습니다. .</target>
        </trans-unit>
        <trans-unit id="354dc52568eb0f8022aa79a14e3b9e83aa190442" translate="yes" xml:space="preserve">
          <source>Determine if any strategies apply to the first URL. If not, try the next URL.</source>
          <target state="translated">첫 번째 URL에 적용되는 전략이 있는지 확인합니다. 그렇지 않은 경우 다음 URL을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="75984a1d5e06c71af856dc417a6912265bf9513a" translate="yes" xml:space="preserve">
          <source>Developer/Internal API Documentation</source>
          <target state="translated">개발자 / 내부 API 설명서</target>
        </trans-unit>
        <trans-unit id="ddbea7fa80f8b421628f031865b33d2a57d67b23" translate="yes" xml:space="preserve">
          <source>Diagram Guidelines</source>
          <target state="translated">다이어그램 지침</target>
        </trans-unit>
        <trans-unit id="3bfccca7c4c207073fa10d1a04078e283d1a5afd" translate="yes" xml:space="preserve">
          <source>Did you &lt;code&gt;chown root /Applications/TextMate.app&lt;/code&gt;? Probably not. So is it that important to &lt;code&gt;chown root wget&lt;/code&gt;?</source>
          <target state="translated">당신이나요 &lt;code&gt;chown root /Applications/TextMate.app&lt;/code&gt; ? 아마 아닙니다. &lt;code&gt;chown root wget&lt;/code&gt; 을 chown 하는 것이 중요합니다 합니까?</target>
        </trans-unit>
        <trans-unit id="b67b7edcd18ced4a9720325caf1dcb18e0ed01b5" translate="yes" xml:space="preserve">
          <source>Did you find something in Homebrew that wasn&amp;rsquo;t the latest version? You can help yourself and others by submitting a pull request to update the formula.</source>
          <target state="translated">Homebrew에서 최신 버전이 아닌 것을 찾았습니까? 수식을 업데이트하기 위해 풀 요청을 제출하여 자신과 다른 사람들을 도울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7016f1787ed4c288e6f2cfac50c915d8cd7a4a98" translate="yes" xml:space="preserve">
          <source>Directories with names that contain spaces. Homebrew itself can handle spaces, but many build scripts cannot.</source>
          <target state="translated">공백이 포함 된 이름을 가진 디렉토리. Homebrew 자체는 공백을 처리 할 수 ​​있지만 많은 빌드 스크립트는 처리 할 수 ​​없습니다.</target>
        </trans-unit>
        <trans-unit id="03bf0a54b86fdf600ed47b76df6625dec956b028" translate="yes" xml:space="preserve">
          <source>Disabling</source>
          <target state="translated">Disabling</target>
        </trans-unit>
        <trans-unit id="d2804d4d134feec74a23e45c507d5ae38d82446d" translate="yes" xml:space="preserve">
          <source>Display &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s name and one-line description. Formula descriptions are cached; the cache is created on the first search, making that search slower than subsequent ones.</source>
          <target state="translated">디스플레이 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 의 이름과 한 줄 설명. 공식 설명이 캐시됩니다. 캐시는 첫 번째 검색에서 작성되므로 해당 검색이 후속 검색보다 느립니다.</target>
        </trans-unit>
        <trans-unit id="ef5361a48824dffe511011228466a9c23f26d76d" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s Caskroom path.</source>
          <target state="translated">Homebrew의 Caskroom 경로를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0ac03d6b30bfa0ae8c7ffcfffd1dce76c0da5dfa" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s Cellar path. &lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;$(brew --prefix)/Cellar&lt;/code&gt;, or if that directory doesn&amp;rsquo;t exist, &lt;code&gt;$(brew --repository)/Cellar&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 지하실 경로를 표시합니다. &lt;em&gt;기본값 : &lt;/em&gt; &lt;code&gt;$(brew --prefix)/Cellar&lt;/code&gt; 또는 해당 디렉토리가 없으면 &lt;code&gt;$(brew --repository)/Cellar&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7fbc8f4d6a720b26e92b39bb8c35e5130a85754" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s download cache. See also &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 다운로드 캐시를 표시합니다. &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="1c0d2337577758246c8372f64cfad1d2320c3c0e" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s install path. &lt;em&gt;Default:&lt;/em&gt;</source>
          <target state="translated">Homebrew의 설치 경로를 표시합니다. &lt;em&gt;기본:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6329cdb3c3a5ff4a9f4bf3a4fd0a006886bcc812" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s install path. &lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;/usr/local&lt;/code&gt; on macOS and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; on Linux.</source>
          <target state="translated">Homebrew의 설치 경로를 표시하십시오. &lt;em&gt;기본값 :&lt;/em&gt; macOS의 &lt;code&gt;/usr/local&lt;/code&gt; 및 &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; Linux의 경우</target>
        </trans-unit>
        <trans-unit id="59c387a50274755e0c8dc3dc2d62dd9a4babbfac" translate="yes" xml:space="preserve">
          <source>Display brief statistics for your Homebrew installation.</source>
          <target state="translated">Homebrew 설치에 대한 간단한 통계를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9cdd9dc0143adebd578b40adeaacb38af80cf4b5" translate="yes" xml:space="preserve">
          <source>Display detailed information about one or more provided &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;. Display a brief summary of all installed taps if no &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; are passed.</source>
          <target state="translated">하나 이상의 제공된 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에 대한 자세한 정보를 표시 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 이 전달 되지 않은 경우 설치된 모든 탭에 대한 간략한 요약을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="db46d9d074578ac5fc2a81d078530d03a9169d17" translate="yes" xml:space="preserve">
          <source>Display install options specific to &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 특정한 설치 옵션 &lt;em&gt;표시&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3eae210ed7c21c42619d0a258853ff324d0e38fb" translate="yes" xml:space="preserve">
          <source>Display out-of-date brew formulae and the latest version available. Also displays whether a pull request has been opened with the URL.</source>
          <target state="translated">오래된 추출 공식과 사용 가능한 최신 버전을 표시합니다. 또한 URL로 풀 요청이 열렸는지 여부도 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5576f05cf399f83c11b7e38dcafae98afc4ec617" translate="yes" xml:space="preserve">
          <source>Display the current state of Homebrew&amp;rsquo;s analytics.</source>
          <target state="translated">Homebrew 분석의 현재 상태를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="09e3559b5b8432acf16c6a2aebb6afb3f5d07cef" translate="yes" xml:space="preserve">
          <source>Display the current state of Homebrew&amp;rsquo;s completions.</source>
          <target state="translated">Homebrew의 현재 완료 상태를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4824492b2320818eb9716c42ce1fe376ddeaa2ce" translate="yes" xml:space="preserve">
          <source>Display the path to the file being used when invoking &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;brew&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/em&gt; 를 호출 할 때 사용중인 파일의 경로를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="f4309e80482bd2c9c7ff06e7292007f52a2f22a8" translate="yes" xml:space="preserve">
          <source>Display the path to the file which is used when invoking &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;brew&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/em&gt; 를 호출 할 때 사용되는 파일의 경로를 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="da0ccd25c8dea1602bbd1fa665278150d8b04c69" translate="yes" xml:space="preserve">
          <source>Display the path where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is located.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 있는 경로를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="03953fd12c0e83f9c7b54e69e2c02773b3ed0418" translate="yes" xml:space="preserve">
          <source>Display the path where a formula is located.</source>
          <target state="translated">수식이있는 경로를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="4a642cb198129fa6f25238331ebec3ae5cfa2c0d" translate="yes" xml:space="preserve">
          <source>Display the source of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 의 출처를 &lt;em&gt;표시&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4cae5e4cc0cd30626ed5a84571e185119c60db96" translate="yes" xml:space="preserve">
          <source>Display the source of a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 또는 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 의 출처를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="87383d1b9f73f4dd8f93046cefbe6745e60bb434" translate="yes" xml:space="preserve">
          <source>Display where Homebrew&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; directory is located.</source>
          <target state="translated">Homebrew의 &lt;code&gt;.git&lt;/code&gt; 디렉토리가있는 위치를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="f65cec916b96bd40139919e9c3ec70189c6d359f" translate="yes" xml:space="preserve">
          <source>Display where Homebrew&amp;rsquo;s git repository is located.</source>
          <target state="translated">Homebrew의 git 저장소가있는 위치를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0ef90ae348cb1c1b7ce6e44df4eaf26ddb1c8cb5" translate="yes" xml:space="preserve">
          <source>Displays information about the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 에 대한 정보를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="6e44520190aacef8e307f6da9f1fb8eb74138e35" translate="yes" xml:space="preserve">
          <source>Distribute (not to be confused with distutils) is an obsolete fork of setuptools. Distlib is a package maintained outside the standard library which is used by pip for some low-level packaging operations and is not relevant to most &lt;code&gt;setup.py&lt;/code&gt; users.</source>
          <target state="translated">배포 (distutils와 혼동하지 말 것)는 오래된 setuptools 포크입니다. Distlib는 표준 라이브러리 외부에서 유지 관리되는 패키지로, 일부 저수준 패키징 작업에 pip에서 사용되며 대부분의 설정과 관련이 없습니다 &lt;code&gt;setup.py&lt;/code&gt; 사용자 .</target>
        </trans-unit>
        <trans-unit id="db35d31526082a9e534454863825087ac133e705" translate="yes" xml:space="preserve">
          <source>Distutils and pip use a &amp;ldquo;flat&amp;rdquo; installation hierarchy that installs modules as individual files under site-packages while &lt;code&gt;easy_install&lt;/code&gt; installs zipped eggs to site-packages instead.</source>
          <target state="translated">Distutils 및 pip는 &quot;플랫&quot;설치 계층 구조를 사용하여 사이트 패키지에서 개별 파일로 모듈을 설치하는 반면 &lt;code&gt;easy_install&lt;/code&gt; 은 대신 압축 된 계란을 사이트 패키지에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="d290ab5acfb87dddd21a4bcb22b0542b37290dcf" translate="yes" xml:space="preserve">
          <source>Distutils is a module in the Python standard library that provides developers a basic package management API. Setuptools is a module distributed outside the standard library that extends distutils. It is a convention that Python packages provide a &lt;code&gt;setup.py&lt;/code&gt; that calls the &lt;code&gt;setup()&lt;/code&gt; function from either distutils or setuptools.</source>
          <target state="translated">Distutils는 개발자에게 기본 패키지 관리 API를 제공하는 Python 표준 라이브러리의 모듈입니다. Setuptools는 표준 라이브러리 외부에 분산되어 distutils를 확장하는 모듈입니다. 파이썬 패키지 는 &lt;code&gt;setup()&lt;/code&gt; 을 호출 하는 &lt;code&gt;setup.py&lt;/code&gt; 를 제공하는 규칙입니다 distutils 또는 setuptools에서 함수 .</target>
        </trans-unit>
        <trans-unit id="42743e19c67d0644a310ca5415c0518b51496566" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;brew info python&lt;/code&gt; or &lt;code&gt;brew info python@2&lt;/code&gt; for precise information about the paths. Note, a brewed Python still searches for modules in &lt;code&gt;/Library/Python/X.Y/site-packages&lt;/code&gt; and also in &lt;code&gt;~/Library/Python/X.Y/lib/python/site-packages&lt;/code&gt;.</source>
          <target state="translated">수행 &lt;code&gt;brew info python&lt;/code&gt; 또는 &lt;code&gt;brew info python@2&lt;/code&gt; 경로에 대한 정확한 정보를 위해. brewed Python은 여전히 &lt;code&gt;/Library/Python/X.Y/site-packages&lt;/code&gt; 및 &lt;code&gt;~/Library/Python/X.Y/lib/python/site-packages&lt;/code&gt; 에서 모듈을 검색 합니다 .</target>
        </trans-unit>
        <trans-unit id="4d0215b64d715c5aa2f818457396f02f5ed81468" translate="yes" xml:space="preserve">
          <source>Do not argue with Homebrew maintainers. You may disagree but unless they change their mind, please implement what they request. Ultimately they control what is included in Homebrew, as they have to support any changes that are made.</source>
          <target state="translated">Homebrew 관리자와 논쟁하지 마십시오. 동의하지 않을 수도 있지만 마음이 바뀌지 않는 한 요청한 내용을 이행하십시오. 궁극적으로 변경 사항을 지원해야하므로 Homebrew에 포함 된 내용을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="bf1e14d195c1debfe3c1d9d6b165718756038c55" translate="yes" xml:space="preserve">
          <source>Do not continue discussion in closed pull requests.</source>
          <target state="translated">닫힌 풀 요청에 대해서는 계속 논의하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="7deaf45267db90d1c1defcd99a94899e306a645a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t follow the advice here but fix by using &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; in the formula as described in &lt;a href=&quot;python-for-formula-authors&quot;&gt;Python for Formula Authors&lt;/a&gt;.</source>
          <target state="translated">여기의 조언을 따르지 말고 &lt;a href=&quot;python-for-formula-authors&quot;&gt;Formula Authors 용 Python에&lt;/a&gt; 설명 된대로 &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; 를 사용하여 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fb9ce6f3b50d52d36fc4051f30719a97d0427b7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget Homebrew is all Git underneath! &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;Maintain your own tap&lt;/a&gt; if you have to!</source>
          <target state="translated">Homebrew가 모두 아래에 있다는 것을 잊지 마십시오! 당신이해야 할 경우 &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;자신의 탭을 유지&lt;/a&gt; !</target>
        </trans-unit>
        <trans-unit id="61309e53b674c52bf095adc9d16b5bfeece0d876" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t make your formula build an &lt;code&gt;.app&lt;/code&gt; (native macOS Application); we don&amp;rsquo;t want those things in Homebrew. Encourage upstream projects to build and support a &lt;code&gt;.app&lt;/code&gt; that can be distributed by &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew/cask&lt;/a&gt; (and used without it, too).</source>
          <target state="translated">수식을 &lt;code&gt;.app&lt;/code&gt; (기본 macOS 응용 프로그램)로 만들지 마십시오 . 우리는 Homebrew에서 그런 것들을 원하지 않습니다. 업스트림 프로젝트 가 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew / cask에서&lt;/a&gt; 배포 할 수 있는 &lt;code&gt;.app&lt;/code&gt; 를 빌드하고 지원하도록 권장 없이도 사용할 .</target>
        </trans-unit>
        <trans-unit id="87ee1041742e431df823681ec08f6029aa2004e1" translate="yes" xml:space="preserve">
          <source>Double-check for dependencies</source>
          <target state="translated">종속성 재확인</target>
        </trans-unit>
        <trans-unit id="42aa0f68a42bb1fb8709cb7e6d04e52424f0ab05" translate="yes" xml:space="preserve">
          <source>Download URL</source>
          <target state="translated">URL 다운로드</target>
        </trans-unit>
        <trans-unit id="d2ef45756cd44ba87107185a41614bc1731ea9d1" translate="yes" xml:space="preserve">
          <source>Download a bottle (if available) or source packages for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. For tarballs, also print SHA-256 checksums.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 대한 병 (사용 가능한 경우) 또는 소스 패키지를 다운로드합니다 . tarball의 경우 SHA-256 체크섬도 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="076810a043dcacfd311c9c9e9b98c2e8d88a3f8a" translate="yes" xml:space="preserve">
          <source>Download a bottle (if available) or source packages for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;e and binaries for &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;s. For files, also print SHA-256 checksums.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; e 용 병 (사용 가능한 경우) 또는 소스 패키지 와 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 바이너리를 다운로드합니다 . 파일의 경우 SHA-256 체크섬도 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="4d82b827dbec7b58bc6d507cccb93e74d60321c8" translate="yes" xml:space="preserve">
          <source>Download and publish bottles, and apply the bottle commit from a pull request with artifacts generated by GitHub Actions. Requires write access to the repository.</source>
          <target state="translated">병을 다운로드 및 게시하고 GitHub 작업에서 생성 된 아티팩트를 사용하여 pull 요청에서 병 커밋을 적용합니다. 저장소에 대한 쓰기 액세스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="53ce75ae0353276f7d54107f064c8702370a1497" translate="yes" xml:space="preserve">
          <source>Download the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/install/master/uninstall&quot;&gt;uninstall script&lt;/a&gt; and run &lt;code&gt;./uninstall --help&lt;/code&gt; to view more uninstall options.</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/install/master/uninstall&quot;&gt;제거 스크립트를&lt;/a&gt; 다운로드하고 &lt;code&gt;./uninstall --help&lt;/code&gt; 를 실행 하여 추가 제거 옵션을 봅니다.</target>
        </trans-unit>
        <trans-unit id="fc2b6445379216d5becb76d91882d93b7738d2fd" translate="yes" xml:space="preserve">
          <source>Download the file and drop it in &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt;, but watch the file name. Homebrew downloads files as &lt;code&gt;&amp;lt;formula&amp;gt;-&amp;lt;version&amp;gt;&lt;/code&gt;. In the case of Erlang, this requires renaming the file from &lt;code&gt;otp_src_R13B03&lt;/code&gt; to &lt;code&gt;erlang-R13B03&lt;/code&gt;.</source>
          <target state="translated">파일을 다운로드하여 &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt; 에 놓으십시오 . 그러나 파일 이름을보십시오. Homebrew는 &lt;code&gt;&amp;lt;formula&amp;gt;-&amp;lt;version&amp;gt;&lt;/code&gt; 으로 파일을 다운로드합니다 . Erlang의 경우, 파일 이름을 &lt;code&gt;otp_src_R13B03&lt;/code&gt; 에서 &lt;code&gt;erlang-R13B03&lt;/code&gt; 으로 바꾸어야 합니다.</target>
        </trans-unit>
        <trans-unit id="a04f883fdcdaa5b841bc357b5b1966f0f9a093ff" translate="yes" xml:space="preserve">
          <source>Download the source packages for the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. For tarballs, also print SHA-256 checksums.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 대한 소스 패키지 다운로드&lt;em&gt;&lt;/em&gt; . 타르볼의 경우 SHA-256 체크섬도 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="c8498ff8afe631608ee46819fdce89d40d0adcb2" translate="yes" xml:space="preserve">
          <source>Downloads remote application files to local cache.</source>
          <target state="translated">원격 애플리케이션 파일을 로컬 캐시에 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="8c46b88e65e88b5dc237416934f447b6cde799a0" translate="yes" xml:space="preserve">
          <source>Driver Casks live in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-drivers&quot;&gt;Homebrew/homebrew-cask-drivers&lt;/a&gt; repository. See the drivers repo &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-drivers/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for details.</source>
          <target state="translated">Driver Casks는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-drivers&quot;&gt;Homebrew / homebrew-cask-drivers&lt;/a&gt; 저장소에 있습니다. 자세한 내용은 드라이버 repo &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-drivers/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a40ad45bd2e1220ed2a1f5743ec1323bd7700e8f" translate="yes" xml:space="preserve">
          <source>Drivers</source>
          <target state="translated">Drivers</target>
        </trans-unit>
        <trans-unit id="0a49a87262259ca37f83ec698e40f56ba4c7060e" translate="yes" xml:space="preserve">
          <source>Dump raw source of a &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; to the standard output.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 의 원시 소스를 표준 출력으로 덤프 합니다.</target>
        </trans-unit>
        <trans-unit id="860eb4de0bbf0d6af5806d85169d3edc22841940" translate="yes" xml:space="preserve">
          <source>Dupes in &lt;code&gt;homebrew/core&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;homebrew/core&lt;/code&gt; 속임수</target>
        </trans-unit>
        <trans-unit id="15d54da16fed3cc2ae89bbdaf9ad9e1b0ec1df2c" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT</source>
          <target state="translated">ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="b33c3801d541763c7bdc9517ac6b20f3537370dc" translate="yes" xml:space="preserve">
          <source>ESSENTIAL COMMANDS</source>
          <target state="translated">필수 명령</target>
        </trans-unit>
        <trans-unit id="3a32c66b4f1ac13712e7f6300d5afb69ac0ef1b7" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/em&gt; may be the number of a PR in &lt;code&gt;homebrew/core&lt;/code&gt;, the URL of a PR on GitHub, the URL of a commit on GitHub or a &amp;ldquo;https://jenkins.brew.sh/job/&amp;hellip;&amp;rdquo; testing job URL.</source>
          <target state="translated">각 &lt;em&gt; &lt;code&gt;patch&lt;/code&gt; &lt;/em&gt; 는 &lt;code&gt;homebrew/core&lt;/code&gt; 의 PR 수, GitHub의 PR URL, GitHub의 커밋 URL 또는 &quot;https://jenkins.brew.sh/job/&amp;hellip;&quot;테스트 작업 URL 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bca545aa3e494c4da44c8532ffc06529c5f36504" translate="yes" xml:space="preserve">
          <source>Editor plugins</source>
          <target state="translated">에디터 플러그인</target>
        </trans-unit>
        <trans-unit id="d89a5ec1140ce5dd978c2baf15972fdf48b8b61f" translate="yes" xml:space="preserve">
          <source>Emacs</source>
          <target state="translated">Emacs</target>
        </trans-unit>
        <trans-unit id="2f8ada2a6dfaba33b145e945f0a442aee6152059" translate="yes" xml:space="preserve">
          <source>Embedded (&lt;strong&gt;END&lt;/strong&gt;) patches can be declared like so:</source>
          <target state="translated">임베디드 ( &lt;strong&gt;END&lt;/strong&gt; ) 패치는 다음과 같이 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea36f81bf05de6ebbcde43a4a3411161167c34c6" translate="yes" xml:space="preserve">
          <source>Embedding a diagram into Markdown</source>
          <target state="translated">마크 다운에 다이어그램 포함</target>
        </trans-unit>
        <trans-unit id="edd0c2ff333abbaf61e1958e96c0381ebc746990" translate="yes" xml:space="preserve">
          <source>Ensure that no code changes have happened for at least a couple of hours (ideally 4 hours), at least one Homebrew/homebrew-core pull request CI job has completed successfully, checked the state of the Homebrew/brew &lt;code&gt;master&lt;/code&gt; CI job (i.e. main jobs green or green after rerunning), and that you are confident there are no major regressions on the current &lt;code&gt;master&lt;/code&gt;, branch.</source>
          <target state="translated">최소한 2 시간 (이상적으로는 4 시간) 동안 코드 변경이 발생하지 않았는지, 최소한 하나의 Homebrew / homebrew-core 풀 요청 CI 작업이 성공적으로 완료되었는지, Homebrew / brew &lt;code&gt;master&lt;/code&gt; CI 작업의 상태 (예 : main 작업 재실행 후 녹색 또는 녹색) 현재 &lt;code&gt;master&lt;/code&gt; 브랜치 에 주요 회귀가 없다고 확신 합니다.</target>
        </trans-unit>
        <trans-unit id="17f1688a049f2b2a29d6af4dac2d57cf390fc922" translate="yes" xml:space="preserve">
          <source>Ensure you reference any relevant GitHub issue, e.g. &lt;code&gt;Closes #12345&lt;/code&gt; in the commit message. Homebrew&amp;rsquo;s history is the first thing future contributors will look to when trying to understand the current state of formulae they&amp;rsquo;re interested in.</source>
          <target state="translated">커밋 메시지에서 &lt;code&gt;Closes #12345&lt;/code&gt; 와 같은 관련 GitHub 문제를 참조하십시오 . Homebrew의 역사는 미래의 기고자들이 관심있는 공식의 현재 상태를 이해하려고 할 때 가장 먼저 보게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="b699a68b79da55f415c814aadd3601d2a6ff2fee" translate="yes" xml:space="preserve">
          <source>Enter an interactive shell for Homebrew&amp;rsquo;s build environment. Use years-battle-hardened build logic to help your &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; and even your &lt;code&gt;gem install&lt;/code&gt; succeed. Especially handy if you run Homebrew in an Xcode-only configuration since it adds tools like &lt;code&gt;make&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; which build systems would not find otherwise.</source>
          <target state="translated">Homebrew의 빌드 환경을위한 대화 형 셸을 입력합니다. 수년 간의 전투로 강화 된 빌드 로직을 사용하여 &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; 및 심지어 &lt;code&gt;gem install&lt;/code&gt; 성공 하도록 도와주세요 . Xcode 전용 구성에서 Homebrew를 실행하는 경우 특히 유용합니다. 빌드 시스템이 그렇지 않으면 찾을 수없는 &lt;code&gt;make&lt;/code&gt; 와 같은 도구 를 &lt;code&gt;PATH&lt;/code&gt; 에 추가 하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="a9dec5c45e72627fb72c648339bbd337bce81e3d" translate="yes" xml:space="preserve">
          <source>Enter the interactive Homebrew Ruby shell.</source>
          <target state="translated">대화식 Homebrew Ruby 쉘을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="6b7ad72e5de0fd665821206e3fe27981c8e8a173" translate="yes" xml:space="preserve">
          <source>Even if all criteria are met we may not accept the formula. Documentation tends to lag behind current decision-making. Although some rejections may seem arbitrary or strange they are based on years of experience making Homebrew work acceptably for our users.</source>
          <target state="translated">모든 기준을 충족하더라도 공식을 수락하지 않을 수 있습니다. 문서는 현재의 의사 결정보다 뒤쳐지는 경향이 있습니다. 일부 거부는 임의적이거나 이상하게 보일 수 있지만 사용자가 Homebrew를 수용 할 수있게 해준 수년간의 경험을 바탕으로합니다.</target>
        </trans-unit>
        <trans-unit id="d8989c4c50538b81de4e2998e00a8f2d5ad66b25" translate="yes" xml:space="preserve">
          <source>Eventually a new version of the software will be released. In this case you should update the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt;&lt;code&gt;sha256&lt;/code&gt;&lt;/a&gt;. If a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt; line exists outside any &lt;code&gt;bottle do&lt;/code&gt; block &lt;em&gt;and&lt;/em&gt; the new release is stable rather than devel, it should be removed.</source>
          <target state="translated">결국 새로운 버전의 소프트웨어가 출시 될 것입니다. 이 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt; &lt;code&gt;sha256&lt;/code&gt; 을&lt;/a&gt; 업데이트해야합니다 . 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/a&gt; 라인은 어떤 외부에 존재 &lt;code&gt;bottle do&lt;/code&gt; 블록을 &lt;em&gt;하고&lt;/em&gt; 새 릴리스가 안정보다는 (STABLE), 그것은 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="f9389d6181a4d7f100e031d3f7a50f3b4423a81c" translate="yes" xml:space="preserve">
          <source>Eventually a new version of the software will be released. In this case you should update the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt;&lt;code&gt;sha256&lt;/code&gt;&lt;/a&gt;. If a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt; line exists outside any &lt;code&gt;bottle do&lt;/code&gt; block it should be removed.</source>
          <target state="translated">결국 새로운 버전의 소프트웨어가 출시 될 것입니다. 이 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt; &lt;code&gt;sha256&lt;/code&gt; 을&lt;/a&gt; 업데이트해야합니다 . 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/a&gt; 라인은 어떤 외부에 존재 &lt;code&gt;bottle do&lt;/code&gt; 그것을 제거해야 차단합니다.</target>
        </trans-unit>
        <trans-unit id="ebf4c91c07ccb7d50d3062ac79e9a2aea8b13f1c" translate="yes" xml:space="preserve">
          <source>Every Ruby file in the codebase has a magic &lt;code&gt;# typed: &amp;lt;level&amp;gt;&lt;/code&gt; comment at the top, where &lt;code&gt;&amp;lt;level&amp;gt;&lt;/code&gt; is one of &lt;a href=&quot;https://sorbet.org/docs/static#file-level-granularity-strictness-levels&quot;&gt;Sorbet&amp;rsquo;s strictness levels&lt;/a&gt;, usually &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;strict&lt;/code&gt;. The &lt;code&gt;false&lt;/code&gt; files only report errors related to the syntax, constant resolution and correctness of the method signatures, but no type errors. Our long-term goal is to move all &lt;code&gt;false&lt;/code&gt; files to &lt;code&gt;true&lt;/code&gt; and start reporting type errors on those files as well. Therefore, when adding new files, you should ideally mark it with &lt;code&gt;# typed: true&lt;/code&gt; and work out any resulting type errors.</source>
          <target state="translated">코드베이스의 모든 Ruby 파일 에는 상단에 &lt;code&gt;# typed: &amp;lt;level&amp;gt;&lt;/code&gt; 주석이 있습니다. 여기서 &lt;code&gt;&amp;lt;level&amp;gt;&lt;/code&gt; 은 &lt;a href=&quot;https://sorbet.org/docs/static#file-level-granularity-strictness-levels&quot;&gt;Sorbet의 엄격 성 수준&lt;/a&gt; 중 하나이며 일반적으로 &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;strict&lt;/code&gt; 입니다. &lt;code&gt;false&lt;/code&gt; 파일은 메소드 서명의 구문, 일정 해상도와 정확성에 관련 오류,하지만 유형의 오류를보고합니다. 우리의 장기적인 목표는 모든 &lt;code&gt;false&lt;/code&gt; 파일을 &lt;code&gt;true&lt;/code&gt; 으로 이동하고 해당 파일에 대한 유형 오류보고를 시작하는 것입니다. 따라서 새 파일을 추가 할 때 이상적으로는 &lt;code&gt;# typed: true&lt;/code&gt; 하고 결과 유형 오류를 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="45f1973be697ef7973806074dcc327469b1fae05" translate="yes" xml:space="preserve">
          <source>Every Ruby file in the codebase is divided into three strictness levels: false, true and strict. The &lt;code&gt;false&lt;/code&gt; files only report errors related to the syntax, constant resolution and correctness of the method signatures, and not type errors. We use this file to override strictness on a file-by-file basis. Our longtime goal is to move all &lt;code&gt;false&lt;/code&gt; files to &lt;code&gt;true&lt;/code&gt; and start reporting type errors on those files as well. If you are making changes that require adding a new ruby file, we would urge you to add it to &lt;code&gt;true&lt;/code&gt; and work out the resulting type errors. Read more about Sorbet&amp;rsquo;s strictness levels &lt;a href=&quot;https://sorbet.org/docs/static#file-level-granularity-strictness-levels&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">코드베이스의 모든 Ruby 파일은 세 가지 엄격 성 수준 (거짓, 참, 엄격)으로 나뉩니다. &lt;code&gt;false&lt;/code&gt; 파일은 메소드 서명의 구문, 일정 해상도와 정확성에 관련 오류를보고하고, 오류를 입력하지. 이 파일을 사용하여 파일별로 엄격함을 재정의합니다. 우리의 오랜 목표는 모든 &lt;code&gt;false&lt;/code&gt; 파일을 &lt;code&gt;true&lt;/code&gt; 으로 옮기고 해당 파일에 대한 유형 오류보고를 시작하는 것입니다. 새 루비 파일을 추가해야하는 변경을 수행하는 경우 해당 파일을 &lt;code&gt;true&lt;/code&gt; 에 추가 하고 결과 유형 오류를 해결하는 것이 좋습니다. &lt;a href=&quot;https://sorbet.org/docs/static#file-level-granularity-strictness-levels&quot;&gt;여기에서&lt;/a&gt; Sorbet의 엄격 성 수준에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="b1cf753bd41a7ad989cf8bf9884be807ce6086d3" translate="yes" xml:space="preserve">
          <source>Everything is built on Git, so contribution is easy:</source>
          <target state="translated">모든 것이 Git을 기반으로하기 때문에 기여가 쉽다 :</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="6f03072242b8bbfb14ac022f693e14d7c9bddeee" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;livecheck&lt;/code&gt; blocks</source>
          <target state="translated">&lt;code&gt;livecheck&lt;/code&gt; 블록의 예</target>
        </trans-unit>
        <trans-unit id="f6a77f5d2a05672a325c994293e2004361f37345" translate="yes" xml:space="preserve">
          <source>Example for an SVG image embedded into Markdown:</source>
          <target state="translated">Markdown에 삽입 된 SVG 이미지의 예 :</target>
        </trans-unit>
        <trans-unit id="cc9680ed3c96d649c2758d1c86751d29dab7b89d" translate="yes" xml:space="preserve">
          <source>Example for styling (where allowed):</source>
          <target state="translated">스타일 지정 예 (허용되는 경우) :</target>
        </trans-unit>
        <trans-unit id="992c8ef7b7cf563be842401699c6588e3644343b" translate="yes" xml:space="preserve">
          <source>Example install using GCC 7:</source>
          <target state="translated">GCC 7을 사용한 설치 예 :</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="a8c0c8c83acd1fffb33a09e88beb961050573ab2" translate="yes" xml:space="preserve">
          <source>Exceptions to the Notability Threshold</source>
          <target state="translated">Notability 임계 값에 대한 예외</target>
        </trans-unit>
        <trans-unit id="5517646ddce7af783d545b9391908869b83222c9" translate="yes" xml:space="preserve">
          <source>External &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/a&gt;es can be declared using resource-style blocks:</source>
          <target state="translated">리소스 스타일 블록을 사용하여 외부 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt; &lt;code&gt;patch&lt;/code&gt; &lt;/a&gt; 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7a427d09b892f08dcfec10acd83caef4a9f48cc" translate="yes" xml:space="preserve">
          <source>External Commands</source>
          <target state="translated">외부 명령</target>
        </trans-unit>
        <trans-unit id="2afc52a5487070e7f44ad2102a4faed361851af4" translate="yes" xml:space="preserve">
          <source>External commands</source>
          <target state="translated">외부 명령</target>
        </trans-unit>
        <trans-unit id="42e0032553094139d5fc82206a01fb1b468d0086" translate="yes" xml:space="preserve">
          <source>External commands can be added to a tap to allow easy distribution. See &lt;a href=&quot;#external-commands-in-taps&quot;&gt;below&lt;/a&gt; for more details.</source>
          <target state="translated">쉽게 배포 할 수 있도록 탭에 외부 명령을 추가 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;#external-commands-in-taps&quot;&gt;아래&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0d087b5725e9f50aa9c642d2da11cc08db950b70" translate="yes" xml:space="preserve">
          <source>External commands can be hosted in a &lt;a href=&quot;taps&quot;&gt;tap&lt;/a&gt; to allow users to easily install and use them. See &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;How to Create and Maintain a Tap&lt;/a&gt; for more details about creating and maintaining a tap.</source>
          <target state="translated">&lt;a href=&quot;taps&quot;&gt;탭 한 번&lt;/a&gt; 으로 외부 명령을 호스팅 하여 사용자가 쉽게 설치하고 사용할 수 있습니다. &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;탭 생성 및 유지에&lt;/a&gt; 대한 자세한 내용은 탭 생성 및 유지 방법을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dfe9fc056dcbf11ff2c43afc315a6eaf159c20ce" translate="yes" xml:space="preserve">
          <source>External commands come in two flavours: Ruby commands and shell scripts.</source>
          <target state="translated">외부 명령은 Ruby 명령과 쉘 스크립트의 두 가지 형태로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="64c2e0d37dfec6b9babd4f6680d8314a349e6cb7" translate="yes" xml:space="preserve">
          <source>External commands in taps</source>
          <target state="translated">탭의 외부 명령</target>
        </trans-unit>
        <trans-unit id="81d4e5f617fcac2d6ea2ca0ef0e44be1949926f5" translate="yes" xml:space="preserve">
          <source>External commands should be added to a &lt;code&gt;cmd&lt;/code&gt; directory in the tap. An external command &lt;code&gt;extcmd&lt;/code&gt; implemented as a Ruby command should live in &lt;code&gt;cmd/extcmd.rb&lt;/code&gt; (don&amp;rsquo;t forget to &lt;code&gt;chmod +x&lt;/code&gt;).</source>
          <target state="translated">탭에서 &lt;code&gt;cmd&lt;/code&gt; 디렉토리에 외부 명령을 추가해야합니다 . Ruby 명령으로 구현 된 외부 명령 &lt;code&gt;extcmd&lt;/code&gt; 는 &lt;code&gt;cmd/extcmd.rb&lt;/code&gt; 에 있어야합니다 ( &lt;code&gt;chmod +x&lt;/code&gt; 잊지 마세요 ).</target>
        </trans-unit>
        <trans-unit id="d8fe7db1b3f1351da0c3de3f5b37bf5275338413" translate="yes" xml:space="preserve">
          <source>Extract or &lt;code&gt;git clone&lt;/code&gt; Homebrew wherever you want. Use &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; if possible (to enable the use of binary packages).</source>
          <target state="translated">원하는 곳에서 Homebrew를 추출하거나 &lt;code&gt;git clone&lt;/code&gt; . 가능한 경우 &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; 를 사용하십시오 (바이너리 패키지 사용을 활성화하기 위해).</target>
        </trans-unit>
        <trans-unit id="ac85d28f9a7ae98355f724bfd3707a3ce184c2bc" translate="yes" xml:space="preserve">
          <source>Extract or &lt;code&gt;git clone&lt;/code&gt; Homebrew wherever you want. Use &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; if possible (to enabled the use of binary packages).</source>
          <target state="translated">추출 또는 &lt;code&gt;git clone&lt;/code&gt; 원하는 곳에서 Homebrew를 . 가능하면 &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; 를 사용하십시오 (바이너리 패키지 사용 가능).</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="6b8f6a35b48a0afa1f1e1c73e07a3e281de4c8ec" translate="yes" xml:space="preserve">
          <source>Fedora, CentOS, or Red Hat</source>
          <target state="translated">페도라, CentOS 또는 Red Hat</target>
        </trans-unit>
        <trans-unit id="7c57df3b7f1397a3f63390c12e4d9af9038723c3" translate="yes" xml:space="preserve">
          <source>Fetch and reset Homebrew and all tap repositories (or any specified &lt;em&gt;&lt;code&gt;repository&lt;/code&gt;&lt;/em&gt;) using &lt;code&gt;git&lt;/code&gt;(1) to their latest &lt;code&gt;origin/HEAD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1)을 사용하여 Homebrew 및 모든 탭 저장소 (또는 지정된 &lt;em&gt; &lt;code&gt;repository&lt;/code&gt; &lt;/em&gt; )를 최신 &lt;code&gt;origin/HEAD&lt;/code&gt; 로 가져오고 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a5df09dfe00e71d2d59396935682acd85c69de27" translate="yes" xml:space="preserve">
          <source>Fetch and reset Homebrew and all tap repositories (or any specified &lt;em&gt;&lt;code&gt;repository&lt;/code&gt;&lt;/em&gt;) using &lt;code&gt;git&lt;/code&gt;(1) to their latest &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1)을 사용하여 Homebrew 및 모든 탭 저장소 (또는 지정된 &lt;em&gt; &lt;code&gt;repository&lt;/code&gt; &lt;/em&gt; )를 최신 &lt;code&gt;origin/master&lt;/code&gt; 로 가져오고 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="e45d17c936d01e458fc669f63e00d92a281df8f8" translate="yes" xml:space="preserve">
          <source>Fetch the newest version of Homebrew and all formulae from GitHub using &lt;code&gt;git&lt;/code&gt;(1) and perform any necessary migrations.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1)을 사용하여 GitHub에서 최신 버전의 Homebrew 및 모든 공식을 가져 오고 필요한 마이그레이션을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e364f6fc295ed2cd497729768044134cc61a9f80" translate="yes" xml:space="preserve">
          <source>Fetches and resets Homebrew and all tap repositories (or any specified &lt;code&gt;repository&lt;/code&gt;) using &lt;code&gt;git&lt;/code&gt;(1) to their latest &lt;code&gt;origin/master&lt;/code&gt;. Note this will destroy all your uncommitted or committed changes.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1)을 사용하여 Homebrew 및 모든 탭 리포지토리 (또는 지정된 &lt;code&gt;repository&lt;/code&gt; )를 최신 &lt;code&gt;origin/master&lt;/code&gt; 오고 재설정합니다 . 커밋되지 않거나 커밋 된 모든 변경 사항이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="d635760e4d07173504cf1ca672836f14b9162419" translate="yes" xml:space="preserve">
          <source>File level operations</source>
          <target state="translated">파일 레벨 작업</target>
        </trans-unit>
        <trans-unit id="c4bb047317cb8ba0e488310569bee37168a008ff" translate="yes" xml:space="preserve">
          <source>File names</source>
          <target state="translated">파일 이름</target>
        </trans-unit>
        <trans-unit id="ce56dc9db4e932966bffb4f17c6cfdf9506d9b1a" translate="yes" xml:space="preserve">
          <source>Files in the &lt;code&gt;.drawio.svg&lt;/code&gt; format can be processed offline.</source>
          <target state="translated">&lt;code&gt;.drawio.svg&lt;/code&gt; 형식의 파일은 오프라인으로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="986941d209cd282b8a6f5ee4ea0132b3d301d21a" translate="yes" xml:space="preserve">
          <source>Files with the &lt;code&gt;.drawio.svg&lt;/code&gt; extension are SVG files with embedded &lt;a href=&quot;https://www.diagrams.net/&quot;&gt;draw.io&lt;/a&gt; source code. Using that format lends itself to a developer-friendly workflow: it is valid SVG, plays well with &lt;code&gt;git diff&lt;/code&gt; and can be edited in lock-step using various online and offline flavours of draw.io. If you use VS Code, you can use an &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio&quot;&gt;extension&lt;/a&gt; for draw.io integration.</source>
          <target state="translated">와 파일 &lt;code&gt;.drawio.svg&lt;/code&gt; 확장은 임베디드와 SVG 파일입니다 &lt;a href=&quot;https://www.diagrams.net/&quot;&gt;draw.io&lt;/a&gt; 소스 코드. 이 형식을 사용하면 개발자 친화적 인 워크 플로에 적합합니다. 유효한 SVG이고 &lt;code&gt;git diff&lt;/code&gt; 와 잘 작동하며 draw.io의 다양한 온라인 및 오프라인 버전을 사용하여 잠금 단계에서 편집 할 수 있습니다. VS Code를 사용하는 경우 draw.io 통합을위한 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio&quot;&gt;확장&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="350755f19aa17c25480857074207ac40c955f395" translate="yes" xml:space="preserve">
          <source>Fill in the &lt;code&gt;homepage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;homepage&lt;/code&gt; 작성</target>
        </trans-unit>
        <trans-unit id="ee845b8ee554af30f9008de322c5fc949537313e" translate="yes" xml:space="preserve">
          <source>Fill in the &lt;code&gt;license&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;license&lt;/code&gt; 작성</target>
        </trans-unit>
        <trans-unit id="1562ed877687b01e22fc787204588ab2898aac09" translate="yes" xml:space="preserve">
          <source>Finally, click the &lt;code&gt;Open&lt;/code&gt; button if you want macOS to permanently allow the app to run on this Mac. &lt;strong&gt;Don&amp;rsquo;t do this unless you&amp;rsquo;re sure you trust the app.&lt;/strong&gt;</source>
          <target state="translated">마지막으로 macOS가이 Mac에서 앱을 영구적으로 실행하도록 하려면 &lt;code&gt;Open&lt;/code&gt; 버튼을 클릭합니다 . &lt;strong&gt;신뢰할 수있는 앱이 아니라면이 작업을 수행하지 마십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="686911da64422caabca1d79e6cd0f49f7822bfc3" translate="yes" xml:space="preserve">
          <source>Find pull requests that can be automatically merged using &lt;code&gt;brew pr-publish&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew pr-publish&lt;/code&gt; 를 사용하여 자동으로 병합 될 수있는 pull 요청을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="387ab4015cf3e9b110908f23c66412bad3d2b8d5" translate="yes" xml:space="preserve">
          <source>Finding a Home For Your Cask</source>
          <target state="translated">캐스 크를위한 집 찾기</target>
        </trans-unit>
        <trans-unit id="b008f55b79c48133809609724a204592a493c8fe" translate="yes" xml:space="preserve">
          <source>First update the formulae and Homebrew itself:</source>
          <target state="translated">먼저 공식과 Homebrew 자체를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="b16202f5bd6131b93527b7df86bcf2d11521068c" translate="yes" xml:space="preserve">
          <source>First, check the pull requests in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;homebrew-core&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/pulls&quot;&gt;linuxbrew-core&lt;/a&gt; repositories (whichever apply) to make sure there isn&amp;rsquo;t already an open PR. You may also want to look through closed pull requests for the formula, as sometimes formulae run into problems preventing them from being updated and it&amp;rsquo;s better to be aware of any issues before putting significant effort into an update.</source>
          <target state="translated">먼저 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;homebrew-core&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/pulls&quot;&gt;linuxbrew-core&lt;/a&gt; 리포지토리 (적용되는 경우) 에서 pull 요청을 확인하여 아직 열려있는 PR이 없는지 확인합니다. 때로는 공식이 업데이트를 방해하는 문제가 발생하고 업데이트에 상당한 노력을 기울이기 전에 문제를 인식하는 것이 더 낫기 때문에 공식에 대한 닫힌 풀 요청을 살펴볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f43dbc37ff0301ad636fc2f2e29110749c4822f5" translate="yes" xml:space="preserve">
          <source>First, check to make sure your issue is not listed in the &lt;a href=&quot;faq&quot;&gt;FAQ&lt;/a&gt; or &lt;a href=&quot;common-issues&quot;&gt;Common Issues&lt;/a&gt; and can&amp;rsquo;t otherwise be resolved with the information in the &lt;a href=&quot;tips-n'-tricks&quot;&gt;Tips and Tricks&lt;/a&gt; documentation. Next, go through the steps in the &lt;a href=&quot;troubleshooting&quot;&gt;Troubleshooting guide&lt;/a&gt;.</source>
          <target state="translated">먼저 문제가 &lt;a href=&quot;faq&quot;&gt;FAQ&lt;/a&gt; 또는 &lt;a href=&quot;common-issues&quot;&gt;일반적인 문제에&lt;/a&gt; 나열되어 있지 않고 &lt;a href=&quot;tips-n'-tricks&quot;&gt;팁과 요령&lt;/a&gt; 문서 의 정보로 해결할 수 없는지 확인하십시오 . 다음으로 &lt;a href=&quot;troubleshooting&quot;&gt;문제 해결 가이드&lt;/a&gt; 의 단계를 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="74dddc73487fe3965f34a100742c68bd573efac4" translate="yes" xml:space="preserve">
          <source>Firstly, the overall environment in which Homebrew runs is filtered to avoid environment contamination breaking from-source builds (&lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt;). In particular, this process filters all but the given whitelisted variables, but allows environment variables prefixed with &lt;code&gt;HOMEBREW_&lt;/code&gt;. The specific implementation can be seen in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/bin/brew&quot;&gt;&lt;code&gt;bin/brew&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">첫째, Homebrew가 실행되는 전체 환경은 소스 빌드 ( &lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt; ) 에서 깨지는 환경 오염을 방지하기 위해 필터링됩니다 . 특히이 프로세스는 주어진 화이트리스트 변수를 제외한 모든 변수를 필터링하지만 &lt;code&gt;HOMEBREW_&lt;/code&gt; 접두사가 붙은 환경 변수를 허용합니다 . 구체적인 구현은 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/bin/brew&quot;&gt; &lt;code&gt;bin/brew&lt;/code&gt; &lt;/a&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a2870827d04edfab10a41e5b622034be89ea2b2" translate="yes" xml:space="preserve">
          <source>Firstly, the overall environment in which Homebrew runs is filtered to avoid environment contamination breaking from-source builds (&lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt;). In particular, this process filters all but the given whitelisted variables, but allows environment variables prefixed with &lt;code&gt;HOMEBREW_&lt;/code&gt;. The specific implementation can be seen in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/bin/brew&quot;&gt;&lt;code&gt;bin/brew&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">먼저, Homebrew가 실행되는 전체 환경이 필터링되어 소스 빌드에서 환경 오염이 발생하지 않도록합니다 ( &lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt; ). 특히이 프로세스는 주어진 화이트리스트 변수를 제외한 모든 변수를 필터링하지만 접두어 &lt;code&gt;HOMEBREW_&lt;/code&gt; 로 환경 변수를 허용합니다 . 구체적인 구현은 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/bin/brew&quot;&gt; &lt;code&gt;bin/brew&lt;/code&gt; &lt;/a&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e065c07cc36b40fe9202514726e4729330346564" translate="yes" xml:space="preserve">
          <source>Follow the &lt;em&gt;Next steps&lt;/em&gt; instructions to add Homebrew to your &lt;code&gt;PATH&lt;/code&gt; and to your bash shell profile script, either &lt;code&gt;~/.profile&lt;/code&gt; on Debian/Ubuntu or &lt;code&gt;~/.bash_profile&lt;/code&gt; on CentOS/Fedora/Red Hat.</source>
          <target state="translated">&lt;em&gt;다음 단계&lt;/em&gt; 지침에 따라 Homebrew를 &lt;code&gt;PATH&lt;/code&gt; 및 bash 셸 프로필 스크립트 에 추가합니다 (Debian / Ubuntu의 &lt;code&gt;~/.profile&lt;/code&gt; 또는 CentOS / Fedora / Red Hat의 &lt;code&gt;~/.bash_profile&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="10348ebb48f3919a14bb18d61c9cc4f145fbc59a" translate="yes" xml:space="preserve">
          <source>Follow the &lt;em&gt;Next steps&lt;/em&gt; instructions to add Homebrew to your &lt;code&gt;PATH&lt;/code&gt; and to your bash shell profile script, either &lt;code&gt;~/.profile&lt;/code&gt; on Debian/Ubuntu or &lt;code&gt;~/.bash_profile&lt;/code&gt; on CentOS/Fedora/RedHat.</source>
          <target state="translated">&lt;em&gt;다음 단계&lt;/em&gt; 지침에 따라 Homebrew를 &lt;code&gt;PATH&lt;/code&gt; 및 bash 셸 프로필 스크립트 ( Debian / Ubuntu의 &lt;code&gt;~/.profile&lt;/code&gt; 또는 CentOS / Fedora / RedHat의 &lt;code&gt;~/.bash_profile&lt;/code&gt; ) 에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6e7e119be0f50a4418678899b476d6da27570604" translate="yes" xml:space="preserve">
          <source>Following a macOS upgrade it may be necessary to reinstall the Xcode Command Line Tools and &lt;code&gt;brew upgrade&lt;/code&gt; all installed formula:</source>
          <target state="translated">macOS 업그레이드 후 Xcode 명령 행 도구를 다시 설치하고 설치된 모든 공식을 &lt;code&gt;brew upgrade&lt;/code&gt; 해야합니다.</target>
        </trans-unit>
        <trans-unit id="c74f4e20782c04b47841a97e53673eaf0674b705" translate="yes" xml:space="preserve">
          <source>Following up</source>
          <target state="translated">후속</target>
        </trans-unit>
        <trans-unit id="4062cbb910aa2a5019da61df28da0944132a77d5" translate="yes" xml:space="preserve">
          <source>Font Casks live in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-fonts&quot;&gt;Homebrew/homebrew-cask-fonts&lt;/a&gt; repository. See the font repo &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-fonts/blob/HEAD/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for details.</source>
          <target state="translated">Font Casks는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-fonts&quot;&gt;Homebrew / homebrew-cask-fonts&lt;/a&gt; 저장소에 있습니다. 자세한 내용은 글꼴 저장소 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask-fonts/blob/HEAD/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ffe688a5014306635cd935f7169187b7db387cd5" translate="yes" xml:space="preserve">
          <source>Fonts</source>
          <target state="translated">Fonts</target>
        </trans-unit>
        <trans-unit id="53d214b9020faa0b4cb9e357f7b494a8d5577629" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;url&lt;/code&gt;/&lt;code&gt;regex&lt;/code&gt; guidelines and additional &lt;code&gt;livecheck&lt;/code&gt; block examples, refer to the &lt;a href=&quot;brew-livecheck&quot;&gt;&lt;code&gt;brew livecheck&lt;/code&gt; documentation&lt;/a&gt;. For more technical information on the methods used in a &lt;code&gt;livecheck&lt;/code&gt; block, please refer to the &lt;a href=&quot;https://rubydoc.brew.sh/Livecheck.html&quot;&gt;&lt;code&gt;Livecheck&lt;/code&gt; class documentation&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;code&gt;url&lt;/code&gt; / &lt;code&gt;regex&lt;/code&gt; 지침 및 추가 &lt;code&gt;livecheck&lt;/code&gt; 의 블록 예는 참조 &lt;a href=&quot;brew-livecheck&quot;&gt; &lt;code&gt;brew livecheck&lt;/code&gt; 문서&lt;/a&gt; . &lt;code&gt;livecheck&lt;/code&gt; 블록 에서 사용되는 메소드에 대한 자세한 기술 정보 는 &lt;a href=&quot;https://rubydoc.brew.sh/Livecheck.html&quot;&gt; &lt;code&gt;Livecheck&lt;/code&gt; 클래스 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="71dddded521cab0569200541045ce5e595e3bc89" translate="yes" xml:space="preserve">
          <source>For GNU licenses (such as &lt;code&gt;GPL&lt;/code&gt;, &lt;code&gt;LGPL&lt;/code&gt;, &lt;code&gt;AGPL&lt;/code&gt; and &lt;code&gt;GFDL&lt;/code&gt;), use &lt;code&gt;-only&lt;/code&gt; or &lt;code&gt;-or-later&lt;/code&gt;. For example, the following would forbid &lt;code&gt;GPL-2.0&lt;/code&gt;, &lt;code&gt;LGPL-2.1&lt;/code&gt; and &lt;code&gt;LGPL-3.0&lt;/code&gt; formulae from being installed, but would allow &lt;code&gt;GPL-3.0&lt;/code&gt;</source>
          <target state="translated">GNU 라이선스 (예 : &lt;code&gt;GPL&lt;/code&gt; , &lt;code&gt;LGPL&lt;/code&gt; , &lt;code&gt;AGPL&lt;/code&gt; 및 &lt;code&gt;GFDL&lt;/code&gt; )의 경우 &lt;code&gt;-only&lt;/code&gt; 또는 &lt;code&gt;-or-later&lt;/code&gt; 를 사용하십시오 . 예를 들어, 다음은 &lt;code&gt;GPL-2.0&lt;/code&gt; , &lt;code&gt;LGPL-2.1&lt;/code&gt; 및 &lt;code&gt;LGPL-3.0&lt;/code&gt; 공식 설치를 금지 하지만 &lt;code&gt;GPL-3.0&lt;/code&gt; 은 허용합니다.</target>
        </trans-unit>
        <trans-unit id="4ad92a7ffd012fb12e62a52d47cfd175c2150d4f" translate="yes" xml:space="preserve">
          <source>For Homebrew maintainers, formulae should only ever be migrated into and within the Homebrew organisation (e.g. from Homebrew/core to Homebrew/cask, or from a third-party tap to Homebrew/core), and never out of it.</source>
          <target state="translated">Homebrew 관리자의 경우 공식은 Homebrew 조직 내부 및 내부에서만 (예 : Homebrew / core에서 Homebrew / cask로 또는 타사 탭에서 Homebrew / core로) 마이그레이션해야합니다.</target>
        </trans-unit>
        <trans-unit id="e49fd7332c9bbb8093c3f406f739035dd9dea3e4" translate="yes" xml:space="preserve">
          <source>For Python formulae, running &lt;code&gt;brew update-python-resources &amp;lt;formula&amp;gt;&lt;/code&gt; will automatically add the necessary &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt; stanzas for the dependencies of your Python application to the formula. Note that &lt;code&gt;brew update-python-resources&lt;/code&gt; is run automatically by &lt;code&gt;brew create&lt;/code&gt; if you pass the &lt;code&gt;--python&lt;/code&gt; flag. If &lt;code&gt;brew update-python-resources&lt;/code&gt; is unable to determine the correct &lt;code&gt;resource&lt;/code&gt; stanzas, &lt;a href=&quot;https://github.com/tdsmith/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; is a good third-party alternative that may help.</source>
          <target state="translated">Python 수식의 경우 &lt;code&gt;brew update-python-resources &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행하면 Python 애플리케이션의 종속성에 필요한 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt; 스탠자 가 수식에 자동으로 추가됩니다 . 참고 &lt;code&gt;brew update-python-resources&lt;/code&gt; 에 의해 자동으로 실행되는 &lt;code&gt;brew create&lt;/code&gt; 당신이 통과하면 &lt;code&gt;--python&lt;/code&gt; 플래그. 경우 &lt;code&gt;brew update-python-resources&lt;/code&gt; 올바른 판단 할 수없는 &lt;code&gt;resource&lt;/code&gt; 연을, &lt;a href=&quot;https://github.com/tdsmith/homebrew-pypi-poet&quot;&gt;사제 - pypi 시인은&lt;/a&gt; 5 월 도움이 좋은 타사 대안입니다.</target>
        </trans-unit>
        <trans-unit id="2d22059d8836737e27347a07ee137c55802e830f" translate="yes" xml:space="preserve">
          <source>For brewed Python, modules installed with &lt;code&gt;pip3&lt;/code&gt; or &lt;code&gt;python3 setup.py install&lt;/code&gt; will be installed to the &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; directory (explained above). Executable Python scripts will be in &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt;.</source>
          <target state="translated">brewed Python의 경우 &lt;code&gt;pip3&lt;/code&gt; 또는 &lt;code&gt;python3 setup.py install&lt;/code&gt; 설치된 모듈 은 &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; 디렉토리 (위에 설명 됨)에 설치됩니다. 실행 가능한 Python 스크립트는 &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bb511e207d3ed75e3d610536ab18b9858aa35bb" translate="yes" xml:space="preserve">
          <source>For brewed Python, modules installed with &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;python setup.py install&lt;/code&gt; will be installed to the &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; directory (explained above). Executable Python scripts will be in &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt;.</source>
          <target state="translated">추출 된 Python의 경우 &lt;code&gt;pip&lt;/code&gt; 또는 &lt;code&gt;python setup.py install&lt;/code&gt; 설치된 모듈 은 &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; 디렉토리 (위에 설명)에 설치됩니다. 실행 가능한 Python 스크립트는 &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="26a2c095f724e7dd44ac857ef1f0fdb62c0bde28" translate="yes" xml:space="preserve">
          <source>For complex diagrams, use the &lt;code&gt;.drawio.svg&lt;/code&gt; format.</source>
          <target state="translated">복잡한 다이어그램의 경우 &lt;code&gt;.drawio.svg&lt;/code&gt; 형식을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="908b1f921df041580c870e5af9d5b6e0c9785f41" translate="yes" xml:space="preserve">
          <source>For disabled and deprecated formulae, running &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; will also provide an explanation.</source>
          <target state="translated">비활성화되고 더 이상 사용되지 않는 수식의 경우 &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행 하면 설명도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f9d71f14ab435b9afd1d312a01617b2d3309c633" translate="yes" xml:space="preserve">
          <source>For example, Ruby 1.9&amp;rsquo;s gems should be installed to &lt;code&gt;var/lib/ruby/&lt;/code&gt; so that gems don&amp;rsquo;t need to be reinstalled when upgrading Ruby. You can usually do this with symlink trickery, or (ideally) a configure option.</source>
          <target state="translated">예를 들어, Ruby 1.9의 gem은 &lt;code&gt;var/lib/ruby/&lt;/code&gt; 설치해야 Ruby를 업그레이드 할 때 gem을 다시 설치할 필요가 없습니다. 일반적으로 symlink trickery 또는 (이상적으로) configure 옵션을 사용하여이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6207ba9ba1fdb8b6668983a1873ef54cbd3b894a" translate="yes" xml:space="preserve">
          <source>For example, a job which has been queued but not yet completed will have a section in the pull request that looks like this:</source>
          <target state="translated">예를 들어, 대기 중이지만 아직 완료되지 않은 작업은 풀 요청에 다음과 같은 섹션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5cced2d9e9520c91541ef1101e5665f4dcb244d" translate="yes" xml:space="preserve">
          <source>For example, see the &lt;a href=&quot;https://github.com/Homebrew/homebrew-services/blob/a58a1fe9145de4e50e1cbfb5b0e8a30087826393/cmd/brew-services.rb#L1-L23&quot;&gt;header of &lt;code&gt;brew-services.rb&lt;/code&gt;&lt;/a&gt; which is output with &lt;code&gt;brew services --help&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;brew services --help&lt;/code&gt; 와 함께 출력되는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-services/blob/a58a1fe9145de4e50e1cbfb5b0e8a30087826393/cmd/brew-services.rb#L1-L23&quot;&gt; &lt;code&gt;brew-services.rb&lt;/code&gt; &lt;/a&gt; 의 헤더를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93591165853b0df8e72ed4a3db49266bac66f1f8" translate="yes" xml:space="preserve">
          <source>For example, the following forbids installation of &lt;code&gt;MIT&lt;/code&gt;, &lt;code&gt;Artistic-1.0&lt;/code&gt; and &lt;code&gt;:public_domain&lt;/code&gt; licenses:</source>
          <target state="translated">예를 들어, 다음은 &lt;code&gt;MIT&lt;/code&gt; , &lt;code&gt;Artistic-1.0&lt;/code&gt; 및 &lt;code&gt;:public_domain&lt;/code&gt; 라이센스의 설치를 금지합니다 .</target>
        </trans-unit>
        <trans-unit id="bda0996e26c78a93315e5df54bce79eb9bf3990d" translate="yes" xml:space="preserve">
          <source>For example, to use an unauthenticated HTTP or SOCKS5 proxy:</source>
          <target state="translated">예를 들어, 인증되지 않은 HTTP 또는 SOCKS5 프록시를 사용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="58b5da30fab8c95f4a4ce8e199fc1f941edc5092" translate="yes" xml:space="preserve">
          <source>For formulae: Collect the &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;stable&lt;/code&gt;, and &lt;code&gt;homepage&lt;/code&gt; URLs, in that order. For casks: Collect the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;homepage&lt;/code&gt; URLs, in that order.</source>
          <target state="translated">공식 : &lt;code&gt;head&lt;/code&gt; , &lt;code&gt;stable&lt;/code&gt; 및 &lt;code&gt;homepage&lt;/code&gt; URL을 순서대로 수집합니다 . 캐스 크의 경우 : &lt;code&gt;url&lt;/code&gt; 및 &lt;code&gt;homepage&lt;/code&gt; URL을 순서대로 수집합니다 .</target>
        </trans-unit>
        <trans-unit id="efbc6e86f91846f0970b9c5336989ad2650f9d89" translate="yes" xml:space="preserve">
          <source>For more info see &lt;a href=&quot;https://www.debian.org/doc/debian-policy/ch-source.html#s-embeddedfiles&quot;&gt;Debian&amp;rsquo;s&lt;/a&gt; and &lt;a href=&quot;https://docs.fedoraproject.org/en-US/packaging-guidelines/#bundling&quot;&gt;Fedora&amp;rsquo;s&lt;/a&gt; stances on this.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.debian.org/doc/debian-policy/ch-source.html#s-embeddedfiles&quot;&gt;Debian&lt;/a&gt; 과 &lt;a href=&quot;https://docs.fedoraproject.org/en-US/packaging-guidelines/#bundling&quot;&gt;Fedora의&lt;/a&gt; 입장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9fb118a7313cb574c34c68236791092dd18d624" translate="yes" xml:space="preserve">
          <source>For more information on how to express more complex types, refer to the official documentation:</source>
          <target state="translated">더 복잡한 유형을 표현하는 방법에 대한 자세한 정보는 공식 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bc7d189950768dc70cb6106320597e841f18b372" translate="yes" xml:space="preserve">
          <source>For most applications, all you will need to write is:</source>
          <target state="translated">대부분의 응용 프로그램에서 작성해야 할 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd76775c5d7d588a1a183b2ec1782c6547492fe7" translate="yes" xml:space="preserve">
          <source>For the full command list, see the &lt;a href=&quot;#commands&quot;&gt;COMMANDS&lt;/a&gt; section.</source>
          <target state="translated">전체 명령 목록은 &lt;a href=&quot;#commands&quot;&gt;COMMANDS&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5fae81f5dd892d6d95a9aaa6fac4306e7ad7eda" translate="yes" xml:space="preserve">
          <source>For unrelated Apps that share a name, the most popular one (usually the one already present) stays unprefixed. Since this can be subjective, if you disagree with a decision, open an issue and make your case to the maintainers.</source>
          <target state="translated">이름을 공유하는 관련없는 앱의 경우 가장 인기있는 앱 (일반적으로 이미 존재하는 앱)이 접두사없이 유지됩니다. 이것은 주관적 일 수 있으므로 결정에 동의하지 않는 경우 문제를 제기하고 유지 관리자에게 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="7d3c3352624dd844ada6fa81dee29716138ab9f4" translate="yes" xml:space="preserve">
          <source>Forks and Apps with Conflicting Names</source>
          <target state="translated">이름이 충돌하는 포크 ​​및 앱</target>
        </trans-unit>
        <trans-unit id="f35b094c0ca5362bcddb7d5c3efc23b0b8e49027" translate="yes" xml:space="preserve">
          <source>Forks must have the vendor&amp;rsquo;s name as a prefix on the Cask&amp;rsquo;s file name and token. If the original software is discontinued, forks still need to follow this rule so as to not be surprising to the user. There are two exceptions which allow the fork to replace the main cask:</source>
          <target state="translated">포크는 Cask의 파일 이름과 토큰에 접두사로 공급 업체 이름이 있어야합니다. 원래 소프트웨어가 중단 된 경우에도 포크는 사용자에게 놀라지 않도록이 규칙을 따라야합니다. 포크로 메인 캐스 크를 교체 할 수있는 두 가지 예외가 있습니다.</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="d88150e031b8d1c699e0357add65ebfe7b37b502" translate="yes" xml:space="preserve">
          <source>Former maintainers with significant contributions include JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor, Uladzislau Shablinski, Alyssa Ross, ilovezfs and Homebrew&amp;rsquo;s creator: Max Howell.</source>
          <target state="translated">JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, 중성자, Tomasz Pajor, Uladzislau Shablinski , Alyssa Ross, ilovezfs 및 Homebrew의 제작자 : Max Howell.</target>
        </trans-unit>
        <trans-unit id="a76df515c9afe0dc8ca886878d69b58397385ccb" translate="yes" xml:space="preserve">
          <source>Former maintainers with significant contributions include Jan Viljanen, JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor, Uladzislau Shablinski, Alyssa Ross, ilovezfs, Chongyu Zhu and Homebrew&amp;rsquo;s creator: Max Howell.</source>
          <target state="translated">중요한 공헌을 한 전 관리자로는 Jan Viljanen, JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor가 있습니다. , Uladzislau Shablinski, Alyssa Ross, ilovezfs, Chongyu Zhu 및 Homebrew의 제작자 : Max Howell.</target>
        </trans-unit>
        <trans-unit id="76d74fcdb71ff21e5c7cc68e90ab0ce8298925ed" translate="yes" xml:space="preserve">
          <source>Formula Cookbook</source>
          <target state="translated">공식 요리 책</target>
        </trans-unit>
        <trans-unit id="164ae4c677e73b156fb4524a41eab70a9d5d9c52" translate="yes" xml:space="preserve">
          <source>Formula DSL</source>
          <target state="translated">공식 DSL</target>
        </trans-unit>
        <trans-unit id="c36d504a9980cf199ad4e5b9b27117c791ba9b98" translate="yes" xml:space="preserve">
          <source>Formula requiring MPI should use &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; by adding &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; to the formula, rather than &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH&lt;/a&gt;. These packages have conflicts and provide the same standardised interfaces. Choosing a default implementation and requiring it to be adopted allows software to link against multiple libraries that rely on MPI without creating un-anticipated incompatibilities due to differing MPI runtimes.</source>
          <target state="translated">Formula requiring MPI should use &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; by adding &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; to the formula, rather than &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH&lt;/a&gt;. These packages have conflicts and provide the same standardised interfaces. Choosing a default implementation and requiring it to be adopted allows software to link against multiple libraries that rely on MPI without creating un-anticipated incompatibilities due to differing MPI runtimes.</target>
        </trans-unit>
        <trans-unit id="6e0de3c5a0823252f05a90f96b0f8e7915566054" translate="yes" xml:space="preserve">
          <source>Formula requiring MPI should use &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; by adding &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; to the formula, rather than &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH&lt;/a&gt;. These packages have conflicts and provide the same standardized interfaces. Choosing a default implementation and requiring it to be adopted allows software to link against multiple libraries that rely on MPI without creating un-anticipated incompatibilities due to differing MPI runtimes.</source>
          <target state="translated">MPI가 필요한 수식은 &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH가&lt;/a&gt; 아니라 &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; 를 수식 에 추가하여 &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; 를 사용해야합니다 . 이러한 패키지는 충돌이 있으며 동일한 표준화 된 인터페이스를 제공합니다. 기본 구현을 선택하고 채택해야하므로 소프트웨어는 MPI 런타임이 다르기 때문에 예상치 못한 비 호환성을 만들지 않고 MPI에 의존하는 여러 라이브러리에 소프트웨어를 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1d4b5975642a64fe7542b334bb6ae65fd98156a" translate="yes" xml:space="preserve">
          <source>Formula with duplicate names</source>
          <target state="translated">이름이 중복되는 수식</target>
        </trans-unit>
        <trans-unit id="3580d09697ff61ff9f2421058ac2acb857df9fe9" translate="yes" xml:space="preserve">
          <source>Formulae Versions</source>
          <target state="translated">수식 버전</target>
        </trans-unit>
        <trans-unit id="cefc3112aa91d0a8133af546b75253bf85712914" translate="yes" xml:space="preserve">
          <source>Formulae can specify alternate downloads for the upstream project&amp;rsquo;s &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;) or &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt;&lt;code&gt;devel&lt;/code&gt;&lt;/a&gt; release (unstable but not &lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;).</source>
          <target state="translated">수식은 업스트림 프로젝트 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;master&lt;/code&gt; / &lt;code&gt;trunk&lt;/code&gt; ) 또는 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt; &lt;code&gt;devel&lt;/code&gt; &lt;/a&gt; 릴리스 (불안하지만 &lt;code&gt;master&lt;/code&gt; / &lt;code&gt;trunk&lt;/code&gt; 아님)에 대한 대체 다운로드를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd12713c789321571a1db078d149687f46bc0aec" translate="yes" xml:space="preserve">
          <source>Formulae can specify an alternate download for the upstream project&amp;rsquo;s &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;).</source>
          <target state="translated">Formulae can specify an alternate download for the upstream project&amp;rsquo;s &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;master&lt;/code&gt; / &lt;code&gt;trunk&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0cc2e6eb2ce31c04e0bb5ef092fb782edd86cd02" translate="yes" xml:space="preserve">
          <source>Formulae for apps that require Python 3 &lt;strong&gt;should&lt;/strong&gt; declare an unconditional dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt;. These apps &lt;strong&gt;must&lt;/strong&gt; work with the current Homebrew Python 3.x formula.</source>
          <target state="translated">Python 3 &lt;strong&gt;이&lt;/strong&gt; 필요한 앱의 공식은 &lt;code&gt;&quot;python&quot;&lt;/code&gt; 에 대한 무조건 종속성을 선언 &lt;strong&gt;해야합니다&lt;/strong&gt; . 이 앱 &lt;strong&gt;은&lt;/strong&gt; 현재 Homebrew Python 3.x 공식과 작동 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="21e49c4c3674ecdf429b36258de317011d8ffd28" translate="yes" xml:space="preserve">
          <source>Formulae for apps that require Python 3 &lt;strong&gt;should&lt;/strong&gt; declare an unconditional dependency on &lt;code&gt;&quot;python@3.x&quot;&lt;/code&gt;. These apps &lt;strong&gt;must&lt;/strong&gt; work with the current Homebrew Python 3.x formula.</source>
          <target state="translated">Formulae for apps that require Python 3 &lt;strong&gt;should&lt;/strong&gt; declare an unconditional dependency on &lt;code&gt;&quot;python@3.x&quot;&lt;/code&gt; . These apps &lt;strong&gt;must&lt;/strong&gt; work with the current Homebrew Python 3.x formula.</target>
        </trans-unit>
        <trans-unit id="292613c6780e458958769978d0c2a3bd7e719208" translate="yes" xml:space="preserve">
          <source>Formulae in the core repository must have a stable version tagged by the upstream project. Tarballs are preferred to Git checkouts, and tarballs should include the version in the filename whenever possible.</source>
          <target state="translated">핵심 리포지토리의 수식에는 업스트림 프로젝트에서 태그가 지정된 안정적인 버전이 있어야합니다. Tarball은 Git 체크 아웃보다 선호되며 tarball은 가능할 때마다 파일 이름에 버전을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="b00903dd0080d31b6f7459c443f58974cd8c8e1b" translate="yes" xml:space="preserve">
          <source>Formulae related pull request</source>
          <target state="translated">수식 관련 풀 요청</target>
        </trans-unit>
        <trans-unit id="2619e6e6cf7ea07e602f411bfa784f7bf711ef4c" translate="yes" xml:space="preserve">
          <source>Formulae revisions</source>
          <target state="translated">수식 수정</target>
        </trans-unit>
        <trans-unit id="48a755fe7e5d31456eddb7eddf660c767aec7f89" translate="yes" xml:space="preserve">
          <source>Formulae that are no longer acceptable in homebrew/core or have been disabled for over a year should be removed.</source>
          <target state="translated">homebrew / core에서 더 이상 허용되지 않거나 1 년 이상 비활성화 된 공식은 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6f2ca9f0629cb5f6a9e390ea47b134c358d7612" translate="yes" xml:space="preserve">
          <source>Formulae that declare an unconditional dependency on the &lt;code&gt;&quot;python&quot;&lt;/code&gt; formula are bottled against Homebrew&amp;rsquo;s Python 3.x and require it to be installed.</source>
          <target state="translated">Formulae that declare an unconditional dependency on the &lt;code&gt;&quot;python&quot;&lt;/code&gt; formula are bottled against Homebrew&amp;rsquo;s Python 3.x and require it to be installed.</target>
        </trans-unit>
        <trans-unit id="a6318a14a3edd5de52204ff95aff31e7cea3415e" translate="yes" xml:space="preserve">
          <source>Formulae that declare an unconditional dependency on the &lt;code&gt;&quot;python&quot;&lt;/code&gt; or &lt;code&gt;&quot;python@2&quot;&lt;/code&gt; formulae are bottled against Homebrew&amp;rsquo;s Python 3.x or 2.7.x and require it to be installed.</source>
          <target state="translated">&lt;code&gt;&quot;python&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;python@2&quot;&lt;/code&gt; 공식 에 무조건 종속을 선언하는 공식은 Homebrew의 Python 3.x 또는 2.7.x에 병을 지어 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="ddb0e30c5fcd4b71b0b5d789603fd1168d538974" translate="yes" xml:space="preserve">
          <source>Formulae that depend on versioned formulae must not depend on the same formulae at two different versions twice in their recursive dependencies. For example, if you depend on &lt;code&gt;openssl@1.0&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt;, and &lt;code&gt;foo&lt;/code&gt; depends on &lt;code&gt;openssl&lt;/code&gt; then you must instead use &lt;code&gt;openssl&lt;/code&gt;.</source>
          <target state="translated">버전이 지정된 수식에 의존하는 수식은 재귀 종속성에서 두 개의 다른 버전에서 동일한 수식에 두 번 의존해서는 안됩니다. 당신이에 따라 예를 들어, &lt;code&gt;openssl@1.0&lt;/code&gt; 및 &lt;code&gt;foo&lt;/code&gt; 는 , 그리고 &lt;code&gt;foo&lt;/code&gt; 에 따라 &lt;code&gt;openssl&lt;/code&gt; 당신이 대신 사용해야 &lt;code&gt;openssl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3f0de58c24fd08aad88ca0d5c72e8a6e3685a28" translate="yes" xml:space="preserve">
          <source>Fortran</source>
          <target state="translated">Fortran</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">자주 묻는 질문</target>
        </trans-unit>
        <trans-unit id="58c30a8a99b68708a21a8064464049909c9aecd6" translate="yes" xml:space="preserve">
          <source>From the inception of Homebrew Cask, various requests fell under the umbrella of this reply. Though a somewhat popular request, after careful consideration on multiple occasions we&amp;rsquo;ve always come back to the same conclusion: we&amp;rsquo;re not a discoverability service and our users are expected to have reasonable knowledge about the apps they&amp;rsquo;re installing through us before doing so. For example, &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues/5425&quot;&gt;grouping casks by categories&lt;/a&gt; is not within the scope of the project.</source>
          <target state="translated">Homebrew Cask의 시작부터 다양한 요청 이이 답변의 우산 아래에 떨어졌습니다. 다소 인기있는 요청이지만 여러 번 신중하게 고려한 끝에 항상 동일한 결론에 도달했습니다. 우리는 검색 가능성 서비스가 아니며 사용자는 수행하기 전에 우리를 통해 설치하는 앱에 대해 합리적인 지식을 가지고 있어야합니다. 그래서. 예를 들어 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues/5425&quot;&gt;카테고리별로 캐스 크를 그룹화&lt;/a&gt; 하는 것은 프로젝트 범위에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1428e27956616ddbe464815d397792bb674af568" translate="yes" xml:space="preserve">
          <source>Further down the rabbit hole</source>
          <target state="translated">토끼 구멍 아래로</target>
        </trans-unit>
        <trans-unit id="cc599b9d9e1bcc55dcd56069eb8b26cb8f403df5" translate="yes" xml:space="preserve">
          <source>GLOBAL CASK OPTIONS</source>
          <target state="translated">GLOBAL CASK OPTIONS</target>
        </trans-unit>
        <trans-unit id="42eb2e107155f1cad20da46b5d8c2f9a4a858b4c" translate="yes" xml:space="preserve">
          <source>GLOBAL OPTIONS</source>
          <target state="translated">글로벌 옵션</target>
        </trans-unit>
        <trans-unit id="4cc8c0961196d8e939d3c64e0da9d5372c3ff442" translate="yes" xml:space="preserve">
          <source>GNU licenses (&lt;code&gt;GPL&lt;/code&gt;, &lt;code&gt;LGPL&lt;/code&gt;, &lt;code&gt;AGPL&lt;/code&gt; and &lt;code&gt;GFDL&lt;/code&gt;) require either the &lt;code&gt;-only&lt;/code&gt; or the &lt;code&gt;-or-later&lt;/code&gt; suffix to indicate whether a later version of the license is allowed:</source>
          <target state="translated">GNU 라이선스 ( &lt;code&gt;GPL&lt;/code&gt; , &lt;code&gt;LGPL&lt;/code&gt; , &lt;code&gt;AGPL&lt;/code&gt; 및 &lt;code&gt;GFDL&lt;/code&gt; )에는 이후 버전의 라이선스가 허용되는지 여부를 나타내는 &lt;code&gt;-only&lt;/code&gt; 또는 &lt;code&gt;-or-later&lt;/code&gt; 접미사가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="61486693a98f263630aee035766c8e1e5b2f3f6e" translate="yes" xml:space="preserve">
          <source>GUI apps on macOS don&amp;rsquo;t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in their &lt;code&gt;PATH&lt;/code&gt; by default. If you&amp;rsquo;re on Mountain Lion or later, you can fix this by running &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; and then rebooting, as documented in &lt;code&gt;man launchctl&lt;/code&gt;. Note that this sets the launchctl &lt;code&gt;PATH&lt;/code&gt; for &lt;em&gt;all users&lt;/em&gt;. For earlier versions of macOS, see &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">GUI apps on macOS don&amp;rsquo;t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in their &lt;code&gt;PATH&lt;/code&gt; by default. If you&amp;rsquo;re on Mountain Lion or later, you can fix this by running &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; and then rebooting, as documented in &lt;code&gt;man launchctl&lt;/code&gt; . Note that this sets the launchctl &lt;code&gt;PATH&lt;/code&gt; for &lt;em&gt;all users&lt;/em&gt;. For earlier versions of macOS, see &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;this page&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8a08bbc6cec2e6ec827c06bd9cd119cda125b211" translate="yes" xml:space="preserve">
          <source>GUI apps on macOS don&amp;rsquo;t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in their &lt;code&gt;PATH&lt;/code&gt; by default. If you&amp;rsquo;re on Mountain Lion or later, you can fix this by running &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; and then rebooting, as documented in &lt;code&gt;man launchctl&lt;/code&gt;. Note that this sets the launchctl PATH for &lt;em&gt;all users&lt;/em&gt;. For earlier versions of macOS, see &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">GUI가없는 맥 OS에서 애플 리케이션 &lt;code&gt;/usr/local/bin&lt;/code&gt; 자신의 &lt;code&gt;PATH&lt;/code&gt; 기본적으로합니다. Mountain Lion 이상인 경우 &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; 를 실행 한 다음 &lt;code&gt;man launchctl&lt;/code&gt; 에 설명 된대로 재부팅 하여이 문제를 해결할 수 있습니다 . 이것은 &lt;em&gt;모든 사용자에&lt;/em&gt; 대한 launchctl PATH를 설정합니다 . 이전 버전의 macOS는 &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;이 페이지를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3dc07b1bdf44f3e8f05a8da8ac9e74418d9a6e4" translate="yes" xml:space="preserve">
          <source>Gems, Eggs and Perl Modules</source>
          <target state="translated">보석, 계란 및 펄 모듈</target>
        </trans-unit>
        <trans-unit id="64c60bb6f3cea1e762e5c09996bfdd3b92752d2c" translate="yes" xml:space="preserve">
          <source>General elections will be held at the AGM.</source>
          <target state="translated">총선은 AGM에서 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="fc9de7bfe33785fb4b09a8f77d566686fe3fb26c" translate="yes" xml:space="preserve">
          <source>General guidelines</source>
          <target state="translated">일반 지침</target>
        </trans-unit>
        <trans-unit id="0ceaa36d4b4a18d0cc0e8b640e8df89aa28d3712" translate="yes" xml:space="preserve">
          <source>Generally we&amp;rsquo;d rather you were specific about what files or directories need to be installed rather than installing everything.</source>
          <target state="translated">일반적으로 모든 것을 설치하기보다는 어떤 파일이나 디렉토리를 설치해야하는지 구체적으로 알고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="3d36ea04771fcd0359bb5d6f7b2d125eb2d74336" translate="yes" xml:space="preserve">
          <source>Generate Homebrew&amp;rsquo;s manpages.</source>
          <target state="translated">Homebrew의 맨 페이지를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="c7c7ff09edc0960e7165bbea3febf22a148439bf" translate="yes" xml:space="preserve">
          <source>Generate a bottle (binary package) from a formula that was installed with &lt;code&gt;--build-bottle&lt;/code&gt;. If the formula specifies a rebuild version, it will be incremented in the generated DSL. Passing &lt;code&gt;--keep-old&lt;/code&gt; will attempt to keep it at its original value, while &lt;code&gt;--no-rebuild&lt;/code&gt; will remove it.</source>
          <target state="translated">&lt;code&gt;--build-bottle&lt;/code&gt; 과 함께 설치된 수식에서 병 (이진 패키지)을 생성하십시오 . 공식이 재 빌드 버전을 지정하면 생성 된 DSL에서 증분됩니다. &lt;code&gt;--keep-old&lt;/code&gt; 를 전달하면 원래 값으로 유지하려고 시도하지만 &lt;code&gt;--no-rebuild&lt;/code&gt; 는 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5114be8c648dba2f78026dabf61d573f02127191" translate="yes" xml:space="preserve">
          <source>Generate a formula for the downloadable file at &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&quot;&gt;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; 에서 다운로드 가능한 파일의 수식을 생성 하고 편집기에서 엽니 다. Homebrew는 자동으로 수식 이름과 버전을 파생 시키려고 시도하지만 실패하면 고유 한 템플릿을 만들어야합니다. &lt;code&gt;wget&lt;/code&gt; 과의 수식은 간단한 예로서 기능한다. 전체 API는 &lt;a href=&quot;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&quot;&gt;http://www.rubydoc.info/github/Homebrew/brew/master/Formula를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1814619b048a5f3290460cd727c378d534b273a" translate="yes" xml:space="preserve">
          <source>Generate a formula for the downloadable file at &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;https://rubydoc.brew.sh/Formula&lt;/a&gt;</source>
          <target state="translated">Generate a formula for the downloadable file at &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;https://rubydoc.brew.sh/Formula&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee229ecb6881c831afa4b3befa8b89971a5842c0" translate="yes" xml:space="preserve">
          <source>Generate a formula or, with &lt;code&gt;--cask&lt;/code&gt;, a cask for the downloadable file at &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;https://rubydoc.brew.sh/Formula&lt;/a&gt;</source>
          <target state="translated">공식을 생성하거나 &lt;code&gt;--cask&lt;/code&gt; 를 사용하여 &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; 에서 다운로드 가능한 파일에 대한 cask를 생성 하고 편집기에서 엽니 다. Homebrew는 공식 이름과 버전을 자동으로 파생하려고 시도하지만 실패 할 경우 고유 한 템플릿을 만들어야합니다. &lt;code&gt;wget&lt;/code&gt; 과의 수식은 간단한 예로서 기능한다. 전체 API는 &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;https://rubydoc.brew.sh/Formula를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="142775e707705cdc022c698e08bceebc25122251" translate="yes" xml:space="preserve">
          <source>Generate the template files for a new tap.</source>
          <target state="translated">새 탭의 템플릿 파일을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="40b59f7283e608435889f8844f8463e169083ff6" translate="yes" xml:space="preserve">
          <source>Get a patch from a GitHub commit or pull request and apply it to Homebrew. Optionally, publish updated bottles for the formulae changed by the patch.</source>
          <target state="translated">GitHub 커밋 또는 풀 요청에서 패치를 가져와 Homebrew에 적용하십시오. 선택적으로 패치에 의해 변경된 수식에 대해 업데이트 된 병을 게시합니다.</target>
        </trans-unit>
        <trans-unit id="4165b7286c0a18f4938d0bc2ec4e655a5e27bc93" translate="yes" xml:space="preserve">
          <source>Git tags</source>
          <target state="translated">Git 태그</target>
        </trans-unit>
        <trans-unit id="294e43a6a8a5d6b8f341bedc722b814ff8ed7544" translate="yes" xml:space="preserve">
          <source>GitHub Flavoured Markdown. GitHub&amp;rsquo;s implementation is the standard, period.</source>
          <target state="translated">GitHub 맛 마크 다운. GitHub의 구현은 표준 기간입니다.</target>
        </trans-unit>
        <trans-unit id="45a179734201553734cc58b1bfabcfed6fcd437c" translate="yes" xml:space="preserve">
          <source>Give your issue a descriptive title which includes the formula name (if applicable) and the version of macOS or Linux you are using. For example, if a formula fails to build, title your issue &amp;ldquo;&amp;lt;formula&amp;gt; failed to build on &amp;lt;10.x&amp;gt;&amp;rdquo;, where &amp;ldquo;&amp;lt;formula&amp;gt;&amp;rdquo; is the name of the formula that failed to build, and &amp;ldquo;&amp;lt;10.x&amp;gt;&amp;rdquo; is the version of macOS or Linux you are using.</source>
          <target state="translated">문제 이름 (해당되는 경우)과 사용중인 macOS 또는 Linux 버전이 포함 된 설명 제목을 제공하십시오. 예를 들어 수식을 작성하지 못하면 &quot;&amp;lt;formula&amp;gt;을 (를) &amp;lt;10.x&amp;gt;에서 작성하지 못했습니다&quot;라는 제목을 지정하십시오. 여기서 &quot;&amp;lt;formula&amp;gt;&quot;은 작성하지 못한 수식의 이름이고 &quot;&amp;lt;10. x&amp;gt;&amp;rdquo;는 사용중인 macOS 또는 Linux 버전입니다.</target>
        </trans-unit>
        <trans-unit id="2c22ffc465079803c44d254fbf4dbc6e08676f73" translate="yes" xml:space="preserve">
          <source>Giving style and usage feedback on a PR or commit that involves documents is okay and encouraged. But keep in mind that these are just guidelines, and for any change, the author may have made a deliberate choice to break these rules in the interest of understandability or aesthetics.</source>
          <target state="translated">문서와 관련된 PR 또는 커밋에 대한 스타일 및 사용 피드백을 제공하는 것이 좋습니다. 그러나 이것들은 단지 지침 일 뿐이며, 어떤 변화에 대해서도 저자는 이해 또는 미학을 위해 이러한 규칙을 어기도록 신중하게 선택했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="066c942e66eca88d1821b667e6d6020ba7680eed" translate="yes" xml:space="preserve">
          <source>Go to the relevant repository (e.g. &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;https://github.com/Homebrew/brew&lt;/a&gt;, &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt;, etc.) and create a pull request to request review and merging of the commits in your pushed branch. Explain why the change is needed and, if fixing a bug, how to reproduce the bug. Make sure you have done each step in the checklist that appears in your new PR.</source>
          <target state="translated">관련 저장소 (예 : &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;https://github.com/Homebrew/brew&lt;/a&gt; , &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt; 등)로 이동하여 커밋의 검토 및 병합을 요청하는 풀 요청을 작성하십시오. 밀린 지점. 변경이 필요한 이유와 버그를 수정 한 경우 버그를 재현하는 방법을 설명하십시오. 새 PR에 나타나는 점검 목록에서 각 단계를 수행했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d8db6d7a8cb6c9e5ac9ef993bc9fe824c145d201" translate="yes" xml:space="preserve">
          <source>Goals and audience</source>
          <target state="translated">목표와 청중</target>
        </trans-unit>
        <trans-unit id="823619e079c311b099f1d0e427a584eafcd6ed06" translate="yes" xml:space="preserve">
          <source>Governance</source>
          <target state="translated">Governance</target>
        </trans-unit>
        <trans-unit id="b963bc74972edb83e30b9e124890c73ad3fc2a1c" translate="yes" xml:space="preserve">
          <source>Grab the URL</source>
          <target state="translated">URL을 잡아</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="cffe08a9944511362b0a1c3a852308930a9bf7da" translate="yes" xml:space="preserve">
          <source>Habit maybe?</source>
          <target state="translated">아마도?</target>
        </trans-unit>
        <trans-unit id="141f1ec4b96fc544a83f129011bfa77895092bc0" translate="yes" xml:space="preserve">
          <source>Handling files that should persist over formula upgrades</source>
          <target state="translated">공식 업그레이드를 통해 지속되어야하는 파일 처리</target>
        </trans-unit>
        <trans-unit id="f8ea7749b41b8f8f1261f53a93119bbfb3814eed" translate="yes" xml:space="preserve">
          <source>Have you created a real mess in Git which stops you from creating a commit you want to submit to us? You might want to consider starting again from scratch. Your changes can be reset to the Homebrew &lt;code&gt;master&lt;/code&gt; branch by running:</source>
          <target state="translated">우리에게 제출하려는 커밋을 만들지 못하게하는 Git에서 엉망진창을 만들었습니까? 처음부터 다시 시작하는 것이 좋습니다. 다음을 실행하여 변경 사항을 Homebrew &lt;code&gt;master&lt;/code&gt; 브랜치 로 재설정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16632d119ac90816cdfcd29ca6b9c5a20fe2fc9f" translate="yes" xml:space="preserve">
          <source>Hiding the beer mug emoji when finishing a build</source>
          <target state="translated">빌드 완료시 맥주 잔 이모티콘 숨기기</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="2d1c4589fb9c6a2836718e8cdbe89cf426835a57" translate="yes" xml:space="preserve">
          <source>Homebrew &lt;em&gt;would&lt;/em&gt; allow formulae with the following declaration to be installed:</source>
          <target state="translated">Homebrew &lt;em&gt;는&lt;/em&gt; 다음 선언이있는 수식을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac84e1c5b9d2d0aefda79106f078a3be2dc38709" translate="yes" xml:space="preserve">
          <source>Homebrew API: &lt;a href=&quot;https://rubydoc.brew.sh&quot;&gt;https://rubydoc.brew.sh&lt;/a&gt;</source>
          <target state="translated">Homebrew API: &lt;a href=&quot;https://rubydoc.brew.sh&quot;&gt;https://rubydoc.brew.sh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bbbf450e03e6d772ecfd21c01f08a9052182a57" translate="yes" xml:space="preserve">
          <source>Homebrew Blog (news on major updates)</source>
          <target state="translated">Homebrew Blog (news on major updates)</target>
        </trans-unit>
        <trans-unit id="3dade3f0cdb2bb2c9aeb694903c60bf0b1817394" translate="yes" xml:space="preserve">
          <source>Homebrew Cask is not a discoverability service</source>
          <target state="translated">Homebrew Cask는 검색 가능성 서비스가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5dae5ce33d93c96957553b58aa0c165da986c8db" translate="yes" xml:space="preserve">
          <source>Homebrew Cask provides a friendly CLI workflow for the administration of macOS applications distributed as binaries.</source>
          <target state="translated">Homebrew Cask provides a friendly CLI workflow for the administration of macOS applications distributed as binaries.</target>
        </trans-unit>
        <trans-unit id="59136d845cfcfca98ceafe4032d414a23ffaa240" translate="yes" xml:space="preserve">
          <source>Homebrew Documentation: &lt;a href=&quot;https://docs.brew.sh&quot;&gt;https://docs.brew.sh&lt;/a&gt;</source>
          <target state="translated">Homebrew 설명서 : &lt;a href=&quot;https://docs.brew.sh&quot;&gt;https://docs.brew.sh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96107946ccd1f78182e95e6c6c79229ae6814a6d" translate="yes" xml:space="preserve">
          <source>Homebrew Governance</source>
          <target state="translated">사제 거버넌스</target>
        </trans-unit>
        <trans-unit id="e6e58356f19c13c48468e9fe9fb3ee8e9c02db50" translate="yes" xml:space="preserve">
          <source>Homebrew Shell Completion</source>
          <target state="translated">사제 껍질 완성</target>
        </trans-unit>
        <trans-unit id="d22de123dd4380de06a3a67b3d7f7fbe8d7cf4a0" translate="yes" xml:space="preserve">
          <source>Homebrew analytics helps us maintainers and leaving it on is appreciated. However, if you want to opt out of Homebrew&amp;rsquo;s analytics, you can set this variable in your environment:</source>
          <target state="translated">Homebrew 분석은 유지 관리 담당자를 도와 주어이를 높이 평가합니다. 그러나 Homebrew의 분석을 사용하지 않으려면 환경에서이 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9e449d9297e43415a3e5bf992d6e96b6e8be1e3" translate="yes" xml:space="preserve">
          <source>Homebrew automatically uninstalls old versions of a formula after that formula is upgraded with &lt;code&gt;brew upgrade&lt;/code&gt;, and periodically performs additional cleanup every 30 days.</source>
          <target state="translated">Homebrew automatically uninstalls old versions of a formula after that formula is upgraded with &lt;code&gt;brew upgrade&lt;/code&gt; , and periodically performs additional cleanup every 30 days.</target>
        </trans-unit>
        <trans-unit id="029a70d6a7c292ded89ae401ada5f738556ae190" translate="yes" xml:space="preserve">
          <source>Homebrew build environment that uses years-battle-hardened build logic to help your &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; and even your &lt;code&gt;gem install&lt;/code&gt; succeed. Especially handy if you run Homebrew in an Xcode-only configuration since it adds tools like &lt;code&gt;make&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; which build systems would not find otherwise.</source>
          <target state="translated">Homebrew build environment that uses years-battle-hardened build logic to help your &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; and even your &lt;code&gt;gem install&lt;/code&gt; succeed. Especially handy if you run Homebrew in an Xcode-only configuration since it adds tools like &lt;code&gt;make&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; which build systems would not find otherwise.</target>
        </trans-unit>
        <trans-unit id="031b13e10fa3a448c46f1ed4a4b3e7190906e9cb" translate="yes" xml:space="preserve">
          <source>Homebrew can run on 32-bit ARM (Raspberry Pi and others) and 64-bit ARM (AArch64), but no binary packages (bottles) are available. Support for ARM is on a best-effort basis. Pull requests are welcome to improve the experience on ARM platforms.</source>
          <target state="translated">Homebrew는 32 비트 ARM (Raspberry Pi 및 기타) 및 64 비트 ARM (AArch64)에서 실행할 수 있지만 바이너리 패키지 (병)는 사용할 수 없습니다. ARM 지원은 최선의 노력으로 이루어집니다. ARM 플랫폼에서의 경험을 향상시키기 위해 풀 요청을 환영합니다.</target>
        </trans-unit>
        <trans-unit id="1b4a82136680c2ea60383fdfc55cd142d5763ae9" translate="yes" xml:space="preserve">
          <source>Homebrew comes with a number of &lt;a href=&quot;https://github.com/Homebrew/brew/tree/master/Library/Homebrew/test/support/fixtures&quot;&gt;standard test fixtures&lt;/a&gt;, including numerous sample images, sounds, and documents in various formats. You can get the file path to a test fixture with &lt;code&gt;test_fixtures(&quot;test.svg&quot;)&lt;/code&gt;.</source>
          <target state="translated">Homebrew comes with a number of &lt;a href=&quot;https://github.com/Homebrew/brew/tree/master/Library/Homebrew/test/support/fixtures&quot;&gt;standard test fixtures&lt;/a&gt;, including numerous sample images, sounds, and documents in various formats. You can get the file path to a test fixture with &lt;code&gt;test_fixtures(&quot;test.svg&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6863dff223468abcefd09a599748b4ec9b324279" translate="yes" xml:space="preserve">
          <source>Homebrew comes with completion definitions for the &lt;code&gt;brew&lt;/code&gt; command. Some packages also provide completion definitions for their own programs.</source>
          <target state="translated">Homebrew는 &lt;code&gt;brew&lt;/code&gt; 명령에 대한 완성 정의와 함께 제공됩니다 . 일부 패키지는 자체 프로그램에 대한 완성 정의도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2883f0abeb7d4083aa4da80ea692b58620f95a13" translate="yes" xml:space="preserve">
          <source>Homebrew depends on having an up-to-date version of Xcode because it comes with specific versions of build tools, e.g. &lt;code&gt;clang&lt;/code&gt;.</source>
          <target state="translated">Homebrew는 특정 버전의 빌드 도구 (예 : &lt;code&gt;clang&lt;/code&gt; ) 와 함께 제공되므로 최신 버전의 Xcode를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="4aebf994a3e28744b894d74e900807c87603d848" translate="yes" xml:space="preserve">
          <source>Homebrew depends on having an up-to-date version of Xcode because it comes with specific versions of build tools, e.g. &lt;code&gt;clang&lt;/code&gt;. Installing a custom version of GCC or Autotools into your &lt;code&gt;PATH&lt;/code&gt; has the potential to break lots of compiles so we prefer the Apple or Homebrew-provided compilers. Cross-compilers based on GCC will typically be &amp;ldquo;keg-only&amp;rdquo; and therefore not linked into your &lt;code&gt;PATH&lt;/code&gt; by default, or are prefixed with the target architecture, again to avoid conflicting with Apple or Homebrew compilers.</source>
          <target state="translated">Homebrew depends on having an up-to-date version of Xcode because it comes with specific versions of build tools, e.g. &lt;code&gt;clang&lt;/code&gt; . Installing a custom version of GCC or Autotools into your &lt;code&gt;PATH&lt;/code&gt; has the potential to break lots of compiles so we prefer the Apple or Homebrew-provided compilers. Cross-compilers based on GCC will typically be &amp;ldquo;keg-only&amp;rdquo; and therefore not linked into your &lt;code&gt;PATH&lt;/code&gt; by default, or are prefixed with the target architecture, again to avoid conflicting with Apple or Homebrew compilers.</target>
        </trans-unit>
        <trans-unit id="c530d3ce9c588e19ba65c4bbb4c9a7d72f575716" translate="yes" xml:space="preserve">
          <source>Homebrew does not currently support 32-bit x86 platforms. It would be possible for Homebrew to work on 32-bit x86 platforms with some effort. An interested and dedicated person could maintain a fork of Homebrew to develop support for 32-bit x86.</source>
          <target state="translated">Homebrew는 현재 32 비트 x86 플랫폼을 지원하지 않습니다. Homebrew는 약간의 노력으로 32 비트 x86 플랫폼에서 작업 할 수 있습니다. 관심 있고 헌신적 인 사람은 Homebrew 포크를 유지하여 32 비트 x86에 대한 지원을 개발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea3343d9af18de5be91fe4627add142585ec265a" translate="yes" xml:space="preserve">
          <source>Homebrew doesn&amp;rsquo;t package already-packaged language-specific libraries. These should be installed directly from &lt;code&gt;gem&lt;/code&gt;/&lt;code&gt;cpan&lt;/code&gt;/&lt;code&gt;pip&lt;/code&gt; etc.</source>
          <target state="translated">Homebrew는 이미 패키지화 된 언어 별 라이브러리를 패키지화하지 않습니다. 이들은 &lt;code&gt;gem&lt;/code&gt; / &lt;code&gt;cpan&lt;/code&gt; / &lt;code&gt;pip&lt;/code&gt; 등에서 직접 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="43046ef8a81971119f7dbff2fd58b9d96eff8262" translate="yes" xml:space="preserve">
          <source>Homebrew doesn&amp;rsquo;t support arbitrary mixing and matching of formula versions, so everything a formula depends on, and everything that depends on it in turn, needs to be upgraded to the latest version as that&amp;rsquo;s the only combination of formulae we test. As a consequence any given &lt;code&gt;upgrade&lt;/code&gt; or &lt;code&gt;install&lt;/code&gt; command can upgrade many other (seemingly unrelated) formulae, if something important like &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;openssl&lt;/code&gt; also needed an upgrade.</source>
          <target state="translated">Homebrew는 공식 버전의 임의 혼합 및 매칭을 지원하지 않으므로 공식이 의존하는 모든 것과 이에 의존하는 모든 것은 우리가 테스트하는 유일한 공식 조합이므로 최신 버전으로 업그레이드해야합니다. 결과적으로 주어진 &lt;code&gt;upgrade&lt;/code&gt; 또는 &lt;code&gt;install&lt;/code&gt; 명령은 &lt;code&gt;python&lt;/code&gt; 또는 &lt;code&gt;openssl&lt;/code&gt; 과 같은 중요한 것이 업그레이드가 필요한 경우 다른 많은 공식을 업그레이드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e595c3af9fa782786184c6759a8c9ae87fd898a" translate="yes" xml:space="preserve">
          <source>Homebrew draws a distinction between Python &lt;strong&gt;applications&lt;/strong&gt; and Python &lt;strong&gt;libraries&lt;/strong&gt;. The difference is that users generally do not care that applications are written in Python; it is unusual that a user would expect to be able to &lt;code&gt;import foo&lt;/code&gt; after installing an application. Examples of applications are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/ansible.rb&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/jrnl.rb&quot;&gt;&lt;code&gt;jrnl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Homebrew draws a distinction between Python &lt;strong&gt;applications&lt;/strong&gt; and Python &lt;strong&gt;libraries&lt;/strong&gt;. The difference is that users generally do not care that applications are written in Python; it is unusual that a user would expect to be able to &lt;code&gt;import foo&lt;/code&gt; after installing an application. Examples of applications are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/ansible.rb&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/jrnl.rb&quot;&gt; &lt;code&gt;jrnl&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e8774af101215b3fefc296502e469a868f65c96f" translate="yes" xml:space="preserve">
          <source>Homebrew draws a distinction between Python &lt;strong&gt;applications&lt;/strong&gt; and Python &lt;strong&gt;libraries&lt;/strong&gt;. The difference is that users generally do not care that applications are written in Python; it is unusual that a user would expect to be able to &lt;code&gt;import foo&lt;/code&gt; after installing an application. Examples of applications are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/ansible.rb&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/jrnl.rb&quot;&gt;&lt;code&gt;jrnl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Homebrew는 Python &lt;strong&gt;응용 프로그램&lt;/strong&gt; 과 Python &lt;strong&gt;라이브러리를 구분&lt;/strong&gt; 합니다. 차이점은 사용자는 일반적으로 응용 프로그램이 Python으로 작성되는 것을 신경 쓰지 않는다는 것입니다. 사용자가 응용 프로그램을 설치 한 후 &lt;code&gt;import foo&lt;/code&gt; 를 가져올 수있을 것으로 예상되는 경우는 드 unusual니다 . 적용 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/ansible.rb&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/jrnl.rb&quot;&gt; &lt;code&gt;jrnl&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="625a3f10f05572784a8c3e217889e646aec570cd" translate="yes" xml:space="preserve">
          <source>Homebrew expects to find manual pages in &lt;code&gt;#{prefix}/share/man/...&lt;/code&gt;, and not in &lt;code&gt;#{prefix}/man/...&lt;/code&gt;.</source>
          <target state="translated">브루 예상하는가에있는 매뉴얼 페이지를 찾을 수 &lt;code&gt;#{prefix}/share/man/...&lt;/code&gt; , 그리고에서 &lt;code&gt;#{prefix}/man/...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23d67499dfe9a34b0f6bdfa685e86b687bd34ae8" translate="yes" xml:space="preserve">
          <source>Homebrew formulae should avoid having multiple, separate, upstream projects bundled together in a single package to avoid shipping outdated/insecure versions of software that is already a formula.</source>
          <target state="translated">Homebrew formulae should avoid having multiple, separate, upstream projects bundled together in a single package to avoid shipping outdated/insecure versions of software that is already a formula.</target>
        </trans-unit>
        <trans-unit id="94739a6468c180b4fa96206f2261d586ac4dd903" translate="yes" xml:space="preserve">
          <source>Homebrew gathers anonymous aggregate user behaviour analytics using Google Analytics. You will be notified the first time you run &lt;code&gt;brew update&lt;/code&gt; or install Homebrew. Analytics are not enabled until after this notice is shown, to ensure that you can &lt;a href=&quot;analytics#opting-out&quot;&gt;opt out&lt;/a&gt; without ever sending analytics data.</source>
          <target state="translated">Homebrew gathers anonymous aggregate user behaviour analytics using Google Analytics. You will be notified the first time you run &lt;code&gt;brew update&lt;/code&gt; or install Homebrew. Analytics are not enabled until after this notice is shown, to ensure that you can &lt;a href=&quot;analytics#opting-out&quot;&gt;opt out&lt;/a&gt; without ever sending analytics data.</target>
        </trans-unit>
        <trans-unit id="44372df16aff7a20dbe7963212be661a0056c4de" translate="yes" xml:space="preserve">
          <source>Homebrew has begun gathering anonymous aggregate user behaviour analytics and reporting these to Google Analytics. You will be notified the first time you run &lt;code&gt;brew update&lt;/code&gt; or install Homebrew.</source>
          <target state="translated">Homebrew는 익명의 집계 사용자 행동 분석을 수집하여이를 Google Analytics에보고하기 시작했습니다. &lt;code&gt;brew update&lt;/code&gt; 처음 실행 하거나 Homebrew를 설치할 때 알림을 받습니다.</target>
        </trans-unit>
        <trans-unit id="cb37eade6344844056f9cff666e6aadf278d2286" translate="yes" xml:space="preserve">
          <source>Homebrew has multiple levels of environment variable filtering which affects variables available to formulae.</source>
          <target state="translated">Homebrew에는 수식에 사용할 수있는 변수에 영향을주는 여러 수준의 환경 변수 필터링이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b53a5a2129c12a058c70949ce800dafde06c33ba" translate="yes" xml:space="preserve">
          <source>Homebrew has since stopped supporting &lt;em&gt;SHA1&lt;/em&gt; and &lt;em&gt;MD5&lt;/em&gt; entirely. &lt;em&gt;MD5&lt;/em&gt; checksums were removed from core formulae in 2012 and as of April 2015 installing a formula verified by &lt;em&gt;MD5&lt;/em&gt; is actively blocked.</source>
          <target state="translated">Homebrew는 &lt;em&gt;SHA1&lt;/em&gt; 및 &lt;em&gt;MD5&lt;/em&gt; 지원을 완전히 중단했습니다 . &lt;em&gt;MD5&lt;/em&gt; 체크섬은 2012 년 핵심 수식에서 제거되었으며 2015 년 4 월 현재 &lt;em&gt;MD5에서&lt;/em&gt; 확인한 수식 설치 가 활발히 차단되었습니다.</target>
        </trans-unit>
        <trans-unit id="eb1e091fc99d6671fd16b357408c8780d16d6c68" translate="yes" xml:space="preserve">
          <source>Homebrew installs to the &lt;code&gt;Cellar&lt;/code&gt; and then symlinks some of the installation into &lt;code&gt;/usr/local&lt;/code&gt; so that other programs can see what&amp;rsquo;s going on. We suggest you &lt;code&gt;brew ls&lt;/code&gt; a few of the kegs in your Cellar to see how it is all arranged.</source>
          <target state="translated">Homebrew는 &lt;code&gt;Cellar&lt;/code&gt; 에 설치 한 다음 일부 설치를 &lt;code&gt;/usr/local&lt;/code&gt; 에 심볼릭 링크하여 다른 프로그램이 진행중인 작업을 볼 수 있도록합니다. 우리는 당신이 제안 &lt;code&gt;brew ls&lt;/code&gt; 가 모두 배열하는 방법을 확인하기 위해 지하실에있는 통의 몇 가지.</target>
        </trans-unit>
        <trans-unit id="cf50036a583955cd209228b827fd10767641c3d7" translate="yes" xml:space="preserve">
          <source>Homebrew interprets complex license expressions and determines whether the licenses allow installation. To continue the above example, Homebrew would not allow installation of a formula with the following license declarations:</source>
          <target state="translated">Homebrew는 복잡한 라이센스 표현을 해석하고 라이센스가 설치를 허용하는지 여부를 결정합니다. 위의 예를 계속하기 위해 Homebrew는 다음 라이센스 선언이있는 공식 설치를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c19df62389a462b2b1907ee065878ef08574b275" translate="yes" xml:space="preserve">
          <source>Homebrew is a poor name, it&amp;rsquo;s too generic, why was it chosen?</source>
          <target state="translated">Homebrew는 이름이 좋지 않습니다. 너무 일반적이므로 왜 선택 되었습니까?</target>
        </trans-unit>
        <trans-unit id="abc323e18089c29e0c7d1dd90a2dd4f60102b58c" translate="yes" xml:space="preserve">
          <source>Homebrew is happy to accept applications that are built in Python, whether the apps are available from PyPI or not. Homebrew generally won&amp;rsquo;t accept libraries that can be installed correctly with &lt;code&gt;pip install foo&lt;/code&gt;. Bindings may be installed for packages that provide them, especially if equivalent functionality isn&amp;rsquo;t available through pip.</source>
          <target state="translated">Homebrew는 PyPI에서 앱을 사용할 수 있는지 여부에 관계없이 Python으로 빌드 된 애플리케이션을 기꺼이 받아들입니다. Homebrew는 일반적으로 &lt;code&gt;pip install foo&lt;/code&gt; 로 올바르게 설치할 수있는 라이브러리를 허용하지 않습니다 . 특히 pip를 통해 동등한 기능을 사용할 수없는 경우이를 제공하는 패키지에 바인딩을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6de1f6ab06c5a47042fe0d73d90472dc7780b303" translate="yes" xml:space="preserve">
          <source>Homebrew is installed to a prefix other than the standard &lt;code&gt;/usr/local&lt;/code&gt; (although some bottles support this).</source>
          <target state="translated">Homebrew는 표준 &lt;code&gt;/usr/local&lt;/code&gt; 이외의 접두사에 설치됩니다 (일부 병은이 기능을 지원하지만).</target>
        </trans-unit>
        <trans-unit id="d4a3484b9378e94a3153acd53e1e9e3be16117dc" translate="yes" xml:space="preserve">
          <source>Homebrew is provided free of charge and run entirely by volunteers in their spare time. As a result, we do not have the resources to do detailed user studies of Homebrew users to decide on how best to design future features and prioritise current work. Anonymous aggregate user analytics allow us to prioritise fixes and features based on how, where and when people use Homebrew. For example:</source>
          <target state="translated">Homebrew는 무료로 제공되며 여가 시간에 자원 봉사자가 전적으로 운영합니다. 결과적으로, 우리는 향후 기능을 설계하고 현재 작업의 우선 순위를 정하는 최선의 방법을 결정하기 위해 Homebrew 사용자에 대한 자세한 사용자 연구를 수행 할 리소스가 없습니다. 익명의 집계 사용자 분석을 통해 사람들이 Homebrew를 어떻게, 어디서, 언제 사용하는지에 따라 수정 및 기능의 우선 순위를 지정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="65a0680f8f0fa277d1f6950bb45dde7fd3fe43e3" translate="yes" xml:space="preserve">
          <source>Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn&amp;rsquo;t include with macOS.</source>
          <target state="translated">Homebrew는 Apple이 macOS에 포함하지 않은 UNIX 도구를 설치하는 가장 쉽고 유연한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="745fb931e9fccb866a587695f43cfc39a4e95240" translate="yes" xml:space="preserve">
          <source>Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn&amp;rsquo;t include with macOS. It can also install software not packaged for your Linux distribution to your home directory without requiring &lt;code&gt;sudo&lt;/code&gt;.</source>
          <target state="translated">Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn&amp;rsquo;t include with macOS. It can also install software not packaged for your Linux distribution to your home directory without requiring &lt;code&gt;sudo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b847e198738b8c83a4967c1cfa49a7cfef9efc1" translate="yes" xml:space="preserve">
          <source>Homebrew members will comply with the Software Freedom Conservancy&amp;rsquo;s &lt;a href=&quot;https://sfconservancy.org/projects/policies/conflict-of-interest-policy.html&quot;&gt;conflict of interest policy&lt;/a&gt;.</source>
          <target state="translated">Homebrew 회원은 Software Freedom Conservancy의 &lt;a href=&quot;https://sfconservancy.org/projects/policies/conflict-of-interest-policy.html&quot;&gt;이해 상충 정책&lt;/a&gt; 을 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="0c16737d592b7858ae25c02f5ca3d739aa3cb9f8" translate="yes" xml:space="preserve">
          <source>Homebrew members will meet at the annual general meeting (AGM) in a manner determined by the PLC.</source>
          <target state="translated">Homebrew 회원은 PLC가 결정한 방식으로 연례 총회 (AGM)에서 만날 것입니다.</target>
        </trans-unit>
        <trans-unit id="0b6e17cfda30349a14879da24b6c0efe5dd12f42" translate="yes" xml:space="preserve">
          <source>Homebrew offers anonymous download strategies.</source>
          <target state="translated">Homebrew는 익명의 다운로드 전략을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b564b46be44830b11fc8929ae3885be5347058dd" translate="yes" xml:space="preserve">
          <source>Homebrew on Linux</source>
          <target state="translated">Linux의 Homebrew</target>
        </trans-unit>
        <trans-unit id="a43655b92e6d91af6f81d0ef37631c543145bc0a" translate="yes" xml:space="preserve">
          <source>Homebrew on Linux Community</source>
          <target state="translated">Linux 커뮤니티의 Homebrew</target>
        </trans-unit>
        <trans-unit id="37d9eb415d2e64817560c348dffddf13ff7dc238" translate="yes" xml:space="preserve">
          <source>Homebrew organisation external commands</source>
          <target state="translated">사제 조직 외부 명령</target>
        </trans-unit>
        <trans-unit id="2178e89cad5c416f929f0e85c8113aca928509f3" translate="yes" xml:space="preserve">
          <source>Homebrew provided a &lt;code&gt;python@2&lt;/code&gt; formula until the end of 2019, at which point it was removed due to the Python 2 deprecation.</source>
          <target state="translated">Homebrew provided a &lt;code&gt;python@2&lt;/code&gt; formula until the end of 2019, at which point it was removed due to the Python 2 deprecation.</target>
        </trans-unit>
        <trans-unit id="8b71674659a11a908d7a3becb61d9f951592f6f6" translate="yes" xml:space="preserve">
          <source>Homebrew provides a &lt;code&gt;gcc&lt;/code&gt; formula for use with Xcode 4.2+ or when needing C++11 support on earlier versions.</source>
          <target state="translated">Homebrew는 Xcode 4.2 이상과 함께 사용하거나 이전 버전에서 C ++ 11 지원이 필요한 경우 &lt;code&gt;gcc&lt;/code&gt; 공식을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="fac015b5b20e31848a3705fe2d4d1984227a9b61" translate="yes" xml:space="preserve">
          <source>Homebrew provides a &lt;code&gt;gcc&lt;/code&gt; formula for use with Xcode 4.2+.</source>
          <target state="translated">Homebrew provides a &lt;code&gt;gcc&lt;/code&gt; formula for use with Xcode 4.2+.</target>
        </trans-unit>
        <trans-unit id="b046e043cdcff5b6b27a73ccdc99b46a803621e2" translate="yes" xml:space="preserve">
          <source>Homebrew provides a formula for Python 3.x (&lt;code&gt;python@3.x&lt;/code&gt;).</source>
          <target state="translated">Homebrew provides a formula for Python 3.x ( &lt;code&gt;python@3.x&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4af748fb83e9d7f306a45a394e89a75b1d279448" translate="yes" xml:space="preserve">
          <source>Homebrew provides formulae to brew Python 3.x and a more up-to-date Python 2.7.x.</source>
          <target state="translated">Homebrew는 Python 3.x 및 최신 Python 2.7.x를 추출하는 공식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a129c90e7b6536d0594ff02e5242149b3c3ca13b" translate="yes" xml:space="preserve">
          <source>Homebrew provides formulae to brew Python 3.x.</source>
          <target state="translated">Homebrew provides formulae to brew Python 3.x.</target>
        </trans-unit>
        <trans-unit id="efb527c41b236fa82d6176544cbbf6cab3abe64a" translate="yes" xml:space="preserve">
          <source>Homebrew provides helper methods for instantiating and populating virtualenvs. You can use them by putting &lt;code&gt;include Language::Python::Virtualenv&lt;/code&gt; at the top of the &lt;code&gt;Formula&lt;/code&gt; class definition.</source>
          <target state="translated">Homebrew는 가상 환경을 인스턴스화하고 채우기위한 도우미 방법을 제공합니다. &lt;code&gt;Formula&lt;/code&gt; 클래스 정의 맨 위에 &lt;code&gt;include Language::Python::Virtualenv&lt;/code&gt; 를 넣어서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="297d3171e08b2c58109d59b0b3f67a155bd798d0" translate="yes" xml:space="preserve">
          <source>Homebrew provides older GCC formulae, e.g. &lt;code&gt;gcc@7&lt;/code&gt;</source>
          <target state="translated">Homebrew는 이전 GCC 공식을 제공합니다 (예 : &lt;code&gt;gcc@7&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="562b147c3bbafdc470f4ae4637b47bd84a90b5b6" translate="yes" xml:space="preserve">
          <source>Homebrew provides one formula for Python 3.x (&lt;code&gt;python&lt;/code&gt;) and another for Python 2.7.x (&lt;code&gt;python@2&lt;/code&gt;).</source>
          <target state="translated">Homebrew는 Python 3.x ( &lt;code&gt;python&lt;/code&gt; )와 Python 2.7.x ( &lt;code&gt;python@2&lt;/code&gt; )에 대한 수식을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d7822341dc4756096e7a8ded3a1b46bf39ef5b9b" translate="yes" xml:space="preserve">
          <source>Homebrew provides pre-compiled versions for many formulae. These pre-compiled versions are referred to as &lt;a href=&quot;bottles&quot;&gt;bottles&lt;/a&gt; and are available at &lt;a href=&quot;https://bintray.com/homebrew/bottles&quot;&gt;https://bintray.com/homebrew/bottles&lt;/a&gt;.</source>
          <target state="translated">Homebrew는 많은 수식에 대해 미리 컴파일 된 버전을 제공합니다. 사전 컴파일 된 이러한 버전을 &lt;a href=&quot;bottles&quot;&gt;병&lt;/a&gt; 이라고 하며 &lt;a href=&quot;https://bintray.com/homebrew/bottles&quot;&gt;https://bintray.com/homebrew/bottles&lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b7023890e38c1b54c4bf4f975e9c8dc0deb2a4c" translate="yes" xml:space="preserve">
          <source>Homebrew provides some cross-compilers and toolchains, but these are named to avoid clashing with the default tools, e.g. &lt;code&gt;x86_64-elf-gcc&lt;/code&gt;</source>
          <target state="translated">Homebrew provides some cross-compilers and toolchains, but these are named to avoid clashing with the default tools, e.g. &lt;code&gt;x86_64-elf-gcc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="354ab1e0614c947c91c39dcbd12a3e6035ac891d" translate="yes" xml:space="preserve">
          <source>Homebrew provides the LLVM Clang, which is bundled with the &lt;code&gt;llvm&lt;/code&gt; formula.</source>
          <target state="translated">Homebrew는 &lt;code&gt;llvm&lt;/code&gt; 수식 과 함께 제공되는 LLVM Clang을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4f1998377762b8b409533b99e1d797a1f5dbe74c" translate="yes" xml:space="preserve">
          <source>Homebrew provides two formula DSL methods for launchd plist files:</source>
          <target state="translated">Homebrew는 시작된 plist 파일에 대해 두 가지 공식 DSL 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0729a8a3d3191e3fad0f467c1828a31424120f7b" translate="yes" xml:space="preserve">
          <source>Homebrew provides two helper methods in a &lt;code&gt;Language::Node&lt;/code&gt; module: &lt;code&gt;std_npm_install_args&lt;/code&gt; and &lt;code&gt;local_npm_install_args&lt;/code&gt;. They both set up the correct environment for npm and return arguments for &lt;code&gt;npm install&lt;/code&gt; for their specific use cases. Your formula should use these instead of invoking &lt;code&gt;npm install&lt;/code&gt; explicitly. The syntax for a standard Node module installation is:</source>
          <target state="translated">Homebrew는 &lt;code&gt;Language::Node&lt;/code&gt; 모듈에서 &lt;code&gt;std_npm_install_args&lt;/code&gt; 및 &lt;code&gt;local_npm_install_args&lt;/code&gt; 의 두 가지 도우미 메소드를 제공합니다 . 이들은 npm에 대한 올바른 환경을 설정 하고 특정 사용 사례에 대해 &lt;code&gt;npm install&lt;/code&gt; 대한 인수를 반환 합니다. 공식은 &lt;code&gt;npm install&lt;/code&gt; 을 명시 적으로 호출하는 대신이를 사용해야합니다 . 표준 노드 모듈 설치의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6790ab4f49d72b8093da898ec51692bce0f8ec93" translate="yes" xml:space="preserve">
          <source>Homebrew refuses to work using sudo.</source>
          <target state="translated">Homebrew는 sudo를 사용하여 작업을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="51a93ceeacd9962f23336fd5f7a8c8417906a396" translate="yes" xml:space="preserve">
          <source>Homebrew should work with any &lt;a href=&quot;https://stackoverflow.com/questions/2324208/is-there-any-difference-between-cpython-and-python&quot;&gt;CPython&lt;/a&gt; and defaults to the macOS system Python.</source>
          <target state="translated">Homebrew는 모든 &lt;a href=&quot;https://stackoverflow.com/questions/2324208/is-there-any-difference-between-cpython-and-python&quot;&gt;CPython&lt;/a&gt; 과 함께 작동 하며 기본값은 macOS 시스템 Python입니다.</target>
        </trans-unit>
        <trans-unit id="661acbc7dc12d154082fffd2b3944bb2f293aeb5" translate="yes" xml:space="preserve">
          <source>Homebrew supports and recommends the latest Xcode and/or Command Line Tools available for your platform (see &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; and &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Homebrew supports and recommends the latest Xcode and/or Command Line Tools available for your platform (see &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; and &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a46e4ed9793e78070c496261e16340391a55c075" translate="yes" xml:space="preserve">
          <source>Homebrew supports and recommends the latest Xcode and/or Command Line Tools available for your platform (see &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; and &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">브루 지원 및 플랫폼에 사용할 수있는 최신 엑스 코드 및 / 또는 명령 행 도구를 권장합니다 ( &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; 및 &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; 에서 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="27cc4575faca82c00bd01c31c48751b098d231ba" translate="yes" xml:space="preserve">
          <source>Homebrew terminology</source>
          <target state="translated">사제 용어</target>
        </trans-unit>
        <trans-unit id="ec99c4c71f6739452764a18f48aafa4663d3d390" translate="yes" xml:space="preserve">
          <source>Homebrew tries to automatically determine the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; from the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; to avoid duplication. If the tarball has an unusual name you may need to manually assign the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">브루 시도가 자동으로 결정하는 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 로부터 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 피하기 중복에 있습니다. tarball의 이름이 다른 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 을 수동으로 할당해야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc4b8b97d41998ddefdacd94e5b9df7631d31fff" translate="yes" xml:space="preserve">
          <source>Homebrew understands &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;svn&lt;/code&gt;, and &lt;code&gt;hg&lt;/code&gt; URLs, and has a way to specify &lt;code&gt;cvs&lt;/code&gt; repositories as a URL as well. You can test whether the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; is being built with &lt;code&gt;build.head?&lt;/code&gt;.</source>
          <target state="translated">Homebrew는 &lt;code&gt;git&lt;/code&gt; , &lt;code&gt;svn&lt;/code&gt; 및 &lt;code&gt;hg&lt;/code&gt; URL을 이해하고 &lt;code&gt;cvs&lt;/code&gt; 저장소를 URL로 지정하는 방법 도 있습니다. &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;build.head?&lt;/code&gt; 로 빌드 되는지 테스트 할 수 있습니까? .</target>
        </trans-unit>
        <trans-unit id="5a01b41d183f510b67b3b40a0cf62a56a72a13e7" translate="yes" xml:space="preserve">
          <source>Homebrew uses Git for downloading updates and contributing to the project.</source>
          <target state="translated">Homebrew는 Git을 사용하여 업데이트를 다운로드하고 프로젝트에 기여합니다.</target>
        </trans-unit>
        <trans-unit id="19ac498ac758a2959033bdbd45c184bd23f93b15" translate="yes" xml:space="preserve">
          <source>Homebrew wants to maintain a consistent Ruby style across all formulae mostly based on &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;Ruby Style Guide&lt;/a&gt;. Other formulae may not have been updated to match this guide yet but all new ones should. Also:</source>
          <target state="translated">Homebrew는 대부분 &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;Ruby 스타일 가이드를&lt;/a&gt; 기반으로하는 모든 공식에서 일관된 Ruby 스타일을 유지하려고합니다 . 다른 공식은이 안내서와 일치하도록 업데이트되지 않았지만 모든 새로운 공식은 업데이트되어야합니다. 또한:</target>
        </trans-unit>
        <trans-unit id="bfc7431e67c9bcfc3bd62c8261d10668cacf8dfe" translate="yes" xml:space="preserve">
          <source>Homebrew will try to guess the formula&amp;rsquo;s name from its URL. If it fails to do so you can override this with &lt;code&gt;brew create &amp;lt;URL&amp;gt; --set-name &amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Homebrew는 URL에서 수식 이름을 추측하려고합니다. 그렇지 않으면 &lt;code&gt;brew create &amp;lt;URL&amp;gt; --set-name &amp;lt;name&amp;gt;&lt;/code&gt; 이를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60fb24e9296a57015cf27dfc35f56054ce8a66d1" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s &lt;code&gt;site-packages&lt;/code&gt; directory is first created if (1) any Homebrew formula with Python bindings are installed, or (2) upon &lt;code&gt;brew install python&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 &lt;code&gt;site-packages&lt;/code&gt; 디렉토리는 (1) Python 바인딩이있는 Homebrew 공식이 설치되어 있거나 (2) &lt;code&gt;brew install python&lt;/code&gt; 시 설치 되는 경우 처음 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="4fde03af08da5f0cfd0f63d686e1421d8cf0aaf3" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Linux maintainers are Daniel Nachun, Dawid Dziurla, Issy Long, Jonathan Chang, Michka Popoff and Shaun Jackman.</source>
          <target state="translated">Homebrew의 Linux 관리자는 Daniel Nachun, Dawid Dziurla, Issy Long, Jonathan Chang, Michka Popoff 및 Shaun Jackman입니다.</target>
        </trans-unit>
        <trans-unit id="ed701fb08d84e12f2df06ce0e49ed66fb65bb5bf" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s OpenSSL is &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; to avoid conflicting with the system so sometimes formulae need to have environment variables set or special configuration flags passed to locate our OpenSSL. You can see this mechanism in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt;&lt;code&gt;clamav&lt;/code&gt;&lt;/a&gt; formula. Usually this is unnecessary because Homebrew sets up our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/extend/ENV/super.rb&quot;&gt;build environment&lt;/a&gt; to favour finding &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; formulae first.</source>
          <target state="translated">Homebrew&amp;rsquo;s OpenSSL is &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; to avoid conflicting with the system so sometimes formulae need to have environment variables set or special configuration flags passed to locate our OpenSSL. You can see this mechanism in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt; &lt;code&gt;clamav&lt;/code&gt; &lt;/a&gt; formula. Usually this is unnecessary because Homebrew sets up our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/extend/ENV/super.rb&quot;&gt;build environment&lt;/a&gt; to favour finding &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; formulae first.</target>
        </trans-unit>
        <trans-unit id="cdb42ccf577ea33bce2d8924759c18770f1a0606" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s OpenSSL is &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; to avoid conflicting with the system so sometimes formulae need to have environment variables set or special configuration flags passed to locate our OpenSSL. You can see this mechanism in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt;&lt;code&gt;clamav&lt;/code&gt;&lt;/a&gt; formula. Usually this is unnecessary because Homebrew sets up our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/extend/ENV/super.rb&quot;&gt;build environment&lt;/a&gt; to favour finding &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; formulae first.</source>
          <target state="translated">Homebrew의 OpenSSL은 시스템과의 충돌을 피하기 위해 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; 이므로 때로는 공식에 OpenSSL을 찾기 위해 환경 변수 세트 또는 특수 구성 플래그가 전달되어야합니다. 이 메커니즘은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt; &lt;code&gt;clamav&lt;/code&gt; &lt;/a&gt; 공식 에서 볼 수 있습니다 . Homebrew는 먼저 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/extend/ENV/super.rb&quot;&gt;빌드 환경&lt;/a&gt; 을 설정하여 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; 공식을 먼저 찾 도록 하기 때문에 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8647e5cf13e0e4572e892f9f9231cdbc34d88415" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leader is Mike McQuaid.</source>
          <target state="translated">Homebrew의 프로젝트 리더는 Mike McQuaid입니다.</target>
        </trans-unit>
        <trans-unit id="db37b8a429131b4821a36525c49321d277872797" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leadership Committee is Jonathan Chang, Markus Reiter, Misty De Meo, Sean Molenaar and Shaun Jackman.</source>
          <target state="translated">Homebrew의 프로젝트 리더십위원회는 Jonathan Chang, Markus Reiter, Misty De Meo, Sean Molenaar 및 Shaun Jackman입니다.</target>
        </trans-unit>
        <trans-unit id="742a7bf0d29af6ea72b3e4c8c0a988e5348aa0de" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leadership Committee is Misty De Meo, Shaun Jackman, Jonathan Chang, Mike McQuaid and Markus Reiter.</source>
          <target state="translated">Homebrew의 프로젝트 리더십위원회는 Misty De Meo, Shaun Jackman, Jonathan Chang, Mike McQuaid 및 Markus Reiter입니다.</target>
        </trans-unit>
        <trans-unit id="d825afe421cd9dcdde7f11b1b396c95f24c1fc2a" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leadership Committee is Misty De Meo, Shaun Jackman, Jonathan Chang, Sean Molenaar and Markus Reiter.</source>
          <target state="translated">Homebrew&amp;rsquo;s Project Leadership Committee is Misty De Meo, Shaun Jackman, Jonathan Chang, Sean Molenaar and Markus Reiter.</target>
        </trans-unit>
        <trans-unit id="68c9ca39b9f08ef1d140bdd30b550643fc2a3696" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Technical Steering Committee is FX Coudert, Markus Reiter, Michka Popoff, Mike McQuaid and Misty De Meo.</source>
          <target state="translated">Homebrew의 기술 운영위원회는 FX Coudert, Markus Reiter, Michka Popoff, Mike McQuaid 및 Misty De Meo입니다.</target>
        </trans-unit>
        <trans-unit id="0ca90a174393bd7a80fda69af4d3e7d23127f995" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Technical Steering Committee is Michka Popoff, FX Coudert, Markus Reiter, Misty De Meo and Mike McQuaid.</source>
          <target state="translated">Homebrew의 기술 운영위원회는 Michka Popoff, FX Coudert, Markus Reiter, Misty De Meo 및 Mike McQuaid입니다.</target>
        </trans-unit>
        <trans-unit id="31af9e328c6278bcb5b7f90ffa31c47b46d6369f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics are sent throughout Homebrew&amp;rsquo;s execution to Google Analytics over HTTPS.</source>
          <target state="translated">Homebrew의 분석은 Homebrew가 실행되는 동안 HTTPS를 통해 Google Analytics로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="a5e2144547f6b3d18f4422b9357aaffb410ebb0f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics record some shared information for every event:</source>
          <target state="translated">Homebrew의 분석은 모든 이벤트에 대한 몇 가지 공유 정보를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="7bfc9c1ff2481afc52a688aa4b2abea42ce4f13a" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics records the following different events:</source>
          <target state="translated">Homebrew의 분석은 다음과 같은 다양한 이벤트를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="b6bbf16deaf03b6d1633f6a477617cfc1e320b4f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s anonymous user and event data have a 14 month retention period. This is the &lt;a href=&quot;https://support.google.com/analytics/answer/7667196&quot;&gt;lowest possible value for Google Analytics&lt;/a&gt;.</source>
          <target state="translated">Homebrew의 익명 사용자 및 이벤트 데이터의 보존 기간은 14 개월입니다. 이것이 &lt;a href=&quot;https://support.google.com/analytics/answer/7667196&quot;&gt;Google 웹 로그 분석에서 가능한 가장 낮은 값입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02ae9b33e2dad9671fefb8f01f678a6bb4094671" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s audience includes users with a wide range of education and experience, and users for whom English is not a native language. We aim to support as many of those users as feasible.</source>
          <target state="translated">Homebrew의 독자는 광범위한 교육 및 경험을 가진 사용자와 영어가 모국어가 아닌 사용자를 포함합니다. 우리는 가능한 많은 사용자를 지원하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="2e68ebb1ed712931b32f86359f0ada11c3331b47" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s creator @mxcl was too concerned with the beer theme and didn&amp;rsquo;t consider that the project may actually prove popular. By the time Max realised that it was popular, it was too late. However, today, the first Google hit for &amp;ldquo;homebrew&amp;rdquo; is not beer related 😉</source>
          <target state="translated">Homebrew&amp;rsquo;s creator @mxcl was too concerned with the beer theme and didn&amp;rsquo;t consider that the project may actually prove popular. By the time Max realised that it was popular, it was too late. However, today, the first Google hit for &amp;ldquo;homebrew&amp;rdquo; is not beer related 😉</target>
        </trans-unit>
        <trans-unit id="f9b3606f62f1dafe8722b3ef71f49d6d498c55b8" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s default behaviour automatically uninstalls old versions of a formula every 30 days.</source>
          <target state="translated">Homebrew의 기본 동작은 30 일마다 이전 버전의 수식을 자동으로 제거합니다.</target>
        </trans-unit>
        <trans-unit id="dcc332f24268cc5d9e6bc22e453573ce085c0cf3" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s other current maintainers are Alexander Bayandin, Bo Anderson, Caleb Xu, Carlo Cabrera, Claudia Pellegrino, Dustin Rodrigues, Eric Knibbe, Maxim Belkin, Miccal Matthews, Nanda H Krishna, Randall, Rylan Polster, Sam Ford, Seeker, Steve Peters, Thierry Moisan, Tom Schoonjans, V&amp;iacute;tor Galv&amp;atilde;o and rui.</source>
          <target state="translated">Homebrew의 다른 현재 관리자는 Alexander Bayandin, Bo Anderson, Caleb Xu, Carlo Cabrera, Claudia Pellegrino, Dustin Rodrigues, Eric Knibbe, Maxim Belkin, Miccal Matthews, Nanda H Krishna, Randall, Rylan Polster, Sam Ford, Seeker, Steve Peters, Thierry입니다. Moisan, Tom Schoonjans, V&amp;iacute;tor Galv&amp;atilde;o 및 rui.</target>
        </trans-unit>
        <trans-unit id="e21f4c4fb9fdbbf0cfbbfebb4e1a043c8d208bdb" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s other current maintainers are Claudia Pellegrino, Chongyu Zhu, Vitor Galvao, Gautham Goli, Steven Peters, William Woodruff, Igor Kapkov, Izaak Beekman, Sean Molenaar, Jan Viljanen, Jason Tedor, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans and Issy Long.</source>
          <target state="translated">Homebrew의 다른 현재 관리자는 Claudia Pellegrino, Chongyu Zhu, Vitor Galvao, Gautham Goli, Steven Peters, William Woodruff, Igor Kapkov, Izaak Beekman, Sean Molenaar, Jan Viljanen, Jason Tedor, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans와 Issy Long.</target>
        </trans-unit>
        <trans-unit id="a6ea9e0519ff51b5f407acaeb04cc0f88dda6aed" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s other current maintainers are Claudia Pellegrino, Zach Auten, Rui Chen, Vitor Galvao, Caleb Xu, Gautham Goli, Steven Peters, Bo Anderson, William Woodruff, Igor Kapkov, Sam Ford, Alexander Bayandin, Izaak Beekman, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans, Issy Long, CoreCode, Randall, Rylan Polster, SeekingMeaning, William Ma and Dustin Rodrigues.</source>
          <target state="translated">Homebrew&amp;rsquo;s other current maintainers are Claudia Pellegrino, Zach Auten, Rui Chen, Vitor Galvao, Caleb Xu, Gautham Goli, Steven Peters, Bo Anderson, William Woodruff, Igor Kapkov, Sam Ford, Alexander Bayandin, Izaak Beekman, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans, Issy Long, CoreCode, Randall, Rylan Polster, SeekingMeaning, William Ma and Dustin Rodrigues.</target>
        </trans-unit>
        <trans-unit id="208776256223b8316d8fc32d5f9cca80b17816ee" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s pre-built binary packages (known as &lt;a href=&quot;bottles&quot;&gt;bottles&lt;/a&gt;) of many packages can only be used if you install in the default installation prefix, otherwise they have to be built from source. Building from source takes a long time, is prone to fail, and is not supported. Do yourself a favour and install to the default prefix so that you can use our pre-built binary packages. The default prefix is &lt;code&gt;/usr/local&lt;/code&gt; for macOS on Intel, &lt;code&gt;/opt/homebrew&lt;/code&gt; for macOS on ARM, and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; for Linux. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</source>
          <target state="translated">Homebrew의 사전 빌드 된 바이너리 패키지 ( &lt;a href=&quot;bottles&quot;&gt;병&lt;/a&gt; 이라고 함 )는 기본 설치 접두사로 설치하는 경우에만 사용할 수 있으며 그렇지 않으면 소스에서 빌드해야합니다. 소스에서 빌드하는 데 시간이 오래 걸리고 실패하기 쉬우 며 지원되지 않습니다. 미리 빌드 된 바이너리 패키지를 사용할 수 있도록 기본 접두사를 선호하고 설치하십시오. 기본 접두사는 Intel의 macOS의 경우 &lt;code&gt;/usr/local&lt;/code&gt; , ARM의 macOS의 경우 &lt;code&gt;/opt/homebrew&lt;/code&gt; , Linux의 경우 &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; 입니다. &lt;em&gt;위험에 처한 다른 접두사를 선택하십시오!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4657e1fe91c9cf2c740432fc1886281a86790af" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s versions are not intended to be used for any old versions you personally require for your project. You should create your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt; for formulae you or your organisation wish to control the versioning of or those that do not meet the above standards. Software that has regular API or ABI breaking releases still needs to meet all the above requirements; that a &lt;code&gt;brew upgrade&lt;/code&gt; has broken something for you is not an argument for us to add and maintain a formula for you.</source>
          <target state="translated">Homebrew의 버전은 프로젝트에 개인적으로 필요한 이전 버전에는 사용되지 않습니다. 자신 또는 조직에서 버전 관리를 제어하려는 공식 또는 위의 표준을 충족하지 않는 공식에 대한 &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;탭&lt;/a&gt; 을 직접 만들어야합니다 . 정식 API 또는 ABI 최신 릴리스가있는 소프트웨어는 여전히 위의 모든 요구 사항을 충족해야합니다. &amp;bull; 그래도 &lt;code&gt;brew upgrade&lt;/code&gt; 당신이 우리가 추가하고 당신을 위해 수식을 유지하기 위해 인수가 아닌 뭔가를 끊었다.</target>
        </trans-unit>
        <trans-unit id="b410d94b4de4b1558049d4f93a41091b3506e205" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s versions should not be used to &amp;ldquo;pin&amp;rdquo; formulae to your personal requirements. You should instead create your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt; for formulae you or your organisation wish to control the versioning of, or those that do not meet the above standards. Software that has regular API or ABI breaking releases still needs to meet all the above requirements; that a &lt;code&gt;brew upgrade&lt;/code&gt; has broken something for you is not an argument for us to add and maintain a formula for you.</source>
          <target state="translated">Homebrew&amp;rsquo;s versions should not be used to &amp;ldquo;pin&amp;rdquo; formulae to your personal requirements. You should instead create your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt; for formulae you or your organisation wish to control the versioning of, or those that do not meet the above standards. Software that has regular API or ABI breaking releases still needs to meet all the above requirements; that a &lt;code&gt;brew upgrade&lt;/code&gt; has broken something for you is not an argument for us to add and maintain a formula for you.</target>
        </trans-unit>
        <trans-unit id="b7872a1919920893d3cfbb890bec621c33e2cc74" translate="yes" xml:space="preserve">
          <source>Homebrew, like &lt;code&gt;git&lt;/code&gt;(1), supports external commands. These are executable scripts that reside somewhere in the &lt;code&gt;PATH&lt;/code&gt;, named &lt;code&gt;brew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt; or &lt;code&gt;brew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;, which can be invoked like &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt;. This allows you to create your own commands without modifying Homebrew&amp;rsquo;s internals.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1) 과 같이 Homebrew 는 외부 명령을 지원합니다. 이들은 &lt;code&gt;brew-&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmdname&lt;/code&gt; &lt;/em&gt; 또는 &lt;code&gt;brew-&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmdname&lt;/code&gt; &lt;/em&gt; &lt;code&gt;.rb&lt;/code&gt; 라는 &lt;code&gt;PATH&lt;/code&gt; 어딘가에있는 실행 가능한 스크립트이며 , &lt;code&gt;brew&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmdname&lt;/code&gt; &lt;/em&gt; 과 같이 호출 할 수 있습니다 . 이를 통해 Homebrew의 내부를 수정하지 않고도 고유 한 명령을 만들 수 있습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d07df14b4d7eb8f09805c43c1d4ecaa5fdcd017" translate="yes" xml:space="preserve">
          <source>Homebrew, like Git, supports &lt;em&gt;external commands&lt;/em&gt;. This lets you create new commands that can be run like:</source>
          <target state="translated">Git과 마찬가지로 Homebrew는 &lt;em&gt;외부 명령을&lt;/em&gt; 지원 &lt;em&gt;합니다&lt;/em&gt; . 이를 통해 다음과 같이 실행할 수있는 새 명령을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05adcc9dc76a84e36331fdc14d8a432a63c4e75f" translate="yes" xml:space="preserve">
          <source>Homebrew-provided Python bindings</source>
          <target state="translated">Homebrew 제공 Python 바인딩</target>
        </trans-unit>
        <trans-unit id="bf10d7ac00c285af0ffd2b6cceed7a703c05f07b" translate="yes" xml:space="preserve">
          <source>Homebrew/brew&amp;rsquo;s Linux maintainers are Michka Popoff, Shaun Jackman and Issy Long.</source>
          <target state="translated">Homebrew / brew의 Linux 관리자는 Michka Popoff, Shaun Jackman 및 Issy Long입니다.</target>
        </trans-unit>
        <trans-unit id="65573490b7d568cbd75a88030d5edd9629aee0bb" translate="yes" xml:space="preserve">
          <source>Homebrew/brew&amp;rsquo;s Linux maintainers are Michka Popoff, Shaun Jackman, Dawid Dziurla, Issy Long and Maxim Belkin.</source>
          <target state="translated">Homebrew/brew&amp;rsquo;s Linux maintainers are Michka Popoff, Shaun Jackman, Dawid Dziurla, Issy Long and Maxim Belkin.</target>
        </trans-unit>
        <trans-unit id="fadaccd095ea82248d2354c84c8720135cf61be7" translate="yes" xml:space="preserve">
          <source>Homebrew/discussions (forum)</source>
          <target state="translated">Homebrew/discussions (forum)</target>
        </trans-unit>
        <trans-unit id="5f355fd7ee049e78396735fd85090268dec20439" translate="yes" xml:space="preserve">
          <source>Homebrew/homebrew-core Merge Checklist</source>
          <target state="translated">Homebrew / homebrew-core 병합 체크리스트</target>
        </trans-unit>
        <trans-unit id="6cbd5cd5fdf17703e2573034e9754b24a7af1df8" translate="yes" xml:space="preserve">
          <source>Homebrew/homebrew-core merge checklist</source>
          <target state="translated">Homebrew/homebrew-core merge checklist</target>
        </trans-unit>
        <trans-unit id="f42a2e84295e3934da8bd9b3d822d71aa1c6d43e" translate="yes" xml:space="preserve">
          <source>Homebrew/linuxbrew-core Maintainer Guide</source>
          <target state="translated">Homebrew/linuxbrew-core Maintainer Guide</target>
        </trans-unit>
        <trans-unit id="65b9329bd66ffeb157760716947c6870d33ea102" translate="yes" xml:space="preserve">
          <source>Homebrew/linuxbrew-core on GitHub</source>
          <target state="translated">GitHub의 Homebrew / linuxbrew-core</target>
        </trans-unit>
        <trans-unit id="75c93e567e974e005b542e709d154ead45069e72" translate="yes" xml:space="preserve">
          <source>How Long?</source>
          <target state="translated">얼마나 오래?</target>
        </trans-unit>
        <trans-unit id="9389d4f389149065608454896d4879895091f999" translate="yes" xml:space="preserve">
          <source>How To Build Software Outside Homebrew With Homebrew &lt;code&gt;keg_only&lt;/code&gt; dependencies</source>
          <target state="translated">Homebrew를 사용하여 Homebrew 외부에서 소프트웨어를 빌드하는 방법 &lt;code&gt;keg_only&lt;/code&gt; dependencies</target>
        </trans-unit>
        <trans-unit id="3213a2ecb2a9c1484b0becf08277e900383599cf" translate="yes" xml:space="preserve">
          <source>How To Create (And Maintain) A Tap</source>
          <target state="translated">탭 생성 및 유지 관리 방법</target>
        </trans-unit>
        <trans-unit id="452bde9cecc0b301b68dd57f206a4ba839f244e2" translate="yes" xml:space="preserve">
          <source>How To Open A Pull Request (and get it merged)</source>
          <target state="translated">끌어 오기 요청을 열고 병합하는 방법</target>
        </trans-unit>
        <trans-unit id="067767e1e93969b4ba70d11b5d90a8cd94c37af7" translate="yes" xml:space="preserve">
          <source>How To Open a Homebrew Pull Request</source>
          <target state="translated">사제 풀 요청을 여는 방법</target>
        </trans-unit>
        <trans-unit id="6742250ec4c38a11aabe94e08bff022ed031207f" translate="yes" xml:space="preserve">
          <source>How To Open a Homebrew Pull Request (and get it merged)</source>
          <target state="translated">Homebrew 풀 요청을 열고 병합하는 방법</target>
        </trans-unit>
        <trans-unit id="84c484929ca1ef62bfcb1d800ca17f0eca034460" translate="yes" xml:space="preserve">
          <source>How can I keep old versions of a formula when upgrading?</source>
          <target state="translated">How can I keep old versions of a formula when upgrading?</target>
        </trans-unit>
        <trans-unit id="53663318d6446d53a95e4c9c07cf82ac34090b3e" translate="yes" xml:space="preserve">
          <source>How can I specify different configure arguments for a formula?</source>
          <target state="translated">수식에 다른 구성 인수를 지정하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="f5604967ad5059e407a99b22ecf4c05dd40ddb9c" translate="yes" xml:space="preserve">
          <source>How do I contribute to Homebrew?</source>
          <target state="translated">Homebrew에 어떻게 기여합니까?</target>
        </trans-unit>
        <trans-unit id="cbcccd47252d22bd8aba1c8e46552b520882cc66" translate="yes" xml:space="preserve">
          <source>How do I get a formula from someone else&amp;rsquo;s branch?</source>
          <target state="translated">다른 사람의 지점에서 수식을 얻으려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="5634f2b1eb5bc9e1233a422bb4c76a03d83c0804" translate="yes" xml:space="preserve">
          <source>How do I stop certain formulae from being updated?</source>
          <target state="translated">특정 수식이 업데이트되지 않게하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="553ae9bb814e3f62ad1d97985c40251ae12db10b" translate="yes" xml:space="preserve">
          <source>How do I uninstall Homebrew?</source>
          <target state="translated">Homebrew를 어떻게 제거합니까?</target>
        </trans-unit>
        <trans-unit id="b0b1d83969e94eebb62d851c40bfe35689f57d0a" translate="yes" xml:space="preserve">
          <source>How do I uninstall a formula?</source>
          <target state="translated">수식을 제거하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="d454452d14127a3f2f083057beaa895dddae3a3f" translate="yes" xml:space="preserve">
          <source>How do I uninstall old versions of a formula?</source>
          <target state="translated">이전 버전의 수식을 제거하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="2e928202162f16cfc2f470143d0caad228302b4d" translate="yes" xml:space="preserve">
          <source>How do I update my local packages?</source>
          <target state="translated">로컬 패키지를 어떻게 업데이트합니까?</target>
        </trans-unit>
        <trans-unit id="f02bc5ac6f8dd46e26f73f2bb819ef0945599627" translate="yes" xml:space="preserve">
          <source>How do I use those tools outside of Homebrew?</source>
          <target state="translated">Homebrew 외부에서 해당 도구를 사용하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="f5e53428147c192fef8647b337d6e5e54c20faca" translate="yes" xml:space="preserve">
          <source>How to Build Software Outside Homebrew with Homebrew &lt;code&gt;keg_only&lt;/code&gt; Dependencies</source>
          <target state="translated">How to Build Software Outside Homebrew with Homebrew &lt;code&gt;keg_only&lt;/code&gt; Dependencies</target>
        </trans-unit>
        <trans-unit id="22cc1f65626d3a8483651adc6eda41cf05f4ff81" translate="yes" xml:space="preserve">
          <source>How to Create and Maintain a Tap</source>
          <target state="translated">탭을 만들고 유지하는 방법</target>
        </trans-unit>
        <trans-unit id="f9d429f8510b62fa50bc06c827146f1d0b612225" translate="yes" xml:space="preserve">
          <source>How to build software outside Homebrew with Homebrew &lt;code&gt;keg_only&lt;/code&gt; dependencies</source>
          <target state="translated">Homebrew &lt;code&gt;keg_only&lt;/code&gt; 의존성을 사용 하여 Homebrew 외부에서 소프트웨어를 빌드하는 방법</target>
        </trans-unit>
        <trans-unit id="e9a012b37e0c3d96d24fd9bb0f181f88bad4fa31" translate="yes" xml:space="preserve">
          <source>How to build software outside Homebrew with Homebrew keg_only dependencies</source>
          <target state="translated">Homebrew keg_only 의존성을 사용하여 Homebrew 외부에서 소프트웨어를 빌드하는 방법</target>
        </trans-unit>
        <trans-unit id="94f60f7660faa455443dbb6dcdc19a5749f10af2" translate="yes" xml:space="preserve">
          <source>How to start over (reset to upstream &lt;code&gt;master&lt;/code&gt;)</source>
          <target state="translated">다시 시작하는 방법 (업스트림 &lt;code&gt;master&lt;/code&gt; 재설정 )</target>
        </trans-unit>
        <trans-unit id="f0591571be5ecb580eaac67d1b0d3a5956f451d4" translate="yes" xml:space="preserve">
          <source>How to use these guidelines</source>
          <target state="translated">이 지침을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="translated">How?</target>
        </trans-unit>
        <trans-unit id="06fc60aba42f257e13cb8cceebb4c65074040aed" translate="yes" xml:space="preserve">
          <source>However do yourself a favour and install to &lt;code&gt;/usr/local&lt;/code&gt; on macOS Intel, &lt;code&gt;/opt/homebrew&lt;/code&gt; on macOS ARM, and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; on Linux. Some things may not build when installed elsewhere. One of the reasons Homebrew just works relative to the competition is &lt;strong&gt;because&lt;/strong&gt; we recommend installing here. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</source>
          <target state="translated">However do yourself a favour and install to &lt;code&gt;/usr/local&lt;/code&gt; on macOS Intel, &lt;code&gt;/opt/homebrew&lt;/code&gt; on macOS ARM, and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; on Linux. Some things may not build when installed elsewhere. One of the reasons Homebrew just works relative to the competition is &lt;strong&gt;because&lt;/strong&gt; we recommend installing here. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3f1eed99b27a1b470955618838b7f709127cb81" translate="yes" xml:space="preserve">
          <source>However do yourself a favour and install to &lt;code&gt;/usr/local&lt;/code&gt;. Some things may not build when installed elsewhere. One of the reasons Homebrew just works relative to the competition is &lt;strong&gt;because&lt;/strong&gt; we recommend installing to &lt;code&gt;/usr/local&lt;/code&gt;. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</source>
          <target state="translated">그러나 자신에게 유리한 태도를 취하고 &lt;code&gt;/usr/local&lt;/code&gt; 에 설치하십시오 . 다른 곳에 설치하면 어떤 것이 쌓이지 않을 수 있습니다. 이유 중 하나는 바로 경쟁 상대 작동 브루입니다 &lt;strong&gt;때문에&lt;/strong&gt; 우리가 설치하는 것이 좋습니다 &lt;code&gt;/usr/local&lt;/code&gt; . &lt;em&gt;당신의 위험에 다른 접두사를 선택하십시오!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35f0f18cbeeaba021c5a1ad89c97287e68b90bc6" translate="yes" xml:space="preserve">
          <source>However, some updates require additional changes to the formulae. You can look back at previous pull requests to see how others have handled things in the past but be sure to look at a variety of PRs. Sometimes formulae aren&amp;rsquo;t updated properly, so you may need to use your judgment to determine how to best proceed.</source>
          <target state="translated">그러나 일부 업데이트에는 수식에 대한 추가 변경이 필요합니다. 이전 풀 리퀘스트를 되돌아 보면 다른 사람들이 과거에 어떻게 처리했는지 확인할 수 있지만 다양한 PR을 확인해야합니다. 수식이 제대로 업데이트되지 않는 경우가 있으므로 최선의 진행 방법을 결정하기 위해 판단을해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec0399a187d45b914b5af29e1a3389253d4fcc9f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;brew doctor&lt;/code&gt; still complains about uncommitted modifications, also run this command:</source>
          <target state="translated">&lt;code&gt;brew doctor&lt;/code&gt; 여전히 커밋되지 않은 수정에 대해 불평하는 경우 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9ee78ae47873afdeaf07141c2725c0e0e59e11c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;brew&lt;/code&gt; said &lt;code&gt;Warning: Version cannot be determined from URL&lt;/code&gt; when doing the &lt;code&gt;create&lt;/code&gt; step, you&amp;rsquo;ll need to explicitly add the correct &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; to the formula and then save the formula.</source>
          <target state="translated">경우 &lt;code&gt;brew&lt;/code&gt; 말했다 &lt;code&gt;Warning: Version cannot be determined from URL&lt;/code&gt; 할 때 &lt;code&gt;create&lt;/code&gt; 단계, 당신은 명시 적으로 올바른 추가해야합니다 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 공식으로 다음 식 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ed33dc08f91bb963e6a3c80a6c8771a14cae2b13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; is passed, turn Homebrew&amp;rsquo;s analytics on or off respectively.</source>
          <target state="translated">&lt;code&gt;on&lt;/code&gt; 거나 &lt;code&gt;off&lt;/code&gt; 경우 Homebrew의 분석을 각각 켜거나 끄십시오.</target>
        </trans-unit>
        <trans-unit id="e99b1a200fc12e6ba02ff91cce62f23d88a3b84d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;regenerate-uuid&lt;/code&gt; is passed, regenerate UUID used in Homebrew&amp;rsquo;s analytics.</source>
          <target state="translated">경우 &lt;code&gt;regenerate-uuid&lt;/code&gt; 전달되는, 중생 UUID는 브루의 분석에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b3e8fea6a021311db367093df0a86b7fffac8d81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;state&lt;/code&gt; is passed, display anonymous user behaviour analytics state. Read more at &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;state&lt;/code&gt; 전달되고, 익명의 사용자 행동 분석의 상태를 표시합니다. &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt; 에서 자세히 알아 보십시오 .</target>
        </trans-unit>
        <trans-unit id="5b2a52296bb039d90954d73a6a5c13bdf2fdfc68" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sudo&lt;/code&gt; is passed, operate on &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; (started at boot). Otherwise, operate on &lt;code&gt;~/Library/LaunchAgents&lt;/code&gt; (started at login).</source>
          <target state="translated">If &lt;code&gt;sudo&lt;/code&gt; is passed, operate on &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; (started at boot). Otherwise, operate on &lt;code&gt;~/Library/LaunchAgents&lt;/code&gt; (started at login).</target>
        </trans-unit>
        <trans-unit id="e96ae3efdb081cffd0dd81509c41958299da5006" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; is provided, display the location in the Caskroom where &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; is provided, display the location in the Caskroom where &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</target>
        </trans-unit>
        <trans-unit id="052bf073d3882d70c148f3a9633b4d0e57a47fb6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given, upgrade only the specified brews (unless they are pinned; see &lt;code&gt;pin&lt;/code&gt;, &lt;code&gt;unpin&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 주어진다 (그들은 고정되지 않는 한, 참조는 지정된 양조주를 업그레이드 &lt;code&gt;pin&lt;/code&gt; , &lt;code&gt;unpin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d02af9632ef17566bd3157a472f1c866d59ef0d2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the file or directory used to cache &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 제공, 캐시에 사용되는 파일이나 디렉토리 표시 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e5b6ba85168aaeab657228ff356b9b284a34df6d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is or would be installed.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is or would be installed.</target>
        </trans-unit>
        <trans-unit id="6b3794c565b07b5f39fe8895a2af876ee22c312e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</target>
        </trans-unit>
        <trans-unit id="fdc5d766afd849854c69c9b84e77e15782a28bd4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is or would be installed.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 제공되고, 지하실 위치 표시 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 되거나 설치 될 수있다.</target>
        </trans-unit>
        <trans-unit id="97d26f500aac3205d517fb5c2246d7279f937f13" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 제공되는 경우 마지막 경로로 버전이 지정된 디렉토리없이 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 설치 될 지하실의 위치를 ​​표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a0a643e2b55feb50b600491f35b35a5f72698df" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, show summary of information about &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, show summary of information about &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="23741deb69d6f6fdc57cbc266b1b277c0bbaecf5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, summarise the paths within its current keg.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, summarise the paths within its current keg.</target>
        </trans-unit>
        <trans-unit id="c59ffc6e1c4bf0e043b8583af88c18e02e8817ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, summarise the paths within its current keg. If &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; is provided, list its artifacts.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 제공되고, 그 전류 통 내의 경로를 요약한다. &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 이 제공된 경우 해당 아티팩트를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="696f7a87e5f37bc15b4e55c90f9f16119418c35d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is specified, show summary of information about &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 가 지정 되면 &lt;em&gt;formula&lt;/em&gt; 정보의 요약을 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b42403d628e04da5d03917751567c4ece3308ddd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt; are provided, display where tap &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s directory is located.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; 제공되며, 디스플레이 탭 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; 의 디렉토리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="71b7187a9434f60df1eb12689708f00f5af2c1c8" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; is specified, the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; checksum of the new download should also be specified. A best effort to determine the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; name will be made if either or both values are not supplied by the user.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; 이&lt;/em&gt; 지정되면, &lt;em&gt; &lt;code&gt;SHA-256&lt;/code&gt; &lt;/em&gt; 새로운 다운로드의 검사도 지정해야합니다. &lt;em&gt; &lt;code&gt;SHA-256&lt;/code&gt; &lt;/em&gt; 및 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이름 을 결정하기위한 최선의 노력 은 사용자가 값 중 하나 또는 둘 다를 제공하지 않으면 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="772a3f3e655e2c6550706b2e839a6aeeb9471448" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; is provided, show summary of information about it.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 또는 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 제공되고, 그것에 대해 정보의 요약 정보를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cd5fd3ea7db514a22bad5c918c6a50728fd9eabf" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; is specified, the Git commit &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; corresponding to that tag must also be specified.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;tag&lt;/code&gt; &lt;/em&gt; 가 지정된 경우 해당 &lt;em&gt;태그&lt;/em&gt; 에 해당하는 Git 커밋 &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; 도 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="de3622dfd11d94601866c86db89070b823529d59" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; is specified, the Git commit &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; corresponding to that tag should also be specified. A best effort to determine the &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; will be made if the value is not supplied by the user.</source>
          <target state="translated">If a &lt;em&gt; &lt;code&gt;tag&lt;/code&gt; &lt;/em&gt; is specified, the Git commit &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; corresponding to that tag should also be specified. A best effort to determine the &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; will be made if the value is not supplied by the user.</target>
        </trans-unit>
        <trans-unit id="711544433834e120138f96e7c442b917daf550ac" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; is specified, a best effort to determine the &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; or the &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; will be made if both values are not supplied by the user.</source>
          <target state="translated">If a &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; is specified, a best effort to determine the &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; and &lt;em&gt; &lt;code&gt;SHA-256&lt;/code&gt; &lt;/em&gt; or the &lt;em&gt; &lt;code&gt;tag&lt;/code&gt; &lt;/em&gt; and &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; will be made if both values are not supplied by the user.</target>
        </trans-unit>
        <trans-unit id="162a436ef18a033c6fce8309711cac9b0b671f12" translate="yes" xml:space="preserve">
          <source>If a bottle is available and usable it will be downloaded and poured automatically when you &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. If you wish to disable this you can do so by specifying &lt;code&gt;--build-from-source&lt;/code&gt;.</source>
          <target state="translated">병이 사용 가능하고 사용 가능한 경우 &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt; 를 양조 할 때 병이 자동으로 다운로드되고 부어 집니다. 이를 비활성화하려면 &lt;code&gt;--build-from-source&lt;/code&gt; 를 지정하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="30cc6300d6bde9cc99038eb876a8f66c30f6410c" translate="yes" xml:space="preserve">
          <source>If a cask you depend on was removed due to these rules, fear not. Removal of a cask from the official repositories means we won&amp;rsquo;t support it, but you can do so by hosting your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt;.</source>
          <target state="translated">이 규칙으로 인해 의존하는 통이 제거 되었다면 두려워하지 마십시오. 공식 리포지토리에서 캐스 크를 제거하면 지원되지 않지만 자신의 &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;탭&lt;/a&gt; 을 호스팅하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2100480dc6a682888153bc0b6e0127a2f1f5dfdd" translate="yes" xml:space="preserve">
          <source>If a formula is widely used and is failing often it will enable us to prioritise fixing that formula over others.</source>
          <target state="translated">수식이 널리 사용되고 자주 실패하는 경우 해당 수식을 다른 수식보다 우선 순위를 정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6666e69a10195da0fe65bb3da9675518061afa1" translate="yes" xml:space="preserve">
          <source>If a formula that has failed to build is part of a non-core tap or a cask is part of &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues&quot;&gt;homebrew/cask&lt;/a&gt; check those issue trackers instead.</source>
          <target state="translated">빌드에 실패한 수식이 코어가 아닌 탭의 일부이거나 캐스 크가 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues&quot;&gt;homebrew / cask의&lt;/a&gt; 일부인 경우 해당 이슈 트래커를 대신 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5ce7b2c6a0121bc08c9c214f2f1a9bd3432ba531" translate="yes" xml:space="preserve">
          <source>If a strategy can be applied, use it to check for new versions.</source>
          <target state="translated">전략을 적용 할 수있는 경우이를 사용하여 새 버전을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="18a4d0c5a023fc8bc25c21dc324467e8153b4637" translate="yes" xml:space="preserve">
          <source>If a user attempts to install a deprecated formula, they will be shown a warning message but the install will proceed.</source>
          <target state="translated">사용자가 더 이상 사용되지 않는 공식을 설치하려고하면 경고 메시지가 표시되지만 설치는 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="d3c5a538f6d2d970afa0ac28fd568bdcdd30384a" translate="yes" xml:space="preserve">
          <source>If a user attempts to install a disabled formula, they will be shown an error message and the install will fail.</source>
          <target state="translated">사용자가 비활성화 된 수식을 설치하려고하면 오류 메시지가 표시되고 설치가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="c4c01e2578fab2cc833247602cd9ec0c59b7345f" translate="yes" xml:space="preserve">
          <source>If an app that bundles malware was not signed with an Apple Developer ID and you purposefully disabled or bypassed Gatekeeper, no action will be taken on our part. When you disable security features, you do so at your own risk. If, however, an app that bundles malware is signed, Apple can revoke its permissions and it will no longer run on the computers of users that keep security features on &amp;mdash; we all benefit, Homebrew Cask users or not. To report a signed app that bundles malware, use &lt;a href=&quot;https://feedbackassistant.apple.com&quot;&gt;Apple&amp;rsquo;s Feedback Assistant&lt;/a&gt;</source>
          <target state="translated">멀웨어를 번들로 제공하는 앱이 Apple Developer ID로 서명되지 않았고 귀하가 의도적으로 Gatekeeper를 비활성화하거나 우회 한 경우 당사는 어떠한 조치도 취하지 않습니다. 보안 기능을 비활성화하는 경우 책임은 사용자에게 있습니다. 그러나 멀웨어를 번들로 묶은 앱이 서명되면 Apple은 권한을 취소 할 수 있으며 보안 기능을 유지하는 사용자의 컴퓨터에서 더 이상 실행되지 않습니다. 우리 모두에게 이익이됩니다. Homebrew Cask 사용자 든 아니든간에 말입니다. 맬웨어를 번들로 제공하는 서명 된 앱을 신고하려면 &lt;a href=&quot;https://feedbackassistant.apple.com&quot;&gt;Apple의 피드백 지원을&lt;/a&gt; 사용하세요.</target>
        </trans-unit>
        <trans-unit id="fe98eb09bc54c62b904a67b376d067bfd3ffde67" translate="yes" xml:space="preserve">
          <source>If anything isn&amp;rsquo;t clear, you can usually figure it out by &lt;code&gt;grep&lt;/code&gt;ping the &lt;code&gt;$(brew --repo homebrew/core)&lt;/code&gt; directory. Please submit a pull request to amend this document if you think it will help!</source>
          <target state="translated">명확하지 않은 경우, 일반적으로 &lt;code&gt;$(brew --repo homebrew/core)&lt;/code&gt; 디렉토리 를 &lt;code&gt;grep&lt;/code&gt; 핑하여 알아낼 수 있습니다 . 도움이 될 것이라고 생각되면이 문서를 수정하기위한 풀 요청을 제출하십시오!</target>
        </trans-unit>
        <trans-unit id="a75fff982a1f6ca410ea4c31df0f98b89aa9e374" translate="yes" xml:space="preserve">
          <source>If available, bottled binaries will be used by default except under the following conditions:</source>
          <target state="translated">사용 가능한 경우 다음 조건을 제외하고 기본적으로 병 바이너리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9df5b5b095e860cef7a51a82b0b93f6ae2b0055d" translate="yes" xml:space="preserve">
          <source>If everything checks out, you&amp;rsquo;re ready to get started on a new formula!</source>
          <target state="translated">모든 것이 확인되면 새로운 공식을 시작할 준비가 된 것입니다!</target>
        </trans-unit>
        <trans-unit id="ee14fdc0fbe04c47873f449d2f761936414751fc" translate="yes" xml:space="preserve">
          <source>If installed from a Git clone, the repository directory (i.e. where Homebrew&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; directory lives).</source>
          <target state="translated">Git 복제본에서 설치 한 경우 리포지토리 디렉토리 (예 : Homebrew의 &lt;code&gt;.git&lt;/code&gt; 디렉토리가 있는 위치 )</target>
        </trans-unit>
        <trans-unit id="cc977a40612040aa5efa9917c9aca15419c7340f" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s been a while, bump it with a &amp;ldquo;bump&amp;rdquo; comment. Sometimes we miss requests and there are plenty of them. Maybe we were thinking on something. It will encourage consideration. In the meantime if you could rebase the pull request so that it can be cherry-picked more easily we will love you for a long time.</source>
          <target state="translated">오랜 시간이 지나면&amp;ldquo;범프&amp;rdquo;주석으로 범프하십시오. 때때로 우리는 요청을 그리워하고 많은 요청이 있습니다. 어쩌면 우리는 뭔가를 생각하고 있었을 것입니다. 그것은 고려를 장려 할 것입니다. 그동안 풀 요청을 더 쉽게 체리 픽으로 선택할 수 있도록 풀 요청을 리베이스 할 수 있다면 우리는 오랫동안 당신을 사랑할 것입니다.</target>
        </trans-unit>
        <trans-unit id="9e0da3770f3f1197ec5a08441e7c72f7d1e499e9" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s hosted outside of GitHub, they have to use &lt;code&gt;brew tap user/repo &amp;lt;URL&amp;gt;&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;repo&lt;/code&gt; will be used to refer to your tap and &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; is your Git clone URL.</source>
          <target state="translated">GitHub 외부에서 호스팅되는 경우, &lt;code&gt;brew tap user/repo &amp;lt;URL&amp;gt;&lt;/code&gt; 을 사용해야합니다 . 여기서 &lt;code&gt;user&lt;/code&gt; 및 &lt;code&gt;repo&lt;/code&gt; 는 탭을 참조하는 데 사용되고 &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; 은 Git 복제 URL입니다.</target>
        </trans-unit>
        <trans-unit id="f15ec2d1a9613563f25eeeeb2b9829353fc1bd75" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s not in &lt;code&gt;man brew&lt;/code&gt;, it&amp;rsquo;s probably an external command. These are documented &lt;a href=&quot;external-commands&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;man brew&lt;/code&gt; 에 없으면 외부 명령 일 수 있습니다. 이것들은 &lt;a href=&quot;external-commands&quot;&gt;여기&lt;/a&gt; 에 문서화되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="954879883f16c6398b4408067ced3a17c7c2ce5e" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, they can use &lt;code&gt;brew tap user/repo&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; is your GitHub username and &lt;code&gt;homebrew-repo&lt;/code&gt; is your repository.</source>
          <target state="translated">If it&amp;rsquo;s on GitHub, they can use &lt;code&gt;brew tap user/repo&lt;/code&gt; , where &lt;code&gt;user&lt;/code&gt; is your GitHub username and &lt;code&gt;homebrew-repo&lt;/code&gt; is your repository.</target>
        </trans-unit>
        <trans-unit id="552575dbf7965f498545efc6e7b46c06b6600e06" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, they can use &lt;code&gt;brew tap user/repo&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; is your GitHub username and &lt;code&gt;homebrew-repo&lt;/code&gt; your repository.</source>
          <target state="translated">그것이 GitHub에 있다면, &lt;code&gt;brew tap user/repo&lt;/code&gt; 를 사용할 수 있습니다 . 여기서 &lt;code&gt;user&lt;/code&gt; 는 GitHub 사용자 이름이고 &lt;code&gt;homebrew-repo&lt;/code&gt; 는 저장소입니다.</target>
        </trans-unit>
        <trans-unit id="650df9e491a14f4c1590f2a4ac645c50f7492d1e" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, users can install any of your formulae with &lt;code&gt;brew install user/repo/formula&lt;/code&gt;. Homebrew will automatically add your &lt;code&gt;github.com/user/homebrew-repo&lt;/code&gt; tap before installing the formula. &lt;code&gt;user/repo/formula&lt;/code&gt; points to the &lt;code&gt;github.com/user/homebrew-repo/**/formula.rb&lt;/code&gt; file here.</source>
          <target state="translated">그것이 GitHub에 있다면, 사용자는 &lt;code&gt;brew install user/repo/formula&lt;/code&gt; 로 모든 공식을 설치할 수 있습니다 . 공식을 설치하기 전에 Homebrew가 &lt;code&gt;github.com/user/homebrew-repo&lt;/code&gt; 탭 을 자동으로 추가합니다 . &lt;code&gt;user/repo/formula&lt;/code&gt; 는 &lt;code&gt;github.com/user/homebrew-repo/**/formula.rb&lt;/code&gt; 파일을 가리 킵니다 .</target>
        </trans-unit>
        <trans-unit id="f395c63183c4bd9313bf81571a724ed51b07d28f" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; names are provided, display brief statistics for all installed taps.</source>
          <target state="translated">If no &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; names are provided, display brief statistics for all installed taps.</target>
        </trans-unit>
        <trans-unit id="eda0ada539e3125b9bdbd6d53ead50e4dbc21984" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is passed, display all locally available formulae (including tapped ones). No online search is performed.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 가 전달 되지 않으면 로컬에서 사용할 수있는 모든 수식 (탭된 수식 포함)을 표시합니다. 온라인 검색이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bcd792c7bd116e6dda8b11cbc96b085916339d9c" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is provided, list all locally available formulae (including tapped ones). No online search is performed.</source>
          <target state="translated">If no &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; is provided, list all locally available formulae (including tapped ones). No online search is performed.</target>
        </trans-unit>
        <trans-unit id="cced0136fff91d090fbca8926f39637448e4b9bb" translate="yes" xml:space="preserve">
          <source>If no arguments are provided, list all installed taps.</source>
          <target state="translated">If no arguments are provided, list all installed taps.</target>
        </trans-unit>
        <trans-unit id="080dd71ff5982cbe215e504f1845c4149a6698bb" translate="yes" xml:space="preserve">
          <source>If no compilation is involved and there are no &lt;code&gt;:build&lt;/code&gt; dependencies, add the line &lt;code&gt;bottle :unneeded&lt;/code&gt; since bottles are unnecessary in this case. Otherwise, a &lt;code&gt;bottle&lt;/code&gt; block will be added by Homebrew&amp;rsquo;s CI upon merging the formula&amp;rsquo;s pull-request.</source>
          <target state="translated">If no compilation is involved and there are no &lt;code&gt;:build&lt;/code&gt; dependencies, add the line &lt;code&gt;bottle :unneeded&lt;/code&gt; since bottles are unnecessary in this case. Otherwise, a &lt;code&gt;bottle&lt;/code&gt; block will be added by Homebrew&amp;rsquo;s CI upon merging the formula&amp;rsquo;s pull-request.</target>
        </trans-unit>
        <trans-unit id="fd0229d1edeb737d731b3e927401b8727be32cf4" translate="yes" xml:space="preserve">
          <source>If no formula argument is passed, the list of formulae to check is taken from &lt;code&gt;HOMEBREW_LIVECHECK_WATCHLIST&lt;/code&gt; or &lt;code&gt;~/.brew_livecheck_watchlist&lt;/code&gt;.</source>
          <target state="translated">If no formula argument is passed, the list of formulae to check is taken from &lt;code&gt;HOMEBREW_LIVECHECK_WATCHLIST&lt;/code&gt; or &lt;code&gt;~/.brew_livecheck_watchlist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94ab6c9d4feac6d9571b64de3e07bd37f3428f5d" translate="yes" xml:space="preserve">
          <source>If no formula or cask argument is passed, the list of formulae and casks to check is taken from &lt;code&gt;HOMEBREW_LIVECHECK_WATCHLIST&lt;/code&gt; or &lt;code&gt;~/.brew_livecheck_watchlist&lt;/code&gt;.</source>
          <target state="translated">공식 또는 cask 인수가 전달되지 않은 경우 확인할 공식 및 cask 목록은 &lt;code&gt;HOMEBREW_LIVECHECK_WATCHLIST&lt;/code&gt; 또는 &lt;code&gt;~/.brew_livecheck_watchlist&lt;/code&gt; 에서 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="c4b613f0bf10c7df54e5110062c24e58d582b81c" translate="yes" xml:space="preserve">
          <source>If no logs are found, an error message is presented.</source>
          <target state="translated">로그가 없으면 오류 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="daf0b503a694cbe1d2fe5ea9eb9b111acf8bed47" translate="yes" xml:space="preserve">
          <source>If set along with &lt;code&gt;HOMEBREW_DEVELOPER&lt;/code&gt;, do not use bottles from older versions of macOS. This is useful in development on new macOS versions.</source>
          <target state="translated">If set along with &lt;code&gt;HOMEBREW_DEVELOPER&lt;/code&gt; , do not use bottles from older versions of macOS. This is useful in development on new macOS versions.</target>
        </trans-unit>
        <trans-unit id="6693a7b0e32ad84e683381f973194a46e1310d95" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew reinstall&lt;/code&gt; will cleanup all formulae when this number of days has passed.</source>
          <target state="translated">설정된 경우, &lt;code&gt;brew install&lt;/code&gt; , &lt;code&gt;brew upgrade&lt;/code&gt; 및 &lt;code&gt;brew reinstall&lt;/code&gt; 는이 일 수가 지나면 모든 공식을 정리합니다.</target>
        </trans-unit>
        <trans-unit id="85fba99d8192559698c06dc920701a656b2c3f49" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew reinstall&lt;/code&gt; will never automatically cleanup installed/upgraded/reinstalled formulae or all formulae every 30 days.</source>
          <target state="translated">If set, &lt;code&gt;brew install&lt;/code&gt; , &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew reinstall&lt;/code&gt; will never automatically cleanup installed/upgraded/reinstalled formulae or all formulae every 30 days.</target>
        </trans-unit>
        <trans-unit id="57bbdf50da14259263ccee96b1625671903bf89f" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew reinstall&lt;/code&gt; will never automatically cleanup installed/upgraded/reinstalled formulae or all formulae every &lt;code&gt;HOMEBREW_CLEANUP_PERIODIC_FULL_DAYS&lt;/code&gt; days.</source>
          <target state="translated">설정된 경우 &lt;code&gt;brew install&lt;/code&gt; , &lt;code&gt;brew upgrade&lt;/code&gt; 및 &lt;code&gt;brew reinstall&lt;/code&gt; &lt;code&gt;HOMEBREW_CLEANUP_PERIODIC_FULL_DAYS&lt;/code&gt; 일 마다 설치 / 업그레이드 / 재설치 된 수식 또는 모든 수식을 자동으로 정리하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="bdcf7b1a9a7b38191769044672142d191c075c7b" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;brew update&lt;/code&gt; only lists updates to installed software.</source>
          <target state="translated">If set, &lt;code&gt;brew update&lt;/code&gt; only lists updates to installed software.</target>
        </trans-unit>
        <trans-unit id="4550819abbcd79b9c9de1645b35bc2174f63ce9f" translate="yes" xml:space="preserve">
          <source>If set, always assume &lt;code&gt;--debug&lt;/code&gt; when running commands.</source>
          <target state="translated">If set, always assume &lt;code&gt;--debug&lt;/code&gt; when running commands.</target>
        </trans-unit>
        <trans-unit id="bc91cb6630c1ff09df6d233ebe3a8f2165cc0263" translate="yes" xml:space="preserve">
          <source>If set, always assume &lt;code&gt;--verbose&lt;/code&gt; when running commands.</source>
          <target state="translated">If set, always assume &lt;code&gt;--verbose&lt;/code&gt; when running commands.</target>
        </trans-unit>
        <trans-unit id="3cc8fd3d22c527932b4b568a6875d889f6e57032" translate="yes" xml:space="preserve">
          <source>If set, always use Homebrew&amp;rsquo;s vendored, relocatable Ruby version even if the system version of Ruby is new enough.</source>
          <target state="translated">If set, always use Homebrew&amp;rsquo;s vendored, relocatable Ruby version even if the system version of Ruby is new enough.</target>
        </trans-unit>
        <trans-unit id="5b61e1788de1c06c7e4f6492ad1eb386aa2ad092" translate="yes" xml:space="preserve">
          <source>If set, always use a Homebrew-installed &lt;code&gt;curl&lt;/code&gt;(1) rather than the system version. Automatically set if the system version of &lt;code&gt;curl&lt;/code&gt; is too old.</source>
          <target state="translated">If set, always use a Homebrew-installed &lt;code&gt;curl&lt;/code&gt; (1) rather than the system version. Automatically set if the system version of &lt;code&gt;curl&lt;/code&gt; is too old.</target>
        </trans-unit>
        <trans-unit id="628cc1733ccee03b0923afec1ba1514882a5462a" translate="yes" xml:space="preserve">
          <source>If set, always use a Homebrew-installed &lt;code&gt;git&lt;/code&gt;(1) rather than the system version. Automatically set if the system version of &lt;code&gt;git&lt;/code&gt; is too old.</source>
          <target state="translated">If set, always use a Homebrew-installed &lt;code&gt;git&lt;/code&gt; (1) rather than the system version. Automatically set if the system version of &lt;code&gt;git&lt;/code&gt; is too old.</target>
        </trans-unit>
        <trans-unit id="d714c1adbbef41574f3aabfb24b6864fa7a4dc74" translate="yes" xml:space="preserve">
          <source>If set, always use the latest stable tag (even if developer commands have been run).</source>
          <target state="translated">If set, always use the latest stable tag (even if developer commands have been run).</target>
        </trans-unit>
        <trans-unit id="b927625ac6314ed3001a49f190d529e33176a8c7" translate="yes" xml:space="preserve">
          <source>If set, disable all use of legacy compatibility code.</source>
          <target state="translated">If set, disable all use of legacy compatibility code.</target>
        </trans-unit>
        <trans-unit id="52ca1aaa36c1b4587a85e4e4eff77cf33bf9cce3" translate="yes" xml:space="preserve">
          <source>If set, do not automatically update before running &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; or &lt;code&gt;brew tap&lt;/code&gt;.</source>
          <target state="translated">If set, do not automatically update before running &lt;code&gt;brew install&lt;/code&gt; , &lt;code&gt;brew upgrade&lt;/code&gt; or &lt;code&gt;brew tap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3eb0c384d8ab74ac34fda6d10e84f459b1053169" translate="yes" xml:space="preserve">
          <source>If set, do not automatically update before running some commands e.g. &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew tap&lt;/code&gt;.</source>
          <target state="translated">설정된 경우 &lt;code&gt;brew install&lt;/code&gt; , &lt;code&gt;brew upgrade&lt;/code&gt; 및 &lt;code&gt;brew tap&lt;/code&gt; 과 같은 일부 명령을 실행하기 전에 자동으로 업데이트하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="d135229630d186724863e32e40bbe8d3b8728ef7" translate="yes" xml:space="preserve">
          <source>If set, do not check for broken dependents after installing, upgrading or reinstalling formulae.</source>
          <target state="translated">If set, do not check for broken dependents after installing, upgrading or reinstalling formulae.</target>
        </trans-unit>
        <trans-unit id="7efdc74d4c8f918fac786fd32a698e3dae3051ae" translate="yes" xml:space="preserve">
          <source>If set, do not pass &lt;code&gt;--disable&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1), which disables the use of &lt;code&gt;curlrc&lt;/code&gt;.</source>
          <target state="translated">If set, do not pass &lt;code&gt;--disable&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt; (1), which disables the use of &lt;code&gt;curlrc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1764315d106e0dd87a01838ee3e7ff51c5e96c5e" translate="yes" xml:space="preserve">
          <source>If set, do not print &lt;code&gt;HOMEBREW_INSTALL_BADGE&lt;/code&gt; on a successful build.</source>
          <target state="translated">If set, do not print &lt;code&gt;HOMEBREW_INSTALL_BADGE&lt;/code&gt; on a successful build.</target>
        </trans-unit>
        <trans-unit id="7f913c564f296e655f72ed10fabd67700f6fd0b1" translate="yes" xml:space="preserve">
          <source>If set, do not print text with colour added.</source>
          <target state="translated">If set, do not print text with colour added.</target>
        </trans-unit>
        <trans-unit id="e2eef0ce39a7dfc39ec9f1a75eb19c7be4cb5737" translate="yes" xml:space="preserve">
          <source>If set, do not send analytics. For more information, see: &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;</source>
          <target state="translated">If set, do not send analytics. For more information, see: &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c3be284ec243ea57d1aa4e34225ec4f59b1f56f" translate="yes" xml:space="preserve">
          <source>If set, do not use Bootsnap to speed up repeated &lt;code&gt;brew&lt;/code&gt; calls.</source>
          <target state="translated">설정된 경우 반복되는 &lt;code&gt;brew&lt;/code&gt; 호출 속도를 높이기 위해 Bootsnap을 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="e14817c195c0902416a86036352e484408b73e10" translate="yes" xml:space="preserve">
          <source>If set, do not use the GitHub API, e.g. for searches or fetching relevant issues after a failed install.</source>
          <target state="translated">If set, do not use the GitHub API, e.g. for searches or fetching relevant issues after a failed install.</target>
        </trans-unit>
        <trans-unit id="d82077a2bb87e8d655161d0aa036ea78ec11098e" translate="yes" xml:space="preserve">
          <source>If set, enable runtime typechecking using Sorbet.</source>
          <target state="translated">If set, enable runtime typechecking using Sorbet.</target>
        </trans-unit>
        <trans-unit id="b374c373fd41e8bf40266998d22035ed2eda353a" translate="yes" xml:space="preserve">
          <source>If set, fail on the failure of installation from a bottle rather than falling back to building from source.</source>
          <target state="translated">If set, fail on the failure of installation from a bottle rather than falling back to building from source.</target>
        </trans-unit>
        <trans-unit id="721075a0c82dec18d67f2b025858463c0c034212" translate="yes" xml:space="preserve">
          <source>If set, forbid redirects from secure HTTPS to insecure HTTP.</source>
          <target state="translated">If set, forbid redirects from secure HTTPS to insecure HTTP.</target>
        </trans-unit>
        <trans-unit id="d70d17fdcccd19cb11c15418ac254f92cc397543" translate="yes" xml:space="preserve">
          <source>If set, force colour output on non-TTY outputs.</source>
          <target state="translated">If set, force colour output on non-TTY outputs.</target>
        </trans-unit>
        <trans-unit id="ae203f0cefec0a6f4cdee3ebb595cd4fed315aff" translate="yes" xml:space="preserve">
          <source>If set, pass &lt;code&gt;--verbose&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1).</source>
          <target state="translated">If set, pass &lt;code&gt;--verbose&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt; (1).</target>
        </trans-unit>
        <trans-unit id="2d8fe856e1c996e8b38d8e2b448e6dd9b997a4fd" translate="yes" xml:space="preserve">
          <source>If set, pass the &lt;code&gt;-A&lt;/code&gt; option when calling &lt;code&gt;sudo&lt;/code&gt;(8).</source>
          <target state="translated">If set, pass the &lt;code&gt;-A&lt;/code&gt; option when calling &lt;code&gt;sudo&lt;/code&gt; (8).</target>
        </trans-unit>
        <trans-unit id="ca4d54b7dfc0dc55be44947cb30caa65c60a7efb" translate="yes" xml:space="preserve">
          <source>If set, print install times for each formula at the end of the run.</source>
          <target state="translated">If set, print install times for each formula at the end of the run.</target>
        </trans-unit>
        <trans-unit id="b384ab51bd27699a178c1e5b9b09e4d3d3cd423a" translate="yes" xml:space="preserve">
          <source>If set, refuse to load formulae. This is useful when formulae are not trusted (such as in pull requests).</source>
          <target state="translated">If set, refuse to load formulae. This is useful when formulae are not trusted (such as in pull requests).</target>
        </trans-unit>
        <trans-unit id="9fabd57fe05e612bae9a08d179204ae8ffce4dd5" translate="yes" xml:space="preserve">
          <source>If set, running Homebrew on Linux will use URLs for macOS. This is useful when merging pull requests for macOS while on Linux.</source>
          <target state="translated">If set, running Homebrew on Linux will use URLs for macOS. This is useful when merging pull requests for macOS while on Linux.</target>
        </trans-unit>
        <trans-unit id="953161615ee0c384afe3bf6e124d2162d443096d" translate="yes" xml:space="preserve">
          <source>If set, tweak behaviour to be more relevant for Homebrew developers (active or budding) by e.g. turning warnings into errors.</source>
          <target state="translated">If set, tweak behaviour to be more relevant for Homebrew developers (active or budding) by e.g. turning warnings into errors.</target>
        </trans-unit>
        <trans-unit id="808d1c3794411301f08f398b79110a9bd69eaf13" translate="yes" xml:space="preserve">
          <source>If set, use &lt;code&gt;bat&lt;/code&gt; for the &lt;code&gt;brew cat&lt;/code&gt; command.</source>
          <target state="translated">If set, use &lt;code&gt;bat&lt;/code&gt; for the &lt;code&gt;brew cat&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="ba369610187974cc7006fe9d28220991c1d8d295" translate="yes" xml:space="preserve">
          <source>If set, use Bootsnap to speed up repeated &lt;code&gt;brew&lt;/code&gt; calls. A no-op when using Homebrew&amp;rsquo;s vendored, relocatable Ruby on macOS (as it doesn&amp;rsquo;t work).</source>
          <target state="translated">설정된 경우 Bootsnap을 사용하여 반복되는 &lt;code&gt;brew&lt;/code&gt; 호출 속도를 높 입니다. macOS에서 Homebrew의 벤더 및 재배치 가능한 Ruby를 사용할 때 작동하지 않습니다 (작동하지 않음).</target>
        </trans-unit>
        <trans-unit id="170649d567291036fe831cdc3e108f9ad32864d3" translate="yes" xml:space="preserve">
          <source>If set, use Pry for the &lt;code&gt;brew irb&lt;/code&gt; command.</source>
          <target state="translated">If set, use Pry for the &lt;code&gt;brew irb&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="f0765fdadd8c537b529588bd27a4541a91b56ffa" translate="yes" xml:space="preserve">
          <source>If set, verbose output will print a &lt;code&gt;.&lt;/code&gt; no more than once a minute. This can be useful to avoid long-running Homebrew commands being killed due to no output.</source>
          <target state="translated">If set, verbose output will print a &lt;code&gt;.&lt;/code&gt; no more than once a minute. This can be useful to avoid long-running Homebrew commands being killed due to no output.</target>
        </trans-unit>
        <trans-unit id="df2695ef18c89c6170c61db25c9c2349e2485334" translate="yes" xml:space="preserve">
          <source>If tags include the software name as a prefix (e.g. &lt;code&gt;example-1.2.3&lt;/code&gt;), it&amp;rsquo;s easy to modify the regex accordingly: &lt;code&gt;/^example[._-]v?(\d+(?:\.\d+)+)$/i&lt;/code&gt;</source>
          <target state="translated">태그에 소프트웨어 이름이 접두사로 포함 된 경우 (예 : &lt;code&gt;example-1.2.3&lt;/code&gt; ) 그에 따라 정규식을 쉽게 수정할 수 있습니다. &lt;code&gt;/^example[._-]v?(\d+(?:\.\d+)+)$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2a132698f0adf48385dc3df8c774fcedd9f4d07" translate="yes" xml:space="preserve">
          <source>If that fixes it, please open an &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;issue&lt;/a&gt; so that we can fix it for everyone.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;문제&lt;/a&gt; 가 해결되면 모든 사람이 문제를 해결할 수 있도록 문제 를여십시오 .</target>
        </trans-unit>
        <trans-unit id="3fc7aa1e29edbb37ff5968f3db411caa99a147f0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip&quot;&gt;Google Analytics anonymous IP setting&lt;/a&gt; is enabled, i.e. &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">If the &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip&quot;&gt;Google Analytics anonymous IP setting&lt;/a&gt; is enabled, i.e. &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0969fb9fde0c9f663e7a8183a16414490845af7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;configure&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; scripts do not want to install into the Cellar, sometimes you can:</source>
          <target state="translated">는 IF &lt;code&gt;configure&lt;/code&gt; 및 &lt;code&gt;make&lt;/code&gt; 스크립트, 지하실에 설치하지 않으려는 때때로 당신은 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e061df9ed4344b03012dc600ae8ad8ea77e8b372" translate="yes" xml:space="preserve">
          <source>If the Google Analytics anonymous IP setting is enabled, i.e. &lt;code&gt;1&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip)</source>
          <target state="translated">Google 웹 로그 분석 익명 IP 설정을 사용하는 경우 (예 : &lt;code&gt;1&lt;/code&gt; ) (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip)</target>
        </trans-unit>
        <trans-unit id="910c1d81835d744f057cd5d7fdcce860deaa5a09" translate="yes" xml:space="preserve">
          <source>If the JSON output does not provide some information that it ought to, please submit a request, preferably with a patch to add the desired information.</source>
          <target state="translated">JSON 출력이 필요한 정보를 제공하지 않으면 원하는 정보를 추가 할 수있는 패치와 함께 요청을 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="38d2959cf98698173bd56e00bdac3292025fac9c" translate="yes" xml:space="preserve">
          <source>If the Node module is also available on the npm registry, we prefer npm hosted release tarballs over GitHub (or elsewhere) hosted source tarballs. The advantages of these tarballs are that they don&amp;rsquo;t include the files from the &lt;code&gt;.npmignore&lt;/code&gt; (such as tests) resulting in a smaller download size and that any possible transpilation step is already done (e.g. no need to compile CoffeeScript files as a build step).</source>
          <target state="translated">노드 모듈을 npm 레지스트리에서도 사용할 수있는 경우 GitHub (또는 다른 곳) 호스트 소스 tarball보다 npm 호스트 릴리스 tarball을 선호합니다. 이 tarball의 장점은 &lt;code&gt;.npmignore&lt;/code&gt; (예 : 테스트) 의 파일을 포함하지 않아 다운로드 크기가 더 작아지고 가능한 변환 과정이 이미 완료된 것입니다 (예 : CoffeeScript 파일을 빌드 단계로 컴파일 할 필요가 없음) ).</target>
        </trans-unit>
        <trans-unit id="3daae764d854c69d293f0eae6ac6c2dbf33fde24" translate="yes" xml:space="preserve">
          <source>If the bindings are installed by invoking a &lt;code&gt;setup.py&lt;/code&gt;, do something like:</source>
          <target state="translated">&lt;code&gt;setup.py&lt;/code&gt; 를 호출하여 바인딩을 설치 한 경우 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="78f02874bdff41478703983a8cfd6566338024b7" translate="yes" xml:space="preserve">
          <source>If the command&amp;rsquo;s output is sent through a pipe and no shell is specified, the list is formatted for export to &lt;code&gt;bash&lt;/code&gt;(1) unless &lt;code&gt;--plain&lt;/code&gt; is passed.</source>
          <target state="translated">명령의 출력이 파이프를 통해 전송되고 쉘이 지정 되지 않은 경우 &lt;code&gt;--plain&lt;/code&gt; 이 전달 되지 않으면 목록은 &lt;code&gt;bash&lt;/code&gt; (1)로 내보내기 위해 형식화됩니다 .</target>
        </trans-unit>
        <trans-unit id="af17c73cd3e1e762abb9a2aa3446ddf8b421a9b9" translate="yes" xml:space="preserve">
          <source>If the configure script takes a &lt;code&gt;--with-python&lt;/code&gt; flag, it usually will not need extra help finding Python.</source>
          <target state="translated">configure 스크립트가 &lt;code&gt;--with-python&lt;/code&gt; 플래그를 사용하면 일반적으로 Python을 찾는 데 추가 도움이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eda9c2dc915b157f8d670ad267c2883245c0b5dc" translate="yes" xml:space="preserve">
          <source>If the formula already provides a plist file the formula can install it into the prefix like so.</source>
          <target state="translated">공식이 이미 plist 파일을 제공하는 경우 공식은 이와 같이 접두사에이를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="231fd6f4e407725b5789bcf7f222767f3e3ac857" translate="yes" xml:space="preserve">
          <source>If the formula does not provide a plist you can add a plist using the following stanzas. This will define what the user can run manually instead of the launchd service.</source>
          <target state="translated">공식이 plist를 제공하지 않는 경우 다음 스탠자를 사용하여 plist를 추가 할 수 있습니다. 이것은 시작된 서비스 대신 사용자가 수동으로 실행할 수있는 항목을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="973ddb944611975d6bc49c178254297847af68e2" translate="yes" xml:space="preserve">
          <source>If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream&amp;rsquo;s documentation / source examples. A good example is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/tinyxml2.rb&quot;&gt;&lt;code&gt;tinyxml2&lt;/code&gt;&lt;/a&gt;, which writes a small C++ source file into the test directory, compiles and links it against the tinyxml2 library and finally checks that the resulting program runs successfully.</source>
          <target state="translated">If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream&amp;rsquo;s documentation / source examples. A good example is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/tinyxml2.rb&quot;&gt; &lt;code&gt;tinyxml2&lt;/code&gt; &lt;/a&gt;, which writes a small C++ source file into the test directory, compiles and links it against the tinyxml2 library and finally checks that the resulting program runs successfully.</target>
        </trans-unit>
        <trans-unit id="df0712f10665a36a0a62976031a4009fbe276b0c" translate="yes" xml:space="preserve">
          <source>If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream&amp;rsquo;s documentation / source examples. A good example is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/tinyxml2.rb&quot;&gt;&lt;code&gt;tinyxml2&lt;/code&gt;&lt;/a&gt;, which writes a small C++ source file into the test directory, compiles and links it against the tinyxml2 library and finally checks that the resulting program runs successfully.</source>
          <target state="translated">수식이 라이브러리 인 경우 수식과 연결되는 간단한 코드를 컴파일하고 실행하십시오. 업스트림의 문서 / 소스 예제에서 가져올 수 있습니다. 좋은 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/tinyxml2.rb&quot;&gt; &lt;code&gt;tinyxml2&lt;/code&gt; 입니다&lt;/a&gt; .이 테스트는 작은 C ++ 소스 파일을 테스트 디렉토리에 작성하고 컴파일하여 tinyxml2 라이브러리에 링크 한 다음 결과 프로그램이 성공적으로 실행되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a09ca44dfc8fe84ff63916897c2cb28fa5b56d21" translate="yes" xml:space="preserve">
          <source>If the formula is for a GUI program, try to find some function that runs as command-line only, like a format conversion, reading or displaying a config file, etc.</source>
          <target state="translated">공식이 GUI 프로그램 용인 경우 형식 변환, 구성 파일 읽기 또는 표시 등과 같이 명령 행으로 만 실행되는 함수를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="441c3705aefd69f9e1c6b7f72a06ac46077511e0" translate="yes" xml:space="preserve">
          <source>If the license for a formula cannot be represented using an SPDX expression:</source>
          <target state="translated">공식에 대한 라이센스를 SPDX 표현식을 사용하여 표현할 수없는 경우 :</target>
        </trans-unit>
        <trans-unit id="5b2faa0a14e6a2cdb647b2a8c2074ecd9aa75fd0" translate="yes" xml:space="preserve">
          <source>If the preceding steps did not help, it may be appropriate to submit an issue. This can be done by navigating to the relevant repository, clicking the &amp;ldquo;Issues&amp;rdquo; link, and clicking on the &amp;ldquo;New issue&amp;rdquo; button. When creating an issue, make sure you use the provided template, as it&amp;rsquo;s important in helping others to understand and potentially triage your issue efficiently.</source>
          <target state="translated">앞의 단계가 도움이되지 않았다면 문제를 제출하는 것이 적절할 수 있습니다. 관련 저장소로 이동하여 &quot;문제&quot;링크를 클릭하고 &quot;새 문제&quot;버튼을 클릭하면됩니다. 문제를 생성 할 때 다른 사람들이 문제를 효율적으로 이해하고 잠재적으로 분류하도록 돕는 데 중요하므로 제공된 템플릿을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="318d7e55d7828ee4ce293fe9094c1b222085eaa1" translate="yes" xml:space="preserve">
          <source>If the software cannot function without credentials or requires a virtual machine, docker instance, etc. to run, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected.</source>
          <target state="translated">자격 증명없이 소프트웨어를 작동 할 수 없거나 가상 시스템, 도커 인스턴스 등을 실행해야하는 경우 테스트에서 유효하지 않은 자격 증명 (또는 자격 증명없이)으로 연결하여 예상대로 실패하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d7e2aab4102cdac60018780b3494971d694ac84" translate="yes" xml:space="preserve">
          <source>If the software cannot function without credentials or requires a virtual machine, docker instance, etc. to run, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected. This is prefered over mocking a dependency.</source>
          <target state="translated">If the software cannot function without credentials or requires a virtual machine, docker instance, etc. to run, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected. This is prefered over mocking a dependency.</target>
        </trans-unit>
        <trans-unit id="89649f497e2238364a614371edcf0919b99cc6c5" translate="yes" xml:space="preserve">
          <source>If the tool you are attempting to build is &lt;a href=&quot;https://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config&lt;/a&gt; aware, you can amend your &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; to find that &lt;code&gt;keg_only&lt;/code&gt; utility&amp;rsquo;s &lt;code&gt;.pc&lt;/code&gt; file, if it has them. Not all formulae ship with those files.</source>
          <target state="translated">빌드하려는 도구가 &lt;a href=&quot;https://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config를&lt;/a&gt; 인식하는 경우 &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; 를 수정하여 &lt;code&gt;keg_only&lt;/code&gt; 유틸리티의 &lt;code&gt;.pc&lt;/code&gt; 파일 (있는 경우) 을 찾을 수 있습니다. 모든 수식이 해당 파일과 함께 제공되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="071d4a2cede7ab647faff4650f0f794912a0b1c8" translate="yes" xml:space="preserve">
          <source>If there is a formula that currently exists in the Homebrew/homebrew-core repository or has existed in the past (i.e. was migrated or deleted), you can recover it for your own use with the &lt;code&gt;brew extract&lt;/code&gt; command. This will copy the desired version of the formula into a custom tap. For example, if your project depends on &lt;code&gt;automake&lt;/code&gt; 1.12 instead of the most recent version, you can obtain the &lt;code&gt;automake&lt;/code&gt; formula at version 1.12 by running &lt;code&gt;brew extract automake &amp;lt;YOUR_GITHUB_USER&amp;gt;/&amp;lt;YOUR_TAP_REPOSITORY_NAME&amp;gt; --version=1.12&lt;/code&gt;. Formulae obtained this way may contain deprecated, disabled or removed Homebrew syntax (e.g. checksums may be &lt;code&gt;sha1&lt;/code&gt; instead of &lt;code&gt;sha256&lt;/code&gt;); the &lt;code&gt;brew extract&lt;/code&gt; command does not edit or update formulae to meet current standards and style requirements.</source>
          <target state="translated">현재 Homebrew / homebrew-core 리포지토리에 있거나 이전에 존재 한 (즉, 마이그레이션 또는 삭제 된) 수식이있는 경우 &lt;code&gt;brew extract&lt;/code&gt; 명령을 사용하여 자신이 사용할 수 있도록 수식을 복구 할 수 있습니다 . 원하는 버전의 수식이 사용자 정의 탭으로 복사됩니다. 예를 들어 프로젝트가 최신 버전 대신 &lt;code&gt;automake&lt;/code&gt; 1.12에 의존하는 경우 &lt;code&gt;brew extract automake &amp;lt;YOUR_GITHUB_USER&amp;gt;/&amp;lt;YOUR_TAP_REPOSITORY_NAME&amp;gt; --version=1.12&lt;/code&gt; 를 실행하여 버전 1.12에서 &lt;code&gt;automake&lt;/code&gt; 공식을 얻을 수 있습니다 . 이 방법으로 얻은 수식은 더 이상 사용되지 않거나, 비활성화되거나 제거 된 Homebrew 구문을 포함 할 수 있습니다 (예 : 체크섬은 &lt;code&gt;sha256&lt;/code&gt; 대신 &lt;code&gt;sha1&lt;/code&gt; 일 수 있음 ). &lt;code&gt;brew extract&lt;/code&gt; 명령은 현재 표준 및 스타일 요구 사항을 충족하기 위해 공식을 편집하거나 업데이트하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="701ac0a16359321c51834ce6fa437e0e7c19ce31" translate="yes" xml:space="preserve">
          <source>If there&amp;rsquo;s a &lt;code&gt;bottle do&lt;/code&gt; block in the formula, don&amp;rsquo;t remove or change it; we&amp;rsquo;ll update it when we pull your PR.</source>
          <target state="translated">이 있다면 &lt;code&gt;bottle do&lt;/code&gt; 수식에 블록을 제거하거나 변경하지 마십시오; 우리는 당신의 PR을 뽑을 때 그것을 업데이트 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="b97c05e149864c8feb9550b043308fb29e7a9e1e" translate="yes" xml:space="preserve">
          <source>If these pre-existing reasons do not fit, a custom reason can be specified. These reasons should be written to fit into the sentence &lt;code&gt;&amp;lt;formula&amp;gt; has been deprecated/disabled because it &amp;lt;reason&amp;gt;!&lt;/code&gt;.</source>
          <target state="translated">이러한 기존 이유가 맞지 않는 경우 사용자 지정 이유를 지정할 수 있습니다. 이러한 이유는 &lt;code&gt;&amp;lt;formula&amp;gt; has been deprecated/disabled because it &amp;lt;reason&amp;gt;!&lt;/code&gt; 문장에 맞게 작성해야합니다 ! .</target>
        </trans-unit>
        <trans-unit id="b86a782c7c2d4f2d086b69f2e0dd8d39928a1ddd" translate="yes" xml:space="preserve">
          <source>If they want to get your tap without installing any formula at the same time, users can add it with the &lt;a href=&quot;taps&quot;&gt;&lt;code&gt;brew tap&lt;/code&gt; command&lt;/a&gt;.</source>
          <target state="translated">수식을 동시에 설치하지 않고 탭을 얻으려면 &lt;a href=&quot;taps&quot;&gt; &lt;code&gt;brew tap&lt;/code&gt; 명령을&lt;/a&gt; 사용하여 탭을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b98d3ea36c59c682c050eecead4352f741f4ed4" translate="yes" xml:space="preserve">
          <source>If this is a major or minor release (e.g. X.0.0 or X.Y.0) then there are a few more steps:</source>
          <target state="translated">이것이 주 릴리스 또는 부 릴리스 (예 : X.0.0 또는 XY0) 인 경우 몇 가지 단계가 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="66ef1d4eeb2234d4cd33cb4d2359dea9c6372961" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;brew update-python-resources&lt;/code&gt; doesn&amp;rsquo;t work, you can use &lt;a href=&quot;https://pypi.python.org/pypi/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; to help you write resource stanzas. To use it, set up a virtualenv and install your package and all its dependencies. Then, &lt;code&gt;pip install homebrew-pypi-poet&lt;/code&gt; into the same virtualenv. Running &lt;code&gt;poet some_package&lt;/code&gt; will generate the necessary resource stanzas. You can do this like:</source>
          <target state="translated">If using &lt;code&gt;brew update-python-resources&lt;/code&gt; doesn&amp;rsquo;t work, you can use &lt;a href=&quot;https://pypi.python.org/pypi/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; to help you write resource stanzas. To use it, set up a virtualenv and install your package and all its dependencies. Then, &lt;code&gt;pip install homebrew-pypi-poet&lt;/code&gt; into the same virtualenv. Running &lt;code&gt;poet some_package&lt;/code&gt; will generate the necessary resource stanzas. You can do this like:</target>
        </trans-unit>
        <trans-unit id="c8eb2c63477e02cf838cc91e1f14bf33df7bdb97" translate="yes" xml:space="preserve">
          <source>If you are sure you want to trust the app, you can disable protection for that app by right-clicking its icon and choosing &lt;code&gt;Open&lt;/code&gt;:</source>
          <target state="translated">앱을 신뢰하고 싶다면 아이콘을 마우스 오른쪽 버튼으로 클릭하고 &lt;code&gt;Open&lt;/code&gt; 선택하여 해당 앱에 대한 보호를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="843f6d8c052e735b2e334979baffacb1ba747fae" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;code&gt;bash&lt;/code&gt; formula as your shell (i.e. &lt;code&gt;bash&lt;/code&gt; &amp;gt;= v4) you should use the &lt;code&gt;bash-completion@2&lt;/code&gt; formula instead.</source>
          <target state="translated">If you are using the &lt;code&gt;bash&lt;/code&gt; formula as your shell (i.e. &lt;code&gt;bash&lt;/code&gt; &amp;gt;= v4) you should use the &lt;code&gt;bash-completion@2&lt;/code&gt; formula instead.</target>
        </trans-unit>
        <trans-unit id="e6933a28ade1bf4aeb610f7aaf6e4c6942af0c51" translate="yes" xml:space="preserve">
          <source>If you are working on a PR for a single formula, &lt;code&gt;git commit --amend&lt;/code&gt; is a convenient way of keeping your commits squashed as you go.</source>
          <target state="translated">단일 수식에 대한 PR 작업을 수행하는 경우 &lt;code&gt;git commit --amend&lt;/code&gt; 은 커밋 을 계속 진행하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1a1f84a9ebce717998b463ae0b26fce8bf5b883c" translate="yes" xml:space="preserve">
          <source>If you do not uninstall all of the versions that Homebrew has installed, Homebrew will continue to attempt to install the newest version it knows about when you run &lt;code&gt;brew upgrade&lt;/code&gt;. This can be surprising.</source>
          <target state="translated">Homebrew가 설치 한 모든 버전을 제거하지 않으면 Homebrew는 &lt;code&gt;brew upgrade&lt;/code&gt; 실행시 알고있는 최신 버전을 계속 설치하려고합니다 . 놀랍습니다.</target>
        </trans-unit>
        <trans-unit id="b409910c5f20623e660df46bb58f5f5863b3d0f8" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t even want (or can&amp;rsquo;t) use sudo for bootstrapping &lt;code&gt;local::lib&lt;/code&gt;, just manually install &lt;code&gt;local::lib&lt;/code&gt; in &lt;code&gt;~/perl5&lt;/code&gt; and add the relevant path to &lt;code&gt;PERL5LIB&lt;/code&gt; before the &lt;code&gt;.bashrc&lt;/code&gt; eval incantation.</source>
          <target state="translated">&lt;code&gt;local::lib&lt;/code&gt; 부트 스트랩에 sudo를 사용하지 않으려는 경우 (또는 사용할 수없는 경우) &lt;code&gt;~/perl5&lt;/code&gt; 에 &lt;code&gt;local::lib&lt;/code&gt; 를 수동으로 설치 하고 &lt;code&gt;.bashrc&lt;/code&gt; eval &lt;code&gt;PERL5LIB&lt;/code&gt; 전에 PERL5LIB에 관련 경로를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c476b8ad9dd7cf0149100f4159d7f3864f0dd41" translate="yes" xml:space="preserve">
          <source>If you encountered a non-formula problem: upload the output of &lt;code&gt;brew config&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt; to a new &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist&lt;/a&gt;.</source>
          <target state="translated">비공식 문제가 발생한 경우 : &lt;code&gt;brew config&lt;/code&gt; 및 &lt;code&gt;brew doctor&lt;/code&gt; 의 출력을 새 &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist에&lt;/a&gt; 업로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="6837b26030503006c69066f1ae7add3cfdd32451" translate="yes" xml:space="preserve">
          <source>If you ever did a &lt;code&gt;sudo gem&lt;/code&gt;, etc. before then a lot of files will have been created owned by root. Fix with:</source>
          <target state="translated">이전에 &lt;code&gt;sudo gem&lt;/code&gt; 등 을 해본 적이 있다면 루트가 소유 한 많은 파일이 만들어 질 것입니다. 로 수정 :</target>
        </trans-unit>
        <trans-unit id="6f27209f43bd0c668efb6e4c7e9e28e51e0e2cf7" translate="yes" xml:space="preserve">
          <source>If you had a formula-related problem: run &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; (where &lt;code&gt;&amp;lt;formula&amp;gt;&lt;/code&gt; is the name of the formula).</source>
          <target state="translated">공식 관련 문제가있는 경우 : &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; 을 실행하십시오 (여기서 &lt;code&gt;&amp;lt;formula&amp;gt;&lt;/code&gt; 는 공식 이름 임).</target>
        </trans-unit>
        <trans-unit id="580ca2645a14d29c521bcff7e10aea5a7a6621cc" translate="yes" xml:space="preserve">
          <source>If you have already forked Homebrew on GitHub, then you can manually push (just make sure you have been pulling from the &lt;code&gt;Homebrew/homebrew-core&lt;/code&gt; master):</source>
          <target state="translated">이미 GitHub에서 Homebrew를 포크 한 경우 수동으로 푸시 할 수 있습니다 ( &lt;code&gt;Homebrew/homebrew-core&lt;/code&gt; 마스터 에서 가져 왔는지 확인 ).</target>
        </trans-unit>
        <trans-unit id="cf54d06e6d394ad185715c63337af588cac11630" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t forked Homebrew yet, &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;go to the &lt;code&gt;homebrew-core&lt;/code&gt; repository and hit the Fork button&lt;/a&gt;.</source>
          <target state="translated">Homebrew를 아직 포크하지 않은 경우 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt; &lt;code&gt;homebrew-core&lt;/code&gt; &lt;/a&gt; 저장소 로 이동 하여 포크 버튼을 누르십시오 .</target>
        </trans-unit>
        <trans-unit id="02df8baaa79257e60d7920c6e83d8b95a5778ecc" translate="yes" xml:space="preserve">
          <source>If you install the &lt;code&gt;bash-completion&lt;/code&gt; formula, this will automatically source the completions&amp;rsquo; initialisation script (so you do not need to follow the instructions in the caveats).</source>
          <target state="translated">If you install the &lt;code&gt;bash-completion&lt;/code&gt; formula, this will automatically source the completions&amp;rsquo; initialisation script (so you do not need to follow the instructions in the caveats).</target>
        </trans-unit>
        <trans-unit id="fcbc334c8d7a126cfd6658594e71a76181992db7" translate="yes" xml:space="preserve">
          <source>If you need a formula to be installed from a particular tap, you can use fully qualified names to refer to them.</source>
          <target state="translated">특정 탭에서 수식을 설치해야하는 경우 정규화 된 이름을 사용하여 수식을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a00705fa7355e45854a2d24808a572814c99779f" translate="yes" xml:space="preserve">
          <source>If you need modify variables in a &lt;code&gt;Makefile&lt;/code&gt;, rather than using &lt;a href=&quot;https://rubydoc.brew.sh/Utils/Inreplace&quot;&gt;&lt;code&gt;inreplace&lt;/code&gt;&lt;/a&gt;, pass them as arguments to &lt;code&gt;make&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Utils/Inreplace&quot;&gt; &lt;code&gt;inreplace&lt;/code&gt; 를&lt;/a&gt; 사용하지 않고 &lt;code&gt;Makefile&lt;/code&gt; 에서 변수를 수정해야하는 경우 변수 를 인수로 전달하여 다음 &lt;code&gt;make&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd492283a16c197887dd8276904269c7ea99142d" translate="yes" xml:space="preserve">
          <source>If you need more control over the way files are downloaded and staged, you can create a custom download strategy and specify it using the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; method&amp;rsquo;s &lt;code&gt;:using&lt;/code&gt; option:</source>
          <target state="translated">파일을 다운로드하고 준비하는 방식을보다 세밀하게 제어해야하는 경우 사용자 정의 다운로드 전략을 작성하고 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 메소드의 &lt;code&gt;:using&lt;/code&gt; 옵션을 사용하여 이를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c319be09e3ae1108600be81337367b040104d3bb" translate="yes" xml:space="preserve">
          <source>If you need to run Homebrew in a multi-user environment, consider creating a separate user account especially for use of Homebrew.</source>
          <target state="translated">다중 사용자 환경에서 Homebrew를 실행해야하는 경우 특히 Homebrew를 사용하기 위해 별도의 사용자 계정을 만드는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e4097f1c6e44ee92e3d09ffa282b6570215984f6" translate="yes" xml:space="preserve">
          <source>If you still want to force software to be upgraded via Homebrew Cask, you can:</source>
          <target state="translated">Homebrew Cask를 통해 소프트웨어를 강제로 업그레이드하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="233a8ed270e1729c466136009663857eea113ce6" translate="yes" xml:space="preserve">
          <source>If you upgrade software through it&amp;rsquo;s built-in mechanism, that happens without Homebrew Cask&amp;rsquo;s knowledge so both versions get out of sync. If you then upgraded through Homebrew Cask and we have a lower version on the software on record, you&amp;rsquo;d get a downgrade.</source>
          <target state="translated">내장 된 메커니즘을 통해 소프트웨어를 업그레이드하면 Homebrew Cask가 알지 못하는 사이에 발생하므로 두 버전이 모두 동기화되지 않습니다. 그런 다음 Homebrew Cask를 통해 업그레이드하고 기록에 소프트웨어에 더 낮은 버전이있는 경우 다운 그레이드를 받게됩니다.</target>
        </trans-unit>
        <trans-unit id="64641ecf6ee386be3b3ad2086cb2a33ca7da8f3f" translate="yes" xml:space="preserve">
          <source>If you want to add an &lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt; &lt;code&gt;option&lt;/code&gt; &lt;/a&gt; 을 추가하려면 다음 을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="32ba2998577c1314d10c31370baf1a855875c735" translate="yes" xml:space="preserve">
          <source>If you want your new formula to be part of &lt;code&gt;homebrew/core&lt;/code&gt; or want to learn more about writing formulae, then please read the &lt;a href=&quot;formula-cookbook&quot;&gt;Formula Cookbook&lt;/a&gt;.</source>
          <target state="translated">새로운 공식을 &lt;code&gt;homebrew/core&lt;/code&gt; 일부로 만들 거나 공식 작성에 대해 더 배우려면 &lt;a href=&quot;formula-cookbook&quot;&gt;공식 요리 책을&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="421d64a6330e63b76fc5b7162344c67193dfcff4" translate="yes" xml:space="preserve">
          <source>If you wish to build against custom non-Homebrew dependencies that are provided by Homebrew (e.g. a non-Homebrew, non-macOS &lt;code&gt;ruby&lt;/code&gt;) then you must &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;create and maintain your own tap&lt;/a&gt; as these formulae will not be accepted in Homebrew/homebrew-core. Once you have done that you can specify &lt;code&gt;env :std&lt;/code&gt; in the formula which will allow e.g. &lt;code&gt;which ruby&lt;/code&gt; to access your existing &lt;code&gt;PATH&lt;/code&gt; variable and allow compilation to link against this Ruby.</source>
          <target state="translated">Homebrew에서 제공하는 사용자 정의 비 Homebrew 종속성 (예 : 비 Homebrew, 비 macOS &lt;code&gt;ruby&lt;/code&gt; ) 에 대해 빌드하려는 경우 Homebrew / homebrew-core에서는 이러한 공식이 허용되지 않으므로 &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;자체 탭&lt;/a&gt; 을 작성하고 유지 해야합니다. . 일단 그렇게 하면 공식에 &lt;code&gt;env :std&lt;/code&gt; 를 지정할 수 있습니다 . 예 &lt;code&gt;which ruby&lt;/code&gt; 들어 어떤 루비 가 기존 &lt;code&gt;PATH&lt;/code&gt; 변수 에 액세스 하고 컴파일이이 루비에 링크되도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="4d56137e6a3342df95a34de9c183a25212cc1941" translate="yes" xml:space="preserve">
          <source>If you wish to build against custom non-Homebrew dependencies that are provided by Homebrew (e.g. a non-Homebrew, non-macOS &lt;code&gt;ruby&lt;/code&gt;) then you must &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;create and maintain your own tap&lt;/a&gt; as these formulae will not be accepted in Homebrew/homebrew-core. Once you have done that you can specify &lt;code&gt;env :std&lt;/code&gt; in the formula which will allow e.g. &lt;code&gt;which ruby&lt;/code&gt; to access your existing &lt;code&gt;PATH&lt;/code&gt; variable and allow compilation to link against this Ruby. You can also &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/requirements&quot;&gt;include a custom Requirement&lt;/a&gt; in your formula that more accurately describes the non-Homebrew software you build against.</source>
          <target state="translated">If you wish to build against custom non-Homebrew dependencies that are provided by Homebrew (e.g. a non-Homebrew, non-macOS &lt;code&gt;ruby&lt;/code&gt; ) then you must &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;create and maintain your own tap&lt;/a&gt; as these formulae will not be accepted in Homebrew/homebrew-core. Once you have done that you can specify &lt;code&gt;env :std&lt;/code&gt; in the formula which will allow e.g. &lt;code&gt;which ruby&lt;/code&gt; to access your existing &lt;code&gt;PATH&lt;/code&gt; variable and allow compilation to link against this Ruby. You can also &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/requirements&quot;&gt;include a custom Requirement&lt;/a&gt; in your formula that more accurately describes the non-Homebrew software you build against.</target>
        </trans-unit>
        <trans-unit id="75aaf8ca6348805437ba312961c3dcce69e11e6d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re &lt;em&gt;still&lt;/em&gt; not sure, just commit. We&amp;rsquo;ll apply some arbitrary rule and make a decision 😉.</source>
          <target state="translated">당신이 경우 &lt;em&gt;아직&lt;/em&gt; 확실하지, 그냥 커밋합니다. 우리는 임의의 규칙을 적용하고 결정을 내릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="6311b12438e1fedd6f0f6c7542ca88edd59098f7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re curious about the &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; variable &lt;code&gt;man pkg-config&lt;/code&gt; goes into more detail.</source>
          <target state="translated">&lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; 변수 가 궁금하다면 &lt;code&gt;man pkg-config&lt;/code&gt; 가 더 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ef09e7e543cc250149764da4ca1cd7bb9111d3ea" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re installing an application then use &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt;s for all language-specific dependencies:</source>
          <target state="translated">응용 프로그램을 설치하는 경우 모든 언어 별 종속성에 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3aa29752fd0d213f6d7a9961dba18b8c70cbc30a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not sure about the name, check its homepage, Wikipedia page and &lt;a href=&quot;https://www.debian.org/distrib/packages&quot;&gt;what Debian calls it&lt;/a&gt;.</source>
          <target state="translated">이름이 확실하지 않다면, 홈페이지, Wikipedia 페이지 및 &lt;a href=&quot;https://www.debian.org/distrib/packages&quot;&gt;데비안이 무엇인지&lt;/a&gt; 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="46e3a5d39f85b6eddf092ff272c0bfb6df597f2e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re starting from scratch, the &lt;a href=&quot;manpage#create-options-url&quot;&gt;&lt;code&gt;brew create&lt;/code&gt; command&lt;/a&gt; can be used to produce a basic version of your formula. This command accepts a number of options and you may be able to save yourself some work by using an appropriate template option like &lt;code&gt;--python&lt;/code&gt;.</source>
          <target state="translated">처음부터 시작하는 경우 &lt;a href=&quot;manpage#create-options-url&quot;&gt; &lt;code&gt;brew create&lt;/code&gt; 명령&lt;/a&gt; 을 사용하여 공식의 기본 버전을 생성 할 수 있습니다. 이 명령은 여러 옵션을 허용하며 &lt;code&gt;--python&lt;/code&gt; 과 같은 적절한 템플릿 옵션을 사용하여 일부 작업을 절약 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7e912b80efcbd07a490f029de4b14c2a3ec0530" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re stuck, ask for help on GitHub or &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew/discussions&lt;/a&gt;. The maintainers are very happy to help but we also like to see that you&amp;rsquo;ve put effort into trying to find a solution first.</source>
          <target state="translated">막힌 경우 GitHub 또는 &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew / discussions&lt;/a&gt; 에서 도움을 요청하세요 . 메인테이너는 기꺼이 도와 주지만 먼저 해결책을 찾기 위해 노력을 기울인 것을보고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="0aea0effbb7eb027ee66d576de41a981c515cee6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an older distribution of Linux, installing your first package will also install a recent version of &lt;code&gt;glibc&lt;/code&gt; and &lt;code&gt;gcc&lt;/code&gt;. Use &lt;code&gt;brew doctor&lt;/code&gt; to troubleshoot common issues.</source>
          <target state="translated">이전 Linux 배포판을 사용하는 경우 첫 번째 패키지를 설치하면 최신 버전의 &lt;code&gt;glibc&lt;/code&gt; 및 &lt;code&gt;gcc&lt;/code&gt; 도 설치됩니다 . &lt;code&gt;brew doctor&lt;/code&gt; 를 사용 하여 일반적인 문제를 해결 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c69d5715eb7589fbe655fc2f7c1419fe8424426" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an older distribution of Linux, installing your first package will also install a recent version of &lt;em&gt;glibc&lt;/em&gt; and &lt;em&gt;gcc&lt;/em&gt;. Use &lt;code&gt;brew doctor&lt;/code&gt; to troubleshoot common issues.</source>
          <target state="translated">If you&amp;rsquo;re using an older distribution of Linux, installing your first package will also install a recent version of &lt;em&gt;glibc&lt;/em&gt; and &lt;em&gt;gcc&lt;/em&gt;. Use &lt;code&gt;brew doctor&lt;/code&gt; to troubleshoot common issues.</target>
        </trans-unit>
        <trans-unit id="ad779e309cb7aba56f1e645f7ac1ca22eee7756d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve made it this far, congratulations on submitting a Homebrew formula! We appreciate the hard work you put into this and you can take satisfaction in knowing that your work may benefit other Homebrew users as well.</source>
          <target state="translated">여기까지 성공했다면 Homebrew 공식을 제출 한 것을 축하합니다! 우리는 귀하의 노력에 감사 드리며 귀하의 작업이 다른 Homebrew 사용자에게도 도움이 될 수 있음을 알고 만족하실 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="558effd7b714fbaa0e04ef401ebd04006acd74ab" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;fish&lt;/code&gt; is from somewhere else, add the following to your &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;:</source>
          <target state="translated">If your &lt;code&gt;fish&lt;/code&gt; is from somewhere else, add the following to your &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f7aaf4cfa803533bcb5f3629da4cf64b95c3c648" translate="yes" xml:space="preserve">
          <source>If your Node module is a native addon or has a native addon somewhere in its dependency tree you have to declare an additional dependency. Since the compilation of the native addon results in an invocation of &lt;code&gt;node-gyp&lt;/code&gt; we need an additional build time dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt; (because GYP depends on Python 2.7).</source>
          <target state="translated">노드 모듈이 기본 애드온이거나 종속성 트리 어딘가에 기본 애드온이있는 경우 추가 종속성을 선언해야합니다. 네이티브 애드온을 컴파일하면 &lt;code&gt;node-gyp&lt;/code&gt; 가 호출 되므로 &lt;code&gt;&quot;python&quot;&lt;/code&gt; 에 대한 추가 빌드 시간 종속성이 필요합니다 (GYP는 Python 2.7에 의존하기 때문에).</target>
        </trans-unit>
        <trans-unit id="e30c25b4b275977a42b109082e51f01a8bc3d67c" translate="yes" xml:space="preserve">
          <source>If your Node module is a native addon or has a native addon somewhere in its dependency tree you have to declare an additional dependency. Since the compilation of the native addon results in an invocation of &lt;code&gt;node-gyp&lt;/code&gt; we need an additional build time dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt; (because GYP depends on Python).</source>
          <target state="translated">If your Node module is a native addon or has a native addon somewhere in its dependency tree you have to declare an additional dependency. Since the compilation of the native addon results in an invocation of &lt;code&gt;node-gyp&lt;/code&gt; we need an additional build time dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt; (because GYP depends on Python).</target>
        </trans-unit>
        <trans-unit id="a76cf84420b9891c86b3c1fbd96c7f359ec9094d" translate="yes" xml:space="preserve">
          <source>If your formula requires being executed with an older Node version you should use one of the versioned node formulae (e.g. &lt;code&gt;node@12&lt;/code&gt;).</source>
          <target state="translated">If your formula requires being executed with an older Node version you should use one of the versioned node formulae (e.g. &lt;code&gt;node@12&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7459d994fb130f22b1d80f6a57a608ae13ab1e12" translate="yes" xml:space="preserve">
          <source>If your formula requires being executed with an older Node version you should use one of the versioned node formulae (e.g. &lt;code&gt;node@6&lt;/code&gt;).</source>
          <target state="translated">이전 노드 버전으로 공식을 실행해야하는 경우 버전이 지정된 노드 공식 중 하나를 사용해야합니다 (예 : &lt;code&gt;node@6&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="691a3a560f50706193dbf01f0e25e0d0ac5b3859" translate="yes" xml:space="preserve">
          <source>If your formulae have the same name as Homebrew/homebrew-core formulae they cannot be installed side-by-side. If you wish to create a different version of a formula that&amp;rsquo;s in Homebrew/homebrew-core (e.g. with &lt;code&gt;option&lt;/code&gt;s) consider giving it a different name e.g. &lt;code&gt;nginx-full&lt;/code&gt; for more fully-featured &lt;code&gt;nginx&lt;/code&gt; formula. This will allow both &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;nginx-full&lt;/code&gt; to be installed at the same time (assuming one is &lt;code&gt;keg_only&lt;/code&gt; or the linked files do not clash).</source>
          <target state="translated">If your formulae have the same name as Homebrew/homebrew-core formulae they cannot be installed side-by-side. If you wish to create a different version of a formula that&amp;rsquo;s in Homebrew/homebrew-core (e.g. with &lt;code&gt;option&lt;/code&gt; s) consider giving it a different name e.g. &lt;code&gt;nginx-full&lt;/code&gt; for more fully-featured &lt;code&gt;nginx&lt;/code&gt; formula. This will allow both &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;nginx-full&lt;/code&gt; to be installed at the same time (assuming one is &lt;code&gt;keg_only&lt;/code&gt; or the linked files do not clash).</target>
        </trans-unit>
        <trans-unit id="736cb421c4f92de5527e507b44b5eef081580e77" translate="yes" xml:space="preserve">
          <source>If your formulae have the same name as Homebrew/homebrew-core formulae they cannot be installed side-by-side. If you wish to create a different version of a formula that&amp;rsquo;s in Homebrew/homebrew-core (e.g. with &lt;code&gt;option&lt;/code&gt;s) consider giving it a different name e.g. &lt;code&gt;nginx-full&lt;/code&gt; for more fully-featured &lt;code&gt;nginx&lt;/code&gt; formula. This will allow both &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;nginx-full&lt;/code&gt; to be installed at the same time (but not linked if there are conflicts and one of them is not declared to be &lt;code&gt;keg_only&lt;/code&gt;).</source>
          <target state="translated">수식의 이름이 Homebrew / homebrew-core 수식과 이름이 같으면 나란히 설치할 수 없습니다. Homebrew / homebrew-core에있는 다른 버전의 수식을 만들려면 (예 : &lt;code&gt;option&lt;/code&gt; s) 보다 완전한 기능을 갖춘 &lt;code&gt;nginx&lt;/code&gt; 수식의 경우 다른 이름 (예 : &lt;code&gt;nginx-full&lt;/code&gt; ) 을 지정하십시오 . 그러면 &lt;code&gt;nginx&lt;/code&gt; 와 &lt;code&gt;nginx-full&lt;/code&gt; 을 동시에 설치할 수 있습니다 (하지만 충돌이 있고 그 중 하나가 &lt;code&gt;keg_only&lt;/code&gt; 로 선언되지 않은 경우 링크되지 않음 ).</target>
        </trans-unit>
        <trans-unit id="7433333b721a96d7234d56a217658cd90ee156c1" translate="yes" xml:space="preserve">
          <source>If your problem hasn&amp;rsquo;t been solved or reported, then create an issue:</source>
          <target state="translated">문제가 해결되거나보고되지 않은 경우 문제를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2e7a51ba9add09d6109a10d6f991f9bd102e7d8d" translate="yes" xml:space="preserve">
          <source>If your tap contains a formula that is also present in &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt;, that&amp;rsquo;s fine, but it means that you must install it explicitly by default.</source>
          <target state="translated">탭에 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew / core&lt;/a&gt; 에있는 수식이 포함되어 있으면 괜찮지 만 기본적으로 명시 적으로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="cfa2f83ab4f6f82fd375c50d488d3fb6fae0eade" translate="yes" xml:space="preserve">
          <source>If your test requires a test file that isn&amp;rsquo;t a standard test fixture, you can install it from a source repository during the &lt;code&gt;test&lt;/code&gt; phase with a resource block, like this:</source>
          <target state="translated">If your test requires a test file that isn&amp;rsquo;t a standard test fixture, you can install it from a source repository during the &lt;code&gt;test&lt;/code&gt; phase with a resource block, like this:</target>
        </trans-unit>
        <trans-unit id="57211625abf01d68a18536fbc446cf0f8167d67c" translate="yes" xml:space="preserve">
          <source>Import all formulae from specified &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; (defaults to all installed taps). This can be useful for debugging issues across all formulae when making significant changes to &lt;code&gt;formula.rb&lt;/code&gt;, testing the performance of loading all formulae or to determine if any current formulae have Ruby issues.</source>
          <target state="translated">지정된 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에서 모든 수식을 가져옵니다 (기본값은 설치된 모든 탭으로). 이는 &lt;code&gt;formula.rb&lt;/code&gt; 를 대폭 변경하고 모든 공식의로드 성능을 테스트하거나 현재 공식에 Ruby 문제가 있는지 여부를 판별 할 때 모든 공식에서 문제를 디버깅하는 데 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5191fb65215a92dae6c06a22d65ea3bd2706a1a" translate="yes" xml:space="preserve">
          <source>Import all items from the specified &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;, or from all installed taps if none is provided. This can be useful for debugging issues across all items when making significant changes to &lt;code&gt;formula.rb&lt;/code&gt;, testing the performance of loading all items or checking if any current formulae/casks have Ruby issues.</source>
          <target state="translated">Import all items from the specified &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt;, or from all installed taps if none is provided. This can be useful for debugging issues across all items when making significant changes to &lt;code&gt;formula.rb&lt;/code&gt; , testing the performance of loading all items or checking if any current formulae/casks have Ruby issues.</target>
        </trans-unit>
        <trans-unit id="fa3a5922b4f45f2c530b38508f32d82eaaf80070" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31e6d44605025e95324fc9b21568df33d3d3d78f" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">에서 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac.rb&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d32209725cbfaf6521bc26cc0c6d803f53d50105" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">에서 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c37bf89eb66a990b5f51f6b6bf1b75079d5fa185" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;homebrew/versions&lt;/a&gt; the formula for GCC 6 was named &lt;code&gt;gcc6.rb&lt;/code&gt; and began with &lt;code&gt;class Gcc6 &amp;lt; Formula&lt;/code&gt;. In &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; this same formula is named &lt;code&gt;gcc@6.rb&lt;/code&gt; and begins with &lt;code&gt;class GccAT6 &amp;lt; Formula&lt;/code&gt;.</source>
          <target state="translated">에서는 &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;사제 / 버전&lt;/a&gt; GCC 6 화학식은 명명 하였다 &lt;code&gt;gcc6.rb&lt;/code&gt; 과 함께 시작 &lt;code&gt;class Gcc6 &amp;lt; Formula&lt;/code&gt; . 에서는 &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;사제 / 코어&lt;/a&gt; 동일한 수식이라는 &lt;code&gt;gcc@6.rb&lt;/code&gt; 및 시작 &lt;code&gt;class GccAT6 &amp;lt; Formula&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b109ecb1e93273c65607e725697abd212bffbf6" translate="yes" xml:space="preserve">
          <source>In Homebrew we sometimes accept formulae updates that don&amp;rsquo;t include a version bump. These include resource updates, new patches or fixing a security issue with a formula.</source>
          <target state="translated">Homebrew에서는 버전 범프가 포함되지 않은 수식 업데이트를 허용하는 경우가 있습니다. 여기에는 리소스 업데이트, 새 패치 또는 공식 관련 보안 문제 해결이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="00961e014e697c343657d9d647d6ee54d04d633e" translate="yes" xml:space="preserve">
          <source>In Sublime Text 2/3, you can use Package Control to install &lt;a href=&quot;https://github.com/samueljohn/Homebrew-formula-syntax&quot;&gt;Homebrew-formula-syntax&lt;/a&gt;, which adds highlighting for inline patches.</source>
          <target state="translated">Sublime Text 2/3에서 Package Control을 사용하여 &lt;a href=&quot;https://github.com/samueljohn/Homebrew-formula-syntax&quot;&gt;Homebrew-formula-syntax&lt;/a&gt; 를 설치 하면 인라인 패치에 대한 강조 표시가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ad55a8da1f605058a315265d07bc83219b046765" translate="yes" xml:space="preserve">
          <source>In both cases, the command file should be executable (&lt;code&gt;chmod +x&lt;/code&gt;) and live somewhere in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">두 경우 모두 명령 파일은 실행 가능해야하고 ( &lt;code&gt;chmod +x&lt;/code&gt; ) &lt;code&gt;PATH&lt;/code&gt; 어딘가에 있어야합니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="dadaacb67a282c70d70fc8d200c8ad1d2508441b" translate="yes" xml:space="preserve">
          <source>In case there are specific issues with the Homebrew packaging (compared to how the software is installed from other sources) a &lt;code&gt;caveats&lt;/code&gt; block can be added to the formula to warn users. This can indicate non-standard install paths, an example from the &lt;code&gt;ruby&lt;/code&gt; formula:</source>
          <target state="translated">Homebrew 패키징에 특정 문제가있는 경우 (다른 소스에서 소프트웨어를 설치하는 방법과 비교하여) 사용자에게 경고하기 위해 &lt;code&gt;caveats&lt;/code&gt; 블록을 공식에 ​​추가 할 수 있습니다. 이것은 &lt;code&gt;ruby&lt;/code&gt; 공식 의 예와 같이 비표준 설치 경로를 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6827e821668e6bc47e5fff452ae2e63a5e5e36d" translate="yes" xml:space="preserve">
          <source>In early 2015 Homebrew started the process of deprecating &lt;em&gt;SHA1&lt;/em&gt; for package integrity verification. Since then formulae under the Homebrew organisation have been moved onto using &lt;em&gt;SHA256&lt;/em&gt; for verification; this includes both source packages and our precompiled packages (bottles).</source>
          <target state="translated">2015 년 초 Homebrew는 패키지 무결성 검증을 위해 &lt;em&gt;SHA1&lt;/em&gt; 을 더 이상 사용하지 않는 프로세스를 시작했습니다 . 그 이후로 Homebrew 조직의 공식은 &lt;em&gt;SHA256&lt;/em&gt; 을 사용하여 검증되었습니다. 여기에는 소스 패키지와 사전 컴파일 된 패키지 (병)가 모두 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4a0c20db19d86321b7b6ed3bdf9355dddb72f5d7" translate="yes" xml:space="preserve">
          <source>In embedded patches, the string &amp;ldquo;HOMEBREW_PREFIX&amp;rdquo; is replaced with the value of the constant &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; before the patch is applied.</source>
          <target state="translated">임베드 된 패치에서 문자열 &quot;HOMEBREW_PREFIX&quot;는 상수 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 의 값으로 대체됩니다. 패치가 적용되기 전에 됩니다.</target>
        </trans-unit>
        <trans-unit id="25928ede91113bbf9eb168db48e7620ff4476a5d" translate="yes" xml:space="preserve">
          <source>In particular, when a test needs to be performed before installation use &lt;code&gt;odie&lt;/code&gt; to bail out gracefully. For example:</source>
          <target state="translated">특히, 설치 전에 테스트를 수행해야 할 경우 &lt;code&gt;odie&lt;/code&gt; 를 사용 하여 우아하게 구제하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2b23e06c0b90187026f7ab3eadb40b725b4ab2ff" translate="yes" xml:space="preserve">
          <source>In summary, environment variables used by a formula need to conform to these filtering rules in order to be available.</source>
          <target state="translated">요약하면 수식에서 사용하는 환경 변수를 사용하려면 이러한 필터링 규칙을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="3fd39514b3f35fab0257fc127d82e9d3e9f7a995" translate="yes" xml:space="preserve">
          <source>In the event that a formula needs to interact with &lt;code&gt;setup.py&lt;/code&gt; instead of calling &lt;code&gt;pip&lt;/code&gt;, Homebrew provides a helper method, &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt;, which returns useful arguments for invoking &lt;code&gt;setup.py&lt;/code&gt;. Your formula should use this instead of invoking &lt;code&gt;setup.py&lt;/code&gt; explicitly. The syntax is:</source>
          <target state="translated">수식과 상호 작용을 필요로하는 경우에 &lt;code&gt;setup.py&lt;/code&gt; 를 호출하는 대신 &lt;code&gt;pip&lt;/code&gt; , 브루는 도우미 메서드, 제공 &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; 호출에 유용 인수 반환 &lt;code&gt;setup.py&lt;/code&gt; 를 . 공식은 &lt;code&gt;setup.py&lt;/code&gt; 를 명시 적으로 호출하는 대신 이것을 사용해야합니다 . 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="481f559edaef5a72cc604ed3795d4d1b5141ab23" translate="yes" xml:space="preserve">
          <source>In the following we distinguish between two types of Node modules installed using formulae:</source>
          <target state="translated">다음에서는 공식을 사용하여 설치된 두 가지 유형의 노드 모듈을 구분합니다.</target>
        </trans-unit>
        <trans-unit id="ad18bb3d69529155efa8883bfdbf5c68a31d4e96" translate="yes" xml:space="preserve">
          <source>In this case, to remove a formula entirely, you may run &lt;code&gt;brew uninstall --force &amp;lt;formula&amp;gt;&lt;/code&gt;. Be careful as this is a destructive operation.</source>
          <target state="translated">In this case, to remove a formula entirely, you may run &lt;code&gt;brew uninstall --force &amp;lt;formula&amp;gt;&lt;/code&gt; . Be careful as this is a destructive operation.</target>
        </trans-unit>
        <trans-unit id="3e863f42704465bf7f5b4c31b30dfccb7c5576c3" translate="yes" xml:space="preserve">
          <source>In this example Homebrew would refuse to install any formula that specifies the &lt;code&gt;MIT&lt;/code&gt; license. Homebrew would also forbid installation of any formula that declares a dependency on a formula that specifies &lt;code&gt;MIT&lt;/code&gt;, even if the original formula has an allowed license.</source>
          <target state="translated">이 예에서 Homebrew는 &lt;code&gt;MIT&lt;/code&gt; 라이센스 를 지정하는 공식 설치를 거부합니다 . Homebrew는 원래 공식에 허용 된 라이센스가 있더라도 &lt;code&gt;MIT&lt;/code&gt; 를 지정하는 공식에 대한 종속성을 선언하는 공식의 설치를 금지합니다 .</target>
        </trans-unit>
        <trans-unit id="d202c0b25fd04cffbc137179fd94443d9891b689" translate="yes" xml:space="preserve">
          <source>In your formula&amp;rsquo;s &lt;code&gt;install&lt;/code&gt; method, do any installation steps which need to be done before the &lt;code&gt;npm install&lt;/code&gt; step and then &lt;code&gt;cd&lt;/code&gt; to the top level of the included Node module. Then, use &lt;code&gt;system&lt;/code&gt; with &lt;code&gt;Language::Node.local_npm_install_args&lt;/code&gt; to invoke &lt;code&gt;npm install&lt;/code&gt; like:</source>
          <target state="translated">공식의 &lt;code&gt;install&lt;/code&gt; 방법에서 &lt;code&gt;npm install&lt;/code&gt; 단계 전에 수행해야하는 설치 단계를 수행 한 후 포함 된 노드 모듈의 최상위 레벨 로 &lt;code&gt;cd&lt;/code&gt; 하십시오. 그런 다음 &lt;code&gt;Language::Node.local_npm_install_args&lt;/code&gt; 와 함께 &lt;code&gt;system&lt;/code&gt; 을 사용하여 다음 과 같이 &lt;code&gt;npm install&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="75f033560a75919ea62a81ed8ca729e4a49757b9" translate="yes" xml:space="preserve">
          <source>In your formula&amp;rsquo;s &lt;code&gt;install&lt;/code&gt; method, simply &lt;code&gt;cd&lt;/code&gt; to the top level of your Node module if necessary and then use &lt;code&gt;system&lt;/code&gt; to invoke &lt;code&gt;npm install&lt;/code&gt; with &lt;code&gt;Language::Node.std_npm_install_args&lt;/code&gt; like:</source>
          <target state="translated">공식 &lt;code&gt;install&lt;/code&gt; 방법에서 필요한 경우 노드 모듈의 최상위 레벨로 &lt;code&gt;cd&lt;/code&gt; 한 다음 &lt;code&gt;system&lt;/code&gt; 을 사용 하여 &lt;code&gt;Language::Node.std_npm_install_args&lt;/code&gt; 를 사용 하여 &lt;code&gt;npm install&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="86304570adf120ac75ca8d70e37b8146cb76c97e" translate="yes" xml:space="preserve">
          <source>Include links to any additional Gists you may have created (such as for the output of &lt;code&gt;brew config&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;brew config&lt;/code&gt; 및 &lt;code&gt;brew doctor&lt;/code&gt; 출력과 같이 생성 한 추가 요점에 대한 링크 포함 .</target>
        </trans-unit>
        <trans-unit id="72d49d39b8ac6aab5979a61e8c76006ed0b8966a" translate="yes" xml:space="preserve">
          <source>Include the URL output by &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; (if applicable).</source>
          <target state="translated">&lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; 의 URL 출력을 포함시킵니다 (해당되는 경우).</target>
        </trans-unit>
        <trans-unit id="773464af3fb7930d267e85968237f4264aeee925" translate="yes" xml:space="preserve">
          <source>Inline Type Annotations</source>
          <target state="translated">인라인 유형 주석</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="89ecbbda273b0d43e8a29d38089f579c772625e0" translate="yes" xml:space="preserve">
          <source>Install &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 설치&lt;em&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="99ec8c7cadd5ff9ccb4a17ecaf681e6455e0228b" translate="yes" xml:space="preserve">
          <source>Install Homebrew&amp;rsquo;s Bundler gems.</source>
          <target state="translated">Install Homebrew&amp;rsquo;s Bundler gems.</target>
        </trans-unit>
        <trans-unit id="a379307f41178bd0000ad90a76ad6b8de4f1b3ee" translate="yes" xml:space="preserve">
          <source>Install a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;. Additional options specific to a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; may be appended to the command.</source>
          <target state="translated">Install a &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; or &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt;. Additional options specific to a &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; may be appended to the command.</target>
        </trans-unit>
        <trans-unit id="0f0e5a74ad4914b9ac4d64d860523b92e20aee56" translate="yes" xml:space="preserve">
          <source>Install and commit Homebrew&amp;rsquo;s vendored gems.</source>
          <target state="translated">Homebrew의 공급 보석을 설치하고 커밋합니다.</target>
        </trans-unit>
        <trans-unit id="95af92ad55c950162d3ce7b7375382f09cf9e506" translate="yes" xml:space="preserve">
          <source>Install and upgrade (by default) all dependencies from the &lt;code&gt;Brewfile&lt;/code&gt;.</source>
          <target state="translated">Install and upgrade (by default) all dependencies from the &lt;code&gt;Brewfile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3529ebe4d6a30f0ad8e07730bf12741610c9eab" translate="yes" xml:space="preserve">
          <source>Install any &lt;code&gt;gem&lt;/code&gt; package into a self-contained Homebrew Cellar location: &lt;a href=&quot;https://github.com/sportngin/brew-gem&quot;&gt;https://github.com/sportngin/brew-gem&lt;/a&gt;</source>
          <target state="translated">자체 포함 된 Homebrew Cellar 위치에 &lt;code&gt;gem&lt;/code&gt; 패키지를 설치하십시오 : &lt;a href=&quot;https://github.com/sportngin/brew-gem&quot;&gt;https://github.com/sportngin/brew-gem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b60a2172daf674c5e0dbbd9eb18135b11d178c53" translate="yes" xml:space="preserve">
          <source>Install into Homebrew without formulae</source>
          <target state="translated">수식없이 Homebrew에 설치</target>
        </trans-unit>
        <trans-unit id="987f5753cb7c5d542018db8ca7983327f6e55fba" translate="yes" xml:space="preserve">
          <source>Install macOS applications distributed as binaries. See brew-cask(1).</source>
          <target state="translated">바이너리로 배포 된 macOS 응용 프로그램을 설치하십시오. 추출 통 (1)을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5bdc8f223c2b76109d7246107213f98fb1a918" translate="yes" xml:space="preserve">
          <source>Install only a formula&amp;rsquo;s dependencies (not the formula)</source>
          <target state="translated">수식의 종속성 만 설치하십시오 (공식은 아님).</target>
        </trans-unit>
        <trans-unit id="1d838b177e594071aa5d40d8e57c1b890fb1bcb1" translate="yes" xml:space="preserve">
          <source>Install software not packaged by your host distribution</source>
          <target state="translated">호스트 배포판에 포함되지 않은 소프트웨어 설치</target>
        </trans-unit>
        <trans-unit id="42e2e2fab6c4e550cb9b391a92bb1d79e9785a68" translate="yes" xml:space="preserve">
          <source>Install the formula</source>
          <target state="translated">공식 설치</target>
        </trans-unit>
        <trans-unit id="209b6081064a3df37024066cf460b11cf5748562" translate="yes" xml:space="preserve">
          <source>Install up-to-date versions of software when your host distribution is old</source>
          <target state="translated">호스트 배포가 오래된 경우 최신 버전의 소프트웨어 설치</target>
        </trans-unit>
        <trans-unit id="ec120f68e08c51906d59425bfdbc76a0dd2883cc" translate="yes" xml:space="preserve">
          <source>Install using:</source>
          <target state="translated">다음을 사용하여 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e1e3ff943dcd84425bcfeb98d55a404758c4ede6" translate="yes" xml:space="preserve">
          <source>Install your own stuff, but be aware that if you install common libraries like libexpat yourself, it may cause trouble when trying to build certain Homebrew formula. As a result &lt;code&gt;brew doctor&lt;/code&gt; will warn you about this.</source>
          <target state="translated">libexpat와 같은 일반적인 라이브러리를 직접 설치하면 특정 Homebrew 수식을 만들 때 문제가 발생할 수 있습니다. 결과적으로 &lt;code&gt;brew doctor&lt;/code&gt; 가 이에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="8f52be42e2937b65118e3da5a83ecb8d615d8a97" translate="yes" xml:space="preserve">
          <source>Installed formulae</source>
          <target state="translated">설치된 공식</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="87baeaa2d30ac39af5335fb6d4728be4e984eb76" translate="yes" xml:space="preserve">
          <source>Installing a custom version of GCC or &lt;code&gt;autotools&lt;/code&gt; into the &lt;code&gt;PATH&lt;/code&gt; has the potential to break lots of compiles so we prefer the Apple- or Homebrew-provided compilers.</source>
          <target state="translated">GCC 또는 사용자 정의 버전 설치 &lt;code&gt;autotools&lt;/code&gt; 를을 에 &lt;code&gt;PATH&lt;/code&gt; 우리가 사과 - 나 브루 제공하는 컴파일러를 선호 있도록 컴파일을 많이 깰 가능성이있다.</target>
        </trans-unit>
        <trans-unit id="f16db59339859aaaabf29a7443a46ca74366d5ea" translate="yes" xml:space="preserve">
          <source>Installing a formula with dependencies will look like this:</source>
          <target state="translated">종속성이있는 수식을 설치하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0f31aa7b6667db52cdd7c8a399cb324a3d8cea22" translate="yes" xml:space="preserve">
          <source>Installing a standard Node module based formula would look like this:</source>
          <target state="translated">표준 노드 모듈 기반 공식을 설치하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d776fb7d043110f59508e00b15a54dfbf406669d" translate="yes" xml:space="preserve">
          <source>Installing bindings</source>
          <target state="translated">바인딩 설치</target>
        </trans-unit>
        <trans-unit id="c97a6d3427c0096340c3bb7c70a78b6f550cef26" translate="yes" xml:space="preserve">
          <source>Installing directly from pull requests</source>
          <target state="translated">풀 요청에서 직접 설치</target>
        </trans-unit>
        <trans-unit id="fca933fce8f5e098694211b97491a33ca7fa2d69" translate="yes" xml:space="preserve">
          <source>Installing global style modules with &lt;code&gt;std_npm_install_args&lt;/code&gt; to &lt;code&gt;libexec&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std_npm_install_args&lt;/code&gt; 를 사용하여 전역 스타일 모듈 을 &lt;code&gt;libexec&lt;/code&gt; 에 설치</target>
        </trans-unit>
        <trans-unit id="5d07ddf3d568c54ea4e910ae4341eb849e474411" translate="yes" xml:space="preserve">
          <source>Installing module dependencies locally with &lt;code&gt;local_npm_install_args&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;local_npm_install_args&lt;/code&gt; 를 사용 하여 로컬로 모듈 종속성 설치</target>
        </trans-unit>
        <trans-unit id="63d462b64bc5a0c059dfbfb143670d3f579694bb" translate="yes" xml:space="preserve">
          <source>Installing previous versions of formulae</source>
          <target state="translated">이전 버전의 수식 설치</target>
        </trans-unit>
        <trans-unit id="599607785d58047e1dad344ffb7f7a1f8f3e0f74" translate="yes" xml:space="preserve">
          <source>Installing stuff without the Xcode CLT</source>
          <target state="translated">Xcode CLT없이 물건 설치</target>
        </trans-unit>
        <trans-unit id="a569ea0e7841915e9e4cc57d570440d3eb194b94" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">Installs the given &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4bee066f71c20618bb8f4cc1c1bc25cee645da47" translate="yes" xml:space="preserve">
          <source>Installs, configures and runs Homebrew&amp;rsquo;s &lt;code&gt;rubocop&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 &lt;code&gt;rubocop&lt;/code&gt; 을 설치, 구성 및 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="d340fcbaaf8fbc6ba2d55e246ff2b14a9fe751b3" translate="yes" xml:space="preserve">
          <source>Instructions for a supported install of Homebrew are on the &lt;a href=&quot;https://brew.sh&quot;&gt;homepage&lt;/a&gt;.</source>
          <target state="translated">지원되는 Homebrew 설치 지침은 &lt;a href=&quot;https://brew.sh&quot;&gt;홈페이지에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="2728e07a29728613d87727713d0805b06b3a9db3" translate="yes" xml:space="preserve">
          <source>Instructions for a supported install of Homebrew on Linux are on the &lt;a href=&quot;https://brew.sh&quot;&gt;homepage&lt;/a&gt;.</source>
          <target state="translated">Linux에서 지원되는 Homebrew 설치에 대한 지침은 &lt;a href=&quot;https://brew.sh&quot;&gt;홈페이지에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a9def07e8f8e95d969d4e97cbf9975e86599dac" translate="yes" xml:space="preserve">
          <source>Instructions for creating your own commands can be found in the docs: &lt;a href=&quot;external-commands&quot;&gt;https://docs.brew.sh/External-Commands&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;external-commands&quot;&gt;https://docs.brew.sh/External-Commands&lt;/a&gt; 문서에서 자신의 명령을 만드는 방법에 대한 지침을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef8c04e9b288364f80766e1698b152d148099047" translate="yes" xml:space="preserve">
          <source>Interactive Homebrew Shell</source>
          <target state="translated">대화식 사제 쉘</target>
        </trans-unit>
        <trans-unit id="28c7ff2a36894b5bc71a0eac9e97db2b0c639761" translate="yes" xml:space="preserve">
          <source>Interesting Taps &amp;amp; Forks</source>
          <target state="translated">재미있는 도청 및 포크</target>
        </trans-unit>
        <trans-unit id="44573aa577e061acfdbc7f3abe1f74b567e53e9e" translate="yes" xml:space="preserve">
          <source>Interesting Taps and Forks</source>
          <target state="translated">재미있는 탭과 포크</target>
        </trans-unit>
        <trans-unit id="ff32e205cc739937e88f6c55c18df2adc90da0d0" translate="yes" xml:space="preserve">
          <source>Is there a glossary of terms around?</source>
          <target state="translated">주변에 용어가 있습니까?</target>
        </trans-unit>
        <trans-unit id="69bd1fdd3d0126dc005a6a9d6ad30c7be5d24c22" translate="yes" xml:space="preserve">
          <source>It comprises four Mac Minis and three Xserves running in two data centres which host &lt;a href=&quot;https://jenkins.brew.sh&quot;&gt;a Jenkins instance at https://jenkins.brew.sh&lt;/a&gt; and run the &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/blob/master/cmd/brew-test-bot.rb&quot;&gt;&lt;code&gt;brew-test-bot.rb&lt;/code&gt;&lt;/a&gt; Ruby script to perform automated testing of commits to the master branch, pull requests and custom builds requested by maintainers.</source>
          <target state="translated">&lt;a href=&quot;https://jenkins.brew.sh&quot;&gt;https://jenkins.brew.sh에서 Jenkins 인스턴스&lt;/a&gt; 를 호스팅 하고 &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/blob/master/cmd/brew-test-bot.rb&quot;&gt; &lt;code&gt;brew-test-bot.rb&lt;/code&gt; &lt;/a&gt; Ruby 스크립트를 실행하여 마스터 브랜치에 대한 커밋의 자동 테스트를 수행 하는 두 개의 데이터 센터에서 실행되는 4 개의 Mac Mini와 3 개의 Xserve로 구성됩니다. 관리자가 요청한 풀 요청 및 사용자 정의 빌드.</target>
        </trans-unit>
        <trans-unit id="44118a4d5793b63d2b0860637bcf4ea30712b5a6" translate="yes" xml:space="preserve">
          <source>It comprises three Mac Pros hosting virtual machines that run the &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/&quot;&gt;&lt;code&gt;test-bot.rb&lt;/code&gt;&lt;/a&gt; external command to perform automated testing of commits to the master branch, pull requests and custom builds requested by maintainers.</source>
          <target state="translated">이는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/&quot;&gt; &lt;code&gt;test-bot.rb&lt;/code&gt; &lt;/a&gt; 외부 명령을 실행하는 가상 머신을 호스팅하는 3 개의 Mac Pro 로 구성되어 마스터 브랜치에 대한 커밋, 풀 요청 및 유지 관리자가 요청한 사용자 지정 빌드에 대한 자동 테스트를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="fd3890003875f8cd4fadd47339a9bec4679e69e6" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t work! I get some &amp;ldquo;permissions&amp;rdquo; error when I try to install stuff!</source>
          <target state="translated">작동하지 않습니다! 설치하려고하면 &quot;권한&quot;오류가 발생합니다!</target>
        </trans-unit>
        <trans-unit id="95812c06374078d845d08e87c101e96f27c8df5c" translate="yes" xml:space="preserve">
          <source>It is impossible for the Homebrew developers to match any particular event to any particular user, even if we had access to the Homebrew analytics user ID (which we do not). An example of the most user-specific information we can see from Google Analytics:</source>
          <target state="translated">Homebrew 분석 사용자 ID에 액세스 할 수 있더라도 Homebrew 개발자는 특정 이벤트를 특정 사용자와 일치시킬 수 없습니다. Google 웹 로그 분석에서 볼 수있는 가장 사용자 별 정보의 예 :</target>
        </trans-unit>
        <trans-unit id="76457dea413274e5aedebc02506db81d3119dd9e" translate="yes" xml:space="preserve">
          <source>It is not always straightforward to tell &lt;code&gt;gem&lt;/code&gt; to look in non-standard directories for headers and libraries. If you choose &lt;code&gt;/usr/local&lt;/code&gt;, many things will &amp;ldquo;just work&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;gem&lt;/code&gt; 이 비표준 디렉토리에서 헤더와 라이브러리를 찾도록 지시하는 것이 항상 쉬운 것은 아닙니다 . &lt;code&gt;/usr/local&lt;/code&gt; 을 선택하면 많은 것들이 &quot;작동합니다&quot;.</target>
        </trans-unit>
        <trans-unit id="fa8c94e046756b983847f736fc50ae0d3cb1c97d" translate="yes" xml:space="preserve">
          <source>It is probably safe to use &lt;code&gt;--prefix&lt;/code&gt; with &lt;code&gt;--root=/&lt;/code&gt;, which should work with either setuptools or distutils-based &lt;code&gt;setup.py&lt;/code&gt;&amp;rsquo;s but is kinda ugly.</source>
          <target state="translated">아마도 안전하게 사용할 수 &lt;code&gt;--prefix&lt;/code&gt; 와 &lt;code&gt;--root=/&lt;/code&gt; 어느 setuptools에 또는 함께 작동해야하는의 distutils 기반 &lt;code&gt;setup.py&lt;/code&gt; 의하지만 좀 추한입니다.</target>
        </trans-unit>
        <trans-unit id="42ad2b098d3d3635652b61604e50482d384364c0" translate="yes" xml:space="preserve">
          <source>It means the formula is installed only into the Cellar and is not linked into &lt;code&gt;/usr/local&lt;/code&gt;. This means most tools will not find it. You can see why a formula was installed as keg-only, and instructions to include it in your &lt;code&gt;PATH&lt;/code&gt;, by running &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이는 수식이 지하실에만 설치되고 &lt;code&gt;/usr/local&lt;/code&gt; 에 연결되어 있지 않음을 의미합니다 . 이것은 대부분의 도구가 찾을 수 없음을 의미합니다. &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행 하면 수식이 통 전용으로 설치된 이유와 &lt;code&gt;PATH&lt;/code&gt; 에 수식 을 포함하는 방법을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e85160ab68b021225d6d44c8654cc71f8ce9a6d" translate="yes" xml:space="preserve">
          <source>It means the formula is installed only into the Cellar; it is not linked into &lt;code&gt;/usr/local&lt;/code&gt;. This means most tools will not find it. We don&amp;rsquo;t do this for stupid reasons. You can still link in the formula if you need to with &lt;code&gt;brew link&lt;/code&gt;.</source>
          <target state="translated">이는 공식이 지하실에만 설치됨을 의미합니다. &lt;code&gt;/usr/local&lt;/code&gt; 에 링크되어 있지 않습니다 . 이것은 대부분의 도구가 찾지 못할 것을 의미합니다. 우리는 어리석은 이유로이 작업을 수행하지 않습니다. &lt;code&gt;brew link&lt;/code&gt; 와 함께 필요한 경우 여전히 수식에 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5f76061d0a3758d0f1ed216acf101d77d23190f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to find existing formulae in Homebrew that have similarities to the software you want to add. This will help you to understand how specific languages, build methods, etc. are typically handled.</source>
          <target state="translated">추가하려는 소프트웨어와 유사한 기존 공식을 Homebrew에서 찾는 것이 좋습니다. 이를 통해 특정 언어, 빌드 방법 등이 일반적으로 처리되는 방식을 이해하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="012e7638bd62bc069096a948d957b1ea6406a064" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s sometimes necessary to override this default behavior to create a working check for a formula/cask. If a source doesn&amp;rsquo;t provide the newest version, we need to check a different one. If livecheck doesn&amp;rsquo;t correctly match version text, we need to provide an appropriate regex.</source>
          <target state="translated">공식 / 통에 대한 작업 확인을 생성하기 위해이 기본 동작을 재정의해야하는 경우가 있습니다. 소스가 최신 버전을 제공하지 않는 경우 다른 버전을 확인해야합니다. 실시간 확인이 버전 텍스트와 올바르게 일치하지 않는 경우 적절한 정규식을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="e027e57610f85225767aafbbf23fed7457e55828" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="translated">Java</target>
        </trans-unit>
        <trans-unit id="00f9fdbe637f82ade1b17a3e2c6e687460340e82" translate="yes" xml:space="preserve">
          <source>Just extract (or &lt;code&gt;git clone&lt;/code&gt;) Homebrew wherever you want. Just avoid:</source>
          <target state="translated">그냥 추출 (또는 &lt;code&gt;git clone&lt;/code&gt; 원하는 곳에서 Homebrew를 ). 피하십시오 :</target>
        </trans-unit>
        <trans-unit id="4720d4130b6b791c233d5101e11c51bd9b762e0e" translate="yes" xml:space="preserve">
          <source>Just install everything into the Homebrew prefix like this:</source>
          <target state="translated">다음과 같이 Homebrew 접두사에 모든 것을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="d9c8268add68af4235f3267d7668f207602f705d" translate="yes" xml:space="preserve">
          <source>Just moving some files</source>
          <target state="translated">그냥 일부 파일을 이동</target>
        </trans-unit>
        <trans-unit id="2bbe2c5f6561b5618c3f57c09c8125a0dcef75b2" translate="yes" xml:space="preserve">
          <source>Keep discussion in the pull request unless requested otherwise (i.e. do not email maintainers privately).</source>
          <target state="translated">달리 요청하지 않는 한 풀 요청에서 토론을 유지하십시오 (즉, 관리자에게 전자 메일을 보내지 마십시오).</target>
        </trans-unit>
        <trans-unit id="bdeeef8876422213325483278a0f92e7a0c8c1b5" translate="yes" xml:space="preserve">
          <source>Keep merge commits out of the pull request.</source>
          <target state="translated">풀 커밋에서 병합 커밋을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="c7dc72ef1c4c61b1191541b0854b5eaf5a9ed686" translate="yes" xml:space="preserve">
          <source>Kickstarter Supporters</source>
          <target state="translated">킥 스타터 서포터</target>
        </trans-unit>
        <trans-unit id="c61e0167f6bd9ba175fa4eeb14221e2c06762623" translate="yes" xml:space="preserve">
          <source>Leave the &lt;code&gt;bottle do ... end&lt;/code&gt; block as-is; our CI system will update it when we pull your change.</source>
          <target state="translated">&lt;code&gt;bottle do ... end&lt;/code&gt; 남겨두고 ... 끝 . CI 시스템은 변경 사항을 가져올 때이를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="27c968e6692b41bf6e1a241b870dc41ff1a51b17" translate="yes" xml:space="preserve">
          <source>Libraries</source>
          <target state="translated">Libraries</target>
        </trans-unit>
        <trans-unit id="23be6a12322be8d177acba2bdd3cd26477a13fce" translate="yes" xml:space="preserve">
          <source>Libraries built for Python 3 should include &lt;code&gt;depends_on &quot;python&quot;&lt;/code&gt;, which will bottle against Homebrew&amp;rsquo;s Python 3.x. Python 2.x libraries must function when they are installed against either the system Python or brewed Python.</source>
          <target state="translated">Python 3 용으로 빌드 된 라이브러리는 &lt;code&gt;depends_on &quot;python&quot;&lt;/code&gt; 포함해야합니다. 하며 Homebrew의 Python 3.x와 병이됩니다. Python 2.x 라이브러리는 시스템 Python 또는 추출 된 Python에 대해 설치 될 때 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="f23e0d98de705dcde196608049e2469be061d13f" translate="yes" xml:space="preserve">
          <source>Libraries built for Python 3 should include &lt;code&gt;depends_on &quot;python@3.x&quot;&lt;/code&gt;, which will bottle against Homebrew&amp;rsquo;s Python 3.x. Python 2.x libraries must function when they are installed against either the system Python or brewed Python.</source>
          <target state="translated">Python 3 용으로 빌드 된 라이브러리에는 &lt;code&gt;depends_on &quot;python@3.x&quot;&lt;/code&gt; 가 포함되어야하며 , 이는 Homebrew의 Python 3.x와 병용 됩니다. Python 2.x 라이브러리는 시스템 Python 또는 양조 된 Python에 대해 설치 될 때 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="dca6463b909152aac09a549e12eb5a21fd8a85de" translate="yes" xml:space="preserve">
          <source>Libraries may be installed to &lt;code&gt;libexec&lt;/code&gt; and added to &lt;code&gt;sys.path&lt;/code&gt; by writing a &lt;code&gt;.pth&lt;/code&gt; file (named like &amp;ldquo;homebrew-foo.pth&amp;rdquo;) to the &lt;code&gt;prefix&lt;/code&gt; site-packages. This simplifies the ensuing drama if &lt;code&gt;pip&lt;/code&gt; is accidentally used to upgrade a Homebrew-installed package and prevents the accumulation of stale .pyc files in Homebrew&amp;rsquo;s site-packages.</source>
          <target state="translated">라이브러리를 &lt;code&gt;libexec&lt;/code&gt; 에 설치 하고 &lt;code&gt;.pth&lt;/code&gt; 파일 (예 : &quot;homebrew-foo.pth&quot;)을 &lt;code&gt;prefix&lt;/code&gt; site-packages 에 작성 하여 &lt;code&gt;sys.path&lt;/code&gt; 에 추가 할 수 있습니다 . &lt;code&gt;pip&lt;/code&gt; 가 실수로 Homebrew 설치 패키지를 업그레이드하는 데 사용되는 경우 후속 드라마를 단순화하고 Homebrew의 사이트 패키지에 오래된 .pyc 파일이 누적되는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="ef3b6d559938b6cd988174c5f9286dd9298560ad" translate="yes" xml:space="preserve">
          <source>License Guidelines</source>
          <target state="translated">라이선스 지침</target>
        </trans-unit>
        <trans-unit id="fdb77789985f1014993de15c60592b05cedd27a5" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD 2-Clause License.</source>
          <target state="translated">BSD 2-Clause 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="9f846ac531d85ab08fefb0e93ef63b580ed8f446" translate="yes" xml:space="preserve">
          <source>Likewise, software which provides both &amp;ldquo;clean&amp;rdquo; and malware-infested versions might be removed from the repo &amp;mdash; even if we could have access to the &lt;em&gt;good&lt;/em&gt; version &amp;mdash; if its developers push for users to install the &lt;em&gt;bad&lt;/em&gt; version. We do so because in these cases there&amp;rsquo;s a higher than normal risk that both versions are (or will soon become) compromised in some manner.</source>
          <target state="translated">마찬가지로, &quot;깨끗한&quot;버전과 맬웨어에 감염된 버전을 모두 제공하는 소프트웨어 는 개발자가 사용자에게 &lt;em&gt;잘못된&lt;/em&gt; 버전 을 설치 하도록 요청하면 &lt;em&gt;좋은&lt;/em&gt; 버전에 액세스 할 수 있더라도 저장소에서 제거 될 수 있습니다 . 이 경우 두 버전이 어떤 식 으로든 손상 될 (또는 곧 발생할) 위험이 정상보다 높기 때문입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d17d2b57e458212577db216bac4a7a7d76f0b1e7" translate="yes" xml:space="preserve">
          <source>Linear algebra libraries</source>
          <target state="translated">선형 대수 라이브러리</target>
        </trans-unit>
        <trans-unit id="cbb1e2daf971142d8e2519940e0d9249e3aa200d" translate="yes" xml:space="preserve">
          <source>Link or unlink Homebrew&amp;rsquo;s completions.</source>
          <target state="translated">Homebrew 완료를 연결하거나 연결 해제합니다.</target>
        </trans-unit>
        <trans-unit id="f984e5fde04a06ddfd241322730309d7b46ad736" translate="yes" xml:space="preserve">
          <source>Linked keg-only formulae</source>
          <target state="translated">연결된 통만 수식</target>
        </trans-unit>
        <trans-unit id="1595047a3110f27e604064b7348b2d0e0f4568dc" translate="yes" xml:space="preserve">
          <source>Linux only: Pass this value to a type name representing the compiler&amp;rsquo;s &lt;code&gt;-march&lt;/code&gt; option.</source>
          <target state="translated">Linux 전용 : 컴파일러의 &lt;code&gt;-march&lt;/code&gt; 옵션을 나타내는 유형 이름에이 값을 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ee0d28e1f108329df9c66f63fb920063f101181" translate="yes" xml:space="preserve">
          <source>Linux or Windows 10 Subsystem for Linux</source>
          <target state="translated">Linux 용 Linux 또는 Windows 10 서브 시스템</target>
        </trans-unit>
        <trans-unit id="0c573a8344ec7425046a6176d9ad5138e08f0646" translate="yes" xml:space="preserve">
          <source>Linux/WSL Requirements</source>
          <target state="translated">Linux / WSL 요구 사항</target>
        </trans-unit>
        <trans-unit id="51829eaad5c2a01513e35653616121a886a7719e" translate="yes" xml:space="preserve">
          <source>Linux: &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt;</source>
          <target state="translated">Linux: &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a26cfba4fe9c7632642b20245260a240b86a0857" translate="yes" xml:space="preserve">
          <source>List all dependencies present in the &lt;code&gt;Brewfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Brewfile&lt;/code&gt; 에있는 모든 종속성을 나열합니다 .</target>
        </trans-unit>
        <trans-unit id="f983840352b4f64783438b71e8fb399581bf6267" translate="yes" xml:space="preserve">
          <source>List all installed formulae and casks.</source>
          <target state="translated">설치된 모든 공식과 캐스 크를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="a09ea49a5d4dd77d1ad7db1fd1edbef59e2f63df" translate="yes" xml:space="preserve">
          <source>List all installed formulae.</source>
          <target state="translated">설치된 모든 공식을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="584987d6b571dd6a54116aac473130610ba67a0c" translate="yes" xml:space="preserve">
          <source>List all installed taps when no arguments are passed.</source>
          <target state="translated">인수가 전달되지 않은 경우 설치된 모든 탭을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="860f44d634e4c1911812e8c36d1f83c2f52d58ad" translate="yes" xml:space="preserve">
          <source>List all locally installable casks including short names.</source>
          <target state="translated">짧은 이름을 포함하여 로컬로 설치할 수있는 모든 캐스 크를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="ba5b163051df735835033590946fb5b6174d0ba6" translate="yes" xml:space="preserve">
          <source>List all locally installable formulae including short names.</source>
          <target state="translated">짧은 이름을 포함하여 로컬로 설치할 수있는 모든 공식을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="4d5ae32b6d44d27c363e341f8a1c536f5e610fe1" translate="yes" xml:space="preserve">
          <source>List all managed services for the current user (or root).</source>
          <target state="translated">현재 사용자 (또는 루트)의 모든 관리 서비스를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="c4b202119242a53b0b486f0fa3e2e2194202bb63" translate="yes" xml:space="preserve">
          <source>List installed casks and formulae that have an updated version available. By default, version information is displayed in interactive shells, and suppressed otherwise.</source>
          <target state="translated">사용 가능한 업데이트 된 버전이있는 설치된 캐스 크 및 공식을 나열합니다. 기본적으로 버전 정보는 대화 형 셸에 표시되고 그렇지 않으면 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6fe77593990bb86451aa286e0f7be628da81570" translate="yes" xml:space="preserve">
          <source>List installed formulae that are not dependencies of another installed formula.</source>
          <target state="translated">설치된 다른 공식의 종속성이 아닌 설치된 공식을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="ad552613f623624dcb1908ce251c30c41c334580" translate="yes" xml:space="preserve">
          <source>Lists of &lt;em&gt;&lt;code&gt;file&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; may not be combined. If none are provided, &lt;code&gt;style&lt;/code&gt; will run style checks on the whole Homebrew library, including core code and all formulae.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;file&lt;/code&gt; &lt;/em&gt; , &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 및 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 목록이 결합되지 않을 수 있습니다. 아무것도 제공되지 않으면 &lt;code&gt;style&lt;/code&gt; 은 핵심 코드 및 모든 공식을 포함하여 전체 Homebrew 라이브러리에서 스타일 검사를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f5218a54f18d6903009d9b4c3e6dcc061c64d42e" translate="yes" xml:space="preserve">
          <source>Literal text in commands and code is styled in &lt;code&gt;fixed width font&lt;/code&gt;</source>
          <target state="translated">명령 및 코드의 리터럴 텍스트는 &lt;code&gt;fixed width font&lt;/code&gt; 스타일이 지정됩니다</target>
        </trans-unit>
        <trans-unit id="7196ef78fc209b6c435e04c2d9e3e04ada9b63ce" translate="yes" xml:space="preserve">
          <source>Livecheck automatically skips some formulae/casks for a number of reasons (deprecated, disabled, discontinued, etc.). However, on rare occasions we need to use a &lt;code&gt;livecheck&lt;/code&gt; block to do a manual skip. The &lt;code&gt;skip&lt;/code&gt; method takes a string containing a very brief reason for skipping.</source>
          <target state="translated">Livecheck는 여러 가지 이유 (더 이상 사용되지 않음, 비활성화 됨, 중단됨 등)로 인해 일부 공식 / 통을 자동으로 건너 뜁니다. 그러나 드문 경우지만 수동으로 건너 뛰기 위해 &lt;code&gt;livecheck&lt;/code&gt; 블록을 사용해야합니다 . &lt;code&gt;skip&lt;/code&gt; 방법은 건너 뛰는위한 아주 간단한 이유를 포함하는 문자열을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a47afcf572bf0aa121b10a2653d0034a6c4f557e" translate="yes" xml:space="preserve">
          <source>Look through repository history to find the most recent version of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; and create a copy in &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;. Specifically, the command will create the new formula file at &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/Formula/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;code&gt;@&lt;/code&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;. If the tap is not installed yet, attempt to install/clone the tap before continuing. To extract a formula from a tap that is not &lt;code&gt;homebrew/core&lt;/code&gt; use its fully-qualified form of &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">저장소 기록을 살펴보고 가장 최근 버전의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 찾고 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에서 사본을 만듭니다 . 특히이 명령은 &lt;code&gt;/Formula/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; &lt;code&gt;@&lt;/code&gt; &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; &lt;code&gt;.rb&lt;/code&gt; &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에서 새 공식 파일을 생성합니다 . 탭이 아직 설치되지 않은 경우 계속하기 전에 탭을 설치 / 복제 해보십시오. &lt;code&gt;homebrew/core&lt;/code&gt; 가 아닌 탭에서 공식을 추출하려면 정규화 된 형식의 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; 를 사용하십시오&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adba6aedb3e65cbc50f441b5241fd138f94406f2" translate="yes" xml:space="preserve">
          <source>Look through repository history to find the most recent version of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; and create a copy in &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/Formula/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;code&gt;@&lt;/code&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;. If the tap is not installed yet, attempt to install/clone the tap before continuing. To extract a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; from a tap that is not homebrew/core use &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">저장소 기록을 살펴보고 가장 최신 버전의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 찾고 &lt;code&gt;/Formula/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; &lt;code&gt;@&lt;/code&gt; &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; &lt;code&gt;.rb&lt;/code&gt; &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에서 사본을 만듭니다 . 탭이 아직 설치되지 않은 경우 계속하기 전에 탭을 설치 / 복제하십시오. homebrew / core가 아닌 탭에서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 추출하려면 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; / &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; / &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; 를 사용하십시오.&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2b7db65cdc5502b8ced8b3b220fb2eef46ed1419" translate="yes" xml:space="preserve">
          <source>Look through repository history to find the most recent version of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; and create a copy in &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/Formula/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;code&gt;@&lt;/code&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;. If the tap is not installed yet, attempt to install/clone the tap before continuing. To extract a formula from a tap that is not &lt;code&gt;homebrew/core&lt;/code&gt; use its fully-qualified form of &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">저장소 기록을 살펴보고 가장 최신 버전의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 찾고 &lt;code&gt;/Formula/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; &lt;code&gt;@&lt;/code&gt; &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; 을 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 하여 사본을 만듭니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; &lt;code&gt;.rb&lt;/code&gt; . 탭이 아직 설치되지 않은 경우 계속하기 전에 탭을 설치 / 복제 해보십시오. &lt;code&gt;homebrew/core&lt;/code&gt; 가 아닌 탭에서 공식을 추출하려면 정규화 된 형식의 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; 를 사용하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cad0da4f81275564b7385bd83f9566a832f3a83c" translate="yes" xml:space="preserve">
          <source>MD5 and SHA-1 Deprecation</source>
          <target state="translated">MD5 및 SHA-1 지원 중단</target>
        </trans-unit>
        <trans-unit id="a5c0948fb1255b2bb30f5e5f4f4352da2cc774ce" translate="yes" xml:space="preserve">
          <source>MPI</source>
          <target state="translated">MPI</target>
        </trans-unit>
        <trans-unit id="6e4d7baca5795528b8e0686a7c4d6a1ba142d1e7" translate="yes" xml:space="preserve">
          <source>Maintainer Guidelines</source>
          <target state="translated">관리자 지침</target>
        </trans-unit>
        <trans-unit id="5ce563e21b8be07e4d9e4006d6894792ae6105a5" translate="yes" xml:space="preserve">
          <source>Maintainers</source>
          <target state="translated">Maintainers</target>
        </trans-unit>
        <trans-unit id="e4bd0a0a7f30bbf89547ef2465e3ffa93cd614a7" translate="yes" xml:space="preserve">
          <source>Maintainers: Avoiding Burnout</source>
          <target state="translated">관리자 : 번 아웃 방지</target>
        </trans-unit>
        <trans-unit id="46e88a181d03bbc4f9c41711920f505bedf4915c" translate="yes" xml:space="preserve">
          <source>Maintaining a tap</source>
          <target state="translated">탭 유지</target>
        </trans-unit>
        <trans-unit id="182018437384810e3c5198d3d38af37ea5355ce4" translate="yes" xml:space="preserve">
          <source>Make any requested changes and commit them with &lt;code&gt;git add&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">요청 된 변경을 수행하고 &lt;code&gt;git add&lt;/code&gt; 및 &lt;code&gt;git commit&lt;/code&gt; 으로 커밋하십시오 .</target>
        </trans-unit>
        <trans-unit id="a95cfa2d979835e65e4564e5a497c31a28fb8abe" translate="yes" xml:space="preserve">
          <source>Make it build a command-line tool or a library by default and, if the GUI is useful and would be widely used, also build the GUI. Don&amp;rsquo;t build X11/XQuartz GUIs as they are a bad user experience on macOS.</source>
          <target state="translated">기본적으로 명령 행 도구 또는 라이브러리를 빌드하고 GUI가 유용하고 널리 사용되는 경우 GUI도 빌드하십시오. macOS에서는 X11 / XQuartz GUI가 나쁜 사용자 경험이므로 빌드하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a6d227c636d6f822321cc2cff4d90accb04755e1" translate="yes" xml:space="preserve">
          <source>Make sure you modify &lt;code&gt;s&lt;/code&gt;! This block ignores the returned value.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 를 수정하십시오 ! 이 블록은 반환 된 값을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="18041f1a4ac463a56de60a6de7d1f72b622ef66f" translate="yes" xml:space="preserve">
          <source>Make sure you run &lt;code&gt;brew update&lt;/code&gt; before you start. This turns your Homebrew installation into a Git repository.</source>
          <target state="translated">시작하기 전에 &lt;code&gt;brew update&lt;/code&gt; 를 실행하십시오 . 그러면 Homebrew 설치가 Git 리포지토리로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="64241de2b2b0b82681458a79ec21384f7c8c4c01" translate="yes" xml:space="preserve">
          <source>Make sure you write a good test as part of your formula. Refer to the &amp;ldquo;&lt;a href=&quot;formula-cookbook#add-a-test-to-the-formula&quot;&gt;Add a test to the formula&lt;/a&gt;&amp;rdquo; section of the Cookbook for help with this.</source>
          <target state="translated">공식의 일부로 좋은 테스트를 작성하십시오. 이에 대한 도움말은 요리 책의 &quot; &lt;a href=&quot;formula-cookbook#add-a-test-to-the-formula&quot;&gt;공식에 테스트 추가&lt;/a&gt; &quot;섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d067bbc2e24803ad128dd006c7e47c9b2baa64a" translate="yes" xml:space="preserve">
          <source>Make your changes. For formulae, use &lt;code&gt;brew edit&lt;/code&gt; or your favourite text editor, following all the guidelines in the &lt;a href=&quot;formula-cookbook&quot;&gt;Formula Cookbook&lt;/a&gt;.</source>
          <target state="translated">변경하십시오. 공식의 경우 &lt;code&gt;brew edit&lt;/code&gt; &lt;a href=&quot;formula-cookbook&quot;&gt;공식화의&lt;/a&gt; 경우 공식 요리 책 의 모든 지침에 따라 추출 편집 또는 자주 하는 텍스트 편집기를 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f166701590e0014844e77bf1194c3578ed038410" translate="yes" xml:space="preserve">
          <source>Manage background services with macOS&amp;rsquo; &lt;code&gt;launchctl&lt;/code&gt;(1) daemon manager.</source>
          <target state="translated">macOS의 &lt;code&gt;launchctl&lt;/code&gt; (1) 데몬 관리자로 백그라운드 서비스를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="cbd94c027c70a6cdd732a09fe80bdfb2d0c16d15" translate="yes" xml:space="preserve">
          <source>Manage background services with macOS&amp;rsquo; &lt;code&gt;launchctl&lt;/code&gt;(1) daemon manager. See &lt;code&gt;brew services --help&lt;/code&gt;.</source>
          <target state="translated">macOS로 백그라운드 서비스 관리 &lt;code&gt;launchctl&lt;/code&gt; (1) 데몬 관리자로 . &lt;code&gt;brew services --help&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18db59f31464766fdc98a66b87b9b223a47fe474" translate="yes" xml:space="preserve">
          <source>Manuals</source>
          <target state="translated">Manuals</target>
        </trans-unit>
        <trans-unit id="9cf6c2b5f0582ce2451031aba862b6b9a384eeb7" translate="yes" xml:space="preserve">
          <source>Many Homebrew Cask commands accept one or more &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; arguments. These can be specified the same way as the &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; arguments described in &lt;code&gt;SPECIFYING FORMULAE&lt;/code&gt; above.</source>
          <target state="translated">많은 Homebrew Cask 명령은 하나 이상의 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 인수를 허용합니다. 위의 &lt;code&gt;SPECIFYING FORMULAE&lt;/code&gt; 설명 된 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 인수 와 동일한 방식으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a8b73e2e8406106481bfef1e72454aa2de76f02" translate="yes" xml:space="preserve">
          <source>Many Homebrew commands accept one or more &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; arguments. These arguments can take several different forms:</source>
          <target state="translated">많은 Homebrew 명령은 하나 이상의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 허용합니다&lt;em&gt;&lt;/em&gt; 인수를 허용합니다. 이러한 주장은 몇 가지 다른 형태를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c6cdfe8b621f40631741f9de97a1e16d10f6021" translate="yes" xml:space="preserve">
          <source>Members are expected to remain active within Homebrew, and are required to affirm their continued interest in Homebrew membership annually.</source>
          <target state="translated">회원은 Homebrew 내에서 활동적인 상태를 유지해야하며 매년 Homebrew 멤버십에 대한 지속적인 관심을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c634bcbbf24c335f526920e4bbabf8b2d24a7fc0" translate="yes" xml:space="preserve">
          <source>Members may be dismissed by majority vote of the Project Leadership Committee and removed from the Homebrew organisation on GitHub. Removed members may be reinstated by the usual admission process.</source>
          <target state="translated">프로젝트 리더쉽위원회의 과반수 투표로 회원을 기각하고 GitHub의 Homebrew 조직에서 탈퇴 할 수 있습니다. 삭제 된 회원은 일반적인 입학 절차에 따라 복원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13a975b4c534bd0df4f019fc33c9089de13f89b2" translate="yes" xml:space="preserve">
          <source>Members may cast a vote any time up to three weeks prior to the election date.</source>
          <target state="translated">회원은 선거일 3 주 전까지 투표 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f8bd2031b34f205f71628026cea157136d662eb" translate="yes" xml:space="preserve">
          <source>Members may vote in all general elections and resolutions, hold office for Homebrew, and participate in all other membership functions.</source>
          <target state="translated">회원은 모든 총선 및 결의안에 투표 할 수 있고, 홈브류에 대한 직책을 맡고, 다른 모든 회원 기능에 참여할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a176626d1ab572fcc4a5a6603d546b36673599a" translate="yes" xml:space="preserve">
          <source>Members shall vote on any amendments by approving or requesting changes on the GitHub pull request. Voting will close three weeks after an amendment is proposed, and all votes tallied.</source>
          <target state="translated">회원은 GitHub 풀 요청에 대한 변경을 승인하거나 요청하여 수정 사항에 투표해야합니다. 투표는 수정안이 제안 된 후 3 주 후에 마감되며 모든 투표는 집계됩니다.</target>
        </trans-unit>
        <trans-unit id="3fe381ddee55da4dc9ef4c3f0ff8f39aadbf77e2" translate="yes" xml:space="preserve">
          <source>Members should abstain from voting when they have a conflict of interest not shared by other members. No one may be compelled to abstain from voting.</source>
          <target state="translated">다른 회원이 공유하지 않은 이해의 상충이있는 경우 회원은 투표를 삼가야합니다. 투표를 자제해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="caef62a004c44aeebaeff5a89c90fde1b3810abc" translate="yes" xml:space="preserve">
          <source>Messaging</source>
          <target state="translated">Messaging</target>
        </trans-unit>
        <trans-unit id="20c1f08ef94149f97a225abe82ce6f7d43ac6f69" translate="yes" xml:space="preserve">
          <source>Method Signatures</source>
          <target state="translated">방법 서명</target>
        </trans-unit>
        <trans-unit id="028db85bcc709628fe2da43173cf337cd2ad6ac4" translate="yes" xml:space="preserve">
          <source>Migrate renamed packages to new name, where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are old names of packages.</source>
          <target state="translated">이름이 바뀐 패키지를 새 이름으로 마이그레이션하십시오. 여기서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 은 패키지의 이전 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4574f4251532184f855a320a9e60af26a35e6467" translate="yes" xml:space="preserve">
          <source>Migrate renamed packages to new names, where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are old names of packages.</source>
          <target state="translated">이름이 변경된 패키지를 새 이름으로 마이그레이션합니다. 여기서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 은 패키지의 이전 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f47c8914441f13fcfb8fb20e5b656ff12ce45573" translate="yes" xml:space="preserve">
          <source>Migrating A Formula To A Tap</source>
          <target state="translated">수식을 탭으로 마이그레이션</target>
        </trans-unit>
        <trans-unit id="8a69bf48887129d109243656ce1dc01f50dddbb1" translate="yes" xml:space="preserve">
          <source>Mind that GitHub doesn&amp;rsquo;t allow styling in Markdown documents. Where styling is allowed (e.g. in the exported brew.sh version of the documentation), always set a background colour of &lt;code&gt;white&lt;/code&gt; for the diagram. That&amp;rsquo;s the colour draw.io assumes, and keeps the diagram easy to read in dark mode without further customization. You can use the CSS selector &lt;code&gt;img[src$=&quot;.drawio.svg&quot;]&lt;/code&gt; for styling.</source>
          <target state="translated">GitHub는 Markdown 문서에서 스타일링을 허용하지 않습니다. 스타일링이 허용되는 경우 (예 : 문서의 내 보낸 brew.sh 버전에서) 다이어그램의 배경색을 항상 &lt;code&gt;white&lt;/code&gt; 으로 설정하십시오. 이것이 draw.io가 가정하는 색상이며 추가 사용자 정의없이 어두운 모드에서 다이어그램을 읽기 쉽게 유지합니다. 스타일 지정을 위해 CSS 선택기 &lt;code&gt;img[src$=&quot;.drawio.svg&quot;]&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6b9f946757df9889ef0f8ad8c39d50a537fe4d1" translate="yes" xml:space="preserve">
          <source>More generally, parallel list item structure</source>
          <target state="translated">보다 일반적으로 병렬 목록 항목 구조</target>
        </trans-unit>
        <trans-unit id="0d3920c374a3ea56eab164ac91251abb5d8348d8" translate="yes" xml:space="preserve">
          <source>Most formulae presently just install to &lt;code&gt;prefix&lt;/code&gt;.</source>
          <target state="translated">대부분의 공식은 현재 &lt;code&gt;prefix&lt;/code&gt; 에 설치 합니다 .</target>
        </trans-unit>
        <trans-unit id="0bb159e4784c0187b2469ee124ab752feb738940" translate="yes" xml:space="preserve">
          <source>Multiple installations</source>
          <target state="translated">여러 설치</target>
        </trans-unit>
        <trans-unit id="12024bd676b0ce21e884a73cce9a255f012b3d42" translate="yes" xml:space="preserve">
          <source>My Mac &lt;code&gt;.app&lt;/code&gt;s don&amp;rsquo;t find &lt;code&gt;/usr/local/bin&lt;/code&gt; utilities!</source>
          <target state="translated">내 Mac &lt;code&gt;.app&lt;/code&gt; 에서 &lt;code&gt;/usr/local/bin&lt;/code&gt; 유틸리티를 찾지 못했습니다 !</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="4de116303d8ea40cca3552b919bbe3879fce37f1" translate="yes" xml:space="preserve">
          <source>Name the formula like the project markets the product. So it&amp;rsquo;s &lt;code&gt;pkg-config&lt;/code&gt;, not &lt;code&gt;pkgconfig&lt;/code&gt;; &lt;code&gt;sdl_mixer&lt;/code&gt;, not &lt;code&gt;sdl-mixer&lt;/code&gt; or &lt;code&gt;sdlmixer&lt;/code&gt;.</source>
          <target state="translated">프로젝트가 제품을 판매하는 것과 같은 공식의 이름을 지정하십시오. 그것의 그래서 &lt;code&gt;pkg-config&lt;/code&gt; 하지 &lt;code&gt;pkgconfig&lt;/code&gt; ; &lt;code&gt;sdl_mixer&lt;/code&gt; 하지 &lt;code&gt;sdl-mixer&lt;/code&gt; 또는 &lt;code&gt;sdlmixer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2e2024ca791c71227a871bb996bce7fc78090a1" translate="yes" xml:space="preserve">
          <source>Named arguments can be accessed by calling &lt;code&gt;args.named&lt;/code&gt;. Check out the internal &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/cmd&quot;&gt;commands&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/dev-cmd&quot;&gt;developer commands&lt;/a&gt; for more usage examples.</source>
          <target state="translated">명명 된 인수는 &lt;code&gt;args.named&lt;/code&gt; 를 호출하여 액세스 할 수 있습니다 . 더 많은 사용 예제 는 내부 &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/cmd&quot;&gt;명령&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/dev-cmd&quot;&gt;개발자 명령&lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca51a5f12a8944444eaf1813f0d8c8d389d5eca1" translate="yes" xml:space="preserve">
          <source>Names of commands like &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;brew&lt;/code&gt; are styled in &lt;code&gt;fixed width font&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; 및 &lt;code&gt;brew&lt;/code&gt; 와 같은 명령의 이름은 &lt;code&gt;fixed width font&lt;/code&gt; 로 스타일이 지정됩니다</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="3aa06a78df2d37fa11ca02c258b6aa29b39cc9a8" translate="yes" xml:space="preserve">
          <source>Naming your formulae to avoid clashes</source>
          <target state="translated">충돌을 피하기 위해 수식 이름 지정</target>
        </trans-unit>
        <trans-unit id="e30e2d4b758955715f07a63206e94f2425c49038" translate="yes" xml:space="preserve">
          <source>New Maintainer Checklist</source>
          <target state="translated">새로운 관리자 점검표</target>
        </trans-unit>
        <trans-unit id="3f2037e484d65e8a645066226f31f04893da6ab0" translate="yes" xml:space="preserve">
          <source>New formulae being submitted to Homebrew should run &lt;code&gt;brew audit --new-formula foo&lt;/code&gt;. This command is performed by the Brew Test Bot on new submissions as part of the automated build and test process, and highlights more potential issues than the standard audit.</source>
          <target state="translated">Homebrew에 제출되는 새 공식은 &lt;code&gt;brew audit --new-formula foo&lt;/code&gt; 를 실행해야합니다 . 이 명령은 자동 빌드 및 테스트 프로세스의 일부로 새로운 제출에 대해 Brew 테스트 봇이 수행하며 표준 감사보다 더 많은 잠재적 인 문제를 강조합니다.</target>
        </trans-unit>
        <trans-unit id="f218cd6252808da87791ec278d10c185277a9379" translate="yes" xml:space="preserve">
          <source>New members will be admitted by an ordinary resolution of the PLC and added to the Homebrew organisation on GitHub.</source>
          <target state="translated">신규 회원은 PLC의 일반 결의에 따라 승인되고 GitHub의 Homebrew 조직에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="6baec85216200d7e2a6acaacf5ab5261a88cbb31" translate="yes" xml:space="preserve">
          <source>New members will be admitted by majority vote of the Project Leadership Committee (PLC) and added to the Homebrew organisation on GitHub.</source>
          <target state="translated">신입 회원은 프로젝트 리더쉽위원회 (PLC)의 과반수 투표로 입국하여 GitHub의 Homebrew 조직에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="dfa089f20c3217c400784371968621ebb2c42420" translate="yes" xml:space="preserve">
          <source>Next, you will want to go through the &lt;a href=&quot;acceptable-formulae&quot;&gt;Acceptable Formulae&lt;/a&gt; documentation to determine if the software is an appropriate addition to Homebrew. If you are creating a formula for an alternative version of software already in Homebrew (for example, a major/minor version that significantly differs from the existing version), be sure to read the &lt;a href=&quot;versions&quot;&gt;Versions&lt;/a&gt; documentation to understand versioned formulae requirements.</source>
          <target state="translated">다음으로 &lt;a href=&quot;acceptable-formulae&quot;&gt;Acceptable Formulas&lt;/a&gt; 문서를 검토하여 소프트웨어가 Homebrew에 적절한 추가인지 확인합니다. 이미 Homebrew에있는 대체 버전의 소프트웨어에 대한 공식을 만드는 경우 (예 : 기존 버전과 크게 다른 주 / 부 버전) &lt;a href=&quot;versions&quot;&gt;버전&lt;/a&gt; 설명서를 읽고 버전 이 지정된 공식 요구 사항을 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="a87f8b293cbb25611b42ed51f399d79915ee3a90" translate="yes" xml:space="preserve">
          <source>Niche (or self-submitted) stuff</source>
          <target state="translated">틈새 (또는 자체 제출) 물건</target>
        </trans-unit>
        <trans-unit id="33a890f42805bc196093ce7ebafa91e0a4d4f5ce" translate="yes" xml:space="preserve">
          <source>Nilable Types</source>
          <target state="translated">Nilable 유형</target>
        </trans-unit>
        <trans-unit id="f0c9482559b8dbcae071a99fedf5f9463d8adb8c" translate="yes" xml:space="preserve">
          <source>No &amp;ldquo;$&amp;rdquo; with environment variables mentioned outside code snippets</source>
          <target state="translated">코드 스 니펫 외부에 언급 된 환경 변수가있는 &quot;$&quot;없음</target>
        </trans-unit>
        <trans-unit id="856d4f5a2e2726b9bef4f8d8a89b6982735b12b1" translate="yes" xml:space="preserve">
          <source>No &amp;ldquo;TM&amp;rdquo;, &amp;trade;, &lt;sup&gt;SM&lt;/sup&gt;, &amp;copy;, &amp;reg;, or other explicit indicators of rights ownership or trademarks; we take these as understood when the brand name is mentioned</source>
          <target state="translated">&amp;ldquo;TM&amp;rdquo;, &amp;trade;, &lt;sup&gt;SM&lt;/sup&gt; , &amp;copy;, &amp;reg; 또는 기타 권리 소유권 또는 상표의 명시 적 지표는 없습니다. 우리는 브랜드 이름을 언급 할 때 이해 한대로 이것을 사용합니다</target>
        </trans-unit>
        <trans-unit id="72192711334e8c95c0e149ce1ef413303687f564" translate="yes" xml:space="preserve">
          <source>No Oxford commas</source>
          <target state="translated">옥스포드 쉼표 없음</target>
        </trans-unit>
        <trans-unit id="c3fbad3607fabb7a7818d301b73e6cc585729452" translate="yes" xml:space="preserve">
          <source>No amendment may be proposed which violates Software Freedom Conservancy policies. The PLC may veto such an amendment by an ordinary resolution.</source>
          <target state="translated">소프트웨어 자유 보존 정책을 위반하는 개정안은 제안 될 수 없습니다. PLC는 일반적인 해결책으로 그러한 개정을 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00bfc42aa04161b50dc44a542c6f1809f50107a4" translate="yes" xml:space="preserve">
          <source>No configuration is needed if you&amp;rsquo;re using Homebrew&amp;rsquo;s &lt;code&gt;fish&lt;/code&gt;. Friendly!</source>
          <target state="translated">Homebrew의 &lt;code&gt;fish&lt;/code&gt; 를 사용하는 경우 구성이 필요하지 않습니다 . 친한!</target>
        </trans-unit>
        <trans-unit id="8499de41f255df5abf99eaca2ccc0e70c6d31bce" translate="yes" xml:space="preserve">
          <source>No configuration is needed in &lt;code&gt;fish&lt;/code&gt;. Friendly!</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 에는 구성이 필요하지 않습니다 . 친한!</target>
        </trans-unit>
        <trans-unit id="1c9701a6947d56a6d8e06cff81a8daddc463da4f" translate="yes" xml:space="preserve">
          <source>No more than five versions of a formula (including the main one) will be supported at any given time, regardless of usage. When removing formulae that violate this, we will aim to do so based on usage and support status rather than age.</source>
          <target state="translated">사용에 관계없이 주어진 시간에 공식의 5 개 버전 (기본 버전 포함) 만 지원됩니다. 이를 위반하는 공식을 제거 할 때는 연령이 아닌 사용 및 지원 상태를 기준으로 제거하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="dd7d98d1c61e58ec03027bc9bd082f6335231477" translate="yes" xml:space="preserve">
          <source>No more than five versions of a formula (including the non-versioned one) will be supported at any given time, regardless of usage. When removing formulae that violate this we will aim to do so based on usage and support status rather than age.</source>
          <target state="translated">사용법에 관계없이 주어진 시간에 수식의 버전 (버전이없는 버전 포함)을 5 개 이하 만 지원합니다. 이를 위반하는 공식을 제거 할 때는 연령이 아닌 사용 및 지원 상태를 기준으로하는 것이 목표입니다.</target>
        </trans-unit>
        <trans-unit id="576b313436652b5c3622e46ac17efb7849833e09" translate="yes" xml:space="preserve">
          <source>No more than two employees of the same employer may serve on the PLC.</source>
          <target state="translated">동일한 고용주의 직원 두 명 이상이 PLC에서 일할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="046fa881911e3b349e27c1c25231249e06376174" translate="yes" xml:space="preserve">
          <source>No more than two employees of the same employer may serve on the TSC.</source>
          <target state="translated">동일한 고용주의 직원은 2 명 이상이 TSC에서 일할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2207f221090bcb12789f81944f08393e7d74ccff" translate="yes" xml:space="preserve">
          <source>Node for Formula Authors</source>
          <target state="translated">공식 저자를위한 노드</target>
        </trans-unit>
        <trans-unit id="f4bc49656d07ca487936a0177db99faf69b97dba" translate="yes" xml:space="preserve">
          <source>Node modules should be installed to &lt;code&gt;libexec&lt;/code&gt;. This prevents the Node modules from contaminating the global &lt;code&gt;node_modules&lt;/code&gt;, which is important so that npm doesn&amp;rsquo;t try to manage Homebrew-installed Node modules.</source>
          <target state="translated">노드 모듈은 &lt;code&gt;libexec&lt;/code&gt; 에 설치해야합니다 . 이렇게하면 노드 모듈이 전역 &lt;code&gt;node_modules&lt;/code&gt; 를 오염 시키지 않습니다. 이는 npm이 Homebrew에 설치된 노드 모듈을 관리하지 않도록하는 데 중요합니다.</target>
        </trans-unit>
        <trans-unit id="4f351a2891e32d28acbe9eda3018a29b91f5bd50" translate="yes" xml:space="preserve">
          <source>Node modules which are compatible with the latest Node version should declare a dependency on the &lt;code&gt;node&lt;/code&gt; formula.</source>
          <target state="translated">최신 노드 버전과 호환되는 노드 모듈은 &lt;code&gt;node&lt;/code&gt; 공식 에 대한 종속성을 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="dffaebab2d21877b09e3d9778a9c0724ba2e421e" translate="yes" xml:space="preserve">
          <source>Not (yet) working on Apple Silicon.</source>
          <target state="translated">(아직) Apple Silicon에서 일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a6af498ab842e58d53d5419e367a36751a9b222e" translate="yes" xml:space="preserve">
          <source>Not all projects have makefiles that will run in parallel so try to deparallelize by adding these lines to the &lt;code&gt;install&lt;/code&gt; method:</source>
          <target state="translated">모든 프로젝트에 병렬로 실행되는 make 파일이있는 것은 아니므로 &lt;code&gt;install&lt;/code&gt; 메소드에 다음 행을 추가하여 병렬화를 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="4adb66fe0b0ceb558fc7e75c19e0728261b929fa" translate="yes" xml:space="preserve">
          <source>Note none of these exceptions is a guarantee for inclusion, but examples of situations where we may take a second look.</source>
          <target state="translated">이러한 예외 중 어느 것도 포함을 보장하는 것은 아니지만 다시 검토 할 수있는 상황의 예입니다.</target>
        </trans-unit>
        <trans-unit id="118d9399c80f058418f7a8f5ec45555d31c7f446" translate="yes" xml:space="preserve">
          <source>Note on &lt;code&gt;pip install --user&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pip install --user&lt;/code&gt; 에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="b4aede72e443ce4fdede7ccd555f47d225aafaca" translate="yes" xml:space="preserve">
          <source>Note that environment variables must have a value set to be detected. For example, &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; rather than just &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt;.</source>
          <target state="translated">환경 변수에는 감지되도록 설정된 값이 있어야합니다. 예를 들어, &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; 만 &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt; 대신 HOMEBREW_NO_INSECURE_REDIRECT = 1을 내보내십시오 .</target>
        </trans-unit>
        <trans-unit id="7048a2019446c6b5fb1e194e1fc943aa02bcd764" translate="yes" xml:space="preserve">
          <source>Note that environment variables must have a value set to be detected. For example, run &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; rather than just &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt;.</source>
          <target state="translated">환경 변수에는 감지 할 값이 설정되어 있어야합니다. 예를 들어, &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; 대신 export HOMEBREW_NO_INSECURE_REDIRECT = 1을 실행 &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c024978ef10531f692a33d122ef392e58285c88" translate="yes" xml:space="preserve">
          <source>Note that in the context of Homebrew, &lt;a href=&quot;https://rubydoc.brew.sh/Formula#libexec-instance_method&quot;&gt;&lt;code&gt;libexec&lt;/code&gt;&lt;/a&gt; is reserved for private use by the formula and therefore is not symlinked into &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt;.</source>
          <target state="translated">Homebrew와 관련하여 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#libexec-instance_method&quot;&gt; &lt;code&gt;libexec&lt;/code&gt; &lt;/a&gt; 는 공식에 의해 개인용으로 예약되어 있으므로 HOMEBREW_PREFIX로 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="28fe0b8b012e829f4d76cb67f61090e014f9d398" translate="yes" xml:space="preserve">
          <source>Note that pinned, outdated formulae that another formula depends on need to be upgraded when required as we do not allow formulae to be built against non-latest versions.</source>
          <target state="translated">최신이 아닌 버전에 대해 수식을 작성할 수 없으므로 다른 수식이 의존하는 고정 된 오래된 수식은 필요할 때 업그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="445c99e3cc0208dbc6511c137370f3c837db27a0" translate="yes" xml:space="preserve">
          <source>Note that pinned, outdated formulae that another formula depends on need to be upgraded when required, as we do not allow formulae to be built against outdated versions. If this is not desired, you can instead &lt;code&gt;brew extract&lt;/code&gt; to &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;maintain your own copy of the formula in a tap&lt;/a&gt;.</source>
          <target state="translated">다른 수식이 사용하는 고정 된 오래된 수식은 필요할 때 업그레이드해야합니다. 오래된 버전에 대해서는 수식을 만들 수 없습니다. 이것이 바람직하지 않다면, 대신 &lt;code&gt;brew extract&lt;/code&gt; &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;하여 탭 한 번으로 자신의 공식 사본&lt;/a&gt; 을 유지할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7983598d308539249648f8aa5116e9105a3d1fc2" translate="yes" xml:space="preserve">
          <source>Note that this will install some other dependencies like &lt;code&gt;Module::Install&lt;/code&gt;. Then put the appropriate incantation in your shell&amp;rsquo;s startup, e.g. for &lt;code&gt;.bash_profile&lt;/code&gt; you insert the below, for others see the &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt;&lt;code&gt;local::lib&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">이렇게하면 &lt;code&gt;Module::Install&lt;/code&gt; 과 같은 다른 종속성이 설치 됩니다. 그런 다음 적절한 시작을 쉘 시작에 넣으십시오 ( 예 : &lt;code&gt;.bash_profile&lt;/code&gt; 의 경우 아래를 삽입하십시오). 다른 사람은 &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt; &lt;code&gt;local::lib&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57856b2e8523128cc5671f25bfc72e52cf485983" translate="yes" xml:space="preserve">
          <source>Note that this will install some other dependencies like &lt;code&gt;Module::Install&lt;/code&gt;. Then put the appropriate incantation in your shell&amp;rsquo;s startup, e.g. for &lt;code&gt;.profile&lt;/code&gt; you insert the below, for others see the &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt;&lt;code&gt;local::lib&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">이것은 &lt;code&gt;Module::Install&lt;/code&gt; 과 같은 다른 종속성을 설치합니다 . 그런 다음 쉘의 시작에 적절한 주문을 넣으십시오. &lt;code&gt;.profile&lt;/code&gt; 을 넣으십시오. .profile의 경우 아래에 삽입하고 다른 사람들은 &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt; &lt;code&gt;local::lib&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fecc03474ef11c09860e963a61b40ebeb46cea37" translate="yes" xml:space="preserve">
          <source>Note that values &lt;em&gt;can&lt;/em&gt; contain unescaped spaces if you use the multiple-argument form of &lt;code&gt;system&lt;/code&gt;.</source>
          <target state="translated">다중 인수 형식의 &lt;code&gt;system&lt;/code&gt; 을 사용하는 경우 값에 이스케이프되지 않은 공백 &lt;em&gt;이&lt;/em&gt; 포함될 &lt;em&gt;수&lt;/em&gt; 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1fd48ef59f46c5e3bd381c0a0ccc3b778c3b48e4" translate="yes" xml:space="preserve">
          <source>Note they are largely untested, and as always, be careful about running untested code on your machine.</source>
          <target state="translated">그것들은 대체로 테스트되지 않았으며 항상 그렇듯이 컴퓨터에서 테스트되지 않은 코드를 실행할 때주의하십시오.</target>
        </trans-unit>
        <trans-unit id="90d4be0e63836af674b2d1670cd473c3a6b7c7d3" translate="yes" xml:space="preserve">
          <source>Note this can also be installed with &lt;code&gt;brew install brew-gem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew install brew-gem&lt;/code&gt; 을 사용하여 설치할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f18c61284073d5c7c424af5355cd3fc82bee30f" translate="yes" xml:space="preserve">
          <source>Note, &lt;code&gt;easy_install&lt;/code&gt; is deprecated. We install &lt;code&gt;pip&lt;/code&gt; (or &lt;code&gt;pip2&lt;/code&gt; for Python 2) along with python/python2.</source>
          <target state="translated">참고 &lt;code&gt;easy_install&lt;/code&gt; 을가 되지 않습니다. python / python2와 함께 &lt;code&gt;pip&lt;/code&gt; (또는 Python 2의 경우 &lt;code&gt;pip2&lt;/code&gt; ) 를 설치 합니다.</target>
        </trans-unit>
        <trans-unit id="4990abde6ed95ee0302000d9e0fc12559f49c68b" translate="yes" xml:space="preserve">
          <source>Now (after you restart your shell) &lt;code&gt;cpan&lt;/code&gt; or &lt;code&gt;perl -MCPAN -eshell&lt;/code&gt; etc. will install modules and binaries in &lt;code&gt;~/perl5&lt;/code&gt; and the relevant subdirectories will be in your &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;PERL5LIB&lt;/code&gt; etc.</source>
          <target state="translated">이제 (쉘을 다시 시작한 후) &lt;code&gt;cpan&lt;/code&gt; 또는 &lt;code&gt;perl -MCPAN -eshell&lt;/code&gt; 등은 &lt;code&gt;~/perl5&lt;/code&gt; 에 모듈 및 바이너리를 설치 하고 관련 하위 디렉토리는 &lt;code&gt;PATH&lt;/code&gt; 및 &lt;code&gt;PERL5LIB&lt;/code&gt; 등에 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa1ba4586eb9bc9d65d1a0bf71ebd1f609a4338c" translate="yes" xml:space="preserve">
          <source>Now just paste into the formula after &lt;code&gt;__END__&lt;/code&gt;. Instead of &lt;code&gt;git diff | pbcopy&lt;/code&gt;, for some editors &lt;code&gt;git diff &amp;gt;&amp;gt; path/to/your/formula/foo.rb&lt;/code&gt; might help you ensure that the patch is not touched, e.g. white space removal, indentation changes, etc.</source>
          <target state="translated">이제 &lt;code&gt;__END__&lt;/code&gt; 뒤에 수식에 붙여 넣으십시오 . &lt;code&gt;git diff | pbcopy&lt;/code&gt; 대신 | pbcopy , 일부 편집기의 경우 &lt;code&gt;git diff &amp;gt;&amp;gt; path/to/your/formula/foo.rb&lt;/code&gt; 는 공백 제거, 들여 쓰기 변경 등과 같이 패치가 닿지 않도록하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f90f4ed2e70c9b79835ddcf0323614cbef685c29" translate="yes" xml:space="preserve">
          <source>Now that &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;homebrew/versions&lt;/a&gt; has been deprecated, &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; supports multiple versions of formulae with a new naming format.</source>
          <target state="translated">이제 &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;사제 / 버전이&lt;/a&gt; 사용되지 않습니다, &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;사제는 / 코어는&lt;/a&gt; 새로운 명명 형식 식의 여러 버전을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9d509b01c9cb6909be534f56cb0ac67fed17c54d" translate="yes" xml:space="preserve">
          <source>Now you just need to push your commit to GitHub.</source>
          <target state="translated">이제 커밋을 GitHub에 푸시하면됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
