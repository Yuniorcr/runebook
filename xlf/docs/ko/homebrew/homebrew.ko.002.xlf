<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="homebrew">
    <body>
      <group id="homebrew">
        <trans-unit id="ab34aa5158f17df2684724524bfb683192a9d6d1" translate="yes" xml:space="preserve">
          <source>Brewed Python modules</source>
          <target state="translated">양조 된 파이썬 모듈</target>
        </trans-unit>
        <trans-unit id="2ba117675e2690fc1906a76ac935b7b8fbe20c09" translate="yes" xml:space="preserve">
          <source>Brewed Ruby installs executables to &lt;code&gt;$(brew --prefix)/opt/ruby/bin&lt;/code&gt; without sudo. You should add this to your path. See the caveats in the &lt;code&gt;ruby&lt;/code&gt; formula for up-to-date information.</source>
          <target state="translated">Brewed Ruby는 sudo없이 &lt;code&gt;$(brew --prefix)/opt/ruby/bin&lt;/code&gt; 실행 파일을 설치합니다 . 이것을 경로에 추가해야합니다. 최신 정보 는 &lt;code&gt;ruby&lt;/code&gt; 공식 의 경고를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2c1c1a41770789a3194dde76c3bf9c71fce88fd" translate="yes" xml:space="preserve">
          <source>British/Commonwealth English over American English, in general</source>
          <target state="translated">일반적으로 미국 영어보다 영국 / 연방 영어</target>
        </trans-unit>
        <trans-unit id="5f2f142ecc4f6157f5f3efc95b77519e73f38355" translate="yes" xml:space="preserve">
          <source>Build Python 2 bindings with the system Python by default (don&amp;rsquo;t add an option) and they should be usable with any binary-compatible Python. If that isn&amp;rsquo;t the case, it&amp;rsquo;s an upstream bug; &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;here&amp;rsquo;s some advice for resolving it&lt;/a&gt;.</source>
          <target state="translated">기본적으로 시스템 Python으로 Python 2 바인딩을 빌드하고 (옵션을 추가하지 마십시오) 이진 호환 Python에서 사용할 수 있어야합니다. 그렇지 않은 경우 업스트림 버그입니다. &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;이를 해결하기위한 몇 가지 조언이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e2faddc21d448749b08bc5834af52ee77a372ec" translate="yes" xml:space="preserve">
          <source>Build bottles for these formulae with GitHub Actions.</source>
          <target state="translated">GitHub Actions를 사용하여 이러한 수식에 대한 병을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ea666ab76229fd30f7179e78105b27f9645a5ab4" translate="yes" xml:space="preserve">
          <source>Build flags</source>
          <target state="translated">빌드 플래그</target>
        </trans-unit>
        <trans-unit id="475045e6dcc498aef4aab77008dfb15af7ca11c2" translate="yes" xml:space="preserve">
          <source>Building Against Non-Homebrew Dependencies</source>
          <target state="translated">비 Homebrew 종속성에 대한 빌드</target>
        </trans-unit>
        <trans-unit id="aca6c8a1f1d408537ea56c968172121e516be39c" translate="yes" xml:space="preserve">
          <source>Bundler for non-Ruby dependencies from Homebrew, Homebrew Cask and the Mac App Store. See &lt;code&gt;brew bundle --help&lt;/code&gt;.</source>
          <target state="translated">Homebrew, Homebrew Cask 및 Mac App Store의 비 Ruby 종속성에 대한 번 들러. &lt;code&gt;brew bundle --help&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9085e3e6ed79a715d0dfaff1ea82cc93f5829caa" translate="yes" xml:space="preserve">
          <source>Bundler for non-Ruby dependencies from Homebrew, Homebrew Cask, Mac App Store and Whalebrew.</source>
          <target state="translated">Homebrew, Homebrew Cask, Mac App Store 및 Whalebrew의 비 Ruby 종속성을위한 번 들러입니다.</target>
        </trans-unit>
        <trans-unit id="0089b5a32c590507ebc5a4d534fa46d01dda08f3" translate="yes" xml:space="preserve">
          <source>But be consistent within a single document</source>
          <target state="translated">그러나 단일 문서 내에서 일관성을 유지하십시오</target>
        </trans-unit>
        <trans-unit id="d2f2201ecd09717758020d1ab1efa3d4273b8554" translate="yes" xml:space="preserve">
          <source>By default packages that require BLAS/LAPACK linear algebra interfaces should link to &lt;a href=&quot;https://www.openblas.net/&quot;&gt;OpenBLAS&lt;/a&gt; using &lt;code&gt;depends_on &quot;openblas&quot;&lt;/code&gt; and passing &lt;code&gt;-DBLA_VENDOR=OpenBLAS&lt;/code&gt; to CMake (applies to CMake based formula only) rather than Apple&amp;rsquo;s Accelerate framework, or the default reference lapack implementation. Apple&amp;rsquo;s implementation of BLAS/LAPACK is outdated and may introduce hard-to-debug problems. The reference &lt;code&gt;lapack&lt;/code&gt; formula is fine, although it is not actively maintained or tuned. For this reason, formulae needing BLAS/LAPACK should link with OpenBLAS.</source>
          <target state="translated">BLAS 필요할 기본 패키지 저자 / LAPACK 선형 대수 인터페이스에 연결되어야 &lt;a href=&quot;https://www.openblas.net/&quot;&gt;OpenBLAS&lt;/a&gt; 사용 &lt;code&gt;depends_on &quot;openblas&quot;&lt;/code&gt; 및 전달 &lt;code&gt;-DBLA_VENDOR=OpenBLAS&lt;/code&gt; 을 CMake로 (적용 CMake 기반 화학식 만 행)보다 애플 가속기구, 또는 디폴트 참조 LAPACK 구현. Apple의 BLAS / LAPACK 구현은 구식이며 디버그하기 어려운 문제가 발생할 수 있습니다. 참조 &lt;code&gt;lapack&lt;/code&gt; 공식은 적극적으로 유지 관리되거나 조정되지 않았지만 괜찮습니다. 따라서 BLAS / LAPACK이 필요한 공식은 OpenBLAS와 연결되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d561281ad26debde10330b3ff838d725b27d4c91" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;uses&lt;/code&gt; shows all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as a required or recommended dependency.</source>
          <target state="translated">기본적으로 &lt;code&gt;uses&lt;/code&gt; 프로그램을 지정하는 모든 수식을 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 요구 또는 권장 의존성 등을.</target>
        </trans-unit>
        <trans-unit id="44e26d2aeed140d096f19a03056f300591b34237" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;uses&lt;/code&gt; shows usage of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; by stable builds.</source>
          <target state="translated">기본적으로 &lt;code&gt;uses&lt;/code&gt; 은 안정적인 빌드에 의한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="32d6dae66a69d36a1ccbb7ac4d909bc762802e6d" translate="yes" xml:space="preserve">
          <source>By default, bottles will be built for the oldest CPU supported by the OS/architecture you&amp;rsquo;re building for (Core 2 for 64-bit OSs). This ensures that bottles are compatible with all computers you might distribute them to. If you &lt;em&gt;really&lt;/em&gt; want your bottles to be optimised for something else, you can pass the &lt;code&gt;--bottle-arch=&lt;/code&gt; option to build for another architecture; for example, &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt;. Just remember that if you build for a newer architecture some of your users might get binaries they can&amp;rsquo;t run and that would be sad!</source>
          <target state="translated">기본적으로 Bottle은 빌드중인 OS / 아키텍처에서 지원하는 가장 오래된 CPU (64 비트 OS 용 Core 2) 용으로 빌드됩니다. 이렇게하면 병을 배포 할 수있는 모든 컴퓨터와 호환됩니다. 당신이 경우 &lt;em&gt;정말&lt;/em&gt; 당신의 병이 다른 뭔가를 최적화하려면, 당신은 통과 할 수 &lt;code&gt;--bottle-arch=&lt;/code&gt; 다른 아키텍처에 대한 빌드 옵션을; 예를 들어 &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt; . 새로운 아키텍처를 위해 빌드하는 경우 일부 사용자는 바이너리를 실행할 수 없으며 이는 슬프다는 점을 기억하십시오!</target>
        </trans-unit>
        <trans-unit id="73605df8c1e8e0542fe83cc2cd05e409608ec801" translate="yes" xml:space="preserve">
          <source>By default, bottles will be built for the oldest CPU supported by the OS/architecture you&amp;rsquo;re building for (Core 2 for 64-bit OSs). This ensures that bottles are compatible with all computers you might distribute them to. If you &lt;em&gt;really&lt;/em&gt; want your bottles to be optimized for something else, you can pass the &lt;code&gt;--bottle-arch=&lt;/code&gt; option to build for another architecture; for example, &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt;. Just remember that if you build for a newer architecture some of your users might get binaries they can&amp;rsquo;t run and that would be sad!</source>
          <target state="translated">기본적으로 bottle은 빌드하려는 OS / 아키텍처 (64 비트 OS의 경우 코어 2)에서 지원하는 가장 오래된 CPU를 위해 빌드됩니다. 이렇게하면 병이 배포 할 수있는 모든 컴퓨터와 호환됩니다. 당신이 경우 &lt;em&gt;정말&lt;/em&gt; 당신의 병이 다른 뭔가를 최적화하려면, 당신은 통과 할 수 &lt;code&gt;--bottle-arch=&lt;/code&gt; 다른 아키텍처에 대한 빌드 옵션을; 예를 들어, &lt;code&gt;brew install foo --build-bottle --bottle-arch=penryn&lt;/code&gt; 입니다. 최신 아키텍처를 구축하면 일부 사용자는 바이너리를 얻을 수 있으며 슬프다는 것을 기억하십시오!</target>
        </trans-unit>
        <trans-unit id="cb6bdf1c74332fb43d5cd7e372e04a21a1fee288" translate="yes" xml:space="preserve">
          <source>By default, only Homebrew dependencies are listed.</source>
          <target state="translated">기본적으로 Homebrew 종속성 만 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="d6e9dbad74806f6475aa17c42346342773bc28d2" translate="yes" xml:space="preserve">
          <source>By default, version information is displayed in interactive shells, and suppressed otherwise.</source>
          <target state="translated">기본적으로 버전 정보는 대화식 쉘에 표시되며 그렇지 않으면 억제됩니다.</target>
        </trans-unit>
        <trans-unit id="83f7df5c1cb3bbb2c5aa0e4da571b50f5041ba4e" translate="yes" xml:space="preserve">
          <source>C++ Standard Libraries</source>
          <target state="translated">C ++ 표준 라이브러리</target>
        </trans-unit>
        <trans-unit id="710d29c7505c1572481073da112d0cf51ff1e5f8" translate="yes" xml:space="preserve">
          <source>COMMANDS</source>
          <target state="translated">COMMANDS</target>
        </trans-unit>
        <trans-unit id="f2a7554fbc437080e675167bf66edfe879daac52" translate="yes" xml:space="preserve">
          <source>CUSTOM EXTERNAL COMMANDS</source>
          <target state="translated">커스텀 외부 명령</target>
        </trans-unit>
        <trans-unit id="5c44c756a1d4b4bdbfa96ea7ba683c4158f41ade" translate="yes" xml:space="preserve">
          <source>Can I edit formulae myself?</source>
          <target state="translated">수식을 직접 편집 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="b876336e0cef9cd7293808e17c3062c0938587d3" translate="yes" xml:space="preserve">
          <source>Can I install my own stuff to &lt;code&gt;/usr/local&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;/usr/local&lt;/code&gt; 에 내 물건을 설치할 수 있습니까 ?</target>
        </trans-unit>
        <trans-unit id="7207f78425be8a3c3eeec4adf11558335e424229" translate="yes" xml:space="preserve">
          <source>Can I make new formulae?</source>
          <target state="translated">새로운 공식을 만들 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="a6f183fb34132767d41b3c3f33d3a972522296e7" translate="yes" xml:space="preserve">
          <source>Can install software to your home directory and so does not require &lt;em&gt;sudo&lt;/em&gt;</source>
          <target state="translated">홈 디렉토리에 소프트웨어를 설치할 수 있으므로 &lt;em&gt;sudo&lt;/em&gt; 가 필요하지 않습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42354ba88037d7a88466e5e90d37058b742589a9" translate="yes" xml:space="preserve">
          <source>Capitalise all list items if you want, even if they&amp;rsquo;re not complete sentences; just be consistent within each list, and preferably, throughout the whole page</source>
          <target state="translated">문장이 완성되지 않은 경우에도 원하는 경우 모든 목록 항목을 대문자로 표시하십시오. 각 목록 내에서 일관성을 유지하고 전체 페이지에서</target>
        </trans-unit>
        <trans-unit id="611e0004201651d94d84acdc64ea2edd5901168b" translate="yes" xml:space="preserve">
          <source>Capitalise repository names to match the user and repository names on GitHub. Keep tap names in lower case.</source>
          <target state="translated">GitHub의 사용자 및 저장소 이름과 일치하도록 저장소 이름을 대문자로 만드십시오. 탭 이름은 소문자로 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="e9abbff88ea43d04264341c59fafcb48e7052099" translate="yes" xml:space="preserve">
          <source>Capitalised proper nouns</source>
          <target state="translated">대명사</target>
        </trans-unit>
        <trans-unit id="cd6e3ab1820a815c9a59933a0dfcd9b51d5b6748" translate="yes" xml:space="preserve">
          <source>Casks</source>
          <target state="translated">Casks</target>
        </trans-unit>
        <trans-unit id="a4ce7734f9c3e22c3ce713e8a79941ba6c69be20" translate="yes" xml:space="preserve">
          <source>Casks can also be installed from a tap. Casks can be included in taps with formulae, or in a tap with just casks. Place any cask files you wish to make available in a &lt;code&gt;Casks&lt;/code&gt; directory at the top level of your tap.</source>
          <target state="translated">캐스 크는 탭에서 설치할 수도 있습니다. 캐스 크는 포뮬러가있는 탭에 포함되거나 캐스 크 만있는 탭에 포함될 수 있습니다. 탭의 최상위 수준 에있는 &lt;code&gt;Casks&lt;/code&gt; 디렉토리에 사용하려는 모든 cask 파일을 배치합니다 .</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="4ddf497c6f38258a23544e6ce8884705b83adbd5" translate="yes" xml:space="preserve">
          <source>Cellar (&lt;code&gt;cellar&lt;/code&gt;)</source>
          <target state="translated">지하실 ( &lt;code&gt;cellar&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="df193b9a4f534e2af136c9a41a25026a43c5fcfb" translate="yes" xml:space="preserve">
          <source>Change to the directory containing Homebrew formulae:</source>
          <target state="translated">Homebrew 공식이 포함 된 디렉토리로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="4a3f73e50fe9c5d9dad4e788b8dd4553a7b866f1" translate="yes" xml:space="preserve">
          <source>Change to the directory containing your Homebrew installation:</source>
          <target state="translated">Homebrew 설치가 포함 된 디렉토리로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="596271547b9c31a6459912f14ddeac4a4d9a52c6" translate="yes" xml:space="preserve">
          <source>Changing your &lt;code&gt;PATH&lt;/code&gt; using that command ensures the change only exists for the duration of that shell session. Once you are no longer in that session, the &lt;code&gt;PATH&lt;/code&gt; reverts to the prior state.</source>
          <target state="translated">해당 명령을 사용 하여 &lt;code&gt;PATH&lt;/code&gt; 를 변경하면 해당 셸 세션 동안에 만 변경 사항이 존재합니다. 해당 세션에 더 이상 있지 않으면 &lt;code&gt;PATH&lt;/code&gt; 가 이전 상태로 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="5cc7d1eb705d5c3b232700dae9f9a4e913df37c8" translate="yes" xml:space="preserve">
          <source>Check &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; for Homebrew coding style violations.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 에서 Homebrew 코딩 스타일 위반이 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a9c875413e86e0992a17f4a91bd75b6f52b4183" translate="yes" xml:space="preserve">
          <source>Check &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for Homebrew coding style violations. This should be run before submitting a new formula or cask. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;|&lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; are provided, check all locally available formulae and casks and skip style checks. Will exit with a non-zero status if any errors are found.</source>
          <target state="translated">Homebrew 코딩 스타일 위반에 대한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 확인하십시오 . 새 공식 또는 통을 제출하기 전에 실행해야합니다. &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이없는 경우 | &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 이 제공되면 현지에서 사용 가능한 모든 공식과 통을 확인하고 스타일 검사를 건너 뜁니다. 오류가 발견되면 0이 아닌 상태로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="c92b6213e765d08614e1108acb63b262aa8fea32" translate="yes" xml:space="preserve">
          <source>Check &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for Homebrew coding style violations. This should be run before submitting a new formula. Will exit with a non-zero status if any errors are found, which can be useful for implementing pre-commit hooks. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are provided, all of them are checked.</source>
          <target state="translated">Homebrew 코딩 스타일 위반에 대한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 확인하십시오 . 새 수식을 제출하기 전에 실행해야합니다. 오류가 발견되면 0이 아닌 상태로 종료됩니다. 이는 커밋 전 후크를 구현하는 데 유용 할 수 있습니다. &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 제공 되지 않으면 모두 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="1c320344f8d26e9e2ed891192a027e530fe7b4cf" translate="yes" xml:space="preserve">
          <source>Check for common issues</source>
          <target state="translated">일반적인 문제 확인</target>
        </trans-unit>
        <trans-unit id="afcfb98a2d3b70a1feaabef4bd81582516160a07" translate="yes" xml:space="preserve">
          <source>Check for dependencies</source>
          <target state="translated">의존성 점검</target>
        </trans-unit>
        <trans-unit id="11c8162a48ce20193c010610334635f209d31607" translate="yes" xml:space="preserve">
          <source>Check for newer versions of formulae from upstream.</source>
          <target state="translated">업스트림에서 최신 버전의 공식을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e21a59d66d94f3695597984a697c1748b4e7daa7" translate="yes" xml:space="preserve">
          <source>Check for typechecking errors using Sorbet.</source>
          <target state="translated">Sorbet을 사용하여 유형 검사 오류를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a99591f7ec830e612e01513cc042ff84f2c36c93" translate="yes" xml:space="preserve">
          <source>Check for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd555ed1914dfbad6baeb9232d2a6903cd43a06" translate="yes" xml:space="preserve">
          <source>Check formulae or files for conformance to Homebrew style guidelines.</source>
          <target state="translated">Homebrew 스타일 가이드 라인을 준수하는지 수식 또는 파일을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1d33d0f4749e759a4aceb4c04cc31345108b857f" translate="yes" xml:space="preserve">
          <source>Check if all dependencies are installed from the &lt;code&gt;Brewfile&lt;/code&gt;.</source>
          <target state="translated">모든 종속성이 &lt;code&gt;Brewfile&lt;/code&gt; 에서 설치되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1ef19abace31804c962ce0e1a88d0e6aaeb94df2" translate="yes" xml:space="preserve">
          <source>Check if the formula you are updating is a dependency for any other formulae by running &lt;code&gt;brew uses &amp;lt;formula&amp;gt;&lt;/code&gt;. If it is a dependency, run &lt;code&gt;brew reinstall&lt;/code&gt; for all the dependencies after it is installed and verify they work correctly.</source>
          <target state="translated">&lt;code&gt;brew uses &amp;lt;formula&amp;gt;&lt;/code&gt; 을 실행하여 업데이트중인 공식이 다른 공식에 종속되는지 확인하십시오 . 종속성 인 경우 &lt;code&gt;brew reinstall&lt;/code&gt; 실행하십시오. 후 모든 종속성에 대해 를 하고 올바르게 작동하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a300ebf156e309ecc602572e395c14f89eb25d9a" translate="yes" xml:space="preserve">
          <source>Check if there is a new upstream version of a formula. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-livecheck/blob/master/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="translated">새로운 업스트림 버전의 수식이 있는지 확인하십시오. 자세한 정보 및 사용법 은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-livecheck/blob/master/README.md&quot;&gt; &lt;code&gt;README&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4eb6a2dbdf4cd8b879d06184591c2c58e75ba22" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;homebrew-on-linux&quot;&gt;the Homebrew on Linux installation documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;homebrew-on-linux&quot;&gt;Linux에서 Homebrew 설치 문서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="97212d539da13da77bcd28f8d00883ca29d0c97d" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;license-guidelines&quot;&gt;License Guidelines&lt;/a&gt; for examples of complex license expressions in Homebrew formulae.</source>
          <target state="translated">Homebrew 공식에서 복잡한 라이센스 표현의 예 는 &lt;a href=&quot;license-guidelines&quot;&gt;라이센스 지침&lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="875146f92f7f3a24e3c3b9f38de2630328d216ea" translate="yes" xml:space="preserve">
          <source>Check out the &lt;code&gt;master&lt;/code&gt; branch:</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 브랜치를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a15bb2cb15d4cd4b24363cddabb5277361f3afa" translate="yes" xml:space="preserve">
          <source>Check out what MacPorts and Fink do:</source>
          <target state="translated">MacPorts 및 Fink의 기능을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="87e9aa0e5b7da29b4ba3bfcbd08d52979cedcedb" translate="yes" xml:space="preserve">
          <source>Check out your branch again:</source>
          <target state="translated">지점을 다시 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9abd4f9306b06bc417546d92f8c1d9384734cd6d" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;Homebrew/brew pull requests&lt;/a&gt; and &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;issues&lt;/a&gt; to see if there is anything pressing that needs to be fixed or merged before the next release. If so, fix and merge these changes.</source>
          <target state="translated">체크 &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;브루 / 양조 풀 요청&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;문제를&lt;/a&gt; 요구 고정 또는 다음 릴리스 전에 병합 될 것을 눌러있는 일이 있는지. 그렇다면 이러한 변경 사항을 수정하고 병합하십시오.</target>
        </trans-unit>
        <trans-unit id="c43e0dd33429aa68602487f3df369a3492a44dc8" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;Homebrew/brew pull requests&lt;/a&gt;, &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;issues&lt;/a&gt;, &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues&quot;&gt;Homebrew/core issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt; to see if there is anything pressing that needs to be fixed or merged before the next release. If so, fix and merge these changes.</source>
          <target state="translated">체크 &lt;a href=&quot;https://github.com/homebrew/brew/pulls&quot;&gt;브루 / 양조 풀 요청&lt;/a&gt; , &lt;a href=&quot;https://github.com/homebrew/brew/issues&quot;&gt;문제&lt;/a&gt; , &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues&quot;&gt;브루 / 핵심 문제&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;브루 / 토론 (포럼)&lt;/a&gt; 의 요구가 고정 또는 다음 릴리스 전에 병합 될 것을 눌러있는 일이 있는지. 그렇다면 이러한 변경 사항을 수정하고 병합하십시오.</target>
        </trans-unit>
        <trans-unit id="1e6c17923f5d74dcfbebbeb5cbf4e93c361440f1" translate="yes" xml:space="preserve">
          <source>Check the build system</source>
          <target state="translated">빌드 시스템 확인</target>
        </trans-unit>
        <trans-unit id="3bfb78638fb1d75424f1479a6d97507aff5ca16c" translate="yes" xml:space="preserve">
          <source>Check the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; for missing dependencies. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given, check all installed brews.</source>
          <target state="translated">누락 된 종속성에 대해 주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 확인하십시오 . &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 없으면 설치된 모든 추출기를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="efa19147c08edfd8b09d1c99c1b7eeda45a2b9ef" translate="yes" xml:space="preserve">
          <source>Check the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; kegs for missing dependencies. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are provided, check all kegs. Will exit with a non-zero status if any kegs are found to be missing dependencies.</source>
          <target state="translated">누락 된 종속성에 대해 주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 통을 확인하십시오 . &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 가 제공 되지 않으면 모든 통을 확인하십시오. 종속 항목이 누락 된 케 그가 발견되면 0이 아닌 상태로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="7b09b4ec7f1849fef858ca43c1e5da5a4e086590" translate="yes" xml:space="preserve">
          <source>Check the library links for kegs of installed formulae. Raises an error if run on uninstalled formulae.</source>
          <target state="translated">설치된 공식의 통에 대한 라이브러리 링크를 확인하십시오. 제거 된 수식에서 실행할 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7f590b46bb2341ac1fafaf03d3a6da551cd837fd" translate="yes" xml:space="preserve">
          <source>Check the library links from the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; kegs. If no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are provided, check all kegs. Raises an error if run on uninstalled formulae.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 통 에서 라이브러리 링크를 확인하십시오 . &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 가 제공 되지 않으면 모든 통을 확인하십시오. 제거 된 수식에서 실행하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="423f925e41568a0021796cdb6e761652765539c4" translate="yes" xml:space="preserve">
          <source>Check the package&amp;rsquo;s &lt;code&gt;README&lt;/code&gt;. Does the package install with &lt;code&gt;./configure&lt;/code&gt;, &lt;code&gt;cmake&lt;/code&gt;, or something else? Delete the commented out &lt;code&gt;cmake&lt;/code&gt; lines if the package uses &lt;code&gt;./configure&lt;/code&gt;.</source>
          <target state="translated">패키지의 &lt;code&gt;README&lt;/code&gt; 를 확인하십시오 . 패키지가 &lt;code&gt;./configure&lt;/code&gt; , &lt;code&gt;cmake&lt;/code&gt; 또는 다른 것으로 설치됩니까? 패키지가 &lt;code&gt;./configure&lt;/code&gt; 를 사용하는 경우 주석 처리 된 &lt;code&gt;cmake&lt;/code&gt; 행을 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8dfd95150be0c20fb466eeda2938e963dabf0c7" translate="yes" xml:space="preserve">
          <source>Check the top of the e.g. &lt;code&gt;./configure&lt;/code&gt; output. Some configure scripts do not recognise e.g. &lt;code&gt;--disable-debug&lt;/code&gt;. If you see a warning about it, remove the option from the formula.</source>
          <target state="translated">예를 들어 &lt;code&gt;./configure&lt;/code&gt; 출력 의 상단을 확인하십시오 . 일부 configure 스크립트는 &lt;code&gt;--disable-debug&lt;/code&gt; 를 인식하지 못합니다. . 경고가 표시되면 수식에서 옵션을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a2e138cb44a3a62839fc5998ee391a03e5d806db" translate="yes" xml:space="preserve">
          <source>Check to see if the issue has been reported</source>
          <target state="translated">문제가보고되었는지 확인</target>
        </trans-unit>
        <trans-unit id="8b44bd9661dc26ab0bfe07939979252225ae19b7" translate="yes" xml:space="preserve">
          <source>Check your system for potential problems. Doctor exits with a non-zero status if any potential problems are found. Please note that these warnings are just used to help the Homebrew maintainers with debugging if you file an issue. If everything you use Homebrew for is working fine: please don&amp;rsquo;t worry or file an issue; just ignore this.</source>
          <target state="translated">잠재적 인 문제가 있는지 시스템을 점검하십시오. 잠재적 인 문제가 발견되면 닥터는 0이 아닌 상태로 종료됩니다. 이 경고는 문제를 제기 할 경우 Homebrew 관리자가 디버깅하는 데 도움을주기 위해 사용됩니다. Homebrew를 사용하는 모든 것이 제대로 작동하는 경우 걱정하거나 문제를 제기하지 마십시오. 이것을 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="13e95285e46a6262922e7766574bbdc87fb8747b" translate="yes" xml:space="preserve">
          <source>Check your system for potential problems. Will exit with a non-zero status if any potential problems are found. Please note that these warnings are just used to help the Homebrew maintainers with debugging if you file an issue. If everything you use Homebrew for is working fine: please don&amp;rsquo;t worry or file an issue; just ignore this.</source>
          <target state="translated">시스템에 잠재적 인 문제가 있는지 확인하십시오. 잠재적 인 문제가 발견되면 0이 아닌 상태로 종료됩니다. 이 경고는 문제를 제기하는 경우 Homebrew 관리자가 디버깅하는 데 도움이되는 데 사용됩니다. Homebrew를 사용하는 모든 것이 잘 작동하는 경우 : 걱정하지 말고 문제를 제기하십시오. 그냥 무시하세요.</target>
        </trans-unit>
        <trans-unit id="61b29464698841563ca7472285fe6b4635494641" translate="yes" xml:space="preserve">
          <source>Checklist</source>
          <target state="translated">Checklist</target>
        </trans-unit>
        <trans-unit id="8acccab7f490b23c0adde4b83d2374fa3b02e386" translate="yes" xml:space="preserve">
          <source>Checks style of the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; using RuboCop.</source>
          <target state="translated">RuboCop을 사용하여 주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 스타일을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b1ce22fc4884f4e7679f353a8db26d0684f254a0" translate="yes" xml:space="preserve">
          <source>Checksum (&lt;code&gt;sha256&lt;/code&gt;)</source>
          <target state="translated">체크섬 ( &lt;code&gt;sha256&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1c543deadca67f476118db1bda901ab0970117fa" translate="yes" xml:space="preserve">
          <source>Clang is the default C/C++ compiler on macOS (and has been for a long time). Software that doesn&amp;rsquo;t build with it hasn&amp;rsquo;t been adequately ported to macOS.</source>
          <target state="translated">Clang은 macOS의 기본 C / C ++ 컴파일러이며 오랫동안 사용되었습니다. 빌드되지 않은 소프트웨어는 macOS에 제대로 포팅되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="919b31af623e30618fff2bd20d4b08509aecfcbc" translate="yes" xml:space="preserve">
          <source>Cleanup all cached files older than this many days.</source>
          <target state="translated">이 기간보다 오래된 모든 캐시 된 파일을 정리합니다.</target>
        </trans-unit>
        <trans-unit id="4f4ed9ce21c23e3a135f0f3673cc5ccb265b211a" translate="yes" xml:space="preserve">
          <source>Collecting the OS version allows us to decide what versions of macOS to prioritise and support and identify build failures that occur only on single versions.</source>
          <target state="translated">OS 버전을 수집하면 단일 버전에서만 발생하는 빌드 실패를 우선 순위 화하고 지원하고 식별 할 수있는 macOS 버전을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2ccc5699fd8637d310a7856e7dce7bbd49532b5" translate="yes" xml:space="preserve">
          <source>Command Line Tools (CLT) for Xcode: &lt;code&gt;xcode-select --install&lt;/code&gt;, &lt;a href=&quot;https://developer.apple.com/downloads&quot;&gt;developer.apple.com/downloads&lt;/a&gt; or &lt;a href=&quot;https://itunes.apple.com/us/app/xcode/id497799835&quot;&gt;Xcode&lt;/a&gt;&lt;sup&gt;&lt;a href=&quot;#3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">Xcode 용 명령 행 도구 (CLT) : &lt;code&gt;xcode-select --install&lt;/code&gt; , &lt;a href=&quot;https://developer.apple.com/downloads&quot;&gt;developer.apple.com/downloads&lt;/a&gt; 또는 &lt;a href=&quot;https://itunes.apple.com/us/app/xcode/id497799835&quot;&gt;Xcode &lt;/a&gt;&lt;sup&gt;&lt;a href=&quot;#3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d2f68e48fb9920fb72b1cd62191b7b05339f3db0" translate="yes" xml:space="preserve">
          <source>Command types</source>
          <target state="translated">명령 유형</target>
        </trans-unit>
        <trans-unit id="f6a34aed307783f0ded7923ea56787d9214b9a39" translate="yes" xml:space="preserve">
          <source>Commands:</source>
          <target state="translated">Commands:</target>
        </trans-unit>
        <trans-unit id="aee97edd2a89aaa08f9a4fb325f5a132c27f8e96" translate="yes" xml:space="preserve">
          <source>Commas</source>
          <target state="translated">Commas</target>
        </trans-unit>
        <trans-unit id="1a1873ab51c74e8b39327ee42dade7a407e5a22d" translate="yes" xml:space="preserve">
          <source>Commit</source>
          <target state="translated">Commit</target>
        </trans-unit>
        <trans-unit id="947e7b97bab7426e538ad2e316ff8cc01353ec17" translate="yes" xml:space="preserve">
          <source>Common Issues</source>
          <target state="translated">일반적인 문제</target>
        </trans-unit>
        <trans-unit id="f87b5729607ca7ae6225bc161541aed4891ee426" translate="yes" xml:space="preserve">
          <source>Common Issues for Maintainers</source>
          <target state="translated">관리자를위한 일반적인 문제</target>
        </trans-unit>
        <trans-unit id="f0a4a94d4ea44ef7f33fe13625f75db025a9523d" translate="yes" xml:space="preserve">
          <source>Compiler selection</source>
          <target state="translated">컴파일러 선택</target>
        </trans-unit>
        <trans-unit id="13ec0de6207a94d5571105231a58d435fd1714e4" translate="yes" xml:space="preserve">
          <source>Complex SPDX License Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43c12e1b59750e7dd33a24ddf91fc08f7b0f3db" translate="yes" xml:space="preserve">
          <source>Concluding remarks</source>
          <target state="translated">끝 맺는 말</target>
        </trans-unit>
        <trans-unit id="117ca20e53cabe8f604eec41aa3df14058a7f520" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;bash&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bash&lt;/code&gt; 에서 완료 구성</target>
        </trans-unit>
        <trans-unit id="cab3f8a9e42209f4a782350bda17df1d4b1be67a" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;fish&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 에서 완성 구성</target>
        </trans-unit>
        <trans-unit id="8a7143811bd7ea6b815ac516925c93b2d2f8fefd" translate="yes" xml:space="preserve">
          <source>Configuring Completions in &lt;code&gt;zsh&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;zsh&lt;/code&gt; 에서 완료 구성</target>
        </trans-unit>
        <trans-unit id="6f57d20124b31599ae37ed78fd2086236d66b51c" translate="yes" xml:space="preserve">
          <source>Congratulations, you&amp;rsquo;ve moved a formula to a tap!</source>
          <target state="translated">축하합니다. 수식을 탭으로 이동했습니다.</target>
        </trans-unit>
        <trans-unit id="62a7842bf23bcf1c00d3723550321c87bef59371" translate="yes" xml:space="preserve">
          <source>Cons: negative comments are common and people take this as a chance to complain about Homebrew (regardless of their usage)</source>
          <target state="translated">단점 : 부정적인 의견이 일반적이며 사람들은이 사용법에 관계없이 Homebrew에 대해 불만을 제기 할 수있는 기회로 생각합니다.</target>
        </trans-unit>
        <trans-unit id="fdd5f5dc6df4f2f7acb072423047d78e3645efdf" translate="yes" xml:space="preserve">
          <source>Consider adding evaluating the output in your dotfiles (e.g. &lt;code&gt;~/.profile&lt;/code&gt;) with &lt;code&gt;eval $(brew shellenv)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval $(brew shellenv)&lt;/code&gt; 를 사용하여 도트 파일에서 출력 평가 (예 : &lt;code&gt;~/.profile&lt;/code&gt; )를 추가하십시오</target>
        </trans-unit>
        <trans-unit id="5f32187912966ae696462866d4538d29e93e7d16" translate="yes" xml:space="preserve">
          <source>Consider whether to submit it to other sources e.g. Hacker News, Reddit.</source>
          <target state="translated">Hacker News, Reddit과 같은 다른 출처로 제출할 것인지 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="ddc83df6a9ca8becff741d403c07315d10336da0" translate="yes" xml:space="preserve">
          <source>Consult this file for the list of formulae to check by default when no formula argument is passed to &lt;code&gt;brew livecheck&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew livecheck&lt;/code&gt; 에 공식 인수가 전달되지 않은 경우 기본적으로 확인할 공식 목록은이 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f66ec5e52609255d1b1c42190479896d204b2e7" translate="yes" xml:space="preserve">
          <source>Contains the SHA-256 hash of a bottle for a particular version of macOS.</source>
          <target state="translated">특정 버전의 macOS 용 병의 SHA-256 해시를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">Contributors</target>
        </trans-unit>
        <trans-unit id="24527fc2d648437506495f883a07a22c2878f8d4" translate="yes" xml:space="preserve">
          <source>Control Homebrew&amp;rsquo;s anonymous aggregate user behaviour analytics. Read more at &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;.</source>
          <target state="translated">Homebrew의 익명 집계 사용자 행동 분석을 제어합니다. &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt; 에서 자세히 알아 보십시오 .</target>
        </trans-unit>
        <trans-unit id="874390641cb656a6a92196ce1104f746e3a54f87" translate="yes" xml:space="preserve">
          <source>Convenience tools</source>
          <target state="translated">편의 도구</target>
        </trans-unit>
        <trans-unit id="4c14933b757e63fd39113fe3e86f94cefa849b18" translate="yes" xml:space="preserve">
          <source>Core &lt;code&gt;brew&lt;/code&gt; code related pull request</source>
          <target state="translated">코어 &lt;code&gt;brew&lt;/code&gt; 코드 관련 풀 요청</target>
        </trans-unit>
        <trans-unit id="2156bcb852bc98dce96fbe3af021ea400afd4789" translate="yes" xml:space="preserve">
          <source>Create a Homebrew installation wherever you extract the tarball. Whichever &lt;code&gt;brew&lt;/code&gt; command is called is where the packages will be installed. You can use this as you see fit, e.g. a system set of libs in &lt;code&gt;/usr/local&lt;/code&gt; and tweaked formulae for development in &lt;code&gt;~/homebrew&lt;/code&gt;.</source>
          <target state="translated">tarball을 추출 할 때마다 Homebrew 설치를 작성하십시오. 어떤 &lt;code&gt;brew&lt;/code&gt; 명령을 호출 하든 패키지가 설치됩니다. 예를 들어 &lt;code&gt;/usr/local&lt;/code&gt; 의 시스템 라이브러리 세트 와 &lt;code&gt;~/homebrew&lt;/code&gt; 의 개발을 위해 조정 된 공식과 같이 이것을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9e6ecc14bb76dbd4ad31f17699881b5176aba52" translate="yes" xml:space="preserve">
          <source>Create a commit to increment the revision of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. If no revision is present, &amp;ldquo;revision 1&amp;rdquo; will be added.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 개정을 증가시키는 커밋을 만듭니다 . 개정이없는 경우 &quot;개정 1&quot;이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5afdd5f37fb90ff6eb0faea0a1760d7a4dc9a649" translate="yes" xml:space="preserve">
          <source>Create a commit to increment the revision of the formula. If no revision is present, &amp;ldquo;revision 1&amp;rdquo; will be added.</source>
          <target state="translated">수식의 개정을 증가시키는 커밋을 만듭니다. 개정판이 없으면 &quot;revision 1&quot;이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="797f1b37a14ce1af4e5c87ebd9ac5622fe7658a4" translate="yes" xml:space="preserve">
          <source>Create a new branch from the latest &lt;code&gt;master&lt;/code&gt; branch:</source>
          <target state="translated">최신 &lt;code&gt;master&lt;/code&gt; 브랜치 에서 새 브랜치를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="afd83cb14799014cd4e32e7c55d3f83b8b038cfd" translate="yes" xml:space="preserve">
          <source>Create a new issue on the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues/new/choose&quot;&gt;Homebrew/homebrew-core issue tracker&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/issues/new/choose&quot;&gt;Homebrew/linuxbrew-core issue tracker&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues/new/choose&quot;&gt;Homebrew / homebrew-core 이슈 트래커&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/issues/new/choose&quot;&gt;Homebrew / linuxbrew-core 이슈 트래커&lt;/a&gt; 에서 새로운 이슈 만들기</target>
        </trans-unit>
        <trans-unit id="129970b308fe32e467d81f3e4a26f03bc7233c48" translate="yes" xml:space="preserve">
          <source>Create a pull request to the corresponding tap deleting the old formula file, adding the new formula file, and adding it to &lt;code&gt;formula_renames.json&lt;/code&gt; with a commit message like &lt;code&gt;newack: renamed from ack&lt;/code&gt;. Use the canonical name (e.g. &lt;code&gt;ack&lt;/code&gt; instead of &lt;code&gt;user/repo/ack&lt;/code&gt;).</source>
          <target state="translated">해당 탭에 대한 풀 요청을 작성하여 이전 공식 파일을 삭제하고 새 공식 파일을 추가 한 후 &lt;code&gt;newack: renamed from ack&lt;/code&gt; 같은 커밋 메시지와 함께 &lt;code&gt;formula_renames.json&lt;/code&gt; 에 추가하십시오 . (예를 들면 정식 이름을 사용하여 &lt;code&gt;ack&lt;/code&gt; 대신 &lt;code&gt;user/repo/ack&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="02d4ee035d3dece1df6b89918483457e04431d68" translate="yes" xml:space="preserve">
          <source>Create a pull request to the new tap adding the formula file as-is from the original tap. Fix any test failures that may occur due to the stricter requirements for new formulae than existing formula (e.g. &lt;code&gt;brew audit --strict&lt;/code&gt; must pass for that formula).</source>
          <target state="translated">원래 탭에서 그대로 공식 파일을 추가하여 새 탭에 대한 풀 요청을 작성하십시오. 기존 공식보다 새로운 공식에 대한 엄격한 요구 사항으로 인해 발생할 수있는 테스트 실패를 수정하십시오 (예 : &lt;code&gt;brew audit --strict&lt;/code&gt; 는 해당 공식에 대해 통과해야 함).</target>
        </trans-unit>
        <trans-unit id="90549c50f3330cca39df3726349e5c2fbbacf339" translate="yes" xml:space="preserve">
          <source>Create a pull request to the original tap deleting the formula file and add it to &lt;code&gt;tap_migrations.json&lt;/code&gt; with a commit message like &lt;code&gt;gv: migrate to homebrew/core&lt;/code&gt;.</source>
          <target state="translated">공식 파일을 삭제하여 원래 탭에 대한 풀 요청을 작성하고 &lt;code&gt;gv: migrate to homebrew/core&lt;/code&gt; 와 같은 커밋 메시지와 함께 &lt;code&gt;tap_migrations.json&lt;/code&gt; 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e0e2fbd555478b8ba381f851445c7787f9c64c6" translate="yes" xml:space="preserve">
          <source>Create a pull request to update &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; with a new version.</source>
          <target state="translated">새 버전으로 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 를 업데이트하기위한 pull 요청을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="d717ed92f6fe58597bf2b3e66fe5ac4d56c2879c" translate="yes" xml:space="preserve">
          <source>Create a pull request to update &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; with a new URL or a new tag.</source>
          <target state="translated">풀 요청을 생성하여 새 URL 또는 새 태그로 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 업데이트 합니다.</target>
        </trans-unit>
        <trans-unit id="f272eb5255a90307ea4561b51faef5bfe6c392cd" translate="yes" xml:space="preserve">
          <source>Create a pull request to update a formula with a new URL or a new tag.</source>
          <target state="translated">새 URL 또는 새 태그로 공식을 업데이트하기위한 풀 요청을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="66986a6b5e894243cb6e9828d87ac111ff6a4030" translate="yes" xml:space="preserve">
          <source>Create an issue</source>
          <target state="translated">이슈 만들기</target>
        </trans-unit>
        <trans-unit id="3dbcca8732f5a8388d50be2de8f7879d4884de0d" translate="yes" xml:space="preserve">
          <source>Create your pull request from a new branch</source>
          <target state="translated">새 지점에서 풀 요청 작성</target>
        </trans-unit>
        <trans-unit id="c26bbac237bbf7e450510360d820b75a048906a0" translate="yes" xml:space="preserve">
          <source>Creates the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; and opens it in an editor.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 만들고 편집기에서 엽니 다.</target>
        </trans-unit>
        <trans-unit id="ce9539754af5e6564cb585c386e48fb85b44fe13" translate="yes" xml:space="preserve">
          <source>Creating a Homebrew Issue</source>
          <target state="translated">홈브류 이슈 만들기</target>
        </trans-unit>
        <trans-unit id="ef61b4bbe955d6710717ab6a7be873eb68b7cf3d" translate="yes" xml:space="preserve">
          <source>Creating a tap</source>
          <target state="translated">탭 만들기</target>
        </trans-unit>
        <trans-unit id="518e4efe69388d0030975af803b4fccebe90ca66" translate="yes" xml:space="preserve">
          <source>Creating the diff</source>
          <target state="translated">diff 만들기</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="b1135a03f2d984031c2d840e31e1490d1b4d4094" translate="yes" xml:space="preserve">
          <source>Cross-compilers based on GCC will typically be &amp;ldquo;keg-only&amp;rdquo; and therefore not linked into the path by default.</source>
          <target state="translated">GCC 기반의 크로스 컴파일러는 일반적으로 &quot;케그 전용&quot;이므로 기본적으로 경로에 연결되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a9892524ceff732b3bcdb5f0d3e90e560dd733c" translate="yes" xml:space="preserve">
          <source>Custom GCC and Cross Compilers</source>
          <target state="translated">맞춤형 GCC 및 크로스 컴파일러</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="8ce166fb5e233130dd1ccab65d5ab716895cba1a" translate="yes" xml:space="preserve">
          <source>DEVELOPER COMMANDS</source>
          <target state="translated">개발자 명령</target>
        </trans-unit>
        <trans-unit id="1180597894cf6c0db27abcbbcf4be09e2d1a72e1" translate="yes" xml:space="preserve">
          <source>Debian or Ubuntu</source>
          <target state="translated">데비안 또는 우분투</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="c919d23a5f2969b7978a543c52fb626df8a21b56" translate="yes" xml:space="preserve">
          <source>Depending on the change you want to make, you need to send the pull request to the appropriate one of Homebrew&amp;rsquo;s main repositories. If you want to submit a change to Homebrew core code (the &lt;code&gt;brew&lt;/code&gt; implementation), you should open the pull request on &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;Homebrew/brew&lt;/a&gt;. If you want to submit a change for a formula, you should open the pull request on the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; tap or another &lt;a href=&quot;https://github.com/Homebrew&quot;&gt;official tap&lt;/a&gt;, based on the formula type.</source>
          <target state="translated">변경하려는 사항에 따라 풀 요청을 해당 Homebrew의 주요 리포지토리 중 하나로 보내야합니다. Homebrew 핵심 코드 ( &lt;code&gt;brew&lt;/code&gt; 구현)에 대한 변경 사항을 제출하려면 &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;Homebrew / brew&lt;/a&gt; 에서 풀 요청을 열어야합니다 . 수식에 대한 변경 사항을 제출 하려면 수식 유형 에 따라 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;홈 브루 / 코어&lt;/a&gt; 탭 또는 다른 &lt;a href=&quot;https://github.com/Homebrew&quot;&gt;공식 탭&lt;/a&gt; 에서 풀 요청을 열어야합니다 .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="c1b578bfc25252fd6a838a3e527c5808fd92fdcd" translate="yes" xml:space="preserve">
          <source>Detailed explanation about why we use Method Signatures and its syntax can be found &lt;a href=&quot;https://sorbet.org/docs/sigs&quot;&gt;here&lt;/a&gt;. The only extra thing to keep in mind is that we add method signatures to RBI files instead of the actual method definition in the code. This way we preserve the original code structure and everything related to Sorbet is kept within the &lt;code&gt;Library/Homebrew/sorbet&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac074b8ffe9497e559ed18aed69093efc761db5" translate="yes" xml:space="preserve">
          <source>Detecting whether a &lt;code&gt;setup.py&lt;/code&gt; uses &lt;code&gt;setup()&lt;/code&gt; from setuptools or distutils is difficult, but we always need to pass this flag to setuptools-based scripts. &lt;code&gt;pip&lt;/code&gt; faces the same problem that we do and forces &lt;code&gt;setup()&lt;/code&gt; to use the setuptools version by loading a shim around &lt;code&gt;setup.py&lt;/code&gt; that imports setuptools before doing anything else. Since setuptools monkey-patches distutils and replaces its &lt;code&gt;setup&lt;/code&gt; function, this provides a single, consistent interface. We have borrowed this code and use it in &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setup.py&lt;/code&gt; 가 setuptools 또는 distutils에서 &lt;code&gt;setup()&lt;/code&gt; 을 사용 하는지 여부를 감지하는 것은 어렵지만 항상이 플래그를 setuptools 기반 스크립트로 전달해야합니다. &lt;code&gt;pip&lt;/code&gt; 같은 문제에 직면 우리가하고 강제한다는 &lt;code&gt;setup()&lt;/code&gt; 주위에 심을로드하여 setuptools에 버전을 사용하는 &lt;code&gt;setup.py&lt;/code&gt; 그 무엇을하기 전에 수입 setuptools에가. setuptools는 distutils를 패치하고 &lt;code&gt;setup&lt;/code&gt; 기능을 대체하므로 단일의 일관된 인터페이스를 제공합니다. 이 코드를 빌려 &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; 에서 사용했습니다. .</target>
        </trans-unit>
        <trans-unit id="75984a1d5e06c71af856dc417a6912265bf9513a" translate="yes" xml:space="preserve">
          <source>Developer/Internal API Documentation</source>
          <target state="translated">개발자 / 내부 API 설명서</target>
        </trans-unit>
        <trans-unit id="ddbea7fa80f8b421628f031865b33d2a57d67b23" translate="yes" xml:space="preserve">
          <source>Diagram Guidelines</source>
          <target state="translated">다이어그램 지침</target>
        </trans-unit>
        <trans-unit id="3bfccca7c4c207073fa10d1a04078e283d1a5afd" translate="yes" xml:space="preserve">
          <source>Did you &lt;code&gt;chown root /Applications/TextMate.app&lt;/code&gt;? Probably not. So is it that important to &lt;code&gt;chown root wget&lt;/code&gt;?</source>
          <target state="translated">당신이나요 &lt;code&gt;chown root /Applications/TextMate.app&lt;/code&gt; ? 아마 아닙니다. &lt;code&gt;chown root wget&lt;/code&gt; 을 chown 하는 것이 중요합니다 합니까?</target>
        </trans-unit>
        <trans-unit id="b67b7edcd18ced4a9720325caf1dcb18e0ed01b5" translate="yes" xml:space="preserve">
          <source>Did you find something in Homebrew that wasn&amp;rsquo;t the latest version? You can help yourself and others by submitting a pull request to update the formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7016f1787ed4c288e6f2cfac50c915d8cd7a4a98" translate="yes" xml:space="preserve">
          <source>Directories with names that contain spaces. Homebrew itself can handle spaces, but many build scripts cannot.</source>
          <target state="translated">공백이 포함 된 이름을 가진 디렉토리. Homebrew 자체는 공백을 처리 할 수 ​​있지만 많은 빌드 스크립트는 처리 할 수 ​​없습니다.</target>
        </trans-unit>
        <trans-unit id="d2804d4d134feec74a23e45c507d5ae38d82446d" translate="yes" xml:space="preserve">
          <source>Display &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s name and one-line description. Formula descriptions are cached; the cache is created on the first search, making that search slower than subsequent ones.</source>
          <target state="translated">디스플레이 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 의 이름과 한 줄 설명. 공식 설명이 캐시됩니다. 캐시는 첫 번째 검색에서 작성되므로 해당 검색이 후속 검색보다 느립니다.</target>
        </trans-unit>
        <trans-unit id="ef5361a48824dffe511011228466a9c23f26d76d" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s Caskroom path.</source>
          <target state="translated">Homebrew의 Caskroom 경로를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0ac03d6b30bfa0ae8c7ffcfffd1dce76c0da5dfa" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s Cellar path. &lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;$(brew --prefix)/Cellar&lt;/code&gt;, or if that directory doesn&amp;rsquo;t exist, &lt;code&gt;$(brew --repository)/Cellar&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 지하실 경로를 표시합니다. &lt;em&gt;기본값 : &lt;/em&gt; &lt;code&gt;$(brew --prefix)/Cellar&lt;/code&gt; 또는 해당 디렉토리가 없으면 &lt;code&gt;$(brew --repository)/Cellar&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7fbc8f4d6a720b26e92b39bb8c35e5130a85754" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s download cache. See also &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 다운로드 캐시를 표시합니다. &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="6329cdb3c3a5ff4a9f4bf3a4fd0a006886bcc812" translate="yes" xml:space="preserve">
          <source>Display Homebrew&amp;rsquo;s install path. &lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;/usr/local&lt;/code&gt; on macOS and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; on Linux.</source>
          <target state="translated">Homebrew의 설치 경로를 표시하십시오. &lt;em&gt;기본값 :&lt;/em&gt; macOS의 &lt;code&gt;/usr/local&lt;/code&gt; 및 &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; Linux의 경우</target>
        </trans-unit>
        <trans-unit id="59c387a50274755e0c8dc3dc2d62dd9a4babbfac" translate="yes" xml:space="preserve">
          <source>Display brief statistics for your Homebrew installation.</source>
          <target state="translated">Homebrew 설치에 대한 간단한 통계를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9cdd9dc0143adebd578b40adeaacb38af80cf4b5" translate="yes" xml:space="preserve">
          <source>Display detailed information about one or more provided &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;. Display a brief summary of all installed taps if no &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; are passed.</source>
          <target state="translated">하나 이상의 제공된 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에 대한 자세한 정보를 표시 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 이 전달 되지 않은 경우 설치된 모든 탭에 대한 간략한 요약을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="db46d9d074578ac5fc2a81d078530d03a9169d17" translate="yes" xml:space="preserve">
          <source>Display install options specific to &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 특정한 설치 옵션 &lt;em&gt;표시&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3eae210ed7c21c42619d0a258853ff324d0e38fb" translate="yes" xml:space="preserve">
          <source>Display out-of-date brew formulae and the latest version available. Also displays whether a pull request has been opened with the URL.</source>
          <target state="translated">오래된 추출 공식과 사용 가능한 최신 버전을 표시합니다. 또한 URL로 풀 요청이 열렸는지 여부도 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5576f05cf399f83c11b7e38dcafae98afc4ec617" translate="yes" xml:space="preserve">
          <source>Display the current state of Homebrew&amp;rsquo;s analytics.</source>
          <target state="translated">Homebrew 분석의 현재 상태를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4824492b2320818eb9716c42ce1fe376ddeaa2ce" translate="yes" xml:space="preserve">
          <source>Display the path to the file being used when invoking &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;brew&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/em&gt; 를 호출 할 때 사용중인 파일의 경로를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="f4309e80482bd2c9c7ff06e7292007f52a2f22a8" translate="yes" xml:space="preserve">
          <source>Display the path to the file which is used when invoking &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;brew&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/em&gt; 를 호출 할 때 사용되는 파일의 경로를 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="da0ccd25c8dea1602bbd1fa665278150d8b04c69" translate="yes" xml:space="preserve">
          <source>Display the path where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is located.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 있는 경로를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="03953fd12c0e83f9c7b54e69e2c02773b3ed0418" translate="yes" xml:space="preserve">
          <source>Display the path where a formula is located.</source>
          <target state="translated">수식이있는 경로를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="4a642cb198129fa6f25238331ebec3ae5cfa2c0d" translate="yes" xml:space="preserve">
          <source>Display the source of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 의 출처를 &lt;em&gt;표시&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="87383d1b9f73f4dd8f93046cefbe6745e60bb434" translate="yes" xml:space="preserve">
          <source>Display where Homebrew&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; directory is located.</source>
          <target state="translated">Homebrew의 &lt;code&gt;.git&lt;/code&gt; 디렉토리가있는 위치를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="0ef90ae348cb1c1b7ce6e44df4eaf26ddb1c8cb5" translate="yes" xml:space="preserve">
          <source>Displays information about the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 에 대한 정보를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="6e44520190aacef8e307f6da9f1fb8eb74138e35" translate="yes" xml:space="preserve">
          <source>Distribute (not to be confused with distutils) is an obsolete fork of setuptools. Distlib is a package maintained outside the standard library which is used by pip for some low-level packaging operations and is not relevant to most &lt;code&gt;setup.py&lt;/code&gt; users.</source>
          <target state="translated">배포 (distutils와 혼동하지 말 것)는 오래된 setuptools 포크입니다. Distlib는 표준 라이브러리 외부에서 유지 관리되는 패키지로, 일부 저수준 패키징 작업에 pip에서 사용되며 대부분의 설정과 관련이 없습니다 &lt;code&gt;setup.py&lt;/code&gt; 사용자 .</target>
        </trans-unit>
        <trans-unit id="db35d31526082a9e534454863825087ac133e705" translate="yes" xml:space="preserve">
          <source>Distutils and pip use a &amp;ldquo;flat&amp;rdquo; installation hierarchy that installs modules as individual files under site-packages while &lt;code&gt;easy_install&lt;/code&gt; installs zipped eggs to site-packages instead.</source>
          <target state="translated">Distutils 및 pip는 &quot;플랫&quot;설치 계층 구조를 사용하여 사이트 패키지에서 개별 파일로 모듈을 설치하는 반면 &lt;code&gt;easy_install&lt;/code&gt; 은 대신 압축 된 계란을 사이트 패키지에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="d290ab5acfb87dddd21a4bcb22b0542b37290dcf" translate="yes" xml:space="preserve">
          <source>Distutils is a module in the Python standard library that provides developers a basic package management API. Setuptools is a module distributed outside the standard library that extends distutils. It is a convention that Python packages provide a &lt;code&gt;setup.py&lt;/code&gt; that calls the &lt;code&gt;setup()&lt;/code&gt; function from either distutils or setuptools.</source>
          <target state="translated">Distutils는 개발자에게 기본 패키지 관리 API를 제공하는 Python 표준 라이브러리의 모듈입니다. Setuptools는 표준 라이브러리 외부에 분산되어 distutils를 확장하는 모듈입니다. 파이썬 패키지 는 &lt;code&gt;setup()&lt;/code&gt; 을 호출 하는 &lt;code&gt;setup.py&lt;/code&gt; 를 제공하는 규칙입니다 distutils 또는 setuptools에서 함수 .</target>
        </trans-unit>
        <trans-unit id="42743e19c67d0644a310ca5415c0518b51496566" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;brew info python&lt;/code&gt; or &lt;code&gt;brew info python@2&lt;/code&gt; for precise information about the paths. Note, a brewed Python still searches for modules in &lt;code&gt;/Library/Python/X.Y/site-packages&lt;/code&gt; and also in &lt;code&gt;~/Library/Python/X.Y/lib/python/site-packages&lt;/code&gt;.</source>
          <target state="translated">수행 &lt;code&gt;brew info python&lt;/code&gt; 또는 &lt;code&gt;brew info python@2&lt;/code&gt; 경로에 대한 정확한 정보를 위해. brewed Python은 여전히 &lt;code&gt;/Library/Python/X.Y/site-packages&lt;/code&gt; 및 &lt;code&gt;~/Library/Python/X.Y/lib/python/site-packages&lt;/code&gt; 에서 모듈을 검색 합니다 .</target>
        </trans-unit>
        <trans-unit id="4d0215b64d715c5aa2f818457396f02f5ed81468" translate="yes" xml:space="preserve">
          <source>Do not argue with Homebrew maintainers. You may disagree but unless they change their mind, please implement what they request. Ultimately they control what is included in Homebrew, as they have to support any changes that are made.</source>
          <target state="translated">Homebrew 관리자와 논쟁하지 마십시오. 동의하지 않을 수도 있지만 마음이 바뀌지 않는 한 요청한 내용을 이행하십시오. 궁극적으로 변경 사항을 지원해야하므로 Homebrew에 포함 된 내용을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="bf1e14d195c1debfe3c1d9d6b165718756038c55" translate="yes" xml:space="preserve">
          <source>Do not continue discussion in closed pull requests.</source>
          <target state="translated">닫힌 풀 요청에 대해서는 계속 논의하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="7deaf45267db90d1c1defcd99a94899e306a645a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t follow the advice here but fix by using &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; in the formula as described in &lt;a href=&quot;python-for-formula-authors&quot;&gt;Python for Formula Authors&lt;/a&gt;.</source>
          <target state="translated">여기의 조언을 따르지 말고 &lt;a href=&quot;python-for-formula-authors&quot;&gt;Formula Authors 용 Python에&lt;/a&gt; 설명 된대로 &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; 를 사용하여 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fb9ce6f3b50d52d36fc4051f30719a97d0427b7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget Homebrew is all Git underneath! &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;Maintain your own tap&lt;/a&gt; if you have to!</source>
          <target state="translated">Homebrew가 모두 아래에 있다는 것을 잊지 마십시오! 당신이해야 할 경우 &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;자신의 탭을 유지&lt;/a&gt; !</target>
        </trans-unit>
        <trans-unit id="61309e53b674c52bf095adc9d16b5bfeece0d876" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t make your formula build an &lt;code&gt;.app&lt;/code&gt; (native macOS Application); we don&amp;rsquo;t want those things in Homebrew. Encourage upstream projects to build and support a &lt;code&gt;.app&lt;/code&gt; that can be distributed by &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew/cask&lt;/a&gt; (and used without it, too).</source>
          <target state="translated">수식을 &lt;code&gt;.app&lt;/code&gt; (기본 macOS 응용 프로그램)로 만들지 마십시오 . 우리는 Homebrew에서 그런 것들을 원하지 않습니다. 업스트림 프로젝트 가 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew / cask에서&lt;/a&gt; 배포 할 수 있는 &lt;code&gt;.app&lt;/code&gt; 를 빌드하고 지원하도록 권장 없이도 사용할 .</target>
        </trans-unit>
        <trans-unit id="87ee1041742e431df823681ec08f6029aa2004e1" translate="yes" xml:space="preserve">
          <source>Double-check for dependencies</source>
          <target state="translated">종속성 재확인</target>
        </trans-unit>
        <trans-unit id="42aa0f68a42bb1fb8709cb7e6d04e52424f0ab05" translate="yes" xml:space="preserve">
          <source>Download URL</source>
          <target state="translated">URL 다운로드</target>
        </trans-unit>
        <trans-unit id="d2ef45756cd44ba87107185a41614bc1731ea9d1" translate="yes" xml:space="preserve">
          <source>Download a bottle (if available) or source packages for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. For tarballs, also print SHA-256 checksums.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 대한 병 (사용 가능한 경우) 또는 소스 패키지를 다운로드합니다 . tarball의 경우 SHA-256 체크섬도 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="4d82b827dbec7b58bc6d507cccb93e74d60321c8" translate="yes" xml:space="preserve">
          <source>Download and publish bottles, and apply the bottle commit from a pull request with artifacts generated by GitHub Actions. Requires write access to the repository.</source>
          <target state="translated">병을 다운로드 및 게시하고 GitHub 작업에서 생성 된 아티팩트를 사용하여 pull 요청에서 병 커밋을 적용합니다. 저장소에 대한 쓰기 액세스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="53ce75ae0353276f7d54107f064c8702370a1497" translate="yes" xml:space="preserve">
          <source>Download the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/install/master/uninstall&quot;&gt;uninstall script&lt;/a&gt; and run &lt;code&gt;./uninstall --help&lt;/code&gt; to view more uninstall options.</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/install/master/uninstall&quot;&gt;제거 스크립트를&lt;/a&gt; 다운로드하고 &lt;code&gt;./uninstall --help&lt;/code&gt; 를 실행 하여 추가 제거 옵션을 봅니다.</target>
        </trans-unit>
        <trans-unit id="fc2b6445379216d5becb76d91882d93b7738d2fd" translate="yes" xml:space="preserve">
          <source>Download the file and drop it in &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt;, but watch the file name. Homebrew downloads files as &lt;code&gt;&amp;lt;formula&amp;gt;-&amp;lt;version&amp;gt;&lt;/code&gt;. In the case of Erlang, this requires renaming the file from &lt;code&gt;otp_src_R13B03&lt;/code&gt; to &lt;code&gt;erlang-R13B03&lt;/code&gt;.</source>
          <target state="translated">파일을 다운로드하여 &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt; 에 놓으십시오 . 그러나 파일 이름을보십시오. Homebrew는 &lt;code&gt;&amp;lt;formula&amp;gt;-&amp;lt;version&amp;gt;&lt;/code&gt; 으로 파일을 다운로드합니다 . Erlang의 경우, 파일 이름을 &lt;code&gt;otp_src_R13B03&lt;/code&gt; 에서 &lt;code&gt;erlang-R13B03&lt;/code&gt; 으로 바꾸어야 합니다.</target>
        </trans-unit>
        <trans-unit id="a04f883fdcdaa5b841bc357b5b1966f0f9a093ff" translate="yes" xml:space="preserve">
          <source>Download the source packages for the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. For tarballs, also print SHA-256 checksums.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 대한 소스 패키지 다운로드&lt;em&gt;&lt;/em&gt; . 타르볼의 경우 SHA-256 체크섬도 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="c8498ff8afe631608ee46819fdce89d40d0adcb2" translate="yes" xml:space="preserve">
          <source>Downloads remote application files to local cache.</source>
          <target state="translated">원격 애플리케이션 파일을 로컬 캐시에 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="0a49a87262259ca37f83ec698e40f56ba4c7060e" translate="yes" xml:space="preserve">
          <source>Dump raw source of a &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; to the standard output.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 의 원시 소스를 표준 출력으로 덤프 합니다.</target>
        </trans-unit>
        <trans-unit id="860eb4de0bbf0d6af5806d85169d3edc22841940" translate="yes" xml:space="preserve">
          <source>Dupes in &lt;code&gt;homebrew/core&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;homebrew/core&lt;/code&gt; 속임수</target>
        </trans-unit>
        <trans-unit id="15d54da16fed3cc2ae89bbdaf9ad9e1b0ec1df2c" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT</source>
          <target state="translated">ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="b33c3801d541763c7bdc9517ac6b20f3537370dc" translate="yes" xml:space="preserve">
          <source>ESSENTIAL COMMANDS</source>
          <target state="translated">필수 명령</target>
        </trans-unit>
        <trans-unit id="3a32c66b4f1ac13712e7f6300d5afb69ac0ef1b7" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/em&gt; may be the number of a PR in &lt;code&gt;homebrew/core&lt;/code&gt;, the URL of a PR on GitHub, the URL of a commit on GitHub or a &amp;ldquo;https://jenkins.brew.sh/job/&amp;hellip;&amp;rdquo; testing job URL.</source>
          <target state="translated">각 &lt;em&gt; &lt;code&gt;patch&lt;/code&gt; &lt;/em&gt; 는 &lt;code&gt;homebrew/core&lt;/code&gt; 의 PR 수, GitHub의 PR URL, GitHub의 커밋 URL 또는 &quot;https://jenkins.brew.sh/job/&amp;hellip;&quot;테스트 작업 URL 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bca545aa3e494c4da44c8532ffc06529c5f36504" translate="yes" xml:space="preserve">
          <source>Editor plugins</source>
          <target state="translated">에디터 플러그인</target>
        </trans-unit>
        <trans-unit id="d89a5ec1140ce5dd978c2baf15972fdf48b8b61f" translate="yes" xml:space="preserve">
          <source>Emacs</source>
          <target state="translated">Emacs</target>
        </trans-unit>
        <trans-unit id="2f8ada2a6dfaba33b145e945f0a442aee6152059" translate="yes" xml:space="preserve">
          <source>Embedded (&lt;strong&gt;END&lt;/strong&gt;) patches can be declared like so:</source>
          <target state="translated">임베디드 ( &lt;strong&gt;END&lt;/strong&gt; ) 패치는 다음과 같이 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea36f81bf05de6ebbcde43a4a3411161167c34c6" translate="yes" xml:space="preserve">
          <source>Embedding a diagram into Markdown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f1688a049f2b2a29d6af4dac2d57cf390fc922" translate="yes" xml:space="preserve">
          <source>Ensure you reference any relevant GitHub issue, e.g. &lt;code&gt;Closes #12345&lt;/code&gt; in the commit message. Homebrew&amp;rsquo;s history is the first thing future contributors will look to when trying to understand the current state of formulae they&amp;rsquo;re interested in.</source>
          <target state="translated">커밋 메시지에서 &lt;code&gt;Closes #12345&lt;/code&gt; 와 같은 관련 GitHub 문제를 참조하십시오 . Homebrew의 역사는 미래의 기고자들이 관심있는 공식의 현재 상태를 이해하려고 할 때 가장 먼저 보게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="a9dec5c45e72627fb72c648339bbd337bce81e3d" translate="yes" xml:space="preserve">
          <source>Enter the interactive Homebrew Ruby shell.</source>
          <target state="translated">대화식 Homebrew Ruby 쉘을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="6b7ad72e5de0fd665821206e3fe27981c8e8a173" translate="yes" xml:space="preserve">
          <source>Even if all criteria are met we may not accept the formula. Documentation tends to lag behind current decision-making. Although some rejections may seem arbitrary or strange they are based on years of experience making Homebrew work acceptably for our users.</source>
          <target state="translated">모든 기준을 충족하더라도 공식을 수락하지 않을 수 있습니다. 문서는 현재의 의사 결정보다 뒤쳐지는 경향이 있습니다. 일부 거부는 임의적이거나 이상하게 보일 수 있지만 사용자가 Homebrew를 수용 할 수있게 해준 수년간의 경험을 바탕으로합니다.</target>
        </trans-unit>
        <trans-unit id="d8989c4c50538b81de4e2998e00a8f2d5ad66b25" translate="yes" xml:space="preserve">
          <source>Eventually a new version of the software will be released. In this case you should update the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt;&lt;code&gt;sha256&lt;/code&gt;&lt;/a&gt;. If a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt; line exists outside any &lt;code&gt;bottle do&lt;/code&gt; block &lt;em&gt;and&lt;/em&gt; the new release is stable rather than devel, it should be removed.</source>
          <target state="translated">결국 새로운 버전의 소프트웨어가 출시 될 것입니다. 이 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt; &lt;code&gt;sha256&lt;/code&gt; 을&lt;/a&gt; 업데이트해야합니다 . 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/a&gt; 라인은 어떤 외부에 존재 &lt;code&gt;bottle do&lt;/code&gt; 블록을 &lt;em&gt;하고&lt;/em&gt; 새 릴리스가 안정보다는 (STABLE), 그것은 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="f9389d6181a4d7f100e031d3f7a50f3b4423a81c" translate="yes" xml:space="preserve">
          <source>Eventually a new version of the software will be released. In this case you should update the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt;&lt;code&gt;sha256&lt;/code&gt;&lt;/a&gt;. If a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt; line exists outside any &lt;code&gt;bottle do&lt;/code&gt; block it should be removed.</source>
          <target state="translated">결국 새로운 버전의 소프트웨어가 출시 될 것입니다. 이 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt; &lt;code&gt;sha256&lt;/code&gt; 을&lt;/a&gt; 업데이트해야합니다 . 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/a&gt; 라인은 어떤 외부에 존재 &lt;code&gt;bottle do&lt;/code&gt; 그것을 제거해야 차단합니다.</target>
        </trans-unit>
        <trans-unit id="45f1973be697ef7973806074dcc327469b1fae05" translate="yes" xml:space="preserve">
          <source>Every Ruby file in the codebase is divided into three strictness levels: false, true and strict. The &lt;code&gt;false&lt;/code&gt; files only report errors related to the syntax, constant resolution and correctness of the method signatures, and not type errors. We use this file to override strictness on a file-by-file basis. Our longtime goal is to move all &lt;code&gt;false&lt;/code&gt; files to &lt;code&gt;true&lt;/code&gt; and start reporting type errors on those files as well. If you are making changes that require adding a new ruby file, we would urge you to add it to &lt;code&gt;true&lt;/code&gt; and work out the resulting type errors. Read more about Sorbet&amp;rsquo;s strictness levels &lt;a href=&quot;https://sorbet.org/docs/static#file-level-granularity-strictness-levels&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cf753bd41a7ad989cf8bf9884be807ce6086d3" translate="yes" xml:space="preserve">
          <source>Everything is built on Git, so contribution is easy:</source>
          <target state="translated">모든 것이 Git을 기반으로하기 때문에 기여가 쉽다 :</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="f6a77f5d2a05672a325c994293e2004361f37345" translate="yes" xml:space="preserve">
          <source>Example for an SVG image embedded into Markdown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9680ed3c96d649c2758d1c86751d29dab7b89d" translate="yes" xml:space="preserve">
          <source>Example for styling (where allowed):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992c8ef7b7cf563be842401699c6588e3644343b" translate="yes" xml:space="preserve">
          <source>Example install using GCC 7:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="5517646ddce7af783d545b9391908869b83222c9" translate="yes" xml:space="preserve">
          <source>External &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/a&gt;es can be declared using resource-style blocks:</source>
          <target state="translated">리소스 스타일 블록을 사용하여 외부 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt; &lt;code&gt;patch&lt;/code&gt; &lt;/a&gt; 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7a427d09b892f08dcfec10acd83caef4a9f48cc" translate="yes" xml:space="preserve">
          <source>External Commands</source>
          <target state="translated">외부 명령</target>
        </trans-unit>
        <trans-unit id="2afc52a5487070e7f44ad2102a4faed361851af4" translate="yes" xml:space="preserve">
          <source>External commands</source>
          <target state="translated">외부 명령</target>
        </trans-unit>
        <trans-unit id="dfe9fc056dcbf11ff2c43afc315a6eaf159c20ce" translate="yes" xml:space="preserve">
          <source>External commands come in two flavours: Ruby commands and shell scripts.</source>
          <target state="translated">외부 명령은 Ruby 명령과 쉘 스크립트의 두 가지 형태로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="d8fe7db1b3f1351da0c3de3f5b37bf5275338413" translate="yes" xml:space="preserve">
          <source>Extract or &lt;code&gt;git clone&lt;/code&gt; Homebrew wherever you want. Use &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; if possible (to enable the use of binary packages).</source>
          <target state="translated">원하는 곳에서 Homebrew를 추출하거나 &lt;code&gt;git clone&lt;/code&gt; . 가능한 경우 &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; 를 사용하십시오 (바이너리 패키지 사용을 활성화하기 위해).</target>
        </trans-unit>
        <trans-unit id="ac85d28f9a7ae98355f724bfd3707a3ce184c2bc" translate="yes" xml:space="preserve">
          <source>Extract or &lt;code&gt;git clone&lt;/code&gt; Homebrew wherever you want. Use &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; if possible (to enabled the use of binary packages).</source>
          <target state="translated">추출 또는 &lt;code&gt;git clone&lt;/code&gt; 원하는 곳에서 Homebrew를 . 가능하면 &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; 를 사용하십시오 (바이너리 패키지 사용 가능).</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="6b8f6a35b48a0afa1f1e1c73e07a3e281de4c8ec" translate="yes" xml:space="preserve">
          <source>Fedora, CentOS, or Red Hat</source>
          <target state="translated">페도라, CentOS 또는 Red Hat</target>
        </trans-unit>
        <trans-unit id="a5df09dfe00e71d2d59396935682acd85c69de27" translate="yes" xml:space="preserve">
          <source>Fetch and reset Homebrew and all tap repositories (or any specified &lt;em&gt;&lt;code&gt;repository&lt;/code&gt;&lt;/em&gt;) using &lt;code&gt;git&lt;/code&gt;(1) to their latest &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1)을 사용하여 Homebrew 및 모든 탭 저장소 (또는 지정된 &lt;em&gt; &lt;code&gt;repository&lt;/code&gt; &lt;/em&gt; )를 최신 &lt;code&gt;origin/master&lt;/code&gt; 로 가져오고 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="e45d17c936d01e458fc669f63e00d92a281df8f8" translate="yes" xml:space="preserve">
          <source>Fetch the newest version of Homebrew and all formulae from GitHub using &lt;code&gt;git&lt;/code&gt;(1) and perform any necessary migrations.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1)을 사용하여 GitHub에서 최신 버전의 Homebrew 및 모든 공식을 가져 오고 필요한 마이그레이션을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e364f6fc295ed2cd497729768044134cc61a9f80" translate="yes" xml:space="preserve">
          <source>Fetches and resets Homebrew and all tap repositories (or any specified &lt;code&gt;repository&lt;/code&gt;) using &lt;code&gt;git&lt;/code&gt;(1) to their latest &lt;code&gt;origin/master&lt;/code&gt;. Note this will destroy all your uncommitted or committed changes.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1)을 사용하여 Homebrew 및 모든 탭 리포지토리 (또는 지정된 &lt;code&gt;repository&lt;/code&gt; )를 최신 &lt;code&gt;origin/master&lt;/code&gt; 오고 재설정합니다 . 커밋되지 않거나 커밋 된 모든 변경 사항이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="d635760e4d07173504cf1ca672836f14b9162419" translate="yes" xml:space="preserve">
          <source>File level operations</source>
          <target state="translated">파일 레벨 작업</target>
        </trans-unit>
        <trans-unit id="ce56dc9db4e932966bffb4f17c6cfdf9506d9b1a" translate="yes" xml:space="preserve">
          <source>Files in the &lt;code&gt;.drawio.svg&lt;/code&gt; format can be processed offline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986941d209cd282b8a6f5ee4ea0132b3d301d21a" translate="yes" xml:space="preserve">
          <source>Files with the &lt;code&gt;.drawio.svg&lt;/code&gt; extension are SVG files with embedded &lt;a href=&quot;https://www.diagrams.net/&quot;&gt;draw.io&lt;/a&gt; source code. Using that format lends itself to a developer-friendly workflow: it is valid SVG, plays well with &lt;code&gt;git diff&lt;/code&gt; and can be edited in lock-step using various online and offline flavours of draw.io. If you use VS Code, you can use an &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio&quot;&gt;extension&lt;/a&gt; for draw.io integration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350755f19aa17c25480857074207ac40c955f395" translate="yes" xml:space="preserve">
          <source>Fill in the &lt;code&gt;homepage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;homepage&lt;/code&gt; 작성</target>
        </trans-unit>
        <trans-unit id="ee845b8ee554af30f9008de322c5fc949537313e" translate="yes" xml:space="preserve">
          <source>Fill in the &lt;code&gt;license&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;license&lt;/code&gt; 작성</target>
        </trans-unit>
        <trans-unit id="686911da64422caabca1d79e6cd0f49f7822bfc3" translate="yes" xml:space="preserve">
          <source>Find pull requests that can be automatically merged using &lt;code&gt;brew pr-publish&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew pr-publish&lt;/code&gt; 를 사용하여 자동으로 병합 될 수있는 pull 요청을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="b008f55b79c48133809609724a204592a493c8fe" translate="yes" xml:space="preserve">
          <source>First update the formulae and Homebrew itself:</source>
          <target state="translated">먼저 공식과 Homebrew 자체를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="b16202f5bd6131b93527b7df86bcf2d11521068c" translate="yes" xml:space="preserve">
          <source>First, check the pull requests in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;homebrew-core&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/pulls&quot;&gt;linuxbrew-core&lt;/a&gt; repositories (whichever apply) to make sure there isn&amp;rsquo;t already an open PR. You may also want to look through closed pull requests for the formula, as sometimes formulae run into problems preventing them from being updated and it&amp;rsquo;s better to be aware of any issues before putting significant effort into an update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43dbc37ff0301ad636fc2f2e29110749c4822f5" translate="yes" xml:space="preserve">
          <source>First, check to make sure your issue is not listed in the &lt;a href=&quot;faq&quot;&gt;FAQ&lt;/a&gt; or &lt;a href=&quot;common-issues&quot;&gt;Common Issues&lt;/a&gt; and can&amp;rsquo;t otherwise be resolved with the information in the &lt;a href=&quot;tips-n'-tricks&quot;&gt;Tips and Tricks&lt;/a&gt; documentation. Next, go through the steps in the &lt;a href=&quot;troubleshooting&quot;&gt;Troubleshooting guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dddc73487fe3965f34a100742c68bd573efac4" translate="yes" xml:space="preserve">
          <source>Firstly, the overall environment in which Homebrew runs is filtered to avoid environment contamination breaking from-source builds (&lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt;). In particular, this process filters all but the given whitelisted variables, but allows environment variables prefixed with &lt;code&gt;HOMEBREW_&lt;/code&gt;. The specific implementation can be seen in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/bin/brew&quot;&gt;&lt;code&gt;bin/brew&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">첫째, Homebrew가 실행되는 전체 환경은 소스 빌드 ( &lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt; ) 에서 깨지는 환경 오염을 방지하기 위해 필터링됩니다 . 특히이 프로세스는 주어진 화이트리스트 변수를 제외한 모든 변수를 필터링하지만 &lt;code&gt;HOMEBREW_&lt;/code&gt; 접두사가 붙은 환경 변수를 허용합니다 . 구체적인 구현은 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/bin/brew&quot;&gt; &lt;code&gt;bin/brew&lt;/code&gt; &lt;/a&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a2870827d04edfab10a41e5b622034be89ea2b2" translate="yes" xml:space="preserve">
          <source>Firstly, the overall environment in which Homebrew runs is filtered to avoid environment contamination breaking from-source builds (&lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt;). In particular, this process filters all but the given whitelisted variables, but allows environment variables prefixed with &lt;code&gt;HOMEBREW_&lt;/code&gt;. The specific implementation can be seen in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/bin/brew&quot;&gt;&lt;code&gt;bin/brew&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">먼저, Homebrew가 실행되는 전체 환경이 필터링되어 소스 빌드에서 환경 오염이 발생하지 않도록합니다 ( &lt;a href=&quot;https://github.com/Homebrew/brew/issues/932&quot;&gt;https://github.com/Homebrew/brew/issues/932&lt;/a&gt; ). 특히이 프로세스는 주어진 화이트리스트 변수를 제외한 모든 변수를 필터링하지만 접두어 &lt;code&gt;HOMEBREW_&lt;/code&gt; 로 환경 변수를 허용합니다 . 구체적인 구현은 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/bin/brew&quot;&gt; &lt;code&gt;bin/brew&lt;/code&gt; &lt;/a&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e065c07cc36b40fe9202514726e4729330346564" translate="yes" xml:space="preserve">
          <source>Follow the &lt;em&gt;Next steps&lt;/em&gt; instructions to add Homebrew to your &lt;code&gt;PATH&lt;/code&gt; and to your bash shell profile script, either &lt;code&gt;~/.profile&lt;/code&gt; on Debian/Ubuntu or &lt;code&gt;~/.bash_profile&lt;/code&gt; on CentOS/Fedora/Red Hat.</source>
          <target state="translated">&lt;em&gt;다음 단계&lt;/em&gt; 지침에 따라 Homebrew를 &lt;code&gt;PATH&lt;/code&gt; 및 bash 셸 프로필 스크립트 에 추가합니다 (Debian / Ubuntu의 &lt;code&gt;~/.profile&lt;/code&gt; 또는 CentOS / Fedora / Red Hat의 &lt;code&gt;~/.bash_profile&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="10348ebb48f3919a14bb18d61c9cc4f145fbc59a" translate="yes" xml:space="preserve">
          <source>Follow the &lt;em&gt;Next steps&lt;/em&gt; instructions to add Homebrew to your &lt;code&gt;PATH&lt;/code&gt; and to your bash shell profile script, either &lt;code&gt;~/.profile&lt;/code&gt; on Debian/Ubuntu or &lt;code&gt;~/.bash_profile&lt;/code&gt; on CentOS/Fedora/RedHat.</source>
          <target state="translated">&lt;em&gt;다음 단계&lt;/em&gt; 지침에 따라 Homebrew를 &lt;code&gt;PATH&lt;/code&gt; 및 bash 셸 프로필 스크립트 ( Debian / Ubuntu의 &lt;code&gt;~/.profile&lt;/code&gt; 또는 CentOS / Fedora / RedHat의 &lt;code&gt;~/.bash_profile&lt;/code&gt; ) 에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6e7e119be0f50a4418678899b476d6da27570604" translate="yes" xml:space="preserve">
          <source>Following a macOS upgrade it may be necessary to reinstall the Xcode Command Line Tools and &lt;code&gt;brew upgrade&lt;/code&gt; all installed formula:</source>
          <target state="translated">macOS 업그레이드 후 Xcode 명령 행 도구를 다시 설치하고 설치된 모든 공식을 &lt;code&gt;brew upgrade&lt;/code&gt; 해야합니다.</target>
        </trans-unit>
        <trans-unit id="c74f4e20782c04b47841a97e53673eaf0674b705" translate="yes" xml:space="preserve">
          <source>Following up</source>
          <target state="translated">후속</target>
        </trans-unit>
        <trans-unit id="71dddded521cab0569200541045ce5e595e3bc89" translate="yes" xml:space="preserve">
          <source>For GNU licenses (such as &lt;code&gt;GPL&lt;/code&gt;, &lt;code&gt;LGPL&lt;/code&gt;, &lt;code&gt;AGPL&lt;/code&gt; and &lt;code&gt;GFDL&lt;/code&gt;), use &lt;code&gt;-only&lt;/code&gt; or &lt;code&gt;-or-later&lt;/code&gt;. For example, the following would forbid &lt;code&gt;GPL-2.0&lt;/code&gt;, &lt;code&gt;LGPL-2.1&lt;/code&gt; and &lt;code&gt;LGPL-3.0&lt;/code&gt; formulae from being installed, but would allow &lt;code&gt;GPL-3.0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad92a7ffd012fb12e62a52d47cfd175c2150d4f" translate="yes" xml:space="preserve">
          <source>For Homebrew maintainers, formulae should only ever be migrated into and within the Homebrew organisation (e.g. from Homebrew/core to Homebrew/cask, or from a third-party tap to Homebrew/core), and never out of it.</source>
          <target state="translated">Homebrew 관리자의 경우 공식은 Homebrew 조직 내부 및 내부에서만 (예 : Homebrew / core에서 Homebrew / cask로 또는 타사 탭에서 Homebrew / core로) 마이그레이션해야합니다.</target>
        </trans-unit>
        <trans-unit id="e49fd7332c9bbb8093c3f406f739035dd9dea3e4" translate="yes" xml:space="preserve">
          <source>For Python formulae, running &lt;code&gt;brew update-python-resources &amp;lt;formula&amp;gt;&lt;/code&gt; will automatically add the necessary &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt; stanzas for the dependencies of your Python application to the formula. Note that &lt;code&gt;brew update-python-resources&lt;/code&gt; is run automatically by &lt;code&gt;brew create&lt;/code&gt; if you pass the &lt;code&gt;--python&lt;/code&gt; flag. If &lt;code&gt;brew update-python-resources&lt;/code&gt; is unable to determine the correct &lt;code&gt;resource&lt;/code&gt; stanzas, &lt;a href=&quot;https://github.com/tdsmith/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; is a good third-party alternative that may help.</source>
          <target state="translated">Python 수식의 경우 &lt;code&gt;brew update-python-resources &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행하면 Python 애플리케이션의 종속성에 필요한 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt; 스탠자 가 수식에 자동으로 추가됩니다 . 참고 &lt;code&gt;brew update-python-resources&lt;/code&gt; 에 의해 자동으로 실행되는 &lt;code&gt;brew create&lt;/code&gt; 당신이 통과하면 &lt;code&gt;--python&lt;/code&gt; 플래그. 경우 &lt;code&gt;brew update-python-resources&lt;/code&gt; 올바른 판단 할 수없는 &lt;code&gt;resource&lt;/code&gt; 연을, &lt;a href=&quot;https://github.com/tdsmith/homebrew-pypi-poet&quot;&gt;사제 - pypi 시인은&lt;/a&gt; 5 월 도움이 좋은 타사 대안입니다.</target>
        </trans-unit>
        <trans-unit id="2d22059d8836737e27347a07ee137c55802e830f" translate="yes" xml:space="preserve">
          <source>For brewed Python, modules installed with &lt;code&gt;pip3&lt;/code&gt; or &lt;code&gt;python3 setup.py install&lt;/code&gt; will be installed to the &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; directory (explained above). Executable Python scripts will be in &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt;.</source>
          <target state="translated">brewed Python의 경우 &lt;code&gt;pip3&lt;/code&gt; 또는 &lt;code&gt;python3 setup.py install&lt;/code&gt; 설치된 모듈 은 &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; 디렉토리 (위에 설명 됨)에 설치됩니다. 실행 가능한 Python 스크립트는 &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bb511e207d3ed75e3d610536ab18b9858aa35bb" translate="yes" xml:space="preserve">
          <source>For brewed Python, modules installed with &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;python setup.py install&lt;/code&gt; will be installed to the &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; directory (explained above). Executable Python scripts will be in &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt;.</source>
          <target state="translated">추출 된 Python의 경우 &lt;code&gt;pip&lt;/code&gt; 또는 &lt;code&gt;python setup.py install&lt;/code&gt; 설치된 모듈 은 &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; 디렉토리 (위에 설명)에 설치됩니다. 실행 가능한 Python 스크립트는 &lt;code&gt;$(brew --prefix)/bin&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="26a2c095f724e7dd44ac857ef1f0fdb62c0bde28" translate="yes" xml:space="preserve">
          <source>For complex diagrams, use the &lt;code&gt;.drawio.svg&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b1f921df041580c870e5af9d5b6e0c9785f41" translate="yes" xml:space="preserve">
          <source>For disabled and deprecated formulae, running &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; will also provide an explanation.</source>
          <target state="translated">비활성화되고 더 이상 사용되지 않는 수식의 경우 &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행 하면 설명도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f9d71f14ab435b9afd1d312a01617b2d3309c633" translate="yes" xml:space="preserve">
          <source>For example, Ruby 1.9&amp;rsquo;s gems should be installed to &lt;code&gt;var/lib/ruby/&lt;/code&gt; so that gems don&amp;rsquo;t need to be reinstalled when upgrading Ruby. You can usually do this with symlink trickery, or (ideally) a configure option.</source>
          <target state="translated">예를 들어, Ruby 1.9의 gem은 &lt;code&gt;var/lib/ruby/&lt;/code&gt; 설치해야 Ruby를 업그레이드 할 때 gem을 다시 설치할 필요가 없습니다. 일반적으로 symlink trickery 또는 (이상적으로) configure 옵션을 사용하여이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6207ba9ba1fdb8b6668983a1873ef54cbd3b894a" translate="yes" xml:space="preserve">
          <source>For example, a job which has been queued but not yet completed will have a section in the pull request that looks like this:</source>
          <target state="translated">예를 들어, 대기 중이지만 아직 완료되지 않은 작업은 풀 요청에 다음과 같은 섹션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5cced2d9e9520c91541ef1101e5665f4dcb244d" translate="yes" xml:space="preserve">
          <source>For example, see the &lt;a href=&quot;https://github.com/Homebrew/homebrew-services/blob/a58a1fe9145de4e50e1cbfb5b0e8a30087826393/cmd/brew-services.rb#L1-L23&quot;&gt;header of &lt;code&gt;brew-services.rb&lt;/code&gt;&lt;/a&gt; which is output with &lt;code&gt;brew services --help&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;brew services --help&lt;/code&gt; 와 함께 출력되는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-services/blob/a58a1fe9145de4e50e1cbfb5b0e8a30087826393/cmd/brew-services.rb#L1-L23&quot;&gt; &lt;code&gt;brew-services.rb&lt;/code&gt; &lt;/a&gt; 의 헤더를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93591165853b0df8e72ed4a3db49266bac66f1f8" translate="yes" xml:space="preserve">
          <source>For example, the following forbids installation of &lt;code&gt;MIT&lt;/code&gt;, &lt;code&gt;Artistic-1.0&lt;/code&gt; and &lt;code&gt;:public_domain&lt;/code&gt; licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda0996e26c78a93315e5df54bce79eb9bf3990d" translate="yes" xml:space="preserve">
          <source>For example, to use an unauthenticated HTTP or SOCKS5 proxy:</source>
          <target state="translated">예를 들어, 인증되지 않은 HTTP 또는 SOCKS5 프록시를 사용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="efbc6e86f91846f0970b9c5336989ad2650f9d89" translate="yes" xml:space="preserve">
          <source>For more info see &lt;a href=&quot;https://www.debian.org/doc/debian-policy/ch-source.html#s-embeddedfiles&quot;&gt;Debian&amp;rsquo;s&lt;/a&gt; and &lt;a href=&quot;https://docs.fedoraproject.org/en-US/packaging-guidelines/#bundling&quot;&gt;Fedora&amp;rsquo;s&lt;/a&gt; stances on this.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.debian.org/doc/debian-policy/ch-source.html#s-embeddedfiles&quot;&gt;Debian&lt;/a&gt; 과 &lt;a href=&quot;https://docs.fedoraproject.org/en-US/packaging-guidelines/#bundling&quot;&gt;Fedora의&lt;/a&gt; 입장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bc7d189950768dc70cb6106320597e841f18b372" translate="yes" xml:space="preserve">
          <source>For most applications, all you will need to write is:</source>
          <target state="translated">대부분의 응용 프로그램에서 작성해야 할 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd76775c5d7d588a1a183b2ec1782c6547492fe7" translate="yes" xml:space="preserve">
          <source>For the full command list, see the &lt;a href=&quot;#commands&quot;&gt;COMMANDS&lt;/a&gt; section.</source>
          <target state="translated">전체 명령 목록은 &lt;a href=&quot;#commands&quot;&gt;COMMANDS&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="d88150e031b8d1c699e0357add65ebfe7b37b502" translate="yes" xml:space="preserve">
          <source>Former maintainers with significant contributions include JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor, Uladzislau Shablinski, Alyssa Ross, ilovezfs and Homebrew&amp;rsquo;s creator: Max Howell.</source>
          <target state="translated">JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, 중성자, Tomasz Pajor, Uladzislau Shablinski , Alyssa Ross, ilovezfs 및 Homebrew의 제작자 : Max Howell.</target>
        </trans-unit>
        <trans-unit id="a76df515c9afe0dc8ca886878d69b58397385ccb" translate="yes" xml:space="preserve">
          <source>Former maintainers with significant contributions include Jan Viljanen, JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor, Uladzislau Shablinski, Alyssa Ross, ilovezfs, Chongyu Zhu and Homebrew&amp;rsquo;s creator: Max Howell.</source>
          <target state="translated">중요한 공헌을 한 전 관리자로는 Jan Viljanen, JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor가 있습니다. , Uladzislau Shablinski, Alyssa Ross, ilovezfs, Chongyu Zhu 및 Homebrew의 제작자 : Max Howell.</target>
        </trans-unit>
        <trans-unit id="76d74fcdb71ff21e5c7cc68e90ab0ce8298925ed" translate="yes" xml:space="preserve">
          <source>Formula Cookbook</source>
          <target state="translated">공식 요리 책</target>
        </trans-unit>
        <trans-unit id="164ae4c677e73b156fb4524a41eab70a9d5d9c52" translate="yes" xml:space="preserve">
          <source>Formula DSL</source>
          <target state="translated">공식 DSL</target>
        </trans-unit>
        <trans-unit id="c36d504a9980cf199ad4e5b9b27117c791ba9b98" translate="yes" xml:space="preserve">
          <source>Formula requiring MPI should use &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; by adding &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; to the formula, rather than &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH&lt;/a&gt;. These packages have conflicts and provide the same standardised interfaces. Choosing a default implementation and requiring it to be adopted allows software to link against multiple libraries that rely on MPI without creating un-anticipated incompatibilities due to differing MPI runtimes.</source>
          <target state="translated">Formula requiring MPI should use &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; by adding &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; to the formula, rather than &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH&lt;/a&gt;. These packages have conflicts and provide the same standardised interfaces. Choosing a default implementation and requiring it to be adopted allows software to link against multiple libraries that rely on MPI without creating un-anticipated incompatibilities due to differing MPI runtimes.</target>
        </trans-unit>
        <trans-unit id="6e0de3c5a0823252f05a90f96b0f8e7915566054" translate="yes" xml:space="preserve">
          <source>Formula requiring MPI should use &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; by adding &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; to the formula, rather than &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH&lt;/a&gt;. These packages have conflicts and provide the same standardized interfaces. Choosing a default implementation and requiring it to be adopted allows software to link against multiple libraries that rely on MPI without creating un-anticipated incompatibilities due to differing MPI runtimes.</source>
          <target state="translated">MPI가 필요한 수식은 &lt;a href=&quot;https://www.mpich.org/&quot;&gt;MPICH가&lt;/a&gt; 아니라 &lt;code&gt;depends_on &quot;open-mpi&quot;&lt;/code&gt; 를 수식 에 추가하여 &lt;a href=&quot;https://www.open-mpi.org/&quot;&gt;OpenMPI&lt;/a&gt; 를 사용해야합니다 . 이러한 패키지는 충돌이 있으며 동일한 표준화 된 인터페이스를 제공합니다. 기본 구현을 선택하고 채택해야하므로 소프트웨어는 MPI 런타임이 다르기 때문에 예상치 못한 비 호환성을 만들지 않고 MPI에 의존하는 여러 라이브러리에 소프트웨어를 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1d4b5975642a64fe7542b334bb6ae65fd98156a" translate="yes" xml:space="preserve">
          <source>Formula with duplicate names</source>
          <target state="translated">이름이 중복되는 수식</target>
        </trans-unit>
        <trans-unit id="3580d09697ff61ff9f2421058ac2acb857df9fe9" translate="yes" xml:space="preserve">
          <source>Formulae Versions</source>
          <target state="translated">수식 버전</target>
        </trans-unit>
        <trans-unit id="cefc3112aa91d0a8133af546b75253bf85712914" translate="yes" xml:space="preserve">
          <source>Formulae can specify alternate downloads for the upstream project&amp;rsquo;s &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;) or &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt;&lt;code&gt;devel&lt;/code&gt;&lt;/a&gt; release (unstable but not &lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;).</source>
          <target state="translated">수식은 업스트림 프로젝트 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;master&lt;/code&gt; / &lt;code&gt;trunk&lt;/code&gt; ) 또는 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt; &lt;code&gt;devel&lt;/code&gt; &lt;/a&gt; 릴리스 (불안하지만 &lt;code&gt;master&lt;/code&gt; / &lt;code&gt;trunk&lt;/code&gt; 아님)에 대한 대체 다운로드를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd12713c789321571a1db078d149687f46bc0aec" translate="yes" xml:space="preserve">
          <source>Formulae can specify an alternate download for the upstream project&amp;rsquo;s &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;master&lt;/code&gt;/&lt;code&gt;trunk&lt;/code&gt;).</source>
          <target state="translated">Formulae can specify an alternate download for the upstream project&amp;rsquo;s &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;master&lt;/code&gt; / &lt;code&gt;trunk&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0cc2e6eb2ce31c04e0bb5ef092fb782edd86cd02" translate="yes" xml:space="preserve">
          <source>Formulae for apps that require Python 3 &lt;strong&gt;should&lt;/strong&gt; declare an unconditional dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt;. These apps &lt;strong&gt;must&lt;/strong&gt; work with the current Homebrew Python 3.x formula.</source>
          <target state="translated">Python 3 &lt;strong&gt;이&lt;/strong&gt; 필요한 앱의 공식은 &lt;code&gt;&quot;python&quot;&lt;/code&gt; 에 대한 무조건 종속성을 선언 &lt;strong&gt;해야합니다&lt;/strong&gt; . 이 앱 &lt;strong&gt;은&lt;/strong&gt; 현재 Homebrew Python 3.x 공식과 작동 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="21e49c4c3674ecdf429b36258de317011d8ffd28" translate="yes" xml:space="preserve">
          <source>Formulae for apps that require Python 3 &lt;strong&gt;should&lt;/strong&gt; declare an unconditional dependency on &lt;code&gt;&quot;python@3.x&quot;&lt;/code&gt;. These apps &lt;strong&gt;must&lt;/strong&gt; work with the current Homebrew Python 3.x formula.</source>
          <target state="translated">Formulae for apps that require Python 3 &lt;strong&gt;should&lt;/strong&gt; declare an unconditional dependency on &lt;code&gt;&quot;python@3.x&quot;&lt;/code&gt; . These apps &lt;strong&gt;must&lt;/strong&gt; work with the current Homebrew Python 3.x formula.</target>
        </trans-unit>
        <trans-unit id="292613c6780e458958769978d0c2a3bd7e719208" translate="yes" xml:space="preserve">
          <source>Formulae in the core repository must have a stable version tagged by the upstream project. Tarballs are preferred to Git checkouts, and tarballs should include the version in the filename whenever possible.</source>
          <target state="translated">핵심 리포지토리의 수식에는 업스트림 프로젝트에서 태그가 지정된 안정적인 버전이 있어야합니다. Tarball은 Git 체크 아웃보다 선호되며 tarball은 가능할 때마다 파일 이름에 버전을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="b00903dd0080d31b6f7459c443f58974cd8c8e1b" translate="yes" xml:space="preserve">
          <source>Formulae related pull request</source>
          <target state="translated">수식 관련 풀 요청</target>
        </trans-unit>
        <trans-unit id="2619e6e6cf7ea07e602f411bfa784f7bf711ef4c" translate="yes" xml:space="preserve">
          <source>Formulae revisions</source>
          <target state="translated">수식 수정</target>
        </trans-unit>
        <trans-unit id="e6f2ca9f0629cb5f6a9e390ea47b134c358d7612" translate="yes" xml:space="preserve">
          <source>Formulae that declare an unconditional dependency on the &lt;code&gt;&quot;python&quot;&lt;/code&gt; formula are bottled against Homebrew&amp;rsquo;s Python 3.x and require it to be installed.</source>
          <target state="translated">Formulae that declare an unconditional dependency on the &lt;code&gt;&quot;python&quot;&lt;/code&gt; formula are bottled against Homebrew&amp;rsquo;s Python 3.x and require it to be installed.</target>
        </trans-unit>
        <trans-unit id="a6318a14a3edd5de52204ff95aff31e7cea3415e" translate="yes" xml:space="preserve">
          <source>Formulae that declare an unconditional dependency on the &lt;code&gt;&quot;python&quot;&lt;/code&gt; or &lt;code&gt;&quot;python@2&quot;&lt;/code&gt; formulae are bottled against Homebrew&amp;rsquo;s Python 3.x or 2.7.x and require it to be installed.</source>
          <target state="translated">&lt;code&gt;&quot;python&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;python@2&quot;&lt;/code&gt; 공식 에 무조건 종속을 선언하는 공식은 Homebrew의 Python 3.x 또는 2.7.x에 병을 지어 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="ddb0e30c5fcd4b71b0b5d789603fd1168d538974" translate="yes" xml:space="preserve">
          <source>Formulae that depend on versioned formulae must not depend on the same formulae at two different versions twice in their recursive dependencies. For example, if you depend on &lt;code&gt;openssl@1.0&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt;, and &lt;code&gt;foo&lt;/code&gt; depends on &lt;code&gt;openssl&lt;/code&gt; then you must instead use &lt;code&gt;openssl&lt;/code&gt;.</source>
          <target state="translated">버전이 지정된 수식에 의존하는 수식은 재귀 종속성에서 두 개의 다른 버전에서 동일한 수식에 두 번 의존해서는 안됩니다. 당신이에 따라 예를 들어, &lt;code&gt;openssl@1.0&lt;/code&gt; 및 &lt;code&gt;foo&lt;/code&gt; 는 , 그리고 &lt;code&gt;foo&lt;/code&gt; 에 따라 &lt;code&gt;openssl&lt;/code&gt; 당신이 대신 사용해야 &lt;code&gt;openssl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3f0de58c24fd08aad88ca0d5c72e8a6e3685a28" translate="yes" xml:space="preserve">
          <source>Fortran</source>
          <target state="translated">Fortran</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">자주 묻는 질문</target>
        </trans-unit>
        <trans-unit id="1428e27956616ddbe464815d397792bb674af568" translate="yes" xml:space="preserve">
          <source>Further down the rabbit hole</source>
          <target state="translated">토끼 구멍 아래로</target>
        </trans-unit>
        <trans-unit id="cc599b9d9e1bcc55dcd56069eb8b26cb8f403df5" translate="yes" xml:space="preserve">
          <source>GLOBAL CASK OPTIONS</source>
          <target state="translated">GLOBAL CASK OPTIONS</target>
        </trans-unit>
        <trans-unit id="42eb2e107155f1cad20da46b5d8c2f9a4a858b4c" translate="yes" xml:space="preserve">
          <source>GLOBAL OPTIONS</source>
          <target state="translated">글로벌 옵션</target>
        </trans-unit>
        <trans-unit id="4cc8c0961196d8e939d3c64e0da9d5372c3ff442" translate="yes" xml:space="preserve">
          <source>GNU licenses (&lt;code&gt;GPL&lt;/code&gt;, &lt;code&gt;LGPL&lt;/code&gt;, &lt;code&gt;AGPL&lt;/code&gt; and &lt;code&gt;GFDL&lt;/code&gt;) require either the &lt;code&gt;-only&lt;/code&gt; or the &lt;code&gt;-or-later&lt;/code&gt; suffix to indicate whether a later version of the license is allowed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61486693a98f263630aee035766c8e1e5b2f3f6e" translate="yes" xml:space="preserve">
          <source>GUI apps on macOS don&amp;rsquo;t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in their &lt;code&gt;PATH&lt;/code&gt; by default. If you&amp;rsquo;re on Mountain Lion or later, you can fix this by running &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; and then rebooting, as documented in &lt;code&gt;man launchctl&lt;/code&gt;. Note that this sets the launchctl &lt;code&gt;PATH&lt;/code&gt; for &lt;em&gt;all users&lt;/em&gt;. For earlier versions of macOS, see &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">GUI apps on macOS don&amp;rsquo;t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in their &lt;code&gt;PATH&lt;/code&gt; by default. If you&amp;rsquo;re on Mountain Lion or later, you can fix this by running &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; and then rebooting, as documented in &lt;code&gt;man launchctl&lt;/code&gt; . Note that this sets the launchctl &lt;code&gt;PATH&lt;/code&gt; for &lt;em&gt;all users&lt;/em&gt;. For earlier versions of macOS, see &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;this page&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8a08bbc6cec2e6ec827c06bd9cd119cda125b211" translate="yes" xml:space="preserve">
          <source>GUI apps on macOS don&amp;rsquo;t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in their &lt;code&gt;PATH&lt;/code&gt; by default. If you&amp;rsquo;re on Mountain Lion or later, you can fix this by running &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; and then rebooting, as documented in &lt;code&gt;man launchctl&lt;/code&gt;. Note that this sets the launchctl PATH for &lt;em&gt;all users&lt;/em&gt;. For earlier versions of macOS, see &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">GUI가없는 맥 OS에서 애플 리케이션 &lt;code&gt;/usr/local/bin&lt;/code&gt; 자신의 &lt;code&gt;PATH&lt;/code&gt; 기본적으로합니다. Mountain Lion 이상인 경우 &lt;code&gt;sudo launchctl config user path &quot;/usr/local/bin:$PATH&quot;&lt;/code&gt; 를 실행 한 다음 &lt;code&gt;man launchctl&lt;/code&gt; 에 설명 된대로 재부팅 하여이 문제를 해결할 수 있습니다 . 이것은 &lt;em&gt;모든 사용자에&lt;/em&gt; 대한 launchctl PATH를 설정합니다 . 이전 버전의 macOS는 &lt;a href=&quot;https://developer.apple.com/legacy/library/qa/qa1067/_index.html&quot;&gt;이 페이지를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3dc07b1bdf44f3e8f05a8da8ac9e74418d9a6e4" translate="yes" xml:space="preserve">
          <source>Gems, Eggs and Perl Modules</source>
          <target state="translated">보석, 계란 및 펄 모듈</target>
        </trans-unit>
        <trans-unit id="64c60bb6f3cea1e762e5c09996bfdd3b92752d2c" translate="yes" xml:space="preserve">
          <source>General elections will be held at the AGM.</source>
          <target state="translated">총선은 AGM에서 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="0ceaa36d4b4a18d0cc0e8b640e8df89aa28d3712" translate="yes" xml:space="preserve">
          <source>Generally we&amp;rsquo;d rather you were specific about what files or directories need to be installed rather than installing everything.</source>
          <target state="translated">일반적으로 모든 것을 설치하기보다는 어떤 파일이나 디렉토리를 설치해야하는지 구체적으로 알고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="3d36ea04771fcd0359bb5d6f7b2d125eb2d74336" translate="yes" xml:space="preserve">
          <source>Generate Homebrew&amp;rsquo;s manpages.</source>
          <target state="translated">Homebrew의 맨 페이지를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="c7c7ff09edc0960e7165bbea3febf22a148439bf" translate="yes" xml:space="preserve">
          <source>Generate a bottle (binary package) from a formula that was installed with &lt;code&gt;--build-bottle&lt;/code&gt;. If the formula specifies a rebuild version, it will be incremented in the generated DSL. Passing &lt;code&gt;--keep-old&lt;/code&gt; will attempt to keep it at its original value, while &lt;code&gt;--no-rebuild&lt;/code&gt; will remove it.</source>
          <target state="translated">&lt;code&gt;--build-bottle&lt;/code&gt; 과 함께 설치된 수식에서 병 (이진 패키지)을 생성하십시오 . 공식이 재 빌드 버전을 지정하면 생성 된 DSL에서 증분됩니다. &lt;code&gt;--keep-old&lt;/code&gt; 를 전달하면 원래 값으로 유지하려고 시도하지만 &lt;code&gt;--no-rebuild&lt;/code&gt; 는 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5114be8c648dba2f78026dabf61d573f02127191" translate="yes" xml:space="preserve">
          <source>Generate a formula for the downloadable file at &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&quot;&gt;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; 에서 다운로드 가능한 파일의 수식을 생성 하고 편집기에서 엽니 다. Homebrew는 자동으로 수식 이름과 버전을 파생 시키려고 시도하지만 실패하면 고유 한 템플릿을 만들어야합니다. &lt;code&gt;wget&lt;/code&gt; 과의 수식은 간단한 예로서 기능한다. 전체 API는 &lt;a href=&quot;http://www.rubydoc.info/github/Homebrew/brew/master/Formula&quot;&gt;http://www.rubydoc.info/github/Homebrew/brew/master/Formula를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1814619b048a5f3290460cd727c378d534b273a" translate="yes" xml:space="preserve">
          <source>Generate a formula for the downloadable file at &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;https://rubydoc.brew.sh/Formula&lt;/a&gt;</source>
          <target state="translated">Generate a formula for the downloadable file at &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; and open it in the editor. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you&amp;rsquo;ll have to make your own template. The &lt;code&gt;wget&lt;/code&gt; formula serves as a simple example. For the complete API, see: &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;https://rubydoc.brew.sh/Formula&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="142775e707705cdc022c698e08bceebc25122251" translate="yes" xml:space="preserve">
          <source>Generate the template files for a new tap.</source>
          <target state="translated">새 탭의 템플릿 파일을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="40b59f7283e608435889f8844f8463e169083ff6" translate="yes" xml:space="preserve">
          <source>Get a patch from a GitHub commit or pull request and apply it to Homebrew. Optionally, publish updated bottles for the formulae changed by the patch.</source>
          <target state="translated">GitHub 커밋 또는 풀 요청에서 패치를 가져와 Homebrew에 적용하십시오. 선택적으로 패치에 의해 변경된 수식에 대해 업데이트 된 병을 게시합니다.</target>
        </trans-unit>
        <trans-unit id="294e43a6a8a5d6b8f341bedc722b814ff8ed7544" translate="yes" xml:space="preserve">
          <source>GitHub Flavoured Markdown. GitHub&amp;rsquo;s implementation is the standard, period.</source>
          <target state="translated">GitHub 맛 마크 다운. GitHub의 구현은 표준 기간입니다.</target>
        </trans-unit>
        <trans-unit id="45a179734201553734cc58b1bfabcfed6fcd437c" translate="yes" xml:space="preserve">
          <source>Give your issue a descriptive title which includes the formula name (if applicable) and the version of macOS or Linux you are using. For example, if a formula fails to build, title your issue &amp;ldquo;&amp;lt;formula&amp;gt; failed to build on &amp;lt;10.x&amp;gt;&amp;rdquo;, where &amp;ldquo;&amp;lt;formula&amp;gt;&amp;rdquo; is the name of the formula that failed to build, and &amp;ldquo;&amp;lt;10.x&amp;gt;&amp;rdquo; is the version of macOS or Linux you are using.</source>
          <target state="translated">문제 이름 (해당되는 경우)과 사용중인 macOS 또는 Linux 버전이 포함 된 설명 제목을 제공하십시오. 예를 들어 수식을 작성하지 못하면 &quot;&amp;lt;formula&amp;gt;을 (를) &amp;lt;10.x&amp;gt;에서 작성하지 못했습니다&quot;라는 제목을 지정하십시오. 여기서 &quot;&amp;lt;formula&amp;gt;&quot;은 작성하지 못한 수식의 이름이고 &quot;&amp;lt;10. x&amp;gt;&amp;rdquo;는 사용중인 macOS 또는 Linux 버전입니다.</target>
        </trans-unit>
        <trans-unit id="2c22ffc465079803c44d254fbf4dbc6e08676f73" translate="yes" xml:space="preserve">
          <source>Giving style and usage feedback on a PR or commit that involves documents is okay and encouraged. But keep in mind that these are just guidelines, and for any change, the author may have made a deliberate choice to break these rules in the interest of understandability or aesthetics.</source>
          <target state="translated">문서와 관련된 PR 또는 커밋에 대한 스타일 및 사용 피드백을 제공하는 것이 좋습니다. 그러나 이것들은 단지 지침 일 뿐이며, 어떤 변화에 대해서도 저자는 이해 또는 미학을 위해 이러한 규칙을 어기도록 신중하게 선택했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="066c942e66eca88d1821b667e6d6020ba7680eed" translate="yes" xml:space="preserve">
          <source>Go to the relevant repository (e.g. &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;https://github.com/Homebrew/brew&lt;/a&gt;, &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt;, etc.) and create a pull request to request review and merging of the commits in your pushed branch. Explain why the change is needed and, if fixing a bug, how to reproduce the bug. Make sure you have done each step in the checklist that appears in your new PR.</source>
          <target state="translated">관련 저장소 (예 : &lt;a href=&quot;https://github.com/Homebrew/brew&quot;&gt;https://github.com/Homebrew/brew&lt;/a&gt; , &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;https://github.com/Homebrew/homebrew-core&lt;/a&gt; 등)로 이동하여 커밋의 검토 및 병합을 요청하는 풀 요청을 작성하십시오. 밀린 지점. 변경이 필요한 이유와 버그를 수정 한 경우 버그를 재현하는 방법을 설명하십시오. 새 PR에 나타나는 점검 목록에서 각 단계를 수행했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d8db6d7a8cb6c9e5ac9ef993bc9fe824c145d201" translate="yes" xml:space="preserve">
          <source>Goals and audience</source>
          <target state="translated">목표와 청중</target>
        </trans-unit>
        <trans-unit id="823619e079c311b099f1d0e427a584eafcd6ed06" translate="yes" xml:space="preserve">
          <source>Governance</source>
          <target state="translated">Governance</target>
        </trans-unit>
        <trans-unit id="b963bc74972edb83e30b9e124890c73ad3fc2a1c" translate="yes" xml:space="preserve">
          <source>Grab the URL</source>
          <target state="translated">URL을 잡아</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="cffe08a9944511362b0a1c3a852308930a9bf7da" translate="yes" xml:space="preserve">
          <source>Habit maybe?</source>
          <target state="translated">아마도?</target>
        </trans-unit>
        <trans-unit id="141f1ec4b96fc544a83f129011bfa77895092bc0" translate="yes" xml:space="preserve">
          <source>Handling files that should persist over formula upgrades</source>
          <target state="translated">공식 업그레이드를 통해 지속되어야하는 파일 처리</target>
        </trans-unit>
        <trans-unit id="f8ea7749b41b8f8f1261f53a93119bbfb3814eed" translate="yes" xml:space="preserve">
          <source>Have you created a real mess in Git which stops you from creating a commit you want to submit to us? You might want to consider starting again from scratch. Your changes can be reset to the Homebrew &lt;code&gt;master&lt;/code&gt; branch by running:</source>
          <target state="translated">우리에게 제출하려는 커밋을 만들지 못하게하는 Git에서 엉망진창을 만들었습니까? 처음부터 다시 시작하는 것이 좋습니다. 다음을 실행하여 변경 사항을 Homebrew &lt;code&gt;master&lt;/code&gt; 브랜치 로 재설정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16632d119ac90816cdfcd29ca6b9c5a20fe2fc9f" translate="yes" xml:space="preserve">
          <source>Hiding the beer mug emoji when finishing a build</source>
          <target state="translated">빌드 완료시 맥주 잔 이모티콘 숨기기</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="2d1c4589fb9c6a2836718e8cdbe89cf426835a57" translate="yes" xml:space="preserve">
          <source>Homebrew &lt;em&gt;would&lt;/em&gt; allow formulae with the following declaration to be installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac84e1c5b9d2d0aefda79106f078a3be2dc38709" translate="yes" xml:space="preserve">
          <source>Homebrew API: &lt;a href=&quot;https://rubydoc.brew.sh&quot;&gt;https://rubydoc.brew.sh&lt;/a&gt;</source>
          <target state="translated">Homebrew API: &lt;a href=&quot;https://rubydoc.brew.sh&quot;&gt;https://rubydoc.brew.sh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bbbf450e03e6d772ecfd21c01f08a9052182a57" translate="yes" xml:space="preserve">
          <source>Homebrew Blog (news on major updates)</source>
          <target state="translated">Homebrew Blog (news on major updates)</target>
        </trans-unit>
        <trans-unit id="5dae5ce33d93c96957553b58aa0c165da986c8db" translate="yes" xml:space="preserve">
          <source>Homebrew Cask provides a friendly CLI workflow for the administration of macOS applications distributed as binaries.</source>
          <target state="translated">Homebrew Cask provides a friendly CLI workflow for the administration of macOS applications distributed as binaries.</target>
        </trans-unit>
        <trans-unit id="59136d845cfcfca98ceafe4032d414a23ffaa240" translate="yes" xml:space="preserve">
          <source>Homebrew Documentation: &lt;a href=&quot;https://docs.brew.sh&quot;&gt;https://docs.brew.sh&lt;/a&gt;</source>
          <target state="translated">Homebrew 설명서 : &lt;a href=&quot;https://docs.brew.sh&quot;&gt;https://docs.brew.sh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96107946ccd1f78182e95e6c6c79229ae6814a6d" translate="yes" xml:space="preserve">
          <source>Homebrew Governance</source>
          <target state="translated">사제 거버넌스</target>
        </trans-unit>
        <trans-unit id="e6e58356f19c13c48468e9fe9fb3ee8e9c02db50" translate="yes" xml:space="preserve">
          <source>Homebrew Shell Completion</source>
          <target state="translated">사제 껍질 완성</target>
        </trans-unit>
        <trans-unit id="d22de123dd4380de06a3a67b3d7f7fbe8d7cf4a0" translate="yes" xml:space="preserve">
          <source>Homebrew analytics helps us maintainers and leaving it on is appreciated. However, if you want to opt out of Homebrew&amp;rsquo;s analytics, you can set this variable in your environment:</source>
          <target state="translated">Homebrew 분석은 유지 관리 담당자를 도와 주어이를 높이 평가합니다. 그러나 Homebrew의 분석을 사용하지 않으려면 환경에서이 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9e449d9297e43415a3e5bf992d6e96b6e8be1e3" translate="yes" xml:space="preserve">
          <source>Homebrew automatically uninstalls old versions of a formula after that formula is upgraded with &lt;code&gt;brew upgrade&lt;/code&gt;, and periodically performs additional cleanup every 30 days.</source>
          <target state="translated">Homebrew automatically uninstalls old versions of a formula after that formula is upgraded with &lt;code&gt;brew upgrade&lt;/code&gt; , and periodically performs additional cleanup every 30 days.</target>
        </trans-unit>
        <trans-unit id="029a70d6a7c292ded89ae401ada5f738556ae190" translate="yes" xml:space="preserve">
          <source>Homebrew build environment that uses years-battle-hardened build logic to help your &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; and even your &lt;code&gt;gem install&lt;/code&gt; succeed. Especially handy if you run Homebrew in an Xcode-only configuration since it adds tools like &lt;code&gt;make&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; which build systems would not find otherwise.</source>
          <target state="translated">Homebrew build environment that uses years-battle-hardened build logic to help your &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; and even your &lt;code&gt;gem install&lt;/code&gt; succeed. Especially handy if you run Homebrew in an Xcode-only configuration since it adds tools like &lt;code&gt;make&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; which build systems would not find otherwise.</target>
        </trans-unit>
        <trans-unit id="031b13e10fa3a448c46f1ed4a4b3e7190906e9cb" translate="yes" xml:space="preserve">
          <source>Homebrew can run on 32-bit ARM (Raspberry Pi and others) and 64-bit ARM (AArch64), but no binary packages (bottles) are available. Support for ARM is on a best-effort basis. Pull requests are welcome to improve the experience on ARM platforms.</source>
          <target state="translated">Homebrew는 32 비트 ARM (Raspberry Pi 및 기타) 및 64 비트 ARM (AArch64)에서 실행할 수 있지만 바이너리 패키지 (병)는 사용할 수 없습니다. ARM 지원은 최선의 노력으로 이루어집니다. ARM 플랫폼에서의 경험을 향상시키기 위해 풀 요청을 환영합니다.</target>
        </trans-unit>
        <trans-unit id="1b4a82136680c2ea60383fdfc55cd142d5763ae9" translate="yes" xml:space="preserve">
          <source>Homebrew comes with a number of &lt;a href=&quot;https://github.com/Homebrew/brew/tree/master/Library/Homebrew/test/support/fixtures&quot;&gt;standard test fixtures&lt;/a&gt;, including numerous sample images, sounds, and documents in various formats. You can get the file path to a test fixture with &lt;code&gt;test_fixtures(&quot;test.svg&quot;)&lt;/code&gt;.</source>
          <target state="translated">Homebrew comes with a number of &lt;a href=&quot;https://github.com/Homebrew/brew/tree/master/Library/Homebrew/test/support/fixtures&quot;&gt;standard test fixtures&lt;/a&gt;, including numerous sample images, sounds, and documents in various formats. You can get the file path to a test fixture with &lt;code&gt;test_fixtures(&quot;test.svg&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6863dff223468abcefd09a599748b4ec9b324279" translate="yes" xml:space="preserve">
          <source>Homebrew comes with completion definitions for the &lt;code&gt;brew&lt;/code&gt; command. Some packages also provide completion definitions for their own programs.</source>
          <target state="translated">Homebrew는 &lt;code&gt;brew&lt;/code&gt; 명령에 대한 완성 정의와 함께 제공됩니다 . 일부 패키지는 자체 프로그램에 대한 완성 정의도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2883f0abeb7d4083aa4da80ea692b58620f95a13" translate="yes" xml:space="preserve">
          <source>Homebrew depends on having an up-to-date version of Xcode because it comes with specific versions of build tools, e.g. &lt;code&gt;clang&lt;/code&gt;.</source>
          <target state="translated">Homebrew는 특정 버전의 빌드 도구 (예 : &lt;code&gt;clang&lt;/code&gt; ) 와 함께 제공되므로 최신 버전의 Xcode를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="4aebf994a3e28744b894d74e900807c87603d848" translate="yes" xml:space="preserve">
          <source>Homebrew depends on having an up-to-date version of Xcode because it comes with specific versions of build tools, e.g. &lt;code&gt;clang&lt;/code&gt;. Installing a custom version of GCC or Autotools into your &lt;code&gt;PATH&lt;/code&gt; has the potential to break lots of compiles so we prefer the Apple or Homebrew-provided compilers. Cross-compilers based on GCC will typically be &amp;ldquo;keg-only&amp;rdquo; and therefore not linked into your &lt;code&gt;PATH&lt;/code&gt; by default, or are prefixed with the target architecture, again to avoid conflicting with Apple or Homebrew compilers.</source>
          <target state="translated">Homebrew depends on having an up-to-date version of Xcode because it comes with specific versions of build tools, e.g. &lt;code&gt;clang&lt;/code&gt; . Installing a custom version of GCC or Autotools into your &lt;code&gt;PATH&lt;/code&gt; has the potential to break lots of compiles so we prefer the Apple or Homebrew-provided compilers. Cross-compilers based on GCC will typically be &amp;ldquo;keg-only&amp;rdquo; and therefore not linked into your &lt;code&gt;PATH&lt;/code&gt; by default, or are prefixed with the target architecture, again to avoid conflicting with Apple or Homebrew compilers.</target>
        </trans-unit>
        <trans-unit id="c530d3ce9c588e19ba65c4bbb4c9a7d72f575716" translate="yes" xml:space="preserve">
          <source>Homebrew does not currently support 32-bit x86 platforms. It would be possible for Homebrew to work on 32-bit x86 platforms with some effort. An interested and dedicated person could maintain a fork of Homebrew to develop support for 32-bit x86.</source>
          <target state="translated">Homebrew는 현재 32 비트 x86 플랫폼을 지원하지 않습니다. Homebrew는 약간의 노력으로 32 비트 x86 플랫폼에서 작업 할 수 있습니다. 관심 있고 헌신적 인 사람은 Homebrew 포크를 유지하여 32 비트 x86에 대한 지원을 개발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea3343d9af18de5be91fe4627add142585ec265a" translate="yes" xml:space="preserve">
          <source>Homebrew doesn&amp;rsquo;t package already-packaged language-specific libraries. These should be installed directly from &lt;code&gt;gem&lt;/code&gt;/&lt;code&gt;cpan&lt;/code&gt;/&lt;code&gt;pip&lt;/code&gt; etc.</source>
          <target state="translated">Homebrew는 이미 패키지화 된 언어 별 라이브러리를 패키지화하지 않습니다. 이들은 &lt;code&gt;gem&lt;/code&gt; / &lt;code&gt;cpan&lt;/code&gt; / &lt;code&gt;pip&lt;/code&gt; 등에서 직접 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8e595c3af9fa782786184c6759a8c9ae87fd898a" translate="yes" xml:space="preserve">
          <source>Homebrew draws a distinction between Python &lt;strong&gt;applications&lt;/strong&gt; and Python &lt;strong&gt;libraries&lt;/strong&gt;. The difference is that users generally do not care that applications are written in Python; it is unusual that a user would expect to be able to &lt;code&gt;import foo&lt;/code&gt; after installing an application. Examples of applications are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/ansible.rb&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/jrnl.rb&quot;&gt;&lt;code&gt;jrnl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Homebrew draws a distinction between Python &lt;strong&gt;applications&lt;/strong&gt; and Python &lt;strong&gt;libraries&lt;/strong&gt;. The difference is that users generally do not care that applications are written in Python; it is unusual that a user would expect to be able to &lt;code&gt;import foo&lt;/code&gt; after installing an application. Examples of applications are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/ansible.rb&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/jrnl.rb&quot;&gt; &lt;code&gt;jrnl&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e8774af101215b3fefc296502e469a868f65c96f" translate="yes" xml:space="preserve">
          <source>Homebrew draws a distinction between Python &lt;strong&gt;applications&lt;/strong&gt; and Python &lt;strong&gt;libraries&lt;/strong&gt;. The difference is that users generally do not care that applications are written in Python; it is unusual that a user would expect to be able to &lt;code&gt;import foo&lt;/code&gt; after installing an application. Examples of applications are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/ansible.rb&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/jrnl.rb&quot;&gt;&lt;code&gt;jrnl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Homebrew는 Python &lt;strong&gt;응용 프로그램&lt;/strong&gt; 과 Python &lt;strong&gt;라이브러리를 구분&lt;/strong&gt; 합니다. 차이점은 사용자는 일반적으로 응용 프로그램이 Python으로 작성되는 것을 신경 쓰지 않는다는 것입니다. 사용자가 응용 프로그램을 설치 한 후 &lt;code&gt;import foo&lt;/code&gt; 를 가져올 수있을 것으로 예상되는 경우는 드 unusual니다 . 적용 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/ansible.rb&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/jrnl.rb&quot;&gt; &lt;code&gt;jrnl&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="625a3f10f05572784a8c3e217889e646aec570cd" translate="yes" xml:space="preserve">
          <source>Homebrew expects to find manual pages in &lt;code&gt;#{prefix}/share/man/...&lt;/code&gt;, and not in &lt;code&gt;#{prefix}/man/...&lt;/code&gt;.</source>
          <target state="translated">브루 예상하는가에있는 매뉴얼 페이지를 찾을 수 &lt;code&gt;#{prefix}/share/man/...&lt;/code&gt; , 그리고에서 &lt;code&gt;#{prefix}/man/...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23d67499dfe9a34b0f6bdfa685e86b687bd34ae8" translate="yes" xml:space="preserve">
          <source>Homebrew formulae should avoid having multiple, separate, upstream projects bundled together in a single package to avoid shipping outdated/insecure versions of software that is already a formula.</source>
          <target state="translated">Homebrew formulae should avoid having multiple, separate, upstream projects bundled together in a single package to avoid shipping outdated/insecure versions of software that is already a formula.</target>
        </trans-unit>
        <trans-unit id="94739a6468c180b4fa96206f2261d586ac4dd903" translate="yes" xml:space="preserve">
          <source>Homebrew gathers anonymous aggregate user behaviour analytics using Google Analytics. You will be notified the first time you run &lt;code&gt;brew update&lt;/code&gt; or install Homebrew. Analytics are not enabled until after this notice is shown, to ensure that you can &lt;a href=&quot;analytics#opting-out&quot;&gt;opt out&lt;/a&gt; without ever sending analytics data.</source>
          <target state="translated">Homebrew gathers anonymous aggregate user behaviour analytics using Google Analytics. You will be notified the first time you run &lt;code&gt;brew update&lt;/code&gt; or install Homebrew. Analytics are not enabled until after this notice is shown, to ensure that you can &lt;a href=&quot;analytics#opting-out&quot;&gt;opt out&lt;/a&gt; without ever sending analytics data.</target>
        </trans-unit>
        <trans-unit id="44372df16aff7a20dbe7963212be661a0056c4de" translate="yes" xml:space="preserve">
          <source>Homebrew has begun gathering anonymous aggregate user behaviour analytics and reporting these to Google Analytics. You will be notified the first time you run &lt;code&gt;brew update&lt;/code&gt; or install Homebrew.</source>
          <target state="translated">Homebrew는 익명의 집계 사용자 행동 분석을 수집하여이를 Google Analytics에보고하기 시작했습니다. &lt;code&gt;brew update&lt;/code&gt; 처음 실행 하거나 Homebrew를 설치할 때 알림을 받습니다.</target>
        </trans-unit>
        <trans-unit id="cb37eade6344844056f9cff666e6aadf278d2286" translate="yes" xml:space="preserve">
          <source>Homebrew has multiple levels of environment variable filtering which affects variables available to formulae.</source>
          <target state="translated">Homebrew에는 수식에 사용할 수있는 변수에 영향을주는 여러 수준의 환경 변수 필터링이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b53a5a2129c12a058c70949ce800dafde06c33ba" translate="yes" xml:space="preserve">
          <source>Homebrew has since stopped supporting &lt;em&gt;SHA1&lt;/em&gt; and &lt;em&gt;MD5&lt;/em&gt; entirely. &lt;em&gt;MD5&lt;/em&gt; checksums were removed from core formulae in 2012 and as of April 2015 installing a formula verified by &lt;em&gt;MD5&lt;/em&gt; is actively blocked.</source>
          <target state="translated">Homebrew는 &lt;em&gt;SHA1&lt;/em&gt; 및 &lt;em&gt;MD5&lt;/em&gt; 지원을 완전히 중단했습니다 . &lt;em&gt;MD5&lt;/em&gt; 체크섬은 2012 년 핵심 수식에서 제거되었으며 2015 년 4 월 현재 &lt;em&gt;MD5에서&lt;/em&gt; 확인한 수식 설치 가 활발히 차단되었습니다.</target>
        </trans-unit>
        <trans-unit id="eb1e091fc99d6671fd16b357408c8780d16d6c68" translate="yes" xml:space="preserve">
          <source>Homebrew installs to the &lt;code&gt;Cellar&lt;/code&gt; and then symlinks some of the installation into &lt;code&gt;/usr/local&lt;/code&gt; so that other programs can see what&amp;rsquo;s going on. We suggest you &lt;code&gt;brew ls&lt;/code&gt; a few of the kegs in your Cellar to see how it is all arranged.</source>
          <target state="translated">Homebrew는 &lt;code&gt;Cellar&lt;/code&gt; 에 설치 한 다음 일부 설치를 &lt;code&gt;/usr/local&lt;/code&gt; 에 심볼릭 링크하여 다른 프로그램이 진행중인 작업을 볼 수 있도록합니다. 우리는 당신이 제안 &lt;code&gt;brew ls&lt;/code&gt; 가 모두 배열하는 방법을 확인하기 위해 지하실에있는 통의 몇 가지.</target>
        </trans-unit>
        <trans-unit id="cf50036a583955cd209228b827fd10767641c3d7" translate="yes" xml:space="preserve">
          <source>Homebrew interprets complex license expressions and determines whether the licenses allow installation. To continue the above example, Homebrew would not allow installation of a formula with the following license declarations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19df62389a462b2b1907ee065878ef08574b275" translate="yes" xml:space="preserve">
          <source>Homebrew is a poor name, it&amp;rsquo;s too generic, why was it chosen?</source>
          <target state="translated">Homebrew는 이름이 좋지 않습니다. 너무 일반적이므로 왜 선택 되었습니까?</target>
        </trans-unit>
        <trans-unit id="abc323e18089c29e0c7d1dd90a2dd4f60102b58c" translate="yes" xml:space="preserve">
          <source>Homebrew is happy to accept applications that are built in Python, whether the apps are available from PyPI or not. Homebrew generally won&amp;rsquo;t accept libraries that can be installed correctly with &lt;code&gt;pip install foo&lt;/code&gt;. Bindings may be installed for packages that provide them, especially if equivalent functionality isn&amp;rsquo;t available through pip.</source>
          <target state="translated">Homebrew는 PyPI에서 앱을 사용할 수 있는지 여부에 관계없이 Python으로 빌드 된 애플리케이션을 기꺼이 받아들입니다. Homebrew는 일반적으로 &lt;code&gt;pip install foo&lt;/code&gt; 로 올바르게 설치할 수있는 라이브러리를 허용하지 않습니다 . 특히 pip를 통해 동등한 기능을 사용할 수없는 경우이를 제공하는 패키지에 바인딩을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6de1f6ab06c5a47042fe0d73d90472dc7780b303" translate="yes" xml:space="preserve">
          <source>Homebrew is installed to a prefix other than the standard &lt;code&gt;/usr/local&lt;/code&gt; (although some bottles support this).</source>
          <target state="translated">Homebrew는 표준 &lt;code&gt;/usr/local&lt;/code&gt; 이외의 접두사에 설치됩니다 (일부 병은이 기능을 지원하지만).</target>
        </trans-unit>
        <trans-unit id="d4a3484b9378e94a3153acd53e1e9e3be16117dc" translate="yes" xml:space="preserve">
          <source>Homebrew is provided free of charge and run entirely by volunteers in their spare time. As a result, we do not have the resources to do detailed user studies of Homebrew users to decide on how best to design future features and prioritise current work. Anonymous aggregate user analytics allow us to prioritise fixes and features based on how, where and when people use Homebrew. For example:</source>
          <target state="translated">Homebrew는 무료로 제공되며 여가 시간에 자원 봉사자가 전적으로 운영합니다. 결과적으로, 우리는 향후 기능을 설계하고 현재 작업의 우선 순위를 정하는 최선의 방법을 결정하기 위해 Homebrew 사용자에 대한 자세한 사용자 연구를 수행 할 리소스가 없습니다. 익명의 집계 사용자 분석을 통해 사람들이 Homebrew를 어떻게, 어디서, 언제 사용하는지에 따라 수정 및 기능의 우선 순위를 지정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="65a0680f8f0fa277d1f6950bb45dde7fd3fe43e3" translate="yes" xml:space="preserve">
          <source>Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn&amp;rsquo;t include with macOS.</source>
          <target state="translated">Homebrew는 Apple이 macOS에 포함하지 않은 UNIX 도구를 설치하는 가장 쉽고 유연한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="745fb931e9fccb866a587695f43cfc39a4e95240" translate="yes" xml:space="preserve">
          <source>Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn&amp;rsquo;t include with macOS. It can also install software not packaged for your Linux distribution to your home directory without requiring &lt;code&gt;sudo&lt;/code&gt;.</source>
          <target state="translated">Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn&amp;rsquo;t include with macOS. It can also install software not packaged for your Linux distribution to your home directory without requiring &lt;code&gt;sudo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b847e198738b8c83a4967c1cfa49a7cfef9efc1" translate="yes" xml:space="preserve">
          <source>Homebrew members will comply with the Software Freedom Conservancy&amp;rsquo;s &lt;a href=&quot;https://sfconservancy.org/projects/policies/conflict-of-interest-policy.html&quot;&gt;conflict of interest policy&lt;/a&gt;.</source>
          <target state="translated">Homebrew 회원은 Software Freedom Conservancy의 &lt;a href=&quot;https://sfconservancy.org/projects/policies/conflict-of-interest-policy.html&quot;&gt;이해 상충 정책&lt;/a&gt; 을 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="0c16737d592b7858ae25c02f5ca3d739aa3cb9f8" translate="yes" xml:space="preserve">
          <source>Homebrew members will meet at the annual general meeting (AGM) in a manner determined by the PLC.</source>
          <target state="translated">Homebrew 회원은 PLC가 결정한 방식으로 연례 총회 (AGM)에서 만날 것입니다.</target>
        </trans-unit>
        <trans-unit id="0b6e17cfda30349a14879da24b6c0efe5dd12f42" translate="yes" xml:space="preserve">
          <source>Homebrew offers anonymous download strategies.</source>
          <target state="translated">Homebrew는 익명의 다운로드 전략을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b564b46be44830b11fc8929ae3885be5347058dd" translate="yes" xml:space="preserve">
          <source>Homebrew on Linux</source>
          <target state="translated">Linux의 Homebrew</target>
        </trans-unit>
        <trans-unit id="a43655b92e6d91af6f81d0ef37631c543145bc0a" translate="yes" xml:space="preserve">
          <source>Homebrew on Linux Community</source>
          <target state="translated">Linux 커뮤니티의 Homebrew</target>
        </trans-unit>
        <trans-unit id="37d9eb415d2e64817560c348dffddf13ff7dc238" translate="yes" xml:space="preserve">
          <source>Homebrew organisation external commands</source>
          <target state="translated">사제 조직 외부 명령</target>
        </trans-unit>
        <trans-unit id="2178e89cad5c416f929f0e85c8113aca928509f3" translate="yes" xml:space="preserve">
          <source>Homebrew provided a &lt;code&gt;python@2&lt;/code&gt; formula until the end of 2019, at which point it was removed due to the Python 2 deprecation.</source>
          <target state="translated">Homebrew provided a &lt;code&gt;python@2&lt;/code&gt; formula until the end of 2019, at which point it was removed due to the Python 2 deprecation.</target>
        </trans-unit>
        <trans-unit id="8b71674659a11a908d7a3becb61d9f951592f6f6" translate="yes" xml:space="preserve">
          <source>Homebrew provides a &lt;code&gt;gcc&lt;/code&gt; formula for use with Xcode 4.2+ or when needing C++11 support on earlier versions.</source>
          <target state="translated">Homebrew는 Xcode 4.2 이상과 함께 사용하거나 이전 버전에서 C ++ 11 지원이 필요한 경우 &lt;code&gt;gcc&lt;/code&gt; 공식을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="fac015b5b20e31848a3705fe2d4d1984227a9b61" translate="yes" xml:space="preserve">
          <source>Homebrew provides a &lt;code&gt;gcc&lt;/code&gt; formula for use with Xcode 4.2+.</source>
          <target state="translated">Homebrew provides a &lt;code&gt;gcc&lt;/code&gt; formula for use with Xcode 4.2+.</target>
        </trans-unit>
        <trans-unit id="b046e043cdcff5b6b27a73ccdc99b46a803621e2" translate="yes" xml:space="preserve">
          <source>Homebrew provides a formula for Python 3.x (&lt;code&gt;python@3.x&lt;/code&gt;).</source>
          <target state="translated">Homebrew provides a formula for Python 3.x ( &lt;code&gt;python@3.x&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4af748fb83e9d7f306a45a394e89a75b1d279448" translate="yes" xml:space="preserve">
          <source>Homebrew provides formulae to brew Python 3.x and a more up-to-date Python 2.7.x.</source>
          <target state="translated">Homebrew는 Python 3.x 및 최신 Python 2.7.x를 추출하는 공식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a129c90e7b6536d0594ff02e5242149b3c3ca13b" translate="yes" xml:space="preserve">
          <source>Homebrew provides formulae to brew Python 3.x.</source>
          <target state="translated">Homebrew provides formulae to brew Python 3.x.</target>
        </trans-unit>
        <trans-unit id="efb527c41b236fa82d6176544cbbf6cab3abe64a" translate="yes" xml:space="preserve">
          <source>Homebrew provides helper methods for instantiating and populating virtualenvs. You can use them by putting &lt;code&gt;include Language::Python::Virtualenv&lt;/code&gt; at the top of the &lt;code&gt;Formula&lt;/code&gt; class definition.</source>
          <target state="translated">Homebrew는 가상 환경을 인스턴스화하고 채우기위한 도우미 방법을 제공합니다. &lt;code&gt;Formula&lt;/code&gt; 클래스 정의 맨 위에 &lt;code&gt;include Language::Python::Virtualenv&lt;/code&gt; 를 넣어서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="297d3171e08b2c58109d59b0b3f67a155bd798d0" translate="yes" xml:space="preserve">
          <source>Homebrew provides older GCC formulae, e.g. &lt;code&gt;gcc@7&lt;/code&gt;</source>
          <target state="translated">Homebrew는 이전 GCC 공식을 제공합니다 (예 : &lt;code&gt;gcc@7&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="562b147c3bbafdc470f4ae4637b47bd84a90b5b6" translate="yes" xml:space="preserve">
          <source>Homebrew provides one formula for Python 3.x (&lt;code&gt;python&lt;/code&gt;) and another for Python 2.7.x (&lt;code&gt;python@2&lt;/code&gt;).</source>
          <target state="translated">Homebrew는 Python 3.x ( &lt;code&gt;python&lt;/code&gt; )와 Python 2.7.x ( &lt;code&gt;python@2&lt;/code&gt; )에 대한 수식을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d7822341dc4756096e7a8ded3a1b46bf39ef5b9b" translate="yes" xml:space="preserve">
          <source>Homebrew provides pre-compiled versions for many formulae. These pre-compiled versions are referred to as &lt;a href=&quot;bottles&quot;&gt;bottles&lt;/a&gt; and are available at &lt;a href=&quot;https://bintray.com/homebrew/bottles&quot;&gt;https://bintray.com/homebrew/bottles&lt;/a&gt;.</source>
          <target state="translated">Homebrew는 많은 수식에 대해 미리 컴파일 된 버전을 제공합니다. 사전 컴파일 된 이러한 버전을 &lt;a href=&quot;bottles&quot;&gt;병&lt;/a&gt; 이라고 하며 &lt;a href=&quot;https://bintray.com/homebrew/bottles&quot;&gt;https://bintray.com/homebrew/bottles&lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b7023890e38c1b54c4bf4f975e9c8dc0deb2a4c" translate="yes" xml:space="preserve">
          <source>Homebrew provides some cross-compilers and toolchains, but these are named to avoid clashing with the default tools, e.g. &lt;code&gt;x86_64-elf-gcc&lt;/code&gt;</source>
          <target state="translated">Homebrew provides some cross-compilers and toolchains, but these are named to avoid clashing with the default tools, e.g. &lt;code&gt;x86_64-elf-gcc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="354ab1e0614c947c91c39dcbd12a3e6035ac891d" translate="yes" xml:space="preserve">
          <source>Homebrew provides the LLVM Clang, which is bundled with the &lt;code&gt;llvm&lt;/code&gt; formula.</source>
          <target state="translated">Homebrew는 &lt;code&gt;llvm&lt;/code&gt; 수식 과 함께 제공되는 LLVM Clang을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4f1998377762b8b409533b99e1d797a1f5dbe74c" translate="yes" xml:space="preserve">
          <source>Homebrew provides two formula DSL methods for launchd plist files:</source>
          <target state="translated">Homebrew는 시작된 plist 파일에 대해 두 가지 공식 DSL 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0729a8a3d3191e3fad0f467c1828a31424120f7b" translate="yes" xml:space="preserve">
          <source>Homebrew provides two helper methods in a &lt;code&gt;Language::Node&lt;/code&gt; module: &lt;code&gt;std_npm_install_args&lt;/code&gt; and &lt;code&gt;local_npm_install_args&lt;/code&gt;. They both set up the correct environment for npm and return arguments for &lt;code&gt;npm install&lt;/code&gt; for their specific use cases. Your formula should use these instead of invoking &lt;code&gt;npm install&lt;/code&gt; explicitly. The syntax for a standard Node module installation is:</source>
          <target state="translated">Homebrew는 &lt;code&gt;Language::Node&lt;/code&gt; 모듈에서 &lt;code&gt;std_npm_install_args&lt;/code&gt; 및 &lt;code&gt;local_npm_install_args&lt;/code&gt; 의 두 가지 도우미 메소드를 제공합니다 . 이들은 npm에 대한 올바른 환경을 설정 하고 특정 사용 사례에 대해 &lt;code&gt;npm install&lt;/code&gt; 대한 인수를 반환 합니다. 공식은 &lt;code&gt;npm install&lt;/code&gt; 을 명시 적으로 호출하는 대신이를 사용해야합니다 . 표준 노드 모듈 설치의 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6790ab4f49d72b8093da898ec51692bce0f8ec93" translate="yes" xml:space="preserve">
          <source>Homebrew refuses to work using sudo.</source>
          <target state="translated">Homebrew는 sudo를 사용하여 작업을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="51a93ceeacd9962f23336fd5f7a8c8417906a396" translate="yes" xml:space="preserve">
          <source>Homebrew should work with any &lt;a href=&quot;https://stackoverflow.com/questions/2324208/is-there-any-difference-between-cpython-and-python&quot;&gt;CPython&lt;/a&gt; and defaults to the macOS system Python.</source>
          <target state="translated">Homebrew는 모든 &lt;a href=&quot;https://stackoverflow.com/questions/2324208/is-there-any-difference-between-cpython-and-python&quot;&gt;CPython&lt;/a&gt; 과 함께 작동 하며 기본값은 macOS 시스템 Python입니다.</target>
        </trans-unit>
        <trans-unit id="661acbc7dc12d154082fffd2b3944bb2f293aeb5" translate="yes" xml:space="preserve">
          <source>Homebrew supports and recommends the latest Xcode and/or Command Line Tools available for your platform (see &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; and &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Homebrew supports and recommends the latest Xcode and/or Command Line Tools available for your platform (see &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; and &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a46e4ed9793e78070c496261e16340391a55c075" translate="yes" xml:space="preserve">
          <source>Homebrew supports and recommends the latest Xcode and/or Command Line Tools available for your platform (see &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; and &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">브루 지원 및 플랫폼에 사용할 수있는 최신 엑스 코드 및 / 또는 명령 행 도구를 권장합니다 ( &lt;code&gt;OS::Mac::Xcode.latest_version&lt;/code&gt; 및 &lt;code&gt;OS::Mac::CLT.latest_version&lt;/code&gt; 에서 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="27cc4575faca82c00bd01c31c48751b098d231ba" translate="yes" xml:space="preserve">
          <source>Homebrew terminology</source>
          <target state="translated">사제 용어</target>
        </trans-unit>
        <trans-unit id="ec99c4c71f6739452764a18f48aafa4663d3d390" translate="yes" xml:space="preserve">
          <source>Homebrew tries to automatically determine the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; from the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; to avoid duplication. If the tarball has an unusual name you may need to manually assign the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">브루 시도가 자동으로 결정하는 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 로부터 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 피하기 중복에 있습니다. tarball의 이름이 다른 경우 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 을 수동으로 할당해야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc4b8b97d41998ddefdacd94e5b9df7631d31fff" translate="yes" xml:space="preserve">
          <source>Homebrew understands &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;svn&lt;/code&gt;, and &lt;code&gt;hg&lt;/code&gt; URLs, and has a way to specify &lt;code&gt;cvs&lt;/code&gt; repositories as a URL as well. You can test whether the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; is being built with &lt;code&gt;build.head?&lt;/code&gt;.</source>
          <target state="translated">Homebrew는 &lt;code&gt;git&lt;/code&gt; , &lt;code&gt;svn&lt;/code&gt; 및 &lt;code&gt;hg&lt;/code&gt; URL을 이해하고 &lt;code&gt;cvs&lt;/code&gt; 저장소를 URL로 지정하는 방법 도 있습니다. &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;build.head?&lt;/code&gt; 로 빌드 되는지 테스트 할 수 있습니까? .</target>
        </trans-unit>
        <trans-unit id="5a01b41d183f510b67b3b40a0cf62a56a72a13e7" translate="yes" xml:space="preserve">
          <source>Homebrew uses Git for downloading updates and contributing to the project.</source>
          <target state="translated">Homebrew는 Git을 사용하여 업데이트를 다운로드하고 프로젝트에 기여합니다.</target>
        </trans-unit>
        <trans-unit id="19ac498ac758a2959033bdbd45c184bd23f93b15" translate="yes" xml:space="preserve">
          <source>Homebrew wants to maintain a consistent Ruby style across all formulae mostly based on &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;Ruby Style Guide&lt;/a&gt;. Other formulae may not have been updated to match this guide yet but all new ones should. Also:</source>
          <target state="translated">Homebrew는 대부분 &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;Ruby 스타일 가이드를&lt;/a&gt; 기반으로하는 모든 공식에서 일관된 Ruby 스타일을 유지하려고합니다 . 다른 공식은이 안내서와 일치하도록 업데이트되지 않았지만 모든 새로운 공식은 업데이트되어야합니다. 또한:</target>
        </trans-unit>
        <trans-unit id="bfc7431e67c9bcfc3bd62c8261d10668cacf8dfe" translate="yes" xml:space="preserve">
          <source>Homebrew will try to guess the formula&amp;rsquo;s name from its URL. If it fails to do so you can override this with &lt;code&gt;brew create &amp;lt;URL&amp;gt; --set-name &amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Homebrew는 URL에서 수식 이름을 추측하려고합니다. 그렇지 않으면 &lt;code&gt;brew create &amp;lt;URL&amp;gt; --set-name &amp;lt;name&amp;gt;&lt;/code&gt; 이를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60fb24e9296a57015cf27dfc35f56054ce8a66d1" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s &lt;code&gt;site-packages&lt;/code&gt; directory is first created if (1) any Homebrew formula with Python bindings are installed, or (2) upon &lt;code&gt;brew install python&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 &lt;code&gt;site-packages&lt;/code&gt; 디렉토리는 (1) Python 바인딩이있는 Homebrew 공식이 설치되어 있거나 (2) &lt;code&gt;brew install python&lt;/code&gt; 시 설치 되는 경우 처음 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ed701fb08d84e12f2df06ce0e49ed66fb65bb5bf" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s OpenSSL is &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; to avoid conflicting with the system so sometimes formulae need to have environment variables set or special configuration flags passed to locate our OpenSSL. You can see this mechanism in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt;&lt;code&gt;clamav&lt;/code&gt;&lt;/a&gt; formula. Usually this is unnecessary because Homebrew sets up our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/extend/ENV/super.rb&quot;&gt;build environment&lt;/a&gt; to favour finding &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; formulae first.</source>
          <target state="translated">Homebrew&amp;rsquo;s OpenSSL is &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; to avoid conflicting with the system so sometimes formulae need to have environment variables set or special configuration flags passed to locate our OpenSSL. You can see this mechanism in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt; &lt;code&gt;clamav&lt;/code&gt; &lt;/a&gt; formula. Usually this is unnecessary because Homebrew sets up our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/extend/ENV/super.rb&quot;&gt;build environment&lt;/a&gt; to favour finding &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; formulae first.</target>
        </trans-unit>
        <trans-unit id="cdb42ccf577ea33bce2d8924759c18770f1a0606" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s OpenSSL is &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; to avoid conflicting with the system so sometimes formulae need to have environment variables set or special configuration flags passed to locate our OpenSSL. You can see this mechanism in the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt;&lt;code&gt;clamav&lt;/code&gt;&lt;/a&gt; formula. Usually this is unnecessary because Homebrew sets up our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/extend/ENV/super.rb&quot;&gt;build environment&lt;/a&gt; to favour finding &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt; formulae first.</source>
          <target state="translated">Homebrew의 OpenSSL은 시스템과의 충돌을 피하기 위해 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; 이므로 때로는 공식에 OpenSSL을 찾기 위해 환경 변수 세트 또는 특수 구성 플래그가 전달되어야합니다. 이 메커니즘은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/89c4574ef1a6d15e92196637ff315a0a4bb3e289/Formula/clamav.rb#L37&quot;&gt; &lt;code&gt;clamav&lt;/code&gt; &lt;/a&gt; 공식 에서 볼 수 있습니다 . Homebrew는 먼저 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/extend/ENV/super.rb&quot;&gt;빌드 환경&lt;/a&gt; 을 설정하여 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; 공식을 먼저 찾 도록 하기 때문에 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8647e5cf13e0e4572e892f9f9231cdbc34d88415" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leader is Mike McQuaid.</source>
          <target state="translated">Homebrew의 프로젝트 리더는 Mike McQuaid입니다.</target>
        </trans-unit>
        <trans-unit id="742a7bf0d29af6ea72b3e4c8c0a988e5348aa0de" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leadership Committee is Misty De Meo, Shaun Jackman, Jonathan Chang, Mike McQuaid and Markus Reiter.</source>
          <target state="translated">Homebrew의 프로젝트 리더십위원회는 Misty De Meo, Shaun Jackman, Jonathan Chang, Mike McQuaid 및 Markus Reiter입니다.</target>
        </trans-unit>
        <trans-unit id="d825afe421cd9dcdde7f11b1b396c95f24c1fc2a" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Project Leadership Committee is Misty De Meo, Shaun Jackman, Jonathan Chang, Sean Molenaar and Markus Reiter.</source>
          <target state="translated">Homebrew&amp;rsquo;s Project Leadership Committee is Misty De Meo, Shaun Jackman, Jonathan Chang, Sean Molenaar and Markus Reiter.</target>
        </trans-unit>
        <trans-unit id="0ca90a174393bd7a80fda69af4d3e7d23127f995" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s Technical Steering Committee is Michka Popoff, FX Coudert, Markus Reiter, Misty De Meo and Mike McQuaid.</source>
          <target state="translated">Homebrew의 기술 운영위원회는 Michka Popoff, FX Coudert, Markus Reiter, Misty De Meo 및 Mike McQuaid입니다.</target>
        </trans-unit>
        <trans-unit id="31af9e328c6278bcb5b7f90ffa31c47b46d6369f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics are sent throughout Homebrew&amp;rsquo;s execution to Google Analytics over HTTPS.</source>
          <target state="translated">Homebrew의 분석은 Homebrew가 실행되는 동안 HTTPS를 통해 Google Analytics로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="a5e2144547f6b3d18f4422b9357aaffb410ebb0f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics record some shared information for every event:</source>
          <target state="translated">Homebrew의 분석은 모든 이벤트에 대한 몇 가지 공유 정보를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="7bfc9c1ff2481afc52a688aa4b2abea42ce4f13a" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s analytics records the following different events:</source>
          <target state="translated">Homebrew의 분석은 다음과 같은 다양한 이벤트를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="b6bbf16deaf03b6d1633f6a477617cfc1e320b4f" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s anonymous user and event data have a 14 month retention period. This is the &lt;a href=&quot;https://support.google.com/analytics/answer/7667196&quot;&gt;lowest possible value for Google Analytics&lt;/a&gt;.</source>
          <target state="translated">Homebrew의 익명 사용자 및 이벤트 데이터의 보존 기간은 14 개월입니다. 이것이 &lt;a href=&quot;https://support.google.com/analytics/answer/7667196&quot;&gt;Google 웹 로그 분석에서 가능한 가장 낮은 값입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02ae9b33e2dad9671fefb8f01f678a6bb4094671" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s audience includes users with a wide range of education and experience, and users for whom English is not a native language. We aim to support as many of those users as feasible.</source>
          <target state="translated">Homebrew의 독자는 광범위한 교육 및 경험을 가진 사용자와 영어가 모국어가 아닌 사용자를 포함합니다. 우리는 가능한 많은 사용자를 지원하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="2e68ebb1ed712931b32f86359f0ada11c3331b47" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s creator @mxcl was too concerned with the beer theme and didn&amp;rsquo;t consider that the project may actually prove popular. By the time Max realised that it was popular, it was too late. However, today, the first Google hit for &amp;ldquo;homebrew&amp;rdquo; is not beer related 😉</source>
          <target state="translated">Homebrew&amp;rsquo;s creator @mxcl was too concerned with the beer theme and didn&amp;rsquo;t consider that the project may actually prove popular. By the time Max realised that it was popular, it was too late. However, today, the first Google hit for &amp;ldquo;homebrew&amp;rdquo; is not beer related 😉</target>
        </trans-unit>
        <trans-unit id="f9b3606f62f1dafe8722b3ef71f49d6d498c55b8" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s default behaviour automatically uninstalls old versions of a formula every 30 days.</source>
          <target state="translated">Homebrew의 기본 동작은 30 일마다 이전 버전의 수식을 자동으로 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e21f4c4fb9fdbbf0cfbbfebb4e1a043c8d208bdb" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s other current maintainers are Claudia Pellegrino, Chongyu Zhu, Vitor Galvao, Gautham Goli, Steven Peters, William Woodruff, Igor Kapkov, Izaak Beekman, Sean Molenaar, Jan Viljanen, Jason Tedor, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans and Issy Long.</source>
          <target state="translated">Homebrew의 다른 현재 관리자는 Claudia Pellegrino, Chongyu Zhu, Vitor Galvao, Gautham Goli, Steven Peters, William Woodruff, Igor Kapkov, Izaak Beekman, Sean Molenaar, Jan Viljanen, Jason Tedor, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans와 Issy Long.</target>
        </trans-unit>
        <trans-unit id="a6ea9e0519ff51b5f407acaeb04cc0f88dda6aed" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s other current maintainers are Claudia Pellegrino, Zach Auten, Rui Chen, Vitor Galvao, Caleb Xu, Gautham Goli, Steven Peters, Bo Anderson, William Woodruff, Igor Kapkov, Sam Ford, Alexander Bayandin, Izaak Beekman, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans, Issy Long, CoreCode, Randall, Rylan Polster, SeekingMeaning, William Ma and Dustin Rodrigues.</source>
          <target state="translated">Homebrew&amp;rsquo;s other current maintainers are Claudia Pellegrino, Zach Auten, Rui Chen, Vitor Galvao, Caleb Xu, Gautham Goli, Steven Peters, Bo Anderson, William Woodruff, Igor Kapkov, Sam Ford, Alexander Bayandin, Izaak Beekman, Eric Knibbe, Viktor Szakats, Thierry Moisan, Steven Peters, Tom Schoonjans, Issy Long, CoreCode, Randall, Rylan Polster, SeekingMeaning, William Ma and Dustin Rodrigues.</target>
        </trans-unit>
        <trans-unit id="b4657e1fe91c9cf2c740432fc1886281a86790af" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s versions are not intended to be used for any old versions you personally require for your project. You should create your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt; for formulae you or your organisation wish to control the versioning of or those that do not meet the above standards. Software that has regular API or ABI breaking releases still needs to meet all the above requirements; that a &lt;code&gt;brew upgrade&lt;/code&gt; has broken something for you is not an argument for us to add and maintain a formula for you.</source>
          <target state="translated">Homebrew의 버전은 프로젝트에 개인적으로 필요한 이전 버전에는 사용되지 않습니다. 자신 또는 조직에서 버전 관리를 제어하려는 공식 또는 위의 표준을 충족하지 않는 공식에 대한 &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;탭&lt;/a&gt; 을 직접 만들어야합니다 . 정식 API 또는 ABI 최신 릴리스가있는 소프트웨어는 여전히 위의 모든 요구 사항을 충족해야합니다. &amp;bull; 그래도 &lt;code&gt;brew upgrade&lt;/code&gt; 당신이 우리가 추가하고 당신을 위해 수식을 유지하기 위해 인수가 아닌 뭔가를 끊었다.</target>
        </trans-unit>
        <trans-unit id="b410d94b4de4b1558049d4f93a41091b3506e205" translate="yes" xml:space="preserve">
          <source>Homebrew&amp;rsquo;s versions should not be used to &amp;ldquo;pin&amp;rdquo; formulae to your personal requirements. You should instead create your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt; for formulae you or your organisation wish to control the versioning of, or those that do not meet the above standards. Software that has regular API or ABI breaking releases still needs to meet all the above requirements; that a &lt;code&gt;brew upgrade&lt;/code&gt; has broken something for you is not an argument for us to add and maintain a formula for you.</source>
          <target state="translated">Homebrew&amp;rsquo;s versions should not be used to &amp;ldquo;pin&amp;rdquo; formulae to your personal requirements. You should instead create your own &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;tap&lt;/a&gt; for formulae you or your organisation wish to control the versioning of, or those that do not meet the above standards. Software that has regular API or ABI breaking releases still needs to meet all the above requirements; that a &lt;code&gt;brew upgrade&lt;/code&gt; has broken something for you is not an argument for us to add and maintain a formula for you.</target>
        </trans-unit>
        <trans-unit id="b7872a1919920893d3cfbb890bec621c33e2cc74" translate="yes" xml:space="preserve">
          <source>Homebrew, like &lt;code&gt;git&lt;/code&gt;(1), supports external commands. These are executable scripts that reside somewhere in the &lt;code&gt;PATH&lt;/code&gt;, named &lt;code&gt;brew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt; or &lt;code&gt;brew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;, which can be invoked like &lt;code&gt;brew&lt;/code&gt;&lt;em&gt;&lt;code&gt;cmdname&lt;/code&gt;&lt;/em&gt;. This allows you to create your own commands without modifying Homebrew&amp;rsquo;s internals.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; (1) 과 같이 Homebrew 는 외부 명령을 지원합니다. 이들은 &lt;code&gt;brew-&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmdname&lt;/code&gt; &lt;/em&gt; 또는 &lt;code&gt;brew-&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmdname&lt;/code&gt; &lt;/em&gt; &lt;code&gt;.rb&lt;/code&gt; 라는 &lt;code&gt;PATH&lt;/code&gt; 어딘가에있는 실행 가능한 스크립트이며 , &lt;code&gt;brew&lt;/code&gt; &lt;em&gt; &lt;code&gt;cmdname&lt;/code&gt; &lt;/em&gt; 과 같이 호출 할 수 있습니다 . 이를 통해 Homebrew의 내부를 수정하지 않고도 고유 한 명령을 만들 수 있습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d07df14b4d7eb8f09805c43c1d4ecaa5fdcd017" translate="yes" xml:space="preserve">
          <source>Homebrew, like Git, supports &lt;em&gt;external commands&lt;/em&gt;. This lets you create new commands that can be run like:</source>
          <target state="translated">Git과 마찬가지로 Homebrew는 &lt;em&gt;외부 명령을&lt;/em&gt; 지원 &lt;em&gt;합니다&lt;/em&gt; . 이를 통해 다음과 같이 실행할 수있는 새 명령을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05adcc9dc76a84e36331fdc14d8a432a63c4e75f" translate="yes" xml:space="preserve">
          <source>Homebrew-provided Python bindings</source>
          <target state="translated">Homebrew 제공 Python 바인딩</target>
        </trans-unit>
        <trans-unit id="bf10d7ac00c285af0ffd2b6cceed7a703c05f07b" translate="yes" xml:space="preserve">
          <source>Homebrew/brew&amp;rsquo;s Linux maintainers are Michka Popoff, Shaun Jackman and Issy Long.</source>
          <target state="translated">Homebrew / brew의 Linux 관리자는 Michka Popoff, Shaun Jackman 및 Issy Long입니다.</target>
        </trans-unit>
        <trans-unit id="65573490b7d568cbd75a88030d5edd9629aee0bb" translate="yes" xml:space="preserve">
          <source>Homebrew/brew&amp;rsquo;s Linux maintainers are Michka Popoff, Shaun Jackman, Dawid Dziurla, Issy Long and Maxim Belkin.</source>
          <target state="translated">Homebrew/brew&amp;rsquo;s Linux maintainers are Michka Popoff, Shaun Jackman, Dawid Dziurla, Issy Long and Maxim Belkin.</target>
        </trans-unit>
        <trans-unit id="fadaccd095ea82248d2354c84c8720135cf61be7" translate="yes" xml:space="preserve">
          <source>Homebrew/discussions (forum)</source>
          <target state="translated">Homebrew/discussions (forum)</target>
        </trans-unit>
        <trans-unit id="5f355fd7ee049e78396735fd85090268dec20439" translate="yes" xml:space="preserve">
          <source>Homebrew/homebrew-core Merge Checklist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbd5cd5fdf17703e2573034e9754b24a7af1df8" translate="yes" xml:space="preserve">
          <source>Homebrew/homebrew-core merge checklist</source>
          <target state="translated">Homebrew/homebrew-core merge checklist</target>
        </trans-unit>
        <trans-unit id="f42a2e84295e3934da8bd9b3d822d71aa1c6d43e" translate="yes" xml:space="preserve">
          <source>Homebrew/linuxbrew-core Maintainer Guide</source>
          <target state="translated">Homebrew/linuxbrew-core Maintainer Guide</target>
        </trans-unit>
        <trans-unit id="65b9329bd66ffeb157760716947c6870d33ea102" translate="yes" xml:space="preserve">
          <source>Homebrew/linuxbrew-core on GitHub</source>
          <target state="translated">GitHub의 Homebrew / linuxbrew-core</target>
        </trans-unit>
        <trans-unit id="75c93e567e974e005b542e709d154ead45069e72" translate="yes" xml:space="preserve">
          <source>How Long?</source>
          <target state="translated">얼마나 오래?</target>
        </trans-unit>
        <trans-unit id="9389d4f389149065608454896d4879895091f999" translate="yes" xml:space="preserve">
          <source>How To Build Software Outside Homebrew With Homebrew &lt;code&gt;keg_only&lt;/code&gt; dependencies</source>
          <target state="translated">Homebrew를 사용하여 Homebrew 외부에서 소프트웨어를 빌드하는 방법 &lt;code&gt;keg_only&lt;/code&gt; dependencies</target>
        </trans-unit>
        <trans-unit id="3213a2ecb2a9c1484b0becf08277e900383599cf" translate="yes" xml:space="preserve">
          <source>How To Create (And Maintain) A Tap</source>
          <target state="translated">탭 생성 및 유지 관리 방법</target>
        </trans-unit>
        <trans-unit id="452bde9cecc0b301b68dd57f206a4ba839f244e2" translate="yes" xml:space="preserve">
          <source>How To Open A Pull Request (and get it merged)</source>
          <target state="translated">끌어 오기 요청을 열고 병합하는 방법</target>
        </trans-unit>
        <trans-unit id="067767e1e93969b4ba70d11b5d90a8cd94c37af7" translate="yes" xml:space="preserve">
          <source>How To Open a Homebrew Pull Request</source>
          <target state="translated">사제 풀 요청을 여는 방법</target>
        </trans-unit>
        <trans-unit id="6742250ec4c38a11aabe94e08bff022ed031207f" translate="yes" xml:space="preserve">
          <source>How To Open a Homebrew Pull Request (and get it merged)</source>
          <target state="translated">Homebrew 풀 요청을 열고 병합하는 방법</target>
        </trans-unit>
        <trans-unit id="84c484929ca1ef62bfcb1d800ca17f0eca034460" translate="yes" xml:space="preserve">
          <source>How can I keep old versions of a formula when upgrading?</source>
          <target state="translated">How can I keep old versions of a formula when upgrading?</target>
        </trans-unit>
        <trans-unit id="53663318d6446d53a95e4c9c07cf82ac34090b3e" translate="yes" xml:space="preserve">
          <source>How can I specify different configure arguments for a formula?</source>
          <target state="translated">수식에 다른 구성 인수를 지정하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="f5604967ad5059e407a99b22ecf4c05dd40ddb9c" translate="yes" xml:space="preserve">
          <source>How do I contribute to Homebrew?</source>
          <target state="translated">Homebrew에 어떻게 기여합니까?</target>
        </trans-unit>
        <trans-unit id="cbcccd47252d22bd8aba1c8e46552b520882cc66" translate="yes" xml:space="preserve">
          <source>How do I get a formula from someone else&amp;rsquo;s branch?</source>
          <target state="translated">다른 사람의 지점에서 수식을 얻으려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="5634f2b1eb5bc9e1233a422bb4c76a03d83c0804" translate="yes" xml:space="preserve">
          <source>How do I stop certain formulae from being updated?</source>
          <target state="translated">특정 수식이 업데이트되지 않게하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="553ae9bb814e3f62ad1d97985c40251ae12db10b" translate="yes" xml:space="preserve">
          <source>How do I uninstall Homebrew?</source>
          <target state="translated">Homebrew를 어떻게 제거합니까?</target>
        </trans-unit>
        <trans-unit id="b0b1d83969e94eebb62d851c40bfe35689f57d0a" translate="yes" xml:space="preserve">
          <source>How do I uninstall a formula?</source>
          <target state="translated">수식을 제거하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="d454452d14127a3f2f083057beaa895dddae3a3f" translate="yes" xml:space="preserve">
          <source>How do I uninstall old versions of a formula?</source>
          <target state="translated">이전 버전의 수식을 제거하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="2e928202162f16cfc2f470143d0caad228302b4d" translate="yes" xml:space="preserve">
          <source>How do I update my local packages?</source>
          <target state="translated">로컬 패키지를 어떻게 업데이트합니까?</target>
        </trans-unit>
        <trans-unit id="f02bc5ac6f8dd46e26f73f2bb819ef0945599627" translate="yes" xml:space="preserve">
          <source>How do I use those tools outside of Homebrew?</source>
          <target state="translated">Homebrew 외부에서 해당 도구를 사용하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="f5e53428147c192fef8647b337d6e5e54c20faca" translate="yes" xml:space="preserve">
          <source>How to Build Software Outside Homebrew with Homebrew &lt;code&gt;keg_only&lt;/code&gt; Dependencies</source>
          <target state="translated">How to Build Software Outside Homebrew with Homebrew &lt;code&gt;keg_only&lt;/code&gt; Dependencies</target>
        </trans-unit>
        <trans-unit id="22cc1f65626d3a8483651adc6eda41cf05f4ff81" translate="yes" xml:space="preserve">
          <source>How to Create and Maintain a Tap</source>
          <target state="translated">탭을 만들고 유지하는 방법</target>
        </trans-unit>
        <trans-unit id="f9d429f8510b62fa50bc06c827146f1d0b612225" translate="yes" xml:space="preserve">
          <source>How to build software outside Homebrew with Homebrew &lt;code&gt;keg_only&lt;/code&gt; dependencies</source>
          <target state="translated">Homebrew &lt;code&gt;keg_only&lt;/code&gt; 의존성을 사용 하여 Homebrew 외부에서 소프트웨어를 빌드하는 방법</target>
        </trans-unit>
        <trans-unit id="e9a012b37e0c3d96d24fd9bb0f181f88bad4fa31" translate="yes" xml:space="preserve">
          <source>How to build software outside Homebrew with Homebrew keg_only dependencies</source>
          <target state="translated">Homebrew keg_only 의존성을 사용하여 Homebrew 외부에서 소프트웨어를 빌드하는 방법</target>
        </trans-unit>
        <trans-unit id="94f60f7660faa455443dbb6dcdc19a5749f10af2" translate="yes" xml:space="preserve">
          <source>How to start over (reset to upstream &lt;code&gt;master&lt;/code&gt;)</source>
          <target state="translated">다시 시작하는 방법 (업스트림 &lt;code&gt;master&lt;/code&gt; 재설정 )</target>
        </trans-unit>
        <trans-unit id="f0591571be5ecb580eaac67d1b0d3a5956f451d4" translate="yes" xml:space="preserve">
          <source>How to use these guidelines</source>
          <target state="translated">이 지침을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="translated">How?</target>
        </trans-unit>
        <trans-unit id="06fc60aba42f257e13cb8cceebb4c65074040aed" translate="yes" xml:space="preserve">
          <source>However do yourself a favour and install to &lt;code&gt;/usr/local&lt;/code&gt; on macOS Intel, &lt;code&gt;/opt/homebrew&lt;/code&gt; on macOS ARM, and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; on Linux. Some things may not build when installed elsewhere. One of the reasons Homebrew just works relative to the competition is &lt;strong&gt;because&lt;/strong&gt; we recommend installing here. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</source>
          <target state="translated">However do yourself a favour and install to &lt;code&gt;/usr/local&lt;/code&gt; on macOS Intel, &lt;code&gt;/opt/homebrew&lt;/code&gt; on macOS ARM, and &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; on Linux. Some things may not build when installed elsewhere. One of the reasons Homebrew just works relative to the competition is &lt;strong&gt;because&lt;/strong&gt; we recommend installing here. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3f1eed99b27a1b470955618838b7f709127cb81" translate="yes" xml:space="preserve">
          <source>However do yourself a favour and install to &lt;code&gt;/usr/local&lt;/code&gt;. Some things may not build when installed elsewhere. One of the reasons Homebrew just works relative to the competition is &lt;strong&gt;because&lt;/strong&gt; we recommend installing to &lt;code&gt;/usr/local&lt;/code&gt;. &lt;em&gt;Pick another prefix at your peril!&lt;/em&gt;</source>
          <target state="translated">그러나 자신에게 유리한 태도를 취하고 &lt;code&gt;/usr/local&lt;/code&gt; 에 설치하십시오 . 다른 곳에 설치하면 어떤 것이 쌓이지 않을 수 있습니다. 이유 중 하나는 바로 경쟁 상대 작동 브루입니다 &lt;strong&gt;때문에&lt;/strong&gt; 우리가 설치하는 것이 좋습니다 &lt;code&gt;/usr/local&lt;/code&gt; . &lt;em&gt;당신의 위험에 다른 접두사를 선택하십시오!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35f0f18cbeeaba021c5a1ad89c97287e68b90bc6" translate="yes" xml:space="preserve">
          <source>However, some updates require additional changes to the formulae. You can look back at previous pull requests to see how others have handled things in the past but be sure to look at a variety of PRs. Sometimes formulae aren&amp;rsquo;t updated properly, so you may need to use your judgment to determine how to best proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0399a187d45b914b5af29e1a3389253d4fcc9f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;brew doctor&lt;/code&gt; still complains about uncommitted modifications, also run this command:</source>
          <target state="translated">&lt;code&gt;brew doctor&lt;/code&gt; 여전히 커밋되지 않은 수정에 대해 불평하는 경우 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9ee78ae47873afdeaf07141c2725c0e0e59e11c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;brew&lt;/code&gt; said &lt;code&gt;Warning: Version cannot be determined from URL&lt;/code&gt; when doing the &lt;code&gt;create&lt;/code&gt; step, you&amp;rsquo;ll need to explicitly add the correct &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; to the formula and then save the formula.</source>
          <target state="translated">경우 &lt;code&gt;brew&lt;/code&gt; 말했다 &lt;code&gt;Warning: Version cannot be determined from URL&lt;/code&gt; 할 때 &lt;code&gt;create&lt;/code&gt; 단계, 당신은 명시 적으로 올바른 추가해야합니다 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 공식으로 다음 식 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ed33dc08f91bb963e6a3c80a6c8771a14cae2b13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; is passed, turn Homebrew&amp;rsquo;s analytics on or off respectively.</source>
          <target state="translated">&lt;code&gt;on&lt;/code&gt; 거나 &lt;code&gt;off&lt;/code&gt; 경우 Homebrew의 분석을 각각 켜거나 끄십시오.</target>
        </trans-unit>
        <trans-unit id="e99b1a200fc12e6ba02ff91cce62f23d88a3b84d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;regenerate-uuid&lt;/code&gt; is passed, regenerate UUID used in Homebrew&amp;rsquo;s analytics.</source>
          <target state="translated">경우 &lt;code&gt;regenerate-uuid&lt;/code&gt; 전달되는, 중생 UUID는 브루의 분석에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b3e8fea6a021311db367093df0a86b7fffac8d81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;state&lt;/code&gt; is passed, display anonymous user behaviour analytics state. Read more at &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;state&lt;/code&gt; 전달되고, 익명의 사용자 행동 분석의 상태를 표시합니다. &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt; 에서 자세히 알아 보십시오 .</target>
        </trans-unit>
        <trans-unit id="5b2a52296bb039d90954d73a6a5c13bdf2fdfc68" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sudo&lt;/code&gt; is passed, operate on &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; (started at boot). Otherwise, operate on &lt;code&gt;~/Library/LaunchAgents&lt;/code&gt; (started at login).</source>
          <target state="translated">If &lt;code&gt;sudo&lt;/code&gt; is passed, operate on &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; (started at boot). Otherwise, operate on &lt;code&gt;~/Library/LaunchAgents&lt;/code&gt; (started at login).</target>
        </trans-unit>
        <trans-unit id="e96ae3efdb081cffd0dd81509c41958299da5006" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; is provided, display the location in the Caskroom where &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; is provided, display the location in the Caskroom where &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</target>
        </trans-unit>
        <trans-unit id="052bf073d3882d70c148f3a9633b4d0e57a47fb6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are given, upgrade only the specified brews (unless they are pinned; see &lt;code&gt;pin&lt;/code&gt;, &lt;code&gt;unpin&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 주어진다 (그들은 고정되지 않는 한, 참조는 지정된 양조주를 업그레이드 &lt;code&gt;pin&lt;/code&gt; , &lt;code&gt;unpin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d02af9632ef17566bd3157a472f1c866d59ef0d2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the file or directory used to cache &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 제공, 캐시에 사용되는 파일이나 디렉토리 표시 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e5b6ba85168aaeab657228ff356b9b284a34df6d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is or would be installed.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is or would be installed.</target>
        </trans-unit>
        <trans-unit id="6b3794c565b07b5f39fe8895a2af876ee22c312e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, display the location in the Cellar where &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</target>
        </trans-unit>
        <trans-unit id="fdc5d766afd849854c69c9b84e77e15782a28bd4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is or would be installed.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 제공되고, 지하실 위치 표시 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 되거나 설치 될 수있다.</target>
        </trans-unit>
        <trans-unit id="97d26f500aac3205d517fb5c2246d7279f937f13" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, display the location in the cellar where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; would be installed, without any sort of versioned directory as the last path.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 제공되는 경우 마지막 경로로 버전이 지정된 디렉토리없이 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 설치 될 지하실의 위치를 ​​표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a0a643e2b55feb50b600491f35b35a5f72698df" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, show summary of information about &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, show summary of information about &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="23741deb69d6f6fdc57cbc266b1b277c0bbaecf5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided, summarise the paths within its current keg.</source>
          <target state="translated">If &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; is provided, summarise the paths within its current keg.</target>
        </trans-unit>
        <trans-unit id="696f7a87e5f37bc15b4e55c90f9f16119418c35d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is specified, show summary of information about &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 가 지정 되면 &lt;em&gt;formula&lt;/em&gt; 정보의 요약을 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b42403d628e04da5d03917751567c4ece3308ddd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt; are provided, display where tap &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s directory is located.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; 제공되며, 디스플레이 탭 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; 의 디렉토리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="71b7187a9434f60df1eb12689708f00f5af2c1c8" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; is specified, the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; checksum of the new download should also be specified. A best effort to determine the &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; name will be made if either or both values are not supplied by the user.</source>
          <target state="translated">경우 &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; 이&lt;/em&gt; 지정되면, &lt;em&gt; &lt;code&gt;SHA-256&lt;/code&gt; &lt;/em&gt; 새로운 다운로드의 검사도 지정해야합니다. &lt;em&gt; &lt;code&gt;SHA-256&lt;/code&gt; &lt;/em&gt; 및 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이름 을 결정하기위한 최선의 노력 은 사용자가 값 중 하나 또는 둘 다를 제공하지 않으면 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="cd5fd3ea7db514a22bad5c918c6a50728fd9eabf" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; is specified, the Git commit &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; corresponding to that tag must also be specified.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;tag&lt;/code&gt; &lt;/em&gt; 가 지정된 경우 해당 &lt;em&gt;태그&lt;/em&gt; 에 해당하는 Git 커밋 &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; 도 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="de3622dfd11d94601866c86db89070b823529d59" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; is specified, the Git commit &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; corresponding to that tag should also be specified. A best effort to determine the &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; will be made if the value is not supplied by the user.</source>
          <target state="translated">If a &lt;em&gt; &lt;code&gt;tag&lt;/code&gt; &lt;/em&gt; is specified, the Git commit &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; corresponding to that tag should also be specified. A best effort to determine the &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; will be made if the value is not supplied by the user.</target>
        </trans-unit>
        <trans-unit id="711544433834e120138f96e7c442b917daf550ac" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; is specified, a best effort to determine the &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;SHA-256&lt;/code&gt;&lt;/em&gt; or the &lt;em&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/em&gt; will be made if both values are not supplied by the user.</source>
          <target state="translated">If a &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; is specified, a best effort to determine the &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; and &lt;em&gt; &lt;code&gt;SHA-256&lt;/code&gt; &lt;/em&gt; or the &lt;em&gt; &lt;code&gt;tag&lt;/code&gt; &lt;/em&gt; and &lt;em&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/em&gt; will be made if both values are not supplied by the user.</target>
        </trans-unit>
        <trans-unit id="162a436ef18a033c6fce8309711cac9b0b671f12" translate="yes" xml:space="preserve">
          <source>If a bottle is available and usable it will be downloaded and poured automatically when you &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. If you wish to disable this you can do so by specifying &lt;code&gt;--build-from-source&lt;/code&gt;.</source>
          <target state="translated">병이 사용 가능하고 사용 가능한 경우 &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt; 를 양조 할 때 병이 자동으로 다운로드되고 부어 집니다. 이를 비활성화하려면 &lt;code&gt;--build-from-source&lt;/code&gt; 를 지정하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="2100480dc6a682888153bc0b6e0127a2f1f5dfdd" translate="yes" xml:space="preserve">
          <source>If a formula is widely used and is failing often it will enable us to prioritise fixing that formula over others.</source>
          <target state="translated">수식이 널리 사용되고 자주 실패하는 경우 해당 수식을 다른 수식보다 우선 순위를 정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6666e69a10195da0fe65bb3da9675518061afa1" translate="yes" xml:space="preserve">
          <source>If a formula that has failed to build is part of a non-core tap or a cask is part of &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues&quot;&gt;homebrew/cask&lt;/a&gt; check those issue trackers instead.</source>
          <target state="translated">빌드에 실패한 수식이 코어가 아닌 탭의 일부이거나 캐스 크가 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues&quot;&gt;homebrew / cask의&lt;/a&gt; 일부인 경우 해당 이슈 트래커를 대신 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fe98eb09bc54c62b904a67b376d067bfd3ffde67" translate="yes" xml:space="preserve">
          <source>If anything isn&amp;rsquo;t clear, you can usually figure it out by &lt;code&gt;grep&lt;/code&gt;ping the &lt;code&gt;$(brew --repo homebrew/core)&lt;/code&gt; directory. Please submit a pull request to amend this document if you think it will help!</source>
          <target state="translated">명확하지 않은 경우, 일반적으로 &lt;code&gt;$(brew --repo homebrew/core)&lt;/code&gt; 디렉토리 를 &lt;code&gt;grep&lt;/code&gt; 핑하여 알아낼 수 있습니다 . 도움이 될 것이라고 생각되면이 문서를 수정하기위한 풀 요청을 제출하십시오!</target>
        </trans-unit>
        <trans-unit id="a75fff982a1f6ca410ea4c31df0f98b89aa9e374" translate="yes" xml:space="preserve">
          <source>If available, bottled binaries will be used by default except under the following conditions:</source>
          <target state="translated">사용 가능한 경우 다음 조건을 제외하고 기본적으로 병 바이너리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9df5b5b095e860cef7a51a82b0b93f6ae2b0055d" translate="yes" xml:space="preserve">
          <source>If everything checks out, you&amp;rsquo;re ready to get started on a new formula!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee14fdc0fbe04c47873f449d2f761936414751fc" translate="yes" xml:space="preserve">
          <source>If installed from a Git clone, the repository directory (i.e. where Homebrew&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; directory lives).</source>
          <target state="translated">Git 복제본에서 설치 한 경우 리포지토리 디렉토리 (예 : Homebrew의 &lt;code&gt;.git&lt;/code&gt; 디렉토리가 있는 위치 )</target>
        </trans-unit>
        <trans-unit id="cc977a40612040aa5efa9917c9aca15419c7340f" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s been a while, bump it with a &amp;ldquo;bump&amp;rdquo; comment. Sometimes we miss requests and there are plenty of them. Maybe we were thinking on something. It will encourage consideration. In the meantime if you could rebase the pull request so that it can be cherry-picked more easily we will love you for a long time.</source>
          <target state="translated">오랜 시간이 지나면&amp;ldquo;범프&amp;rdquo;주석으로 범프하십시오. 때때로 우리는 요청을 그리워하고 많은 요청이 있습니다. 어쩌면 우리는 뭔가를 생각하고 있었을 것입니다. 그것은 고려를 장려 할 것입니다. 그동안 풀 요청을 더 쉽게 체리 픽으로 선택할 수 있도록 풀 요청을 리베이스 할 수 있다면 우리는 오랫동안 당신을 사랑할 것입니다.</target>
        </trans-unit>
        <trans-unit id="9e0da3770f3f1197ec5a08441e7c72f7d1e499e9" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s hosted outside of GitHub, they have to use &lt;code&gt;brew tap user/repo &amp;lt;URL&amp;gt;&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;repo&lt;/code&gt; will be used to refer to your tap and &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; is your Git clone URL.</source>
          <target state="translated">GitHub 외부에서 호스팅되는 경우, &lt;code&gt;brew tap user/repo &amp;lt;URL&amp;gt;&lt;/code&gt; 을 사용해야합니다 . 여기서 &lt;code&gt;user&lt;/code&gt; 및 &lt;code&gt;repo&lt;/code&gt; 는 탭을 참조하는 데 사용되고 &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; 은 Git 복제 URL입니다.</target>
        </trans-unit>
        <trans-unit id="f15ec2d1a9613563f25eeeeb2b9829353fc1bd75" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s not in &lt;code&gt;man brew&lt;/code&gt;, it&amp;rsquo;s probably an external command. These are documented &lt;a href=&quot;external-commands&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;man brew&lt;/code&gt; 에 없으면 외부 명령 일 수 있습니다. 이것들은 &lt;a href=&quot;external-commands&quot;&gt;여기&lt;/a&gt; 에 문서화되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="954879883f16c6398b4408067ced3a17c7c2ce5e" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, they can use &lt;code&gt;brew tap user/repo&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; is your GitHub username and &lt;code&gt;homebrew-repo&lt;/code&gt; is your repository.</source>
          <target state="translated">If it&amp;rsquo;s on GitHub, they can use &lt;code&gt;brew tap user/repo&lt;/code&gt; , where &lt;code&gt;user&lt;/code&gt; is your GitHub username and &lt;code&gt;homebrew-repo&lt;/code&gt; is your repository.</target>
        </trans-unit>
        <trans-unit id="552575dbf7965f498545efc6e7b46c06b6600e06" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, they can use &lt;code&gt;brew tap user/repo&lt;/code&gt;, where &lt;code&gt;user&lt;/code&gt; is your GitHub username and &lt;code&gt;homebrew-repo&lt;/code&gt; your repository.</source>
          <target state="translated">그것이 GitHub에 있다면, &lt;code&gt;brew tap user/repo&lt;/code&gt; 를 사용할 수 있습니다 . 여기서 &lt;code&gt;user&lt;/code&gt; 는 GitHub 사용자 이름이고 &lt;code&gt;homebrew-repo&lt;/code&gt; 는 저장소입니다.</target>
        </trans-unit>
        <trans-unit id="650df9e491a14f4c1590f2a4ac645c50f7492d1e" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s on GitHub, users can install any of your formulae with &lt;code&gt;brew install user/repo/formula&lt;/code&gt;. Homebrew will automatically add your &lt;code&gt;github.com/user/homebrew-repo&lt;/code&gt; tap before installing the formula. &lt;code&gt;user/repo/formula&lt;/code&gt; points to the &lt;code&gt;github.com/user/homebrew-repo/**/formula.rb&lt;/code&gt; file here.</source>
          <target state="translated">그것이 GitHub에 있다면, 사용자는 &lt;code&gt;brew install user/repo/formula&lt;/code&gt; 로 모든 공식을 설치할 수 있습니다 . 공식을 설치하기 전에 Homebrew가 &lt;code&gt;github.com/user/homebrew-repo&lt;/code&gt; 탭 을 자동으로 추가합니다 . &lt;code&gt;user/repo/formula&lt;/code&gt; 는 &lt;code&gt;github.com/user/homebrew-repo/**/formula.rb&lt;/code&gt; 파일을 가리 킵니다 .</target>
        </trans-unit>
        <trans-unit id="f395c63183c4bd9313bf81571a724ed51b07d28f" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; names are provided, display brief statistics for all installed taps.</source>
          <target state="translated">If no &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; names are provided, display brief statistics for all installed taps.</target>
        </trans-unit>
        <trans-unit id="eda0ada539e3125b9bdbd6d53ead50e4dbc21984" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is passed, display all locally available formulae (including tapped ones). No online search is performed.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 가 전달 되지 않으면 로컬에서 사용할 수있는 모든 수식 (탭된 수식 포함)을 표시합니다. 온라인 검색이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bcd792c7bd116e6dda8b11cbc96b085916339d9c" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is provided, list all locally available formulae (including tapped ones). No online search is performed.</source>
          <target state="translated">If no &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; is provided, list all locally available formulae (including tapped ones). No online search is performed.</target>
        </trans-unit>
        <trans-unit id="cced0136fff91d090fbca8926f39637448e4b9bb" translate="yes" xml:space="preserve">
          <source>If no arguments are provided, list all installed taps.</source>
          <target state="translated">If no arguments are provided, list all installed taps.</target>
        </trans-unit>
        <trans-unit id="080dd71ff5982cbe215e504f1845c4149a6698bb" translate="yes" xml:space="preserve">
          <source>If no compilation is involved and there are no &lt;code&gt;:build&lt;/code&gt; dependencies, add the line &lt;code&gt;bottle :unneeded&lt;/code&gt; since bottles are unnecessary in this case. Otherwise, a &lt;code&gt;bottle&lt;/code&gt; block will be added by Homebrew&amp;rsquo;s CI upon merging the formula&amp;rsquo;s pull-request.</source>
          <target state="translated">If no compilation is involved and there are no &lt;code&gt;:build&lt;/code&gt; dependencies, add the line &lt;code&gt;bottle :unneeded&lt;/code&gt; since bottles are unnecessary in this case. Otherwise, a &lt;code&gt;bottle&lt;/code&gt; block will be added by Homebrew&amp;rsquo;s CI upon merging the formula&amp;rsquo;s pull-request.</target>
        </trans-unit>
        <trans-unit id="fd0229d1edeb737d731b3e927401b8727be32cf4" translate="yes" xml:space="preserve">
          <source>If no formula argument is passed, the list of formulae to check is taken from &lt;code&gt;HOMEBREW_LIVECHECK_WATCHLIST&lt;/code&gt; or &lt;code&gt;~/.brew_livecheck_watchlist&lt;/code&gt;.</source>
          <target state="translated">If no formula argument is passed, the list of formulae to check is taken from &lt;code&gt;HOMEBREW_LIVECHECK_WATCHLIST&lt;/code&gt; or &lt;code&gt;~/.brew_livecheck_watchlist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b613f0bf10c7df54e5110062c24e58d582b81c" translate="yes" xml:space="preserve">
          <source>If no logs are found, an error message is presented.</source>
          <target state="translated">로그가 없으면 오류 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="daf0b503a694cbe1d2fe5ea9eb9b111acf8bed47" translate="yes" xml:space="preserve">
          <source>If set along with &lt;code&gt;HOMEBREW_DEVELOPER&lt;/code&gt;, do not use bottles from older versions of macOS. This is useful in development on new macOS versions.</source>
          <target state="translated">If set along with &lt;code&gt;HOMEBREW_DEVELOPER&lt;/code&gt; , do not use bottles from older versions of macOS. This is useful in development on new macOS versions.</target>
        </trans-unit>
        <trans-unit id="85fba99d8192559698c06dc920701a656b2c3f49" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew reinstall&lt;/code&gt; will never automatically cleanup installed/upgraded/reinstalled formulae or all formulae every 30 days.</source>
          <target state="translated">If set, &lt;code&gt;brew install&lt;/code&gt; , &lt;code&gt;brew upgrade&lt;/code&gt; and &lt;code&gt;brew reinstall&lt;/code&gt; will never automatically cleanup installed/upgraded/reinstalled formulae or all formulae every 30 days.</target>
        </trans-unit>
        <trans-unit id="bdcf7b1a9a7b38191769044672142d191c075c7b" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;brew update&lt;/code&gt; only lists updates to installed software.</source>
          <target state="translated">If set, &lt;code&gt;brew update&lt;/code&gt; only lists updates to installed software.</target>
        </trans-unit>
        <trans-unit id="4550819abbcd79b9c9de1645b35bc2174f63ce9f" translate="yes" xml:space="preserve">
          <source>If set, always assume &lt;code&gt;--debug&lt;/code&gt; when running commands.</source>
          <target state="translated">If set, always assume &lt;code&gt;--debug&lt;/code&gt; when running commands.</target>
        </trans-unit>
        <trans-unit id="bc91cb6630c1ff09df6d233ebe3a8f2165cc0263" translate="yes" xml:space="preserve">
          <source>If set, always assume &lt;code&gt;--verbose&lt;/code&gt; when running commands.</source>
          <target state="translated">If set, always assume &lt;code&gt;--verbose&lt;/code&gt; when running commands.</target>
        </trans-unit>
        <trans-unit id="3cc8fd3d22c527932b4b568a6875d889f6e57032" translate="yes" xml:space="preserve">
          <source>If set, always use Homebrew&amp;rsquo;s vendored, relocatable Ruby version even if the system version of Ruby is new enough.</source>
          <target state="translated">If set, always use Homebrew&amp;rsquo;s vendored, relocatable Ruby version even if the system version of Ruby is new enough.</target>
        </trans-unit>
        <trans-unit id="5b61e1788de1c06c7e4f6492ad1eb386aa2ad092" translate="yes" xml:space="preserve">
          <source>If set, always use a Homebrew-installed &lt;code&gt;curl&lt;/code&gt;(1) rather than the system version. Automatically set if the system version of &lt;code&gt;curl&lt;/code&gt; is too old.</source>
          <target state="translated">If set, always use a Homebrew-installed &lt;code&gt;curl&lt;/code&gt; (1) rather than the system version. Automatically set if the system version of &lt;code&gt;curl&lt;/code&gt; is too old.</target>
        </trans-unit>
        <trans-unit id="628cc1733ccee03b0923afec1ba1514882a5462a" translate="yes" xml:space="preserve">
          <source>If set, always use a Homebrew-installed &lt;code&gt;git&lt;/code&gt;(1) rather than the system version. Automatically set if the system version of &lt;code&gt;git&lt;/code&gt; is too old.</source>
          <target state="translated">If set, always use a Homebrew-installed &lt;code&gt;git&lt;/code&gt; (1) rather than the system version. Automatically set if the system version of &lt;code&gt;git&lt;/code&gt; is too old.</target>
        </trans-unit>
        <trans-unit id="d714c1adbbef41574f3aabfb24b6864fa7a4dc74" translate="yes" xml:space="preserve">
          <source>If set, always use the latest stable tag (even if developer commands have been run).</source>
          <target state="translated">If set, always use the latest stable tag (even if developer commands have been run).</target>
        </trans-unit>
        <trans-unit id="b927625ac6314ed3001a49f190d529e33176a8c7" translate="yes" xml:space="preserve">
          <source>If set, disable all use of legacy compatibility code.</source>
          <target state="translated">If set, disable all use of legacy compatibility code.</target>
        </trans-unit>
        <trans-unit id="52ca1aaa36c1b4587a85e4e4eff77cf33bf9cce3" translate="yes" xml:space="preserve">
          <source>If set, do not automatically update before running &lt;code&gt;brew install&lt;/code&gt;, &lt;code&gt;brew upgrade&lt;/code&gt; or &lt;code&gt;brew tap&lt;/code&gt;.</source>
          <target state="translated">If set, do not automatically update before running &lt;code&gt;brew install&lt;/code&gt; , &lt;code&gt;brew upgrade&lt;/code&gt; or &lt;code&gt;brew tap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d135229630d186724863e32e40bbe8d3b8728ef7" translate="yes" xml:space="preserve">
          <source>If set, do not check for broken dependents after installing, upgrading or reinstalling formulae.</source>
          <target state="translated">If set, do not check for broken dependents after installing, upgrading or reinstalling formulae.</target>
        </trans-unit>
        <trans-unit id="7efdc74d4c8f918fac786fd32a698e3dae3051ae" translate="yes" xml:space="preserve">
          <source>If set, do not pass &lt;code&gt;--disable&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1), which disables the use of &lt;code&gt;curlrc&lt;/code&gt;.</source>
          <target state="translated">If set, do not pass &lt;code&gt;--disable&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt; (1), which disables the use of &lt;code&gt;curlrc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1764315d106e0dd87a01838ee3e7ff51c5e96c5e" translate="yes" xml:space="preserve">
          <source>If set, do not print &lt;code&gt;HOMEBREW_INSTALL_BADGE&lt;/code&gt; on a successful build.</source>
          <target state="translated">If set, do not print &lt;code&gt;HOMEBREW_INSTALL_BADGE&lt;/code&gt; on a successful build.</target>
        </trans-unit>
        <trans-unit id="7f913c564f296e655f72ed10fabd67700f6fd0b1" translate="yes" xml:space="preserve">
          <source>If set, do not print text with colour added.</source>
          <target state="translated">If set, do not print text with colour added.</target>
        </trans-unit>
        <trans-unit id="e2eef0ce39a7dfc39ec9f1a75eb19c7be4cb5737" translate="yes" xml:space="preserve">
          <source>If set, do not send analytics. For more information, see: &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;</source>
          <target state="translated">If set, do not send analytics. For more information, see: &lt;a href=&quot;analytics&quot;&gt;https://docs.brew.sh/Analytics&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e14817c195c0902416a86036352e484408b73e10" translate="yes" xml:space="preserve">
          <source>If set, do not use the GitHub API, e.g. for searches or fetching relevant issues after a failed install.</source>
          <target state="translated">If set, do not use the GitHub API, e.g. for searches or fetching relevant issues after a failed install.</target>
        </trans-unit>
        <trans-unit id="d82077a2bb87e8d655161d0aa036ea78ec11098e" translate="yes" xml:space="preserve">
          <source>If set, enable runtime typechecking using Sorbet.</source>
          <target state="translated">If set, enable runtime typechecking using Sorbet.</target>
        </trans-unit>
        <trans-unit id="b374c373fd41e8bf40266998d22035ed2eda353a" translate="yes" xml:space="preserve">
          <source>If set, fail on the failure of installation from a bottle rather than falling back to building from source.</source>
          <target state="translated">If set, fail on the failure of installation from a bottle rather than falling back to building from source.</target>
        </trans-unit>
        <trans-unit id="721075a0c82dec18d67f2b025858463c0c034212" translate="yes" xml:space="preserve">
          <source>If set, forbid redirects from secure HTTPS to insecure HTTP.</source>
          <target state="translated">If set, forbid redirects from secure HTTPS to insecure HTTP.</target>
        </trans-unit>
        <trans-unit id="d70d17fdcccd19cb11c15418ac254f92cc397543" translate="yes" xml:space="preserve">
          <source>If set, force colour output on non-TTY outputs.</source>
          <target state="translated">If set, force colour output on non-TTY outputs.</target>
        </trans-unit>
        <trans-unit id="ae203f0cefec0a6f4cdee3ebb595cd4fed315aff" translate="yes" xml:space="preserve">
          <source>If set, pass &lt;code&gt;--verbose&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1).</source>
          <target state="translated">If set, pass &lt;code&gt;--verbose&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt; (1).</target>
        </trans-unit>
        <trans-unit id="2d8fe856e1c996e8b38d8e2b448e6dd9b997a4fd" translate="yes" xml:space="preserve">
          <source>If set, pass the &lt;code&gt;-A&lt;/code&gt; option when calling &lt;code&gt;sudo&lt;/code&gt;(8).</source>
          <target state="translated">If set, pass the &lt;code&gt;-A&lt;/code&gt; option when calling &lt;code&gt;sudo&lt;/code&gt; (8).</target>
        </trans-unit>
        <trans-unit id="ca4d54b7dfc0dc55be44947cb30caa65c60a7efb" translate="yes" xml:space="preserve">
          <source>If set, print install times for each formula at the end of the run.</source>
          <target state="translated">If set, print install times for each formula at the end of the run.</target>
        </trans-unit>
        <trans-unit id="b384ab51bd27699a178c1e5b9b09e4d3d3cd423a" translate="yes" xml:space="preserve">
          <source>If set, refuse to load formulae. This is useful when formulae are not trusted (such as in pull requests).</source>
          <target state="translated">If set, refuse to load formulae. This is useful when formulae are not trusted (such as in pull requests).</target>
        </trans-unit>
        <trans-unit id="9fabd57fe05e612bae9a08d179204ae8ffce4dd5" translate="yes" xml:space="preserve">
          <source>If set, running Homebrew on Linux will use URLs for macOS. This is useful when merging pull requests for macOS while on Linux.</source>
          <target state="translated">If set, running Homebrew on Linux will use URLs for macOS. This is useful when merging pull requests for macOS while on Linux.</target>
        </trans-unit>
        <trans-unit id="953161615ee0c384afe3bf6e124d2162d443096d" translate="yes" xml:space="preserve">
          <source>If set, tweak behaviour to be more relevant for Homebrew developers (active or budding) by e.g. turning warnings into errors.</source>
          <target state="translated">If set, tweak behaviour to be more relevant for Homebrew developers (active or budding) by e.g. turning warnings into errors.</target>
        </trans-unit>
        <trans-unit id="808d1c3794411301f08f398b79110a9bd69eaf13" translate="yes" xml:space="preserve">
          <source>If set, use &lt;code&gt;bat&lt;/code&gt; for the &lt;code&gt;brew cat&lt;/code&gt; command.</source>
          <target state="translated">If set, use &lt;code&gt;bat&lt;/code&gt; for the &lt;code&gt;brew cat&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="170649d567291036fe831cdc3e108f9ad32864d3" translate="yes" xml:space="preserve">
          <source>If set, use Pry for the &lt;code&gt;brew irb&lt;/code&gt; command.</source>
          <target state="translated">If set, use Pry for the &lt;code&gt;brew irb&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="f0765fdadd8c537b529588bd27a4541a91b56ffa" translate="yes" xml:space="preserve">
          <source>If set, verbose output will print a &lt;code&gt;.&lt;/code&gt; no more than once a minute. This can be useful to avoid long-running Homebrew commands being killed due to no output.</source>
          <target state="translated">If set, verbose output will print a &lt;code&gt;.&lt;/code&gt; no more than once a minute. This can be useful to avoid long-running Homebrew commands being killed due to no output.</target>
        </trans-unit>
        <trans-unit id="e2a132698f0adf48385dc3df8c774fcedd9f4d07" translate="yes" xml:space="preserve">
          <source>If that fixes it, please open an &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;issue&lt;/a&gt; so that we can fix it for everyone.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;문제&lt;/a&gt; 가 해결되면 모든 사람이 문제를 해결할 수 있도록 문제 를여십시오 .</target>
        </trans-unit>
        <trans-unit id="3fc7aa1e29edbb37ff5968f3db411caa99a147f0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip&quot;&gt;Google Analytics anonymous IP setting&lt;/a&gt; is enabled, i.e. &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">If the &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip&quot;&gt;Google Analytics anonymous IP setting&lt;/a&gt; is enabled, i.e. &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0969fb9fde0c9f663e7a8183a16414490845af7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;configure&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; scripts do not want to install into the Cellar, sometimes you can:</source>
          <target state="translated">는 IF &lt;code&gt;configure&lt;/code&gt; 및 &lt;code&gt;make&lt;/code&gt; 스크립트, 지하실에 설치하지 않으려는 때때로 당신은 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e061df9ed4344b03012dc600ae8ad8ea77e8b372" translate="yes" xml:space="preserve">
          <source>If the Google Analytics anonymous IP setting is enabled, i.e. &lt;code&gt;1&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip)</source>
          <target state="translated">Google 웹 로그 분석 익명 IP 설정을 사용하는 경우 (예 : &lt;code&gt;1&lt;/code&gt; ) (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip)</target>
        </trans-unit>
        <trans-unit id="910c1d81835d744f057cd5d7fdcce860deaa5a09" translate="yes" xml:space="preserve">
          <source>If the JSON output does not provide some information that it ought to, please submit a request, preferably with a patch to add the desired information.</source>
          <target state="translated">JSON 출력이 필요한 정보를 제공하지 않으면 원하는 정보를 추가 할 수있는 패치와 함께 요청을 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="38d2959cf98698173bd56e00bdac3292025fac9c" translate="yes" xml:space="preserve">
          <source>If the Node module is also available on the npm registry, we prefer npm hosted release tarballs over GitHub (or elsewhere) hosted source tarballs. The advantages of these tarballs are that they don&amp;rsquo;t include the files from the &lt;code&gt;.npmignore&lt;/code&gt; (such as tests) resulting in a smaller download size and that any possible transpilation step is already done (e.g. no need to compile CoffeeScript files as a build step).</source>
          <target state="translated">노드 모듈을 npm 레지스트리에서도 사용할 수있는 경우 GitHub (또는 다른 곳) 호스트 소스 tarball보다 npm 호스트 릴리스 tarball을 선호합니다. 이 tarball의 장점은 &lt;code&gt;.npmignore&lt;/code&gt; (예 : 테스트) 의 파일을 포함하지 않아 다운로드 크기가 더 작아지고 가능한 변환 과정이 이미 완료된 것입니다 (예 : CoffeeScript 파일을 빌드 단계로 컴파일 할 필요가 없음) ).</target>
        </trans-unit>
        <trans-unit id="3daae764d854c69d293f0eae6ac6c2dbf33fde24" translate="yes" xml:space="preserve">
          <source>If the bindings are installed by invoking a &lt;code&gt;setup.py&lt;/code&gt;, do something like:</source>
          <target state="translated">&lt;code&gt;setup.py&lt;/code&gt; 를 호출하여 바인딩을 설치 한 경우 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="78f02874bdff41478703983a8cfd6566338024b7" translate="yes" xml:space="preserve">
          <source>If the command&amp;rsquo;s output is sent through a pipe and no shell is specified, the list is formatted for export to &lt;code&gt;bash&lt;/code&gt;(1) unless &lt;code&gt;--plain&lt;/code&gt; is passed.</source>
          <target state="translated">명령의 출력이 파이프를 통해 전송되고 쉘이 지정 되지 않은 경우 &lt;code&gt;--plain&lt;/code&gt; 이 전달 되지 않으면 목록은 &lt;code&gt;bash&lt;/code&gt; (1)로 내보내기 위해 형식화됩니다 .</target>
        </trans-unit>
        <trans-unit id="af17c73cd3e1e762abb9a2aa3446ddf8b421a9b9" translate="yes" xml:space="preserve">
          <source>If the configure script takes a &lt;code&gt;--with-python&lt;/code&gt; flag, it usually will not need extra help finding Python.</source>
          <target state="translated">configure 스크립트가 &lt;code&gt;--with-python&lt;/code&gt; 플래그를 사용하면 일반적으로 Python을 찾는 데 추가 도움이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="973ddb944611975d6bc49c178254297847af68e2" translate="yes" xml:space="preserve">
          <source>If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream&amp;rsquo;s documentation / source examples. A good example is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/tinyxml2.rb&quot;&gt;&lt;code&gt;tinyxml2&lt;/code&gt;&lt;/a&gt;, which writes a small C++ source file into the test directory, compiles and links it against the tinyxml2 library and finally checks that the resulting program runs successfully.</source>
          <target state="translated">If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream&amp;rsquo;s documentation / source examples. A good example is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/tinyxml2.rb&quot;&gt; &lt;code&gt;tinyxml2&lt;/code&gt; &lt;/a&gt;, which writes a small C++ source file into the test directory, compiles and links it against the tinyxml2 library and finally checks that the resulting program runs successfully.</target>
        </trans-unit>
        <trans-unit id="df0712f10665a36a0a62976031a4009fbe276b0c" translate="yes" xml:space="preserve">
          <source>If the formula is a library, compile and run some simple code that links against it. It could be taken from upstream&amp;rsquo;s documentation / source examples. A good example is &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/tinyxml2.rb&quot;&gt;&lt;code&gt;tinyxml2&lt;/code&gt;&lt;/a&gt;, which writes a small C++ source file into the test directory, compiles and links it against the tinyxml2 library and finally checks that the resulting program runs successfully.</source>
          <target state="translated">수식이 라이브러리 인 경우 수식과 연결되는 간단한 코드를 컴파일하고 실행하십시오. 업스트림의 문서 / 소스 예제에서 가져올 수 있습니다. 좋은 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/tinyxml2.rb&quot;&gt; &lt;code&gt;tinyxml2&lt;/code&gt; 입니다&lt;/a&gt; .이 테스트는 작은 C ++ 소스 파일을 테스트 디렉토리에 작성하고 컴파일하여 tinyxml2 라이브러리에 링크 한 다음 결과 프로그램이 성공적으로 실행되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a09ca44dfc8fe84ff63916897c2cb28fa5b56d21" translate="yes" xml:space="preserve">
          <source>If the formula is for a GUI program, try to find some function that runs as command-line only, like a format conversion, reading or displaying a config file, etc.</source>
          <target state="translated">공식이 GUI 프로그램 용인 경우 형식 변환, 구성 파일 읽기 또는 표시 등과 같이 명령 행으로 만 실행되는 함수를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="441c3705aefd69f9e1c6b7f72a06ac46077511e0" translate="yes" xml:space="preserve">
          <source>If the license for a formula cannot be represented using an SPDX expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2faa0a14e6a2cdb647b2a8c2074ecd9aa75fd0" translate="yes" xml:space="preserve">
          <source>If the preceding steps did not help, it may be appropriate to submit an issue. This can be done by navigating to the relevant repository, clicking the &amp;ldquo;Issues&amp;rdquo; link, and clicking on the &amp;ldquo;New issue&amp;rdquo; button. When creating an issue, make sure you use the provided template, as it&amp;rsquo;s important in helping others to understand and potentially triage your issue efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318d7e55d7828ee4ce293fe9094c1b222085eaa1" translate="yes" xml:space="preserve">
          <source>If the software cannot function without credentials or requires a virtual machine, docker instance, etc. to run, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected.</source>
          <target state="translated">자격 증명없이 소프트웨어를 작동 할 수 없거나 가상 시스템, 도커 인스턴스 등을 실행해야하는 경우 테스트에서 유효하지 않은 자격 증명 (또는 자격 증명없이)으로 연결하여 예상대로 실패하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d7e2aab4102cdac60018780b3494971d694ac84" translate="yes" xml:space="preserve">
          <source>If the software cannot function without credentials or requires a virtual machine, docker instance, etc. to run, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected. This is prefered over mocking a dependency.</source>
          <target state="translated">If the software cannot function without credentials or requires a virtual machine, docker instance, etc. to run, a test could be to try to connect with invalid credentials (or without credentials) and confirm that it fails as expected. This is prefered over mocking a dependency.</target>
        </trans-unit>
        <trans-unit id="89649f497e2238364a614371edcf0919b99cc6c5" translate="yes" xml:space="preserve">
          <source>If the tool you are attempting to build is &lt;a href=&quot;https://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config&lt;/a&gt; aware, you can amend your &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; to find that &lt;code&gt;keg_only&lt;/code&gt; utility&amp;rsquo;s &lt;code&gt;.pc&lt;/code&gt; file, if it has them. Not all formulae ship with those files.</source>
          <target state="translated">빌드하려는 도구가 &lt;a href=&quot;https://en.wikipedia.org/wiki/Pkg-config&quot;&gt;pkg-config를&lt;/a&gt; 인식하는 경우 &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; 를 수정하여 &lt;code&gt;keg_only&lt;/code&gt; 유틸리티의 &lt;code&gt;.pc&lt;/code&gt; 파일 (있는 경우) 을 찾을 수 있습니다. 모든 수식이 해당 파일과 함께 제공되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="071d4a2cede7ab647faff4650f0f794912a0b1c8" translate="yes" xml:space="preserve">
          <source>If there is a formula that currently exists in the Homebrew/homebrew-core repository or has existed in the past (i.e. was migrated or deleted), you can recover it for your own use with the &lt;code&gt;brew extract&lt;/code&gt; command. This will copy the desired version of the formula into a custom tap. For example, if your project depends on &lt;code&gt;automake&lt;/code&gt; 1.12 instead of the most recent version, you can obtain the &lt;code&gt;automake&lt;/code&gt; formula at version 1.12 by running &lt;code&gt;brew extract automake &amp;lt;YOUR_GITHUB_USER&amp;gt;/&amp;lt;YOUR_TAP_REPOSITORY_NAME&amp;gt; --version=1.12&lt;/code&gt;. Formulae obtained this way may contain deprecated, disabled or removed Homebrew syntax (e.g. checksums may be &lt;code&gt;sha1&lt;/code&gt; instead of &lt;code&gt;sha256&lt;/code&gt;); the &lt;code&gt;brew extract&lt;/code&gt; command does not edit or update formulae to meet current standards and style requirements.</source>
          <target state="translated">현재 Homebrew / homebrew-core 리포지토리에 있거나 이전에 존재 한 (즉, 마이그레이션 또는 삭제 된) 수식이있는 경우 &lt;code&gt;brew extract&lt;/code&gt; 명령을 사용하여 자신이 사용할 수 있도록 수식을 복구 할 수 있습니다 . 원하는 버전의 수식이 사용자 정의 탭으로 복사됩니다. 예를 들어 프로젝트가 최신 버전 대신 &lt;code&gt;automake&lt;/code&gt; 1.12에 의존하는 경우 &lt;code&gt;brew extract automake &amp;lt;YOUR_GITHUB_USER&amp;gt;/&amp;lt;YOUR_TAP_REPOSITORY_NAME&amp;gt; --version=1.12&lt;/code&gt; 를 실행하여 버전 1.12에서 &lt;code&gt;automake&lt;/code&gt; 공식을 얻을 수 있습니다 . 이 방법으로 얻은 수식은 더 이상 사용되지 않거나, 비활성화되거나 제거 된 Homebrew 구문을 포함 할 수 있습니다 (예 : 체크섬은 &lt;code&gt;sha256&lt;/code&gt; 대신 &lt;code&gt;sha1&lt;/code&gt; 일 수 있음 ). &lt;code&gt;brew extract&lt;/code&gt; 명령은 현재 표준 및 스타일 요구 사항을 충족하기 위해 공식을 편집하거나 업데이트하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="701ac0a16359321c51834ce6fa437e0e7c19ce31" translate="yes" xml:space="preserve">
          <source>If there&amp;rsquo;s a &lt;code&gt;bottle do&lt;/code&gt; block in the formula, don&amp;rsquo;t remove or change it; we&amp;rsquo;ll update it when we pull your PR.</source>
          <target state="translated">이 있다면 &lt;code&gt;bottle do&lt;/code&gt; 수식에 블록을 제거하거나 변경하지 마십시오; 우리는 당신의 PR을 뽑을 때 그것을 업데이트 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="b86a782c7c2d4f2d086b69f2e0dd8d39928a1ddd" translate="yes" xml:space="preserve">
          <source>If they want to get your tap without installing any formula at the same time, users can add it with the &lt;a href=&quot;taps&quot;&gt;&lt;code&gt;brew tap&lt;/code&gt; command&lt;/a&gt;.</source>
          <target state="translated">수식을 동시에 설치하지 않고 탭을 얻으려면 &lt;a href=&quot;taps&quot;&gt; &lt;code&gt;brew tap&lt;/code&gt; 명령을&lt;/a&gt; 사용하여 탭을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b98d3ea36c59c682c050eecead4352f741f4ed4" translate="yes" xml:space="preserve">
          <source>If this is a major or minor release (e.g. X.0.0 or X.Y.0) then there are a few more steps:</source>
          <target state="translated">이것이 주 릴리스 또는 부 릴리스 (예 : X.0.0 또는 XY0) 인 경우 몇 가지 단계가 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="66ef1d4eeb2234d4cd33cb4d2359dea9c6372961" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;brew update-python-resources&lt;/code&gt; doesn&amp;rsquo;t work, you can use &lt;a href=&quot;https://pypi.python.org/pypi/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; to help you write resource stanzas. To use it, set up a virtualenv and install your package and all its dependencies. Then, &lt;code&gt;pip install homebrew-pypi-poet&lt;/code&gt; into the same virtualenv. Running &lt;code&gt;poet some_package&lt;/code&gt; will generate the necessary resource stanzas. You can do this like:</source>
          <target state="translated">If using &lt;code&gt;brew update-python-resources&lt;/code&gt; doesn&amp;rsquo;t work, you can use &lt;a href=&quot;https://pypi.python.org/pypi/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; to help you write resource stanzas. To use it, set up a virtualenv and install your package and all its dependencies. Then, &lt;code&gt;pip install homebrew-pypi-poet&lt;/code&gt; into the same virtualenv. Running &lt;code&gt;poet some_package&lt;/code&gt; will generate the necessary resource stanzas. You can do this like:</target>
        </trans-unit>
        <trans-unit id="843f6d8c052e735b2e334979baffacb1ba747fae" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;code&gt;bash&lt;/code&gt; formula as your shell (i.e. &lt;code&gt;bash&lt;/code&gt; &amp;gt;= v4) you should use the &lt;code&gt;bash-completion@2&lt;/code&gt; formula instead.</source>
          <target state="translated">If you are using the &lt;code&gt;bash&lt;/code&gt; formula as your shell (i.e. &lt;code&gt;bash&lt;/code&gt; &amp;gt;= v4) you should use the &lt;code&gt;bash-completion@2&lt;/code&gt; formula instead.</target>
        </trans-unit>
        <trans-unit id="e6933a28ade1bf4aeb610f7aaf6e4c6942af0c51" translate="yes" xml:space="preserve">
          <source>If you are working on a PR for a single formula, &lt;code&gt;git commit --amend&lt;/code&gt; is a convenient way of keeping your commits squashed as you go.</source>
          <target state="translated">단일 수식에 대한 PR 작업을 수행하는 경우 &lt;code&gt;git commit --amend&lt;/code&gt; 은 커밋 을 계속 진행하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1a1f84a9ebce717998b463ae0b26fce8bf5b883c" translate="yes" xml:space="preserve">
          <source>If you do not uninstall all of the versions that Homebrew has installed, Homebrew will continue to attempt to install the newest version it knows about when you run &lt;code&gt;brew upgrade&lt;/code&gt;. This can be surprising.</source>
          <target state="translated">Homebrew가 설치 한 모든 버전을 제거하지 않으면 Homebrew는 &lt;code&gt;brew upgrade&lt;/code&gt; 실행시 알고있는 최신 버전을 계속 설치하려고합니다 . 놀랍습니다.</target>
        </trans-unit>
        <trans-unit id="b409910c5f20623e660df46bb58f5f5863b3d0f8" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t even want (or can&amp;rsquo;t) use sudo for bootstrapping &lt;code&gt;local::lib&lt;/code&gt;, just manually install &lt;code&gt;local::lib&lt;/code&gt; in &lt;code&gt;~/perl5&lt;/code&gt; and add the relevant path to &lt;code&gt;PERL5LIB&lt;/code&gt; before the &lt;code&gt;.bashrc&lt;/code&gt; eval incantation.</source>
          <target state="translated">&lt;code&gt;local::lib&lt;/code&gt; 부트 스트랩에 sudo를 사용하지 않으려는 경우 (또는 사용할 수없는 경우) &lt;code&gt;~/perl5&lt;/code&gt; 에 &lt;code&gt;local::lib&lt;/code&gt; 를 수동으로 설치 하고 &lt;code&gt;.bashrc&lt;/code&gt; eval &lt;code&gt;PERL5LIB&lt;/code&gt; 전에 PERL5LIB에 관련 경로를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c476b8ad9dd7cf0149100f4159d7f3864f0dd41" translate="yes" xml:space="preserve">
          <source>If you encountered a non-formula problem: upload the output of &lt;code&gt;brew config&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt; to a new &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist&lt;/a&gt;.</source>
          <target state="translated">비공식 문제가 발생한 경우 : &lt;code&gt;brew config&lt;/code&gt; 및 &lt;code&gt;brew doctor&lt;/code&gt; 의 출력을 새 &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist에&lt;/a&gt; 업로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="6837b26030503006c69066f1ae7add3cfdd32451" translate="yes" xml:space="preserve">
          <source>If you ever did a &lt;code&gt;sudo gem&lt;/code&gt;, etc. before then a lot of files will have been created owned by root. Fix with:</source>
          <target state="translated">이전에 &lt;code&gt;sudo gem&lt;/code&gt; 등 을 해본 적이 있다면 루트가 소유 한 많은 파일이 만들어 질 것입니다. 로 수정 :</target>
        </trans-unit>
        <trans-unit id="6f27209f43bd0c668efb6e4c7e9e28e51e0e2cf7" translate="yes" xml:space="preserve">
          <source>If you had a formula-related problem: run &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; (where &lt;code&gt;&amp;lt;formula&amp;gt;&lt;/code&gt; is the name of the formula).</source>
          <target state="translated">공식 관련 문제가있는 경우 : &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; 을 실행하십시오 (여기서 &lt;code&gt;&amp;lt;formula&amp;gt;&lt;/code&gt; 는 공식 이름 임).</target>
        </trans-unit>
        <trans-unit id="580ca2645a14d29c521bcff7e10aea5a7a6621cc" translate="yes" xml:space="preserve">
          <source>If you have already forked Homebrew on GitHub, then you can manually push (just make sure you have been pulling from the &lt;code&gt;Homebrew/homebrew-core&lt;/code&gt; master):</source>
          <target state="translated">이미 GitHub에서 Homebrew를 포크 한 경우 수동으로 푸시 할 수 있습니다 ( &lt;code&gt;Homebrew/homebrew-core&lt;/code&gt; 마스터 에서 가져 왔는지 확인 ).</target>
        </trans-unit>
        <trans-unit id="cf54d06e6d394ad185715c63337af588cac11630" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t forked Homebrew yet, &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;go to the &lt;code&gt;homebrew-core&lt;/code&gt; repository and hit the Fork button&lt;/a&gt;.</source>
          <target state="translated">Homebrew를 아직 포크하지 않은 경우 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt; &lt;code&gt;homebrew-core&lt;/code&gt; &lt;/a&gt; 저장소 로 이동 하여 포크 버튼을 누르십시오 .</target>
        </trans-unit>
        <trans-unit id="02df8baaa79257e60d7920c6e83d8b95a5778ecc" translate="yes" xml:space="preserve">
          <source>If you install the &lt;code&gt;bash-completion&lt;/code&gt; formula, this will automatically source the completions&amp;rsquo; initialisation script (so you do not need to follow the instructions in the caveats).</source>
          <target state="translated">If you install the &lt;code&gt;bash-completion&lt;/code&gt; formula, this will automatically source the completions&amp;rsquo; initialisation script (so you do not need to follow the instructions in the caveats).</target>
        </trans-unit>
        <trans-unit id="fcbc334c8d7a126cfd6658594e71a76181992db7" translate="yes" xml:space="preserve">
          <source>If you need a formula to be installed from a particular tap, you can use fully qualified names to refer to them.</source>
          <target state="translated">특정 탭에서 수식을 설치해야하는 경우 정규화 된 이름을 사용하여 수식을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a00705fa7355e45854a2d24808a572814c99779f" translate="yes" xml:space="preserve">
          <source>If you need modify variables in a &lt;code&gt;Makefile&lt;/code&gt;, rather than using &lt;a href=&quot;https://rubydoc.brew.sh/Utils/Inreplace&quot;&gt;&lt;code&gt;inreplace&lt;/code&gt;&lt;/a&gt;, pass them as arguments to &lt;code&gt;make&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Utils/Inreplace&quot;&gt; &lt;code&gt;inreplace&lt;/code&gt; 를&lt;/a&gt; 사용하지 않고 &lt;code&gt;Makefile&lt;/code&gt; 에서 변수를 수정해야하는 경우 변수 를 인수로 전달하여 다음 &lt;code&gt;make&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd492283a16c197887dd8276904269c7ea99142d" translate="yes" xml:space="preserve">
          <source>If you need more control over the way files are downloaded and staged, you can create a custom download strategy and specify it using the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; method&amp;rsquo;s &lt;code&gt;:using&lt;/code&gt; option:</source>
          <target state="translated">파일을 다운로드하고 준비하는 방식을보다 세밀하게 제어해야하는 경우 사용자 정의 다운로드 전략을 작성하고 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 메소드의 &lt;code&gt;:using&lt;/code&gt; 옵션을 사용하여 이를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c319be09e3ae1108600be81337367b040104d3bb" translate="yes" xml:space="preserve">
          <source>If you need to run Homebrew in a multi-user environment, consider creating a separate user account especially for use of Homebrew.</source>
          <target state="translated">다중 사용자 환경에서 Homebrew를 실행해야하는 경우 특히 Homebrew를 사용하기 위해 별도의 사용자 계정을 만드는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="64641ecf6ee386be3b3ad2086cb2a33ca7da8f3f" translate="yes" xml:space="preserve">
          <source>If you want to add an &lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt;&lt;code&gt;option&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Formula#option-class_method&quot;&gt; &lt;code&gt;option&lt;/code&gt; &lt;/a&gt; 을 추가하려면 다음 을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="32ba2998577c1314d10c31370baf1a855875c735" translate="yes" xml:space="preserve">
          <source>If you want your new formula to be part of &lt;code&gt;homebrew/core&lt;/code&gt; or want to learn more about writing formulae, then please read the &lt;a href=&quot;formula-cookbook&quot;&gt;Formula Cookbook&lt;/a&gt;.</source>
          <target state="translated">새로운 공식을 &lt;code&gt;homebrew/core&lt;/code&gt; 일부로 만들 거나 공식 작성에 대해 더 배우려면 &lt;a href=&quot;formula-cookbook&quot;&gt;공식 요리 책을&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="421d64a6330e63b76fc5b7162344c67193dfcff4" translate="yes" xml:space="preserve">
          <source>If you wish to build against custom non-Homebrew dependencies that are provided by Homebrew (e.g. a non-Homebrew, non-macOS &lt;code&gt;ruby&lt;/code&gt;) then you must &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;create and maintain your own tap&lt;/a&gt; as these formulae will not be accepted in Homebrew/homebrew-core. Once you have done that you can specify &lt;code&gt;env :std&lt;/code&gt; in the formula which will allow e.g. &lt;code&gt;which ruby&lt;/code&gt; to access your existing &lt;code&gt;PATH&lt;/code&gt; variable and allow compilation to link against this Ruby.</source>
          <target state="translated">Homebrew에서 제공하는 사용자 정의 비 Homebrew 종속성 (예 : 비 Homebrew, 비 macOS &lt;code&gt;ruby&lt;/code&gt; ) 에 대해 빌드하려는 경우 Homebrew / homebrew-core에서는 이러한 공식이 허용되지 않으므로 &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;자체 탭&lt;/a&gt; 을 작성하고 유지 해야합니다. . 일단 그렇게 하면 공식에 &lt;code&gt;env :std&lt;/code&gt; 를 지정할 수 있습니다 . 예 &lt;code&gt;which ruby&lt;/code&gt; 들어 어떤 루비 가 기존 &lt;code&gt;PATH&lt;/code&gt; 변수 에 액세스 하고 컴파일이이 루비에 링크되도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="4d56137e6a3342df95a34de9c183a25212cc1941" translate="yes" xml:space="preserve">
          <source>If you wish to build against custom non-Homebrew dependencies that are provided by Homebrew (e.g. a non-Homebrew, non-macOS &lt;code&gt;ruby&lt;/code&gt;) then you must &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;create and maintain your own tap&lt;/a&gt; as these formulae will not be accepted in Homebrew/homebrew-core. Once you have done that you can specify &lt;code&gt;env :std&lt;/code&gt; in the formula which will allow e.g. &lt;code&gt;which ruby&lt;/code&gt; to access your existing &lt;code&gt;PATH&lt;/code&gt; variable and allow compilation to link against this Ruby. You can also &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/requirements&quot;&gt;include a custom Requirement&lt;/a&gt; in your formula that more accurately describes the non-Homebrew software you build against.</source>
          <target state="translated">If you wish to build against custom non-Homebrew dependencies that are provided by Homebrew (e.g. a non-Homebrew, non-macOS &lt;code&gt;ruby&lt;/code&gt; ) then you must &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;create and maintain your own tap&lt;/a&gt; as these formulae will not be accepted in Homebrew/homebrew-core. Once you have done that you can specify &lt;code&gt;env :std&lt;/code&gt; in the formula which will allow e.g. &lt;code&gt;which ruby&lt;/code&gt; to access your existing &lt;code&gt;PATH&lt;/code&gt; variable and allow compilation to link against this Ruby. You can also &lt;a href=&quot;https://github.com/Homebrew/brew/tree/HEAD/Library/Homebrew/requirements&quot;&gt;include a custom Requirement&lt;/a&gt; in your formula that more accurately describes the non-Homebrew software you build against.</target>
        </trans-unit>
        <trans-unit id="75aaf8ca6348805437ba312961c3dcce69e11e6d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re &lt;em&gt;still&lt;/em&gt; not sure, just commit. We&amp;rsquo;ll apply some arbitrary rule and make a decision 😉.</source>
          <target state="translated">당신이 경우 &lt;em&gt;아직&lt;/em&gt; 확실하지, 그냥 커밋합니다. 우리는 임의의 규칙을 적용하고 결정을 내릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="6311b12438e1fedd6f0f6c7542ca88edd59098f7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re curious about the &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; variable &lt;code&gt;man pkg-config&lt;/code&gt; goes into more detail.</source>
          <target state="translated">&lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; 변수 가 궁금하다면 &lt;code&gt;man pkg-config&lt;/code&gt; 가 더 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ef09e7e543cc250149764da4ca1cd7bb9111d3ea" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re installing an application then use &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt;s for all language-specific dependencies:</source>
          <target state="translated">응용 프로그램을 설치하는 경우 모든 언어 별 종속성에 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#resource-class_method&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3aa29752fd0d213f6d7a9961dba18b8c70cbc30a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not sure about the name, check its homepage, Wikipedia page and &lt;a href=&quot;https://www.debian.org/distrib/packages&quot;&gt;what Debian calls it&lt;/a&gt;.</source>
          <target state="translated">이름이 확실하지 않다면, 홈페이지, Wikipedia 페이지 및 &lt;a href=&quot;https://www.debian.org/distrib/packages&quot;&gt;데비안이 무엇인지&lt;/a&gt; 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="46e3a5d39f85b6eddf092ff272c0bfb6df597f2e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re starting from scratch, the &lt;a href=&quot;manpage#create-options-url&quot;&gt;&lt;code&gt;brew create&lt;/code&gt; command&lt;/a&gt; can be used to produce a basic version of your formula. This command accepts a number of options and you may be able to save yourself some work by using an appropriate template option like &lt;code&gt;--python&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e912b80efcbd07a490f029de4b14c2a3ec0530" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re stuck, ask for help on GitHub or &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew/discussions&lt;/a&gt;. The maintainers are very happy to help but we also like to see that you&amp;rsquo;ve put effort into trying to find a solution first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aea0effbb7eb027ee66d576de41a981c515cee6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an older distribution of Linux, installing your first package will also install a recent version of &lt;code&gt;glibc&lt;/code&gt; and &lt;code&gt;gcc&lt;/code&gt;. Use &lt;code&gt;brew doctor&lt;/code&gt; to troubleshoot common issues.</source>
          <target state="translated">이전 Linux 배포판을 사용하는 경우 첫 번째 패키지를 설치하면 최신 버전의 &lt;code&gt;glibc&lt;/code&gt; 및 &lt;code&gt;gcc&lt;/code&gt; 도 설치됩니다 . &lt;code&gt;brew doctor&lt;/code&gt; 를 사용 하여 일반적인 문제를 해결 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c69d5715eb7589fbe655fc2f7c1419fe8424426" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using an older distribution of Linux, installing your first package will also install a recent version of &lt;em&gt;glibc&lt;/em&gt; and &lt;em&gt;gcc&lt;/em&gt;. Use &lt;code&gt;brew doctor&lt;/code&gt; to troubleshoot common issues.</source>
          <target state="translated">If you&amp;rsquo;re using an older distribution of Linux, installing your first package will also install a recent version of &lt;em&gt;glibc&lt;/em&gt; and &lt;em&gt;gcc&lt;/em&gt;. Use &lt;code&gt;brew doctor&lt;/code&gt; to troubleshoot common issues.</target>
        </trans-unit>
        <trans-unit id="ad779e309cb7aba56f1e645f7ac1ca22eee7756d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve made it this far, congratulations on submitting a Homebrew formula! We appreciate the hard work you put into this and you can take satisfaction in knowing that your work may benefit other Homebrew users as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558effd7b714fbaa0e04ef401ebd04006acd74ab" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;fish&lt;/code&gt; is from somewhere else, add the following to your &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;:</source>
          <target state="translated">If your &lt;code&gt;fish&lt;/code&gt; is from somewhere else, add the following to your &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f7aaf4cfa803533bcb5f3629da4cf64b95c3c648" translate="yes" xml:space="preserve">
          <source>If your Node module is a native addon or has a native addon somewhere in its dependency tree you have to declare an additional dependency. Since the compilation of the native addon results in an invocation of &lt;code&gt;node-gyp&lt;/code&gt; we need an additional build time dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt; (because GYP depends on Python 2.7).</source>
          <target state="translated">노드 모듈이 기본 애드온이거나 종속성 트리 어딘가에 기본 애드온이있는 경우 추가 종속성을 선언해야합니다. 네이티브 애드온을 컴파일하면 &lt;code&gt;node-gyp&lt;/code&gt; 가 호출 되므로 &lt;code&gt;&quot;python&quot;&lt;/code&gt; 에 대한 추가 빌드 시간 종속성이 필요합니다 (GYP는 Python 2.7에 의존하기 때문에).</target>
        </trans-unit>
        <trans-unit id="e30c25b4b275977a42b109082e51f01a8bc3d67c" translate="yes" xml:space="preserve">
          <source>If your Node module is a native addon or has a native addon somewhere in its dependency tree you have to declare an additional dependency. Since the compilation of the native addon results in an invocation of &lt;code&gt;node-gyp&lt;/code&gt; we need an additional build time dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt; (because GYP depends on Python).</source>
          <target state="translated">If your Node module is a native addon or has a native addon somewhere in its dependency tree you have to declare an additional dependency. Since the compilation of the native addon results in an invocation of &lt;code&gt;node-gyp&lt;/code&gt; we need an additional build time dependency on &lt;code&gt;&quot;python&quot;&lt;/code&gt; (because GYP depends on Python).</target>
        </trans-unit>
        <trans-unit id="a76cf84420b9891c86b3c1fbd96c7f359ec9094d" translate="yes" xml:space="preserve">
          <source>If your formula requires being executed with an older Node version you should use one of the versioned node formulae (e.g. &lt;code&gt;node@12&lt;/code&gt;).</source>
          <target state="translated">If your formula requires being executed with an older Node version you should use one of the versioned node formulae (e.g. &lt;code&gt;node@12&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7459d994fb130f22b1d80f6a57a608ae13ab1e12" translate="yes" xml:space="preserve">
          <source>If your formula requires being executed with an older Node version you should use one of the versioned node formulae (e.g. &lt;code&gt;node@6&lt;/code&gt;).</source>
          <target state="translated">이전 노드 버전으로 공식을 실행해야하는 경우 버전이 지정된 노드 공식 중 하나를 사용해야합니다 (예 : &lt;code&gt;node@6&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="691a3a560f50706193dbf01f0e25e0d0ac5b3859" translate="yes" xml:space="preserve">
          <source>If your formulae have the same name as Homebrew/homebrew-core formulae they cannot be installed side-by-side. If you wish to create a different version of a formula that&amp;rsquo;s in Homebrew/homebrew-core (e.g. with &lt;code&gt;option&lt;/code&gt;s) consider giving it a different name e.g. &lt;code&gt;nginx-full&lt;/code&gt; for more fully-featured &lt;code&gt;nginx&lt;/code&gt; formula. This will allow both &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;nginx-full&lt;/code&gt; to be installed at the same time (assuming one is &lt;code&gt;keg_only&lt;/code&gt; or the linked files do not clash).</source>
          <target state="translated">If your formulae have the same name as Homebrew/homebrew-core formulae they cannot be installed side-by-side. If you wish to create a different version of a formula that&amp;rsquo;s in Homebrew/homebrew-core (e.g. with &lt;code&gt;option&lt;/code&gt; s) consider giving it a different name e.g. &lt;code&gt;nginx-full&lt;/code&gt; for more fully-featured &lt;code&gt;nginx&lt;/code&gt; formula. This will allow both &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;nginx-full&lt;/code&gt; to be installed at the same time (assuming one is &lt;code&gt;keg_only&lt;/code&gt; or the linked files do not clash).</target>
        </trans-unit>
        <trans-unit id="736cb421c4f92de5527e507b44b5eef081580e77" translate="yes" xml:space="preserve">
          <source>If your formulae have the same name as Homebrew/homebrew-core formulae they cannot be installed side-by-side. If you wish to create a different version of a formula that&amp;rsquo;s in Homebrew/homebrew-core (e.g. with &lt;code&gt;option&lt;/code&gt;s) consider giving it a different name e.g. &lt;code&gt;nginx-full&lt;/code&gt; for more fully-featured &lt;code&gt;nginx&lt;/code&gt; formula. This will allow both &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;nginx-full&lt;/code&gt; to be installed at the same time (but not linked if there are conflicts and one of them is not declared to be &lt;code&gt;keg_only&lt;/code&gt;).</source>
          <target state="translated">수식의 이름이 Homebrew / homebrew-core 수식과 이름이 같으면 나란히 설치할 수 없습니다. Homebrew / homebrew-core에있는 다른 버전의 수식을 만들려면 (예 : &lt;code&gt;option&lt;/code&gt; s) 보다 완전한 기능을 갖춘 &lt;code&gt;nginx&lt;/code&gt; 수식의 경우 다른 이름 (예 : &lt;code&gt;nginx-full&lt;/code&gt; ) 을 지정하십시오 . 그러면 &lt;code&gt;nginx&lt;/code&gt; 와 &lt;code&gt;nginx-full&lt;/code&gt; 을 동시에 설치할 수 있습니다 (하지만 충돌이 있고 그 중 하나가 &lt;code&gt;keg_only&lt;/code&gt; 로 선언되지 않은 경우 링크되지 않음 ).</target>
        </trans-unit>
        <trans-unit id="7433333b721a96d7234d56a217658cd90ee156c1" translate="yes" xml:space="preserve">
          <source>If your problem hasn&amp;rsquo;t been solved or reported, then create an issue:</source>
          <target state="translated">문제가 해결되거나보고되지 않은 경우 문제를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2e7a51ba9add09d6109a10d6f991f9bd102e7d8d" translate="yes" xml:space="preserve">
          <source>If your tap contains a formula that is also present in &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt;, that&amp;rsquo;s fine, but it means that you must install it explicitly by default.</source>
          <target state="translated">탭에 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew / core&lt;/a&gt; 에있는 수식이 포함되어 있으면 괜찮지 만 기본적으로 명시 적으로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="cfa2f83ab4f6f82fd375c50d488d3fb6fae0eade" translate="yes" xml:space="preserve">
          <source>If your test requires a test file that isn&amp;rsquo;t a standard test fixture, you can install it from a source repository during the &lt;code&gt;test&lt;/code&gt; phase with a resource block, like this:</source>
          <target state="translated">If your test requires a test file that isn&amp;rsquo;t a standard test fixture, you can install it from a source repository during the &lt;code&gt;test&lt;/code&gt; phase with a resource block, like this:</target>
        </trans-unit>
        <trans-unit id="57211625abf01d68a18536fbc446cf0f8167d67c" translate="yes" xml:space="preserve">
          <source>Import all formulae from specified &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; (defaults to all installed taps). This can be useful for debugging issues across all formulae when making significant changes to &lt;code&gt;formula.rb&lt;/code&gt;, testing the performance of loading all formulae or to determine if any current formulae have Ruby issues.</source>
          <target state="translated">지정된 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에서 모든 수식을 가져옵니다 (기본값은 설치된 모든 탭으로). 이는 &lt;code&gt;formula.rb&lt;/code&gt; 를 대폭 변경하고 모든 공식의로드 성능을 테스트하거나 현재 공식에 Ruby 문제가 있는지 여부를 판별 할 때 모든 공식에서 문제를 디버깅하는 데 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5191fb65215a92dae6c06a22d65ea3bd2706a1a" translate="yes" xml:space="preserve">
          <source>Import all items from the specified &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;, or from all installed taps if none is provided. This can be useful for debugging issues across all items when making significant changes to &lt;code&gt;formula.rb&lt;/code&gt;, testing the performance of loading all items or checking if any current formulae/casks have Ruby issues.</source>
          <target state="translated">Import all items from the specified &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt;, or from all installed taps if none is provided. This can be useful for debugging issues across all items when making significant changes to &lt;code&gt;formula.rb&lt;/code&gt; , testing the performance of loading all items or checking if any current formulae/casks have Ruby issues.</target>
        </trans-unit>
        <trans-unit id="fa3a5922b4f45f2c530b38508f32d82eaaf80070" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31e6d44605025e95324fc9b21568df33d3d3d78f" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">에서 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac.rb&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d32209725cbfaf6521bc26cc0c6d803f53d50105" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">에서 &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/xcode.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac/xcode.rb&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c37bf89eb66a990b5f51f6b6bf1b75079d5fa185" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;homebrew/versions&lt;/a&gt; the formula for GCC 6 was named &lt;code&gt;gcc6.rb&lt;/code&gt; and began with &lt;code&gt;class Gcc6 &amp;lt; Formula&lt;/code&gt;. In &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; this same formula is named &lt;code&gt;gcc@6.rb&lt;/code&gt; and begins with &lt;code&gt;class GccAT6 &amp;lt; Formula&lt;/code&gt;.</source>
          <target state="translated">에서는 &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;사제 / 버전&lt;/a&gt; GCC 6 화학식은 명명 하였다 &lt;code&gt;gcc6.rb&lt;/code&gt; 과 함께 시작 &lt;code&gt;class Gcc6 &amp;lt; Formula&lt;/code&gt; . 에서는 &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;사제 / 코어&lt;/a&gt; 동일한 수식이라는 &lt;code&gt;gcc@6.rb&lt;/code&gt; 및 시작 &lt;code&gt;class GccAT6 &amp;lt; Formula&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b109ecb1e93273c65607e725697abd212bffbf6" translate="yes" xml:space="preserve">
          <source>In Homebrew we sometimes accept formulae updates that don&amp;rsquo;t include a version bump. These include resource updates, new patches or fixing a security issue with a formula.</source>
          <target state="translated">Homebrew에서는 버전 범프가 포함되지 않은 수식 업데이트를 허용하는 경우가 있습니다. 여기에는 리소스 업데이트, 새 패치 또는 공식 관련 보안 문제 해결이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="00961e014e697c343657d9d647d6ee54d04d633e" translate="yes" xml:space="preserve">
          <source>In Sublime Text 2/3, you can use Package Control to install &lt;a href=&quot;https://github.com/samueljohn/Homebrew-formula-syntax&quot;&gt;Homebrew-formula-syntax&lt;/a&gt;, which adds highlighting for inline patches.</source>
          <target state="translated">Sublime Text 2/3에서 Package Control을 사용하여 &lt;a href=&quot;https://github.com/samueljohn/Homebrew-formula-syntax&quot;&gt;Homebrew-formula-syntax&lt;/a&gt; 를 설치 하면 인라인 패치에 대한 강조 표시가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ad55a8da1f605058a315265d07bc83219b046765" translate="yes" xml:space="preserve">
          <source>In both cases, the command file should be executable (&lt;code&gt;chmod +x&lt;/code&gt;) and live somewhere in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">두 경우 모두 명령 파일은 실행 가능해야하고 ( &lt;code&gt;chmod +x&lt;/code&gt; ) &lt;code&gt;PATH&lt;/code&gt; 어딘가에 있어야합니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="dadaacb67a282c70d70fc8d200c8ad1d2508441b" translate="yes" xml:space="preserve">
          <source>In case there are specific issues with the Homebrew packaging (compared to how the software is installed from other sources) a &lt;code&gt;caveats&lt;/code&gt; block can be added to the formula to warn users. This can indicate non-standard install paths, an example from the &lt;code&gt;ruby&lt;/code&gt; formula:</source>
          <target state="translated">Homebrew 패키징에 특정 문제가있는 경우 (다른 소스에서 소프트웨어를 설치하는 방법과 비교하여) 사용자에게 경고하기 위해 &lt;code&gt;caveats&lt;/code&gt; 블록을 공식에 ​​추가 할 수 있습니다. 이것은 &lt;code&gt;ruby&lt;/code&gt; 공식 의 예와 같이 비표준 설치 경로를 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6827e821668e6bc47e5fff452ae2e63a5e5e36d" translate="yes" xml:space="preserve">
          <source>In early 2015 Homebrew started the process of deprecating &lt;em&gt;SHA1&lt;/em&gt; for package integrity verification. Since then formulae under the Homebrew organisation have been moved onto using &lt;em&gt;SHA256&lt;/em&gt; for verification; this includes both source packages and our precompiled packages (bottles).</source>
          <target state="translated">2015 년 초 Homebrew는 패키지 무결성 검증을 위해 &lt;em&gt;SHA1&lt;/em&gt; 을 더 이상 사용하지 않는 프로세스를 시작했습니다 . 그 이후로 Homebrew 조직의 공식은 &lt;em&gt;SHA256&lt;/em&gt; 을 사용하여 검증되었습니다. 여기에는 소스 패키지와 사전 컴파일 된 패키지 (병)가 모두 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4a0c20db19d86321b7b6ed3bdf9355dddb72f5d7" translate="yes" xml:space="preserve">
          <source>In embedded patches, the string &amp;ldquo;HOMEBREW_PREFIX&amp;rdquo; is replaced with the value of the constant &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; before the patch is applied.</source>
          <target state="translated">임베드 된 패치에서 문자열 &quot;HOMEBREW_PREFIX&quot;는 상수 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 의 값으로 대체됩니다. 패치가 적용되기 전에 됩니다.</target>
        </trans-unit>
        <trans-unit id="25928ede91113bbf9eb168db48e7620ff4476a5d" translate="yes" xml:space="preserve">
          <source>In particular, when a test needs to be performed before installation use &lt;code&gt;odie&lt;/code&gt; to bail out gracefully. For example:</source>
          <target state="translated">특히, 설치 전에 테스트를 수행해야 할 경우 &lt;code&gt;odie&lt;/code&gt; 를 사용 하여 우아하게 구제하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2b23e06c0b90187026f7ab3eadb40b725b4ab2ff" translate="yes" xml:space="preserve">
          <source>In summary, environment variables used by a formula need to conform to these filtering rules in order to be available.</source>
          <target state="translated">요약하면 수식에서 사용하는 환경 변수를 사용하려면 이러한 필터링 규칙을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="3fd39514b3f35fab0257fc127d82e9d3e9f7a995" translate="yes" xml:space="preserve">
          <source>In the event that a formula needs to interact with &lt;code&gt;setup.py&lt;/code&gt; instead of calling &lt;code&gt;pip&lt;/code&gt;, Homebrew provides a helper method, &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt;, which returns useful arguments for invoking &lt;code&gt;setup.py&lt;/code&gt;. Your formula should use this instead of invoking &lt;code&gt;setup.py&lt;/code&gt; explicitly. The syntax is:</source>
          <target state="translated">수식과 상호 작용을 필요로하는 경우에 &lt;code&gt;setup.py&lt;/code&gt; 를 호출하는 대신 &lt;code&gt;pip&lt;/code&gt; , 브루는 도우미 메서드, 제공 &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; 호출에 유용 인수 반환 &lt;code&gt;setup.py&lt;/code&gt; 를 . 공식은 &lt;code&gt;setup.py&lt;/code&gt; 를 명시 적으로 호출하는 대신 이것을 사용해야합니다 . 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="481f559edaef5a72cc604ed3795d4d1b5141ab23" translate="yes" xml:space="preserve">
          <source>In the following we distinguish between two types of Node modules installed using formulae:</source>
          <target state="translated">다음에서는 공식을 사용하여 설치된 두 가지 유형의 노드 모듈을 구분합니다.</target>
        </trans-unit>
        <trans-unit id="ad18bb3d69529155efa8883bfdbf5c68a31d4e96" translate="yes" xml:space="preserve">
          <source>In this case, to remove a formula entirely, you may run &lt;code&gt;brew uninstall --force &amp;lt;formula&amp;gt;&lt;/code&gt;. Be careful as this is a destructive operation.</source>
          <target state="translated">In this case, to remove a formula entirely, you may run &lt;code&gt;brew uninstall --force &amp;lt;formula&amp;gt;&lt;/code&gt; . Be careful as this is a destructive operation.</target>
        </trans-unit>
        <trans-unit id="3e863f42704465bf7f5b4c31b30dfccb7c5576c3" translate="yes" xml:space="preserve">
          <source>In this example Homebrew would refuse to install any formula that specifies the &lt;code&gt;MIT&lt;/code&gt; license. Homebrew would also forbid installation of any formula that declares a dependency on a formula that specifies &lt;code&gt;MIT&lt;/code&gt;, even if the original formula has an allowed license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d202c0b25fd04cffbc137179fd94443d9891b689" translate="yes" xml:space="preserve">
          <source>In your formula&amp;rsquo;s &lt;code&gt;install&lt;/code&gt; method, do any installation steps which need to be done before the &lt;code&gt;npm install&lt;/code&gt; step and then &lt;code&gt;cd&lt;/code&gt; to the top level of the included Node module. Then, use &lt;code&gt;system&lt;/code&gt; with &lt;code&gt;Language::Node.local_npm_install_args&lt;/code&gt; to invoke &lt;code&gt;npm install&lt;/code&gt; like:</source>
          <target state="translated">공식의 &lt;code&gt;install&lt;/code&gt; 방법에서 &lt;code&gt;npm install&lt;/code&gt; 단계 전에 수행해야하는 설치 단계를 수행 한 후 포함 된 노드 모듈의 최상위 레벨 로 &lt;code&gt;cd&lt;/code&gt; 하십시오. 그런 다음 &lt;code&gt;Language::Node.local_npm_install_args&lt;/code&gt; 와 함께 &lt;code&gt;system&lt;/code&gt; 을 사용하여 다음 과 같이 &lt;code&gt;npm install&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="75f033560a75919ea62a81ed8ca729e4a49757b9" translate="yes" xml:space="preserve">
          <source>In your formula&amp;rsquo;s &lt;code&gt;install&lt;/code&gt; method, simply &lt;code&gt;cd&lt;/code&gt; to the top level of your Node module if necessary and then use &lt;code&gt;system&lt;/code&gt; to invoke &lt;code&gt;npm install&lt;/code&gt; with &lt;code&gt;Language::Node.std_npm_install_args&lt;/code&gt; like:</source>
          <target state="translated">공식 &lt;code&gt;install&lt;/code&gt; 방법에서 필요한 경우 노드 모듈의 최상위 레벨로 &lt;code&gt;cd&lt;/code&gt; 한 다음 &lt;code&gt;system&lt;/code&gt; 을 사용 하여 &lt;code&gt;Language::Node.std_npm_install_args&lt;/code&gt; 를 사용 하여 &lt;code&gt;npm install&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="86304570adf120ac75ca8d70e37b8146cb76c97e" translate="yes" xml:space="preserve">
          <source>Include links to any additional Gists you may have created (such as for the output of &lt;code&gt;brew config&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;brew config&lt;/code&gt; 및 &lt;code&gt;brew doctor&lt;/code&gt; 출력과 같이 생성 한 추가 요점에 대한 링크 포함 .</target>
        </trans-unit>
        <trans-unit id="72d49d39b8ac6aab5979a61e8c76006ed0b8966a" translate="yes" xml:space="preserve">
          <source>Include the URL output by &lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; (if applicable).</source>
          <target state="translated">&lt;code&gt;brew gist-logs &amp;lt;formula&amp;gt;&lt;/code&gt; 의 URL 출력을 포함시킵니다 (해당되는 경우).</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="89ecbbda273b0d43e8a29d38089f579c772625e0" translate="yes" xml:space="preserve">
          <source>Install &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 설치&lt;em&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="99ec8c7cadd5ff9ccb4a17ecaf681e6455e0228b" translate="yes" xml:space="preserve">
          <source>Install Homebrew&amp;rsquo;s Bundler gems.</source>
          <target state="translated">Install Homebrew&amp;rsquo;s Bundler gems.</target>
        </trans-unit>
        <trans-unit id="a379307f41178bd0000ad90a76ad6b8de4f1b3ee" translate="yes" xml:space="preserve">
          <source>Install a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;. Additional options specific to a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; may be appended to the command.</source>
          <target state="translated">Install a &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; or &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt;. Additional options specific to a &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; may be appended to the command.</target>
        </trans-unit>
        <trans-unit id="0f0e5a74ad4914b9ac4d64d860523b92e20aee56" translate="yes" xml:space="preserve">
          <source>Install and commit Homebrew&amp;rsquo;s vendored gems.</source>
          <target state="translated">Homebrew의 공급 보석을 설치하고 커밋합니다.</target>
        </trans-unit>
        <trans-unit id="95af92ad55c950162d3ce7b7375382f09cf9e506" translate="yes" xml:space="preserve">
          <source>Install and upgrade (by default) all dependencies from the &lt;code&gt;Brewfile&lt;/code&gt;.</source>
          <target state="translated">Install and upgrade (by default) all dependencies from the &lt;code&gt;Brewfile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3529ebe4d6a30f0ad8e07730bf12741610c9eab" translate="yes" xml:space="preserve">
          <source>Install any &lt;code&gt;gem&lt;/code&gt; package into a self-contained Homebrew Cellar location: &lt;a href=&quot;https://github.com/sportngin/brew-gem&quot;&gt;https://github.com/sportngin/brew-gem&lt;/a&gt;</source>
          <target state="translated">자체 포함 된 Homebrew Cellar 위치에 &lt;code&gt;gem&lt;/code&gt; 패키지를 설치하십시오 : &lt;a href=&quot;https://github.com/sportngin/brew-gem&quot;&gt;https://github.com/sportngin/brew-gem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b60a2172daf674c5e0dbbd9eb18135b11d178c53" translate="yes" xml:space="preserve">
          <source>Install into Homebrew without formulae</source>
          <target state="translated">수식없이 Homebrew에 설치</target>
        </trans-unit>
        <trans-unit id="987f5753cb7c5d542018db8ca7983327f6e55fba" translate="yes" xml:space="preserve">
          <source>Install macOS applications distributed as binaries. See brew-cask(1).</source>
          <target state="translated">바이너리로 배포 된 macOS 응용 프로그램을 설치하십시오. 추출 통 (1)을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5bdc8f223c2b76109d7246107213f98fb1a918" translate="yes" xml:space="preserve">
          <source>Install only a formula&amp;rsquo;s dependencies (not the formula)</source>
          <target state="translated">수식의 종속성 만 설치하십시오 (공식은 아님).</target>
        </trans-unit>
        <trans-unit id="1d838b177e594071aa5d40d8e57c1b890fb1bcb1" translate="yes" xml:space="preserve">
          <source>Install software not packaged by your host distribution</source>
          <target state="translated">호스트 배포판에 포함되지 않은 소프트웨어 설치</target>
        </trans-unit>
        <trans-unit id="42e2e2fab6c4e550cb9b391a92bb1d79e9785a68" translate="yes" xml:space="preserve">
          <source>Install the formula</source>
          <target state="translated">공식 설치</target>
        </trans-unit>
        <trans-unit id="209b6081064a3df37024066cf460b11cf5748562" translate="yes" xml:space="preserve">
          <source>Install up-to-date versions of software when your host distribution is old</source>
          <target state="translated">호스트 배포가 오래된 경우 최신 버전의 소프트웨어 설치</target>
        </trans-unit>
        <trans-unit id="ec120f68e08c51906d59425bfdbc76a0dd2883cc" translate="yes" xml:space="preserve">
          <source>Install using:</source>
          <target state="translated">다음을 사용하여 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e1e3ff943dcd84425bcfeb98d55a404758c4ede6" translate="yes" xml:space="preserve">
          <source>Install your own stuff, but be aware that if you install common libraries like libexpat yourself, it may cause trouble when trying to build certain Homebrew formula. As a result &lt;code&gt;brew doctor&lt;/code&gt; will warn you about this.</source>
          <target state="translated">libexpat와 같은 일반적인 라이브러리를 직접 설치하면 특정 Homebrew 수식을 만들 때 문제가 발생할 수 있습니다. 결과적으로 &lt;code&gt;brew doctor&lt;/code&gt; 가 이에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="8f52be42e2937b65118e3da5a83ecb8d615d8a97" translate="yes" xml:space="preserve">
          <source>Installed formulae</source>
          <target state="translated">설치된 공식</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="87baeaa2d30ac39af5335fb6d4728be4e984eb76" translate="yes" xml:space="preserve">
          <source>Installing a custom version of GCC or &lt;code&gt;autotools&lt;/code&gt; into the &lt;code&gt;PATH&lt;/code&gt; has the potential to break lots of compiles so we prefer the Apple- or Homebrew-provided compilers.</source>
          <target state="translated">GCC 또는 사용자 정의 버전 설치 &lt;code&gt;autotools&lt;/code&gt; 를을 에 &lt;code&gt;PATH&lt;/code&gt; 우리가 사과 - 나 브루 제공하는 컴파일러를 선호 있도록 컴파일을 많이 깰 가능성이있다.</target>
        </trans-unit>
        <trans-unit id="f16db59339859aaaabf29a7443a46ca74366d5ea" translate="yes" xml:space="preserve">
          <source>Installing a formula with dependencies will look like this:</source>
          <target state="translated">종속성이있는 수식을 설치하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0f31aa7b6667db52cdd7c8a399cb324a3d8cea22" translate="yes" xml:space="preserve">
          <source>Installing a standard Node module based formula would look like this:</source>
          <target state="translated">표준 노드 모듈 기반 공식을 설치하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d776fb7d043110f59508e00b15a54dfbf406669d" translate="yes" xml:space="preserve">
          <source>Installing bindings</source>
          <target state="translated">바인딩 설치</target>
        </trans-unit>
        <trans-unit id="c97a6d3427c0096340c3bb7c70a78b6f550cef26" translate="yes" xml:space="preserve">
          <source>Installing directly from pull requests</source>
          <target state="translated">풀 요청에서 직접 설치</target>
        </trans-unit>
        <trans-unit id="fca933fce8f5e098694211b97491a33ca7fa2d69" translate="yes" xml:space="preserve">
          <source>Installing global style modules with &lt;code&gt;std_npm_install_args&lt;/code&gt; to &lt;code&gt;libexec&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std_npm_install_args&lt;/code&gt; 를 사용하여 전역 스타일 모듈 을 &lt;code&gt;libexec&lt;/code&gt; 에 설치</target>
        </trans-unit>
        <trans-unit id="5d07ddf3d568c54ea4e910ae4341eb849e474411" translate="yes" xml:space="preserve">
          <source>Installing module dependencies locally with &lt;code&gt;local_npm_install_args&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;local_npm_install_args&lt;/code&gt; 를 사용 하여 로컬로 모듈 종속성 설치</target>
        </trans-unit>
        <trans-unit id="63d462b64bc5a0c059dfbfb143670d3f579694bb" translate="yes" xml:space="preserve">
          <source>Installing previous versions of formulae</source>
          <target state="translated">이전 버전의 수식 설치</target>
        </trans-unit>
        <trans-unit id="599607785d58047e1dad344ffb7f7a1f8f3e0f74" translate="yes" xml:space="preserve">
          <source>Installing stuff without the Xcode CLT</source>
          <target state="translated">Xcode CLT없이 물건 설치</target>
        </trans-unit>
        <trans-unit id="a569ea0e7841915e9e4cc57d570440d3eb194b94" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">Installs the given &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="d340fcbaaf8fbc6ba2d55e246ff2b14a9fe751b3" translate="yes" xml:space="preserve">
          <source>Instructions for a supported install of Homebrew are on the &lt;a href=&quot;https://brew.sh&quot;&gt;homepage&lt;/a&gt;.</source>
          <target state="translated">지원되는 Homebrew 설치 지침은 &lt;a href=&quot;https://brew.sh&quot;&gt;홈페이지에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="2728e07a29728613d87727713d0805b06b3a9db3" translate="yes" xml:space="preserve">
          <source>Instructions for a supported install of Homebrew on Linux are on the &lt;a href=&quot;https://brew.sh&quot;&gt;homepage&lt;/a&gt;.</source>
          <target state="translated">Linux에서 지원되는 Homebrew 설치에 대한 지침은 &lt;a href=&quot;https://brew.sh&quot;&gt;홈페이지에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a9def07e8f8e95d969d4e97cbf9975e86599dac" translate="yes" xml:space="preserve">
          <source>Instructions for creating your own commands can be found in the docs: &lt;a href=&quot;external-commands&quot;&gt;https://docs.brew.sh/External-Commands&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;external-commands&quot;&gt;https://docs.brew.sh/External-Commands&lt;/a&gt; 문서에서 자신의 명령을 만드는 방법에 대한 지침을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef8c04e9b288364f80766e1698b152d148099047" translate="yes" xml:space="preserve">
          <source>Interactive Homebrew Shell</source>
          <target state="translated">대화식 사제 쉘</target>
        </trans-unit>
        <trans-unit id="28c7ff2a36894b5bc71a0eac9e97db2b0c639761" translate="yes" xml:space="preserve">
          <source>Interesting Taps &amp;amp; Forks</source>
          <target state="translated">재미있는 도청 및 포크</target>
        </trans-unit>
        <trans-unit id="44573aa577e061acfdbc7f3abe1f74b567e53e9e" translate="yes" xml:space="preserve">
          <source>Interesting Taps and Forks</source>
          <target state="translated">재미있는 탭과 포크</target>
        </trans-unit>
        <trans-unit id="ff32e205cc739937e88f6c55c18df2adc90da0d0" translate="yes" xml:space="preserve">
          <source>Is there a glossary of terms around?</source>
          <target state="translated">주변에 용어가 있습니까?</target>
        </trans-unit>
        <trans-unit id="69bd1fdd3d0126dc005a6a9d6ad30c7be5d24c22" translate="yes" xml:space="preserve">
          <source>It comprises four Mac Minis and three Xserves running in two data centres which host &lt;a href=&quot;https://jenkins.brew.sh&quot;&gt;a Jenkins instance at https://jenkins.brew.sh&lt;/a&gt; and run the &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/blob/master/cmd/brew-test-bot.rb&quot;&gt;&lt;code&gt;brew-test-bot.rb&lt;/code&gt;&lt;/a&gt; Ruby script to perform automated testing of commits to the master branch, pull requests and custom builds requested by maintainers.</source>
          <target state="translated">&lt;a href=&quot;https://jenkins.brew.sh&quot;&gt;https://jenkins.brew.sh에서 Jenkins 인스턴스&lt;/a&gt; 를 호스팅 하고 &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/blob/master/cmd/brew-test-bot.rb&quot;&gt; &lt;code&gt;brew-test-bot.rb&lt;/code&gt; &lt;/a&gt; Ruby 스크립트를 실행하여 마스터 브랜치에 대한 커밋의 자동 테스트를 수행 하는 두 개의 데이터 센터에서 실행되는 4 개의 Mac Mini와 3 개의 Xserve로 구성됩니다. 관리자가 요청한 풀 요청 및 사용자 정의 빌드.</target>
        </trans-unit>
        <trans-unit id="44118a4d5793b63d2b0860637bcf4ea30712b5a6" translate="yes" xml:space="preserve">
          <source>It comprises three Mac Pros hosting virtual machines that run the &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/&quot;&gt;&lt;code&gt;test-bot.rb&lt;/code&gt;&lt;/a&gt; external command to perform automated testing of commits to the master branch, pull requests and custom builds requested by maintainers.</source>
          <target state="translated">이는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-test-bot/&quot;&gt; &lt;code&gt;test-bot.rb&lt;/code&gt; &lt;/a&gt; 외부 명령을 실행하는 가상 머신을 호스팅하는 3 개의 Mac Pro 로 구성되어 마스터 브랜치에 대한 커밋, 풀 요청 및 유지 관리자가 요청한 사용자 지정 빌드에 대한 자동 테스트를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="fd3890003875f8cd4fadd47339a9bec4679e69e6" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t work! I get some &amp;ldquo;permissions&amp;rdquo; error when I try to install stuff!</source>
          <target state="translated">작동하지 않습니다! 설치하려고하면 &quot;권한&quot;오류가 발생합니다!</target>
        </trans-unit>
        <trans-unit id="95812c06374078d845d08e87c101e96f27c8df5c" translate="yes" xml:space="preserve">
          <source>It is impossible for the Homebrew developers to match any particular event to any particular user, even if we had access to the Homebrew analytics user ID (which we do not). An example of the most user-specific information we can see from Google Analytics:</source>
          <target state="translated">Homebrew 분석 사용자 ID에 액세스 할 수 있더라도 Homebrew 개발자는 특정 이벤트를 특정 사용자와 일치시킬 수 없습니다. Google 웹 로그 분석에서 볼 수있는 가장 사용자 별 정보의 예 :</target>
        </trans-unit>
        <trans-unit id="76457dea413274e5aedebc02506db81d3119dd9e" translate="yes" xml:space="preserve">
          <source>It is not always straightforward to tell &lt;code&gt;gem&lt;/code&gt; to look in non-standard directories for headers and libraries. If you choose &lt;code&gt;/usr/local&lt;/code&gt;, many things will &amp;ldquo;just work&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;gem&lt;/code&gt; 이 비표준 디렉토리에서 헤더와 라이브러리를 찾도록 지시하는 것이 항상 쉬운 것은 아닙니다 . &lt;code&gt;/usr/local&lt;/code&gt; 을 선택하면 많은 것들이 &quot;작동합니다&quot;.</target>
        </trans-unit>
        <trans-unit id="fa8c94e046756b983847f736fc50ae0d3cb1c97d" translate="yes" xml:space="preserve">
          <source>It is probably safe to use &lt;code&gt;--prefix&lt;/code&gt; with &lt;code&gt;--root=/&lt;/code&gt;, which should work with either setuptools or distutils-based &lt;code&gt;setup.py&lt;/code&gt;&amp;rsquo;s but is kinda ugly.</source>
          <target state="translated">아마도 안전하게 사용할 수 &lt;code&gt;--prefix&lt;/code&gt; 와 &lt;code&gt;--root=/&lt;/code&gt; 어느 setuptools에 또는 함께 작동해야하는의 distutils 기반 &lt;code&gt;setup.py&lt;/code&gt; 의하지만 좀 추한입니다.</target>
        </trans-unit>
        <trans-unit id="42ad2b098d3d3635652b61604e50482d384364c0" translate="yes" xml:space="preserve">
          <source>It means the formula is installed only into the Cellar and is not linked into &lt;code&gt;/usr/local&lt;/code&gt;. This means most tools will not find it. You can see why a formula was installed as keg-only, and instructions to include it in your &lt;code&gt;PATH&lt;/code&gt;, by running &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이는 수식이 지하실에만 설치되고 &lt;code&gt;/usr/local&lt;/code&gt; 에 연결되어 있지 않음을 의미합니다 . 이것은 대부분의 도구가 찾을 수 없음을 의미합니다. &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행 하면 수식이 통 전용으로 설치된 이유와 &lt;code&gt;PATH&lt;/code&gt; 에 수식 을 포함하는 방법을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e85160ab68b021225d6d44c8654cc71f8ce9a6d" translate="yes" xml:space="preserve">
          <source>It means the formula is installed only into the Cellar; it is not linked into &lt;code&gt;/usr/local&lt;/code&gt;. This means most tools will not find it. We don&amp;rsquo;t do this for stupid reasons. You can still link in the formula if you need to with &lt;code&gt;brew link&lt;/code&gt;.</source>
          <target state="translated">이는 공식이 지하실에만 설치됨을 의미합니다. &lt;code&gt;/usr/local&lt;/code&gt; 에 링크되어 있지 않습니다 . 이것은 대부분의 도구가 찾지 못할 것을 의미합니다. 우리는 어리석은 이유로이 작업을 수행하지 않습니다. &lt;code&gt;brew link&lt;/code&gt; 와 함께 필요한 경우 여전히 수식에 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5f76061d0a3758d0f1ed216acf101d77d23190f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good idea to find existing formulae in Homebrew that have similarities to the software you want to add. This will help you to understand how specific languages, build methods, etc. are typically handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e027e57610f85225767aafbbf23fed7457e55828" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="translated">Java</target>
        </trans-unit>
        <trans-unit id="00f9fdbe637f82ade1b17a3e2c6e687460340e82" translate="yes" xml:space="preserve">
          <source>Just extract (or &lt;code&gt;git clone&lt;/code&gt;) Homebrew wherever you want. Just avoid:</source>
          <target state="translated">그냥 추출 (또는 &lt;code&gt;git clone&lt;/code&gt; 원하는 곳에서 Homebrew를 ). 피하십시오 :</target>
        </trans-unit>
        <trans-unit id="4720d4130b6b791c233d5101e11c51bd9b762e0e" translate="yes" xml:space="preserve">
          <source>Just install everything into the Homebrew prefix like this:</source>
          <target state="translated">다음과 같이 Homebrew 접두사에 모든 것을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="d9c8268add68af4235f3267d7668f207602f705d" translate="yes" xml:space="preserve">
          <source>Just moving some files</source>
          <target state="translated">그냥 일부 파일을 이동</target>
        </trans-unit>
        <trans-unit id="2bbe2c5f6561b5618c3f57c09c8125a0dcef75b2" translate="yes" xml:space="preserve">
          <source>Keep discussion in the pull request unless requested otherwise (i.e. do not email maintainers privately).</source>
          <target state="translated">달리 요청하지 않는 한 풀 요청에서 토론을 유지하십시오 (즉, 관리자에게 전자 메일을 보내지 마십시오).</target>
        </trans-unit>
        <trans-unit id="bdeeef8876422213325483278a0f92e7a0c8c1b5" translate="yes" xml:space="preserve">
          <source>Keep merge commits out of the pull request.</source>
          <target state="translated">풀 커밋에서 병합 커밋을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="c7dc72ef1c4c61b1191541b0854b5eaf5a9ed686" translate="yes" xml:space="preserve">
          <source>Kickstarter Supporters</source>
          <target state="translated">킥 스타터 서포터</target>
        </trans-unit>
        <trans-unit id="c61e0167f6bd9ba175fa4eeb14221e2c06762623" translate="yes" xml:space="preserve">
          <source>Leave the &lt;code&gt;bottle do ... end&lt;/code&gt; block as-is; our CI system will update it when we pull your change.</source>
          <target state="translated">&lt;code&gt;bottle do ... end&lt;/code&gt; 남겨두고 ... 끝 . CI 시스템은 변경 사항을 가져올 때이를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="27c968e6692b41bf6e1a241b870dc41ff1a51b17" translate="yes" xml:space="preserve">
          <source>Libraries</source>
          <target state="translated">Libraries</target>
        </trans-unit>
        <trans-unit id="23be6a12322be8d177acba2bdd3cd26477a13fce" translate="yes" xml:space="preserve">
          <source>Libraries built for Python 3 should include &lt;code&gt;depends_on &quot;python&quot;&lt;/code&gt;, which will bottle against Homebrew&amp;rsquo;s Python 3.x. Python 2.x libraries must function when they are installed against either the system Python or brewed Python.</source>
          <target state="translated">Python 3 용으로 빌드 된 라이브러리는 &lt;code&gt;depends_on &quot;python&quot;&lt;/code&gt; 포함해야합니다. 하며 Homebrew의 Python 3.x와 병이됩니다. Python 2.x 라이브러리는 시스템 Python 또는 추출 된 Python에 대해 설치 될 때 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="f23e0d98de705dcde196608049e2469be061d13f" translate="yes" xml:space="preserve">
          <source>Libraries built for Python 3 should include &lt;code&gt;depends_on &quot;python@3.x&quot;&lt;/code&gt;, which will bottle against Homebrew&amp;rsquo;s Python 3.x. Python 2.x libraries must function when they are installed against either the system Python or brewed Python.</source>
          <target state="translated">Python 3 용으로 빌드 된 라이브러리에는 &lt;code&gt;depends_on &quot;python@3.x&quot;&lt;/code&gt; 가 포함되어야하며 , 이는 Homebrew의 Python 3.x와 병용 됩니다. Python 2.x 라이브러리는 시스템 Python 또는 양조 된 Python에 대해 설치 될 때 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="dca6463b909152aac09a549e12eb5a21fd8a85de" translate="yes" xml:space="preserve">
          <source>Libraries may be installed to &lt;code&gt;libexec&lt;/code&gt; and added to &lt;code&gt;sys.path&lt;/code&gt; by writing a &lt;code&gt;.pth&lt;/code&gt; file (named like &amp;ldquo;homebrew-foo.pth&amp;rdquo;) to the &lt;code&gt;prefix&lt;/code&gt; site-packages. This simplifies the ensuing drama if &lt;code&gt;pip&lt;/code&gt; is accidentally used to upgrade a Homebrew-installed package and prevents the accumulation of stale .pyc files in Homebrew&amp;rsquo;s site-packages.</source>
          <target state="translated">라이브러리를 &lt;code&gt;libexec&lt;/code&gt; 에 설치 하고 &lt;code&gt;.pth&lt;/code&gt; 파일 (예 : &quot;homebrew-foo.pth&quot;)을 &lt;code&gt;prefix&lt;/code&gt; site-packages 에 작성 하여 &lt;code&gt;sys.path&lt;/code&gt; 에 추가 할 수 있습니다 . &lt;code&gt;pip&lt;/code&gt; 가 실수로 Homebrew 설치 패키지를 업그레이드하는 데 사용되는 경우 후속 드라마를 단순화하고 Homebrew의 사이트 패키지에 오래된 .pyc 파일이 누적되는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="ef3b6d559938b6cd988174c5f9286dd9298560ad" translate="yes" xml:space="preserve">
          <source>License Guidelines</source>
          <target state="translated">라이선스 지침</target>
        </trans-unit>
        <trans-unit id="fdb77789985f1014993de15c60592b05cedd27a5" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD 2-Clause License.</source>
          <target state="translated">BSD 2-Clause 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="d17d2b57e458212577db216bac4a7a7d76f0b1e7" translate="yes" xml:space="preserve">
          <source>Linear algebra libraries</source>
          <target state="translated">선형 대수 라이브러리</target>
        </trans-unit>
        <trans-unit id="f984e5fde04a06ddfd241322730309d7b46ad736" translate="yes" xml:space="preserve">
          <source>Linked keg-only formulae</source>
          <target state="translated">연결된 통만 수식</target>
        </trans-unit>
        <trans-unit id="1595047a3110f27e604064b7348b2d0e0f4568dc" translate="yes" xml:space="preserve">
          <source>Linux only: Pass this value to a type name representing the compiler&amp;rsquo;s &lt;code&gt;-march&lt;/code&gt; option.</source>
          <target state="translated">Linux 전용 : 컴파일러의 &lt;code&gt;-march&lt;/code&gt; 옵션을 나타내는 유형 이름에이 값을 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ee0d28e1f108329df9c66f63fb920063f101181" translate="yes" xml:space="preserve">
          <source>Linux or Windows 10 Subsystem for Linux</source>
          <target state="translated">Linux 용 Linux 또는 Windows 10 서브 시스템</target>
        </trans-unit>
        <trans-unit id="0c573a8344ec7425046a6176d9ad5138e08f0646" translate="yes" xml:space="preserve">
          <source>Linux/WSL Requirements</source>
          <target state="translated">Linux / WSL 요구 사항</target>
        </trans-unit>
        <trans-unit id="a26cfba4fe9c7632642b20245260a240b86a0857" translate="yes" xml:space="preserve">
          <source>List all dependencies present in the &lt;code&gt;Brewfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Brewfile&lt;/code&gt; 에있는 모든 종속성을 나열합니다 .</target>
        </trans-unit>
        <trans-unit id="f983840352b4f64783438b71e8fb399581bf6267" translate="yes" xml:space="preserve">
          <source>List all installed formulae and casks.</source>
          <target state="translated">설치된 모든 공식과 캐스 크를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="a09ea49a5d4dd77d1ad7db1fd1edbef59e2f63df" translate="yes" xml:space="preserve">
          <source>List all installed formulae.</source>
          <target state="translated">설치된 모든 공식을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="584987d6b571dd6a54116aac473130610ba67a0c" translate="yes" xml:space="preserve">
          <source>List all installed taps when no arguments are passed.</source>
          <target state="translated">인수가 전달되지 않은 경우 설치된 모든 탭을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="4d5ae32b6d44d27c363e341f8a1c536f5e610fe1" translate="yes" xml:space="preserve">
          <source>List all managed services for the current user (or root).</source>
          <target state="translated">현재 사용자 (또는 루트)의 모든 관리 서비스를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="c4b202119242a53b0b486f0fa3e2e2194202bb63" translate="yes" xml:space="preserve">
          <source>List installed casks and formulae that have an updated version available. By default, version information is displayed in interactive shells, and suppressed otherwise.</source>
          <target state="translated">사용 가능한 업데이트 된 버전이있는 설치된 캐스 크 및 공식을 나열합니다. 기본적으로 버전 정보는 대화 형 셸에 표시되고 그렇지 않으면 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6fe77593990bb86451aa286e0f7be628da81570" translate="yes" xml:space="preserve">
          <source>List installed formulae that are not dependencies of another installed formula.</source>
          <target state="translated">설치된 다른 공식의 종속성이 아닌 설치된 공식을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="ad552613f623624dcb1908ce251c30c41c334580" translate="yes" xml:space="preserve">
          <source>Lists of &lt;em&gt;&lt;code&gt;file&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; may not be combined. If none are provided, &lt;code&gt;style&lt;/code&gt; will run style checks on the whole Homebrew library, including core code and all formulae.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;file&lt;/code&gt; &lt;/em&gt; , &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 및 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 목록이 결합되지 않을 수 있습니다. 아무것도 제공되지 않으면 &lt;code&gt;style&lt;/code&gt; 은 핵심 코드 및 모든 공식을 포함하여 전체 Homebrew 라이브러리에서 스타일 검사를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f5218a54f18d6903009d9b4c3e6dcc061c64d42e" translate="yes" xml:space="preserve">
          <source>Literal text in commands and code is styled in &lt;code&gt;fixed width font&lt;/code&gt;</source>
          <target state="translated">명령 및 코드의 리터럴 텍스트는 &lt;code&gt;fixed width font&lt;/code&gt; 스타일이 지정됩니다</target>
        </trans-unit>
        <trans-unit id="adba6aedb3e65cbc50f441b5241fd138f94406f2" translate="yes" xml:space="preserve">
          <source>Look through repository history to find the most recent version of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; and create a copy in &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/Formula/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;code&gt;@&lt;/code&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;. If the tap is not installed yet, attempt to install/clone the tap before continuing. To extract a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; from a tap that is not homebrew/core use &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">저장소 기록을 살펴보고 가장 최신 버전의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 찾고 &lt;code&gt;/Formula/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; &lt;code&gt;@&lt;/code&gt; &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; &lt;code&gt;.rb&lt;/code&gt; &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에서 사본을 만듭니다 . 탭이 아직 설치되지 않은 경우 계속하기 전에 탭을 설치 / 복제하십시오. homebrew / core가 아닌 탭에서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 추출하려면 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; / &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; / &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; 를 사용하십시오.&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2b7db65cdc5502b8ced8b3b220fb2eef46ed1419" translate="yes" xml:space="preserve">
          <source>Look through repository history to find the most recent version of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; and create a copy in &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/Formula/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;code&gt;@&lt;/code&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.rb&lt;/code&gt;. If the tap is not installed yet, attempt to install/clone the tap before continuing. To extract a formula from a tap that is not &lt;code&gt;homebrew/core&lt;/code&gt; use its fully-qualified form of &lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">저장소 기록을 살펴보고 가장 최신 버전의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 찾고 &lt;code&gt;/Formula/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; &lt;code&gt;@&lt;/code&gt; &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; 을 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 하여 사본을 만듭니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; &lt;code&gt;.rb&lt;/code&gt; . 탭이 아직 설치되지 않은 경우 계속하기 전에 탭을 설치 / 복제 해보십시오. &lt;code&gt;homebrew/core&lt;/code&gt; 가 아닌 탭에서 공식을 추출하려면 정규화 된 형식의 &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; 를 사용하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cad0da4f81275564b7385bd83f9566a832f3a83c" translate="yes" xml:space="preserve">
          <source>MD5 and SHA-1 Deprecation</source>
          <target state="translated">MD5 및 SHA-1 지원 중단</target>
        </trans-unit>
        <trans-unit id="a5c0948fb1255b2bb30f5e5f4f4352da2cc774ce" translate="yes" xml:space="preserve">
          <source>MPI</source>
          <target state="translated">MPI</target>
        </trans-unit>
        <trans-unit id="6e4d7baca5795528b8e0686a7c4d6a1ba142d1e7" translate="yes" xml:space="preserve">
          <source>Maintainer Guidelines</source>
          <target state="translated">관리자 지침</target>
        </trans-unit>
        <trans-unit id="5ce563e21b8be07e4d9e4006d6894792ae6105a5" translate="yes" xml:space="preserve">
          <source>Maintainers</source>
          <target state="translated">Maintainers</target>
        </trans-unit>
        <trans-unit id="e4bd0a0a7f30bbf89547ef2465e3ffa93cd614a7" translate="yes" xml:space="preserve">
          <source>Maintainers: Avoiding Burnout</source>
          <target state="translated">관리자 : 번 아웃 방지</target>
        </trans-unit>
        <trans-unit id="46e88a181d03bbc4f9c41711920f505bedf4915c" translate="yes" xml:space="preserve">
          <source>Maintaining a tap</source>
          <target state="translated">탭 유지</target>
        </trans-unit>
        <trans-unit id="182018437384810e3c5198d3d38af37ea5355ce4" translate="yes" xml:space="preserve">
          <source>Make any requested changes and commit them with &lt;code&gt;git add&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">요청 된 변경을 수행하고 &lt;code&gt;git add&lt;/code&gt; 및 &lt;code&gt;git commit&lt;/code&gt; 으로 커밋하십시오 .</target>
        </trans-unit>
        <trans-unit id="a95cfa2d979835e65e4564e5a497c31a28fb8abe" translate="yes" xml:space="preserve">
          <source>Make it build a command-line tool or a library by default and, if the GUI is useful and would be widely used, also build the GUI. Don&amp;rsquo;t build X11/XQuartz GUIs as they are a bad user experience on macOS.</source>
          <target state="translated">기본적으로 명령 행 도구 또는 라이브러리를 빌드하고 GUI가 유용하고 널리 사용되는 경우 GUI도 빌드하십시오. macOS에서는 X11 / XQuartz GUI가 나쁜 사용자 경험이므로 빌드하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a6d227c636d6f822321cc2cff4d90accb04755e1" translate="yes" xml:space="preserve">
          <source>Make sure you modify &lt;code&gt;s&lt;/code&gt;! This block ignores the returned value.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 를 수정하십시오 ! 이 블록은 반환 된 값을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="18041f1a4ac463a56de60a6de7d1f72b622ef66f" translate="yes" xml:space="preserve">
          <source>Make sure you run &lt;code&gt;brew update&lt;/code&gt; before you start. This turns your Homebrew installation into a Git repository.</source>
          <target state="translated">시작하기 전에 &lt;code&gt;brew update&lt;/code&gt; 를 실행하십시오 . 그러면 Homebrew 설치가 Git 리포지토리로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="64241de2b2b0b82681458a79ec21384f7c8c4c01" translate="yes" xml:space="preserve">
          <source>Make sure you write a good test as part of your formula. Refer to the &amp;ldquo;&lt;a href=&quot;formula-cookbook#add-a-test-to-the-formula&quot;&gt;Add a test to the formula&lt;/a&gt;&amp;rdquo; section of the Cookbook for help with this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d067bbc2e24803ad128dd006c7e47c9b2baa64a" translate="yes" xml:space="preserve">
          <source>Make your changes. For formulae, use &lt;code&gt;brew edit&lt;/code&gt; or your favourite text editor, following all the guidelines in the &lt;a href=&quot;formula-cookbook&quot;&gt;Formula Cookbook&lt;/a&gt;.</source>
          <target state="translated">변경하십시오. 공식의 경우 &lt;code&gt;brew edit&lt;/code&gt; &lt;a href=&quot;formula-cookbook&quot;&gt;공식화의&lt;/a&gt; 경우 공식 요리 책 의 모든 지침에 따라 추출 편집 또는 자주 하는 텍스트 편집기를 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f166701590e0014844e77bf1194c3578ed038410" translate="yes" xml:space="preserve">
          <source>Manage background services with macOS&amp;rsquo; &lt;code&gt;launchctl&lt;/code&gt;(1) daemon manager.</source>
          <target state="translated">macOS의 &lt;code&gt;launchctl&lt;/code&gt; (1) 데몬 관리자로 백그라운드 서비스를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="cbd94c027c70a6cdd732a09fe80bdfb2d0c16d15" translate="yes" xml:space="preserve">
          <source>Manage background services with macOS&amp;rsquo; &lt;code&gt;launchctl&lt;/code&gt;(1) daemon manager. See &lt;code&gt;brew services --help&lt;/code&gt;.</source>
          <target state="translated">macOS로 백그라운드 서비스 관리 &lt;code&gt;launchctl&lt;/code&gt; (1) 데몬 관리자로 . &lt;code&gt;brew services --help&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18db59f31464766fdc98a66b87b9b223a47fe474" translate="yes" xml:space="preserve">
          <source>Manuals</source>
          <target state="translated">Manuals</target>
        </trans-unit>
        <trans-unit id="9cf6c2b5f0582ce2451031aba862b6b9a384eeb7" translate="yes" xml:space="preserve">
          <source>Many Homebrew Cask commands accept one or more &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; arguments. These can be specified the same way as the &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; arguments described in &lt;code&gt;SPECIFYING FORMULAE&lt;/code&gt; above.</source>
          <target state="translated">많은 Homebrew Cask 명령은 하나 이상의 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 인수를 허용합니다. 위의 &lt;code&gt;SPECIFYING FORMULAE&lt;/code&gt; 설명 된 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 인수 와 동일한 방식으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a8b73e2e8406106481bfef1e72454aa2de76f02" translate="yes" xml:space="preserve">
          <source>Many Homebrew commands accept one or more &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; arguments. These arguments can take several different forms:</source>
          <target state="translated">많은 Homebrew 명령은 하나 이상의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 허용합니다&lt;em&gt;&lt;/em&gt; 인수를 허용합니다. 이러한 주장은 몇 가지 다른 형태를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c6cdfe8b621f40631741f9de97a1e16d10f6021" translate="yes" xml:space="preserve">
          <source>Members are expected to remain active within Homebrew, and are required to affirm their continued interest in Homebrew membership annually.</source>
          <target state="translated">회원은 Homebrew 내에서 활동적인 상태를 유지해야하며 매년 Homebrew 멤버십에 대한 지속적인 관심을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c634bcbbf24c335f526920e4bbabf8b2d24a7fc0" translate="yes" xml:space="preserve">
          <source>Members may be dismissed by majority vote of the Project Leadership Committee and removed from the Homebrew organisation on GitHub. Removed members may be reinstated by the usual admission process.</source>
          <target state="translated">프로젝트 리더쉽위원회의 과반수 투표로 회원을 기각하고 GitHub의 Homebrew 조직에서 탈퇴 할 수 있습니다. 삭제 된 회원은 일반적인 입학 절차에 따라 복원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13a975b4c534bd0df4f019fc33c9089de13f89b2" translate="yes" xml:space="preserve">
          <source>Members may cast a vote any time up to three weeks prior to the election date.</source>
          <target state="translated">회원은 선거일 3 주 전까지 투표 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f8bd2031b34f205f71628026cea157136d662eb" translate="yes" xml:space="preserve">
          <source>Members may vote in all general elections and resolutions, hold office for Homebrew, and participate in all other membership functions.</source>
          <target state="translated">회원은 모든 총선 및 결의안에 투표 할 수 있고, 홈브류에 대한 직책을 맡고, 다른 모든 회원 기능에 참여할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a176626d1ab572fcc4a5a6603d546b36673599a" translate="yes" xml:space="preserve">
          <source>Members shall vote on any amendments by approving or requesting changes on the GitHub pull request. Voting will close three weeks after an amendment is proposed, and all votes tallied.</source>
          <target state="translated">회원은 GitHub 풀 요청에 대한 변경을 승인하거나 요청하여 수정 사항에 투표해야합니다. 투표는 수정안이 제안 된 후 3 주 후에 마감되며 모든 투표는 집계됩니다.</target>
        </trans-unit>
        <trans-unit id="3fe381ddee55da4dc9ef4c3f0ff8f39aadbf77e2" translate="yes" xml:space="preserve">
          <source>Members should abstain from voting when they have a conflict of interest not shared by other members. No one may be compelled to abstain from voting.</source>
          <target state="translated">다른 회원이 공유하지 않은 이해의 상충이있는 경우 회원은 투표를 삼가야합니다. 투표를 자제해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="caef62a004c44aeebaeff5a89c90fde1b3810abc" translate="yes" xml:space="preserve">
          <source>Messaging</source>
          <target state="translated">Messaging</target>
        </trans-unit>
        <trans-unit id="20c1f08ef94149f97a225abe82ce6f7d43ac6f69" translate="yes" xml:space="preserve">
          <source>Method Signatures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028db85bcc709628fe2da43173cf337cd2ad6ac4" translate="yes" xml:space="preserve">
          <source>Migrate renamed packages to new name, where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are old names of packages.</source>
          <target state="translated">이름이 바뀐 패키지를 새 이름으로 마이그레이션하십시오. 여기서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 은 패키지의 이전 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4574f4251532184f855a320a9e60af26a35e6467" translate="yes" xml:space="preserve">
          <source>Migrate renamed packages to new names, where &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are old names of packages.</source>
          <target state="translated">이름이 변경된 패키지를 새 이름으로 마이그레이션합니다. 여기서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 은 패키지의 이전 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f47c8914441f13fcfb8fb20e5b656ff12ce45573" translate="yes" xml:space="preserve">
          <source>Migrating A Formula To A Tap</source>
          <target state="translated">수식을 탭으로 마이그레이션</target>
        </trans-unit>
        <trans-unit id="8a69bf48887129d109243656ce1dc01f50dddbb1" translate="yes" xml:space="preserve">
          <source>Mind that GitHub doesn&amp;rsquo;t allow styling in Markdown documents. Where styling is allowed (e.g. in the exported brew.sh version of the documentation), always set a background colour of &lt;code&gt;white&lt;/code&gt; for the diagram. That&amp;rsquo;s the colour draw.io assumes, and keeps the diagram easy to read in dark mode without further customization. You can use the CSS selector &lt;code&gt;img[src$=&quot;.drawio.svg&quot;]&lt;/code&gt; for styling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b9f946757df9889ef0f8ad8c39d50a537fe4d1" translate="yes" xml:space="preserve">
          <source>More generally, parallel list item structure</source>
          <target state="translated">보다 일반적으로 병렬 목록 항목 구조</target>
        </trans-unit>
        <trans-unit id="0d3920c374a3ea56eab164ac91251abb5d8348d8" translate="yes" xml:space="preserve">
          <source>Most formulae presently just install to &lt;code&gt;prefix&lt;/code&gt;.</source>
          <target state="translated">대부분의 공식은 현재 &lt;code&gt;prefix&lt;/code&gt; 에 설치 합니다 .</target>
        </trans-unit>
        <trans-unit id="0bb159e4784c0187b2469ee124ab752feb738940" translate="yes" xml:space="preserve">
          <source>Multiple installations</source>
          <target state="translated">여러 설치</target>
        </trans-unit>
        <trans-unit id="12024bd676b0ce21e884a73cce9a255f012b3d42" translate="yes" xml:space="preserve">
          <source>My Mac &lt;code&gt;.app&lt;/code&gt;s don&amp;rsquo;t find &lt;code&gt;/usr/local/bin&lt;/code&gt; utilities!</source>
          <target state="translated">내 Mac &lt;code&gt;.app&lt;/code&gt; 에서 &lt;code&gt;/usr/local/bin&lt;/code&gt; 유틸리티를 찾지 못했습니다 !</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="4de116303d8ea40cca3552b919bbe3879fce37f1" translate="yes" xml:space="preserve">
          <source>Name the formula like the project markets the product. So it&amp;rsquo;s &lt;code&gt;pkg-config&lt;/code&gt;, not &lt;code&gt;pkgconfig&lt;/code&gt;; &lt;code&gt;sdl_mixer&lt;/code&gt;, not &lt;code&gt;sdl-mixer&lt;/code&gt; or &lt;code&gt;sdlmixer&lt;/code&gt;.</source>
          <target state="translated">프로젝트가 제품을 판매하는 것과 같은 공식의 이름을 지정하십시오. 그것의 그래서 &lt;code&gt;pkg-config&lt;/code&gt; 하지 &lt;code&gt;pkgconfig&lt;/code&gt; ; &lt;code&gt;sdl_mixer&lt;/code&gt; 하지 &lt;code&gt;sdl-mixer&lt;/code&gt; 또는 &lt;code&gt;sdlmixer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca51a5f12a8944444eaf1813f0d8c8d389d5eca1" translate="yes" xml:space="preserve">
          <source>Names of commands like &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;brew&lt;/code&gt; are styled in &lt;code&gt;fixed width font&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; 및 &lt;code&gt;brew&lt;/code&gt; 와 같은 명령의 이름은 &lt;code&gt;fixed width font&lt;/code&gt; 로 스타일이 지정됩니다</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="3aa06a78df2d37fa11ca02c258b6aa29b39cc9a8" translate="yes" xml:space="preserve">
          <source>Naming your formulae to avoid clashes</source>
          <target state="translated">충돌을 피하기 위해 수식 이름 지정</target>
        </trans-unit>
        <trans-unit id="e30e2d4b758955715f07a63206e94f2425c49038" translate="yes" xml:space="preserve">
          <source>New Maintainer Checklist</source>
          <target state="translated">새로운 관리자 점검표</target>
        </trans-unit>
        <trans-unit id="3f2037e484d65e8a645066226f31f04893da6ab0" translate="yes" xml:space="preserve">
          <source>New formulae being submitted to Homebrew should run &lt;code&gt;brew audit --new-formula foo&lt;/code&gt;. This command is performed by the Brew Test Bot on new submissions as part of the automated build and test process, and highlights more potential issues than the standard audit.</source>
          <target state="translated">Homebrew에 제출되는 새 공식은 &lt;code&gt;brew audit --new-formula foo&lt;/code&gt; 를 실행해야합니다 . 이 명령은 자동 빌드 및 테스트 프로세스의 일부로 새로운 제출에 대해 Brew 테스트 봇이 수행하며 표준 감사보다 더 많은 잠재적 인 문제를 강조합니다.</target>
        </trans-unit>
        <trans-unit id="6baec85216200d7e2a6acaacf5ab5261a88cbb31" translate="yes" xml:space="preserve">
          <source>New members will be admitted by majority vote of the Project Leadership Committee (PLC) and added to the Homebrew organisation on GitHub.</source>
          <target state="translated">신입 회원은 프로젝트 리더쉽위원회 (PLC)의 과반수 투표로 입국하여 GitHub의 Homebrew 조직에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="dfa089f20c3217c400784371968621ebb2c42420" translate="yes" xml:space="preserve">
          <source>Next, you will want to go through the &lt;a href=&quot;acceptable-formulae&quot;&gt;Acceptable Formulae&lt;/a&gt; documentation to determine if the software is an appropriate addition to Homebrew. If you are creating a formula for an alternative version of software already in Homebrew (for example, a major/minor version that significantly differs from the existing version), be sure to read the &lt;a href=&quot;versions&quot;&gt;Versions&lt;/a&gt; documentation to understand versioned formulae requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87f8b293cbb25611b42ed51f399d79915ee3a90" translate="yes" xml:space="preserve">
          <source>Niche (or self-submitted) stuff</source>
          <target state="translated">틈새 (또는 자체 제출) 물건</target>
        </trans-unit>
        <trans-unit id="f0c9482559b8dbcae071a99fedf5f9463d8adb8c" translate="yes" xml:space="preserve">
          <source>No &amp;ldquo;$&amp;rdquo; with environment variables mentioned outside code snippets</source>
          <target state="translated">코드 스 니펫 외부에 언급 된 환경 변수가있는 &quot;$&quot;없음</target>
        </trans-unit>
        <trans-unit id="856d4f5a2e2726b9bef4f8d8a89b6982735b12b1" translate="yes" xml:space="preserve">
          <source>No &amp;ldquo;TM&amp;rdquo;, &amp;trade;, &lt;sup&gt;SM&lt;/sup&gt;, &amp;copy;, &amp;reg;, or other explicit indicators of rights ownership or trademarks; we take these as understood when the brand name is mentioned</source>
          <target state="translated">&amp;ldquo;TM&amp;rdquo;, &amp;trade;, &lt;sup&gt;SM&lt;/sup&gt; , &amp;copy;, &amp;reg; 또는 기타 권리 소유권 또는 상표의 명시 적 지표는 없습니다. 우리는 브랜드 이름을 언급 할 때 이해 한대로 이것을 사용합니다</target>
        </trans-unit>
        <trans-unit id="72192711334e8c95c0e149ce1ef413303687f564" translate="yes" xml:space="preserve">
          <source>No Oxford commas</source>
          <target state="translated">옥스포드 쉼표 없음</target>
        </trans-unit>
        <trans-unit id="c3fbad3607fabb7a7818d301b73e6cc585729452" translate="yes" xml:space="preserve">
          <source>No amendment may be proposed which violates Software Freedom Conservancy policies. The PLC may veto such an amendment by an ordinary resolution.</source>
          <target state="translated">소프트웨어 자유 보존 정책을 위반하는 개정안은 제안 될 수 없습니다. PLC는 일반적인 해결책으로 그러한 개정을 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00bfc42aa04161b50dc44a542c6f1809f50107a4" translate="yes" xml:space="preserve">
          <source>No configuration is needed if you&amp;rsquo;re using Homebrew&amp;rsquo;s &lt;code&gt;fish&lt;/code&gt;. Friendly!</source>
          <target state="translated">Homebrew의 &lt;code&gt;fish&lt;/code&gt; 를 사용하는 경우 구성이 필요하지 않습니다 . 친한!</target>
        </trans-unit>
        <trans-unit id="8499de41f255df5abf99eaca2ccc0e70c6d31bce" translate="yes" xml:space="preserve">
          <source>No configuration is needed in &lt;code&gt;fish&lt;/code&gt;. Friendly!</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; 에는 구성이 필요하지 않습니다 . 친한!</target>
        </trans-unit>
        <trans-unit id="1c9701a6947d56a6d8e06cff81a8daddc463da4f" translate="yes" xml:space="preserve">
          <source>No more than five versions of a formula (including the main one) will be supported at any given time, regardless of usage. When removing formulae that violate this, we will aim to do so based on usage and support status rather than age.</source>
          <target state="translated">사용에 관계없이 주어진 시간에 공식의 5 개 버전 (기본 버전 포함) 만 지원됩니다. 이를 위반하는 공식을 제거 할 때는 연령이 아닌 사용 및 지원 상태를 기준으로 제거하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="dd7d98d1c61e58ec03027bc9bd082f6335231477" translate="yes" xml:space="preserve">
          <source>No more than five versions of a formula (including the non-versioned one) will be supported at any given time, regardless of usage. When removing formulae that violate this we will aim to do so based on usage and support status rather than age.</source>
          <target state="translated">사용법에 관계없이 주어진 시간에 수식의 버전 (버전이없는 버전 포함)을 5 개 이하 만 지원합니다. 이를 위반하는 공식을 제거 할 때는 연령이 아닌 사용 및 지원 상태를 기준으로하는 것이 목표입니다.</target>
        </trans-unit>
        <trans-unit id="576b313436652b5c3622e46ac17efb7849833e09" translate="yes" xml:space="preserve">
          <source>No more than two employees of the same employer may serve on the PLC.</source>
          <target state="translated">동일한 고용주의 직원 두 명 이상이 PLC에서 일할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="046fa881911e3b349e27c1c25231249e06376174" translate="yes" xml:space="preserve">
          <source>No more than two employees of the same employer may serve on the TSC.</source>
          <target state="translated">동일한 고용주의 직원은 2 명 이상이 TSC에서 일할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2207f221090bcb12789f81944f08393e7d74ccff" translate="yes" xml:space="preserve">
          <source>Node for Formula Authors</source>
          <target state="translated">공식 저자를위한 노드</target>
        </trans-unit>
        <trans-unit id="f4bc49656d07ca487936a0177db99faf69b97dba" translate="yes" xml:space="preserve">
          <source>Node modules should be installed to &lt;code&gt;libexec&lt;/code&gt;. This prevents the Node modules from contaminating the global &lt;code&gt;node_modules&lt;/code&gt;, which is important so that npm doesn&amp;rsquo;t try to manage Homebrew-installed Node modules.</source>
          <target state="translated">노드 모듈은 &lt;code&gt;libexec&lt;/code&gt; 에 설치해야합니다 . 이렇게하면 노드 모듈이 전역 &lt;code&gt;node_modules&lt;/code&gt; 를 오염 시키지 않습니다. 이는 npm이 Homebrew에 설치된 노드 모듈을 관리하지 않도록하는 데 중요합니다.</target>
        </trans-unit>
        <trans-unit id="4f351a2891e32d28acbe9eda3018a29b91f5bd50" translate="yes" xml:space="preserve">
          <source>Node modules which are compatible with the latest Node version should declare a dependency on the &lt;code&gt;node&lt;/code&gt; formula.</source>
          <target state="translated">최신 노드 버전과 호환되는 노드 모듈은 &lt;code&gt;node&lt;/code&gt; 공식 에 대한 종속성을 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a6af498ab842e58d53d5419e367a36751a9b222e" translate="yes" xml:space="preserve">
          <source>Not all projects have makefiles that will run in parallel so try to deparallelize by adding these lines to the &lt;code&gt;install&lt;/code&gt; method:</source>
          <target state="translated">모든 프로젝트에 병렬로 실행되는 make 파일이있는 것은 아니므로 &lt;code&gt;install&lt;/code&gt; 메소드에 다음 행을 추가하여 병렬화를 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="118d9399c80f058418f7a8f5ec45555d31c7f446" translate="yes" xml:space="preserve">
          <source>Note on &lt;code&gt;pip install --user&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pip install --user&lt;/code&gt; 에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="b4aede72e443ce4fdede7ccd555f47d225aafaca" translate="yes" xml:space="preserve">
          <source>Note that environment variables must have a value set to be detected. For example, &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; rather than just &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt;.</source>
          <target state="translated">환경 변수에는 감지되도록 설정된 값이 있어야합니다. 예를 들어, &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; 만 &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt; 대신 HOMEBREW_NO_INSECURE_REDIRECT = 1을 내보내십시오 .</target>
        </trans-unit>
        <trans-unit id="7048a2019446c6b5fb1e194e1fc943aa02bcd764" translate="yes" xml:space="preserve">
          <source>Note that environment variables must have a value set to be detected. For example, run &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; rather than just &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt;.</source>
          <target state="translated">환경 변수에는 감지 할 값이 설정되어 있어야합니다. 예를 들어, &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT=1&lt;/code&gt; 대신 export HOMEBREW_NO_INSECURE_REDIRECT = 1을 실행 &lt;code&gt;export HOMEBREW_NO_INSECURE_REDIRECT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c024978ef10531f692a33d122ef392e58285c88" translate="yes" xml:space="preserve">
          <source>Note that in the context of Homebrew, &lt;a href=&quot;https://rubydoc.brew.sh/Formula#libexec-instance_method&quot;&gt;&lt;code&gt;libexec&lt;/code&gt;&lt;/a&gt; is reserved for private use by the formula and therefore is not symlinked into &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt;.</source>
          <target state="translated">Homebrew와 관련하여 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#libexec-instance_method&quot;&gt; &lt;code&gt;libexec&lt;/code&gt; &lt;/a&gt; 는 공식에 의해 개인용으로 예약되어 있으므로 HOMEBREW_PREFIX로 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="28fe0b8b012e829f4d76cb67f61090e014f9d398" translate="yes" xml:space="preserve">
          <source>Note that pinned, outdated formulae that another formula depends on need to be upgraded when required as we do not allow formulae to be built against non-latest versions.</source>
          <target state="translated">최신이 아닌 버전에 대해 수식을 작성할 수 없으므로 다른 수식이 의존하는 고정 된 오래된 수식은 필요할 때 업그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="445c99e3cc0208dbc6511c137370f3c837db27a0" translate="yes" xml:space="preserve">
          <source>Note that pinned, outdated formulae that another formula depends on need to be upgraded when required, as we do not allow formulae to be built against outdated versions. If this is not desired, you can instead &lt;code&gt;brew extract&lt;/code&gt; to &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;maintain your own copy of the formula in a tap&lt;/a&gt;.</source>
          <target state="translated">다른 수식이 사용하는 고정 된 오래된 수식은 필요할 때 업그레이드해야합니다. 오래된 버전에 대해서는 수식을 만들 수 없습니다. 이것이 바람직하지 않다면, 대신 &lt;code&gt;brew extract&lt;/code&gt; &lt;a href=&quot;how-to-create-and-maintain-a-tap&quot;&gt;하여 탭 한 번으로 자신의 공식 사본&lt;/a&gt; 을 유지할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7983598d308539249648f8aa5116e9105a3d1fc2" translate="yes" xml:space="preserve">
          <source>Note that this will install some other dependencies like &lt;code&gt;Module::Install&lt;/code&gt;. Then put the appropriate incantation in your shell&amp;rsquo;s startup, e.g. for &lt;code&gt;.bash_profile&lt;/code&gt; you insert the below, for others see the &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt;&lt;code&gt;local::lib&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">이렇게하면 &lt;code&gt;Module::Install&lt;/code&gt; 과 같은 다른 종속성이 설치 됩니다. 그런 다음 적절한 시작을 쉘 시작에 넣으십시오 ( 예 : &lt;code&gt;.bash_profile&lt;/code&gt; 의 경우 아래를 삽입하십시오). 다른 사람은 &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt; &lt;code&gt;local::lib&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57856b2e8523128cc5671f25bfc72e52cf485983" translate="yes" xml:space="preserve">
          <source>Note that this will install some other dependencies like &lt;code&gt;Module::Install&lt;/code&gt;. Then put the appropriate incantation in your shell&amp;rsquo;s startup, e.g. for &lt;code&gt;.profile&lt;/code&gt; you insert the below, for others see the &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt;&lt;code&gt;local::lib&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">이것은 &lt;code&gt;Module::Install&lt;/code&gt; 과 같은 다른 종속성을 설치합니다 . 그런 다음 쉘의 시작에 적절한 주문을 넣으십시오. &lt;code&gt;.profile&lt;/code&gt; 을 넣으십시오. .profile의 경우 아래에 삽입하고 다른 사람들은 &lt;a href=&quot;https://metacpan.org/pod/local::lib&quot;&gt; &lt;code&gt;local::lib&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fecc03474ef11c09860e963a61b40ebeb46cea37" translate="yes" xml:space="preserve">
          <source>Note that values &lt;em&gt;can&lt;/em&gt; contain unescaped spaces if you use the multiple-argument form of &lt;code&gt;system&lt;/code&gt;.</source>
          <target state="translated">다중 인수 형식의 &lt;code&gt;system&lt;/code&gt; 을 사용하는 경우 값에 이스케이프되지 않은 공백 &lt;em&gt;이&lt;/em&gt; 포함될 &lt;em&gt;수&lt;/em&gt; 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1fd48ef59f46c5e3bd381c0a0ccc3b778c3b48e4" translate="yes" xml:space="preserve">
          <source>Note they are largely untested, and as always, be careful about running untested code on your machine.</source>
          <target state="translated">그것들은 대체로 테스트되지 않았으며 항상 그렇듯이 컴퓨터에서 테스트되지 않은 코드를 실행할 때주의하십시오.</target>
        </trans-unit>
        <trans-unit id="90d4be0e63836af674b2d1670cd473c3a6b7c7d3" translate="yes" xml:space="preserve">
          <source>Note this can also be installed with &lt;code&gt;brew install brew-gem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew install brew-gem&lt;/code&gt; 을 사용하여 설치할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f18c61284073d5c7c424af5355cd3fc82bee30f" translate="yes" xml:space="preserve">
          <source>Note, &lt;code&gt;easy_install&lt;/code&gt; is deprecated. We install &lt;code&gt;pip&lt;/code&gt; (or &lt;code&gt;pip2&lt;/code&gt; for Python 2) along with python/python2.</source>
          <target state="translated">참고 &lt;code&gt;easy_install&lt;/code&gt; 을가 되지 않습니다. python / python2와 함께 &lt;code&gt;pip&lt;/code&gt; (또는 Python 2의 경우 &lt;code&gt;pip2&lt;/code&gt; ) 를 설치 합니다.</target>
        </trans-unit>
        <trans-unit id="4990abde6ed95ee0302000d9e0fc12559f49c68b" translate="yes" xml:space="preserve">
          <source>Now (after you restart your shell) &lt;code&gt;cpan&lt;/code&gt; or &lt;code&gt;perl -MCPAN -eshell&lt;/code&gt; etc. will install modules and binaries in &lt;code&gt;~/perl5&lt;/code&gt; and the relevant subdirectories will be in your &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;PERL5LIB&lt;/code&gt; etc.</source>
          <target state="translated">이제 (쉘을 다시 시작한 후) &lt;code&gt;cpan&lt;/code&gt; 또는 &lt;code&gt;perl -MCPAN -eshell&lt;/code&gt; 등은 &lt;code&gt;~/perl5&lt;/code&gt; 에 모듈 및 바이너리를 설치 하고 관련 하위 디렉토리는 &lt;code&gt;PATH&lt;/code&gt; 및 &lt;code&gt;PERL5LIB&lt;/code&gt; 등에 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa1ba4586eb9bc9d65d1a0bf71ebd1f609a4338c" translate="yes" xml:space="preserve">
          <source>Now just paste into the formula after &lt;code&gt;__END__&lt;/code&gt;. Instead of &lt;code&gt;git diff | pbcopy&lt;/code&gt;, for some editors &lt;code&gt;git diff &amp;gt;&amp;gt; path/to/your/formula/foo.rb&lt;/code&gt; might help you ensure that the patch is not touched, e.g. white space removal, indentation changes, etc.</source>
          <target state="translated">이제 &lt;code&gt;__END__&lt;/code&gt; 뒤에 수식에 붙여 넣으십시오 . &lt;code&gt;git diff | pbcopy&lt;/code&gt; 대신 | pbcopy , 일부 편집기의 경우 &lt;code&gt;git diff &amp;gt;&amp;gt; path/to/your/formula/foo.rb&lt;/code&gt; 는 공백 제거, 들여 쓰기 변경 등과 같이 패치가 닿지 않도록하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f90f4ed2e70c9b79835ddcf0323614cbef685c29" translate="yes" xml:space="preserve">
          <source>Now that &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;homebrew/versions&lt;/a&gt; has been deprecated, &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; supports multiple versions of formulae with a new naming format.</source>
          <target state="translated">이제 &lt;a href=&quot;https://github.com/homebrew/homebrew-versions&quot;&gt;사제 / 버전이&lt;/a&gt; 사용되지 않습니다, &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;사제는 / 코어는&lt;/a&gt; 새로운 명명 형식 식의 여러 버전을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9d509b01c9cb6909be534f56cb0ac67fed17c54d" translate="yes" xml:space="preserve">
          <source>Now you just need to push your commit to GitHub.</source>
          <target state="translated">이제 커밋을 GitHub에 푸시하면됩니다.</target>
        </trans-unit>
        <trans-unit id="275d41b2c970099b02cccca0797a4c863431ae4b" translate="yes" xml:space="preserve">
          <source>Now, &lt;a href=&quot;how-to-open-a-homebrew-pull-request&quot;&gt;open a pull request&lt;/a&gt; for your changes.</source>
          <target state="translated">이제 변경 사항에 대한 &lt;a href=&quot;how-to-open-a-homebrew-pull-request&quot;&gt;풀 요청&lt;/a&gt; 을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="750e3031d24869762f5a2597f9297978424e1537" translate="yes" xml:space="preserve">
          <source>OFFICIAL EXTERNAL COMMANDS</source>
          <target state="translated">공식 외부 명령</target>
        </trans-unit>
        <trans-unit id="9b240229e73af9c29cdeb8ba3074f4517f905ad4" translate="yes" xml:space="preserve">
          <source>OSXFuse</source>
          <target state="translated">OSXFuse</target>
        </trans-unit>
        <trans-unit id="a64e5011abe82f923670b8a3479c885112be0a0b" translate="yes" xml:space="preserve">
          <source>Occasionally, these updates require a forced-recompile of the formula itself or its dependents to either ensure formulae continue to function as expected or to close a security issue. This forced-recompile is known as a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt; and is inserted underneath the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt;&lt;code&gt;homepage&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt;&lt;code&gt;sha256&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">경우에 따라 이러한 업데이트를 수행하면 공식이 예상대로 작동하거나 보안 문제를 해결하기 위해 공식 자체 또는 종속 항목을 강제로 다시 컴파일해야합니다. 이 강제 재 컴파일은 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/a&gt; 알려져 있으며 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt; &lt;code&gt;homepage&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://rubydoc.brew.sh/Formula#sha256%3D-class_method&quot;&gt; &lt;code&gt;sha256&lt;/code&gt; &lt;/a&gt; 블록 아래에 삽입 됩니다.</target>
        </trans-unit>
        <trans-unit id="681d32b8a2e1fa6e8661db32584378f89dbc86f0" translate="yes" xml:space="preserve">
          <source>Official Vendor Taps</source>
          <target state="translated">공식 공급 업체 탭</target>
        </trans-unit>
        <trans-unit id="c9b63824d2e8286d090c458dec2e0705f9b9bfa1" translate="yes" xml:space="preserve">
          <source>Offset nontrivial subordinate clauses with commas</source>
          <target state="translated">쉼표로 사소하지 않은 하위 절 오프셋</target>
        </trans-unit>
        <trans-unit id="491d6cdf3904ca2087c28bb484862d0243f5fea7" translate="yes" xml:space="preserve">
          <source>On GitHub, your repository must be named &lt;code&gt;homebrew-something&lt;/code&gt; in order to use the one-argument form of &lt;code&gt;brew tap&lt;/code&gt;. The prefix &amp;lsquo;homebrew-&amp;lsquo; is not optional. (The two-argument form doesn&amp;rsquo;t have this limitation, but it forces you to give the full URL explicitly.)</source>
          <target state="translated">GitHub 에서 한 인수 형식의 &lt;code&gt;brew tap&lt;/code&gt; 을 사용하려면 리포지토리에 &lt;code&gt;homebrew-something&lt;/code&gt; 라는 이름을 지정해야합니다 . 접두사 'homebrew-'는 선택 사항이 아닙니다. (두 인수 형식에는이 제한이 없지만 전체 URL을 명시 적으로 제공해야합니다.)</target>
        </trans-unit>
        <trans-unit id="93375fc0c4ad47722582341b49297ec3f28ea1a8" translate="yes" xml:space="preserve">
          <source>On a fresh macOS installation there are three empty directories for add-ons available to all users:</source>
          <target state="translated">새로운 macOS 설치에는 모든 사용자가 사용할 수있는 추가 기능을위한 세 개의 빈 디렉토리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9319ffe1bcf9c8c1340000dc5e84bea3188d96b7" translate="yes" xml:space="preserve">
          <source>On failed or passed builds you can click the &amp;ldquo;Details&amp;rdquo; link to view the result in GitHub Actions.</source>
          <target state="translated">실패하거나 통과 한 빌드에서 &quot;세부 정보&quot;링크를 클릭하여 GitHub 작업에서 결과를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fcf1d149c1c49bd024f8dde57e112e141c970cc" translate="yes" xml:space="preserve">
          <source>On failed or passed builds you can click the &amp;ldquo;Details&amp;rdquo; link to view the result in Jenkins.</source>
          <target state="translated">실패하거나 통과 한 빌드에서는 &quot;세부 사항&quot;링크를 클릭하여 Jenkins의 결과를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0279f0861b3529aecebf6ebcad6bd286d38a3c7e" translate="yes" xml:space="preserve">
          <source>On macOS, any &lt;a href=&quot;https://docs.python.org/2/install/index.html#inst-alt-install-user&quot;&gt;Python version X.Y also searches in &lt;code&gt;~/Library/Python/X.Y/lib/python/site-packages&lt;/code&gt; for modules&lt;/a&gt;. That dir might not yet exist, but you can create it:</source>
          <target state="translated">macOS에서 모든 &lt;a href=&quot;https://docs.python.org/2/install/index.html#inst-alt-install-user&quot;&gt;Python 버전 XY는 &lt;code&gt;~/Library/Python/X.Y/lib/python/site-packages&lt;/code&gt; 에서 모듈을 검색합니다&lt;/a&gt; . 해당 디렉토리가 아직 없을 수도 있지만 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="577e2f3306d654300b460b3c9a5241a3dba649bb" translate="yes" xml:space="preserve">
          <source>Once all feedback has been addressed and if it&amp;rsquo;s a change we want to include (we include most changes), then we&amp;rsquo;ll add your commit to Homebrew. Note that the PR status may show up as &amp;ldquo;Closed&amp;rdquo; instead of &amp;ldquo;Merged&amp;rdquo; because of the way we merge contributions. Don&amp;rsquo;t worry: you will still get author credit in the actual merged commit.</source>
          <target state="translated">모든 의견이 해결되고 변경 사항이 포함되는 경우 (우리는 대부분의 변경 사항을 포함 함) 커밋을 Homebrew에 추가합니다. PR 상태는 기여를 병합하는 방식으로 인해 &quot;병합&quot;대신 &quot;폐쇄 됨&quot;으로 표시 될 수 있습니다. 걱정하지 마십시오. 실제 병합 커밋에서 저자 크레딧을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="884558920533969ab9d45bdd85d922cd387083c0" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created the pull request in the appropriate Homebrew repository your commit(s) will be tested on our continuous integration servers, showing a green check mark if everything passed or a red X if there were failures. Maintainers will review your pull request and provide feedback about any changes that need to be made before it can be merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d526a48ca60cce0a74662e048548fd341aa86b6a" translate="yes" xml:space="preserve">
          <source>Once your tap is installed, Homebrew will update it each time a user runs &lt;code&gt;brew update&lt;/code&gt;. Outdated formulae will be upgraded when a user runs &lt;code&gt;brew upgrade&lt;/code&gt;, like core formulae.</source>
          <target state="translated">탭이 설치되면 Homebrew는 사용자가 &lt;code&gt;brew update&lt;/code&gt; 를 실행할 때마다 업데이트 합니다. 사용자가 핵심 수식과 같은 &lt;code&gt;brew upgrade&lt;/code&gt; 실행하면 오래된 수식이 업그레이드됩니다 .</target>
        </trans-unit>
        <trans-unit id="e68fff91077318a77c4e91a20b57dba8ecf0e9b7" translate="yes" xml:space="preserve">
          <source>One formula per commit; one commit per formula.</source>
          <target state="translated">커밋 당 하나의 공식; 수 식당 하나의 커밋.</target>
        </trans-unit>
        <trans-unit id="521a2adf045794b7708fc1658b8da47260563be3" translate="yes" xml:space="preserve">
          <source>One of the most frequent errors that we&amp;rsquo;ve encountered is: &lt;code&gt;7003: Method does not exist.&lt;/code&gt; Since Ruby is a very dynamic language, methods can be defined in ways Sorbet cannot see statically. In such cases, check if the method exists at runtime, if not, then Sorbet has caught a future bug! But, it is also possible that even though a method exists at runtime, Sorbet cannot see it. In such cases, we use &lt;code&gt;*.rbi&lt;/code&gt; files. Read more about RBI files &lt;a href=&quot;https://sorbet.org/docs/rbi&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2570764c46bbe28e2eec17cbf28ffcb39a2baed7" translate="yes" xml:space="preserve">
          <source>One reason is executables go in &lt;code&gt;/usr/local/bin&lt;/code&gt;. Usually this isn&amp;rsquo;t a writable location. But if you installed Homebrew as we recommend, &lt;code&gt;/usr/local&lt;/code&gt; will be writable without sudo. So now you are good to install the development tools you need without risking the use of sudo.</source>
          <target state="translated">한 가지 이유는 실행 파일이 &lt;code&gt;/usr/local/bin&lt;/code&gt; 에 있습니다. 일반적으로 이것은 쓰기 가능한 위치가 아닙니다. 그러나 권장대로 Homebrew를 설치하면 &lt;code&gt;/usr/local&lt;/code&gt; 은 sudo없이 쓸 수 있습니다. 따라서 이제 sudo를 사용하지 않아도 필요한 개발 도구를 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="294b9ce0da0bb1081ceaa3dfe91ad453a9f10156" translate="yes" xml:space="preserve">
          <source>One space after periods, not two</source>
          <target state="translated">마침표 뒤에 한 칸씩 두 개가 아니라</target>
        </trans-unit>
        <trans-unit id="5f08c8c6cf7af6fcbb66bc17de8378bf39d22230" translate="yes" xml:space="preserve">
          <source>Only supports GitHub Actions as a CI provider. This is because Homebrew uses GitHub Actions and it&amp;rsquo;s freely available for public and private use with macOS and Linux workers.</source>
          <target state="translated">CI 제공자로서 GitHub 작업 만 지원합니다. Homebrew는 GitHub Actions를 사용하고 macOS 및 Linux 작업자와 함께 공용 및 개인용으로 무료로 사용할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ed396c292de9ca369292dcda6e3b8dba01369404" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; in the editor set by &lt;code&gt;EDITOR&lt;/code&gt; or &lt;code&gt;HOMEBREW_EDITOR&lt;/code&gt;, or open the Homebrew repository for editing if no formula is provided.</source>
          <target state="translated">&lt;code&gt;EDITOR&lt;/code&gt; 또는 &lt;code&gt;HOMEBREW_EDITOR&lt;/code&gt; 에서 설정 한 편집기에서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 열기 , 또는 어떤 공식이 제공되지 않은 경우 편집 브루 저장소를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="fe7887e7daebe54745cfb35daf53239a8ee14614" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s homepage in a browser, or open Homebrew&amp;rsquo;s own homepage if no formula is provided.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 열기&lt;em&gt;&lt;/em&gt; 브라우저에서의 홈페이지, 또는 어떤 공식이 제공되지 않은 경우 개방 브루 자신의 홈페이지.</target>
        </trans-unit>
        <trans-unit id="6cc6db3ff4657ed5d5ca6a3e4e849cc99446348f" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s homepage in a browser. If no formula is provided, open Homebrew&amp;rsquo;s own homepage in a browser.</source>
          <target state="translated">브라우저에서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 홈페이지를 엽니 다 . 수식이 제공되지 않으면 브라우저에서 Homebrew의 자체 홈페이지를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="517b02ea44181bbe9c89e1daa58dfc7b25f22600" translate="yes" xml:space="preserve">
          <source>Open a formula in the editor set by &lt;code&gt;EDITOR&lt;/code&gt; or &lt;code&gt;HOMEBREW_EDITOR&lt;/code&gt;, or open the Homebrew repository for editing if no &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; is provided.</source>
          <target state="translated">&lt;code&gt;EDITOR&lt;/code&gt; 또는 &lt;code&gt;HOMEBREW_EDITOR&lt;/code&gt; 에 의해 설정된 편집기에서 공식을 열거 나 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 이 제공 되지 않은 경우 편집을 위해 Homebrew 저장소를여십시오 .</target>
        </trans-unit>
        <trans-unit id="be0c936c27e64dc8300594163f9bae2898cf8cb3" translate="yes" xml:space="preserve">
          <source>Open the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; for editing.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 열기&lt;em&gt;&lt;/em&gt;편집을 위해 을 .</target>
        </trans-unit>
        <trans-unit id="d3aad595c8a0d752825a0dd3a392108155638636" translate="yes" xml:space="preserve">
          <source>Opting out</source>
          <target state="translated">탈퇴</target>
        </trans-unit>
        <trans-unit id="edda8f359b2955be732eb8f2c59acbc3aaf135f7" translate="yes" xml:space="preserve">
          <source>Optionally contains the URL root used to calculate bottle URLs. By default this is omitted and the Homebrew default bottle URL root is used. This may be useful for taps which wish to provide bottles for their formulae or to cater for a non-default &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt;.</source>
          <target state="translated">병 URL을 계산하는 데 사용되는 URL 루트를 선택적으로 포함합니다. 기본적으로 이것은 생략되고 Homebrew 기본 병 URL 루트가 사용됩니다. 이것은 공식에 병을 제공하거나 기본값이 아닌 &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt; 를 제공하려는 탭에 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c399c8f2e948df26e791514fe2cb3cae0e33aa95" translate="yes" xml:space="preserve">
          <source>Optionally contains the rebuild version of the bottle. Sometimes bottles may need be updated without bumping the version of the formula, e.g. a new patch was applied. In that case the rebuild will have a value of 1 or more.</source>
          <target state="translated">선택적으로 병의 재 구축 버전을 포함합니다. 경우에 따라 병의 공식 버전을 변경하지 않고 병을 업데이트해야 할 수도 있습니다 (예 : 새 패치 적용). 이 경우 재 구축 값은 1 이상입니다.</target>
        </trans-unit>
        <trans-unit id="3d63437249de66fe4df8c9632dc6167ae8c4e110" translate="yes" xml:space="preserve">
          <source>Optionally contains the value of &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt; in which the bottles were built. Most compiled software contains references to its compiled location so cannot be simply relocated anywhere on disk. If this value is &lt;code&gt;:any&lt;/code&gt; or &lt;code&gt;:any_skip_relocation&lt;/code&gt; this means that the bottle can be safely installed in any Cellar as it did not contain any references to its installation Cellar. This can be omitted if a bottle is compiled (as all default Homebrew ones are) for the default &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt; of &lt;code&gt;/usr/local/Cellar&lt;/code&gt;.</source>
          <target state="translated">선택적으로 병이 &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt; 의 값을 포함합니다 . 대부분의 컴파일 된 소프트웨어에는 컴파일 된 위치에 대한 참조가 포함되어 있으므로 디스크의 어느 위치로나 간단히 재배치 할 수 없습니다. 이 값이 &lt;code&gt;:any&lt;/code&gt; 또는 &lt;code&gt;:any_skip_relocation&lt;/code&gt; 인 경우 설치 Cellar에 대한 참조가 포함되어 있지 않으므로 병을 모든 Cellar에 안전하게 설치할 수 있습니다. &lt;code&gt;/usr/local/Cellar&lt;/code&gt; 의 기본 &lt;code&gt;HOMEBREW_CELLAR&lt;/code&gt; 에 대해 병이 컴파일되면 (모든 기본 Homebrew 병과 같이) 생략 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7fedc0f574ccdbe0ec062e8019155e3a39c4d748" translate="yes" xml:space="preserve">
          <source>Optionally contains the value of &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; in which the bottles were built. See description of &lt;code&gt;cellar&lt;/code&gt;. When &lt;code&gt;cellar&lt;/code&gt; is &lt;code&gt;:any&lt;/code&gt; or &lt;code&gt;:any_skip_relocation&lt;/code&gt; the prefix should be omitted.</source>
          <target state="translated">선택적으로 병이 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 의 값을 포함합니다 . &lt;code&gt;cellar&lt;/code&gt; 설명을 참조하십시오 . 경우 &lt;code&gt;cellar&lt;/code&gt; 이다 &lt;code&gt;:any&lt;/code&gt; 혹은 &lt;code&gt;:any_skip_relocation&lt;/code&gt; 이 접두어는 생략한다.</target>
        </trans-unit>
        <trans-unit id="cf312cfe514ffc6a2742c3a0ec1ca4c9231445db" translate="yes" xml:space="preserve">
          <source>Optionally returns a boolean to decide whether a bottle should be used for this formula. For example a bottle may break if another formula has been compiled with non-default options, so this method could check for that case and return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">선택적으로 부울을 반환하여이 수식에 병을 사용해야하는지 여부를 결정합니다. 예를 들어, 다른 수식이 기본 옵션이 아닌 옵션으로 컴파일 된 경우 병이 깨질 수 있으므로이 메서드는 해당 사례를 확인하고 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ca204e2f6e67e979373f5dcdca235e5156cee46" translate="yes" xml:space="preserve">
          <source>Options were passed to the install command, i.e. &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt; will use a bottled version of the formula, but &lt;code&gt;brew install --enable-bar &amp;lt;formula&amp;gt;&lt;/code&gt; will trigger a source build.</source>
          <target state="translated">옵션은 install 명령으로 전달되었습니다. 즉, &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt; 은 병에 포함 된 수식 버전을 사용하지만 &lt;code&gt;brew install --enable-bar &amp;lt;formula&amp;gt;&lt;/code&gt; 는 소스 빌드를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="ed12c03c5da04af72853a16ddf25bd92e7f5df5e" translate="yes" xml:space="preserve">
          <source>Or everything:</source>
          <target state="translated">또는 모든 것 :</target>
        </trans-unit>
        <trans-unit id="86b6289776ad881f9f31ba8a41e3313d522d6612" translate="yes" xml:space="preserve">
          <source>Or upgrade a specific formula with:</source>
          <target state="translated">또는 다음을 사용하여 특정 수식을 업그레이드하십시오.</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="80ce2430c688547935460fde21c740c9c1b1d537" translate="yes" xml:space="preserve">
          <source>Originally Homebrew was a build-from-source package manager and all user environment variables and non-Homebrew-installed software were available to builds. Since then Homebrew added &lt;code&gt;Requirement&lt;/code&gt;s to specify dependencies on non-Homebrew software (such as those provided by &lt;code&gt;brew cask&lt;/code&gt; like X11/XQuartz), the &lt;code&gt;superenv&lt;/code&gt; build system to strip out unspecified dependencies, environment filtering to stop the user environment leaking into Homebrew builds and &lt;code&gt;default_formula&lt;/code&gt; to specify that a &lt;code&gt;Requirement&lt;/code&gt; can be satisfied by a particular formula.</source>
          <target state="translated">원래 Homebrew는 소스에서 빌드 패키지 관리자였으며 모든 사용자 환경 변수 및 Homebrew가 설치되지 않은 소프트웨어를 빌드 할 수있었습니다. Homebrew는 Homebrew 이외의 소프트웨어 (예 : X11 / XQuartz와 같은 &lt;code&gt;brew cask&lt;/code&gt; 에서 제공하는 소프트웨어)에 대한 종속성을 지정하기 위해 &lt;code&gt;Requirement&lt;/code&gt; 추가 한 이후 &lt;code&gt;superenv&lt;/code&gt; 빌드 시스템은 지정되지 않은 종속성을 제거하고 사용자 환경이 Homebrew 빌드로 누출되는 것을 막기위한 환경 필터링 및 특정 수식 으로 &lt;code&gt;Requirement&lt;/code&gt; 을 충족 할 수 있도록 지정하는 &lt;code&gt;default_formula&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f68f85132e3eca188f0a2089c7dae0a8722ad2a5" translate="yes" xml:space="preserve">
          <source>Other executable scripts</source>
          <target state="translated">다른 실행 가능한 스크립트</target>
        </trans-unit>
        <trans-unit id="fb4f7ded83dd4c5da3fb71e65892abc16eabcd65" translate="yes" xml:space="preserve">
          <source>Our binary packages (bottles) are built on &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; and hosted by &lt;a href=&quot;https://bintray.com/linuxbrew&quot;&gt;Bintray&lt;/a&gt;.</source>
          <target state="translated">우리의 바이너리 패키지 (병)에 내장되어 &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; 및 주최 &lt;a href=&quot;https://bintray.com/linuxbrew&quot;&gt;Bintray&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77650f1d1dd134480bb8c46897514672fcbf0032" translate="yes" xml:space="preserve">
          <source>Our binary packages (bottles) are built on &lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions&lt;/a&gt; and hosted by &lt;a href=&quot;https://bintray.com/linuxbrew&quot;&gt;Bintray&lt;/a&gt;.</source>
          <target state="translated">바이너리 패키지 (병)는 &lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions를&lt;/a&gt; 기반으로 하며 &lt;a href=&quot;https://bintray.com/linuxbrew&quot;&gt;Bintray에서&lt;/a&gt; 호스팅합니다 . .</target>
        </trans-unit>
        <trans-unit id="1b7e19f7591ba4a7cc76f1a0e507aa6feab3cea9" translate="yes" xml:space="preserve">
          <source>Our policy is that formulae in the core tap (&lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt;) must be open-source with an &lt;a href=&quot;https://opensource.org/licenses&quot;&gt;OSI-approved license&lt;/a&gt; and either built from source or produce cross-platform binaries (e.g. Java, Mono). Binary-only formulae should go to &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew/cask&lt;/a&gt;.</source>
          <target state="translated">우리의 정책은 핵심 탭 ( &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew / core&lt;/a&gt; )의 공식 은 &lt;a href=&quot;https://opensource.org/licenses&quot;&gt;OSI 승인 라이센스를&lt;/a&gt; 가진 오픈 소스 여야 하고 소스에서 빌드되거나 크로스 플랫폼 바이너리 (예 : Java, Mono)를 생성해야합니다. 이진 전용 수식은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew / cask&lt;/a&gt; 로 이동해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a8a836ee759d60d5e1a528395b028a4bd02b5572" translate="yes" xml:space="preserve">
          <source>Our policy is that formulae in the core tap (&lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt;) must be open-source with an &lt;a href=&quot;https://wiki.debian.org/DFSGLicenses&quot;&gt;Debian Free Software Guidelines license&lt;/a&gt; and either built from source or produce cross-platform binaries (e.g. Java, Mono). Binary-only formulae should go to &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew/cask&lt;/a&gt;.</source>
          <target state="translated">우리의 정책은 코어 탭 ( &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew / core&lt;/a&gt; )의 공식 은 &lt;a href=&quot;https://wiki.debian.org/DFSGLicenses&quot;&gt;Debian Free Software Guidelines 라이선스&lt;/a&gt; 가있는 오픈 소스 여야하며 소스 에서 빌드하거나 교차 플랫폼 바이너리 (예 : Java, Mono)를 생성 해야한다는 것 입니다. 바이너리 전용 공식은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew / cask&lt;/a&gt; 로 이동해야합니다. .</target>
        </trans-unit>
        <trans-unit id="a37b33ad61e1cbd9397b179aca8fdd79493674b9" translate="yes" xml:space="preserve">
          <source>Output this many lines of output on formula &lt;code&gt;system&lt;/code&gt; failures.</source>
          <target state="translated">이 많은 출력 라인을 공식 &lt;code&gt;system&lt;/code&gt; 에 출력 오류 .</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="63d550dc4c21db0d033198b3569b5479061d595c" translate="yes" xml:space="preserve">
          <source>PLC: Project Leadership Committee</source>
          <target state="translated">PLC : 프로젝트 리더십위원회</target>
        </trans-unit>
        <trans-unit id="e84493f1e73d6d0eb8e99349b7d6b45334d69cb3" translate="yes" xml:space="preserve">
          <source>PRs that fix style and usage throughout a document or multiple documents are okay and encouraged. PRs for just one or two style changes are a bit much.</source>
          <target state="translated">문서 나 여러 문서에서 스타일과 사용법을 수정하는 PR은 좋습니다. 하나 또는 두 개의 스타일 변경에 대한 PR은 약간입니다.</target>
        </trans-unit>
        <trans-unit id="7efd2e6dc5719371f61e44dcc0b7530b7fc5091d" translate="yes" xml:space="preserve">
          <source>Packages are installed according to their formulae, which live in &lt;code&gt;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula&lt;/code&gt;. Check out a simple one, e.g. &lt;code&gt;brew edit etl&lt;/code&gt; (or &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/etl.rb&quot;&gt;&lt;code&gt;etl&lt;/code&gt;&lt;/a&gt;) or a more advanced one, e.g. &lt;code&gt;brew edit git&lt;/code&gt; (or &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/git.rb&quot;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">패키지는 &lt;code&gt;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula&lt;/code&gt; 에있는 공식에 따라 설치 됩니다. 간단한 것, 예를 들어 &lt;code&gt;brew edit etl&lt;/code&gt; (또는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/etl.rb&quot;&gt; &lt;code&gt;etl&lt;/code&gt; &lt;/a&gt; ) 또는 더 고급 것, 예를 들어 &lt;code&gt;brew edit git&lt;/code&gt; (또는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/git.rb&quot;&gt; &lt;code&gt;git&lt;/code&gt; &lt;/a&gt; )을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ffe9de78357b53fd6d271d77dc7b7689f06a0d31" translate="yes" xml:space="preserve">
          <source>Packages are installed according to their formulae, which live in &lt;code&gt;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula&lt;/code&gt;. Check out a simple one, e.g. &lt;code&gt;brew edit etl&lt;/code&gt; (or &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/etl.rb&quot;&gt;&lt;code&gt;etl&lt;/code&gt;&lt;/a&gt;) or a more advanced one, e.g. &lt;code&gt;brew edit git&lt;/code&gt; (or &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/git.rb&quot;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">패키지는 &lt;code&gt;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula&lt;/code&gt; 에있는 공식에 따라 설치 됩니다. 간단한 &lt;code&gt;brew edit etl&lt;/code&gt; ( 예 : brew edit etl (또는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/etl.rb&quot;&gt; &lt;code&gt;etl&lt;/code&gt; &lt;/a&gt; )) 또는 더 고급 인 것 (예 : &lt;code&gt;brew edit git&lt;/code&gt; (또는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/git.rb&quot;&gt; &lt;code&gt;git&lt;/code&gt; &lt;/a&gt; ))을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="547e2275b5ed46d042cbd458d223d769d557d769" translate="yes" xml:space="preserve">
          <source>Pass the given retry count to &lt;code&gt;--retry&lt;/code&gt; when invoking &lt;code&gt;curl&lt;/code&gt;(1).</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; 을 호출 할 때 주어진 재시도 횟수를 &lt;code&gt;--retry&lt;/code&gt; 에 전달합니다. (1)을 합니다.</target>
        </trans-unit>
        <trans-unit id="e49e27a4cb6baf4cf168b794814dc5ab99f9761a" translate="yes" xml:space="preserve">
          <source>Paste at a terminal prompt:</source>
          <target state="translated">터미널 프롬프트에 붙여 넣기 :</target>
        </trans-unit>
        <trans-unit id="1441985a96b3de7cacd576a7c4375eb0dfac4e25" translate="yes" xml:space="preserve">
          <source>Patches</source>
          <target state="translated">Patches</target>
        </trans-unit>
        <trans-unit id="b938bca835e68e61835a83be2b4d0894b66fa435" translate="yes" xml:space="preserve">
          <source>Patches can also be embedded by passing a string. This makes it possible to provide multiple embedded patches while making only some of them conditional.</source>
          <target state="translated">문자열을 전달하여 패치를 포함 할 수도 있습니다. 이를 통해 여러 개의 내장 패치를 제공하면서 일부 패치 만 조건부로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5ea31e3cf5224fb12a916cbca81e23042f69d50" translate="yes" xml:space="preserve">
          <source>Perform a substring search of cask tokens and formula names for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;. If &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is flanked by slashes, it is interpreted as a regular expression. The search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is extended online to &lt;code&gt;homebrew/core&lt;/code&gt; and &lt;code&gt;homebrew/cask&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 대한 cask 토큰 및 수식 이름의 하위 문자열 검색을 수행 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 옆에 슬래시가 있으면 정규식으로 해석됩니다. &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 검색 은 온라인에서 &lt;code&gt;homebrew/core&lt;/code&gt; 및 &lt;code&gt;homebrew/cask&lt;/code&gt; 로 확장 됩니다.</target>
        </trans-unit>
        <trans-unit id="a455cccd652d0abc1c8fd978f134a5998aa6768c" translate="yes" xml:space="preserve">
          <source>Perform a substring search of cask tokens and formula names for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;. If &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is flanked by slashes, it is interpreted as a regular expression. The search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is extended online to &lt;code&gt;homebrew/core&lt;/code&gt; and &lt;code&gt;homebrew/cask&lt;/code&gt;. If no search term is provided, all locally available formulae are listed.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 대한 cask 토큰 및 수식 이름의 하위 문자열 검색을 수행 &lt;em&gt;합니다&lt;/em&gt; . &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 옆에 슬래시가 있으면 정규식으로 해석됩니다. &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 검색 은 온라인에서 &lt;code&gt;homebrew/core&lt;/code&gt; 및 &lt;code&gt;homebrew/cask&lt;/code&gt; 로 확장됩니다. 됩니다. 검색어가 제공되지 않으면 로컬에서 사용 가능한 모든 공식이 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="298e37b6784a9d891cd28b46248ad662b94b05c7" translate="yes" xml:space="preserve">
          <source>Perform a substring search of cask tokens and formula names for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;. If &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is surrounded with slashes, then it is interpreted as a regular expression. The search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is extended online to &lt;code&gt;homebrew/core&lt;/code&gt; and &lt;code&gt;homebrew/cask&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 대한 캐스 크 토큰 및 수식 이름의 하위 문자열 검색을 수행하십시오 . 경우 &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 슬래시로 둘러싸여 있으며, 다음은 정규 표현식으로 해석됩니다. &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 검색은 &lt;code&gt;homebrew/core&lt;/code&gt; 및 &lt;code&gt;homebrew/cask&lt;/code&gt; 로 온라인으로 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd9afcefb4b8b8ae95780131f08d72075a3bfdba" translate="yes" xml:space="preserve">
          <source>Perform a substring search of cask tokens and formula names for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt;. If &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is surrounded with slashes, then it is interpreted as a regular expression. The search for &lt;em&gt;&lt;code&gt;text&lt;/code&gt;&lt;/em&gt; is extended online to &lt;code&gt;homebrew/core&lt;/code&gt; and &lt;code&gt;homebrew/cask&lt;/code&gt;. If no search term is given, all locally available formulae are listed.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 대한 캐스 크 토큰 및 수식 이름의 하위 문자열 검색을 수행하십시오 . 경우 &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 슬래시로 둘러싸여 있으며, 다음은 정규 표현식으로 해석됩니다. &lt;em&gt; &lt;code&gt;text&lt;/code&gt; &lt;/em&gt; 검색은 &lt;code&gt;homebrew/core&lt;/code&gt; 및 &lt;code&gt;homebrew/cask&lt;/code&gt; 로 온라인으로 확장됩니다 . 검색어가 제공되지 않으면 로컬에서 사용 가능한 모든 공식이 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="dd4b5c37790c1c4a9b35f3068d26a15c0e88394f" translate="yes" xml:space="preserve">
          <source>Periods at the ends of list items where most items in that list are complete sentences</source>
          <target state="translated">해당 목록의 대부분의 항목이 완전한 문장 인 목록 항목의 끝에있는 기간</target>
        </trans-unit>
        <trans-unit id="6aefdf2378f6b6a95c90f7497b1abb985d8932bf" translate="yes" xml:space="preserve">
          <source>Perl CPAN modules without sudo</source>
          <target state="translated">sudo가없는 Perl CPAN 모듈</target>
        </trans-unit>
        <trans-unit id="93cc2fd052246ca54d84712de7a47b953f59d2a8" translate="yes" xml:space="preserve">
          <source>Personal pronouns</source>
          <target state="translated">인칭 대명사</target>
        </trans-unit>
        <trans-unit id="aaefcf9a29c9c11764c11109e49a109be62cdd92" translate="yes" xml:space="preserve">
          <source>Pin the specified &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;, preventing them from being upgraded when issuing the &lt;code&gt;brew upgrade&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; command. See also &lt;code&gt;unpin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew upgrade&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 명령을 실행할 때 업그레이드되지 않도록 지정된 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 고정하십시오 . &lt;code&gt;unpin&lt;/code&gt; 도 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82a012b4d578f0a429bf2c7486a90fd2d05a0cd3" translate="yes" xml:space="preserve">
          <source>Placeholders inside code snippets are marked up with &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; brackets</source>
          <target state="translated">코드 스 니펫 내부의 자리 표시자는 &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 괄호 로 표시 됩니다</target>
        </trans-unit>
        <trans-unit id="d1ac15a8b207dd667ad315b7c421fff88a90753d" translate="yes" xml:space="preserve">
          <source>Please note that our preferred commit message format for simple version updates is &amp;ldquo;&lt;code&gt;&amp;lt;FORMULA_NAME&amp;gt; &amp;lt;NEW_VERSION&amp;gt;&lt;/code&gt;&amp;rdquo;, e.g. &amp;ldquo;&lt;code&gt;source-highlight 3.1.8&lt;/code&gt;&amp;rdquo; but &lt;code&gt;devel&lt;/code&gt; version updates should have the commit message suffixed with &lt;code&gt;(devel)&lt;/code&gt;, e.g. &amp;ldquo;&lt;code&gt;nginx 1.9.1 (devel)&lt;/code&gt;&amp;rdquo;. If updating both &lt;code&gt;stable&lt;/code&gt; and &lt;code&gt;devel&lt;/code&gt;, the format should be a concatenation of these two forms, e.g. &amp;ldquo;&lt;code&gt;x264 r2699, r2705 (devel)&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">노트는 간단한 버전 업데이트를위한 우리의 커밋 선호 메시지 형식인지 &quot;하십시오 &lt;code&gt;&amp;lt;FORMULA_NAME&amp;gt; &amp;lt;NEW_VERSION&amp;gt;&lt;/code&gt; &quot;예 &quot; &lt;code&gt;source-highlight 3.1.8&lt;/code&gt; &quot;하지만 &lt;code&gt;devel&lt;/code&gt; 버전 업데이트는이 접미사로 메시지를 저지해야한다 &lt;code&gt;(devel)&lt;/code&gt; , 예를 들어 &quot; &lt;code&gt;nginx 1.9.1 (devel)&lt;/code&gt; &amp;rdquo;. &lt;code&gt;stable&lt;/code&gt; 과 &lt;code&gt;devel&lt;/code&gt; 을 모두 업데이트하는 경우 형식은이 두 형식 (예 :&amp;ldquo; &lt;code&gt;x264 r2699, r2705 (devel)&lt;/code&gt; &amp;rdquo; 의 연결 형식이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="921ea08aa6dce0c22052ca13a066a31523db98d7" translate="yes" xml:space="preserve">
          <source>Please note that our preferred commit message format for simple version updates is &amp;ldquo;&lt;code&gt;&amp;lt;FORMULA_NAME&amp;gt; &amp;lt;NEW_VERSION&amp;gt;&lt;/code&gt;&amp;rdquo;, e.g. &amp;ldquo;&lt;code&gt;source-highlight 3.1.8&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">간단한 버전 업데이트에 대해 선호하는 커밋 메시지 형식은&amp;ldquo; &lt;code&gt;&amp;lt;FORMULA_NAME&amp;gt; &amp;lt;NEW_VERSION&amp;gt;&lt;/code&gt; &amp;rdquo;, 예를 들어&amp;ldquo; &lt;code&gt;source-highlight 3.1.8&lt;/code&gt; &amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="42adc84f395e974dfad1befb77503beb73c6c1e6" translate="yes" xml:space="preserve">
          <source>Policy for non-brewed Python bindings</source>
          <target state="translated">양조되지 않은 Python 바인딩에 대한 정책</target>
        </trans-unit>
        <trans-unit id="c8a6a2552540ee4abe7119c5a93223c51be01437" translate="yes" xml:space="preserve">
          <source>Post a comment on your pull request if you&amp;rsquo;ve provided all the requested changes/information and it hasn&amp;rsquo;t been merged after a week. Post a comment on your pull request if you&amp;rsquo;re stuck and need help.</source>
          <target state="translated">요청 된 모든 변경 / 정보를 제공했으며 1 주일 후에 병합되지 않은 경우 풀 요청에 의견을 게시하십시오. 문제가 발생하여 도움이 필요한 경우 풀 요청에 의견을 게시하십시오.</target>
        </trans-unit>
        <trans-unit id="e88f0c98b0a089c591cb4ceb01ed57dd4ed0020f" translate="yes" xml:space="preserve">
          <source>Pour bottle (&lt;code&gt;pour_bottle?&lt;/code&gt;)</source>
          <target state="translated">병을 따르십시오 ( &lt;code&gt;pour_bottle?&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bbe47199bc31c0827076800050ef8962d6666eb0" translate="yes" xml:space="preserve">
          <source>Pre-built &lt;strong&gt;Keg&lt;/strong&gt; used instead of building from source</source>
          <target state="translated">사전 구축 &lt;strong&gt;나무통이&lt;/strong&gt; 아닌 소스에서 건물의 사용</target>
        </trans-unit>
        <trans-unit id="834a45df5a4707316d514cfcfc3d69c4ea689224" translate="yes" xml:space="preserve">
          <source>Pre-downloading a file for a formula</source>
          <target state="translated">수식 파일 미리 다운로드</target>
        </trans-unit>
        <trans-unit id="cfc46011d135e800cd70d060dd4fa8e54ba0b70f" translate="yes" xml:space="preserve">
          <source>Prefer Markdown over other markup formats unless their specific features are needed</source>
          <target state="translated">특정 기능이 필요하지 않은 경우 다른 마크 업 형식보다 마크 다운을 선호</target>
        </trans-unit>
        <trans-unit id="451150ce1cd353ed97ba73c884fb0aaf90ca013d" translate="yes" xml:space="preserve">
          <source>Prefer a &amp;ldquo;loose&amp;rdquo; comma style: &amp;ldquo;when in doubt, leave it out&amp;rdquo; unless needed for clarity</source>
          <target state="translated">명확성을 위해 필요하지 않은 경우 &quot;느슨한&quot;쉼표 스타일을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2d36875a4d22c7628b2b30e3fb533c9ded24276a" translate="yes" xml:space="preserve">
          <source>Preferred file format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebc6e6e8fb97f57a0ce1df7645f6bba88c3ac1a" translate="yes" xml:space="preserve">
          <source>Prefix (&lt;code&gt;prefix&lt;/code&gt;)</source>
          <target state="translated">접두사 ( &lt;code&gt;prefix&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c309b3758b7a5377957dbc5b154a97b179b98007" translate="yes" xml:space="preserve">
          <source>Prefix all download URLs, including those for bottles, with this variable. For example, &lt;code&gt;HOMEBREW_ARTIFACT_DOMAIN=http://localhost:8080&lt;/code&gt; will cause a formula with the URL &lt;code&gt;https://example.com/foo.tar.gz&lt;/code&gt; to instead download from &lt;code&gt;http://localhost:8080/example.com/foo.tar.gz&lt;/code&gt;.</source>
          <target state="translated">병용 URL을 포함한 모든 다운로드 URL 앞에이 변수를 붙입니다. 예를 들어, &lt;code&gt;HOMEBREW_ARTIFACT_DOMAIN=http://localhost:8080&lt;/code&gt; 은 URL이 &lt;code&gt;https://example.com/foo.tar.gz&lt;/code&gt; 인 수식 을 대신 &lt;code&gt;http://localhost:8080/example.com/foo.tar.gz&lt;/code&gt; 에서 다운로드하도록합니다 . tar.gz .</target>
        </trans-unit>
        <trans-unit id="68721e94fe18f3adbd4bddaa7221c4139a1d0b01" translate="yes" xml:space="preserve">
          <source>Pretty-print a single formula&amp;rsquo;s info</source>
          <target state="translated">단일 공식 정보를 예쁘게 인쇄</target>
        </trans-unit>
        <trans-unit id="92e0f5ffb6264179cf64f547670424d2295ecb2e" translate="yes" xml:space="preserve">
          <source>Print a Markdown summary of Homebrew&amp;rsquo;s GitHub Sponsors, suitable for pasting into a README.</source>
          <target state="translated">README에 붙여 넣기에 적합한 Homebrew의 GitHub 스폰서 마크 다운 요약을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="188ddc59f5ede2ea198a8f1fc16354b8235c5dab" translate="yes" xml:space="preserve">
          <source>Print export statements. When run in a shell, this installation of Homebrew will be added to your &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;MANPATH&lt;/code&gt;, and &lt;code&gt;INFOPATH&lt;/code&gt;.</source>
          <target state="translated">수출 명세서를 인쇄합니다. 쉘에서 실행하면이 Homebrew 설치가 &lt;code&gt;PATH&lt;/code&gt; , &lt;code&gt;MANPATH&lt;/code&gt; 및 &lt;code&gt;INFOPATH&lt;/code&gt; 에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="8ca16c546b3d83252b166bb95173d5b5dd4cf993" translate="yes" xml:space="preserve">
          <source>Print help for &lt;code&gt;cask&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;cask&lt;/code&gt; 명령에 대한 도움말을 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="f024ecc4226804196dc64ede7391ca07fc01fedf" translate="yes" xml:space="preserve">
          <source>Print the merged pull requests on Homebrew/brew between two Git refs. If no &lt;em&gt;&lt;code&gt;previous_tag&lt;/code&gt;&lt;/em&gt; is provided it defaults to the latest tag. If no &lt;em&gt;&lt;code&gt;end_ref&lt;/code&gt;&lt;/em&gt; is provided it defaults to &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">두 Git 참조 사이의 Homebrew / brew에 병합 된 pull 요청을 인쇄합니다. &lt;em&gt; &lt;code&gt;previous_tag&lt;/code&gt; &lt;/em&gt; 가 제공 되지 않으면 기본값은 최신 태그입니다. &lt;em&gt; &lt;code&gt;end_ref&lt;/code&gt; &lt;/em&gt; 가 제공 되지 않으면 기본값은 &lt;code&gt;origin/master&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3943bdee6e501fa0d2274160253ed89060193f62" translate="yes" xml:space="preserve">
          <source>Print the version number of Homebrew, Homebrew/homebrew-core and Homebrew/homebrew-cask (if tapped) to standard output and exit.</source>
          <target state="translated">Homebrew, Homebrew / homebrew-core 및 Homebrew / homebrew-cask (탭된 경우)의 버전 번호를 표준 출력으로 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="1d85d5d8d5cb56048368d655f58323ce08c5c587" translate="yes" xml:space="preserve">
          <source>Print the version numbers of Homebrew, Homebrew/homebrew-core and Homebrew/homebrew-cask (if tapped) to standard output.</source>
          <target state="translated">Homebrew, Homebrew / homebrew-core 및 Homebrew / homebrew-cask (탭한 경우)의 버전 번호를 표준 출력으로 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="490f2dc15767cefd932cebf2a27a75178032fcef" translate="yes" xml:space="preserve">
          <source>Print this text before the installation summary of each successful build.</source>
          <target state="translated">각 성공적인 빌드의 설치 요약 전에이 텍스트를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="b29a5c3fab44e9e40e7c8edaf9e1d46af7298a81" translate="yes" xml:space="preserve">
          <source>Prints export statements - run them in a shell and this installation of Homebrew will be included into your &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;MANPATH&lt;/code&gt; and &lt;code&gt;INFOPATH&lt;/code&gt;.</source>
          <target state="translated">내보내기 명령문을 인쇄합니다 (쉘에서 실행).이 Homebrew 설치는 &lt;code&gt;PATH&lt;/code&gt; , &lt;code&gt;MANPATH&lt;/code&gt; 및 &lt;code&gt;INFOPATH&lt;/code&gt; 에 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="c9b2d447aeccb98047e5e8b0b307dc71a548bf08" translate="yes" xml:space="preserve">
          <source>Pros: gets a wider reach and user feedback</source>
          <target state="translated">장점 : 더 넓은 도달 범위 및 사용자 피드백 제공</target>
        </trans-unit>
        <trans-unit id="76a28c543cf5d7fdbbb487ff397b256b3205d32c" translate="yes" xml:space="preserve">
          <source>Prose Style Guidelines</source>
          <target state="translated">산문 스타일 지침</target>
        </trans-unit>
        <trans-unit id="3d66b987a5b163b8b2576c65bdcada296b21b8b3" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;--help&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--help&lt;/code&gt; 제공</target>
        </trans-unit>
        <trans-unit id="8528bcb0cf1367dcbc956c901fe505e9033d39e4" translate="yes" xml:space="preserve">
          <source>Publish bottles for a pull request with GitHub Actions. Requires write access to the repository.</source>
          <target state="translated">GitHub 작업을 사용하여 pull 요청에 대한 병을 게시합니다. 저장소에 대한 쓰기 액세스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="30ab8d084e2209d47a1dc198c8de1e251f390a94" translate="yes" xml:space="preserve">
          <source>Pull Requests</source>
          <target state="translated">풀 요청</target>
        </trans-unit>
        <trans-unit id="8f7f57b519fc9bc5683b4808641d3b33f53b6f9d" translate="yes" xml:space="preserve">
          <source>Push</source>
          <target state="translated">Push</target>
        </trans-unit>
        <trans-unit id="4735b25f66b0082048e0af8835ea2488a4015fd2" translate="yes" xml:space="preserve">
          <source>Push to your remote fork&amp;rsquo;s branch and the pull request:</source>
          <target state="translated">원격 포크의 분기와 풀 요청으로 푸시하십시오.</target>
        </trans-unit>
        <trans-unit id="93a84f9c5ee592e302ba32da0efcecada9cbe2a6" translate="yes" xml:space="preserve">
          <source>Put a link for each pull request in the other pull request so the maintainers can merge them both at once.</source>
          <target state="translated">관리자가 각 풀 요청에 대한 링크를 다른 풀 요청에 넣어 유지 관리자가 두 풀 요청을 동시에 병합 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="439ee60e73ac187a5de3106ac4fce4967d3bd951" translate="yes" xml:space="preserve">
          <source>Python 2 libraries do not need a &lt;code&gt;depends_on &quot;python@2&quot;&lt;/code&gt; declaration; they will be built with the system Python, but should still be usable with any other Python 2.7. If this is not the case, it&amp;rsquo;s an upstream bug; &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;here&amp;rsquo;s some advice for resolving it&lt;/a&gt;.</source>
          <target state="translated">파이썬 2 라이브러리는 &lt;code&gt;depends_on &quot;python@2&quot;&lt;/code&gt; 선언이 필요하지 않습니다 . 그것들은 시스템 파이썬으로 빌드되지만 다른 파이썬 2.7에서도 여전히 사용할 수 있어야합니다. 그렇지 않은 경우 업스트림 버그입니다. &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;이를 해결하기위한 몇 가지 조언이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2eded588df5323d099710a43d414a563d1af3896" translate="yes" xml:space="preserve">
          <source>Python 2 libraries need a &lt;code&gt;uses_from_macos &quot;python@2&quot;&lt;/code&gt; declaration; they will be built with the system Python, but should still be usable with any other Python 2.7. If this is not the case, it&amp;rsquo;s an upstream bug; &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;here&amp;rsquo;s some advice for resolving it&lt;/a&gt;.</source>
          <target state="translated">Python 2 라이브러리에는 &lt;code&gt;uses_from_macos &quot;python@2&quot;&lt;/code&gt; 선언이 필요합니다 . 시스템 Python으로 빌드되지만 다른 Python 2.7에서도 계속 사용할 수 있어야합니다. 그렇지 않은 경우 업스트림 버그입니다. &lt;a href=&quot;https://blog.tim-smith.us/2015/09/python-extension-modules-os-x/&quot;&gt;이 문제를 해결하기위한 몇 가지 조언이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57751a2f7ffa845b2c4e9515828daeff41986e7b" translate="yes" xml:space="preserve">
          <source>Python 3.x</source>
          <target state="translated">파이썬 3.x</target>
        </trans-unit>
        <trans-unit id="07d37d487d8b367ed6008e5e9bda50e05eb12b9d" translate="yes" xml:space="preserve">
          <source>Python 3.x or Python 2.x</source>
          <target state="translated">파이썬 3.x 또는 파이썬 2.x</target>
        </trans-unit>
        <trans-unit id="f58181c5b9f8b066baa284eb70b0a64f171f3492" translate="yes" xml:space="preserve">
          <source>Python 3.y also searches for modules in:</source>
          <target state="translated">Python 3.y는 다음에서 모듈을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a30205c661dc467e1131f23f9eed0157fd775b4d" translate="yes" xml:space="preserve">
          <source>Python declarations</source>
          <target state="translated">파이썬 선언</target>
        </trans-unit>
        <trans-unit id="736cad1c7cfe7437b4d10abcdc3177a599e49fde" translate="yes" xml:space="preserve">
          <source>Python for Formula Authors</source>
          <target state="translated">공식 저자를위한 파이썬</target>
        </trans-unit>
        <trans-unit id="0f96b23df1ae879fb55de77f60f3e87766896b74" translate="yes" xml:space="preserve">
          <source>Python libraries exist to be imported by other Python modules; they are often dependencies of Python applications. They are usually no more than incidentally useful in a terminal. Examples of libraries are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/py2cairo.rb&quot;&gt;&lt;code&gt;py2cairo&lt;/code&gt;&lt;/a&gt; and the bindings that are installed by &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/protobuf.rb&quot;&gt;&lt;code&gt;protobuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python 라이브러리는 다른 Python 모듈에서 가져 오기 위해 존재합니다. 종종 Python 애플리케이션의 종속성입니다. 그들은 일반적으로 터미널에서 우연히 유용하지 않습니다. 라이브러리의 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/py2cairo.rb&quot;&gt; &lt;code&gt;py2cairo&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/protobuf.rb&quot;&gt; &lt;code&gt;protobuf&lt;/code&gt; 에&lt;/a&gt; 의해 설치된 바인딩입니다 .</target>
        </trans-unit>
        <trans-unit id="c8c0223bcd4edf5b6520cb947878be2bc1c8b703" translate="yes" xml:space="preserve">
          <source>Python libraries exist to be imported by other Python modules; they are often dependencies of Python applications. They are usually no more than incidentally useful in a terminal. Examples of libraries are &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/py2cairo.rb&quot;&gt;&lt;code&gt;py2cairo&lt;/code&gt;&lt;/a&gt; and the bindings that are installed by &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/protobuf.rb&quot;&gt;&lt;code&gt;protobuf --with-python&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파이썬 라이브러리는 다른 파이썬 모듈이 가져 오기 위해 존재합니다. 그들은 종종 파이썬 애플리케이션의 의존성입니다. 그것들은 보통 터미널에서 우연히 유용 할뿐입니다. 라이브러리의 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/py2cairo.rb&quot;&gt; &lt;code&gt;py2cairo&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/protobuf.rb&quot;&gt; &lt;code&gt;protobuf --with-python&lt;/code&gt; 에&lt;/a&gt; 의해 설치되는 바인딩입니다 .</target>
        </trans-unit>
        <trans-unit id="127db04cb6cc919666cd540c78604f5c84d06bd9" translate="yes" xml:space="preserve">
          <source>Python packages (eggs) without sudo</source>
          <target state="translated">sudo가없는 Python 패키지 (계란)</target>
        </trans-unit>
        <trans-unit id="ee65c41630e4ca2d851879e7430c45e25ced6ce7" translate="yes" xml:space="preserve">
          <source>Python packages (eggs) without sudo using system&amp;rsquo;s Python</source>
          <target state="translated">시스템의 Python을 사용하는 sudo가없는 Python 패키지 (계란)</target>
        </trans-unit>
        <trans-unit id="10ce3cf68e2e2eb29f35216cef1678d75443d4ed" translate="yes" xml:space="preserve">
          <source>Python: &lt;code&gt;easy-install.pth&lt;/code&gt; cannot be linked</source>
          <target state="translated">Python : &lt;code&gt;easy-install.pth&lt;/code&gt; 를 연결할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="1a2fa87571bfcfd2abe2ac5bb101e2cc80677880" translate="yes" xml:space="preserve">
          <source>Querying &lt;code&gt;brew&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;brew&lt;/code&gt; 쿼리</target>
        </trans-unit>
        <trans-unit id="8a902a436f864e3da9fa8abcd6f527ec385cca43" translate="yes" xml:space="preserve">
          <source>Querying brew</source>
          <target state="translated">추출 쿼리</target>
        </trans-unit>
        <trans-unit id="dfc39f982c57cbf4c6b987d1bb6748a35fc24a06" translate="yes" xml:space="preserve">
          <source>Quickly remove something from &lt;code&gt;/usr/local&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/usr/local&lt;/code&gt; 에서 빠르게 무언가를 제거하십시오</target>
        </trans-unit>
        <trans-unit id="525102cd154eee0851913427b35b5c77e4349099" translate="yes" xml:space="preserve">
          <source>Rather than changing the rights on &lt;code&gt;/Library/Python&lt;/code&gt;, we recommend the following options:</source>
          <target state="translated">&lt;code&gt;/Library/Python&lt;/code&gt; 에 대한 권한을 변경하는 대신 다음 옵션을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="965f557799d7692adc621fd8aef2b7f01dc5b384" translate="yes" xml:space="preserve">
          <source>Rather than merging formulae for either of these cases at this time, we&amp;rsquo;re listing them on this page. If you come up with a formula for a new version of GCC or cross-compiler suite, please link it in here.</source>
          <target state="translated">현재 이러한 경우 중 하나에 대한 수식을 병합하는 대신이 페이지에 나열합니다. 새 버전의 GCC 또는 크로스 컴파일러 제품군에 대한 공식이 나오면 여기에 링크하십시오.</target>
        </trans-unit>
        <trans-unit id="0ddfd34b70654780de1c225530ef6fc04ca03505" translate="yes" xml:space="preserve">
          <source>Rather than merging in brews for either of these cases at this time, we&amp;rsquo;re listing them on this page. If you come up with a formula for a new version of GCC or cross-compiler suite, please link it in here.</source>
          <target state="translated">현재 이러한 사례 중 하나에 대한 맥주 양조를 병합하는 대신이 페이지에이를 나열하고 있습니다. 새 버전의 GCC 또는 크로스 컴파일러 제품군에 대한 공식이 나오면 여기에 링크하십시오.</target>
        </trans-unit>
        <trans-unit id="5364d949d0f8de9e62a51ca38cfe3a41bb8ebccc" translate="yes" xml:space="preserve">
          <source>Read our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;contribution guidelines&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/brew/blob/HEAD/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;기여 가이드 라인을&lt;/a&gt; 읽어보세요 .</target>
        </trans-unit>
        <trans-unit id="e7ddc82201217689ece6e07880298800c9fb5652" translate="yes" xml:space="preserve">
          <source>Read our &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;contribution guidelines&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md#contributing-to-homebrew&quot;&gt;기여 지침을&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="2ba8b07ccf0af795e2ae2112a6c8031c7346ef0b" translate="yes" xml:space="preserve">
          <source>Read through the &lt;a href=&quot;common-issues&quot;&gt;Common Issues&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;common-issues&quot;&gt;일반적인 문제를&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="bbba391692406012c61e0ef3e145ab9f9cd9689f" translate="yes" xml:space="preserve">
          <source>Rebuild version (&lt;code&gt;rebuild&lt;/code&gt;)</source>
          <target state="translated">버전을 다시 ( &lt;code&gt;rebuild&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7f2d5f2240b6ffdc2389bd302a640dbd60b33040" translate="yes" xml:space="preserve">
          <source>Refer to these guidelines to make decisions about style and usage in your own writing for Homebrew documents and communication.</source>
          <target state="translated">Homebrew 문서 및 커뮤니케이션을 위해 직접 작성하여 스타일과 사용법을 결정하려면이 지침을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ff38d70bf3a0d5ec7e5ed5c3161aa803b04a2173" translate="yes" xml:space="preserve">
          <source>Regenerate the UUID used for Homebrew&amp;rsquo;s analytics.</source>
          <target state="translated">Homebrew의 분석에 사용 된 UUID를 다시 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">Releases</target>
        </trans-unit>
        <trans-unit id="69eeff65a38e883e3ef9e42c9a8b5341589e4dda" translate="yes" xml:space="preserve">
          <source>Remove a tapped formula repository.</source>
          <target state="translated">탭한 공식 저장소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="819dabae383d86da82af9a4bad3c9d75be1a6321" translate="yes" xml:space="preserve">
          <source>Remove a tapped repository.</source>
          <target state="translated">탭된 저장소를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="69ac272a573998fcc83b7bd59d125867794b13bd" translate="yes" xml:space="preserve">
          <source>Remove all unused services.</source>
          <target state="translated">사용하지 않는 모든 서비스를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="8c0d2ab0b97c6e25abe8b183d13203c9c4c032d1" translate="yes" xml:space="preserve">
          <source>Remove stale lock files and outdated downloads for all formulae and casks, and remove old versions of installed formulae. If arguments are specified, only do this for the given formulae and casks. Removes all downloads more than 120 days old. This can be adjusted with &lt;code&gt;HOMEBREW_CLEANUP_MAX_AGE_DAYS&lt;/code&gt;.</source>
          <target state="translated">모든 공식 및 캐스 크에 대한 오래된 잠금 파일 및 오래된 다운로드를 제거하고 설치된 공식의 이전 버전을 제거합니다. 인수가 지정된 경우 지정된 공식 및 캐스 크에 대해서만이 작업을 수행하십시오. 120 일이 지난 모든 다운로드를 제거합니다. 이것은 &lt;code&gt;HOMEBREW_CLEANUP_MAX_AGE_DAYS&lt;/code&gt; 로 조정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3895d94cece66d853b6a00fe73955a2885976715" translate="yes" xml:space="preserve">
          <source>Remove stale lock files and outdated downloads for formulae and casks, and remove old versions of installed formulae. If arguments are specified, only do this for the specified formulae and casks.</source>
          <target state="translated">오래된 잠금 파일과 수식 및 통에 대한 오래된 다운로드를 제거하고 설치된 수식의 이전 버전을 제거하십시오. 인수가 지정된 경우 지정된 공식 및 통에 대해서만이 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6d3b86e66db25d719dfb766aff81e000a1c24f74" translate="yes" xml:space="preserve">
          <source>Remove symlinks for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; from Homebrew&amp;rsquo;s prefix. This can be useful for temporarily disabling a formula: &lt;code&gt;brew unlink&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;em&gt;&lt;code&gt;commands&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&amp;amp;&amp;amp; brew link&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">Homebrew의 접두사에서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 대한 심볼릭 링크를 제거 합니다. 이것은 공식을 일시적으로 비활성화하는 데 유용 할 수 있습니다 : &lt;code&gt;brew unlink&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;em&gt; &lt;code&gt;commands&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&amp;amp;&amp;amp; brew link&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d083924a360c7687d1e5c2f21aeb05ffe18355f5" translate="yes" xml:space="preserve">
          <source>Remove symlinks for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; from the Homebrew prefix. This can be useful for temporarily disabling a formula: &lt;code&gt;brew unlink&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;em&gt;&lt;code&gt;commands&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&amp;amp;&amp;amp;
brew link&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">Homebrew 접두사에서 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 심볼릭 링크를 제거하십시오 . 이는 공식을 일시적으로 비활성화하는 데 유용 할 수 있습니다. &lt;code&gt;brew unlink&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;em&gt; &lt;code&gt;commands&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&amp;amp;&amp;amp; brew link&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62eda8de2f541b63cbe07f893211d03c53953921" translate="yes" xml:space="preserve">
          <source>Rename A Formula</source>
          <target state="translated">수식 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="5a928668640c1b0526f8e0f4ee1a8bcf4b139634" translate="yes" xml:space="preserve">
          <source>Rename the formula file and its class to a new formula. The new name must meet all the usual rules of formula naming. Fix any test failures that may occur due to the stricter requirements for new formulae than existing formulae (i.e. &lt;code&gt;brew audit --strict&lt;/code&gt; must pass for that formula).</source>
          <target state="translated">수식 파일과 해당 클래스의 이름을 새 수식으로 바꿉니다. 새 이름은 모든 일반적인 수식 명명 규칙을 충족해야합니다. 기존 공식보다 새로운 공식에 대한 엄격한 요구 사항으로 인해 발생할 수있는 테스트 실패를 수정하십시오 (즉, 해당 &lt;code&gt;brew audit --strict&lt;/code&gt; 가 통과해야 함).</target>
        </trans-unit>
        <trans-unit id="ee8f19fcd97f7fd1868740bf909253d96e31b61b" translate="yes" xml:space="preserve">
          <source>Renaming a Formula</source>
          <target state="translated">수식 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="a19552627d7753b3f591f2e3ae06e42398307d5d" translate="yes" xml:space="preserve">
          <source>Repository naming conventions and assumptions</source>
          <target state="translated">리포지토리 명명 규칙 및 가정</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="6ec967732370948a9edcb25dc33e852fef948517" translate="yes" xml:space="preserve">
          <source>Rerun the post-install steps for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 설치 후 단계를 다시 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="04967378abc494ebec50a597e7d3c96b83908959" translate="yes" xml:space="preserve">
          <source>Resolving Type Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="3e58aabc7490cc8d9b340046af50f7175be273e3" translate="yes" xml:space="preserve">
          <source>Retrieve new changes to the &lt;code&gt;master&lt;/code&gt; branch:</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 브랜치 에 대한 새로운 변경 사항을 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c9cb3fc3ac940f27c9f4bfa1bf649ffe26f25d1" translate="yes" xml:space="preserve">
          <source>Root URL (&lt;code&gt;root_url&lt;/code&gt;)</source>
          <target state="translated">루트 URL ( &lt;code&gt;root_url&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="65cb69b0bef5182ecff1d9ffe16bea46017656b8" translate="yes" xml:space="preserve">
          <source>Ruby Gems, Python Eggs and Perl Modules</source>
          <target state="translated">루비 보석, 파이썬 계란 및 펄 모듈</target>
        </trans-unit>
        <trans-unit id="5a187386735f01022086549fa4aa85b5a98c7441" translate="yes" xml:space="preserve">
          <source>Ruby commands</source>
          <target state="translated">루비 명령</target>
        </trans-unit>
        <trans-unit id="880e7ed2a7c0ab67a78e60dc7131ebf8a08afa1e" translate="yes" xml:space="preserve">
          <source>Ruby: &lt;code&gt;bad interpreter: /usr/bin/ruby&lt;/code&gt;</source>
          <target state="translated">루비 : &lt;code&gt;bad interpreter: /usr/bin/ruby&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="651242cf1818b4562da0b9a468fbfc339004ff13" translate="yes" xml:space="preserve">
          <source>Ruby: &lt;code&gt;bad interpreter: /usr/bin/ruby^M: no such file or directory&lt;/code&gt;</source>
          <target state="translated">루비 : &lt;code&gt;bad interpreter: /usr/bin/ruby^M: no such file or directory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b0ddbf75c77700e889484eb7aac5d018455b3c6" translate="yes" xml:space="preserve">
          <source>Rubygems without sudo</source>
          <target state="translated">sudo가없는 Rubygems</target>
        </trans-unit>
        <trans-unit id="228d5d7ff3513c4f7e607c2451cbc910e9e09e24" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brew audit --strict --new-formula --online &amp;lt;formula&amp;gt;&lt;/code&gt; with your formula. If any errors occur, correct them in your formula and run the audit again. The audit should finish without any errors by the end of this step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa5aa14ba173003e4fe8ceebcbb237e2307921e" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brew create&lt;/code&gt; with a URL to the source tarball:</source>
          <target state="translated">소스 tarball에 대한 URL로 &lt;code&gt;brew create&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e8f3ed1cc62f0b91714cf4ec76d7dda75dab4a9" translate="yes" xml:space="preserve">
          <source>Run Homebrew with a Ruby profiler, e.g. &lt;code&gt;brew prof readall&lt;/code&gt;.</source>
          <target state="translated">Ruby 프로파일 러 (예 : &lt;code&gt;brew prof readall&lt;/code&gt; )로 Homebrew를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ca90761287dbadf6dfd34bc59ebdfdfc020959b" translate="yes" xml:space="preserve">
          <source>Run Homebrew with the Ruby profiler e.g. &lt;code&gt;brew prof readall&lt;/code&gt;.</source>
          <target state="translated">Ruby 프로파일 러 (예 : &lt;code&gt;brew prof readall&lt;/code&gt; )로 Homebrew를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f7988e99a9841248a2a99d8eed3b88f01ce95ef" translate="yes" xml:space="preserve">
          <source>Run Homebrew&amp;rsquo;s unit and integration tests.</source>
          <target state="translated">Homebrew의 단위 및 통합 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="5639550b0581f2eb1d16d6aef3a441ebdd3c6d4f" translate="yes" xml:space="preserve">
          <source>Run a Ruby instance with Homebrew&amp;rsquo;s libraries loaded e.g. &lt;code&gt;brew ruby -e &quot;puts
:gcc.f.deps&quot;&lt;/code&gt; or &lt;code&gt;brew ruby script.rb&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;brew ruby -e &quot;puts :gcc.f.deps&quot;&lt;/code&gt; 또는 &lt;code&gt;brew ruby script.rb&lt;/code&gt; 와 같이로드 된 Homebrew의 라이브러리를 사용하여 Ruby 인스턴스를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="70b554956fa52ce47d1a11290b81136cd00806fc" translate="yes" xml:space="preserve">
          <source>Run a Ruby instance with Homebrew&amp;rsquo;s libraries loaded, e.g. &lt;code&gt;brew ruby -e &quot;puts :gcc.f.deps&quot;&lt;/code&gt; or &lt;code&gt;brew ruby script.rb&lt;/code&gt;.</source>
          <target state="translated">Homebrew의 라이브러리가로드 된 Ruby 인스턴스를 실행합니다 (예 : &lt;code&gt;brew ruby -e &quot;puts :gcc.f.deps&quot;&lt;/code&gt; 또는 &lt;code&gt;brew ruby script.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c606ec399f184870f81e684e320b07ae25414af" translate="yes" xml:space="preserve">
          <source>Run a test of &lt;code&gt;brew update&lt;/code&gt; with a new repository clone. If no arguments are passed, use &lt;code&gt;origin/master&lt;/code&gt; as the start commit.</source>
          <target state="translated">새로운 리포지토리 클론 으로 &lt;code&gt;brew update&lt;/code&gt; 테스트를 실행하십시오 . 인수가 전달되지 않으면 &lt;code&gt;origin/master&lt;/code&gt; 를 시작 커밋으로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3749c0252c07ec7b018a1b349afc13186fe03870" translate="yes" xml:space="preserve">
          <source>Run a test of &lt;code&gt;brew update&lt;/code&gt; with a new repository clone. If no options are passed, use &lt;code&gt;origin/master&lt;/code&gt; as the start commit.</source>
          <target state="translated">새 저장소 복제본 으로 &lt;code&gt;brew update&lt;/code&gt; 테스트를 실행합니다 . 옵션이 전달되지 않으면 &lt;code&gt;origin/master&lt;/code&gt; 를 시작 커밋으로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ee0825650c8388729c0c65806b881e78a60a3911" translate="yes" xml:space="preserve">
          <source>Run an external command in an isolated build environment based on the &lt;code&gt;Brewfile&lt;/code&gt; dependencies.</source>
          <target state="translated">&lt;code&gt;Brewfile&lt;/code&gt; 종속성을 기반으로 격리 된 빌드 환경에서 외부 명령을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="b526f2002952b713b9a8806e91381ae54e8d2083" translate="yes" xml:space="preserve">
          <source>Run the service &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; without registering to launch at login (or boot).</source>
          <target state="translated">서비스 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 실행&lt;em&gt;&lt;/em&gt;로그인 (또는 부팅)시 시작하도록 등록하지 않고 을 .</target>
        </trans-unit>
        <trans-unit id="5274f1725bc015151201917b3cf781676da5fa80" translate="yes" xml:space="preserve">
          <source>Run the test method provided by an installed formula. There is no standard output or return code, but generally it should notify the user if something is wrong with the installed formula.</source>
          <target state="translated">설치된 공식에서 제공 한 테스트 방법을 실행하십시오. 표준 출력 또는 리턴 코드는 없지만 일반적으로 설치된 공식에 문제가있는 경우 사용자에게 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="47aa14f8a2cd4184dd22f92605c126bb7ef5c2ed" translate="yes" xml:space="preserve">
          <source>Run your formula&amp;rsquo;s test using &lt;code&gt;brew test &amp;lt;formula&amp;gt;&lt;/code&gt; with your formula. Your test should finish without any errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6346df78108d20d47381b005c2a4365b2b75fe" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;npm install&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="238ab6298a037fffd9620a25ebf45715d71bf408" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;setup.py&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;setup.py&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="2545989a050467477ac52f135227af914644a6f6" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="ec2f45b66d5d2b70cb5c4c50e0e9bfa0ecc40145" translate="yes" xml:space="preserve">
          <source>SPECIFYING CASKS</source>
          <target state="translated">캐스 크 지정</target>
        </trans-unit>
        <trans-unit id="c4cceb369bcd4ccae44f74610a304afd68d55232" translate="yes" xml:space="preserve">
          <source>SPECIFYING FORMULAE</source>
          <target state="translated">사양 지정</target>
        </trans-unit>
        <trans-unit id="a7a5d6a90a5b581314432609a1aaaae6f408bf9a" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SYNOPSIS</target>
        </trans-unit>
        <trans-unit id="5a28348140aa37d0deb33ddc98bf5faf885d4441" translate="yes" xml:space="preserve">
          <source>Search the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;Homebrew/homebrew-core issue tracker&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/issues&quot;&gt;Homebrew/linuxbrew-core issue tracker&lt;/a&gt; to see if someone else has already reported the same issue.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues&quot;&gt;Homebrew / homebrew-core 이슈 트래커&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Homebrew/linuxbrew-core/issues&quot;&gt;Homebrew / linuxbrew-core 이슈 트래커&lt;/a&gt; 를 검색하여 다른 사람이 이미 동일한 문제를보고했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ab27e9cd7370cc7497d83e5c9373b77bc78cc8bb" translate="yes" xml:space="preserve">
          <source>Search the &lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew discussion forum&lt;/a&gt; or &lt;a href=&quot;https://discourse.brew.sh/&quot;&gt;Discourse&lt;/a&gt; to see if any discussions have started about the issue.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/homebrew/discussions/discussions&quot;&gt;Homebrew 토론 포럼&lt;/a&gt; 또는 &lt;a href=&quot;https://discourse.brew.sh/&quot;&gt;Discourse&lt;/a&gt; 를 검색하여 문제에 대한 토론이 시작되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="819b1a7e521c6dfd571890a5f52210be50bc4138" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Homebrew/homebrew-aliases&quot;&gt;homebrew/aliases&lt;/a&gt; for an example of a tap with external commands.</source>
          <target state="translated">외부 명령이있는 탭의 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-aliases&quot;&gt;홈 브루 / 별칭&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b84b76644296ab54d7c3f37155669822e366bf9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew/cask&lt;/a&gt; for an example of a tap with a &lt;code&gt;Casks&lt;/code&gt; subdirectory.</source>
          <target state="translated">&lt;code&gt;Casks&lt;/code&gt; 하위 디렉토리 가있는 탭의 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;homebrew / cask&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04a135e327ade206e660b3ae68674d77cc8756bf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; for an example of a tap with a &lt;code&gt;Formula&lt;/code&gt; subdirectory.</source>
          <target state="translated">&lt;code&gt;Formula&lt;/code&gt; 하위 디렉토리 가있는 탭의 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew / core&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="779bf5899a2c41220c8a2c7e86a4904e82a3dabf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/cmake.rb&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; for an example of a formula with a good test. The formula writes a basic &lt;code&gt;CMakeLists.txt&lt;/code&gt; file into the test directory then calls CMake to generate Makefiles. This test checks that CMake doesn&amp;rsquo;t e.g. segfault during basic operation.</source>
          <target state="translated">좋은 테스트가있는 공식의 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/cmake.rb&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 . 이 수식은 기본 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 테스트 디렉터리에 쓴 다음 CMake를 호출하여 Makefile을 생성합니다. 이 테스트는 기본 작업 중에 CMake가 예를 들어 segfault가 아닌지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bf993b3bb220ff9c4d5fc66292f9bb9405e2bc8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/cmake.rb&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; for an example of a formula with a good test. The formula writes a basic &lt;code&gt;CMakeLists.txt&lt;/code&gt; file into the test directory then calls CMake to generate Makefiles. This test checks that CMake doesn&amp;rsquo;t e.g. segfault during basic operation.</source>
          <target state="translated">테스트가 좋은 수식의 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/cmake.rb&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 . 이 수식은 기본 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 테스트 디렉토리에 쓴 다음 CMake를 호출하여 Makefile을 생성합니다. 이 테스트는 CMake가 기본 작동 중에 segfault를 포함하지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4e7fba8db3df59a083af6797139787b42a94ad4b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;OS::Mac::STANDARD_COMPILERS&lt;/code&gt; in &lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac.rb&quot;&gt;&lt;code&gt;Library/Homebrew/os/mac.rb&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac.rb&quot;&gt; &lt;code&gt;Library/Homebrew/os/mac.rb&lt;/code&gt; 의&lt;/a&gt; &lt;code&gt;OS::Mac::STANDARD_COMPILERS&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="906c7eed6eff86d4144027aa3b7ae174372388e1" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;man brew&lt;/code&gt;</source>
          <target state="translated">참조 : &lt;code&gt;man brew&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d359fabb5b16f6d782b5fb4c1bc5eb6468717c33" translate="yes" xml:space="preserve">
          <source>See our issues on GitHub:</source>
          <target state="translated">GitHub 관련 문제를 확인하십시오 :</target>
        </trans-unit>
        <trans-unit id="e6e480ebde5a0425d7c3ae249b0b0e9ac27ee722" translate="yes" xml:space="preserve">
          <source>Send the email to the Homebrew TinyLetter email list (credentials are in 1Password).</source>
          <target state="translated">이메일을 Homebrew TinyLetter 이메일 목록으로 보내십시오 (자격 증명은 1 비밀번호입니다).</target>
        </trans-unit>
        <trans-unit id="ea8efac26ff58317749b091d12c64f2d5cc70483" translate="yes" xml:space="preserve">
          <source>Sentence case in section headings, not Title Case</source>
          <target state="translated">제목 케이스가 아닌 섹션 제목의 문장 케이스</target>
        </trans-unit>
        <trans-unit id="5c9863c64af1fea7612d034888c7f9f4b32a9f09" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, &lt;code&gt;all_proxy&lt;/code&gt;, &lt;code&gt;ftp_proxy&lt;/code&gt; and/or &lt;code&gt;no_proxy&lt;/code&gt; environment variables documented above.</source>
          <target state="translated">&lt;code&gt;https_proxy&lt;/code&gt; &lt;code&gt;http_proxy&lt;/code&gt; , https_proxy , &lt;code&gt;all_proxy&lt;/code&gt; , &lt;code&gt;ftp_proxy&lt;/code&gt; 및 / 또는 &lt;code&gt;no_proxy&lt;/code&gt; 환경 변수를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="14964aa283e2240f03e1c5cc6a5b3913bc541335" translate="yes" xml:space="preserve">
          <source>Set the Git author and committer email to this value.</source>
          <target state="translated">Git 작성자 및 커미터 이메일을이 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5555170f2500a0188a35cbac441098f8a682a060" translate="yes" xml:space="preserve">
          <source>Set the Git author and committer name to this value.</source>
          <target state="translated">Git 작성자 및 커미터 이름을이 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="e069258539025b4c3d7acb5dc05fcdc163e0d153" translate="yes" xml:space="preserve">
          <source>Set this to force Homebrew to use a particular &lt;code&gt;svn&lt;/code&gt; binary.</source>
          <target state="translated">Homebrew가 특정 &lt;code&gt;svn&lt;/code&gt; 바이너리 를 사용하도록하려면 이것을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="56adc78a3c1e7bfc38522384ae70b29c46738ff5" translate="yes" xml:space="preserve">
          <source>Set up your own fork of the Homebrew repository</source>
          <target state="translated">Homebrew 리포지토리의 자체 포크 설정</target>
        </trans-unit>
        <trans-unit id="f2d60095338eedffe22a5e6bfc7c02c2aea103b0" translate="yes" xml:space="preserve">
          <source>Setuptools can be updated via pip, without having to re-brew Python:</source>
          <target state="translated">Python을 다시 만들지 않고도 pip를 통해 Setuptools를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96e3d7ee5ab393b2aabd3b0f9ebd0161b7c0d48c" translate="yes" xml:space="preserve">
          <source>Setuptools can be updated via pip3, without having to re-brew Python:</source>
          <target state="translated">Python을 다시 만들지 않고도 pip3를 통해 Setuptools를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a5e6eef2e9049d6c20d887cde91a0203422699d" translate="yes" xml:space="preserve">
          <source>Setuptools provides the &lt;code&gt;easy_install&lt;/code&gt; command, which is an end-user package management tool that fetches and installs packages from PyPI, the Python Package Index. &lt;code&gt;pip&lt;/code&gt; is another, newer end-user package management tool, which is also provided outside the standard library. While pip supplants &lt;code&gt;easy_install&lt;/code&gt;, pip does not replace the other functionality of the setuptools module.</source>
          <target state="translated">Setuptools는 &lt;code&gt;easy_install&lt;/code&gt; 명령을 제공합니다.이 명령은 Python 패키지 색인 PyPI에서 패키지를 가져오고 설치하는 최종 사용자 패키지 관리 도구입니다. &lt;code&gt;pip&lt;/code&gt; 는 표준 라이브러리 외부에서도 제공되는 또 다른 최신 최종 사용자 패키지 관리 도구입니다. pip는 &lt;code&gt;easy_install&lt;/code&gt; 을 대체하지만 pip 는 setuptools 모듈의 다른 기능을 대체하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4cd71d339c4b5793d3fd54f2b9f9022bec8c93a3" translate="yes" xml:space="preserve">
          <source>Setuptools requires that SVEM is used in conjunction with &lt;code&gt;--record&lt;/code&gt;, which provides a list of files that can later be used to uninstall the package. We don&amp;rsquo;t need or want this because Homebrew can manage uninstallation but since setuptools demands it we comply. The Homebrew convention is to call the record file &amp;ldquo;installed.txt&amp;rdquo;.</source>
          <target state="translated">Setuptools를 사용하려면 SVEM을 --record와 함께 &lt;code&gt;--record&lt;/code&gt; 하며 나중에 패키지를 설치 제거하는 데 사용할 수있는 파일 목록을 제공합니다. Homebrew는 제거를 관리 할 수 ​​있기 때문에 필요하지 않거나 필요하지 않지만 setuptools에서이를 요구하므로이를 준수합니다. Homebrew 규칙은 레코드 파일&amp;ldquo;installed.txt&amp;rdquo;를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8f112448d7af70a393fc7288704e9a39012e1186" translate="yes" xml:space="preserve">
          <source>Setuptools, Pip, etc.</source>
          <target state="translated">설정 도구, 핍 등</target>
        </trans-unit>
        <trans-unit id="440454c23ef47b03b765e162289093fa49eaafc9" translate="yes" xml:space="preserve">
          <source>Should you later install the &lt;code&gt;bash-completion&lt;/code&gt; formula, this will automatically use its initialization script to read the completions files.</source>
          <target state="translated">나중에 &lt;code&gt;bash-completion&lt;/code&gt; 공식을 설치 하면 자동으로 초기화 스크립트를 사용하여 완료 파일을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="9881b758a61f69e12e04f96840ba14d1845eb3d3" translate="yes" xml:space="preserve">
          <source>Show Homebrew and system configuration info useful for debugging. If you file a bug report, you will be required to provide this information.</source>
          <target state="translated">디버깅에 유용한 Homebrew 및 시스템 구성 정보를 표시합니다. 버그 보고서를 제출하는 경우이 정보를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="20d50119c8c384282f0f483fe7551dcb37e85b90" translate="yes" xml:space="preserve">
          <source>Show Homebrew and system configuration useful for debugging. If you file a bug report, you will likely be asked for this information if you do not provide it.</source>
          <target state="translated">디버깅에 유용한 Homebrew 및 시스템 구성을 보여줍니다. 버그 보고서를 제출하면 제공하지 않은 경우이 정보를 요구할 것입니다.</target>
        </trans-unit>
        <trans-unit id="f63621bb2a7d6d244ee9309f88c3c0190ed9076b" translate="yes" xml:space="preserve">
          <source>Show a list of built-in and external commands.</source>
          <target state="translated">내장 및 외부 명령 목록을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="64eb628dc9c91d2ef5f0022816f13e6699fcc2ba" translate="yes" xml:space="preserve">
          <source>Show a summary of the Homebrew build environment as a plain list.</source>
          <target state="translated">Homebrew 빌드 환경의 요약을 일반 목록으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="90abe1653812a72c27dd2ac1907d617f57d57bdb" translate="yes" xml:space="preserve">
          <source>Show dependencies for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. Additional options specific to &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; may be appended to the command. When given multiple formula arguments, show the intersection of dependencies for each formula.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 대한 종속성을 &lt;em&gt;표시하십시오&lt;/em&gt; . &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 관련된 추가 옵션 이 명령에 추가 될 수 있습니다. 여러 수식 인수가 제공되면 각 수식에 대한 종속성의 교차점을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="c47c05017b41a9128d0756dc33f1d9ea052aa403" translate="yes" xml:space="preserve">
          <source>Show detailed information about one or more &lt;em&gt;&lt;code&gt;tap&lt;/code&gt;&lt;/em&gt;s.</source>
          <target state="translated">하나 이상의 &lt;em&gt; &lt;code&gt;tap&lt;/code&gt; &lt;/em&gt; 에 대한 자세한 정보를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="2420b8baded665416f01c2fba930c0fe8f2692c2" translate="yes" xml:space="preserve">
          <source>Show formulae that have an updated version available.</source>
          <target state="translated">사용 가능한 업데이트 버전이있는 수식을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="0b551cfbdd7593e7060e5402e9b88781171cd049" translate="yes" xml:space="preserve">
          <source>Show formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as a dependency (i.e. show dependents of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;). When given multiple formula arguments, show the intersection of formulae that use &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. By default, &lt;code&gt;uses&lt;/code&gt; shows all formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as a required or recommended dependency for their stable builds.</source>
          <target state="translated">수식을 종속성으로 지정하는 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 표시합니다 (예 : &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 종속 항목 &lt;em&gt;표시&lt;/em&gt; ). 여러 공식 인자가있을 때 사용하는 공식의 교차 보여 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; . 기본적으로 &lt;code&gt;uses&lt;/code&gt; 은 안정적인 빌드에 대한 필수 또는 권장 종속성으로 수식을 지정하는 모든 수식을 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c94e3bb7836fcdaa8d65ad59e8300f9388c0ab3b" translate="yes" xml:space="preserve">
          <source>Show install options specific to &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 특정한 설치 옵션을 &lt;em&gt;표시&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d86f35128320099469da566a958186c9025eb07b" translate="yes" xml:space="preserve">
          <source>Show installed formulae that are not dependencies of another installed formula.</source>
          <target state="translated">설치된 다른 수식에 종속되지 않은 설치된 수식을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b3ed4328e825f3e1814e831e58140f6e240fd9f7" translate="yes" xml:space="preserve">
          <source>Show lists of built-in and external commands.</source>
          <target state="translated">내장 및 외부 명령 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="975518001ad3fe6c48de13c50a2b51a13a2f2f7f" translate="yes" xml:space="preserve">
          <source>Show the &lt;code&gt;git log&lt;/code&gt; for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;, or show the log for the Homebrew repository if no formula is provided.</source>
          <target state="translated">표시 &lt;code&gt;git log&lt;/code&gt; 에 대한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; , 또는 어떤 공식이 제공되지 않으면 브루 저장소에 로그를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="36871e151a2dbeb37d79c4f46fca52dbfbfae748" translate="yes" xml:space="preserve">
          <source>Show the &lt;code&gt;git log&lt;/code&gt; for the given &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 대한 &lt;code&gt;git log&lt;/code&gt; 를 표시합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c699d354c249cf4f91e36bfe182a649fce318b6d" translate="yes" xml:space="preserve">
          <source>Show the formulae that specify &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; as a dependency. When given multiple formula arguments, show the intersection of formulae that use &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">지정한 공식보기 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 종속성으로합니다. 여러 공식 인자가있을 때 사용하는 공식의 교차 보여 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5408c0a53585f42c01928ea31d4af9802dd68100" translate="yes" xml:space="preserve">
          <source>Similarly, pip can be used to upgrade itself via:</source>
          <target state="translated">마찬가지로 pip는 다음을 통해 자체적으로 업그레이드하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbc556b705ad9e678eca52fe7620546a304307ad" translate="yes" xml:space="preserve">
          <source>Similarly, pip3 can be used to upgrade itself via:</source>
          <target state="translated">마찬가지로 pip3는 다음을 통해 자체적으로 업그레이드하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09bbaab82dc045b3adb04f42868a6376d323e0f4" translate="yes" xml:space="preserve">
          <source>Since Homebrew 1.0.0 most Homebrew users (those who haven&amp;rsquo;t run a &lt;code&gt;dev-cmd&lt;/code&gt; or set &lt;code&gt;HOMEBREW_DEVELOPER=1&lt;/code&gt;) require tags on the &lt;a href=&quot;https://github.com/homebrew/brew&quot;&gt;Homebrew/brew repository&lt;/a&gt; in order to get new versions of Homebrew. There are a few steps in making a new Homebrew release:</source>
          <target state="translated">Homebrew 1.0.0부터 대부분의 Homebrew 사용자 ( &lt;code&gt;dev-cmd&lt;/code&gt; 를 실행 하거나 &lt;code&gt;HOMEBREW_DEVELOPER=1&lt;/code&gt; 을 설정 하지 않은 사용자 )는 &lt;a href=&quot;https://github.com/homebrew/brew&quot;&gt;Homebrew / brew 저장소&lt;/a&gt; 에 태그를 필요 로하여 새로운 버전의 Homebrew를 가져옵니다. 새로운 Homebrew 릴리스를 만드는 데 몇 가지 단계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9304a18ecb45dbf28bdeadb4a84c37bd04998ab3" translate="yes" xml:space="preserve">
          <source>Since Sorbet does not automatically assume that Kernel is to be included in Modules, we may encounter many errors while trying to use methods like &lt;code&gt;puts&lt;/code&gt;, &lt;code&gt;ohai&lt;/code&gt;, &lt;code&gt;odebug&lt;/code&gt; et cetera. A simple workaround for this would be to add an extra &lt;code&gt;include Kernel&lt;/code&gt; line in the respective RBI file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304ce878d309834cceca383bc6e85013c89c79b8" translate="yes" xml:space="preserve">
          <source>Singular &amp;ldquo;they&amp;rdquo; when someone&amp;rsquo;s gender is unknown</source>
          <target state="translated">누군가의 성별을 알 수 없을 때 특이한&amp;ldquo;그들&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="48a13e0dad9a8ad3af92125642c06b14b9618f97" translate="yes" xml:space="preserve">
          <source>So it is easy to just move some files:</source>
          <target state="translated">따라서 일부 파일을 쉽게 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66734e1a3caefa4e2a35b2f83805fe504b89edf5" translate="yes" xml:space="preserve">
          <source>So why was I using sudo?</source>
          <target state="translated">왜 sudo를 사용 했습니까?</target>
        </trans-unit>
        <trans-unit id="96411cf5398907bce9045f6a375640f69701aa09" translate="yes" xml:space="preserve">
          <source>So, for Python 3.y.z, you&amp;rsquo;ll find it at &lt;code&gt;/usr/local/lib/python3.y/site-packages&lt;/code&gt;.</source>
          <target state="translated">따라서 Python 3.yz의 경우 &lt;code&gt;/usr/local/lib/python3.y/site-packages&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01f99c0218f6ee7ea75a5da372bfdbe62ff769aa" translate="yes" xml:space="preserve">
          <source>Software that can upgrade itself does not integrate well with Homebrew&amp;rsquo;s own upgrade functionality. The self-update functionality should be disabled (if possible without complicating the formula).</source>
          <target state="translated">자체적으로 업그레이드 할 수있는 소프트웨어는 Homebrew의 자체 업그레이드 기능과 잘 통합되지 않습니다. 자체 업데이트 기능을 비활성화해야합니다 (가능한 경우 수식을 복잡하게하지 않음).</target>
        </trans-unit>
        <trans-unit id="bf95d56501363ac0d9e6e2d0d81458c04c6356c8" translate="yes" xml:space="preserve">
          <source>Software that can upgrade itself does not integrate well with Homebrew&amp;rsquo;s own upgrade functionality. The self-update functionality should be disabled (while minimising complication to the formula).</source>
          <target state="translated">스스로 업그레이드 할 수있는 소프트웨어는 Homebrew의 자체 업그레이드 기능과 잘 통합되지 않습니다. 자동 업데이트 기능을 비활성화해야합니다 (공식의 복잡성을 최소화).</target>
        </trans-unit>
        <trans-unit id="3e949935054024769bd7d4f04984c47bd154fc98" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/a&gt;s can also take a string specifying their minimum version that the formula depends on.</source>
          <target state="translated">일부 &lt;a href=&quot;https://rubydoc.brew.sh/Requirement&quot;&gt; &lt;code&gt;Requirement&lt;/code&gt; &lt;/a&gt; 은 수식이 의존하는 최소 버전을 지정하는 문자열을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="db2f8fd322bc73bc9172cbb5ae3cf0355ec26e78" translate="yes" xml:space="preserve">
          <source>Some abbreviations (near-universally understood among our user base) are fine, though.</source>
          <target state="translated">그러나 일부 약어 (일반적으로 사용자 기반에서 이해되는)는 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="f794dd60645ff70c7d6273ffb6697cd7e448e5b8" translate="yes" xml:space="preserve">
          <source>Some advice for specific cases:</source>
          <target state="translated">특정 사례에 대한 몇 가지 조언 :</target>
        </trans-unit>
        <trans-unit id="f7985b2bb854285b0a5000e95c8bed7696bdffe1" translate="yes" xml:space="preserve">
          <source>Some formulae are marked as &amp;ldquo;keg-only&amp;rdquo;, meaning that installed files are not linked to the shared &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, etc. directories, as doing so can cause conflicts. Such formulae can be forced to link to the shared directories, but doing so is not recommended (and will cause &lt;code&gt;brew doctor&lt;/code&gt; to complain.)</source>
          <target state="translated">일부 수식은&amp;ldquo;keg-only&amp;rdquo;로 표시됩니다. 즉, 설치된 파일이 공유 &lt;code&gt;bin&lt;/code&gt; , &lt;code&gt;lib&lt;/code&gt; 등 디렉토리에 링크되어 있지 않으면 충돌이 발생할 수 있습니다. 이러한 공식은 공유 디렉토리에 강제로 링크 될 수 있지만 그렇게하는 것은 권장되지 않습니다 ( &lt;code&gt;brew doctor&lt;/code&gt; 가 불평하게 할 것입니다).</target>
        </trans-unit>
        <trans-unit id="18cde1691cdb3b6f0fc052af63142175628e41d6" translate="yes" xml:space="preserve">
          <source>Some formulae have multiple licenses that need to be combined in different ways. In these cases, a more complex license expression can be used. These expressions are based on the &lt;a href=&quot;https://spdx.github.io/spdx-spec/appendix-IV-SPDX-license-expressions/&quot;&gt;SPDX License Expression Guidelines&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38884f1c45ae86e83945bb8f38777436801fa633" translate="yes" xml:space="preserve">
          <source>Some formulae provide Python bindings.</source>
          <target state="translated">일부 수식은 Python 바인딩을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="48f00dfa3f32119ce40a32b3372e09e5274e2121" translate="yes" xml:space="preserve">
          <source>Some formulae provide Python bindings. Sometimes a &lt;code&gt;--with-python&lt;/code&gt; or &lt;code&gt;--with-python@2&lt;/code&gt; option has to be passed to &lt;code&gt;brew install&lt;/code&gt; in order to build the Python bindings. (Check with &lt;code&gt;brew options &amp;lt;formula&amp;gt;&lt;/code&gt;.)</source>
          <target state="translated">일부 수식은 Python 바인딩을 제공합니다. 때로는 파이썬 바인딩을 빌드하기 위해 &lt;code&gt;--with-python&lt;/code&gt; 또는 &lt;code&gt;--with-python@2&lt;/code&gt; 옵션을 &lt;code&gt;brew install&lt;/code&gt; 로 전달해야 합니다. ( &lt;code&gt;brew options &amp;lt;formula&amp;gt;&lt;/code&gt; 확인하십시오 .)</target>
        </trans-unit>
        <trans-unit id="0d727a03ad06c9296f571d13c3478d341654812c" translate="yes" xml:space="preserve">
          <source>Some formulae should not go in &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt;. But there are additional &lt;a href=&quot;interesting-taps-and-forks&quot;&gt;Interesting Taps and Forks&lt;/a&gt; and anyone can start their own!</source>
          <target state="translated">일부 수식은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core&quot;&gt;homebrew / core에&lt;/a&gt; 들어가서는 안됩니다 . 그러나 &lt;a href=&quot;interesting-taps-and-forks&quot;&gt;재미있는 탭과 포크&lt;/a&gt; 가 추가 되어 누구나 자신의 것을 시작할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="236691ed926b63c36e69d795d9f1d9211737aa8b" translate="yes" xml:space="preserve">
          <source>Some software installs to &lt;code&gt;man&lt;/code&gt; instead of &lt;code&gt;share/man&lt;/code&gt;, so check the output and add a &lt;code&gt;&quot;--mandir=#{man}&quot;&lt;/code&gt; to the &lt;code&gt;./configure&lt;/code&gt; line if needed.</source>
          <target state="translated">일부 소프트웨어는 &lt;code&gt;share/man&lt;/code&gt; &lt;code&gt;man&lt;/code&gt; 대신 man에 설치 되므로 출력을 확인하고 필요한 경우 &lt;code&gt;&quot;--mandir=#{man}&quot;&lt;/code&gt; 을 &lt;code&gt;./configure&lt;/code&gt; 행에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3a9335ebb9953efb2c7e9a8db53bed495a82e136" translate="yes" xml:space="preserve">
          <source>Some software requires a Fortran compiler. This can be declared by adding &lt;code&gt;depends_on &quot;gcc&quot;&lt;/code&gt; to a formula.</source>
          <target state="translated">일부 소프트웨어에는 포트란 컴파일러가 필요합니다. 이는 식에 &lt;code&gt;depends_on &quot;gcc&quot;&lt;/code&gt; 를 추가하여 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44960ef6fd57f6eafd53a724f63d943914c6164c" translate="yes" xml:space="preserve">
          <source>Some upstream software providers like to package their software in their own Homebrew tap. When their software is &lt;a href=&quot;acceptable-formulae&quot;&gt;eligible for Homebrew/homebrew-core&lt;/a&gt; we prefer to maintain software there for ease of updates, improved discoverability and use of tools such as &lt;a href=&quot;https://formulae.brew.sh&quot;&gt;formulae.brew.sh&lt;/a&gt;.</source>
          <target state="translated">일부 업스트림 소프트웨어 제공 업체는 자체 Homebrew 탭에서 소프트웨어를 패키징하는 것을 좋아합니다. 그들의 소프트웨어가 &lt;a href=&quot;acceptable-formulae&quot;&gt;Homebrew / homebrew-core에 적합&lt;/a&gt; 할 때 우리는 업데이트의 용이성, 향상된 검색 가능성 및 다음과 같은 도구의 사용을 위해 소프트웨어를 유지하는 것을 선호합니다.&lt;a href=&quot;https://formulae.brew.sh&quot;&gt; formulae.brew.sh&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9802440a96f474d3c8963420dc3b16f811ad8137" translate="yes" xml:space="preserve">
          <source>Sometimes a package fails to build when using a certain compiler. Since recent &lt;a href=&quot;xcode&quot;&gt;Xcode versions&lt;/a&gt; no longer include a GCC compiler we cannot simply force the use of GCC. Instead, the correct way to declare this is the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#fails_with-class_method&quot;&gt;&lt;code&gt;fails_with&lt;/code&gt;&lt;/a&gt; DSL method. A properly constructed &lt;a href=&quot;https://rubydoc.brew.sh/Formula#fails_with-class_method&quot;&gt;&lt;code&gt;fails_with&lt;/code&gt;&lt;/a&gt; block documents the latest compiler build version known to cause compilation to fail, and the cause of the failure. For example:</source>
          <target state="translated">특정 컴파일러를 사용할 때 패키지가 빌드되지 않는 경우가 있습니다. 최근 &lt;a href=&quot;xcode&quot;&gt;Xcode 버전&lt;/a&gt; 에는 더 이상 GCC 컴파일러가 포함되어 있지 않으므로 GCC를 강제로 사용할 수 없습니다. 대신 이것을 선언하는 올바른 방법은 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#fails_with-class_method&quot;&gt; &lt;code&gt;fails_with&lt;/code&gt; &lt;/a&gt; DSL 메소드입니다. 올바르게 구성된 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#fails_with-class_method&quot;&gt; &lt;code&gt;fails_with&lt;/code&gt; &lt;/a&gt; 블록은 컴파일 실패를 유발하는 것으로 알려진 최신 컴파일러 빌드 버전과 실패 원인을 문서화합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41bba544d490d1cccfc43c75a0901167b4cf51f0" translate="yes" xml:space="preserve">
          <source>Sometimes formulae have version schemes that change such that a direct comparison between two versions no longer produces the correct result. For example, a project might be version &lt;code&gt;13&lt;/code&gt; and then decide to become &lt;code&gt;1.0.0&lt;/code&gt;. As &lt;code&gt;13&lt;/code&gt; is translated to &lt;code&gt;13.0.0&lt;/code&gt; by our versioning system by default this requires intervention.</source>
          <target state="translated">때로는 수식에 버전 체계가있어 두 버전을 직접 비교해도 더 이상 올바른 결과가 나오지 않습니다. 예를 들어, 프로젝트는 버전 &lt;code&gt;13&lt;/code&gt; 일 수 있으며 &lt;code&gt;1.0.0&lt;/code&gt; 이되도록 결정합니다 . 로 &lt;code&gt;13&lt;/code&gt; 로 번역 &lt;code&gt;13.0.0&lt;/code&gt; 기본적으로 우리의 버전 관리 시스템이 개입을 필요로한다.</target>
        </trans-unit>
        <trans-unit id="752eb51281c5a181207cb8bc4fd81cb0220cefad" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s faster to download a file via means other than those strategies that are available as part of Homebrew. For example, Erlang provides a torrent that&amp;rsquo;ll let you download at 4&amp;ndash;5&amp;times; the normal HTTP method.</source>
          <target state="translated">때로는 Homebrew의 일부로 제공되는 전략 이외의 방법을 통해 파일을 다운로드하는 것이 더 빠릅니다. 예를 들어, Erlang은 토런트를 제공하여 일반 HTTP 방법의 4-5 배로 다운로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a7c033a47318261a9b09bb02e7ed0204027a904" translate="yes" xml:space="preserve">
          <source>Sometimes software and formulae need to be renamed. To rename a formula you need to:</source>
          <target state="translated">때로는 소프트웨어와 수식의 이름을 바꿔야합니다. 수식 이름을 바꾸려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="8455aec834c5bff73a82b4e67392e680d223c1ca" translate="yes" xml:space="preserve">
          <source>Sometimes there are exceptions</source>
          <target state="translated">때때로 예외가 있습니다</target>
        </trans-unit>
        <trans-unit id="0125ba1c7fe8ca39bc5ec73d4c2588dd43f49fe0" translate="yes" xml:space="preserve">
          <source>Sometimes there&amp;rsquo;s hard conflict between formulae, and it can&amp;rsquo;t be avoided or circumvented with &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt;&lt;code&gt;keg_only&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때로는 수식 사이에 어려운 충돌이 있으며 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#keg_only-class_method&quot;&gt; &lt;code&gt;keg_only&lt;/code&gt; &lt;/a&gt; 로 피하거나 우회 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="09476f2bccee3f769ece120187c351903c5e73b9" translate="yes" xml:space="preserve">
          <source>Sometimes we have to edit a &lt;code&gt;Makefile&lt;/code&gt; on-the-fly to use our prefix for the Python bindings using Homebrew&amp;rsquo;s &lt;a href=&quot;formula-cookbook#inreplace&quot;&gt;&lt;code&gt;inreplace&lt;/code&gt;&lt;/a&gt; helper method.</source>
          <target state="translated">때로는 Homebrew의 &lt;a href=&quot;formula-cookbook#inreplace&quot;&gt; &lt;code&gt;inreplace&lt;/code&gt; &lt;/a&gt; 도우미 메소드를 사용하여 Python 바인딩에 접두사를 사용하기 위해 &lt;code&gt;Makefile&lt;/code&gt; 을 즉석에서 편집해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e77b7952b5eed389d8319a788e839325c7e613f4" translate="yes" xml:space="preserve">
          <source>Sorbet elements in the Homebrew Codebase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db4e33812518e088202e32e7da890a84d29ca12" translate="yes" xml:space="preserve">
          <source>Sorbet reports type errors along with an error reference code, which can be used to look up more information on how to debug the error, or what causes the error in the Sorbet documentation. Here is how we debug some common type errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a5d87a6060257d0c3bd2bff4cb3ec35f39d2ae" translate="yes" xml:space="preserve">
          <source>Special exceptions are OpenSSL and LibreSSL. Things that use either &lt;em&gt;should&lt;/em&gt; be built using Homebrew&amp;rsquo;s shipped equivalent and our Brew Test Bot&amp;rsquo;s post-install &lt;code&gt;audit&lt;/code&gt; will warn if it detects you haven&amp;rsquo;t done this.</source>
          <target state="translated">OpenSSL 및 LibreSSL은 예외입니다. 둘 중 하나를 사용하는 것은 Homebrew의 동급 제품을 사용하여 구축 &lt;em&gt;해야&lt;/em&gt; 하며, Brew Test Bot의 설치 후 &lt;code&gt;audit&lt;/code&gt; 는이 작업을 수행하지 않은 경우이를 경고합니다.</target>
        </trans-unit>
        <trans-unit id="730425dae7065d85803bf548f4ceb66faa7e5612" translate="yes" xml:space="preserve">
          <source>Special requirements for native addons</source>
          <target state="translated">기본 애드온에 대한 특별 요구 사항</target>
        </trans-unit>
        <trans-unit id="68af3b22e46fec96824822c217a4cf3f3c5b319b" translate="yes" xml:space="preserve">
          <source>Specify a license by passing it to the &lt;code&gt;license&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c14ad9c8a009ba6f575ad7bb302921b457c8510" translate="yes" xml:space="preserve">
          <source>Specifying Forbidden Licenses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b45e00f13e66fe0fc5d203223bcb8184fad6e71" translate="yes" xml:space="preserve">
          <source>Specifying a License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d8fd3fe8a2365a0ff438104d1d83b09d4cc373" translate="yes" xml:space="preserve">
          <source>Specifying conflicts with other formulae</source>
          <target state="translated">다른 수식과의 충돌 지정</target>
        </trans-unit>
        <trans-unit id="bb9145747d9cd8b4e7694c2518fea02e5fded628" translate="yes" xml:space="preserve">
          <source>Specifying gems, Python modules, Go projects, etc. as dependencies</source>
          <target state="translated">gem, Python 모듈, Go 프로젝트 등을 종속성으로 지정</target>
        </trans-unit>
        <trans-unit id="a2bb9452587c2a3b1769a82c6f6f49f15b7567db" translate="yes" xml:space="preserve">
          <source>Specifying other formulae as dependencies</source>
          <target state="translated">다른 수식을 종속성으로 지정</target>
        </trans-unit>
        <trans-unit id="087a265dc9450ef161b7e97993ec13476a979aec" translate="yes" xml:space="preserve">
          <source>Specifying the download strategy explicitly</source>
          <target state="translated">다운로드 전략을 명시 적으로 지정</target>
        </trans-unit>
        <trans-unit id="b673a4bf265ecfd364e22d9dce956bc4e0a501dc" translate="yes" xml:space="preserve">
          <source>Spell out certain technical words</source>
          <target state="translated">특정 기술 단어 철자</target>
        </trans-unit>
        <trans-unit id="82cebd0cac45c28817fad5367f93a5bced93dca0" translate="yes" xml:space="preserve">
          <source>Sponsors</source>
          <target state="translated">Sponsors</target>
        </trans-unit>
        <trans-unit id="a1e0b17ffe8b6dadd4ed157e4f3155f22a225bbe" translate="yes" xml:space="preserve">
          <source>Squash new commits into one commit per formula:</source>
          <target state="translated">수식마다 하나의 커밋으로 새로운 커밋을 스쿼시하십시오.</target>
        </trans-unit>
        <trans-unit id="1a955f8350472728c870177d57e242ca7c99806f" translate="yes" xml:space="preserve">
          <source>Stable versions</source>
          <target state="translated">안정적인 버전</target>
        </trans-unit>
        <trans-unit id="ba6011567a5f5d6112dccfe1a22bfca9e9a5b0de" translate="yes" xml:space="preserve">
          <source>Start a Homebrew build environment shell. Uses our years-battle-hardened Homebrew build logic to help your &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; or even your &lt;code&gt;gem install&lt;/code&gt; succeed. Especially handy if you run Homebrew in an Xcode-only configuration since it adds tools like &lt;code&gt;make&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; which otherwise build systems would not find.</source>
          <target state="translated">Homebrew 빌드 환경 쉘을 시작하십시오. 오랜 세월 동안 강화 된 Homebrew 빌드 로직을 사용하여 &lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt; 또는 &lt;code&gt;gem install&lt;/code&gt; 성공 하도록 도와줍니다 . 이 같은 도구를 추가하기 때문에 당신이 엑스 코드 전용 구성에서 브루를 실행하는 경우 특히 유용 &lt;code&gt;make&lt;/code&gt; 당신에 &lt;code&gt;PATH&lt;/code&gt; 그렇지 않으면 찾을 수없는 것입니다 시스템을 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9647d59c89061666e436fff153008e4dbc88ca3" translate="yes" xml:space="preserve">
          <source>Start the service &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; immediately and register it to launch at login (or boot).</source>
          <target state="translated">서비스 시작 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 즉시 시작하고 로그인 (또는 부팅)시 시작하도록 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="78d9da214a6c3f7cbcb6f40fdf587cc99c54b207" translate="yes" xml:space="preserve">
          <source>Still won&amp;rsquo;t work?</source>
          <target state="translated">여전히 작동하지 않습니까?</target>
        </trans-unit>
        <trans-unit id="d01eaf4af513adc625e3db4d56868e74581c174b" translate="yes" xml:space="preserve">
          <source>Stop (if necessary) and start the service &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; immediately and register it to launch at login (or boot).</source>
          <target state="translated">중지 (필요한 경우) 및 서비스 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 시작&lt;em&gt;&lt;/em&gt; 즉시 시작하고 로그인 (또는 부팅)시 시작하도록 등록합니다.</target>
        </trans-unit>
        <trans-unit id="d8283c30b013f3680cedcd0a1664328cfe873f93" translate="yes" xml:space="preserve">
          <source>Stop the service &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; immediately and unregister it from launching at login (or boot).</source>
          <target state="translated">서비스 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 중지&lt;em&gt;&lt;/em&gt; 즉시 로그인 (또는 부팅)시 시작되지 않도록 등록을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="c457db33dfc0b16b73de9e23dbe3b1b9d995caf3" translate="yes" xml:space="preserve">
          <source>Structure and markup</source>
          <target state="translated">구조와 마크 업</target>
        </trans-unit>
        <trans-unit id="a4895bc65540a28c29f277690d46e9cceb6c8bad" translate="yes" xml:space="preserve">
          <source>Stuff that builds a GUI by default (but doesn&amp;rsquo;t have to)</source>
          <target state="translated">기본적으로 GUI를 빌드하는 것 (그러나 반드시 그런 것은 아닙니다)</target>
        </trans-unit>
        <trans-unit id="817bff95c652f2916e64900dd1f9065a6c8e6b88" translate="yes" xml:space="preserve">
          <source>Stuff that builds an &lt;code&gt;.app&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.app&lt;/code&gt; 를 만드는 물건</target>
        </trans-unit>
        <trans-unit id="6e73316ad8b38889a60329a550500d2beb730cf7" translate="yes" xml:space="preserve">
          <source>Stuff that doesn&amp;rsquo;t build with the latest, stable Xcode Clang</source>
          <target state="translated">안정적인 최신 Xcode Clang으로 빌드되지 않는 항목</target>
        </trans-unit>
        <trans-unit id="7639a4098d5cf36105d4188b377b8dc2ea0ad643" translate="yes" xml:space="preserve">
          <source>Stuff that doesn&amp;rsquo;t build with the latest, stable Xcode&amp;rsquo;s Clang</source>
          <target state="translated">최신의 안정적인 Xcode의 Clang으로 빌드되지 않는 것들</target>
        </trans-unit>
        <trans-unit id="9cd16071f08b644cfd2eee3499b892cc3de5c100" translate="yes" xml:space="preserve">
          <source>Stuff that requires heavy manual pre/post-install intervention</source>
          <target state="translated">사전 / 사후 설치 작업이 많이 필요한 작업</target>
        </trans-unit>
        <trans-unit id="b957c3a707fcfd58e2e24e5544f6d491f2e4de98" translate="yes" xml:space="preserve">
          <source>Stuff that requires vendored versions of Homebrew formulae</source>
          <target state="translated">벤더 버전의 Homebrew 공식이 필요한 항목</target>
        </trans-unit>
        <trans-unit id="c5d258713c82b41f7c8afc032e7afe17f5196906" translate="yes" xml:space="preserve">
          <source>Style and usage</source>
          <target state="translated">스타일과 사용법</target>
        </trans-unit>
        <trans-unit id="4c4a0b3cf71025d5a8c00dc952e1653931c15933" translate="yes" xml:space="preserve">
          <source>Style guide</source>
          <target state="translated">스타일 가이드</target>
        </trans-unit>
        <trans-unit id="9ce6ba148fe8d9ab4a1efa44f043d11727e7f6ee" translate="yes" xml:space="preserve">
          <source>Sublime Text</source>
          <target state="translated">숭고한 텍스트</target>
        </trans-unit>
        <trans-unit id="62b3daa89be0a60d9dbe3ea4f6c1fb7251619c37" translate="yes" xml:space="preserve">
          <source>Submit a new version of an existing formula</source>
          <target state="translated">기존 공식의 새 버전 제출</target>
        </trans-unit>
        <trans-unit id="11401f7074a3533356b210b9e28616f5d5669141" translate="yes" xml:space="preserve">
          <source>Submitting the formula</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726213342d734d89d21e0cc13248172e781264c8" translate="yes" xml:space="preserve">
          <source>Suggested reply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da3fea9c00a1dfd3c7b8c182bc28967f4d64063" translate="yes" xml:space="preserve">
          <source>Summaries of installation and error analytics are publicly available &lt;a href=&quot;https://brew.sh/analytics/&quot;&gt;here&lt;/a&gt;. A JSON API is also available.</source>
          <target state="translated">설치 및 오류 분석 요약은 &lt;a href=&quot;https://brew.sh/analytics/&quot;&gt;여기에서&lt;/a&gt; 공개적으로 제공 됩니다 . JSON API도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a14bf8583f234d75bd9c6a4d5937a94dc389c05a" translate="yes" xml:space="preserve">
          <source>Summaries of installation and error analytics are publicly available &lt;a href=&quot;https://brew.sh/analytics/&quot;&gt;here&lt;/a&gt;. A JSON API is also available. The majority of Homebrew maintainers are not granted more detailed analytics data beyond these public resources.</source>
          <target state="translated">설치 및 오류 분석 요약은 &lt;a href=&quot;https://brew.sh/analytics/&quot;&gt;여기에서&lt;/a&gt; 공개적으로 볼 수 있습니다 . JSON API도 사용할 수 있습니다. 대부분의 Homebrew 관리자는 이러한 공개 리소스를 넘어서는 더 자세한 분석 데이터를받지 못합니다.</target>
        </trans-unit>
        <trans-unit id="817e14fd6e53f3dfc509e7cf421b613a83d1f802" translate="yes" xml:space="preserve">
          <source>Summarise Homebrew&amp;rsquo;s build environment as a plain list.</source>
          <target state="translated">Homebrew의 빌드 환경을 일반 목록으로 요약하십시오.</target>
        </trans-unit>
        <trans-unit id="e29d88ac3954d8ee3eb5b64ef55d6619849843da" translate="yes" xml:space="preserve">
          <source>Superenv notes</source>
          <target state="translated">수 퍼브 노트</target>
        </trans-unit>
        <trans-unit id="c6e46c522648d4b476b5a5c1c10619b2fdceda14" translate="yes" xml:space="preserve">
          <source>Supported Xcode versions</source>
          <target state="translated">지원되는 Xcode 버전</target>
        </trans-unit>
        <trans-unit id="944dbbb243cb453ffb2d19cd06695846c26c7b30" translate="yes" xml:space="preserve">
          <source>Symlink all of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s installed files into Homebrew&amp;rsquo;s prefix. This is done automatically when you install formulae but can be useful for DIY installations.</source>
          <target state="translated">모든 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; Symlink&lt;em&gt;&lt;/em&gt; 설치된 파일을 Homebrew의 접두사에 심볼릭 링크합니다. 이것은 공식을 설치할 때 자동으로 수행되지만 DIY 설치에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07f5f045729694d4e175782712df7b4a48e7d471" translate="yes" xml:space="preserve">
          <source>Symlink all of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s installed files into the Homebrew prefix. This is done automatically when you install formulae but can be useful for DIY installations.</source>
          <target state="translated">모든 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 설치 파일을 Homebrew 접두사에 Symlink하십시오 . 이것은 수식을 설치할 때 자동으로 수행되지만 DIY 설치에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5a20345cf17ceff396baba8f358734995ea338c" translate="yes" xml:space="preserve">
          <source>Symlink all of the specific &lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt; of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;&amp;rsquo;s install to Homebrew prefix.</source>
          <target state="translated">특정 &lt;em&gt; &lt;code&gt;version&lt;/code&gt; &lt;/em&gt; 의 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 설치를 Homebrew 접두사에 Symlink하십시오 .</target>
        </trans-unit>
        <trans-unit id="a133c406b60fa6d21ad27ccadbfe4743dee9bcf5" translate="yes" xml:space="preserve">
          <source>TSC: Technical Steering Committee</source>
          <target state="translated">TSC : 기술 운영위원회</target>
        </trans-unit>
        <trans-unit id="ae24108f7e2ee5810c64586635637fc66d350bc4" translate="yes" xml:space="preserve">
          <source>Tap a formula repository.</source>
          <target state="translated">공식 저장소를 누릅니다.</target>
        </trans-unit>
        <trans-unit id="9c52a38cdc290ea994f92fe2edf5786339c0e235" translate="yes" xml:space="preserve">
          <source>Tap formulae follow the same format as the core&amp;rsquo;s ones, and can be added at the repository&amp;rsquo;s root, or under &lt;code&gt;Formula&lt;/code&gt; or &lt;code&gt;HomebrewFormula&lt;/code&gt; subdirectories. We recommend the latter options because it makes the repository organisation easier to grasp, and top-level files are not mixed with formulae.</source>
          <target state="translated">탭 수식은 코어의 수식과 동일한 형식을 따르며 리포지토리의 루트 나 &lt;code&gt;Formula&lt;/code&gt; 또는 &lt;code&gt;HomebrewFormula&lt;/code&gt; 하위 디렉터리에 추가 할 수 있습니다 . 후자의 옵션은 저장소 구성을보다 쉽게 ​​파악할 수있게 해주 며 최상위 파일은 공식과 혼합되지 않기 때문에 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="7a0265f8b3ecf240f8d9d1e7272d4a41cf133061" translate="yes" xml:space="preserve">
          <source>Tap formulae follow the same format as the core&amp;rsquo;s ones, and can be added under either the &lt;code&gt;Formula&lt;/code&gt; subdirectory, the &lt;code&gt;HomebrewFormula&lt;/code&gt; subdirectory or the repository&amp;rsquo;s root. The first available directory is used, other locations will be ignored. We recommend use of subdirectories because it makes the repository organisation easier to grasp, and top-level files are not mixed with formulae.</source>
          <target state="translated">탭 공식은 코어의 공식과 동일한 형식을 따르며 &lt;code&gt;Formula&lt;/code&gt; 하위 디렉토리, &lt;code&gt;HomebrewFormula&lt;/code&gt; 하위 디렉토리 또는 저장소 루트 아래에 추가 할 수 있습니다 . 사용 가능한 첫 번째 디렉토리가 사용되고 다른 위치는 무시됩니다. 하위 디렉터리를 사용하면 저장소 구성을 더 쉽게 파악할 수 있고 최상위 파일이 수식과 혼합되지 않으므로 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="673b30bd86dfd2c521dda9352f3b09583c147e64" translate="yes" xml:space="preserve">
          <source>Tap names like &lt;code&gt;homebrew/core&lt;/code&gt; are styled in &lt;code&gt;fixed width font&lt;/code&gt;. Repository names may be styled in either fixed width font like &amp;ldquo;&lt;code&gt;Homebrew/homebrew-core&lt;/code&gt;&amp;rdquo;, as links like &amp;ldquo;&lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;Homebrew/homebrew-core&lt;/a&gt;&amp;rdquo;, or regular text like &amp;ldquo;Homebrew/homebrew-core&amp;rdquo;, based on which looks best for a given use.</source>
          <target state="translated">&lt;code&gt;homebrew/core&lt;/code&gt; 와 같은 탭 이름 은 &lt;code&gt;fixed width font&lt;/code&gt; 로 스타일이 지정됩니다 . 저장소 이름은 &quot;같은 중 고정 폭 글꼴 스타일을 지정할 수 &lt;code&gt;Homebrew/homebrew-core&lt;/code&gt; &quot;와 같은 링크로, &quot; &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;브루 / 사제 코어&lt;/a&gt; 주어진 가장 보인다&quot;, 또는 어떤에 따라 &quot;브루 / 사제 코어&quot;와 같은 일반 텍스트 사용하다.</target>
        </trans-unit>
        <trans-unit id="1602ba64a265de0b896f48b7fa63e4c342defcfe" translate="yes" xml:space="preserve">
          <source>Taps</source>
          <target state="translated">Taps</target>
        </trans-unit>
        <trans-unit id="e6fe69af44a0dfca750111f2ae5beda1e157253f" translate="yes" xml:space="preserve">
          <source>Taps (Third-Party Repositories)</source>
          <target state="translated">탭 (타사 저장소)</target>
        </trans-unit>
        <trans-unit id="db3ea05b2b85a6154f5601af39be077f9dabfdad" translate="yes" xml:space="preserve">
          <source>Taps (third-party repositories)</source>
          <target state="translated">도청 (타사 리포지토리)</target>
        </trans-unit>
        <trans-unit id="770bce19da07e2e1106cc2efe505cb8d89227491" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">Term</target>
        </trans-unit>
        <trans-unit id="b48f08c003b4a1d39ae41c32ed5ec66fa4b2a05a" translate="yes" xml:space="preserve">
          <source>Terminology, words, and word styling</source>
          <target state="translated">용어, 단어 및 단어 스타일</target>
        </trans-unit>
        <trans-unit id="daee6ab53a307b0944cd202a1cdac59060a9b400" translate="yes" xml:space="preserve">
          <source>Test your changes by running the following, and ensure they all pass without issue. For changed formulae, make sure you do the &lt;code&gt;brew audit&lt;/code&gt; step while your changed formula is installed.</source>
          <target state="translated">다음을 실행하여 변경 사항을 테스트하고 모두 문제없이 통과하는지 확인하십시오. 변경된 수식의 경우 변경된 수식을 설치하는 동안 &lt;code&gt;brew audit&lt;/code&gt; 단계 를 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2384dc2890c7ed60bd4e81b724fe6505039d2120" translate="yes" xml:space="preserve">
          <source>Testing and auditing the formula</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f185e3ab3551e32449ed2398b07cea8819e9edf" translate="yes" xml:space="preserve">
          <source>Tests the full lifecycle of a Homebrew change to a tap (Git repository). For example, for a GitHub Actions pull request that changes a formula &lt;code&gt;brew test-bot&lt;/code&gt; will ensure the system is cleaned and set up to test the formula, install the formula, run various tests and checks on it, bottle (package) the binaries and test formulae that depend on it to ensure they aren&amp;rsquo;t broken by these changes.</source>
          <target state="translated">탭 (Git 저장소)에 대한 Homebrew 변경의 전체 수명주기를 테스트합니다. 예를 들어 공식 &lt;code&gt;brew test-bot&lt;/code&gt; 을 변경하는 GitHub 작업 풀 요청의 경우 은 시스템이 정리되고 공식을 테스트하도록 설정되어 있는지 확인하고, 공식을 설치하고, 다양한 테스트를 실행하고 확인하고, 바이너리를 병 (패키지)하고 이러한 변경으로 인해 손상되지 않는지 확인하기 위해 이에 의존하는 수식을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="184eb63a906e3136190bfe5ddab6df3340bd9b91" translate="yes" xml:space="preserve">
          <source>Thank you!</source>
          <target state="translated">감사합니다!</target>
        </trans-unit>
        <trans-unit id="0fc4663e569132c0049c62d2af22c2c47f0f4339" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;brew tap username/foobar&lt;/code&gt; can be used as a shortcut for the long version: &lt;code&gt;brew tap username/homebrew-foobar&lt;/code&gt;. &lt;code&gt;brew&lt;/code&gt; will automatically add back the &amp;lsquo;homebrew-&amp;lsquo; prefix whenever it&amp;rsquo;s necessary.</source>
          <target state="translated">즉, &lt;code&gt;brew tap username/foobar&lt;/code&gt; 는 긴 버전의 바로 가기로 사용할 수 있습니다 ( &lt;code&gt;brew tap username/homebrew-foobar&lt;/code&gt; ) . &lt;code&gt;brew&lt;/code&gt; 는 필요할 때마다 'homebrew-'접두사를 자동으로 다시 추가합니다.</target>
        </trans-unit>
        <trans-unit id="32ba6f70829547197337f5fa52f4d36f353043ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;faq#what-does-keg-only-mean&quot;&gt;FAQ&lt;/a&gt; briefly explains this.</source>
          <target state="translated">&lt;a href=&quot;faq#what-does-keg-only-mean&quot;&gt;자주 묻는 질문&lt;/a&gt; 간략이 설명합니다.</target>
        </trans-unit>
        <trans-unit id="9967a9089e9ee663f06edb427d225cb3df4ceef1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;how-to-open-a-homebrew-pull-request&quot;&gt;How To Open a Homebrew Pull Request&lt;/a&gt; documentation should explain most everything you need to know about the process of creating a PR for a version update. For simple formulae updates, this typically involves changing the URL and sha256.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df2c7831fe27cec4bd50065667864db80e61014" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#v&quot;&gt;Google Analytics version&lt;/a&gt;, i.e. &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#v&quot;&gt;Google 웹 로그 분석 버전&lt;/a&gt; , 즉 &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7688ba113f93eb6503c6549c09629d4f1cff7950" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/Homebrew/brew/tree/master/Library/Homebrew/sorbet&quot;&gt;&lt;code&gt;sorbet/&lt;/code&gt;&lt;/a&gt; directory in &lt;code&gt;Library/Homebrew&lt;/code&gt; consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de927b3f26ce2f5dac530169c0f1fafa56f95322" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt;&lt;code&gt;devel&lt;/code&gt;&lt;/a&gt; spec (activated by passing &lt;code&gt;--devel&lt;/code&gt;) is used for a project&amp;rsquo;s unstable releases. &lt;code&gt;devel&lt;/code&gt; specs are not allowed in Homebrew/homebrew-core.</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt; &lt;code&gt;devel&lt;/code&gt; &lt;/a&gt; 사양 (전달하여 활성화 &lt;code&gt;--devel&lt;/code&gt; 는 ) 프로젝트의 불안정한 릴리스에 사용됩니다. Homebrew / homebrew-core에서는 &lt;code&gt;devel&lt;/code&gt; 사양이 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bcf1ff9fc242860bb53a65247d49b6d907b24e90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://rubydoc.brew.sh/Formula#test-class_method&quot;&gt;&lt;code&gt;test do&lt;/code&gt;&lt;/a&gt; block automatically creates and changes to a temporary directory which is deleted after run. You can access this &lt;a href=&quot;https://rubydoc.brew.sh/Pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#testpath-instance_method&quot;&gt;&lt;code&gt;testpath&lt;/code&gt;&lt;/a&gt; function. The environment variable &lt;code&gt;HOME&lt;/code&gt; is set to &lt;a href=&quot;https://rubydoc.brew.sh/Formula#testpath-instance_method&quot;&gt;&lt;code&gt;testpath&lt;/code&gt;&lt;/a&gt; within the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#test-class_method&quot;&gt;&lt;code&gt;test do&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Formula#test-class_method&quot;&gt; &lt;code&gt;test do&lt;/code&gt; &lt;/a&gt; 블록이 자동으로 생성하고 실행 후 삭제되는 임시 디렉토리로 변경합니다. 이 액세스 할 수있는 &lt;a href=&quot;https://rubydoc.brew.sh/Pathname&quot;&gt; &lt;code&gt;Pathname&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#testpath-instance_method&quot;&gt; &lt;code&gt;testpath&lt;/code&gt; 의&lt;/a&gt; 기능. 환경 변수 &lt;code&gt;HOME&lt;/code&gt; 은 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#test-class_method&quot;&gt; &lt;code&gt;test do&lt;/code&gt; &lt;/a&gt; 블록 내에서 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#testpath-instance_method&quot;&gt; &lt;code&gt;testpath&lt;/code&gt; &lt;/a&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0eec1b83d8d81d779ecca3daab3d885aa7e7ecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--build-from-source&lt;/code&gt; option is invoked.</source>
          <target state="translated">&lt;code&gt;--build-from-source&lt;/code&gt; 옵션이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ca95d505c00e97778cf14ef557c0a63301bd9e06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HOMEBREW_FORBIDDEN_LICENSES&lt;/code&gt; environment variable can be set to forbid installation of formulae that require or have dependencies that require certain licenses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89528d1b610d4b14e240803f05544b52d8f3c84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HOMEBREW_FORBIDDEN_LICENSES&lt;/code&gt; should be set to a space separated list of licenses. Use &lt;code&gt;public_domain&lt;/code&gt; to forbid installation of formulae with a &lt;code&gt;:public_domain&lt;/code&gt; license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8561b7ad52be43ba58d7f6539b2e5fd9043895ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;README&lt;/code&gt; probably tells you about dependencies and Homebrew or macOS probably already has them. You can check for Homebrew dependencies with &lt;code&gt;brew search&lt;/code&gt;. Some common dependencies that macOS comes with:</source>
          <target state="translated">&lt;code&gt;README&lt;/code&gt; 는 아마 이미 아마 종속성과 브루 나 맥 OS에 대해 이야기를 가지고있다. &lt;code&gt;brew search&lt;/code&gt; 로 Homebrew 종속성을 확인할 수 있습니다 . macOS와 함께 제공되는 일반적인 종속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2cefdbde22a0ae0692ba6704a2d7d12456e1108b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;brew tap-new&lt;/code&gt; command can be used to create a new tap along with some template files.</source>
          <target state="translated">&lt;code&gt;brew tap-new&lt;/code&gt; 명령은 일부 템플릿 파일과 함께 새로운 탭을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc4deb21d75b28e9372d23caa54e4e6bf30e0265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;brew tap&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;brew tap&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="3d7d1a4a02580933a775b68ade5d9e4b222ed24f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; file. It is actually a newline-separated list of arguments to pass to &lt;code&gt;srb tc&lt;/code&gt;, the same as if they&amp;rsquo;d been passed at the command line. Arguments in the config file are always passed first (if it exists), followed by arguments provided on the command line. We use it ignore the &lt;code&gt;Library/Homebrew/vendor&lt;/code&gt; directory, which contains gem definitions which we do not wish to type check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94270c89b78f9d4d96ce2cba813cfac9f4c3866b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rbi/&lt;/code&gt; directory. It contains all Ruby Interface files, which help Sorbet to learn about constants, ancestors, and methods defined in ways it doesn&amp;rsquo;t understand natively. RBI files for all gems are auto-generated using &lt;a href=&quot;https://github.com/Shopify/tapioca#tapioca&quot;&gt;Tapioca&lt;/a&gt;. We can also create a RBI file to help Sorbet understand dynamic definitions. For example: Sorbet assumes that &lt;code&gt;Kernel&lt;/code&gt; is not necessarily included in our modules and classes, hence we use RBI files to explicitly include the Kernel Module. Here is an &lt;a href=&quot;https://github.com/Homebrew/brew/blob/72419630b4658da31556a0f6ef1dfa633cf4fe4f/Library/Homebrew/sorbet/rbi/homebrew.rbi#L3-L5&quot;&gt;example&lt;/a&gt; in our codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31033c4e45b33b32ec7d09a7f591d09e590602e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;site-packages&lt;/code&gt; is a directory that contains Python modules (especially bindings installed by other formulae). Homebrew creates it here:</source>
          <target state="translated">&lt;code&gt;site-packages&lt;/code&gt; 파이썬 모듈 (다른 수식으로 설치 특히 바인딩)를 포함하는 디렉토리입니다. Homebrew가 여기에 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9b1992641c0bccdeacb0ea1e1fe4915af55cdf4b" translate="yes" xml:space="preserve">
          <source>The Google Analytics version, i.e. &lt;code&gt;1&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#v)</source>
          <target state="translated">Google 웹 로그 분석 버전, 즉 &lt;code&gt;1&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#v)</target>
        </trans-unit>
        <trans-unit id="7d10a0d8db646803e0f705cb951781fd4199f830" translate="yes" xml:space="preserve">
          <source>The Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#an&quot;&gt;application name&lt;/a&gt;, e.g. &lt;code&gt;Homebrew&lt;/code&gt;.</source>
          <target state="translated">Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#an&quot;&gt;응용 프로그램 이름&lt;/a&gt; (예 : &lt;code&gt;Homebrew&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="cd7e0a702651ce0d37abf6abb3259f786f457756" translate="yes" xml:space="preserve">
          <source>The Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#av&quot;&gt;application version&lt;/a&gt;, e.g. &lt;code&gt;2.5.0&lt;/code&gt;.</source>
          <target state="translated">Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#av&quot;&gt;응용 프로그램 버전&lt;/a&gt; , 예 : &lt;code&gt;2.5.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75877a815590836f4346b68efa82e3f2a1ad6cbd" translate="yes" xml:space="preserve">
          <source>The Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#t&quot;&gt;analytics hit type&lt;/a&gt;, e.g. &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#t&quot;&gt;분석 히트 유형&lt;/a&gt; (예 : &lt;code&gt;event&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6118221c0f4459df8d20e6baf31563c48de68f0" translate="yes" xml:space="preserve">
          <source>The Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#tid&quot;&gt;analytics tracking ID&lt;/a&gt;, e.g. &lt;code&gt;UA-75654628-1&lt;/code&gt;.</source>
          <target state="translated">Homebrew &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#tid&quot;&gt;분석 추적 ID&lt;/a&gt; , 예 : &lt;code&gt;UA-75654628-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d55d7f9ed907135bb9596a450b1e832143039efb" translate="yes" xml:space="preserve">
          <source>The Homebrew analytics hit type, e.g. &lt;code&gt;event&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#t)</source>
          <target state="translated">Homebrew 분석 적중 유형 (예 : &lt;code&gt;event&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#t))</target>
        </trans-unit>
        <trans-unit id="4d18f2b012440a90e7000c2a9b789a6ca7420790" translate="yes" xml:space="preserve">
          <source>The Homebrew analytics tracking ID, e.g. &lt;code&gt;UA-75654628-1&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#tid)</source>
          <target state="translated">Homebrew 분석 추적 ID (예 : &lt;code&gt;UA-75654628-1&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#tid))</target>
        </trans-unit>
        <trans-unit id="75543a6ea30390973a0d59f3c597e4d7f9c16c81" translate="yes" xml:space="preserve">
          <source>The Homebrew application name, e.g. &lt;code&gt;Homebrew&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#an)</source>
          <target state="translated">Homebrew 응용 프로그램 이름 (예 : &lt;code&gt;Homebrew&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#an))</target>
        </trans-unit>
        <trans-unit id="5f535789234cba4c60abe8e33bbaf9b9f49a5850" translate="yes" xml:space="preserve">
          <source>The Homebrew application version, e.g. &lt;code&gt;0.9.9&lt;/code&gt; (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#av)</source>
          <target state="translated">Homebrew 응용 프로그램 버전 (예 : &lt;code&gt;0.9.9&lt;/code&gt; ) (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#av))</target>
        </trans-unit>
        <trans-unit id="c90266e579c208778341209a2f1bdb21119a00bd" translate="yes" xml:space="preserve">
          <source>The Homebrew package manager may be used on Linux and &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/about&quot;&gt;Windows Subsystem for Linux (WSL)&lt;/a&gt;. Homebrew was formerly referred to as Linuxbrew when running on Linux or WSL. It can be installed in your home directory, in which case it does not use &lt;em&gt;sudo&lt;/em&gt;. Homebrew does not use any libraries provided by your host system, except &lt;em&gt;glibc&lt;/em&gt; and &lt;em&gt;gcc&lt;/em&gt; if they are new enough. Homebrew can install its own current versions of &lt;em&gt;glibc&lt;/em&gt; and &lt;em&gt;gcc&lt;/em&gt; for older distributions of Linux.</source>
          <target state="translated">Homebrew 패키지 관리자는 Linux 및 Linux 용 &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/about&quot;&gt;Windows 서브 시스템 (WSL)&lt;/a&gt; 에서 사용될 수 있습니다 . Homebrew는 Linux 또는 WSL에서 실행할 때 이전에는 Linuxbrew라고했습니다. 홈 디렉토리에 설치 될 수 있으며,이 경우 &lt;em&gt;sudo를&lt;/em&gt; 사용하지 않습니다 . Homebrew는 호스트 시스템에서 제공하는 라이브러리를 사용하지 않습니다 ( &lt;em&gt;glibc&lt;/em&gt; 및 &lt;em&gt;gcc&lt;/em&gt; 가 새 라이브러리 인 경우 제외) . Homebrew는 이전 Linux 배포판을 위해 자체 버전의 &lt;em&gt;glibc&lt;/em&gt; 및 &lt;em&gt;gcc&lt;/em&gt; 를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f1581aeabda26602ac2881b2a51f59c597d6fb4" translate="yes" xml:space="preserve">
          <source>The Homebrew user agent, e.g. &lt;code&gt;Homebrew/0.9.9 (Macintosh; Intel macOS 10.12.0) curl/7.43.0&lt;/code&gt;</source>
          <target state="translated">Homebrew 사용자 에이전트, 예 : &lt;code&gt;Homebrew/0.9.9 (Macintosh; Intel macOS 10.12.0) curl/7.43.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3db144bc54a7f9abb0f6a2890d01a1d0873ed594" translate="yes" xml:space="preserve">
          <source>The Homebrew user agent, e.g. &lt;code&gt;Homebrew/2.5.0 (Macintosh; Intel Mac OS X 10.15.6) curl/7.64.1&lt;/code&gt;.</source>
          <target state="translated">Homebrew 사용자 에이전트, 예 : &lt;code&gt;Homebrew/2.5.0 (Macintosh; Intel Mac OS X 10.15.6) curl/7.64.1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d38312767633570a5863752e058ce5515c6e97d4" translate="yes" xml:space="preserve">
          <source>The PLC consists of five members. Committee members are elected by majority vote of Homebrew members. Each PLC member will serve a term of two years or until the member&amp;rsquo;s successor is elected. Any sudden vacancy in the PLC will be filled by the usual procedure for electing PLC members at the next general meeting, typically the next AGM.</source>
          <target state="translated">PLC는 5 개의 멤버로 구성됩니다. 위원회 회원은 Homebrew 회원의 과반수 투표로 선출됩니다. 각 PLC 회원은 2 년 임기 또는 회원의 후임자가 선출 될 때까지 서비스를 제공합니다. PLC의 갑작스런 빈자리는 다음 번 총회에서 일반적으로 다음 AGM에서 PLC 구성원을 선출하는 일반적인 절차에 따라 채워집니다.</target>
        </trans-unit>
        <trans-unit id="5016363d6821d3547b45a40134f8d02684d53336" translate="yes" xml:space="preserve">
          <source>The PLC may meet by any mutually agreeable means, such as text chat, voice or video call, and in person. Members of the PLC must meet at least once per quarter. Members of the PLC must meet by video call or in person at least once per year.</source>
          <target state="translated">PLC는 문자 채팅, 음성 또는 화상 통화와 같은 상호 동의 가능한 수단을 통해 직접 만날 수 있습니다. PLC 구성원은 분기당 적어도 한 번 이상 만나야합니다. PLC 구성원은 화상 통화 또는 1 년에 한 번 이상 직접 만나야합니다.</target>
        </trans-unit>
        <trans-unit id="6a8b2ef6e70f1b8e20872728e8cd7b1c59374eeb" translate="yes" xml:space="preserve">
          <source>The PLC will announce candidates and proposals three weeks prior to the election date.</source>
          <target state="translated">PLC는 선거일 3 주 전에 후보와 제안을 발표 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="ebdab7c00290d75ee3c63621c361d11a06538252" translate="yes" xml:space="preserve">
          <source>The PLC will appoint between three and five members to the TSC. The Project Leader must be one of these appointees. Appointed TSC members will serve a term of one year or until the member&amp;rsquo;s successor is appointed.</source>
          <target state="translated">PLC는 3 명에서 5 명 사이의 구성원을 TSC에 임명합니다. 프로젝트 리더는이 임명 된 사람 중 하나 여야합니다. 임명 된 TSC 회원은 1 년 동안 또는 회원의 후임자가 지명 될 때까지 봉사합니다.</target>
        </trans-unit>
        <trans-unit id="4bf0bdd597636778552c1c2167b323b65a4a0397" translate="yes" xml:space="preserve">
          <source>The PLC will appoint the members of the Technical Steering Committee (TSC).</source>
          <target state="translated">PLC는 TSC (Technical Steering Committee)의 구성원을 임명합니다.</target>
        </trans-unit>
        <trans-unit id="839576c75686c4765bb964b904a15bdb0a2abd3e" translate="yes" xml:space="preserve">
          <source>The PLC will deliver a report of their activities, decisions, and financial statements to the Homebrew members at the AGM.</source>
          <target state="translated">PLC는 활동, 결정 및 재무 제표에 대한 보고서를 AGM의 Homebrew 구성원에게 전달합니다.</target>
        </trans-unit>
        <trans-unit id="e54f58779d937a8130855964e4bcaf4528db7db8" translate="yes" xml:space="preserve">
          <source>The PLC will meet annually to review the status of all members and remove inactive members and those who have not affirmed a commitment to Homebrew in the past year. Voting in the AGM confirms that a member wishes to remain active with the project. After the AGM, the PLC will ask the members who did not vote whether they wish to remain active with the project. The PLC removes any members who don&amp;rsquo;t respond to this second request after three weeks.</source>
          <target state="translated">PLC는 매년 모든 회원의 상태를 검토하고 비 활동 회원과 지난해 Homebrew에 대한 약속을 확인하지 않은 사람을 제거하기 위해 매년 회의를 갖습니다. AGM에 투표하면 회원이 프로젝트에 계속 참여하기를 원함이 확인됩니다. AGM 이후 PLC는 투표하지 않은 구성원에게 프로젝트에 계속 참여할 것인지 묻습니다. PLC는 3 주 후에이 두 번째 요청에 응답하지 않는 구성원을 제거합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
