<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="homebrew">
    <body>
      <group id="homebrew">
        <trans-unit id="9ee24f83ef214fd594061bf8306c7c9916c8a906" translate="yes" xml:space="preserve">
          <source>This happens because an old version of the upgrade command is hanging around for some reason. The fix:</source>
          <target state="translated">어떤 이유로 인해 이전 버전의 업그레이드 명령이 걸려 있기 때문에 발생합니다. 수정 :</target>
        </trans-unit>
        <trans-unit id="b60fbb0b138245beaf21eeb9dee5dc8055a29563" translate="yes" xml:space="preserve">
          <source>This imports the &lt;code&gt;brew&lt;/code&gt; environment into your existing shell; &lt;code&gt;gem&lt;/code&gt; will pick up the environment variables and be able to build. As a bonus &lt;code&gt;brew&lt;/code&gt;&amp;rsquo;s automatically determined optimization flags are set.</source>
          <target state="translated">이는 &lt;code&gt;brew&lt;/code&gt; 환경을 기존 쉘로 가져옵니다 . &lt;code&gt;gem&lt;/code&gt; 은 환경 변수를 선택하고 빌드 할 수 있습니다. 보너스 &lt;code&gt;brew&lt;/code&gt; 자동 결정된 최적화 플래그가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="a6491c24fa22ec4e87921a37545f4fcc5bf56658" translate="yes" xml:space="preserve">
          <source>This includes automatic installation of casks at runtime.</source>
          <target state="translated">여기에는 런타임시 캐스 크 자동 설치가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9710e44dd22b8024b95e6f347b2439365af29307" translate="yes" xml:space="preserve">
          <source>This is a list of commonly encountered problems, known issues, and their solutions.</source>
          <target state="translated">이 목록은 일반적으로 발생하는 문제, 알려진 문제 및 해당 솔루션의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d9814460d75b55001af4e9228adf2bd75a5c79a4" translate="yes" xml:space="preserve">
          <source>This is a set of guidelines to be applied using human judgement, not a set of hard and fast rules. It is like &lt;a href=&quot;https://web.archive.org/web/20170830001125/https://www.economist.com/styleguide/introduction&quot;&gt;The Economist&amp;rsquo;s Style Guide&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Garner's_Modern_American_Usage&quot;&gt;Garner&amp;rsquo;s Modern American Usage&lt;/a&gt;. It is less like the &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;Ruby Style Guide&lt;/a&gt;. All guidelines here are open to interpretation and discussion. 100% conformance to these guidelines is &lt;em&gt;not&lt;/em&gt; a goal.</source>
          <target state="translated">이것은 엄격하고 빠른 규칙이 아니라 인간의 판단을 사용하여 적용되는 일련의 지침입니다. 그것은처럼 &lt;a href=&quot;https://web.archive.org/web/20170830001125/https://www.economist.com/styleguide/introduction&quot;&gt;이코노미스트의 스타일 가이드&lt;/a&gt; 또는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Garner's_Modern_American_Usage&quot;&gt;가너의 현대 미국의 사용법&lt;/a&gt; . 그것은 같은 작은 &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;루비 스타일 가이드&lt;/a&gt; . 여기에있는 모든 지침은 해석과 토론에 개방되어 있습니다. 이 지침을 100 % 준수하는 것은 목표가 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="52be08f591889d78058115ffe4779c02b67f12a6" translate="yes" xml:space="preserve">
          <source>This is a set of guidelines to be applied using human judgment, not a set of hard and fast rules. It is like &lt;a href=&quot;https://web.archive.org/web/20170830001125/https://www.economist.com/styleguide/introduction&quot;&gt;The Economist&amp;rsquo;s Style Guide&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Garner's_Modern_American_Usage&quot;&gt;Garner&amp;rsquo;s Modern American Usage&lt;/a&gt;. It is less like the &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;Ruby Style Guide&lt;/a&gt;. All guidelines here are open to interpretation and discussion. 100% conformance to these guidelines is &lt;em&gt;not&lt;/em&gt; a goal.</source>
          <target state="translated">이것은 일련의 엄격하고 빠른 규칙이 아니라 사람의 판단을 사용하여 적용되는 일련의 지침입니다. 그것은 &lt;a href=&quot;https://web.archive.org/web/20170830001125/https://www.economist.com/styleguide/introduction&quot;&gt;이코노미스트의 스타일 가이드&lt;/a&gt; 또는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Garner's_Modern_American_Usage&quot;&gt;가너의 Modern American Usage와 같습니다&lt;/a&gt; . &lt;a href=&quot;https://github.com/rubocop-hq/ruby-style-guide#the-ruby-style-guide&quot;&gt;루비 스타일 가이드&lt;/a&gt; 와는 다릅니다 . 여기에있는 모든 지침은 해석과 토론에 열려 있습니다. 이 지침을 100 % 준수하는 것은 목표가 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3398ee593ef005c1f8c20c136756c48e4fa1a3fe" translate="yes" xml:space="preserve">
          <source>This is a set of style and usage guidelines for Homebrew&amp;rsquo;s prose documentation aimed at users, contributors, and maintainers (as opposed to executable computer code). It applies to documents like those in &lt;code&gt;docs&lt;/code&gt; in the &lt;code&gt;Homebrew/brew&lt;/code&gt; repository, announcement emails, and other communications with the Homebrew community.</source>
          <target state="translated">이 문서는 실행 가능한 컴퓨터 코드가 아닌 사용자, 기고자 및 유지 관리자를 대상으로하는 Homebrew의 산문 문서에 대한 스타일 및 사용 지침 세트입니다. 이 문서 는 &lt;code&gt;Homebrew/brew&lt;/code&gt; 저장소 의 &lt;code&gt;docs&lt;/code&gt; 에있는 문서 , 알림 이메일 및 Homebrew 커뮤니티와의 기타 통신에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="668dc4095b1f8cfef3075e1955ddf797b75ee365" translate="yes" xml:space="preserve">
          <source>This is because Homebrew keeps it locked inside its individual prefix, rather than symlinking to the publicly-available location, usually &lt;code&gt;/usr/local&lt;/code&gt;.</source>
          <target state="translated">이는 Homebrew가 공개적으로 사용 가능한 위치 (일반적으로 &lt;code&gt;/usr/local&lt;/code&gt; )에 연결 되지 않고 개별 접두사 안에 고정되어 있기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="16684752773c07698e8142345107061ca90d69e4" translate="yes" xml:space="preserve">
          <source>This is caused by an old bug in in the &lt;code&gt;update&lt;/code&gt; code that has long since been fixed. However, the nature of the bug requires that you do the following:</source>
          <target state="translated">이것은 오래 전에 수정 된 &lt;code&gt;update&lt;/code&gt; 코드 의 오래된 버그로 인해 발생합니다 . 그러나 버그의 특성상 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="377f39cbee009ad000c369bc955e862356e40376" translate="yes" xml:space="preserve">
          <source>This is exactly the same as writing:</source>
          <target state="translated">이것은 쓰기와 정확히 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1fbd1f697f874603c5b4397451941f88a62b984d" translate="yes" xml:space="preserve">
          <source>This issue typically occurs when using FileVault or custom SSD configurations.</source>
          <target state="translated">이 문제는 일반적으로 FileVault 또는 사용자 정의 SSD 구성을 사용할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5dc0314774af9c3e5bd74545714936774e99f352" translate="yes" xml:space="preserve">
          <source>This means custom taps, local custom formulae, etc need to be migrated to use &lt;em&gt;SHA256&lt;/em&gt; before you can install them.</source>
          <target state="translated">즉, &lt;em&gt;SHA256&lt;/em&gt; 을 사용 하려면 설치하기 전에 사용자 지정 탭, 로컬 사용자 지정 수식 등을 마이그레이션 해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa21df829db02b6a2b2dc4b0e86ece87d7f6bea4" translate="yes" xml:space="preserve">
          <source>This must be done before &lt;code&gt;compinit&lt;/code&gt; is called. Note that if you are using Oh My Zsh, it will call &lt;code&gt;compinit&lt;/code&gt; for you, so this must be done before you call &lt;code&gt;oh-my-zsh.sh&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compinit&lt;/code&gt; 를 호출 하기 전에 수행해야합니다 . Oh My Zsh를 사용하는 경우 &lt;code&gt;compinit&lt;/code&gt; 를 호출 하므로 호출하기 전에 수행해야합니다. &lt;code&gt;oh-my-zsh.sh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95bcdc5aaf40aa142133c8e9c474558851dbd539" translate="yes" xml:space="preserve">
          <source>This page describes how Python is handled in Homebrew for users. See &lt;a href=&quot;python-for-formula-authors&quot;&gt;Python for Formula Authors&lt;/a&gt; for advice on writing formulae to install packages written in Python.</source>
          <target state="translated">이 페이지는 사용자를 위해 Homebrew에서 Python을 처리하는 방법을 설명합니다. &lt;a href=&quot;python-for-formula-authors&quot;&gt;수식 작성자를위한 Python&lt;/a&gt; 참조 작성된 패키지를 설치하기 작성에 대한 조언 용 .</target>
        </trans-unit>
        <trans-unit id="6040a2a628f9668fc1b67603cadf22c5b4c2dbf7" translate="yes" xml:space="preserve">
          <source>This provides a successful exit code if everything is up-to-date, making it useful for scripting.</source>
          <target state="translated">모든 것이 최신 상태 인 경우 성공적인 종료 코드를 제공하므로 스크립팅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="61102e0360f348919920db7747600c19c954eb75" translate="yes" xml:space="preserve">
          <source>This sanitized build environment ignores unrequested dependencies, which makes sure that things you didn&amp;rsquo;t specify in your &lt;code&gt;Brewfile&lt;/code&gt; won&amp;rsquo;t get picked up by commands like &lt;code&gt;bundle install&lt;/code&gt;, &lt;code&gt;npm install&lt;/code&gt;, etc. It will also add compiler flags which will help find keg-only dependencies like &lt;code&gt;openssl&lt;/code&gt;, &lt;code&gt;icu4c&lt;/code&gt;, etc.</source>
          <target state="translated">이 &lt;code&gt;Brewfile&lt;/code&gt; 된 빌드 환경은 요청되지 않은 종속성을 무시하므로 Brewfile 에서 지정하지 않은 항목 이 &lt;code&gt;bundle install&lt;/code&gt; , &lt;code&gt;npm install&lt;/code&gt; 등과 같은 명령으로 선택되지 않도록합니다 . 또한 keg-를 찾는 데 도움이되는 컴파일러 플래그를 추가합니다. &lt;code&gt;openssl&lt;/code&gt; , &lt;code&gt;icu4c&lt;/code&gt; 등과 같은 종속성 만 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b2c9c466db13bc57e80226b433efa9ef9935aa9" translate="yes" xml:space="preserve">
          <source>This script installs Homebrew to &lt;code&gt;/usr/local&lt;/code&gt; so that &lt;a href=&quot;faq#why-does-homebrew-say-sudo-is-bad&quot;&gt;you don&amp;rsquo;t need sudo&lt;/a&gt; when you &lt;code&gt;brew install&lt;/code&gt;. It is a careful script; it can be run even if you have stuff installed to &lt;code&gt;/usr/local&lt;/code&gt; already. It tells you exactly what it will do before it does it too. You have to confirm everything it will do before it starts.</source>
          <target state="translated">이 스크립트는 Homebrew를 &lt;code&gt;/usr/local&lt;/code&gt; 에 설치 하므로 &lt;code&gt;brew install&lt;/code&gt; 을 brew 할 때 &lt;a href=&quot;faq#why-does-homebrew-say-sudo-is-bad&quot;&gt;sudo&lt;/a&gt; 가 필요하지 않습니다 . 신중한 스크립트입니다. &lt;code&gt;/usr/local&lt;/code&gt; 에 물건을 설치 한 경우에도 실행할 수 있습니다 이미 . 그것은 또한 그것을하기 전에 정확히 무엇을 할 것인지를 알려줍니다. 시작하기 전에 모든 작업을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="b307c4d6d909246c0a91f7f0c613064aa56deaed" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;HOMEBREW_NO_EMOJI&lt;/code&gt; environment variable, causing Homebrew to hide all emoji.</source>
          <target state="translated">이것은 &lt;code&gt;HOMEBREW_NO_EMOJI&lt;/code&gt; 를 설정합니다 환경 변수가 Homebrew가 모든 이모 숨길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="162ad307cf7d2156b8f21801ce3b7595f4220537" translate="yes" xml:space="preserve">
          <source>This will install all of your Node modules dependencies to your local build path. You can now continue with your build steps and take care of the installation into the Homebrew &lt;code&gt;prefix&lt;/code&gt; on your own, following the &lt;a href=&quot;formula-cookbook&quot;&gt;general Homebrew formula instructions&lt;/a&gt;.</source>
          <target state="translated">그러면 모든 노드 모듈 종속성이 로컬 빌드 경로에 설치됩니다. 이제 빌드 단계를 계속하고 브루에 설치 돌볼 수 &lt;code&gt;prefix&lt;/code&gt; 다음, 자신에 &lt;a href=&quot;formula-cookbook&quot;&gt;일반 브루 공식 지침을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07a60ac74c183a5159dcc6f672ef8cde26cdc4ec" translate="yes" xml:space="preserve">
          <source>This will install your Node module in npm&amp;rsquo;s global module style with a custom prefix to &lt;code&gt;libexec&lt;/code&gt;. All your modules&amp;rsquo; executables will be automatically resolved by npm into &lt;code&gt;libexec/bin&lt;/code&gt; for you, which is not symlinked into Homebrew&amp;rsquo;s prefix. We need to make sure these are installed. To do this we need to symlink all executables to &lt;code&gt;bin&lt;/code&gt; with:</source>
          <target state="translated">이에 사용자 정의 접두사로 NPM의 글로벌 모듈 스타일에 노드 모듈을 설치합니다 &lt;code&gt;libexec&lt;/code&gt; 디렉토리 . 모든 모듈의 실행 파일은 npm에 의해 자동으로 &lt;code&gt;libexec/bin&lt;/code&gt; 으로 해결되며 Homebrew의 접두사에는 연결되지 않습니다. 이것들이 설치되어 있는지 확인해야합니다. 이렇게하려면 모든 실행 파일을 &lt;code&gt;bin&lt;/code&gt; 에 심볼릭 링크해야합니다. .</target>
        </trans-unit>
        <trans-unit id="1a7104d2b82b2d2955b560b801371d7dff4b14bd" translate="yes" xml:space="preserve">
          <source>This will prepend that folder to your &lt;code&gt;PATH&lt;/code&gt;, ensuring any build script that searches the &lt;code&gt;PATH&lt;/code&gt; will find it first.</source>
          <target state="translated">이것은 당신에게 해당 폴더를 앞에 추가합니다 &lt;code&gt;PATH&lt;/code&gt; 어떤 빌드 스크립트를 보장하는 검색한다 &lt;code&gt;PATH&lt;/code&gt; 먼저 찾을 것이다.</target>
        </trans-unit>
        <trans-unit id="d78d7c02ef24dc5e8b9de139fbb724c61502eb70" translate="yes" xml:space="preserve">
          <source>This workflow is useful for maintainers or testers who regularly install lots of formulae.</source>
          <target state="translated">이 워크 플로는 많은 공식을 정기적으로 설치하는 관리자 또는 테스터에게 유용합니다.</target>
        </trans-unit>
        <trans-unit id="40422123fe6433ddb13b9f16e8d89d6fd149c3d8" translate="yes" xml:space="preserve">
          <source>Three commands are provided for displaying informational messages to the user:</source>
          <target state="translated">사용자에게 정보 메시지를 표시하기위한 세 가지 명령이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="db9fc85532aeb4b69e934531f97b216579213d68" translate="yes" xml:space="preserve">
          <source>Three weeks prior to the AGM, the PLC will nominate at least one candidate for each upcoming vacant seat. Any member may also nominate any other member as a candidate for the PLC at this time.</source>
          <target state="translated">AGM 3 주 전에 PLC는 다가오는 빈 자리에 대해 최소 한 명의 후보자를 지명합니다. 현재 모든 회원은 다른 회원을 PLC 후보로 지명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d810e786469cf124b94cb5fee51b2c6a9d30ecd" translate="yes" xml:space="preserve">
          <source>Thus it&amp;rsquo;s probably better to install your own stuff to the Cellar and then &lt;code&gt;brew link&lt;/code&gt; it. Like so:</source>
          <target state="translated">따라서 자신의 물건을 지하실에 설치 한 다음 &lt;code&gt;brew link&lt;/code&gt; 하는 것이 좋습니다. 이렇게 :</target>
        </trans-unit>
        <trans-unit id="eccf1a313fb1a1ef251c582afb0dbb8e1c7325ab" translate="yes" xml:space="preserve">
          <source>Thus, if you change the name of the class, you must also rename the file. Filenames should be all lowercase, and class names should be the strict CamelCase equivalent, e.g. formulae &lt;code&gt;gnu-go&lt;/code&gt; and &lt;code&gt;sdl_mixer&lt;/code&gt; become classes &lt;code&gt;GnuGo&lt;/code&gt; and &lt;code&gt;SdlMixer&lt;/code&gt;, even if part of their name is an acronym.</source>
          <target state="translated">따라서 클래스 이름을 변경하면 파일 이름도 바꿔야합니다. 파일 이름은 모두 소문자 여야하며 클래스 이름은 엄격한 CamelCase와 동일해야합니다. 예를 들어 수식 &lt;code&gt;gnu-go&lt;/code&gt; 및 &lt;code&gt;sdl_mixer&lt;/code&gt; 는 이름의 일부가 약어 인 경우에도 클래스 &lt;code&gt;GnuGo&lt;/code&gt; 및 &lt;code&gt;SdlMixer&lt;/code&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="092da30065f07adb4a08c52dc1aaf646aa06aee4" translate="yes" xml:space="preserve">
          <source>Tips and Tricks</source>
          <target state="translated">팁과 요령</target>
        </trans-unit>
        <trans-unit id="48ed3ae0c5f0892579ff25ad2f846bde52983c06" translate="yes" xml:space="preserve">
          <source>Title Case in &lt;code&gt;h1&lt;/code&gt; headings; sentence case in all other headings</source>
          <target state="translated">&lt;code&gt;h1&lt;/code&gt; 제목의 제목 케이스 ; 다른 모든 제목의 문장 대소 문자</target>
        </trans-unit>
        <trans-unit id="f993e2b3890a15fab97f861b40b41631943aff1d" translate="yes" xml:space="preserve">
          <source>To &lt;strong&gt;disable&lt;/strong&gt; automatic &lt;code&gt;brew cleanup&lt;/code&gt;:</source>
          <target state="translated">자동 &lt;code&gt;brew cleanup&lt;/code&gt; 를 &lt;strong&gt;비활성화&lt;/strong&gt; 하려면 :</target>
        </trans-unit>
        <trans-unit id="10303f0a97c1d81f86c2ada59b6457951e6ddd44" translate="yes" xml:space="preserve">
          <source>To add bindings for Python 3, please add &lt;code&gt;depends_on &quot;python&quot;&lt;/code&gt;.</source>
          <target state="translated">Python 3에 대한 바인딩을 추가하려면 &lt;code&gt;depends_on &quot;python&quot;&lt;/code&gt; 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="395d3d867f30bb724ba76e494654660da5c1ef03" translate="yes" xml:space="preserve">
          <source>To add bindings for Python 3, please add &lt;code&gt;depends_on &quot;python@3.x&quot;&lt;/code&gt; to work with the current Homebrew Python 3.x formula.</source>
          <target state="translated">Python 3에 대한 바인딩을 추가하려면 , 현재 Homebrew Python 3.x 공식으로 작동하도록 &lt;code&gt;depends_on &quot;python@3.x&quot;&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="8984f2542c7a29b1194a4e3a7ec06f17d69eaa6c" translate="yes" xml:space="preserve">
          <source>To allow that formulae to update again:</source>
          <target state="translated">해당 수식을 다시 업데이트하려면 :</target>
        </trans-unit>
        <trans-unit id="69eacf2b8f136eaa80a497c180c2fd0558adf160" translate="yes" xml:space="preserve">
          <source>To enable users to do rich queries without the problems above, Homebrew provides the &lt;code&gt;brew info&lt;/code&gt; command.</source>
          <target state="translated">위의 문제없이 사용자가 풍부한 쿼리를 수행 할 수 있도록 Homebrew는 &lt;code&gt;brew info&lt;/code&gt; 명령을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="08aacb36ef9ae8ea964f866a62e81d7ffe1f4b44" translate="yes" xml:space="preserve">
          <source>To find the names of linked keg-only formulae:</source>
          <target state="translated">연결된 통만 수식의 이름을 찾으려면 :</target>
        </trans-unit>
        <trans-unit id="a5dab391ee0e082260f2a10322ccf44bdc0e5f18" translate="yes" xml:space="preserve">
          <source>To find the names of normal (not keg-only) formulae that are installed, but not linked to the shared directories:</source>
          <target state="translated">설치되었지만 공유 디렉토리에 링크되지 않은 일반 (통독 전용 아님) 공식의 이름을 찾으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b063b625139a1ce958e1173667bdc5bc6f7d12bb" translate="yes" xml:space="preserve">
          <source>To install man pages into specific locations, use &lt;code&gt;man1.install &quot;foo.1&quot;, &quot;bar.1&quot;&lt;/code&gt;, &lt;code&gt;man2.install &quot;foo.2&quot;&lt;/code&gt;, etc.</source>
          <target state="translated">특정 위치에 매뉴얼 페이지를 설치하려면 &lt;code&gt;man1.install &quot;foo.1&quot;, &quot;bar.1&quot;&lt;/code&gt; , &lt;code&gt;man2.install &quot;foo.2&quot;&lt;/code&gt; 등을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5c71d034304113d83474c5b0397c3707606e4580" translate="yes" xml:space="preserve">
          <source>To make Homebrew&amp;rsquo;s completions available in &lt;code&gt;bash&lt;/code&gt;, you must source the definitions as part of your shell&amp;rsquo;s startup. Add the following to your &lt;code&gt;~/.bash_profile&lt;/code&gt; (or, if it doesn&amp;rsquo;t exist, `~/.profile):</source>
          <target state="translated">&lt;code&gt;bash&lt;/code&gt; 에서 Homebrew의 완성을 사용할 수 있도록하려면 셸 시작의 일부로 정의를 소싱해야합니다. &lt;code&gt;~/.bash_profile&lt;/code&gt; 에 다음을 추가하십시오 (또는 존재하지 않는 경우`~ / .profile).</target>
        </trans-unit>
        <trans-unit id="3ceb5a180249d3da9629de8ef163a3f316fb824c" translate="yes" xml:space="preserve">
          <source>To make Homebrew&amp;rsquo;s completions available in &lt;code&gt;bash&lt;/code&gt;, you must source the definitions as part of your shell&amp;rsquo;s startup. Add the following to your &lt;code&gt;~/.bash_profile&lt;/code&gt; file:</source>
          <target state="translated">Homebrew의 완성 기능을 &lt;code&gt;bash&lt;/code&gt; 에서 사용하려면 쉘 시작의 일부로 정의를 소싱해야합니다. &lt;code&gt;~/.bash_profile&lt;/code&gt; 파일에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="b8f105d177188f16689c02afaf204187076dbf7c" translate="yes" xml:space="preserve">
          <source>To make Homebrew&amp;rsquo;s completions available in &lt;code&gt;zsh&lt;/code&gt;, you must get the Homebrew-managed zsh site-functions on your &lt;code&gt;FPATH&lt;/code&gt; before initialising &lt;code&gt;zsh&lt;/code&gt;&amp;rsquo;s completion facility. Add the following to your &lt;code&gt;~/.zshrc&lt;/code&gt; file:</source>
          <target state="translated">에 브루의 완료를 사용할 수있게하려면 &lt;code&gt;zsh&lt;/code&gt; 을 , 당신은 당신의 브루 관리 zsh을 사이트 기능을 받아야합니다 &lt;code&gt;FPATH&lt;/code&gt; 초기화하기 전에 &lt;code&gt;zsh&lt;/code&gt; 을을 의 완료 시설. &lt;code&gt;~/.zshrc&lt;/code&gt; 파일에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="419edc2df3b5d1d576d89f878a5f79f0041e5425" translate="yes" xml:space="preserve">
          <source>To make Ruby install to &lt;code&gt;/usr/local&lt;/code&gt;, we need to add &lt;code&gt;gem: -n/usr/local/bin&lt;/code&gt; to your &lt;code&gt;~/.gemrc&lt;/code&gt;. It&amp;rsquo;s YAML, so do it manually or use this:</source>
          <target state="translated">루비가 설치하려면 &lt;code&gt;/usr/local&lt;/code&gt; , 우리는 추가 할 필요가 &lt;code&gt;gem: -n/usr/local/bin&lt;/code&gt; 당신에게 &lt;code&gt;~/.gemrc&lt;/code&gt; . YAML이므로 수동으로 수행하거나 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c09cd0193f7b7af3ad51786a3ca38d843e2a892b" translate="yes" xml:space="preserve">
          <source>To make a new branch and submit it for review, create a GitHub pull request with the following steps:</source>
          <target state="translated">새 브랜치를 만들고 검토를 위해 제출하려면 다음 단계로 GitHub 풀 요청을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="2c9c00768c46492f4809fe3c5e245f97dfa1534d" translate="yes" xml:space="preserve">
          <source>To make changes based on feedback:</source>
          <target state="translated">피드백을 기반으로 변경하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="97ed5cad9ac9cd71ff3929d4a3df5db2d90a1ba9" translate="yes" xml:space="preserve">
          <source>To remove a formula entirely, you may run &lt;code&gt;brew uninstall --force &amp;lt;formula&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">공식을 완전히 제거하려면 &lt;code&gt;brew uninstall --force &amp;lt;formula&amp;gt;&lt;/code&gt; 을 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="efe83793e00c447967f6dd2365599cb9cad006ea" translate="yes" xml:space="preserve">
          <source>To remove them manually, simply use:</source>
          <target state="translated">수동으로 제거하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5266384e3e18f20a5f558ce8ab4eb463c50db6bd" translate="yes" xml:space="preserve">
          <source>To respond well to feedback:</source>
          <target state="translated">피드백에 잘 응답하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="102410531e233f6e98ac6018bdb667ce908742f8" translate="yes" xml:space="preserve">
          <source>To show full JSON information about all installed formulae:</source>
          <target state="translated">설치된 모든 공식에 대한 전체 JSON 정보를 표시하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9c68229ab99c57f9dbd7642ae391d83cf2b357cd" translate="yes" xml:space="preserve">
          <source>To stop something from being updated/upgraded:</source>
          <target state="translated">업데이트 / 업그레이드를 중지하려면 :</target>
        </trans-unit>
        <trans-unit id="e96fa352d72e393ec3beb735a5f1ec17014c7645" translate="yes" xml:space="preserve">
          <source>To teach &lt;code&gt;easy_install&lt;/code&gt; and &lt;code&gt;pip&lt;/code&gt; to install there, either use the &lt;code&gt;--user&lt;/code&gt; switch or create a &lt;code&gt;~/.pydistutils.cfg&lt;/code&gt; file with the following content:</source>
          <target state="translated">&lt;code&gt;easy_install&lt;/code&gt; 및 &lt;code&gt;pip&lt;/code&gt; 에 설치하도록 지시하려면 &lt;code&gt;--user&lt;/code&gt; 스위치를 사용하거나 다음 내용 으로 &lt;code&gt;~/.pydistutils.cfg&lt;/code&gt; 파일을 만드십시오 .</target>
        </trans-unit>
        <trans-unit id="e9835ff3e25d32163557db406c901ba50bf3a31b" translate="yes" xml:space="preserve">
          <source>To uninstall Homebrew, paste the command below in a terminal prompt.</source>
          <target state="translated">Homebrew를 제거하려면 터미널 프롬프트에 아래 명령을 붙여 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="260d87ffab3c4d569d5c9708e0b66ceea9aa4469" translate="yes" xml:space="preserve">
          <source>To uninstall Homebrew, run the &lt;a href=&quot;https://github.com/homebrew/install#uninstall-homebrew&quot;&gt;uninstall script from the Homebrew/install repository&lt;/a&gt;.</source>
          <target state="translated">Homebrew를 제거하려면 &lt;a href=&quot;https://github.com/homebrew/install#uninstall-homebrew&quot;&gt;Homebrew / install 저장소에서 제거 스크립트를&lt;/a&gt; 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="e20b21ecfe6568c9e08def7e2f5409ca66f80593" translate="yes" xml:space="preserve">
          <source>To use a specific commit, tag, or branch from a repository, specify &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;:tag&lt;/code&gt; and &lt;code&gt;:revision&lt;/code&gt;, &lt;code&gt;:revision&lt;/code&gt;, or &lt;code&gt;:branch&lt;/code&gt; option, like so:</source>
          <target state="translated">저장소에서 특정 커밋, 태그 또는 분기를 사용하려면 &lt;code&gt;:tag&lt;/code&gt; 과 같이 : tag 및 &lt;code&gt;:revision&lt;/code&gt; , &lt;code&gt;:revision&lt;/code&gt; 또는 &lt;code&gt;:branch&lt;/code&gt; 옵션을 사용하여 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; 를 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cbc1d254e73003176eca81f2377d44c3991d7d0" translate="yes" xml:space="preserve">
          <source>To use one of Homebrew&amp;rsquo;s built-in download strategies, specify the &lt;code&gt;:using =&amp;gt;&lt;/code&gt; flag on a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">Homebrew의 기본 제공 다운로드 전략 중 하나를 사용하려면 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#url-class_method&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#head-class_method&quot;&gt; &lt;code&gt;head&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;:using =&amp;gt;&lt;/code&gt; 플래그를 지정하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0ffc0a6f3402adbe2f0bf7b57e857ca20187efbd" translate="yes" xml:space="preserve">
          <source>To use them you have to require the Node language module at the beginning of your formula file with:</source>
          <target state="translated">그것들을 사용하려면 수식 파일의 시작 부분에 다음과 같은 노드 언어 모듈이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="24345a14377fd821d3932f4e82f6431640955b0b" translate="yes" xml:space="preserve">
          <source>Today</source>
          <target state="translated">Today</target>
        </trans-unit>
        <trans-unit id="b0d2c6d699bf0c95c1961b78d594e7db1c3f5acb" translate="yes" xml:space="preserve">
          <source>Tons of build scripts break if their dependencies aren&amp;rsquo;t in either &lt;code&gt;/usr&lt;/code&gt; or &lt;code&gt;/usr/local&lt;/code&gt;. We fix this for Homebrew formulae (although we don&amp;rsquo;t always test for it), but you&amp;rsquo;ll find that many RubyGems and Python setup scripts break which is something outside our control.</source>
          <target state="translated">종속성이 &lt;code&gt;/usr&lt;/code&gt; 또는 &lt;code&gt;/usr/local&lt;/code&gt; 에 없으면 수많은 빌드 스크립트가 중단됩니다 . 우리는 Homebrew 공식에 대해이 문제를 해결하지만 (항상 테스트하지는 않지만) 많은 RubyGems 및 Python 설정 스크립트가 제어 할 수없는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4fc60ef5d69079c451ea67854c51808d9ec41c01" translate="yes" xml:space="preserve">
          <source>Tooling</source>
          <target state="translated">Tooling</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="4b4c761c84d1ab0db77877f3a5515577b9c7aa01" translate="yes" xml:space="preserve">
          <source>Troubleshooting for people writing new formulae</source>
          <target state="translated">새로운 수식을 작성하는 사람들을위한 문제 해결</target>
        </trans-unit>
        <trans-unit id="128da66345525638b2e22c239f76de0906e181c6" translate="yes" xml:space="preserve">
          <source>Try to summarise from the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt;&lt;code&gt;homepage&lt;/code&gt;&lt;/a&gt; what the formula does in the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt;&lt;code&gt;desc&lt;/code&gt;&lt;/a&gt;ription. Note that the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt;&lt;code&gt;desc&lt;/code&gt;&lt;/a&gt;ription is automatically prepended with the formula name.</source>
          <target state="translated">로부터 요약하려고 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt; &lt;code&gt;homepage&lt;/code&gt; &lt;/a&gt; 공식이에 무엇을 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt; &lt;code&gt;desc&lt;/code&gt; &lt;/a&gt; ription. 점을 유의 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt; &lt;code&gt;desc&lt;/code&gt; &lt;/a&gt; ription 자동 화학식 이름 앞에 추가된다.</target>
        </trans-unit>
        <trans-unit id="d4fe8bda843ec1e2549319c3d0243715fd7b4659" translate="yes" xml:space="preserve">
          <source>Try to summarize from the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt;&lt;code&gt;homepage&lt;/code&gt;&lt;/a&gt; what the formula does in the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt;&lt;code&gt;desc&lt;/code&gt;&lt;/a&gt;ription. Note that the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt;&lt;code&gt;desc&lt;/code&gt;&lt;/a&gt;ription is automatically prepended with the formula name.</source>
          <target state="translated">로부터 요약하려고 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#homepage%3D-class_method&quot;&gt; &lt;code&gt;homepage&lt;/code&gt; &lt;/a&gt; 공식이에 무엇을 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt; &lt;code&gt;desc&lt;/code&gt; &lt;/a&gt; ription. 점을 유의 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#desc%3D-class_method&quot;&gt; &lt;code&gt;desc&lt;/code&gt; &lt;/a&gt; ription 자동 화학식 이름 앞에 추가된다.</target>
        </trans-unit>
        <trans-unit id="259d7a95036f972deb858d148c86ab8881172f0c" translate="yes" xml:space="preserve">
          <source>Turn Homebrew&amp;rsquo;s analytics on or off respectively.</source>
          <target state="translated">Homebrew의 분석을 각각 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="dbbef6ff49f233a84afff59202222b4b1ddac2bf" translate="yes" xml:space="preserve">
          <source>Type Checking with Sorbet</source>
          <target state="translated">Sorbet으로 유형 검사</target>
        </trans-unit>
        <trans-unit id="114ac76fb9a98f5565e6835a432e610f8304dd97" translate="yes" xml:space="preserve">
          <source>Typographical conventions</source>
          <target state="translated">표기법</target>
        </trans-unit>
        <trans-unit id="669fc08e3536be1c6d49f95003e31c8442d8ecf4" translate="yes" xml:space="preserve">
          <source>USING HOMEBREW BEHIND A PROXY</source>
          <target state="translated">프록시를 사용하여 HOMEBREW 사용</target>
        </trans-unit>
        <trans-unit id="038780159e93a6554c3590f7cbd86a132d4bb568" translate="yes" xml:space="preserve">
          <source>Ubuntu&amp;rsquo;s &lt;code&gt;command-not-found equivalent&lt;/code&gt; for Homebrew. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-command-not-found/blob/HEAD/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="translated">Homebrew에 대한 Ubuntu의 &lt;code&gt;command-not-found equivalent&lt;/code&gt; . 자세한 정보 및 사용법 은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-command-not-found/blob/HEAD/README.md&quot;&gt; &lt;code&gt;README&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2614e2392d9a76f0adfc812b8d41034abef083a9" translate="yes" xml:space="preserve">
          <source>Ubuntu&amp;rsquo;s &lt;code&gt;command-not-found equivalent&lt;/code&gt; for Homebrew. See the &lt;a href=&quot;https://github.com/Homebrew/homebrew-command-not-found/blob/master/README.md&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more info and usage.</source>
          <target state="translated">Homebrew &lt;code&gt;command-not-found equivalent&lt;/code&gt; Ubuntu 명령 입니다. 자세한 정보 및 사용법 은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-command-not-found/blob/master/README.md&quot;&gt; &lt;code&gt;README&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5975ed70e9dde7263ad10d4f046d6b2ad0506d01" translate="yes" xml:space="preserve">
          <source>Understandability is more important than any particular style guideline.</source>
          <target state="translated">특정 스타일 가이드 라인보다 이해력이 더 중요합니다.</target>
        </trans-unit>
        <trans-unit id="2aa41463e6a4d80475176eb13688aa61ac71935a" translate="yes" xml:space="preserve">
          <source>Uninstall &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd14fee10af147e3d50bc8a0d84af5a31bf565c3" translate="yes" xml:space="preserve">
          <source>Uninstall all dependencies not listed from the &lt;code&gt;Brewfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Brewfile&lt;/code&gt; 에서 나열되지 않은 모든 종속성을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="b01e2733e45f4182b759cde0eb611c81a6582515" translate="yes" xml:space="preserve">
          <source>Uninstall and then install &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; (with existing and any appended install options).</source>
          <target state="translated">기존 및 추가 된 설치 옵션 을 사용하여 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 을 설치 제거한 후 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="233f3b3c78a0bf114748fdf65d4872984648692d" translate="yes" xml:space="preserve">
          <source>Uninstall and then reinstall a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; using the same options it was originally installed with, plus any appended options specific to a &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">원래 설치된 것과 동일한 옵션과 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 고유 한 추가 옵션을 사용하여 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 또는 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 를 제거한 다음 다시 설치합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1deb5f815657d1069b0fc331ceca0183b9d3503e" translate="yes" xml:space="preserve">
          <source>Uninstall formulae that were only installed as a dependency of another formula and are now no longer needed.</source>
          <target state="translated">다른 수식의 종속성으로 만 설치되어 더 이상 필요하지 않은 수식을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="eb45a9c3025eaa4734a0cffb97226d387103ffbd" translate="yes" xml:space="preserve">
          <source>Uninstallation</source>
          <target state="translated">Uninstallation</target>
        </trans-unit>
        <trans-unit id="33d016f2c7631638c09e83372eaf29ebe3090a24" translate="yes" xml:space="preserve">
          <source>Uninstallation is documented in the &lt;a href=&quot;faq&quot;&gt;FAQ&lt;/a&gt;.</source>
          <target state="translated">제거는 &lt;a href=&quot;faq&quot;&gt;FAQ에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e57f56693f1c3bbc57fbe812b8c78f22d77c4be" translate="yes" xml:space="preserve">
          <source>Uninstalls the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; 를&lt;/em&gt; 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="217b92c4e3fcac49e038f8606b45bdbdbef247cc" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; is set, &lt;code&gt;brew cleanup&lt;/code&gt; will be run for the installed formulae or, every 30 days, for all formulae.</source>
          <target state="translated">&lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; 을 설정 하지 않으면 설치된 수식 또는 모든 수식에 대해 30 일마다 &lt;code&gt;brew cleanup&lt;/code&gt; 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2322a7ad597869a43f91f5a6993043d31054ff89" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; is set, &lt;code&gt;brew cleanup&lt;/code&gt; will be run for the reinstalled formulae or, every 30 days, for all formulae.</source>
          <target state="translated">&lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; 이 설정되어 있지 않으면 다시 &lt;code&gt;brew cleanup&lt;/code&gt; 수식에 대해 또는 모든 수식에 대해 30 일마다 추출 정리 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="0f594b1d5c3d3fdea10b809a186a12d14850d424" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; is set, &lt;code&gt;brew cleanup&lt;/code&gt; will be run for the upgraded formulae or, every 30 days, for all formulae.</source>
          <target state="translated">&lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; 을 설정 하지 않으면 업그레이드 된 수식 또는 모든 수식에 대해 30 일마다 &lt;code&gt;brew cleanup&lt;/code&gt; 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="a7ff0c3882584e91a8b15a6adf6199281e0eeaa8" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; is set, &lt;code&gt;brew cleanup&lt;/code&gt; will then be run for the installed formulae or, every 30 days, for all formulae.</source>
          <target state="translated">&lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; 이 설정되어 있지 않으면 설치된 공식에 대해 또는 모든 공식에 대해 30 일마다 &lt;code&gt;brew cleanup&lt;/code&gt; 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="7ebdd00a0c75457ab60a9473aac22a7dfc992fa0" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; is set, &lt;code&gt;brew cleanup&lt;/code&gt; will then be run for the reinstalled formulae or, every 30 days, for all formulae.</source>
          <target state="translated">&lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; 이 설정되어 있지 않으면 다시 설치된 수식에 대해 또는 모든 수식에 대해 30 일마다 &lt;code&gt;brew cleanup&lt;/code&gt; 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="aa4eaf04988d78b304305616470b8c4638602817" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; is set, &lt;code&gt;brew cleanup&lt;/code&gt; will then be run for the upgraded formulae or, every 30 days, for all formulae.</source>
          <target state="translated">&lt;code&gt;HOMEBREW_NO_INSTALL_CLEANUP&lt;/code&gt; 이 설정되어 있지 않으면 업그레이드 된 공식에 대해 또는 모든 공식에 대해 30 일마다 &lt;code&gt;brew cleanup&lt;/code&gt; 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="ba7a32490ef4aac1921a7d8a8d09a1ac7f8dd440" translate="yes" xml:space="preserve">
          <source>Unlike formulae, casks must have globally unique names to avoid clashes. This can be achieved by e.g. prepending the cask name with your github username: &lt;code&gt;username-formula-name&lt;/code&gt;.</source>
          <target state="translated">공식과 달리 캐스 크는 충돌을 피하기 위해 전역 적으로 고유 한 이름을 가져야합니다. 예를 들어 캐스 크 이름 앞에 github 사용자 &lt;code&gt;username-formula-name&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="6d634bf72efba9a6e19574c9bd220aabd93d7a22" translate="yes" xml:space="preserve">
          <source>Unlinked normal formulae</source>
          <target state="translated">연결되지 않은 정규식</target>
        </trans-unit>
        <trans-unit id="0a5d11dafdaf9e83de3ccf079f6744000c57b2c4" translate="yes" xml:space="preserve">
          <source>Unofficial external commands</source>
          <target state="translated">비공식 외부 명령</target>
        </trans-unit>
        <trans-unit id="527740c1882f1945b58f0b6ca9191690fdf31f58" translate="yes" xml:space="preserve">
          <source>Unpack the source files for &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; into subdirectories of the current working directory.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 의 소스 파일을 현재 작업 디렉토리의 서브 디렉토리에 압축 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="33df1de8c6d582c288b7ebf2bd4e8bb06a2ee9bf" translate="yes" xml:space="preserve">
          <source>Unpin &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;, allowing them to be upgraded by &lt;code&gt;brew upgrade&lt;/code&gt;&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;. See also &lt;code&gt;pin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew upgrade&lt;/code&gt; &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 으로 업그레이드 할 수 있도록 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 고정 해제합니다 . &lt;code&gt;pin&lt;/code&gt; 도 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1fc1f3569aa613dec551a382afe733eedc1be8d" translate="yes" xml:space="preserve">
          <source>Unstable versions (&lt;code&gt;devel&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;)</source>
          <target state="translated">불안정한 버전 ( &lt;code&gt;devel&lt;/code&gt; , &lt;code&gt;head&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d3de29e6b4110a86fb53b2fd1320c82d76dab1a8" translate="yes" xml:space="preserve">
          <source>Unstable versions (&lt;code&gt;head&lt;/code&gt;)</source>
          <target state="translated">불안정한 버전 ( &lt;code&gt;head&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f6af51bb5efe616faf19191a7abd875307166aef" translate="yes" xml:space="preserve">
          <source>Unstable versions (alpha, beta, development versions) are not acceptable for versioned (or unversioned) formulae.</source>
          <target state="translated">불안정한 버전 (알파, 베타, 개발 버전)은 버전이 지정된 (또는 버전이 지정되지 않은) 공식에 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9697de664286ebcb6161ccd1be8b5fd60a3a4b5c" translate="yes" xml:space="preserve">
          <source>Unsupported interesting forks</source>
          <target state="translated">지원되지 않는 재미있는 포크</target>
        </trans-unit>
        <trans-unit id="7bf63fffbd8ca5d90bd4b1934bfdc84c519ba863" translate="yes" xml:space="preserve">
          <source>Unsupported interesting taps</source>
          <target state="translated">지원되지 않는 흥미로운 탭</target>
        </trans-unit>
        <trans-unit id="2ab57c3c8d625370299cb654c62b10dc25937706" translate="yes" xml:space="preserve">
          <source>Untar anywhere</source>
          <target state="translated">어디서나 Untar</target>
        </trans-unit>
        <trans-unit id="e31fed4adad3e5d7c28db3d87cb61d66a2ef673c" translate="yes" xml:space="preserve">
          <source>Unversioned symlinks for &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;python-config&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt; etc. are installed here:</source>
          <target state="translated">&lt;code&gt;python&lt;/code&gt; , &lt;code&gt;python-config&lt;/code&gt; , &lt;code&gt;pip&lt;/code&gt; 등의 버전이 지정되지 않은 심볼릭 링크 가 여기에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="1a751ee0799c5c72f1b47c7a9375493cb591b5fa" translate="yes" xml:space="preserve">
          <source>Update SPDX license data in the Homebrew repository.</source>
          <target state="translated">Homebrew 저장소에서 SPDX 라이선스 데이터를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="9d0db73afcad5aab741157e653c524f38ef17d39" translate="yes" xml:space="preserve">
          <source>Update versions for PyPI resource blocks in &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; PyPI 리소스 블록에 대한 업데이트 버전 .</target>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">Updating</target>
        </trans-unit>
        <trans-unit id="f3a320ed31f31b05e21c3dfe656a44daf68eee38" translate="yes" xml:space="preserve">
          <source>Updating Software in Homebrew</source>
          <target state="translated">Homebrew에서 소프트웨어 업데이트</target>
        </trans-unit>
        <trans-unit id="0e190de60cc1bb070a169edd8428461330409ffe" translate="yes" xml:space="preserve">
          <source>Updating for new Xcode releases</source>
          <target state="translated">새로운 Xcode 릴리스 업데이트</target>
        </trans-unit>
        <trans-unit id="b0cc4b7ad1de1c6d653dabf6da315e7cff968956" translate="yes" xml:space="preserve">
          <source>Updating formulae</source>
          <target state="translated">수식 업데이트</target>
        </trans-unit>
        <trans-unit id="37dd76e2489f08211a9810b44e77ec6bd184f7a2" translate="yes" xml:space="preserve">
          <source>Upgrade everything with:</source>
          <target state="translated">다음으로 모든 것을 업그레이드하십시오 :</target>
        </trans-unit>
        <trans-unit id="bac05f92ca332df4c4aca7abb78564d84d1ab107" translate="yes" xml:space="preserve">
          <source>Upgrade outdated casks and outdated, unpinned formulae using the same options they were originally installed with, plus any appended brew formula options. If &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; are specified, upgrade only the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; kegs (unless they are pinned; see &lt;code&gt;pin&lt;/code&gt;, &lt;code&gt;unpin&lt;/code&gt;).</source>
          <target state="translated">원래 설치된 것과 동일한 옵션과 추가 된 추출 공식 옵션을 사용하여 오래된 통과 고정되지 않은 오래된 공식을 업그레이드하십시오. 경우 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 이나 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 지정 만 주어진 업그레이드 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 또는 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; (그들이 고정되지 않는 한, 참조 통을 &lt;code&gt;pin&lt;/code&gt; , &lt;code&gt;unpin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0fa6af952d0071f4e29fa1ed3411078c03cf892c" translate="yes" xml:space="preserve">
          <source>Upgrade outdated, unpinned formulae (with existing and any appended brew formula options).</source>
          <target state="translated">오래되고 고정되지 않은 수식을 업그레이드합니다 (기존의 수식 및 추가 된 추출 수식 옵션 사용).</target>
        </trans-unit>
        <trans-unit id="cb1165e0010937b9eb7d7b2448709fff636f53f4" translate="yes" xml:space="preserve">
          <source>Upgrading macOS</source>
          <target state="translated">macOS 업그레이드</target>
        </trans-unit>
        <trans-unit id="4a477a3f523b401c70e301a6c6d27005231c120c" translate="yes" xml:space="preserve">
          <source>Upgrading macOS can cause errors like the following:</source>
          <target state="translated">macOS를 업그레이드하면 다음과 같은 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79bdbd2f453bcc77931ed6e38294324baed14292" translate="yes" xml:space="preserve">
          <source>Upload debugging information to a &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist&lt;/a&gt;:</source>
          <target state="translated">디버깅 정보를 &lt;a href=&quot;https://gist.github.com&quot;&gt;Gist에&lt;/a&gt; 업로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b36e5ac119d9a10c6007069a484919d8cb019bc" translate="yes" xml:space="preserve">
          <source>Upload logs for a failed build of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; to a new Gist.</source>
          <target state="translated">실패한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 빌드에 대한 로그를 새 Gist에 업로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="4305c93cea4895d76b7471500c39dd1bdc087015" translate="yes" xml:space="preserve">
          <source>Upload logs for a failed build of &lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt; to a new Gist. Presents an error message if no logs are found.</source>
          <target state="translated">실패한 &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; 빌드에 대한 로그를 새 Gist에 업로드 합니다. 로그를 찾을 수없는 경우 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="bca99c3189af4d0829463ca88009a3ceb778ccb5" translate="yes" xml:space="preserve">
          <source>Upload your branch of new commits to your fork:</source>
          <target state="translated">새로운 커밋 분기를 포크에 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="0a3f040bf7043a93dec697e15fafcf7943f4882f" translate="yes" xml:space="preserve">
          <source>Upstream should have a release branch for each formula version, and release security updates for each version when necessary. For example, &lt;a href=&quot;https://php.net/supported-versions.php&quot;&gt;PHP 7.0 was not a supported version but PHP 7.2 was&lt;/a&gt; in January 2020. By contrast, most software projects are structured to only release security updates for their latest versions, so their earlier versions are not eligible for versioning.</source>
          <target state="translated">업스트림에는 각 공식 버전에 대한 릴리스 분기가 있어야하며 필요한 경우 각 버전에 대한 보안 업데이트를 릴리스해야합니다. 예를 들어 &lt;a href=&quot;https://php.net/supported-versions.php&quot;&gt;PHP 7.0은 지원되는 버전이 아니었지만 PHP 7.2는&lt;/a&gt; 2020 년 1 월에 있었습니다 . 반면 대부분의 소프트웨어 프로젝트는 최신 버전에 대한 보안 업데이트 만 릴리스하도록 구성되어 있으므로 이전 버전은 버전 관리에 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13ec73a5c0c0985ffeaf0d0d85f8dc77c1a4cd8f" translate="yes" xml:space="preserve">
          <source>Upstream should have a release branch for the versioned formulae version and still make security updates for that version, when necessary. For example, &lt;a href=&quot;https://php.net/supported-versions.php&quot;&gt;PHP 5.5 was not a supported version but PHP 7.2 was&lt;/a&gt; in January 2018.</source>
          <target state="translated">업스트림에는 버전이 지정된 수식 버전에 대한 릴리스 분기가 있어야하며 필요한 경우 해당 버전에 대한 보안 업데이트를 작성해야합니다. 예를 들어, &lt;a href=&quot;https://php.net/supported-versions.php&quot;&gt;PHP 5.5는 지원되는 버전이 아니지만 PHP 7.2는&lt;/a&gt; 2018 년 1 월 이었습니다 .</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="95f0337addfd664e16e48d1e9f84a7af7663aa22" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:any_of&lt;/code&gt;, &lt;code&gt;:all_of&lt;/code&gt; or &lt;code&gt;:with&lt;/code&gt; to describe complex license expressions. &lt;code&gt;:any_of&lt;/code&gt; should be used when the user can choose which license to use. &lt;code&gt;:all_of&lt;/code&gt; should be used when the user must use all licenses. &lt;code&gt;:with&lt;/code&gt; should be used to specify a valid SPDX exception. Add &lt;code&gt;+&lt;/code&gt; to an identifier to indicate that the formulae can be licensed under later versions of the same license.</source>
          <target state="translated">사용 &lt;code&gt;:any_of&lt;/code&gt; , &lt;code&gt;:all_of&lt;/code&gt; 또는 &lt;code&gt;:with&lt;/code&gt; 복잡한 라이센스 식을 설명합니다. &lt;code&gt;:any_of&lt;/code&gt; 는 사용자가 사용할 라이선스를 선택할 수있을 때 사용해야합니다. &lt;code&gt;:all_of&lt;/code&gt; 는 사용자가 모든 라이선스를 사용해야 할 때 사용해야합니다. &lt;code&gt;:with&lt;/code&gt; 는 유효한 SPDX 예외를 지정하는 데 사용해야합니다. 식별자에 &lt;code&gt;+&lt;/code&gt; 를 추가 하여 동일한 라이센스의 이후 버전에 따라 공식에 라이센스를 부여 할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5413be3adf8e7feb73c9a44ff5bb30225141b0dc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brew bump-formula-pr&lt;/code&gt; to do everything (i.e. forking, committing, pushing) with a single command. Run &lt;code&gt;brew bump-formula-pr --help&lt;/code&gt; to learn more.</source>
          <target state="translated">사용 &lt;code&gt;brew bump-formula-pr&lt;/code&gt; 모든 일을 (예 : 포크 (fork), 커밋 밀어) 하나의 명령으로. &lt;code&gt;brew bump-formula-pr --help&lt;/code&gt; 실행 하여 자세한 내용을 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="a57f89487e3be13b54b30bbf180ed961c039d19d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; to check what versions are installed but not currently activated, then &lt;code&gt;brew switch &amp;lt;formula&amp;gt; &amp;lt;version&amp;gt;&lt;/code&gt; to activate the desired version. This can be useful if you would like to switch between versions of a formula.</source>
          <target state="translated">&lt;code&gt;brew info &amp;lt;formula&amp;gt;&lt;/code&gt; 을 사용 하여 설치되었지만 현재 활성화되지 않은 버전을 확인한 다음 &lt;code&gt;brew switch &amp;lt;formula&amp;gt; &amp;lt;version&amp;gt;&lt;/code&gt; 를 brew 하여 원하는 버전을 활성화하십시오. 수식 버전간에 전환하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2ac0604265c2c3127048c275456e418137336a00" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brew info&lt;/code&gt; and check if the version guessed by Homebrew from the URL is correct. Add an explicit &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; if not.</source>
          <target state="translated">&lt;code&gt;brew info&lt;/code&gt; 사용 하고 URL에서 Homebrew가 추측 한 버전이 올바른지 확인하십시오. 그렇지 않은 경우 명시 적 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version-class_method&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="95b7f6f4b6197c232dbbdd6f5dd9956e3cbe63be" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brew log &amp;lt;formula&amp;gt;&lt;/code&gt; to find out! Likely because it had &lt;a href=&quot;acceptable-formulae&quot;&gt;unresolved issues&lt;/a&gt; and/or &lt;a href=&quot;analytics&quot;&gt;our analytics&lt;/a&gt; identified it was not widely used.</source>
          <target state="translated">&lt;code&gt;brew log &amp;lt;formula&amp;gt;&lt;/code&gt; 을 사용 하여 알아보십시오! &lt;a href=&quot;acceptable-formulae&quot;&gt;해결되지 않은 문제가&lt;/a&gt; 있거나 &lt;a href=&quot;analytics&quot;&gt;분석 결과&lt;/a&gt; 널리 사용 되지 않았기 때문일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26ffde1f7a886d109dd0245009f27f97188f51b9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brew log &amp;lt;formula&amp;gt;&lt;/code&gt; to find out! Likely because it had unresolved issues or our analytics identified it was not widely used.</source>
          <target state="translated">&lt;code&gt;brew log &amp;lt;formula&amp;gt;&lt;/code&gt; 을 사용 하여 찾으십시오! 문제가 해결되지 않았거나 분석 결과 널리 사용되지 않았기 때문일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f39610f0350238543aba16aabdffce24d7adaac" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brew release-notes --markdown $PREVIOUS_TAG&lt;/code&gt; to generate the release notes for the release.</source>
          <target state="translated">사용 &lt;code&gt;brew release-notes --markdown $PREVIOUS_TAG&lt;/code&gt; 릴리스의 릴리스 노트를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91e9578df957c2c3cc9a794f177a32a2bd32f6eb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brew release-notes --markdown $PREVIOUS_TAG&lt;/code&gt; to generate the release notes for the release. &lt;a href=&quot;https://github.com/Homebrew/brew/releases/new&quot;&gt;Create a new release on GitHub&lt;/a&gt; based on the new tag.</source>
          <target state="translated">사용 &lt;code&gt;brew release-notes --markdown $PREVIOUS_TAG&lt;/code&gt; 릴리스의 릴리스 노트를 생성 할 수 있습니다. 새 태그를 기반으로 &lt;a href=&quot;https://github.com/Homebrew/brew/releases/new&quot;&gt;GitHub에서 새 릴리스를 만듭니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0219a1a9b1089c0c9b3265d64b2ea66ec3d2bf21" translate="yes" xml:space="preserve">
          <source>Use a subordinate list item instead of dropping a multi-sentence paragraph-long item into a list of sentence fragments</source>
          <target state="translated">여러 문장으로 된 단락이 긴 항목을 문장 조각 목록에 놓지 않고 하위 목록 항목을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3522359fbe5cd1899f4e3c6a47c2f0bf7caafb44" translate="yes" xml:space="preserve">
          <source>Use the license identifier from the &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDX License List&lt;/a&gt; e.g. &lt;code&gt;license &quot;BSD-2-Clause&quot;&lt;/code&gt;, or use &lt;code&gt;license :public_domain&lt;/code&gt; for public domain software.</source>
          <target state="translated">&lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDX 라이선스 목록&lt;/a&gt; 의 라이선스 식별자 ( 예 : &lt;code&gt;license &quot;BSD-2-Clause&quot;&lt;/code&gt; )를 사용하거나 공용 도메인 소프트웨어의 경우 &lt;code&gt;license :public_domain&lt;/code&gt; 을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="75dcee330aad4fcc8c7b1a815c0a5d661cfc6171" translate="yes" xml:space="preserve">
          <source>Use the same package manager to manage your macOS, Linux, and Windows systems</source>
          <target state="translated">동일한 패키지 관리자를 사용하여 macOS, Linux 및 Windows 시스템을 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="9852c87e82fb3564c24b4f60b4a61705d3652560" translate="yes" xml:space="preserve">
          <source>Use this API key when accessing the Bintray API (where bottles are stored).</source>
          <target state="translated">Bintray API (병이 저장되는 위치)에 액세스 할 때이 API 키를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aa4e2554f94c40eb351deea904bdeceecf6e9f7f" translate="yes" xml:space="preserve">
          <source>Use this FTP proxy for &lt;code&gt;curl&lt;/code&gt;(1), &lt;code&gt;git&lt;/code&gt;(1) and &lt;code&gt;svn&lt;/code&gt;(1) when downloading through Homebrew.</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; (1), &lt;code&gt;git&lt;/code&gt; (1) 및 &lt;code&gt;svn&lt;/code&gt; 에이 FTP 프록시를 사용하십시오.Homebrew를 통해 다운로드 할 때 (1) .</target>
        </trans-unit>
        <trans-unit id="0f96a053410b6b53f1f13ae2dc89f631a6dea5f9" translate="yes" xml:space="preserve">
          <source>Use this HTTP proxy for &lt;code&gt;curl&lt;/code&gt;(1), &lt;code&gt;git&lt;/code&gt;(1) and &lt;code&gt;svn&lt;/code&gt;(1) when downloading through Homebrew.</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; (1), &lt;code&gt;git&lt;/code&gt; (1) 및 &lt;code&gt;svn&lt;/code&gt; 에이 HTTP 프록시를 사용하십시오.Homebrew를 통해 다운로드 할 때 (1) .</target>
        </trans-unit>
        <trans-unit id="1d760a91a3c3caa2cae883b9fae1a2b2231026e9" translate="yes" xml:space="preserve">
          <source>Use this HTTPS proxy for &lt;code&gt;curl&lt;/code&gt;(1), &lt;code&gt;git&lt;/code&gt;(1) and &lt;code&gt;svn&lt;/code&gt;(1) when downloading through Homebrew.</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; (1), &lt;code&gt;git&lt;/code&gt; (1) 및 &lt;code&gt;svn&lt;/code&gt; 에이 HTTPS 프록시 사용Homebrew를 통해 다운로드 할 때 (1) .</target>
        </trans-unit>
        <trans-unit id="9d5efe00d8df11a5e9cb70e996e54dc95d03483e" translate="yes" xml:space="preserve">
          <source>Use this SOCKS5 proxy for &lt;code&gt;curl&lt;/code&gt;(1), &lt;code&gt;git&lt;/code&gt;(1) and &lt;code&gt;svn&lt;/code&gt;(1) when downloading through Homebrew.</source>
          <target state="translated">Homebrew를 통해 다운로드 할 때 &lt;code&gt;curl&lt;/code&gt; (1), &lt;code&gt;git&lt;/code&gt; (1) 및 &lt;code&gt;svn&lt;/code&gt; (1) 에이 SOCKS5 프록시를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8453c0def8e17607ef934b4e87f09c5fdfb20397" translate="yes" xml:space="preserve">
          <source>Use this URL as the Homebrew/brew &lt;code&gt;git&lt;/code&gt;(1) remote.</source>
          <target state="translated">이 URL을 Homebrew / brew &lt;code&gt;git&lt;/code&gt; (1) 원격으로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4af4090275db998d535cc114f5930a23b53c1610" translate="yes" xml:space="preserve">
          <source>Use this URL as the Homebrew/homebrew-core &lt;code&gt;git&lt;/code&gt;(1) remote.</source>
          <target state="translated">이 URL을 Homebrew / homebrew-core &lt;code&gt;git&lt;/code&gt; (1) 원격으로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bef8884096c247274cdd2343fbdad6ef86e10faf" translate="yes" xml:space="preserve">
          <source>Use this URL as the download mirror for bottles. For example, &lt;code&gt;HOMEBREW_BOTTLE_DOMAIN=http://localhost:8080&lt;/code&gt; will cause all bottles to download from the prefix &lt;code&gt;http://localhost:8080/&lt;/code&gt;.</source>
          <target state="translated">이 URL을 병의 다운로드 미러로 사용하십시오. 예를 들어, &lt;code&gt;HOMEBREW_BOTTLE_DOMAIN=http://localhost:8080&lt;/code&gt; 은 모든 병이 &lt;code&gt;http://localhost:8080/&lt;/code&gt; 접두사에서 다운로드되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="bf1f623a638d1fed5dc7cf4499916d596ebe7379" translate="yes" xml:space="preserve">
          <source>Use this X11 display when opening a page in a browser, for example with &lt;code&gt;brew home&lt;/code&gt;. Primarily useful on Linux.</source>
          <target state="translated">&lt;code&gt;brew home&lt;/code&gt; 과 같이 브라우저에서 페이지를 열 때이 X11 디스플레이를 사용합니다. . 주로 Linux에서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fe78309ab324329ace65b02fd1ea339129644ed1" translate="yes" xml:space="preserve">
          <source>Use this as the &lt;code&gt;bat&lt;/code&gt; configuration file.</source>
          <target state="translated">이것을 &lt;code&gt;bat&lt;/code&gt; 구성 파일 로 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f3b4d2c41a1470537fceaac795bd78f37b4ac486" translate="yes" xml:space="preserve">
          <source>Use this as the &lt;code&gt;svn&lt;/code&gt;(1) binary.</source>
          <target state="translated">이것을 &lt;code&gt;svn&lt;/code&gt; (1) 바이너리 로 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8bc52e2c494bdea8ccde545dcf32a4b6680b222" translate="yes" xml:space="preserve">
          <source>Use this as the browser when opening project homepages.</source>
          <target state="translated">프로젝트 홈페이지를 열 때 브라우저로 사용하세요.</target>
        </trans-unit>
        <trans-unit id="411b2dc46f225b29de8b750f8dd9034a31ee8184" translate="yes" xml:space="preserve">
          <source>Use this directory as the download cache.</source>
          <target state="translated">이 디렉토리를 다운로드 캐시로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c359f546df9d659de2fbe24a1ef631cf2c339d6a" translate="yes" xml:space="preserve">
          <source>Use this directory to store log files.</source>
          <target state="translated">이 디렉토리를 사용하여 로그 파일을 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="298e3ab4388bd869fed2ba1ef253d275747a58cf" translate="yes" xml:space="preserve">
          <source>Use this editor when editing a single formula, or several formulae in the same directory.</source>
          <target state="translated">단일 공식을 편집하거나 동일한 디렉토리에서 여러 공식을 편집 할 때이 편집기를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="263690eca5e9f00f930923e752f45b8dc49cce6a" translate="yes" xml:space="preserve">
          <source>Use this password for authentication with the GitHub API, for features such as &lt;code&gt;brew search&lt;/code&gt;. This is deprecated in favour of using &lt;code&gt;HOMEBREW_GITHUB_API_TOKEN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew search&lt;/code&gt; 와 같은 기능에 대해 GitHub API 인증에이 비밀번호를 사용하십시오 . 이것은 &lt;code&gt;HOMEBREW_GITHUB_API_TOKEN&lt;/code&gt; 사용을 위해 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f1a8e7593edbadb697925bdbe94b228f8b4823c0" translate="yes" xml:space="preserve">
          <source>Use this path as the temporary directory for building packages. Changing this may be needed if your system temporary directory and Homebrew prefix are on different volumes, as macOS has trouble moving symlinks across volumes when the target does not yet exist. This issue typically occurs when using FileVault or custom SSD configurations.</source>
          <target state="translated">이 경로를 패키지 빌드를위한 임시 디렉토리로 사용하십시오. 시스템 임시 디렉토리와 Homebrew 접두사가 다른 볼륨에있는 경우이를 변경해야 할 수 있습니다. macOS는 대상이 아직 존재하지 않을 때 볼륨간에 심볼릭 링크를 이동하는 데 문제가 있기 때문입니다. 이 문제는 일반적으로 FileVault 또는 사용자 지정 SSD 구성을 사용할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7b6a417ca9c561cf0a519e5359884df7d7617478" translate="yes" xml:space="preserve">
          <source>Use this personal access token for the GitHub API, for features such as &lt;code&gt;brew search&lt;/code&gt;. You can create one at &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;https://github.com/settings/tokens&lt;/a&gt;. If set, GitHub will allow you a greater number of API requests. For more information, see: &lt;a href=&quot;https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting&quot;&gt;https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;brew search&lt;/code&gt; 와 같은 기능을 위해 GitHub API에이 개인 액세스 토큰을 사용하십시오 . &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;https://github.com/settings/tokens&lt;/a&gt; 에서 만들 수 있습니다 . 설정하면 GitHub에서 더 많은 API 요청을 허용합니다. 자세한 내용은 &lt;a href=&quot;https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting&quot;&gt;https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d7919aa7cd81bc995d5691491d4bfa4bb3f44673" translate="yes" xml:space="preserve">
          <source>Use this username for authentication with the GitHub API, for features such as &lt;code&gt;brew search&lt;/code&gt;. This is deprecated in favour of using &lt;code&gt;HOMEBREW_GITHUB_API_TOKEN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew search&lt;/code&gt; 와 같은 기능에 대해 GitHub API 인증에이 사용자 이름을 사용하십시오 . &lt;code&gt;HOMEBREW_GITHUB_API_TOKEN&lt;/code&gt; 을 사용하기 위해 더 이상 사용되지 않습니다. .</target>
        </trans-unit>
        <trans-unit id="a7b97574873aaadc94c34e092d1d6014f1e8bb67" translate="yes" xml:space="preserve">
          <source>Use this username when accessing the Bintray API (where bottles are stored).</source>
          <target state="translated">Bintray API (병이 저장된 곳)에 액세스 할 때이 사용자 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f6ab79ea30522ca3323d75b6d7b26fdae22d6892" translate="yes" xml:space="preserve">
          <source>Use this value as the number of parallel jobs to run when building with &lt;code&gt;make&lt;/code&gt;(1).</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; (1)로 빌드 할 때 실행할 병렬 작업 수로이 값을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c2aaab82b1f317d99d3e6fc7e652d7a273bb52c" translate="yes" xml:space="preserve">
          <source>Useful, reliable alternatives exist should you wish to use &lt;code&gt;keg_only&lt;/code&gt; tools outside of Homebrew.</source>
          <target state="translated">Homebrew 외부에서 &lt;code&gt;keg_only&lt;/code&gt; 도구 를 사용하려는 경우 유용하고 안정적인 대안이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57f2b181d0a5e79a147ea1cdf41457f58dbbb3c9" translate="yes" xml:space="preserve">
          <source>Users</source>
          <target state="translated">Users</target>
        </trans-unit>
        <trans-unit id="7f108883a016ef6a61ec8644adc41d97effc9dc0" translate="yes" xml:space="preserve">
          <source>Users can then install your formulae either with &lt;code&gt;brew install foo&lt;/code&gt; if there&amp;rsquo;s no core formula with the same name, or with &lt;code&gt;brew install user/repo/foo&lt;/code&gt; to avoid conflicts.</source>
          <target state="translated">그런 다음 이름이 같은 핵심 수식이없는 경우 &lt;code&gt;brew install foo&lt;/code&gt; 또는 충돌을 피하기 위해 &lt;code&gt;brew install user/repo/foo&lt;/code&gt; 를 사용하여 수식을 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c85edbbae892df48c35a6e9c46f26c8bd9288d5" translate="yes" xml:space="preserve">
          <source>Users take precedence over maintainers, except in specifically maintainer-focused documents.</source>
          <target state="translated">특히 관리자 중심의 문서를 제외하고 사용자는 관리자보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="53e075105bc1e5b65c40e7e24812ce1b190c90c6" translate="yes" xml:space="preserve">
          <source>Using environment variables</source>
          <target state="translated">환경 변수 사용</target>
        </trans-unit>
        <trans-unit id="6135d276a56cb7707a4bf2f12d1bdfc1e1faff1f" translate="yes" xml:space="preserve">
          <source>Using the JSON output, queries can be made against Homebrew with less risk of being broken due to Homebrew code changes, and without needing to understand Homebrew&amp;rsquo;s Ruby internals.</source>
          <target state="translated">JSON 출력을 사용하면 Homebrew의 Ruby 내부 내용을 이해할 필요없이 Homebrew 코드 변경으로 인해 끊어 질 위험이 적은 Homebrew에 대해 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f40d56596da3b95d432f57bd9c286c4db8798e2f" translate="yes" xml:space="preserve">
          <source>Using virtualenv (with system Python)</source>
          <target state="translated">virtualenv 사용 (시스템 Python 사용)</target>
        </trans-unit>
        <trans-unit id="d74a919ed1e55adf7e83dd40b165f3cd88f48ee0" translate="yes" xml:space="preserve">
          <source>Using virtualenv (works with brewed and system&amp;rsquo;s Python)</source>
          <target state="translated">virtualenv 사용 (brewed 및 시스템의 Python에서 작동)</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="d914fbc95fd7b112ec763eb5374bc4cab959d1b7" translate="yes" xml:space="preserve">
          <source>Variables for directory locations</source>
          <target state="translated">디렉토리 위치 변수</target>
        </trans-unit>
        <trans-unit id="94fa081ad5aa8db9635bfe7652e111924ed99214" translate="yes" xml:space="preserve">
          <source>Version detection fails</source>
          <target state="translated">버전 감지 실패</target>
        </trans-unit>
        <trans-unit id="4f2fef74d6aafb57fd8c664f7b46d29e3134955f" translate="yes" xml:space="preserve">
          <source>Version scheme changes</source>
          <target state="translated">버전 체계 변경</target>
        </trans-unit>
        <trans-unit id="f1363584b65bf27f742e8fe1dde7558577e27804" translate="yes" xml:space="preserve">
          <source>Versioned formulae in &lt;code&gt;homebrew/core&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;homebrew/core&lt;/code&gt; 의 버전이 지정된 수식</target>
        </trans-unit>
        <trans-unit id="4f2fb56b234397c53fc0d2c351cf2f7da1853db8" translate="yes" xml:space="preserve">
          <source>Versioned formulae should be as similar as possible and sensible compared to the main formulae. Creating or updating a versioned formula should be a chance to ask questions of the main formula and vice versa, e.g. can some unused or useless options be removed or made default?</source>
          <target state="translated">버전이 지정된 공식은 기본 공식과 비교하여 가능한 한 유사하고 합리적이어야합니다. 버전이 지정된 공식을 생성하거나 업데이트하는 것은 기본 공식에 대해 질문 할 수있는 기회 여야하며 그 반대의 경우도 마찬가지입니다. 예를 들어 사용하지 않거나 쓸모없는 옵션을 제거하거나 기본값으로 설정할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="080a74fb2ca5852215bb4526a9cc0a7f05635c6d" translate="yes" xml:space="preserve">
          <source>Versioned formulae should be as similar as possible and sensible compared to the non-versioned formulae. Creating or updating a versioned formula should be a chance to ask questions of the non-versioned formula, e.g. can some unused or useless options be removed or made default?</source>
          <target state="translated">버전이 지정된 수식은 버전이없는 수식과 비교하여 가능한 한 비슷해야합니다. 버전이 지정된 수식을 만들거나 업데이트하면 버전이없는 수식에 대해 질문 할 수 있습니다. 예를 들어 사용하지 않거나 쓸모없는 옵션을 제거하거나 기본값으로 설정할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="e071cefc4d392f837931f2f34749540d7498d966" translate="yes" xml:space="preserve">
          <source>Versioned formulae should differ in major/minor (not patch) versions from the current stable release. This is because patch versions indicate bug or security updates and we want to ensure you apply security updates.</source>
          <target state="translated">버전이 지정된 공식은 현재 안정 릴리스와 주 / 부 (패치 아님) 버전이 달라야합니다. 패치 버전은 버그 또는 보안 업데이트를 나타내며 보안 업데이트를 적용하기를 원하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="c1506c9edb7594adf9b430f097c3b1a9801ef11d" translate="yes" xml:space="preserve">
          <source>Versioned formulae should differ in major/minor (not patch) versions from the current stable release. This is because patch versions indicate bug or security updates, and we want to ensure you apply security updates.</source>
          <target state="translated">버전이 지정된 공식은 현재 안정 릴리스와 메이저 / 마이너 (패치 아님) 버전이 달라야합니다. 이는 패치 버전이 버그 또는 보안 업데이트를 나타내며 보안 업데이트를 적용하기를 원하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="bb0b3accd41584a6619a6b9adfb864bac8591c7b" translate="yes" xml:space="preserve">
          <source>Versioned formulae should not have &lt;code&gt;resource&lt;/code&gt;s that require security updates. For example, a &lt;code&gt;node@6&lt;/code&gt; formula should not have an &lt;code&gt;npm&lt;/code&gt; resource but instead rely on the &lt;code&gt;npm&lt;/code&gt; provided by the upstream tarball.</source>
          <target state="translated">버전이 지정된 수식 에는 보안 업데이트가 필요한 &lt;code&gt;resource&lt;/code&gt; 가 없어야 합니다. 예를 들어 &lt;code&gt;node@6&lt;/code&gt; 수식에는 &lt;code&gt;npm&lt;/code&gt; 리소스 가 없어야 하지만 대신 업스트림 타르볼에서 제공 한 &lt;code&gt;npm&lt;/code&gt; 에 의존해야합니다 .</target>
        </trans-unit>
        <trans-unit id="169c4ac1f0b3bab5b818bc177d42e0d2a3dadf92" translate="yes" xml:space="preserve">
          <source>Versioned formulae should only be linkable at the same time as their non-versioned counterpart if the upstream project provides support for it, e.g. using suffixed binaries. If this is not possible, use &lt;code&gt;keg_only :versioned_formula&lt;/code&gt; to allow users to have multiple versions installed at once.</source>
          <target state="translated">업스트림 프로젝트가 접미사 바이너리를 사용하는 등의 업스트림 프로젝트에서 지원을 제공하는 경우 버전이 지정된 수식은 버전이없는 해당 항목과 동시에 링크 할 수 있어야합니다. 이것이 가능하지 않은 경우 &lt;code&gt;keg_only :versioned_formula&lt;/code&gt; 를 사용하여 여러 버전을 한 번에 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="203e4e798454c3941294a263e308190bf1e510b4" translate="yes" xml:space="preserve">
          <source>Versioned formulae should share a codebase with the main formula. If the project is split into a different repository, we recommend creating a new formula (&lt;code&gt;formula2&lt;/code&gt; rather than &lt;code&gt;formula@2&lt;/code&gt; or &lt;code&gt;formula@1&lt;/code&gt;).</source>
          <target state="translated">버전이 지정된 수식은 기본 수식과 코드베이스를 공유해야합니다. 프로젝트가 다른 저장소로 분할 된 경우 새 공식을 만드는 것이 좋습니다 ( &lt;code&gt;formula@2&lt;/code&gt; 또는 &lt;code&gt;formula@1&lt;/code&gt; 대신 &lt;code&gt;formula2&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="15d61e8ed63fa7b506602c6321b23e7d647ffb40" translate="yes" xml:space="preserve">
          <source>Versioned formulae submitted should be expected to be used by a large number of people. If this ceases to be the case, they will be removed. We will aim not to remove those in the &lt;a href=&quot;https://brew.sh/analytics/install-on-request/&quot;&gt;top 3,000 &lt;code&gt;install_on_request&lt;/code&gt; formulae&lt;/a&gt;.</source>
          <target state="translated">제출 된 버전이 지정된 공식은 많은 사람들이 사용할 것으로 예상되어야합니다. 이 경우가 중단되면 제거됩니다. 우리는 &lt;a href=&quot;https://brew.sh/analytics/install-on-request/&quot;&gt;상위 3,000 개의 &lt;code&gt;install_on_request&lt;/code&gt; 공식&lt;/a&gt; 에서 제거하지 않는 것을 목표로합니다 .</target>
        </trans-unit>
        <trans-unit id="dbfdfe6cc27e71e7dbfbe38f2d2050ee1e7b1354" translate="yes" xml:space="preserve">
          <source>Versioned formulae submitted should be expected to be used by a large number of people. If this ceases to be the case: they will be removed. We will aim not to remove those in the &lt;a href=&quot;https://brew.sh/analytics/install-on-request/&quot;&gt;top 3,000 &lt;code&gt;install_on_request&lt;/code&gt; formulae&lt;/a&gt;.</source>
          <target state="translated">제출 된 버전이 지정된 수식은 많은 사람들이 사용해야합니다. 이 경우에 해당되지 않으면 제거됩니다. 우리는 &lt;a href=&quot;https://brew.sh/analytics/install-on-request/&quot;&gt;최상위 3,000 개의 &lt;code&gt;install_on_request&lt;/code&gt; 공식&lt;/a&gt; 에서 제거하지 않는 것을 목표로합니다 .</target>
        </trans-unit>
        <trans-unit id="c0bb7c15f40c4c7a8c29b91bdf8945ae39ad4aa8" translate="yes" xml:space="preserve">
          <source>Versioned formulae we include in &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt; must meet the following standards:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew / core에&lt;/a&gt; 포함 된 버전이있는 공식 은 다음 표준을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="d737cadb48f099c470e8f6fc24a434a4c0f83426" translate="yes" xml:space="preserve">
          <source>Versioned software should build on all Homebrew&amp;rsquo;s supported versions of macOS.</source>
          <target state="translated">버전이 지정된 소프트웨어는 모든 Homebrew에서 지원되는 모든 macOS 버전에서 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="a239107ef28f6efe13d8ea83e502da9aa8c43fbb" translate="yes" xml:space="preserve">
          <source>Versions</source>
          <target state="translated">Versions</target>
        </trans-unit>
        <trans-unit id="a78ad277616170813560c5fab7aabae8ac9cfb23" translate="yes" xml:space="preserve">
          <source>Vim</source>
          <target state="translated">Vim</target>
        </trans-unit>
        <trans-unit id="43e46231e2e4425940323040c2be47d46f02e331" translate="yes" xml:space="preserve">
          <source>Virtualenv</source>
          <target state="translated">Virtualenv</target>
        </trans-unit>
        <trans-unit id="0e41ee0b4ffdacd76019518cf4be7bbc0051a57b" translate="yes" xml:space="preserve">
          <source>Virtualenv has a &lt;code&gt;--system-site-packages&lt;/code&gt; switch to allow &amp;ldquo;global&amp;rdquo; (i.e. Homebrew&amp;rsquo;s) &lt;code&gt;site-packages&lt;/code&gt; to be accessible from within the virtualenv.</source>
          <target state="translated">Virtualenv에는 &lt;code&gt;--system-site-packages&lt;/code&gt; 스위치가있어 virtualenv 내에서 &amp;ldquo;전역&amp;rdquo;(예 : Homebrew) &lt;code&gt;site-packages&lt;/code&gt; 에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd645080b6e26a1db683b4c238b021dcb7b2cf29" translate="yes" xml:space="preserve">
          <source>We aim to bottle everything.</source>
          <target state="translated">우리는 모든 것을 병에 넣는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="fb85abbe583ca0fcaa2384543c12b4fa1ff7459c" translate="yes" xml:space="preserve">
          <source>We are not willing to remove software packaged in Homebrew/homebrew-core in favour of an upstream tap. We are not willing to instruct users in our formulae to use your formulae instead. If upstream projects have issues with how Homebrew packages your software: please file issues (or, ideally, pull requests) to address these problems.</source>
          <target state="translated">우리는 업스트림 탭을 위해 Homebrew / homebrew-core에 패키지 된 소프트웨어를 제거하지 않습니다. 우리는 공식에서 사용자에게 공식을 대신 사용하도록 지시하지 않습니다. 업스트림 프로젝트에서 Homebrew가 소프트웨어를 패키징하는 방법에 문제가있는 경우 문제를 제출 (또는 이상적으로는 풀 요청)하여 이러한 문제를 해결하십시오.</target>
        </trans-unit>
        <trans-unit id="30adbd568ae35d54eb0b507bc6d5d1d75f98f5d1" translate="yes" xml:space="preserve">
          <source>We do not defer to extensive nonstandard capitalisation, typesetting, or other styling of brand names, aside from the normal capitalisation of proper nouns and simple internal capitalisation</source>
          <target state="translated">우리는 적절한 명사의 일반 대문자와 간단한 내부 대문자를 제외하고 광범위한 비표준 대문자, 조판 또는 기타 브랜드 이름 스타일을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="600a98bee1a24ad90ca7ace81256f0d6cfaf0853" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t accept software without a tagged version because they regularly break due to upstream changes and we can&amp;rsquo;t provide &lt;a href=&quot;bottles&quot;&gt;bottles&lt;/a&gt; for them.</source>
          <target state="translated">업스트림 변경으로 인해 정기적으로 중단되며 &lt;a href=&quot;bottles&quot;&gt;병&lt;/a&gt; 을 제공 할 수 없기 때문에 태그 버전이없는 소프트웨어는 허용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="628fcf304d13af9641068140f5dcd4b88e44402c" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t like binary formulae</source>
          <target state="translated">우리는 이진 공식을 좋아하지 않습니다</target>
        </trans-unit>
        <trans-unit id="ab576501ddc812f405a8da1c1bbd00b1342d212e" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t like install scripts that are pulling from the &lt;code&gt;master&lt;/code&gt; branch of Git repositories or unversioned, unchecksummed tarballs. These should use &lt;code&gt;resource&lt;/code&gt; blocks with specific revisions or checksummed tarballs instead. Note that we now allow tools like &lt;code&gt;cargo&lt;/code&gt;, &lt;code&gt;gem&lt;/code&gt; and &lt;code&gt;pip&lt;/code&gt; to download specifically versioned libraries during installation.</source>
          <target state="translated">우리는 Git 리포지토리 의 &lt;code&gt;master&lt;/code&gt; 브랜치 또는 버전이없는 체크되지 않은 타르볼 에서 가져 오는 스크립트를 좋아하지 않습니다 . 대신 특정 개정판 또는 체크섬 타르볼이있는 &lt;code&gt;resource&lt;/code&gt; 블록을 사용해야 합니다 . 이제 우리는 &lt;code&gt;cargo&lt;/code&gt; , &lt;code&gt;gem&lt;/code&gt; 및 &lt;code&gt;pip&lt;/code&gt; 와 같은 도구가 설치 중에 특정 버전의 라이브러리를 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a97825ec259d1d1e80f16dc39d9b927f05bf6260" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t like install scripts that download unversioned things</source>
          <target state="translated">우리는 버전이없는 것을 다운로드하는 스크립트 설치를 좋아하지 않습니다</target>
        </trans-unit>
        <trans-unit id="507bb343ff9e2a1398d93b6eb6680a5306834f96" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t like tools that upgrade themselves</source>
          <target state="translated">우리는 스스로 업그레이드하는 도구를 좋아하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e7dcbd2174146dc9452ef31cf5ab3ef1aaa0dfb0" translate="yes" xml:space="preserve">
          <source>We frown on authors submitting their own work unless it is very popular.</source>
          <target state="translated">우리는 매우 인기가 없다면 저자가 자신의 작품을 제출하는 것에 대해 찡그림을합니다.</target>
        </trans-unit>
        <trans-unit id="1464f34f8be2c7ddf025c3db12303a865c40b5ec" translate="yes" xml:space="preserve">
          <source>We generally try not to duplicate system libraries and complicated tools in core Homebrew but we do duplicate some commonly used tools.</source>
          <target state="translated">우리는 일반적으로 핵심 Homebrew에서 시스템 라이브러리와 복잡한 도구를 복제하지 않지만 일반적으로 사용되는 도구를 복제합니다.</target>
        </trans-unit>
        <trans-unit id="d4042de79b2a9fb579b6106fd4b193f4c3d9d732" translate="yes" xml:space="preserve">
          <source>We may temporarily add versioned formulae for our own needs that do not meet these standards in &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew/core&lt;/a&gt;. The presence of a versioned formula there does not imply it will be maintained indefinitely or that we are willing to accept any more versions that do not meet the requirements above.</source>
          <target state="translated">우리는 &lt;a href=&quot;https://github.com/homebrew/homebrew-core&quot;&gt;homebrew / core의&lt;/a&gt; 이러한 표준을 충족하지 않는 자체 요구 사항에 맞게 버전이 지정된 수식을 임시로 추가 할 수 있습니다 . 버전이 지정된 수식이 있다고해서 그것이 무기한으로 유지되거나 위의 요구 사항을 충족하지 않는 더 이상 버전을 기꺼이 받아 들일 것이라는 의미는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c62566c1a299bc88ce30b62554997cc07be38347" translate="yes" xml:space="preserve">
          <source>We now accept stuff that comes with macOS as long as it uses &lt;code&gt;keg_only :provided_by_macos&lt;/code&gt; to be keg-only by default.</source>
          <target state="translated">우리는 이제 &lt;code&gt;keg_only :provided_by_macos&lt;/code&gt; 를 기본적으로 술통 전용으로 사용하는 한 macOS와 함께 제공되는 물건을 받아들 입니다.</target>
        </trans-unit>
        <trans-unit id="e302d000fcf36a9f94a9d84ee5f95bb487e56947" translate="yes" xml:space="preserve">
          <source>We now accept versioned formulae as long as they &lt;a href=&quot;versions&quot;&gt;meet the requirements&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;a href=&quot;versions&quot;&gt;요구 사항&lt;/a&gt; 을 충족하는 한 버전이 지정된 수식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a51e414bddaf772c4461681a2e12cf5684411b2" translate="yes" xml:space="preserve">
          <source>We only accept formulae that use a &lt;a href=&quot;https://wiki.debian.org/DFSGLicenses&quot;&gt;Debian Free Software Guidelines license&lt;/a&gt; or are released into the public domain following &lt;a href=&quot;https://wiki.debian.org/DFSGLicenses#Public_Domain&quot;&gt;DFSG Guidelines on Public Domain software&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://wiki.debian.org/DFSGLicenses&quot;&gt;Debian Free Software Guidelines 라이선스를 사용&lt;/a&gt; 하거나 &lt;a href=&quot;https://wiki.debian.org/DFSGLicenses#Public_Domain&quot;&gt;공용 도메인 소프트웨어에 대한 DFSG 지침에&lt;/a&gt; 따라 공용 도메인으로 배포되는 공식 만 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="36c7b7a13d86a51211eb315d2372e25e13bac2d6" translate="yes" xml:space="preserve">
          <source>We prefer:</source>
          <target state="translated">우리는 선호합니다 :</target>
        </trans-unit>
        <trans-unit id="e09222609ce6145474819e5c888664509ccc6cf3" translate="yes" xml:space="preserve">
          <source>We removed &lt;em&gt;SHA1&lt;/em&gt; support in &lt;strong&gt;November 2016&lt;/strong&gt;, 21 months after we started warning people to move away from it for verification. This is enforced in the same way &lt;em&gt;MD5&lt;/em&gt; is, by blocking the installation of that individual formula until the checksum is migrated.</source>
          <target state="translated">&lt;strong&gt;2016 년 11 월&lt;/strong&gt; , 사람들이 검증을 위해 멀리 떨어져 있다는 경고를 시작한 지 21 개월 만 에 &lt;em&gt;SHA1&lt;/em&gt; 지원을 제거 했습니다. 이것은 체크섬이 마이그레이션 될 때까지 개별 수식의 설치를 차단함으로써 &lt;em&gt;MD5&lt;/em&gt; 와 동일한 방식으로 적용됩니다 .&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3c5120795692b22a58cbd3ebc86634216cd4cca3" translate="yes" xml:space="preserve">
          <source>We respect all people&amp;rsquo;s choice of personal pronouns</source>
          <target state="translated">우리는 모든 사람들의 개인 대명사 선택을 존중합니다</target>
        </trans-unit>
        <trans-unit id="551f3f2e3281a49f8d74000ac3dddb5cd7c116d3" translate="yes" xml:space="preserve">
          <source>We set up distutils such that &lt;code&gt;pip install&lt;/code&gt; will always put modules in &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; and scripts in &lt;code&gt;$(brew --prefix)/share/python&lt;/code&gt;. Therefore, you won&amp;rsquo;t need sudo!</source>
          <target state="translated">&lt;code&gt;pip install&lt;/code&gt; 이 모듈을 항상 &lt;code&gt;$(brew --prefix)/lib/pythonX.Y/site-packages&lt;/code&gt; 넣고 스크립트를 &lt;code&gt;$(brew --prefix)/share/python&lt;/code&gt; 넣 도록 distutils를 설정했습니다 . 따라서 sudo가 필요하지 않습니다!</target>
        </trans-unit>
        <trans-unit id="ea8328f0159c3631e02f23b0e78578e941fb7a48" translate="yes" xml:space="preserve">
          <source>We strive for &amp;ldquo;correct&amp;rdquo; but not &amp;ldquo;fancy&amp;rdquo; usage. Think newspaper article, not academic paper.</source>
          <target state="translated">우리는 &quot;올바른&quot;사용을 위해 노력하지만 &quot;팬시&quot;사용에는 노력하지 않습니다. 학술 논문이 아니라 신문 기사를 생각하십시오.</target>
        </trans-unit>
        <trans-unit id="546bb32775fe00d0b8aabfa1d55da483bc1cb496" translate="yes" xml:space="preserve">
          <source>We use the macOS sandbox to stop this but this doesn&amp;rsquo;t work when run as the &lt;code&gt;root&lt;/code&gt; user (which also has read and write access to almost everything on the system).</source>
          <target state="translated">우리는 이것을 막기 위해 macOS 샌드 박스를 사용하지만 &lt;code&gt;root&lt;/code&gt; 사용자 (시스템의 거의 모든 것에 대한 읽기 및 쓰기 액세스 권한)로 실행할 때는 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7ea0ba5dca552fa6bdd6c4a7f0f57701f290494f" translate="yes" xml:space="preserve">
          <source>We want tests that don&amp;rsquo;t require any user input and test the basic functionality of the application. For example &lt;code&gt;foo build-foo input.foo&lt;/code&gt; is a good test and (despite their widespread use) &lt;code&gt;foo --version&lt;/code&gt; and &lt;code&gt;foo --help&lt;/code&gt; are bad tests. However, a bad test is better than no test at all.</source>
          <target state="translated">사용자 입력이 필요없는 테스트를 원하고 애플리케이션의 기본 기능을 테스트합니다. 예를 들어 &lt;code&gt;foo build-foo input.foo&lt;/code&gt; 는 좋은 테스트이며 널리 사용 되지만 &lt;code&gt;foo --version&lt;/code&gt; 및 &lt;code&gt;foo --help&lt;/code&gt; 는 나쁜 테스트입니다. 그러나 나쁜 테스트는 전혀 테스트하지 않는 것보다 낫습니다.</target>
        </trans-unit>
        <trans-unit id="31311fee138d882cb6480cc7e84c80278ffcacf0" translate="yes" xml:space="preserve">
          <source>We will reject formulae that seem too obscure, partly because they won&amp;rsquo;t get maintained and partly because we have to draw the line somewhere.</source>
          <target state="translated">너무 모호하게 보이는 수식은 부분적으로 유지 관리되지 않기 때문에 부분적으로 선을 그려야하므로 거부합니다.</target>
        </trans-unit>
        <trans-unit id="6a3100c490bd3575300197edcc390fe652d7d3cb" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re a package manager so we want to do things like resolve dependencies and set up applications for our users. If things require too much manual intervention then they aren&amp;rsquo;t useful in a package manager.</source>
          <target state="translated">우리는 패키지 관리자이므로 종속성 해결 및 사용자를위한 응용 프로그램 설정과 같은 작업을 수행하려고합니다. 너무 많은 수동 개입이 필요한 경우 패키지 관리자에서 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3bbe2ea425bdb53c7eb23aff424164b6307f10d" translate="yes" xml:space="preserve">
          <source>Well done, you are now a Homebrew contributor!</source>
          <target state="translated">잘하셨습니다. 이제 Homebrew 기고자입니다!</target>
        </trans-unit>
        <trans-unit id="f06a85b0b50b5b371ea1e55c70404a6635eddd60" translate="yes" xml:space="preserve">
          <source>What both methods have in common is that they are setting the correct environment for using npm inside Homebrew and are returning the arguments for invoking &lt;code&gt;npm install&lt;/code&gt; for their specific use cases. This includes fixing an important edge case with the npm cache (caused by Homebrew&amp;rsquo;s redirection of &lt;code&gt;HOME&lt;/code&gt; during the build and test process) by using our own custom &lt;code&gt;npm_cache&lt;/code&gt; inside &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt;, which would otherwise result in very long build times and high disk space usage.</source>
          <target state="translated">두 방법의 공통점은 Homebrew에서 npm을 사용하기위한 올바른 환경을 설정 하고 특정 사용 사례에 대해 &lt;code&gt;npm install&lt;/code&gt; 를 호출하기위한 인수를 반환한다는 것 입니다. 여기에는 &lt;code&gt;npm_cache&lt;/code&gt; 내에 자체 사용자 지정 npm_cache 를 사용하여 npm 캐시 ( 빌드 및 테스트 프로세스 중 Homebrew의 &lt;code&gt;HOME&lt;/code&gt; 리디렉션으로 인해 발생 함)로 중요한 엣지 케이스를 수정하는 작업이 포함 &lt;code&gt;HOMEBREW_CACHE&lt;/code&gt; , 그렇지 않으면 빌드 시간이 길고 디스크 공간 사용량이 높아집니다.</target>
        </trans-unit>
        <trans-unit id="f97003bbf59ac084965a1c7a0aa632cf1c8bed74" translate="yes" xml:space="preserve">
          <source>What does &amp;ldquo;keg-only&amp;rdquo; mean?</source>
          <target state="translated">&quot;케 그만&quot;이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="900fbb692ca8fe52f948e9674e539acc7500efe2" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;--single-version-externally-managed&lt;/code&gt;?</source>
          <target state="translated">이란 &lt;code&gt;--single-version-externally-managed&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="be65b9e347375f6ab4dbf58f66fa0a0b73735783" translate="yes" xml:space="preserve">
          <source>What?</source>
          <target state="translated">What?</target>
        </trans-unit>
        <trans-unit id="4e2050abb096bfed383e7c4d300a07783077c654" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/a&gt;ing (i.e. fixing header file inclusion, fixing compiler warnings, etc.) the first thing to do is check whether or not the upstream project is aware of the issue. If not, file a bug report and/or submit your patch for inclusion. We may sometimes still accept your patch before it was submitted upstream but by getting the ball rolling on fixing the upstream issue you reduce the length of time we have to carry the patch around.</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt; &lt;code&gt;patch&lt;/code&gt; &lt;/a&gt; 할 때 (예 : 헤더 파일 포함 수정, 컴파일러 경고 수정 등) 가장 먼저해야 할 일은 업스트림 프로젝트가 문제를 인식하고 있는지 확인하는 것입니다. 그렇지 않은 경우 버그 보고서를 제출하거나 패치를 제출하여 포함 시키십시오. 업스트림에 제출하기 전에 패치를 수락하는 경우도 있지만 업스트림 문제를 해결하기 위해 볼을 굴리면 패치를 운반하는 데 걸리는 시간이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="5625a76c1b5f604ebffae0834a3bc14b11ce0377" translate="yes" xml:space="preserve">
          <source>When Homebrew already has a formula called &lt;code&gt;foo&lt;/code&gt; we typically do not accept requests to replace that formula with something else also named &lt;code&gt;foo&lt;/code&gt;. This is to avoid both confusing and surprising users&amp;rsquo; expectations.</source>
          <target state="translated">Homebrew에 이미 &lt;code&gt;foo&lt;/code&gt; 라는 수식이 있으면 일반적으로 해당 수식을 &lt;code&gt;foo&lt;/code&gt; 라는 다른 이름으로 바꾸라 는 요청을받지 않습니다 . 이는 혼란스럽고 놀라운 사용자의 기대를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="c7508217132a18fd4010d5894fdbfd453d0ad347" translate="yes" xml:space="preserve">
          <source>When a dependent of a formula fails against a new version of that dependency it must receive a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt;&lt;code&gt;revision&lt;/code&gt;&lt;/a&gt;. An example of such failure can be seen &lt;a href=&quot;https://github.com/Homebrew/legacy-homebrew/issues/31195&quot;&gt;here&lt;/a&gt; and the fix &lt;a href=&quot;https://github.com/Homebrew/legacy-homebrew/pull/31207&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">수식의 종속 항목이 해당 종속성의 새 버전에 대해 실패하면 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#revision%3D-class_method&quot;&gt; &lt;code&gt;revision&lt;/code&gt; &lt;/a&gt; 받아야합니다 . 이러한 실패의 예는 &lt;a href=&quot;https://github.com/Homebrew/legacy-homebrew/issues/31195&quot;&gt;여기&lt;/a&gt; 및 수정 사항은 &lt;a href=&quot;https://github.com/Homebrew/legacy-homebrew/pull/31207&quot;&gt;여기에서&lt;/a&gt; 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a2113f85c770bcbb548909e8030b82f8db33564" translate="yes" xml:space="preserve">
          <source>When a new Xcode release is made, the following things need to be updated:</source>
          <target state="translated">새로운 Xcode 릴리스가 만들어지면 다음 사항을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="96642447424e507eb091b01e981e8e8fc9a40441" translate="yes" xml:space="preserve">
          <source>When a version scheme of a formula fails to recognise a new version as newer it must receive a &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version_scheme%3D-class_method&quot;&gt;&lt;code&gt;version_scheme&lt;/code&gt;&lt;/a&gt;. An example of this can be seen &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pull/4006&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">공식의 버전 체계가 새 버전을 최신 버전으로 인식하지 못하면 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#version_scheme%3D-class_method&quot;&gt; &lt;code&gt;version_scheme&lt;/code&gt; 을&lt;/a&gt; 받아야합니다 . 이에 대한 예는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pull/4006&quot;&gt;여기에서&lt;/a&gt; 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a8049c707f2fb2f9ed4e08b5a2bbf15cffe001d" translate="yes" xml:space="preserve">
          <source>When abbreviating, introduce the abbreviation with the first usage in any document</source>
          <target state="translated">약어 인 경우 모든 문서에서 첫 번째 사용법으로 약어를 소개하십시오.</target>
        </trans-unit>
        <trans-unit id="8b0b4703810f7e4bf4aa1c44d6167cd52640c65d" translate="yes" xml:space="preserve">
          <source>When automatic &lt;code&gt;brew cleanup&lt;/code&gt; is disabled, if you uninstall a formula, it will only remove the latest version you have installed. It will not remove all versions of the formula that you may have installed in the past. Homebrew will continue to attempt to install the newest version it knows about when you run &lt;code&gt;brew upgrade&lt;/code&gt;. This can be surprising.</source>
          <target state="translated">자동 &lt;code&gt;brew cleanup&lt;/code&gt; 가 비활성화 된 경우 공식을 제거하면 설치 한 최신 버전 만 제거됩니다. 이전에 설치했을 수있는 모든 버전의 공식을 제거하지는 않습니다. Homebrew는 &lt;code&gt;brew upgrade&lt;/code&gt; 를 실행할 때 알고있는 최신 버전을 계속 설치하려고 시도합니다 . 이것은 놀라운 일입니다.</target>
        </trans-unit>
        <trans-unit id="d26e10671057aea640f67ff3940fdc2ab5d243b9" translate="yes" xml:space="preserve">
          <source>When creating symlinks, take special care to ensure they are &lt;em&gt;relative&lt;/em&gt; symlinks. This makes it easier to create a relocatable bottle. For example, to create a symlink in &lt;code&gt;bin&lt;/code&gt; to an executable in &lt;code&gt;libexec&lt;/code&gt;, use</source>
          <target state="translated">심볼릭 링크를 만들 때는 심볼릭 링크가 &lt;em&gt;상대적&lt;/em&gt; 인지 확인해야 합니다. 따라서 재배치 가능한 병을보다 쉽게 ​​만들 수 있습니다. 예를 들어, 심볼릭 링크 생성하는 &lt;code&gt;bin&lt;/code&gt; 에서 실행에 &lt;code&gt;libexec&lt;/code&gt; 디렉토리 사용</target>
        </trans-unit>
        <trans-unit id="e1f2717fe81f6380b710c1fedd6076c6d032baba" translate="yes" xml:space="preserve">
          <source>When importing classes, Homebrew will require the formula and then create an instance of the class. It does this by assuming the formula name can be directly converted to the class name using a &lt;code&gt;regexp&lt;/code&gt;. The rules are simple:</source>
          <target state="translated">클래스를 가져올 때 Homebrew는 수식을 요구 한 다음 클래스의 인스턴스를 만듭니다. &lt;code&gt;regexp&lt;/code&gt; 사용하여 수식 이름을 클래스 이름으로 직접 변환 할 수 있다고 가정 하여이 작업을 수행합니다 . 규칙은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="17b2b93b3d2ce2b07bcda1a0e83cafef1395b2b7" translate="yes" xml:space="preserve">
          <source>When running &lt;code&gt;brew upgrade&lt;/code&gt;, you see something like this:</source>
          <target state="translated">&lt;code&gt;brew upgrade&lt;/code&gt; 를 실행하면 다음과 같은 내용이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="22617406d2117365a1455b9f5799f70cc01ae083" translate="yes" xml:space="preserve">
          <source>When the release has shipped and the blog post has been merged, tweet the blog post as the &lt;a href=&quot;https://twitter.com/MacHomebrew&quot;&gt;@MacHomebrew Twitter account&lt;/a&gt; or tweet it yourself and retweet it with the @MacHomebrew Twitter account (credentials are in 1Password).</source>
          <target state="translated">릴리스가 출시되고 블로그 게시물이 병합되면 블로그 게시물을 &lt;a href=&quot;https://twitter.com/MacHomebrew&quot;&gt;@MacHomebrew Twitter 계정으로&lt;/a&gt; 트윗하거나 직접 트윗 하여 @MacHomebrew Twitter 계정으로 리트 윗하십시오 (자격 증명은 1Password에 있음).</target>
        </trans-unit>
        <trans-unit id="960b8c404ea2490398b83e4662c1e51ad0c6ada5" translate="yes" xml:space="preserve">
          <source>When trying to load a plist file into launchctl, you receive an error that resembles</source>
          <target state="translated">plist 파일을 launchctl에로드하려고 할 때 유사한 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f965e7c75828b05d4067012b78899d5f1d5e2457" translate="yes" xml:space="preserve">
          <source>When two formulae share an upstream name, e.g. &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/aescrypt.rb&quot;&gt;AESCrypt&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/aescrypt-packetizer.rb&quot;&gt;AES Crypt&lt;/a&gt; the newer formula must typically adapt its name to avoid conflict with the current formula.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/aescrypt.rb&quot;&gt;AESCrypt&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/aescrypt-packetizer.rb&quot;&gt;AES Crypt&lt;/a&gt; 와 같이 두 수식이 업스트림 이름을 공유하는 경우 최신 수식은 일반적으로 현재 수식과의 충돌을 피하기 위해 이름을 조정해야합니다.</target>
        </trans-unit>
        <trans-unit id="4aad44b0c5256f1987eba75ba5bb6009afbc3dbc" translate="yes" xml:space="preserve">
          <source>When two formulae share an upstream name, e.g. &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/aescrypt.rb&quot;&gt;AESCrypt&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/aescrypt-packetizer.rb&quot;&gt;AES Crypt&lt;/a&gt; the newer formula must typically adapt its name to avoid conflict with the current formula.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/aescrypt.rb&quot;&gt;AESCrypt&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/aescrypt-packetizer.rb&quot;&gt;AES Crypt&lt;/a&gt; 와 같이 두 개의 수식이 업스트림 이름을 공유하는 경우 최신 수식은 일반적으로 현재 수식과의 충돌을 피하기 위해 이름을 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="3f5d69873207637367ec862ed87db75609cfd135" translate="yes" xml:space="preserve">
          <source>When you already have a lot of formulae installed, it&amp;rsquo;s easy to miss a common dependency. You can double-check which libraries a binary links to with the &lt;code&gt;otool&lt;/code&gt; command (perhaps you need to use &lt;code&gt;xcrun otool&lt;/code&gt;):</source>
          <target state="translated">이미 많은 수식이 설치되어 있으면 일반적인 종속성을 놓치기 쉽습니다. &lt;code&gt;otool&lt;/code&gt; 명령 으로 바이너리가 링크되는 라이브러리를 다시 확인할 수 있습니다 (아마도 &lt;code&gt;xcrun otool&lt;/code&gt; 을 사용해야 함 ).</target>
        </trans-unit>
        <trans-unit id="ca9a0d1fdc5e48d6aa38d23d749ed17ed0368c9f" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;brew tap&lt;/code&gt; on the command line, however, you can leave out the &amp;lsquo;homebrew-&amp;lsquo; prefix in commands.</source>
          <target state="translated">그러나 명령 행에서 &lt;code&gt;brew tap&lt;/code&gt; 을 사용 하는 경우 명령에 'homebrew-'접 두부를 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da93c520407478f906318dc7b239f17532a810d3" translate="yes" xml:space="preserve">
          <source>When your code in the install function is run, the current working directory is set to the extracted tarball.</source>
          <target state="translated">설치 기능의 코드가 실행될 때 현재 작업 디렉토리가 추출 된 tarball로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="417d9efe5d436e6b4c327ac12dd2bf984e9fec69" translate="yes" xml:space="preserve">
          <source>When/Where?</source>
          <target state="translated">When/Where?</target>
        </trans-unit>
        <trans-unit id="9deebf6b52018183751724088335ab7af2d49b6f" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;brew install foo&lt;/code&gt; command is issued, &lt;code&gt;brew&lt;/code&gt; will find which formula to use by searching in the following order:</source>
          <target state="translated">&lt;code&gt;brew install foo&lt;/code&gt; 명령이 실행될 때마다 &lt;code&gt;brew&lt;/code&gt; 는 다음 순서로 검색하여 사용할 수식을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3b67fb845da2e45c5937fe65a8cabb86e6d9f424" translate="yes" xml:space="preserve">
          <source>Where Homebrew caches downloaded tarballs to, by default &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt;.</source>
          <target state="translated">Homebrew가 다운로드 한 tarball을 캐시하는 위치는 기본적으로 &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8ba9ead8f0373fd22a235286ee0cc66edd0e29fc" translate="yes" xml:space="preserve">
          <source>Where Homebrew installs software. This is always the grandparent directory of the &lt;code&gt;brew&lt;/code&gt; executable, &lt;code&gt;/usr/local&lt;/code&gt; by default.</source>
          <target state="translated">Homebrew가 소프트웨어를 설치하는 위치 이것은 항상 &lt;code&gt;brew&lt;/code&gt; 실행 파일 의 조부모 디렉토리입니다 ( 기본적으로 &lt;code&gt;/usr/local&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="24eebb911f8c1cd6222c5eebff132fac5ed0644a" translate="yes" xml:space="preserve">
          <source>Where does stuff get downloaded?</source>
          <target state="translated">물건은 어디에서 다운로드됩니까?</target>
        </trans-unit>
        <trans-unit id="d27d9911d772e3894941339cdfca30a58deb7fb5" translate="yes" xml:space="preserve">
          <source>Which is usually: &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt;</source>
          <target state="translated">일반적으로 &lt;code&gt;~/Library/Caches/Homebrew&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="80d5c1b3a380bf10b752289c01b6437e19b343ce" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/a&gt;es should generally be avoided, sometimes they are temporarily necessary.</source>
          <target state="translated">&lt;a href=&quot;https://rubydoc.brew.sh/Formula#patch-class_method&quot;&gt; &lt;code&gt;patch&lt;/code&gt; &lt;/a&gt; es는 일반적으로 피해야 하지만 일시적으로 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2eb784d4e38b9c7cd051f73c29e38d68fb70e7e" translate="yes" xml:space="preserve">
          <source>While ensuring your downloads are fully secure, this is likely to cause from-source SourceForge, some GNU &amp;amp; GNOME based formulae to fail to download.</source>
          <target state="translated">다운로드는 완전히 안전하지만 소스 및 소스 소스 포지, 일부 GNU 및 그놈 기반 공식은 다운로드에 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3d8cf2ba69e702b3dbc0a62ccf1423d93476469" translate="yes" xml:space="preserve">
          <source>Who?</source>
          <target state="translated">Who?</target>
        </trans-unit>
        <trans-unit id="cc12a49b45626d7f6a919412d4aa5135a5262415" translate="yes" xml:space="preserve">
          <source>Why do you compile everything?</source>
          <target state="translated">왜 모든 것을 컴파일합니까?</target>
        </trans-unit>
        <trans-unit id="42a91b6f88f8ccd7453c4cb17379308c71b7214b" translate="yes" xml:space="preserve">
          <source>Why does Homebrew prefer I install to &lt;code&gt;/usr/local&lt;/code&gt;?</source>
          <target state="translated">Homebrew가 &lt;code&gt;/usr/local&lt;/code&gt; 에 설치하는 것을 선호하는 이유는 무엇 입니까?</target>
        </trans-unit>
        <trans-unit id="2902f74666095e5cdb3528e3eb10f847081d6ca9" translate="yes" xml:space="preserve">
          <source>Why does Homebrew say sudo is bad?</source>
          <target state="translated">Homebrew가 sudo가 나쁘다고 왜 말합니까?</target>
        </trans-unit>
        <trans-unit id="378d993bf4f5de8c3fd883ed2ef3a7c815e563b9" translate="yes" xml:space="preserve">
          <source>Why haven&amp;rsquo;t you merged my pull request?</source>
          <target state="translated">내 pull request를 병합하지 않은 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="33da2c9547f7996eeac3faf565a1636fba1bc951" translate="yes" xml:space="preserve">
          <source>Why haven&amp;rsquo;t you pulled my pull request?</source>
          <target state="translated">왜 내 풀 요청을 뽑지 않았습니까?</target>
        </trans-unit>
        <trans-unit id="3a4c852ee80d27b63789760a40e7dd470f03f5c3" translate="yes" xml:space="preserve">
          <source>Why here?</source>
          <target state="translated">왜 여기?</target>
        </trans-unit>
        <trans-unit id="d45c7c32254095d9a2b838f51c8732ca561531ca" translate="yes" xml:space="preserve">
          <source>Why is Homebrew&amp;rsquo;s Python being installed as a dependency?</source>
          <target state="translated">Homebrew의 Python이 종속성으로 설치되는 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="92fceae36c3c13c29775d949b9255184173bd135" translate="yes" xml:space="preserve">
          <source>Why isn&amp;rsquo;t a particular command documented?</source>
          <target state="translated">특정 명령이 문서화되지 않은 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="9d16288304fc0afa4724ff905f787c20fe8a6cca" translate="yes" xml:space="preserve">
          <source>Why was a formula deleted or disabled?</source>
          <target state="translated">수식이 삭제되거나 비활성화 된 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="6cff7f66b528378cf58dbbc6712f6247499944f4" translate="yes" xml:space="preserve">
          <source>Why was a formula deleted?</source>
          <target state="translated">왜 수식이 삭제 되었습니까?</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="b1e808c9ec38db0bf3f2090cd73e9a770c3cfa16" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--verbose&lt;/code&gt; or &lt;code&gt;--debug&lt;/code&gt;, many commands print extra debugging information. Note that these options should only appear after a command.</source>
          <target state="translated">함께 &lt;code&gt;--verbose&lt;/code&gt; 또는 &lt;code&gt;--debug&lt;/code&gt; , 많은 명령이 추가 디버깅 정보를 인쇄 할 수 있습니다. 이러한 옵션은 명령 다음에 나타나야합니다.</target>
        </trans-unit>
        <trans-unit id="dbdd641babc5137dfa985edc4debd1181e5d02bd" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--verbose&lt;/code&gt; or &lt;code&gt;-v&lt;/code&gt;, many commands print extra debugging information. Note that these flags should only appear after a command.</source>
          <target state="translated">함께 &lt;code&gt;--verbose&lt;/code&gt; 또는 &lt;code&gt;-v&lt;/code&gt; , 많은 명령이 추가 디버깅 정보를 인쇄 할 수 있습니다. 이 플래그는 명령 후에 만 ​​나타납니다.</target>
        </trans-unit>
        <trans-unit id="7c3ac7ef389a1429a1e847e3c3fec0e36748dcc8" translate="yes" xml:space="preserve">
          <source>With &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; specified, tap a formula repository from anywhere, using any transport protocol that &lt;code&gt;git&lt;/code&gt;(1) handles. The one-argument form of &lt;code&gt;tap&lt;/code&gt; simplifies but also limits. This two-argument command makes no assumptions, so taps can be cloned from places other than GitHub and using protocols other than HTTPS, e.g. SSH, git, HTTP, FTP(S), rsync.</source>
          <target state="translated">함께 &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; 이&lt;/em&gt; 지정되어있는 전송 프로토콜이 사용 어디서나 식 저장소를 눌러 &lt;code&gt;git&lt;/code&gt; (1) 핸들. 단일 인수 형식의 &lt;code&gt;tap&lt;/code&gt; 단순화하지만 제한합니다. 이 두 인수 명령은 가정을하지 않으므로 GitHub 이외의 위치에서 HTTPS 이외의 프로토콜 (예 : SSH, git, HTTP, FTP (S), rsync)을 사용하여 탭을 복제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82d6e3fed6a8731dc22134640fff75dd078d225f" translate="yes" xml:space="preserve">
          <source>With &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; specified, taps a formula repository from anywhere, using any transport protocol that &lt;code&gt;git&lt;/code&gt; handles. The one-argument form of &lt;code&gt;tap&lt;/code&gt; simplifies but also limits. This two-argument command makes no assumptions, so taps can be cloned from places other than GitHub and using protocols other than HTTPS, e.g., SSH, GIT, HTTP, FTP(S), RSYNC.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;URL&lt;/code&gt; 을&lt;/em&gt; 지정 하면 &lt;code&gt;git&lt;/code&gt; 이 처리 하는 전송 프로토콜을 사용하여 어디서나 공식 저장소를 탭 합니다. 한 인수 형식의 &lt;code&gt;tap&lt;/code&gt; 단순화하지만 제한도 있습니다. 이 두 인수 명령은 가정을하지 않으므로 GitHub 이외의 장소에서 SSH, GIT, HTTP, FTP (S), RSYNC와 같은 프로토콜 이외의 프로토콜을 사용하여 탭을 복제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="305fdb8e87c75302868ed986c1b8654513cc320a" translate="yes" xml:space="preserve">
          <source>With &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; unspecified, tap a formula repository from GitHub using HTTPS. Since so many taps are hosted on GitHub, this command is a shortcut for &lt;code&gt;brew tap&lt;/code&gt;&lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&lt;code&gt;https://github.com/&lt;/code&gt;&lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/homebrew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">로 &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; 지정, HTTPS를 사용하여 GitHub의에서 공식 저장소를 누릅니다. 너무 많은 탭이 GitHub에서 호스팅되기 때문에이 명령은 &lt;code&gt;brew tap&lt;/code&gt; &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; &lt;code&gt;https://github.com/&lt;/code&gt; &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/homebrew-&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; 의 바로 가기입니다 .</target>
        </trans-unit>
        <trans-unit id="0b4d8fc066ed6651ef7e742748dc11520b213115" translate="yes" xml:space="preserve">
          <source>With &lt;em&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/em&gt; unspecified, taps a formula repository from GitHub using HTTPS. Since so many taps are hosted on GitHub, this command is a shortcut for &lt;code&gt;brew tap&lt;/code&gt;&lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;&lt;code&gt;https://github.com/&lt;/code&gt;&lt;em&gt;&lt;code&gt;user&lt;/code&gt;&lt;/em&gt;&lt;code&gt;/homebrew-&lt;/code&gt;&lt;em&gt;&lt;code&gt;repo&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">로 &lt;em&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/em&gt; 지정, HTTPS를 사용하여 GitHub의에서 공식 저장소 탭. 너무 많은 탭이 GitHub에서 호스팅되므로이 명령은 &lt;code&gt;brew tap&lt;/code&gt; &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; &lt;code&gt;https://github.com/&lt;/code&gt; &lt;em&gt; &lt;code&gt;user&lt;/code&gt; &lt;/em&gt; &lt;code&gt;/homebrew-&lt;/code&gt; &lt;em&gt; &lt;code&gt;repo&lt;/code&gt; &lt;/em&gt; 의 바로 가기입니다 .</target>
        </trans-unit>
        <trans-unit id="9ffa3a965466d8ca51bc556c958c2a1864c65119" translate="yes" xml:space="preserve">
          <source>With a brewed Python</source>
          <target state="translated">양조 된 파이썬으로</target>
        </trans-unit>
        <trans-unit id="ac79558346d461ba723dc5b5e55bdd78f62b4cf1" translate="yes" xml:space="preserve">
          <source>With system&amp;rsquo;s Python</source>
          <target state="translated">시스템의 파이썬으로</target>
        </trans-unit>
        <trans-unit id="95bf0fad8bcaad8022f1dde4f4ffc06488c5fbcc" translate="yes" xml:space="preserve">
          <source>With system&amp;rsquo;s Ruby</source>
          <target state="translated">시스템의 루비로</target>
        </trans-unit>
        <trans-unit id="fb4764c33a2499e3a23fd3d860d6bb994fdfc8b7" translate="yes" xml:space="preserve">
          <source>Write all installed casks/formulae/images/taps into a &lt;code&gt;Brewfile&lt;/code&gt; in the current directory.</source>
          <target state="translated">설치된 모든 casks / formulae / images / taps를 현재 디렉토리 의 &lt;code&gt;Brewfile&lt;/code&gt; 에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="f183ddf08e3b9db5e3e48a2f9816d1e20c8ded07" translate="yes" xml:space="preserve">
          <source>Write up a release notes blog post to &lt;a href=&quot;https://brew.sh&quot;&gt;https://brew.sh&lt;/a&gt; e.g. &lt;a href=&quot;https://github.com/Homebrew/brew.sh/pull/319&quot;&gt;brew.sh#319&lt;/a&gt;. This should use &lt;code&gt;brew release-notes&lt;/code&gt; as input but have the wording adjusted to be more human readable and explain not just what has changed but why.</source>
          <target state="translated">릴리스 노트 블로그 게시물을 &lt;a href=&quot;https://brew.sh&quot;&gt;https://brew.sh에 작성하십시오 (&lt;/a&gt; 예 : &lt;a href=&quot;https://github.com/Homebrew/brew.sh/pull/319&quot;&gt;brew.sh # 319)&lt;/a&gt; . 이것은 &lt;code&gt;brew release-notes&lt;/code&gt; 를 입력으로 사용하지만 더 인간이 읽을 수 있도록 단어를 조정하고 변경된 내용뿐만 아니라 그 이유를 설명해야합니다.</target>
        </trans-unit>
        <trans-unit id="1b75a05daa5361c8389fd5a26cf1d895ae9e5e0b" translate="yes" xml:space="preserve">
          <source>XQuartz</source>
          <target state="translated">XQuartz</target>
        </trans-unit>
        <trans-unit id="64d36ae69ab9210cfc1f0a43d303686988db04f8" translate="yes" xml:space="preserve">
          <source>Xcode</source>
          <target state="translated">Xcode</target>
        </trans-unit>
        <trans-unit id="b5b5a587bcecdbc25af8e57a7f2cd496522478f0" translate="yes" xml:space="preserve">
          <source>Xcode compiler versions</source>
          <target state="translated">Xcode 컴파일러 버전</target>
        </trans-unit>
        <trans-unit id="c31faf8396ff1b24296347b8da0e20fd67417819" translate="yes" xml:space="preserve">
          <source>Yes! It&amp;rsquo;s easy! Just &lt;code&gt;brew create URL&lt;/code&gt;. Homebrew will then open the formula in &lt;code&gt;EDITOR&lt;/code&gt; so you can edit it, but it probably already installs; try it: &lt;code&gt;brew
install &amp;lt;formula&amp;gt;&lt;/code&gt;. If you encounter any issues, run the command with the &lt;code&gt;--debug&lt;/code&gt; switch like so: &lt;code&gt;brew install --debug &amp;lt;formula&amp;gt;&lt;/code&gt;, which drops you into a debugging shell.</source>
          <target state="translated">예! 그것은 간단합니다! 그냥 &lt;code&gt;brew create URL&lt;/code&gt; . 그러면 Homebrew가 &lt;code&gt;EDITOR&lt;/code&gt; 에서 수식을 열어 편집 할 수 있지만 이미 설치되어있을 것입니다. 그것을 시도하십시오 : &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt; . 문제가 발생하면 &lt;code&gt;--debug&lt;/code&gt; 스위치를 사용하여 다음과 같이 명령을 실행하십시오 . &lt;code&gt;brew install --debug &amp;lt;formula&amp;gt;&lt;/code&gt; . 디버깅 쉘로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b1cd7b8c4ce634ef112e556b7d955bc99ef6b4ce" translate="yes" xml:space="preserve">
          <source>Yes! It&amp;rsquo;s easy! Just &lt;code&gt;brew edit &amp;lt;formula&amp;gt;&lt;/code&gt;. You don&amp;rsquo;t have to submit modifications back to &lt;code&gt;homebrew/core&lt;/code&gt;, just edit the formula as you personally need it and &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. As a bonus &lt;code&gt;brew update&lt;/code&gt; will merge your changes with upstream so you can still keep the formula up-to-date &lt;strong&gt;with&lt;/strong&gt; your personal modifications!</source>
          <target state="translated">예! 그것은 간단합니다! 그냥 &lt;code&gt;brew edit &amp;lt;formula&amp;gt;&lt;/code&gt; . 수정 사항을 &lt;code&gt;homebrew/core&lt;/code&gt; 에 다시 제출할 필요가 없습니다. 개인적으로 필요에 따라 공식을 편집하고 &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt; 합니다. 보너스로 &lt;code&gt;brew update&lt;/code&gt; 상류에 변경 사항을 병합합니다 그래서 당신은 여전히 최대 최신 공식을 유지할 수 &lt;strong&gt;와&lt;/strong&gt; 개인 수정!</target>
        </trans-unit>
        <trans-unit id="7ac9605de2fae1f186ad8e81d202a0fba93b8f0f" translate="yes" xml:space="preserve">
          <source>Yes! It&amp;rsquo;s easy! Just &lt;code&gt;brew edit &amp;lt;formula&amp;gt;&lt;/code&gt;. You don&amp;rsquo;t have to submit modifications back to &lt;code&gt;homebrew/core&lt;/code&gt;, just edit the formula as you personally need it and &lt;code&gt;brew install&lt;/code&gt;. As a bonus &lt;code&gt;brew update&lt;/code&gt; will merge your changes with upstream so you can still keep the formula up-to-date &lt;strong&gt;with&lt;/strong&gt; your personal modifications!</source>
          <target state="translated">예! 그것은 간단합니다! 그냥 &lt;code&gt;brew edit &amp;lt;formula&amp;gt;&lt;/code&gt; . &lt;code&gt;homebrew/core&lt;/code&gt; 에 수정 사항을 다시 제출할 필요는 없으며 개인적으로 필요에 따라 공식을 편집하고 &lt;code&gt;brew install&lt;/code&gt; . 보너스로 &lt;code&gt;brew update&lt;/code&gt; 상류에 변경 사항을 병합합니다 그래서 당신은 여전히 최대 최신 공식을 유지할 수 &lt;strong&gt;와&lt;/strong&gt; 개인 수정!</target>
        </trans-unit>
        <trans-unit id="34661e67abe2f84344a9f33d4635aa32d99a6b22" translate="yes" xml:space="preserve">
          <source>Yes, &lt;code&gt;brew&lt;/code&gt; is designed to not get in your way so you can use it how you like.</source>
          <target state="translated">예, &lt;code&gt;brew&lt;/code&gt; 는 방해가되지 않도록 설계되었으므로 원하는 방식으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95595a09086a8dd9f47e27b52764d22182c66f75" translate="yes" xml:space="preserve">
          <source>You are &lt;code&gt;su&lt;/code&gt;&amp;lsquo;ed as a different user.</source>
          <target state="translated">당신은 &lt;code&gt;su&lt;/code&gt; 다른 사용자로 '에디션.</target>
        </trans-unit>
        <trans-unit id="e09ce677bf5efc5528cb1226162c78df41d4625c" translate="yes" xml:space="preserve">
          <source>You are attempting to run &lt;code&gt;launchctl&lt;/code&gt; while logged in remotely. You should enable screen sharing on the remote machine and issue the command using Terminal.app running on that machine.</source>
          <target state="translated">원격으로 로그인 한 상태에서 &lt;code&gt;launchctl&lt;/code&gt; 을 실행하려고합니다 . 원격 컴퓨터에서 화면 공유를 활성화하고 해당 컴퓨터에서 실행중인 Terminal.app를 사용하여 명령을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c55fd4081581bdb0c3dc42db385e2b2d9bd3d247" translate="yes" xml:space="preserve">
          <source>You are using a terminal multiplexer such as &lt;code&gt;tmux&lt;/code&gt; or &lt;code&gt;screen&lt;/code&gt;. You should interact with &lt;code&gt;launchctl&lt;/code&gt; from a separate Terminal.app shell.</source>
          <target state="translated">&lt;code&gt;tmux&lt;/code&gt; 또는 &lt;code&gt;screen&lt;/code&gt; 과 같은 터미널 멀티플렉서를 사용하고 있습니다 . 별도의 Terminal.app 셸에서 &lt;code&gt;launchctl&lt;/code&gt; 과 상호 작용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="90c9432b39696479b97f744632eebbc4ec00b30f" translate="yes" xml:space="preserve">
          <source>You are using iTerm. The solution is to use Terminal.app when interacting with &lt;code&gt;launchctl&lt;/code&gt;.</source>
          <target state="translated">iTerm을 사용하고 있습니다. 해결책은 &lt;code&gt;launchctl&lt;/code&gt; 과 상호 작용할 때 Terminal.app를 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="e372638f260e96f4ff343e4512f9e92b95744cc8" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;browse pull requests&lt;/a&gt; and install through their direct link. For example, Python 3.7.0 from pull request &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pull/29490&quot;&gt;Homebrew/homebrew-core#29490&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;풀 요청을 찾아보고&lt;/a&gt; 직접 링크를 통해 설치할 수 있습니다 . 예를 들어 pull request &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pull/29490&quot;&gt;Homebrew / homebrew-core # 29490의&lt;/a&gt; Python 3.7.0 :</target>
        </trans-unit>
        <trans-unit id="d23122a834cff1f869b832d6f5f5a1c7c6e5021c" translate="yes" xml:space="preserve">
          <source>You can also check that an output file was created:</source>
          <target state="translated">출력 파일이 작성되었는지 확인할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6eedd36ff9a87fdd76e55891b5c54e4d510de92b" translate="yes" xml:space="preserve">
          <source>You can also pre-cache the download by using the command &lt;code&gt;brew fetch &amp;lt;formula&amp;gt;&lt;/code&gt; which also displays the SHA-256 hash. This can be useful for updating formulae to new versions.</source>
          <target state="translated">&lt;code&gt;brew fetch &amp;lt;formula&amp;gt;&lt;/code&gt; 명령을 사용하여 다운로드를 사전 캐시 할 수도 있습니다.이 명령 에는 SHA-256 해시도 표시됩니다. 수식을 새 버전으로 업데이트 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="05d23c3ad8af262b18ef75adc028408278d3cd1b" translate="yes" xml:space="preserve">
          <source>You can also rename the file during the installation process. This can be useful for adding a prefix to binaries that would otherwise cause conflicts with another formula, or for removing a file extension. For example, to install &lt;code&gt;foo.py&lt;/code&gt; into the formula&amp;rsquo;s &lt;code&gt;bin&lt;/code&gt; directory (&lt;code&gt;/usr/local/Cellar/pkg/0.1/bin&lt;/code&gt;) as just &lt;code&gt;foo&lt;/code&gt; instead of &lt;code&gt;foo.py&lt;/code&gt;:</source>
          <target state="translated">설치 프로세스 중에 파일 이름을 바꿀 수도 있습니다. 이것은 다른 수식과 충돌을 일으킬 수있는 바이너리에 접두사를 추가하거나 파일 확장자를 제거하는 데 유용 할 수 있습니다. 예를 들어 &lt;code&gt;foo.py&lt;/code&gt; 를 &lt;code&gt;foo.py&lt;/code&gt; 대신 &lt;code&gt;foo&lt;/code&gt; 로 공식의 &lt;code&gt;bin&lt;/code&gt; 디렉토리 ( &lt;code&gt;/usr/local/Cellar/pkg/0.1/bin&lt;/code&gt; ) 에 설치하려면 다음 을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebfe95982bf6b58dcaa7d9fdadc4ce4761f41bab" translate="yes" xml:space="preserve">
          <source>You can also use the more verbose form and request that specific resources be installed:</source>
          <target state="translated">더 자세한 양식을 사용하고 특정 자원을 설치하도록 요청할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="075eaed7f7e8f1b97839a3a31618621f058fe48a" translate="yes" xml:space="preserve">
          <source>You can also view all the information that is sent by Homebrew&amp;rsquo;s analytics by setting &lt;code&gt;HOMEBREW_ANALYTICS_DEBUG=1&lt;/code&gt; in your environment. Please note this will also stop any analytics from being sent.</source>
          <target state="translated">환경에서 &lt;code&gt;HOMEBREW_ANALYTICS_DEBUG=1&lt;/code&gt; 을 설정하여 Homebrew의 분석에서 전송 한 모든 정보를 볼 수도 있습니다 . 이로 인해 분석이 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9453bd401277c03d4409da4dc2b824bbb99b5164" translate="yes" xml:space="preserve">
          <source>You can check that the output is as expected with &lt;code&gt;assert_equal&lt;/code&gt; or &lt;code&gt;assert_match&lt;/code&gt; on the output of shell_output such as in this example from the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/envv.rb&quot;&gt;envv formula&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/master/Formula/envv.rb&quot;&gt;envv 공식&lt;/a&gt; 에서이 예제와 같이 shell_output 출력에서 &lt;code&gt;assert_equal&lt;/code&gt; 또는 &lt;code&gt;assert_match&lt;/code&gt; 를 사용하여 출력이 예상대로 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="673d4ec194dda2da61cff062d1075910265a5eb1" translate="yes" xml:space="preserve">
          <source>You can check that the output is as expected with &lt;code&gt;assert_equal&lt;/code&gt; or &lt;code&gt;assert_match&lt;/code&gt; on the output of the &lt;a href=&quot;https://rubydoc.brew.sh/Homebrew/Assertions.html&quot;&gt;Formula assertions&lt;/a&gt; such as in this example from the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/envv.rb&quot;&gt;envv formula&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/envv.rb&quot;&gt;envv 공식&lt;/a&gt; 의이 예제에서와 같이 &lt;a href=&quot;https://rubydoc.brew.sh/Homebrew/Assertions.html&quot;&gt;공식 어설 션&lt;/a&gt; 의 출력에서 &lt;code&gt;assert_equal&lt;/code&gt; 또는 &lt;code&gt;assert_match&lt;/code&gt; 를 사용하여 출력이 예상대로인지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bef0e00d560371f1fdc9fbfa3e5495d5cdd47bcd" translate="yes" xml:space="preserve">
          <source>You can click the test results link (e.g. &lt;code&gt;brew-test-bot.el_capitan.install openssl&lt;/code&gt;) to view the failed test output:</source>
          <target state="translated">테스트 결과 링크 (예 : &lt;code&gt;brew-test-bot.el_capitan.install openssl&lt;/code&gt; )를 클릭하면 실패한 테스트 출력을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e09f13c003b7eec716f0c7a9cc9e3641faa8db56" translate="yes" xml:space="preserve">
          <source>You can create a tap for an alternative &lt;code&gt;vim&lt;/code&gt; formula. The behaviour will be:</source>
          <target state="translated">다른 &lt;code&gt;vim&lt;/code&gt; 공식에 대한 탭을 만들 수 있습니다 . 동작은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e40d644dd41917797ed438130bb4169fce853c9d" translate="yes" xml:space="preserve">
          <source>You can get &lt;code&gt;pkg-config&lt;/code&gt; to detail the default search path with:</source>
          <target state="translated">다음을 사용하여 &lt;code&gt;pkg-config&lt;/code&gt; 를 사용하여 기본 검색 경로를 자세히 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="824ce9ea126dcc64e248cb5fe745b46670fec7e5" translate="yes" xml:space="preserve">
          <source>You can now find out what is outdated with:</source>
          <target state="translated">이제 오래된 항목을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8e119a42b3b95a90525873fbf790602b868f7ed" translate="yes" xml:space="preserve">
          <source>You can provide your tap users with custom &lt;code&gt;brew&lt;/code&gt; commands by adding them in a &lt;code&gt;cmd&lt;/code&gt; subdirectory. &lt;a href=&quot;external-commands&quot;&gt;Read more on external commands&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cmd&lt;/code&gt; 하위 디렉토리에 탭 사용자를 추가 하여 탭 사용자에게 사용자 지정 &lt;code&gt;brew&lt;/code&gt; 명령을 제공 할 수 있습니다 . &lt;a href=&quot;external-commands&quot;&gt;외부 명령에 대해 자세히 알아보십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c719362952708f67af198f037970b539f52d7be2" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;brew audit --strict --online&lt;/code&gt; to test formulae for adherence to Homebrew house style. The &lt;code&gt;audit&lt;/code&gt; command includes warnings for trailing whitespace, preferred URLs for certain source hosts, and a lot of other style issues. Fixing these warnings before committing will make the process a lot quicker for everyone.</source>
          <target state="translated">&lt;code&gt;brew audit --strict --online&lt;/code&gt; 을 실행 하여 Homebrew 하우스 스타일의 준수 여부를 테스트 할 수 있습니다 . &lt;code&gt;audit&lt;/code&gt; 명령은 후행 공백에 대한 경고, 특정 소스 호스트에 대한 선호 URL 및 다른 스타일의 문제를 많이 포함되어 있습니다. 커밋하기 전에 이러한 경고를 수정하면 프로세스가 훨씬 빨라집니다.</target>
        </trans-unit>
        <trans-unit id="66d6b5373337bafdca92cb31a46f1d9c515a7cc5" translate="yes" xml:space="preserve">
          <source>You can set environment variables in a formula&amp;rsquo;s &lt;code&gt;install&lt;/code&gt; method using &lt;code&gt;ENV[&quot;VARIABLE_NAME&quot;] = &quot;VALUE&quot;&lt;/code&gt;. An example can be seen in &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/fd9ad29f8e3ca9476f838ebb13794ddb7dafba00/Formula/gh.rb#L22&quot;&gt;the &lt;code&gt;gh&lt;/code&gt; formula&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ENV[&quot;VARIABLE_NAME&quot;] = &quot;VALUE&quot;&lt;/code&gt; 사용하여 수식의 &lt;code&gt;install&lt;/code&gt; 방법 에서 환경 변수를 설정할 수 있습니다 . 예에서 알 수 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/fd9ad29f8e3ca9476f838ebb13794ddb7dafba00/Formula/gh.rb#L22&quot;&gt; &lt;code&gt;gh&lt;/code&gt; &lt;/a&gt; 식 .</target>
        </trans-unit>
        <trans-unit id="2d2b77ed7b19de26ed90a9c0599bb66373b5e241" translate="yes" xml:space="preserve">
          <source>You can set flags to give configure scripts or Makefiles a nudge in the right direction. An example of flag setting:</source>
          <target state="translated">구성 스크립트 또는 Makefile에 올바른 방향으로 너지를 제공하도록 플래그를 설정할 수 있습니다. 플래그 설정의 예 :</target>
        </trans-unit>
        <trans-unit id="c494ea52bb6418172043dde54249874b30a45563" translate="yes" xml:space="preserve">
          <source>You can skip the installation of dependencies by adding space-separated values to one or more of the following environment variables: &lt;code&gt;HOMEBREW_BUNDLE_BREW_SKIP&lt;/code&gt;, &lt;code&gt;HOMEBREW_BUNDLE_CASK_SKIP&lt;/code&gt;, &lt;code&gt;HOMEBREW_BUNDLE_MAS_SKIP&lt;/code&gt;, &lt;code&gt;HOMEBREW_BUNDLE_WHALEBREW_SKIP&lt;/code&gt;, &lt;code&gt;HOMEBREW_BUNDLE_TAP_SKIP&lt;/code&gt;.</source>
          <target state="translated">: 좀 더 다음 환경 변수들 중 하나를 공백으로 분리 된 값을 가산함으로써 의존성의 설치를 생략 할 수 &lt;code&gt;HOMEBREW_BUNDLE_BREW_SKIP&lt;/code&gt; , &lt;code&gt;HOMEBREW_BUNDLE_CASK_SKIP&lt;/code&gt; , &lt;code&gt;HOMEBREW_BUNDLE_MAS_SKIP&lt;/code&gt; , &lt;code&gt;HOMEBREW_BUNDLE_WHALEBREW_SKIP&lt;/code&gt; , &lt;code&gt;HOMEBREW_BUNDLE_TAP_SKIP&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="dbcce74cadba4cde15ffd6a912c74dd0a585369a" translate="yes" xml:space="preserve">
          <source>You can specify the &lt;code&gt;Brewfile&lt;/code&gt; location using &lt;code&gt;--file&lt;/code&gt; or by setting the &lt;code&gt;HOMEBREW_BUNDLE_FILE&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;--file&lt;/code&gt; 을 사용 하거나 &lt;code&gt;HOMEBREW_BUNDLE_FILE&lt;/code&gt; 환경 변수를 설정 하여 &lt;code&gt;Brewfile&lt;/code&gt; 위치를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="597fc507ac2256f641b7513c28df01da22be24f1" translate="yes" xml:space="preserve">
          <source>You can still link in the formula if you need to with &lt;code&gt;brew link &amp;lt;formula&amp;gt;&lt;/code&gt;, though this can cause unexpected behaviour if you are shadowing macOS software.</source>
          <target state="translated">&lt;code&gt;brew link &amp;lt;formula&amp;gt;&lt;/code&gt; 를 사용해야하는 경우 공식에서 링크 할 수 있지만 macOS 소프트웨어를 섀도 잉하는 경우 예기치 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70cfb27b31deae99ad2af4b1c980034ad132638b" translate="yes" xml:space="preserve">
          <source>You can temporarily prepend your &lt;code&gt;PATH&lt;/code&gt; with the tool&amp;rsquo;s &lt;code&gt;bin&lt;/code&gt; directory, such as:</source>
          <target state="translated">다음 과 같이 도구의 &lt;code&gt;bin&lt;/code&gt; 디렉토리에 &lt;code&gt;PATH&lt;/code&gt; 를 임시로 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5da1875fa8c5de3e996c2a0ff650835aa50919c" translate="yes" xml:space="preserve">
          <source>You can test if the &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt;&lt;code&gt;devel&lt;/code&gt;&lt;/a&gt; spec is in use with &lt;code&gt;build.devel?&lt;/code&gt;.</source>
          <target state="translated">경우 테스트 할 수 있습니다 &lt;a href=&quot;https://rubydoc.brew.sh/Formula#devel-class_method&quot;&gt; &lt;code&gt;devel&lt;/code&gt; &lt;/a&gt; 스펙에 사용하기에 &lt;code&gt;build.devel?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43212207769034ad1ff056911f6e9008c3179352" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/zmwangx/homebrew-npm-noob&quot;&gt;homebrew-npm-noob&lt;/a&gt; to automatically generate a formula like the example above for an npm package.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zmwangx/homebrew-npm-noob&quot;&gt;homebrew-npm-noob&lt;/a&gt; 을 사용 하여 npm 패키지에 대해 위의 예와 같은 수식을 자동으로 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1813c87b1c9c3f9859d3427084af5c28af6bdddd" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://pypi.python.org/pypi/homebrew-pypi-poet&quot;&gt;homebrew-pypi-poet&lt;/a&gt; to help you write resource stanzas. To use it, set up a virtualenv and install your package and all its dependencies. Then, &lt;code&gt;pip install homebrew-pypi-poet&lt;/code&gt; into the same virtualenv. Running &lt;code&gt;poet some_package&lt;/code&gt; will generate the necessary resource stanzas. You can do this like:</source>
          <target state="translated">당신이 사용할 수있는 &lt;a href=&quot;https://pypi.python.org/pypi/homebrew-pypi-poet&quot;&gt;사제-pypi - 시인&lt;/a&gt; 은 자원 연을 쓸 수 있도록 도와줍니다. 이를 사용하려면 virtualenv를 설정하고 패키지 및 모든 종속 항목을 설치하십시오. 그런 다음 &lt;code&gt;pip install homebrew-pypi-poet&lt;/code&gt; 를 동일한 virtualenv에 설치합니다. &lt;code&gt;poet some_package&lt;/code&gt; 를 실행 하면 필요한 자원 스탠자가 생성됩니다. 다음과 같이 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="50b6cfc2525ffc30815e844b9106af8164af3a01" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;brew update-python-resources&lt;/code&gt; to help you write resource stanzas. To use it, simply run &lt;code&gt;brew update-python-resources &amp;lt;formula&amp;gt;&lt;/code&gt;. Sometimes, &lt;code&gt;brew update-python-resources&lt;/code&gt; won&amp;rsquo;t be able to automatically update the resources. If this happens, try running &lt;code&gt;brew update-python-resources --print-only &amp;lt;formula&amp;gt;&lt;/code&gt; to print the resource stanzas instead of applying the changes directly to the file. You can then copy and paste resources as needed.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;code&gt;brew update-python-resources&lt;/code&gt; 은 자원 연을 쓸 수 있도록 도와줍니다. 이를 사용하려면 &lt;code&gt;brew update-python-resources &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행하면 됩니다. 때로는 &lt;code&gt;brew update-python-resources&lt;/code&gt; 가 리소스 를 자동으로 업데이트 할 수 없습니다. 이 경우 파일에 직접 변경 사항을 적용하는 대신 &lt;code&gt;brew update-python-resources --print-only &amp;lt;formula&amp;gt;&lt;/code&gt; 를 실행하여 리소스 스탠자를 인쇄 해보십시오 . 그런 다음 필요에 따라 리소스를 복사하여 붙여 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2aecc3932b8541a16a3c3609227691cd044b7d62" translate="yes" xml:space="preserve">
          <source>You can use the file utilities provided by Ruby&amp;rsquo;s &lt;a href=&quot;https://www.ruby-doc.org/stdlib/libdoc/fileutils/rdoc/index.html&quot;&gt;&lt;code&gt;FileUtils&lt;/code&gt;&lt;/a&gt;. These are included in the &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt;&lt;code&gt;Formula&lt;/code&gt;&lt;/a&gt; class, so you do not need the &lt;code&gt;FileUtils.&lt;/code&gt; prefix to use them.</source>
          <target state="translated">Ruby의 &lt;a href=&quot;https://www.ruby-doc.org/stdlib/libdoc/fileutils/rdoc/index.html&quot;&gt; &lt;code&gt;FileUtils&lt;/code&gt; 에서&lt;/a&gt; 제공하는 파일 유틸리티를 사용할 수 있습니다 . 이것들은 &lt;a href=&quot;https://rubydoc.brew.sh/Formula&quot;&gt; &lt;code&gt;Formula&lt;/code&gt; &lt;/a&gt; 클래스에 포함되어 있으므로 &lt;code&gt;FileUtils.&lt;/code&gt; 가 필요하지 않습니다 . 접두어를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="18e919c25404aeb3118b757477cff8af3d4e45d2" translate="yes" xml:space="preserve">
          <source>You can watch a video of the above process &lt;a href=&quot;https://youtu.be/dQCpLaXOf6k&quot;&gt;on YouTube&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://youtu.be/dQCpLaXOf6k&quot;&gt;유튜브&lt;/a&gt; 에서 위의 과정 에 대한 비디오를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="debf8dd1592c28b0f365bc26a6c080916a7a9b89" translate="yes" xml:space="preserve">
          <source>You cloned with &lt;code&gt;git&lt;/code&gt;, and your Git configuration is set to use Windows line endings. See this page: &lt;a href=&quot;https://help.github.com/articles/dealing-with-line-endings&quot;&gt;https://help.github.com/articles/dealing-with-line-endings&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; 으로 복제했으며 Git 구성이 Windows 줄 끝을 사용하도록 설정되었습니다. 이 페이지를 참조하십시오 : &lt;a href=&quot;https://help.github.com/articles/dealing-with-line-endings&quot;&gt;https://help.github.com/articles/dealing-with-line-endings&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c5c47f8ba00f9d5c7087b85f3a8f5f0fab4712d" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have a &lt;code&gt;/usr/bin/ruby&lt;/code&gt; or it is not executable. It&amp;rsquo;s not recommended to let this persist; you&amp;rsquo;d be surprised how many &lt;code&gt;.app&lt;/code&gt;s, tools and scripts expect your macOS-provided files and directories to be &lt;em&gt;unmodified&lt;/em&gt; since macOS was installed.</source>
          <target state="translated">당신은하지 않습니다 &lt;code&gt;/usr/bin/ruby&lt;/code&gt; 또는 그것은 실행되지 않습니다. 이것을 지속시키지 않는 것이 좋습니다. macOS를 설치 한 후 macOS 제공 파일 및 디렉토리가 &lt;em&gt;수정되지&lt;/em&gt; 않을 것으로 예상되는 &lt;code&gt;.app&lt;/code&gt; , 도구 및 스크립트의 수에 놀랄 것 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b25d32a607705ee1cd5d9e2ace87f33ba4e29b5" translate="yes" xml:space="preserve">
          <source>You may also need to forcibly rebuild &lt;code&gt;zcompdump&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;zcompdump&lt;/code&gt; 를 강제로 다시 빌드해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b52ea1369becdf3e9daaaa08bc33389fb7c85df0" translate="yes" xml:space="preserve">
          <source>You may need to install your own Ruby using your system package manager, a PPA, or &lt;code&gt;rbenv/ruby-build&lt;/code&gt; as we no longer distribute a Homebrew Portable Ruby for ARM.</source>
          <target state="translated">더 이상 ARM 용 Homebrew Portable Ruby를 배포하지 않으므로 시스템 패키지 관리자, PPA 또는 &lt;code&gt;rbenv/ruby-build&lt;/code&gt; 를 사용하여 자체 Ruby를 설치해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8060f0a47f9d13ea35da84adf5edbb5600a736f" translate="yes" xml:space="preserve">
          <source>You must configure your shell to enable its completion support. This is because the Homebrew-managed completions are stored under &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; which your system shell may not be aware of, and since it is difficult to automatically configure &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt; completions in a robust manner, the Homebrew installer does not do it for you.</source>
          <target state="translated">완료 지원을 사용하도록 쉘을 구성해야합니다. 이는 Homebrew 관리 완료가 시스템 셸 에서 &lt;code&gt;HOMEBREW_PREFIX&lt;/code&gt; 에 저장되어 있기 때문에 강력한 방식으로 &lt;code&gt;bash&lt;/code&gt; 및 &lt;code&gt;zsh&lt;/code&gt; 완료 를 자동으로 구성하기가 어렵 기 때문에 Homebrew 설치 관리자는이를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f42a38e64f250ea30777535aa251ec13cd3e97e" translate="yes" xml:space="preserve">
          <source>You need &lt;code&gt;sudo&lt;/code&gt; to install to these like so: &lt;code&gt;sudo gem install&lt;/code&gt;, &lt;code&gt;sudo easy_install&lt;/code&gt; or &lt;code&gt;sudo cpan -i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sudo gem install&lt;/code&gt; , &lt;code&gt;sudo easy_install&lt;/code&gt; 또는 &lt;code&gt;sudo cpan -i&lt;/code&gt; 와 같이 설치하려면 &lt;code&gt;sudo&lt;/code&gt; 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="c6018e964ad609bf63f1ecce9d502f004dffa68c" translate="yes" xml:space="preserve">
          <source>You need to have the Xcode Command Line Utilities installed (and updated): run &lt;code&gt;xcode-select --install&lt;/code&gt; in the terminal.</source>
          <target state="translated">Xcode 명령 줄 유틸리티가 설치되어 있고 업데이트되어 있어야 합니다. 터미널에서 &lt;code&gt;xcode-select --install&lt;/code&gt; 을 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1cdb1aca44ecce8027a30d4cbfe5eb5737fc352a" translate="yes" xml:space="preserve">
          <source>You should only ever sudo a tool you trust. Of course, you can trust Homebrew 😉 But do you trust the multi-megabyte Makefile that Homebrew runs? Developers often understand C++ far better than they understand make syntax. It&amp;rsquo;s too high a risk to sudo such stuff. It could modify (or upload) any files on your system. And indeed, we&amp;rsquo;ve seen some build scripts try to modify &lt;code&gt;/usr&lt;/code&gt; even when the prefix was specified as something else entirely.</source>
          <target state="translated">신뢰할 수있는 도구 만 sudo해야합니다. 물론, 당신은 Homebrew를 믿을 수 있습니다. 그러나 Homebrew가 운영하는 멀티 메가 바이트 Makefile을 신뢰하십니까? 개발자는 종종 make 구문을 이해하는 것보다 C ++을 훨씬 잘 이해합니다. 그런 물건을 버리기에는 너무 위험합니다. 시스템의 모든 파일을 수정 (또는 업로드) 할 수 있습니다. 실제로 접두어가 완전히 다른 것으로 지정되어 있어도 일부 빌드 스크립트가 &lt;code&gt;/usr&lt;/code&gt; 을 수정하려고 시도하는 것을 보았습니다 .</target>
        </trans-unit>
        <trans-unit id="fab7789f609f4d02623a8dcbfc5ec51ffc1d0c99" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll note that processing all formulae can be slow; it&amp;rsquo;s quicker to let &lt;code&gt;brew&lt;/code&gt; do this:</source>
          <target state="translated">모든 수식 처리 속도가 느려질 수 있습니다. &lt;code&gt;brew&lt;/code&gt; 하는 것이 더 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="52b43f8cd7ed742f4ad87d61e2604684fa521b3b" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see stuff like this in some formulae. This moves the file &lt;code&gt;foo&lt;/code&gt; into the formula&amp;rsquo;s &lt;code&gt;bin&lt;/code&gt; directory (&lt;code&gt;/usr/local/Cellar/pkg/0.1/bin&lt;/code&gt;) and makes it executable (&lt;code&gt;chmod 0555 foo&lt;/code&gt;).</source>
          <target state="translated">몇 가지 공식에서 이와 같은 것을 볼 수 있습니다. 이렇게하면 파일 &lt;code&gt;foo&lt;/code&gt; 가 공식의 &lt;code&gt;bin&lt;/code&gt; 디렉토리 ( &lt;code&gt;/usr/local/Cellar/pkg/0.1/bin&lt;/code&gt; )로 이동하고 실행 가능하게됩니다 ( &lt;code&gt;chmod 0555 foo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="090c6aaf0ee2f5f57dc26d3c5bc3562f8da8f4f4" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re done! Try installing a package:</source>
          <target state="translated">끝났습니다! 패키지를 설치하십시오 :</target>
        </trans-unit>
        <trans-unit id="c6a745a192673dfd947c049ba27e4c005e0d0212" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re now at a new prompt with the tarball extracted to a temporary sandbox.</source>
          <target state="translated">이제 tarball이 임시 샌드 박스로 추출 된 새 프롬프트가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="be83ab054de306a464226f41d4c460d8025acc61" translate="yes" xml:space="preserve">
          <source>Your taps are Git repositories located at &lt;code&gt;$(brew --repository)/Library/Taps&lt;/code&gt;.</source>
          <target state="translated">탭은 &lt;code&gt;$(brew --repository)/Library/Taps&lt;/code&gt; 위치한 Git 리포지토리입니다 .</target>
        </trans-unit>
        <trans-unit id="eec40b9456ecba16b727b545c212e6c8894fa75c" translate="yes" xml:space="preserve">
          <source>Zaps all files associated with the given &lt;em&gt;&lt;code&gt;cask&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">주어진 &lt;em&gt; &lt;code&gt;cask&lt;/code&gt; &lt;/em&gt; 와 관련된 모든 파일을 Zaps합니다 .</target>
        </trans-unit>
        <trans-unit id="f78076514265a2f10593e95186e42e286d76b473" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;sudo&lt;/code&gt;] &lt;code&gt;brew services cleanup&lt;/code&gt;</source>
          <target state="translated">[ &lt;code&gt;sudo&lt;/code&gt; ] &lt;code&gt;brew services cleanup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cef7cdde74f5d546f26677df92c9ecb8f16ddf9" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;sudo&lt;/code&gt;] &lt;code&gt;brew services restart&lt;/code&gt; (&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;|&lt;code&gt;--all&lt;/code&gt;)</source>
          <target state="translated">[ &lt;code&gt;sudo&lt;/code&gt; ] &lt;code&gt;brew services restart&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; | &lt;code&gt;--all&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1d6d9888bb9b5b7504aa9439a3343fcdc161e8d0" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;sudo&lt;/code&gt;] &lt;code&gt;brew services run&lt;/code&gt; (&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;|&lt;code&gt;--all&lt;/code&gt;)</source>
          <target state="translated">[ &lt;code&gt;sudo&lt;/code&gt; ] &lt;code&gt;brew services run&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; | &lt;code&gt;--all&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b91086f322199654e10f960eb45619f4973fc0df" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;sudo&lt;/code&gt;] &lt;code&gt;brew services start&lt;/code&gt; (&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;|&lt;code&gt;--all&lt;/code&gt;)</source>
          <target state="translated">[ &lt;code&gt;sudo&lt;/code&gt; ] &lt;code&gt;brew services start&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; | &lt;code&gt;--all&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a74de6e2a2ac79bd8e78ad9dc5cd66e395f20b09" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;sudo&lt;/code&gt;] &lt;code&gt;brew services stop&lt;/code&gt; (&lt;em&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/em&gt;|&lt;code&gt;--all&lt;/code&gt;)</source>
          <target state="translated">[ &lt;code&gt;sudo&lt;/code&gt; ] &lt;code&gt;brew services stop&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/em&gt; | &lt;code&gt;--all&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5add6e2ec062e04f1b38cfb93d6483fd8e53edb5" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;sudo&lt;/code&gt;] &lt;code&gt;brew services&lt;/code&gt; [&lt;code&gt;list&lt;/code&gt;]</source>
          <target state="translated">[ &lt;code&gt;sudo&lt;/code&gt; ] &lt;code&gt;brew services&lt;/code&gt; [ &lt;code&gt;list&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="afd37f1dda3c353b7951f15f7d8fb4be5bfda175" translate="yes" xml:space="preserve">
          <source>be known</source>
          <target state="translated">알려지다</target>
        </trans-unit>
        <trans-unit id="8879f8d13e18a20e2a3e0571ea4d8fb2b6a2d873" translate="yes" xml:space="preserve">
          <source>be maintained (i.e. the last release wasn&amp;rsquo;t ages ago, it works without patching on all supported macOS releases and has no outstanding, unpatched security vulnerabilities)</source>
          <target state="translated">유지 관리 (즉, 이전 릴리스는 오래되지 않았으며 지원되는 모든 macOS 릴리스에서 패치없이 작동하며 패치되지 않은 뛰어난 보안 취약점이 없음)</target>
        </trans-unit>
        <trans-unit id="cfadb3316c4cc0302f8c7f2e986ffadf7cbbdc99" translate="yes" xml:space="preserve">
          <source>be stable (e.g. not declared &amp;ldquo;unstable&amp;rdquo; or &amp;ldquo;beta&amp;rdquo; by upstream)</source>
          <target state="translated">안정적이어야합니다 (예 : 업스트림에서 &quot;불안정한&quot;또는 &quot;베타&quot;로 선언되지 않음)</target>
        </trans-unit>
        <trans-unit id="dae5b7dbf2bcb810c78ae0a52037a713cfa0b124" translate="yes" xml:space="preserve">
          <source>be used</source>
          <target state="translated">사용되다</target>
        </trans-unit>
        <trans-unit id="b6fc12d785c9a808cb16d02e641a4b4a68af81ca" translate="yes" xml:space="preserve">
          <source>brew</source>
          <target state="translated">brew</target>
        </trans-unit>
        <trans-unit id="03b322439b17e4e9a74e785415a02215b00f57bf" translate="yes" xml:space="preserve">
          <source>brew(1) &amp;ndash; The Missing Package Manager for macOS (or Linux)</source>
          <target state="translated">brew (1) &amp;ndash; macOS (또는 Linux) 용 누락 된 패키지 관리자</target>
        </trans-unit>
        <trans-unit id="5be8df12e892d354a4cfeed835517c94bd08ec21" translate="yes" xml:space="preserve">
          <source>brew(1) &amp;ndash; The missing package manager for macOS</source>
          <target state="translated">brew (1) &amp;ndash; 누락 된 macOS 용 패키지 관리자</target>
        </trans-unit>
        <trans-unit id="f44c1ae2f3480bfb15a9f89f77c9aaf1119e3201" translate="yes" xml:space="preserve">
          <source>brew-gem</source>
          <target state="translated">brew-gem</target>
        </trans-unit>
        <trans-unit id="222f2a4c28b977ed496e10591b8d9d2ffc536d11" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;./configure --without-python&lt;/code&gt; (or a similar named option)</source>
          <target state="translated">전화 &lt;code&gt;./configure --without-python&lt;/code&gt; (또는 유사한 이름 옵션)</target>
        </trans-unit>
        <trans-unit id="6c0cf216325c7a377066b7814c64523194f17020" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;setup.py&lt;/code&gt; with &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; (as described above)</source>
          <target state="translated">&lt;code&gt;system&lt;/code&gt; 및 &lt;code&gt;Language::Python.setup_install_args&lt;/code&gt; 하여 &lt;code&gt;setup.py&lt;/code&gt; 를 호출 하십시오 (위 설명 참조).</target>
        </trans-unit>
        <trans-unit id="bf2d5aa1cfd6a0aa7a2e0a57bf46775ee0541c16" translate="yes" xml:space="preserve">
          <source>core formulae</source>
          <target state="translated">핵심 공식</target>
        </trans-unit>
        <trans-unit id="1f20eb5e79c72ef7f09b938fcb083803996674d9" translate="yes" xml:space="preserve">
          <source>download strategy</source>
          <target state="translated">다운로드 전략</target>
        </trans-unit>
        <trans-unit id="35a964eeb42a8a6834825aa694ae0e4abe2ae18d" translate="yes" xml:space="preserve">
          <source>e.g. &amp;ldquo;Set &lt;code&gt;BLAH&lt;/code&gt; to 5&amp;rdquo;, not &amp;ldquo;Set &lt;code&gt;$BLAH&lt;/code&gt; to 5&amp;rdquo;</source>
          <target state="translated">예를 들어, &quot;설정 &lt;code&gt;BLAH&lt;/code&gt; 5&quot;가 아닌 &quot;세트 &lt;code&gt;$BLAH&lt;/code&gt; 5&quot;</target>
        </trans-unit>
        <trans-unit id="401082eaf30bbde3544653b4262836082582391b" translate="yes" xml:space="preserve">
          <source>e.g. &lt;code&gt;git remote add &amp;lt;my-user-name&amp;gt; https://github.com/&amp;lt;my-user-name&amp;gt;/homebrew-core.git&lt;/code&gt;</source>
          <target state="translated">예를 들어 &lt;code&gt;git remote add &amp;lt;my-user-name&amp;gt; https://github.com/&amp;lt;my-user-name&amp;gt;/homebrew-core.git&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58209cae2e8fbbc6ce072d5c25e1ffa0d091045e" translate="yes" xml:space="preserve">
          <source>explain the commit thoroughly.</source>
          <target state="translated">커밋을 철저히 설명하십시오.</target>
        </trans-unit>
        <trans-unit id="f0bc4b88ec3e26e69d5aec8a3eefa63322534555" translate="yes" xml:space="preserve">
          <source>fetches and installs dependencies</source>
          <target state="translated">의존성 가져 오기 및 설치</target>
        </trans-unit>
        <trans-unit id="c338dd3f0eb750b3406bd92542dadc4cf8c63f71" translate="yes" xml:space="preserve">
          <source>formulae for standard Node modules compatible with npm&amp;rsquo;s global module format which should use &lt;a href=&quot;#installing-global-style-modules-with-std_npm_install_args-to-libexec&quot;&gt;&lt;code&gt;std_npm_install_args&lt;/code&gt;&lt;/a&gt; (like &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/0f3b27d252b8112c744e0460d871cfe1def6b993/Formula/azure-cli.rb&quot;&gt;&lt;code&gt;azure-cli&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/6282879973d569962e63da7c81ac4623e1a8336b/Formula/webpack.rb&quot;&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;#installing-global-style-modules-with-std_npm_install_args-to-libexec&quot;&gt; &lt;code&gt;std_npm_install_args&lt;/code&gt; &lt;/a&gt; 를 사용해야하는 npm의 글로벌 모듈 형식과 호환되는 표준 노드 모듈의 공식 (예 : &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/0f3b27d252b8112c744e0460d871cfe1def6b993/Formula/azure-cli.rb&quot;&gt; &lt;code&gt;azure-cli&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/6282879973d569962e63da7c81ac4623e1a8336b/Formula/webpack.rb&quot;&gt; &lt;code&gt;webpack&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="bd2d5da8b51fd8677491dfb245bdf080ed8635ee" translate="yes" xml:space="preserve">
          <source>formulae where the &lt;code&gt;npm install&lt;/code&gt; call is not the only required install step (e.g. need to also compile non-JavaScript sources) which have to use &lt;a href=&quot;#installing-module-dependencies-locally-with-local_npm_install_args&quot;&gt;&lt;code&gt;local_npm_install_args&lt;/code&gt;&lt;/a&gt; (like &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/4bb491b7b246830aed57b97348a17e9401374978/Formula/elixirscript.rb&quot;&gt;&lt;code&gt;elixirscript&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/93be1840908adb2f9ee8c48c66586ee6327480e3/Formula/grunt-cli.rb&quot;&gt;&lt;code&gt;grunt-cli&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">공식 &lt;code&gt;npm install&lt;/code&gt; 호출은 단지 단계를 설치할 필요가 없습니다 (예 :도 컴파일이 아닌 자바 스크립트 소스에 필요)를 사용해야 &lt;a href=&quot;#installing-module-dependencies-locally-with-local_npm_install_args&quot;&gt; &lt;code&gt;local_npm_install_args&lt;/code&gt; &lt;/a&gt; (같은 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/4bb491b7b246830aed57b97348a17e9401374978/Formula/elixirscript.rb&quot;&gt; &lt;code&gt;elixirscript&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/blob/93be1840908adb2f9ee8c48c66586ee6327480e3/Formula/grunt-cli.rb&quot;&gt; &lt;code&gt;grunt-cli&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f4c79049fdf884fcecb679b03ed77398a51f0be4" translate="yes" xml:space="preserve">
          <source>formulae.brew.sh</source>
          <target state="translated">formulae.brew.sh</target>
        </trans-unit>
        <trans-unit id="a3412e1e83ac120899335bf45b5490dbe93a81d4" translate="yes" xml:space="preserve">
          <source>has a stable, tagged version (i.e. not just a GitHub repository with no versions)</source>
          <target state="translated">안정되고 태그가 지정된 버전이 있습니다 (예 : 버전이없는 GitHub 리포지토리가 아님)</target>
        </trans-unit>
        <trans-unit id="c8bfa950a585cf39cca44cd5f92c5ee3712d358c" translate="yes" xml:space="preserve">
          <source>have a homepage</source>
          <target state="translated">홈페이지가있다</target>
        </trans-unit>
        <trans-unit id="6c39a4d6cfc2b2c3ee704b1baa80280c0a3b27f1" translate="yes" xml:space="preserve">
          <source>homebrew-aliases</source>
          <target state="translated">homebrew-aliases</target>
        </trans-unit>
        <trans-unit id="02c4f93e1bdd92bc40c413dfd0fc2749da420396" translate="yes" xml:space="preserve">
          <source>homebrew-command-not-found</source>
          <target state="translated">homebrew-command-not-found</target>
        </trans-unit>
        <trans-unit id="77eac10a4ff5d379e0bb451e85ac4481afd57e84" translate="yes" xml:space="preserve">
          <source>homebrew-livecheck</source>
          <target state="translated">homebrew-livecheck</target>
        </trans-unit>
        <trans-unit id="9f4420b95129733b776fef5fe8fe57da918812f4" translate="yes" xml:space="preserve">
          <source>in case you need to do different things for different resources.</source>
          <target state="translated">다른 리소스에 대해 다른 작업을 수행해야하는 경우</target>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="translated">대신에:</target>
        </trans-unit>
        <trans-unit id="2940aaa0a4c7039b4645278abcd2f356fad125e6" translate="yes" xml:space="preserve">
          <source>is still supported by upstream (i.e. doesn&amp;rsquo;t require extensive patching)</source>
          <target state="translated">여전히 업스트림에서 지원됩니다 (즉, 광범위한 패치가 필요하지 않음)</target>
        </trans-unit>
        <trans-unit id="e6d07c5ee6d1a2ba7ba922b7dcbd1741db67ef02" translate="yes" xml:space="preserve">
          <source>isn&amp;rsquo;t already in Homebrew (check &lt;code&gt;brew search &amp;lt;formula&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">아직 Homebrew에 있지 않습니다 ( &lt;code&gt;brew search &amp;lt;formula&amp;gt;&lt;/code&gt; 확인 ).</target>
        </trans-unit>
        <trans-unit id="6af8a7f997bb36e2718836cd7ec02e00396fd1d6" translate="yes" xml:space="preserve">
          <source>isn&amp;rsquo;t already waiting to be merged (check the &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;issue tracker&lt;/a&gt;)</source>
          <target state="translated">아직 병합 대기 중이 아님 ( &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/pulls&quot;&gt;문제 추적기&lt;/a&gt; 확인 )</target>
        </trans-unit>
        <trans-unit id="bad2376f30b9fd6f5fd2ffd31bbe13bead81d5a0" translate="yes" xml:space="preserve">
          <source>launchd plist files</source>
          <target state="translated">plist 파일을 시작</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">macOS</target>
        </trans-unit>
        <trans-unit id="128a900f1597c3e5af24f20da0ae64ce157ccff6" translate="yes" xml:space="preserve">
          <source>macOS 10.12 (or higher) &lt;sup&gt;&lt;a href=&quot;#2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">맥 OS 10.12 (또는 그 이상) &lt;sup&gt;&lt;a href=&quot;#2&quot;&gt;(2)&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2a6f684c77f3555c14c59b036c573f3fdd959788" translate="yes" xml:space="preserve">
          <source>macOS High Sierra (10.13) (or higher) &lt;sup&gt;&lt;a href=&quot;#2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">macOS High Sierra (10.13) 이상 &lt;sup&gt;&lt;a href=&quot;#2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1beebf8f88cc13a646939c04a76ce5ae2b4715d4" translate="yes" xml:space="preserve">
          <source>macOS Requirements</source>
          <target state="translated">macOS 요구 사항</target>
        </trans-unit>
        <trans-unit id="a90d3c10d40eac2556990e3064f44c8da0cf5c4d" translate="yes" xml:space="preserve">
          <source>meets all our &lt;a href=&quot;acceptable-formulae&quot;&gt;Acceptable Formulae&lt;/a&gt; requirements</source>
          <target state="translated">모든 &lt;a href=&quot;acceptable-formulae&quot;&gt;허용 가능한 포뮬러&lt;/a&gt; 요구 사항 충족</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="f05e2fb9cbfc60ba4c0f1decffa9297636198333" translate="yes" xml:space="preserve">
          <source>or clean up everything at once:</source>
          <target state="translated">또는 한 번에 모든 것을 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="3bcedf7625de5045598cdde2073344d0fc392345" translate="yes" xml:space="preserve">
          <source>or to &lt;strong&gt;disable&lt;/strong&gt; automatic &lt;code&gt;brew cleanup&lt;/code&gt;:</source>
          <target state="translated">또는 자동 &lt;code&gt;brew cleanup&lt;/code&gt; 을 &lt;strong&gt;비활성화&lt;/strong&gt; 하려면 :</target>
        </trans-unit>
        <trans-unit id="43ec48c4c5b6cbcd1a59d899e39f281687d2ae5f" translate="yes" xml:space="preserve">
          <source>or to see what would be cleaned up:</source>
          <target state="translated">또는 무엇을 정리할지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b167894e715791b8e3de24eb396724ac9ba1c940" translate="yes" xml:space="preserve">
          <source>other taps</source>
          <target state="translated">다른 탭</target>
        </trans-unit>
        <trans-unit id="b2a56b4e2697c1bb979c5eb2cf2c46bce8dea931" translate="yes" xml:space="preserve">
          <source>passes all &lt;code&gt;brew audit --new-formula &amp;lt;formula&amp;gt;&lt;/code&gt; tests</source>
          <target state="translated">모든 &lt;code&gt;brew audit --new-formula &amp;lt;formula&amp;gt;&lt;/code&gt; 통과 --new-formula &amp;lt;formula&amp;gt; 테스트</target>
        </trans-unit>
        <trans-unit id="2333102aa156ddb065d3fd6bb4360693a8e11e89" translate="yes" xml:space="preserve">
          <source>setuptools vs. distutils vs. pip</source>
          <target state="translated">setuptools 대 distutils 대 pip</target>
        </trans-unit>
        <trans-unit id="460f27f8bbad2c12f89e0e4b6c62f981431bbf51" translate="yes" xml:space="preserve">
          <source>the first line is a commit summary of &lt;em&gt;50 characters or less&lt;/em&gt;</source>
          <target state="translated">첫 번째 줄은 &lt;em&gt;50 자 이하&lt;/em&gt; 의 커밋 요약입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6246b24b2053f17cf491719044f7b65100d3874" translate="yes" xml:space="preserve">
          <source>to create the directory structure for the manual page location.</source>
          <target state="translated">수동 페이지 위치의 디렉토리 구조를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="901607e2881212d4695e046a8463be2894ee46e0" translate="yes" xml:space="preserve">
          <source>to move binaries into their correct location into the Cellar, and</source>
          <target state="translated">바이너리를 올바른 위치로 지하실로 옮기고</target>
        </trans-unit>
        <trans-unit id="350fed8dcfb85f9e2cf88467160e6135048dc071" translate="yes" xml:space="preserve">
          <source>two (2) newlines, then</source>
          <target state="translated">두 줄 바꿈</target>
        </trans-unit>
        <trans-unit id="f5658cd5097157e440dd532d265c1305b0873ca1" translate="yes" xml:space="preserve">
          <source>upgrades dependencies in &lt;code&gt;sys.path&lt;/code&gt; in-place</source>
          <target state="translated">업그레이드 종속성에서 &lt;code&gt;sys.path&lt;/code&gt; 의 현재 위치</target>
        </trans-unit>
        <trans-unit id="b6a30cad0165c96f83a1ec2baf3f517a259ba710" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;libexec&lt;/code&gt; is the destination prefix (usually the &lt;code&gt;libexec&lt;/code&gt; variable).</source>
          <target state="translated">여기서 &lt;code&gt;libexec&lt;/code&gt; 는 대상 접두사 (보통 &lt;code&gt;libexec&lt;/code&gt; 변수)입니다.</target>
        </trans-unit>
        <trans-unit id="52051363a9ca56468976a6577b6f55b949e3d9a8" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;prefix&lt;/code&gt; is the destination prefix (usually &lt;code&gt;libexec&lt;/code&gt; or &lt;code&gt;prefix&lt;/code&gt;).</source>
          <target state="translated">여기서 &lt;code&gt;prefix&lt;/code&gt; 는 대상 접두사입니다 (보통 &lt;code&gt;libexec&lt;/code&gt; 또는 &lt;code&gt;prefix&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ba19f5ae3c417cb985c5d68dc2eff0d070bc3703" translate="yes" xml:space="preserve">
          <source>will let you add packages to Python 3.y as yourself, which is probably safer than changing the group ownership of the directory.</source>
          <target state="translated">파이썬 3.y에 패키지를 직접 추가 할 수 있습니다. 디렉토리의 그룹 소유권을 변경하는 것보다 안전합니다.</target>
        </trans-unit>
        <trans-unit id="70a052014e16f1322f8aa1b058679222a869fcb0" translate="yes" xml:space="preserve">
          <source>with the patch data included at the end of the file:</source>
          <target state="translated">파일 끝에 패치 데이터가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e16a7afb0dac8e81d48456609ad23a7850be0bd4" translate="yes" xml:space="preserve">
          <source>without modifying Homebrew&amp;rsquo;s internals.</source>
          <target state="translated">Homebrew의 내부를 수정하지 않고.</target>
        </trans-unit>
        <trans-unit id="f8653bd3afd1a7ecd54300b2c654eaddc0188ec9" translate="yes" xml:space="preserve">
          <source>writes &lt;code&gt;.pth&lt;/code&gt; and &lt;code&gt;site.py&lt;/code&gt; files which aren&amp;rsquo;t useful for us and cause link conflicts</source>
          <target state="translated">우리에게 유용하지 않으며 링크 충돌을 일으키는 &lt;code&gt;.pth&lt;/code&gt; 및 &lt;code&gt;site.py&lt;/code&gt; 파일을 작성 합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
