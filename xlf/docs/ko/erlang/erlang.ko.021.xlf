<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="86e2273f77bf539265f22779e89def4d1e137223" translate="yes" xml:space="preserve">
          <source>Converts a specified system time into universal date and time.</source>
          <target state="translated">지정된 시스템 시간을 표준 날짜 및 시간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b9047711ffafd954061a4ff560477522f40ff5a0" translate="yes" xml:space="preserve">
          <source>Converts a system time into an RFC 3339 timestamp. The data format of RFC 3339 timestamps is described by &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt;. The data format of offsets is also described by RFC 3339.</source>
          <target state="translated">시스템 시간을 RFC 3339 타임 스탬프로 변환합니다. RFC 3339의 타임 스탬프의 데이터 형식으로 기술되어 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt; . 오프셋의 데이터 형식은 RFC 3339에서도 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b7e9dd9508e2c39877496657c329846a877e0d31" translate="yes" xml:space="preserve">
          <source>Converts a tree into an ordered list of key-value tuples.</source>
          <target state="translated">트리를 정렬 된 키-값 튜플 목록으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="3cb5b309f842678e3138568709158663d4f05758" translate="yes" xml:space="preserve">
          <source>Converts a universal time value to a DateAndTime list. The universal time value on the same format as defined in calendar(3).</source>
          <target state="translated">표준시 값을 DateAndTime 목록으로 변환합니다. calendar (3)에 정의 된 형식과 동일한 형식의 표준시입니다.</target>
        </trans-unit>
        <trans-unit id="44610c486b007dccd01686705bd878b96af721f7" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable format and prints it on stdio. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpa_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpa.log&quot;.</source>
          <target state="translated">감사 추적 로그를 읽을 수있는 형식으로 변환하고 stdio에 인쇄합니다. &lt;code&gt;LogName&lt;/code&gt; 의 기본값은 &quot;snmpa_log&quot;입니다. &lt;code&gt;LogFile&lt;/code&gt; 의 기본값은 &quot;snmpa.log&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="855f17949eff9ef2a56873298af733ac4424a459" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable format and prints it on stdio. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpm_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpm.log&quot;.</source>
          <target state="translated">감사 추적 로그를 읽을 수있는 형식으로 변환하고 stdio에 인쇄합니다. &lt;code&gt;LogName&lt;/code&gt; 의 기본값은 &quot;snmpm_log&quot;입니다. &lt;code&gt;LogFile&lt;/code&gt; 의 기본값은 &quot;snmpm.log&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="d09de86e162e58adfdf8aa6b99c1c2b2436bec29" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable format and prints it on stdio. See &lt;code&gt;&lt;a href=&quot;snmp#log_to_txt&quot;&gt;log_to_txt&lt;/a&gt;&lt;/code&gt; above for more info.</source>
          <target state="translated">감사 추적 로그를 읽을 수있는 형식으로 변환하고 stdio에 인쇄합니다. 자세한 내용 &lt;code&gt;&lt;a href=&quot;snmp#log_to_txt&quot;&gt;log_to_txt&lt;/a&gt;&lt;/code&gt; 위의 log_to_txt를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bae9d85a62fe1487e08368bcd49bfd302d2ae46" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable text file, where each item has a trailing TAB character, and any TAB character in the body of an item has been replaced by ESC TAB.</source>
          <target state="translated">감사 내역 로그를 읽을 수있는 텍스트 파일로 변환합니다. 여기서 각 항목에는 후행 TAB 문자가 있고 항목 본문의 모든 TAB 문자는 ESC TAB로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="6407d7573450480a43841483687b2066534de1d4" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable text file. &lt;code&gt;OutFile&lt;/code&gt; defaults to &quot;./snmpa_log.txt&quot;. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpa_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpa.log&quot;.</source>
          <target state="translated">감사 추적 로그를 읽을 수있는 텍스트 파일로 변환합니다. &lt;code&gt;OutFile&lt;/code&gt; 의 기본값은 &quot;./snmpa_log.txt&quot;입니다. &lt;code&gt;LogName&lt;/code&gt; 의 기본값은 &quot;snmpa_log&quot;입니다. &lt;code&gt;LogFile&lt;/code&gt; 의 기본값은 &quot;snmpa.log&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="4a4749069e0860dabc6772436a87d3702f360468" translate="yes" xml:space="preserve">
          <source>Converts an Audit Trail Log to a readable text file. &lt;code&gt;OutFile&lt;/code&gt; defaults to &quot;./snmpm_log.txt&quot;. &lt;code&gt;LogName&lt;/code&gt; defaults to &quot;snmpm_log&quot;. &lt;code&gt;LogFile&lt;/code&gt; defaults to &quot;snmpm.log&quot;.</source>
          <target state="translated">감사 추적 로그를 읽을 수있는 텍스트 파일로 변환합니다. &lt;code&gt;OutFile&lt;/code&gt; 의 기본값은 &quot;./snmpm_log.txt&quot;입니다. &lt;code&gt;LogName&lt;/code&gt; 의 기본값은 &quot;snmpm_log&quot;입니다. &lt;code&gt;LogFile&lt;/code&gt; 의 기본값은 &quot;snmpm.log&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="c69a0f77b8803477b1e6776d7a1bb3d3c0bc094b" translate="yes" xml:space="preserve">
          <source>Converts an I/O list to a &lt;code&gt;NULL&lt;/code&gt;-terminated C string.</source>
          <target state="translated">I / O 목록을 &lt;code&gt;NULL&lt;/code&gt; 로 끝나는 C 문자열로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="d4542321b52f3b249fe4a9fc8bb1d134f192d307" translate="yes" xml:space="preserve">
          <source>Converts an I/O list to a binary term.</source>
          <target state="translated">I / O 목록을 이진 용어로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="0cd1b632c0f7d3c49a8760c8c66f3f9227324f8e" translate="yes" xml:space="preserve">
          <source>Converts an RFC 3339 timestamp into system time. The data format of RFC 3339 timestamps is described by &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">RFC 3339 타임 스탬프를 시스템 시간으로 변환합니다. RFC 3339의 타임 스탬프의 데이터 형식으로 기술되어 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC 3339&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80c5eccf9f5585f258ac0b089be3e34de5083396" translate="yes" xml:space="preserve">
          <source>Converts an RFC or OpenSSL name string to an &lt;code&gt;&lt;a href=&quot;#type-erl_cipher_suite&quot;&gt;erl_cipher_suite()&lt;/a&gt;&lt;/code&gt; Returns an error if the cipher suite is not supported or the name is not a valid cipher suite name.</source>
          <target state="translated">RFC 또는 OpenSSL 이름 문자열을 &lt;code&gt;&lt;a href=&quot;#type-erl_cipher_suite&quot;&gt;erl_cipher_suite()&lt;/a&gt;&lt;/code&gt; 변환합니다 . 암호 제품군이 지원되지 않거나 이름이 유효한 암호 제품군 이름이 아닌 경우 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="436ce67ed4ae1e6d1d08fcc7ee35ade849809623" translate="yes" xml:space="preserve">
          <source>Converts an error reason term to a human-readable error message string.</source>
          <target state="translated">오류 이유 용어를 사람이 읽을 수있는 오류 메시지 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b0190a8fc737581b2fc55ce54e92f66829eed5e0" translate="yes" xml:space="preserve">
          <source>Converts an ordered list of pairs &lt;code&gt;{Index, Value}&lt;/code&gt; to a corresponding extendible array. &lt;code&gt;Default&lt;/code&gt; is used as the value for uninitialized entries of the array. If &lt;code&gt;Orddict&lt;/code&gt; is not a proper, ordered list of pairs whose first elements are non-negative integers, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">정렬 된 쌍의리스트 &lt;code&gt;{Index, Value}&lt;/code&gt; 를 해당하는 확장 가능한 배열로 변환합니다. &lt;code&gt;Default&lt;/code&gt; 은 배열의 초기화되지 않은 항목에 대한 값으로 사용됩니다. 경우 &lt;code&gt;Orddict&lt;/code&gt; 이 첫번째 요소 음이 아닌 정수 쌍 적합한, 순서리스트없고, 호출 실패 원인 &lt;code&gt;badarg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c10eec4e502b365ef4e5594f5785f4e077cb5da9" translate="yes" xml:space="preserve">
          <source>Converts dictionary &lt;code&gt;Dict&lt;/code&gt; to a list representation.</source>
          <target state="translated">사전 &lt;code&gt;Dict&lt;/code&gt; 를 목록 표현으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="63f8d2749b9b43b8731889827061f53cc3715c4c" translate="yes" xml:space="preserve">
          <source>Converts from Universal Coordinated Time (UTC) to local time. &lt;code&gt;DateTime&lt;/code&gt; must refer to a date after Jan 1, 1970.</source>
          <target state="translated">UTC (Universal Coordinated Time)에서 현지 시간으로 변환합니다. &lt;code&gt;DateTime&lt;/code&gt; 은 1970 년 1 월 1 일 이후의 날짜를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="8defd82fa5f7d6ce3e60e851f99d6ec003926ec5" translate="yes" xml:space="preserve">
          <source>Converts from local time to Universal Coordinated Time (UTC). &lt;code&gt;DateTime1&lt;/code&gt; must refer to a local date after Jan 1, 1970.</source>
          <target state="translated">현지 시간에서 협정 세계시 (UTC)로 변환합니다. &lt;code&gt;DateTime1&lt;/code&gt; 은 1970 년 1 월 1 일 이후의 현지 날짜를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="437ae2c22b6420ff691c19f94386cd9dac1a557d" translate="yes" xml:space="preserve">
          <source>Converts local date and time to Universal Time Coordinated (UTC) as &lt;code&gt;erlang:localtime_to_universaltime/1&lt;/code&gt;, but the caller decides if Daylight Saving Time is active.</source>
          <target state="translated">현지 날짜와 시간을 &lt;code&gt;erlang:localtime_to_universaltime/1&lt;/code&gt; 로 UTC (Universal Time Coordinated)로 변환 하지만 호출자는 일광 절약 시간이 활성화되어 있는지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="b7d11b281131992f5a69ef6f70b21b233494b317" translate="yes" xml:space="preserve">
          <source>Converts local date and time to Universal Time Coordinated (UTC), if supported by the underlying OS. Otherwise no conversion is done and &lt;code&gt;Localtime&lt;/code&gt; is returned. Example:</source>
          <target state="translated">기본 OS에서 지원하는 경우 현지 날짜 및 시간을 UTC (Universal Time Coordinated)로 변환합니다. 그렇지 않으면 변환이 수행되지 않고 &lt;code&gt;Localtime&lt;/code&gt; 이 반환됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="42dad5f3bbaccb71751ef56cb55798afb7217e1a" translate="yes" xml:space="preserve">
          <source>Converts process state when code is changed.</source>
          <target state="translated">코드가 변경 될 때 프로세스 상태를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d1a5f372eceb663bbc2387e5d0247261f4cf3353" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;Key&lt;/code&gt;-&lt;code&gt;Value&lt;/code&gt; list &lt;code&gt;List&lt;/code&gt; to a dictionary.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; 목록 &lt;code&gt;List&lt;/code&gt; 을 사전으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2c2286ba70004482733a2bd5e59bdfad16d01aa4" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;Key&lt;/code&gt;-&lt;code&gt;Value&lt;/code&gt; list &lt;code&gt;List&lt;/code&gt; to dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;Key&lt;/code&gt; - &lt;code&gt;Value&lt;/code&gt; 목록 &lt;code&gt;List&lt;/code&gt; 사전에 &lt;code&gt;Dict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e032917e179da03880eb03f488aeb0d54464040" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;Time&lt;/code&gt; value of time unit &lt;code&gt;FromUnit&lt;/code&gt; to the corresponding &lt;code&gt;ConvertedTime&lt;/code&gt; value of time unit &lt;code&gt;ToUnit&lt;/code&gt;. The result is rounded using the floor function.</source>
          <target state="translated">변환 &lt;code&gt;Time&lt;/code&gt; 시간 단위의 값 &lt;code&gt;FromUnit&lt;/code&gt; 대응하는 &lt;code&gt;ConvertedTime&lt;/code&gt; 의 시간 단위의 값 &lt;code&gt;ToUnit&lt;/code&gt; . 결과는 바닥 함수를 사용하여 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="a24c488c0c31d2338dee81449f3ea0f0507d20cc" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;host&lt;/code&gt; components to lower case as they are not case sensitive.</source>
          <target state="translated">변환 &lt;code&gt;scheme&lt;/code&gt; 및 &lt;code&gt;host&lt;/code&gt; 가 대소 문자를 구분하지 않습니다와 같은 구성 요소는 소문자로.</target>
        </trans-unit>
        <trans-unit id="fb25498dd3f10707e6e90a24b8b2e81ecbaed3cf" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;val&lt;/code&gt; value of time unit &lt;code&gt;from&lt;/code&gt; to the corresponding value of time unit &lt;code&gt;to&lt;/code&gt;. The result is rounded using the floor function.</source>
          <target state="translated">변환 &lt;code&gt;val&lt;/code&gt; 시간 단위의 값 &lt;code&gt;from&lt;/code&gt; 시간 단위의 대응하는 값 &lt;code&gt;to&lt;/code&gt; . 결과는 바닥 함수를 사용하여 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="4510ab03333a581f82387273a2c88b0d52bb33fb" translate="yes" xml:space="preserve">
          <source>Converts the Erlang data structure &lt;code&gt;Data&lt;/code&gt; into an abstract form of type &lt;code&gt;AbsTerm&lt;/code&gt;.</source>
          <target state="translated">Erlang 데이터 구조 &lt;code&gt;Data&lt;/code&gt; 를 &lt;code&gt;AbsTerm&lt;/code&gt; 유형의 추상 형식으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d950d9e5aed82f8047007b097bcbffda0369c8f4" translate="yes" xml:space="preserve">
          <source>Converts the Erlang data structure &lt;code&gt;Data&lt;/code&gt; into an abstract form of type &lt;code&gt;AbsTerm&lt;/code&gt;. This function is the inverse of &lt;code&gt;&lt;a href=&quot;#normalise-1&quot;&gt;normalise/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlang 데이터 구조 &lt;code&gt;Data&lt;/code&gt; 를 &lt;code&gt;AbsTerm&lt;/code&gt; 유형의 추상 형식으로 변환합니다 . 이 함수는 &lt;code&gt;&lt;a href=&quot;#normalise-1&quot;&gt;normalise/1&lt;/a&gt;&lt;/code&gt; 의 역함수입니다 .</target>
        </trans-unit>
        <trans-unit id="e395dda944ab01db119fef36bca7915ec33edd1e" translate="yes" xml:space="preserve">
          <source>Converts the abstract form &lt;code&gt;AbsTerm&lt;/code&gt; of a term into a conventional Erlang data structure (that is, the term itself). This function is the inverse of &lt;code&gt;&lt;a href=&quot;#abstract-1&quot;&gt;abstract/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">용어의 &lt;code&gt;AbsTerm&lt;/code&gt; 추상 양식을 일반적인 Erlang 데이터 구조 (즉, 용어 자체)로 변환합니다. 이 함수는 &lt;code&gt;&lt;a href=&quot;#abstract-1&quot;&gt;abstract/1&lt;/a&gt;&lt;/code&gt; 과 반대입니다 .</target>
        </trans-unit>
        <trans-unit id="30859b7b50c6c7f774ed525a89e8156ddddb1c8a" translate="yes" xml:space="preserve">
          <source>Converts the array to a list, skipping default-valued entries.</source>
          <target state="translated">배열을 목록으로 변환하고 기본 값 항목을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="156ba84f4759edf95442838a8529181cd9fdc9c9" translate="yes" xml:space="preserve">
          <source>Converts the array to a list.</source>
          <target state="translated">배열을 목록으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a8786ea3cb21dee36cb670bd298c8885b3b28abb" translate="yes" xml:space="preserve">
          <source>Converts the array to an ordered list of pairs &lt;code&gt;{Index, Value}&lt;/code&gt;, skipping default-valued entries.</source>
          <target state="translated">배열을 정렬 된 순서의 목록 &lt;code&gt;{Index, Value}&lt;/code&gt; 변환하여 기본값 항목을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="b9751f01789cd1d702a0db27c8c4aa8f9e5ee95e" translate="yes" xml:space="preserve">
          <source>Converts the array to an ordered list of pairs &lt;code&gt;{Index, Value}&lt;/code&gt;.</source>
          <target state="translated">배열을 정렬 된 쌍의리스트 &lt;code&gt;{Index, Value}&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ae5eda0eade347b2e1efcec2215811b745cdb720" translate="yes" xml:space="preserve">
          <source>Converts the binary digit representation, in big endian or little endian, of a positive integer in &lt;code&gt;Subject&lt;/code&gt; to an Erlang &lt;code&gt;integer()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 의 양의 정수를 이진 자릿수로 빅 엔디안 또는 리틀 엔디안으로 변환하여 Erlang &lt;code&gt;integer()&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="af5964c93e079b28d791aeec6fa56eec7fc79f2b" translate="yes" xml:space="preserve">
          <source>Converts the hexadecimal value &lt;code&gt;HexValue&lt;/code&gt; into its decimal equivalent (&lt;code&gt;DecValue&lt;/code&gt;).</source>
          <target state="translated">16 진 값 &lt;code&gt;HexValue&lt;/code&gt; 를 10 진수로 동등한 값 ( &lt;code&gt;DecValue&lt;/code&gt; ) 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="63e01ac8ec77cae37426e78bfbebf72c74bc0a70" translate="yes" xml:space="preserve">
          <source>Converts the integer &lt;code&gt;Int&lt;/code&gt; to the corresponding symbolic value of the enumerated object or type &lt;code&gt;Name&lt;/code&gt; in a MIB. The MIB must be loaded.</source>
          <target state="translated">정수 &lt;code&gt;Int&lt;/code&gt; 를 MIB에서 열거 된 오브젝트 또는 유형 &lt;code&gt;Name&lt;/code&gt; 의 해당 기호 값으로 변환합니다 . MIB를로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="26b2f4c415a7cb6dad0188583ceec8e57f411f37" translate="yes" xml:space="preserve">
          <source>Converts the path into a canonical form.</source>
          <target state="translated">경로를 표준 형식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="3f6a56d29a0f78edfb20a5f1f9e4a1b98299ed43" translate="yes" xml:space="preserve">
          <source>Converts the symbolic value &lt;code&gt;Enum&lt;/code&gt; to the corresponding integer of the enumerated object or type &lt;code&gt;Name&lt;/code&gt; in a MIB. The MIB must be loaded.</source>
          <target state="translated">기호 값 &lt;code&gt;Enum&lt;/code&gt; 을 열거 된 오브젝트의 해당 정수 또는 MIB의 &lt;code&gt;Name&lt;/code&gt; 유형으로 변환합니다 . MIB를로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="e4f81994fed009c24d31efd799e2d47a74a60f1f" translate="yes" xml:space="preserve">
          <source>Cookie</source>
          <target state="translated">Cookie</target>
        </trans-unit>
        <trans-unit id="2971238809214ab7b85ffb9592337bc95eb124ab" translate="yes" xml:space="preserve">
          <source>Cookie to use for the &lt;code&gt;etop&lt;/code&gt; node. Must be same as the cookie on the measured node.</source>
          <target state="translated">&lt;code&gt;etop&lt;/code&gt; 노드 에 사용할 쿠키 . 측정 된 노드의 쿠키와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="7da4dde6513da93a5dcad631070ab8e072183ec0" translate="yes" xml:space="preserve">
          <source>Cookie, &lt;code&gt;cookie&lt;/code&gt;</source>
          <target state="translated">쿠키, &lt;code&gt;cookie&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e491b0025460c5c41338119a277f4c2a46f4dd99" translate="yes" xml:space="preserve">
          <source>Coordinated Universal Time. UTC almost aligns with &lt;code&gt;&lt;a href=&quot;#UT1&quot;&gt;UT1&lt;/a&gt;&lt;/code&gt;. However, UTC uses the SI definition of a second, which has not exactly the same length as the second used by UT1. This means that UTC slowly drifts from UT1. To keep UTC relatively in sync with UT1, leap seconds are inserted, and potentially also deleted. That is, an UTC day can be 86400, 86401, or 86399 seconds long.</source>
          <target state="translated">협정 세계시. UTC는 &lt;code&gt;&lt;a href=&quot;#UT1&quot;&gt;UT1&lt;/a&gt;&lt;/code&gt; 과 거의 일치 합니다. 그러나 UTC는 초의 SI 정의를 사용하는데, 이는 UT1에서 사용한 초와 정확히 같은 길이를 갖지 않습니다. 이것은 UTC가 UT1에서 천천히 드리프트 함을 의미합니다. UTC를 UT1과 상대적으로 동기화하기 위해 윤초가 삽입되고 잠재적으로 삭제됩니다. 즉, UTC 날짜는 86400, 86401 또는 86399 초 길이 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53a7ee50168f599afc7f3b9cb05bc45ab4373c87" translate="yes" xml:space="preserve">
          <source>Coordination of system startup.</source>
          <target state="translated">시스템 시작 조정</target>
        </trans-unit>
        <trans-unit id="3f79bdfc6fc8ca4944309bfa334d2be30ea169f7" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;ByteCount&lt;/code&gt; bytes from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Destination&lt;/code&gt;. &lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Destination&lt;/code&gt; refer to either filenames or IO devices from, for example, &lt;code&gt;open/2&lt;/code&gt;. &lt;code&gt;ByteCount&lt;/code&gt; defaults to &lt;code&gt;infinity&lt;/code&gt;, denoting an infinite number of bytes.</source>
          <target state="translated">&lt;code&gt;ByteCount&lt;/code&gt; 바이트를 &lt;code&gt;Source&lt;/code&gt; 에서 &lt;code&gt;Destination&lt;/code&gt; 복사합니다 . &lt;code&gt;Source&lt;/code&gt; 및 &lt;code&gt;Destination&lt;/code&gt; 은 예를 들어 &lt;code&gt;open/2&lt;/code&gt; 의 파일 이름 또는 IO 장치를 나타 냅니다. &lt;code&gt;ByteCount&lt;/code&gt; 의 기본값은 &lt;code&gt;infinity&lt;/code&gt; 이며 무한 바이트 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a1b4b8e14982541a374a13ccccea965b85c55095" translate="yes" xml:space="preserve">
          <source>Copies configuration data.</source>
          <target state="translated">구성 데이터를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="aaaefc2993463a2512d584fd667d4840b664e6c5" translate="yes" xml:space="preserve">
          <source>Copies the attributes from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">속성을 &lt;code&gt;Source&lt;/code&gt; 에서 &lt;code&gt;Target&lt;/code&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="f63224a59d9ecbe38be1047a6f2890f9c5bb283f" translate="yes" xml:space="preserve">
          <source>Copies the files &lt;code&gt;epmd&lt;/code&gt;, &lt;code&gt;run_erl&lt;/code&gt;, and &lt;code&gt;to_erl&lt;/code&gt; from the directory &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; to the directory &lt;code&gt;tmp/bin&lt;/code&gt;.</source>
          <target state="translated">파일을 복사 &lt;code&gt;epmd&lt;/code&gt; , &lt;code&gt;run_erl&lt;/code&gt; 및 &lt;code&gt;to_erl&lt;/code&gt; 디렉토리에서 &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; 디렉토리에 &lt;code&gt;tmp/bin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="994ec6352ef05c4c4cc8a25f503f1e75a519aa5e" translate="yes" xml:space="preserve">
          <source>Copies the list of user annotations from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">사용자 주석 목록을 &lt;code&gt;Source&lt;/code&gt; 에서 &lt;code&gt;Target&lt;/code&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="65a7e6942be302a1e6741aca1d710de60c3cb150" translate="yes" xml:space="preserve">
          <source>Copies the position information from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">위치 정보를 &lt;code&gt;Source&lt;/code&gt; 에서 &lt;code&gt;Target&lt;/code&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="9254f9f106c9eab630ece726b75cfac5692fbd61" translate="yes" xml:space="preserve">
          <source>Copies the pre- and postcomments from &lt;code&gt;Source&lt;/code&gt; to &lt;code&gt;Target&lt;/code&gt;.</source>
          <target state="translated">사전 및 사후 주석을 &lt;code&gt;Source&lt;/code&gt; 에서 &lt;code&gt;Target&lt;/code&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="6aaea841c41e1d87ec7e5e6f69cf10aa27c351b7" translate="yes" xml:space="preserve">
          <source>Copies the previously created file &lt;code&gt;plain.boot&lt;/code&gt; to &lt;code&gt;tmp/bin/start.boot&lt;/code&gt;.</source>
          <target state="translated">이전에 작성된 파일 &lt;code&gt;plain.boot&lt;/code&gt; 를 &lt;code&gt;tmp/bin/start.boot&lt;/code&gt; 에 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="f831e18f3d39d06a4db85c2a93c55cd8de3583f9" translate="yes" xml:space="preserve">
          <source>Coptic</source>
          <target state="translated">Coptic</target>
        </trans-unit>
        <trans-unit id="3158bd8e8f1a6b1e234a8ec9a9287c13f4847eaa" translate="yes" xml:space="preserve">
          <source>Copy that script to another location (and preferably another name).</source>
          <target state="translated">해당 스크립트를 다른 위치 (및 다른 이름)에 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="b1da74f4d1e408f055ba57cd4463c16dd10ff645" translate="yes" xml:space="preserve">
          <source>Copy the compiled code (&lt;code&gt;messenger.beam&lt;/code&gt;) to the directory on each computer where you start Erlang.</source>
          <target state="translated">컴파일 된 코드 ( &lt;code&gt;messenger.beam&lt;/code&gt; )를 Erlang을 시작하는 각 컴퓨터의 디렉토리에 복사하십시오 .</target>
        </trans-unit>
        <trans-unit id="686e8534f5ffab1dc11dbbfb65a78998a0371944" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1996-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 1996-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="493c9f7a17fedbf5ca23e80ed9fffb6cd1b18186" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1997-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 1997-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="d40f7e4069ac28959fc2a95c1676b33f01e1b196" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1998-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 1998-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="805e352693883aad6adb7e2614dcc5f6795c0056" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1999-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 1999-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="ea440522aa43f7d30bf819ccc42db17b01af0f70" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2000-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2000-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="a4a92f30d4d470cefd432372feb27916abd7643e" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2001-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2001-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="d53375843055bcac5c37ca7759cbee35419c17b5" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2002-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2002-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="a961bd87bbe0fc3f78cc3ccbfe4f1ae906ed132f" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2003-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2003-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="4a51b460ca3b1156e802ed71f8edded6c429e341" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2004-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2004-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="2e2b2b30994cd37af4088a3b0f8625482c877484" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2005-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2005-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="8dca0216b290b26b530cd679f35fc84c2be58755" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2006-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2006-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="d102126ca3c11b4a1a121c25029c3c762b0f8a7d" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2008-2020 Ericsson AB, All Rights Reserved</source>
          <target state="translated">저작권 &amp;copy; 2008-2020 Ericsson AB, 판권 소유</target>
        </trans-unit>
        <trans-unit id="66f042c17e407cf1790703a61834558fffbd3910" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2009-2020 Ericsson AB, All Rights Reserved</source>
          <target state="translated">저작권 &amp;copy; 2009-2020 Ericsson AB, 판권 소유</target>
        </trans-unit>
        <trans-unit id="6b8e539c31f9bbd9c02d41654007856b6b9a2fa9" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2011-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2011-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="50377f1235016739a9091cabf4b80c8bd321146f" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2012-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2012-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="9494a30c6c0d72c226d1a3d8b5167d2513e550be" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2019-2020 Ericsson AB. All Rights Reserved.</source>
          <target state="translated">저작권 &amp;copy; 2019-2020 Ericsson AB. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="5f1d8b9bee4667bcc40aecccd07f43b97f790ef3" translate="yes" xml:space="preserve">
          <source>Corba callback - skeleton for a Corba callback module.</source>
          <target state="translated">Corba 콜백-Corba 콜백 모듈의 골격</target>
        </trans-unit>
        <trans-unit id="a9c4ae8cd097c1e80f5ee6338d868d74d81f3539" translate="yes" xml:space="preserve">
          <source>Core Erlang abstract syntax trees.</source>
          <target state="translated">핵심 Erlang 추상 구문 트리.</target>
        </trans-unit>
        <trans-unit id="bb1155ea6dfb2e6734b59ecb5db4238bac82256a" translate="yes" xml:space="preserve">
          <source>Core dumps</source>
          <target state="translated">코어 덤프</target>
        </trans-unit>
        <trans-unit id="53687537dcdac44aafe7c0181fa68bbea3912973" translate="yes" xml:space="preserve">
          <source>Correctly handling user tags and their spreading might take some effort, as Erlang programs tend to send and receive messages so that sometimes the user tag gets lost due to various things, like double receives or communication with a port (ports do not handle user tags, in the same way as they do not handle regular sequential trace tokens).</source>
          <target state="translated">Erlang 프로그램이 메시지를 보내고받는 경향이 있기 때문에 사용자 태그와 그 확산을 올바르게 처리하려면 약간의 노력이 필요할 수 있습니다. 일반 순차 추적 토큰을 처리하지 않는 것과 같은 방식으로).</target>
        </trans-unit>
        <trans-unit id="c00f28e597516e2fadc6acc88d431837c71a5037" translate="yes" xml:space="preserve">
          <source>Correlation of Accounting Records</source>
          <target state="translated">회계 기록의 상관 관계</target>
        </trans-unit>
        <trans-unit id="3cf1477c64bba28b284e94d37ba420962eff72bc" translate="yes" xml:space="preserve">
          <source>Corresponding to each generic instruction, there is a family of specific instructions. The types that an instance of a specific instruction can handle are encoded in the instruction names. For example, &lt;code&gt;move_xy&lt;/code&gt; takes an X register number as the first operand and a Y register number as the second operand. &lt;code&gt;move_cx&lt;/code&gt; takes a tagged Erlang term as the first operand and an X register number as the second operand.</source>
          <target state="translated">각 일반 명령어에 해당하는 특정 명령어 제품군이 있습니다. 특정 명령어의 인스턴스가 처리 할 수있는 유형은 명령어 이름으로 인코딩됩니다. 예를 들어 &lt;code&gt;move_xy&lt;/code&gt; 는 X 레지스터 번호를 첫 번째 피연산자로, Y 레지스터 번호를 두 번째 피연산자로 사용합니다. &lt;code&gt;move_cx&lt;/code&gt; 는 태그 된 Erlang 용어를 첫 번째 피연산자로, X 레지스터 번호를 두 번째 피연산자로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7b36836828d03b5b0255f57ebdd9b389534bae82" translate="yes" xml:space="preserve">
          <source>Could not create a new process due to that some system limit was reached. Typically the process table was full.</source>
          <target state="translated">일부 시스템 제한에 도달했기 때문에 새 프로세스를 만들 수 없습니다. 일반적으로 프로세스 테이블이 가득 찼습니다.</target>
        </trans-unit>
        <trans-unit id="0960b5709cc5b92983bafb956896bf61e0215c9f" translate="yes" xml:space="preserve">
          <source>CountOp ::= &lt;code&gt;#&lt;/code&gt;</source>
          <target state="translated">CountOp :: = &lt;code&gt;#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b9490c95f9e5501e62a069ac8002a3ea055aff7" translate="yes" xml:space="preserve">
          <source>Counter Functions</source>
          <target state="translated">카운터 기능</target>
        </trans-unit>
        <trans-unit id="34e1f9cc0f4623df7f42811befbafaa620d8b7e6" translate="yes" xml:space="preserve">
          <source>Counters are 64 bit signed integers.</source>
          <target state="translated">카운터는 64 비트 부호있는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="bb73fe83afdd13616b3d480bb791e8604f7f266d" translate="yes" xml:space="preserve">
          <source>Counters are initialized to zero.</source>
          <target state="translated">카운터는 0으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="fb4e344acb233fa4c7cf7a274a1c1ddc9a5b3b06" translate="yes" xml:space="preserve">
          <source>Counters are not tied to the current process and are automatically garbage collected when they are no longer referenced.</source>
          <target state="translated">카운터는 현재 프로세스에 연결되지 않으며 더 이상 참조되지 않을 때 자동으로 가비지 수집됩니다.</target>
        </trans-unit>
        <trans-unit id="d4ead8043855e4ce027ab3ed15b364b5db674e37" translate="yes" xml:space="preserve">
          <source>Counters will be sequentially consistent. If write operation A is done sequentially before write operation B, then a concurrent reader may see the result of none of them, only A, or both A and B. It cannot see the result of only B.</source>
          <target state="translated">카운터는 순차적으로 일관됩니다. 쓰기 작업 A가 쓰기 작업 B 전에 순차적으로 수행되는 경우 동시 판독기는 이들 중 하나도, A 만 또는 A와 B 모두의 결과를 볼 수 있습니다. B 만 결과를 볼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8cd23fb47dbfccec15632ce95cd392ad7905e720" translate="yes" xml:space="preserve">
          <source>Counters wrap around at overflow and underflow operations.</source>
          <target state="translated">카운터는 오버플로 및 언더 플로 작업에서 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="196a079a45954aaa35e3967fb3c58f42d5fb0e74" translate="yes" xml:space="preserve">
          <source>Cover analysis is performed by examining the contents of the Cover database. The output is determined by two parameters, &lt;code&gt;Level&lt;/code&gt; and &lt;code&gt;Analysis&lt;/code&gt;. &lt;code&gt;Analysis&lt;/code&gt; is either &lt;code&gt;coverage&lt;/code&gt; or &lt;code&gt;calls&lt;/code&gt; and determines the type of the analysis. &lt;code&gt;Level&lt;/code&gt; is either &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;clause&lt;/code&gt;, or &lt;code&gt;line&lt;/code&gt; and determines the level of the analysis.</source>
          <target state="translated">표지 분석은 표지 데이터베이스의 내용을 검사하여 수행됩니다. 출력은 &lt;code&gt;Level&lt;/code&gt; 및 &lt;code&gt;Analysis&lt;/code&gt; 의 두 매개 변수에 의해 결정됩니다 . &lt;code&gt;Analysis&lt;/code&gt; 은 &lt;code&gt;coverage&lt;/code&gt; 또는 &lt;code&gt;calls&lt;/code&gt; 이며 분석 유형을 결정합니다. &lt;code&gt;Level&lt;/code&gt; 은 &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;function&lt;/code&gt; , &lt;code&gt;clause&lt;/code&gt; 또는 &lt;code&gt;line&lt;/code&gt; 이며 분석 수준을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="ad356f294fc230007682c0d5e6322d0dd5a35dfa" translate="yes" xml:space="preserve">
          <source>Cover can be used in a distributed Erlang system. One of the nodes in the system must then be selected as the &lt;strong&gt;main node&lt;/strong&gt;, and all Cover commands must be executed from this node. The error reason &lt;code&gt;not_main_node&lt;/code&gt; is returned if an interface function is called on one of the remote nodes.</source>
          <target state="translated">분산 Erlang 시스템에서 커버를 사용할 수 있습니다. 그런 다음 시스템의 노드 중 하나를 &lt;strong&gt;기본 노드&lt;/strong&gt; 로 선택해야 &lt;strong&gt;하며이 노드&lt;/strong&gt; 에서 모든 Cover 명령을 실행해야합니다. 원격 노드 중 하나에서 인터페이스 함수가 ​​호출되면 오류 이유 &lt;code&gt;not_main_node&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="efdd1d19388f1ad40db411f5e79d2444791778f7" translate="yes" xml:space="preserve">
          <source>Cover uses the concept of &lt;strong&gt;executable lines&lt;/strong&gt;, which is lines of code containing an executable expression such as a matching or a function call. A blank line or a line containing a comment, function head or pattern in a &lt;code&gt;case&lt;/code&gt;- or &lt;code&gt;receive&lt;/code&gt; statement is not executable.</source>
          <target state="translated">Cover는 &lt;strong&gt;실행 라인&lt;/strong&gt; 개념을 사용하는데 , 이는 일치 또는 함수 호출과 같은 실행 표현식을 포함하는 코드 라인입니다. 빈 줄 또는 &lt;code&gt;case&lt;/code&gt; 에 주석, 함수 헤드 또는 패턴이 포함 된 줄 또는 &lt;code&gt;receive&lt;/code&gt; 문은 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3fcd2bb254eeffbc48003d0a3ca69db8f1888904" translate="yes" xml:space="preserve">
          <source>Coverage Analysis</source>
          <target state="translated">커버리지 분석</target>
        </trans-unit>
        <trans-unit id="9bfb19cbf3bb0aab18db0895fdeb9ba88ec76995" translate="yes" xml:space="preserve">
          <source>Coverage analysis can be used to verify test cases, making sure all relevant code is covered, and may also be helpful when looking for bottlenecks in the code.</source>
          <target state="translated">적용 범위 분석을 사용하여 테스트 사례를 확인하고 모든 관련 코드가 적용되는지 확인하고 코드에서 병목 현상을 찾을 때 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0830cd94be5900ba1bffd8f332ea958d6b1ca39" translate="yes" xml:space="preserve">
          <source>Coverage analysis can be used to verify test cases, making sure all relevant code is covered, and may be helpful when looking for bottlenecks in the code.</source>
          <target state="translated">적용 범위 분석을 사용하여 테스트 사례를 확인하고 모든 관련 코드가 적용되는지 확인하고 코드에서 병목 현상을 찾을 때 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="339ecd56868008dda34959860ad98a9cbad45333" translate="yes" xml:space="preserve">
          <source>Coverage data for a module can not be imported from the same file twice unless the module is first reset or compiled. The check is based on the filename, so you can easily fool the system by renaming your export file.</source>
          <target state="translated">모듈을 처음으로 재설정하거나 컴파일하지 않으면 모듈의 적용 범위 데이터를 동일한 파일에서 두 번 가져올 수 없습니다. 검사는 파일 이름을 기반으로하므로 내보내기 파일의 이름을 바꾸어 시스템을 쉽게 속일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ead1d71d616866a06acac54055345b0739743db8" translate="yes" xml:space="preserve">
          <source>Coverage data for a module cannot be imported from the same file twice unless the module is first reset or compiled. The check is based on the filename, so you can easily fool the system by renaming your export file.</source>
          <target state="translated">모듈에 대한 커버리지 데이터는 모듈이 먼저 재설정되거나 컴파일되지 않는 한 동일한 파일에서 두 번 가져올 수 없습니다. 검사는 파일 이름을 기반으로하므로 내보내기 파일의 이름을 변경하여 시스템을 쉽게 속일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53e1c73d3025c9ba7db0f50cede6dcb299dae9b6" translate="yes" xml:space="preserve">
          <source>Coverage data from several export files can be imported into one system. The coverage data is then added up when analysing.</source>
          <target state="translated">여러 내보내기 파일의 범위 데이터를 하나의 시스템으로 가져올 수 있습니다. 커버리지 데이터는 분석 할 때 합산됩니다.</target>
        </trans-unit>
        <trans-unit id="7be519b1caa12a3e695df4c814afc26c98548ab4" translate="yes" xml:space="preserve">
          <source>CpuTopology</source>
          <target state="translated">CpuTopology</target>
        </trans-unit>
        <trans-unit id="942ce37bef054ef0162c019c98c5ece4ef66735e" translate="yes" xml:space="preserve">
          <source>Crash dumps are written mainly for one of two reasons: either the built-in function &lt;code&gt;erlang:halt/1&lt;/code&gt; is called explicitly with a string argument from running Erlang code, or the runtime system has detected an error that cannot be handled. The most usual reason that the system cannot handle the error is that the cause is external limitations, such as running out of memory. A crash dump caused by an internal error can be caused by the system reaching limits in the emulator itself (like the number of atoms in the system, or too many simultaneous ETS tables). Usually the emulator or the operating system can be reconfigured to avoid the crash, which is why interpreting the crash dump correctly is important.</source>
          <target state="translated">충돌 덤프는 주로 다음 두 가지 이유 중 하나로 작성됩니다. 내장 함수 &lt;code&gt;erlang:halt/1&lt;/code&gt; 이 Erlang 코드 실행에서 문자열 인수로 명시 적으로 호출되거나 런타임 시스템이 처리 할 수없는 오류를 감지했습니다. 시스템이 오류를 처리 할 수없는 가장 일반적인 이유는 원인이 메모리 부족과 같은 외부 제한 사항 때문입니다. 내부 오류로 인한 크래시 덤프는 시스템이 시스템의 원자 수 또는 너무 많은 동시 ETS 테이블과 같이 에뮬레이터 자체의 한계에 도달하면 발생할 수 있습니다. 일반적으로 충돌을 피하기 위해 에뮬레이터 또는 운영 체제를 재구성 할 수 있으므로 충돌 덤프를 올바르게 해석하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="12ab06985e17c5931448d1baa17c79e49f8bc6d5" translate="yes" xml:space="preserve">
          <source>Crash report</source>
          <target state="translated">충돌 보고서</target>
        </trans-unit>
        <trans-unit id="3b71b3b8b62acb796f6cb5f664f8995c89e2bb0b" translate="yes" xml:space="preserve">
          <source>Crashdump Viewer</source>
          <target state="translated">크래시 덤프 뷰어</target>
        </trans-unit>
        <trans-unit id="b80b23aa30365e3ee781a9ad495bb06de144c359" translate="yes" xml:space="preserve">
          <source>Crashdump Viewer can also be started from an Erlang node by calling &lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-0&quot;&gt;crashdump_viewer:start/0&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-1&quot;&gt;crashdump_viewer:start/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-0&quot;&gt;crashdump_viewer:start/0&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;crashdump_viewer#start-1&quot;&gt;crashdump_viewer:start/1&lt;/a&gt;&lt;/code&gt; 을 호출하여 Erlang 노드에서 Crashdump Viewer를 시작할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="03e24416b1576aaa95d50494fe2395104590e567" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Collector&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Collector&lt;/code&gt; 만들기</target>
        </trans-unit>
        <trans-unit id="576130bba7f989833665a2f72ce7512a8617b48b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;TAGS&lt;/code&gt; file covering all files in the Erlang distribution.</source>
          <target state="translated">Erlang 분배의 모든 파일을 포함 하는 &lt;code&gt;TAGS&lt;/code&gt; 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0f8df8c888de8a3bd9cdc165da46a0f09f382a5" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;TAGS&lt;/code&gt; file for the file &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 파일에 대한 &lt;code&gt;TAGS&lt;/code&gt; 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b14f67d7675d11117b996c7df1829ee3c6b3c6f" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Viewer&lt;/code&gt; (this can do step #1 for you)</source>
          <target state="translated">&lt;code&gt;Viewer&lt;/code&gt; 만들기 (1 단계를 수행 할 수 있음)</target>
        </trans-unit>
        <trans-unit id="9353b65c45876c9662f86e278aa391060668807c" translate="yes" xml:space="preserve">
          <source>Create a TAGS file for all files in any directory in &lt;code&gt;DirList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DirList&lt;/code&gt; 의 디렉토리에있는 모든 파일에 대한 TAGS 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="49ef8a48a0d1b0f6ec81d02ef8769d5531eca62a" translate="yes" xml:space="preserve">
          <source>Create a TAGS file for all files in directory &lt;code&gt;Dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; 디렉토리의 모든 파일에 대한 TAGS 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f56b6af13850a8163d0186d918c2c0f48693de6b" translate="yes" xml:space="preserve">
          <source>Create a TAGS file for the files in the list &lt;code&gt;FileList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileList&lt;/code&gt; 목록에있는 파일에 대한 TAGS 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="18089c54168cf5a3629777d0b2cf1bf27f995a2a" translate="yes" xml:space="preserve">
          <source>Create a Unique Name</source>
          <target state="translated">고유 한 이름 만들기</target>
        </trans-unit>
        <trans-unit id="3a55e82bc9e7e596b91ba6bd50d6d53955686f63" translate="yes" xml:space="preserve">
          <source>Create a approximation match filter.</source>
          <target state="translated">근사 일치 필터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="26fbd2c6aae8ec5ccd5e77ba7ff45e2fc09b5dcb" translate="yes" xml:space="preserve">
          <source>Create a delete modification operation.</source>
          <target state="translated">수정 삭제 조작을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="592ba770df0fc69f0d8f91848d06fab9dd80da1a" translate="yes" xml:space="preserve">
          <source>Create a equality filter.</source>
          <target state="translated">동등 필터를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="104dca53ee40e67e3da9db935bb2ef911a20ea4e" translate="yes" xml:space="preserve">
          <source>Create a file named &lt;code&gt;People.asn&lt;/code&gt; containing the following:</source>
          <target state="translated">다음을 포함하는 &lt;code&gt;People.asn&lt;/code&gt; 이라는 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="aa9362425e0f52900c3b1c7a297acca7bc3b1802" translate="yes" xml:space="preserve">
          <source>Create a file named for example &lt;code&gt;&quot;/home/me/ssl/ssl_test@myhost.conf&quot;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&quot;/home/me/ssl/ssl_test@myhost.conf&quot;&lt;/code&gt; 와 같은 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="626ae4b32ed0297e0e02224f9d4bd60936c2f4c7" translate="yes" xml:space="preserve">
          <source>Create a filter where at least one of the &lt;code&gt;Filter&lt;/code&gt; must be true.</source>
          <target state="translated">하나 이상의 &lt;code&gt;Filter&lt;/code&gt; 가 true 인 필터를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb6d57a79998511e07b54cdefd1310681bce30d0" translate="yes" xml:space="preserve">
          <source>Create a filter which filters on attribute type presence.</source>
          <target state="translated">속성 유형 존재를 필터링하는 필터를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6f117e5f3c76f2155cda189d839be9a2f6ccd7a8" translate="yes" xml:space="preserve">
          <source>Create a filter which filters on substrings.</source>
          <target state="translated">부분 문자열을 필터링하는 필터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2af57efe8be9015cf93a4381075bc27b04923ced" translate="yes" xml:space="preserve">
          <source>Create a fixed-size array with entries 0-9 set to &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">항목 0-9가 &lt;code&gt;undefined&lt;/code&gt; 고정 크기 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e6b5bde089c628dca52fbe378d899423d334a24a" translate="yes" xml:space="preserve">
          <source>Create a greater or equal filter.</source>
          <target state="translated">크거나 같은 필터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fb8c3e6b2cd3f1984966b77dac5f0549d29a98f7" translate="yes" xml:space="preserve">
          <source>Create a less or equal filter.</source>
          <target state="translated">작거나 같은 필터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="15bd8fbac38fa9c0984b59ad0bf37e2cc73e15f8" translate="yes" xml:space="preserve">
          <source>Create a map with the engine information and the algorithm used by the engine:</source>
          <target state="translated">엔진 정보 및 엔진이 사용하는 알고리즘으로 맵을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="ca227920feb2ce51d78f1c0a629898a8200d2064" translate="yes" xml:space="preserve">
          <source>Create a name that Erlang processes can use to communicate with your service:</source>
          <target state="translated">Erlang 프로세스가 서비스와 통신하는 데 사용할 수있는 이름을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="af3e7657b6e8e7dd28c1ffffe3198d42d1052799" translate="yes" xml:space="preserve">
          <source>Create a new I/O Queue that can be used to store data. &lt;code&gt;opts&lt;/code&gt; has to be set to &lt;code&gt;ERL_NIF_IOQ_NORMAL&lt;/code&gt;.</source>
          <target state="translated">데이터를 저장하는 데 사용할 수있는 새 I / O 큐를 작성하십시오. &lt;code&gt;opts&lt;/code&gt; 는 &lt;code&gt;ERL_NIF_IOQ_NORMAL&lt;/code&gt; 로 설정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="169e354b1af335f2d6d0cea00aa63ab3421af184" translate="yes" xml:space="preserve">
          <source>Create a new array of &lt;code&gt;Arity&lt;/code&gt; number of atomics. All atomics in the array are initially set to zero.</source>
          <target state="translated">&lt;code&gt;Arity&lt;/code&gt; 원자 수의 새 배열을 만듭니다 . 배열의 모든 원자는 처음에 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="cad7d3cbbe8fca69478c918e70eab52abbb2a5ab" translate="yes" xml:space="preserve">
          <source>Create a new counter array of &lt;code&gt;Size&lt;/code&gt; counters. All counters in the array are initially set to zero.</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; 카운터 의 새 카운터 배열을 만듭니다 . 배열의 모든 카운터는 처음에 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="46b916c064fe8d38b498d3fcb234d266338cef27" translate="yes" xml:space="preserve">
          <source>Create a new mib-server data instance.</source>
          <target state="translated">새 mib 서버 데이터 인스턴스를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8ac9b36a6b6d05960d255fea988bf61a43df4603" translate="yes" xml:space="preserve">
          <source>Create a normal I/O Queue</source>
          <target state="translated">정상적인 I / O 대기열 생성</target>
        </trans-unit>
        <trans-unit id="2f46c9e6e6117dcb60428ee1062ff3b6dabce009" translate="yes" xml:space="preserve">
          <source>Create a normal deviate with mean -3 and variance 0.5:</source>
          <target state="translated">평균 -3 및 분산 0.5로 정규 편차를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e46c48fdfaf4fe9b91274a2ccb2050ab1670a35b" translate="yes" xml:space="preserve">
          <source>Create a permanent process. Make sure this process is supervised (so that if it does die, this will be noticed).</source>
          <target state="translated">영구적 인 프로세스를 만듭니다. 이 프로세스를 감독해야합니다 (죽어도 사라지는 것을 알 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="f87ed9893eaef61ee75bc97a64e50d1418764cc2" translate="yes" xml:space="preserve">
          <source>Create a pid that Erlang processes can use to communicate with your service:</source>
          <target state="translated">Erlang 프로세스가 서비스와 통신하는 데 사용할 수있는 pid를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c7b0fa9220e00137cf0bc4e2e31c93ebb119a475" translate="yes" xml:space="preserve">
          <source>Create a replace modification operation.</source>
          <target state="translated">교체 수정 작업을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3d45a2c96eb33d1c31c88316fe809698322a2e08" translate="yes" xml:space="preserve">
          <source>Create a socket and a context for the socket.</source>
          <target state="translated">소켓과 소켓에 대한 컨텍스트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="167585982f8da70a58a94ae2e3bfa5af72e56e80" translate="yes" xml:space="preserve">
          <source>Create a standard normal deviate:</source>
          <target state="translated">표준 법선 편차를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5216d75c5df4629d1b73067f76cfce5b66bfe412" translate="yes" xml:space="preserve">
          <source>Create a syntax tree for a constant term.</source>
          <target state="translated">상수 항에 대한 구문 트리를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c0794c144895e84308d76814fd04b93125d0f8b9" translate="yes" xml:space="preserve">
          <source>Create a table</source>
          <target state="translated">테이블 만들기</target>
        </trans-unit>
        <trans-unit id="f6dbf3a807d7799ba3ba9cc144e351dd2f48eeb9" translate="yes" xml:space="preserve">
          <source>Create a target system. Gives the same result as &lt;code&gt;{ok,TargetSpec}=reltool:get_target_spec(Server)&lt;/code&gt; and &lt;code&gt;reltool:eval_target_spec(TargetSpec,RootDir,TargetDir)&lt;/code&gt;.</source>
          <target state="translated">대상 시스템을 작성하십시오. &lt;code&gt;{ok,TargetSpec}=reltool:get_target_spec(Server)&lt;/code&gt; 및 &lt;code&gt;reltool:eval_target_spec(TargetSpec,RootDir,TargetDir)&lt;/code&gt; 과 동일한 결과를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5b4661b932081042d7e59011b3cd56447329c978" translate="yes" xml:space="preserve">
          <source>Create a variable.</source>
          <target state="translated">변수를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="e6c1a7f631413b443c4fcbeac8e165d247ffa369" translate="yes" xml:space="preserve">
          <source>Create an add modification operation.</source>
          <target state="translated">수정 추가 작업을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8e098465fc21b3ee187bc574354b7f571e444f4b" translate="yes" xml:space="preserve">
          <source>Create an atom term from the string &lt;code&gt;name&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; characters are treated as any other characters. If &lt;code&gt;len&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;len&lt;/code&gt; 인 문자열 &lt;code&gt;name&lt;/code&gt; 에서 원자 용어를 만듭니다 . &lt;code&gt;NULL&lt;/code&gt; 문자는 다른 문자로 취급됩니다. 경우 &lt;code&gt;len&lt;/code&gt; 원자 (255 개 문자)에 허용 된 최대 길이를 초과 &lt;code&gt;enif_make_atom&lt;/code&gt; 원용 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="8bcb60f4b46b1aab468530c8da3961437ff030ed" translate="yes" xml:space="preserve">
          <source>Create an atom term from the string &lt;code&gt;name&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; characters are treated as any other characters. If &lt;code&gt;len&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;name&lt;/code&gt; 에서 길이가 &lt;code&gt;len&lt;/code&gt; 인 아톰 용어를 만듭니다 . &lt;code&gt;NULL&lt;/code&gt; 문자는 다른 문자로 취급됩니다. 경우 &lt;code&gt;len&lt;/code&gt; 원자 (255 개 문자)에 허용 된 최대 길이를 초과 &lt;code&gt;enif_make_atom&lt;/code&gt; 원용 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="494380e57adec53b6d78cc348c505392001d3be7" translate="yes" xml:space="preserve">
          <source>Create an endpoint (socket) for communication based on an already existing file descriptor. The function attempts to retrieve domain, type and protocol from the system. This is however not possible on all platforms, and in those cases it expects it in &lt;code&gt;Opts&lt;/code&gt;.</source>
          <target state="translated">이미 존재하는 파일 설명자를 기반으로 통신을위한 끝점 (소켓)을 만듭니다. 이 함수는 시스템에서 도메인, 유형 및 프로토콜을 검색하려고합니다. 그러나 이것은 모든 플랫폼에서 가능하지 않으며 이러한 경우 &lt;code&gt;Opts&lt;/code&gt; 에서 기대 합니다 .</target>
        </trans-unit>
        <trans-unit id="7c543866e80f615ff98adff052c89a7d1a3314ef" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent community config file, &lt;code&gt;community.conf&lt;/code&gt;.</source>
          <target state="translated">에이전트 커뮤니티 구성 파일 인 &lt;code&gt;community.conf&lt;/code&gt; 에 대한 항목을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="96294eddd7e82ccb5f9f3fea84fa35d82ea3e2e8" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent config file, &lt;code&gt;agent.conf&lt;/code&gt;.</source>
          <target state="translated">에이전트 구성 파일 &lt;code&gt;agent.conf&lt;/code&gt; 에 대한 항목을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="3622e4df7bb98f7c0e9a1b7f0b270a249d2c6768" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent context config file, &lt;code&gt;context.conf&lt;/code&gt;.</source>
          <target state="translated">에이전트 컨텍스트 구성 파일 &lt;code&gt;context.conf&lt;/code&gt; 에 대한 항목을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="a744ad6cabf9c4df0b77946b7ea111301f0b5a6c" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent notify config file, &lt;code&gt;notify.conf&lt;/code&gt;.</source>
          <target state="translated">에이전트 알림 구성 파일 &lt;code&gt;notify.conf&lt;/code&gt; 에 대한 항목을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f277c38709e78c33b32871eef7515dbba489ce4e" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent standard config file, &lt;code&gt;standard.conf&lt;/code&gt;.</source>
          <target state="translated">에이전트 표준 설정 파일에 대한 항목을 작성 &lt;code&gt;standard.conf&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="909182dd39b2dba6ce86d742c5bd8832cf9ab4e9" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent target_addr config file, &lt;code&gt;target_addr.conf&lt;/code&gt;.</source>
          <target state="translated">, 에이전트 target_addr 설정 파일에 대한 항목을 작성 &lt;code&gt;target_addr.conf&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="0708fd06ec0c4accb75e9a38e0a900c7aff0b6ea" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent target_params config file, &lt;code&gt;target_params.conf&lt;/code&gt;.</source>
          <target state="translated">파일을 config (설정) 에이전트 target_params에 대한 항목 작성 &lt;code&gt;target_params.conf&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="167e10bac7fde97e4577a6263411c62598730af6" translate="yes" xml:space="preserve">
          <source>Create an entry for the agent vacm config file, &lt;code&gt;vacm.conf&lt;/code&gt;.</source>
          <target state="translated">, 에이전트 VACM 설정 파일에 대한 항목을 작성 &lt;code&gt;vacm.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e0e053e31ff71edc57858165a8224a29c0b7c7a" translate="yes" xml:space="preserve">
          <source>Create an entry for the manager agents config file, &lt;code&gt;agents.conf&lt;/code&gt;.</source>
          <target state="translated">관리자 에이전트 구성 파일 &lt;code&gt;agents.conf&lt;/code&gt; 에 대한 항목을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="52ba889102b3003d42a0e5d8433fbe5dd160295f" translate="yes" xml:space="preserve">
          <source>Create an entry for the manager config file, &lt;code&gt;manager.conf&lt;/code&gt;.</source>
          <target state="translated">관리자 구성 파일 &lt;code&gt;manager.conf&lt;/code&gt; 에 대한 항목을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="387f5f0ed16d86f926eb2d5e718122abf31198c4" translate="yes" xml:space="preserve">
          <source>Create an entry for the manager users config file, &lt;code&gt;users.conf&lt;/code&gt;.</source>
          <target state="translated">관리자 사용자 구성 파일 &lt;code&gt;users.conf&lt;/code&gt; 에 대한 항목을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="22b76d17e4d4f86232216e86751b3954396f653e" translate="yes" xml:space="preserve">
          <source>Create an extendible array and set entry 17 to &lt;code&gt;true&lt;/code&gt;, causing the array to grow automatically:</source>
          <target state="translated">확장 가능한 배열을 만들고 항목 17을 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 배열이 자동으로 커집니다.</target>
        </trans-unit>
        <trans-unit id="887a94ea85fe183307ad062151c77132f2e8cf11" translate="yes" xml:space="preserve">
          <source>Create and match Erlang terms.</source>
          <target state="translated">Erlang 용어를 작성하고 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="c9526735e1932da5dddfb4c79329ed09c865fcbc" translate="yes" xml:space="preserve">
          <source>Create or open a mib storage table.</source>
          <target state="translated">mib 스토리지 테이블을 작성하거나여십시오.</target>
        </trans-unit>
        <trans-unit id="94e1abef5c17b22a55c1ec83059b25bbc1ec62b7" translate="yes" xml:space="preserve">
          <source>Create tables</source>
          <target state="translated">테이블 만들기</target>
        </trans-unit>
        <trans-unit id="01b71e02e19512fce5f4679c0c39089b386b3a93" translate="yes" xml:space="preserve">
          <source>Create the actual target system from a specification generated by &lt;code&gt;reltool:get_target_spec/1&lt;/code&gt;. The creation of the specification for a target system is performed in two steps. In the first step a complete specification will be generated. It will likely contain much more files than you are interested in in your target system. In the second step the specification will be filtered according to your filters. There you have the ability to specify filters per application as well as system wide filters. You can also select a &lt;code&gt;profile&lt;/code&gt; for your system. Depending on the &lt;code&gt;profile&lt;/code&gt;, different default filters will be used.</source>
          <target state="translated">&lt;code&gt;reltool:get_target_spec/1&lt;/code&gt; 로 생성 된 스펙에서 실제 대상 시스템을 작성하십시오 . 대상 시스템에 대한 스펙 작성은 두 단계로 수행됩니다. 첫 번째 단계에서 완전한 사양이 생성됩니다. 대상 시스템에 관심이있는 것보다 훨씬 많은 파일이 포함되어있을 것입니다. 두 번째 단계에서는 사양이 필터에 따라 필터링됩니다. 시스템 전체 필터뿐만 아니라 응용 프로그램 당 필터를 지정할 수 있습니다. 시스템에 대한 &lt;code&gt;profile&lt;/code&gt; 을 선택할 수도 있습니다. &lt;code&gt;profile&lt;/code&gt; 에 따라 다른 기본 필터가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f5624dc4a9ee17945dae101fbcc78b7c74c77664" translate="yes" xml:space="preserve">
          <source>Created by calling &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt; enif_alloc_env&lt;/a&gt;&lt;/code&gt;. This environment can be used to store terms between NIF calls and to send terms with &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt;. A process independent environment with all its terms is valid until you explicitly invalidate it with &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;enif_send&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt; enif_alloc_env&lt;/a&gt;&lt;/code&gt; 를 호출하여 생성됩니다 . 이 환경은 NIF 호출 사이에 용어를 저장하고 &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt; 로 용어를 전송하는 데 사용할 수 있습니다 . 모든 용어가있는 프로세스 독립 환경은 &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;enif_send&lt;/code&gt; 로 명시 적으로 무효화 할 때까지 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="f0797d02b20b103e20318e116156be01cb8f6dec" translate="yes" xml:space="preserve">
          <source>Created by calling &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt;. This environment can be used to store terms between NIF calls and to send terms with &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt;. A process-independent environment with all its terms is valid until you explicitly invalidate it with &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;enif_send&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt; 를 호출하여 작성합니다 . 이 환경은 NIF 호출간에 용어를 저장하고 &lt;code&gt;&lt;a href=&quot;#enif_send&quot;&gt;enif_send&lt;/a&gt;&lt;/code&gt; 와 함께 용어를 보내는 데 사용할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;#enif_free_env&quot;&gt;enif_free_env&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;enif_send&lt;/code&gt; 로 명시 적으로 무효화 할 때까지 모든 용어가 포함 된 프로세스 독립 환경이 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="514cd8927b8143838017c5dfe7094be254454e25" translate="yes" xml:space="preserve">
          <source>Created using &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;maps:iterator/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;maps:iterator/1&lt;/a&gt;&lt;/code&gt; 을 사용하여 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="487b42466390101a31015a0a69a464d4392cb7f7" translate="yes" xml:space="preserve">
          <source>Creates a &quot;floating&quot; document. The result represents the same set of layouts as &lt;code&gt;D&lt;/code&gt;; however, a floating document may be moved relative to other floating documents immediately beside or above it, according to their relative horizontal and vertical priorities. These priorities are set with the &lt;code&gt;Hp&lt;/code&gt; and &lt;code&gt;Vp&lt;/code&gt; parameters; if omitted, both default to zero.</source>
          <target state="translated">&quot;부동&quot;문서를 만듭니다. 결과는 &lt;code&gt;D&lt;/code&gt; 와 동일한 레이아웃 세트를 나타냅니다 . 그러나 플로팅 문서는 상대적인 가로 및 세로 우선 순위에 따라 바로 옆 또는 위에있는 다른 플로팅 문서에 상대적으로 이동할 수 있습니다. 이러한 우선 순위는 &lt;code&gt;Hp&lt;/code&gt; 및 &lt;code&gt;Vp&lt;/code&gt; 매개 변수 로 설정됩니다 . 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="76da5355d0bb349914f29a6facbd4856daa7a1e0" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family of subsets&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;family(F,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; if the result is a family. If no &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; is explicitly specified, &lt;code&gt;[{atom,&amp;nbsp;[atom]}]&lt;/code&gt; is used as the family type.</source>
          <target state="translated">작성 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family of subsets&lt;/a&gt;&lt;/code&gt; . 결과가 패밀리 인 경우 &lt;code&gt;family(F,&amp;nbsp;T)&lt;/code&gt; 는 &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; 와 같습니다 . &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; 을 명시 적으로 지정 하지 않으면 &lt;code&gt;[{atom,&amp;nbsp;[atom]}]&lt;/code&gt; 이 패밀리 유형으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6edc4af33935bd0b68c80bc42ab073b0ee98d9c" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; from the directed graph &lt;code&gt;Graph&lt;/code&gt;. Each vertex a of &lt;code&gt;Graph&lt;/code&gt; is represented by a pair (a, {b[1], ..., b[n]}), where the b[i]:s are the out-neighbors of a. If no type is explicitly specified, [{atom, [atom]}] is used as type of the family. It is assumed that &lt;code&gt;Type&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; of the external set of the family.</source>
          <target state="translated">유 방향 그래프 &lt;code&gt;Graph&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; 를 작성합니다 . &lt;code&gt;Graph&lt;/code&gt; 각 정점 a는 한 쌍 (a, {b [1], ..., b [n]})으로 표현되며, 여기서 b [i] : s는 a의 이웃입니다. 유형을 명시 적으로 지정하지 않으면 [{atom, [atom]}]이 제품군의 유형으로 사용됩니다. 것으로 가정 &lt;code&gt;Type&lt;/code&gt; A는 &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; 가족의 외부 세트.</target>
        </trans-unit>
        <trans-unit id="6a9b6fde7ab651cb67957b3b32ef78fb6f2aa16e" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;a_function(F,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; if the result is a function. If no &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; is explicitly specified, &lt;code&gt;[{atom,&amp;nbsp;atom}]&lt;/code&gt; is used as the function type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; 만듭니다 . &lt;code&gt;a_function(F,&amp;nbsp;T)&lt;/code&gt; 는 결과가 함수 인 경우 &lt;code&gt;from_term(F,&amp;nbsp;T)&lt;/code&gt; 와 같습니다. &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; 을 명시 적으로 지정 하지 않으면 &lt;code&gt;[{atom,&amp;nbsp;atom}]&lt;/code&gt; 이 함수 유형으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="92a3f67c331a810da94f44e76d0a71a350e0ecc2" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;#relation&quot;&gt;relation&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;relation(R,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(R,&amp;nbsp;T)&lt;/code&gt;, if T is a &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; and the result is a relation. If &lt;code&gt;Type&lt;/code&gt; is an integer N, then &lt;code&gt;[{atom,&amp;nbsp;...,&amp;nbsp;atom}])&lt;/code&gt;, where the tuple size is N, is used as type of the relation. If no type is explicitly specified, the size of the first tuple of &lt;code&gt;Tuples&lt;/code&gt; is used if there is such a tuple. &lt;code&gt;relation([])&lt;/code&gt; is equivalent to &lt;code&gt;relation([],&amp;nbsp;2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#relation&quot;&gt;relation&lt;/a&gt;&lt;/code&gt; 만듭니다 . T가 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; 이고 결과가 관계인 경우 &lt;code&gt;relation(R,&amp;nbsp;T)&lt;/code&gt; 는 &lt;code&gt;from_term(R,&amp;nbsp;T)&lt;/code&gt; 과 같습니다. 경우 &lt;code&gt;Type&lt;/code&gt; 정수 N이고, 다음 &lt;code&gt;[{atom,&amp;nbsp;...,&amp;nbsp;atom}])&lt;/code&gt; , 튜플 크기가 N이고, 관계의 형태로 사용된다. 유형을 명시 적으로 지정하지 않으면, &lt;code&gt;Tuples&lt;/code&gt; 이있는 경우 첫 번째 튜플의 크기 가 사용됩니다. &lt;code&gt;relation([])&lt;/code&gt; 은 &lt;code&gt;relation([],&amp;nbsp;2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ee66a3d76be00ae1ad9942ed1e1ea86d7420db9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;gen_server&lt;/code&gt; process as part of a supervision tree. This function is to be called, directly or indirectly, by the supervisor. For example, it ensures that the &lt;code&gt;gen_server&lt;/code&gt; process is linked to the supervisor.</source>
          <target state="translated">작성 &lt;code&gt;gen_server&lt;/code&gt; 의 감독 트리의 일환으로 과정을. 이 기능은 감독자가 직접 또는 간접적으로 호출해야합니다. 예를 들어 &lt;code&gt;gen_server&lt;/code&gt; 프로세스가 수퍼바이저에 연결되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8202fea2f1acb64c08fd10322bdad688d5f51273" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;gen_statem&lt;/code&gt; process according to OTP design principles (using &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; primitives) that is linked to the calling process. This is essential when the &lt;code&gt;gen_statem&lt;/code&gt; must be part of a supervision tree so it gets linked to its supervisor.</source>
          <target state="translated">작성 &lt;code&gt;gen_statem&lt;/code&gt; 의 OTP 설계 원칙 (사용에 따라 과정을 &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; 의 호출 프로세스에 연결되어 프리미티브). &lt;code&gt;gen_statem&lt;/code&gt; 이 감독자 트리에 포함되어 감독자와 연결될 때 필수적 입니다.</target>
        </trans-unit>
        <trans-unit id="1de6640bed7630d72fc1f6681948477e8ed3569d" translate="yes" xml:space="preserve">
          <source>Creates a Mnesia table called &lt;code&gt;Name&lt;/code&gt; according to argument &lt;code&gt;TabDef&lt;/code&gt;. This list must be a list of &lt;code&gt;{Item, Value}&lt;/code&gt; tuples, where the following values are allowed:</source>
          <target state="translated">TabDef 인수에 따라 &lt;code&gt;Name&lt;/code&gt; 이라는 Mnesia 테이블 을 &lt;code&gt;TabDef&lt;/code&gt; 합니다. 이 목록은 &lt;code&gt;{Item, Value}&lt;/code&gt; 튜플 의 목록이어야하며 다음 값이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="3de38f4db79206c004fe13707342e67487ea7ae4" translate="yes" xml:space="preserve">
          <source>Creates a PEM binary.</source>
          <target state="translated">PEM 바이너리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="cb6ed58c35d7e30533553719153fe432e02abef9" translate="yes" xml:space="preserve">
          <source>Creates a PEM entry that can be feed to &lt;code&gt;pem_encode/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pem_encode/1&lt;/code&gt; 에 피드 할 수있는 PEM 항목을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="858272cee3e49d9b882d89cab8d5412193f867b6" translate="yes" xml:space="preserve">
          <source>Creates a UTF Byte Order Mark (BOM) as a binary from the supplied &lt;code&gt;InEncoding&lt;/code&gt;. The BOM is, if supported at all, expected to be placed first in UTF encoded files or messages.</source>
          <target state="translated">제공된 &lt;code&gt;InEncoding&lt;/code&gt; 에서 바이너리로 UTF 바이트 주문 표시 (BOM)를 작성 합니다. BOM이 지원되는 경우 UTF 인코딩 파일 또는 메시지에서 가장 먼저 배치 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="54fe50ce4821eaeb39b368b96edc03d43b167421" translate="yes" xml:space="preserve">
          <source>Creates a binary term that is memory-managed by a resource object &lt;code&gt;obj&lt;/code&gt; obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The returned binary term consists of &lt;code&gt;size&lt;/code&gt; bytes pointed to by &lt;code&gt;data&lt;/code&gt;. This raw binary data must be kept readable and unchanged until the destructor of the resource is called. The binary data can be stored external to the resource object, in which case the destructor is responsible for releasing the data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에서 얻은 자원 객체 &lt;code&gt;obj&lt;/code&gt; 에 의해 메모리 관리되는 이진 용어를 만듭니다 . 반환 된 이진 용어는 &lt;code&gt;data&lt;/code&gt; 가리키는 &lt;code&gt;size&lt;/code&gt; 바이트 로 구성됩니다 . 이 원시 바이너리 데이터는 리소스의 소멸자가 호출 될 때까지 읽기 가능하고 변경되지 않아야합니다. 이진 데이터는 리소스 개체 외부에 저장 될 수 있으며,이 경우 소멸자가 데이터를 해제해야합니다.</target>
        </trans-unit>
        <trans-unit id="4dc50a97b5e83bf2afd996a7ed6d7c2811c083ad" translate="yes" xml:space="preserve">
          <source>Creates a binary term that is memory-managed by a resource object &lt;code&gt;obj&lt;/code&gt; obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The returned binary term consists of &lt;code&gt;size&lt;/code&gt; bytes pointed to by &lt;code&gt;data&lt;/code&gt;. This raw binary data must be kept readable and unchanged until the destructor of the resource is called. The binary data can be stored external to the resource object, in which case the destructor is responsible for releasing the data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에 의해 얻은 자원 객체 &lt;code&gt;obj&lt;/code&gt; 에 의해 메모리 관리되는 이진 용어를 작성 합니다. 반환 된 이진 용어는 &lt;code&gt;data&lt;/code&gt; 가 가리키는 &lt;code&gt;size&lt;/code&gt; 바이트 로 구성됩니다 . 이 원시 바이너리 데이터는 리소스의 소멸자가 호출 될 때까지 읽을 수 있고 변경되지 않은 상태로 유지되어야합니다. 이진 데이터는 리소스 객체 외부에 저장 될 수 있으며,이 경우 소멸자는 데이터를 공개합니다.</target>
        </trans-unit>
        <trans-unit id="3fd4437ddbde12d7ea32b68f63f865c080cac6ad" translate="yes" xml:space="preserve">
          <source>Creates a binary with the content of &lt;code&gt;Subject&lt;/code&gt; duplicated &lt;code&gt;N&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 의 내용이 &lt;code&gt;N&lt;/code&gt; 번 복제 된 이진 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="96976114dc99117119cb26cc796818c0795df90d" translate="yes" xml:space="preserve">
          <source>Creates a breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; 에서 중단 점을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="1f0a5e91b4f9c5b02c4e276e0cbd742f0fb47b2b" translate="yes" xml:space="preserve">
          <source>Creates a breakpoint at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Name/Arity&lt;/code&gt; 함수의 모든 절의 첫 번째 행에 중단 점을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="9bd86a6e5cd5756f5a89d5836096f4dcae978a4d" translate="yes" xml:space="preserve">
          <source>Creates a condition variable and returns a pointer to it.</source>
          <target state="translated">조건 변수를 작성하고 이에 대한 포인터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="efc2f571a607db5e8a1352cc2fc06595bc8d8bc5" translate="yes" xml:space="preserve">
          <source>Creates a data constructor node with the specified type and subtrees. (Cf. &lt;code&gt;data_type/1&lt;/code&gt;.) An exception is thrown if the length of &lt;code&gt;Elements&lt;/code&gt; is invalid for the given &lt;code&gt;Type&lt;/code&gt;; see &lt;code&gt;data_es/1&lt;/code&gt; for arity constraints on constructor types.</source>
          <target state="translated">지정된 유형 및 하위 트리를 사용하여 데이터 생성자 노드를 만듭니다. ( &lt;code&gt;data_type/1&lt;/code&gt; 참조 ) 지정된 &lt;code&gt;Type&lt;/code&gt; 에 대해 &lt;code&gt;Elements&lt;/code&gt; 의 길이 가 유효하지 않은 경우 예외가 발생합니다 . 생성자 유형에 대한 arity 제약 은 &lt;code&gt;data_es/1&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="55e25bc415e3ff34c3fc2d5ee04a94290dc29e85" translate="yes" xml:space="preserve">
          <source>Creates a digital signature.</source>
          <target state="translated">디지털 서명을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9c9282509eb20f50f2ca3fbaba1cde454f58bd56" translate="yes" xml:space="preserve">
          <source>Creates a digraph where the vertices are the &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Digraph&lt;/code&gt; as returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt;. If X and Y are two different strongly connected components, and vertices x and y exist in X and Y, respectively, such that there is an edge &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from x and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on y, then an edge emanating from X and incident on Y is created.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt; 에 의해 반환 된 &lt;code&gt;Digraph&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 인 꼭지점이있는 digraph를 만듭니다 . X 및 Y는 서로 다른 두 강하게 연결된 구성 요소 및 정점 X가되고, Y는 에지가되도록, 각각 X와 Y로 존재할 경우 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; X로부터 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 후, Y에서 X 입사로부터 방출 에지가 생성된다 Y에 .</target>
        </trans-unit>
        <trans-unit id="177b168cc30c65fba15c3150ae4d0c07a9a72d3e" translate="yes" xml:space="preserve">
          <source>Creates a digraph where the vertices are the &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Digraph&lt;/code&gt; as returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt;. If X and Y are two different strongly connected components, and vertices x and y exist in X and Y, respectively, such that there is an edge &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from x and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on y, then an edge emanating from X and incident on Y is created.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt; 에서 반환 한 정점이 정점 &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Digraph&lt;/code&gt; 의구성 요소 인 위치를 작성합니다 . X 및 Y는 서로 다른 두 강하게 연결된 구성 요소 및 정점 X가되고, Y는 에지가되도록, 각각 X와 Y로 존재할 경우 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; X로부터 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 후, Y에서 X 입사로부터 방출 에지가 생성된다 Y에 .</target>
        </trans-unit>
        <trans-unit id="c04f0bf0c1dccf27f3a1ba968e20fb6b1e972f5f" translate="yes" xml:space="preserve">
          <source>Creates a directed graph from &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt;. For each pair (a, {b[1], ..., b[n]}) of &lt;code&gt;Family&lt;/code&gt;, vertex a and the edges (a, b[i]) for 1 &amp;lt;= i &amp;lt;= n are added to a newly created directed graph.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; 에서 방향 그래프를 작성 합니다. &lt;code&gt;Family&lt;/code&gt; 의 각 쌍 (a, {b [1], ..., b [n]})에 대해 정점 a와 1 &amp;lt;= i &amp;lt;= n에 대한 모서리 (a, b [i])가 a에 추가됩니다 새로 생성 된 유 방향 그래프.</target>
        </trans-unit>
        <trans-unit id="d6fc8fee02e92845ea3295f84f11702cc881f652" translate="yes" xml:space="preserve">
          <source>Creates a directory specified by &lt;code&gt;Name&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; must be a full path to a new directory. The directory can only be created in an existing directory.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 에 의해 지정된 디렉토리를 작성합니다 . &lt;code&gt;Name&lt;/code&gt; 은 새 디렉토리의 전체 경로 여야합니다. 디렉토리는 기존 디렉토리에서만 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5955484063cfe956af5dad94ea9452772c35cd00" translate="yes" xml:space="preserve">
          <source>Creates a distribution point for CRLs issued by the same issuer as &lt;code&gt;Cert&lt;/code&gt;. Can be used as input to &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3 &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Cert&lt;/code&gt; 와 동일한 발급자가 발급 한 CRL에 대한 배포 지점을 만듭니다 . &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3 &lt;/a&gt;&lt;/code&gt; 에 대한 입력으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4dd26b5ef04ee592cf19bdd431a1a3655f1df57" translate="yes" xml:space="preserve">
          <source>Creates a distribution point for CRLs issued by the same issuer as &lt;code&gt;Cert&lt;/code&gt;. Can be used as input to &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Cert&lt;/code&gt; 와 동일한 발급자가 발급 한 CRL에 대한 배포 지점을 만듭니다 . &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt; 에 대한 입력으로 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="93f92f374d2f586a13b40862e10990d1a1684578" translate="yes" xml:space="preserve">
          <source>Creates a driver monitor and works in many ways as &lt;code&gt;erlang:monitor/2&lt;/code&gt; in ERTS, does for processes. When a driver changes state, the monitor results in a monitor message that is sent to the calling process. &lt;code&gt;MonitorRef&lt;/code&gt; returned by this function is included in the message sent.</source>
          <target state="translated">드라이버 모니터를 작성하고 ERTS의 &lt;code&gt;erlang:monitor/2&lt;/code&gt; 와 같이 여러 가지 방식으로 프로세스를 수행합니다. 드라이버가 상태를 변경하면 모니터는 호출 프로세스로 전송되는 모니터 메시지를 생성합니다. 이 함수에 의해 리턴 된 &lt;code&gt;MonitorRef&lt;/code&gt; 는 전송 된 메시지에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8c0e2f95b58b703238ace5268c022d91dddef908" translate="yes" xml:space="preserve">
          <source>Creates a driver monitor if the condition specified in &lt;code&gt;MonitorOption&lt;/code&gt; is true. The valid options are:</source>
          <target state="translated">&lt;code&gt;MonitorOption&lt;/code&gt; 에 지정된 조건 이 true 인 경우 드라이버 모니터를 작성 합니다. 유효한 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f037d732a6c2f9ebb012224ab4b46ee884e3984" translate="yes" xml:space="preserve">
          <source>Creates a driver monitor if the return value is to be &lt;code&gt;{ok, pending_driver}&lt;/code&gt;.</source>
          <target state="translated">리턴 값이 &lt;code&gt;{ok, pending_driver}&lt;/code&gt; 경우 드라이버 모니터를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="5eae0bd06c002d04175cbff01ea3db44f3d9b74d" translate="yes" xml:space="preserve">
          <source>Creates a filter where all &lt;code&gt;Filter&lt;/code&gt; must be true.</source>
          <target state="translated">모든 &lt;code&gt;Filter&lt;/code&gt; 가 true 인 필터를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="5fd4e4258189efddb1dac03781a6ef83372e401b" translate="yes" xml:space="preserve">
          <source>Creates a fixed &quot;best&quot; abstract layout for a syntax tree. This is similar to the &lt;code&gt;layout/2&lt;/code&gt; function, except that here, the final layout has been selected with respect to the given options. The atom &lt;code&gt;empty&lt;/code&gt; is returned if no such layout could be produced. For information on the options, see the &lt;code&gt;format/2&lt;/code&gt; function.</source>
          <target state="translated">구문 트리에 대해 고정 된 &quot;최상의&quot;추상 레이아웃을 만듭니다. 이것은 주어진 옵션과 관련하여 최종 레이아웃이 선택되었다는 점을 제외하고 는 &lt;code&gt;layout/2&lt;/code&gt; 기능 과 유사합니다 . 그러한 레이아웃을 생성 할 수없는 경우 &lt;code&gt;empty&lt;/code&gt; 있는 아톰 이 반환됩니다. 옵션에 대한 정보는 &lt;code&gt;format/2&lt;/code&gt; 기능을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aad48c5e7cfe9ae5866cafe81aaea1eaa3791015" translate="yes" xml:space="preserve">
          <source>Creates a fixed-size array. See also &lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">고정 크기 배열을 만듭니다. &lt;code&gt;&lt;a href=&quot;#fix-1&quot;&gt;fix/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="df58523ae34fbde91d6f98be0aefaae2ce2b6e9b" translate="yes" xml:space="preserve">
          <source>Creates a floating-point term from a &lt;code&gt;double&lt;/code&gt;. If argument &lt;code&gt;double&lt;/code&gt; is not finite or is NaN, &lt;code&gt;enif_make_double&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 에서 부동 소수점 용어를 만듭니다 . &lt;code&gt;double&lt;/code&gt; 인수 가 유한하지 않거나 NaN이면 &lt;code&gt;enif_make_double&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="76eff20ff3e006eb53d7bdce2970decfc91750c8" translate="yes" xml:space="preserve">
          <source>Creates a floating-point term from a &lt;code&gt;double&lt;/code&gt;. If argument &lt;code&gt;double&lt;/code&gt; is not finite or is NaN, &lt;code&gt;enif_make_double&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 에서 부동 소수점을 만듭니다 . 인수 &lt;code&gt;double&lt;/code&gt; 이 유한하지 않거나 NaN 인 경우 &lt;code&gt;enif_make_double&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="dca62271e9846db2f3e57ee9be4c324cb3d68aef" translate="yes" xml:space="preserve">
          <source>Creates a key, or just changes to it, if it is already there. Works like a combination of &lt;code&gt;mkdir&lt;/code&gt; and &lt;code&gt;cd&lt;/code&gt;. Calls the Win32 API function &lt;code&gt;RegCreateKeyEx()&lt;/code&gt;.</source>
          <target state="translated">키를 작성하거나 이미있는 경우 변경하십시오. &lt;code&gt;mkdir&lt;/code&gt; 과 &lt;code&gt;cd&lt;/code&gt; 의 조합처럼 작동합니다 . Win32 API 함수 &lt;code&gt;RegCreateKeyEx()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="fb5207c76ff31838885f4aaf7e199e878e56bf7f" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; and floating point value &lt;code&gt;f&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;key&lt;/code&gt; 와 부동 소수점 값 &lt;code&gt;f&lt;/code&gt; 로 키-값 쌍을 만듭니다 . 같은 &lt;code&gt;key&lt;/code&gt; 가진 객체가 이미 존재 하면 새 값이 이전 값을 대체합니다. 이전 값이 이진 또는 문자열 인 경우 &lt;code&gt;free()&lt;/code&gt; 해제됩니다 .</target>
        </trans-unit>
        <trans-unit id="f5252d544c60e4dcc9831941c968a7defd8d6b71" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; and integer value &lt;code&gt;i&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;key&lt;/code&gt; 와 정수 값 &lt;code&gt;i&lt;/code&gt; 로 키-값 쌍을 만듭니다 . 같은 &lt;code&gt;key&lt;/code&gt; 가진 객체가 이미 존재 하면 새 값이 이전 값을 대체합니다. 이전 값이 이진 또는 문자열 인 경우 &lt;code&gt;free()&lt;/code&gt; 해제됩니다 .</target>
        </trans-unit>
        <trans-unit id="f3df3b3c5a894545c959663f3d753ce56e0ee470" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; whose &quot;value&quot; is the binary object pointed to by &lt;code&gt;p&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">&quot;value&quot;가 &lt;code&gt;p&lt;/code&gt; 로 가리키는 이진 객체 인 지정된 &lt;code&gt;key&lt;/code&gt; 키-값 쌍을 만듭니다 . 같은 &lt;code&gt;key&lt;/code&gt; 가진 객체가 이미 존재 하면 새 값이 이전 값을 대체합니다. 이전 값이 이진 또는 문자열 인 경우 &lt;code&gt;free()&lt;/code&gt; 해제됩니다 .</target>
        </trans-unit>
        <trans-unit id="daec5695fa911551ee2d74ca5d12d2de073855ed" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; whose &quot;value&quot; is the specified string &lt;code&gt;s&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">&quot;value&quot;가 지정된 문자열 &lt;code&gt;s&lt;/code&gt; 인 지정된 &lt;code&gt;key&lt;/code&gt; 키-값 쌍을 작성합니다 . 같은 &lt;code&gt;key&lt;/code&gt; 가진 객체가 이미 존재 하면 새 값이 이전 값을 대체합니다. 이전 값이 이진 또는 문자열 인 경우 &lt;code&gt;free()&lt;/code&gt; 해제됩니다 .</target>
        </trans-unit>
        <trans-unit id="16d914d1139dca09b6640753aa71244f722ee9fb" translate="yes" xml:space="preserve">
          <source>Creates a key-value pair with the specified &lt;code&gt;key&lt;/code&gt; whose value is specified by &lt;code&gt;v&lt;/code&gt;. If an object already exists with the same &lt;code&gt;key&lt;/code&gt;, the new value replaces the old one. If the previous value was a binary or string, it is freed with &lt;code&gt;free()&lt;/code&gt;.</source>
          <target state="translated">값이 &lt;code&gt;v&lt;/code&gt; 로 지정된 지정된 &lt;code&gt;key&lt;/code&gt; 키-값 쌍을 작성합니다 . 같은 &lt;code&gt;key&lt;/code&gt; 가진 객체가 이미 존재 하면 새 값이 이전 값을 대체합니다. 이전 값이 이진 또는 문자열 인 경우 &lt;code&gt;free()&lt;/code&gt; 해제됩니다 .</target>
        </trans-unit>
        <trans-unit id="f3032b78251e0fd04578b11b1e3602d47371a273" translate="yes" xml:space="preserve">
          <source>Creates a link between the calling process and another process (or port) &lt;code&gt;PidOrPort&lt;/code&gt;, if there is not such a link already. If a process attempts to create a link to itself, nothing is done. Returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">링크가없는 경우 호출 프로세스와 다른 프로세스 (또는 포트) &lt;code&gt;PidOrPort&lt;/code&gt; 사이에 링크를 작성합니다 . 프로세스가 자신에 대한 링크를 작성하려고 시도하면 아무 것도 수행되지 않습니다. &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="c54504590752c7a529f29fe7ef21bbe1f8c01bf6" translate="yes" xml:space="preserve">
          <source>Creates a link between the calling process and another process (or port) &lt;code&gt;PidOrPort&lt;/code&gt;. If the link already exists or a process attempts to create a link to itself, nothing is done. Returns &lt;code&gt;true&lt;/code&gt; if the link is set up.</source>
          <target state="translated">호출 프로세스와 다른 프로세스 (또는 포트) &lt;code&gt;PidOrPort&lt;/code&gt; 간의 링크를 만듭니다 . 링크가 이미 존재하거나 프로세스가 자신에 대한 링크를 만들려고하면 아무 작업도 수행되지 않습니다. 링크가 설정된 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="357ea49c3cb007e9b97cbf534577b2dc67a39b82" translate="yes" xml:space="preserve">
          <source>Creates a list cell &lt;code&gt;[head | tail]&lt;/code&gt;.</source>
          <target state="translated">목록 셀을 만듭니다. &lt;code&gt;[head | tail]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="298fb27a25b7aad82b2d52d5a29a8c62cab17e55" translate="yes" xml:space="preserve">
          <source>Creates a list containing the characters of the &lt;code&gt;NULL&lt;/code&gt;-terminated string &lt;code&gt;string&lt;/code&gt; with encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인코딩 &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;NULL&lt;/code&gt; 로 끝나는 문자열 &lt;code&gt;string&lt;/code&gt; 의 문자가 포함 된 목록을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c11084e2d9e7c1478099163426980638c7a37b71" translate="yes" xml:space="preserve">
          <source>Creates a list containing the characters of the string &lt;code&gt;string&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; and encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;NULL&lt;/code&gt; characters are treated as any other characters.</source>
          <target state="translated">길이 &lt;code&gt;len&lt;/code&gt; 및 인코딩 &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 문자열 &lt;code&gt;string&lt;/code&gt; 의 문자를 포함하는 목록을 작성합니다 . &lt;code&gt;NULL&lt;/code&gt; 문자는 다른 문자로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="ada4a8b45d9a446bceb699fc801432d8ee62571d" translate="yes" xml:space="preserve">
          <source>Creates a list from a &lt;code&gt;NULL&lt;/code&gt;-terminated string.</source>
          <target state="translated">&lt;code&gt;NULL&lt;/code&gt; 로 끝나는 문자열 에서 목록을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f41e60335b704cf16f78792df8f3fe633a6736a1" translate="yes" xml:space="preserve">
          <source>Creates a list from a sequence of bytes.</source>
          <target state="translated">바이트 시퀀스에서 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="dda6423d352eebc300ea54dde6d2ae3cfde6a16a" translate="yes" xml:space="preserve">
          <source>Creates a local binding &lt;code&gt;Var = Arg&lt;/code&gt; in &lt;code&gt;Expr&lt;/code&gt;. (This is the same as &lt;code&gt;(fun(Var)-&amp;gt;(Expr)end)(Arg)&lt;/code&gt;.) Note that the binding is not exported outside of &lt;code&gt;Expr&lt;/code&gt;, and that within &lt;code&gt;Expr&lt;/code&gt;, this binding of &lt;code&gt;Var&lt;/code&gt; will shadow any binding of &lt;code&gt;Var&lt;/code&gt; in the surrounding scope.</source>
          <target state="translated">&lt;code&gt;Expr&lt;/code&gt; 에 로컬 바인딩 &lt;code&gt;Var = Arg&lt;/code&gt; 를 만듭니다 . (이 동일하다 &lt;code&gt;(fun(Var)-&amp;gt;(Expr)end)(Arg)&lt;/code&gt; .) 참고 바인딩이 밖에 수출되지 않도록 &lt;code&gt;Expr&lt;/code&gt; 내, 그 &lt;code&gt;Expr&lt;/code&gt; ,이 결합 &lt;code&gt;Var&lt;/code&gt; 어떤 결합 그림자 것이다 &lt;code&gt;Var&lt;/code&gt; 에서을 주변 범위.</target>
        </trans-unit>
        <trans-unit id="ab877aeb736aaca90aa45e02594b2c2f74d1920f" translate="yes" xml:space="preserve">
          <source>Creates a mapping from corresponding short names to full function names. Names are represented by nested tuples of atoms and integers (cf. &lt;code&gt;analyze_function_name/1&lt;/code&gt;). The result is a list containing a pair &lt;code&gt;{ShortName, Name}&lt;/code&gt; for each element &lt;code&gt;Name&lt;/code&gt; in the given list, where the corresponding &lt;code&gt;ShortName&lt;/code&gt; is the rightmost-innermost part of &lt;code&gt;Name&lt;/code&gt;. The list thus represents a finite mapping from unqualified names to the corresponding qualified names.</source>
          <target state="translated">해당 짧은 이름에서 전체 기능 이름으로의 맵핑을 작성합니다. 이름은 원자와 정수의 중첩 된 튜플로 표시됩니다 ( &lt;code&gt;analyze_function_name/1&lt;/code&gt; 참조 ). 결과는 주어진 목록의 각 요소 &lt;code&gt;Name&lt;/code&gt; 에 대한 &lt;code&gt;{ShortName, Name}&lt;/code&gt; 쌍을 포함하는 목록입니다. 여기서 해당 &lt;code&gt;ShortName&lt;/code&gt; 은 &lt;code&gt;Name&lt;/code&gt; 의 가장 오른쪽 부분입니다 . 따라서리스트는 규정되지 않은 이름에서 해당 규정 된 이름으로의 유한 맵핑을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2de4ad32ef1eac7c5103daac43c5da1dd5bc836f" translate="yes" xml:space="preserve">
          <source>Creates a maximal &lt;code&gt;&lt;a href=&quot;#subgraph&quot;&gt;subgraph&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Digraph&lt;/code&gt; having as vertices those vertices of &lt;code&gt;Digraph&lt;/code&gt; that are mentioned in &lt;code&gt;Vertices&lt;/code&gt;.</source>
          <target state="translated">최대한의 작성 &lt;code&gt;&lt;a href=&quot;#subgraph&quot;&gt;subgraph&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Digraph&lt;/code&gt; 정점의 그 정점으로 가진 &lt;code&gt;Digraph&lt;/code&gt; 에 언급 &lt;code&gt;Vertices&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a95ed6ebbfb460cf3ec0130982c718ede634c03a" translate="yes" xml:space="preserve">
          <source>Creates a meta-representation of a syntax tree. The result represents an Erlang expression &quot;&lt;code&gt;MetaTree&lt;/code&gt;&quot; which, if evaluated, will yield a new syntax tree representing the same source code text as &lt;code&gt;Tree&lt;/code&gt; (although the actual data representation may be different). The expression represented by &lt;code&gt;MetaTree&lt;/code&gt; is &lt;strong&gt;implementation independent&lt;/strong&gt; with regard to the data structures used by the abstract syntax tree implementation.</source>
          <target state="translated">구문 트리의 메타 표현을 만듭니다. 결과는 Erlang 표현식 &quot; &lt;code&gt;MetaTree&lt;/code&gt; &quot;를 나타내며, 평가하면 &lt;code&gt;Tree&lt;/code&gt; 와 동일한 소스 코드 텍스트를 나타내는 새로운 구문 트리를 생성합니다 (실제 데이터 표현은 다를 수 있음). &lt;code&gt;MetaTree&lt;/code&gt; 로 표현되는 표현은 추상 구문 트리 구현에서 사용하는 데이터 구조와 관련하여 &lt;strong&gt;독립적 인&lt;/strong&gt; 구현입니다.</target>
        </trans-unit>
        <trans-unit id="b3f1e612a3fa26bfe63165309b3ea4260c5ea19d" translate="yes" xml:space="preserve">
          <source>Creates a meta-representation of a syntax tree. The result represents an Erlang expression &quot;&lt;code&gt;MetaTree&lt;/code&gt;&quot; which, if evaluated, will yield a new syntax tree representing the same source code text as &lt;code&gt;Tree&lt;/code&gt; (although the actual data representation may be different). The expression represented by &lt;code&gt;MetaTree&lt;/code&gt; is &lt;strong&gt;implementation independent&lt;/strong&gt; with regard to the data structures used by the abstract syntax tree implementation. Comments attached to nodes of &lt;code&gt;Tree&lt;/code&gt; will be preserved, but other attributes are lost.</source>
          <target state="translated">구문 트리의 메타 표현을 작성합니다. 결과는 Erlang 표현식 &quot; &lt;code&gt;MetaTree&lt;/code&gt; &quot;를 나타내며, 평가되는 경우 &lt;code&gt;Tree&lt;/code&gt; 와 동일한 소스 코드 텍스트를 나타내는 새 구문 트리를 생성합니다 (실제 데이터 표현은 다를 수 있음). &lt;code&gt;MetaTree&lt;/code&gt; 로 표시되는 표현은 추상 구문 트리 구현에서 사용하는 데이터 구조와 관련하여 &lt;strong&gt;구현에 독립적&lt;/strong&gt; 입니다. &lt;code&gt;Tree&lt;/code&gt; 의 노드에 연결된 주석은 유지되지만 다른 속성은 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="839ffd31c5e5be24772b09505d667165e74961a9" translate="yes" xml:space="preserve">
          <source>Creates a monitor if the return value is &lt;code&gt;{ok, pending_driver}&lt;/code&gt; or &lt;code&gt;{ok, pending_process}&lt;/code&gt;.</source>
          <target state="translated">리턴 값이 &lt;code&gt;{ok, pending_driver}&lt;/code&gt; 또는 &lt;code&gt;{ok, pending_process}&lt;/code&gt; 경우 모니터를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="820e489956427e4b5a2498ff24e41655a8413026" translate="yes" xml:space="preserve">
          <source>Creates a mutex and returns a pointer to it.</source>
          <target state="translated">뮤텍스를 생성하고 이에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="07d783e6948e29bd4e8f9a62e120884de2903e26" translate="yes" xml:space="preserve">
          <source>Creates a new array according to the specified otions. By default, the array is extendible and has initial size zero. Array indices start at &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">지정된 otions에 따라 새 배열을 만듭니다. 기본적으로 배열은 확장 가능하며 초기 크기는 0입니다. 배열 인덱스는 &lt;code&gt;0&lt;/code&gt; 에서 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="c5554b65fbf26bfde095ea554d00bf899e1f0e4d" translate="yes" xml:space="preserve">
          <source>Creates a new array according to the specified size and options. If &lt;code&gt;Size&lt;/code&gt; is not a non-negative integer, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;. By default, the array has fixed size. Notice that any size specifications in &lt;code&gt;Options&lt;/code&gt; override parameter &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">지정된 크기와 옵션에 따라 새 배열을 만듭니다. &lt;code&gt;Size&lt;/code&gt; 가 음수가 아닌 정수가 아닌 경우 reason &lt;code&gt;badarg&lt;/code&gt; 로 호출이 실패합니다 . 기본적으로 배열의 크기는 고정되어 있습니다. &lt;code&gt;Options&lt;/code&gt; 모든 크기 지정이 매개 변수 &lt;code&gt;Size&lt;/code&gt; 를 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="8d2c121977271ec2e9fd89ca4810ffb1f7caf785" translate="yes" xml:space="preserve">
          <source>Creates a new collection of annotations given a location.</source>
          <target state="translated">위치가 지정된 새로운 주석 컬렉션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cce28d1b508ba0e41cdbad20e4ad9de7a1d25745" translate="yes" xml:space="preserve">
          <source>Creates a new database on disc. Various files are created in the local Mnesia directory of each node. Notice that the directory must be unique for each node. Two nodes must never share the same directory. If possible, use a local disc device to improve performance.</source>
          <target state="translated">디스크에 새 데이터베이스를 만듭니다. 각 노드의 로컬 Mnesia 디렉토리에 다양한 파일이 작성됩니다. 디렉토리는 각 노드마다 고유해야합니다. 두 노드가 같은 디렉토리를 공유해서는 안됩니다. 가능하면 로컬 디스크 장치를 사용하여 성능을 향상 시키십시오.</target>
        </trans-unit>
        <trans-unit id="88a4c05a8072d74776cc1dfddb905e149147496e" translate="yes" xml:space="preserve">
          <source>Creates a new dictionary.</source>
          <target state="translated">새 사전을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c0741d4a21f8bc795e7586a6a2939804e641c3ef" translate="yes" xml:space="preserve">
          <source>Creates a new port executing the same driver code as the port creating the new port.</source>
          <target state="translated">새 포트를 만드는 포트와 동일한 드라이버 코드를 실행하는 새 포트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a32798a39cac160b7d9160696c3c08a4062a3c40" translate="yes" xml:space="preserve">
          <source>Creates a new process identifier in the argument &lt;code&gt;pid&lt;/code&gt;. This process identifier refers to a conseptual process residing on the C-node identified by the argument &lt;code&gt;ec&lt;/code&gt;. On success &lt;code&gt;0&lt;/code&gt; is returned. On failure &lt;code&gt;ERL_ERROR&lt;/code&gt; is returned and &lt;code&gt;erl_errno&lt;/code&gt; is set.</source>
          <target state="translated">인수 &lt;code&gt;pid&lt;/code&gt; 에 새 프로세스 식별자를 만듭니다 . 이 프로세스 식별자는 인수 &lt;code&gt;ec&lt;/code&gt; 로 식별되는 C 노드에있는 개념적 프로세스를 나타냅니다 . 성공하면 &lt;code&gt;0&lt;/code&gt; 이 반환됩니다. 실패시 &lt;code&gt;ERL_ERROR&lt;/code&gt; 가 반환되고 &lt;code&gt;erl_errno&lt;/code&gt; 가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="a4f62427282324c401d395f61082988ceb0d7d34" translate="yes" xml:space="preserve">
          <source>Creates a new reference in the argument &lt;code&gt;ref&lt;/code&gt;. This reference originates from the C-node identified by the argument &lt;code&gt;ec&lt;/code&gt;. On success &lt;code&gt;0&lt;/code&gt; is returned. On failure &lt;code&gt;ERL_ERROR&lt;/code&gt; is returned and &lt;code&gt;erl_errno&lt;/code&gt; is set.</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; 인수에 새 참조를 만듭니다 . 이 참조는 &lt;code&gt;ec&lt;/code&gt; 인수로 식별되는 C 노드에서 시작됩니다 . 성공하면 &lt;code&gt;0&lt;/code&gt; 이 반환됩니다. 실패시 &lt;code&gt;ERL_ERROR&lt;/code&gt; 가 반환되고 &lt;code&gt;erl_errno&lt;/code&gt; 가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e25e828a4560d491b0f9a4c74e6f0ec747d062a4" translate="yes" xml:space="preserve">
          <source>Creates a new resource type that does not already exist.</source>
          <target state="translated">아직 존재하지 않는 새로운 자원 유형을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="65c7ecc7145666f9e8527c947576c65679d62af6" translate="yes" xml:space="preserve">
          <source>Creates a new snmp index structure. The &lt;code&gt;key_types()&lt;/code&gt; type is described above.</source>
          <target state="translated">새로운 snmp 색인 구조를 작성합니다. &lt;code&gt;key_types()&lt;/code&gt; 유형은 전술되어있다.</target>
        </trans-unit>
        <trans-unit id="c51c1f1c50b0a20da598b48973d35b50c7b217d5" translate="yes" xml:space="preserve">
          <source>Creates a new table and returns a table identifier that can be used in subsequent operations. The table identifier can be sent to other processes so that a table can be shared between different processes within a node.</source>
          <target state="translated">새 테이블을 작성하고 후속 조작에 사용할 수있는 테이블 ID를 리턴합니다. 테이블 식별자는 다른 프로세스로 전송되어 노드 내의 다른 프로세스간에 테이블을 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e33afc7d7384af7641f1f2346aa9553b3c9a984" translate="yes" xml:space="preserve">
          <source>Creates a new thread.</source>
          <target state="translated">새 스레드를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="63760b005669ecdd0238b403635a0181ace1b547" translate="yes" xml:space="preserve">
          <source>Creates a new tuple of the specified &lt;code&gt;Arity&lt;/code&gt;, where all elements are &lt;code&gt;InitialValue&lt;/code&gt;, for example:</source>
          <target state="translated">지정된 &lt;code&gt;Arity&lt;/code&gt; 의 새 튜플을 만듭니다. 여기서 모든 요소는 &lt;code&gt;InitialValue&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bbde9b8f1bebedce361140db667277cbb6a0dbed" translate="yes" xml:space="preserve">
          <source>Creates a new, empty process group. The group is globally visible on all nodes. If the group exists, nothing happens.</source>
          <target state="translated">빈 프로세스 그룹을 새로 만듭니다. 그룹은 모든 노드에서 전체적으로 볼 수 있습니다. 그룹이 존재하면 아무 일도 일어나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86b6449f65fda1f3edf00469bef65360c86b7abb" translate="yes" xml:space="preserve">
          <source>Creates a new, extendible array with initial size zero.</source>
          <target state="translated">초기 크기가 0 인 확장 가능한 새로운 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="72f09cdd742eaadc1f7e3c1bc84738390481b910" translate="yes" xml:space="preserve">
          <source>Creates a normal form (minimal) representation of a property. If &lt;code&gt;PropertyIn&lt;/code&gt; is &lt;code&gt;{Key, true}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is an atom, &lt;code&gt;Key&lt;/code&gt; is returned, otherwise the whole term &lt;code&gt;PropertyIn&lt;/code&gt; is returned.</source>
          <target state="translated">속성의 일반적인 형태 (최소) 표현을 만듭니다. 경우 &lt;code&gt;PropertyIn&lt;/code&gt; 이 있다 &lt;code&gt;{Key, true}&lt;/code&gt; , &lt;code&gt;Key&lt;/code&gt; 원자이다가, &lt;code&gt;Key&lt;/code&gt; 달리, 전체 기간 반환 &lt;code&gt;PropertyIn&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="17761c3096de5b1704c7f003e29b60e041bde506" translate="yes" xml:space="preserve">
          <source>Creates a normal form (minimal) representation of a simple key/value property. Returns &lt;code&gt;Key&lt;/code&gt; if &lt;code&gt;Value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;Key&lt;/code&gt; is an atom, otherwise a tuple &lt;code&gt;{Key, Value}&lt;/code&gt; is returned.</source>
          <target state="translated">간단한 키 / 값 속성의 일반적인 형식 (최소) 표현을 만듭니다. 리턴 &lt;code&gt;Key&lt;/code&gt; 경우 &lt;code&gt;Value&lt;/code&gt; 있다 &lt;code&gt;true&lt;/code&gt; 과 &lt;code&gt;Key&lt;/code&gt; 달리 튜플, 원자이다 &lt;code&gt;{Key, Value}&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0cba4487f45bf4cc583ec1f492c5c82b68d8c8a2" translate="yes" xml:space="preserve">
          <source>Creates a port data lock associated with the &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">과 관련된 포트 데이터 잠금 작성 &lt;code&gt;port&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adb54340aaa458238a7b696b3696df65a8505329" translate="yes" xml:space="preserve">
          <source>Creates a port id with creation 0.</source>
          <target state="translated">작성 0으로 포트 ID를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="c5e127e2c74f7f35b36b6905309ba2bc85781425" translate="yes" xml:space="preserve">
          <source>Creates a process at a remote node.</source>
          <target state="translated">원격 노드에서 프로세스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="de1ddce85e84f7a171c60b0bf09a3ebf0a06e45a" translate="yes" xml:space="preserve">
          <source>Creates a process id with creation 0.</source>
          <target state="translated">작성 0으로 프로세스 ID를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="fde9fca843eb904c8635192960181019157f804e" translate="yes" xml:space="preserve">
          <source>Creates a query cursor and makes the calling process the owner of the cursor. The cursor is to be used as argument to &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt; next_answers/1,2&lt;/a&gt;&lt;/code&gt; and (eventually) &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt;. Calls &lt;code&gt; erlang:spawn_opt/2&lt;/code&gt; to spawn and link to a process that evaluates the query handle. The value of option &lt;code&gt;spawn_options&lt;/code&gt; is used as last argument when calling &lt;code&gt;spawn_opt/2&lt;/code&gt;. Defaults to &lt;code&gt;[link]&lt;/code&gt;.</source>
          <target state="translated">쿼리 커서를 만들고 호출 프로세스를 커서의 소유자로 만듭니다. 커서는 &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt; next_answers/1,2&lt;/a&gt;&lt;/code&gt; 및 (결국) &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt; 의 인수로 사용됩니다 . &lt;code&gt; erlang:spawn_opt/2&lt;/code&gt; 를 호출 하여 쿼리 핸들을 평가하는 프로세스를 생성하고 링크합니다. &lt;code&gt;spawn_options&lt;/code&gt; 옵션의 값은 &lt;code&gt;spawn_opt/2&lt;/code&gt; 호출시 마지막 인수로 사용됩니다 . 기본값은 &lt;code&gt;[link]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7c4ee5a50020d5550c7976d2516abc01af86f5e6" translate="yes" xml:space="preserve">
          <source>Creates a query cursor and makes the calling process the owner of the cursor. The cursor is to be used as argument to &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt;next_answers/1,2&lt;/a&gt;&lt;/code&gt; and (eventually) &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt;. Calls &lt;code&gt;erlang:spawn_opt/2&lt;/code&gt; to spawn and link to a process that evaluates the query handle. The value of option &lt;code&gt;spawn_options&lt;/code&gt; is used as last argument when calling &lt;code&gt;spawn_opt/2&lt;/code&gt;. Defaults to &lt;code&gt;[link]&lt;/code&gt;.</source>
          <target state="translated">쿼리 커서를 작성하고 호출 프로세스를 커서 소유자로 만듭니다. 커서는 &lt;code&gt;&lt;a href=&quot;#next_answers-1&quot;&gt;next_answers/1,2&lt;/a&gt;&lt;/code&gt; 및 (결과적으로) &lt;code&gt;&lt;a href=&quot;#delete_cursor-1&quot;&gt;delete_cursor/1&lt;/a&gt;&lt;/code&gt; 의 인수로 사용됩니다 . &lt;code&gt;erlang:spawn_opt/2&lt;/code&gt; 를 호출 하여 쿼리 핸들을 평가하는 프로세스를 생성하고 연결합니다. &lt;code&gt;spawn_options&lt;/code&gt; 옵션의 값은 &lt;code&gt;spawn_opt/2&lt;/code&gt; 를 호출 할 때 마지막 인수로 사용됩니다 . 기본값은 &lt;code&gt;[link]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d083664e567b14703e598226c7fd8268df0cd244" translate="yes" xml:space="preserve">
          <source>Creates a reference like &lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt; erlang:make_ref/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt; erlang:make_ref/0&lt;/a&gt;&lt;/code&gt; 과 같은 참조를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="847ce1382a0d2a69dbc5c3b528acab4ae456f658" translate="yes" xml:space="preserve">
          <source>Creates a reference like &lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt;erlang:make_ref/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#make_ref-0&quot;&gt;erlang:make_ref/0&lt;/a&gt;&lt;/code&gt; 과 같은 참조를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="adb009b61efaa2ac13ccba310cf5b508653e1bb2" translate="yes" xml:space="preserve">
          <source>Creates a release package file &lt;code&gt;Name.tar.gz&lt;/code&gt;. This file must be uncompressed and unpacked on the target system using &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler&lt;/a&gt;&lt;/code&gt; before the new release can be installed.</source>
          <target state="translated">릴리스 패키지 파일 &lt;code&gt;Name.tar.gz&lt;/code&gt; 를 작성 합니다. 새 릴리스를 설치하기 전에 &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler&lt;/a&gt;&lt;/code&gt; 를 사용하여 대상 시스템에서이 파일의 압축을 풀고 압축을 풀어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f1ef04adb151d906731affbc6b3aa58794bcd99" translate="yes" xml:space="preserve">
          <source>Creates a row in a table. &lt;code&gt;Row&lt;/code&gt; is a tuple with values for all columns, including the index columns.</source>
          <target state="translated">테이블에 행을 만듭니다. &lt;code&gt;Row&lt;/code&gt; 은 인덱스 열을 포함하여 모든 열에 대한 값이있는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="23bad72d544bff3d37d12314497e05ae06051750" translate="yes" xml:space="preserve">
          <source>Creates a send handle from a transport handle. The send handle is intended to be used by megaco_udp:send_message/2.</source>
          <target state="translated">전송 핸들에서 전송 핸들을 만듭니다. 송신 핸들은 megaco_udp : send_message / 2에서 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="feb2966e454d2cddfd471ac6227998209c41218e" translate="yes" xml:space="preserve">
          <source>Creates a set from the &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt;&lt;code&gt;ExternalSet&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Type&lt;/code&gt;. It is assumed that &lt;code&gt;Type&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;ExternalSet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; &lt;code&gt;ExternalSet&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Type&lt;/code&gt; 에서 세트를 작성합니다 . 것으로 가정 &lt;code&gt;Type&lt;/code&gt; A는 &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;ExternalSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b9fa8ffed55deaebce06cde67d6df839c667690" translate="yes" xml:space="preserve">
          <source>Creates a stand-alone event manager process, that is, an event manager that is not part of a supervision tree (and thus has no supervisor) and atomically sets up a monitor to the newly created process.</source>
          <target state="translated">독립형 이벤트 관리자 프로세스, 즉 감독 트리의 일부가 아니므로 감독자가없는 이벤트 관리자를 생성하고 새로 생성 된 프로세스에 대한 모니터를 원자 적으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="aa3ee3d7956152b7151bb76dd675486fdb54280d" translate="yes" xml:space="preserve">
          <source>Creates a stand-alone event manager process, that is, an event manager that is not part of a supervision tree and thus has no supervisor.</source>
          <target state="translated">독립형 이벤트 관리자 프로세스, 즉 감독 트리의 일부가 아니므로 감독자가없는 이벤트 관리자를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="fbe3d036c70cb02b3148667c9d4d4ce5df4f445f" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_server&lt;/code&gt; process, that is, a &lt;code&gt;gen_server&lt;/code&gt; process that is not part of a supervision tree (and thus has no supervisor) and atomically sets up a monitor to the newly created server.</source>
          <target state="translated">독립형 &lt;code&gt;gen_server&lt;/code&gt; 프로세스, 즉 감독 트리의 일부가 아닌 (따라서 감독자가없는) &lt;code&gt;gen_server&lt;/code&gt; 프로세스를 생성하고 새로 생성 된 서버에 대한 모니터를 원자 적으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="93bf01489d33f15e965877fe965310b0c6b532e6" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_server&lt;/code&gt; process, that is, a &lt;code&gt;gen_server&lt;/code&gt; process that is not part of a supervision tree and thus has no supervisor.</source>
          <target state="translated">독립형 &lt;code&gt;gen_server&lt;/code&gt; 프로세스, 즉 감독 트리의 일부가 아니므로 감독자가없는 &lt;code&gt;gen_server&lt;/code&gt; 프로세스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="aaae9c612e8dea5330210d3a27a7c3914f5578df" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_statem&lt;/code&gt; process according to OTP design principles (using &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; primitives) and atomically sets up a monitor to the newly created process. As it does not get linked to the calling process, this start function cannot be used by a supervisor to start a child.</source>
          <target state="translated">OTP 설계 원칙 ( &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; 프리미티브 사용)에 따라 독립형 &lt;code&gt;gen_statem&lt;/code&gt; 프로세스를 생성하고 새로 생성 된 프로세스에 대한 모니터를 원자 적으로 설정합니다. 호출 프로세스에 연결되지 않으므로 감독자가이 시작 기능을 사용하여 자식을 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6d8ca22ab41c05167e7335066e2aa65e1b49a3fb" translate="yes" xml:space="preserve">
          <source>Creates a standalone &lt;code&gt;gen_statem&lt;/code&gt; process according to OTP design principles (using &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; primitives). As it does not get linked to the calling process, this start function cannot be used by a supervisor to start a child.</source>
          <target state="translated">OTP 설계 원칙에 따라 독립형 &lt;code&gt;gen_statem&lt;/code&gt; 프로세스를 &lt;code&gt;&lt;a href=&quot;proc_lib&quot;&gt;proc_lib&lt;/a&gt;&lt;/code&gt; ( proc_lib 프리미티브 사용). 호출 프로세스에 연결되지 않기 때문에 감독자가이 시작 기능을 사용하여 자식을 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1dd858a3fb79b7d4485a066b730950af270b60c0" translate="yes" xml:space="preserve">
          <source>Creates a state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically unpredictable random numbers, and saves it in the process dictionary before returning it as well. See also &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-2&quot;&gt;rand_seed_alg_s/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">암호 학적으로 예측할 수없는 난수를 생성하기 위해 &lt;code&gt;random number generation&lt;/code&gt; 생성을위한 상태 객체를 만들고 반환하기 전에 프로세스 사전에 저장합니다. &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-2&quot;&gt;rand_seed_alg_s/2&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a5a9d9103e300d2a289356d68c5f9098c903fe9" translate="yes" xml:space="preserve">
          <source>Creates a state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically unpredictable random numbers. See also &lt;code&gt;&lt;a href=&quot;#rand_seed_alg-1&quot;&gt;rand_seed_alg/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">암호 학적으로 예측할 수없는 난수를 생성하기 위해 &lt;code&gt;random number generation&lt;/code&gt; 생성을위한 상태 객체를 만듭니다 . &lt;code&gt;&lt;a href=&quot;#rand_seed_alg-1&quot;&gt;rand_seed_alg/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7091ca7a677aba0763bdf1ce5a6ee3b8305401a5" translate="yes" xml:space="preserve">
          <source>Creates a subscription for event notifications by sending an RFC 5277 create-subscription RPC to the server. The calling process receives events as messages of type &lt;code&gt;&lt;a href=&quot;#type-notification&quot;&gt;notification()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">RFC 5277 구독 생성 RPC를 서버로 보내 이벤트 알림에 대한 구독을 만듭니다. 호출 프로세스는 &lt;code&gt;&lt;a href=&quot;#type-notification&quot;&gt;notification()&lt;/a&gt;&lt;/code&gt; 유형의 메시지로 이벤트를 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="e0cf7909fce5c245f936b7bce9582daefac7d434" translate="yes" xml:space="preserve">
          <source>Creates a subscription for event notifications.</source>
          <target state="translated">이벤트 알림에 대한 구독을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="dd3e64bf9d81977c2ed55aaacc7a7a661762e7a8" translate="yes" xml:space="preserve">
          <source>Creates a supervisor bridge process, linked to the calling process, which calls &lt;code&gt;Module:init/1&lt;/code&gt; to start the subsystem. To ensure a synchronized startup procedure, this function does not return until &lt;code&gt;Module:init/1&lt;/code&gt; has returned.</source>
          <target state="translated">호출 프로세스에 연결된 수퍼바이저 브리지 프로세스를 작성합니다.이 프로세스는 &lt;code&gt;Module:init/1&lt;/code&gt; 을 호출 하여 서브 시스템을 시작합니다. 동기화 된 시작 절차를 보장하기 위해이 기능은 &lt;code&gt;Module:init/1&lt;/code&gt; 이 반환 될 때까지 반환되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="866c83a2b0809be7645faf06354bfb4935e9080f" translate="yes" xml:space="preserve">
          <source>Creates a supervisor process as part of a supervision tree. For example, the function ensures that the supervisor is linked to the calling process (its supervisor).</source>
          <target state="translated">감독 트리의 일부로 감독자 프로세스를 만듭니다. 예를 들어,이 기능은 수퍼바이저가 호출 프로세스 (수퍼바이저)에 연결되도록합니다.</target>
        </trans-unit>
        <trans-unit id="c8bbaea3ff9e8edc0c0466b2b7fd84a74a12321f" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link &lt;code&gt;New&lt;/code&gt; to the file or directory &lt;code&gt;Existing&lt;/code&gt; on platforms supporting symbolic links (most Unix systems and Windows, beginning with Vista). &lt;code&gt;Existing&lt;/code&gt; does not need to exist. Returns &lt;code&gt;ok&lt;/code&gt; if the link is successfully created, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. On platforms not supporting symbolic links, &lt;code&gt;{error, enotsup}&lt;/code&gt; is returned.</source>
          <target state="translated">심볼릭 링크 생성 &lt;code&gt;New&lt;/code&gt; 파일이나 디렉토리에 대한 &lt;code&gt;Existing&lt;/code&gt; 심볼릭 링크 (대부분의 유닉스 시스템과 윈도우 비스타로 시작하는)을 지원하는 플랫폼을. &lt;code&gt;Existing&lt;/code&gt; 이 존재할 필요는 없습니다. 반환 &lt;code&gt;ok&lt;/code&gt; 링크가 성공적으로 생성되는 경우는 true, 그렇지 않은 경우는 &lt;code&gt;{error, Reason}&lt;/code&gt; . 기호 링크를 지원하지 않는 플랫폼에서는 &lt;code&gt;{error, enotsup}&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="0836b339ca7921d4e52788f773049b5e4a6d650a" translate="yes" xml:space="preserve">
          <source>Creates a symbolic link pointing to &lt;code&gt;Target&lt;/code&gt; with the name &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">이름이 &lt;code&gt;Name&lt;/code&gt; 인 &lt;code&gt;Target&lt;/code&gt; 을 가리키는 심볼릭 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3fc40f9bba218d354eac56479f94caa5904544eb" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree corresponding to an Erlang term. &lt;code&gt;Term&lt;/code&gt; must be a literal term, i.e., one that can be represented as a source code literal. Thus, it may not contain a process identifier, port, reference, binary or function value as a subterm.</source>
          <target state="translated">Erlang 용어에 해당하는 구문 트리를 만듭니다. &lt;code&gt;Term&lt;/code&gt; 는 리터럴 용어, 즉 소스 코드 리터럴로 표현할 수있는 용어 여야합니다. 따라서 프로세스 식별자, 포트, 참조, 이진 또는 함수 값을 하위 용어로 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eb896b4900e317ace8a010d364131f02017b3144" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given annotations, type and subtrees. See &lt;code&gt;make_tree/2&lt;/code&gt; for details.</source>
          <target state="translated">주어진 주석, 유형 및 하위 트리를 사용하여 구문 트리를 만듭니다. 자세한 내용은 &lt;code&gt;make_tree/2&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ebe77a6907349c876e761fc8d819b0edd3180411" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given subtrees, and the same type and annotations as the &lt;code&gt;Old&lt;/code&gt; node. This is equivalent to &lt;code&gt;ann_make_tree(get_ann(Node), type(Node), Groups)&lt;/code&gt;, but potentially more efficient.</source>
          <target state="translated">주어진 하위 트리와 &lt;code&gt;Old&lt;/code&gt; 노드 와 동일한 유형 및 주석을 사용하여 구문 트리를 만듭니다 . 이것은 &lt;code&gt;ann_make_tree(get_ann(Node), type(Node), Groups)&lt;/code&gt; 와 동일하지만 잠재적으로 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="10ac1d68623c6bff8dcc74c234a0bb3a8d8b9df0" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given type and subtrees, and the same annotations as the &lt;code&gt;Old&lt;/code&gt; node. This is equivalent to &lt;code&gt;ann_make_tree(get_ann(Node), Type, Groups)&lt;/code&gt;, but potentially more efficient.</source>
          <target state="translated">지정된 유형 및 하위 트리, &lt;code&gt;Old&lt;/code&gt; 노드 와 동일한 주석을 사용하여 구문 트리를 만듭니다 . 이것은 &lt;code&gt;ann_make_tree(get_ann(Node), Type, Groups)&lt;/code&gt; 와 동일하지만 잠재적으로 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="689494f6a28f963f4e70af912bc0659fd87e9500" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given type and subtrees. &lt;code&gt;Type&lt;/code&gt; must be a node type name (cf. &lt;code&gt;type/1&lt;/code&gt;) that does not denote a leaf node type (cf. &lt;code&gt;is_leaf/1&lt;/code&gt;). &lt;code&gt;Groups&lt;/code&gt; must be a &lt;strong&gt;nonempty&lt;/strong&gt; list of groups of syntax trees, representing the subtrees of a node of the given type, in left-to-right order as they would occur in the printed program text, grouped by category as done by &lt;code&gt;subtrees/1&lt;/code&gt;.</source>
          <target state="translated">지정된 유형 및 하위 트리를 사용하여 구문 트리를 만듭니다. &lt;code&gt;Type&lt;/code&gt; 은 리프 노드 유형을 나타내지 않는 노드 유형 이름 (cf. &lt;code&gt;type/1&lt;/code&gt; ) &lt;code&gt;is_leaf/1&lt;/code&gt; 합니다 (cf. is_leaf / 1 ). &lt;code&gt;Groups&lt;/code&gt; 은 주어진 유형의 노드의 하위 트리를 나타내는 구문 트리 그룹의 &lt;strong&gt;비어 있지 않은&lt;/strong&gt; 목록 이어야하며 , 인쇄 된 프로그램 텍스트에서 발생하는 왼쪽에서 오른쪽 순서로 &lt;code&gt;subtrees/1&lt;/code&gt; 에 의해 수행 된대로 범주별로 그룹화됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e07908b54f7fe73a277ef1e2a6412c62aa1cd6c" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the given type and subtrees. &lt;code&gt;Type&lt;/code&gt; must be a node type name (see &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt;) that does not denote a leaf node type (see &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt;). &lt;code&gt;Groups&lt;/code&gt; must be a &lt;strong&gt;nonempty&lt;/strong&gt; list of groups of syntax trees, representing the subtrees of a node of the given type, in left-to-right order as they would occur in the printed program text, grouped by category as done by &lt;code&gt;&lt;a href=&quot;#subtrees-1&quot;&gt;subtrees/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 타입과 서브 트리로 구문 트리를 생성합니다. &lt;code&gt;Type&lt;/code&gt; 은 리프 노드 유형을 나타내지 않는 노드 유형 이름 ( &lt;code&gt;&lt;a href=&quot;#type-1&quot;&gt;type/1&lt;/a&gt;&lt;/code&gt; 참조) &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt; 합니다 ( is_leaf / 1 참조 ). &lt;code&gt;Groups&lt;/code&gt; 은 주어진 유형의 노드의 서브 트리를 왼쪽에서 오른쪽으로 표시하는 &lt;code&gt;&lt;a href=&quot;#subtrees-1&quot;&gt;subtrees/1&lt;/a&gt;&lt;/code&gt; 에 의해 카테고리별로 그룹화 된 인쇄 된 프로그램 텍스트에서 왼쪽에서 오른쪽으로 표현되는 구문 트리 그룹의 &lt;strong&gt;비어 있지 않은&lt;/strong&gt; 목록 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="07e0659b98aa3b0aa10cd14e752014ee10bdc65b" translate="yes" xml:space="preserve">
          <source>Creates a syntax tree with the same type and attributes as the given tree. This is equivalent to &lt;code&gt;copy_attrs(Node, make_tree(type(Node), Groups))&lt;/code&gt;.</source>
          <target state="translated">주어진 트리와 유형 및 속성이 같은 구문 트리를 작성합니다. 이것은 &lt;code&gt;copy_attrs(Node, make_tree(type(Node), Groups))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7195dd92664f36741bfa7be572d1cc2463e69293" translate="yes" xml:space="preserve">
          <source>Creates a table. If the table already exist, the old copy is destroyed.</source>
          <target state="translated">테이블을 만듭니다. 테이블이 이미 존재하면 이전 사본이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="9bf20ede78e7852e571d76efe17e542fb83c6c6a" translate="yes" xml:space="preserve">
          <source>Creates a tar file and archives the files whose names are specified in &lt;code&gt;FileList&lt;/code&gt; into it. The files can either be read from disk or be specified as binaries.</source>
          <target state="translated">tar 파일을 작성하고 &lt;code&gt;FileList&lt;/code&gt; 에 이름이 지정된 파일을 파일로 아카이브 합니다. 파일을 디스크에서 읽거나 바이너리로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="579a6ea59d9b071fec8a873736fe9ef4041b22e5" translate="yes" xml:space="preserve">
          <source>Creates a tar file for writing (any existing file with the same name is truncated).</source>
          <target state="translated">쓸 tar 파일을 작성합니다 (같은 이름의 기존 파일이 잘립니다).</target>
        </trans-unit>
        <trans-unit id="f0f0cfeaa53efda6c741bd1f1a69f63974ec131d" translate="yes" xml:space="preserve">
          <source>Creates a term identifying the given monitor received from &lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_monitor_process&quot;&gt;enif_monitor_process &lt;/a&gt;&lt;/code&gt; 에서받은 주어진 모니터를 식별하는 용어를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5635e00e7f72e993e0cad1b9222de14aee0dbc71" translate="yes" xml:space="preserve">
          <source>Creates a term that is the result of decoding the binary data at &lt;code&gt;data&lt;/code&gt;, which must be encoded according to the Erlang external term format. No more than &lt;code&gt;size&lt;/code&gt; bytes are read from &lt;code&gt;data&lt;/code&gt;. Argument &lt;code&gt;opts&lt;/code&gt; corresponds to the second argument to &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt; erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; and must be either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt;.</source>
          <target state="translated">이진 데이터의 복호화 결과 생성 기간 &lt;code&gt;data&lt;/code&gt; 얼랑 외부 용어 포맷에 따라 인코딩되어야한다. &lt;code&gt;data&lt;/code&gt; 에서 &lt;code&gt;size&lt;/code&gt; 바이트 이상 을 읽지 않습니다 . 인수 &lt;code&gt;opts&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt; erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; 의 두 번째 인수에 해당 하며 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt; 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="7d434dbfde7e4d2e8d62d4dd945feed28f504839" translate="yes" xml:space="preserve">
          <source>Creates a term that is the result of decoding the binary data at &lt;code&gt;data&lt;/code&gt;, which must be encoded according to the Erlang external term format. No more than &lt;code&gt;size&lt;/code&gt; bytes are read from &lt;code&gt;data&lt;/code&gt;. Argument &lt;code&gt;opts&lt;/code&gt; corresponds to the second argument to &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt;erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; and must be either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt;.</source>
          <target state="translated">이진 데이터의 복호화 결과 생성 기간 &lt;code&gt;data&lt;/code&gt; 얼랑 외부 용어 포맷에 따라 인코딩되어야한다. &lt;code&gt;data&lt;/code&gt; 에서 &lt;code&gt;size&lt;/code&gt; 바이트 이상 을 읽지 않습니다 . 인수 &lt;code&gt;opts&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;erlang#binary_to_term-2&quot;&gt;erlang:binary_to_term/2&lt;/a&gt;&lt;/code&gt; 의 두 번째 인수에 해당 하며 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;ERL_NIF_BIN2TERM_SAFE&lt;/code&gt; 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="8e00dc22c6777e1bb38d18ce1a12473a3573c031" translate="yes" xml:space="preserve">
          <source>Creates a thread-specific data key.</source>
          <target state="translated">스레드 별 데이터 키를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f15a7ddbbda2089c68ae4ec3b71c3141567010b8" translate="yes" xml:space="preserve">
          <source>Creates a tuple containing the elements of array &lt;code&gt;arr&lt;/code&gt; of length &lt;code&gt;cnt&lt;/code&gt;.</source>
          <target state="translated">길이 &lt;code&gt;cnt&lt;/code&gt; 의 배열 &lt;code&gt;arr&lt;/code&gt; 요소를 포함하는 튜플을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="3e5410565ec30b2edfa2affc70222b904afaa490" translate="yes" xml:space="preserve">
          <source>Creates a tuple of size &lt;code&gt;Arity&lt;/code&gt;, where each element has value &lt;code&gt;DefaultValue&lt;/code&gt;, and then fills in values from &lt;code&gt;InitList&lt;/code&gt;. Each list element in &lt;code&gt;InitList&lt;/code&gt; must be a two-tuple, where the first element is a position in the newly created tuple and the second element is any term. If a position occurs more than once in the list, the term corresponding to the last occurrence is used. Example:</source>
          <target state="translated">각 요소에 &lt;code&gt;DefaultValue&lt;/code&gt; 값이있는 &lt;code&gt;Arity&lt;/code&gt; 크기의 튜플을 만든 다음 &lt;code&gt;InitList&lt;/code&gt; 의 값을 채 웁니다 . &lt;code&gt;InitList&lt;/code&gt; 의 각 목록 요소 는 두 개의 튜플이어야합니다. 첫 번째 요소는 새로 작성된 튜플의 위치이고 두 번째 요소는 임의의 용어입니다. 목록에서 위치가 두 번 이상 나타나면 마지막 항목에 해당하는 용어가 사용됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="e50392cd62d058868f4cdefae43496785814cb07" translate="yes" xml:space="preserve">
          <source>Creates a tuple term of arity &lt;code&gt;cnt&lt;/code&gt;. Expects &lt;code&gt;cnt&lt;/code&gt; number of arguments (after &lt;code&gt;cnt&lt;/code&gt;) of type &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; as the elements of the tuple.</source>
          <target state="translated">arity &lt;code&gt;cnt&lt;/code&gt; 의 튜플 항을 작성 합니다. 예상 &lt;code&gt;cnt&lt;/code&gt; (인자 후 수 &lt;code&gt;cnt&lt;/code&gt; 형의) &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; 튜플의 요소로한다.</target>
        </trans-unit>
        <trans-unit id="f2b2ddd6342ac2699535f633b0efbdd8e35fd3b5" translate="yes" xml:space="preserve">
          <source>Creates a tuple term with length indicated by the function name. Prefer these functions (macros) over the variadic &lt;code&gt;enif_make_tuple&lt;/code&gt; to get a compile-time error if the number of arguments does not match.</source>
          <target state="translated">함수 이름으로 표시된 길이의 튜플 항을 작성합니다. 인수 개수가 일치하지 않는 경우 컴파일 타임 오류가 발생 하도록 가변성 &lt;code&gt;enif_make_tuple&lt;/code&gt; 보다 이러한 함수 (매크로)를 선호하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3f1da2cdf6f6cef3399dce63667d84270e36980" translate="yes" xml:space="preserve">
          <source>Creates a zip archive containing the files specified in &lt;code&gt;FileList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileList&lt;/code&gt; 에 지정된 파일을 포함하는 zip 아카이브를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="a8f74f70e344babf0c4d619e89e05255ddfecd89" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;set(L,&amp;nbsp;T)&lt;/code&gt; is equivalent to &lt;code&gt;from_term(L,&amp;nbsp;T)&lt;/code&gt;, if the result is an unordered set. If no &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; is explicitly specified, &lt;code&gt;[atom]&lt;/code&gt; is used as the set type.</source>
          <target state="translated">작성 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; . 결과가 정렬되지 않은 세트 인 경우 &lt;code&gt;set(L,&amp;nbsp;T)&lt;/code&gt; 는 &lt;code&gt;from_term(L,&amp;nbsp;T)&lt;/code&gt; 와 같습니다 . &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; 을 명시 적으로 지정 하지 않으면 &lt;code&gt;[atom]&lt;/code&gt; 이 설정 유형으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fcb7599f16aa40dddb835fd23c40042a3b270afa" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; with a given name. The default &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;functions&lt;/code&gt;. Options that are not recognized by Xref are passed on to &lt;code&gt;gen_server:start/4&lt;/code&gt;.</source>
          <target state="translated">지정된 이름으로 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 를 작성합니다. 기본 &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;functions&lt;/code&gt; 입니다. Xref가 인식하지 못하는 옵션은 &lt;code&gt;gen_server:start/4&lt;/code&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="d47f820e9d90fb5c7944ddecf5e94c713525d84e" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The process may optionally be given a name. The default &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;functions&lt;/code&gt;. Options that are not recognized by Xref are passed on to &lt;code&gt;gen_server:start/4&lt;/code&gt;.</source>
          <target state="translated">작성 &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; . 프로세스 이름을 지정할 수도 있습니다. 기본 &lt;code&gt;&lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;functions&lt;/code&gt; 입니다. Xref가 인식하지 못하는 옵션은 &lt;code&gt;gen_server:start/4&lt;/code&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="583b48168151c4ec4de9502e657094cb5cab09e5" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; compliant &lt;code&gt;URIString&lt;/code&gt; (percent-encoded), based on the components of &lt;code&gt;URIMap&lt;/code&gt;. If the &lt;code&gt;URIMap&lt;/code&gt; is invalid, an error tuple is returned.</source>
          <target state="translated">작성 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; 호환 &lt;code&gt;URIString&lt;/code&gt; 의 성분에 기초하여 (퍼센트 인코딩) &lt;code&gt;URIMap&lt;/code&gt; 를 . &lt;code&gt;URIMap&lt;/code&gt; 이 유효하지 않으면 오류 튜플이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="63153686d4bc0db7f060834fd1f87c6115bc7792" translate="yes" xml:space="preserve">
          <source>Creates an Erlang float.</source>
          <target state="translated">얼랭 플로트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4f978ee5509e98cf55c3115895bd200b1566d0fc" translate="yes" xml:space="preserve">
          <source>Creates an Erlang integer.</source>
          <target state="translated">Erlang 정수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="191483ffcc7600c4fcae1ed92d90d497767e75d2" translate="yes" xml:space="preserve">
          <source>Creates an Erlang list from an array of Erlang terms, such that each element in the list corresponds to one element in the array.</source>
          <target state="translated">Erlang 용어 배열에서 Erlang 목록을 작성하여 목록의 각 요소가 배열의 한 요소에 해당하도록합니다.</target>
        </trans-unit>
        <trans-unit id="4b2299f3fba082d9169f6ba903a5806fa73f9eb7" translate="yes" xml:space="preserve">
          <source>Creates an Erlang port identifier.</source>
          <target state="translated">Erlang 포트 식별자를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3c0ba93c1bd133e21c268a5b5839539dacaf6636" translate="yes" xml:space="preserve">
          <source>Creates an Erlang process identifier (pid). The resulting pid can be used by Erlang processes wishing to communicate with the C-node.</source>
          <target state="translated">Erlang 프로세스 식별자 (pid)를 만듭니다. 결과 pid는 C 노드와 통신하려는 Erlang 프로세스에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2776c21bd7ba9cb8b5e4e8cb0876d08a4b49aaa1" translate="yes" xml:space="preserve">
          <source>Creates an Erlang reference, with 82 bits.</source>
          <target state="translated">82 비트의 Erlang 참조를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="df7d735bf27fec1303042780f07aef91cbdd7ddc" translate="yes" xml:space="preserve">
          <source>Creates an Erlang tuple from an array of Erlang terms.</source>
          <target state="translated">Erlang 용어 배열에서 Erlang 튜플을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="efed25071848e0d88e4c3fbd67b9e2cffce5206e" translate="yes" xml:space="preserve">
          <source>Creates an Erlang unsigned integer.</source>
          <target state="translated">Erlang 부호없는 정수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="473f1063dff110a5559d8049419ebc8b2cb96bef" translate="yes" xml:space="preserve">
          <source>Creates an MD5 context, to be used in the following calls to &lt;code&gt;md5_update/2&lt;/code&gt;.</source>
          <target state="translated">다음 &lt;code&gt;md5_update/2&lt;/code&gt; 호출에 사용될 MD5 컨텍스트를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="d8eb2a44f5539cd2ca41d1f973d2f0864f1fff06" translate="yes" xml:space="preserve">
          <source>Creates an SCTP socket and binds it to the local addresses specified by all &lt;code&gt;{ip,IP}&lt;/code&gt; (or synonymously &lt;code&gt;{ifaddr,IP}&lt;/code&gt;) options (this feature is called SCTP multi-homing). The default &lt;code&gt;IP&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt; are &lt;code&gt;any&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;, meaning bind to all local addresses on any free port.</source>
          <target state="translated">SCTP 소켓을 작성하고 모든 &lt;code&gt;{ip,IP}&lt;/code&gt; (또는 동의어 &lt;code&gt;{ifaddr,IP}&lt;/code&gt; ) 옵션 (이 기능을 SCTP 멀티 호밍이라고 함)으로 지정된 로컬 주소에 바인딩합니다 . 기본 &lt;code&gt;IP&lt;/code&gt; 및 &lt;code&gt;Port&lt;/code&gt; 는 &lt;code&gt;any&lt;/code&gt; 및 &lt;code&gt;0&lt;/code&gt; 이며 사용 가능한 포트의 모든 로컬 주소에 바인드됩니다.</target>
        </trans-unit>
        <trans-unit id="da7b5a33db5696669dd9b21257123de8073c2a38" translate="yes" xml:space="preserve">
          <source>Creates an SSL listen socket.</source>
          <target state="translated">SSL 청취 소켓을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="084420eef5bf85128d4ce8ba812eb269a1127451" translate="yes" xml:space="preserve">
          <source>Creates an abstract &quot;implicit fun&quot; expression. If &lt;code&gt;Arity&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is equivalent to &lt;code&gt;implicit_fun(Name)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;implicit_fun(arity_qualifier(Name, Arity))&lt;/code&gt;.</source>
          <target state="translated">추상적 &quot;암시 적 재미&quot;표현을 만듭니다. &lt;code&gt;Arity&lt;/code&gt; 가 &lt;code&gt;none&lt;/code&gt; 인 경우 &lt;code&gt;implicit_fun(Name)&lt;/code&gt; 과 같으며, 그렇지 않으면 &lt;code&gt;implicit_fun(arity_qualifier(Name, Arity))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7c1e44e24ff54f7bb9db92ed78b13712f1437d1" translate="yes" xml:space="preserve">
          <source>Creates an abstract &quot;implicit fun&quot; expression. The result represents &quot;&lt;code&gt;fun Name&lt;/code&gt;&quot;. &lt;code&gt;Name&lt;/code&gt; should represent either &lt;code&gt;F/A&lt;/code&gt; or &lt;code&gt;M:F/A&lt;/code&gt;</source>
          <target state="translated">추상적 &quot;암시 적 재미&quot;표현을 만듭니다. 결과는 &quot; &lt;code&gt;fun Name&lt;/code&gt; &quot;을 나타냅니다 . &lt;code&gt;Name&lt;/code&gt; 은 &lt;code&gt;F/A&lt;/code&gt; 또는 &lt;code&gt;M:F/A&lt;/code&gt; 를 나타내야합니다 .</target>
        </trans-unit>
        <trans-unit id="835626171d6cd772dd4d48436c4f222f610d7e5c" translate="yes" xml:space="preserve">
          <source>Creates an abstract (subtype) constraint. The result represents &quot;&lt;code&gt;Name :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 (하위 유형) 제약 조건을 만듭니다. 결과는 &quot; &lt;code&gt;Name :: Type&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="dafffec769cb5790590e7cb2f6b5bf77de3225a1" translate="yes" xml:space="preserve">
          <source>Creates an abstract annotated type expression. The result represents &quot;&lt;code&gt;Name :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 주석이 달린 유형 표현식을 작성합니다. 결과는 &quot; &lt;code&gt;Name :: Type&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="12e04945628dedccb1a13a15b05997f7d2f8bbb0" translate="yes" xml:space="preserve">
          <source>Creates an abstract arity qualifier. The result represents &quot;&lt;code&gt;Body/Arity&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 arity 한정자를 만듭니다. 결과는 &quot; &lt;code&gt;Body/Arity&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6c8fba064ff6303bfe2e9aad18f9badac729e788" translate="yes" xml:space="preserve">
          <source>Creates an abstract atom literal. The print name of the atom is the character sequence represented by &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">추상 원자 리터럴을 만듭니다. 아톰의 인쇄 이름은 &lt;code&gt;Name&lt;/code&gt; 으로 표시되는 문자 순서 입니다.</target>
        </trans-unit>
        <trans-unit id="ea457b10e6abbbc6a4a432001072f5e41532d315" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary comprehension. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;&amp;lt;Template || E1, ..., En&amp;gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 이진 이해를 만듭니다. 경우 &lt;code&gt;Body&lt;/code&gt; 인 &lt;code&gt;[E1, ..., En]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;&amp;lt;&amp;lt;Template || E1, ..., En&amp;gt;&amp;gt;&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="0569b531dfcd6e93b5cb428a974558352428e1e9" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary template field. If &lt;code&gt;Size&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is equivalent to &quot;&lt;code&gt;binary_field(Body, Types)&lt;/code&gt;&quot;, otherwise it is equivalent to &quot;&lt;code&gt;binary_field(size_qualifier(Body, Size), Types)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 이진 템플릿 필드를 만듭니다. 경우 &lt;code&gt;Size&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; , 이것은 &quot;에 해당 &lt;code&gt;binary_field(Body, Types)&lt;/code&gt; 그렇지 않으면&quot;에 해당 &quot; &lt;code&gt;binary_field(size_qualifier(Body, Size), Types)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="babf65b247cc883d815ca63ddcf8ca4c9eef934a" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary template field. If &lt;code&gt;Types&lt;/code&gt; is the empty list, the result simply represents &quot;&lt;code&gt;Body&lt;/code&gt;&quot;, otherwise, if &lt;code&gt;Types&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;Body/T1-...-Tn&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 이진 템플릿 필드를 만듭니다. 경우 &lt;code&gt;Types&lt;/code&gt; 빈 목록입니다, 결과는 단순히 &quot;을 나타냅니다 &lt;code&gt;Body&lt;/code&gt; 경우는 true, 그렇지 않은 경우는,&quot; &lt;code&gt;Types&lt;/code&gt; 이다 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;Body/T1-...-Tn&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="17b4f371f7a9d93e40933428d9d92d0e88afc990" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary-object template. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;&amp;lt;F1, ..., Fn&amp;gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 이진 개체 템플릿을 만듭니다. 경우 &lt;code&gt;Fields&lt;/code&gt; 있다 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;&amp;lt;&amp;lt;F1, ..., Fn&amp;gt;&amp;gt;&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="f521788daee45400ab2ec6983542d99a8ad23656" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary-template. A binary object is in this context a sequence of an arbitrary number of bits. (The number of bits used to be evenly divisible by 8, but after the introduction of bit strings in the Erlang language, the choice was made to use the binary template for all bit strings.) It is specified by zero or more bit-string template &lt;strong&gt;segments&lt;/strong&gt; of arbitrary lengths (in number of bits). If &lt;code&gt;Segments&lt;/code&gt; is &lt;code&gt;[S1, ..., Sn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;#{S1, ..., Sn}#&lt;/code&gt;&quot;. All the &lt;code&gt;Si&lt;/code&gt; must have type &lt;code&gt;bitstr&lt;/code&gt;.</source>
          <target state="translated">추상 바이너리 템플릿을 만듭니다. 이 컨텍스트에서 바이너리 객체는 임의의 비트 수의 시퀀스입니다. (예전에는 비트 수를 8로 균등하게 나눌 수 있었지만 Erlang 언어에 비트 문자열이 도입 된 후 모든 비트 문자열에 이진 템플릿을 사용하도록 선택되었습니다.) 0 개 이상의 비트 문자열로 지정됩니다. 임의 길이의 템플릿 &lt;strong&gt;세그먼트&lt;/strong&gt; (비트 수). 경우 &lt;code&gt;Segments&lt;/code&gt; 이다 &lt;code&gt;[S1, ..., Sn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;#{S1, ..., Sn}#&lt;/code&gt; &quot;. 모든 &lt;code&gt;Si&lt;/code&gt; 에는 &lt;code&gt;bitstr&lt;/code&gt; 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2b07cc9ca8ad0b6e88f6616ceef053c6d205f0bf" translate="yes" xml:space="preserve">
          <source>Creates an abstract binary_generator. The result represents &quot;&lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 binary_generator를 만듭니다. 결과는 &quot; &lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="42124f2d5db288ba0b5a345ef938641a63e59915" translate="yes" xml:space="preserve">
          <source>Creates an abstract bit-string template. These can only occur as components of an abstract binary-template (see &lt;code&gt;&lt;a href=&quot;#c_binary-1&quot;&gt;c_binary/1&lt;/a&gt;&lt;/code&gt;). The result represents &quot;&lt;code&gt;#&amp;lt;Value&amp;gt;(Size, Unit, Type, Flags)&lt;/code&gt;&quot;, where &lt;code&gt;Unit&lt;/code&gt; must represent a positive integer constant, &lt;code&gt;Type&lt;/code&gt; must represent a constant atom (one of &lt;code&gt;'integer'&lt;/code&gt;, &lt;code&gt;'float'&lt;/code&gt;, or &lt;code&gt;'binary'&lt;/code&gt;), and &lt;code&gt;Flags&lt;/code&gt; must represent a constant list &lt;code&gt;&quot;[F1, ..., Fn]&quot;&lt;/code&gt; where all the &lt;code&gt;Fi&lt;/code&gt; are atoms.</source>
          <target state="translated">추상 비트 문자열 템플릿을 만듭니다. 이는 추상 바이너리 템플릿의 구성 요소로만 발생할 수 있습니다 ( &lt;code&gt;&lt;a href=&quot;#c_binary-1&quot;&gt;c_binary/1&lt;/a&gt;&lt;/code&gt; 참조 ). 결과는 &quot;대표 &lt;code&gt;#&amp;lt;Value&amp;gt;(Size, Unit, Type, Flags)&lt;/code&gt; &quot;, &lt;code&gt;Unit&lt;/code&gt; 양의 정수 상수를 표시해야, &lt;code&gt;Type&lt;/code&gt; (중 하나 일정한 원자한다 &lt;code&gt;'integer'&lt;/code&gt; , &lt;code&gt;'float'&lt;/code&gt; , 또는 &lt;code&gt;'binary'&lt;/code&gt; ) , 및 &lt;code&gt;Flags&lt;/code&gt; 는 모든 &lt;code&gt;Fi&lt;/code&gt; 가 원자 인 상수 목록 &lt;code&gt;&quot;[F1, ..., Fn]&quot;&lt;/code&gt; 나타내야합니다 .</target>
        </trans-unit>
        <trans-unit id="7e53f415c83f50d9fe8c723dcec74e52f5dfab96" translate="yes" xml:space="preserve">
          <source>Creates an abstract bitstring type. The result represents &quot;&lt;code&gt;&amp;lt;&amp;lt;_:M, _:_*N&amp;gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 비트 열 유형을 만듭니다. 결과는 &quot; &lt;code&gt;&amp;lt;&amp;lt;_:M, _:_*N&amp;gt;&amp;gt;&lt;/code&gt; &quot;을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c50511f1e02a5e24191b00c95aa6bc7f755fa017" translate="yes" xml:space="preserve">
          <source>Creates an abstract block expression. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[B1, ..., Bn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;begin B1, ..., Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 블록 표현식을 작성합니다. 경우 &lt;code&gt;Body&lt;/code&gt; 이다 &lt;code&gt;[B1, ..., Bn]&lt;/code&gt; , 결과는 &quot;나타내며 &lt;code&gt;begin B1, ..., Bn end&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="6aabfcec58137ab5938034a41442e825f1f1cbff" translate="yes" xml:space="preserve">
          <source>Creates an abstract case-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;case Argument of C1 ... Cn end&lt;/code&gt;&quot;. &lt;code&gt;Clauses&lt;/code&gt; must not be empty.</source>
          <target state="translated">추상 대소 문자 표현을 만듭니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;case Argument of C1 ... Cn end&lt;/code&gt; &quot;. &lt;code&gt;Clauses&lt;/code&gt; 은 비워 둘 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9aad8d999a0ec5a66d3d5fb014e08bd4f893bd46" translate="yes" xml:space="preserve">
          <source>Creates an abstract case-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;case Argument of C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;case Argument of P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 대소 문자 표현을 만듭니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;나타내고 &lt;code&gt;case Argument of C1; ...; Cn end&lt;/code&gt; &quot;를. 보다 정확하게, 각각의 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt; &quot;를 나타내는 &lt;code&gt;case Argument of P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn end&lt;/code&gt; , 결과는 &quot; case Argument of P1 G1-&amp;gt; B1; ...; Pn Gn-&amp;gt; Bn end &quot;를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="a5eb7728ad56ba1c31c330c0429d95749a10ff7c" translate="yes" xml:space="preserve">
          <source>Creates an abstract catch-expression. The result represents &quot;&lt;code&gt;catch Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 catch-expression을 만듭니다. 결과는 &quot; &lt;code&gt;catch Body&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e676e8493acde1b3137b39b086f6394152ca6a6c" translate="yes" xml:space="preserve">
          <source>Creates an abstract catch-expression. The result represents &quot;&lt;code&gt;catch Expr&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 catch-expression을 작성합니다. 결과는 &quot; &lt;code&gt;catch Expr&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c58e3a291028f2d62c60b0107e30c3ccf05b5801" translate="yes" xml:space="preserve">
          <source>Creates an abstract character literal. If the local implementation of Erlang defines &lt;code&gt;char()&lt;/code&gt; as a subset of &lt;code&gt;integer()&lt;/code&gt;, this function is equivalent to &lt;code&gt;c_int/1&lt;/code&gt;. Otherwise, if the given value is an integer, it will be converted to the character with the corresponding code. The lexical representation of a character is &quot;&lt;code&gt;$Char&lt;/code&gt;&quot;, where &lt;code&gt;Char&lt;/code&gt; is a single printing character or an escape sequence.</source>
          <target state="translated">추상 문자 리터럴을 만듭니다. Erlang의 로컬 구현에서 &lt;code&gt;char()&lt;/code&gt; 을 &lt;code&gt;integer()&lt;/code&gt; 의 하위 집합으로 정의 하면이 함수는 &lt;code&gt;c_int/1&lt;/code&gt; 과 동일합니다 . 그렇지 않으면 주어진 값이 정수이면 해당 코드가있는 문자로 변환됩니다. 문자의 어휘 표현은 &quot; &lt;code&gt;$Char&lt;/code&gt; &quot;입니다. 여기서 &lt;code&gt;Char&lt;/code&gt; 는 단일 인쇄 문자 또는 이스케이프 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="207f4cfe984139f18e850a4fcaad70a3bcdb8001" translate="yes" xml:space="preserve">
          <source>Creates an abstract character literal. The result represents &quot;&lt;code&gt;$Name&lt;/code&gt;&quot;, where &lt;code&gt;Name&lt;/code&gt; corresponds to &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">추상 문자 리터럴을 만듭니다. 결과는 &quot; &lt;code&gt;$Name&lt;/code&gt; &quot;을 나타냅니다 . 여기서 &lt;code&gt;Name&lt;/code&gt; 은 &lt;code&gt;Value&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="4f833ef022432d8da1fe484b32c93e14857a41e8" translate="yes" xml:space="preserve">
          <source>Creates an abstract class qualifier. The result represents &quot;&lt;code&gt;Class:Body:Stacktrace&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 클래스 한정자를 만듭니다. 결과는 &quot; &lt;code&gt;Class:Body:Stacktrace&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="84bc02522e752e2d0cef9c061c5916e7db10cde2" translate="yes" xml:space="preserve">
          <source>Creates an abstract class qualifier. The result represents &quot;&lt;code&gt;Class:Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 클래스 한정자를 만듭니다. 결과는 &quot; &lt;code&gt;Class:Body&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="81034555579d8487c9fc20029ffcb0c28cef7c7a" translate="yes" xml:space="preserve">
          <source>Creates an abstract clause. If &lt;code&gt;Patterns&lt;/code&gt; is &lt;code&gt;[P1, ..., Pn]&lt;/code&gt; and &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[B1, ..., Bm]&lt;/code&gt;, then if &lt;code&gt;Guard&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;(P1, ..., Pn) -&amp;gt; B1, ..., Bm&lt;/code&gt;&quot;, otherwise, unless &lt;code&gt;Guard&lt;/code&gt; is a list, the result represents &quot;&lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 절을 만듭니다. 경우 &lt;code&gt;Patterns&lt;/code&gt; 인 &lt;code&gt;[P1, ..., Pn]&lt;/code&gt; 및 &lt;code&gt;Body&lt;/code&gt; 이다 &lt;code&gt;[B1, ..., Bm]&lt;/code&gt; 있다면, &lt;code&gt;Guard&lt;/code&gt; 없다 &lt;code&gt;none&lt;/code&gt; &quot;의 결과가 나타내는 &lt;code&gt;(P1, ..., Pn) -&amp;gt; B1, ..., Bm&lt;/code&gt; &quot;, 그렇지 않으면 &lt;code&gt;Guard&lt;/code&gt; 가 목록이 아닌 경우 &lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt; &quot; 일 때 결과는 &quot; (P1, ..., Pn)을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="66e368a140c34afb002b5b12cf7b9745c56e5a9c" translate="yes" xml:space="preserve">
          <source>Creates an abstract comment with the given padding and text. If &lt;code&gt;Strings&lt;/code&gt; is a (possibly empty) list &lt;code&gt;[&quot;Txt1&quot;, ..., &quot;TxtN&quot;]&lt;/code&gt;, the result represents the source code text</source>
          <target state="translated">주어진 패딩과 텍스트로 추상 주석을 만듭니다. 경우 &lt;code&gt;Strings&lt;/code&gt; (아마도 비어) 목록 &lt;code&gt;[&quot;Txt1&quot;, ..., &quot;TxtN&quot;]&lt;/code&gt; , 결과는 소스 코드의 텍스트를 나타냅니다</target>
        </trans-unit>
        <trans-unit id="e9201601d7bbdc657460d6a69c27b8f10006714e" translate="yes" xml:space="preserve">
          <source>Creates an abstract cond-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;cond C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;() Ei -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;cond E1 -&amp;gt; B1; ...; En -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">추상적 인 조건식을 작성합니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;cond C1; ...; Cn end&lt;/code&gt; &quot;. 보다 정확하게, 각각의 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;() Ei -&amp;gt; Bi&lt;/code&gt; &quot;를 나타내는 경우, 결과는 &quot; &lt;code&gt;cond E1 -&amp;gt; B1; ...; En -&amp;gt; Bn end&lt;/code&gt; &quot;를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="18be81fbb275c2d2cd3bb6a3d29a5211080105eb" translate="yes" xml:space="preserve">
          <source>Creates an abstract conjunction. If &lt;code&gt;List&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;E1, ..., En&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 연결을 만듭니다. 경우 &lt;code&gt;List&lt;/code&gt; 이다 &lt;code&gt;[E1, ..., En]&lt;/code&gt; , 결과는 &quot;나타내고 &lt;code&gt;E1, ..., En&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="68812f150e4ce4bc8b605bfd733f04f83073fabf" translate="yes" xml:space="preserve">
          <source>Creates an abstract constrained function type. If &lt;code&gt;FunctionConstraint&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;FunctionType when C1, ...Cn&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 구속 함수 유형을 작성합니다. 경우 &lt;code&gt;FunctionConstraint&lt;/code&gt; 가 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;FunctionType when C1, ...Cn&lt;/code&gt; &quot;한다.</target>
        </trans-unit>
        <trans-unit id="ef7c9dd12ba2a241f4b1592d340c378a367dee37" translate="yes" xml:space="preserve">
          <source>Creates an abstract disjunction. If &lt;code&gt;List&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;E1; ...; En&lt;/code&gt;&quot;.</source>
          <target state="translated">추상적 분리를 만듭니다. 경우 &lt;code&gt;List&lt;/code&gt; 이다 &lt;code&gt;[E1, ..., En]&lt;/code&gt; , 결과는 &quot;나타내고 &lt;code&gt;E1; ...; En&lt;/code&gt; &quot;을.</target>
        </trans-unit>
        <trans-unit id="891769788cc873e1ee9f54ee8a786d8512fae68c" translate="yes" xml:space="preserve">
          <source>Creates an abstract document layout for a syntax tree. The result represents a set of possible layouts (cf. module &lt;code&gt;prettypr&lt;/code&gt;). For information on the options, see &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt;; note, however, that the &lt;code&gt;paper&lt;/code&gt; and &lt;code&gt;ribbon&lt;/code&gt; options are ignored by this function.</source>
          <target state="translated">구문 트리에 대한 추상 문서 레이아웃을 만듭니다. 결과는 가능한 레이아웃 세트를 나타냅니다 (모듈 &lt;code&gt;prettypr&lt;/code&gt; 참조 ). 옵션에 대한 정보는 &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt; ; 그러나이 기능에서는 &lt;code&gt;paper&lt;/code&gt; 및 &lt;code&gt;ribbon&lt;/code&gt; 옵션이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="49f9d829cba60f3565f71542c299979cdce5e112" translate="yes" xml:space="preserve">
          <source>Creates an abstract empty list. The result represents &quot;&lt;code&gt;[]&lt;/code&gt;&quot;. The empty list is traditionally called &quot;nil&quot;.</source>
          <target state="translated">추상 빈 목록을 만듭니다. 결과는 &quot; &lt;code&gt;[]&lt;/code&gt; &quot;를 나타냅니다 . 빈 목록은 전통적으로 &quot;nil&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="65f712d88bd6b7406826dcf8cef508883dc77900" translate="yes" xml:space="preserve">
          <source>Creates an abstract end-of-file marker. This represents the end of input when reading a sequence of source code forms. An end-of-file marker is itself regarded as a source code form (namely, the last in any sequence in which it occurs). It has no defined lexical form.</source>
          <target state="translated">추상 파일 끝 마커를 만듭니다. 소스 코드 형식의 시퀀스를 읽을 때 입력의 끝을 나타냅니다. 파일 끝 마커는 그 자체가 소스 코드 형식 (즉, 발생하는 순서의 마지막)으로 간주됩니다. 정의 된 어휘 형식이 없습니다.</target>
        </trans-unit>
        <trans-unit id="d4cb88d35368e0ecdf273be2a7fc9db5b385a2f8" translate="yes" xml:space="preserve">
          <source>Creates an abstract error marker. The result represents an occurrence of an error in the source code, with an associated Erlang I/O ErrorInfo structure given by &lt;code&gt;Error&lt;/code&gt; (see module &lt;code&gt;io(3)&lt;/code&gt; for details). Error markers are regarded as source code forms, but have no defined lexical form.</source>
          <target state="translated">추상 오류 마커를 만듭니다. 결과는 주어진 연관된 얼랑 I / O ERRORINFO 구조의 소스 코드에서 에러의 발생 나타내는 &lt;code&gt;Error&lt;/code&gt; (참조 모듈 &lt;code&gt;io(3)&lt;/code&gt; 자세한). 오류 마커는 소스 코드 형식으로 간주되지만 정의 된 어휘 형식은 없습니다.</target>
        </trans-unit>
        <trans-unit id="9c097d2adf5de6db2856bb87f4aa4ddb2bb12ab7" translate="yes" xml:space="preserve">
          <source>Creates an abstract floating-point literal. The lexical representation is the decimal floating-point numeral of &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">추상 부동 소수점 리터럴을 만듭니다. 어휘 표현은 &lt;code&gt;Value&lt;/code&gt; 의 10 진수 부동 소수점 숫자입니다 .</target>
        </trans-unit>
        <trans-unit id="dffc1ad90d61c9c88a64c7db289aa11beee6ef41" translate="yes" xml:space="preserve">
          <source>Creates an abstract fun of any type. The result represents &quot;&lt;code&gt;fun()&lt;/code&gt;&quot;.</source>
          <target state="translated">모든 유형의 추상적 재미를 만듭니다. 결과는 &quot; &lt;code&gt;fun()&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="38be302ebc9ac43f32215cfd1f9a277279ec1d7d" translate="yes" xml:space="preserve">
          <source>Creates an abstract fun-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;fun C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;fun (P11, ..., P1m) G1 -&amp;gt; B1; ...; (Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">추상적 재미 표현을 만듭니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;fun C1; ...; Cn end&lt;/code&gt; &quot;. 보다 정확하게, 각 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt; &lt;code&gt;fun (P11, ..., P1m) G1 -&amp;gt; B1; ...; (Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt; &amp;gt; Bi &quot;를 나타내는 경우, 결과는 &quot; fun (P11, ..., P1m) G1-&amp;gt; B1; ...; (Pn1, ..., Pnm) Gn-&amp;gt; Bn 끝 &quot;.</target>
        </trans-unit>
        <trans-unit id="41da69e386b6502bc0c2dc763ce9b87bea7d440c" translate="yes" xml:space="preserve">
          <source>Creates an abstract fun-expression. If &lt;code&gt;Variables&lt;/code&gt; is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;fun (V1, ..., Vn) -&amp;gt; Body&lt;/code&gt;&quot;. All the &lt;code&gt;Vi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">추상적 인 재미 표현을 만듭니다. 경우 &lt;code&gt;Variables&lt;/code&gt; 입니다 &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;fun (V1, ..., Vn) -&amp;gt; Body&lt;/code&gt; &quot;. 모든 &lt;code&gt;Vi&lt;/code&gt; 에는 &lt;code&gt;var&lt;/code&gt; 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="aeb3add7a9bca476e6b43e52fa7922b59509c520" translate="yes" xml:space="preserve">
          <source>Creates an abstract function application expression. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;Operator(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 함수 애플리케이션 표현식을 작성합니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[A1, ..., An]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;Operator(A1, ..., An)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="9930fa6a0b55c0aa436a4173e201a457d331a460" translate="yes" xml:space="preserve">
          <source>Creates an abstract function application expression. If &lt;code&gt;Module&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is call is equivalent to &lt;code&gt;application(Function, Arguments)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;application(module_qualifier(Module, Function), Arguments)&lt;/code&gt;.</source>
          <target state="translated">추상 함수 애플리케이션 표현식을 작성합니다. 경우에 &lt;code&gt;Module&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; ,이 호출은 동등하다 &lt;code&gt;application(Function, Arguments)&lt;/code&gt; , 그렇지 않으면 동일하다, &lt;code&gt;application(module_qualifier(Module, Function), Arguments)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="167a3fab52a9312a9847c42aea31da50fe051191" translate="yes" xml:space="preserve">
          <source>Creates an abstract function application. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;apply Operator(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 함수 응용 프로그램을 만듭니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[A1, ..., An]&lt;/code&gt; 결과가 나타내는 &quot; &lt;code&gt;apply Operator(A1, ..., An)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="3f37e6998dc5e1764d8b7a058ea93c03472bdee2" translate="yes" xml:space="preserve">
          <source>Creates an abstract function definition. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;Name C1; ...; Name Cn.&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn.&lt;/code&gt;&quot;. Function definitions are source code forms.</source>
          <target state="translated">추상 함수 정의를 작성합니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;나타내고 &lt;code&gt;Name C1; ...; Name Cn.&lt;/code&gt; &quot;. 보다 정확하게, 각 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt; &lt;code&gt;Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn.&lt;/code&gt; &amp;gt; Bi &quot;를 나타내는 경우 결과는 &quot; Name (P11, ..., P1m) G1-&amp;gt; B1; ...; Name (Pn1 , ..., Pnm) Gn-&amp;gt; Bn. &quot;. 함수 정의는 소스 코드 형식입니다.</target>
        </trans-unit>
        <trans-unit id="dc2c8422546828287140eb9060211654f8399789" translate="yes" xml:space="preserve">
          <source>Creates an abstract function type. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, then if it occurs within a function specification, the result represents &quot;&lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt;&quot;; otherwise it represents &quot;&lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt;&quot;. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;any_arity&lt;/code&gt;, it represents &quot;&lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 함수 유형을 만듭니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; 는 함수 사양 내에서 발생하는 경우, 다음의 결과는 &quot;나타냄 &lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt; ;&quot; 그렇지 않으면 &quot; &lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt; &quot;을 나타냅니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 입니다 &lt;code&gt;any_arity&lt;/code&gt; , 그것이 표현하는 &quot; &lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="041d383752a274d8de433a68899114890ae51a00" translate="yes" xml:space="preserve">
          <source>Creates an abstract generator. The result represents &quot;&lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 생성기를 만듭니다. 결과는 &quot; &lt;code&gt;Pattern &amp;lt;- Body&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="82eb024c4b6985c500722f2a0e37c19377935ed5" translate="yes" xml:space="preserve">
          <source>Creates an abstract if-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;if C1; ...; Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;() Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;if G1 -&amp;gt; B1; ...; Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 if- 표현식을 만듭니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;나타내고 &lt;code&gt;if C1; ...; Cn end&lt;/code&gt; &quot;. 보다 정확하게 말하면, 각각의 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;() Gi -&amp;gt; Bi&lt;/code&gt; &quot;를 나타내는 &lt;code&gt;if G1 -&amp;gt; B1; ...; Gn -&amp;gt; Bn end&lt;/code&gt; , 결과는 &quot; G1-&amp;gt; B1; ...; Gn-&amp;gt; Bn end &quot;인 경우를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="e7a602aabae686c29caa74f9c1f3166738b04954" translate="yes" xml:space="preserve">
          <source>Creates an abstract infix operator expression. The result represents &quot;&lt;code&gt;Left Operator Right&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 접미사 연산자 식을 만듭니다. 결과는 &quot; &lt;code&gt;Left Operator Right&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d792abfd2e2e78ff8c79c91857e2bf3824e18163" translate="yes" xml:space="preserve">
          <source>Creates an abstract integer literal. The lexical representation is the canonical decimal numeral of &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">추상 정수 리터럴을 만듭니다. 어휘 표현은 &lt;code&gt;Value&lt;/code&gt; 의 표준 10 진수입니다 .</target>
        </trans-unit>
        <trans-unit id="f49dcd26ea98719db55c1b12e9b313415eecbfd1" translate="yes" xml:space="preserve">
          <source>Creates an abstract inter-module call. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;call Module:Name(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 모듈 간 호출을 만듭니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 입니다 &lt;code&gt;[A1, ..., An]&lt;/code&gt; , 결과가 나타내는 &quot; &lt;code&gt;call Module:Name(A1, ..., An)&lt;/code&gt; .&quot;</target>
        </trans-unit>
        <trans-unit id="30c0baad0fef48a44a9f19c293ffcbe04773bc8d" translate="yes" xml:space="preserve">
          <source>Creates an abstract let-expression. If &lt;code&gt;Variables&lt;/code&gt; is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;let &amp;lt;V1, ..., Vn&amp;gt; = Argument in Body&lt;/code&gt;&quot;. All the &lt;code&gt;Vi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">추상 let-expression을 만듭니다. 경우 &lt;code&gt;Variables&lt;/code&gt; 이다 &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; 결과가 나타내는 &quot; &lt;code&gt;let &amp;lt;V1, ..., Vn&amp;gt; = Argument in Body&lt;/code&gt; &quot;. 모든 &lt;code&gt;Vi&lt;/code&gt; 에는 &lt;code&gt;var&lt;/code&gt; 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7c8e0a520161fd353d059f6a1def19ce4bcc8717" translate="yes" xml:space="preserve">
          <source>Creates an abstract letrec-expression. If &lt;code&gt;Definitions&lt;/code&gt; is &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt;, the result represents &quot;&lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt;. All the &lt;code&gt;Vi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt; and represent function names. All the &lt;code&gt;Fi&lt;/code&gt; must have type &lt;code&gt;'fun'&lt;/code&gt;.</source>
          <target state="translated">추상 letrec-expression을 만듭니다. 경우에 &lt;code&gt;Definitions&lt;/code&gt; 있다 &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt; , 그 결과는 &quot;대표 &lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt; . 모든 &lt;code&gt;Vi&lt;/code&gt; 입력 있어야 &lt;code&gt;var&lt;/code&gt; 하고 기능 이름을 나타낸다. 모든 &lt;code&gt;Fi&lt;/code&gt; 에는 &lt;code&gt;'fun'&lt;/code&gt; 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e7fa57ca507a10ba5dc6835ed5313a0a540c355" translate="yes" xml:space="preserve">
          <source>Creates an abstract list comprehension. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;[Template || E1, ..., En]&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 목록 이해를 만듭니다. 경우 &lt;code&gt;Body&lt;/code&gt; 이다 &lt;code&gt;[E1, ..., En]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;[Template || E1, ..., En]&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="a8745b2fdde923052c4271190141750aff8fd473" translate="yes" xml:space="preserve">
          <source>Creates an abstract list constructor skeleton. Does not fold constant literals, i.e., the result always has type &lt;code&gt;cons&lt;/code&gt;, representing &quot;&lt;code&gt;[Head | Tail]&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 목록 생성자 골격을 만듭니다. 상수 리터럴을 접지 않습니다. 즉, 결과에는 항상 &quot; &lt;code&gt;[Head | Tail]&lt;/code&gt; &quot;을 나타내는 &lt;code&gt;cons&lt;/code&gt; 유형이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04c11bd87fe06f368572dfe1401681d8c1c7ae29" translate="yes" xml:space="preserve">
          <source>Creates an abstract list constructor. The result represents &quot;&lt;code&gt;[Head | Tail]&lt;/code&gt;&quot;. Note that if both &lt;code&gt;Head&lt;/code&gt; and &lt;code&gt;Tail&lt;/code&gt; have type &lt;code&gt;literal&lt;/code&gt;, then the result will also have type &lt;code&gt;literal&lt;/code&gt;, and annotations on &lt;code&gt;Head&lt;/code&gt; and &lt;code&gt;Tail&lt;/code&gt; are lost.</source>
          <target state="translated">추상 목록 생성자를 만듭니다. 결과는 &quot; &lt;code&gt;[Head | Tail]&lt;/code&gt; &quot;을 나타냅니다 . &lt;code&gt;Head&lt;/code&gt; 와 &lt;code&gt;Tail&lt;/code&gt; 에 모두 &lt;code&gt;literal&lt;/code&gt; 유형이 있는 경우 결과에도 &lt;code&gt;literal&lt;/code&gt; 유형이 있고 &lt;code&gt;Head&lt;/code&gt; 및 &lt;code&gt;Tail&lt;/code&gt; 의 주석 이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="256875db0dc8765061ddf506034961469a33bc4e" translate="yes" xml:space="preserve">
          <source>Creates an abstract list from the elements in &lt;code&gt;List&lt;/code&gt; and the optional &lt;code&gt;Tail&lt;/code&gt;. If &lt;code&gt;Tail&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result will represent a nil-terminated list, otherwise it represents &quot;&lt;code&gt;[... | Tail]&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 및 선택적 &lt;code&gt;Tail&lt;/code&gt; 의 요소에서 추상 목록을 만듭니다 . 경우 &lt;code&gt;Tail&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; , 결과는 그렇지 않으면 대표하는 무풍 종료 된리스트를 나타낼 것 &quot; &lt;code&gt;[... | Tail]&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="95e42fb2a1b45bfb5cf5dee763884dbb09a6e51b" translate="yes" xml:space="preserve">
          <source>Creates an abstract macro application. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;?Name&lt;/code&gt;&quot;, otherwise, if &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;?Name(A1, ..., An)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 매크로 응용 프로그램을 만듭니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; 그 결과는 &quot;대표 &lt;code&gt;?Name&lt;/code&gt; 경우, 그렇지 않으면,&quot; &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[A1, ..., An]&lt;/code&gt; 결과는 나타내고 &quot; &lt;code&gt;?Name(A1, ..., An)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="091726dc9460c97475a9026e131e6e9ec000d00d" translate="yes" xml:space="preserve">
          <source>Creates an abstract map assoc field. The result represents &quot;&lt;code&gt;Name =&amp;gt; Value&lt;/code&gt;&quot;.</source>
          <target state="translated">추상지도 연관 필드를 만듭니다. 결과는 &quot; &lt;code&gt;Name =&amp;gt; Value&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5c5c02787a5e021dcdf5b36510de1be879d2a289" translate="yes" xml:space="preserve">
          <source>Creates an abstract map exact field. The result represents &quot;&lt;code&gt;Name := Value&lt;/code&gt;&quot;.</source>
          <target state="translated">추상지도 정확한 필드를 만듭니다. 결과는 &quot; &lt;code&gt;Name := Value&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="259175d543a553c6a5cddb9861d1d60443901dae" translate="yes" xml:space="preserve">
          <source>Creates an abstract map expression. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, then if &lt;code&gt;Argument&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;#{F1, ..., Fn}&lt;/code&gt;&quot;, otherwise it represents &quot;&lt;code&gt;Argument#{F1, ..., Fn}&lt;/code&gt;&quot;.</source>
          <target state="translated">추상적 인 맵 표현을 작성합니다. 경우 &lt;code&gt;Fields&lt;/code&gt; 있다 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; 있다면, &lt;code&gt;Argument&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; 그 결과가 나타내는 &quot; &lt;code&gt;#{F1, ..., Fn}&lt;/code&gt; &quot;, 그렇지 않으면 &quot;나타내는 &lt;code&gt;Argument#{F1, ..., Fn}&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="600a70115dc8900da1c0e9b8440b5eecea8e5e17" translate="yes" xml:space="preserve">
          <source>Creates an abstract map type assoc field. The result represents &quot;&lt;code&gt;Name =&amp;gt; Value&lt;/code&gt;&quot;.</source>
          <target state="translated">추상지도 유형 연관 필드를 만듭니다. 결과는 &quot; &lt;code&gt;Name =&amp;gt; Value&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="380c6902de00a0de91f987502332aec04c6ea1d8" translate="yes" xml:space="preserve">
          <source>Creates an abstract map type exact field. The result represents &quot;&lt;code&gt;Name := Value&lt;/code&gt;&quot;.</source>
          <target state="translated">추상지도 유형의 정확한 필드를 만듭니다. 결과는 &quot; &lt;code&gt;Name := Value&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="448269bfd57dc79fbba50ce6d811e3ed7adbbcde" translate="yes" xml:space="preserve">
          <source>Creates an abstract match-expression. The result represents &quot;&lt;code&gt;Pattern = Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 일치 표현을 만듭니다. 결과는 &quot; &lt;code&gt;Pattern = Body&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1e1d5f5935a7fe1ef85b0f321d80187c79bb5186" translate="yes" xml:space="preserve">
          <source>Creates an abstract module definition. The result represents</source>
          <target state="translated">추상 모듈 정의를 만듭니다. 결과는</target>
        </trans-unit>
        <trans-unit id="0d7184b4933e111d5f580a3cea57948829b36311" translate="yes" xml:space="preserve">
          <source>Creates an abstract module qualifier. The result represents &quot;&lt;code&gt;Module:Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 모듈 한정자를 만듭니다. 결과는 &quot; &lt;code&gt;Module:Body&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1139792cb4f07eacb0b2193c4553fdfee2e68039" translate="yes" xml:space="preserve">
          <source>Creates an abstract module-qualified &quot;implicit fun&quot; expression. If &lt;code&gt;Module&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is equivalent to &lt;code&gt;implicit_fun(Name, Arity)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;implicit_fun(module_qualifier(Module, arity_qualifier(Name, Arity))&lt;/code&gt;.</source>
          <target state="translated">추상 모듈 인증 &quot;암시 적 재미&quot;표현을 작성합니다. 경우 &lt;code&gt;Module&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; ,이에 해당 &lt;code&gt;implicit_fun(Name, Arity)&lt;/code&gt; , 그렇지 않으면 동일하다, &lt;code&gt;implicit_fun(module_qualifier(Module, arity_qualifier(Name, Arity))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a59d06044b354abc164d78db131dc67e359b1e54" translate="yes" xml:space="preserve">
          <source>Creates an abstract named fun-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;fun Name C1; ...; Name Cn end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;fun Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt;&quot;.</source>
          <target state="translated">fun-expression이라는 추상을 만듭니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;나타내고 &lt;code&gt;fun Name C1; ...; Name Cn end&lt;/code&gt; &quot;한다. 보다 정확하게 말하면, 각 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;(Pi1, ..., Pim) Gi -&amp;gt; Bi&lt;/code&gt; &lt;code&gt;fun Name(P11, ..., P1m) G1 -&amp;gt; B1; ...; Name(Pn1, ..., Pnm) Gn -&amp;gt; Bn end&lt;/code&gt; &amp;gt; Bi &quot;를 나타내는 경우 결과는 &quot; fun Name (P11, ..., P1m) G1-&amp;gt; B1; ...; Name ( Pn1, ..., Pnm) Gn-&amp;gt; Bn end &quot;.</target>
        </trans-unit>
        <trans-unit id="e8a54ed39352b3751958826e81d471d9932d1f13" translate="yes" xml:space="preserve">
          <source>Creates an abstract operator. The name of the operator is the character sequence represented by &lt;code&gt;Name&lt;/code&gt;. This is analogous to the print name of an atom, but an operator is never written within single-quotes; e.g., the result of &lt;code&gt;operator('++')&lt;/code&gt; represents &quot;&lt;code&gt;++&lt;/code&gt;&quot; rather than &quot;&lt;code&gt;'++'&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 연산자를 만듭니다. 연산자의 이름은 &lt;code&gt;Name&lt;/code&gt; 으로 표시되는 문자 시퀀스 입니다. 이것은 원자의 인쇄 이름과 유사하지만 연산자는 작은 따옴표 안에 쓰여지지 않습니다. 예를 들어, &lt;code&gt;operator('++')&lt;/code&gt; 의 결과는 &quot; &lt;code&gt;'++'&lt;/code&gt; &quot;가 아닌 &quot; &lt;code&gt;++&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="9ab86c61038a93d4be142eb9f8db6bbde5e409da" translate="yes" xml:space="preserve">
          <source>Creates an abstract operator. The name of the operator is the character sequence represented by &lt;code&gt;Name&lt;/code&gt;. This is analogous to the print name of an atom, but an operator is never written within single-quotes; e.g., the result of &lt;code&gt;operator(&lt;/code&gt;++')' represents &quot;&lt;code&gt;++&lt;/code&gt;&quot; rather than &quot;`++''&quot;.</source>
          <target state="translated">추상 연산자를 만듭니다. 연산자의 이름은 &lt;code&gt;Name&lt;/code&gt; 으로 표시되는 문자 순서 입니다. 이것은 원자의 인쇄 이름과 유사하지만 연산자는 작은 따옴표 안에 쓰지 않습니다. 예를 들어, &lt;code&gt;operator(&lt;/code&gt; ++ ')' 의 결과는 &quot;`++ ''&quot;대신 &quot; &lt;code&gt;++&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e905702f0d86684df46e58dd26f3489aa00b2b51" translate="yes" xml:space="preserve">
          <source>Creates an abstract parenthesised expression. The result represents &quot;&lt;code&gt;(Body)&lt;/code&gt;&quot;, independently of the context.</source>
          <target state="translated">추상 괄호로 묶은 식을 만듭니다. 결과는 문맥과 독립적으로 &quot; &lt;code&gt;(Body)&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="0e46be42c59b31006335a85758a1210f8d4f1083" translate="yes" xml:space="preserve">
          <source>Creates an abstract pattern alias. The result represents &quot;&lt;code&gt;Variable = Pattern&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 패턴 별칭을 만듭니다. 결과는 &quot; &lt;code&gt;Variable = Pattern&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8c4eec2b6e72da76c6479671e85bec640fd6041d" translate="yes" xml:space="preserve">
          <source>Creates an abstract piece of source code text. The result represents exactly the sequence of characters in &lt;code&gt;String&lt;/code&gt;. This is useful in cases when one wants full control of the resulting output, e.g., for the appearance of floating-point numbers or macro definitions.</source>
          <target state="translated">소스 코드 텍스트의 추상 조각을 만듭니다. 결과는 &lt;code&gt;String&lt;/code&gt; 의 문자 시퀀스를 정확하게 나타냅니다 . 부동 소수점 숫자 나 매크로 정의 등의 결과 출력을 완전히 제어하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="76e01a72d6ea9466f420d51372b2e5113ec05f36" translate="yes" xml:space="preserve">
          <source>Creates an abstract prefix operator expression. The result represents &quot;&lt;code&gt;Operator Argument&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 접두사 연산자 식을 만듭니다. 결과는 &quot; &lt;code&gt;Operator Argument&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c53926e096c83aa1d0d9257ef6509cc64aba8d93" translate="yes" xml:space="preserve">
          <source>Creates an abstract primitive operation call. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;primop Name(A1, ..., An)&lt;/code&gt;&quot;. &lt;code&gt;Name&lt;/code&gt; must be an atom literal.</source>
          <target state="translated">추상 기본 연산 호출을 만듭니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[A1, ..., An]&lt;/code&gt; 결과가 나타내는 &quot; &lt;code&gt;primop Name(A1, ..., An)&lt;/code&gt; &quot;. &lt;code&gt;Name&lt;/code&gt; 은 원자 리터럴이어야합니다.</target>
        </trans-unit>
        <trans-unit id="34b890b0e60654369a8cb996d08f0ed12ce204ce" translate="yes" xml:space="preserve">
          <source>Creates an abstract program attribute. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[A1, ..., An]&lt;/code&gt;, the result represents &quot;&lt;code&gt;-Name(A1, ..., An).&lt;/code&gt;&quot;. Otherwise, if &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;-Name.&lt;/code&gt;&quot;. The latter form makes it possible to represent preprocessor directives such as &quot;&lt;code&gt;-endif.&lt;/code&gt;&quot;. Attributes are source code forms.</source>
          <target state="translated">추상적 인 프로그램 속성을 작성합니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[A1, ..., An]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;-Name(A1, ..., An).&lt;/code&gt; &quot;. 그렇지 않으면 &lt;code&gt;Arguments&lt;/code&gt; 가 &lt;code&gt;none&lt;/code&gt; 이면 결과는 &quot; &lt;code&gt;-Name.&lt;/code&gt; &quot;을 나타냅니다 . 후자의 형식은 &quot; &lt;code&gt;-endif.&lt;/code&gt; &quot;와 같은 전 처리기 지시문을 나타낼 수 있습니다 . 속성은 소스 코드 형식입니다.</target>
        </trans-unit>
        <trans-unit id="98ef46b456408a140a11f06e33f2d282d5e9124c" translate="yes" xml:space="preserve">
          <source>Creates an abstract range type. The result represents &quot;&lt;code&gt;Low .. High&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 범위 유형을 만듭니다. 결과는 &quot; &lt;code&gt;Low .. High&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a2f794214a28f5e8fe2c66ddaf8173699c40deea" translate="yes" xml:space="preserve">
          <source>Creates an abstract receive-expression. If &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;receive C1 ... Cn after Timeout -&amp;gt; Action end&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 수신 표현식을 만듭니다. 경우 &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; , 결과는 &quot;나타냄 &lt;code&gt;receive C1 ... Cn after Timeout -&amp;gt; Action end&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="bd47f745c9d429b72002b984a22111ea33553367" translate="yes" xml:space="preserve">
          <source>Creates an abstract receive-expression. If &lt;code&gt;Timeout&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;receive C1; ...; Cn end&lt;/code&gt;&quot; (the &lt;code&gt;Action&lt;/code&gt; argument is ignored). Otherwise, if &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; and &lt;code&gt;Action&lt;/code&gt; is &lt;code&gt;[A1, ..., Am]&lt;/code&gt;, the result represents &quot;&lt;code&gt;receive C1; ...; Cn after Timeout -&amp;gt; A1, ..., Am end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;receive P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn ... end&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 수신 표현을 작성합니다. 경우 &lt;code&gt;Timeout&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; , 결과는 &quot;나타내고 &lt;code&gt;receive C1; ...; Cn end&lt;/code&gt; &quot;합니다 ( &lt;code&gt;Action&lt;/code&gt; 인수는 무시된다). 그렇지 않으면, &lt;code&gt;Clauses&lt;/code&gt; 가 &lt;code&gt;[C1, ..., Cn]&lt;/code&gt; 이고 &lt;code&gt;Action&lt;/code&gt; 이 &lt;code&gt;[A1, ..., Am]&lt;/code&gt; 이면 결과는 &quot; &lt;code&gt;receive C1; ...; Cn after Timeout -&amp;gt; A1, ..., Am end&lt;/code&gt; &quot;. 보다 정확하게는, 각각의 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;(Pi) Gi -&amp;gt; Bi&lt;/code&gt; &quot;를 나타내는 경우, 결과는 &quot; &lt;code&gt;receive P1 G1 -&amp;gt; B1; ...; Pn Gn -&amp;gt; Bn ... end&lt;/code&gt; &quot;를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="56705efe321ce96bf31dd94193f5b038702bb40b" translate="yes" xml:space="preserve">
          <source>Creates an abstract record expression. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, then if &lt;code&gt;Argument&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents &quot;&lt;code&gt;#Type{F1, ..., Fn}&lt;/code&gt;&quot;, otherwise it represents &quot;&lt;code&gt;Argument#Type{F1, ..., Fn}&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 레코드 표현식을 작성합니다. 경우 &lt;code&gt;Fields&lt;/code&gt; 있다 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; 있다면, &lt;code&gt;Argument&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; 그 결과가 나타내는 &quot; &lt;code&gt;#Type{F1, ..., Fn}&lt;/code&gt; &quot;, 그렇지 않으면 &quot;나타내는 &lt;code&gt;Argument#Type{F1, ..., Fn}&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="634c8fa5ca7283a9c3b05d9c7848fc9720f48642" translate="yes" xml:space="preserve">
          <source>Creates an abstract record field access expression. The result represents &quot;&lt;code&gt;Argument#Type.Field&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 레코드 필드 액세스 표현식을 작성합니다. 결과는 &quot; &lt;code&gt;Argument#Type.Field&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="fac5aec135faac3fe06fa2ed0089d60d73e0a2e7" translate="yes" xml:space="preserve">
          <source>Creates an abstract record field index expression. The result represents &quot;&lt;code&gt;#Type.Field&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 레코드 필드 인덱스 표현식을 작성합니다. 결과는 &quot; &lt;code&gt;#Type.Field&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b9029c9d9797f9990c469081c0138f8d1f4fbd4a" translate="yes" xml:space="preserve">
          <source>Creates an abstract record field specification. If &lt;code&gt;Value&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, the result represents simply &quot;&lt;code&gt;Name&lt;/code&gt;&quot;, otherwise it represents &quot;&lt;code&gt;Name = Value&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 레코드 필드 스펙을 작성합니다. 경우 &lt;code&gt;Value&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; , 결과는 단순히 &quot;대표 &lt;code&gt;Name&lt;/code&gt; , 그렇지 않으면 '대표,&quot; &lt;code&gt;Name = Value&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="202999e52c796f5d3cbc46d120a4084b83eb7ea6" translate="yes" xml:space="preserve">
          <source>Creates an abstract record type field. The result represents &quot;&lt;code&gt;Name :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 레코드 유형 필드를 작성합니다. 결과는 &quot; &lt;code&gt;Name :: Type&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8be92fd21b8c3dfeaaa8f931d13503774f089039" translate="yes" xml:space="preserve">
          <source>Creates an abstract record type. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;#Name{F1, ..., Fn}&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 레코드 유형을 작성합니다. 경우 &lt;code&gt;Fields&lt;/code&gt; 있다 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;#Name{F1, ..., Fn}&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="86deea0e3964768cfe86297e1e3abe153069a918" translate="yes" xml:space="preserve">
          <source>Creates an abstract sequence of &quot;source code forms&quot;. If &lt;code&gt;Forms&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, where each &lt;code&gt;Fi&lt;/code&gt; is a form (see &lt;code&gt;&lt;a href=&quot;#is_form-1&quot;&gt;is_form/1&lt;/a&gt;&lt;/code&gt;, the result represents</source>
          <target state="translated">&quot;소스 코드 형식&quot;의 추상 시퀀스를 작성합니다. 경우 &lt;code&gt;Forms&lt;/code&gt; 있다 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; 각각 &lt;code&gt;Fi&lt;/code&gt; 를 한 형태는 (참조 &lt;code&gt;&lt;a href=&quot;#is_form-1&quot;&gt;is_form/1&lt;/a&gt;&lt;/code&gt; 결과는 나타내고</target>
        </trans-unit>
        <trans-unit id="7f724dc76cffd1d5dd8c2d1af0682ca80d487275" translate="yes" xml:space="preserve">
          <source>Creates an abstract sequencing expression. The result represents &quot;&lt;code&gt;do Argument Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 시퀀싱 표현식을 만듭니다. 결과는 &quot; &lt;code&gt;do Argument Body&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6f43eb7b9ad935e7996add1f28ac96ebb6a7a10a" translate="yes" xml:space="preserve">
          <source>Creates an abstract size qualifier. The result represents &quot;&lt;code&gt;Body:Size&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 크기 한정자를 만듭니다. 결과는 &quot; &lt;code&gt;Body:Size&lt;/code&gt; &quot;를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="82995b73aac28e978e53e2b1a6594d44549911ff" translate="yes" xml:space="preserve">
          <source>Creates an abstract string literal. Equivalent to creating an abstract list of the corresponding character literals (cf. &lt;code&gt;is_c_string/1&lt;/code&gt;), but is typically more efficient. The lexical representation of a string is &quot;&lt;code&gt;&quot;Chars&quot;&lt;/code&gt;&quot;, where &lt;code&gt;Chars&lt;/code&gt; is a sequence of printing characters or spaces.</source>
          <target state="translated">추상 문자열 리터럴을 만듭니다. 해당 문자 리터럴 ( &lt;code&gt;is_c_string/1&lt;/code&gt; 참조)의 추상 목록을 생성하는 것과 동일 하지만 일반적으로 더 효율적입니다. 문자열의 어휘 표현은 &quot; &lt;code&gt;&quot;Chars&quot;&lt;/code&gt; &quot;입니다. 여기서 &lt;code&gt;Chars&lt;/code&gt; 는 문자 또는 공백을 인쇄하는 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="7fdef7f527b0216eb47ba82d13b0a68ffc10336a" translate="yes" xml:space="preserve">
          <source>Creates an abstract string literal. The result represents &lt;code&gt;&quot;Text&quot;&lt;/code&gt; (including the surrounding double-quotes), where &lt;code&gt;Text&lt;/code&gt; corresponds to the sequence of characters in &lt;code&gt;Value&lt;/code&gt;, but not representing a &lt;strong&gt;specific&lt;/strong&gt; string literal.</source>
          <target state="translated">추상 문자열 리터럴을 만듭니다. 결과는 &lt;code&gt;&quot;Text&quot;&lt;/code&gt; (주변하는 큰 따옴표 포함)를 나타냅니다 . 여기서 &lt;code&gt;Text&lt;/code&gt; 는 &lt;code&gt;Value&lt;/code&gt; 의 문자 시퀀스에 해당 하지만 &lt;strong&gt;특정&lt;/strong&gt; 문자열 리터럴을 나타내지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="692c4205e4b74cb4685f8c70e302325ffb8182b6" translate="yes" xml:space="preserve">
          <source>Creates an abstract try-expression. If &lt;code&gt;Body&lt;/code&gt; is &lt;code&gt;[B1, ..., Bn]&lt;/code&gt;, &lt;code&gt;Clauses&lt;/code&gt; is &lt;code&gt;[C1, ..., Cj]&lt;/code&gt;, &lt;code&gt;Handlers&lt;/code&gt; is &lt;code&gt;[H1, ..., Hk]&lt;/code&gt;, and &lt;code&gt;After&lt;/code&gt; is &lt;code&gt;[A1, ..., Am]&lt;/code&gt;, the result represents &quot;&lt;code&gt;try B1, ..., Bn of C1; ...; Cj catch H1; ...; Hk after A1, ..., Am end&lt;/code&gt;&quot;. More exactly, if each &lt;code&gt;Ci&lt;/code&gt; represents &quot;&lt;code&gt;(CPi) CGi -&amp;gt; CBi&lt;/code&gt;&quot;, and each &lt;code&gt;Hi&lt;/code&gt; represents &quot;&lt;code&gt;(HPi) HGi -&amp;gt; HBi&lt;/code&gt;&quot;, then the result represents &quot;&lt;code&gt;try B1, ..., Bn of CP1 CG1 -&amp;gt; CB1; ...; CPj CGj -&amp;gt; CBj catch HP1 HG1 -&amp;gt; HB1; ...; HPk HGk -&amp;gt; HBk after A1, ..., Am end&lt;/code&gt;&quot;; see &lt;code&gt;&lt;a href=&quot;#case_expr-2&quot;&gt;case_expr/2&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;Clauses&lt;/code&gt; is the empty list, the &lt;code&gt;of ...&lt;/code&gt; section is left out. If &lt;code&gt;After&lt;/code&gt; is the empty list, the &lt;code&gt;after ...&lt;/code&gt; section is left out. If &lt;code&gt;Handlers&lt;/code&gt; is the empty list, and &lt;code&gt;After&lt;/code&gt; is nonempty, the &lt;code&gt;catch ...&lt;/code&gt; section is left out.</source>
          <target state="translated">추상 try-expression을 작성합니다. 경우 &lt;code&gt;Body&lt;/code&gt; 이다 &lt;code&gt;[B1, ..., Bn]&lt;/code&gt; , &lt;code&gt;Clauses&lt;/code&gt; 인 &lt;code&gt;[C1, ..., Cj]&lt;/code&gt; , &lt;code&gt;Handlers&lt;/code&gt; 이다 &lt;code&gt;[H1, ..., Hk]&lt;/code&gt; 및 &lt;code&gt;After&lt;/code&gt; 이다 &lt;code&gt;[A1, ..., Am]&lt;/code&gt; , 결과는 &quot; &lt;code&gt;try B1, ..., Bn of C1; ...; Cj catch H1; ...; Hk after A1, ..., Am end&lt;/code&gt; &quot;를 나타냅니다. 보다 정확하게 말하면, 각 &lt;code&gt;Ci&lt;/code&gt; 가 &quot; &lt;code&gt;(CPi) CGi -&amp;gt; CBi&lt;/code&gt; &quot;를 나타내고 , 각 &lt;code&gt;Hi&lt;/code&gt; 가 &quot; &lt;code&gt;(HPi) HGi -&amp;gt; HBi&lt;/code&gt; &quot;를 나타내는 경우 결과는 &quot; &lt;code&gt;try B1, ..., Bn of CP1 CG1 -&amp;gt; CB1; ...; CPj CGj -&amp;gt; CBj catch HP1 HG1 -&amp;gt; HB1; ...; HPk HGk -&amp;gt; HBk after A1, ..., Am end&lt;/code&gt; 나타냅니다. ; ...; CPj CGj-&amp;gt; CBj catch HP1 HG1-&amp;gt; HB1; ...; HPk HGk-&amp;gt; HBk 후 A1, ...,끝이야&quot;; &lt;code&gt;&lt;a href=&quot;#case_expr-2&quot;&gt;case_expr/2&lt;/a&gt;&lt;/code&gt; 참조 . &lt;code&gt;Clauses&lt;/code&gt; 가 비어있는 목록 인 경우 &lt;code&gt;of ...&lt;/code&gt; 섹션이 생략됩니다. &lt;code&gt;After&lt;/code&gt; 가 비어있는 목록 인 경우 &lt;code&gt;after ...&lt;/code&gt; 섹션이 제외됩니다. &lt;code&gt;Handlers&lt;/code&gt; 가 비어있는 목록 인 경우 및 &lt;code&gt;After&lt;/code&gt; 비어 있지 않으면 &lt;code&gt;catch ...&lt;/code&gt; 섹션이 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="8af3078219015b17491e248e631bab0c671aae5f" translate="yes" xml:space="preserve">
          <source>Creates an abstract try-expression. If &lt;code&gt;Variables&lt;/code&gt; is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; and &lt;code&gt;ExceptionVars&lt;/code&gt; is &lt;code&gt;[X1, ..., Xm]&lt;/code&gt;, the result represents &quot;&lt;code&gt;try Argument of &amp;lt;V1, ..., Vn&amp;gt; -&amp;gt; Body catch &amp;lt;X1, ..., Xm&amp;gt; -&amp;gt; Handler&lt;/code&gt;&quot;. All the &lt;code&gt;Vi&lt;/code&gt; and &lt;code&gt;Xi&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">추상적 인 try-expression을 만듭니다. 경우 &lt;code&gt;Variables&lt;/code&gt; 이다 &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; 및 &lt;code&gt;ExceptionVars&lt;/code&gt; 인 &lt;code&gt;[X1, ..., Xm]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;try Argument of &amp;lt;V1, ..., Vn&amp;gt; -&amp;gt; Body catch &amp;lt;X1, ..., Xm&amp;gt; -&amp;gt; Handler&lt;/code&gt; &quot;. 모든 &lt;code&gt;Vi&lt;/code&gt; 및 &lt;code&gt;Xi&lt;/code&gt; 에는 &lt;code&gt;var&lt;/code&gt; 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6ef9b7271444ebf591e5c89458d957bf83826f64" translate="yes" xml:space="preserve">
          <source>Creates an abstract tuple skeleton. Does not fold constant literals, i.e., the result always has type &lt;code&gt;tuple&lt;/code&gt;, representing &quot;&lt;code&gt;{E1, ..., En}&lt;/code&gt;&quot;, if &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;.</source>
          <target state="translated">추상 튜플 골격을 만듭니다. 상수 리터럴을 접지 않습니다. 즉, &lt;code&gt;Elements&lt;/code&gt; 가 &lt;code&gt;[E1, ..., En]&lt;/code&gt; 인 경우 결과는 항상 &quot; &lt;code&gt;{E1, ..., En}&lt;/code&gt; &quot;을 나타내는 &lt;code&gt;tuple&lt;/code&gt; 유형을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="8762231d2ff99df6ecd7e9cf0885e8b7a7387ce3" translate="yes" xml:space="preserve">
          <source>Creates an abstract tuple. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;{E1, ..., En}&lt;/code&gt;&quot;. Note that if all nodes in &lt;code&gt;Elements&lt;/code&gt; have type &lt;code&gt;literal&lt;/code&gt;, or if &lt;code&gt;Elements&lt;/code&gt; is empty, then the result will also have type &lt;code&gt;literal&lt;/code&gt; and annotations on nodes in &lt;code&gt;Elements&lt;/code&gt; are lost.</source>
          <target state="translated">추상 튜플을 만듭니다. 경우 &lt;code&gt;Elements&lt;/code&gt; 이다 &lt;code&gt;[E1, ..., En]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;{E1, ..., En}&lt;/code&gt; &quot;. &lt;code&gt;Elements&lt;/code&gt; 의 모든 노드에 &lt;code&gt;literal&lt;/code&gt; 유형이 있거나 &lt;code&gt;Elements&lt;/code&gt; 가 비어있는 경우 결과에도 유형 &lt;code&gt;literal&lt;/code&gt; 있고 &lt;code&gt;Elements&lt;/code&gt; 의 노드에 대한 주석 이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="32c25fa61dd8077987521091cf93cb3e37e6266f" translate="yes" xml:space="preserve">
          <source>Creates an abstract tuple. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[X1, ..., Xn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;{X1, ..., Xn}&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 튜플을 만듭니다. 경우 &lt;code&gt;Elements&lt;/code&gt; 인 &lt;code&gt;[X1, ..., Xn]&lt;/code&gt; , 결과가 나타내는 &quot; &lt;code&gt;{X1, ..., Xn}&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="ea3d542f33bce3d60893927e4e25b0a20f14ab0b" translate="yes" xml:space="preserve">
          <source>Creates an abstract type application expression. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 형식 응용 프로그램 식을 만듭니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; , 그 결과는 &quot;나타내는 &lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt; &quot;한다.</target>
        </trans-unit>
        <trans-unit id="cc30675763f9ecabc8a2c88e8fef73041299d5e4" translate="yes" xml:space="preserve">
          <source>Creates an abstract type application expression. If &lt;code&gt;Module&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, this is call is equivalent to &lt;code&gt;type_application(TypeName, Arguments)&lt;/code&gt;, otherwise it is equivalent to &lt;code&gt;type_application(module_qualifier(Module, TypeName), Arguments)&lt;/code&gt;.</source>
          <target state="translated">추상 형식 응용 프로그램 식을 만듭니다. 경우에 &lt;code&gt;Module&lt;/code&gt; 없는 &lt;code&gt;none&lt;/code&gt; ,이 호출은 동등하다 &lt;code&gt;type_application(TypeName, Arguments)&lt;/code&gt; , 그렇지 않으면 동일하다, &lt;code&gt;type_application(module_qualifier(Module, TypeName), Arguments)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90b484bdab94d4e8ccfe7341dfea651dd2521687" translate="yes" xml:space="preserve">
          <source>Creates an abstract type map. If &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;[F1, ..., Fn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;#{F1, ..., Fn}&lt;/code&gt;&quot;; otherwise, if &lt;code&gt;Fields&lt;/code&gt; is &lt;code&gt;any_size&lt;/code&gt;, it represents &quot;&lt;code&gt;map()&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 형식 맵을 만듭니다. 경우 &lt;code&gt;Fields&lt;/code&gt; 있다 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; 결과가 나타내는 &quot; &lt;code&gt;#{F1, ..., Fn}&lt;/code&gt; &quot;; 그렇지 않으면 &lt;code&gt;Fields&lt;/code&gt; 가 &lt;code&gt;any_size&lt;/code&gt; 인 경우 &quot; &lt;code&gt;map()&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="28bf6813fef956774399c8f84dea7fd47317689b" translate="yes" xml:space="preserve">
          <source>Creates an abstract type tuple. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;{T1, ..., Tn}&lt;/code&gt;&quot;; otherwise, if &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;any_size&lt;/code&gt;, it represents &quot;&lt;code&gt;tuple()&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 형 튜플을 작성합니다. 경우 &lt;code&gt;Elements&lt;/code&gt; 이다 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; , 그 결과는 &quot;대표 &lt;code&gt;{T1, ..., Tn}&lt;/code&gt; &quot;; 그렇지 않으면 &lt;code&gt;Elements&lt;/code&gt; 가 &lt;code&gt;any_size&lt;/code&gt; 인 경우 &quot; &lt;code&gt;tuple()&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="30f7f6abbb972c03249bf304beca71aca0d5cfba" translate="yes" xml:space="preserve">
          <source>Creates an abstract type union. If &lt;code&gt;Types&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;T1 | ... | Tn&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 형식 공용체를 만듭니다. 경우 &lt;code&gt;Types&lt;/code&gt; 이다 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;T1 | ... | Tn&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="c67c91f11f9b521865759f85fe172a212034b353" translate="yes" xml:space="preserve">
          <source>Creates an abstract typed record field specification. The result represents &quot;&lt;code&gt;Field :: Type&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 형식화 된 레코드 필드 사양을 만듭니다. 결과는 &quot; &lt;code&gt;Field :: Type&lt;/code&gt; &quot;을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="05e4740343800b739ac94e145ebe249dd3caadbc" translate="yes" xml:space="preserve">
          <source>Creates an abstract universal pattern (&quot;&lt;code&gt;_&lt;/code&gt;&quot;). The lexical representation is a single underscore character. Note that this is &lt;strong&gt;not&lt;/strong&gt; a variable, lexically speaking.</source>
          <target state="translated">추상 범용 패턴 ( &quot; &lt;code&gt;_&lt;/code&gt; &quot;)을 만듭니다 . 어휘 표현은 단일 밑줄 문자입니다. 이것은 어휘 적으로 말하는 변수 가 &lt;strong&gt;아닙니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="bcde5e9c4cf46772e5d81718da0e6f591561baed" translate="yes" xml:space="preserve">
          <source>Creates an abstract user type. If &lt;code&gt;Arguments&lt;/code&gt; is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 사용자 유형을 작성합니다. 경우 &lt;code&gt;Arguments&lt;/code&gt; 이다 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; , 그 결과는 &quot;나타내는 &lt;code&gt;TypeName(T1, ...Tn)&lt;/code&gt; &quot;한다.</target>
        </trans-unit>
        <trans-unit id="0f7f583484cf1f65d6dee0b70d67372dc62cff68" translate="yes" xml:space="preserve">
          <source>Creates an abstract value list. If &lt;code&gt;Elements&lt;/code&gt; is &lt;code&gt;[E1, ..., En]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;E1, ..., En&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 값 목록을 만듭니다. 경우 &lt;code&gt;Elements&lt;/code&gt; 이다 &lt;code&gt;[E1, ..., En]&lt;/code&gt; , 결과는 &quot;대표 &lt;code&gt;&amp;lt;E1, ..., En&amp;gt;&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="9fc0ebd5fb3d924104140985a3bcaeec3e045998" translate="yes" xml:space="preserve">
          <source>Creates an abstract variable with the given name. &lt;code&gt;Name&lt;/code&gt; may be any atom or string that represents a lexically valid variable name, but &lt;strong&gt;not&lt;/strong&gt; a single underscore character; see &lt;code&gt;&lt;a href=&quot;#underscore-0&quot;&gt;underscore/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 이름으로 추상 변수를 만듭니다. &lt;code&gt;Name&lt;/code&gt; 은 어휘 적으로 유효한 변수 이름을 나타내는 원자 또는 문자열이지만 단일 밑줄 문자는 &lt;strong&gt;아닙니다&lt;/strong&gt; . &lt;code&gt;&lt;a href=&quot;#underscore-0&quot;&gt;underscore/0&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="10ef172d2f14b38544ea1a3332803b0e13af097b" translate="yes" xml:space="preserve">
          <source>Creates an abstract variable. A variable is identified by its name, given by the &lt;code&gt;Name&lt;/code&gt; parameter.</source>
          <target state="translated">추상 변수를 만듭니다. 변수는 &lt;code&gt;Name&lt;/code&gt; 매개 변수에 지정된 이름으로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="c51c1fb70fbc9a3d5b73ac5924eaf0411ab0bbdd" translate="yes" xml:space="preserve">
          <source>Creates an abstract warning marker. The result represents an occurrence of a possible problem in the source code, with an associated Erlang I/O ErrorInfo structure given by &lt;code&gt;Error&lt;/code&gt; (see module &lt;code&gt;io(3)&lt;/code&gt; for details). Warning markers are regarded as source code forms, but have no defined lexical form.</source>
          <target state="translated">추상 경고 마커를 만듭니다. 결과는 소스 코드에서 발생 가능한 문제의 발생을 나타내며, &lt;code&gt;Error&lt;/code&gt; 지정된 관련 Erlang I / O ErrorInfo 구조가 있습니다 (자세한 내용은 모듈 &lt;code&gt;io(3)&lt;/code&gt; 참조). 경고 마커는 소스 코드 형식으로 간주되지만 사전 어휘 형식은 없습니다.</target>
        </trans-unit>
        <trans-unit id="e5041da5711232189970a68506bce9207378325e" translate="yes" xml:space="preserve">
          <source>Creates an an abstract clause. If &lt;code&gt;Patterns&lt;/code&gt; is &lt;code&gt;[P1, ..., Pn]&lt;/code&gt;, the result represents &quot;&lt;code&gt;&amp;lt;P1, ..., Pn&amp;gt; when Guard -&amp;gt; Body&lt;/code&gt;&quot;.</source>
          <target state="translated">추상 절을 만듭니다. 경우 &lt;code&gt;Patterns&lt;/code&gt; 인 &lt;code&gt;[P1, ..., Pn]&lt;/code&gt; , 결과는 &quot;나타냄 &lt;code&gt;&amp;lt;P1, ..., Pn&amp;gt; when Guard -&amp;gt; Body&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="c06389832f0f750abaaa40194d233c64f5377bf1" translate="yes" xml:space="preserve">
          <source>Creates an atom term from the &lt;code&gt;NULL&lt;/code&gt;-terminated C-string &lt;code&gt;name&lt;/code&gt; with ISO Latin-1 encoding. If the length of &lt;code&gt;name&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ISO Latin-1 인코딩 을 사용하여 &lt;code&gt;NULL&lt;/code&gt; 로 끝나는 C- 문자열 &lt;code&gt;name&lt;/code&gt; 에서 원자 용어를 만듭니다 . &lt;code&gt;name&lt;/code&gt; 의 길이가 원자에 허용되는 최대 길이 (255 자)를 &lt;code&gt;enif_make_atom&lt;/code&gt; 하면 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; enif_make_badarg를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="492f8b473cc7bfc11bc1a8bcfb3f18170e7f0353" translate="yes" xml:space="preserve">
          <source>Creates an atom term from the &lt;code&gt;NULL&lt;/code&gt;-terminated C-string &lt;code&gt;name&lt;/code&gt; with ISO Latin-1 encoding. If the length of &lt;code&gt;name&lt;/code&gt; exceeds the maximum length allowed for an atom (255 characters), &lt;code&gt;enif_make_atom&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ISO Latin-1 인코딩으로 &lt;code&gt;NULL&lt;/code&gt; 로 끝나는 C- 문자열 &lt;code&gt;name&lt;/code&gt; 으로 원자 항을 작성합니다 . &lt;code&gt;name&lt;/code&gt; 의 길이가 원자에 허용 된 최대 길이 (255 자)를 &lt;code&gt;enif_make_atom&lt;/code&gt; 하면 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 은 enif_make_badarg를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="d890021d23ae70b2da3f4d414d0d3909bb885262" translate="yes" xml:space="preserve">
          <source>Creates an atom.</source>
          <target state="translated">원자를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4eeb3c69485a53b007fbd1974f35761a85d73e3e" translate="yes" xml:space="preserve">
          <source>Creates an element of &lt;code id=&quot;from_term&quot;&gt;&lt;a href=&quot;#sets_definition&quot;&gt;Sets&lt;/a&gt;&lt;/code&gt; by traversing term &lt;code&gt;Term&lt;/code&gt;, sorting lists, removing duplicates, and deriving or verifying a &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; for the so obtained external set. An explicitly specified &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Type&lt;/code&gt; can be used to limit the depth of the traversal; an atomic type stops the traversal, as shown by the following example where &lt;code&gt;&quot;foo&quot;&lt;/code&gt; and &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; are left unmodified:</source>
          <target state="translated">의 요소 생성 &lt;code id=&quot;from_term&quot;&gt;&lt;a href=&quot;#sets_definition&quot;&gt;Sets&lt;/a&gt;&lt;/code&gt; 기간 이송하여 &lt;code&gt;Term&lt;/code&gt; , 목록 정렬 중복 삭제 및 도출 또는 검증 &lt;code&gt;&lt;a href=&quot;#valid_type&quot;&gt;valid type&lt;/a&gt;&lt;/code&gt; 이렇게 얻어진 외부 세트한다. 명시 적으로 지정된 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Type&lt;/code&gt; 순회의 깊이를 제한 할 수 있습니다; 원자 유형은 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 및 &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; 가 수정되지 않은 다음 예에 표시된 것처럼 순회를 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="2ad4a29a2c901455a1d8003f3bbfce2d0c81764e" translate="yes" xml:space="preserve">
          <source>Creates an endpoint (socket) for communication.</source>
          <target state="translated">통신을위한 끝점 (소켓)을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="24f0e8c1230fcfe12e4014c4084e77b36ac37da5" translate="yes" xml:space="preserve">
          <source>Creates an error exception with the term &lt;code&gt;reason&lt;/code&gt; to be returned from a NIF, and associates it with environment &lt;code&gt;env&lt;/code&gt;. Once a NIF or any function it calls invokes &lt;code&gt;enif_raise_exception&lt;/code&gt;, the runtime ensures that the exception it creates is raised when the NIF returns, even if the NIF attempts to return a non-exception term instead.</source>
          <target state="translated">NIF에서 리턴 할 &lt;code&gt;reason&lt;/code&gt; 이라는 오류 예외를 작성하고 환경 &lt;code&gt;env&lt;/code&gt; 와 연관시킵니다 . NIF 또는 호출하는 함수가 &lt;code&gt;enif_raise_exception&lt;/code&gt; 을 호출하면 런타임은 NIF가 예외가 아닌 용어를 대신 리턴하려고 시도하더라도 NIF가 리턴 될 때 작성되는 예외가 발생하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="af4234d40cf1cc497ac9c6fede70ffe792bb8897" translate="yes" xml:space="preserve">
          <source>Creates an escript from a list of sections. The sections can be specified in any order. An escript begins with an optional &lt;code id=&quot;create_2&quot;&gt;Header&lt;/code&gt; followed by a mandatory &lt;code&gt;Body&lt;/code&gt;. If the header is present, it does always begin with a &lt;code&gt;shebang&lt;/code&gt;, possibly followed by a &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;emu_args&lt;/code&gt;. The &lt;code&gt;shebang&lt;/code&gt; defaults to &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt;. The &lt;code&gt;comment&lt;/code&gt; defaults to &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt;. The created escript can either be returned as a binary or written to file.</source>
          <target state="translated">섹션 목록에서 escript를 작성합니다. 섹션은 임의의 순서로 지정할 수 있습니다. escript는 선택적 &lt;code id=&quot;create_2&quot;&gt;Header&lt;/code&gt; 시작 하고 필수 &lt;code&gt;Body&lt;/code&gt; 가 옵니다 . 헤더가 있으면 항상 &lt;code&gt;shebang&lt;/code&gt; 으로 시작 하고 &lt;code&gt;comment&lt;/code&gt; 및 &lt;code&gt;emu_args&lt;/code&gt; 가 이어 집니다 . &lt;code&gt;shebang&lt;/code&gt; 기본값 &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt; . &lt;code&gt;comment&lt;/code&gt; 기본값은 &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt; . 작성된 escript는 2 진으로 리턴되거나 파일에 기록 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c833168da1cb78652eb4f49974bba9bd5111968" translate="yes" xml:space="preserve">
          <source>Creates an escript from a list of sections. The sections can be specified in any order. An escript begins with an optional &lt;code&gt;Header&lt;/code&gt; followed by a mandatory &lt;code&gt;Body&lt;/code&gt;. If the header is present, it does always begin with a &lt;code&gt;shebang&lt;/code&gt;, possibly followed by a &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;emu_args&lt;/code&gt;. The &lt;code&gt;shebang&lt;/code&gt; defaults to &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt;. The &lt;code&gt;comment&lt;/code&gt; defaults to &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt;. The created escript can either be returned as a binary or written to file.</source>
          <target state="translated">섹션 목록에서 escript를 만듭니다. 섹션은 임의의 순서로 지정할 수 있습니다. escript는 선택적 &lt;code&gt;Header&lt;/code&gt; 로 시작하고 뒤에 필수 &lt;code&gt;Body&lt;/code&gt; 가 옵니다 . 헤더가 있으면 항상 &lt;code&gt;shebang&lt;/code&gt; 으로 시작하고 그 뒤에 &lt;code&gt;comment&lt;/code&gt; 과 &lt;code&gt;emu_args&lt;/code&gt; 가 올 수 있습니다. &lt;code&gt;shebang&lt;/code&gt; 기본값 &lt;code&gt;&quot;/usr/bin/env escript&quot;&lt;/code&gt; . &lt;code&gt;comment&lt;/code&gt; 기본값은 &lt;code&gt;&quot;This is an -*- erlang -*- file&quot;&lt;/code&gt; . 생성 된 escript는 바이너리로 반환되거나 파일에 기록 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d173fe0f7759feb7dc2bbed992255535a92f8be" translate="yes" xml:space="preserve">
          <source>Creates an event manager process as part of a supervision tree. The function is to be called, directly or indirectly, by the supervisor. For example, it ensures that the event manager is linked to the supervisor.</source>
          <target state="translated">감독 트리의 일부로 이벤트 관리자 프로세스를 작성합니다. 이 기능은 감독자가 직접 또는 간접적으로 호출해야합니다. 예를 들어, 이벤트 관리자가 수퍼바이저에 연결되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1c90f534131cc174b3206dd2e139733568eb24bb" translate="yes" xml:space="preserve">
          <source>Creates an exported function &lt;code&gt;test()&lt;/code&gt; (unless testing is turned off, and the module does not already contain a test() function), that can be used to run all the unit tests defined in the module</source>
          <target state="translated">모듈에 정의 된 모든 단위 테스트를 실행하는 데 사용할 수 있는 내 보낸 함수 &lt;code&gt;test()&lt;/code&gt; (테스트가 꺼져 있고 모듈에 test () 함수가 포함되어 있지 않은 경우 제외).</target>
        </trans-unit>
        <trans-unit id="996175fe2aeef93a0d528b7948d396ddc999e67c" translate="yes" xml:space="preserve">
          <source>Creates an extendible (non-fixed-size) array.</source>
          <target state="translated">확장 가능한 (고정되지 않은) 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3cd6a9b0734eb4c8fba600849b3ff2876cefafb7" translate="yes" xml:space="preserve">
          <source>Creates an extensible match filter. For example,</source>
          <target state="translated">확장 가능한 일치 필터를 만듭니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="df710f8aff9b8c868bc0330e5c07e0fcf71259a2" translate="yes" xml:space="preserve">
          <source>Creates an initial &lt;code&gt;RELEASES&lt;/code&gt; file to be used by the release handler. This file must exist to install new releases.</source>
          <target state="translated">릴리스 핸들러에서 사용할 초기 &lt;code&gt;RELEASES&lt;/code&gt; 파일을 작성합니다. 새 릴리스를 설치하려면이 파일이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ed88b874a3e515121e7898a3bb9328dddac8e876" translate="yes" xml:space="preserve">
          <source>Creates an integer term from a &lt;code&gt;long int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;long int&lt;/code&gt; 에서 정수 항을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="59f3723b140384fba3baa35447c51ef7d56ac6b9" translate="yes" xml:space="preserve">
          <source>Creates an integer term from a signed 64-bit integer.</source>
          <target state="translated">부호있는 64 비트 정수에서 정수 항을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6ee1bbc4f4408f4526c1fe0885cb61f7f3a8a59c" translate="yes" xml:space="preserve">
          <source>Creates an integer term from an &lt;code&gt;unsigned int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unsigned int&lt;/code&gt; 에서 정수 항을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="82cb1a943b0e6e9fbd368b47ee58826ba75abc28" translate="yes" xml:space="preserve">
          <source>Creates an integer term from an &lt;code&gt;unsigned long int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unsigned long int&lt;/code&gt; 에서 정수 항을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="58483ead7c7f33cf6de25f82adfa851b2f7810da" translate="yes" xml:space="preserve">
          <source>Creates an integer term from an unsigned 64-bit integer.</source>
          <target state="translated">부호없는 64 비트 정수에서 정수 항을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="68bc5a614884cd8500bcca9c15eb422298d688a5" translate="yes" xml:space="preserve">
          <source>Creates an integer term.</source>
          <target state="translated">정수 항을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="321828120e52ab0256abf04af1e405775a9f0c86" translate="yes" xml:space="preserve">
          <source>Creates an iterator for the map &lt;code&gt;map&lt;/code&gt; by initializing the structure pointed to by &lt;code&gt;iter&lt;/code&gt;. Argument &lt;code&gt;entry&lt;/code&gt; determines the start position of the iterator: &lt;code&gt;ERL_NIF_MAP_ITERATOR_FIRST&lt;/code&gt; or &lt;code&gt;ERL_NIF_MAP_ITERATOR_LAST&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter&lt;/code&gt; 가 가리키는 구조를 초기화 하여 맵 &lt;code&gt;map&lt;/code&gt; 의 반복자를 작성합니다 . 인수 &lt;code&gt;entry&lt;/code&gt; 은 반복자의 시작 위치를 결정합니다 ( &lt;code&gt;ERL_NIF_MAP_ITERATOR_FIRST&lt;/code&gt; 또는 &lt;code&gt;ERL_NIF_MAP_ITERATOR_LAST&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="879756ef285a8987efdb7f7c21fd4f435c340061" translate="yes" xml:space="preserve">
          <source>Creates an old Erlang reference, with only 18 bits - use &lt;code&gt;erl_mk_long_ref&lt;/code&gt; instead.</source>
          <target state="translated">18 비트 만 사용하여 이전 Erlang 참조를 &lt;code&gt;erl_mk_long_ref&lt;/code&gt; 합니다. 대신 erl_mk_long_ref를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="40a5d9d2fbb5d3e467d56a186e5444d123f9b950" translate="yes" xml:space="preserve">
          <source>Creates an opaque handle to a memory-managed resource object obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. No ownership transfer is done, as the resource object still needs to be released by &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt; enif_release_resource&lt;/a&gt;&lt;/code&gt;. However, notice that the call to &lt;code&gt;enif_release_resource&lt;/code&gt; can occur immediately after obtaining the term from &lt;code&gt;enif_make_resource&lt;/code&gt;, in which case the resource object is deallocated when the term is garbage collected. For more details, see the &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에서 얻은 메모리 관리 리소스 개체에 대한 불투명 핸들을 만듭니다 . 자원 객체는 여전히 &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt; enif_release_resource&lt;/a&gt;&lt;/code&gt; 에 의해 해제되어야 하므로 소유권 이전이 수행되지 않습니다 . 그러나 &lt;code&gt;enif_release_resource&lt;/code&gt; 에 대한 호출은 enif_make_resource 에서 용어를 &lt;code&gt;enif_make_resource&lt;/code&gt; 직후 발생할 수 있습니다 .이 경우 용어가 가비지 수집 될 때 리소스 개체가 할당 해제됩니다. 자세한 내용 은 사용자 가이드의 &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1398e6d518802b854f857855606e54bf791750f3" translate="yes" xml:space="preserve">
          <source>Creates an opaque handle to a memory-managed resource object obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. No ownership transfer is done, as the resource object still needs to be released by &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt;. However, notice that the call to &lt;code&gt;enif_release_resource&lt;/code&gt; can occur immediately after obtaining the term from &lt;code&gt;enif_make_resource&lt;/code&gt;, in which case the resource object is deallocated when the term is garbage collected. For more details, see the &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에 의해 얻은 메모리 관리 자원 오브젝트에 대한 불투명 한 핸들을 작성 합니다. &lt;code&gt;&lt;a href=&quot;#enif_release_resource&quot;&gt;enif_release_resource&lt;/a&gt;&lt;/code&gt; 가 여전히 자원 오브젝트를 해제해야하므로 소유권 이전이 수행되지 않습니다 . 그러나 &lt;code&gt;enif_release_resource&lt;/code&gt; 에 대한 호출은 enif_make_resource 에서 용어를 얻은 직후에 발생할 수 &lt;code&gt;enif_make_resource&lt;/code&gt; ,이 경우 용어가 가비지 수집 될 때 자원 객체가 할당 해제됩니다. 자세한 내용은 사용 설명서에서 &lt;code&gt;&lt;a href=&quot;#enif_resource_example&quot;&gt;example of creating and returning a resource object&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0c1f1bc138ba0aedb26a0ac2e09891550938ee2" translate="yes" xml:space="preserve">
          <source>Creates an ordinary list containing the elements of array &lt;code&gt;arr&lt;/code&gt; of length &lt;code&gt;cnt&lt;/code&gt;.</source>
          <target state="translated">길이가 &lt;code&gt;cnt&lt;/code&gt; 인 배열 &lt;code&gt;arr&lt;/code&gt; 의 요소를 포함하는 일반 목록을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="424838f33b10028179989c2466495e43158071b0" translate="yes" xml:space="preserve">
          <source>Creates an ordinary list term of length &lt;code&gt;cnt&lt;/code&gt;. Expects &lt;code&gt;cnt&lt;/code&gt; number of arguments (after &lt;code&gt;cnt&lt;/code&gt;) of type &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; as the elements of the list.</source>
          <target state="translated">길이가 &lt;code&gt;cnt&lt;/code&gt; 인 일반 목록 용어를 만듭니다 . 예상 &lt;code&gt;cnt&lt;/code&gt; (인자 후 수 &lt;code&gt;cnt&lt;/code&gt; 형의) &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; 리스트의 요소로한다.</target>
        </trans-unit>
        <trans-unit id="ec00fc4d844910f87529878dd3f50bb3250751fc" translate="yes" xml:space="preserve">
          <source>Creates an ordinary list term with length indicated by the function name. Prefer these functions (macros) over the variadic &lt;code&gt;enif_make_list&lt;/code&gt; to get a compile-time error if the number of arguments does not match.</source>
          <target state="translated">함수 이름으로 표시되는 길이의 일반 목록 용어를 작성합니다. 인수 개수가 일치하지 않는 경우 컴파일 타임 오류가 발생 하도록 가변성 &lt;code&gt;enif_make_list&lt;/code&gt; 보다 이러한 함수 (매크로)를 선호하십시오 .</target>
        </trans-unit>
        <trans-unit id="d42f110da5befd264b5c717621184c5829a7f103" translate="yes" xml:space="preserve">
          <source>Creates an rwlock and returns a pointer to it.</source>
          <target state="translated">rwlock을 작성하고 이에 대한 포인터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="08ad5cdecff62fd69686f7dc811751af1ed7c10e" translate="yes" xml:space="preserve">
          <source>Creates an unbound Erlang variable. The variable can later be bound through pattern matching or assignment.</source>
          <target state="translated">언 바운드 Erlang 변수를 만듭니다. 변수는 나중에 패턴 일치 또는 할당을 통해 바인딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ae93852bb589aacdc0794cd6528853e88f7a6ef" translate="yes" xml:space="preserve">
          <source>Creates and listens on socket with the specified name.</source>
          <target state="translated">지정된 이름으로 소켓을 작성하고 청취합니다.</target>
        </trans-unit>
        <trans-unit id="05aa7c506fab05715d5421a38b5678d627262f3f" translate="yes" xml:space="preserve">
          <source>Creates and returns a copy of the Erlang term &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">Erlang 용어 &lt;code&gt;term&lt;/code&gt; 의 사본을 작성하고 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="541b49d95c7c98f75efa71ddefbb84f83a17d0d0" translate="yes" xml:space="preserve">
          <source>Creates and returns an empty Erlang list. Notice that &lt;code&gt;NULL&lt;/code&gt; is not used to represent an empty list; Use this function instead.</source>
          <target state="translated">빈 Erlang 목록을 작성하고 리턴합니다. 통지 &lt;code&gt;NULL&lt;/code&gt; 은 빈리스트를 표현하는 데 사용되지 않습니다; 대신이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="75748c9686ac2a763485bd0ca048c9b400674342" translate="yes" xml:space="preserve">
          <source>Creates breakpoints at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Name/Arity&lt;/code&gt; 함수의 모든 절의 첫 번째 행에 중단 점을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="323578245e4970070c46439f663622d62dab311c" translate="yes" xml:space="preserve">
          <source>Creates certificate configuration(s) consisting of certificate and its private key plus CA certificate bundle, for a client and a server, intended to facilitate automated testing of applications using X509-certificates, often through SSL/TLS. The test data can be used when you have control over both the client and the server in a test scenario.</source>
          <target state="translated">클라이언트와 서버에 대해 인증서 및 개인 키와 CA 인증서 번들로 구성된 인증서 구성을 생성하며, 종종 SSL / TLS를 통해 X509 인증서를 사용하여 응용 프로그램을 자동으로 테스트 할 수 있습니다. 테스트 시나리오는 테스트 시나리오에서 클라이언트와 서버를 모두 제어 할 때 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a5bb60284b6d9b200a3d5c6a903d56a7949b0b3" translate="yes" xml:space="preserve">
          <source>Creates monitor between the current process and a port identified by &lt;code&gt;Item&lt;/code&gt;, which can be a &lt;code&gt;port()&lt;/code&gt; (only local), an atom &lt;code&gt;RegisteredName&lt;/code&gt; or a tuple &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; for a registered port, located on this node. Note, that attempt to monitor a remote port will result in &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">현재 프로세스와 &lt;code&gt;Item&lt;/code&gt; 에 의해 식별 된 포트 사이에 모니터를 작성 합니다.이 노드 는 &lt;code&gt;port()&lt;/code&gt; (로컬 만), 아톰 &lt;code&gt;RegisteredName&lt;/code&gt; 또는 등록 된 포트에 대한 튜플 &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; 일 수 있습니다. 원격 포트를 모니터링하려고하면 &lt;code&gt;badarg&lt;/code&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="54e51ca9f5d895d929b7864f1a5bdd9ac748d14c" translate="yes" xml:space="preserve">
          <source>Creates monitor between the current process and another process identified by &lt;code&gt;Item&lt;/code&gt;, which can be a &lt;code&gt;pid()&lt;/code&gt; (local or remote), an atom &lt;code&gt;RegisteredName&lt;/code&gt; or a tuple &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; for a registered process, located elsewhere.</source>
          <target state="translated">현재 프로세스와 &lt;code&gt;Item&lt;/code&gt; 으로 식별 된 다른 프로세스 사이에 모니터를 작성합니다. 다른 프로세스 는 &lt;code&gt;pid()&lt;/code&gt; (로컬 또는 원격), 아톰 &lt;code&gt;RegisteredName&lt;/code&gt; 또는 등록 된 프로세스에 대한 튜플 &lt;code&gt;{RegisteredName, Node}&lt;/code&gt; 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb53b88201cfb3bd06e7053454da2720554a9474" translate="yes" xml:space="preserve">
          <source>Creates or extends a configuration file, which can be used for restoring a specific configuration later.</source>
          <target state="translated">나중에 특정 구성을 복원하는 데 사용할 수있는 구성 파일을 작성하거나 확장합니다.</target>
        </trans-unit>
        <trans-unit id="31646868d5cdc972e8aef50b6bf9211b0d7b8924" translate="yes" xml:space="preserve">
          <source>Creates or takes over a resource type identified by the string &lt;code&gt;name&lt;/code&gt; and gives it the destructor function pointed to by &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDtor&quot;&gt;dtor&lt;/a&gt;&lt;/code&gt;. Argument &lt;code&gt;flags&lt;/code&gt; can have the following values:</source>
          <target state="translated">문자열 &lt;code&gt;name&lt;/code&gt; 식별되는 자원 유형을 작성하거나 인수하여 &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDtor&quot;&gt;dtor&lt;/a&gt;&lt;/code&gt; 가 가리키는 소멸자 함수를 제공합니다 . 인수 &lt;code&gt;flags&lt;/code&gt; 는 다음 값을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7dda1b4beebacf30c8aa2fe84ee80b222943599" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strong random numbers (based on OpenSSL's &lt;code&gt;BN_rand_range&lt;/code&gt;), and saves it in the process dictionary before returning it as well. See also &lt;code&gt;rand:seed/1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#rand_seed_s-0&quot;&gt;rand_seed_s/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">암호화 적으로 강력한 난수 (OpenSSL의 &lt;code&gt;BN_rand_range&lt;/code&gt; 기반)를 생성하기 위해 &lt;code&gt;random number generation&lt;/code&gt; 위한 상태 오브젝트를 작성 하고 프로세스 사전에이를 저장하기 전에 저장합니다. &lt;code&gt;rand:seed/1&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#rand_seed_s-0&quot;&gt;rand_seed_s/0&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43bab212ce8b7603cd7c220b5681c1069e65646a" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strong random numbers, and saves it in the process dictionary before returning it as well. See also &lt;code&gt;rand:seed/1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">암호화 된 강력한 난수를 생성하기 위해 &lt;code&gt;random number generation&lt;/code&gt; 위한 상태 개체를 만들고 반환하기 전에 프로세스 사전에 저장합니다. &lt;code&gt;rand:seed/1&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1131d9cff498b627d19dca18fed2560e3534fcf7" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strong random numbers. See also &lt;code&gt;rand:seed/1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">암호화 적으로 강력한 난수를 생성하기 위해 &lt;code&gt;random number generation&lt;/code&gt; 위한 상태 객체를 만듭니다 . &lt;code&gt;rand:seed/1&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#rand_seed_alg_s-1&quot;&gt;rand_seed_alg_s/1&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e82881ca2e0b49898eecacd0d7604ef4a6914de" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strongly random numbers (based on OpenSSL's &lt;code&gt;BN_rand_range&lt;/code&gt;). See also &lt;code&gt;rand:seed_s/1&lt;/code&gt;.</source>
          <target state="translated">암호로 강력한 난수를 생성하기 위해 &lt;code&gt;random number generation&lt;/code&gt; 위한 상태 객체를 만듭니다 (OpenSSL의 &lt;code&gt;BN_rand_range&lt;/code&gt; 기반 ). &lt;code&gt;rand:seed_s/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6888253e0b7a145a185b3ba4f096d285f6876f19" translate="yes" xml:space="preserve">
          <source>Creates state object for &lt;code&gt;random number generation&lt;/code&gt;, in order to generate cryptographically strongly random numbers. See also &lt;code&gt;rand:seed_s/1&lt;/code&gt;.</source>
          <target state="translated">암호화 적으로 강력한 난수를 생성하기 위해 &lt;code&gt;random number generation&lt;/code&gt; 위한 상태 객체를 만듭니다 . &lt;code&gt;rand:seed_s/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ec20a9c0aeef53fc162b5af5f934121d0f49bd4" translate="yes" xml:space="preserve">
          <source>Creates stub module source files corresponding to the given stub descriptors. The returned value is the list of names of the created files. See &lt;code&gt;merge_sources/3&lt;/code&gt; for more information about stub descriptors.</source>
          <target state="translated">지정된 스텁 디스크립터에 해당하는 스텁 모듈 소스 파일을 작성합니다. 리턴 된 값은 작성된 파일의 이름 목록입니다. 참조 &lt;code&gt;merge_sources/3&lt;/code&gt; 스텁 설명자에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="5f216c367364fda5c8b1daca48829d78620b9016" translate="yes" xml:space="preserve">
          <source>Creates the &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; that maps each element of set &lt;code&gt;Set&lt;/code&gt; onto &lt;code&gt;AnySet&lt;/code&gt;.</source>
          <target state="translated">set &lt;code&gt;Set&lt;/code&gt; 의 각 요소 를 &lt;code&gt;AnySet&lt;/code&gt; 에 매핑 하는 &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; 를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="e059a51bae21ba25bf1564ab677a430187512486" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;Dir&lt;/code&gt; at the remote server.</source>
          <target state="translated">원격 서버에서 디렉토리 &lt;code&gt;Dir&lt;/code&gt; 을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="49c1e26c85443cdd066c1bfc69dbb272040a3e28" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;tmp/bin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tmp/bin&lt;/code&gt; 디렉토리를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="29a43abd6d3ef1afa9834431f2aea97b4af3dc21" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;tmp/log&lt;/code&gt;, which is used if the system is started as embedded with the &lt;code&gt;bin/start&lt;/code&gt; script.</source>
          <target state="translated">&lt;code&gt;bin/start&lt;/code&gt; 스크립트에 내장 된 것으로 시스템을 시작한 경우 사용되는 &lt;code&gt;tmp/log&lt;/code&gt; 디렉토리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1242ba000e579b3f18105ae3515b7c2029bda8b4" translate="yes" xml:space="preserve">
          <source>Creates the file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; by a call to &lt;code&gt;systools:make_tar/2&lt;/code&gt;. That file has the following contents:</source>
          <target state="translated">&lt;code&gt;systools:make_tar/2&lt;/code&gt; 를 호출하여 &lt;code&gt;mysystem.tar.gz&lt;/code&gt; 파일 을 작성 합니다. 해당 파일의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0dbd27d9c55aa28b1313e1dd14a2bc4e49b1ad90" translate="yes" xml:space="preserve">
          <source>Creates the file &lt;code&gt;tmp/releases/start_erl.data&lt;/code&gt; with the contents &quot;5.10.4 FIRST&quot;. This file is to be passed as data file to the &lt;code&gt;start_erl&lt;/code&gt; script.</source>
          <target state="translated">&quot;5.10.4 FIRST&quot;내용으로 &lt;code&gt;tmp/releases/start_erl.data&lt;/code&gt; 파일을 작성 합니다 . 이 파일은 데이터 파일로 &lt;code&gt;start_erl&lt;/code&gt; 스크립트에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b4390f853df6f28b17e4ba1ebb9d05dc580b685" translate="yes" xml:space="preserve">
          <source>Creates the necessary objects in the database if they do not exist. It does not destroy any old values.</source>
          <target state="translated">데이터베이스에 필요한 오브젝트가 없으면 작성합니다. 이전 값을 파괴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e3b42fd99b688b644487e5d667423613942d0cb0" translate="yes" xml:space="preserve">
          <source>Creates the temporary directory &lt;code&gt;tmp&lt;/code&gt; and extracts the tar file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; into that directory.</source>
          <target state="translated">임시 디렉토리 &lt;code&gt;tmp&lt;/code&gt; 를 작성 하고 tar 파일 &lt;code&gt;mysystem.tar.gz&lt;/code&gt; 를 해당 디렉토리로 추출하십시오 .</target>
        </trans-unit>
        <trans-unit id="e46d8ed007fb666c603ffcda41f6332deeaca0a5" translate="yes" xml:space="preserve">
          <source>Creating Boot Scripts</source>
          <target state="translated">부트 스크립트 생성</target>
        </trans-unit>
        <trans-unit id="c59b056a38d881a7e118a06083a114b38564ad7b" translate="yes" xml:space="preserve">
          <source>Creating Maps</source>
          <target state="translated">지도 만들기</target>
        </trans-unit>
        <trans-unit id="f4b67855361a8b2e9f81b2db81957703a25e60f9" translate="yes" xml:space="preserve">
          <source>Creating New AVPs</source>
          <target state="translated">새로운 AVP 만들기</target>
        </trans-unit>
        <trans-unit id="f21c8568842d0493084955f3cdba40f654290e45" translate="yes" xml:space="preserve">
          <source>Creating New Commands</source>
          <target state="translated">새로운 명령 만들기</target>
        </trans-unit>
        <trans-unit id="170dc7892cbd89649aafc3ee101e4f79c68d86f1" translate="yes" xml:space="preserve">
          <source>Creating New Diameter Applications</source>
          <target state="translated">새로운 직경 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="6564cfcbd3d733741140bb0ed278c6747abecc97" translate="yes" xml:space="preserve">
          <source>Creating User and Installation Directory</source>
          <target state="translated">사용자 및 설치 디렉토리 생성</target>
        </trans-unit>
        <trans-unit id="acc159238b6a4c5f95cf17043326dd88d6db4527" translate="yes" xml:space="preserve">
          <source>Creating a cycle in an acyclic graph exits the process with a &lt;code&gt;cyclic&lt;/code&gt; message.</source>
          <target state="translated">순환 그래프에서 사이클을 생성하면 &lt;code&gt;cyclic&lt;/code&gt; 메시지 와 함께 프로세스가 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="89a689799f55f47bff5aa438aaad99cc9cac6e80" translate="yes" xml:space="preserve">
          <source>Creating a listen port (or similar)</source>
          <target state="translated">청취 포트 만들기</target>
        </trans-unit>
        <trans-unit id="b0dabb9d644563afda7ef75dbf9ddb689a53e1eb" translate="yes" xml:space="preserve">
          <source>Creating a record is best illustrated by an example:</source>
          <target state="translated">레코드 작성은 예제를 통해 가장 잘 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="4fae37d386ff8866a46ba586ca71d2e627fa9120" translate="yes" xml:space="preserve">
          <source>Creating an SSH File from Public-Key Data</source>
          <target state="translated">공개 키 데이터에서 SSH 파일 생성</target>
        </trans-unit>
        <trans-unit id="0785396cd17353a334d2c5694f1cf8c789487db7" translate="yes" xml:space="preserve">
          <source>Creating and populating the database tables.</source>
          <target state="translated">데이터베이스 테이블 작성 및 채우기</target>
        </trans-unit>
        <trans-unit id="145ac23a36c43a39cd691c79fd62d7dddf447eb7" translate="yes" xml:space="preserve">
          <source>Creating the Mnesia Table</source>
          <target state="translated">기억 상실 표 만들기</target>
        </trans-unit>
        <trans-unit id="5e25b92d6d20894d4a780032d07e9aaf3726169e" translate="yes" xml:space="preserve">
          <source>Creating timers using &lt;code&gt;erlang:send_after/3&lt;/code&gt; and &lt;code&gt;erlang:start_timer/3&lt;/code&gt; , is much more efficient than using the timers provided by the &lt;code&gt;timer&lt;/code&gt; module in STDLIB. The &lt;code&gt;timer&lt;/code&gt; module uses a separate process to manage the timers. That process can easily become overloaded if many processes create and cancel timers frequently (especially when using the SMP emulator).</source>
          <target state="translated">사용 타이머 만들기 &lt;code&gt;erlang:send_after/3&lt;/code&gt; 과 &lt;code&gt;erlang:start_timer/3&lt;/code&gt; , 훨씬 더 효율적이 제공하는 타이머를 사용하는 것보다 &lt;code&gt;timer&lt;/code&gt; STDLIB에서 모듈을. &lt;code&gt;timer&lt;/code&gt; 모듈은 타이머를 관리하는 별도의 프로세스를 사용한다. 많은 프로세스가 타이머를 자주 만들고 취소하면 (특히 SMP 에뮬레이터를 사용하는 경우) 해당 프로세스가 쉽게 오버로드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b1713e614bfa64505cab74f954065c912e39254" translate="yes" xml:space="preserve">
          <source>Creating timers using &lt;code&gt;erlang:send_after/3&lt;/code&gt; and &lt;code&gt;erlang:start_timer/3&lt;/code&gt;, is much more efficient than using the timers provided by the &lt;code&gt;timer&lt;/code&gt; module in STDLIB. The &lt;code&gt;timer&lt;/code&gt; module uses a separate process to manage the timers. That process can easily become overloaded if many processes create and cancel timers frequently (especially when using the SMP emulator).</source>
          <target state="translated">사용 타이머 만들기 &lt;code&gt;erlang:send_after/3&lt;/code&gt; 과 &lt;code&gt;erlang:start_timer/3&lt;/code&gt; , 훨씬 더 효율적이 제공하는 타이머를 사용하는 것보다 &lt;code&gt;timer&lt;/code&gt; STDLIB에서 모듈을. &lt;code&gt;timer&lt;/code&gt; 모듈은 타이머를 관리하는 별도의 프로세스를 사용한다. 많은 프로세스가 타이머를 자주 만들고 취소하는 경우 (특히 SMP 에뮬레이터를 사용하는 경우) 해당 프로세스가 쉽게 오버로드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6aa5b3a37ae261965ea4b5b3df412ec4344bb445" translate="yes" xml:space="preserve">
          <source>Creating user and installation directory</source>
          <target state="translated">사용자 및 설치 디렉토리 작성</target>
        </trans-unit>
        <trans-unit id="7765e538bf9103295574c09ce7f7fcfef216b64e" translate="yes" xml:space="preserve">
          <source>Creation number, &lt;code&gt;creation&lt;/code&gt;</source>
          <target state="translated">작품 번호, &lt;code&gt;creation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d57e5125b47935cf8ac81241bb717e5fa6ce7626" translate="yes" xml:space="preserve">
          <source>Creation of extra HTML pages for improved overview.</source>
          <target state="translated">개선 된 개요를위한 추가 HTML 페이지 작성</target>
        </trans-unit>
        <trans-unit id="d2ed565ee349ff7cd7603b0b26cec60ef4763f9c" translate="yes" xml:space="preserve">
          <source>Creation of match specifications that activates sequential tracing.</source>
          <target state="translated">순차 추적을 활성화하는 일치 스펙 작성</target>
        </trans-unit>
        <trans-unit id="8e6d441d9714522bb21b83364fa2a5d00b6eb8ec" translate="yes" xml:space="preserve">
          <source>Cross Building the System</source>
          <target state="translated">시스템 크로스 구축</target>
        </trans-unit>
        <trans-unit id="d28bb00927e29c8f107524a09cae08d7de3f341c" translate="yes" xml:space="preserve">
          <source>Cross reference data are read from BEAM files, so the first step when checking an edited module is to compile it:</source>
          <target state="translated">BEAM 파일에서 상호 참조 데이터를 읽으므로 편집 된 모듈을 확인할 때 첫 번째 단계는 컴파일하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e02bbbbb5d915bb1cab92b79ffa9a44140cffe21" translate="yes" xml:space="preserve">
          <source>Crypto Functions</source>
          <target state="translated">암호화 기능</target>
        </trans-unit>
        <trans-unit id="cea135803a486e2ab3919a67e1639444facffa92" translate="yes" xml:space="preserve">
          <source>Crypto Old API</source>
          <target state="translated">Crypto Old API</target>
        </trans-unit>
        <trans-unit id="597ce542d5c5a26a702c01810f8144c67ba147bb" translate="yes" xml:space="preserve">
          <source>Crypto operations for open_tar</source>
          <target state="translated">open_tar에 대한 암호화 작업</target>
        </trans-unit>
        <trans-unit id="7c804c33db286558bb634271d46f72ed27582aa7" translate="yes" xml:space="preserve">
          <source>Cuneiform</source>
          <target state="translated">Cuneiform</target>
        </trans-unit>
        <trans-unit id="7fef8120d67245c18d2d3c23d1ec55c168fe972d" translate="yes" xml:space="preserve">
          <source>Currency symbol</source>
          <target state="translated">통화 기호</target>
        </trans-unit>
        <trans-unit id="34cc41fbff089733660a5c7a52b02d1836254094" translate="yes" xml:space="preserve">
          <source>Currenlty we use the legacy BIF &lt;code&gt;erlang:load_module&lt;/code&gt; which is now implemented in Erlang by calling the above two functions in sequence. Function &lt;code&gt;finish_loading&lt;/code&gt; is limited to only accepts a list with one module state as we do not yet use the multi module loading feature.</source>
          <target state="translated">Currenlty 우리 는 위의 두 함수를 순서대로 호출하여 이제 Erlang에서 구현 된 레거시 BIF &lt;code&gt;erlang:load_module&lt;/code&gt; 을 사용합니다 . &lt;code&gt;finish_loading&lt;/code&gt; 함수 는 아직 다중 모듈 로딩 기능을 사용하지 않기 때문에 하나의 모듈 상태가있는 목록 만 허용하도록 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="e989237523ba010c0d10879eecc16b45e92314bb" translate="yes" xml:space="preserve">
          <source>Current &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; is determined by adding the current &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; with current &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt;. The time offset is managed differently depending on which time warp mode you use.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 은 현재 &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt; 과 함께 현재 &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 을 추가하여 결정됩니다 . 시간 오프셋은 사용하는 시간 왜곡 모드에 따라 다르게 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="2d4f83c5e935e58877a3a6722d680b007abadef7" translate="yes" xml:space="preserve">
          <source>Current and Old Code</source>
          <target state="translated">현재 및 이전 코드</target>
        </trans-unit>
        <trans-unit id="8151c464f241134b4f4d456f4cc69f33b94855fd" translate="yes" xml:space="preserve">
          <source>Current application version.</source>
          <target state="translated">현재 애플리케이션 버전.</target>
        </trans-unit>
        <trans-unit id="cf39aa5e331eed7a6bf834b4ebc28d6ec6f1c853" translate="yes" xml:space="preserve">
          <source>Current receiver window size of the association</source>
          <target state="translated">연관의 현재 수신자 창 크기</target>
        </trans-unit>
        <trans-unit id="721e0705b7675f25ef29c6358e2988e03f1c3289" translate="yes" xml:space="preserve">
          <source>Current release version.</source>
          <target state="translated">현재 릴리스 버전.</target>
        </trans-unit>
        <trans-unit id="ef2faf8e1221a945fc56ac8e4b776673e42a06e1" translate="yes" xml:space="preserve">
          <source>Current transaction id.</source>
          <target state="translated">현재 거래 ID</target>
        </trans-unit>
        <trans-unit id="8048afd676e1d54238c0ef0391a67671b912e602" translate="yes" xml:space="preserve">
          <source>Currently &lt;code&gt;*type&lt;/code&gt; is one of:</source>
          <target state="translated">현재 &lt;code&gt;*type&lt;/code&gt; 은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="56ac9a2e7b60275674a03750d103a56f2d845c92" translate="yes" xml:space="preserve">
          <source>Currently null characters at the end of the filename will be accepted by primitive file operations. Such filenames are however still documented as invalid. The implementation will also change in the future and reject such filenames.</source>
          <target state="translated">파일 이름 끝의 현재 널 문자는 기본 파일 작업에서 허용됩니다. 그러나 이러한 파일 이름은 여전히 ​​유효하지 않은 것으로 문서화되어 있습니다. 향후 구현도 변경되어 해당 파일 이름을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="acd42bbf6c8ec5c400e38290f8728a0c7540dc0c" translate="yes" xml:space="preserve">
          <source>Currently only one option is supported:</source>
          <target state="translated">현재 한 가지 옵션 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8f17c4623d28ec0d0cfef9cc6eb14d9f6060ac47" translate="yes" xml:space="preserve">
          <source>Currently recognised options are all options recognised by &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt;term_to_binary/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 인식되는 옵션은 &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt;term_to_binary/2&lt;/a&gt;&lt;/code&gt; 에서 인식하는 모든 옵션 입니다.</target>
        </trans-unit>
        <trans-unit id="fd68810dc863c4a7d9b2c793b7f75aaa4ee6d862" translate="yes" xml:space="preserve">
          <source>Currently recognized options:</source>
          <target state="translated">현재 인식되는 옵션 :</target>
        </trans-unit>
        <trans-unit id="a5181790af2ec6a90e131628be0b3852a277b935" translate="yes" xml:space="preserve">
          <source>Currently supported key value pairs</source>
          <target state="translated">현재 지원되는 키 값 쌍</target>
        </trans-unit>
        <trans-unit id="158a48fbb6ad39cf031aace300bbe96b2c330142" translate="yes" xml:space="preserve">
          <source>Currently the &lt;code&gt;@&lt;/code&gt; carrier pool is used by default, but this will most likely change.</source>
          <target state="translated">현재 &lt;code&gt;@&lt;/code&gt; 캐리어 풀이 기본적으로 사용되지만 변경 될 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="42c9b0cc2314b1c7df76b62723f58c907cbd131e" translate="yes" xml:space="preserve">
          <source>Currently the only available option is &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; which controls whether the function should throw an exception when a preset dictionary is required for decompression. When set to false, a &lt;code&gt;need_dictionary&lt;/code&gt; tuple will be returned instead. See &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt; inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">현재 사용 가능한 유일한 옵션은 압축 해제를 위해 사전 설정 사전이 필요할 때 함수가 예외를 발생시켜야하는지 여부를 제어하는 &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; 입니다. false로 설정하면 &lt;code&gt;need_dictionary&lt;/code&gt; 튜플이 대신 반환됩니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt; inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="44c9fa252343877c40fdea0565278a68f8944c21" translate="yes" xml:space="preserve">
          <source>Currently the only available option is &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; which controls whether the function should throw an exception when a preset dictionary is required for decompression. When set to false, a &lt;code&gt;need_dictionary&lt;/code&gt; tuple will be returned instead. See &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">현재 사용 가능한 유일한 옵션은 &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; 이며 사전 압축 해제에 사전이 필요한 경우 함수에서 예외를 처리해야하는지 여부를 제어합니다. false로 설정하면 &lt;code&gt;need_dictionary&lt;/code&gt; 튜플이 대신 반환됩니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cddb5907e1b47e25c8d0e68d2ed7d4f395d9f17a" translate="yes" xml:space="preserve">
          <source>Currently the sanity check is limited to verifying runtime dependencies found in the &lt;code&gt;.app&lt;/code&gt; files of all applications. More checks will be introduced in the future. This implies that the return type &lt;strong&gt;will&lt;/strong&gt; change in the future.</source>
          <target state="translated">현재 온 전성 검사는 모든 응용 프로그램 의 &lt;code&gt;.app&lt;/code&gt; 파일 에있는 런타임 종속성을 확인하는 것으로 제한됩니다 . 앞으로 더 많은 검사가 도입 될 것입니다. 이는 향후 반환 유형 &lt;strong&gt;이&lt;/strong&gt; 변경 &lt;strong&gt;될&lt;/strong&gt; 것임을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="737645ebed390b24709e100a5775b6cedd472f19" translate="yes" xml:space="preserve">
          <source>Currently there are only two meaningful values for &lt;code&gt;flags&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt; means that data is returned in a list, and &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt; means data is returned as a binary from &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;flags&lt;/code&gt; 에는 두 가지 의미있는 값만 있습니다 . &lt;code&gt;0&lt;/code&gt; 은 데이터가 목록에 반환되고 &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt; 는 데이터가 &lt;code&gt;control&lt;/code&gt; 에서 이진으로 반환됨을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="fb2ff8f97dba7df6390ca52f47c9b879a4000832" translate="yes" xml:space="preserve">
          <source>Currently these processor states are identified as busy:</source>
          <target state="translated">현재 이러한 프로세서 상태는 사용 중으로 식별됩니다.</target>
        </trans-unit>
        <trans-unit id="916446c740392d0ed2dafd488094d55ee7d3cce2" translate="yes" xml:space="preserve">
          <source>Currently these processor states are identified as non-busy:</source>
          <target state="translated">현재 이러한 프로세서 상태는 사용 중이 아닌 것으로 식별됩니다.</target>
        </trans-unit>
        <trans-unit id="b85f8e32cb97e7d50798a57c99f2a062a1c32801" translate="yes" xml:space="preserve">
          <source>Currently unused; reserved for future use.</source>
          <target state="translated">현재 미사용; 나중에 사용하기 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="aaa2fba5f3b84e45c450abdd52ebbc2ea6fac546" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;Description&lt;/code&gt; looks like this: &lt;code&gt;{ErrorDescription, StackTrace}&lt;/code&gt;. Applications should not depend on the exact contents of &lt;code&gt;Description&lt;/code&gt; as it could change in the future.</source>
          <target state="translated">현재 &lt;code&gt;Description&lt;/code&gt; 은 &lt;code&gt;{ErrorDescription, StackTrace}&lt;/code&gt; 와 같습니다 . 애플리케이션은 향후 변경 될 수 있으므로 &lt;code&gt;Description&lt;/code&gt; 의 정확한 내용에 의존해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="805f1f3d2b5cdce02a09f56980a6492f2ff9d873" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;::&lt;/code&gt; constraint (read as &amp;laquo;is a subtype of&amp;raquo;) is the only guard constraint that can be used in the &lt;code&gt;when&lt;/code&gt; part of a &lt;code&gt;-spec&lt;/code&gt; attribute.</source>
          <target state="translated">현재 &lt;code&gt;::&lt;/code&gt; 제약 조건 (&amp;laquo;는 하위 유형&amp;raquo;으로 읽음)은 &lt;code&gt;-spec&lt;/code&gt; 속성 의 &lt;code&gt;when&lt;/code&gt; 부분 에서 사용할 수있는 유일한 보호 제약 조건입니다 .</target>
        </trans-unit>
        <trans-unit id="6b33a3652332788030a08fc93e5cbe5362eca702" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;test&lt;/code&gt; functions have many limitations. Essentially, they will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the &lt;code&gt;test&lt;/code&gt; functions may not work if options that change code generations strategies such as the options &lt;code&gt;macro_name_prefix&lt;/code&gt; and &lt;code&gt;record_name_prefix&lt;/code&gt; have been used.</source>
          <target state="translated">현재 &lt;code&gt;test&lt;/code&gt; 기능에는 많은 제한이 있습니다. 본질적으로 ASN.1의 1997 표준을 기반으로 한 오래된 사양에서는 대부분 작동하지만 대부분의 최신 응용 프로그램에서는 작동하지 않습니다. 또 다른 제한 사항은 &lt;code&gt;macro_name_prefix&lt;/code&gt; 및 &lt;code&gt;record_name_prefix&lt;/code&gt; 옵션과 같은 코드 생성 전략을 변경하는 옵션을 사용한 경우 &lt;code&gt;test&lt;/code&gt; 기능이 작동하지 않을 수 있다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="44933733aa28b6d8531f1ae7ccd8a964ec602e20" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;value&lt;/code&gt; function has many limitations. Essentially, it will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the &lt;code&gt;value&lt;/code&gt; function may not work if options that change code generations strategies such as the options &lt;code&gt;macro_name_prefix&lt;/code&gt; and &lt;code&gt;record_name_prefix&lt;/code&gt; have been used.</source>
          <target state="translated">현재 &lt;code&gt;value&lt;/code&gt; 기능에는 많은 제한이 있습니다. 본질적으로 ASN.1의 1997 표준을 기반으로 한 오래된 사양에서는 대부분 작동하지만 대부분의 최신 응용 프로그램에서는 작동하지 않습니다. 또 다른 제한 사항은 &lt;code&gt;macro_name_prefix&lt;/code&gt; 및 &lt;code&gt;record_name_prefix&lt;/code&gt; 옵션과 같은 코드 생성 전략을 변경하는 옵션을 사용한 경우 &lt;code&gt;value&lt;/code&gt; 함수가 작동하지 않을 수 있다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="f987ed3a963a27fa289e8fd0d8f52a7557bdded2" translate="yes" xml:space="preserve">
          <source>Currently, the internal data structure used is the same as the record-based data structures used traditionally in the Beam compiler.</source>
          <target state="translated">현재 사용되는 내부 데이터 구조는 Beam 컴파일러에서 전통적으로 사용되는 레코드 기반 데이터 구조와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9dedb8bdaf7eadde90818d8da0963f5eaacb758f" translate="yes" xml:space="preserve">
          <source>Currently, there is only one type of activity event:</source>
          <target state="translated">현재 한 가지 유형의 활동 이벤트 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="72d7c957925632fbd0795c722d5cf79313ad5ffa" translate="yes" xml:space="preserve">
          <source>Currently, this function supports two kinds of &lt;code&gt;LockItem&lt;/code&gt;:</source>
          <target state="translated">현재이 함수는 두 종류의 &lt;code&gt;LockItem&lt;/code&gt; 을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="7a052b758ff7895ca2a0244f6ec652c1451bb702" translate="yes" xml:space="preserve">
          <source>Currently, two code generation directives are recognized:</source>
          <target state="translated">현재 두 가지 코드 생성 지시문이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="0c7eadb776ef13c1255dc3e615481ec6ba8e1ec5" translate="yes" xml:space="preserve">
          <source>Curve definition details.</source>
          <target state="translated">곡선 정의 세부 사항.</target>
        </trans-unit>
        <trans-unit id="c534cb2c111128e5604f4d3c947fbaeb811a9730" translate="yes" xml:space="preserve">
          <source>Customizes the hostname verification of the peer certificate, as different protocols that use TLS such as HTTP or LDAP may want to do it differently, for possible options see &lt;code&gt;public_key:pkix_verify_hostname/3&lt;/code&gt;</source>
          <target state="translated">HTTP 또는 LDAP와 같은 TLS를 사용하는 다른 프로토콜에서 다르게 수행하려는 경우 피어 인증서의 호스트 이름 확인을 사용자 정의합니다. 가능한 옵션에 대해서는 &lt;code&gt;public_key:pkix_verify_hostname/3&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae741815264dad90e13c7bc07c21c7c5c96ea669" translate="yes" xml:space="preserve">
          <source>Cygwin, the very latest is usually best. Get all the development tools and of course all the basic ditto. Make sure to get jar and also make sure &lt;strong&gt;not&lt;/strong&gt; to install a Cygwin'ish Java, since the Cygwin jar command is used but Sun's Java compiler and virtual machine.</source>
          <target state="translated">Cygwin은 최신 버전이 가장 좋습니다. 모든 개발 도구와 기본 개념을 모두 얻으십시오. Cygwin jar 명령이 사용되지만 Sun의 Java 컴파일러 및 가상 시스템이기 때문에 jar를 가져 오고 Cygwin'ish Java를 설치 &lt;strong&gt;하지 않아야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="5330ddfa4df379999c1bfc18ba91ec4dcf678d1d" translate="yes" xml:space="preserve">
          <source>Cypriot</source>
          <target state="translated">Cypriot</target>
        </trans-unit>
        <trans-unit id="1cb0955565a00adf2d4dd0f3ab0976a162bd4df5" translate="yes" xml:space="preserve">
          <source>Cyrillic</source>
          <target state="translated">Cyrillic</target>
        </trans-unit>
        <trans-unit id="21fc8b66c0a4c09f396ed00049bf845395e89b65" translate="yes" xml:space="preserve">
          <source>Cyrillic &quot;I&quot; has usually no lowercase form.</source>
          <target state="translated">키릴 문자 &quot;I&quot;는 일반적으로 소문자 형식이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c980e1393e0a3ddf6199ac5dcf65c0343125a297" translate="yes" xml:space="preserve">
          <source>D. Ungar. Generation scavenging: A non-disruptive high performance storage reclamation algorithm. SIGSOFT Softw. Eng. Notes, 9(3):157&amp;ndash;167, Apr. 1984.</source>
          <target state="translated">D. Ungar. 생성 청소 : 무중단 고성능 스토리지 재 확보 알고리즘입니다. SIGSOFT 소프트웨어 Eng. 주석, 9 (3) : 157&amp;ndash;167, 1984 년 4 월.</target>
        </trans-unit>
        <trans-unit id="65057e7a198e3179350e6ed9b0f04982f164814a" translate="yes" xml:space="preserve">
          <source>DATA TYPES</source>
          <target state="translated">데이터 유형</target>
        </trans-unit>
        <trans-unit id="eb30a0c1b7deea5450760581dfaa4d7500b03e11" translate="yes" xml:space="preserve">
          <source>DER encodes a PKIX x509 certificate or part of such a certificate. This function must be used for encoding certificates or parts of certificates that are decoded/created in the &lt;code&gt;otp&lt;/code&gt; format, whereas for the plain format this function directly calls &lt;code&gt;der_encode/2&lt;/code&gt;.</source>
          <target state="translated">DER은 PKIX x509 인증서 또는 이러한 인증서의 일부를 인코딩합니다. 이 함수는 &lt;code&gt;otp&lt;/code&gt; 형식으로 디코딩 / 생성 된 인증서 또는 인증서의 일부를 인코딩하는 데 사용해야 하지만 일반 형식의 경우이 함수는 &lt;code&gt;der_encode/2&lt;/code&gt; 를 직접 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a51c8a7474cf4e4cb63af9b321a04d90edaa3a6f" translate="yes" xml:space="preserve">
          <source>DER encoding rule. Only when using option &lt;code&gt;-bber&lt;/code&gt;.</source>
          <target state="translated">DER 인코딩 규칙. &lt;code&gt;-bber&lt;/code&gt; 옵션을 사용하는 경우에만 .</target>
        </trans-unit>
        <trans-unit id="b7de8c553aef404024fa14705d12334a38a9ba56" translate="yes" xml:space="preserve">
          <source>DER encoding rule. Only when using option &lt;code&gt;-ber&lt;/code&gt;.</source>
          <target state="translated">DER 인코딩 규칙. &lt;code&gt;-ber&lt;/code&gt; 옵션을 사용하는 경우에만 .</target>
        </trans-unit>
        <trans-unit id="84dcd5feea6dee4fae3ce05cdc83a12f1d7ea1d4" translate="yes" xml:space="preserve">
          <source>DHkeys | ECkey | RSAkey</source>
          <target state="translated">DHkeys | ECkey | RSAkey</target>
        </trans-unit>
        <trans-unit id="d6e732ecd4e11af8a698fbf4ea97940ed4e92352" translate="yes" xml:space="preserve">
          <source>DNS Types</source>
          <target state="translated">DNS 유형</target>
        </trans-unit>
        <trans-unit id="0282a2e2726b5fdbd89b48e12c5edb38b5d2c29e" translate="yes" xml:space="preserve">
          <source>DOUBLE PRECISION</source>
          <target state="translated">더블 정밀</target>
        </trans-unit>
        <trans-unit id="39a267a22efad1284bb718be8389935545f40c42" translate="yes" xml:space="preserve">
          <source>DPA will not be answered with error: a peer that wants to a avoid a race can wait for pending answers before sending DPR.</source>
          <target state="translated">DPA는 오류로 응답하지 않습니다. 경쟁을 피하려는 피어는 DPR을 보내기 전에 대기중인 응답을 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="837847eadad8a02e0a26e0a89d32d4849dab0375" translate="yes" xml:space="preserve">
          <source>DPR is answered by diameter.</source>
          <target state="translated">DPR은 직경으로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="4fe6dfc7b5bf41007c92822040a3771600344912" translate="yes" xml:space="preserve">
          <source>DPR is sent by diameter in response to configuration changes requiring a connection to be broken. The user can also send DPR.</source>
          <target state="translated">DPR은 연결을 끊어야하는 구성 변경에 따라 직경별로 전송됩니다. 사용자는 DPR을 보낼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd47f7b25396b802c6cc872b07c8e74aa8f561f7" translate="yes" xml:space="preserve">
          <source>DSA Private Key</source>
          <target state="translated">DSA 개인 키</target>
        </trans-unit>
        <trans-unit id="9a31ff9ff5352d6a802a866e324e994ce8276420" translate="yes" xml:space="preserve">
          <source>DSS</source>
          <target state="translated">DSS</target>
        </trans-unit>
        <trans-unit id="35cc006848ec06e9bab464320bbc5c7a0c755095" translate="yes" xml:space="preserve">
          <source>DSS is available with OpenSSL versions compatible with Erlang CRYPTO if not disabled by configuration. To dynamically check availability, check that the atom &lt;code&gt;dss&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">DSS는 구성에 의해 비활성화되지 않은 경우 Erlang CRYPTO와 호환되는 OpenSSL 버전에서 사용할 수 있습니다. 가용성을 동적으로 확인하려면 &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt; 반환 한 목록에 atom &lt;code&gt;dss&lt;/code&gt; 가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="09b8851812229eed3f9b811b8227211258143355" translate="yes" xml:space="preserve">
          <source>DTLS is not supported by &lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt;. See also 2.1.</source>
          <target state="translated">DTLS는 &lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt; 지원되지 않습니다 . 2.1도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2778aadf7efa4d7ec17ee2e140d3c4805c86ad10" translate="yes" xml:space="preserve">
          <source>DTLS versions supported by default. Overridden by a version option on &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt;. For the negotiated DTLS version, see &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본적으로 DTLS 버전이 지원됩니다. &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt; 의 버전 옵션으로 대체되었습니다 . 협상 된 DTLS 버전은 &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c878c8fed5fcdc756ccbbc9774c4fbc9fd17e38" translate="yes" xml:space="preserve">
          <source>DTLS versions supported with current application environment and crypto library configuration. Overridden by a version option on &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt; connect/[2,3,4]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt; listen/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt;. For the negotiated DTLS version, see &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1 &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 애플리케이션 환경 및 암호화 라이브러리 구성에서 지원되는 DTLS 버전. &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt; connect/[2,3,4]&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt; listen/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt; 의 버전 옵션으로 재정의됩니다 . 협상 된 DTLS 버전에 대해서는 &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1 &lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="079040b89595a1905052492b01d234e9da8e65c0" translate="yes" xml:space="preserve">
          <source>DTimeout = &lt;code&gt;non_neg_integer() | infinity&lt;/code&gt;</source>
          <target state="translated">DTimeout = &lt;code&gt;non_neg_integer() | infinity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="681894808986453e11139b64095d07555db3bc0c" translate="yes" xml:space="preserve">
          <source>DWA is sent and received by diameter.</source>
          <target state="translated">DWA는 직경별로 송수신됩니다.</target>
        </trans-unit>
        <trans-unit id="115bb573277942e2c0241eacb3cfcfbd168c16cc" translate="yes" xml:space="preserve">
          <source>DWR is sent and received by diameter. Callbacks notify the user of transitions into and out of the OKAY state.</source>
          <target state="translated">DWR은 직경으로 송수신됩니다. 콜백은 사용자에게 OKAY 상태로 전환되는 것을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="2c032387dabc5379db4535651cdfc5d97977abd1" translate="yes" xml:space="preserve">
          <source>Daemon Options (Server Options)</source>
          <target state="translated">데몬 옵션 (서버 옵션)</target>
        </trans-unit>
        <trans-unit id="121a37f5f85a3a162018e843c756b5a8c8364e27" translate="yes" xml:space="preserve">
          <source>Daemons</source>
          <target state="translated">Daemons</target>
        </trans-unit>
        <trans-unit id="a226281af8814d9035b30a81dd3aee4c07b2ffbc" translate="yes" xml:space="preserve">
          <source>Daemons uses all files stored in the &lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;SYSDIR&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="translated">데몬은 &lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;SYSDIR&lt;/a&gt;&lt;/code&gt; 디렉토리에 저장된 모든 파일을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="f643970ffdf0593ff82c6a1d7e6aa468e3c41266" translate="yes" xml:space="preserve">
          <source>Dash punctuation</source>
          <target state="translated">대시 문장 부호</target>
        </trans-unit>
        <trans-unit id="464a2f282d12b45929fd78bb794d8a4f9f946bb8" translate="yes" xml:space="preserve">
          <source>Data :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">데이터 :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt; )-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c9d432b62d16bce12eca345de774a1915e302cce" translate="yes" xml:space="preserve">
          <source>Data :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">데이터 :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="bb7a48866e7195b13e5763e1f37eb88ea2c4df1d" translate="yes" xml:space="preserve">
          <source>Data :: iodata()) -&amp;gt;</source>
          <target state="translated">데이터 :: iodata ())-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b922291aa68d5ce0abb7037b3282f3856db7513f" translate="yes" xml:space="preserve">
          <source>Data Files</source>
          <target state="translated">데이터 파일</target>
        </trans-unit>
        <trans-unit id="112ef38c4c4b9fefb686eebf1834cbe900350455" translate="yes" xml:space="preserve">
          <source>Data Structure</source>
          <target state="translated">데이터 구조</target>
        </trans-unit>
        <trans-unit id="57fc64bb8f382f10196af5681a5427d64937f4ad" translate="yes" xml:space="preserve">
          <source>Data Transfer (RFC 4254, section 5.2)</source>
          <target state="translated">데이터 전송 (RFC 4254, 섹션 5.2)</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">데이터 타입</target>
        </trans-unit>
        <trans-unit id="9c31b6f7739d67773b06fe3449c57ddcbffeb92e" translate="yes" xml:space="preserve">
          <source>Data connect time-out. The time the client waits for the server to connect to the data socket.</source>
          <target state="translated">데이터 연결 시간이 초과되었습니다. 클라이언트가 서버가 데이터 소켓에 연결되기를 기다리는 시간입니다.</target>
        </trans-unit>
        <trans-unit id="7e10a82b8b559dc5b779041b441a1c0dfe49471b" translate="yes" xml:space="preserve">
          <source>Data directory for a test suite. This directory contains any files used by the test suite, for example, extra Erlang modules, binaries, or data files.</source>
          <target state="translated">테스트 스위트의 데이터 디렉토리. 이 디렉토리에는 테스트 스위트가 사용하는 파일 (예 : 추가 Erlang 모듈, 이진 또는 데이터 파일)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="32937a8d06658ffd3c1365a3cd1340aa2557de5c" translate="yes" xml:space="preserve">
          <source>Data for input buffering. For details about the input buffering, see the source code in directory &lt;code&gt;kernel/examples&lt;/code&gt;. That certainly goes beyond the scope of this section.</source>
          <target state="translated">입력 버퍼링을위한 데이터. 입력 버퍼링에 대한 자세한 내용은 &lt;code&gt;kernel/examples&lt;/code&gt; 디렉토리의 소스 코드를 참조하십시오 . 그것은 분명히이 섹션의 범위를 넘어선 다.</target>
        </trans-unit>
        <trans-unit id="e054cdd9c9da7b3b2bb7291300fc3a7629888a95" translate="yes" xml:space="preserve">
          <source>Data for the default user. Passed to the user when calling the callback functions.</source>
          <target state="translated">기본 사용자의 데이터 콜백 함수를 호출 할 때 사용자에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="7d4d62945035570e86162babf629385f4d6e4d3a" translate="yes" xml:space="preserve">
          <source>Data has arrived on the channel. This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt; ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">데이터가 채널에 도착했습니다. 이 이벤트는 &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt; ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt; 호출의 결과로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f1f7cf962006e0b1b007924871539bc66d2db55" translate="yes" xml:space="preserve">
          <source>Data has arrived on the channel. This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt;ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">데이터가 채널에 도착했습니다. 이 이벤트는 &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt;ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt; 호출 결과로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="18ec80ede503c1dd6ab3e54fbee9d4ce77824bf0" translate="yes" xml:space="preserve">
          <source>Data in Mnesia is organized as a set of tables. Each table has a name that must be an atom. Each table is made up of Erlang records. The user is responsible for the record definitions. Each table also has a set of properties. The following are some of the properties that are associated with each table:</source>
          <target state="translated">Mnesia의 데이터는 일련의 테이블로 구성됩니다. 각 테이블의 이름은 원자 여야합니다. 각 테이블은 Erlang 레코드로 구성됩니다. 사용자는 레코드 정의를 담당합니다. 각 테이블에는 일련의 속성이 있습니다. 다음은 각 테이블과 관련된 속성 중 일부입니다.</target>
        </trans-unit>
        <trans-unit id="050ed4cd10f635788adfce66e75cb6851926924f" translate="yes" xml:space="preserve">
          <source>Data in subsequent &lt;code&gt;write/2&lt;/code&gt; calls is buffered until at least &lt;code&gt;Size&lt;/code&gt; bytes are buffered, or until the oldest buffered data is &lt;code&gt;Delay&lt;/code&gt; milliseconds old. Then all buffered data is written in one operating system call. The buffered data is also flushed before some other file operation than &lt;code&gt;write/2&lt;/code&gt; is executed.</source>
          <target state="translated">후속 &lt;code&gt;write/2&lt;/code&gt; 호출의 데이터는 최소 &lt;code&gt;Size&lt;/code&gt; 바이트가 버퍼링 될 때까지 또는 가장 오래된 버퍼링 된 데이터가 &lt;code&gt;Delay&lt;/code&gt; 밀리 초가 될 때까지 버퍼링됩니다 . 그런 다음 모든 버퍼링 된 데이터는 하나의 운영 체제 호출로 작성됩니다. 버퍼링 된 데이터는 &lt;code&gt;write/2&lt;/code&gt; 이외의 다른 파일 작업 이 실행 되기 전에 플러시 됩니다.</target>
        </trans-unit>
        <trans-unit id="129e2ba95fe6bc450fdea60f77c548e87bd22110" translate="yes" xml:space="preserve">
          <source>Data is organized as a set of dynamic tables, which can store tuples. Each table is created by a process. When the process terminates, the table is automatically destroyed. Every table has access rights set at creation.</source>
          <target state="translated">데이터는 튜플을 저장할 수있는 동적 테이블 세트로 구성됩니다. 각 테이블은 프로세스에 의해 작성됩니다. 프로세스가 종료되면 테이블이 자동으로 삭제됩니다. 모든 테이블에는 생성시 설정된 액세스 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c825ea984ebfeb20bfb18c3c089c4b5d7fc910e" translate="yes" xml:space="preserve">
          <source>Data model</source>
          <target state="translated">데이터 모델</target>
        </trans-unit>
        <trans-unit id="d88a58f92c3b91a26c430ae94296edf843a1b410" translate="yes" xml:space="preserve">
          <source>Data retrieval and matching can be performed efficiently if the key for the record is known. Conversely, if the key is unknown, all records in a table must be searched. The larger the table, the more time consuming it becomes. To remedy this problem, &lt;code&gt;Mnesia&lt;/code&gt; indexing capabilities are used to improve data retrieval and matching of records.</source>
          <target state="translated">레코드의 키를 알고 있으면 데이터 검색 및 일치를 효율적으로 수행 할 수 있습니다. 반대로 키를 알 수없는 경우 테이블의 모든 레코드를 검색해야합니다. 테이블이 클수록 시간이 많이 걸립니다. 이 문제를 해결하기 위해 &lt;code&gt;Mnesia&lt;/code&gt; 인덱싱 기능을 사용하여 데이터 검색 및 레코드 일치를 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="e543437de0f5b43e761c9966043280a2df286e1d" translate="yes" xml:space="preserve">
          <source>Data sent between distributed Erlang nodes is encoded in the Erlang external format. You must therefore encode and decode Erlang terms into byte streams if you want to use the distribution protocol to communicate between a C program and Erlang.</source>
          <target state="translated">분산 Erlang 노드간에 전송 된 데이터는 Erlang 외부 형식으로 인코딩됩니다. 따라서 분배 프로토콜을 사용하여 C 프로그램과 Erlang간에 통신하려면 Erlang 용어를 바이트 스트림으로 인코딩하고 디코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4cf6ed152b81374d28ee381b50a64523c29ef6c" translate="yes" xml:space="preserve">
          <source>Data stored by mnesia is not handled.</source>
          <target state="translated">기억 상실에 의해 저장된 데이터는 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="translated">자료형</target>
        </trans-unit>
        <trans-unit id="61074f1c958d6cdd32dad889b3d58a2d0704cbe3" translate="yes" xml:space="preserve">
          <source>Database</source>
          <target state="translated">Database</target>
        </trans-unit>
        <trans-unit id="19d8f0b6010c96f619023ff00641c7c3986b2380" translate="yes" xml:space="preserve">
          <source>Database configuration data</source>
          <target state="translated">데이터베이스 구성 데이터</target>
        </trans-unit>
        <trans-unit id="ba3cf0c65905f3020e42210451d47c186c957bf0" translate="yes" xml:space="preserve">
          <source>Database schema can be dynamically reconfigured at runtime.</source>
          <target state="translated">데이터베이스 스키마는 런타임에 동적으로 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a37f5cd3de7b52eecd6446ee73d36b86dc95de0" translate="yes" xml:space="preserve">
          <source>Database transactions can be distributed, and many functions can be called within one transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 분산시킬 수 있으며 한 트랜잭션 내에서 많은 기능을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="612ad2902cebaa30546804c4eb91a7062d9969d4" translate="yes" xml:space="preserve">
          <source>Datagrams with a TTL of 1 are not forwarded beyond the local network. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">TTL이 1 인 데이터 그램은 로컬 네트워크를 넘어 전달되지 않습니다. 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f7538dd652995f96d0d74319f2536cbba7e113a3" translate="yes" xml:space="preserve">
          <source>Date and Time Source</source>
          <target state="translated">날짜 및 시간 소스</target>
        </trans-unit>
        <trans-unit id="99c601ebd68e151e7d8f1e57867ae003d0a2d8c1" translate="yes" xml:space="preserve">
          <source>Date and time of a startTime/stopTime element in an RFC 5277 create-subscription request. Of XML primitive type &lt;code&gt;dateTime&lt;/code&gt;, which has the (informal) form</source>
          <target state="translated">RFC 5277 구독 생성 요청에서 startTime / stopTime 요소의 날짜 및 시간입니다. (비공식) 형식을 갖는 XML 기본 유형 &lt;code&gt;dateTime&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="2b99e0cca5062728f6965685da68dc39fcfdf9d3" translate="yes" xml:space="preserve">
          <source>Date and time of the request (&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">요청 날짜 및 시간 ( &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3b6dde365cc5d32622a9c6a2695cee0bd68562c2" translate="yes" xml:space="preserve">
          <source>Deactivates the fragmentation properties of a table. The number of fragments must be &lt;code&gt;1&lt;/code&gt;. No other table can refer to this table in its foreign key.</source>
          <target state="translated">테이블의 조각화 속성을 비활성화합니다. 조각 수는 &lt;code&gt;1&lt;/code&gt; 이어야합니다 . 다른 테이블은 외래 키에서이 테이블을 참조 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f459ca6dc8c73dd3f58100639885a5b029445022" translate="yes" xml:space="preserve">
          <source>Deadlocks can occur when concurrent processes set and release locks on the same records. &lt;code&gt;Mnesia&lt;/code&gt; employs a &quot;wait-die&quot; strategy to resolve these situations. If &lt;code&gt;Mnesia&lt;/code&gt; suspects that a deadlock can occur when a transaction tries to set a lock, the transaction is forced to release all its locks and sleep for a while. The Fun in the transaction is evaluated once more.</source>
          <target state="translated">동시 프로세스가 동일한 레코드에서 잠금을 설정 및 해제 할 때 교착 상태가 발생할 수 있습니다. &lt;code&gt;Mnesia&lt;/code&gt; 는 이러한 상황을 해결하기 위해 &quot;wait-die&quot;전략을 사용합니다. 트랜잭션이 잠금을 설정하려고 할 때 교착 상태가 발생할 수 있다고 &lt;code&gt;Mnesia&lt;/code&gt; 가 의심하는 경우 트랜잭션은 모든 잠금을 해제하고 잠시 동안 휴면 상태가됩니다. 거래의 재미는 다시 한 번 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="d42fada4b4db8ee772a6efb71b440f23f712ab2a" translate="yes" xml:space="preserve">
          <source>Deallocate disabled breakpoint structures.</source>
          <target state="translated">비활성화 된 중단 점 구조를 할당 해제합니다.</target>
        </trans-unit>
        <trans-unit id="414719a92983e826f45ea35ed4ef0944d0fd279a" translate="yes" xml:space="preserve">
          <source>Deallocates the dynamically allocated content of the buffer referred by &lt;code&gt;x&lt;/code&gt;. After deallocation, the &lt;code&gt;buff&lt;/code&gt; field is set to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 에서 참조하는 버퍼의 동적 할당 콘텐츠를 할당 해제합니다 . 할당 해제 후 &lt;code&gt;buff&lt;/code&gt; 필드는 &lt;code&gt;NULL&lt;/code&gt; 로 설정 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a82cc6c2e66b72d85b8a41e42d8d7ecc2b401e77" translate="yes" xml:space="preserve">
          <source>Deallocations in a carrier, while it remains in the pool, is always performed the owner. That is, all pooled carriers are employed by their owners.</source>
          <target state="translated">캐리어의 할당 해제는 풀에 남아있는 동안 항상 소유자가 수행합니다. 즉, 모든 합동 운송 업체는 소유자가 고용합니다.</target>
        </trans-unit>
        <trans-unit id="27b709fc2bb3a86f7f88fe651e9e8a0d28e88b36" translate="yes" xml:space="preserve">
          <source>Debug = &lt;code&gt;trace | debug | disable&lt;/code&gt;</source>
          <target state="translated">디버그 = &lt;code&gt;trace | debug | disable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0050ab1b7359d130843a319c89dbe0a79ecc63c9" translate="yes" xml:space="preserve">
          <source>Debug Information</source>
          <target state="translated">디버그 정보</target>
        </trans-unit>
        <trans-unit id="035f7b677e61f61b074b00eff0b92ad9e09f27f0" translate="yes" xml:space="preserve">
          <source>Debug events from other modules are still not logged.</source>
          <target state="translated">다른 모듈의 디버그 이벤트는 여전히 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32e9e821173db8cfa7b505ab8a20a84321f18828" translate="yes" xml:space="preserve">
          <source>Debug only handler</source>
          <target state="translated">디버그 전용 핸들러</target>
        </trans-unit>
        <trans-unit id="fa4563928cc0c50665178b278c9e71ebacafdf3f" translate="yes" xml:space="preserve">
          <source>Debug option that can be used when starting a &lt;code&gt;gen_statem&lt;/code&gt; server through, &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; 을 통해 &lt;code&gt;gen_statem&lt;/code&gt; 서버를 시작할 때 사용할 수있는 디버그 옵션입니다 .</target>
        </trans-unit>
        <trans-unit id="defb6560167477af27e95859deec8f3b47d74a9a" translate="yes" xml:space="preserve">
          <source>Debugger emulates the stack trace by keeping track of recently called interpreted functions. (The real stack trace cannot be used, as it shows which functions of Debugger have been called, rather than which interpreted functions.)</source>
          <target state="translated">디버거는 최근에 호출 된 해석 함수를 추적하여 스택 추적을 에뮬레이트합니다. (실제 스택 추적은 해석 된 함수가 아니라 호출 된 디버거의 함수를 보여주기 때문에 사용할 수 없습니다.)</target>
        </trans-unit>
        <trans-unit id="e221f45c707889daf1073188d65f869a0b39cbcc" translate="yes" xml:space="preserve">
          <source>Debugger is a graphical user interface for the Erlang interpreter, which can be used for debugging and testing of Erlang programs. For example, breakpoints can be set, code can be single-stepped and variable values can be displayed and changed.</source>
          <target state="translated">디버거는 Erlang 인터프리터 용 그래픽 사용자 인터페이스로 Erlang 프로그램의 디버깅 및 테스트에 사용할 수 있습니다. 예를 들어 중단 점을 설정하고 코드를 한 단계 씩 실행할 수 있으며 변수 값을 표시하고 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd4100fe3414e35ff8a037e54e112a9534b3b212" translate="yes" xml:space="preserve">
          <source>Debugger might at some point start tracing on the processes that execute the interpreted code. This means that a conflict occurs if tracing by other means is started on any of these processes.</source>
          <target state="translated">디버거는 어느 시점에서 해석 된 코드를 실행하는 프로세스에서 추적을 시작할 수 있습니다. 이는 다른 방법으로 추적이 이러한 프로세스 중 하나에서 시작되면 충돌이 발생 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="5b6c664f9525b0123e3fae0ff71a9ebc0fd17090" translate="yes" xml:space="preserve">
          <source>Debugger/Interpreter Interface.</source>
          <target state="translated">디버거 / 인터프리터 인터페이스.</target>
        </trans-unit>
        <trans-unit id="c8d857648ac1598a30ac096be9d255c19f1bd6cc" translate="yes" xml:space="preserve">
          <source>Debugging &lt;code&gt;Mnesia&lt;/code&gt; applications</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; 애플리케이션 디버깅</target>
        </trans-unit>
        <trans-unit id="23e452f4c5d3a6408023724c090fc801cfc07a47" translate="yes" xml:space="preserve">
          <source>Debugging a &lt;code&gt;Mnesia&lt;/code&gt; application can be difficult for various reasons, primarily related to difficulties in understanding how the transaction and table load mechanisms work. Another source of confusion can be the semantics of nested transactions.</source>
          <target state="translated">트랜잭션 및 테이블로드 메커니즘의 작동 방식을 이해하는 데 어려움이있는 여러 가지 이유로 &lt;code&gt;Mnesia&lt;/code&gt; 애플리케이션을 디버깅하는 것은 어려울 수 있습니다. 혼동의 또 다른 원인은 중첩 트랜잭션의 의미론 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f141f05e4d2cf41fd5dfedfa20ad5cf22dab2e01" translate="yes" xml:space="preserve">
          <source>Debugging using the dbg toolkit.</source>
          <target state="translated">dbg 툴킷을 사용하여 디버깅</target>
        </trans-unit>
        <trans-unit id="53aa84241bad4437942b340d201b730aaf881f35" translate="yes" xml:space="preserve">
          <source>Debugs a single process. The module &lt;code&gt;Module&lt;/code&gt; is interpreted and &lt;code&gt;apply(Module,Name,Args)&lt;/code&gt; is called. This opens an Attach Process window. For details, see the User's Guide.</source>
          <target state="translated">단일 프로세스를 디버깅합니다. 모듈 &lt;code&gt;Module&lt;/code&gt; 이 해석되고 &lt;code&gt;apply(Module,Name,Args)&lt;/code&gt; 가 호출됩니다. 첨부 프로세스 창이 열립니다. 자세한 내용은 사용 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bf7aef8b1f8e55b262892d6132d56b930c207ed6" translate="yes" xml:space="preserve">
          <source>Debugs the escript. Starts the debugger, loads the module containing the &lt;code&gt;main/1&lt;/code&gt; function into the debugger, sets a breakpoint in &lt;code&gt;main/1&lt;/code&gt;, and invokes &lt;code&gt;main/1&lt;/code&gt;. If the module is precompiled, it must be explicitly compiled with option &lt;code&gt;debug_info&lt;/code&gt;.</source>
          <target state="translated">escript를 디버그합니다. 디버거,로드 모듈 함유 시작 &lt;code&gt;main/1&lt;/code&gt; 디버거 기능, 중단 점을 설정 &lt;code&gt;main/1&lt;/code&gt; 및 원용 &lt;code&gt;main/1&lt;/code&gt; . 모듈이 사전 컴파일 된 경우 옵션 &lt;code&gt;debug_info&lt;/code&gt; 를 사용 하여 명시 적으로 컴파일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cae5faece6cb296b0cc299ed6ddc1b6ca04b9323" translate="yes" xml:space="preserve">
          <source>Decide that the processing of these action requests will take a long time and that the originator should get an immediate 'TransactionPending' reply as interim response. The actual processing of these action requests instead should be delegated to the the handle_trans_long_request/3 callback function with the req_data() as one of its arguments.</source>
          <target state="translated">이러한 조치 요청을 처리하는 데 시간이 오래 걸리고 발신자가 임시 응답으로 즉각적인 'TransactionPending'응답을 받아야한다고 결정하십시오. 이러한 조치 요청의 실제 처리는 대신 인수 중 하나로 req_data ()를 사용하여 handle_trans_long_request / 3 콜백 함수에 위임되어야합니다.</target>
        </trans-unit>
        <trans-unit id="296147e1f16d0d671fd62dba38df0f0bf940898e" translate="yes" xml:space="preserve">
          <source>Decide that these action requests shall be ignored completely.</source>
          <target state="translated">이러한 조치 요청을 완전히 무시하도록 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="2a286603a091ca4a3c3ca6602558d954b8dc8447" translate="yes" xml:space="preserve">
          <source>Decide where the installation should be located on the target machine, run the &lt;code&gt;Install&lt;/code&gt; script on the build machine, and package the installed installation. The installation just need to be unpacked at the right location on the target machine:</source>
          <target state="translated">대상 시스템에서 설치 위치를 결정 하고 빌드 시스템 에서 &lt;code&gt;Install&lt;/code&gt; 스크립트를 실행 한 후 설치된 설치를 패키지하십시오. 대상 머신의 올바른 위치에 설치를 풀기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="c9ab7948100760fa565d60c416761db66c9caa9e" translate="yes" xml:space="preserve">
          <source>Decimal digits (same as \d)</source>
          <target state="translated">십진수 (\ d와 동일)</target>
        </trans-unit>
        <trans-unit id="65da61a3f57995f3366c218b64218e59bec3ca92" translate="yes" xml:space="preserve">
          <source>Decimal notation (for example, &lt;code&gt;&quot;1.5e3&lt;/code&gt;) for REAL values. The NR1, NR2, and NR3 formats as explained in ISO 6093 are supported.</source>
          <target state="translated">REAL 값에 대한 십진 표기법 (예 : &lt;code&gt;&quot;1.5e3&lt;/code&gt; ) ISO 6093에 설명 된 NR1, NR2 및 NR3 형식이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="5b7088c3751cc4ef1491042690b4e5593015c436" translate="yes" xml:space="preserve">
          <source>Decimal number</source>
          <target state="translated">십진수</target>
        </trans-unit>
        <trans-unit id="ff8fb402b4aaa54b8767c9b731bf29abc3194900" translate="yes" xml:space="preserve">
          <source>Decode (parse) a property parameter construct.</source>
          <target state="translated">속성 매개 변수 구문을 디코딩 (구문 분석)합니다.</target>
        </trans-unit>
        <trans-unit id="5979cd6b56fae3871f3bbb815be4ed934b7900cd" translate="yes" xml:space="preserve">
          <source>Decode a Diameter message.</source>
          <target state="translated">직경 메시지를 디코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="1990206866d59651ba6e0898f7b484e1912dfa30" translate="yes" xml:space="preserve">
          <source>Decode a megaco message.</source>
          <target state="translated">megaco 메시지를 해독하십시오.</target>
        </trans-unit>
        <trans-unit id="bf4991dbaad8678edd6c2c6beff475c6105cefe5" translate="yes" xml:space="preserve">
          <source>Decode and encode of Diameter messages.</source>
          <target state="translated">직경 메시지의 디코딩 및 인코딩</target>
        </trans-unit>
        <trans-unit id="5389a6cf55e52d30448954b8ae3ea1f1432bb5b8" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="53d51a3495166acde35e261f9db58105513239d1" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_double&quot;&gt;ei_decode_double()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_double&quot;&gt;ei_decode_double()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="bcbf60508de2e8fb6c0acf89a32b1b712fd3a558" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_fun&quot;&gt;ei_decode_fun()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_fun&quot;&gt;ei_decode_fun()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="01c8261c254cdb936f5be62cc8f13caf8d459017" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_map_header&quot;&gt;ei_decode_map_header()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_map_header&quot;&gt;ei_decode_map_header()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="9f3a6e0157cb514cf0def5168dd2f421d12c22b9" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_pid&quot;&gt;ei_decode_pid()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_pid&quot;&gt;ei_decode_pid()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="48762c869554a6a51f6c435837ed775765ad7d46" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_port&quot;&gt;ei_decode_port()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_port&quot;&gt;ei_decode_port()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="f19abf998e57f78935af7fae2b826e6525341e9b" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_ref&quot;&gt;ei_decode_ref()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_ref&quot;&gt;ei_decode_ref()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="b6ef12b27e8e946e95d0764bca7213989b88a750" translate="yes" xml:space="preserve">
          <source>Decode using &lt;code&gt;&lt;a href=&quot;#ei_decode_tuple_header&quot;&gt;ei_decode_tuple_header()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_tuple_header&quot;&gt;ei_decode_tuple_header()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="cbefe080e7b29f1f4487c5c6caa2cf553d04f704" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_atom&quot;&gt;ei_decode_atom()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_atom_as&quot;&gt;ei_decode_atom_as()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_boolean&quot;&gt;ei_decode_boolean()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_atom&quot;&gt;ei_decode_atom()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#ei_decode_atom_as&quot;&gt;ei_decode_atom_as()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#ei_decode_boolean&quot;&gt;ei_decode_boolean()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="780c6e7733d523f8f1e17b8cd26231f2ae329703" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_binary&quot;&gt;ei_decode_binary()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_binary&quot;&gt;ei_decode_binary()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#ei_decode_bitstring&quot;&gt;ei_decode_bitstring()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="cc811fee38ef1940feb418a6dd8003d3c56dbdc7" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_char&quot;&gt;ei_decode_char()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_long&quot;&gt;ei_decode_long()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_longlong&quot;&gt;ei_decode_longlong()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_ulong&quot;&gt;ei_decode_ulong()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ei_decode_ulonglong&quot;&gt;ei_decode_ulonglong()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_bignum&quot;&gt;ei_decode_bignum()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_char&quot;&gt;ei_decode_char()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#ei_decode_long&quot;&gt;ei_decode_long()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#ei_decode_longlong&quot;&gt;ei_decode_longlong()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#ei_decode_ulong&quot;&gt;ei_decode_ulong()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#ei_decode_ulonglong&quot;&gt;ei_decode_ulonglong()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#ei_decode_bignum&quot;&gt;ei_decode_bignum()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="d7887d699141fadcb44c1491d2061239868a97f7" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_list_header&quot;&gt;ei_decode_list_header()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_list_header&quot;&gt;ei_decode_list_header()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="39ebc6221ef61a3b7e94784fab9c1a7efaf347a5" translate="yes" xml:space="preserve">
          <source>Decode using either &lt;code&gt;&lt;a href=&quot;#ei_decode_string&quot;&gt;ei_decode_string()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ei_decode_string&quot;&gt;ei_decode_string()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#ei_decode_iodata&quot;&gt;ei_decode_iodata()&lt;/a&gt;&lt;/code&gt; 사용하여 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="04c29a268c6d05fb4c10fd39847cdca8507e1edf" translate="yes" xml:space="preserve">
          <source>Decodes PEM binary data and returns entries as ASN.1 DER encoded entities.</source>
          <target state="translated">PEM 이진 데이터를 디코딩하고 ASN.1 DER 인코딩 엔터티로 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="859246fe87085f9c7b8882c6761358eb6c4bc19a" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;long long&lt;/code&gt; or Visual C++ &lt;code&gt;__int64&lt;/code&gt; (64-bit) integer from the binary format.</source>
          <target state="translated">이진 형식에서 GCC &lt;code&gt;long long&lt;/code&gt; 또는 Visual C ++ &lt;code&gt;__int64&lt;/code&gt; (64 비트) 정수를 디코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="7360a27688e20855a0fb8a33b91983575b01f93c" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;long long&lt;/code&gt; or Visual C++ &lt;code&gt;__int64&lt;/code&gt; (64-bit) integer from the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">이진 형식에서 GCC &lt;code&gt;long long&lt;/code&gt; 또는 Visual C ++ &lt;code&gt;__int64&lt;/code&gt; (64 비트) 정수를 디코딩 합니다. 이 기능은 VxWorks 포트에 없습니다.</target>
        </trans-unit>
        <trans-unit id="30180248cea8d3e26590f2263e9fdb501e5d1190" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;unsigned long long&lt;/code&gt; or Visual C++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-bit) integer from the binary format.</source>
          <target state="translated">바이너리 형식에서 GCC &lt;code&gt;unsigned long long&lt;/code&gt; 또는 Visual C ++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64 비트) 정수를 디코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="21f60563405db4b9a7e0be854cf6438cd4beb732" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;unsigned long long&lt;/code&gt; or Visual C++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-bit) integer from the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">GCC &lt;code&gt;unsigned long long&lt;/code&gt; 또는 Visual C ++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64 비트) 정수를 이진 형식에서 디코딩 합니다. 이 기능은 VxWorks 포트에 없습니다.</target>
        </trans-unit>
        <trans-unit id="7cf4297100116a8fb69569a7970b478b23af9197" translate="yes" xml:space="preserve">
          <source>Decodes a PEM entry. &lt;code&gt;pem_decode/1&lt;/code&gt; returns a list of PEM entries. Notice that if the PEM entry is of type 'SubjectPublickeyInfo', it is further decoded to an &lt;code&gt;rsa_public_key()&lt;/code&gt; or &lt;code&gt;dsa_public_key()&lt;/code&gt;.</source>
          <target state="translated">PEM 항목을 디코딩합니다. &lt;code&gt;pem_decode/1&lt;/code&gt; 은 PEM 항목 목록을 반환합니다. PEM 항목이 'SubjectPublickeyInfo'유형 인 경우 &lt;code&gt;rsa_public_key()&lt;/code&gt; 또는 &lt;code&gt;dsa_public_key()&lt;/code&gt; 로 추가로 디코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c631891ab5871d7e6d4723fb99481871fcd5f1a" translate="yes" xml:space="preserve">
          <source>Decodes a base64-encoded string to plain ASCII. See &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">base64로 인코딩 된 문자열을 일반 ASCII로 디코딩합니다. &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54df9fe6765c80fb1da36d250dde56be4a72dc0e" translate="yes" xml:space="preserve">
          <source>Decodes a binary from the binary format. Parameter &lt;code&gt;len&lt;/code&gt; is set to the actual size of the binary. Notice that &lt;code&gt;ei_decode_binary()&lt;/code&gt; assumes that there is enough room for the binary. The size required can be fetched by &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">바이너리 형식에서 바이너리를 디코딩합니다. 매개 변수 &lt;code&gt;len&lt;/code&gt; 은 바이너리의 실제 크기로 설정됩니다. 공지 사항 것을 &lt;code&gt;ei_decode_binary()&lt;/code&gt; 바이너리에 대한 충분한 공간이 있다고 가정합니다. 필요한 크기는 &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt; 으로 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a65748944fa474016b5ec91a3fa3dbe7b3d0391" translate="yes" xml:space="preserve">
          <source>Decodes a binary from the binary format. Parameter &lt;code&gt;len&lt;/code&gt; is set to the actual size of the binary. Notice that &lt;code&gt;ei_decode_binary()&lt;/code&gt; assumes that there is enough room for the binary. The size required can be fetched by &lt;code&gt;ei_get_type()&lt;/code&gt;.</source>
          <target state="translated">이진 형식에서 이진을 디코딩합니다. 매개 변수 &lt;code&gt;len&lt;/code&gt; 은 이진의 실제 크기로 설정됩니다. 공지 사항 것을 &lt;code&gt;ei_decode_binary()&lt;/code&gt; 바이너리에 대한 충분한 공간이 있다고 가정합니다. 필요한 크기는 &lt;code&gt;ei_get_type()&lt;/code&gt; 으로 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4f35749e9af57da021caccd287c0ff3e3f3beaa" translate="yes" xml:space="preserve">
          <source>Decodes a bit string from the binary format.</source>
          <target state="translated">바이너리 형식에서 비트 문자열을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="3c1c6c809be0674c11595d06cc3faa64fd8fd808" translate="yes" xml:space="preserve">
          <source>Decodes a boolean value from the binary format. A boolean is actually an atom, &lt;code&gt;true&lt;/code&gt; decodes 1 and &lt;code&gt;false&lt;/code&gt; decodes 0.</source>
          <target state="translated">이진 형식에서 부울 값을 디코딩합니다. 부울은 실제로 원자이며, &lt;code&gt;true&lt;/code&gt; 는 1을, &lt;code&gt;false&lt;/code&gt; 는 0을 해독합니다.</target>
        </trans-unit>
        <trans-unit id="08cdc88e69d314abed9e3c385ce7668438ddadd6" translate="yes" xml:space="preserve">
          <source>Decodes a char (8-bit) integer between 0-255 from the binary format. For historical reasons the returned integer is of type &lt;code&gt;char&lt;/code&gt;. Your C code is to consider the returned value to be of type &lt;code&gt;unsigned char&lt;/code&gt; even if the C compilers and system can define &lt;code&gt;char&lt;/code&gt; to be signed.</source>
          <target state="translated">이진 형식에서 0-255 사이의 char (8 비트) 정수를 디코딩합니다. 역사적 이유로 리턴 된 정수는 &lt;code&gt;char&lt;/code&gt; 유형 입니다. C 코드는 C 컴파일러와 시스템이 &lt;code&gt;char&lt;/code&gt; 를 서명하도록 정의 할 수있는 경우에도 리턴 값을 &lt;code&gt;unsigned char&lt;/code&gt; 유형으로 간주합니다 .</target>
        </trans-unit>
        <trans-unit id="41180dad3719b82aebc88aab4177009231fe2259" translate="yes" xml:space="preserve">
          <source>Decodes a double-precision (64-bit) floating point number from the binary format.</source>
          <target state="translated">이진 형식에서 배정 밀도 (64 비트) 부동 소수점 숫자를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="001f04a1f509db28199eaa2770679f16ba8e53e0" translate="yes" xml:space="preserve">
          <source>Decodes a fun from the binary format. Parameter &lt;code&gt;p&lt;/code&gt; is to be &lt;code&gt;NULL&lt;/code&gt; or point to an &lt;code&gt;erlang_fun&lt;/code&gt; structure. This is the only decode function that allocates memory. When the &lt;code&gt;erlang_fun&lt;/code&gt; is no longer needed, it is to be freed with &lt;code&gt;free_fun&lt;/code&gt;. (This has to do with the arbitrary size of the environment for a fun.)</source>
          <target state="translated">이진 형식에서 재미를 해독합니다. 매개 변수 &lt;code&gt;p&lt;/code&gt; 는 &lt;code&gt;NULL&lt;/code&gt; 이거나 &lt;code&gt;erlang_fun&lt;/code&gt; 구조를 가리 킵니다 . 이것은 메모리를 할당하는 유일한 디코드 기능입니다. 때 &lt;code&gt;erlang_fun&lt;/code&gt; 가 더 이상 필요하지, 그것으로 해제 할 수 없습니다 &lt;code&gt;free_fun&lt;/code&gt; . (이것은 재미를 위해 임의의 크기의 환경과 관련이 있습니다.)</target>
        </trans-unit>
        <trans-unit id="18d6f4fae8bbc75abc1803bbb8636e607ae242c5" translate="yes" xml:space="preserve">
          <source>Decodes a list header from the binary format. The number of elements is returned in &lt;code&gt;arity&lt;/code&gt;. The &lt;code&gt;arity+1&lt;/code&gt; elements follow (the last one is the tail of the list, normally an empty list). If &lt;code&gt;arity&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, it is an empty list.</source>
          <target state="translated">이진 형식에서 목록 헤더를 디코딩합니다. 요소 수는 &lt;code&gt;arity&lt;/code&gt; 로 반환됩니다 . &lt;code&gt;arity+1&lt;/code&gt; 요소 (마지막 하나는리스트의 꼬리, 일반적으로 빈 목록)에 따릅니다. 경우 &lt;code&gt;arity&lt;/code&gt; 입니다 &lt;code&gt;0&lt;/code&gt; , 그것은 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e4dc7debd8402c2755243e2193f8347f31d3b550" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Message, but does not decode the data part of the Message. That means, data is still a list of bytes, normally an encoded &lt;code&gt;PDU&lt;/code&gt; (v1 and V2) or an encoded and possibly encrypted &lt;code&gt;scopedPDU&lt;/code&gt; (v3).</source>
          <target state="translated">바이트 목록을 SNMP 메시지로 디코딩하지만 메시지의 데이터 부분은 디코딩하지 않습니다. 즉, 데이터는 여전히 바이트 목록, 일반적으로 인코딩 된 &lt;code&gt;PDU&lt;/code&gt; (v1 및 V2) 또는 인코딩되고 암호화 된 &lt;code&gt;scopedPDU&lt;/code&gt; (v3)입니다.</target>
        </trans-unit>
        <trans-unit id="c1d12aa0e48e3eab7e11f37288dcdbefcb70069b" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Message. Note, if there is a v3 message, the &lt;code&gt;msgSecurityParameters&lt;/code&gt; are not decoded. They must be explicitly decoded by a call to a security model specific decoding function, e.g. &lt;code&gt;dec_usm_security_parameters/1&lt;/code&gt;. Also note, if the &lt;code&gt;scopedPDU&lt;/code&gt; is encrypted, the OCTET STRING encoded &lt;code&gt;encryptedPDU&lt;/code&gt; will be present in the &lt;code&gt;data&lt;/code&gt; field.</source>
          <target state="translated">바이트 목록을 SNMP 메시지로 디코딩합니다. v3 메시지가 있으면 &lt;code&gt;msgSecurityParameters&lt;/code&gt; 가 디코딩되지 않습니다. 보안 모델 특정 디코딩 기능 (예 : &lt;code&gt;dec_usm_security_parameters/1&lt;/code&gt; )을 호출하여 명시 적으로 디코딩해야합니다 . 또한 &lt;code&gt;scopedPDU&lt;/code&gt; 가 암호화되면 OCTET STRING로 인코딩 &lt;code&gt;encryptedPDU&lt;/code&gt; 가 &lt;code&gt;data&lt;/code&gt; 필드에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="eed8e6a0090a3e1c9e82b10392971ae046e1aabd" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Pdu.</source>
          <target state="translated">바이트 목록을 SNMP Pdu로 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="3227a1ecb10582ae4a970b8da90cc8679f737c65" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP ScopedPdu.</source>
          <target state="translated">바이트 목록을 SNMP ScopedPdu로 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="16ff1ac99b297ea5e89d5914e343d66e3ee9ec7e" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP UsmSecurityParameters</source>
          <target state="translated">바이트 목록을 SNMP UsmSecurityParameters로 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="8068464b2954e18d56690f482b5c83beb3d2da91" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into either a scoped pdu record, or - if the scoped pdu was encrypted - to a list of bytes.</source>
          <target state="translated">바이트 목록을 범위가 지정된 pdu 레코드 또는 범위가 지정된 pdu가 암호화 된 경우 바이트 목록으로 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="36fa4c2c8d3ce5469f81bf8e2f01e1bad6585546" translate="yes" xml:space="preserve">
          <source>Decodes a long integer from the binary format. If the code is 64 bits, the function &lt;code&gt;ei_decode_long()&lt;/code&gt; is the same as &lt;code&gt;ei_decode_longlong()&lt;/code&gt;.</source>
          <target state="translated">이진 형식에서 긴 정수를 디코딩합니다. 코드가 64 비트이면, 기능 &lt;code&gt;ei_decode_long()&lt;/code&gt; 와 동일 &lt;code&gt;ei_decode_longlong()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8d6a14f70482ed0b2481e5cdb79122c9ab1d3a9" translate="yes" xml:space="preserve">
          <source>Decodes a map header from the binary format. The number of key-value pairs is returned in &lt;code&gt;*arity&lt;/code&gt;. Keys and values follow in this order: &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt;. This makes a total of &lt;code&gt;arity*2&lt;/code&gt; terms. If &lt;code&gt;arity&lt;/code&gt; is zero, it is an empty map. A correctly encoded map does not have duplicate keys.</source>
          <target state="translated">이진 형식에서 맵 헤더를 디코딩합니다. 키-값 쌍의 수는 &lt;code&gt;*arity&lt;/code&gt; 로 리턴됩니다 . 키와 값은 &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt; 순서로 따릅니다 . 이것은 총 &lt;code&gt;arity*2&lt;/code&gt; 항을 만듭니다. 경우 &lt;code&gt;arity&lt;/code&gt; 제로, 그것은 비어있는 맵입니다. 올바르게 인코딩 된 맵에는 중복 키가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c244de9d7a979fe86f4311c5e29a18ed06b4f05f" translate="yes" xml:space="preserve">
          <source>Decodes a port identifier from the binary format.</source>
          <target state="translated">이진 형식에서 포트 식별자를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="390f19f5072e66d22cafbd8e00edafa3efd84727" translate="yes" xml:space="preserve">
          <source>Decodes a possibly hexadecimal encoded URI.</source>
          <target state="translated">16 진수로 인코딩 된 URI를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="57fa03cd41899fa37eecf042311c2997f929caf8" translate="yes" xml:space="preserve">
          <source>Decodes a process identifier (pid) from the binary format.</source>
          <target state="translated">이진 형식에서 프로세스 식별자 (pid)를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="6e65c52d8708b823530a12d41213dc66d5de21df" translate="yes" xml:space="preserve">
          <source>Decodes a public-key ASN.1 DER encoded entity.</source>
          <target state="translated">공개 키 ASN.1 DER 인코딩 엔터티를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="a78b5544642de9f1463b92f1892b4542c5bd2718" translate="yes" xml:space="preserve">
          <source>Decodes a reference from the binary format.</source>
          <target state="translated">이진 형식에서 참조를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="53687e2100a0b085a62eeaff413256b5b8d3a1ca" translate="yes" xml:space="preserve">
          <source>Decodes a string from the binary format. A string in Erlang is a list of integers between 0 and 255. Notice that as the string is just a list, sometimes lists are encoded as strings by &lt;code&gt;term_to_binary/1&lt;/code&gt;, even if it was not intended.</source>
          <target state="translated">이진 형식에서 문자열을 디코딩합니다. Erlang의 문자열은 0에서 255 사이의 정수 목록입니다. 문자열이 단지 목록이므로, 목록이 의도하지 않은 경우에도 &lt;code&gt;term_to_binary/1&lt;/code&gt; 에 의해 목록이 문자열로 인코딩되는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="497185de18750b89c2dbb7f8891741f766d7a724" translate="yes" xml:space="preserve">
          <source>Decodes a term from the binary format. The term is return in &lt;code&gt;t&lt;/code&gt; as a &lt;code&gt;ETERM*&lt;/code&gt;, so &lt;code&gt;t&lt;/code&gt; is actually an &lt;code&gt;ETERM**&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt;). The term is later to be deallocated.</source>
          <target state="translated">이진 형식에서 용어를 해독합니다. 이 용어는 &lt;code&gt;t&lt;/code&gt; 에서 &lt;code&gt;ETERM*&lt;/code&gt; 으로 반환 되므로 &lt;code&gt;t&lt;/code&gt; 는 실제로 &lt;code&gt;ETERM**&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt; 참조 ). 이 용어는 나중에 할당이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="72bc36a07ace28f24722303e8c818612988dd260" translate="yes" xml:space="preserve">
          <source>Decodes a term of the type &lt;code&gt;iodata()&lt;/code&gt;. The &lt;code&gt;iodata()&lt;/code&gt; term will be flattened an written into the buffer pointed to by the &lt;code&gt;outbuf&lt;/code&gt; argument. The byte size of the &lt;code&gt;iodata&lt;/code&gt; is written into the integer variable pointed to by the &lt;code&gt;size&lt;/code&gt; argument. Both &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;outbuf&lt;/code&gt; can be set to &lt;code&gt;NULL&lt;/code&gt;. The integer pointed to by the &lt;code&gt;index&lt;/code&gt; argument is updated to refer to the term following after the &lt;code&gt;iodata()&lt;/code&gt; term regardless of the the state of the &lt;code&gt;size&lt;/code&gt; and the &lt;code&gt;outbuf&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;code&gt;iodata()&lt;/code&gt; 유형의 용어를 디코딩합니다 . &lt;code&gt;iodata()&lt;/code&gt; 라는 용어가 가리키는 버퍼에 기록되는 평탄화한다 &lt;code&gt;outbuf&lt;/code&gt; 인수. &lt;code&gt;iodata&lt;/code&gt; 의 바이트 크기 는 &lt;code&gt;size&lt;/code&gt; 인수가 가리키는 정수 변수에 기록됩니다 . &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;outbuf&lt;/code&gt; 모두 &lt;code&gt;NULL&lt;/code&gt; 로 설정할 수 있습니다 . &lt;code&gt;index&lt;/code&gt; 인수가 가리키는 정수는 &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;outbuf&lt;/code&gt; 인수 의 상태에 관계없이 &lt;code&gt;iodata()&lt;/code&gt; 용어 뒤에 오는 용어를 참조하도록 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="cb0d9eb8b1a6bcff439c067b3ce8a53cabf5ed5b" translate="yes" xml:space="preserve">
          <source>Decodes a tuple header, the number of elements is returned in &lt;code&gt;arity&lt;/code&gt;. The tuple elements follow in order in the buffer.</source>
          <target state="translated">튜플 헤더를 디코딩하고 요소 수는 &lt;code&gt;arity&lt;/code&gt; 로 반환됩니다 . 튜플 요소는 버퍼에서 순서대로 따릅니다.</target>
        </trans-unit>
        <trans-unit id="f14b0a560a116b63aebf997d631c247b62167904" translate="yes" xml:space="preserve">
          <source>Decodes all percent-encoded triplets in the input that can be both a &lt;code&gt;uri_string()&lt;/code&gt; and a &lt;code&gt;uri_map()&lt;/code&gt;. Note, that this function performs raw decoding and it shall be used on already parsed URI components. Applying this function directly on a standard URI can effectively change it.</source>
          <target state="translated">입력에서 &lt;code&gt;uri_string()&lt;/code&gt; 및 &lt;code&gt;uri_map()&lt;/code&gt; 모두가 될 수있는 모든 퍼센트 인코딩 된 트리플렛을 디코딩합니다 . 이 함수는 원시 디코딩을 수행하며 이미 파싱 된 URI 구성 요소에 사용됩니다. 이 함수를 표준 URI에 직접 적용하면 효과적으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31233f35dd3238479772605c79734e7f70a5729e" translate="yes" xml:space="preserve">
          <source>Decodes an ASN.1 DER-encoded PKIX certificate. Option &lt;code&gt;otp&lt;/code&gt; uses the customized ASN.1 specification OTP-PKIX.asn1 for decoding and also recursively decode most of the standard parts.</source>
          <target state="translated">ASN.1 DER로 인코딩 된 PKIX 인증서를 디코딩합니다. 옵션 &lt;code&gt;otp&lt;/code&gt; 디코딩하기위한 사용자 정의 된 ASN.1 사양 OTP-PKIX.asn1을 사용하고 또한 재귀 적으로 디코딩 표준 부품의 대부분.</target>
        </trans-unit>
        <trans-unit id="cdf2a0e43fcb6c36f9d5916f9aef94c5705fc226" translate="yes" xml:space="preserve">
          <source>Decodes an Erlang trace token from the binary format.</source>
          <target state="translated">바이너리 형식에서 Erlang 추적 토큰을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="b7ce3a579d78e2a9c6e4166acfedf2e1ffc94b57" translate="yes" xml:space="preserve">
          <source>Decodes an SSH file-binary. In the case of &lt;code&gt;known_hosts&lt;/code&gt; or &lt;code&gt;auth_keys&lt;/code&gt;, the binary can include one or more lines of the file. Returns a list of public keys and their attributes, possible attribute values depends on the file type represented by the binary.</source>
          <target state="translated">SSH 파일 바이너리를 디코딩합니다. &lt;code&gt;known_hosts&lt;/code&gt; 또는 &lt;code&gt;auth_keys&lt;/code&gt; 의 경우 바이너리는 파일의 하나 이상의 행을 포함 할 수 있습니다. 공개 키 및 해당 속성의 목록을 리턴합니다. 가능한 속성 값은 2 진으로 표시되는 파일 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7f8da18d3e38384c6097ce6ff967087c8f9501e3" translate="yes" xml:space="preserve">
          <source>Decodes an atom from the binary format. The &lt;code&gt;NULL&lt;/code&gt;-terminated name of the atom is placed at &lt;code&gt;p&lt;/code&gt;. At most &lt;code&gt;MAXATOMLEN&lt;/code&gt; bytes can be placed in the buffer.</source>
          <target state="translated">이진 형식에서 원자를 디코딩합니다. 원자 의 &lt;code&gt;NULL&lt;/code&gt; 종료 이름은 &lt;code&gt;p&lt;/code&gt; 에 위치 합니다. 최대 &lt;code&gt;MAXATOMLEN&lt;/code&gt; 바이트를 버퍼에 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c8d3960a361efe78e33180447e637e944683649" translate="yes" xml:space="preserve">
          <source>Decodes an atom from the binary format. The &lt;code&gt;NULL&lt;/code&gt;-terminated name of the atom is placed in buffer at &lt;code&gt;p&lt;/code&gt; of length &lt;code&gt;plen&lt;/code&gt; bytes.</source>
          <target state="translated">이진 형식에서 원자를 디코딩합니다. 원자 의 &lt;code&gt;NULL&lt;/code&gt; 로 끝나는 이름은 &lt;code&gt;plen&lt;/code&gt; 바이트 길이의 &lt;code&gt;p&lt;/code&gt; 에서 버퍼에 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="9f6e85127a2a679440088c560edc3bd683f74e24" translate="yes" xml:space="preserve">
          <source>Decodes an integer in the binary format to a GMP &lt;code&gt;mpz_t&lt;/code&gt; integer. To use this function, the &lt;code&gt;ei&lt;/code&gt; library must be configured and compiled to use the GMP library.</source>
          <target state="translated">이진 형식의 정수를 GMP &lt;code&gt;mpz_t&lt;/code&gt; 정수로 디코딩 합니다. 이 기능을 사용하려면 &lt;code&gt;ei&lt;/code&gt; 라이브러리를 구성하고 GMP 라이브러리를 사용하도록 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="704c48c66f011d8937953dfaeb16c97c0a406c38" translate="yes" xml:space="preserve">
          <source>Decodes an unsigned long integer from the binary format. If the code is 64 bits, the function &lt;code&gt;ei_decode_ulong()&lt;/code&gt; is the same as &lt;code&gt;ei_decode_ulonglong()&lt;/code&gt;.</source>
          <target state="translated">이진 형식에서 부호없는 긴 정수를 디코딩합니다. 코드가 64 비트이면, 기능 &lt;code&gt;ei_decode_ulong()&lt;/code&gt; 와 동일 &lt;code&gt;ei_decode_ulonglong()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04a3f3a375c17646372842a7a97e427866c348d2" translate="yes" xml:space="preserve">
          <source>Decodes any term, or at least tries to. If the term pointed at by &lt;code&gt;*index&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt; fits in the &lt;code&gt;term&lt;/code&gt; union, it is decoded, and the appropriate field in &lt;code&gt;term-&amp;gt;value&lt;/code&gt; is set, and &lt;code&gt;*index&lt;/code&gt; is incremented by the term size.</source>
          <target state="translated">모든 용어를 해독하거나 최소한 시도합니다. &lt;code&gt;buf&lt;/code&gt; 에서 &lt;code&gt;*index&lt;/code&gt; 로 가리키는 &lt;code&gt;term&lt;/code&gt; union 용어에 맞는 경우 ,이를 해독하고 &lt;code&gt;term-&amp;gt;value&lt;/code&gt; 의 해당 필드를 설정하고 &lt;code&gt;*index&lt;/code&gt; 는 용어 크기에 따라 증가합니다.</target>
        </trans-unit>
        <trans-unit id="5927a995775d2a1e5671d1f98ef2ea5cef8e5c35" translate="yes" xml:space="preserve">
          <source>Decodes percent-encoded triplets that correspond to characters in the unreserved set.</source>
          <target state="translated">예약되지 않은 세트의 문자에 해당하는 백분율로 인코딩 된 3 색을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="757e6ea7683958a3319067002a2a837818f66225" translate="yes" xml:space="preserve">
          <source>Decodes the binary &lt;code&gt;Bin&lt;/code&gt; according to the packet protocol specified by &lt;code&gt;Type&lt;/code&gt;. Similar to the packet handling done by sockets with option &lt;code&gt;{packet,Type}.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 에서 지정한 패킷 프로토콜에 따라 이진 &lt;code&gt;Bin&lt;/code&gt; 을 디코딩합니다 . &lt;code&gt;{packet,Type}.&lt;/code&gt; 옵션을 사용하여 소켓이 수행하는 패킷 처리와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="9631a2823874b272e99656b5b1df620f055a8804" translate="yes" xml:space="preserve">
          <source>Decodes the reply.</source>
          <target state="translated">회신을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="582f2e4b062a05b30bb370cfaeb8199d7d3e14f5" translate="yes" xml:space="preserve">
          <source>Decodes the version magic number for the Erlang binary term format. It must be the first token in a binary term.</source>
          <target state="translated">Erlang 이진 용어 형식의 버전 매직 번호를 디코딩합니다. 이진 용어의 첫 번째 토큰이어야합니다.</target>
        </trans-unit>
        <trans-unit id="457b6089f13c7bd6c468bbfc9e50e82656d5d08c" translate="yes" xml:space="preserve">
          <source>Decoding percent-encoded triplets</source>
          <target state="translated">백분율로 인코딩 된 3 중 디코딩</target>
        </trans-unit>
        <trans-unit id="40f0b9334f2e3eebaf1b21997bec63be1900f3f0" translate="yes" xml:space="preserve">
          <source>Decompress a megaco component.</source>
          <target state="translated">megaco 구성 요소를 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="706dab7ea27ed4fc5d61d3a4e180c1715d801b88" translate="yes" xml:space="preserve">
          <source>Decompresses as much data as possible. It can introduce some output latency (reading input without producing any output).</source>
          <target state="translated">가능한 많은 데이터를 압축 해제합니다. 출력 대기 시간 (출력을 생성하지 않고 입력 읽기)을 도입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f754c77be056a6af30b62b885defffc77916070" translate="yes" xml:space="preserve">
          <source>Decreases the suspend count on the process identified by &lt;code&gt;Suspendee&lt;/code&gt;. &lt;code&gt;Suspendee&lt;/code&gt; is previously to have been suspended through &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt; erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt; erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; by the process calling &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt;. When the suspend count on &lt;code&gt;Suspendee&lt;/code&gt; reaches zero, &lt;code&gt;Suspendee&lt;/code&gt; is resumed, that is, its state is changed from suspended into the state it had before it was suspended.</source>
          <target state="translated">&lt;code&gt;Suspendee&lt;/code&gt; 에서 식별 한 프로세스의 일시 중단 횟수를 줄 입니다. &lt;code&gt;Suspendee&lt;/code&gt; 는 이전에 &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt; 호출하는 프로세스에 의해 &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt; erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt; erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; 을 통해 일시 중지되었습니다 . &lt;code&gt;Suspendee&lt;/code&gt; 의 일시 중단 횟수 가 0에 도달하면 &lt;code&gt;Suspendee&lt;/code&gt; 가 재개됩니다. 즉, 일시 중단에서 일시 중단되기 전의 상태로 상태가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="d3c2e891bd405268b62e1ff3212dcae02a02f258" translate="yes" xml:space="preserve">
          <source>Decreases the suspend count on the process identified by &lt;code&gt;Suspendee&lt;/code&gt;. &lt;code&gt;Suspendee&lt;/code&gt; is previously to have been suspended through &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; by the process calling &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt;. When the suspend count on &lt;code&gt;Suspendee&lt;/code&gt; reaches zero, &lt;code&gt;Suspendee&lt;/code&gt; is resumed, that is, its state is changed from suspended into the state it had before it was suspended.</source>
          <target state="translated">&lt;code&gt;Suspendee&lt;/code&gt; 가 식별 한 프로세스에서 일시 중단 횟수를 줄 입니다. &lt;code&gt;Suspendee&lt;/code&gt; 는 이전에 &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt; 호출하는 프로세스에 의해 &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; 을 통해 일시 중단되었습니다 . &lt;code&gt;Suspendee&lt;/code&gt; 의 일시 중단 횟수 가 0에 도달하면 &lt;code&gt;Suspendee&lt;/code&gt; 가 다시 시작됩니다. 즉 , 일시 중단 상태에서 일시 중단 상태로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="ac71c47ca533a8bc1bfd074ab38eca1bec247cb6" translate="yes" xml:space="preserve">
          <source>Decrements map iterator to point to the previous key-value entry.</source>
          <target state="translated">감소는 반복기가 이전 키-값 항목을 가리 키도록 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="d2ae2edc6a46722a52429b9c14a03465a9f41a38" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the port data lock passed as argument (&lt;code&gt;pdl&lt;/code&gt;).</source>
          <target state="translated">인수 ( &lt;code&gt;pdl&lt;/code&gt; ) 로 전달 된 포트 데이터 잠금의 참조 횟수를 줄입니다 .</target>
        </trans-unit>
        <trans-unit id="754079185976b455e02dde4af4135c24c88cca6b" translate="yes" xml:space="preserve">
          <source>Decrements the reference count on &lt;code&gt;bin&lt;/code&gt; and returns the reference count reached after the decrement.</source>
          <target state="translated">에 참조 카운트를 감소 &lt;code&gt;bin&lt;/code&gt; 과 감소에 도달 한 후에 참조 카운트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="23ae8738dc251a0b810d394196602b268b00e4c4" translate="yes" xml:space="preserve">
          <source>Decrypt &lt;code&gt;CipherText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 블록 암호 에 따라 암호문을 해독 &lt;code&gt;CipherText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83b484422c8b577358aefdc578e61594c216e34f" translate="yes" xml:space="preserve">
          <source>Decrypt &lt;code&gt;CipherText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher. &lt;code&gt;IVec&lt;/code&gt; is an arbitrary initializing vector.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 블록 암호 에 따라 암호문을 해독 &lt;code&gt;CipherText&lt;/code&gt; . &lt;code&gt;IVec&lt;/code&gt; 은 임의의 초기화 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="9525efb2590aee5a65243f5e0df7ad4ceb63df47" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;CipherText&lt;/code&gt; according to the stream cipher &lt;code&gt;Type&lt;/code&gt; specified in stream_init/3. &lt;code&gt;PlainText&lt;/code&gt; can be any number of bytes. The initial &lt;code&gt;State&lt;/code&gt; is created using &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;NewState&lt;/code&gt; must be passed into the next call to &lt;code&gt;stream_decrypt&lt;/code&gt;.</source>
          <target state="translated">stream_init / 3에 지정된 스트림 암호 &lt;code&gt;Type&lt;/code&gt; 에 따라 &lt;code&gt;CipherText&lt;/code&gt; 를 해독 합니다. &lt;code&gt;PlainText&lt;/code&gt; 는 임의의 바이트 수일 수 있습니다. 초기 &lt;code&gt;State&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt; 를 사용하여 작성됩니다 . &lt;code&gt;stream_decrypt&lt;/code&gt; 에 대한 다음 호출로 &lt;code&gt;NewState&lt;/code&gt; 를 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="503569633da92548476a9ed57790d601574d1b5f" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;EncryptFileName&lt;/code&gt;, previously generated with &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt;. The original file contents is saved in the target file. The encryption key, a string, must be available in a text file named &lt;code&gt;.ct_config.crypt&lt;/code&gt;, either in the current directory, or the home directory of the user (it is searched for in that order).</source>
          <target state="translated">이전에 &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; 으로 생성 된 &lt;code&gt;EncryptFileName&lt;/code&gt; 을 해독 합니다 . 원본 파일 내용이 대상 파일에 저장됩니다. 암호화 키인 문자열 은 현재 디렉토리 또는 사용자의 홈 디렉토리 (순서대로 검색 됨)에서 &lt;code&gt;.ct_config.crypt&lt;/code&gt; 라는 텍스트 파일에서 사용 가능해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0caecc0fc0bc550c01ffb41bca39a694068d649b" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;EncryptFileName&lt;/code&gt;, previously generated with &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt;. The original file contents is saved in the target file. The key must have the same value as that used for encryption.</source>
          <target state="translated">이전에 &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; 으로 생성 된 &lt;code&gt;EncryptFileName&lt;/code&gt; 을 해독 합니다 . 원본 파일 내용이 대상 파일에 저장됩니다. 키는 암호화에 사용 된 값과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="0f472612ecfb687801d1f1da0c8ddb8694716270" translate="yes" xml:space="preserve">
          <source>Decrypts the &lt;code&gt;CipherText&lt;/code&gt;, encrypted with &lt;code&gt;&lt;a href=&quot;#private_encrypt-4&quot;&gt;private_encrypt/4&lt;/a&gt;&lt;/code&gt;(or equivalent function) using the &lt;code&gt;PrivateKey&lt;/code&gt;, and returns the plaintext (message digest). This is a low level signature verification operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:decrypt_public/[2,3]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PrivateKey&lt;/code&gt; 를 사용하여 &lt;code&gt;&lt;a href=&quot;#private_encrypt-4&quot;&gt;private_encrypt/4&lt;/a&gt;&lt;/code&gt; (또는 동등한 기능)로 암호화 된 &lt;code&gt;CipherText&lt;/code&gt; 를 해독하고 일반 텍스트 (메시지 요약)를 리턴합니다. 예를 들어 이전 버전의 SSL 프로토콜에서 사용되는 저수준 서명 확인 작업입니다. 참조 &lt;code&gt;public_key:decrypt_public/[2,3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14b6972ed8f83c5df6839e4f4a7a44d4f21da901" translate="yes" xml:space="preserve">
          <source>Decrypts the &lt;code&gt;CipherText&lt;/code&gt;, encrypted with &lt;code&gt;&lt;a href=&quot;#public_encrypt-4&quot;&gt;public_encrypt/4&lt;/a&gt;&lt;/code&gt; (or equivalent function) using the &lt;code&gt;PrivateKey&lt;/code&gt;, and returns the plaintext (message digest). This is a low level signature verification operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:decrypt_private/[2,3]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PrivateKey&lt;/code&gt; 를 사용하여 &lt;code&gt;&lt;a href=&quot;#public_encrypt-4&quot;&gt;public_encrypt/4&lt;/a&gt;&lt;/code&gt; (또는 동등한 기능)로 암호화 된 &lt;code&gt;CipherText&lt;/code&gt; 를 해독하고 일반 텍스트 (메시지 요약)를 리턴합니다. 예를 들어 이전 버전의 SSL 프로토콜에서 사용되는 저수준 서명 확인 작업입니다. 참조 &lt;code&gt;public_key:decrypt_private/[2,3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e296f6426e6e16a531ee764e8d6f8a16573adfb8" translate="yes" xml:space="preserve">
          <source>Default :: Type) -&amp;gt;</source>
          <target state="translated">기본 :: 유형)-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0455a1833e2e0886438d3f2c531b19ac46a6d41f" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;Category&lt;/code&gt; is &lt;code&gt;default&lt;/code&gt;, default &lt;code&gt;Importance&lt;/code&gt; is &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt;, and default value for &lt;code&gt;FormatArgs&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;Category&lt;/code&gt; 입니다 &lt;code&gt;default&lt;/code&gt; , 기본 &lt;code&gt;Importance&lt;/code&gt; 이다 &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt; 에 대한 및 기본 값 &lt;code&gt;FormatArgs&lt;/code&gt; 이 있다 &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ae7604c9686fc42d1d93be79893ac976923929b" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;Characters&lt;/code&gt; is the set of nonbreakable whitespace codepoints, defined as Pattern_White_Space in &lt;code&gt;&lt;a href=&quot;http://unicode.org/reports/tr31/&quot;&gt;Unicode Standard Annex #31&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;By default, Dir&lt;/code&gt; is &lt;code&gt;both&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;Characters&lt;/code&gt; 는 깨지지 않는 공백 코드 포인트 세트이며, &lt;code&gt;&lt;a href=&quot;http://unicode.org/reports/tr31/&quot;&gt;Unicode Standard Annex #31&lt;/a&gt;&lt;/code&gt; 에서 Pattern_White_Space로 정의됩니다 . &lt;code&gt;By default, Dir&lt;/code&gt; 은 &lt;code&gt;both&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="23e5055a981cbd9b798977736837eb5085328aa8" translate="yes" xml:space="preserve">
          <source>Default Callback Modules for Handling Configuration Data</source>
          <target state="translated">구성 데이터 처리를위한 기본 콜백 모듈</target>
        </trans-unit>
        <trans-unit id="e39eb9bd6709f45de32fec4660c82ff8892161e4" translate="yes" xml:space="preserve">
          <source>Default Compiler Options</source>
          <target state="translated">기본 컴파일러 옵션</target>
        </trans-unit>
        <trans-unit id="0a132ae1aff547fd2cd28ac84945bb4864a55ae5" translate="yes" xml:space="preserve">
          <source>Default callback module for the client's and server's database operations in the ssh application</source>
          <target state="translated">ssh 애플리케이션에서 클라이언트 및 서버의 데이터베이스 작업을위한 기본 콜백 모듈</target>
        </trans-unit>
        <trans-unit id="0babd07ca0518fcff88ffc718f89e61d45435792" translate="yes" xml:space="preserve">
          <source>Default extensions included in CA certificates if not otherwise specified are:</source>
          <target state="translated">달리 지정되지 않은 경우 CA 인증서에 포함 된 기본 확장은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2ba6be86a95eed9103c8ba22b4e2e2d89c5ea6c4" translate="yes" xml:space="preserve">
          <source>Default extensions included in the server peer cert if not otherwise specified are:</source>
          <target state="translated">달리 지정되지 않은 경우 서버 피어 인증서에 포함 된 기본 확장은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="697433a75c2d172b286a11dbe7054814dcf6047f" translate="yes" xml:space="preserve">
          <source>Default formatter for Logger.</source>
          <target state="translated">로거의 기본 포맷터.</target>
        </trans-unit>
        <trans-unit id="1e96ff76b5e815c9a94c65caf80a80fbe40ea55d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;%hot&lt;/code&gt;. The directives will be applied to declarations of the specific instruction that follow. Here is an example:</source>
          <target state="translated">기본값은 &lt;code&gt;%hot&lt;/code&gt; 입니다. 지침은 다음 특정 지침의 선언에 적용됩니다. 다음은 그 예입니다.</target>
        </trans-unit>
        <trans-unit id="47c9719405207b7b96f782974e156d8b8a3c9316" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;10 timutes&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;10 timutes&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d32a66e97b47395a45626f30911e0e437a9215bd" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;1000&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fd4610fb0d08031a60e5fbdd5587057a34a9c1ea" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;100&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="08361928cb756b9749640168efc42d85af0b54b3" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;21&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;21&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b9c5a16d8900764ce1ca9321bcfe740555ac97eb" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;30000&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e19233f2a52cea852bb5913ca613845f588c4cc8" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;5000&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da64d6a89dcf8de6c2eb3c74416287db71b2e35d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;60000&lt;/code&gt; (milliseconds).</source>
          <target state="translated">기본값은 &lt;code&gt;60000&lt;/code&gt; (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="e0ce2a7c73e9820b57dc327203cf3422cc3eeb90" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[&quot;./&quot;]&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;[&quot;./&quot;]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c13e8f1cbac90a1d2b6c7da13a6f8e97dd112230" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="66bf5e643d1d7909b87604dfdd961ff4bb2e6012" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[v1,v2,v3]&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;[v1,v2,v3]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0e172a976e8c8e94d98a45e1bb8cd57e11ca26de" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[{module, snmpa_mib_storage_ets}]&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;[{module, snmpa_mib_storage_ets}]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e779f763de4578f46a70b430b682e575084a0472" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;any&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fea0f3a6dc1b09df0cdef2240c99a5b2f8a43c35" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;any&lt;/code&gt;. &lt;code&gt;any&lt;/code&gt; is denoted &lt;strong&gt;*&lt;/strong&gt; in the Apache-like configuration file.</source>
          <target state="translated">기본값은 &lt;code&gt;any&lt;/code&gt; . &lt;code&gt;any&lt;/code&gt; 표시된다 &lt;strong&gt;*&lt;/strong&gt; 아파치와 같은 구성 파일입니다.</target>
        </trans-unit>
        <trans-unit id="7c69e3fab0c4ad5ef506a17d1762b197d25a78c1" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;auto&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b84dbd79a23eccbbbdd90c5513d52cd8ca4b4fc9" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;default&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a383f9c193f8c6dcc6fe8502b629d4740cbb9e21" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;disable&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;disable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b16e15890d3d5add9f5075d6403813ccbaeb0554" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7f73e512a2700ceb3d71963efdf25b6344aefa1b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;ignore&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;ignore&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bdc6f3d08785b591338ece524784ab638a0b8ee0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;inet&lt;/code&gt; (IPv4).</source>
          <target state="translated">기본값은 &lt;code&gt;inet&lt;/code&gt; (IPv4)입니다.</target>
        </trans-unit>
        <trans-unit id="72775a8429605b8ef9d6b123fec4c36cc6f5fdfc" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;inet&lt;/code&gt;, legacy option &lt;code&gt;inet6fb4&lt;/code&gt; no longer makes sense and will be translated to inet.</source>
          <target state="translated">기본값은 &lt;code&gt;inet&lt;/code&gt; 이며 레거시 옵션 &lt;code&gt;inet6fb4&lt;/code&gt; 는 더 이상 의미가 없으며 inet으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="4642a28be0677b49caece36e6a6a6474b29cec81" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cc7faf8763de4e5866168e70e2de648588322733" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;ip_comm&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;ip_comm&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8782ff1b608f7224777249a71bf09d550bc8bf1d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;keep&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;keep&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2c4c5118c3f5d8412fe0c9b8e75e982f7543b402" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;master&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b3c1a88abd35aadb6735da1abb4e7f4fcffc3915" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;none&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7701c684b76eb27396b6b989eb599f71cb73da6a" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;normal&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="476ab15348b30627aed06f4843dfc24e65769b47" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;passive&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;passive&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a9ae6d5a6ab3c7108d958b405e37b1852d151d6f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;permanent&lt;/code&gt; for the agent and &lt;code&gt;transient&lt;/code&gt; for the manager.</source>
          <target state="translated">에이전트의 경우 기본값은 &lt;code&gt;permanent&lt;/code&gt; 이며 관리자에게는 &lt;code&gt;transient&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3fa6b78325906162002fd6f0f1f33926a394148b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;pretty&lt;/code&gt;. If the error log is meant to be read directly by a human, &lt;code&gt;pretty&lt;/code&gt; is the best option.</source>
          <target state="translated">기본값은 &lt;code&gt;pretty&lt;/code&gt; . 오류 로그를 사람이 직접 읽을 수있는 경우 가장 좋은 방법은 &lt;code&gt;pretty&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="824599c90eea676a9778f94d7198ac68ab300a0e" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;read_write&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9a8fadbbddfb4128a6f4b12d0a2163d03f0aaee" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;silence&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;silence&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="583cb8385b57b5034b1e17607ea57c59b73db1a5" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_error_logger&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;snmpa_error_logger&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="02aea9736fd88d112465ccdc39b2acdaa303ea9a" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_net_if&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;snmpa_net_if&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8333409a41829e3578d30c5a2a664b88443d2adc" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_net_if_filter&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;snmpa_net_if_filter&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f3f17ded661bc594c2577d8869f7955e1dec73ed" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_net_if&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;snmpm_net_if&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4bf4f4ced8cd0dbd7342f8e0a33f2371634694d0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_net_if_filter&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;snmpm_net_if_filter&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ddefbc20a121faa07ee1502fcea283b5b5348943" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_user_default&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;snmpm_user_default&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="98566a980e52f27b9521d262f661e39d3666ac32" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;stream&lt;/code&gt; for all port types and &lt;code&gt;use_stdio&lt;/code&gt; for spawned ports.</source>
          <target state="translated">기본값은 모든 포트 유형에 대한 &lt;code&gt;stream&lt;/code&gt; 이고 생성 된 포트에 대해서는 &lt;code&gt;use_stdio&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f0ecd2bb96adff619cc4f4a9fad4c2005a003cb0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;string&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="039d36752eeb0d82eb069457f07a973a6abe9ceb" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;temporary&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;temporary&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1aa3539f64ee2e4fbc7c9c9a66ad5a7207dece79" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;terminate&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;terminate&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ed3bc5199c2686242ae7e3ed5925c3d673b0c871" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt; (in which case the &lt;code&gt;mibs_cache_opts()&lt;/code&gt; default values apply).</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다 (이 경우 &lt;code&gt;mibs_cache_opts()&lt;/code&gt; 기본값이 적용됨).</target>
        </trans-unit>
        <trans-unit id="d6280f20eddaf95212e23f7edad94611d8e1ed85" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1253ee2d3a07d43671dc921b852a1fa5eea9c9a7" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;undefined&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1eecd316e90841ac2787732bb944207775a8dc08" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;volatile&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;volatile&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1bb1c08d29b235663689779ac34a672deb282ea2" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;{os_sup, error_report, [Tag]}&lt;/code&gt; which will send the event to the error logger using &lt;code&gt;error_logger:error_report(Tag, Msg)&lt;/code&gt;. &lt;code&gt;Tag&lt;/code&gt; is the value of &lt;code&gt;os_sup_errortag&lt;/code&gt;, see below.</source>
          <target state="translated">기본값은 &lt;code&gt;{os_sup, error_report, [Tag]}&lt;/code&gt; 이며 &lt;code&gt;error_logger:error_report(Tag, Msg)&lt;/code&gt; 사용하여 오류 로거에 이벤트를 보냅니다 . &lt;code&gt;Tag&lt;/code&gt; 는 &lt;code&gt;os_sup_errortag&lt;/code&gt; 의 값입니다 ( 아래 참조).</target>
        </trans-unit>
        <trans-unit id="6c4ecf6fb8d5be6f69f1fc0017367a0d5c711bc1" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;{time, local}&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;{time, local}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d208a95fdc67c4fd0bd4148b35827256b12320f8" translate="yes" xml:space="preserve">
          <source>Default is [{&quot;html&quot;,&quot;text/html&quot;},{&quot;htm&quot;,&quot;text/html&quot;}].</source>
          <target state="translated">기본값은 [{ &quot;html&quot;, &quot;text / html&quot;}, { &quot;htm&quot;, &quot;text / html&quot;}]입니다.</target>
        </trans-unit>
        <trans-unit id="5d8623ebaa6d15c1de36a7c88d7fa400d0bde5d5" translate="yes" xml:space="preserve">
          <source>Default is the &lt;code&gt;pid&lt;/code&gt; of the process calling the request function (&lt;code&gt;self()&lt;/code&gt;).</source>
          <target state="translated">기본값은 요청 함수 ( &lt;code&gt;self()&lt;/code&gt; )를 호출하는 프로세스 의 &lt;code&gt;pid&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="783669ec8b6d87f9bb3c77a3c2c1798cfbb74182" translate="yes" xml:space="preserve">
          <source>Default is the result of the call: &lt;code&gt;erlang:nodes()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;erlang:nodes()&lt;/code&gt; 호출의 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="b71f9247e18ef64c373b1e8d97d0a1f2636d8a9e" translate="yes" xml:space="preserve">
          <source>Default is the string &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 문자열 &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="18601ac2fc7e17710f0915e6b5ef05bb27887ee0" translate="yes" xml:space="preserve">
          <source>Default is the value of option &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;timeout&lt;/code&gt; 옵션의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="cc208dc708b71e87679976d29c68a033547cde17" translate="yes" xml:space="preserve">
          <source>Default mode is &lt;code&gt;interactive&lt;/code&gt; and extra &lt;code&gt;-mode&lt;/code&gt; flags are ignored.</source>
          <target state="translated">기본 모드는 &lt;code&gt;interactive&lt;/code&gt; 이며 추가 &lt;code&gt;-mode&lt;/code&gt; 플래그는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="836f7284a59cd3d69df487640b2cf6b694a06d08" translate="yes" xml:space="preserve">
          <source>Default mode is &lt;code&gt;interactive&lt;/code&gt;.</source>
          <target state="translated">기본 모드는 &lt;code&gt;interactive&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1b39ce8d2a520c8a3189fbf2ba97367df84a7024" translate="yes" xml:space="preserve">
          <source>Default module is &lt;code&gt;snmpa_mib_data_tttn&lt;/code&gt;.</source>
          <target state="translated">기본 모듈은 &lt;code&gt;snmpa_mib_data_tttn&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4361c6aead9bf47c00983b19bb5ca98e6c0b9e32" translate="yes" xml:space="preserve">
          <source>Default module is &lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt;.</source>
          <target state="translated">기본 모듈은 &lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5c80fcde5171c6815b1e3964a4d234c76dddfa21" translate="yes" xml:space="preserve">
          <source>Default option &lt;code&gt;verify_fun&lt;/code&gt; in &lt;code&gt;verify_peer mode&lt;/code&gt;:</source>
          <target state="translated">기본 옵션 &lt;code&gt;verify_fun&lt;/code&gt; 의 &lt;code&gt;verify_peer mode&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="31429f346872d95ecb9c76abf4b205c65c1f8ca7" translate="yes" xml:space="preserve">
          <source>Default option &lt;code&gt;verify_fun&lt;/code&gt; in mode &lt;code&gt;verify_none&lt;/code&gt;:</source>
          <target state="translated">모드 &lt;code&gt;verify_none&lt;/code&gt; 의 기본 옵션 &lt;code&gt;verify_fun&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="aff9b6a0cc8d187932f4b11c2a77c60d5fec8eeb" translate="yes" xml:space="preserve">
          <source>Default reply data.</source>
          <target state="translated">기본 응답 데이터</target>
        </trans-unit>
        <trans-unit id="b63a0128b981003c7392f66006bc8c7ac20272c5" translate="yes" xml:space="preserve">
          <source>Default system error handler.</source>
          <target state="translated">기본 시스템 오류 처리기</target>
        </trans-unit>
        <trans-unit id="6345856a0e8a3d956cb3c0995f0d25360c0d6319" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[[logger_formatter,header],&quot;\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">기본 템플릿 : &lt;code&gt;[[logger_formatter,header],&quot;\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1942e11960cdd6259d20b87d5f9bc7a4248b22d5" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[time,&quot; &quot;,level,&quot;: &quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">기본 템플릿 : &lt;code&gt;[time,&quot; &quot;,level,&quot;: &quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="664fc60eaa20c7a7e9d4be3ec2ea124a631c3101" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[time,&quot; &quot;,level,&quot;:\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">기본 템플릿 : &lt;code&gt;[time,&quot; &quot;,level,&quot;:\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a2b276c7fde0e02f0fb3993af1f245686b3e4f" translate="yes" xml:space="preserve">
          <source>Default value for the receive buffer option is &lt;code&gt;{recbuf, 8192}&lt;/code&gt;.</source>
          <target state="translated">수신 버퍼 옵션의 기본값은 &lt;code&gt;{recbuf, 8192}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f32e1785986f4e170072de77fe30bc73ea07e4e" translate="yes" xml:space="preserve">
          <source>Default value is &lt;code&gt;true&lt;/code&gt; which is compatible with other implementations not supporting ext-info.</source>
          <target state="translated">ext-info를 지원하지 않는 다른 구현과 호환되는 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="825d33c0e6c00fe0704eb917d81ad7fed913518e" translate="yes" xml:space="preserve">
          <source>Default value is defined by &lt;code&gt;gen_udp&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;gen_udp&lt;/code&gt; 에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8765aedbac4aa3ec544b11551b448c12b41e250" translate="yes" xml:space="preserve">
          <source>Default values are used when specifications are missing. The default values are described in &lt;code&gt;&lt;a href=&quot;#Defaults&quot;&gt;Defaults&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사양이 누락되면 기본값이 사용됩니다. &lt;code&gt;&lt;a href=&quot;#Defaults&quot;&gt;Defaults&lt;/a&gt;&lt;/code&gt; 은 기본값에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="32a4bde0d9736765660a5f74143c3437da772412" translate="yes" xml:space="preserve">
          <source>Default values can be omitted from the map:</source>
          <target state="translated">맵에서 기본값을 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc39e685b2778c4e98cf974180c49b56c36d42a5" translate="yes" xml:space="preserve">
          <source>Default values defined in &lt;code&gt;ct_telnet&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ct_telnet&lt;/code&gt; 에 정의 된 기본값 :</target>
        </trans-unit>
        <trans-unit id="b7183d64a08aa8ed12db72af8178cbcbead5abc2" translate="yes" xml:space="preserve">
          <source>Default values:</source>
          <target state="translated">기본값 :</target>
        </trans-unit>
        <trans-unit id="7f0559e313c328246d0decbb94ea54afe197ded0" translate="yes" xml:space="preserve">
          <source>Default. Means that no other state is active.</source>
          <target state="translated">기본. 다른 상태가 활성화되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="70adfbfcb94190bf4179c1b1656700b9b3dc5706" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;10&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d00f49230f8eb1c5a5adb3964d423b4453b7a085" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;20&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;20&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c3230c6cb67eb67fb80df55aa548813d92e446d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;5&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0d2ade6dd141a227cc25a3824eb535788748499" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[name,id,tries,colls,ratio,time,duration]&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;[name,id,tries,colls,ratio,time,duration]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3da629c4c0d822fd8ecf65c6b3b3727cc9e5c7ea" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[{tries, 0}, {colls, 0}, {time, 0}]&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;[{tries, 0}, {colls, 0}, {time, 0}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="614188609a5c964071cad1f8bd6a9a468d7e820f" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d44b52badae592255cd6418c71a1a5eea3c03a9" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;on&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;on&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f73ad54e1062b8542a391081f27b1fffcc0b45f6" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;runtime&lt;/code&gt; (&lt;code&gt;reductions&lt;/code&gt; if &lt;code&gt;tracing=off&lt;/code&gt;)</source>
          <target state="translated">기본값 : &lt;code&gt;runtime&lt;/code&gt; ( &lt;code&gt;tracing=off&lt;/code&gt; 인 경우 &lt;code&gt;reductions&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2b30d6df2867f1947ef6baaea120ba39f3c9fc74" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;time&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;time&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d0b83b26a1706be41ebbd280d1bc7d8f1a895a8" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36a3365955b62edce26a680e752008adf273fb56" translate="yes" xml:space="preserve">
          <source>Defaults to 0.</source>
          <target state="translated">기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="1c473c06b282c91c0a27085833e241188b333237" translate="yes" xml:space="preserve">
          <source>Defaults to 1000.</source>
          <target state="translated">기본값은 1000입니다.</target>
        </trans-unit>
        <trans-unit id="5ead577e24307a5c99c0f4ecf428d17e8652a018" translate="yes" xml:space="preserve">
          <source>Defaults to 10000.</source>
          <target state="translated">기본값은 10000입니다.</target>
        </trans-unit>
        <trans-unit id="7f84e3e77aef438713e4f9a144685be7927ee808" translate="yes" xml:space="preserve">
          <source>Defaults to 24 if &lt;code&gt;pixel_height&lt;/code&gt; is not defined.</source>
          <target state="translated">&lt;code&gt;pixel_height&lt;/code&gt; 가 정의되지 않은 경우 기본값은 24 입니다.</target>
        </trans-unit>
        <trans-unit id="8bbf4adabf764efed0ba9a7d683910f655b556c3" translate="yes" xml:space="preserve">
          <source>Defaults to 30000 for a connecting transport and 60000 for a listening transport.</source>
          <target state="translated">연결 전송의 경우 기본값은 30000이고 수신 전송의 경우 60000입니다.</target>
        </trans-unit>
        <trans-unit id="11e018035b675d6f670c8f153947ef8ac85b7eb7" translate="yes" xml:space="preserve">
          <source>Defaults to 5000.</source>
          <target state="translated">기본값은 5000입니다.</target>
        </trans-unit>
        <trans-unit id="4bbad1989c36321a1ecee068995c94a0209bd094" translate="yes" xml:space="preserve">
          <source>Defaults to 80 if &lt;code&gt;pixel_width&lt;/code&gt; is not defined.</source>
          <target state="translated">&lt;code&gt;pixel_width&lt;/code&gt; 가 정의되지 않은 경우 기본값은 80 입니다.</target>
        </trans-unit>
        <trans-unit id="f5c4b70cd07c6f3fefad18281c5f031ba151a7d6" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;$ROOT/bin/start.boot&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;$ROOT/bin/start.boot&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c8fe4a5bec5903fc3d46f4989fc56e7929f7b1f3" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;$T&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;$T&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e2065f7c8a0f6845b78a98fceca8a4f710d9e7f8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="53178f9f32a4938924c6d5d4ab9abd83467d70a6" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1000&lt;/code&gt; messages.</source>
          <target state="translated">기본적으로 &lt;code&gt;1000&lt;/code&gt; 개의 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="c5488a8a32c4ac6ccbcf58d027426545f1e03865" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1000&lt;/code&gt; milliseconds.</source>
          <target state="translated">기본값은 &lt;code&gt;1000&lt;/code&gt; 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="bc6c9c0faafb4bc4adbcca4ac898a06ee21bc36c" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1048576&lt;/code&gt; bytes for a wrap log, and &lt;code&gt;infinity&lt;/code&gt; for a halt log.</source>
          <target state="translated">랩 로그의 경우 기본값은 &lt;code&gt;1048576&lt;/code&gt; 바이트이고 정지 로그의 경우 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e0b128b4dbe959f1b84e447f04848fbb51f90d3d" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;10&lt;/code&gt; messages.</source>
          <target state="translated">기본적으로 &lt;code&gt;10&lt;/code&gt; 개의 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="b2a703753b27a0abf40f8e330a438a4f253fe3b4" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;10&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d47d43bbd8194f05aa2126c9fdf11bf2b90aa118" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;16777215&lt;/code&gt;, the maximum value of the 24-bit Message Length field in a Diameter Header.</source>
          <target state="translated">기본적으로 직경 헤더에서 24 비트 메시지 길이 필드의 최대 값은 &lt;code&gt;16777215&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1a6c0cd8935293fffa738c3dfa86f1e14e633bed" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;20000&lt;/code&gt; messages.</source>
          <target state="translated">기본값은 &lt;code&gt;20000&lt;/code&gt; 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="2de0a05f7ab44eb3cd29a70953439937d9eef436" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;200&lt;/code&gt; messages.</source>
          <target state="translated">기본적으로 &lt;code&gt;200&lt;/code&gt; 개의 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="b52f6e63c8d7d612910b88c453e883f91b6e2c7e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;3000000&lt;/code&gt; bytes.</source>
          <target state="translated">기본값은 &lt;code&gt;3000000&lt;/code&gt; 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="39c4e7562e40896a6282525b2fe9825858f52bcd" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;5000&lt;/code&gt; milliseconds.</source>
          <target state="translated">기본값은 &lt;code&gt;5000&lt;/code&gt; 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="38ec9d7c90bd0b8b43c9b1964f5331ccd2daca47" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;500&lt;/code&gt; events.</source>
          <target state="translated">기본적으로 &lt;code&gt;500&lt;/code&gt; 개의 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="84a70ef8900e3c61b55b0755742c9a14cd6b1aaf" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt; and defines other modules that &lt;code&gt;Mod&lt;/code&gt; is dependent on. In the &lt;code&gt;relup&lt;/code&gt; file, instructions for suspending processes using &lt;code&gt;Mod&lt;/code&gt; come before instructions for suspending processes using modules in &lt;code&gt;DepMods&lt;/code&gt; when upgrading, and conversely when downgrading. In case of circular dependencies, the order of the instructions in the &lt;code&gt;appup&lt;/code&gt; file is kept.</source>
          <target state="translated">기본값은 &lt;code&gt;[]&lt;/code&gt; 이며 &lt;code&gt;Mod&lt;/code&gt; 가 종속 된 다른 모듈을 정의합니다 . 에서 &lt;code&gt;relup&lt;/code&gt; 의 파일을 사용하여 프로세스 중단에 대한 지침을 &lt;code&gt;Mod&lt;/code&gt; 에 모듈을 사용하여 프로세스를 일시 중단에 대한 지침 앞에 오는 &lt;code&gt;DepMods&lt;/code&gt; 때 업그레이드 및 반대로하면 다운 그레이드. 순환 종속성의 경우 &lt;code&gt;appup&lt;/code&gt; 파일 의 명령어 순서 가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="4cbe92557a6b56a9c2102b63e42df44493fb47be" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2a92a35d8c1a6f0b0941ef0143cd19e8c46e8ed1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt;. See &lt;code&gt;ssl:connect/[2,3,4]&lt;/code&gt; for available options.</source>
          <target state="translated">기본값은 &lt;code&gt;[]&lt;/code&gt; 입니다. 사용 가능한 옵션 은 &lt;code&gt;ssl:connect/[2,3,4]&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6be1bea9f2514a3d8277595da41e2022a0e549b7" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[raw,append,delayed_write]&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;[raw,append,delayed_write]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ccd1ad72444be1eb8a1d63fdae5010212ed0d0d8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[{okay, 3}, {suspect, 1}]&lt;/code&gt;. Not specifying a key is equivalent to specifying the default value for that key.</source>
          <target state="translated">기본값은 &lt;code&gt;[{okay, 3}, {suspect, 1}]&lt;/code&gt; 입니다. 키를 지정하지 않으면 해당 키의 기본값을 지정하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="30360ea7f303c3cd8c7ce3d6ef99f716a4cadc07" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;all&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6956921398952b340157481518ec2a6f6b5babc3" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;answer_3xxx&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;answer_3xxx&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="522d41ffd33ecb3637b56d627f0a78545dcaee56" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;brutal_purge&lt;/code&gt;. It controls what action to take with processes executing old code before loading the new module version. If the value is &lt;code&gt;brutal_purge&lt;/code&gt;, the processes are killed. If the value is &lt;code&gt;soft_purge&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;release_handler#install_release-1&quot;&gt;release_handler:install_release/1&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;{error,{old_processes,Mod}}&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;brutal_purge&lt;/code&gt; 입니다. 새 모듈 버전을로드하기 전에 이전 코드를 실행하는 프로세스에서 수행 할 작업을 제어합니다. 값이 &lt;code&gt;brutal_purge&lt;/code&gt; 인 경우 프로세스가 종료됩니다. 값이 &lt;code&gt;soft_purge&lt;/code&gt; 인 경우 &lt;code&gt;&lt;a href=&quot;release_handler#install_release-1&quot;&gt;release_handler:install_release/1&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;{error,{old_processes,Mod}}&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0a685290bcc48a7e59c7a736b4e662bd2a18eaf0" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;brutal_purge&lt;/code&gt;. It controls what action to take with processes that are executing old code when the new module version has been loaded. If the value is &lt;code&gt;brutal_purge&lt;/code&gt;, the code is purged when the release is made permanent and the processes are killed. If the value is &lt;code&gt;soft_purge&lt;/code&gt;, the release handler purges the old code when no remaining processes execute the code.</source>
          <target state="translated">기본값은 &lt;code&gt;brutal_purge&lt;/code&gt; 입니다. 새 모듈 버전이로드 될 때 이전 코드를 실행중인 프로세스에 수행 할 조치를 제어합니다. 값이 &lt;code&gt;brutal_purge&lt;/code&gt; 인 경우 릴리스가 영구적으로 설정되고 프로세스가 종료되면 코드가 제거됩니다. 값이 &lt;code&gt;soft_purge&lt;/code&gt; 인 경우 릴리스 핸들러는 나머지 프로세스가 코드를 실행하지 않으면 이전 코드를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1ce18033e169b0fa040a8fe4b8fb2a3259652384" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;discard&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;discard&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d172a78785b796eefeba8e42a879c1b464b9ce05" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;dynamic&lt;/code&gt;. It specifies if the code is &quot;dynamic&quot;, that is, if a process using the module spontaneously switches to new code, or if it is &quot;static&quot;. When doing an advanced update and upgrade, the new version of a dynamic module is loaded before the process is asked to change code. When downgrading, the process is asked to change code before loading the new version. For static modules, the new version is loaded before the process is asked to change code, both in the case of upgrading and downgrading. Callback modules are dynamic.</source>
          <target state="translated">기본값은 &lt;code&gt;dynamic&lt;/code&gt; 입니다. 코드가 &quot;동적&quot;인지, 즉 모듈을 사용하는 프로세스가 자발적으로 새 코드로 전환되는지 또는 &quot;정적&quot;인지를 지정합니다. 고급 업데이트 및 업그레이드를 수행 할 때 프로세스에 코드 변경을 요청하기 전에 새 버전의 동적 모듈이로드됩니다. 다운 그레이드 할 때 프로세스는 새 버전을로드하기 전에 코드를 변경하라는 요청을받습니다. 정적 모듈의 경우 업그레이드 및 다운 그레이드 모두에서 프로세스에 코드 변경을 요청하기 전에 새 버전이로드됩니다. 콜백 모듈은 동적입니다.</target>
        </trans-unit>
        <trans-unit id="0831256ce8ef8f30045566bf51dfd4ab6890b884" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;exit&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;exit&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="7fbda095b52b5b96b9b43ccc9c243712ed4abb0f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8652ebd1a1875dc842cac2cb6d36ca46a049174" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="13e845a66ccbf484a674c19236ac835a8dbf0d48" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, the kernel does not send packets through any gateway, only sends them to directly connected hosts.</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. 경우 &lt;code&gt;true&lt;/code&gt; , 커널이 어떤 게이트웨이를 통해 패킷을 전송하지 않습니다 만 직접 연결된 호스트로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="953a4643aa59d388cab6a73448461aed4568ab26" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;. If true, the local binding address &lt;code&gt;{IP,Port}&lt;/code&gt; of the socket can be reused immediately. No waiting in state &lt;code&gt;CLOSE_WAIT&lt;/code&gt; is performed (can be required for high-throughput servers).</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. true 인 경우 소켓 의 로컬 바인딩 주소 &lt;code&gt;{IP,Port}&lt;/code&gt; 를 즉시 재사용 할 수 있습니다. &lt;code&gt;CLOSE_WAIT&lt;/code&gt; 상태의 대기 는 수행 되지 않습니다 (처리량이 많은 서버에 필요할 수 있음).</target>
        </trans-unit>
        <trans-unit id="2b50d011aa069d4af8ec8336db6fa786b360f117" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;full&lt;/code&gt;. If hello is specified the handshake will pause after the hello message and give the user a possibility make decisions based on hello extensions before continuing or aborting the handshake by calling &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt; handshake_continue/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt; handshake_cancel/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;full&lt;/code&gt; 입니다. hello가 지정되면 핸드 셰이크는 hello 메시지 이후에 일시 중지되고 &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt; handshake_continue/3&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt; handshake_cancel/1&lt;/a&gt;&lt;/code&gt; 을 호출하여 핸드 셰이크를 계속하거나 중단하기 전에 사용자에게 hello 확장을 기반으로 결정을 내릴 수있는 가능성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="51f12c6b9e7f3c496c03d562f8756b10481cbc99" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;full&lt;/code&gt;. If hello is specified the handshake will pause after the hello message and give the user a possibility make decisions based on hello extensions before continuing or aborting the handshake by calling &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt;handshake_continue/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt;handshake_cancel/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;full&lt;/code&gt; 입니다. hello가 지정된 경우, hello 메시지 후에 핸드 셰이크가 일시 정지되며, &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt;handshake_continue/3&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt;handshake_cancel/1&lt;/a&gt;&lt;/code&gt; 을 호출하여 핸드 셰이크를 계속하거나 중단하기 전에 hello 확장을 기반으로 사용자에게 결정을 내릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d64473e391bdc8d6853b0b1bf47b391002dabe55" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3dde1c87b65d849ab2915477ed46c20097e08ca7" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;info&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="91b5b1db30cf17391f9c5cd9c36ba6d052eed19f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;log&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;log&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="12f4b8f32191c9efec9785c028c7ded872158457" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;nodes&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;nodes&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="44ef1bb45491ec49e2b4015ff47beff4ee1c84a9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;none&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="64c15a0676a1710adfb24403c5eb21ac4c1a0577" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;notice&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;notice&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="21dc9a6188d73b09b12c39b4abc2ac66a03b8178" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;permanent&lt;/code&gt;</source>
          <target state="translated">기본적으로 &lt;code&gt;permanent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76b542066932542bfc670d29aecd968556be0aa1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;plain&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;plain&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6370e4b386b614ba3ca8765ee7664772eb41be5e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;record&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="37ae4e511bffa217f91b088c6056f729e5169368" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;soft&lt;/code&gt; and defines the type of code change. If it is set to &lt;code&gt;{advanced,Extra}&lt;/code&gt;, implemented processes using &lt;code&gt;gen_server&lt;/code&gt;, &lt;code&gt;gen_fsm&lt;/code&gt;, &lt;code&gt;gen_statem&lt;/code&gt;, or &lt;code&gt;gen_event&lt;/code&gt; transform their internal state by calling the callback function &lt;code&gt;code_change&lt;/code&gt;. Special processes call the callback function &lt;code&gt;system_code_change/4&lt;/code&gt;. In both cases, the term &lt;code&gt;Extra&lt;/code&gt; is passed as an argument to the callback function.</source>
          <target state="translated">기본값은 &lt;code&gt;soft&lt;/code&gt; 이며 코드 변경 유형을 정의합니다. &lt;code&gt;{advanced,Extra}&lt;/code&gt; 로 설정된 경우 &lt;code&gt;gen_server&lt;/code&gt; , &lt;code&gt;gen_fsm&lt;/code&gt; , &lt;code&gt;gen_statem&lt;/code&gt; 또는 &lt;code&gt;gen_event&lt;/code&gt; 를 사용하여 구현 된 프로세스 는 콜백 함수 &lt;code&gt;code_change&lt;/code&gt; 를 호출하여 내부 상태를 변환합니다 . 특수 프로세스는 콜백 함수 &lt;code&gt;system_code_change/4&lt;/code&gt; 를 호출합니다 . 두 경우 모두 &lt;code&gt;Extra&lt;/code&gt; 라는 용어 는 콜백 함수에 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="1cbe17feaca5bcbebdcbde389010ac911bbd0da8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;standard_io&lt;/code&gt;, unless parameter &lt;code&gt;&lt;a href=&quot;#file&quot;&gt;file&lt;/a&gt;&lt;/code&gt; is given, in which case it defaults to &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">매개 변수 &lt;code&gt;&lt;a href=&quot;#file&quot;&gt;file&lt;/a&gt;&lt;/code&gt; 이 제공 되지 않는 한 기본값은 &lt;code&gt;standard_io&lt;/code&gt; 입니다.이 경우 기본값은 &lt;code&gt;file&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6ab3749d50e935fc08d94fe0b73cec333149500f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;standard_io&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;standard_io&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bf41c398ba20486556be07ab32b7f1a10f221b9a" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d8e8d434788e741ceea90a49c2191883f6866ab" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6366779b5031d46bbff9126998c0755304c858d9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;unlimited&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;unlimited&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="61c90f48d9e1f957f14bfc5f2e0ef0326213a09f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;wrap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wrap&lt;/code&gt; 기본값으로 합니다 .</target>
        </trans-unit>
        <trans-unit id="9f554b569e3783882152719d411d4f24f5791213" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{0,32}&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;{0,32}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d52403308fbf6f5d6e4000acda24e540e0fdd24b" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error, tcp_passive}&lt;/code&gt; for TLS (for backward compatibility a four tuple will be converted to a five tuple with the last element &quot;second_element&quot;_passive) and &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; for DTLS (might also be changed to five tuple in the future). Can be used to customize the transport layer. The tag values should be the values used by the underlying transport in its active mode messages. For TLS the callback module must implement a reliable transport protocol, behave as &lt;code&gt;gen_tcp&lt;/code&gt;, and have functions corresponding to &lt;code&gt;inet:setopts/2&lt;/code&gt;, &lt;code&gt;inet:getopts/2&lt;/code&gt;, &lt;code&gt;inet:peername/1&lt;/code&gt;, &lt;code&gt;inet:sockname/1&lt;/code&gt;, and &lt;code&gt;inet:port/1&lt;/code&gt;. The callback &lt;code&gt;gen_tcp&lt;/code&gt; is treated specially and calls &lt;code&gt;inet&lt;/code&gt; directly. For DTLS this feature must be considered exprimental.</source>
          <target state="translated">&lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error, tcp_passive}&lt;/code&gt; 기본값은 {gen_tcp, tcp, tcp_closed, tcp_error, tcp_passive} 입니다 (역방향 호환성을 위해 4 개의 튜플은 마지막 요소 &quot;second_element&quot;_passive가있는 5 개의 튜플로 변환됩니다) 및 DTLS의 경우 &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; (향후에 5 개의 튜플로 변경 될 수도 있습니다). 전송 계층을 사용자 지정하는 데 사용할 수 있습니다. 태그 값은 활성 모드 메시지에서 기본 전송이 사용하는 값이어야합니다. TLS의 경우 콜백 모듈은 신뢰할 수있는 전송 프로토콜을 구현하고 &lt;code&gt;gen_tcp&lt;/code&gt; 로 동작 해야하며 &lt;code&gt;inet:setopts/2&lt;/code&gt; , &lt;code&gt;inet:getopts/2&lt;/code&gt; , &lt;code&gt;inet:peername/1&lt;/code&gt; , &lt;code&gt;inet:sockname/1&lt;/code&gt; 및 &lt;code&gt;inet:port/1&lt;/code&gt; 해당하는 함수를 가져야합니다 . 1. 콜백 &lt;code&gt;gen_tcp&lt;/code&gt; 는 특별히 처리되며 &lt;code&gt;inet&lt;/code&gt; 을 직접 호출 합니다. DTLS의 경우이 기능은 만료로 간주되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7fb1ef1e580384d5c0064df41fd2d7b87d8c60d0" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error}&lt;/code&gt; for TLS and &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; for DTLS. Can be used to customize the transport layer. For TLS the callback module must implement a reliable transport protocol, behave as &lt;code&gt;gen_tcp&lt;/code&gt;, and have functions corresponding to &lt;code&gt;inet:setopts/2&lt;/code&gt;, &lt;code&gt;inet:getopts/2&lt;/code&gt;, &lt;code&gt;inet:peername/1&lt;/code&gt;, &lt;code&gt;inet:sockname/1&lt;/code&gt;, and &lt;code&gt;inet:port/1&lt;/code&gt;. The callback &lt;code&gt;gen_tcp&lt;/code&gt; is treated specially and calls &lt;code&gt;inet&lt;/code&gt; directly. For DTLS this feature must be considered exprimental.</source>
          <target state="translated">기본값 은 TLS의 경우 &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error}&lt;/code&gt; 이고 DTLS의 경우 &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; 입니다. 전송 계층을 사용자 정의하는 데 사용할 수 있습니다. TLS의 경우 콜백 모듈은 안정적인 전송 프로토콜을 구현하고 &lt;code&gt;gen_tcp&lt;/code&gt; 로 작동 해야하며 &lt;code&gt;inet:setopts/2&lt;/code&gt; , &lt;code&gt;inet:getopts/2&lt;/code&gt; , &lt;code&gt;inet:peername/1&lt;/code&gt; , &lt;code&gt;inet:sockname/1&lt;/code&gt; 및 &lt;code&gt;inet:port/1&lt;/code&gt; 해당하는 기능을 가지고 있어야합니다 . 1 . &lt;code&gt;gen_tcp&lt;/code&gt; 콜백 은 특별하게 취급되며 &lt;code&gt;inet&lt;/code&gt; 을 직접 호출 합니다. DTLS의 경우이 기능은 실험적인 것으로 간주해야합니다.</target>
        </trans-unit>
        <trans-unit id="a36ef8c8b579780ece8b57014d59a14f703045e8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt;. See the &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt; logger_formatter(3)&lt;/a&gt;&lt;/code&gt; manual page for information about this formatter and its default configuration.</source>
          <target state="translated">기본값은 &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt; 입니다. 이 포맷터 및 기본 구성에 대한 정보 는 &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt; logger_formatter(3)&lt;/a&gt;&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2723d088669af374903ede951d5315f3e4ecad63" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt;. See the &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; manual page for information about this formatter and its default configuration.</source>
          <target state="translated">기본값은 &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt; 입니다. 이 포맷터 및 기본 구성에 대한 정보 는 &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4a4877b25aeb0557874f2771ad048204daff2dd2" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;strong&gt;os:getenv(&quot;TERM&quot;)&lt;/strong&gt; or &lt;strong&gt;vt100&lt;/strong&gt; if it is undefined.</source>
          <target state="translated">정의되지 않은 경우 기본값은 &lt;strong&gt;os : getenv ( &quot;TERM&quot;)&lt;/strong&gt; 또는 &lt;strong&gt;vt100&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5bf4902176ebacf7b6ef04639b3c0bc58a615080" translate="yes" xml:space="preserve">
          <source>Defaults to a single callback returning &lt;code&gt;dpr&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;dpr&lt;/code&gt; 을 반환하는 단일 콜백 입니다.</target>
        </trans-unit>
        <trans-unit id="1aeb7bf956c8442264330fd75732dcf182cccf24" translate="yes" xml:space="preserve">
          <source>Defaults to all &lt;code&gt;alloc_util&lt;/code&gt; allocators.</source>
          <target state="translated">기본값은 &lt;code&gt;alloc_util&lt;/code&gt; 할당 자입니다.</target>
        </trans-unit>
        <trans-unit id="37dbc06bd156f28851c4999406ea15a140e43c22" translate="yes" xml:space="preserve">
          <source>Defaults to an empty string, meaning that timestamps are displayed in local time. However, for backwards compatibility, if the SASL configuration parameter &lt;code&gt; utc_log&lt;/code&gt;&lt;code&gt;=true&lt;/code&gt;, the default is changed to &lt;code&gt;&quot;Z&quot;&lt;/code&gt;, meaning that timestamps are displayed in UTC.</source>
          <target state="translated">기본값은 빈 문자열로, 타임 스탬프가 현지 시간으로 표시됨을 의미합니다. 그러나 이전 버전과의 호환성을 위해 SASL 구성 매개 변수 &lt;code&gt; utc_log&lt;/code&gt; &lt;code&gt;=true&lt;/code&gt; 이면 기본값이 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; 로 변경되어 타임 스탬프가 UTC로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f0ac5143a00f5ce7d18a4cc13733dda455bb1a8f" translate="yes" xml:space="preserve">
          <source>Defaults to an empty string, meaning that timestamps are displayed in local time. However, for backwards compatibility, if the SASL configuration parameter &lt;code&gt;utc_log&lt;/code&gt;&lt;code&gt;=true&lt;/code&gt;, the default is changed to &lt;code&gt;&quot;Z&quot;&lt;/code&gt;, meaning that timestamps are displayed in UTC.</source>
          <target state="translated">기본값은 빈 문자열입니다. 즉, 타임 스탬프가 현지 시간으로 표시됩니다. 그러나 이전 버전과의 호환성을 위해 SASL 구성 매개 변수 &lt;code&gt;utc_log&lt;/code&gt; &lt;code&gt;=true&lt;/code&gt; 이면 기본값이 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; 로 변경되어 타임 스탬프가 UTC로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5f72ec9715cf0c8fe6b53ad5118ecaee6a1444fb" translate="yes" xml:space="preserve">
          <source>Defaults to false. When revocation status can not be determined, and this option is set to true, details of why no CRLs where accepted are included in the return value.</source>
          <target state="translated">기본값은 false입니다. 해지 상태를 판별 할 수없고이 옵션이 true로 설정된 경우 승인 된 CRL이 리턴 값에 포함되지 않은 이유에 대한 세부 사항.</target>
        </trans-unit>
        <trans-unit id="5da63f3b55682aa18c5a32ed0247c3aeb64b241f" translate="yes" xml:space="preserve">
          <source>Defaults to false. When revocation status cannot be determined, and this option is set to true, details of why no CRLs where accepted are included in the return value.</source>
          <target state="translated">기본값은 false입니다. 해지 상태를 확인할 수없고이 옵션이 true로 설정된 경우 허용 된 CRL이 반환 값에 포함되지 않는 이유에 대한 세부 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a9c571aa87a4ea8780cc596adc181a13cc52660d" translate="yes" xml:space="preserve">
          <source>Defaults to the empty list.</source>
          <target state="translated">빈 목록이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="5c6daa2ef0293bdd73305dd1ac0a4f531b1e327a" translate="yes" xml:space="preserve">
          <source>Defaults to the global value, see &lt;code&gt;&lt;a href=&quot;#use_registry-1&quot;&gt;use_registry/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본값은 전역 값 입니다. &lt;code&gt;&lt;a href=&quot;#use_registry-1&quot;&gt;use_registry/1&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a602b5bd8602734698e6b74c4b2eb3bebd9ec5f" translate="yes" xml:space="preserve">
          <source>Defaults to the same name as the handler identity, in the current directory.</source>
          <target state="translated">기본값은 현재 디렉토리에서 핸들러 ID와 동일한 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5c1b598a9dd6b020bfbeff63f48d339b7d94c998" translate="yes" xml:space="preserve">
          <source>Defaults to true. Changing this results in non-standard behaviour, but can be useful in case peers are known to be behave badly.</source>
          <target state="translated">기본값은 true입니다. 이를 변경하면 비표준 동작이 발생하지만 피어가 제대로 동작하지 않는 경우에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0982d7e5e82334b22ff94f51c5370cd83faae268" translate="yes" xml:space="preserve">
          <source>Define a schema</source>
          <target state="translated">스키마 정의</target>
        </trans-unit>
        <trans-unit id="882b400816f92577d672d3e508d0aa21feed8f76" translate="yes" xml:space="preserve">
          <source>Define event transforms and trace patterns</source>
          <target state="translated">이벤트 변환 및 추적 패턴 정의</target>
        </trans-unit>
        <trans-unit id="4d666916161b40fc59569c57c3349af6fa63e5cc" translate="yes" xml:space="preserve">
          <source>Defined return values (&lt;code&gt;Res&lt;/code&gt;):</source>
          <target state="translated">정의 된 반환 값 ( &lt;code&gt;Res&lt;/code&gt; ) :</target>
        </trans-unit>
        <trans-unit id="4bffcbb88c92d5f5e8def19813cd6f8415452e0d" translate="yes" xml:space="preserve">
          <source>Defines IN, OUT, and IN OUT Parameter Modes for stored procedures.</source>
          <target state="translated">저장 프로 시저에 대한 IN, OUT 및 IN OUT 매개 변수 모드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5d39f449b4476d977b2d160efea17cdc9d0fc162" translate="yes" xml:space="preserve">
          <source>Defines Name as the prefix to be added to record and constant names (followed by a &lt;code&gt;'_'&lt;/code&gt; character) in the generated dictionary module and hrl. Can occur at most once. The section has empty content.</source>
          <target state="translated">생성 된 사전 모듈 및 hrl에서 레코드 및 상수 이름 ( &lt;code&gt;'_'&lt;/code&gt; 문자 뒤에)에 추가 할 접 두부로 Name을 정의합니다 . 최대 한 번 발생할 수 있습니다. 섹션에 빈 내용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="609bc29f4c403d67eaebd3cb403a0166271c206a" translate="yes" xml:space="preserve">
          <source>Defines a macro &lt;code&gt;Macro&lt;/code&gt; to have the value &lt;code&gt;Value&lt;/code&gt;. &lt;code&gt;Macro&lt;/code&gt; is of type atom, and &lt;code&gt;Value&lt;/code&gt; can be any term. The default &lt;code&gt;Value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Value&lt;/code&gt; 값 을 가지도록 매크로 &lt;code&gt;Macro&lt;/code&gt; 를 정의합니다 . &lt;code&gt;Macro&lt;/code&gt; 는 원자 유형이며 &lt;code&gt;Value&lt;/code&gt; 은 임의의 용어 일 수 있습니다. 기본 &lt;code&gt;Value&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bac3f71adee6ba32f5f8a7e3e619bf2d31d8a7d" translate="yes" xml:space="preserve">
          <source>Defines a macro with the specified value. The value can be any Erlang term. Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters. On Unix, terms containing tuples and lists must be quoted. Terms containing spaces must be quoted on all platforms.</source>
          <target state="translated">지정된 값으로 매크로를 정의합니다. 값은 임의의 용어 일 수 있습니다. 셸 자체가 특정 문자를 해석하는 경우 플랫폼에 따라 값을 인용해야 할 수 있습니다. 유닉스에서는 튜플과리스트를 포함하는 용어를 인용해야합니다. 공백이 포함 된 용어는 모든 플랫폼에서 인용해야합니다.</target>
        </trans-unit>
        <trans-unit id="87b45348a5a65ba584d87598b64a79625d78869a" translate="yes" xml:space="preserve">
          <source>Defines a macro.</source>
          <target state="translated">매크로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5067743fbb5608af4e82f23863d916044fcd2d5d" translate="yes" xml:space="preserve">
          <source>Defines a record in the shell. &lt;code&gt;RecordName&lt;/code&gt; is an atom and &lt;code&gt;RecordDefinition&lt;/code&gt; lists the field names and the default values. Usually record definitions are made known to the shell by use of the &lt;code&gt;rr/1,2,3&lt;/code&gt; commands described below, but sometimes it is handy to define records on the fly.</source>
          <target state="translated">쉘에서 레코드를 정의합니다. &lt;code&gt;RecordName&lt;/code&gt; 은 원자이며 &lt;code&gt;RecordDefinition&lt;/code&gt; 은 필드 이름과 기본값을 나열합니다. 일반적으로 레코드 정의는 아래 설명 된 &lt;code&gt;rr/1,2,3&lt;/code&gt; 명령 을 사용하여 쉘에 알려지지 만, 레코드를 즉시 정의하는 것이 편리한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a226b7a7b33a171b2ec57540c6cfc0682e53d67" translate="yes" xml:space="preserve">
          <source>Defines a set of hosts to be denied access to a given directory, for example:</source>
          <target state="translated">주어진 디렉토리에 대한 액세스가 거부 될 호스트 세트를 정의합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="59ff54c12b14765a3537d0b0c2c65171ac69c20e" translate="yes" xml:space="preserve">
          <source>Defines a set of hosts to be granted access to a given directory, for example:</source>
          <target state="translated">주어진 디렉토리에 대한 액세스 권한이 부여 될 호스트 세트를 정의합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1aaa5c87233a02bd21805f36049c813ccf7f2391" translate="yes" xml:space="preserve">
          <source>Defines a subsystem in the daemon.</source>
          <target state="translated">데몬에서 하위 시스템을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="074ed9c9032b75b4b0e85e61d2ac39b09ac35dbf" translate="yes" xml:space="preserve">
          <source>Defines an error report module, implementing the &lt;code&gt;&lt;a href=&quot;snmpa_error_report&quot;&gt;snmpa_error_report&lt;/a&gt;&lt;/code&gt; behaviour. Two modules are provided with the toolkit: &lt;code&gt;snmpa_error_logger&lt;/code&gt; and &lt;code&gt;snmpa_error_io&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpa_error_report&quot;&gt;snmpa_error_report&lt;/a&gt;&lt;/code&gt; 동작을 구현하는 오류 보고서 모듈을 정의합니다 . 툴킷에는 &lt;code&gt;snmpa_error_logger&lt;/code&gt; 및 &lt;code&gt;snmpa_error_io&lt;/code&gt; 의 두 가지 모듈이 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6b4ecfe0e81da96273a7bb0d22856dbd7f7a054" translate="yes" xml:space="preserve">
          <source>Defines how old the entries in the cache will be allowed to become before they are GC'ed (assuming GC is performed). Each entry in the cache is &quot;touched&quot; whenever it is accessed.</source>
          <target state="translated">캐시의 항목이 GC되기 전에 허용되는 기간을 정의합니다 (GC가 수행된다고 가정). 캐시의 각 항목은 액세스 할 때마다 &quot;만져&quot;집니다.</target>
        </trans-unit>
        <trans-unit id="8048465e6b8105c68df3237f5826618a0928119c" translate="yes" xml:space="preserve">
          <source>Defines how the client delivers the result of an asynchronous request (&lt;code&gt;sync&lt;/code&gt; has the value &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">클라이언트가 비동기 요청의 결과를 전달하는 방법을 정의합니다 ( &lt;code&gt;sync&lt;/code&gt; 의 값은 &lt;code&gt;false&lt;/code&gt; 입니다 ).</target>
        </trans-unit>
        <trans-unit id="325860f7335ea21a55d12345565d8cbbe5c59b03" translate="yes" xml:space="preserve">
          <source>Defines if a &quot;full result&quot; is to be returned to the caller (that is, the body, the headers, and the entire status line) or not (the body and the status code).</source>
          <target state="translated">&quot;전체 결과&quot;가 호출자 (즉, 본문, 헤더 및 전체 상태 표시 줄)에 리턴되는지 여부 (본문 및 상태 코드)를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b2500a87e36c92d6066a1bdba062a6613b175ba4" translate="yes" xml:space="preserve">
          <source>Defines if access logs are to be written according to the &lt;code&gt;common&lt;/code&gt; log format or the extended common log format. The &lt;code&gt;common&lt;/code&gt; format is one line looking like this: &lt;code&gt;remotehost rfc931 authuser [date] &quot;request&quot; status bytes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;common&lt;/code&gt; 로그 형식 또는 확장 공통 로그 형식 에 따라 액세스 로그를 기록할지 여부를 정의합니다 . &lt;code&gt;common&lt;/code&gt; : 형식이처럼 보이는 한 줄입니다 &lt;code&gt;remotehost rfc931 authuser [date] &quot;request&quot; status bytes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71a5abb240fe4b4d8e7cf100b1eec791e00989d5" translate="yes" xml:space="preserve">
          <source>Defines if the body is to be delivered as a string or binary. This option is only valid for the synchronous request.</source>
          <target state="translated">본문을 문자열 또는 이진으로 전달할지 여부를 정의합니다. 이 옵션은 동기 요청에만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="ee2ef90cd00730b5bd40d9417a7056e8275b7c19" translate="yes" xml:space="preserve">
          <source>Defines if the headers provided by the user are to be made lower case or to be regarded as case sensitive.</source>
          <target state="translated">사용자가 제공 한 헤더를 소문자로 만들거나 대소 문자를 구분할지 여부를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6766740e1750090ffa239838dcb00c9a031e0757" translate="yes" xml:space="preserve">
          <source>Defines if the mib server shall perform cache gc automatically or leave it to the user (see &lt;code&gt;&lt;a href=&quot;snmpa#gc_mibs_cache&quot;&gt;gc_mibs_cache/0,1,2,3&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">mib 서버가 캐시 gc를 자동으로 수행하거나 사용자에게 남겨야하는지 정의합니다 ( &lt;code&gt;&lt;a href=&quot;snmpa#gc_mibs_cache&quot;&gt;gc_mibs_cache/0,1,2,3&lt;/a&gt;&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="af70eeb1554459fba2775708e0df2d3c1b28492b" translate="yes" xml:space="preserve">
          <source>Defines if the node is to be restarted (&lt;code&gt;init:restart()&lt;/code&gt;) or rebooted (&lt;code&gt;init:reboot()&lt;/code&gt;) if there is an error during the installation. Default is &lt;code&gt;restart&lt;/code&gt;.</source>
          <target state="translated">설치 중에 오류가있는 경우 노드를 다시 시작 ( &lt;code&gt;init:restart()&lt;/code&gt; )하거나 다시 부팅 ( &lt;code&gt;init:reboot()&lt;/code&gt; )할지 여부를 정의합니다. 기본값은 &lt;code&gt;restart&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="280e3e6348482ff07568b5ca3c33d57dc63eeb97" translate="yes" xml:space="preserve">
          <source>Defines mnesia_frag_hash callback behavior</source>
          <target state="translated">mnesia_frag_hash 콜백 동작을 정의합니다</target>
        </trans-unit>
        <trans-unit id="0a24f69fae69d369096b47e94b88ca5713eb2906" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent local database.</source>
          <target state="translated">SNMP 에이전트 로컬 데이터베이스에 특정한 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="448e51bc79def417e8e31e1bb15194cd78eb1614" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent mib server cache.</source>
          <target state="translated">SNMP 에이전트 mib 서버 캐시에 특정한 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9a3e410d52d2f46576687ddea235ff538ee44a63" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent mib server.</source>
          <target state="translated">SNMP 에이전트 mib 서버에 특정한 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4c3978c256e0b33ce03888b7171e8a1bbb4a9300" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent network interface entity.</source>
          <target state="translated">SNMP 에이전트 네트워크 인터페이스 엔티티에 특정한 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c13862dc02952f1cb8a5acf655e61278d4c4d6f0" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent symbolic store.</source>
          <target state="translated">SNMP 에이전트 기호 저장소에 특정한 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7c2fd7fdb90197f87c9cc1fb0ec6b3858f3ed452" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent target cache.</source>
          <target state="translated">SNMP 에이전트 대상 캐시에 특정한 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="14ac5b70bd36656ab02243121fbe4f2970c88813" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP manager network interface entity.</source>
          <target state="translated">SNMP 관리자 네트워크 인터페이스 엔티티에 특정한 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2ccf672aecad512841e5a57a27a445c20cfeef4e" translate="yes" xml:space="preserve">
          <source>Defines specific config related options for the SNMP agent.</source>
          <target state="translated">SNMP 에이전트에 대한 특정 구성 관련 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="aa7e46ce4026b52c7aac7efcdf2cbb26cf6993c0" translate="yes" xml:space="preserve">
          <source>Defines specific config related options for the SNMP manager.</source>
          <target state="translated">SNMP 관리자에 대한 특정 구성 관련 옵션을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8f84dd3a08af774339e18ca1f21b53eb0e7c6242" translate="yes" xml:space="preserve">
          <source>Defines test case groups. For details, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트 사례 그룹을 정의합니다. 자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="485d2ed24e2a155e448ab4d850db85d797d4fb60" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;StopAction&lt;/code&gt;, the command given to the Erlang shell when the service is stopped. Default is none.</source>
          <target state="translated">서비스가 중지 될 때 Erlang 쉘에 제공되는 명령 인 &lt;code&gt;StopAction&lt;/code&gt; 을 정의합니다 . 기본값은 none입니다.</target>
        </trans-unit>
        <trans-unit id="d7960cdd45e01d2dab8818d58ee4d9fe2fd5b051" translate="yes" xml:space="preserve">
          <source>Defines the API for the TLS session cache so that the data storage scheme can be replaced by defining a new callback module implementing this API.</source>
          <target state="translated">이 API를 구현하는 새 콜백 모듈을 정의하여 데이터 스토리지 체계를 대체 할 수 있도록 TLS 세션 캐시의 API를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="104598b87946384fe60c79195fbf234f082e25d4" translate="yes" xml:space="preserve">
          <source>Defines the Erlang priority for all SNMP processes.</source>
          <target state="translated">모든 SNMP 프로세스에 대한 Erlang 우선 순위를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8f0d40e70791382078ed18bc5d93727975b29f06" translate="yes" xml:space="preserve">
          <source>Defines the backend data module of the SNMP agent mib-server as defined by the &lt;code&gt;&lt;a href=&quot;snmpa_mib_data&quot;&gt;snmpa_mib_data&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpa_mib_data&quot;&gt;snmpa_mib_data&lt;/a&gt;&lt;/code&gt; 동작 으로 정의 된 SNMP 에이전트 mib-server의 백엔드 데이터 모듈을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="f20654fac01a093493a55b44820caee23d32ca77" translate="yes" xml:space="preserve">
          <source>Defines the contents of the AVPs of the application having type Grouped. The section content consists of definitions of the form specified in section 4.4 of RFC 6733, &quot;Grouped AVP Values&quot;.</source>
          <target state="translated">유형이 그룹화 된 응용 프로그램의 AVP 내용을 정의합니다. 섹션 내용은 RFC 6733, &quot;그룹화 된 AVP 값&quot;의 섹션 4.4에 지정된 양식의 정의로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="9c5293b3b68519245baa953556f9af9803aee324" translate="yes" xml:space="preserve">
          <source>Defines the directory where the error log files are located. Default is the directory specified by application environment variable &lt;code&gt;error_logger_mf_dir&lt;/code&gt;, see &lt;code&gt;sasl(6)&lt;/code&gt;.</source>
          <target state="translated">오류 로그 파일이있는 디렉토리를 정의합니다. 기본값은 응용 프로그램 환경 변수 &lt;code&gt;error_logger_mf_dir&lt;/code&gt; 에 의해 지정된 디렉토리입니다 &lt;code&gt;sasl(6)&lt;/code&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="57e9a96f66a3597508e408cc9b1db67da3b5a149" translate="yes" xml:space="preserve">
          <source>Defines the email-address of the server administrator to be included in any error messages returned by the server.</source>
          <target state="translated">서버에서 반환 한 오류 메시지에 포함되도록 서버 관리자의 전자 메일 주소를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1971dd05fb820ceb119f867d7bba2219ab320c0c" translate="yes" xml:space="preserve">
          <source>Defines the file format of the log files. See &lt;code&gt;disk_log&lt;/code&gt; for details. If the internal file format is used, the log file is repaired after a crash. When a log file is repaired, data can disappear. When the external file format is used, &lt;code&gt;httpd&lt;/code&gt; does not start if the log file is broken. Default is &lt;code&gt;external&lt;/code&gt;.</source>
          <target state="translated">로그 파일의 파일 형식을 정의합니다. 자세한 내용은 &lt;code&gt;disk_log&lt;/code&gt; 를 참조하십시오. 내부 파일 형식을 사용하면 충돌 후 로그 파일이 복구됩니다. 로그 파일을 복구하면 데이터가 사라질 수 있습니다. 외부 파일 형식을 사용 하면 로그 파일이 손상된 경우 &lt;code&gt;httpd&lt;/code&gt; 가 시작되지 않습니다. 기본값은 &lt;code&gt;external&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0af5f2ebae883739d70328318a316e60a38383d2" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) access log file logging incoming requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">들어오는 요청을 기록 하는 ( &lt;code&gt;disk_log(3)&lt;/code&gt; ) 액세스 로그 파일 의 파일 이름을 정의 합니다. 파일 이름이 슬래시 (/)로 시작하지 않으면 &lt;code&gt;server_root&lt;/code&gt; 에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="d526e5aeea7dd1b9e33230d2275f05f27246ebdc" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) access log file logging incoming security events, that is, authenticated requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">들어오는 보안 이벤트, 즉 인증 된 요청을 기록 하는 ( &lt;code&gt;disk_log(3)&lt;/code&gt; ) 액세스 로그 파일 의 파일 이름을 정의 합니다. 파일 이름이 슬래시 (/)로 시작하지 않으면 &lt;code&gt;server_root&lt;/code&gt; 에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="86d70bbcc0a147ca704973c5dc64036c808d341b" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) error log file to be used to log server errors. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">서버 오류를 기록하는 데 사용할 ( &lt;code&gt;disk_log(3)&lt;/code&gt; ) 오류 로그 파일 의 파일 이름을 정의합니다 . 파일 이름이 슬래시 (/)로 시작하지 않으면 &lt;code&gt;server_root&lt;/code&gt; 에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="55f4b8f35c452cba8012ebe699f5425c2a16a4f3" translate="yes" xml:space="preserve">
          <source>Defines the filename of the access log file to be used to log incoming requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">들어오는 요청을 기록하는 데 사용되는 액세스 로그 파일의 파일 이름을 정의합니다. 파일 이름이 슬래시 (/)로 시작하지 않으면 &lt;code&gt;server_root&lt;/code&gt; 에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="959470a7f81f8e8fc99dcd53c272fad9068d2081" translate="yes" xml:space="preserve">
          <source>Defines the filename of the access log file to be used to log security events. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">보안 이벤트를 기록하는 데 사용되는 액세스 로그 파일의 파일 이름을 정의합니다. 파일 이름이 슬래시 (/)로 시작하지 않으면 &lt;code&gt;server_root&lt;/code&gt; 에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="6cf62a9b1727457d61e84c994aea05b03a058888" translate="yes" xml:space="preserve">
          <source>Defines the filename of the error log file to be used to log server errors. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">서버 오류를 기록하는 데 사용되는 오류 로그 파일의 파일 이름을 정의합니다. 파일 이름이 슬래시 (/)로 시작하지 않으면 &lt;code&gt;server_root&lt;/code&gt; 에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="ef21ceaaccc3147ba6258bf28c3cde06871c6a53" translate="yes" xml:space="preserve">
          <source>Defines the groups the server may choose among when diffie-hellman-group-exchange is negotiated. See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; for details. The three variants of this option are:</source>
          <target state="translated">diffie-hellman-group-exchange가 협상 될 때 서버가 선택할 수있는 그룹을 정의합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; 를 참조하십시오. 이 옵션의 세 가지 변형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab4548577e3f634d029a94551c958280d1aef8c0" translate="yes" xml:space="preserve">
          <source>Defines the home directory of the server, where log files, and so on, can be stored. Relative paths specified in other properties refer to this directory.</source>
          <target state="translated">로그 파일 등을 저장할 수있는 서버의 홈 디렉토리를 정의합니다. 다른 특성에 지정된 상대 경로는이 디렉토리를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="0a7f2deb640efc11655ad58c1e08a8d07db2a0a7" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the Diameter Application Id of the application in question. Can occur at most once and is required if the dictionary defines &lt;code&gt;@messages&lt;/code&gt;. The section has empty content.</source>
          <target state="translated">정수를 해당 애플리케이션의 직경 애플리케이션 ID로 정의합니다. 사전이 &lt;code&gt;@messages&lt;/code&gt; 를 정의하는 경우 최대 한 번만 발생할 수 있습니다 . 섹션에 빈 내용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cba064339a08067bd7b4f8344d541dba8844bc39" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the Vendor-Id of the AVPs listed in the section content, overriding the &lt;code&gt;@vendor&lt;/code&gt; default. The section content consists of AVP names.</source>
          <target state="translated">섹션 내용에 나열된 AVP의 공급 업체 ID로 정수를 정의하여 &lt;code&gt;@vendor&lt;/code&gt; 기본값을 재정의합니다 . 섹션 내용은 AVP 이름으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="97e9a050435e4cb94bd1bfaf574e64f41d29828a" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the the default Vendor-Id of AVPs for which the V flag is set. Name documents the owner of the application but is otherwise unused. Can occur at most once and is required if an AVP sets the V flag and is not otherwise assigned a Vendor-Id. The section has empty content.</source>
          <target state="translated">정수 번호를 V 플래그가 설정된 AVP의 기본 공급 업체 ID로 정의합니다. 이름은 응용 프로그램의 소유자를 나타내지 만 그렇지 않은 경우에는 사용되지 않습니다. 최대 한 번만 발생할 수 있으며 AVP가 V 플래그를 설정하고 달리 Vendor-Id가 할당되지 않은 경우 필요합니다. 섹션에 빈 내용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="36635f36f495b397ab94de01559c1253375a6250" translate="yes" xml:space="preserve">
          <source>Defines the look of the value of the server header.</source>
          <target state="translated">서버 헤더 값의 모양을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4a4cc0d55d17b53fdd8841ae9e10cabb12e632c0" translate="yes" xml:space="preserve">
          <source>Defines the maximum number of varbinds allowed in a Get-BULK response.</source>
          <target state="translated">Get-BULK 응답에 허용되는 최대 varbind 수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="fea976ab8e649b0432e4d40f897c877b5a06f322" translate="yes" xml:space="preserve">
          <source>Defines the messages of the application. The section content consists of definitions of the form specified in section 3.2 of RFC 6733, &quot;Command Code Format Specification&quot;.</source>
          <target state="translated">응용 프로그램의 메시지를 정의합니다. 섹션 내용은 RFC 6733, &quot;명령 코드 형식 사양&quot;의 섹션 3.2에 지정된 형식의 정의로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="2f4213047735b7141ee1fb4cc97bef31b0c6a085" translate="yes" xml:space="preserve">
          <source>Defines the mib storage module of the SNMP agent as defined by the &lt;code&gt;&lt;a href=&quot;snmpa_mib_storage&quot;&gt;snmpa_mib_storage&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpa_mib_storage&quot;&gt;snmpa_mib_storage&lt;/a&gt;&lt;/code&gt; 동작 으로 정의 된 SNMP 에이전트의 mib 스토리지 모듈을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="c3903fd03c41c6d69e0d18f172887c0b2fa22a5f" translate="yes" xml:space="preserve">
          <source>Defines the name of a dictionary module containing AVP definitions that should be imported into the current dictionary. The section content consists of the names of those AVPs whose definitions should be imported from the dictionary, an empty list causing all to be imported. Any listed AVPs must not be defined in the current dictionary and it is an error to inherit the same AVP from more than one dictionary.</source>
          <target state="translated">현재 사전으로 가져와야하는 AVP 정의를 포함하는 사전 모듈의 이름을 정의합니다. 섹션 내용은 사전에서 정의를 가져와야하는 AVP의 이름으로 구성되며, 목록을 비우면 모두 가져올 수 있습니다. 나열된 사전 AVP는 현재 사전에 정의되어서는 안되며 둘 이상의 사전에서 동일한 AVP를 상속하는 것은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="3f4467cb29ca7960e7e163c5021247118933225f" translate="yes" xml:space="preserve">
          <source>Defines the name of the generated dictionary module. Can occur at most once and defaults to the name of the dictionary file minus any extension. The section has empty content.</source>
          <target state="translated">생성 된 사전 모듈의 이름을 정의합니다. 최대 한 번만 발생할 수 있으며 기본값은 사전 파일 이름에서 확장자를 뺀 값입니다. 섹션에 빈 내용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2fdd5a12c59d8afe49345bf972c80a83a8bc45b" translate="yes" xml:space="preserve">
          <source>Defines the name, code, type and flags of individual AVPs. The section consists of definitions of the form</source>
          <target state="translated">개별 AVP의 이름, 코드, 유형 및 플래그를 정의합니다. 이 섹션은 양식의 정의로 구성됩니다</target>
        </trans-unit>
        <trans-unit id="ab5cdae0cb5c3dabdd06a687f16e3f89a532b66f" translate="yes" xml:space="preserve">
          <source>Defines the read-eval-print loop used in a daemon when a shell is requested by the client. The default is to use the Erlang shell: &lt;code&gt;{shell, start, []}&lt;/code&gt;</source>
          <target state="translated">클라이언트가 쉘을 요청할 때 데몬에서 사용되는 읽기 평가 인쇄 루프를 정의합니다. 기본값은 Erlang 쉘을 사용하는 것입니다 : &lt;code&gt;{shell, start, []}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf4efecb956b1360f45ade9fb0fc9274b8cb5370" translate="yes" xml:space="preserve">
          <source>Defines the repair option for the persistent database (if and how the table is repaired when opened).</source>
          <target state="translated">지속적 데이터베이스에 대한 복구 옵션을 정의합니다 (열렸을 때 테이블이 복구되는 경우 및 방법).</target>
        </trans-unit>
        <trans-unit id="87d444381fbb569ddfcc73fb8ed2f3bb3f13be7a" translate="yes" xml:space="preserve">
          <source>Defines the system name.</source>
          <target state="translated">시스템 이름을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="21694ea9ad4a13cb778434d22cbe1ad230770b82" translate="yes" xml:space="preserve">
          <source>Defines the system version.</source>
          <target state="translated">시스템 버전을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a7de61fb83cf32538184916c9eaa313b33cb0f63" translate="yes" xml:space="preserve">
          <source>Defines the time-out for all calls to &lt;code&gt;sys:change_code&lt;/code&gt;. If no value is specified or &lt;code&gt;default&lt;/code&gt; is specified, the default value defined in &lt;code&gt;sys&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;sys:change_code&lt;/code&gt; 에 대한 모든 호출의 시간 초과를 정의합니다 . 값을 지정하지 않거나 &lt;code&gt;default&lt;/code&gt; 을 지정하면 &lt;code&gt;sys&lt;/code&gt; 에 정의 된 기본값 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d5bb4f3815504953241eadc8eb3b0acdc9b38fad" translate="yes" xml:space="preserve">
          <source>Defines the time-out for all calls to &lt;code&gt;sys:suspend&lt;/code&gt;. If no value is specified, the values defined by the &lt;code&gt;Timeout&lt;/code&gt; parameter of the &lt;code&gt;upgrade&lt;/code&gt; or &lt;code&gt;suspend&lt;/code&gt; instructions are used. If &lt;code&gt;default&lt;/code&gt; is specified, the default value defined in &lt;code&gt;sys&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;sys:suspend&lt;/code&gt; 에 대한 모든 호출의 시간 초과를 정의합니다 . 값을 지정하지 않으면 &lt;code&gt;upgrade&lt;/code&gt; 또는 &lt;code&gt;suspend&lt;/code&gt; 명령어 의 &lt;code&gt;Timeout&lt;/code&gt; 매개 변수로 정의 된 값 이 사용됩니다. 경우 &lt;code&gt;default&lt;/code&gt; 지정된 경우에 정의 된 기본 값 &lt;code&gt;sys&lt;/code&gt; 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3662633757f8ed2e24fca068aa6e42751f922afc" translate="yes" xml:space="preserve">
          <source>Defines the time-out when suspending processes. If no value or &lt;code&gt;default&lt;/code&gt; is specified, the default value for &lt;code&gt;sys:suspend&lt;/code&gt; is used.</source>
          <target state="translated">프로세스를 일시 중단 할 때 시간 초과를 정의합니다. 값이나 &lt;code&gt;default&lt;/code&gt; 을 지정 하지 않으면 &lt;code&gt;sys:suspend&lt;/code&gt; 의 기본값 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0afeec46159c21d9d1f3d16e08bb62a44c8ff02a" translate="yes" xml:space="preserve">
          <source>Defines the top directory for the documents that are available on the HTTP server.</source>
          <target state="translated">HTTP 서버에서 사용 가능한 문서의 최상위 디렉토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c7b451ec2118fb4f5138f4688f3823998c040b27" translate="yes" xml:space="preserve">
          <source>Defines the type of packets to use for a socket. Possible values:</source>
          <target state="translated">소켓에 사용할 패킷 유형을 정의합니다. 가능한 값 :</target>
        </trans-unit>
        <trans-unit id="4ec3fffa7b0947c4ef27ec8336dce45a785d4d18" translate="yes" xml:space="preserve">
          <source>Defines users to grant access to a given directory using a secret password.</source>
          <target state="translated">비밀 암호를 사용하여 지정된 디렉토리에 대한 액세스 권한을 부여 할 사용자를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2de485f70c3131c57b114f992349842acaf84733" translate="yes" xml:space="preserve">
          <source>Defines values of AVP Name having type Enumerated. Section content consists of names and corresponding integer values. Integer values can be prefixed with 0x to be interpreted as hexadecimal.</source>
          <target state="translated">열거 유형의 AVP 이름 값을 정의합니다. 섹션 내용은 이름과 해당 정수 값으로 구성됩니다. 정수 값 앞에 0x를 붙여 16 진수로 해석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c20651b75ec09f9f46020166ca4d95a65ce0b7d" translate="yes" xml:space="preserve">
          <source>Defines what to do if the agent is unable to open an existing database file. &lt;code&gt;terminate&lt;/code&gt; means that the agent/manager will terminate, &lt;code&gt;create&lt;/code&gt; means that the agent/manager will remove the faulty file(s) and create new ones, and &lt;code&gt;create_db_and_dir&lt;/code&gt; means that the agent/manager will create the database file along with any missing parent directories for the database file.</source>
          <target state="translated">에이전트가 기존 데이터베이스 파일을 열 수없는 경우 수행 할 작업을 정의합니다. &lt;code&gt;terminate&lt;/code&gt; 는 에이전트 / 관리자가 종료 됨을 의미하고 , &lt;code&gt;create&lt;/code&gt; 은 에이전트 / 관리자가 결함이있는 파일을 제거하고 새 파일을 작성 함을 의미하며, &lt;code&gt;create_db_and_dir&lt;/code&gt; 은 에이전트 / 관리자가 누락 된 상위 디렉토리와 함께 데이터베이스 파일을 작성 함을 의미합니다. 데이터베이스 파일</target>
        </trans-unit>
        <trans-unit id="204105b23aab7c26919ca77988f289f12f1f0f7f" translate="yes" xml:space="preserve">
          <source>Defines when parsing the Host-Port part of an URI with an IPv6 address with brackets, if those brackets are to be retained (&lt;code&gt;true&lt;/code&gt;) or stripped (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">괄호가 유지 되거나 ( &lt;code&gt;true&lt;/code&gt; ) 벗겨지는 ( &lt;code&gt;false&lt;/code&gt; ) 경우, 괄호가있는 IPv6 주소를 사용하여 URI의 호스트 포트 부분을 구문 분석 할 때 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="3528e0db282039856a935ef9dd79f095c319462c" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP agent configuration files are stored.</source>
          <target state="translated">SNMP 에이전트 구성 파일이 저장되는 위치를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="babf4b2c7dfdcfc9d7a2ec2be86154c0beabe2f5" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP agent internal db files are stored.</source>
          <target state="translated">SNMP 에이전트 내부 db 파일이 저장되는 위치를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6e7f23de7214a3b9a761f109739d9039604db564" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP manager configuration files are stored.</source>
          <target state="translated">SNMP 관리자 구성 파일이 저장되는 위치를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a7c977cad0696041fcf115ef67b9590b5760e203" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP manager store persistent data.</source>
          <target state="translated">SNMP 관리자가 지속적 데이터를 저장하는 위치를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="412835e3971c845df969501453eca0dc4b7abaf7" translate="yes" xml:space="preserve">
          <source>Defines which modules the HTTP server uses when handling requests. Default is &lt;code&gt;[mod_alias, mod_auth, mod_esi, mod_actions, mod_cgi, mod_dir, mod_get, mod_head, mod_log, mod_disk_log]&lt;/code&gt;. Notice that some &lt;code&gt;mod&lt;/code&gt;-modules are dependent on others, so the order cannot be entirely arbitrary. See the &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets Web Server Modules&lt;/a&gt;&lt;/code&gt; in the User's Guide for details.</source>
          <target state="translated">요청을 처리 할 때 HTTP 서버가 사용하는 모듈을 정의합니다. 기본값은 &lt;code&gt;[mod_alias, mod_auth, mod_esi, mod_actions, mod_cgi, mod_dir, mod_get, mod_head, mod_log, mod_disk_log]&lt;/code&gt; 입니다. 일부 &lt;code&gt;mod&lt;/code&gt; -modules는 다른 모듈에 종속되므로 순서는 완전히 임의적 일 수는 없습니다. 자세한 내용은 사용 &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets Web Server Modules&lt;/a&gt;&lt;/code&gt; 의 Inets 웹 서버 모듈 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="51e2b84c9abac1754fd9eeab16ec551704b4d555" translate="yes" xml:space="preserve">
          <source>Defining &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; in ordinary application code is highly discouraged. It is very easy to make subtle errors that can take a long time to debug. Furthermore, none of the tools for static code analysis (such as Dialyzer and Xref) supports the use of &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; and no such support will be added. Only use this function after having carefully considered other, less dangerous, solutions. One example of potential legitimate use is creating stubs for other sub-systems during testing and debugging.</source>
          <target state="translated">일반 애플리케이션 코드에서 &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; 를 정의 하는 것은 권장되지 않습니다. 디버깅하는 데 시간이 오래 걸리는 미묘한 오류를 만드는 것은 매우 쉽습니다. 또한 정적 코드 분석 도구 (예 : Dialyzer 및 Xref)는 &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; 사용을 지원하지 않으며 이러한 지원은 추가되지 않습니다. 덜 위험한 다른 솔루션을 신중하게 고려한 후에 만이 기능을 사용하십시오. 잠재적으로 합법적으로 사용할 수있는 한 가지 예는 테스트 및 디버깅 중에 다른 하위 시스템에 대한 스텁을 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="813c4d729e19c49eeb758babcca712816ef2f3ee" translate="yes" xml:space="preserve">
          <source>Defining New AVP Values</source>
          <target state="translated">새로운 AVP 값 정의</target>
        </trans-unit>
        <trans-unit id="be3ef0549cf67fd2cc624afce6d7813accda1411" translate="yes" xml:space="preserve">
          <source>Defining Structure and Content</source>
          <target state="translated">구조 및 내용 정의</target>
        </trans-unit>
        <trans-unit id="86485bef05a62e4201b1c81ddd8cab9166fe5be5" translate="yes" xml:space="preserve">
          <source>Defining instruction patterns</source>
          <target state="translated">지침 패턴 정의</target>
        </trans-unit>
        <trans-unit id="f824f9b573c83ee1f4d1d9346a7810069bada7e4" translate="yes" xml:space="preserve">
          <source>Definition of &lt;code&gt;c_test:c_break/1&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;c_test:c_break/1&lt;/code&gt; 의 정의 :</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="225dfed12a3d48b5b84cb4cd17b1a4ebe8d5181b" translate="yes" xml:space="preserve">
          <source>Deinstalls a fallback before it has been used to restore the database. This is normally a distributed operation that is either performed on all nodes with disc resident schema, or none. Uninstallation of fallbacks requires Erlang to be operational on all involved nodes, but it does not matter if Mnesia is running or not. Which nodes that are considered as disc-resident nodes is determined from the schema information in the local fallback.</source>
          <target state="translated">데이터베이스를 복원하는 데 사용되기 전에 대체를 제거합니다. 이는 일반적으로 디스크 상주 스키마가있는 모든 노드에서 수행되거나 전혀 수행되지 않는 분산 작업입니다. 폴백을 제거하려면 관련된 모든 노드에서 Erlang이 작동해야하지만 Mnesia가 실행 중인지 여부는 중요하지 않습니다. 디스크 상주 노드로 간주되는 노드는 로컬 폴 백의 스키마 정보에서 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="000cba1a9bdc15eb27845faba4d45730274dad02" translate="yes" xml:space="preserve">
          <source>Delay of Thread Progress by Unmanaged Threads</source>
          <target state="translated">관리되지 않는 스레드에 의한 스레드 진행 지연</target>
        </trans-unit>
        <trans-unit id="651f4ae5c5eda1c4902afa9952836e101d3e101b" translate="yes" xml:space="preserve">
          <source>Delay, in milliseconds, for SAC messages (if the delay is enabled, see &lt;code&gt;flags&lt;/code&gt; below)</source>
          <target state="translated">SAC 메시지에 대한 지연 (밀리 초) (지연이 활성화 된 경우 아래 &lt;code&gt;flags&lt;/code&gt; 참조)</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="38eb25f63edd286fdb6d4a036285c876a5d036ca" translate="yes" xml:space="preserve">
          <source>Delete CRLs from the ssl applications local cache.</source>
          <target state="translated">SSL 애플리케이션 로컬 캐시에서 CRL을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="a05bbe6bb69db0f46e301947b5f581ae37d781d0" translate="yes" xml:space="preserve">
          <source>Delete a USM security data (user) from the agent config.</source>
          <target state="translated">에이전트 구성에서 USM 보안 데이터 (사용자)를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="73abef6c216f94bdf061581022474f37e17f9504" translate="yes" xml:space="preserve">
          <source>Delete a access definition from the agent config.</source>
          <target state="translated">에이전트 구성에서 액세스 정의를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="8e4bb0cf1820c3baad149df8f499db102dec9714" translate="yes" xml:space="preserve">
          <source>Delete a community from the agent config.</source>
          <target state="translated">에이전트 구성에서 커뮤니티를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="10381313ea94a7532403bfbf8fb99509a82a5ceb" translate="yes" xml:space="preserve">
          <source>Delete a context from the agent config.</source>
          <target state="translated">에이전트 구성에서 컨텍스트를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="62b90f629164fa6eb6a79befd35ee417af11099b" translate="yes" xml:space="preserve">
          <source>Delete a dictionary entry and send a {et, {dict_delete, Key}} tuple to all registered subscribers.</source>
          <target state="translated">사전 항목을 삭제하고 등록 된 모든 구독자에게 {et, {dict_delete, Key}} 튜플을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0d14d2456d7199ee875343d85fd00c85d394b021" translate="yes" xml:space="preserve">
          <source>Delete a notify definition from the agent config.</source>
          <target state="translated">에이전트 구성에서 알림 정의를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="232e1d1adb53073ecdabb53e88a17abefbe0b5ae" translate="yes" xml:space="preserve">
          <source>Delete a record from the mib-storage table.</source>
          <target state="translated">mib-storage 테이블에서 레코드를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="b55705a3a80888a5727b8edf5c4fd37429974835" translate="yes" xml:space="preserve">
          <source>Delete a security to group definition from the agent config.</source>
          <target state="translated">에이전트 구성에서 보안을 그룹 정의로 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="5b2d3d65375e235f63c119c2dd9900a6b70fbd25" translate="yes" xml:space="preserve">
          <source>Delete a target address definition from the agent config.</source>
          <target state="translated">에이전트 구성에서 대상 주소 정의를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="83a8b31c49915f73d37cc6ae8baa11bb303104da" translate="yes" xml:space="preserve">
          <source>Delete a target parameter definition from the agent config.</source>
          <target state="translated">에이전트 구성에서 대상 매개 변수 정의를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="acabde9af1d652c09a474168447d0b3aa09ef7ac" translate="yes" xml:space="preserve">
          <source>Delete a view tree family definition from the agent config.</source>
          <target state="translated">에이전트 구성에서 뷰 트리 제품군 정의를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="5210820e193a36586d47abb153026ca112d79eec" translate="yes" xml:space="preserve">
          <source>Delete all objects in the ETS table &lt;code&gt;Tab&lt;/code&gt;. The operation is guaranteed to be &lt;code&gt;&lt;a href=&quot;#concurrency&quot;&gt;atomic and isolated&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ETS 테이블 &lt;code&gt;Tab&lt;/code&gt; 에서 모든 오브젝트를 삭제하십시오 . 작업은 &lt;code&gt;&lt;a href=&quot;#concurrency&quot;&gt;atomic and isolated&lt;/a&gt;&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="0111e8f27f5e330da3db8aee43f349eca49e4fc6" translate="yes" xml:space="preserve">
          <source>Delete an entire mib-storage table.</source>
          <target state="translated">전체 Mib-storage 테이블을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="90d051e4f058fdc93a81c8c192e289a26ac48d09" translate="yes" xml:space="preserve">
          <source>Delete an entry.</source>
          <target state="translated">항목을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="85df5f045630c419669a61e69ca04fd700e28a50" translate="yes" xml:space="preserve">
          <source>Delete character</source>
          <target state="translated">캐릭터 삭제</target>
        </trans-unit>
        <trans-unit id="07e5359f033713d72d57d99e8127fe4c622bd202" translate="yes" xml:space="preserve">
          <source>Delete data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 로 데이터 세트를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="247b86940b906a4d84abd7600a2a60b360d955e7" translate="yes" xml:space="preserve">
          <source>Delete data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 로 설정된 데이터를 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc3b4d5d308516c1eb3f3134fdc18f836f7dcbba" translate="yes" xml:space="preserve">
          <source>Delete the configuration of a user</source>
          <target state="translated">사용자 구성 삭제</target>
        </trans-unit>
        <trans-unit id="837a21358fedd413cdb892076602aa98096ba328" translate="yes" xml:space="preserve">
          <source>Delete the exact object &lt;code&gt;Object&lt;/code&gt; from the ETS table, leaving objects with the same key but other differences (useful for type &lt;code&gt;bag&lt;/code&gt;). In a &lt;code&gt;duplicate_bag&lt;/code&gt; table, all instances of the object are deleted.</source>
          <target state="translated">ETS 테이블에서 정확한 객체 &lt;code&gt;Object&lt;/code&gt; 를 삭제하고 키는 동일하지만 다른 차이점이있는 객체를 남겨 둡니다 ( &lt;code&gt;bag&lt;/code&gt; 유형에 유용 ). A의 &lt;code&gt;duplicate_bag&lt;/code&gt; 의 테이블, 개체의 모든 인스턴스가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="1f9eba17860205c37b06b4158113eb4cbb717ab7" translate="yes" xml:space="preserve">
          <source>Delete the table &lt;code&gt;EMPLOYEE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EMPLOYEE&lt;/code&gt; 테이블을 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb3b6fe219d693793d658e19d93a46b2e8e3f9e2" translate="yes" xml:space="preserve">
          <source>Delete word</source>
          <target state="translated">단어 삭제</target>
        </trans-unit>
        <trans-unit id="d4fad0c7c3738c414abd567b32796483f83a24ea" translate="yes" xml:space="preserve">
          <source>Delete.</source>
          <target state="translated">Delete.</target>
        </trans-unit>
        <trans-unit id="8c2cd6cab37aebab0028a894c99ded8f238de266" translate="yes" xml:space="preserve">
          <source>Deletes a &lt;code&gt;Slave&lt;/code&gt; node from the list of allowed slave hosts.</source>
          <target state="translated">허용 된 슬레이브 호스트 목록에서 &lt;code&gt;Slave&lt;/code&gt; 노드를 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="a55490d67b1783b95d3b01989de13de5ecdbd099" translate="yes" xml:space="preserve">
          <source>Deletes a cache entry. Is only called from the cache handling process.</source>
          <target state="translated">캐시 항목을 삭제합니다. 캐시 처리 프로세스에서만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f83187de60d2c964b0ec14f140a205b890d0cdf9" translate="yes" xml:space="preserve">
          <source>Deletes a complete index structure (i.e. the ets table holding the index). The index can no longer be referenced after this call. See the &lt;code&gt;&lt;a href=&quot;#1&quot;&gt;warning note&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">완전한 인덱스 구조 (예 : 인덱스를 보유한 ets 테이블)를 삭제합니다. 이 호출 후에는 색인을 더 이상 참조 할 수 없습니다. 위 의 &lt;code&gt;&lt;a href=&quot;#1&quot;&gt;warning note&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f781899cee6417bc59edb7c370ceb11e5f725c7f" translate="yes" xml:space="preserve">
          <source>Deletes a database created with &lt;code&gt;mnesia:create_schema/1&lt;/code&gt;. &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; fails if any of the Erlang nodes given as &lt;code&gt;DiscNodes&lt;/code&gt; are not alive, or if Mnesia is running on any of the nodes.</source>
          <target state="translated">&lt;code&gt;mnesia:create_schema/1&lt;/code&gt; 로 작성된 데이터베이스를 삭제합니다 . &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; 로 얼랑 중 하나가 주어진 노드들이 경우에 실패 &lt;code&gt;DiscNodes&lt;/code&gt; 이 살아하지 않거나 Mnesia는 노드 중 하나에서 실행중인 경우.</target>
        </trans-unit>
        <trans-unit id="0410cc85ea7e09dd6b458b9cd1881abe5746e21c" translate="yes" xml:space="preserve">
          <source>Deletes a directory from the code path. The argument can be an atom &lt;code&gt;Name&lt;/code&gt;, in which case the directory with the name &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; is deleted from the code path. Also, the complete directory name &lt;code&gt;Dir&lt;/code&gt; can be specified as argument.</source>
          <target state="translated">코드 경로에서 디렉토리를 삭제합니다. 인수는 atom &lt;code&gt;Name&lt;/code&gt; 일 수 있으며 ,이 경우 이름이 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 디렉토리가 코드 경로에서 삭제됩니다. 또한 전체 디렉토리 이름 &lt;code&gt;Dir&lt;/code&gt; 을 인수로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a8f3084880aa402e491a52d850d4081646b7be1" translate="yes" xml:space="preserve">
          <source>Deletes a directory specified by &lt;code&gt;Name&lt;/code&gt;. The directory must be empty before it can be successfully deleted.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 으로 지정된 디렉토리를 삭제합니다 . 삭제하기 전에 디렉토리가 비어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8703e5f201e87bf05be0a05024c1bffc6bdb1756" translate="yes" xml:space="preserve">
          <source>Deletes a file on remote host.</source>
          <target state="translated">원격 호스트에서 파일을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="145e70506f4120524f47e10b3858ee270f53970c" translate="yes" xml:space="preserve">
          <source>Deletes a fragment from a fragmented table. All records in the last fragment are moved to one of the other fragments. All other fragmented tables, which refer to this table in their foreign key, automatically lose their last fragment. Also, their records are dynamically rehashed in the same manner as for the main table.</source>
          <target state="translated">조각난 테이블에서 조각을 삭제합니다. 마지막 조각의 모든 레코드는 다른 조각 중 하나로 이동됩니다. 외래 키에서이 테이블을 참조하는 다른 모든 조각난 테이블은 마지막 조각을 자동으로 잃습니다. 또한 해당 레코드는 기본 테이블과 동일한 방식으로 동적으로 다시 해시됩니다.</target>
        </trans-unit>
        <trans-unit id="8136cd7097f295cefa19768ec9dd3cc03cd5596b" translate="yes" xml:space="preserve">
          <source>Deletes a key and its value from the index structure. Returns a new structure.</source>
          <target state="translated">인덱스 구조에서 키와 그 값을 삭제합니다. 새로운 구조를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="d8a8422aa741d8eea89390fd9b831f5728ae2f45" translate="yes" xml:space="preserve">
          <source>Deletes a module &lt;code&gt;Mod&lt;/code&gt; using the low-level instructions &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;purge&lt;/code&gt;.</source>
          <target state="translated">하위 레벨 명령어 &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;purge&lt;/code&gt; 를 사용하여 모듈 &lt;code&gt;Mod&lt;/code&gt; 를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="94f3adf6d82d22bb018090421cb54a40c7cb5a7f" translate="yes" xml:space="preserve">
          <source>Deletes a named value on the current key. The atom &lt;code&gt;default&lt;/code&gt; is used for the default value.</source>
          <target state="translated">현재 키에서 명명 된 값을 삭제합니다. 원자 &lt;code&gt;default&lt;/code&gt; 이 기본값 으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1103f0322e41eb28047a27df8e5e1b984a02279a" translate="yes" xml:space="preserve">
          <source>Deletes a node from &lt;code&gt;node_pool&lt;/code&gt;. The new node pool affects the list returned from the function &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node_pool&lt;/code&gt; 에서 노드를 삭제합니다 . 새 노드 풀은 &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt; 함수에서 리턴 된 목록에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="3fd93dbea15b7890f5b16d25f63231595d7c3961" translate="yes" xml:space="preserve">
          <source>Deletes a process group.</source>
          <target state="translated">프로세스 그룹을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="5782ac9411066ed87e340711042cabf3a6908110" translate="yes" xml:space="preserve">
          <source>Deletes a query cursor. Only the owner of the cursor can delete the cursor.</source>
          <target state="translated">쿼리 커서를 삭제합니다. 커서 소유자 만 커서를 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2086b9caf543452d116c631fe53c197196841a93" translate="yes" xml:space="preserve">
          <source>Deletes a table.</source>
          <target state="translated">테이블을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="6a6491894cfad6d987ac2669cb63e6bc94b09c09" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 의 모든 중단 점을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="daab3c47664770a7f2523882873966d4a0076ad3" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints, or all breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 의 모든 중단 점 또는 모든 중단 점을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="6548c310c2c7740c36f6bd49df68d5b9120b1241" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints.</source>
          <target state="translated">모든 중단 점을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="124f6e9b50a45ade6ccc57ff2d9e7debf7081039" translate="yes" xml:space="preserve">
          <source>Deletes all entries associated with &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 에서 &lt;code&gt;Key&lt;/code&gt; 와 관련된 모든 항목을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="38f3aebeb7f45c6b537400495b97241efa03c656" translate="yes" xml:space="preserve">
          <source>Deletes all entries in the table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 에서 모든 항목을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="67ac4958c7dfc90539c309e1b96b511e018dfaa7" translate="yes" xml:space="preserve">
          <source>Deletes all instances of a specified object from a table. If a table is of type &lt;code&gt;bag&lt;/code&gt; or &lt;code&gt;duplicate_bag&lt;/code&gt;, this function can be used to delete only some of the objects with a specified key.</source>
          <target state="translated">테이블에서 지정된 개체의 모든 인스턴스를 삭제합니다. 테이블이 &lt;code&gt;bag&lt;/code&gt; 또는 &lt;code&gt;duplicate_bag&lt;/code&gt; 유형 인 경우이 함수를 사용하여 지정된 키가있는 일부 오브젝트 만 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78d9345ff738a8e77092e38c95b5046ed6c20126" translate="yes" xml:space="preserve">
          <source>Deletes all objects from a table in almost constant time. However, if the table if fixed, &lt;code&gt;delete_all_objects(T)&lt;/code&gt; is equivalent to &lt;code&gt;match_delete(T, '_')&lt;/code&gt;.</source>
          <target state="translated">거의 일정한 시간에 테이블에서 모든 객체를 삭제합니다. 그러나 테이블이 고정 된 경우 &lt;code&gt;delete_all_objects(T)&lt;/code&gt; 는 &lt;code&gt;match_delete(T, '_')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea8b2ce44904022ed53ed97cc4353f513fc72f0d" translate="yes" xml:space="preserve">
          <source>Deletes all objects of table &lt;code&gt;Name&lt;/code&gt; and then inserts all the objects of the ETS table &lt;code&gt;EtsTab&lt;/code&gt;. The objects are inserted in unspecified order. As &lt;code&gt;ets:safe_fixtable/2&lt;/code&gt; is called, the ETS table must be public or owned by the calling process.</source>
          <target state="translated">테이블 &lt;code&gt;Name&lt;/code&gt; 의 모든 오브젝트를 삭제 한 후 ETS 테이블 &lt;code&gt;EtsTab&lt;/code&gt; 의 모든 오브젝트를 삽입합니다 . 개체는 지정되지 않은 순서로 삽입됩니다. 마찬가지로 &lt;code&gt;ets:safe_fixtable/2&lt;/code&gt; 호출되면 ETS 테이블은 공용 또는 호출 프로세스가 소유해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f728783d92e7dc789b29765c7837e6b2fc109fa" translate="yes" xml:space="preserve">
          <source>Deletes all objects that match &lt;code&gt;Pattern&lt;/code&gt; from table &lt;code&gt;Name&lt;/code&gt;. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Name&lt;/code&gt; 에서 &lt;code&gt;Pattern&lt;/code&gt; 과 일치하는 모든 오브젝트를 삭제합니다 . 패턴에 대한 설명은 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9a8af6a45ed2e4b0bb942ee7179dc9fa786f56d" translate="yes" xml:space="preserve">
          <source>Deletes all objects that match pattern &lt;code&gt;Pattern&lt;/code&gt; from table &lt;code&gt;Tab&lt;/code&gt;. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 에서 패턴 &lt;code&gt;Pattern&lt;/code&gt; 과 일치하는 모든 객체를 삭제합니다 . 패턴에 대한 설명은 &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d436ccf509ee3f7c5c496e0de4b03a59a5c6fcc" translate="yes" xml:space="preserve">
          <source>Deletes all objects with key &lt;code&gt;Key&lt;/code&gt; from table &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Name&lt;/code&gt; 에서 &lt;code&gt;Key&lt;/code&gt; 키가있는 모든 오브젝트를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="c8fd57fb7a817a35d2a007457bc0c233f86094e8" translate="yes" xml:space="preserve">
          <source>Deletes all objects with key &lt;code&gt;Key&lt;/code&gt; from table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 에서 &lt;code&gt;Key&lt;/code&gt; 키가있는 모든 객체를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="c71ba442aefb0dc2efa99cd31c5060b76055e05e" translate="yes" xml:space="preserve">
          <source>Deletes all records in table &lt;code&gt;Tab&lt;/code&gt; with the key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; 키를 사용하여 테이블 &lt;code&gt;Tab&lt;/code&gt; 의 모든 레코드를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="2344f004a9f5e33045c0884bd8d5dd86195f69ab" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate/2&lt;/a&gt;&lt;/code&gt; to terminate the event handler.</source>
          <target state="translated">이벤트 관리자 &lt;code&gt;EventMgrRef&lt;/code&gt; 에서 이벤트 핸들러를 삭제합니다 . 이벤트 관리자는 &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate/2&lt;/a&gt;&lt;/code&gt; 를 호출 하여 이벤트 처리기를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="a5caf26d3590c21b8bcec3060c282ef9add5dfe4" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; to terminate the event handler.</source>
          <target state="translated">이벤트 관리자 &lt;code&gt;EventMgrRef&lt;/code&gt; 에서 이벤트 핸들러를 삭제합니다 . 이벤트 관리자는 &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; 를 호출 하여 이벤트 핸들러를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="0e09884e56dfc4f00ff48674020d32b8fa72ec3a" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from the error logger by calling &lt;code&gt;gen_event:delete_handler(error_logger, Handler, [])&lt;/code&gt;, see &lt;code&gt;gen_event(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_event:delete_handler(error_logger, Handler, [])&lt;/code&gt; 를 호출하여 오류 로거에서 이벤트 핸들러를 삭제합니다 ( &lt;code&gt;gen_event(3)&lt;/code&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="ca92c0288404ef8ab25dadeb79c95d8e313e09df" translate="yes" xml:space="preserve">
          <source>Deletes an object from the registry. The object is not removed from the registry, it is only marked for later removal so that on later backups to &lt;code&gt;Mnesia&lt;/code&gt;, the corresponding object can be removed from the &lt;code&gt;Mnesia&lt;/code&gt; table as well. If another object is later created with the same key, the object will be reused.</source>
          <target state="translated">레지스트리에서 개체를 삭제합니다. 오브젝트는 레지스트리에서 제거되지 않고 나중에 제거하도록 표시되어 나중에 &lt;code&gt;Mnesia&lt;/code&gt; 에 백업 할 때 해당 오브젝트도 &lt;code&gt;Mnesia&lt;/code&gt; 테이블 에서 제거 할 수 있습니다 . 나중에 같은 키를 사용하여 다른 객체를 만들면 해당 객체가 재사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2feb174fac092baec6bb2353f93b5cad1b6dbbcf" translate="yes" xml:space="preserve">
          <source>Deletes configuration data.</source>
          <target state="translated">구성 데이터를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="8996e0b1c689bc638a9e5e56a7107a50e726c868" translate="yes" xml:space="preserve">
          <source>Deletes configuration stored with &lt;code&gt;write_config(Data)&lt;/code&gt;. Notice that after this call any subsequent calls to &lt;code&gt;read_config&lt;/code&gt; must return &lt;code&gt;{error, Error}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write_config(Data)&lt;/code&gt; 저장된 구성을 삭제합니다 . 이 호출 후 &lt;code&gt;read_config&lt;/code&gt; 에 대한 후속 호출 은 &lt;code&gt;{error, Error}&lt;/code&gt; 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a8a1f1d2f9340db064af89064d205bffaa452986" translate="yes" xml:space="preserve">
          <source>Deletes digraph &lt;code&gt;G&lt;/code&gt;. This call is important as digraphs are implemented with ETS. There is no garbage collection of ETS tables. However, the digraph is deleted if the process that created the digraph terminates.</source>
          <target state="translated">그림 &lt;code&gt;G&lt;/code&gt; 를 삭제합니다 . 이 호출은 digraph가 ETS로 구현되므로 중요합니다. ETS 테이블의 가비지 콜렉션이 없습니다. 그러나, digraph를 작성한 프로세스가 종료되면 digraph가 h 제됩니다.</target>
        </trans-unit>
        <trans-unit id="1e8cf15862d762e5f8a004ce2fee57ee4454a28e" translate="yes" xml:space="preserve">
          <source>Deletes each object from table &lt;code&gt;Name&lt;/code&gt; such that applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to the object returns value &lt;code&gt;true&lt;/code&gt;. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;. Returns the number of deleted objects.</source>
          <target state="translated">일치 스펙 &lt;code&gt;MatchSpec&lt;/code&gt; 을 오브젝트에 적용 하면 값 &lt;code&gt;true&lt;/code&gt; 를 리턴 하도록 테이블 &lt;code&gt;Name&lt;/code&gt; 에서 각 오브젝트를 삭제 합니다 . 일치 스펙에 대한 설명은 &lt;code&gt;ERTS User's Guide&lt;/code&gt; . 삭제 된 개체 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36f46cfee96cbd0fcb65a554325c7843eb348953" translate="yes" xml:space="preserve">
          <source>Deletes edge &lt;code&gt;E&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">Digraph &lt;code&gt;G&lt;/code&gt; 에서 edge &lt;code&gt;E&lt;/code&gt; 를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="ae26dabdadf434b637f48f8f90ef998fe6289168" translate="yes" xml:space="preserve">
          <source>Deletes edges from digraph &lt;code&gt;G&lt;/code&gt; until there are no &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;paths&lt;/a&gt;&lt;/code&gt; from vertex &lt;code&gt;V1&lt;/code&gt; to vertex &lt;code&gt;V2&lt;/code&gt;.</source>
          <target state="translated">꼭지점 &lt;code&gt;V1&lt;/code&gt; 에서 꼭지점 &lt;code&gt;V2&lt;/code&gt; 까지의 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;paths&lt;/a&gt;&lt;/code&gt; 가 없을 때까지 digraph &lt;code&gt;G&lt;/code&gt; 에서 모서리를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="5dd5c53526024f8af02322fcf011be99c77bbb2e" translate="yes" xml:space="preserve">
          <source>Deletes file or directory &lt;code&gt;File&lt;/code&gt;. If &lt;code&gt;File&lt;/code&gt; is a directory, its contents is first recursively deleted. Returns:</source>
          <target state="translated">파일 또는 디렉토리 &lt;code&gt;File&lt;/code&gt; 을 삭제합니다 . 경우 &lt;code&gt;File&lt;/code&gt; 디렉토리, 그 내용은 첫째 반복적으로 삭제됩니다. 보고:</target>
        </trans-unit>
        <trans-unit id="ae4fe94c9918f898de81f8233a9ef1f179233cfb" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; 에서 중단 점을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="8a8a3823a04d3923ed4cecf755bd1cd98d275849" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoints at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Name/Arity&lt;/code&gt; 함수의 모든 절의 첫 번째 행에서 중단 점을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="46e356165916fa441c4393d47df41d4f5eafc033" translate="yes" xml:space="preserve">
          <source>Deletes the current key, if it is valid. Calls the Win32 API function &lt;code&gt;RegDeleteKey()&lt;/code&gt;. Notice that this call does not change the current key (unlike &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt; change_key_create/2&lt;/a&gt;&lt;/code&gt;). This means that after the call, the current key is invalid.</source>
          <target state="translated">현재 키가 유효한 경우 삭제합니다. Win32 API 함수 &lt;code&gt;RegDeleteKey()&lt;/code&gt; 호출합니다 . 이 호출은 현재 키를 변경하지 않습니다 ( &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt; change_key_create/2&lt;/a&gt;&lt;/code&gt; 와 달리 ). 이것은 호출 후 현재 키가 유효하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6f4c876adf78c7429ea484cfe8d592f3d4950615" translate="yes" xml:space="preserve">
          <source>Deletes the current key, if it is valid. Calls the Win32 API function &lt;code&gt;RegDeleteKey()&lt;/code&gt;. Notice that this call does not change the current key (unlike &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt;). This means that after the call, the current key is invalid.</source>
          <target state="translated">유효한 경우 현재 키를 삭제합니다. Win32 API 함수 &lt;code&gt;RegDeleteKey()&lt;/code&gt; 호출합니다 . 이 호출은 &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt; 와 달리 현재 키를 변경하지 않습니다 . 이것은 통화 후 현재 키가 유효하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4f8afd6d7d8311edbd37e3839c01ce48b35a3601" translate="yes" xml:space="preserve">
          <source>Deletes the edges in list &lt;code&gt;Edges&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">Digraph &lt;code&gt;G&lt;/code&gt; 에서 list &lt;code&gt;Edges&lt;/code&gt; 의 가장자리를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="e090b8665faa778d2ef9696ec7f8fe8a880abb2f" translate="yes" xml:space="preserve">
          <source>Deletes the entire table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">전체 테이블 &lt;code&gt;Tab&lt;/code&gt; 을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="71fc151dee30c6abe6f031a8b13b17a8191c83f4" translate="yes" xml:space="preserve">
          <source>Deletes the environment variable &lt;code&gt;VarName&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;VarName&lt;/code&gt; 을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="f708faba6af97f22007037df3f544635b58fb9f9" translate="yes" xml:space="preserve">
          <source>Deletes the file &lt;code&gt;File&lt;/code&gt; at the remote server.</source>
          <target state="translated">원격 서버에서 파일 &lt;code&gt;File&lt;/code&gt; 을 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="1220b4e312e97076f6d4fd5b1f7cb6ed925918bd" translate="yes" xml:space="preserve">
          <source>Deletes the file specified by &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 으로 지정된 파일을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="311abc79f8faf3f31f0de87d15262b09b11f065e" translate="yes" xml:space="preserve">
          <source>Deletes the files &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;start&lt;/code&gt; from &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt;. These files are created again from source when installing the release.</source>
          <target state="translated">파일의 삭제 &lt;code&gt;erl&lt;/code&gt; 하고 &lt;code&gt;start&lt;/code&gt; 에서 &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; . 이 파일은 릴리스를 설치할 때 소스에서 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="a4766320246a7839926e41b58ceb885afd72bb95" translate="yes" xml:space="preserve">
          <source>Deletes the index on attribute with name &lt;code&gt;AttrName&lt;/code&gt; in a table.</source>
          <target state="translated">테이블에서 이름이 &lt;code&gt;AttrName&lt;/code&gt; 인 속성의 인덱스를 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="87ff8ee5f5ac17a2346e6941ae9fe9a8f102c0fd" translate="yes" xml:space="preserve">
          <source>Deletes the lock &lt;code&gt;Id&lt;/code&gt; synchronously.</source>
          <target state="translated">잠금 &lt;code&gt;Id&lt;/code&gt; 동 기적으로 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="b5d31af51e57f1d619a23240313fc7f8259cab1f" translate="yes" xml:space="preserve">
          <source>Deletes the replica of table &lt;code&gt;Tab&lt;/code&gt; at node &lt;code&gt;Node&lt;/code&gt;. When the last replica is deleted with this function, the table disappears entirely.</source>
          <target state="translated">노드 &lt;code&gt;Node&lt;/code&gt; 에서 테이블 &lt;code&gt;Tab&lt;/code&gt; 의 복제본을 삭제합니다 . 이 기능으로 마지막 복제본을 삭제하면 테이블이 완전히 사라집니다.</target>
        </trans-unit>
        <trans-unit id="327e2bdef58dc2b2885dab77476a029eecf521cd" translate="yes" xml:space="preserve">
          <source>Deletes the row in the table.</source>
          <target state="translated">테이블에서 행을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="ef466f07da53b5c5a842ff32c0bb33037d702347" translate="yes" xml:space="preserve">
          <source>Deletes the vertices in list &lt;code&gt;Vertices&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">목록에서 정점 삭제 &lt;code&gt;Vertices&lt;/code&gt; 소리를 나타내는 두 글자에서 &lt;code&gt;G&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="ae125b029da9f118d4a67820ec02ed4a2262e06a" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of compress extensions.</source>
          <target state="translated">압축 확장 목록에서 이러한 확장을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="d7cebb65c66062e754f67e7cd84ff3910ba98a0e" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of uncompress extensions.</source>
          <target state="translated">압축 해제 확장명 목록에서이 확장명을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="d080c61dd65db208d878d0084fbbff8bedd06443" translate="yes" xml:space="preserve">
          <source>Deletes vertex &lt;code&gt;V&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;. Any edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V&lt;/code&gt; are also deleted.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 에서 꼭짓점 &lt;code&gt;V&lt;/code&gt; 를 삭제합니다 . 모든 가장자리 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;V&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;V&lt;/code&gt; 는 도 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="743f41b9c4291a0f1388dfcb3326f2e76e1e6fe5" translate="yes" xml:space="preserve">
          <source>Deleting an Element</source>
          <target state="translated">요소 삭제</target>
        </trans-unit>
        <trans-unit id="b21f3d4de11cc4c159ce99657c2fbc90fdf1feff" translate="yes" xml:space="preserve">
          <source>Deletion of atoms and other terms that fit in one machine word is specially optimized to avoid doing a global GC. It is still not recommended to update persistent terms with such values too frequently because the hash table holding the keys is copied every time a persistent term is updated.</source>
          <target state="translated">하나의 기계어에 맞는 원자 및 기타 용어의 삭제는 글로벌 GC를 수행하지 않도록 특별히 최적화되어 있습니다. 지속적 용어가 업데이트 될 때마다 키를 보유하는 해시 테이블이 복사되기 때문에 이러한 값으로 지속적 용어를 너무 자주 업데이트하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5dcabc9ea39d37218edc79435c06dbd50a0deb2e" translate="yes" xml:space="preserve">
          <source>Deliver distribution channel data from a remote node to the local node.</source>
          <target state="translated">원격 노드에서 로컬 노드로 분배 채널 데이터를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="f56e9fc6568538a640442392ddf7c4208577ff80" translate="yes" xml:space="preserve">
          <source>Delivered when a peer sends an adaptation layer indication parameter (configured through option &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt;). Notice that with the current implementation of the Erlang/SCTP binding, this event is disabled by default.</source>
          <target state="translated">피어가 적응 계층 표시 매개 변수 ( &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt; 옵션을 통해 구성)를 보낼 때 전달됩니다 . Erlang / SCTP 바인딩의 현재 구현에서는이 이벤트가 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="41529ae1ea2763fa3d1c8d48455acf9f20804cf1" translate="yes" xml:space="preserve">
          <source>Delivery is done differently depending on the value of &lt;code&gt;tag_receiver()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;tag_receiver()&lt;/code&gt; 값에 따라 전달이 다르게 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="af78bc157d8b4fffa9286db1b886ea4e95d3453e" translate="yes" xml:space="preserve">
          <source>Demanding reload when a reload is already in progress is always an error. Using the high-level functions, it is also an error to demand reloading when more than one &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; has the driver loaded.</source>
          <target state="translated">재 장전이 이미 진행 중일 때 재 장전 요구는 항상 오류입니다. 고급 기능을 사용하면 둘 이상의 &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; 에게 드라이버가로드 된 경우 다시로드해야하는 것은 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="4dcb269c56df9edcec6a92cbe87d6a1b141f056d" translate="yes" xml:space="preserve">
          <source>Demands for efficiency when reading data from an I/O server has not only lead to the addition of the &lt;code&gt;get_line&lt;/code&gt; and &lt;code&gt;get_chars&lt;/code&gt; requests, but has also added the concept of I/O server options. No options are mandatory to implement, but all I/O servers in the Erlang standard libraries honor the &lt;code&gt;binary&lt;/code&gt; option, which allows element &lt;code&gt;Data&lt;/code&gt; of the &lt;code&gt;io_reply&lt;/code&gt; tuple to be a binary instead of a list &lt;strong&gt;when possible&lt;/strong&gt;. If the data is sent as a binary, Unicode data is sent in the standard Erlang Unicode format, that is, UTF-8 (notice that the function of the &lt;code&gt;get_until&lt;/code&gt; request still gets list data regardless of the I/O server mode).</source>
          <target state="translated">I / O 서버에서 데이터를 읽을 때 효율성에 대한 요구로 인해 &lt;code&gt;get_line&lt;/code&gt; 및 &lt;code&gt;get_chars&lt;/code&gt; 요청 이 추가 되었을 뿐만 아니라 I / O 서버 옵션의 개념도 추가되었습니다. 구현해야하는 옵션은 없지만 Erlang 표준 라이브러리의 모든 I / O 서버는 &lt;code&gt;binary&lt;/code&gt; 옵션을 사용 하므로 &lt;code&gt;io_reply&lt;/code&gt; 튜플 의 요소 &lt;code&gt;Data&lt;/code&gt; 가 &lt;strong&gt;가능한 경우&lt;/strong&gt; 목록 대신 이진이 &lt;strong&gt;될 수 있습니다&lt;/strong&gt; . 데이터가 2 진으로 전송되면, 유니 코드 데이터는 표준 Erlang 유니 코드 형식, 즉 UTF-8로 전송됩니다 ( &lt;code&gt;get_until&lt;/code&gt; 요청 의 기능은 여전히 I / O 서버 모드에 관계없이 목록 데이터를 가져옵니다).&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b75d5fa2d821733c84521ae433ed2c40237c592" translate="yes" xml:space="preserve">
          <source>Denotes if the terminal is to echo input. Only supported for the standard shell I/O server (&lt;code&gt;group.erl&lt;/code&gt;)</source>
          <target state="translated">터미널이 입력을 반향해야하는지 나타냅니다. 표준 쉘 I / O 서버 ( &lt;code&gt;group.erl&lt;/code&gt; ) 에만 지원</target>
        </trans-unit>
        <trans-unit id="770427e097fad59d1892a79f3d07020d064304fe" translate="yes" xml:space="preserve">
          <source>Denotes the last part of the OID which specifies the index of the row in the table (see RFC1212, 4.1.6 for more information about INDEX).</source>
          <target state="translated">테이블에서 행의 인덱스를 지정하는 OID의 마지막 부분을 나타냅니다 (INDEX에 대한 자세한 내용은 RFC1212, 4.1.6 참조).</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="9617b6235113e37c04bab7c3ca9a40d08c2fd9ba" translate="yes" xml:space="preserve">
          <source>Dependencies between applications or modules displayed as a graph</source>
          <target state="translated">그래프로 표시되는 애플리케이션 또는 모듈 간의 종속성</target>
        </trans-unit>
        <trans-unit id="ed42c382496ca9fcfe7ec583d2cd5e90ce4a7bae" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Arg&lt;/code&gt;, this function can return a list not only of visible nodes, but also hidden nodes and previously known nodes, and so on.</source>
          <target state="translated">&lt;code&gt;Arg&lt;/code&gt; 에 따라이 함수는 보이는 노드뿐만 아니라 숨겨진 노드와 이전에 알려진 노드 등의 목록을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="888f8a801100b3047d49eff8aacaa93e0afae980" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Flag&lt;/code&gt;, the calling process starts subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;true&lt;/code&gt;) or stops subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;false&lt;/code&gt;) to node status change messages.</source>
          <target state="translated">에 따라 &lt;code&gt;Flag&lt;/code&gt; , 가입 호출 프로세스 시작 ( &lt;code&gt;Flag&lt;/code&gt; 에 동일 &lt;code&gt;true&lt;/code&gt; ) 또는 (구독 중지 &lt;code&gt;Flag&lt;/code&gt; 에 동일 &lt;code&gt;false&lt;/code&gt; 노드 상태 변경 메시지).</target>
        </trans-unit>
        <trans-unit id="3a593c77b3451c58e4a483fc1a4c2ed4a7460896" translate="yes" xml:space="preserve">
          <source>Depending on Unix:</source>
          <target state="translated">유닉스에 따라 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
