<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="c292e2a63f9af9f0309b2c4849a8d45ddaf2d9b9" translate="yes" xml:space="preserve">
          <source>Sending a message to a pid never fails, even if the pid identifies a non-existing process.</source>
          <target state="translated">pid가 존재하지 않는 프로세스를 식별하더라도 pid에 메시지를 보내는 것은 절대 실패하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="29ac6cce0e5098ad64850007168cdad9fb21d8c4" translate="yes" xml:space="preserve">
          <source>Sending a request over a peer connection on a remote node is less efficient than sending it over a local connection. It may be preferable to make use of the &lt;code&gt;&lt;a href=&quot;#service_opt&quot;&gt;service_opt()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;restrict_connections&lt;/code&gt; and maintain a dedicated connection on each node from which requests are sent.</source>
          <target state="translated">원격 노드에서 피어 연결을 통해 요청을 보내는 것은 로컬 연결을 통해 보내는 것보다 덜 효율적입니다. 사용하는 것이 바람직 할 수있다 &lt;code&gt;&lt;a href=&quot;#service_opt&quot;&gt;service_opt()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;restrict_connections&lt;/code&gt; 을 하고 요청을 전송하는 각 노드에 전용 연결을 유지한다.</target>
        </trans-unit>
        <trans-unit id="3bcf8eb70abf6b1e60c4f6aa9fda4e892ab0529a" translate="yes" xml:space="preserve">
          <source>Sending and receiving Erlang messages</source>
          <target state="translated">Erlang 메시지 보내기 및 받기</target>
        </trans-unit>
        <trans-unit id="f1198d0d25231b985491ef306d5c4a89c06c725b" translate="yes" xml:space="preserve">
          <source>Sending node, process/port and message term</source>
          <target state="translated">송신 노드, 프로세스 / 포트 및 메시지 용어</target>
        </trans-unit>
        <trans-unit id="998e351e56b8e33052260f9b3f69633c52f141c8" translate="yes" xml:space="preserve">
          <source>Sending segmented messages:</source>
          <target state="translated">세그먼트 메시지 보내기 :</target>
        </trans-unit>
        <trans-unit id="444a45cb9a6faa18eaf863392c1d10b290f21495" translate="yes" xml:space="preserve">
          <source>Sending the &lt;code&gt;SIGUSR1&lt;/code&gt; signal to an Erlang machine (Unix only) forces a crash dump. This slogan reflects that the Erlang machine crash-dumped because of receiving that signal.</source>
          <target state="translated">&lt;code&gt;SIGUSR1&lt;/code&gt; 신호를 Erlang 시스템으로 보내면 (Unix 만 해당) 크래시 덤프가 발생합니다. 이 슬로건은 해당 신호를 수신하여 Erlang 시스템이 충돌 덤프되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a57cb38242fec142c3fcf43b28be05dff5d819a7" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;Bytes&lt;/code&gt; from the file referenced by &lt;code&gt;RawFile&lt;/code&gt; beginning at &lt;code&gt;Offset&lt;/code&gt; to &lt;code&gt;Socket&lt;/code&gt;. Returns &lt;code&gt;{ok, BytesSent}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. If &lt;code&gt;Bytes&lt;/code&gt; is set to &lt;code&gt;0&lt;/code&gt; all data after the specified &lt;code&gt;Offset&lt;/code&gt; is sent.</source>
          <target state="translated">&lt;code&gt;Offset&lt;/code&gt; 에서 시작 하여 &lt;code&gt;RawFile&lt;/code&gt; 이 참조하는 파일 에서 &lt;code&gt;Socket&lt;/code&gt; 로 &lt;code&gt;Bytes&lt;/code&gt; 를 보냅니다 . 반환 &lt;code&gt;{ok, BytesSent}&lt;/code&gt; 그렇지 않으면 성공하면, &lt;code&gt;{error, Reason}&lt;/code&gt; . 경우 &lt;code&gt;Bytes&lt;/code&gt; 설정되어 &lt;code&gt;0&lt;/code&gt; 모든 데이터를 지정 후 &lt;code&gt;Offset&lt;/code&gt; 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="41d5bb2c90de6596d2eb55e87cee5af3d5e0d821" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;Data&lt;/code&gt; to the port.</source>
          <target state="translated">포트로 &lt;code&gt;Data&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="fccebd66486b6b87d1f00d078ac674ff79fd9307" translate="yes" xml:space="preserve">
          <source>Sends EOF on channel &lt;code&gt;ChannelId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChannelId&lt;/code&gt; 채널에서 EOF를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="bf1001dd99ff6f64248ef05d77aef7030f181d81" translate="yes" xml:space="preserve">
          <source>Sends a &lt;code&gt;Data&lt;/code&gt; message over an existing association and specified stream.</source>
          <target state="translated">기존 연결 및 지정된 스트림을 통해 &lt;code&gt;Data&lt;/code&gt; 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7261a65308fb98fab49626b538f6d1bc1c245d1a" translate="yes" xml:space="preserve">
          <source>Sends a NETCONF &lt;code&gt;rpc&lt;/code&gt; request to the server.</source>
          <target state="translated">NETCONF &lt;code&gt;rpc&lt;/code&gt; 요청을 서버로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="38e70e1f59e12808e9579b02e98e9757ab623a9e" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and returns immediately (uses a format string and a list of arguments to build the command).</source>
          <target state="translated">Telnet 명령을 보내고 즉시 리턴합니다 (형식 문자열과 인수 목록을 사용하여 명령을 빌드 함).</target>
        </trans-unit>
        <trans-unit id="83d8c23cb4376be7992d249305da5cba4d9f3b72" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and returns immediately.</source>
          <target state="translated">Telnet 명령을 보내고 즉시 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="19082caa1729b273bc9cc0e4eea68b871585d379" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and waits for prompt (uses a format string and a list of arguments to build the command).</source>
          <target state="translated">Telnet 명령을 전송하고 프롬프트를 기다립니다 (형식 문자열과 인수 목록을 사용하여 명령을 빌드 함).</target>
        </trans-unit>
        <trans-unit id="0a2005ff59f24226083c61ca19f6818691744257" translate="yes" xml:space="preserve">
          <source>Sends a command through Telnet and waits for prompt.</source>
          <target state="translated">Telnet을 통해 명령을 전송하고 프롬프트를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="90d379b9e4a73699023ae63093671e3c84d26338" translate="yes" xml:space="preserve">
          <source>Sends a file over FTP.</source>
          <target state="translated">FTP를 통해 파일을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c70e14c02c2aecb0b694f5d4ce681132e93df400" translate="yes" xml:space="preserve">
          <source>Sends a message and returns &lt;code&gt;Msg&lt;/code&gt;. This is the same as using the &lt;code&gt; send operator&lt;/code&gt;: &lt;code&gt;Dest ! Msg&lt;/code&gt;.</source>
          <target state="translated">메시지를 보내고 &lt;code&gt;Msg&lt;/code&gt; 를 반환합니다 . 이것은 &lt;code&gt; send operator&lt;/code&gt; 를 사용하는 것과 같습니다. &lt;code&gt;Dest ! Msg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32a783de449556f411e3719d4440d455e2aec8f0" translate="yes" xml:space="preserve">
          <source>Sends a message and returns &lt;code&gt;Msg&lt;/code&gt;. This is the same as using the &lt;code&gt;send operator&lt;/code&gt;: &lt;code&gt;Dest ! Msg&lt;/code&gt;.</source>
          <target state="translated">메시지를 보내고 &lt;code&gt;Msg&lt;/code&gt; 를 반환합니다 . 이것은 &lt;code&gt;send operator&lt;/code&gt; 를 사용하는 것과 같습니다. &lt;code&gt;Dest ! Msg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e737bf5ca4a6e58bb46eb491dc4d98e8f4f9bc3" translate="yes" xml:space="preserve">
          <source>Sends a message on a connection.</source>
          <target state="translated">연결시 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d6c18ead8d836f36f7fe9abece9db9344f11d47f" translate="yes" xml:space="preserve">
          <source>Sends a message on a socket. The send handle is obtained by megaco_udp:create_send_handle/3. Increments the NumOutMessages and NumOutOctets counters if message successfully sent. In case of a failure to send, the NumErrors counter is &lt;strong&gt;not&lt;/strong&gt; incremented. This is done elsewhere in the megaco app.</source>
          <target state="translated">소켓에 메시지를 보냅니다. 송신 핸들은 megaco_udp : create_send_handle / 3에 의해 확보됩니다. 메시지가 성공적으로 전송되면 NumOutMessages 및 NumOutOctets 카운터를 증가시킵니다. 전송에 실패하면 NumErrors 카운터가 증가 &lt;strong&gt;하지 않습니다&lt;/strong&gt; . 이것은 megaco 앱의 다른 곳에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9bc2a8776012822c44b929c24970b34d8ba658ec" translate="yes" xml:space="preserve">
          <source>Sends a message to a process.</source>
          <target state="translated">프로세스에 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b8b2a440063172ede5825159b4de4c1873e19be0" translate="yes" xml:space="preserve">
          <source>Sends a message to all registered subscribers.</source>
          <target state="translated">등록 된 모든 가입자에게 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="618bf8fa508e724a66f87142604142c99c463f1b" translate="yes" xml:space="preserve">
          <source>Sends a monitor request of type &lt;code&gt;Type&lt;/code&gt; to the entity identified by &lt;code&gt;Item&lt;/code&gt;. If the monitored entity does not exist or it changes monitored state, the caller of &lt;code&gt;monitor/2&lt;/code&gt; is notified by a message on the following format:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 유형 의 모니터 요청을 &lt;code&gt;Item&lt;/code&gt; 에 의해 식별 된 엔티티로 보냅니다 . 모니터 대상 엔티티가 존재하지 않거나 모니터 대상 상태를 변경하면 &lt;code&gt;monitor/2&lt;/code&gt; 의 호출자 에게 다음 형식의 메시지가 통지됩니다.</target>
        </trans-unit>
        <trans-unit id="85fd25da87ba98fc21b2b3ba79c5f9669f36d785" translate="yes" xml:space="preserve">
          <source>Sends a packet on a socket.</source>
          <target state="translated">소켓에서 패킷을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3a8256d0a01ae48f4ae2facf5b21aca79262fc4c" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Destination&lt;/code&gt; with ancillary data &lt;code&gt;AncData&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AncData&lt;/code&gt; 보조 데이터와 함께 지정된 &lt;code&gt;Destination&lt;/code&gt; 에 패킷을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9d0860242a0e4fc678a5f0e61a49de6ed3339002" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Destination&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Destination&lt;/code&gt; 에 패킷을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="44291254eabd0d7a4d77dbff42f787794d8c696f" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Destination&lt;/code&gt;. Since &lt;code&gt;Destination&lt;/code&gt; is complete, &lt;code&gt;PortZero&lt;/code&gt; is redundant and has to be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Destination&lt;/code&gt; 에 패킷을 보냅니다 . 이후 &lt;code&gt;Destination&lt;/code&gt; 완료되면 &lt;code&gt;PortZero&lt;/code&gt; 는 중복 및이어야한다 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1a22fdc3fdd94703e349f9e149bff0145349ed1" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Host&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt;, with ancillary data &lt;code&gt;AncData&lt;/code&gt;.</source>
          <target state="translated">보조 데이터 &lt;code&gt;AncData&lt;/code&gt; 와 함께 지정된 &lt;code&gt;Host&lt;/code&gt; 및 &lt;code&gt;Port&lt;/code&gt; 로 패킷을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="182ce73ce95fb784f0c7c5f2e7dd254f992ec2d6" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Host&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Host&lt;/code&gt; 및 &lt;code&gt;Port&lt;/code&gt; 로 패킷을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="2e8f6fd072383efae278f3a3987d40724ec0db85" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified address and port. Argument &lt;code&gt;Address&lt;/code&gt; can be a hostname or a socket address.</source>
          <target state="translated">지정된 주소와 포트로 패킷을 보냅니다. 인수 &lt;code&gt;Address&lt;/code&gt; 는 호스트 이름 또는 소켓 주소 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e65a9b0ed6d2891dc68f3014f216bc475e43a9fa" translate="yes" xml:space="preserve">
          <source>Sends a request to event handler &lt;code&gt;Handler&lt;/code&gt; installed in event manager &lt;code&gt;EventMgrRef&lt;/code&gt; and returns a handle &lt;code&gt;RequestId&lt;/code&gt;. The return value &lt;code&gt;RequestId&lt;/code&gt; shall later be used with &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; in the same process to fetch the actual result of the request.</source>
          <target state="translated">이벤트 관리자 &lt;code&gt;EventMgrRef&lt;/code&gt; 에 설치된 이벤트 핸들러 &lt;code&gt;Handler&lt;/code&gt; 에 요청을 보내고 &lt;code&gt;RequestId&lt;/code&gt; 핸들을 반환합니다 . 반환 값 &lt;code&gt;RequestId&lt;/code&gt; 는 나중에 동일한 프로세스에서 &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; 와 함께 사용되어 요청의 실제 결과를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e073b19b459dfe1139aefa37e319b98ecec9da97" translate="yes" xml:space="preserve">
          <source>Sends a request to execute a predefined subsystem.</source>
          <target state="translated">사전 정의 된 서브 시스템 실행 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="8e61db569d2ea1904d6ce7914d2984f0fa53fd16" translate="yes" xml:space="preserve">
          <source>Sends a request to get the specified event streams.</source>
          <target state="translated">지정된 이벤트 스트림을 가져 오기위한 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="1c02871669715c5df37f632bded166d0d6ce6c14" translate="yes" xml:space="preserve">
          <source>Sends a request to the &lt;code&gt;ServerRef&lt;/code&gt; of the &lt;code&gt;gen_server&lt;/code&gt; process and returns a handle &lt;code&gt;RequestId&lt;/code&gt;. The return value &lt;code&gt;RequestId&lt;/code&gt; shall later be used with &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; to fetch the actual result of the request.</source>
          <target state="translated">&lt;code&gt;gen_server&lt;/code&gt; 프로세스 의 &lt;code&gt;ServerRef&lt;/code&gt; 에 요청을 보내고 &lt;code&gt;RequestId&lt;/code&gt; 핸들을 반환합니다 . 반환 값 &lt;code&gt;RequestId&lt;/code&gt; 는 나중에 &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; 와 함께 사용되어 요청의 실제 결과를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="25253afd5a685271172f0b86f55f00f2c8ceb4b6" translate="yes" xml:space="preserve">
          <source>Sends a request to the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; and returns a handle &lt;code&gt;RequestId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; 에 요청을 보내고 &lt;code&gt;RequestId&lt;/code&gt; 핸들을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="61fd8443642476c67011c6c794b85a9208da6f4e" translate="yes" xml:space="preserve">
          <source>Sends a synchronous notification of type &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt; to the &lt;code&gt;Common Test&lt;/code&gt; event manager. This can later be caught by any installed event manager.</source>
          <target state="translated">유형의 동기 통지를 보냅니다 &lt;code&gt;Name&lt;/code&gt; 과 &lt;code&gt;Data&lt;/code&gt; 받는 &lt;code&gt;Common Test&lt;/code&gt; 이벤트 관리자를. 설치된 이벤트 관리자가 나중에이를 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="642294bb002ba063bc2d41f715130809aa53f640" translate="yes" xml:space="preserve">
          <source>Sends a tick message, which is a packet of length 0. Ticking is done when the port is in &lt;code&gt;data&lt;/code&gt; mode, so the command for sending data cannot be used (besides it ignores zero length packages in &lt;code&gt;command&lt;/code&gt; mode). This is used by the ticker to send dummy data when no other traffic is present.</source>
          <target state="translated">길이가 0 인 패킷 인 틱 메시지를 보냅니다. 포트는 &lt;code&gt;data&lt;/code&gt; 모드 에있을 때 틱이 수행 되므로 데이터 전송 명령을 사용할 수 없습니다 ( &lt;code&gt;command&lt;/code&gt; 모드 에서 길이가 0 인 패키지는 무시 함 ). 이것은 다른 트래픽이 없을 때 티커가 더미 데이터를 보내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cd21d4aea87e135f8db24e03b9c26172b603401e" translate="yes" xml:space="preserve">
          <source>Sends all &lt;code&gt;Replies&lt;/code&gt;, then terminates the &lt;code&gt;gen_statem&lt;/code&gt; by calling &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;Reason&lt;/code&gt; and &lt;code&gt;NewData&lt;/code&gt;, if specified.</source>
          <target state="translated">모든 &lt;code&gt;Replies&lt;/code&gt; 를 보낸 다음 지정된 경우 &lt;code&gt;Reason&lt;/code&gt; 및 &lt;code&gt;NewData&lt;/code&gt; 와 함께 &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; 를 호출 하여 &lt;code&gt;gen_statem&lt;/code&gt; 을 종료 합니다.</target>
        </trans-unit>
        <trans-unit id="1b571cf3ceca14f6161cbb475388a7821a979c94" translate="yes" xml:space="preserve">
          <source>Sends an Erlang term to a process.</source>
          <target state="translated">Erlang 용어를 프로세스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="927c9e1e1bf78835f28716551ead89eb338ad958" translate="yes" xml:space="preserve">
          <source>Sends an Erlang term to a registered process.</source>
          <target state="translated">Erlang 용어를 등록 된 프로세스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="57d7c6fb590dc0f13e1974114e2730537afad3bb" translate="yes" xml:space="preserve">
          <source>Sends an HTTP request. The function can be both synchronous and asynchronous. In the latter case, the function returns &lt;code&gt;{ok, RequestId}&lt;/code&gt; and then the information is delivered to the &lt;code&gt;receiver&lt;/code&gt; depending on that value.</source>
          <target state="translated">HTTP 요청을 보냅니다. 이 기능은 동기 및 비동기가 될 수 있습니다. 후자의 경우, 함수는 &lt;code&gt;{ok, RequestId}&lt;/code&gt; 리턴 한 다음 해당 값에 따라 정보를 &lt;code&gt;receiver&lt;/code&gt; 에게 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="bc7532344130633ffd04ed3ff3c05c1b9a15db47" translate="yes" xml:space="preserve">
          <source>Sends an SSH Connection Protocol &lt;code&gt;pty_req&lt;/code&gt;, to allocate a pseudo-terminal. Is to be called by an SSH client process.</source>
          <target state="translated">의사 터미널을 할당하기 위해 SSH 연결 프로토콜 &lt;code&gt;pty_req&lt;/code&gt; 를 보냅니다 . SSH 클라이언트 프로세스에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d95dc1250619b283e9f31b9437b2e11fe452144b" translate="yes" xml:space="preserve">
          <source>Sends an XML document to the server.</source>
          <target state="translated">XML 문서를 서버로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="0ef0a82dbfc2de9f26d73492b241fb6b356feafd" translate="yes" xml:space="preserve">
          <source>Sends an arbitrary FTP command and returns verbatim a list of the lines sent back by the FTP server. This function is intended to give application accesses to FTP commands that are server-specific or that cannot be provided by this FTP client.</source>
          <target state="translated">임의의 FTP 명령을 전송하고 FTP 서버에서 다시 전송 한 행 목록을 그대로 리턴합니다. 이 기능은 서버 별이거나이 FTP 클라이언트가 제공 할 수없는 FTP 명령에 응용 프로그램 액세스를 제공하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f17ba9077ee94c188fdef8a384f5cdd747c8329a" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous event to the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_statem&lt;/code&gt; does not exist. The &lt;code&gt;gen_statem&lt;/code&gt; calls the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;cast&lt;/code&gt; and event content &lt;code&gt;Msg&lt;/code&gt;.</source>
          <target state="translated">비동기 이벤트를 &lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; 로 보내고 대상 노드 또는 &lt;code&gt;gen_statem&lt;/code&gt; 이 존재하지 않는 경우 무시하고 즉시 &lt;code&gt;ok&lt;/code&gt; 를 반환 합니다. &lt;code&gt;gen_statem&lt;/code&gt; 가 부르는 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;cast&lt;/code&gt; 및 이벤트 내용 &lt;code&gt;Msg&lt;/code&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74984885bd2673385ef69978113530fdf76c8ceb" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous event to the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_statem&lt;/code&gt; does not exist. The &lt;code&gt;gen_statem&lt;/code&gt; calls the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;cast&lt;/code&gt; and event content &lt;code&gt;Msg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; 에 비동기 이벤트를 전송 하고 대상 노드 또는 &lt;code&gt;gen_statem&lt;/code&gt; 이 존재하지 않으면 무시하고 즉시 &lt;code&gt;ok&lt;/code&gt; 를 리턴 합니다. &lt;code&gt;gen_statem&lt;/code&gt; 가 부르는 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;cast&lt;/code&gt; 및 이벤트 내용 &lt;code&gt;Msg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b547bdaa5517f467cc9589c58e11c8caaa64283" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous message to the channel process and returns ok immediately, ignoring if the destination node or channel process does not exist. The channel calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the message.</source>
          <target state="translated">대상 노드 또는 채널 프로세스가 존재하지 않으면 무시하고 채널 프로세스에 비동기 메시지를 보내고 즉시 확인을 리턴합니다. 채널 은 메시지를 처리하기 위해 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="1a9158a1a92cc117659b31066bac983f8399ba15" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous notification of type &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt;to the Common Test event manager. This can later be caught by any installed event manager.</source>
          <target state="translated">유형의 비동기 통지 전송 &lt;code&gt;Name&lt;/code&gt; 과 &lt;code&gt;Data&lt;/code&gt; 공통 테스트 이벤트 관리자에 있습니다. 설치된 이벤트 관리자가 나중에이를 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb88ec0fa1bb6c44340bd2c6baf681f9e95dd6e0" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;ServerRef&lt;/code&gt; of the &lt;code&gt;gen_server&lt;/code&gt; process and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_server&lt;/code&gt; process does not exist. The &lt;code&gt;gen_server&lt;/code&gt; process calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">&lt;code&gt;gen_server&lt;/code&gt; 프로세스 의 &lt;code&gt;ServerRef&lt;/code&gt; 에 비동기 요청을 보내고 대상 노드 또는 &lt;code&gt;gen_server&lt;/code&gt; 프로세스가없는 경우 즉시 &lt;code&gt;ok&lt;/code&gt; 를 반환 합니다. &lt;code&gt;gen_server&lt;/code&gt; 의 프로세스를 호출 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 요청을 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb4f98023a2bc3e1eae9494947b8c9a4c2c152f3" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;ServerRef&lt;/code&gt; of the &lt;code&gt;gen_server&lt;/code&gt; process and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_server&lt;/code&gt; process does not exist. The &lt;code&gt;gen_server&lt;/code&gt; process calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">&lt;code&gt;gen_server&lt;/code&gt; 프로세스 의 &lt;code&gt;ServerRef&lt;/code&gt; 에 비동기 요청을 보내고 대상 노드 또는 &lt;code&gt;gen_server&lt;/code&gt; 프로세스가 존재하지 않으면 무시하고 즉시 &lt;code&gt;ok&lt;/code&gt; 를 리턴 합니다. &lt;code&gt;gen_server&lt;/code&gt; 의 프로세스를 호출 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 요청을 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e14699f73e6824283b5c283a67bc3100e4cdf09" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;gen_server&lt;/code&gt; processes locally registered as &lt;code&gt;Name&lt;/code&gt; at the specified nodes. The function returns immediately and ignores nodes that do not exist, or where the &lt;code&gt;gen_server&lt;/code&gt;&lt;code&gt;Name&lt;/code&gt; does not exist. The &lt;code&gt;gen_server&lt;/code&gt; processes call &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">지정된 노드에서 &lt;code&gt;Name&lt;/code&gt; 으로 로컬로 등록 된 &lt;code&gt;gen_server&lt;/code&gt; 프로세스에 비동기 요청을 보냅니다 . 이 함수는 즉시 반환하고 존재 하지 않거나 &lt;code&gt;gen_server&lt;/code&gt; &lt;code&gt;Name&lt;/code&gt; 이없는 노드를 무시 합니다. &lt;code&gt;gen_server&lt;/code&gt; 의 과정은 전화 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 요청을 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eac57b700cbb66597b777c52c875949a36394b4a" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;gen_server&lt;/code&gt; processes locally registered as &lt;code&gt;Name&lt;/code&gt; at the specified nodes. The function returns immediately and ignores nodes that do not exist, or where the &lt;code&gt;gen_server&lt;/code&gt;&lt;code&gt;Name&lt;/code&gt; does not exist. The &lt;code&gt;gen_server&lt;/code&gt; processes call &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">지정된 노드에서 로컬로 &lt;code&gt;Name&lt;/code&gt; 으로 등록 된 &lt;code&gt;gen_server&lt;/code&gt; 프로세스에 비동기 요청을 보냅니다 . 이 함수는 즉시 리턴하여 존재하지 않거나 &lt;code&gt;gen_server&lt;/code&gt; &lt;code&gt;Name&lt;/code&gt; 이없는 노드를 무시 합니다. &lt;code&gt;gen_server&lt;/code&gt; 의 과정은 전화 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 요청을 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd707c298ab1500e2e01da1e947594d5ec67473" translate="yes" xml:space="preserve">
          <source>Sends an event notification to event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt; Module:handle_event/2&lt;/a&gt;&lt;/code&gt; for each installed event handler to handle the event.</source>
          <target state="translated">이벤트 관리자 &lt;code&gt;EventMgrRef&lt;/code&gt; 에 이벤트 알림을 보냅니다 . 이벤트 관리자는 설치된 각 이벤트 핸들러에 대해 &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt; Module:handle_event/2&lt;/a&gt;&lt;/code&gt; 를 호출 하여 이벤트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="22d9a76964fdc6de46919f2ae3b1586fb8725f05" translate="yes" xml:space="preserve">
          <source>Sends an event notification to event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt; for each installed event handler to handle the event.</source>
          <target state="translated">이벤트 관리자에게 &lt;code&gt;EventMgrRef&lt;/code&gt; 이벤트 알림을 보냅니다 . 이벤트 관리자는 설치된 각 이벤트 핸들러에 대해 &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt; 를 호출 하여 이벤트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a48ebf47e427cbcbd5d8bf43978d938c7e022ba7" translate="yes" xml:space="preserve">
          <source>Sends an exit signal with exit reason &lt;code&gt;Reason&lt;/code&gt; to the process or port identified by &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">종료 이유 &lt;code&gt;Reason&lt;/code&gt; 가 있는 종료 신호를 &lt;code&gt;Pid&lt;/code&gt; 로 식별 된 프로세스 또는 포트로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="2d5f63244b8379209a3e5559dd9527cc393818d2" translate="yes" xml:space="preserve">
          <source>Sends ctrl commands to the OpenSSL engine given by &lt;code&gt;Engine&lt;/code&gt;. &lt;code&gt;Optional&lt;/code&gt; is a boolean argument that can relax the semantics of the function. If set to &lt;code&gt;true&lt;/code&gt; it will only return failure if the ENGINE supported the given command name but failed while executing it, if the ENGINE doesn't support the command name it will simply return success without doing anything. In this case we assume the user is only supplying commands specific to the given ENGINE so we set this to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Engine&lt;/code&gt; 이 제공 한 OpenSSL 엔진에 ctrl 명령을 보냅니다 . &lt;code&gt;Optional&lt;/code&gt; 은 함수의 의미를 완화 할 수있는 부울 인수입니다. &lt;code&gt;true&lt;/code&gt; 로 설정 하면 ENGINE이 지정된 명령 이름을 지원했지만 실행하는 동안 실패한 경우에만 실패를 리턴합니다. ENGINE이 명령 이름을 지원하지 않으면 아무런 조치도 취하지 않고 단순히 성공을 리턴합니다. 이 경우 사용자는 주어진 ENGINE에 특정한 명령 만 제공한다고 가정하여이를 &lt;code&gt;false&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c12a83bc6e3e8d31296d6cd5740549de25b10e84" translate="yes" xml:space="preserve">
          <source>Sends ctrl commands to the OpenSSL engine given by &lt;code&gt;Engine&lt;/code&gt;. This function is the same as calling &lt;code&gt;engine_ctrl_cmd_string/4&lt;/code&gt; with &lt;code&gt;Optional&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Engine&lt;/code&gt; 이 제공 한 OpenSSL 엔진에 ctrl 명령을 보냅니다 . 이 함수는 &lt;code&gt;Optional&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하여 &lt;code&gt;engine_ctrl_cmd_string/4&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="67d17c375a9a060f32a85373bddb44efde580601" translate="yes" xml:space="preserve">
          <source>Sends data from an Erl Scheme script back to the client.</source>
          <target state="translated">Erl Scheme 스크립트에서 클라이언트로 데이터를 다시 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c04c3739a3daf75c3fef5c563bcd271e4f7af2ca" translate="yes" xml:space="preserve">
          <source>Sends data from an I/O vector, &lt;code&gt;ev&lt;/code&gt;, to the port owner process. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;), just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt; driver_output2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">I / O 벡터 &lt;code&gt;ev&lt;/code&gt; 에서 포트 소유자 프로세스로 데이터를 보냅니다 . 이 헤더 버퍼 (갖는다 &lt;code&gt;hbuf&lt;/code&gt; 및 &lt;code&gt;hlen&lt;/code&gt; 처럼) &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt; driver_output2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6b7b3a58756f819969ad1c659f38d894b5b0c06" translate="yes" xml:space="preserve">
          <source>Sends data from an I/O vector, &lt;code&gt;ev&lt;/code&gt;, to the port owner process. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;), just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">I / O 벡터 ( &lt;code&gt;ev&lt;/code&gt; )에서 포트 소유자 프로세스로 데이터를 보냅니다 . 이 헤더 버퍼 (갖는다 &lt;code&gt;hbuf&lt;/code&gt; 및 &lt;code&gt;hlen&lt;/code&gt; 처럼) &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22caa4aafbbd2c636933e8db75ff46089c65895a" translate="yes" xml:space="preserve">
          <source>Sends data from the driver up to the emulator. The data is received as terms or binary data, depending on how the driver port was opened.</source>
          <target state="translated">드라이버에서 에뮬레이터로 데이터를 보냅니다. 데이터는 드라이버 포트가 열린 방식에 따라 용어 또는 이진 데이터로 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="f310650dd2279c9e0104d9edd659e1ffeaba54d5" translate="yes" xml:space="preserve">
          <source>Sends data in the special driver term format to the port owner process. This is a fast way to deliver term data from a driver. It needs no binary conversion, so the port owner process receives data as normal Erlang terms. The &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt; erl_drv_send_term&lt;/a&gt;&lt;/code&gt; functions can be used for sending to any process on the local node.</source>
          <target state="translated">특수 드라이버 용어 형식의 데이터를 포트 소유자 프로세스에 보냅니다. 이는 드라이버에서 용어 데이터를 제공하는 빠른 방법입니다. 바이너리 변환이 필요하지 않으므로 포트 소유자 프로세스는 일반적인 Erlang 용어로 데이터를받습니다. &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt; erl_drv_send_term&lt;/a&gt;&lt;/code&gt; 의 기능은 로컬 노드에서 모든 프로세스에 보내는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b61c157cd04931da6bc6144a1854ed21be64bcff" translate="yes" xml:space="preserve">
          <source>Sends data in the special driver term format to the port owner process. This is a fast way to deliver term data from a driver. It needs no binary conversion, so the port owner process receives data as normal Erlang terms. The &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt;erl_drv_send_term&lt;/a&gt;&lt;/code&gt; functions can be used for sending to any process on the local node.</source>
          <target state="translated">특수 드라이버 용어 형식의 데이터를 포트 소유자 프로세스로 보냅니다. 이것은 드라이버에서 용어 데이터를 전달하는 빠른 방법입니다. 이진 변환이 필요하지 않으므로 포트 소유자 프로세스는 일반적인 Erlang 용어로 데이터를 수신합니다. &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt;erl_drv_send_term&lt;/a&gt;&lt;/code&gt; 의 기능은 로컬 노드에서 모든 프로세스에 보내는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa5fa6ad7ca6754d75f1d129e656e6d856ced2b1" translate="yes" xml:space="preserve">
          <source>Sends data to a port owner process from a driver binary. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;) just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt;. Parameter &lt;code&gt;hbuf&lt;/code&gt; can be &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">드라이버 바이너리에서 포트 소유자 프로세스로 데이터를 보냅니다. 이 헤더 버퍼 (갖는다 &lt;code&gt;hbuf&lt;/code&gt; 및 &lt;code&gt;hlen&lt;/code&gt; 단지 등) &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt; 를 . 매개 변수 &lt;code&gt;hbuf&lt;/code&gt; 는 &lt;code&gt;NULL&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0a197ca0cf13d48f3bf505f9547ecf84c9b338a" translate="yes" xml:space="preserve">
          <source>Sends data to a port. &lt;code&gt;port_command(Port, Data, [])&lt;/code&gt; equals &lt;code&gt;port_command(Port, Data)&lt;/code&gt;.</source>
          <target state="translated">포트로 데이터를 보냅니다. &lt;code&gt;port_command(Port, Data, [])&lt;/code&gt; &lt;code&gt;port_command(Port, Data)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="32e3ac2032ba950eadeae218f87711e153b4ecbe" translate="yes" xml:space="preserve">
          <source>Sends data to a port. Same as &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; except for the error behavior and being synchronous (see below). Any process can send data to a port with &lt;code&gt;port_command/2&lt;/code&gt;, not only the port owner (the connected process).</source>
          <target state="translated">포트로 데이터를 보냅니다. &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; 와 동일 ! 오류 동작 및 동기식을 제외한 {PortOwner, {command, Data}} (아래 참조). 모든 프로세스는 포트 소유자 (연결된 프로세스)뿐만 아니라 &lt;code&gt;port_command/2&lt;/code&gt; 로 포트로 데이터를 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0104e693c2d55afcfea7268a884a1110584555c" translate="yes" xml:space="preserve">
          <source>Sends data to server on specified session channel and waits to receive the server response.</source>
          <target state="translated">지정된 세션 채널에서 서버로 데이터를 보내고 서버 응답 수신을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="15e214027ca7a8de2b53e7284b306d106dc4152e" translate="yes" xml:space="preserve">
          <source>Sends data to server on specified session channel.</source>
          <target state="translated">지정된 세션 채널에서 서버로 데이터를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d1cab56c9ab8cf986e93c06c7a3cc2852bb89003" translate="yes" xml:space="preserve">
          <source>Sends event &lt;code&gt;clear_alarm&lt;/code&gt; to all event handlers.</source>
          <target state="translated">모든 이벤트 처리기로 &lt;code&gt;clear_alarm&lt;/code&gt; 이벤트를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="dd355f42320150cb8365ea32b28a9e4c6a73272d" translate="yes" xml:space="preserve">
          <source>Sends event &lt;code&gt;set_alarm&lt;/code&gt; to all event handlers.</source>
          <target state="translated">이벤트 &lt;code&gt;set_alarm&lt;/code&gt; 을 모든 이벤트 핸들러로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="12851ee683118032e0a97a530784b4dd66833f17" translate="yes" xml:space="preserve">
          <source>Sends it back to the caller:</source>
          <target state="translated">발신자에게 다시 보냅니다.</target>
        </trans-unit>
        <trans-unit id="5f80e9661dcb5ef0c9d1d4530ca7c9e31260bf57" translate="yes" xml:space="preserve">
          <source>Sends it to the port.</source>
          <target state="translated">포트로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4a5ae1dd8a5dccb6192fbcd7dd439c14ca24ab3d" translate="yes" xml:space="preserve">
          <source>Sends message &lt;code&gt;Msg&lt;/code&gt; to the pid globally registered as &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 으로 글로벌로 등록 된 pid에 메시지 &lt;code&gt;Msg&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9e82d2dea2625ade5f9a8c6d973a3ad6294d60fe" translate="yes" xml:space="preserve">
          <source>Sends one or more transaction request(s) and waits for the reply.</source>
          <target state="translated">하나 이상의 트랜잭션 요청을 보내고 응답을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="5c434891a9dcf72b8a90e1acddd74c5bf598f8a5" translate="yes" xml:space="preserve">
          <source>Sends one or more transaction request(s) but does NOT wait for a reply</source>
          <target state="translated">하나 이상의 거래 요청을 보내지 만 응답을 기다리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b11eeadb5e331d1d238ecdcf3a96126cc536da7" translate="yes" xml:space="preserve">
          <source>Sends status replies to requests where the requester has stated that it wants a status report, that is, &lt;code&gt;WantReply = true&lt;/code&gt;. If &lt;code&gt;WantReply&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, calling this function becomes a &quot;noop&quot;. Is to be called while handling an SSH Connection Protocol message containing a &lt;code&gt;WantReply&lt;/code&gt; boolean value.</source>
          <target state="translated">요청자가 상태 보고서를 원한다고 말한 요청 (즉, &lt;code&gt;WantReply = true&lt;/code&gt; 상태 응답을 보냅니다 . 경우 &lt;code&gt;WantReply&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; ,이 함수를 호출하는 것은 &quot;무 조작&quot;가된다. &lt;code&gt;WantReply&lt;/code&gt; 부울 값이 포함 된 SSH 연결 프로토콜 메시지를 처리하는 동안 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="7d6e87f9e1af68d240068e5b70f509bf549f0633" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;Data&lt;/code&gt; message with all sending parameters from a &lt;code&gt;&lt;a href=&quot;#record-sctp_sndrcvinfo&quot;&gt;#sctp_sndrcvinfo{}&lt;/a&gt;&lt;/code&gt; record. This way, the user can specify the PPID (passed to the remote end) and context (passed to the local SCTP layer), which can be used, for example, for error identification. However, such a fine level of user control is rarely required. The function &lt;code&gt;send/4&lt;/code&gt; is sufficient for most applications.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#record-sctp_sndrcvinfo&quot;&gt;#sctp_sndrcvinfo{}&lt;/a&gt;&lt;/code&gt; 레코드 에서 모든 전송 매개 변수와 함께 &lt;code&gt;Data&lt;/code&gt; 메시지를 전송합니다 . 이런 방식으로 사용자는 PPID (원격 끝으로 전달) 및 컨텍스트 (로컬 SCTP 계층으로 전달)를 지정할 수 있으며, 예를 들어 오류 식별에 사용할 수 있습니다. 그러나 이러한 수준의 사용자 제어는 거의 필요하지 않습니다. &lt;code&gt;send/4&lt;/code&gt; 기능 은 대부분의 응용 프로그램에 충분합니다.</target>
        </trans-unit>
        <trans-unit id="ef0a1cfad9c6060907db674c021f5126aa8f4bda" translate="yes" xml:space="preserve">
          <source>Sends the data &amp;lt;data&amp;gt; on the connected/accepted socket (in &lt;code&gt;command&lt;/code&gt; mode). The sending is acknowledged when the data has left this process.</source>
          <target state="translated">연결 / 수락 된 소켓에서 &amp;lt;데이터&amp;gt; 데이터를 전송합니다 ( &lt;code&gt;command&lt;/code&gt; 모드). 데이터가이 프로세스를 종료하면 전송이 승인됩니다.</target>
        </trans-unit>
        <trans-unit id="02c82d5d06a980a6d12cde7f085cdd47e478d5a9" translate="yes" xml:space="preserve">
          <source>Sends the file &lt;code&gt;Filename&lt;/code&gt; to &lt;code&gt;Socket&lt;/code&gt;. Returns &lt;code&gt;{ok, BytesSent}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 파일 을 &lt;code&gt;Socket&lt;/code&gt; 에 보냅니다 . 반환 &lt;code&gt;{ok, BytesSent}&lt;/code&gt; 그렇지 않으면 성공하면, &lt;code&gt;{error, Reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f607b4f9fa0c564e7614ddcd801e8a5df876b95" translate="yes" xml:space="preserve">
          <source>Sends the notification &lt;code&gt;Notification&lt;/code&gt; to the management targets defined for &lt;code&gt;NotifyName&lt;/code&gt; in the &lt;code&gt;snmpNotifyTable&lt;/code&gt; in SNMP-NOTIFICATION-MIB from the specified context.</source>
          <target state="translated">지정된 컨텍스트에서 SNMP-NOTIFICATION-MIB의 &lt;code&gt;NotifyName&lt;/code&gt; 에있는 &lt;code&gt;snmpNotifyTable&lt;/code&gt; 에 대해 정의 된 관리 대상으로 알림 &lt;code&gt;Notification&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="66e982604e3980f741e949ec9010aa745b5914a9" translate="yes" xml:space="preserve">
          <source>Sends the value of &lt;code&gt;Expr2&lt;/code&gt; as a message to the process specified by &lt;code&gt;Expr1&lt;/code&gt;. The value of &lt;code&gt;Expr2&lt;/code&gt; is also the return value of the expression.</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; 에 지정된 프로세스 에 &lt;code&gt;Expr2&lt;/code&gt; 값을 메시지로 보냅니다 . &lt;code&gt;Expr2&lt;/code&gt; 의 값 은 또한 표현식의 리턴 값입니다.</target>
        </trans-unit>
        <trans-unit id="907e230655804593ab94674e107d67e8c1168666" translate="yes" xml:space="preserve">
          <source>Sent pending limit (see the MGOriginatedPendingLimit and the MGCOriginatedPendingLimit of the megaco root package). This parameter specifies how many pending messages that can be sent (for a given received transaction request). When the limit is exceeded, the transaction is aborted (see &lt;code&gt;&lt;a href=&quot;megaco_user#request_abort&quot;&gt;handle_trans_request_abort&lt;/a&gt;&lt;/code&gt;) and an error message is sent to the other side.</source>
          <target state="translated">전송 보류 제한 (megaco 루트 패키지의 MGOriginatedPendingLimit 및 MGCOriginatedPendingLimit 참조) 이 매개 변수는 (수신 된 트랜잭션 요청에 대해) 전송 될 수있는 보류중인 메시지 수를 지정합니다. 한계를 초과하면 트랜잭션이 중단되고 ( &lt;code&gt;&lt;a href=&quot;megaco_user#request_abort&quot;&gt;handle_trans_request_abort&lt;/a&gt;&lt;/code&gt; 참조 ) 오류 메시지가 다른쪽으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="1f176b543509f30039b1b53c658506d6b0190e5a" translate="yes" xml:space="preserve">
          <source>Sent when a log is truncated or reopened. For halt logs &lt;code&gt;NoLostItems&lt;/code&gt; is the number of items written on the log since the disk log process was created. For wrap logs &lt;code&gt;NoLostItems&lt;/code&gt; is the number of items on all wrap log files.</source>
          <target state="translated">로그가 잘 리거나 다시 열릴 때 전송됩니다. 중지 로그의 경우 &lt;code&gt;NoLostItems&lt;/code&gt; 는 디스크 로그 프로세스가 작성된 이후 로그에 기록 된 항목 수입니다. 랩 로그의 경우 &lt;code&gt;NoLostItems&lt;/code&gt; 는 모든 랩 로그 파일의 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="a33ce3fad1114de787998c2c35e494de50d28c5d" translate="yes" xml:space="preserve">
          <source>Sent when a wrap log has filled up one of its files and a new file is opened. &lt;code&gt;NoLostItems&lt;/code&gt; is the number of previously logged items that were lost when truncating existing files.</source>
          <target state="translated">랩 로그가 파일 중 하나를 채우고 새 파일이 열릴 때 전송됩니다. &lt;code&gt;NoLostItems&lt;/code&gt; 는 기존 파일을 자를 때 손실 된 이전에 기록 된 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="64ddb7835db34a3c62d27dc1a9e620d3bae1e499" translate="yes" xml:space="preserve">
          <source>Sent when a young garbage collection is about to be started. &lt;code&gt;Info&lt;/code&gt; is a list of two-element tuples, where the first element is a key, and the second is the value. Do not depend on any order of the tuples. The following keys are defined:</source>
          <target state="translated">어린 가비지 콜렉션이 시작 되려고 할 때 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 두 요소 튜플의 목록이며, 첫 번째 요소는 키이고 두 번째 요소는 값입니다. 튜플의 순서에 의존하지 마십시오. 다음 키가 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="13a5fcc86589571d6cba964d19b54d2f5e3dd445" translate="yes" xml:space="preserve">
          <source>Sent when an asynchronous log attempt is made to a blocked log that does not queue log attempts. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">로그 시도를 대기하지 않는 차단 된 로그에 비동기 로그 시도가있을 때 전송됩니다. &lt;code&gt;Items&lt;/code&gt; 은 로그 시도의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="72c5003b2fb4d153b50e578a5df32e00a38f408a" translate="yes" xml:space="preserve">
          <source>Sent when an asynchronous log attempt is made to a log file opened in read-only mode. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">읽기 전용 모드로 열린 로그 파일에 비동기 로그를 시도 할 때 전송됩니다. &lt;code&gt;Items&lt;/code&gt; 은 로그 시도의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="8a874181b27ada8edbf449b7e49664c9710599a9" translate="yes" xml:space="preserve">
          <source>Sent when an attempt to log items to a wrap log would write more bytes than the limit set by option &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">랩 로그에 항목을 기록하려고 시도 할 때 옵션 &lt;code&gt;size&lt;/code&gt; 로 설정된 한계보다 많은 바이트를 쓸 때 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="824eb071add20d7bf3036cfe85970417a0e22601" translate="yes" xml:space="preserve">
          <source>Sent when fullsweep garbage collection is about to be started. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;.</source>
          <target state="translated">전체 청소 가비지 수집을 시작하려고 할 때 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_minor_start&lt;/code&gt; 와 같은 종류의 목록을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="0da909a4b11e2c658bb803fd136f8378aaeb0a2a" translate="yes" xml:space="preserve">
          <source>Sent when fullsweep garbage collection is finished. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;, but the sizes reflect the new sizes after a fullsweep garbage collection.</source>
          <target state="translated">전체 청소 가비지 수집이 완료되면 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_minor_start&lt;/code&gt; 와 같은 종류의 목록을 포함 하지만 크기는 전체 스윕 가비지 수집 후 새로운 크기를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="a4ec09f770b521ff7e91cf7659a27a557c8ff324" translate="yes" xml:space="preserve">
          <source>Sent when function &lt;code&gt;alog/2&lt;/code&gt; or &lt;code&gt;alog_terms/2&lt;/code&gt; is used for internally formatted logs. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">함수 &lt;code&gt;alog/2&lt;/code&gt; 또는 &lt;code&gt;alog_terms/2&lt;/code&gt; 가 내부 형식화 된 로그에 사용될 때 전송됩니다 . &lt;code&gt;Items&lt;/code&gt; 은 로그 시도의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="17ac271e79f5c1c17bc5a6e418eb4882c5a60d51" translate="yes" xml:space="preserve">
          <source>Sent when the &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; max_heap_size&lt;/a&gt;&lt;/code&gt; is reached during garbage collection. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_start&lt;/code&gt;, but the sizes reflect the sizes that triggered &lt;code&gt;max_heap_size&lt;/code&gt; to be reached.</source>
          <target state="translated">가비지 콜렉션 중에 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; max_heap_size&lt;/a&gt;&lt;/code&gt; 에 도달 하면 전송됩니다 . &lt;code&gt;Info&lt;/code&gt; 에는 &lt;code&gt;gc_start&lt;/code&gt; 메시지와 동일한 종류의 목록이 포함되어 있지만 크기는 &lt;code&gt;max_heap_size&lt;/code&gt; 에 도달 하도록 트리거 한 크기를 반영합니다 .</target>
        </trans-unit>
        <trans-unit id="9411ea8fb8de0f74b5c5f1beee0451c15e6b0589" translate="yes" xml:space="preserve">
          <source>Sent when the &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;max_heap_size&lt;/a&gt;&lt;/code&gt; is reached during garbage collection. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_start&lt;/code&gt;, but the sizes reflect the sizes that triggered &lt;code&gt;max_heap_size&lt;/code&gt; to be reached.</source>
          <target state="translated">가비지 수집 중에 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;max_heap_size&lt;/a&gt;&lt;/code&gt; 에 도달 하면 전송됩니다 . &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_start&lt;/code&gt; 와 같은 종류의 목록을 포함 하지만 크기는 &lt;code&gt;max_heap_size&lt;/code&gt; 에 도달 하도록 트리거 한 크기를 반영합니다 .</target>
        </trans-unit>
        <trans-unit id="e6b9f3855413ffa56c28f28f6ca8eb4677876689" translate="yes" xml:space="preserve">
          <source>Sent when the error status changes. The error status is defined by the outcome of the last attempt to log items to the log, or to truncate the log, or the last use of function &lt;code&gt;sync/1&lt;/code&gt;, &lt;code&gt;inc_wrap_file/1&lt;/code&gt;, or &lt;code&gt;change_size/2&lt;/code&gt;. &lt;code&gt;Status&lt;/code&gt; is either &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{error, Error}&lt;/code&gt;, the former is the initial value.</source>
          <target state="translated">오류 상태가 변경되면 전송됩니다. 오류 상태는 항목을 로그에 기록하거나 로그를 자르거나 마지막으로 &lt;code&gt;sync/1&lt;/code&gt; , &lt;code&gt;inc_wrap_file/1&lt;/code&gt; 또는 &lt;code&gt;change_size/2&lt;/code&gt; 함수를 사용하려고 시도한 결과로 정의됩니다 . &lt;code&gt;Status&lt;/code&gt; 는 &lt;code&gt;ok&lt;/code&gt; 또는 &lt;code&gt;{error, Error}&lt;/code&gt; 이며 전자는 초기 값입니다.</target>
        </trans-unit>
        <trans-unit id="1ce7595aa8c96ab9168ee2c2fbdaad2c701fd3b8" translate="yes" xml:space="preserve">
          <source>Sent when young garbage collection is finished. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;, but the sizes reflect the new sizes after garbage collection.</source>
          <target state="translated">어린 가비지 수집이 완료되면 전송됩니다. &lt;code&gt;Info&lt;/code&gt; 는 메시지 &lt;code&gt;gc_minor_start&lt;/code&gt; 와 같은 종류의 목록을 포함 하지만 크기는 가비지 수집 후 새로운 크기를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="5b6f13cb83c8306b0c9e46de691662aea75507ed" translate="yes" xml:space="preserve">
          <source>Separates two documents by either a single space, or a line break and intentation. In other words, one of the layouts</source>
          <target state="translated">두 문서를 단일 공백 ​​또는 줄 바꿈 및 의도로 구분합니다. 즉, 레이아웃 중 하나</target>
        </trans-unit>
        <trans-unit id="b4b289a7b76be83adf9d38e7a3ee28190349bff2" translate="yes" xml:space="preserve">
          <source>Separator</source>
          <target state="translated">Separator</target>
        </trans-unit>
        <trans-unit id="799fa8ef2a7a0b5c9995dccfc8fc9b1a47c65034" translate="yes" xml:space="preserve">
          <source>SeparatorList :: [&lt;code&gt;&lt;a href=&quot;#type-grapheme_cluster&quot;&gt;grapheme_cluster()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">구분자 목록 :: [ &lt;code&gt;&lt;a href=&quot;#type-grapheme_cluster&quot;&gt;grapheme_cluster()&lt;/a&gt;&lt;/code&gt; ])-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="78ad79ed72c72b1fc342f57808f8e1b8c61026fc" translate="yes" xml:space="preserve">
          <source>Sequential tracing between nodes is performed transparently. This applies to C-nodes built with &lt;code&gt;Erl_Interface&lt;/code&gt; too. A C-node built with &lt;code&gt;Erl_Interface&lt;/code&gt; only maintains one trace token, which means that the C-node appears as one process from the sequential tracing point of view.</source>
          <target state="translated">노드 간 순차 추적은 투명하게 수행됩니다. 이것은 &lt;code&gt;Erl_Interface&lt;/code&gt; 로 빌드 된 C 노드에도 적용됩니다 . &lt;code&gt;Erl_Interface&lt;/code&gt; 로 빌드 된 C 노드 는 하나의 추적 토큰 만 유지하므로 C 노드는 순차적 추적 관점에서 하나의 프로세스로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="46a89c8f3b87cbc1073fbf9ffe1ab457bad8531f" translate="yes" xml:space="preserve">
          <source>Sequential tracing is a way to trace a sequence of information transfers between different local or remote processes, where the sequence is initiated by a single transfer. The typical information transfer is an ordinary Erlang message passed between two processes, but information is transferred also in other ways. In short, it works as follows:</source>
          <target state="translated">순차 추적은 단일 전송으로 시퀀스가 ​​시작되는 서로 다른 로컬 또는 원격 프로세스 간의 정보 전송 시퀀스를 추적하는 방법입니다. 일반적인 정보 전송은 두 프로세스간에 전달되는 일반적인 Erlang 메시지이지만 정보는 다른 방식으로도 전송됩니다. 간단히 말해서 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="67674db1221be14a488e3b7f6dea2118795c01a2" translate="yes" xml:space="preserve">
          <source>Sequential tracing is a way to trace a sequence of messages sent between different local or remote processes, where the sequence is initiated by a single message. In short, it works as follows:</source>
          <target state="translated">순차 추적은 서로 다른 로컬 또는 원격 프로세스간에 전송되는 일련의 메시지를 추적하는 방법으로, 단일 메시지로 시퀀스가 ​​시작됩니다. 간단히 말해 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b39a3365fc30062e1068f6656700d4efb42fc644" translate="yes" xml:space="preserve">
          <source>Sequential tracing is not performed across ports.</source>
          <target state="translated">순차적 추적은 포트에서 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ce9ef8c4d6e02924137b5130dba040bdf86df6b" translate="yes" xml:space="preserve">
          <source>Sequential tracing makes it possible to trace all messages resulting from one initial message. Sequential tracing is independent of the ordinary tracing in Erlang, which is controlled by the &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF. For more information about what sequential tracing is and how it can be used, see section &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">순차적 추적을 사용하면 하나의 초기 메시지에서 발생하는 모든 메시지를 추적 할 수 있습니다. 순차 추적은 Erlang &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF에 의해 제어되는 Erlang의 일반 추적과 무관합니다 . 순차적 인 추적을하고 그 사용 방법에 대한 자세한 내용은 섹션을 참조 &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48ecef15522768577266326d0a461f78e82af76f" translate="yes" xml:space="preserve">
          <source>Sequential tracing makes it possible to trace information flows between processes resulting from one initial transfer of information. Sequential tracing is independent of the ordinary tracing in Erlang, which is controlled by the &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF. For more information about what sequential tracing is and how it can be used, see section &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">순차 추적을 사용하면 한 번의 초기 정보 전송으로 인한 프로세스 간의 정보 흐름을 추적 할 수 있습니다. 순차 추적은 &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF에 의해 제어되는 Erlang의 일반 추적과는 독립적입니다 . 순차적 인 추적을하고 그 사용 방법에 대한 자세한 내용은 섹션을 참조 &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d33f9eca6a2fdfbea8cbb835613d1765f28fcd72" translate="yes" xml:space="preserve">
          <source>Sequential tracing of information transfers.</source>
          <target state="translated">정보 전송의 순차적 추적.</target>
        </trans-unit>
        <trans-unit id="f08e204d675fb02cb9c92420ea2ac07088bb7955" translate="yes" xml:space="preserve">
          <source>Sequential tracing of messages.</source>
          <target state="translated">메시지의 순차적 추적</target>
        </trans-unit>
        <trans-unit id="887d14189b02ef3efe48b0dd7ea45040d5fdd376" translate="yes" xml:space="preserve">
          <source>Sequential tracing. The sequential trace token is propagated as usual, but no sequential trace messages are generated.</source>
          <target state="translated">순차적 추적. 순차 추적 토큰은 평소와 같이 전파되지만 순차 추적 메시지는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83f8c31a333d64148e70eba194553a6e0c2f9907" translate="yes" xml:space="preserve">
          <source>Serial</source>
          <target state="translated">Serial</target>
        </trans-unit>
        <trans-unit id="cf3a1d3f348f6e54ac99c355d7e8d7a99531227d" translate="yes" xml:space="preserve">
          <source>Server :: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid(),</source>
          <target state="translated">서버 :: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid (),</target>
        </trans-unit>
        <trans-unit id="947a6b42e35e6379a3a871ac25a5cc35eea47ac4" translate="yes" xml:space="preserve">
          <source>Server Directed Model</source>
          <target state="translated">서버 지향 모델</target>
        </trans-unit>
        <trans-unit id="4088e54dc4e611bb45e3968736ee0b02ab8ec32f" translate="yes" xml:space="preserve">
          <source>Server Name Indication</source>
          <target state="translated">서버 이름 표시</target>
        </trans-unit>
        <trans-unit id="5fe47b0a641720e6d3506a1b8c3fa57c4b588d5e" translate="yes" xml:space="preserve">
          <source>Server host key</source>
          <target state="translated">서버 호스트 키</target>
        </trans-unit>
        <trans-unit id="a7318b76018cff441c5791590e6c5344ff5bc39a" translate="yes" xml:space="preserve">
          <source>Server specification to use when addressing a &lt;code&gt;gen_statem&lt;/code&gt; server. See &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; 서버를 지정할 때 사용할 서버 사양 . 위의 &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ea8b115537d60c0612335af6a2297305218af54" translate="yes" xml:space="preserve">
          <source>Server start happens either when &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; returns or when &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; is called. Code change happens when &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; returns.</source>
          <target state="translated">서버 시작은 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; 이 리턴되거나 &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; 이 호출 될 때 발생합니다 . 코드 변경은 &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; 가 반환 될 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="34696cd123aa488d5c0c0ff57d9e92ebef037319" translate="yes" xml:space="preserve">
          <source>Server start happens either when &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; returns or when &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; is called. Code change happens when &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; returns. A change of the callback module happens when a &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; returns any of the actions &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;change_callback_module&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;push_callback_module&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;pop_callback_module&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">서버 시작은 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; 이 반환되거나 &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; 이 호출 될 때 발생합니다 . &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; 가 반환 될 때 코드 변경이 발생 합니다. 콜백 모듈의 변경은 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;change_callback_module&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;push_callback_module&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;pop_callback_module&lt;/a&gt;&lt;/code&gt; 작업 중 하나를 반환 할 때 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="8e8e2636f54dfc7cabd3623ccbd882479778dea9" translate="yes" xml:space="preserve">
          <source>Server-Initiated Re-Auth</source>
          <target state="translated">서버 시작 재 인증</target>
        </trans-unit>
        <trans-unit id="e82fbe1fe2cd50ba3acc1673f098d550a5d21fc1" translate="yes" xml:space="preserve">
          <source>Server_or_Actions :: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid() | [&lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">Server_or_Actions :: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid () | [ &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; ])-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2b5206f4124f60fdd9a2690b8553f9a39ef96857" translate="yes" xml:space="preserve">
          <source>Servers port number.</source>
          <target state="translated">서버 포트 번호</target>
        </trans-unit>
        <trans-unit id="edc08bd865f52ee5ced6ffaf01854d93b1e04a57" translate="yes" xml:space="preserve">
          <source>Service Pack 4 or later must be installed.</source>
          <target state="translated">서비스 팩 4 이상이 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5397f6342a9bc113dc40386582fe49f64c070de6" translate="yes" xml:space="preserve">
          <source>Service options:</source>
          <target state="translated">서비스 옵션 :</target>
        </trans-unit>
        <trans-unit id="157383d93308c0e9d76a43e40db97f98bfd6756d" translate="yes" xml:space="preserve">
          <source>Services started as &lt;code&gt;stand_alone&lt;/code&gt; are not listed.</source>
          <target state="translated">&lt;code&gt;stand_alone&lt;/code&gt; 으로 시작된 서비스는 나열되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fac29b321611cba90b0d60f830609e67913f5c89" translate="yes" xml:space="preserve">
          <source>Services to be configured for startup at application startup are to be put into the Erlang node configuration file on the following form:</source>
          <target state="translated">응용 프로그램 시작시 시작되도록 구성 할 서비스는 다음 형식으로 Erlang 노드 구성 파일에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="4b80725e2cdf98d03e3544d8e834835b10673511" translate="yes" xml:space="preserve">
          <source>Session Termination</source>
          <target state="translated">세션 종료</target>
        </trans-unit>
        <trans-unit id="2189dd0e9404a2caed342278528b49ca88aef0f4" translate="yes" xml:space="preserve">
          <source>Session data is by default kept by the SSL application in a memory storage, hence session data is lost at application restart or takeover. Users can define their own callback module to handle session data storage if persistent data storage is required. Session data is also invalidated after 24 hours from it was saved, for security reasons. The amount of time the session data is to be saved can be configured.</source>
          <target state="translated">세션 데이터는 기본적으로 메모리 스토리지의 SSL 애플리케이션에 의해 유지되므로 애플리케이션을 다시 시작하거나 인계 할 때 세션 데이터가 유실됩니다. 영구 데이터 스토리지가 필요한 경우 사용자는 자신의 콜백 모듈을 정의하여 세션 데이터 스토리지를 처리 ​​할 수 ​​있습니다. 보안상의 이유로 세션 데이터는 저장 후 24 시간이 지나면 무효화됩니다. 세션 데이터를 저장할 시간을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="717b69cbfec0112048201130fc68c6fe0a095716" translate="yes" xml:space="preserve">
          <source>Session data is by default kept by the SSL application in a memory storage, hence session data is lost at application restart or takeover. Users can define their own callback module to handle session data storage if persistent data storage is required. Session data is also invalidated when session database exceeds its limit or 24 hours after being saved (RFC max lifetime recommendation). The amount of time the session data is to be saved can be configured.</source>
          <target state="translated">세션 데이터는 기본적으로 SSL 응용 프로그램이 메모리 저장소에 보관하므로 응용 프로그램을 다시 시작하거나 인수 할 때 세션 데이터가 손실됩니다. 사용자는 영구 데이터 저장이 필요한 경우 세션 데이터 저장을 처리하기 위해 자체 콜백 모듈을 정의 할 수 있습니다. 세션 데이터베이스가 제한을 초과하거나 저장 후 24 시간이 지나면 세션 데이터도 무효화됩니다 (RFC 최대 수명 권장 사항). 세션 데이터가 저장되는 시간을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a44c233f663706896d30f9765750b2547461a634" translate="yes" xml:space="preserve">
          <source>Session state is the responsibility of the user.</source>
          <target state="translated">세션 상태는 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="6455e5ce6aca50c825c6b4db75096ece0dfd1c53" translate="yes" xml:space="preserve">
          <source>Session tickets are only sent to user if option &lt;strong&gt;session_tickets&lt;/strong&gt; is set to &lt;code&gt;manual&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;session_tickets&lt;/strong&gt; 옵션 이 &lt;code&gt;manual&lt;/code&gt; 으로 설정된 경우에만 세션 티켓이 사용자에게 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="cebc049d5c17444aa46a6658e1f24a7d52fbde42" translate="yes" xml:space="preserve">
          <source>Session tickets are protected by application traffic keys, and in stateless tickets, the opaque data structure itself is self-encrypted.</source>
          <target state="translated">세션 티켓은 애플리케이션 트래픽 키로 보호되며 상태 비 저장 티켓에서는 불투명 한 데이터 구조 자체가 자체 암호화됩니다.</target>
        </trans-unit>
        <trans-unit id="f80b4368d7fc0e4ad412af8c18d1c09547daa8ef" translate="yes" xml:space="preserve">
          <source>Session tickets are sent by servers on newly estalished TLS connections. The number of tickets sent and their lifetime are configurable by application variables. See also &lt;code&gt; SSL's configuration&lt;/code&gt;.</source>
          <target state="translated">세션 티켓은 새로 설정된 TLS 연결의 서버에서 전송됩니다. 전송 된 티켓 수와 수명은 응용 프로그램 변수로 구성 할 수 있습니다. &lt;code&gt; SSL's configuration&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3261aa50156b1282e661f0f64bba6833eafe648b" translate="yes" xml:space="preserve">
          <source>Session tickets can be stateful or stateless. A stateful session ticket is a database reference (session ticket store) and used with stateful servers, while a stateless ticket is a self-encrypted and self-authenticated data structure with cryptographic keying material and state data, enabling session resumption with stateless servers.</source>
          <target state="translated">세션 티켓은 상태 저장 또는 상태 비 저장 일 수 있습니다. 상태 저장 세션 티켓은 데이터베이스 참조 (세션 티켓 저장소)이며 상태 저장 서버와 함께 사용되는 반면, 상태 저장 티켓은 암호화 키 자료 및 상태 데이터가있는 자체 암호화 및 자체 인증 데이터 구조로, 상태 저장 서버에서 세션을 재개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a09b63aa8aef12610e5097f5dcbecb6ec0b6397" translate="yes" xml:space="preserve">
          <source>Session-Binding AVP</source>
          <target state="translated">세션 바인딩 AVP</target>
        </trans-unit>
        <trans-unit id="6d5b951f326d46a73f615ecb89203802d45c7d34" translate="yes" xml:space="preserve">
          <source>Session-Binding AVP Values</source>
          <target state="translated">세션 바인딩 AVP 값</target>
        </trans-unit>
        <trans-unit id="76db6dd6136e7be7b5da291aa7c562b11f178550" translate="yes" xml:space="preserve">
          <source>Session-Id AVP</source>
          <target state="translated">세션 ID AVP</target>
        </trans-unit>
        <trans-unit id="d2ca0ce02888b561d968cd54e3873df3a762e039" translate="yes" xml:space="preserve">
          <source>Session-Server-Failover AVP</source>
          <target state="translated">세션 서버 장애 조치 AVP</target>
        </trans-unit>
        <trans-unit id="f91c41d0abfc87527176ac558dba342c0c601933" translate="yes" xml:space="preserve">
          <source>Session-Server-Failover AVP Values</source>
          <target state="translated">세션 서버 장애 조치 AVP 값</target>
        </trans-unit>
        <trans-unit id="01b80be07c4be1b4c9104178d53867c1782237c3" translate="yes" xml:space="preserve">
          <source>Session-Termination-Answer</source>
          <target state="translated">Session-Termination-Answer</target>
        </trans-unit>
        <trans-unit id="74c5a3349930ea180e9bd3a286a7f55ec0def5f8" translate="yes" xml:space="preserve">
          <source>Session-Termination-Request</source>
          <target state="translated">Session-Termination-Request</target>
        </trans-unit>
        <trans-unit id="bea31b7972c1044f4e21c4ecd2c6baeb0c1dd29c" translate="yes" xml:space="preserve">
          <source>Session-Timeout AVP</source>
          <target state="translated">세션 시간 초과 AVP</target>
        </trans-unit>
        <trans-unit id="65554231afb0cf98bd9fcd70eaca9a432abba10e" translate="yes" xml:space="preserve">
          <source>Session-related messages and AVPs are defined in provided dictionaries. Their proper use is the user's responsibility.</source>
          <target state="translated">세션 관련 메시지 및 AVP는 제공된 사전에 정의되어 있습니다. 올바른 사용은 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="8ee903ecf91ea851dcf9b23255683d465f969e4b" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ERL_TOP&lt;/code&gt; to where you unpacked the source distribution</source>
          <target state="translated">소스 배포의 압축을 푼 위치로 &lt;code&gt;ERL_TOP&lt;/code&gt; 을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f4cdff9c23032ddcb6335b343ed2c5050c34846b" translate="yes" xml:space="preserve">
          <source>Set A is &lt;strong id=&quot;equal&quot;&gt;equal&lt;/strong&gt; to set B if they contain the same elements, which is denoted A = B. Two ordered sets are equal if they contain the same number of elements and have equal elements at each coordinate.</source>
          <target state="translated">세트 A는 &lt;strong id=&quot;equal&quot;&gt;동일&lt;/strong&gt; 들은 A = B. 두들이 같은 수의 요소를 포함하고, 각 좌표에서 동일한 요소를 가질 경우, 세트가 동일한 순서로 표시되는 동일한 요소를 포함하는 경우에 설정 B.</target>
        </trans-unit>
        <trans-unit id="19215245cb9fd1a4e8ffc186a287650d6b65cbcd" translate="yes" xml:space="preserve">
          <source>Set B is a &lt;strong id=&quot;subset&quot;&gt;subset&lt;/strong&gt; of set A if A contains all elements that B contains.</source>
          <target state="translated">A에 B에 포함 된 모든 요소가 포함 된 경우 집합 B는 집합 A 의 &lt;strong id=&quot;subset&quot;&gt;하위 집합&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e9257d4053325a45b96b37e49d5ef31548019ece" translate="yes" xml:space="preserve">
          <source>Set Operation</source>
          <target state="translated">작업 설정</target>
        </trans-unit>
        <trans-unit id="3c977a7d012429b4882cd8fd42de15ac59fe5b5b" translate="yes" xml:space="preserve">
          <source>Set a &lt;code&gt;Trace Pattern&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Trace Pattern&lt;/code&gt; 설정</target>
        </trans-unit>
        <trans-unit id="4583a6360c8b4779fda288e6b176634adebb983e" translate="yes" xml:space="preserve">
          <source>Set a process as heir. The heir inherits the table if the owner terminates. Message &lt;code&gt;{'ETS-TRANSFER',tid(),FromPid,HeirData}&lt;/code&gt; is sent to the heir when that occurs. The heir must be a local process. Default heir is &lt;code&gt;none&lt;/code&gt;, which destroys the table when the owner terminates.</source>
          <target state="translated">프로세스를 상속자로 설정하십시오. 소유자가 종료되면 상속인이 테이블을 상속합니다. 메시지 &lt;code&gt;{'ETS-TRANSFER',tid(),FromPid,HeirData}&lt;/code&gt; 그것이 발생하면 후계자로 전송된다. 상속인은 현지 프로세스 여야합니다. 기본 상속인은 &lt;code&gt;none&lt;/code&gt; 으로 , 소유자가 종료되면 테이블이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="8ef928b043a7a5a938f7df2dbafc0cf65f7d6ac5" translate="yes" xml:space="preserve">
          <source>Set a user specified tag that will be present in the trace messages of both the &lt;code&gt;efile_drv&lt;/code&gt; and the user-probe mentioned above.</source>
          <target state="translated">&lt;code&gt;efile_drv&lt;/code&gt; 및 위에서 언급 한 사용자 프로브 의 추적 메시지에 표시 될 사용자 지정 태그를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7a6b177b9d5a4df54ae46f1889aa42bf32ec061" translate="yes" xml:space="preserve">
          <source>Set an option on a socket.</source>
          <target state="translated">소켓에 대한 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fca740d8839ff1180f428e14ec18e071dc0b41b0" translate="yes" xml:space="preserve">
          <source>Set atomic to &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">원 자성을 &lt;code&gt;Value&lt;/code&gt; 로 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="5193d4f565dfa3ff18d9dc4a6925c9ce696b7d15" translate="yes" xml:space="preserve">
          <source>Set call count breakpoints on the matching functions that has no call count breakpoints. Call counters are set to zero and running for all matching functions.</source>
          <target state="translated">호출 횟수 중단 점이없는 일치하는 함수에서 호출 횟수 중단 점을 설정하십시오. 콜 카운터는 0으로 설정되고 모든 일치하는 기능에 대해 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1cafdd1b97a4b90af210a34981f512d8480b991c" translate="yes" xml:space="preserve">
          <source>Set carrier pool to use for the allocator. Memory carriers will only migrate between allocator instances that use the same carrier pool. The following carrier pool names exist:</source>
          <target state="translated">할당 자에 사용할 캐리어 풀을 설정합니다. 메모리 캐리어는 동일한 캐리어 풀을 사용하는 할당 자 인스턴스간에 만 마이그레이션됩니다. 다음 캐리어 풀 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="139559d2dc59c6cbd9c41d9f3aad0e5ddcc64e1b" translate="yes" xml:space="preserve">
          <source>Set configuration data for the Logger proxy. This overwrites the current proxy configuration. Keys that are not specified in the &lt;code&gt;Config&lt;/code&gt; map gets default values.</source>
          <target state="translated">Logger 프록시에 대한 구성 데이터를 설정합니다. 현재 프록시 구성을 덮어 씁니다. &lt;code&gt;Config&lt;/code&gt; 맵에 지정되지 않은 키 는 기본값을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="c206e40d4815924e1a53503d6048d57f14c73244" translate="yes" xml:space="preserve">
          <source>Set configuration data for the specified handler. This overwrites the current handler configuration.</source>
          <target state="translated">지정된 핸들러에 대한 구성 데이터를 설정하십시오. 현재 처리기 구성을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="fbd47d4fce652ab713e8b7a98d636d1b5c75dd28" translate="yes" xml:space="preserve">
          <source>Set default character set used (default UTF-8). This character set is used only if not explicitly given by the XML declaration.</source>
          <target state="translated">사용 된 기본 문자 세트를 설정하십시오 (기본 UTF-8). 이 문자 세트는 XML 선언에서 명시 적으로 제공하지 않은 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="baebae1f9fc0f15dbe8dc93f5929e2d2010ab5c6" translate="yes" xml:space="preserve">
          <source>Set default character set used (default UTF-8). This character set is used only if not explicitly given by the XML document.</source>
          <target state="translated">사용 된 기본 문자 세트를 설정하십시오 (기본 UTF-8). 이 문자 세트는 XML 문서에서 명시 적으로 제공하지 않은 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4a3e6a4c11b886b8824a5e7b68d05fef80e861ce" translate="yes" xml:space="preserve">
          <source>Set domain name.</source>
          <target state="translated">도메인 이름을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6a03c3e67eba8831929ee4d03c547cef34f82cc3" translate="yes" xml:space="preserve">
          <source>Set group id on execution</source>
          <target state="translated">실행시 그룹 ID 설정</target>
        </trans-unit>
        <trans-unit id="a43ef2be073c4212dbed0aea6fd234494f19d7a6" translate="yes" xml:space="preserve">
          <source>Set how often (in milliseconds) the resolver cache for &lt;code&gt;inet_res(3)&lt;/code&gt; is refreshed (that is, expired DNS records are deleted). Defaults to 1 hour.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; )의 리졸버 캐시를 새로 고치는 빈도 (밀리 초) (즉, 만료 된 DNS 레코드가 삭제됨)를 설정하십시오. 기본값은 1 시간입니다.</target>
        </trans-unit>
        <trans-unit id="aab4471587cac7b6356c8f95deb918d9452c2016" translate="yes" xml:space="preserve">
          <source>Set if the &lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST&quot;&gt;SPAWN_REQUEST&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST_TT&quot;&gt;SPAWN_REQUEST_TT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY&quot;&gt;SPAWN_REPLY&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY_TT&quot;&gt;SPAWN_REPLY_TT&lt;/a&gt;&lt;/code&gt; control messages are supported.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST&quot;&gt;SPAWN_REQUEST&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST_TT&quot;&gt;SPAWN_REQUEST_TT&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY&quot;&gt;SPAWN_REPLY&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY_TT&quot;&gt;SPAWN_REPLY_TT&lt;/a&gt;&lt;/code&gt; 제어 메시지가 지원되는 경우 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="b11208dde369a91b8db91c4eecdb2a252788928f" translate="yes" xml:space="preserve">
          <source>Set metadata which Logger shall automatically insert in all log events produced on the current process.</source>
          <target state="translated">Logger가 현재 프로세스에서 생성 된 모든 로그 이벤트에 자동으로 삽입 할 메타 데이터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0c14eb8947d1e24438a3eac4d7df936565933ad4" translate="yes" xml:space="preserve">
          <source>Set namespace nodes in xmlContext.</source>
          <target state="translated">xmlContext에서 네임 스페이스 노드를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c6d6929fb4197046544b86579372effd2f9fdb0d" translate="yes" xml:space="preserve">
          <source>Set namespace nodes, from XmlNamspace, in xmlContext</source>
          <target state="translated">XmlNamspace에서 xmlContext로 네임 스페이스 노드 설정</target>
        </trans-unit>
        <trans-unit id="755833965a565c58dbf1c617acd710f1c28c172b" translate="yes" xml:space="preserve">
          <source>Set next state and update the server data. If the &lt;code&gt;Actions&lt;/code&gt; field is used, execute &lt;strong&gt;transition actions&lt;/strong&gt;. An empty &lt;code&gt;Actions&lt;/code&gt; list is equivalent to not returning the field.</source>
          <target state="translated">다음 상태를 설정하고 서버 데이터를 업데이트합니다. 경우 &lt;code&gt;Actions&lt;/code&gt; 필드가 사용되며, 실행 &lt;strong&gt;전환 작업을&lt;/strong&gt; . 빈 &lt;code&gt;Actions&lt;/code&gt; 목록은 필드를 반환하지 않는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eb924690fa3d68e56455acfeb0d6fd826110f164" translate="yes" xml:space="preserve">
          <source>Set next state and update the server data. If the &lt;code&gt;Actions&lt;/code&gt; field is used, execute state transition actions. An empty &lt;code&gt;Actions&lt;/code&gt; list is equivalent to not returning the field.</source>
          <target state="translated">다음 상태를 설정하고 서버 데이터를 업데이트하십시오. 경우 &lt;code&gt;Actions&lt;/code&gt; 필드가 사용되며, 상태 전이 작업을 실행합니다. 빈 &lt;code&gt;Actions&lt;/code&gt; 목록은 필드를 반환하지 않는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ea728b8b4cd9259e1b16d138a022dafb98890ab9" translate="yes" xml:space="preserve">
          <source>Set not allowed on all platforms.</source>
          <target state="translated">모든 플랫폼에서 허용되지 않는 설정입니다.</target>
        </trans-unit>
        <trans-unit id="2d5717080ccba3110b1e93c082220f5cdc31e7b6" translate="yes" xml:space="preserve">
          <source>Set one or more options for distribution sockets. Argument &lt;code&gt;Node&lt;/code&gt; can be either one node name or the atom &lt;code&gt;new&lt;/code&gt; to affect the distribution sockets of all future connected nodes.</source>
          <target state="translated">분배 소켓에 대한 하나 이상의 옵션을 설정하십시오. 인수 &lt;code&gt;Node&lt;/code&gt; 는 하나의 노드 이름이거나 &lt;code&gt;new&lt;/code&gt; 연결되어 향후 모든 연결된 노드의 분배 소켓에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="8cc7b027f5a2252a98b992a5c8c7b2bb7c817f4a" translate="yes" xml:space="preserve">
          <source>Set options for the standard I/O device (&lt;code&gt;IoDevice&lt;/code&gt;).</source>
          <target state="translated">표준 I / O 장치 ( &lt;code&gt;IoDevice&lt;/code&gt; )에 대한 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf47b1d493820f3cd014f5d017683359abec4814" translate="yes" xml:space="preserve">
          <source>Set options on a socket.</source>
          <target state="translated">소켓에 대한 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="72213ee26b861ef8b91cdf7c410ea5ee9c5dadc3" translate="yes" xml:space="preserve">
          <source>Set or update metadata to use when logging from current process</source>
          <target state="translated">현재 프로세스에서 로깅 할 때 사용할 메타 데이터 설정 또는 업데이트</target>
        </trans-unit>
        <trans-unit id="ef64726061cb76ad432c186d4f382a9be21eb83d" translate="yes" xml:space="preserve">
          <source>Set primary configuration data for Logger. This overwrites the current configuration.</source>
          <target state="translated">로거에 대한 기본 구성 데이터를 설정하십시오. 현재 구성을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="cf3dcf47b54fea34ce93c2d32bf22b640191e01a" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;fips_mode&lt;/code&gt; configuration setting of the crypto application to &lt;code&gt;true&lt;/code&gt;&lt;strong&gt;before loading the crypto module&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;암호화 모듈을로드하기 전에&lt;/strong&gt; 암호화 응용 프로그램 의 &lt;code&gt;fips_mode&lt;/code&gt; 구성 설정을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b55d6a29e9fb5d686b0e320238784e96147a41ab" translate="yes" xml:space="preserve">
          <source>Set the appropriate flags value for the dirty NIF in its &lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt; ErlNifFunc&lt;/a&gt;&lt;/code&gt; entry.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt; ErlNifFunc&lt;/a&gt;&lt;/code&gt; 항목 에서 더티 NIF에 대한 적절한 플래그 값을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f63971e4cdc0fb0e823b787c37999e857dc6498" translate="yes" xml:space="preserve">
          <source>Set the appropriate flags value for the dirty NIF in its &lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt;ErlNifFunc&lt;/a&gt;&lt;/code&gt; entry.</source>
          <target state="translated">더티 NIF의 해당 플래그 값을 &lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt;ErlNifFunc&lt;/a&gt;&lt;/code&gt; 항목에 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="094a9868d56dc50d00ad47de9adb55f55e047155" translate="yes" xml:space="preserve">
          <source>Set the environment &lt;code&gt;ERL_TOP&lt;/code&gt; to point to the root directory of the source distribution. Let's say I stood in &lt;code&gt;$HOME/src&lt;/code&gt; and unpacked &lt;code&gt;otp_src_21.tar.gz&lt;/code&gt;, I then add the following to &lt;code&gt;.profile&lt;/code&gt;:</source>
          <target state="translated">소스 배포의 루트 디렉토리를 가리 키도록 &lt;code&gt;ERL_TOP&lt;/code&gt; 환경을 설정하십시오 . &lt;code&gt;$HOME/src&lt;/code&gt; 와 unpacked &lt;code&gt;otp_src_21.tar.gz&lt;/code&gt; 에 서서 다음을 &lt;code&gt;.profile&lt;/code&gt; 에 추가 한다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="634529c19d88ec790dbd299ccd82fd28e8b83d7e" translate="yes" xml:space="preserve">
          <source>Set the environment &lt;code&gt;ERL_TOP&lt;/code&gt; to point to the root directory of the source distribution. Let's say I stood in &lt;code&gt;/mnt/c/src&lt;/code&gt; and unpacked &lt;code&gt;otp_src_23.tar.gz&lt;/code&gt;, I then add the following to &lt;code&gt;.profile&lt;/code&gt;:</source>
          <target state="translated">소스 배포의 루트 디렉터리를 가리 키도록 &lt;code&gt;ERL_TOP&lt;/code&gt; 환경을 설정합니다 . 내가 &lt;code&gt;/mnt/c/src&lt;/code&gt; 에 서서 &lt;code&gt;otp_src_23.tar.gz&lt;/code&gt; 의 압축을 푼 다음 &lt;code&gt;.profile&lt;/code&gt; 에 다음을 추가 한다고 가정 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="f03c76b694103efe22ab155d9d756cf6a1a3c8cf" translate="yes" xml:space="preserve">
          <source>Set the log level for all the modules of the specified application.</source>
          <target state="translated">지정된 응용 프로그램의 모든 모듈에 대한 로그 수준을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5f1b46d28e8f7ffadae8dfc27bb9023505b34bd8" translate="yes" xml:space="preserve">
          <source>Set the log level for the specified modules.</source>
          <target state="translated">지정된 모듈의 로그 레벨을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="1590b68234453973543219bb52f90ccf04143339" translate="yes" xml:space="preserve">
          <source>Set the macro &lt;code&gt;'MOD_eqc'&lt;/code&gt; to the correct module name for the selected tool. That is, the macro &lt;code&gt;'MOD_eqc'&lt;/code&gt; is set to either &lt;code&gt;eqc&lt;/code&gt;, &lt;code&gt;proper&lt;/code&gt; or &lt;code&gt;triq&lt;/code&gt;.</source>
          <target state="translated">매크로 &lt;code&gt;'MOD_eqc'&lt;/code&gt; 를 선택한 도구에 대한 올바른 모듈 이름으로 설정하십시오. 즉, &lt;code&gt;'MOD_eqc'&lt;/code&gt; 매크로 는 &lt;code&gt;eqc&lt;/code&gt; , &lt;code&gt;proper&lt;/code&gt; 또는 &lt;code&gt;triq&lt;/code&gt; 로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="7515e95df724fe9b5d68c6f4b74d9995d8b11c01" translate="yes" xml:space="preserve">
          <source>Set the number of DNS queries &lt;code&gt;inet_res(3)&lt;/code&gt; will try before giving up. Defaults to 3.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; 가 포기하기 전에 시도 할 DNS 쿼리 수를 설정하십시오 . 기본값은 3입니다.</target>
        </trans-unit>
        <trans-unit id="164faa04e1b0ae48ff64261f3a879cb2f355ae26" translate="yes" xml:space="preserve">
          <source>Set the protocol version in the megaco_receive_handle to &lt;code&gt;dynamic&lt;/code&gt; (this is the default).</source>
          <target state="translated">megaco_receive_handle의 프로토콜 버전을 &lt;code&gt;dynamic&lt;/code&gt; 설정하십시오 (기본값).</target>
        </trans-unit>
        <trans-unit id="20a11f749f7c15205dcb2c9760cceb7b8ef6d9da" translate="yes" xml:space="preserve">
          <source>Set the resolver cache size. Defaults to 100 DNS records.</source>
          <target state="translated">리졸버 캐시 크기를 설정하십시오. 기본적으로 100 개의 DNS 레코드입니다.</target>
        </trans-unit>
        <trans-unit id="2805a7b47d71baa112cad571428ef5bd63c07d3a" translate="yes" xml:space="preserve">
          <source>Set the seed for PRNG to the given binary. This calls the RAND_seed function from openssl. Only use this if the system you are running on does not have enough &quot;randomness&quot; built in. Normally this is when &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; raises &lt;code&gt;error:low_entropy&lt;/code&gt;</source>
          <target state="translated">PRNG의 시드를 주어진 바이너리로 설정합니다. 이것은 openssl에서 RAND_seed 함수를 호출합니다. 당신이 실행중인 시스템에 내장 충분 &quot;임의성&quot;이없는 경우에만이를 사용 일반적으로이 때이다. &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; 인상의 &lt;code&gt;error:low_entropy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ce09a83b1b5a283eb8968bc9ca42ab561a8776a" translate="yes" xml:space="preserve">
          <source>Set the seed for PRNG to the given binary. This calls the RAND_seed function from openssl. Only use this if the system you are running on does not have enough &quot;randomness&quot; built in. Normally this is when &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; throws &lt;code&gt;low_entropy&lt;/code&gt;</source>
          <target state="translated">PRNG의 시드를 지정된 바이너리로 설정하십시오. openssl에서 RAND_seed 함수를 호출합니다. 실행중인 시스템에 &quot;랜덤&quot;이 충분하지 않은 경우에만 사용하십시오. 일반적으로 &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; 이 &lt;code&gt;low_entropy&lt;/code&gt; 를 발생 시키는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="b5aa74580980ac1cdaaeb8b177b326aacaa0569a" translate="yes" xml:space="preserve">
          <source>Set the staging part of the breakpoint as enabled with specified breakpoint data.</source>
          <target state="translated">지정된 중단 점 데이터를 사용하여 중단 점의 스테이징 부분을 사용하도록 설정합니다.</target>
        </trans-unit>
        <trans-unit id="39f635f4f20e4c51855fdc78219636e760e994c7" translate="yes" xml:space="preserve">
          <source>Set the time to wait until retry (in milliseconds) for DNS queries made by &lt;code&gt;inet_res(3)&lt;/code&gt;. Defaults to 2 seconds.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; 의해 작성된 DNS 쿼리에 대해 재시도 (밀리 초)까지 대기 할 시간을 설정하십시오 . 기본값은 2 초입니다.</target>
        </trans-unit>
        <trans-unit id="08d13b6a782c03e365d37eabd19ca664da2780cc" translate="yes" xml:space="preserve">
          <source>Set to 'false' if xmerl should skip comments otherwise they will be returned as xmlComment records (default 'true').</source>
          <target state="translated">xmerl이 주석을 건너 뛰어야하는 경우 'false'로 설정하십시오. 그렇지 않으면 주석이 xmlComment 레코드 (기본값 'true')로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="76fbe7708004047bb2afb1c782b1da39380920d9" translate="yes" xml:space="preserve">
          <source>Set to 'true' if xmerl should add to elements missing attributes with a defined default value (default 'false').</source>
          <target state="translated">xmerl이 정의 된 기본값 (기본값 'false')으로 속성이없는 요소에 요소를 추가해야하는 경우 'true'로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b3a6100862ef8000dffdbfabef9b03fbe4efed5b" translate="yes" xml:space="preserve">
          <source>Set to 'true' if xmerl should behave quietly and not output any information to standard output (default 'false').</source>
          <target state="translated">xmerl이 조용히 작동하고 정보를 표준 출력으로 출력하지 않아야하는 경우 'true'로 설정하십시오 (기본값은 'false').</target>
        </trans-unit>
        <trans-unit id="66eb7a7119e62d94590579d9ba538816580a8e4b" translate="yes" xml:space="preserve">
          <source>Set to 'true' if xmerl should return a complete XML document as an xmlDocument record (default 'false').</source>
          <target state="translated">xmerl이 완전한 XML 문서를 xmlDocument 레코드 (기본값 'false')로 리턴해야하는 경우 'true'로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a1a03c1e0b0cd1d311bb054ba770b084cc6f021d" translate="yes" xml:space="preserve">
          <source>Set user id on execution</source>
          <target state="translated">실행시 사용자 ID 설정</target>
        </trans-unit>
        <trans-unit id="a03a3e4e8928d8477b7e1f484633e86f075cb412" translate="yes" xml:space="preserve">
          <source>Set verbosity levels (similar to &lt;code&gt;ct_run -verbosity&lt;/code&gt;).</source>
          <target state="translated">상세 레벨을 설정하십시오 ( &lt;code&gt;ct_run -verbosity&lt;/code&gt; 와 유사 ).</target>
        </trans-unit>
        <trans-unit id="ca778adba8a1ef9615d0d2c7fde406715790347d" translate="yes" xml:space="preserve">
          <source>Set(T,Term) = Term, where T is an atom</source>
          <target state="translated">Set (T, Term) = 항, 여기서 T는 원자</target>
        </trans-unit>
        <trans-unit id="1e10feb9799e50623c9bf8a9567eaa50e9939fd6" translate="yes" xml:space="preserve">
          <source>Set([T], [X[1], ..., X[n]]) = {Set(T, X[1]), ..., Set(T, X[n])}</source>
          <target state="translated">세트 ([T], [X [1], ..., X [n]]) = {세트 (T, X [1]), ..., 세트 (T, X [n])}</target>
        </trans-unit>
        <trans-unit id="413498d027ca502d98470e9ce84766c4039cf1ea" translate="yes" xml:space="preserve">
          <source>Set([T], []) = {}</source>
          <target state="translated">설정 ([T], []) = {}</target>
        </trans-unit>
        <trans-unit id="7fd0a36887cd69f40802ddb5e7e82ea6eeebcf34" translate="yes" xml:space="preserve">
          <source>Set({T[1], ..., T[n]}, {X[1], ..., X[n]}) = (Set(T[1], X[1]), ..., Set(T[n], X[n]))</source>
          <target state="translated">Set ({T [1], ..., T [n]}, {X [1], ..., X [n]}) = (Set (T [1], X [1]),. .., 설정 (T [n], X [n]))</target>
        </trans-unit>
        <trans-unit id="1c06dfb34f2f4bf919808259ba70305b1ddd9650" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*dp&lt;/code&gt; to the floating-point value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;*dp&lt;/code&gt; 의 부동 소수점 값으로 &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e051f7d5badeaed03b0b1d0a541992d21c1addf9" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*head&lt;/code&gt; and &lt;code&gt;*tail&lt;/code&gt; from list &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">목록 &lt;code&gt;list&lt;/code&gt; 에서 &lt;code&gt;*head&lt;/code&gt; 및 &lt;code&gt;*tail&lt;/code&gt; 을 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="e51b6603c560e21dcd95c8a681f5cba8d55372a9" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*ip&lt;/code&gt; 를 &lt;code&gt;term&lt;/code&gt; 의 정수 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="571e173a08327b6e4b86b6ce45879f312f580ef8" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the long integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*ip&lt;/code&gt; 를 &lt;code&gt;term&lt;/code&gt; 의 긴 정수 값으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="613dc3641992693e7800bbeb7cd30ae95e85d4a3" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the unsigned integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*ip&lt;/code&gt; 를 &lt;code&gt;term&lt;/code&gt; 의 부호없는 정수 값으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="86ba384052f60ac175063bcb3873f9c02f933f41" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the unsigned long integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;*ip&lt;/code&gt; 의 부호없는 긴 정수 값으로 &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="915a720de8e28ec31c8841ac19081593d9b84062" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*len&lt;/code&gt; to the length (number of bytes excluding terminating &lt;code&gt;NULL&lt;/code&gt; character) of the atom &lt;code&gt;term&lt;/code&gt; with encoding &lt;code&gt;encode&lt;/code&gt;.</source>
          <target state="translated">인코딩 &lt;code&gt;encode&lt;/code&gt; 를 사용 하여 아톰 &lt;code&gt;term&lt;/code&gt; 의 길이 ( &lt;code&gt;NULL&lt;/code&gt; 문자 종료를 제외한 바이트 수)로 &lt;code&gt;*len&lt;/code&gt; 을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="f45f5eb51a4fbfb531a0011893bc38aa06940406" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*len&lt;/code&gt; to the length of list &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">설정은 &lt;code&gt;*len&lt;/code&gt; 목록의 길이에 &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4540298ab375e444ccad190a52e6e0477fd70600" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*list_out&lt;/code&gt; to the reverse list of the list &lt;code&gt;list_in&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;, or returns &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;list_in&lt;/code&gt; is not a list.</source>
          <target state="translated">&lt;code&gt;*list_out&lt;/code&gt; 을 &lt;code&gt;list_in&lt;/code&gt; 목록의 리버스 목록으로 설정 하고 &lt;code&gt;true&lt;/code&gt; 를 리턴하거나 &lt;code&gt;list_in&lt;/code&gt; 이 목록이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="4aacd3e0359772fef237556f152787f4d410bbfd" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*objp&lt;/code&gt; to point to the resource object referred to by &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;*objp&lt;/code&gt; 에 의해 참조되는 자원 객체에 지점 &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05fcb7ced968bcff373ec6a2edb89431fd8224dd" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*size&lt;/code&gt; to the number of key-value pairs in the map &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">맵 &lt;code&gt;term&lt;/code&gt; 에서 &lt;code&gt;*size&lt;/code&gt; 를 키-값 쌍의 수로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="beaa2fee2e9a9f6a8abdbe5756d1796f1ba8d12e" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*value&lt;/code&gt; to the value associated with &lt;code&gt;key&lt;/code&gt; in the map &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">맵 &lt;code&gt;map&lt;/code&gt; 에서 &lt;code&gt;*value&lt;/code&gt; 를 &lt;code&gt;key&lt;/code&gt; 와 연관된 값 으로 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="2d424f307db0ea4cc28ba2b241c77bfef339d143" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; only flag. Defaults to &lt;code&gt;true&lt;/code&gt;. When a super carrier is used and this flag is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;mseg_alloc&lt;/code&gt; only creates carriers in the super carrier. Notice that the &lt;code&gt;alloc_util&lt;/code&gt; framework can create &lt;code&gt;sys_alloc&lt;/code&gt; carriers, so if you want all carriers to be created in the super carrier, you therefore want to disable use of &lt;code&gt;sys_alloc&lt;/code&gt; carriers by also passing &lt;code&gt;&lt;a href=&quot;#Musac&quot;&gt;+Musac false&lt;/a&gt;&lt;/code&gt;. When the flag is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;mseg_alloc&lt;/code&gt; tries to create carriers outside of the super carrier when the super carrier is full.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; 전용 플래그를 설정합니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 수퍼 캐리어가 &lt;code&gt;mseg_alloc&lt;/code&gt; 플래그가 &lt;code&gt;true&lt;/code&gt; 인 경우 mseg_alloc 은 수퍼 캐리어에 캐리어 만 만듭니다. 것을 알 수 &lt;code&gt;alloc_util&lt;/code&gt; 의 프레임 워크를 만들 수 있습니다 &lt;code&gt;sys_alloc&lt;/code&gt; 의 당신은 슈퍼 캐리어에서 생성되는 모든 통신 사업자가 원하는 그렇다면, 사업자, 당신은 때문에의 비활성화 사용하려는 &lt;code&gt;sys_alloc&lt;/code&gt; 의 도 전달하여 사업자 &lt;code&gt;&lt;a href=&quot;#Musac&quot;&gt;+Musac false&lt;/a&gt;&lt;/code&gt; . 플래그가 &lt;code&gt;false&lt;/code&gt; 인 경우 &lt;code&gt;mseg_alloc&lt;/code&gt; 은 수퍼 캐리어가 가득 찼을 때 수퍼 캐리어 외부에 캐리어를 만들려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="b1d4ec5452d888d17be9d1b1fff275616c522a40" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; reserve physical memory flag. Defaults to &lt;code&gt;true&lt;/code&gt;. When this flag is &lt;code&gt;true&lt;/code&gt;, physical memory is reserved for the whole super carrier at once when it is created. The reservation is after that left unchanged. When this flag is set to &lt;code&gt;false&lt;/code&gt;, only virtual address space is reserved for the super carrier upon creation. The system attempts to reserve physical memory upon carrier creations in the super carrier, and attempt to unreserve physical memory upon carrier destructions in the super carrier.</source>
          <target state="translated">설정 &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; 예비 물리적 메모리 플래그. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 이 플래그가 &lt;code&gt;true&lt;/code&gt; 인 경우 실제 메모리는 전체 슈퍼 캐리어가 작성 될 때 한 번에 예약됩니다. 예약은 그대로 남아 있습니다. 이 플래그가 &lt;code&gt;false&lt;/code&gt; 로 설정되면 가상 주소 공간 만 생성시 슈퍼 캐리어에 예약됩니다. 시스템은 수퍼 캐리어에서 캐리어가 생성 될 때 물리 메모리를 예약하려고 시도하고, 슈퍼 캐리어에서 캐리어가 파괴 될 때 물리 메모리를 예약 해제하려고 시도한다.</target>
        </trans-unit>
        <trans-unit id="b5a297dec64e0c41c90d9d4e3f880b30e39fdcd8" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; reserved free segment descriptors. Defaults to &lt;code&gt;65536&lt;/code&gt;. This parameter determines the amount of memory to reserve for free segment descriptors used by the super carrier. If the system runs out of reserved memory for free segment descriptors, other memory is used. This can however cause fragmentation issues, so you want to ensure that this never happens. The maximum amount of free segment descriptors used can be retrieved from the &lt;code&gt;erts_mmap&lt;/code&gt; tuple part of the result from calling &lt;code&gt; erlang:system_info({allocator, mseg_alloc})&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; 무료 세그먼트 디스크립터를 소유. 기본값은 &lt;code&gt;65536&lt;/code&gt; 입니다. 이 매개 변수는 수퍼 캐리어가 사용하는 여유 세그먼트 설명자를 위해 예약 할 메모리 양을 결정합니다. 시스템에서 사용 가능한 세그먼트 설명자에 대해 예약 된 메모리가 부족하면 다른 메모리가 사용됩니다. 그러나 이로 인해 조각화 문제가 발생할 수 있으므로 이런 일이 발생하지 않도록해야합니다. 사용 가능한 최대 세그먼트 디스크립터 양은 &lt;code&gt; erlang:system_info({allocator, mseg_alloc})&lt;/code&gt; 호출 결과 의 &lt;code&gt;erts_mmap&lt;/code&gt; 튜플 부분 에서 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1612d1b41c97922be4489ee03c0939a8fd5d8b4d" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; reserved free segment descriptors. Defaults to &lt;code&gt;65536&lt;/code&gt;. This parameter determines the amount of memory to reserve for free segment descriptors used by the super carrier. If the system runs out of reserved memory for free segment descriptors, other memory is used. This can however cause fragmentation issues, so you want to ensure that this never happens. The maximum amount of free segment descriptors used can be retrieved from the &lt;code&gt;erts_mmap&lt;/code&gt; tuple part of the result from calling &lt;code&gt;erlang:system_info({allocator, mseg_alloc})&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; 무료 세그먼트 디스크립터를 소유. 기본값은 &lt;code&gt;65536&lt;/code&gt; 입니다. 이 매개 변수는 수퍼 캐리어가 사용하는 여유 세그먼트 디스크립터를 위해 예약 할 메모리의 양을 결정합니다. 시스템에 여유 세그먼트 디스크립터에 대한 예약 메모리가 부족하면 다른 메모리가 사용됩니다. 그러나 이로 인해 조각화 문제가 발생할 수 있으므로이 문제가 발생하지 않도록해야합니다. 사용 된 최대 여유 세그먼트 디스크립터 양은 &lt;code&gt;erlang:system_info({allocator, mseg_alloc})&lt;/code&gt; 를 호출 한 결과 의 &lt;code&gt;erts_mmap&lt;/code&gt; 튜플 부분 에서 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ebb876a63208fcdcfb339ce9e69d82e63c7a04b" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="7d25034a18042a5fdc2f4a71230a294a34c64875" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;verbosity levels for printouts&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;verbosity levels for printouts&lt;/a&gt;&lt;/code&gt; 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="4852521a61b195efaf2f348ded9c7d061b93172d" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;IPV6_TCLASS IP&lt;/code&gt; level options on platforms where this is implemented. The behavior and allowed range varies between different systems. The option is ignored on platforms where it is not implemented. Use with caution.</source>
          <target state="translated">이것이 구현되는 플랫폼에서 &lt;code&gt;IPV6_TCLASS IP&lt;/code&gt; 레벨 옵션을 설정 합니다. 동작 및 허용 범위는 시스템마다 다릅니다. 이 옵션은 구현되지 않은 플랫폼에서는 무시됩니다. 주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="35cf2c0f5bf4ff6c4b3ed386f7b45919378d8588" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;IP_TOS IP&lt;/code&gt; level options on platforms where this is implemented. The behavior and allowed range varies between different systems. The option is ignored on platforms where it is not implemented. Use with caution.</source>
          <target state="translated">이것이 구현되는 플랫폼에서 &lt;code&gt;IP_TOS IP&lt;/code&gt; 레벨 옵션을 설정 합니다. 동작 및 허용 범위는 시스템마다 다릅니다. 이 옵션은 구현되지 않은 플랫폼에서는 무시됩니다. 주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3067dd797e2d91f5e74fcce739bf10d2c4d32e50" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;net_ticktime&lt;/code&gt; (see &lt;code&gt;kernel(6)&lt;/code&gt;) to &lt;code&gt;NetTicktime&lt;/code&gt; seconds. &lt;code&gt;TransitionPeriod&lt;/code&gt; defaults to &lt;code&gt;60&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;net_ticktime&lt;/code&gt; (참조 &lt;code&gt;kernel(6)&lt;/code&gt; 까지) &lt;code&gt;NetTicktime&lt;/code&gt; 의 초. &lt;code&gt;TransitionPeriod&lt;/code&gt; 의 기본값은 &lt;code&gt;60&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c15b21e5980ed919de9bd7b33856ffd75d752ac5" translate="yes" xml:space="preserve">
          <source>Sets a conditional breakpoint.</source>
          <target state="translated">조건부 중단 점을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e958994f825f779aaaf22b4d1627bd52da981b53" translate="yes" xml:space="preserve">
          <source>Sets a function breakpoint.</source>
          <target state="translated">함수 중단 점을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="13db4a451ebcde54e302290d8a49e1f659727139" translate="yes" xml:space="preserve">
          <source>Sets a line breakpoint.</source>
          <target state="translated">줄 바꿈 지점을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d7529eae50d20b8a22057a81dd1f470a3676e6b5" translate="yes" xml:space="preserve">
          <source>Sets a link to the parent process (like &lt;code&gt;&lt;a href=&quot;#spawn_link-3&quot;&gt;spawn_link/3&lt;/a&gt;&lt;/code&gt; does).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#spawn_link-3&quot;&gt;spawn_link/3&lt;/a&gt;&lt;/code&gt; 처럼 부모 프로세스에 대한 링크를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="378330ec692ad34d970693f8795104131edf1cb9" translate="yes" xml:space="preserve">
          <source>Sets a lock on &lt;code&gt;Id&lt;/code&gt; (using &lt;code&gt;&lt;a href=&quot;#set_lock-3&quot;&gt;set_lock/3&lt;/a&gt;&lt;/code&gt;). If this succeeds, &lt;code&gt;Fun()&lt;/code&gt; is evaluated and the result &lt;code&gt;Res&lt;/code&gt; is returned. Returns &lt;code&gt;aborted&lt;/code&gt; if the lock attempt fails. If &lt;code&gt;Retries&lt;/code&gt; is set to &lt;code&gt;infinity&lt;/code&gt;, the transaction does not abort.</source>
          <target state="translated">&lt;code&gt;Id&lt;/code&gt; 에 잠금을 설정합니다 ( &lt;code&gt;&lt;a href=&quot;#set_lock-3&quot;&gt;set_lock/3&lt;/a&gt;&lt;/code&gt; 사용 ). 이것이 성공하면 &lt;code&gt;Fun()&lt;/code&gt; 이 평가되고 결과 &lt;code&gt;Res&lt;/code&gt; 가 반환됩니다. 반환 &lt;code&gt;aborted&lt;/code&gt; 잠금 시도가 실패합니다. 재 &lt;code&gt;Retries&lt;/code&gt; 가 &lt;code&gt;infinity&lt;/code&gt; 로 설정 되면 트랜잭션이 중단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1aebf3301cf94c465826ebf94b60880a279cbdf" translate="yes" xml:space="preserve">
          <source>Sets a lock on the specified nodes (or on all nodes if none are specified) on &lt;code&gt;ResourceId&lt;/code&gt; for &lt;code&gt;LockRequesterId&lt;/code&gt;. If a lock already exists on &lt;code&gt;ResourceId&lt;/code&gt; for another requester than &lt;code&gt;LockRequesterId&lt;/code&gt;, and &lt;code&gt;Retries&lt;/code&gt; is not equal to &lt;code&gt;0&lt;/code&gt;, the process sleeps for a while and tries to execute the action later. When &lt;code&gt;Retries&lt;/code&gt; attempts have been made, &lt;code&gt;false&lt;/code&gt; is returned, otherwise &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;Retries&lt;/code&gt; is &lt;code&gt;infinity&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; is eventually returned (unless the lock is never released).</source>
          <target state="translated">&lt;code&gt;LockRequesterId&lt;/code&gt; 의 &lt;code&gt;ResourceId&lt;/code&gt; 에 지정된 노드 (또는 지정되지 않은 경우 모든 노드)에 대한 잠금을 설정합니다 . &lt;code&gt;LockRequesterId&lt;/code&gt; 이외의 다른 요청자 에 대해 &lt;code&gt;ResourceId&lt;/code&gt; 에 잠금이 이미 존재 하고 재 &lt;code&gt;Retries&lt;/code&gt; 가 &lt;code&gt;0&lt;/code&gt; 이 아닌 경우 프로세스는 잠시 동안 휴면 상태가되고 나중에 조치를 실행하려고합니다. &lt;code&gt;Retries&lt;/code&gt; 시도를 시도 하면 &lt;code&gt;false&lt;/code&gt; 가 리턴되고 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 가 리턴 됩니다. 경우 &lt;code&gt;Retries&lt;/code&gt; 이다 &lt;code&gt;infinity&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; (잠금이 해제되지 않습니다하지 않는 한) 결국 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="31eee8040c64ddf8571c4c3add0e9753c79530ec" translate="yes" xml:space="preserve">
          <source>Sets a network namespace for the socket. Parameter &lt;code&gt;Namespace&lt;/code&gt; is a filename defining the namespace, for example, &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt;, typically created by command &lt;code&gt;ip netns add example&lt;/code&gt;. This option must be used in a function call that creates a socket, that is, &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt;, and also &lt;code&gt;&lt;a href=&quot;#getifaddrs-1&quot;&gt;getifaddrs/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">소켓에 대한 네트워크 네임 스페이스를 설정합니다. 매개 변수 &lt;code&gt;Namespace&lt;/code&gt; 는 네임 스페이스 를 정의하는 파일 이름입니다 (예 : &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt; ). 일반적으로 &lt;code&gt;ip netns add example&lt;/code&gt; 명령으로 생성됩니다 . 이 옵션은 소켓을 생성하는 함수 호출, 즉 &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt; , 및 또한 &lt;code&gt;&lt;a href=&quot;#getifaddrs-1&quot;&gt;getifaddrs/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45fa85c61ffdffc636edd96b3c09aa20ad418e82" translate="yes" xml:space="preserve">
          <source>Sets a network namespace for the socket. Parameter &lt;code&gt;Namespace&lt;/code&gt; is a filename defining the namespace, for example, &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt;, typically created by command &lt;code&gt;ip netns add example&lt;/code&gt;. This option must be used in a function call that creates a socket, that is, &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">소켓의 네트워크 네임 스페이스를 설정합니다. 매개 변수 &lt;code&gt;Namespace&lt;/code&gt; 는 네임 스페이스 를 정의하는 파일 이름입니다 (예 : &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt; ). 일반적으로 &lt;code&gt;ip netns add example&lt;/code&gt; 명령으로 작성됩니다 . 이 옵션은 소켓을 작성하는 함수 호출, 즉 &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt; 에서 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="fc9ccba50f71fcd13f784682ef8be0b3e882300c" translate="yes" xml:space="preserve">
          <source>Sets a new &lt;code&gt;Value&lt;/code&gt; for environment variable &lt;code&gt;VarName&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;VarName&lt;/code&gt; 에 대한 새 &lt;code&gt;Value&lt;/code&gt; 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d81d3bf72e4dc51ac97c9faa67c434a822a766af" translate="yes" xml:space="preserve">
          <source>Sets a new directory for the object code. The current directory is used for output, except when a directory has been specified with this option.</source>
          <target state="translated">객체 코드의 새 디렉토리를 설정합니다. 이 옵션으로 디렉토리를 지정한 경우를 제외하고 현재 디렉토리가 출력에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4ccc3c86ad893d9367459062c3e0cd6e9a7d7648" translate="yes" xml:space="preserve">
          <source>Sets a new timetrap for the running test case.</source>
          <target state="translated">실행중인 테스트 사례에 대한 새로운 타임 트랩을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="94974c0a1d5854fe21633dd5ad87299cb2fa3e5c" translate="yes" xml:space="preserve">
          <source>Sets a new value to a variable. The variable is created if it does not exist. No checks are made on the type of the new value.</source>
          <target state="translated">새 값을 변수로 설정합니다. 변수가 없으면 작성됩니다. 새 값의 유형을 점검하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67c8307c383c4b2a2c9cf2c4db6d748df38e0492" translate="yes" xml:space="preserve">
          <source>Sets a temporary reboot command. This command is used if a &lt;code&gt;HEART_COMMAND&lt;/code&gt; other than the one specified with the environment variable is to be used to reboot the system. The new Erlang runtime system uses (if it misbehaves) environment variable &lt;code&gt;HEART_COMMAND&lt;/code&gt; to reboot.</source>
          <target state="translated">임시 재부팅 명령을 설정합니다. 이 명령은 환경 변수로 지정된 것 이외의 &lt;code&gt;HEART_COMMAND&lt;/code&gt; 를 사용하여 시스템을 재부팅하는 경우에 사용됩니다. 새로운 Erlang 런타임 시스템은 환경 변수 &lt;code&gt;HEART_COMMAND&lt;/code&gt; 를 사용하여 재부팅 합니다 (오작동하는 경우) .</target>
        </trans-unit>
        <trans-unit id="bfcfc1f87c9268646e242d73a5086422e1c0e9ec" translate="yes" xml:space="preserve">
          <source>Sets a time limit for the complete &lt;code&gt;expect&lt;/code&gt; operation. After &lt;code&gt;TotalTimeout&lt;/code&gt; milliseconds, &lt;code&gt;{error,timeout}&lt;/code&gt; is returned. Default is &lt;code&gt;infinity&lt;/code&gt; (that is, no time limit).</source>
          <target state="translated">전체 &lt;code&gt;expect&lt;/code&gt; 작업에 대한 시간 제한을 설정합니다 . &lt;code&gt;TotalTimeout&lt;/code&gt; 밀리 초 후에 &lt;code&gt;{error,timeout}&lt;/code&gt; 이 반환됩니다. 기본값은 &lt;code&gt;infinity&lt;/code&gt; (즉, 시간 제한 없음).</target>
        </trans-unit>
        <trans-unit id="7ac530e4a2972399690caac535efe4009b77a789" translate="yes" xml:space="preserve">
          <source>Sets a time-out on a connection when no channels are active. Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">활성화 된 채널이 없을 때 연결 시간 초과를 설정합니다. 기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04f58b131e4c5efa20eb55570ef64870b720e260" translate="yes" xml:space="preserve">
          <source>Sets a time-out on a connection when no channels are open. Defaults to &lt;code&gt;infinity&lt;/code&gt;. The unit is milliseconds.</source>
          <target state="translated">열려있는 채널이 없을 때 연결 시간 제한을 설정합니다. 기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다. 단위는 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="80d407ca28e92b15f8e9a5ead685e62e613d8d41" translate="yes" xml:space="preserve">
          <source>Sets a time-out on a connection when no channels are open. Defaults to infinity.</source>
          <target state="translated">열려있는 채널이 없을 때 연결 시간 제한을 설정합니다. 기본값은 무한대입니다.</target>
        </trans-unit>
        <trans-unit id="98e674062633a7af96f204ff5dc228376acf0a5d" translate="yes" xml:space="preserve">
          <source>Sets a timeout on the transport layer connect time. For &lt;code&gt;gen_tcp&lt;/code&gt; the time is in milli-seconds and the default value is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">전송 계층 연결 시간에 시간 초과를 설정합니다. 들어 &lt;code&gt;gen_tcp&lt;/code&gt; 시간이 밀리 초이며, 기본값은 &lt;code&gt;infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee425ba9c0ee48277c9503c7d0126036be193f1f" translate="yes" xml:space="preserve">
          <source>Sets a timer on the driver, which will count down and call the driver when it is timed out. Parameter &lt;code&gt;time&lt;/code&gt; is the time in milliseconds before the timer expires.</source>
          <target state="translated">드라이버에서 타이머를 설정합니다. 타이머는 시간이 초과되면 카운트 다운하여 드라이버를 호출합니다. 매개 변수 &lt;code&gt;time&lt;/code&gt; 은 타이머가 만료되기 전의 시간 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="a49ab86917c6d2a622df15cb53f1cc3db42e35a4" translate="yes" xml:space="preserve">
          <source>Sets a user-defined CPU topology. The user-defined CPU topology overrides any automatically detected CPU topology. The CPU topology is used when &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;binding schedulers to logical processors&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 CPU 토폴로지를 설정합니다. 사용자 정의 CPU 토폴로지는 자동 감지 된 CPU 토폴로지보다 우선합니다. CPU 토폴로지는 &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;binding schedulers to logical processors&lt;/a&gt;&lt;/code&gt; 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a5a46f50076710c9e5150e115a75150579da01d6" translate="yes" xml:space="preserve">
          <source>Sets all flags except &lt;code&gt;silent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;silent&lt;/code&gt; 를 제외한 모든 플래그를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9c03475cf14316ae353a4e7da23272a974c3a451" translate="yes" xml:space="preserve">
          <source>Sets all trace flags except &lt;code&gt;tracer&lt;/code&gt; and &lt;code&gt;cpu_timestamp&lt;/code&gt;, which are in their nature different than the others.</source>
          <target state="translated">&lt;code&gt;tracer&lt;/code&gt; 및 &lt;code&gt;cpu_timestamp&lt;/code&gt; 를 제외한 모든 추적 플래그를 설정합니다 . 이는 다른 특성과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="854090be1c214475fbf1b8a6ff2070087d7f8451" translate="yes" xml:space="preserve">
          <source>Sets an &lt;code&gt;&lt;a href=&quot;#ErlNifPid&quot;&gt;ErlNifPid&lt;/a&gt;&lt;/code&gt; variable as undefined. See &lt;code&gt;&lt;a href=&quot;#enif_is_pid_undefined&quot;&gt; enif_is_pid_undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifPid&quot;&gt;ErlNifPid&lt;/a&gt;&lt;/code&gt; 변수를 정의되지 않음으로 설정합니다 . &lt;code&gt;&lt;a href=&quot;#enif_is_pid_undefined&quot;&gt; enif_is_pid_undefined&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="10c846791ad68cf6dbd94eefcd66884aefebb31c" translate="yes" xml:space="preserve">
          <source>Sets an additional message appended to the trace message sent. One can only set one additional message in the body. Later calls replace the appended message.</source>
          <target state="translated">전송 된 추적 메시지에 추가 된 추가 메시지를 설정합니다. 본문에는 하나의 추가 메시지 만 설정할 수 있습니다. 나중에 호출하면 추가 된 메시지가 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="0af1dd2df9ce15000cd6d34bd367aefd9761c132" translate="yes" xml:space="preserve">
          <source>Sets and gets limits that will be used for controlling the busy state of the port message queue.</source>
          <target state="translated">포트 메시지 큐의 사용 중 상태를 제어하는 ​​데 사용될 제한을 설정하고 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8358d2f89529ff4b158b690b7b56c9c199b14059" translate="yes" xml:space="preserve">
          <source>Sets and unsets the busy state of the port. If &lt;code&gt;on&lt;/code&gt; is non-zero, the port is set to busy. If it is zero, the port is set to not busy. You typically want to combine this feature with the &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt; busy port message queue&lt;/a&gt;&lt;/code&gt; functionality.</source>
          <target state="translated">포트의 사용 상태를 설정 및 설정 해제합니다. 경우 &lt;code&gt;on&lt;/code&gt; 포트는 바쁜으로 설정되어 0이 아닌. 0이면 포트가 사용 중이 아님으로 설정됩니다. 일반적으로이 기능을 사용 &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt; busy port message queue&lt;/a&gt;&lt;/code&gt; 기능과 결합하려고 합니다.</target>
        </trans-unit>
        <trans-unit id="4d5c29272406fc646646cf47942988ee10b91f01" translate="yes" xml:space="preserve">
          <source>Sets and unsets the busy state of the port. If &lt;code&gt;on&lt;/code&gt; is non-zero, the port is set to busy. If it is zero, the port is set to not busy. You typically want to combine this feature with the &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt;busy port message queue&lt;/a&gt;&lt;/code&gt; functionality.</source>
          <target state="translated">포트의 사용 중 상태를 설정 및 설정 해제합니다. &lt;code&gt;on&lt;/code&gt; 이 0이 아닌 경우 포트는 사용 중으로 설정됩니다. 0이면 포트가 사용 중이 아닙니다. 일반적으로이 기능을 사용 &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt;busy port message queue&lt;/a&gt;&lt;/code&gt; 기능과 결합하려고 합니다.</target>
        </trans-unit>
        <trans-unit id="8a85c3ea45147b9fedbadf6c395811358fe8a84f" translate="yes" xml:space="preserve">
          <source>Sets are collections of elements with no duplicate elements. An &lt;code&gt;ordset&lt;/code&gt; is a representation of a set, where an ordered list is used to store the elements of the set. An ordered list is more efficient than an unordered list. Elements are ordered according to the &lt;strong&gt;Erlang term order&lt;/strong&gt;.</source>
          <target state="translated">세트는 중복 요소가없는 요소의 모음입니다. &lt;code&gt;ordset&lt;/code&gt; 는 순서리스트는 세트의 요소를 저장하는 데 사용되는 한 세트의 표현이다. 정렬 된 목록은 정렬되지 않은 목록보다 효율적입니다. 요소는 &lt;strong&gt;Erlang 용어 order&lt;/strong&gt; 에 따라 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c19d390137232ae72a1d248cdc31d7776e598b6" translate="yes" xml:space="preserve">
          <source>Sets are collections of elements with no duplicate elements. The representation of a set is undefined.</source>
          <target state="translated">세트는 중복 요소가없는 요소의 모음입니다. 세트의 표현은 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="365028eb14a26a137690d1db3a4043622bdbec75" translate="yes" xml:space="preserve">
          <source>Sets certain flags for the process &lt;code&gt;Pid&lt;/code&gt;, in the same manner as &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;. Returns the old value of the flag. The valid values for &lt;code&gt;Flag&lt;/code&gt; are only a subset of those allowed in &lt;code&gt;process_flag/2&lt;/code&gt;, namely &lt;code&gt;save_calls&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; 와 같은 방식으로 프로세스 &lt;code&gt;Pid&lt;/code&gt; 에 대한 특정 플래그를 설정 합니다. 플래그의 이전 값을 반환합니다. &lt;code&gt;Flag&lt;/code&gt; 의 유효한 값 은 &lt;code&gt;process_flag/2&lt;/code&gt; 에서 허용되는 값 중 &lt;code&gt;save_calls&lt;/code&gt; . 즉, save_calls 입니다.</target>
        </trans-unit>
        <trans-unit id="a3079388d610d17042e9be4c35387553a2f4be5e" translate="yes" xml:space="preserve">
          <source>Sets default scheduler hint for port parallelism. If set to &lt;code&gt;true&lt;/code&gt;, the virtual machine schedules port tasks when it improves parallelism in the system. If set to &lt;code&gt;false&lt;/code&gt;, the virtual machine tries to perform port tasks immediately, improving latency at the expense of parallelism. Default to &lt;code&gt;false&lt;/code&gt;. The default used can be inspected in runtime by calling &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt; erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt;. The default can be overridden on port creation by passing option &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt; parallelism&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt; erlang:open_port/2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">포트 병렬 처리에 대한 기본 스케줄러 힌트를 설정합니다. &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 가상 머신은 시스템의 병렬 처리를 개선 할 때 포트 작업을 예약합니다. &lt;code&gt;false&lt;/code&gt; 로 설정 하면 가상 머신이 즉시 포트 작업을 수행하여 병렬 처리를 희생하여 지연 시간을 개선합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. 사용 된 기본값은 &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt; erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt; 을 호출하여 런타임에서 검사 할 수 있습니다 . 옵션 &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt; parallelism&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt; erlang:open_port/2&lt;/a&gt;&lt;/code&gt; 에 전달하여 포트 생성시 기본값을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="68d944e5445db3a3e9e6c96dd7a0661e897b6fdc" translate="yes" xml:space="preserve">
          <source>Sets default scheduler hint for port parallelism. If set to &lt;code&gt;true&lt;/code&gt;, the virtual machine schedules port tasks when it improves parallelism in the system. If set to &lt;code&gt;false&lt;/code&gt;, the virtual machine tries to perform port tasks immediately, improving latency at the expense of parallelism. Default to &lt;code&gt;false&lt;/code&gt;. The default used can be inspected in runtime by calling &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt;erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt;. The default can be overridden on port creation by passing option &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt;parallelism&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt;erlang:open_port/2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">포트 병렬 처리에 대한 기본 스케줄러 힌트를 설정합니다. &lt;code&gt;true&lt;/code&gt; 로 설정 하면 가상 시스템은 시스템의 병렬 처리를 향상시킬 때 포트 작업을 예약합니다. &lt;code&gt;false&lt;/code&gt; 로 설정 되면 가상 머신은 포트 태스크를 즉시 수행하려고 시도하여 병렬 처리를 대신하여 대기 시간을 개선합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. 사용 된 기본값은 &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt;erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt; 을 호출하여 런타임에서 검사 할 수 있습니다 . 옵션 &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt;parallelism&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt;erlang:open_port/2&lt;/a&gt;&lt;/code&gt; 에 전달하여 포트 작성시 기본값을 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9a29d89884c070d02b26f487494764ac64dbd6f" translate="yes" xml:space="preserve">
          <source>Sets entry &lt;code&gt;I&lt;/code&gt; of the array to &lt;code&gt;Value&lt;/code&gt;. If &lt;code&gt;I&lt;/code&gt; is not a non-negative integer, or if the array has fixed size and &lt;code&gt;I&lt;/code&gt; is larger than the maximum index, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">배열의 항목 &lt;code&gt;I&lt;/code&gt; 을 &lt;code&gt;Value&lt;/code&gt; 로 설정 합니다. 경우 &lt;code&gt;I&lt;/code&gt; 는 음이 아닌 정수가 아니거나 배열 크기를 고정하고있는 경우 &lt;code&gt;I&lt;/code&gt; 가 최대 인덱스보다 큰 경우, 호출 실패 원인 &lt;code&gt;badarg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c90881659aa67d159aefaf68b8302a375d2eac8" translate="yes" xml:space="preserve">
          <source>Sets flags for how the &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt; control&lt;/a&gt;&lt;/code&gt; driver entry function will return data to the port owner process. (The &lt;code&gt;control&lt;/code&gt; function is called from &lt;code&gt;&lt;a href=&quot;erlang#port_control-3&quot;&gt; erlang:port_control/3&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt; control&lt;/a&gt;&lt;/code&gt; 드라이버 입력 기능이 포트 소유자 프로세스에 데이터를 반환 하는 방법에 대한 플래그를 설정 합니다. ( &lt;code&gt;control&lt;/code&gt; 함수는 &lt;code&gt;&lt;a href=&quot;erlang#port_control-3&quot;&gt; erlang:port_control/3&lt;/a&gt;&lt;/code&gt; 에서 호출됩니다 .)</target>
        </trans-unit>
        <trans-unit id="7f9596847477de68fb61cd31ce6754f1d1d487b6" translate="yes" xml:space="preserve">
          <source>Sets flags for how the &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; driver entry function will return data to the port owner process. (The &lt;code&gt;control&lt;/code&gt; function is called from &lt;code&gt;erlang:port_control/3&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; 드라이버 입력 기능이 데이터를 포트 소유자 프로세스로 리턴 하는 방법에 대한 플래그를 설정 합니다. ( &lt;code&gt;control&lt;/code&gt; 기능은 &lt;code&gt;erlang:port_control/3&lt;/code&gt; 에서 호출됩니다 .)</target>
        </trans-unit>
        <trans-unit id="557630be3374a84ea5bc1ff008a6dce65119c3ef" translate="yes" xml:space="preserve">
          <source>Sets how many call frames are to be fetched when inspecting the call stack. Does not affect other Attach Process windows.</source>
          <target state="translated">호출 스택을 검사 할 때 페치 할 호출 프레임 수를 설정합니다. 다른 첨부 프로세스 창에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="43a639918218c5c3e261631ffa16e882d8c1f703" translate="yes" xml:space="preserve">
          <source>Sets how many call frames to be fetched when inspecting the call stack from the Attach Process window. Does not affect existing Attach Process windows.</source>
          <target state="translated">첨부 프로세스 창에서 호출 스택을 검사 할 때 페치 할 호출 프레임 수를 설정합니다. 기존 첨부 프로세스 창에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b55fa43db9072680896babe3757d7a3bb1da846d" translate="yes" xml:space="preserve">
          <source>Sets how to save call frames in the stack, see &lt;code&gt;&lt;a href=&quot;int#stack_trace-0&quot;&gt;int:stack_trace/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 콜 프레임을 저장하는 방법을 설정합니다 ( &lt;code&gt;&lt;a href=&quot;int#stack_trace-0&quot;&gt;int:stack_trace/1&lt;/a&gt;&lt;/code&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="c0cec0ea0baa490d705d421e9bab395f447f4506" translate="yes" xml:space="preserve">
          <source>Sets limits that will be used for controlling the busy state of the port message queue.</source>
          <target state="translated">포트 메시지 대기열의 사용 중 상태를 제어하는 ​​데 사용할 제한을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0c5f7e245c16a1a592f8d0c7eaa639013a0ad145" translate="yes" xml:space="preserve">
          <source>Sets limits that will be used for controlling the busy state of the port.</source>
          <target state="translated">포트의 사용 중 상태를 제어하는 ​​데 사용할 제한을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ee934fe8c08a4614f83600d30848c99d1315fa93" translate="yes" xml:space="preserve">
          <source>Sets module log level for the given modules. Equivalent to calling</source>
          <target state="translated">주어진 모듈에 대한 모듈 로그 레벨을 설정합니다. 부름에 해당</target>
        </trans-unit>
        <trans-unit id="7b334159a61dd92e365ecad762f28fd3d37d4da3" translate="yes" xml:space="preserve">
          <source>Sets of Unicode characters are defined as belonging to certain scripts. A character from one of these sets can be matched using a script name, for example:</source>
          <target state="translated">유니 코드 문자 집합은 특정 스크립트에 속하는 것으로 정의됩니다. 이러한 세트 중 하나의 문자는 스크립트 이름을 사용하여 일치시킬 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="842480b04476339cdf8614f6453996b05005a349" translate="yes" xml:space="preserve">
          <source>Sets of test cases, called test case groups, can also be defined. A test case group can have execution properties associated with it. Execution properties specify if the test cases in the group are to be executed in random order, in parallel, or in sequence, and if the execution of the group is to be repeated. Test case groups can also be nested (that is, a group can, besides test cases, contain subgroups).</source>
          <target state="translated">테스트 케이스 그룹이라고하는 테스트 케이스 세트도 정의 할 수 있습니다. 테스트 케이스 그룹은 연관된 실행 특성을 가질 수 있습니다. 실행 속성은 그룹의 테스트 케이스가 무작위 순서, 병렬 또는 순서대로 실행되는지, 그룹 실행이 반복되는지 여부를 지정합니다. 테스트 케이스 그룹은 중첩 될 수도 있습니다 (즉, 그룹은 테스트 케이스 외에 하위 그룹을 포함 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="5d0da6d96de7e6be80588b11eea7a1ce862b4c3e" translate="yes" xml:space="preserve">
          <source>Sets one or more options for a socket.</source>
          <target state="translated">소켓에 대한 하나 이상의 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7d0f9778ea14e46d4dc23c64c0a9cf53af4c6ca7" translate="yes" xml:space="preserve">
          <source>Sets options according to &lt;code&gt;Options&lt;/code&gt; for socket &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">socket &lt;code&gt;Socket&lt;/code&gt; 옵션에 따라 &lt;code&gt;Options&lt;/code&gt; 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="392bdc2a479d02e92c95f7a72e8d3f92f49730d2" translate="yes" xml:space="preserve">
          <source>Sets options according to &lt;code&gt;Options&lt;/code&gt; for socket &lt;code&gt;SslSocket&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; for socket &lt;code&gt;SslSocket&lt;/code&gt; 에 따라 옵션 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="01bcb72c72449c33f6503140032c6f455f96e4e9" translate="yes" xml:space="preserve">
          <source>Sets options to be used for subsequent requests.</source>
          <target state="translated">후속 요청에 사용할 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7a4449503a9d9395375abbaa4d1c05c6bf1b2ef0" translate="yes" xml:space="preserve">
          <source>Sets or clears flag &lt;code&gt;sensitive&lt;/code&gt; for the current process. When a process has been marked as sensitive by calling &lt;code&gt;process_flag(sensitive, true)&lt;/code&gt;, features in the runtime system that can be used for examining the data or inner working of the process are silently disabled.</source>
          <target state="translated">현재 프로세스에 &lt;code&gt;sensitive&lt;/code&gt; 플래그를 설정하거나 지 웁니다 . &lt;code&gt;process_flag(sensitive, true)&lt;/code&gt; 를 호출하여 프로세스가 민감한 것으로 표시 되면 런타임 시스템에서 데이터를 검사하거나 프로세스 내부 작업을 수행하는 데 사용할 수있는 기능이 자동으로 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="94f77b8a941c5bce3024a5454d16f36a5c3b6b03" translate="yes" xml:space="preserve">
          <source>Sets port in &lt;code&gt;command&lt;/code&gt; mode.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 모드 에서 포트를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="5fb048f96bac21957c754b644e5dfe6157346204" translate="yes" xml:space="preserve">
          <source>Sets port in &lt;code&gt;data&lt;/code&gt; mode.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 모드 에서 포트를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="eae4ef4f56e53748ffd6d502fdfc94fe01735c0e" translate="yes" xml:space="preserve">
          <source>Sets port in &lt;code&gt;intermediate&lt;/code&gt; mode.</source>
          <target state="translated">포트를 &lt;code&gt;intermediate&lt;/code&gt; 모드로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c2bd8703f20f2ab0ab7e1b460035c994a52db76f" translate="yes" xml:space="preserve">
          <source>Sets pretty printing of lists to &lt;code&gt;Strings&lt;/code&gt;. The previous value of the flag is returned.</source>
          <target state="translated">리스트의 예쁜 인쇄를 &lt;code&gt;Strings&lt;/code&gt; 로 설정 합니다. 플래그의 이전 값이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7f63ff7fab40d5dbc3b262e9d79c1e43b4cf8ef7" translate="yes" xml:space="preserve">
          <source>Sets scheduler bind type.</source>
          <target state="translated">스케줄러 바인드 유형을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="789ba565310b9718ceeaeb577ba32e08910a047d" translate="yes" xml:space="preserve">
          <source>Sets scheduler busy wait threshold. Defaults to &lt;code&gt;medium&lt;/code&gt;. The threshold determines how long schedulers are to busy wait when running out of work before going to sleep.</source>
          <target state="translated">스케줄러 사용 중 대기 임계 값을 설정합니다. 기본값은 &lt;code&gt;medium&lt;/code&gt; 입니다. 임계 값은 스케줄러가 휴면 상태가되기 전에 작업이 부족할 때 대기하는 시간을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="2a12e502ac7e03517055fac2216ca745fb21e314" translate="yes" xml:space="preserve">
          <source>Sets scheduler hint for port parallelism. If set to &lt;code&gt;true&lt;/code&gt;, the virtual machine schedules port tasks; when doing so, it improves parallelism in the system. If set to &lt;code&gt;false&lt;/code&gt;, the virtual machine tries to perform port tasks immediately, improving latency at the expense of parallelism. The default can be set at system startup by passing command-line argument &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">포트 병렬 처리에 대한 스케줄러 힌트를 설정합니다. &lt;code&gt;true&lt;/code&gt; 로 설정 되면 가상 머신은 포트 태스크를 스케줄합니다. 그렇게 할 때 시스템의 병렬 처리가 향상됩니다. &lt;code&gt;false&lt;/code&gt; 로 설정 되면 가상 머신은 포트 태스크를 즉시 수행하려고 시도하여 병렬 처리를 대신하여 대기 시간을 개선합니다. 명령 행 인수 &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;erl(1)&lt;/code&gt; 에 전달하여 시스템 시작시 기본값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="705443dd75f41eddccabe316679e591b90ecea21" translate="yes" xml:space="preserve">
          <source>Sets scheduler wake cleanup threshold. Defaults to &lt;code&gt;medium&lt;/code&gt;. Controls how eager schedulers are to be requesting wakeup because of certain cleanup operations. When a lazy setting is used, more outstanding cleanup operations can be left undone while a scheduler is idling. When an eager setting is used, schedulers are more frequently woken, potentially increasing CPU-utilization.</source>
          <target state="translated">스케줄러 웨이크 업 임계 값을 설정합니다. 기본값은 &lt;code&gt;medium&lt;/code&gt; 입니다. 특정 정리 작업으로 인해 열성적인 스케줄러가 웨이크 업을 요청하는 방법을 제어합니다. 게으른 설정을 사용하면 스케줄러가 유휴 상태 인 동안 더 뛰어난 정리 작업을 취소 할 수 있습니다. 열성적인 설정을 사용하면 스케줄러가 더 자주 깨어나 CPU 사용률이 높아질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d38290b47732b181fb3fc7e5c1c52cfada68e3f" translate="yes" xml:space="preserve">
          <source>Sets scheduler wakeup strategy. Default strategy changed in ERTS 5.10 (Erlang/OTP R16A). This strategy was known as &lt;code&gt;proposal&lt;/code&gt; in Erlang/OTP R15. The &lt;code&gt;legacy&lt;/code&gt; strategy was used as default from R13 up to and including R15.</source>
          <target state="translated">스케줄러 웨이크 업 전략을 설정합니다. 기본 전략은 ERTS 5.10 (Erlang / OTP R16A)에서 변경되었습니다. 이 전략은 Erlang / OTP R15에서 &lt;code&gt;proposal&lt;/code&gt; 로 알려져 있습니다. &lt;code&gt;legacy&lt;/code&gt; 전략 및 R15를 포함한 R13에서 기본값으로 사용되었다.</target>
        </trans-unit>
        <trans-unit id="9c5e094555066696f08aabf4d60ea661e9639b6c" translate="yes" xml:space="preserve">
          <source>Sets scheduler wakeup threshold. Defaults to &lt;code&gt;medium&lt;/code&gt;. The threshold determines when to wake up sleeping schedulers when more work than can be handled by currently awake schedulers exists. A low threshold causes earlier wakeups, and a high threshold causes later wakeups. Early wakeups distribute work over multiple schedulers faster, but work does more easily bounce between schedulers.</source>
          <target state="translated">스케줄러 웨이크 업 임계 값을 설정합니다. 기본값은 &lt;code&gt;medium&lt;/code&gt; 입니다. 임계 값은 현재 깨우기 스케줄러가 처리 할 수있는 것보다 많은 작업이 존재할 때 수면 스케줄러를 깨울시기를 결정합니다. 임계 값이 낮 으면 초기 웨이크 업이 발생하고 임계 값이 높으면 나중에 웨이크 업이 발생합니다. 조기 웨이크 업은 여러 스케줄러에 작업을 더 빠르게 분배하지만 스케줄러간에 작업이 더 쉽게 튀어 오릅니다.</target>
        </trans-unit>
        <trans-unit id="b6bccfdea98e85199778d64fc0291952e4ec723d" translate="yes" xml:space="preserve">
          <source>Sets scheduler-forced wakeup interval. All run queues are scanned each &lt;code&gt;Interval&lt;/code&gt; milliseconds. While there are sleeping schedulers in the system, one scheduler is woken for each non-empty run queue found. &lt;code&gt;Interval&lt;/code&gt; default to &lt;code&gt;0&lt;/code&gt;, meaning this feature is disabled.</source>
          <target state="translated">스케줄러 강제 웨이크 업 간격을 설정합니다. 모든 실행 큐는 각 &lt;code&gt;Interval&lt;/code&gt; 밀리 초) 마다 스캔됩니다 . 시스템에 휴면 스케줄러가있는 동안 비어 있지 않은 각 실행 큐마다 하나의 스케줄러가 깨어납니다. &lt;code&gt;Interval&lt;/code&gt; 기본값은 &lt;code&gt;0&lt;/code&gt; 이며이 기능은 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="110adc5f2f2d49b4b94105f09d26db5cb890c642" translate="yes" xml:space="preserve">
          <source>Sets super carrier size (in MB). Defaults to &lt;code&gt;0&lt;/code&gt;, that is, the super carrier is by default disabled. The super carrier is a large continuous area in the virtual address space. &lt;code&gt;mseg_alloc&lt;/code&gt; always tries to create new carriers in the super carrier if it exists. Notice that the &lt;code&gt;alloc_util&lt;/code&gt; framework can create &lt;code&gt;sys_alloc&lt;/code&gt; carriers. For more information, see &lt;code&gt;&lt;a href=&quot;#MMsco&quot;&gt;+MMsco&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">수퍼 캐리어 크기 (MB)를 설정합니다. 기본적으로 &lt;code&gt;0&lt;/code&gt; 으로 , 즉 수퍼 캐리어는 기본적으로 비활성화되어 있습니다. 슈퍼 캐리어는 가상 주소 공간에서 큰 연속 영역입니다. &lt;code&gt;mseg_alloc&lt;/code&gt; 은 항상 슈퍼 캐리어에 새 캐리어를 만들려고 시도합니다. 것을 알 수 &lt;code&gt;alloc_util&lt;/code&gt; 의 프레임 워크를 만들 수 있습니다 &lt;code&gt;sys_alloc&lt;/code&gt; 의 사업자를. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#MMsco&quot;&gt;+MMsco&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4af175291c0524942dcce2c373e3303753be98c5" translate="yes" xml:space="preserve">
          <source>Sets system flag &lt;code&gt;fullsweep_after&lt;/code&gt;. &lt;code&gt;Number&lt;/code&gt; is a non-negative integer indicating how many times generational garbage collections can be done without forcing a fullsweep collection. The value applies to new processes, while processes already running are not affected.</source>
          <target state="translated">시스템 플래그 &lt;code&gt;fullsweep_after&lt;/code&gt; 를 설정합니다 . &lt;code&gt;Number&lt;/code&gt; 는 풀 스윕 콜렉션을 강제하지 않고 세대 가비지 콜렉션을 몇 번 수행 할 수 있는지를 나타내는 음이 아닌 정수입니다. 값은 새 프로세스에 적용되지만 이미 실행중인 프로세스는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4bd8008392defeaba1e689998767b13e64127d74" translate="yes" xml:space="preserve">
          <source>Sets system flags for &lt;code&gt;erts_alloc(3)&lt;/code&gt;. &lt;code&gt;Alloc&lt;/code&gt; is the allocator to affect, for example &lt;code&gt;binary_alloc&lt;/code&gt;. &lt;code&gt;F&lt;/code&gt; is the flag to change and &lt;code&gt;V&lt;/code&gt; is the new value.</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; 대한 시스템 플래그를 설정합니다 . &lt;code&gt;Alloc&lt;/code&gt; 은 영향을주는 할당 자입니다 (예 : &lt;code&gt;binary_alloc&lt;/code&gt; ) . &lt;code&gt;F&lt;/code&gt; 는 변경할 플래그이고 &lt;code&gt;V&lt;/code&gt; 는 새로운 값입니다.</target>
        </trans-unit>
        <trans-unit id="fe541c9550f647980c41d36a62c1b41fc3300c1a" translate="yes" xml:space="preserve">
          <source>Sets system profiler options. &lt;code&gt;ProfilerPid&lt;/code&gt; is a local process identifier (pid) or port receiving profiling messages. The receiver is excluded from all profiling. The second argument is a list of profiling options:</source>
          <target state="translated">시스템 프로파일 러 옵션을 설정합니다. &lt;code&gt;ProfilerPid&lt;/code&gt; 는 로컬 프로세스 식별자 (pid) 또는 포트 수신 프로파일 링 메시지입니다. 수신자는 모든 프로파일 링에서 제외됩니다. 두 번째 인수는 프로파일 링 옵션 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a72bd2e35bed397dab160cd3f2611e9fe2f44002" translate="yes" xml:space="preserve">
          <source>Sets table options. The only allowed option to be set after the table has been created is &lt;code&gt;&lt;a href=&quot;#heir&quot;&gt;heir&lt;/a&gt;&lt;/code&gt;. The calling process must be the table owner.</source>
          <target state="translated">테이블 옵션을 설정합니다. 테이블이 작성된 후 설정 될 수있는 유일한 옵션은 &lt;code&gt;&lt;a href=&quot;#heir&quot;&gt;heir&lt;/a&gt;&lt;/code&gt; 입니다. 호출 프로세스는 테이블 소유자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8cb4ca231a49ec941deeee872d0b32eeae11d280" translate="yes" xml:space="preserve">
          <source>Sets tcp socket options on the tcp-socket below an ssh connection.</source>
          <target state="translated">ssh 연결 아래의 tcp-socket에 tcp 소켓 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2e1370d09ddeefa5429f567d1d2021ca12a30888" translate="yes" xml:space="preserve">
          <source>Sets the &quot;progress&quot; of the initialization program. The &lt;code&gt;init:get_status/0&lt;/code&gt; function returns the current value of the progress, which is &lt;code&gt;{InternalStatus,Term}&lt;/code&gt;.</source>
          <target state="translated">초기화 프로그램의 &quot;진행&quot;을 설정합니다. &lt;code&gt;init:get_status/0&lt;/code&gt; 함수는 진행의 현재 값을 반환 &lt;code&gt;{InternalStatus,Term}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea07f73f85af4b08faea28cdb71c399a30b19906" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#SOCKET_PATH&quot;&gt;socket path&lt;/a&gt;&lt;/code&gt; for the communication with the agent.</source>
          <target state="translated">에이전트와의 통신을위한 &lt;code&gt;&lt;a href=&quot;#SOCKET_PATH&quot;&gt;socket path&lt;/a&gt;&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="235a9d06be54f8c431dccf670cee249de7ac0ff6" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;system directory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;system directory&lt;/a&gt;&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9873d2692ff04b3f7f2626cda6f2d0b2f60cb79e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt; dynamically by evaluating the &lt;code&gt;user2dir&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;user2dir&lt;/code&gt; 함수 를 평가 하여 &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt; 동적으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3af75c909f441a81a64f234cd094c9f5264d2d33" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9deadafcb636ce2300764e73764281e9f79e92e7" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;. If the given path is a list of directories, the set of &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt; is determined by choosing the first module encountered while traversing the directories in the given order, for those modules that occur in more than one directory. By default, the library path is an empty list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; 설정합니다 . 주어진 경로가 디렉토리 목록 인 경우, &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt; 세트는 둘 이상의 디렉토리에서 발생하는 모듈에 대해 주어진 순서로 디렉토리를 순회하는 동안 발견 된 첫 번째 모듈을 선택하여 결정됩니다. 기본적으로 라이브러리 경로는 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="392c93390d535f1df2f37abb2c2ee7a55d9c3ff5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt; transition_option() &lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; for this &lt;strong&gt;state transition&lt;/strong&gt;. This action is ignored when returned from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or given to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;, as there is no event to postpone in those cases.</source>
          <target state="translated">이 &lt;strong&gt;상태 전환에&lt;/strong&gt; 대한 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt; transition_option() &lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; 을 설정합니다 . 이 작업은 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; 에서 반환 되거나 &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt; 에 주어질 때 무시됩니다 . 이러한 경우 연기 할 이벤트가 없기 때문입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44067ee3e248c621eea2461d3dc06a7c49aedd2e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;Time&lt;/code&gt; with &lt;code&gt;EventContent&lt;/code&gt; and time-out options &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EventContent&lt;/code&gt; 및 time-out 옵션 &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; 를 사용 하여 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;Time&lt;/code&gt; 으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="53a8c68391586d0ac6547d160d8a110c5dbc28b3" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic_timeout()&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;Time&lt;/code&gt; for &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;EventContent&lt;/code&gt; and time-out options &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EventContent&lt;/code&gt; 및 time-out 옵션 &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; 를 사용 하여 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic_timeout()&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;Time&lt;/code&gt; for &lt;code&gt;Name&lt;/code&gt; 으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="1871760915e8b6d1e57309c31b3a47e972ae4be9" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; for this &lt;strong&gt;state transition&lt;/strong&gt;.</source>
          <target state="translated">이 &lt;strong&gt;상태 전환에&lt;/strong&gt; 대해 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; 를 설정합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30684f7d4981c9e1a62530e17bf883b5eb02a6ff" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; for this state transition.</source>
          <target state="translated">이 상태 천이 의 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="83a0223739bff17a151a7c16afd90099930bc8b5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; for this state transition. This action is ignored when returned from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or given to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;, as there is no event to postpone in those cases.</source>
          <target state="translated">이 상태 천이에 대한 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; 을 설정합니다 . 이 경우 연기 할 이벤트가 없으므로 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; 에서 리턴 되거나 &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt; 에 제공된 경우이 조치는 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="247d0b30de1256443cd386fe363d5272f57f80df" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-state_timeout&quot;&gt;state_timeout()&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;Time&lt;/code&gt; with &lt;code&gt;EventContent&lt;/code&gt; and time-out options &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EventContent&lt;/code&gt; 및 time-out 옵션 &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; 를 사용 하여 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-state_timeout&quot;&gt;state_timeout()&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;Time&lt;/code&gt; 으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="53d52ae60abfaf725011b6848f52ce6020c1f710" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;SO_PRIORITY&lt;/code&gt; socket level option on platforms where this is implemented. The behavior and allowed range varies between different systems. The option is ignored on platforms where it is not implemented. Use with caution.</source>
          <target state="translated">이것이 구현되는 플랫폼에서 &lt;code&gt;SO_PRIORITY&lt;/code&gt; 소켓 레벨 옵션을 설정합니다 . 동작 및 허용 범위는 시스템마다 다릅니다. 이 옵션은 구현되지 않은 플랫폼에서는 무시됩니다. 주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3de5e206f62db5910dddeb7452ac934321d4f439" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;max_heap_size&lt;/code&gt; process flag. The default &lt;code&gt;max_heap_size&lt;/code&gt; is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, Size)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_heap_size&lt;/code&gt; 프로세스 플래그를 설정합니다 . 기본 &lt;code&gt;max_heap_size&lt;/code&gt; 는 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 인수 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; 에 의해 결정됩니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, Size)&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f4305a29ea9e75c952650e9de33069fe615b6f1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;max_heap_size&lt;/code&gt; process flag. The default &lt;code&gt;max_heap_size&lt;/code&gt; is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size,Size)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_heap_size&lt;/code&gt; 프로세스 플래그를 설정합니다 . 기본 &lt;code&gt;max_heap_size&lt;/code&gt; 는 &lt;code&gt;erl(1)&lt;/code&gt; 명령 행 인수 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; 에 의해 결정됩니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size,Size)&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91db435ec30a72142779bcdf20ec92f816db57aa" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;os_pid&lt;/code&gt; seen when doing &lt;code&gt;&lt;a href=&quot;erlang#port_info-2&quot;&gt; erlang:port_info/2&lt;/a&gt;&lt;/code&gt; on this port.</source>
          <target state="translated">이 포트에서 &lt;code&gt;&lt;a href=&quot;erlang#port_info-2&quot;&gt; erlang:port_info/2&lt;/a&gt;&lt;/code&gt; 를 수행 할 때 표시 되는 &lt;code&gt;os_pid&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="e3c896f2b3f505d02fa9f498fa10868ea66308f5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;os_pid&lt;/code&gt; seen when doing &lt;code&gt;erlang:port_info/2&lt;/code&gt; on this port.</source>
          <target state="translated">이 포트에서 &lt;code&gt;erlang:port_info/2&lt;/code&gt; 를 수행 할 때 표시 되는 &lt;code&gt;os_pid&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="62c1677618763bf038d6e46228bd8e5ee838115f" translate="yes" xml:space="preserve">
          <source>Sets the EDNS version that &lt;code&gt;inet_res(3)&lt;/code&gt; will use. The only allowed version is zero. Defaults to &lt;code&gt;false&lt;/code&gt;, which means not to use EDNS.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; 가 사용할 EDNS 버전을 설정합니다 . 허용되는 유일한 버전은 0입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 이며 EDNS를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="22ef88e548dffe2695e83197ffb9b451eda0527a" translate="yes" xml:space="preserve">
          <source>Sets the SFTP root directory. Then the user cannot see any files above this root. If, for example, the root directory is set to &lt;code&gt;/tmp&lt;/code&gt;, then the user sees this directory as &lt;code&gt;/&lt;/code&gt;. If the user then writes &lt;code&gt;cd /etc&lt;/code&gt;, the user moves to &lt;code&gt;/tmp/etc&lt;/code&gt;.</source>
          <target state="translated">SFTP 루트 디렉토리를 설정합니다. 그러면 사용자는이 루트 위에있는 파일을 볼 수 없습니다. 예를 들어 루트 디렉토리가 &lt;code&gt;/tmp&lt;/code&gt; 로 설정된 경우 사용자는이 디렉토리를 &lt;code&gt;/&lt;/code&gt; 로 간주합니다 . 사용자가 &lt;code&gt;cd /etc&lt;/code&gt; 를 쓰면 사용자는 &lt;code&gt;/tmp/etc&lt;/code&gt; 로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="8877971d9d703f1e711372a08825403316d7e95f" translate="yes" xml:space="preserve">
          <source>Sets the SFTP version to use. Defaults to 5. Version 6 is under development and limited.</source>
          <target state="translated">사용할 SFTP 버전을 설정합니다. 기본값은 5입니다. 버전 6은 개발 중이며 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ccfb70351c6433354bbcf378bd99cdbed6dfce6" translate="yes" xml:space="preserve">
          <source>Sets the Type-Of-Service field on the IP datagrams that are sent, to the specified value. This effectively determines a prioritization policy for the outbound packets. The acceptable values are system-dependent.</source>
          <target state="translated">전송 된 IP 데이터 그램에서 서비스 유형 필드를 지정된 값으로 설정합니다. 이것은 아웃 바운드 패킷에 대한 우선 순위 정책을 효과적으로 결정합니다. 허용되는 값은 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="eab85e947ba482e18e7bb4919535fd42a5266576" translate="yes" xml:space="preserve">
          <source>Sets the account for an operation, if needed.</source>
          <target state="translated">필요한 경우 작업 계정을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d42e58ba97e4277ac0d4115ed6fbf8e9c986c9b0" translate="yes" xml:space="preserve">
          <source>Sets the allowed UDP payload size &lt;code&gt;inet_res(3)&lt;/code&gt; will advertise in EDNS queries. Also sets the limit when the DNS query will be deemed too large for UDP forcing a TCP query instead; this is not entirely correct, as the advertised UDP payload size of the individual nameserver is what is to be used, but this simple strategy will do until a more intelligent (probing, caching) algorithm needs to be implemented. Default to 1280, which stems from the standard Ethernet MTU size.</source>
          <target state="translated">허용 된 UDP 페이로드 크기를 설정합니다. &lt;code&gt;inet_res(3)&lt;/code&gt; 는 EDNS 쿼리에서 알립니다. UDP 대신 TCP 쿼리를 강제 실행하기에 DNS 쿼리가 너무 큰 것으로 간주 될 때의 한계도 설정합니다. 개별 네임 서버의 알려진 UDP 페이로드 크기가 사용될 것이기 때문에 이것은 완전히 정확하지는 않지만이 간단한 전략은보다 지능적인 (프로빙, 캐싱) 알고리즘을 구현해야 할 때까지 수행됩니다. 기본값은 1280이며 표준 이더넷 MTU 크기에서 비롯됩니다.</target>
        </trans-unit>
        <trans-unit id="ccd95df1aed0cdb51d1320cf718c03497224dc0a" translate="yes" xml:space="preserve">
          <source>Sets the application configuration parameter &lt;code&gt;Par&lt;/code&gt; to the value &lt;code&gt;Val&lt;/code&gt; for the application &lt;code&gt;Application&lt;/code&gt;; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt; application(3)&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 구성 매개 변수 &lt;code&gt;Par&lt;/code&gt; 를 응용 &lt;code&gt;Application&lt;/code&gt; 대한 &lt;code&gt;Val&lt;/code&gt; 값으로 설정합니다 . &lt;code&gt;app(4)&lt;/code&gt; 및 &lt;code&gt; application(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6577d9bea2036a30156c3c5527dd06a4c86be02c" translate="yes" xml:space="preserve">
          <source>Sets the application configuration parameter &lt;code&gt;Par&lt;/code&gt; to the value &lt;code&gt;Val&lt;/code&gt; for the application &lt;code&gt;Application&lt;/code&gt;; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt;application(3)&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 구성 매개 변수 &lt;code&gt;Par&lt;/code&gt; 를 응용 프로그램 &lt;code&gt;Application&lt;/code&gt; 의 값 &lt;code&gt;Val&lt;/code&gt; 으로 설정합니다 . &lt;code&gt;app(4)&lt;/code&gt; 및 &lt;code&gt;application(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7196246ff7c882e793640c66749d164bdc6f82d" translate="yes" xml:space="preserve">
          <source>Sets the areas to be visible in an &lt;code&gt;&lt;a href=&quot;#attach&quot;&gt;Attach Process window&lt;/a&gt;&lt;/code&gt;. Does not affect existing Attach Process windows.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#attach&quot;&gt;Attach Process window&lt;/a&gt;&lt;/code&gt; 표시 할 영역을 설정합니다 . 기존 첨부 프로세스 창에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cbb9c3fb8f1ce99f109e9887fbbdf78879940dca" translate="yes" xml:space="preserve">
          <source>Sets the attributes of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Attributes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 속성 을 &lt;code&gt;Attributes&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="84596578fd723b61daba1bf34b66cca849fbe4b2" translate="yes" xml:space="preserve">
          <source>Sets the code path to the list of directories &lt;code&gt;Path&lt;/code&gt;.</source>
          <target state="translated">코드 경로를 &lt;code&gt;Path&lt;/code&gt; 디렉토리 목록으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9b5886c8b67f42b23e753322dc78b32aed10fd89" translate="yes" xml:space="preserve">
          <source>Sets the compatibility mode.</source>
          <target state="translated">호환성 모드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="944d785aef67c4495fac86e50f30a32b1b411b9c" translate="yes" xml:space="preserve">
          <source>Sets the conditional test of the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Function&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; &lt;code&gt;Line&lt;/code&gt; 에서 중단 점의 조건부 테스트 를 &lt;code&gt;Function&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3903c607ad295badc26503d3ad81d9c44d7f68c2" translate="yes" xml:space="preserve">
          <source>Sets the conditional test of the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Function&lt;/code&gt;. The function must fulfill the requirements specified in section &lt;code&gt;&lt;a href=&quot;#int_breakpoints&quot;&gt;Breakpoints&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; &lt;code&gt;Line&lt;/code&gt; 에서 중단 점의 조건부 테스트 를 &lt;code&gt;Function&lt;/code&gt; 합니다. 이 기능은 &lt;code&gt;&lt;a href=&quot;#int_breakpoints&quot;&gt;Breakpoints&lt;/a&gt;&lt;/code&gt; 섹션에 지정된 요구 사항을 충족해야합니다 .</target>
        </trans-unit>
        <trans-unit id="37b9a38d00eb4a2aeca355414b7bbd933806e63f" translate="yes" xml:space="preserve">
          <source>Sets the configuration &lt;code&gt;Config&lt;/code&gt; for multiple applications. It is equivalent to calling &lt;code&gt;set_env/4&lt;/code&gt; on each application individually, except it is more efficient. The given &lt;code&gt;Config&lt;/code&gt; is validated before the configuration is set.</source>
          <target state="translated">여러 응용 프로그램에 대한 구성 &lt;code&gt;Config&lt;/code&gt; 을 설정합니다 . 더 효율적이라는 점을 제외하면 각 응용 프로그램에서 &lt;code&gt;set_env/4&lt;/code&gt; 를 개별적 으로 호출하는 것과 같습니다 . 주어진 &lt;code&gt;Config&lt;/code&gt; 은 구성이 설정되기 전에 유효성이 검사됩니다.</target>
        </trans-unit>
        <trans-unit id="c4061c32d14920b9566bcc250e2af955175c928c" translate="yes" xml:space="preserve">
          <source>Sets the current working directory of the file server to &lt;code&gt;Dir&lt;/code&gt;. Returns &lt;code&gt;ok&lt;/code&gt; if successful.</source>
          <target state="translated">파일 서버의 현재 작업 디렉토리를 &lt;code&gt;Dir&lt;/code&gt; 로 설정 합니다. 반환 &lt;code&gt;ok&lt;/code&gt; 성공하는 경우.</target>
        </trans-unit>
        <trans-unit id="2f682600156d1ac8d49837d1b919d3416024f3f6" translate="yes" xml:space="preserve">
          <source>Sets the default binary virtual heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">프로세스의 기본 이진 가상 힙 크기를 &lt;code&gt;Size&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="8788ba87541bacd719f0d84f7dac6ea0f39a7fb2" translate="yes" xml:space="preserve">
          <source>Sets the default heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">프로세스의 기본 힙 크기를 &lt;code&gt;Size&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="0a19118a27143ada79a588568525e84826266c39" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;, which means that no maximum heap size is used. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스의 기본 최대 힙 크기를 &lt;code&gt;Size&lt;/code&gt; 크기로 설정 합니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 이며, 이는 최대 힙 크기가 사용되지 않음을 의미합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60007f967f2cc669c29b946459ed60410b3e6ca1" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;, which means that no maximum heap size is used. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스의 기본 최대 힙 크기를 &lt;code&gt;Size&lt;/code&gt; 로 설정 합니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 이며 최대 힙 크기가 사용되지 않음을 의미합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="158d0712604e2633e7fa7fa6ddb26976b391261c" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size settings for processes. The size is specified in words. The new &lt;code&gt;max_heap_size&lt;/code&gt; effects only processes spawned efter the change has been made. &lt;code&gt;max_heap_size&lt;/code&gt; can be set for individual processes using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스에 대한 기본 최대 힙 크기 설정을 설정합니다. 크기는 단어로 지정됩니다. 새로운 &lt;code&gt;max_heap_size&lt;/code&gt; 효과는 변경 후 생성 된 프로세스에만 적용됩니다. &lt;code&gt;max_heap_size&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 개별 프로세스에 대해 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60a389437f3f73af86efbff82f57301b8ab688e3" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size settings for processes. The size is specified in words. The new &lt;code&gt;max_heap_size&lt;/code&gt; effects only processes spawned efter the change has been made. &lt;code&gt;max_heap_size&lt;/code&gt; can be set for individual processes using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스의 기본 최대 힙 크기 설정을 설정합니다. 크기는 단어로 지정됩니다. 새로운 &lt;code&gt;max_heap_size&lt;/code&gt; 효과는 변경된 후에 만 ​​생성됩니다. &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 개별 프로세스에 대해 &lt;code&gt;max_heap_size&lt;/code&gt; 를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2bc4e73c5ac7544d6780c8fd56c8b96b851f60a" translate="yes" xml:space="preserve">
          <source>Sets the default minimum binary virtual heap size for processes. The size is specified in words. The new &lt;code&gt;min_bin_vhheap_size&lt;/code&gt; effects only processes spawned after the change of &lt;code&gt;min_bin_vheap_size&lt;/code&gt; has been made. &lt;code&gt;min_bin_vheap_size&lt;/code&gt; can be set for individual processes by using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스의 기본 최소 이진 가상 힙 크기를 설정합니다. 크기는 단어로 지정됩니다. 새로운 &lt;code&gt;min_bin_vhheap_size&lt;/code&gt; 효과는 &lt;code&gt;min_bin_vheap_size&lt;/code&gt; 가 변경된 후에 만 ​​생성 된 프로세스 입니다. &lt;code&gt;min_bin_vheap_size&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 개별 프로세스에 대해 min_bin_vheap_size 를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98113d028a855f2fc4c1c43b662b1836412ae4a8" translate="yes" xml:space="preserve">
          <source>Sets the default minimum heap size for processes. The size is specified in words. The new &lt;code&gt;min_heap_size&lt;/code&gt; effects only processes spawned after the change of &lt;code&gt;min_heap_size&lt;/code&gt; has been made. &lt;code&gt;min_heap_size&lt;/code&gt; can be set for individual processes by using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스의 기본 최소 힙 크기를 설정합니다. 크기는 단어로 지정됩니다. 새로운 &lt;code&gt;min_heap_size&lt;/code&gt; 효과는 &lt;code&gt;min_heap_size&lt;/code&gt; 가 변경된 후에 만 ​​생성 된 프로세스 입니다. &lt;code&gt;min_heap_size&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 개별 프로세스에 대해 min_heap_size 를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="628128c11e0eb3e2cfac2a2ee2d78d824488310a" translate="yes" xml:space="preserve">
          <source>Sets the default value for process flag &lt;code&gt;message_queue_data&lt;/code&gt;. Defaults to &lt;code&gt;on_heap&lt;/code&gt;. If &lt;code&gt;+hmqd&lt;/code&gt; is not passed, &lt;code&gt;on_heap&lt;/code&gt; will be the default. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스 플래그 &lt;code&gt;message_queue_data&lt;/code&gt; 의 기본값을 설정합니다 . 기본값은 &lt;code&gt;on_heap&lt;/code&gt; 입니다. 경우 &lt;code&gt;+hmqd&lt;/code&gt; 가 전달되지, &lt;code&gt;on_heap&lt;/code&gt; 는 기본값이됩니다. 자세한 정보는 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcfe1f8e6db4840d30e58fb942c0c004b2301a72" translate="yes" xml:space="preserve">
          <source>Sets the default value for process flag &lt;code&gt;message_queue_data&lt;/code&gt;. Defaults to &lt;code&gt;on_heap&lt;/code&gt;. If &lt;code&gt;+hmqd&lt;/code&gt; is not passed, &lt;code&gt;on_heap&lt;/code&gt; will be the default. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스 플래그 &lt;code&gt;message_queue_data&lt;/code&gt; 의 기본값을 설정합니다 . 기본값은 &lt;code&gt;on_heap&lt;/code&gt; 입니다. 경우 &lt;code&gt;+hmqd&lt;/code&gt; 가 전달되지, &lt;code&gt;on_heap&lt;/code&gt; 는 기본값이됩니다. 자세한 정보는 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7c2ea2b7700109a84493d49d1dc00bb82175dc5" translate="yes" xml:space="preserve">
          <source>Sets the default value for the array to &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">배열의 기본값을 &lt;code&gt;Value&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="dc9601c01c1c1e3069c8eaf3af9dd5940c97b57c" translate="yes" xml:space="preserve">
          <source>Sets the default value of one or more options. The options that can be set this way are:</source>
          <target state="translated">하나 이상의 옵션의 기본값을 설정합니다. 이 방법으로 설정할 수있는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f898d2913a3e851d5c7b70975dff3b539f8026a2" translate="yes" xml:space="preserve">
          <source>Sets the delayed node table garbage collection time (&lt;code&gt;&lt;a href=&quot;erlang#system_info_delayed_node_table_gc&quot;&gt;delayed_node_table_gc&lt;/a&gt;&lt;/code&gt;) in seconds. Valid values are either &lt;code&gt;infinity&lt;/code&gt; or an integer in the range 0-100000000. Defaults to 60.</source>
          <target state="translated">지연된 노드 테이블 가비지 콜렉션 시간 ( &lt;code&gt;&lt;a href=&quot;erlang#system_info_delayed_node_table_gc&quot;&gt;delayed_node_table_gc&lt;/a&gt;&lt;/code&gt; )을 초 단위로 설정합니다. 유효한 값은 &lt;code&gt;infinity&lt;/code&gt; 또는 0-100000000 범위의 정수입니다. 기본값은 60입니다.</target>
        </trans-unit>
        <trans-unit id="57d5edb58d125521e91d331fbf4ed477db24c7a9" translate="yes" xml:space="preserve">
          <source>Sets the distribution buffer busy limit (&lt;code&gt;&lt;a href=&quot;erlang#system_info_dist_buf_busy_limit&quot;&gt;dist_buf_busy_limit&lt;/a&gt;&lt;/code&gt;) in kilobytes. Valid range is 1-2097151. Defaults to 1024.</source>
          <target state="translated">분배 버퍼 사용 한계 ( &lt;code&gt;&lt;a href=&quot;erlang#system_info_dist_buf_busy_limit&quot;&gt;dist_buf_busy_limit&lt;/a&gt;&lt;/code&gt; )를 킬로바이트로 설정합니다. 유효한 범위는 1-2097151입니다. 기본값은 1024입니다.</target>
        </trans-unit>
        <trans-unit id="d50bdc36b528791e8b69abb70b67013aa7f2bd35" translate="yes" xml:space="preserve">
          <source>Sets the elements in &lt;code&gt;Cols&lt;/code&gt; to the row specified by &lt;code&gt;RowIndex&lt;/code&gt;. No checks are performed on the new values.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; 의 요소를 &lt;code&gt;RowIndex&lt;/code&gt; 로 지정된 행으로 설정합니다 . 새 값에 대해서는 점검이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc21daaad542079b18ac1ea07963d8433ef93a4a" translate="yes" xml:space="preserve">
          <source>Sets the events a debugged process is to be attached to automatically. Affects existing debugged processes.</source>
          <target state="translated">디버깅 된 프로세스를 자동으로 첨부 할 이벤트를 설정합니다. 기존의 디버깅 된 프로세스에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="41611ee00a14ab42ec3a3e885687ce728dd300a9" translate="yes" xml:space="preserve">
          <source>Sets the exception handling of the evaluator process. The previous exception handling is returned. The default (&lt;code&gt;false&lt;/code&gt;) is to kill the evaluator process when an exception occurs, which causes the shell to create a new evaluator process. When the exception handling is set to &lt;code&gt;true&lt;/code&gt;, the evaluator process lives on, which means that, for example, ports and ETS tables as well as processes linked to the evaluator process survive the exception.</source>
          <target state="translated">평가자 프로세스의 예외 처리를 설정합니다. 이전 예외 처리가 반환됩니다. 기본값 ( &lt;code&gt;false&lt;/code&gt; )은 예외가 발생할 때 평가 기 프로세스를 종료하여 셸이 새 평가 기 프로세스를 작성하도록하는 것입니다. 예외 처리가 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 평가 기 프로세스가 지속됩니다. 예를 들어, 평가 기 프로세스에 링크 된 프로세스뿐만 아니라 포트 및 ETS 테이블도 예외가 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="e77ac71b59fce1d6b574dd7f680d1f1e50a7a675" translate="yes" xml:space="preserve">
          <source>Sets the exception handling of the evaluator process. The previous exception handling is returned. The default (&lt;code&gt;false&lt;/code&gt;) is to kill the evaluator process when an exception occurs, which causes the shell to create a new evaluator process. When the exception handling is set to &lt;code&gt;true&lt;/code&gt;, the evaluator process lives on. This means, for example, that ports and ETS tables as well as processes linked to the evaluator process survive the exception.</source>
          <target state="translated">평가자 프로세스의 예외 처리를 설정합니다. 이전 예외 처리가 반환됩니다. 기본값 ( &lt;code&gt;false&lt;/code&gt; )은 예외가 발생할 때 평가 기 프로세스를 종료하여 쉘이 새 평가 기 프로세스를 작성하도록하는 것입니다. 예외 처리가 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 평가자 프로세스가 계속 작동합니다. 예를 들어, 평가자 프로세스에 링크 된 프로세스뿐만 아니라 포트 및 ETS 테이블도 예외가 지속됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="17cf9b381aa9aeb752e73de2f6ee8c98c60dbcd8" translate="yes" xml:space="preserve">
          <source>Sets the file owner. &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일 소유자를 설정합니다. &lt;code&gt; file:read_file_info/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a159ac6daa93e107b9fbbb4fde280ebc4d39af2" translate="yes" xml:space="preserve">
          <source>Sets the file owner. &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일 소유자를 설정합니다. &lt;code&gt;file:read_file_info/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b6cc6dca65bd7e27afc8d823644da994375f329" translate="yes" xml:space="preserve">
          <source>Sets the file position of the file referenced by &lt;code&gt;Handle&lt;/code&gt;. Returns &lt;code&gt;{ok, NewPosition}&lt;/code&gt; (as an absolute offset) if successful, otherwise &lt;code&gt;{error, reason()}&lt;/code&gt;. &lt;code&gt;Location&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;Handle&lt;/code&gt; 에서 참조하는 파일의 파일 위치를 설정합니다 . 반환 &lt;code&gt;{ok, NewPosition}&lt;/code&gt; 그렇지 않으면 성공하면 (오프셋 절대 같은) &lt;code&gt;{error, reason()}&lt;/code&gt; . &lt;code&gt;Location&lt;/code&gt; 는 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="7c972a59b0cc54dc813e15bf5068fe780f073733" translate="yes" xml:space="preserve">
          <source>Sets the file transfer type to &lt;code&gt;ascii&lt;/code&gt; or &lt;code&gt;binary&lt;/code&gt;. When an FTP session is opened, the default transfer type of the server is used, most often &lt;code&gt;ascii&lt;/code&gt;, which is default according to &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">파일 전송 유형을 &lt;code&gt;ascii&lt;/code&gt; 또는 &lt;code&gt;binary&lt;/code&gt; 로 설정합니다 . FTP 세션이 열리면 서버의 기본 전송 유형 (가장 자주 &lt;code&gt;ascii&lt;/code&gt; ) 이 사용 되며 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt; 에 따라 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="6851dcbf2474ca3ffe84ea041679691dd353f1ef" translate="yes" xml:space="preserve">
          <source>Sets the group leader of &lt;code&gt;Pid&lt;/code&gt; to &lt;code&gt;GroupLeader&lt;/code&gt;. Typically, this is used when a process started from a certain shell is to have another group leader than &lt;code&gt;init&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; 의 그룹 리더 를 &lt;code&gt;GroupLeader&lt;/code&gt; 로 설정합니다 . 일반적으로 특정 쉘에서 시작된 프로세스가 &lt;code&gt;init&lt;/code&gt; 이외의 다른 그룹 리더를 가질 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7fbd42c940e18826557bcb137e881aec23f7a54" translate="yes" xml:space="preserve">
          <source>Sets the group that the file owner belongs to. &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일 소유자가 속한 그룹을 설정합니다. &lt;code&gt; file:read_file_info/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f9128f712d622e0ceef8a5620cc3de049747c1e" translate="yes" xml:space="preserve">
          <source>Sets the group that the file owner belongs to. &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일 소유자가 속한 그룹을 설정합니다. &lt;code&gt;file:read_file_info/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7797f328061524b1c58a840bede4655d0568b709" translate="yes" xml:space="preserve">
          <source>Sets the host OS environment variable &lt;code&gt;Variable&lt;/code&gt; to the value &lt;code&gt;Value&lt;/code&gt; for the Erlang runtime system. Example:</source>
          <target state="translated">호스트 OS 환경 변수 설정 &lt;code&gt;Variable&lt;/code&gt; 값으로 &lt;code&gt;Value&lt;/code&gt; 얼랭 런타임 시스템을. 예:</target>
        </trans-unit>
        <trans-unit id="02e0b51fdfba6b1d0c27973279245d91010b5af2" translate="yes" xml:space="preserve">
          <source>Sets the individual &lt;code&gt;Component&lt;/code&gt; of the trace token to &lt;code&gt;Val&lt;/code&gt;. Returns the previous value of the component.</source>
          <target state="translated">추적 토큰 의 개별 &lt;code&gt;Component&lt;/code&gt; 를 &lt;code&gt;Val&lt;/code&gt; 로 설정합니다 . 구성 요소의 이전 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="985fb0849fd22e6640e7965c4cd4ace35c359fee" translate="yes" xml:space="preserve">
          <source>Sets the initial current working directory for the server.</source>
          <target state="translated">서버의 초기 현재 작업 디렉토리를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="731f35736796e6932947e2cc126ce2edb1347f1b" translate="yes" xml:space="preserve">
          <source>Sets the initial process dictionary size of processes to the size &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">프로세스의 초기 프로세스 사전 크기를 &lt;code&gt;Size&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="17728489612d8f94f200dec3cb3aff87fafa3729" translate="yes" xml:space="preserve">
          <source>Sets the integer lists to be printed as strings. Does not affect existing debugged processes.</source>
          <target state="translated">정수 목록을 문자열로 인쇄하도록 설정합니다. 기존의 디버깅 된 프로세스에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90d0ef89722f71c5730216311cc5541ea6b55336" translate="yes" xml:space="preserve">
          <source>Sets the intermediate buffer size.</source>
          <target state="translated">중간 버퍼 크기를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="af4f5bf83b571a8a5074fed2e2fa82a0a1569b63" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt; POSIX time&lt;/code&gt;, when the file was read. See also &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일을 읽은 마지막 시간을 &lt;code&gt; POSIX time&lt;/code&gt; 으로 설정합니다 . &lt;code&gt; file:read_file_info/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88f5d99da9c3b14df8f5b40d01fd9dd08eea4b74" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt; POSIX time&lt;/code&gt;, when the file was written. See also &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일이 쓰여진 마지막 시간을 &lt;code&gt; POSIX time&lt;/code&gt; 으로 설정합니다 . &lt;code&gt; file:read_file_info/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ac561d939d8c45fcbd87826f32339286e776ec0" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt;POSIX time&lt;/code&gt;, when the file was read. See also &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일을 읽은 마지막 시간을 &lt;code&gt;POSIX time&lt;/code&gt; 으로 설정합니다 . &lt;code&gt;file:read_file_info/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ee23b430fa87183a18ee4d2393bc3b62d357d94" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt;POSIX time&lt;/code&gt;, when the file was written. See also &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일이 기록 된 마지막 시간을 &lt;code&gt;POSIX time&lt;/code&gt; 으로 설정합니다 . &lt;code&gt;file:read_file_info/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e63b2cf24d121a8191b7d039aad2c341b260a58d" translate="yes" xml:space="preserve">
          <source>Sets the limit when rekeying is to be initiated. Both the max time and max amount of data could be configured:</source>
          <target state="translated">키를 다시 입력 할 때 제한을 설정합니다. 최대 시간과 최대 데이터 양을 모두 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af48a2b2b92073cb57b2f692084af50bb03d291b" translate="yes" xml:space="preserve">
          <source>Sets the line delimiting character for line-oriented protocols (&lt;code&gt;line&lt;/code&gt;). Defaults to &lt;code&gt;$\n&lt;/code&gt;.</source>
          <target state="translated">행 지향 프로토콜 ( &lt;code&gt;line&lt;/code&gt; ) 의 행 구분 문자를 설정합니다 . 기본값은 &lt;code&gt;$\n&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5e6fe117c413145b19db762d11138f85ee039433" translate="yes" xml:space="preserve">
          <source>Sets the list of user annotations of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Annotations&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 사용자 주석 목록 을 &lt;code&gt;Annotations&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="981845aba37ef35eab06f51a3ae2ac367bc155a2" translate="yes" xml:space="preserve">
          <source>Sets the local device for a multicast socket.</source>
          <target state="translated">멀티 캐스트 소켓의 로컬 장치를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f09daec059640c8b963395e48629f0c00818db5a" translate="yes" xml:space="preserve">
          <source>Sets the lock category mask to the given categories.</source>
          <target state="translated">잠금 카테고리 마스크를 지정된 카테고리로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c214655cd8a400a29f74586c858b99c736bb9c6a" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Cookie&lt;/code&gt; and verifies the status of the authorization. Equivalent to calling &lt;code&gt;erlang:set_cookie(Node, Cookie)&lt;/code&gt;, followed by &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 매직 쿠키 를 &lt;code&gt;Cookie&lt;/code&gt; 로 설정하고 인증 상태를 확인합니다. &lt;code&gt;erlang:set_cookie(Node, Cookie)&lt;/code&gt; 다음에 &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4ff79d91c0e32eed72387e275e6ee6fab9a61354" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Cookie&lt;/code&gt; and verifies the status of the authorization. Equivalent to calling &lt;code&gt;erlang:set_cookie(Node,Cookie)&lt;/code&gt;, followed by &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">의 마법 쿠키 설정 &lt;code&gt;Node&lt;/code&gt; 에 &lt;code&gt;Cookie&lt;/code&gt; 및 확인하는 인증의 상태를. &lt;code&gt;erlang:set_cookie(Node,Cookie)&lt;/code&gt; 를 호출 한 다음 &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="dd3dd3928b7eb74c2fd234567b79d6051f3d08b1" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to the atom &lt;code&gt;Cookie&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; is the local node, the function also sets the cookie of all other unknown nodes to &lt;code&gt;Cookie&lt;/code&gt; (see section &lt;code&gt; Distributed Erlang&lt;/code&gt; in the Erlang Reference Manual in System Documentation).</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 매직 쿠키를 atom &lt;code&gt;Cookie&lt;/code&gt; 로 설정합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 로컬 노드가,이 함수는 또한 다른 모든 알 수없는 노드의 쿠키 설정 &lt;code&gt;Cookie&lt;/code&gt; (섹션 &lt;code&gt; Distributed Erlang&lt;/code&gt; 얼랭 참조 시스템 문서에서 수동으로를).</target>
        </trans-unit>
        <trans-unit id="df15ab4bf1f360b587c5373f56b589b729a7fec3" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to the atom &lt;code&gt;Cookie&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; is the local node, the function also sets the cookie of all other unknown nodes to &lt;code&gt;Cookie&lt;/code&gt; (see section &lt;code&gt;Distributed Erlang&lt;/code&gt; in the Erlang Reference Manual in System Documentation).</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 매직 쿠키를 atom &lt;code&gt;Cookie&lt;/code&gt; 설정합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 로컬 노드가,이 함수는 또한 다른 모든 알 수없는 노드의 쿠키 설정 &lt;code&gt;Cookie&lt;/code&gt; (섹션 &lt;code&gt;Distributed Erlang&lt;/code&gt; 얼랭 참조 시스템 문서에서 수동으로를).</target>
        </trans-unit>
        <trans-unit id="ae7a4bb3e17a936a0c654b361522eed839bf71e0" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of the node to &lt;code&gt;Cookie&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt; erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">노드의 매직 쿠키를 &lt;code&gt;Cookie&lt;/code&gt; 로 설정합니다 . &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt; erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="447df44c0af27f51c4f67f1143d02e462b58f2a8" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of the node to &lt;code&gt;Cookie&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt;erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에 노드의 마법 쿠키 설정 &lt;code&gt;Cookie&lt;/code&gt; ; &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt;erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2606b578e82eed07e3cb4c6e8c744e9ea859f896" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie used when connecting to &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; is the current node, &lt;code&gt;Cookie&lt;/code&gt; is used when connecting to all new nodes.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 에 연결할 때 사용되는 매직 쿠키를 설정합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 현재 노드가, &lt;code&gt;Cookie&lt;/code&gt; 모두 새로운 노드에 연결할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="98120836a276d717e4781faa5657007e0c9ee6b7" translate="yes" xml:space="preserve">
          <source>Sets the mapping of warning messages for &lt;code&gt;error_logger&lt;/code&gt;. Messages sent to the error logger using one of the warning routines can be mapped to errors (&lt;code&gt;+W e&lt;/code&gt;), warnings (&lt;code&gt;+W w&lt;/code&gt;), or information reports (&lt;code&gt;+W i&lt;/code&gt;). Defaults to warnings. The current mapping can be retrieved using &lt;code&gt;error_logger:warning_map/0&lt;/code&gt;. For more information, see &lt;code&gt; error_logger:warning_map/0&lt;/code&gt; in Kernel.</source>
          <target state="translated">&lt;code&gt;error_logger&lt;/code&gt; 에 대한 경고 메시지 매핑을 설정합니다 . 경고 루틴 중 하나를 사용하여 오류 로거에 전송 된 메시지는 오류 ( &lt;code&gt;+W e&lt;/code&gt; ), 경고 ( &lt;code&gt;+W w&lt;/code&gt; ) 또는 정보 보고서 ( &lt;code&gt;+W i&lt;/code&gt; )에 매핑 될 수 있습니다 . 기본값은 경고입니다. 현재 매핑은 &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; 을 사용하여 검색 할 수 있습니다 . 자세한 내용 은 커널의 &lt;code&gt; error_logger:warning_map/0&lt;/code&gt; 을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="4c4bedd53e1740ad105d899475e39c0b492f1068" translate="yes" xml:space="preserve">
          <source>Sets the mapping of warning messages for &lt;code&gt;error_logger&lt;/code&gt;. Messages sent to the error logger using one of the warning routines can be mapped to errors (&lt;code&gt;+W e&lt;/code&gt;), warnings (&lt;code&gt;+W w&lt;/code&gt;), or information reports (&lt;code&gt;+W i&lt;/code&gt;). Defaults to warnings. The current mapping can be retrieved using &lt;code&gt;error_logger:warning_map/0&lt;/code&gt;. For more information, see &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; in Kernel.</source>
          <target state="translated">&lt;code&gt;error_logger&lt;/code&gt; 에 대한 경고 메시지의 맵핑을 설정합니다 . 경고 루틴 중 하나를 사용하여 오류 로거에 전송 된 메시지는 오류 ( &lt;code&gt;+W e&lt;/code&gt; ), 경고 ( &lt;code&gt;+W w&lt;/code&gt; ) 또는 정보 보고서 ( &lt;code&gt;+W i&lt;/code&gt; )에 맵핑 될 수 있습니다 . 기본값은 경고입니다. &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; 을 사용하여 현재 맵핑을 검색 할 수 있습니다 . 자세한 정보 는 커널의 &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b29dc0d3c6bde8b91c5e600eef69cc9f6783479a" translate="yes" xml:space="preserve">
          <source>Sets the maximum allowed length of the packet body. If the packet header indicates that the length of the packet is longer than the maximum allowed length, the packet is considered invalid. The same occurs if the packet header is too large for the socket receive buffer.</source>
          <target state="translated">패킷 본문의 최대 허용 길이를 설정합니다. 패킷 헤더가 패킷의 길이가 최대 허용 길이보다 길면 패킷이 유효하지 않은 것으로 간주됩니다. 패킷 헤더가 소켓 수신 버퍼에 비해 너무 큰 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="bc7a1ad8d2963723a8fd60b1b6cd900baef40048" translate="yes" xml:space="preserve">
          <source>Sets the maximum allowed size of the packet body. If the packet header indicates that the length of the packet is longer than the maximum allowed length, the packet is considered invalid. Defaults to 0, which means no size limit.</source>
          <target state="translated">패킷 본문의 최대 허용 크기를 설정합니다. 패킷 헤더가 패킷의 길이가 최대 허용 길이보다 길면 패킷이 유효하지 않은 것으로 간주됩니다. 기본값은 0이며 이는 크기 제한이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a08d09a857db0a3afa786335f6d9718e647247a5" translate="yes" xml:space="preserve">
          <source>Sets the maximum depth of call stack back-traces in the exit reason element of &lt;code&gt;'EXIT'&lt;/code&gt; tuples. The flag also limits the stacktrace depth returned by &lt;code&gt;process_info&lt;/code&gt; item &lt;code&gt;current_stacktrace.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'EXIT'&lt;/code&gt; 튜플 의 종료 이유 요소에서 최대 호출 스택 백 트레이스 깊이를 설정합니다 . 플래그는 또한 &lt;code&gt;process_info&lt;/code&gt; 항목 &lt;code&gt;current_stacktrace.&lt;/code&gt; 리턴하는 스택 추적 깊이를 제한합니다 .</target>
        </trans-unit>
        <trans-unit id="cdf0048b550dce2497152cc03e6293577c75b2b5" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of ETS tables. This limit is &lt;code&gt;partially obsolete&lt;/code&gt;.</source>
          <target state="translated">최대 ETS 테이블 수를 설정합니다. 이 제한은 &lt;code&gt;partially obsolete&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cf49b16a0fe474a4b12580aa850482cbcf54323" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of UDP packets to read without intervention from the socket when data is available. When this many packets have been read and delivered to the destination process, new packets are not read until a new notification of available data has arrived. Defaults to &lt;code&gt;5&lt;/code&gt;. If this parameter is set too high, the system can become unresponsive because of UDP packet flooding.</source>
          <target state="translated">데이터가 사용 가능한 경우 소켓의 개입없이 읽을 최대 UDP 패킷 수를 설정합니다. 이 많은 패킷을 읽고 대상 프로세스로 전달한 경우 사용 가능한 데이터에 대한 새로운 알림이 도착할 때까지 새 패킷을 읽지 않습니다. 기본값은 &lt;code&gt;5&lt;/code&gt; 입니다. 이 매개 변수를 너무 높게 설정하면 UDP 패킷 플러딩으로 인해 시스템이 응답하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4956af80d3ecccd4ebaa967b75b1efe8ce902411" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of atoms the virtual machine can handle. Defaults to 1,048,576.</source>
          <target state="translated">가상 머신이 처리 할 수있는 최대 원자 수를 설정합니다. 기본값은 1,048,576입니다.</target>
        </trans-unit>
        <trans-unit id="fc52a08a41b36c008741c220b19700a4b1f17d50" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of simultaneously existing ports for this system if a Number is passed as value. Valid range for &lt;code&gt;Number&lt;/code&gt; is &lt;code&gt;[1024-134217727]&lt;/code&gt;</source>
          <target state="translated">Number가 값으로 전달되는 경우이 시스템에 동시에 존재하는 최대 포트 수를 설정합니다. &lt;code&gt;Number&lt;/code&gt; 유효 범위 는 &lt;code&gt;[1024-134217727]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0b1bfec3bb12cb13846bb9555a8f5f91e13baf7b" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of simultaneously existing processes for this system if a &lt;code&gt;Number&lt;/code&gt; is passed as value. Valid range for &lt;code&gt;Number&lt;/code&gt; is &lt;code&gt;[1024-134217727]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 가 값으로 전달되는 경우이 시스템에 대해 동시에 존재하는 최대 프로세스 수를 설정합니다 . &lt;code&gt;Number&lt;/code&gt; 유효 범위 는 &lt;code&gt;[1024-134217727]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fd3d0f4a3ec9c9fe2025e6b38f80c729998948a7" translate="yes" xml:space="preserve">
          <source>Sets the maximum time the test case is allowed to execute. If this time is exceeded, the test case fails with reason &lt;code&gt;timetrap_timeout&lt;/code&gt;. Notice that &lt;code&gt;init_per_testcase&lt;/code&gt; and &lt;code&gt;end_per_testcase&lt;/code&gt; are included in the timetrap time. For details, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;Timetrap Time-Outs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">테스트 케이스를 실행할 수있는 최대 시간을 설정합니다. 이 시간을 초과하면 &lt;code&gt;timetrap_timeout&lt;/code&gt; 이유로 테스트 케이스가 실패합니다 . 것을 알 수 &lt;code&gt;init_per_testcase&lt;/code&gt; 및 &lt;code&gt;end_per_testcase&lt;/code&gt; 이 timetrap 시간에 포함됩니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;Timetrap Time-Outs&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="324d088b62be41b223f26760134fa6f5f4b4409d" translate="yes" xml:space="preserve">
          <source>Sets the name of a file containing the list of user groups for user authentication. The filename can be either absolute or relative to the &lt;code&gt;server_root&lt;/code&gt;. If the plain storage method is used, the group file is a plain text file, where each line contains a group name followed by a colon, followed by the members usernames separated by spaces.</source>
          <target state="translated">사용자 인증을위한 사용자 그룹 목록이 포함 된 파일 이름을 설정합니다. 파일 이름은 &lt;code&gt;server_root&lt;/code&gt; 에 대해 절대적이거나 상대적 일 수 있습니다 . 일반 저장 방법을 사용하는 경우 그룹 파일은 일반 텍스트 파일입니다. 여기서 각 줄에는 그룹 이름, 콜론, 공백으로 구분 된 구성원 사용자 이름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="33014e717faffd760226fc3c32a7f5ea0967d547" translate="yes" xml:space="preserve">
          <source>Sets the name of a file containing the list of users and passwords for user authentication. The filename can be either absolute or relative to the &lt;code&gt;server_root&lt;/code&gt;. If using the plain storage method, this file is a plain text file where each line contains a username followed by a colon, followed by the non-encrypted password. If usernames are duplicated, the behavior is undefined.</source>
          <target state="translated">사용자 인증을위한 사용자 및 비밀번호 목록을 포함하는 파일 이름을 설정합니다. 파일 이름은 &lt;code&gt;server_root&lt;/code&gt; 에 대해 절대적이거나 상대적 일 수 있습니다 . 일반 저장 방법을 사용하는 경우이 파일은 각 줄에 사용자 이름, 콜론, 암호화되지 않은 비밀번호가 포함 된 일반 텍스트 파일입니다. 사용자 이름이 중복되면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d558392153a0820116aa8acdc19a2134dbd3d561" translate="yes" xml:space="preserve">
          <source>Sets the name of the authorization realm (auth-domain) for a directory. This string informs the client about which username and password to use.</source>
          <target state="translated">디렉토리에 대한 권한 영역 (auth-domain)의 이름을 설정합니다. 이 문자열은 클라이언트에게 사용할 사용자 이름과 비밀번호를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="5a2b4a3a9524de729d631b79099b5ccf6d3a6cc7" translate="yes" xml:space="preserve">
          <source>Sets the named (or default) value to &lt;code&gt;value&lt;/code&gt;. Calls the Win32 API function &lt;code&gt;RegSetValueEx()&lt;/code&gt;. The value can be of three types, and the corresponding registry type is used. The supported types are the following:</source>
          <target state="translated">명명 된 (또는 기본값) 값을 &lt;code&gt;value&lt;/code&gt; 로 설정 합니다 . Win32 API 함수 &lt;code&gt;RegSetValueEx()&lt;/code&gt; 호출합니다 . 값은 세 가지 유형이 될 수 있으며 해당 레지스트리 유형이 사용됩니다. 지원되는 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6aa7a6b0b3d91aac076c25016cfd1bdb91b9ee48" translate="yes" xml:space="preserve">
          <source>Sets the number of IO poll threads to use when polling for I/O. The maximum number of poll threads allowed is 1024. The default is 1.</source>
          <target state="translated">I / O 폴링시 사용할 IO 폴 스레드 수를 설정합니다. 허용되는 최대 폴 스레드 수는 1024입니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="8252bf59f35afefeae49fd9f5ad304aa84e5c254" translate="yes" xml:space="preserve">
          <source>Sets the number of IO pollsets to use when polling for I/O. This option is only used on platforms that support concurrent updates of a pollset, otherwise the same number of pollsets are used as IO poll threads. The default is 1.</source>
          <target state="translated">I / O 폴링시 사용할 IO 폴 세트 수를 설정합니다. 이 옵션은 폴 세트의 동시 업데이트를 지원하는 플랫폼에서만 사용되며, 그렇지 않으면 동일한 수의 폴 세트가 IO 폴 스레드로 사용됩니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="d431589418401b249620fb2560f77b2c8f2920d4" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty CPU scheduler threads to create and dirty CPU scheduler threads to set online. The maximum for both values is 1024, and each value is further limited by the settings for normal schedulers:</source>
          <target state="translated">작성할 더티 CPU 스케줄러 스레드 수를 설정하고 더티 CPU 스케줄러 스레드를 온라인으로 설정합니다. 두 값의 최대 값은 1024이며 각 값은 일반 스케줄러 설정에 따라 추가로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="7f059be725bc687428244a4ee6d3278e9410a9c2" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty CPU schedulers online. Range is &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the smallest of the return values of &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; and &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">더티 CPU 스케줄러 수를 온라인으로 설정합니다. 범위는 &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt; . 여기서 &lt;code&gt;N&lt;/code&gt; 은 &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; 및 &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt; 의 반환 값 중 가장 작은 값입니다 .</target>
        </trans-unit>
        <trans-unit id="153db4e3d34aceffa6303ce716fdc65e09e97afc" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty I/O scheduler threads to create. Valid range is 0-1024. By default, the number of dirty I/O scheduler threads created is 10, same as the default number of threads in the &lt;code&gt;&lt;a href=&quot;#async_thread_pool_size&quot;&gt;async thread pool&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">작성할 더티 I / O 스케줄러 스레드 수를 설정합니다. 유효한 범위는 0-1024입니다. 기본적으로 작성된 더티 I / O 스케줄러 스레드 수는 &lt;code&gt;&lt;a href=&quot;#async_thread_pool_size&quot;&gt;async thread pool&lt;/a&gt;&lt;/code&gt; 의 기본 스레드 수와 동일한 10 입니다.</target>
        </trans-unit>
        <trans-unit id="2d472c0e0387c7eaf8f974c34e7e7e1a7a4c8f83" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty I/O scheduler threads to create. Valid range is 1-1024. By default, the number of dirty I/O scheduler threads created is 10.</source>
          <target state="translated">작성할 더티 I / O 스케줄러 스레드 수를 설정합니다. 유효한 범위는 1-1024입니다. 기본적으로 생성되는 더티 I / O 스케줄러 스레드의 수는 10입니다.</target>
        </trans-unit>
        <trans-unit id="9dc382dc2668aae31b50c8b929069fa4ef7cf20e" translate="yes" xml:space="preserve">
          <source>Sets the number of previous commands to keep in the history list to &lt;code&gt;N&lt;/code&gt;. The previous number is returned. Defaults to 20.</source>
          <target state="translated">히스토리 목록에 보관할 이전 명령 수를 &lt;code&gt;N&lt;/code&gt; 으로 설정 합니다. 이전 번호가 반환됩니다. 기본값은 20입니다.</target>
        </trans-unit>
        <trans-unit id="8f34246147a49d84739a8fbd1c44c94ef1dce635" translate="yes" xml:space="preserve">
          <source>Sets the number of results from previous commands to keep in the history list to &lt;code&gt;N&lt;/code&gt;. The previous number is returned. Defaults to 20.</source>
          <target state="translated">히스토리 목록에 유지하기 위해 이전 명령의 결과 수를 &lt;code&gt;N&lt;/code&gt; 으로 설정 합니다. 이전 번호가 반환됩니다. 기본값은 20입니다.</target>
        </trans-unit>
        <trans-unit id="7a62121dcc55a541c16dbca03c971c4d0c707f75" translate="yes" xml:space="preserve">
          <source>Sets the number of scheduler threads to create and scheduler threads to set online. The maximum for both values is 1024. If the Erlang runtime system is able to determine the number of logical processors configured and logical processors available, &lt;code&gt;Schedulers&lt;/code&gt; defaults to logical processors configured, and &lt;code&gt;SchedulersOnline&lt;/code&gt; defaults to logical processors available; otherwise the default values are 1. &lt;code&gt;Schedulers&lt;/code&gt; can be omitted if &lt;code&gt;:SchedulerOnline&lt;/code&gt; is not and conversely. The number of schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">작성할 스케줄러 스레드 수와 온라인으로 설정할 스케줄러 스레드 수를 설정합니다. 두 값의 최대 값은 1024입니다. Erlang 런타임 시스템이 구성된 논리 프로세서 수와 사용 가능한 논리 프로세서 수를 판별 할 수있는 경우 &lt;code&gt;Schedulers&lt;/code&gt; 기본값은 구성된 논리 프로세서로, &lt;code&gt;SchedulersOnline&lt;/code&gt; 의 기본값은 논리 프로세서가 사용 가능한 것입니다. 그렇지 않으면 디폴트 값은 1입니다 &lt;code&gt;Schedulers&lt;/code&gt; 경우 생략 할 수 &lt;code&gt;:SchedulerOnline&lt;/code&gt; 하지 역으로합니다. 온라인 스케줄러 수는 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; 통해 런타임시 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60b2dc5f4fbd085c53ac66d11d536e7a50a7f2a0" translate="yes" xml:space="preserve">
          <source>Sets the number of scheduler threads to create and scheduler threads to set online. The maximum for both values is 1024. If the Erlang runtime system is able to determine the number of logical processors configured and logical processors available, &lt;code&gt;Schedulers&lt;/code&gt; defaults to logical processors configured, and &lt;code&gt;SchedulersOnline&lt;/code&gt; defaults to logical processors available; otherwise the default values are 1. If the emulator detects that it is subject to a &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_quota&quot;&gt;CPU quota&lt;/a&gt;&lt;/code&gt;, the default value for &lt;code&gt;SchedulersOnline&lt;/code&gt; will be limited accordingly.</source>
          <target state="translated">만들 스케줄러 스레드 수와 온라인으로 설정할 스케줄러 스레드 수를 설정합니다. 두 값의 최대 값은 1024입니다. Erlang 런타임 시스템이 구성된 논리 프로세서 및 사용 가능한 논리 프로세서 수를 결정할 수있는 경우 &lt;code&gt;Schedulers&lt;/code&gt; 구성된 논리 프로세서로 기본 설정되고 &lt;code&gt;SchedulersOnline&lt;/code&gt; 은 사용 가능한 논리 프로세서로 기본 설정 됩니다. 그렇지 않으면 기본값은 1입니다. 에뮬레이터가 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_quota&quot;&gt;CPU quota&lt;/a&gt;&lt;/code&gt; 영향을받는 것을 감지하면 &lt;code&gt;SchedulersOnline&lt;/code&gt; 의 기본값이 그에 따라 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="b01e97a0946f0daf9d05b34eb1ec6ece3db95a34" translate="yes" xml:space="preserve">
          <source>Sets the number of schedulers online. Range is &lt;code&gt;1 &amp;lt;= SchedulersOnline &amp;lt;= erlang:system_info(schedulers)&lt;/code&gt;.</source>
          <target state="translated">온라인 스케줄러 수를 설정합니다. 범위는 &lt;code&gt;1 &amp;lt;= SchedulersOnline &amp;lt;= erlang:system_info(schedulers)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9a8ff1fa759cc8215f6ceba85374b21a711f6113" translate="yes" xml:space="preserve">
          <source>Sets the number of seconds a connection can be inactive before &lt;code&gt;epmd&lt;/code&gt; times out and closes the connection. Defaults to 60.</source>
          <target state="translated">&lt;code&gt;epmd&lt;/code&gt; 시간이 초과되어 연결을 닫기 전에 연결을 비활성화 할 수있는 시간 (초)을 설정합니다 . 기본값은 60입니다.</target>
        </trans-unit>
        <trans-unit id="8f3973be7bf1aa683cfb6537f5b7e623d570128e" translate="yes" xml:space="preserve">
          <source>Sets the number of threads in async thread pool. Valid range is 0-1024. Defaults to 1.</source>
          <target state="translated">비동기 스레드 풀의 스레드 수를 설정합니다. 유효한 범위는 0-1024입니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="546e80cce60182a0fbaeea1c2cbd4f298916a928" translate="yes" xml:space="preserve">
          <source>Sets the number of threads in async thread pool. Valid range is 1-1024. The async thread pool is used by linked-in drivers to handle work that may take a very long time. Since OTP 21 there are very few linked-in drivers in the default Erlang/OTP distribution that uses the async thread pool. Most of them have been migrated to dirty IO schedulers. Defaults to 1.</source>
          <target state="translated">비동기 스레드 풀의 스레드 수를 설정합니다. 유효한 범위는 1-1024입니다. 비동기 스레드 풀은 연결된 드라이버에서 매우 오래 걸릴 수있는 작업을 처리하는 데 사용됩니다. OTP 21 이후로 비동기 스레드 풀을 사용하는 기본 Erlang / OTP 배포에는 연결된 드라이버가 거의 없습니다. 대부분은 더티 IO 스케줄러로 마이그레이션되었습니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="84ff85aa29b5c4930ac56b8d83524b1825cd3161" translate="yes" xml:space="preserve">
          <source>Sets the path of the loader if &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; interprets a &lt;code&gt;path&lt;/code&gt; command in the start script.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; 가 시작 스크립트에서 &lt;code&gt;path&lt;/code&gt; 명령을 해석하는 경우 로더의 경로를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9f14f892bed23c0a93046e148efc501f22efca7b" translate="yes" xml:space="preserve">
          <source>Sets the port owner (the connected port) to &lt;code&gt;Pid&lt;/code&gt;. Roughly the same as &lt;code&gt;Port ! {Owner, {connect, Pid}}&lt;/code&gt; except for the following:</source>
          <target state="translated">포트 소유자 (연결된 포트)를 &lt;code&gt;Pid&lt;/code&gt; 로 설정 합니다. &lt;code&gt;Port ! {Owner, {connect, Pid}}&lt;/code&gt; 와 거의 동일합니다 ! 다음을 제외한 {소유자, {connect, Pid}} :</target>
        </trans-unit>
        <trans-unit id="1243f4206de9e59878fa5fcca92cd1e36dc0ab75" translate="yes" xml:space="preserve">
          <source>Sets the port owner of &lt;code&gt;Port&lt;/code&gt;to &lt;code&gt;NewPid&lt;/code&gt;. The old port owner &lt;code&gt;Pid&lt;/code&gt; stays linked to the port and must call &lt;code&gt;unlink(Port)&lt;/code&gt; if this is not desired.</source>
          <target state="translated">&lt;code&gt;Port&lt;/code&gt; 의 포트 소유자 를 &lt;code&gt;NewPid&lt;/code&gt; 로 설정합니다 . 이전 포트 소유자 &lt;code&gt;Pid&lt;/code&gt; 는 포트에 연결된 상태로 유지 되며 원하지 않는 경우 &lt;code&gt;unlink(Port)&lt;/code&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="10437219d9579a554d6d2d338f43778e137ea386" translate="yes" xml:space="preserve">
          <source>Sets the port owner of &lt;code&gt;Port&lt;/code&gt;to &lt;code&gt;NewPid&lt;/code&gt;. Unless the port is already closed, the port replies with&lt;code&gt;{Port,connected}&lt;/code&gt; to the old port owner. Note that the old port owner is still linked to the port, but the new port owner is not.</source>
          <target state="translated">&lt;code&gt;Port&lt;/code&gt; 의 포트 소유자 를 &lt;code&gt;NewPid&lt;/code&gt; 로 설정합니다 . 포트가 이미 닫혀 있지 않으면 포트는 &lt;code&gt;{Port,connected}&lt;/code&gt; 로 이전 포트 소유자에게 응답 합니다. 이전 포트 소유자는 여전히 포트에 연결되어 있지만 새 포트 소유자는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad029bbf844eebe81edd3e067ea50cd5b9a13b30" translate="yes" xml:space="preserve">
          <source>Sets the position information of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Pos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 위치 정보 를 &lt;code&gt;Pos&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="45748fef38eb94e3119fde2bd98d9e941ccce529" translate="yes" xml:space="preserve">
          <source>Sets the position of &lt;code&gt;UserData&lt;/code&gt; as defined for files in &lt;code&gt; file:position/2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt; file:position/2&lt;/code&gt; 의 파일에 대해 정의 된대로 &lt;code&gt;UserData&lt;/code&gt; 의 위치를 ​​설정 합니다.</target>
        </trans-unit>
        <trans-unit id="4d250de16211908674b5dbe01fbc4373edca0777" translate="yes" xml:space="preserve">
          <source>Sets the position of &lt;code&gt;UserPrivate&lt;/code&gt; as defined for files in &lt;code&gt;file:position/2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;file:position/2&lt;/code&gt; 의 파일에 정의 된대로 &lt;code&gt;UserPrivate&lt;/code&gt; 의 위치를 ​​설정 합니다.</target>
        </trans-unit>
        <trans-unit id="f0b196fb299c2125cdfbde73581f4a4476a39fde" translate="yes" xml:space="preserve">
          <source>Sets the position of the file referenced by &lt;code&gt;IoDevice&lt;/code&gt; to &lt;code&gt;Location&lt;/code&gt;. Returns &lt;code&gt;{ok, NewPosition}&lt;/code&gt; (as absolute offset) if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. &lt;code&gt;Location&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; 가 참조하는 파일의 위치 를 &lt;code&gt;Location&lt;/code&gt; 으로 설정 합니다. 반환 &lt;code&gt;{ok, NewPosition}&lt;/code&gt; (절대 오프셋 (offset)) 성공하는 경우, 그렇지 않으면 &lt;code&gt;{error, Reason}&lt;/code&gt; . &lt;code&gt;Location&lt;/code&gt; 는 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="6883a3ea18416f403ba8ad9a0d501e2eefa78b3d" translate="yes" xml:space="preserve">
          <source>Sets the post-comments of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Comments&lt;/code&gt; should be a possibly empty list of abstract comments, in top-down textual order</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 post-comments 를 &lt;code&gt;Comments&lt;/code&gt; 로 설정합니다 . &lt;code&gt;Comments&lt;/code&gt; 하향식 텍스트 순서로 비어있는 추상 주석 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="d1b0fbcbff045cc34e57a32fd1f4e7df3709a04b" translate="yes" xml:space="preserve">
          <source>Sets the pre-comments of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Comments&lt;/code&gt; should be a possibly empty list of abstract comments, in top-down textual order.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 의 사전 주석 을 &lt;code&gt;Comments&lt;/code&gt; 로 설정합니다 . &lt;code&gt;Comments&lt;/code&gt; 하향식 텍스트 순서로 비어있는 추상 주석 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="db69f82a6e8a341aeda2362a91ac7c6447053ffe" translate="yes" xml:space="preserve">
          <source>Sets the priority of the new process. Equivalent to executing &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; in the start function of the new process, except that the priority is set before the process is selected for execution for the first time. For more information on priorities, see &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">새 프로세스의 우선 순위를 설정합니다. 실행하는 것과 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; 새로운 프로세스의 기동 기능에서, 프로세스는 처음으로 실행을 위해 선택되기 전에 우선 순위가 설정되어있는 것을 제외. 우선 순위에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d157d45bafcc2fac8b81e213b89a1d03c8b7a90d" translate="yes" xml:space="preserve">
          <source>Sets the priority of the new process. Equivalent to executing &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt; in the start function of the new process, except that the priority is set before the process is selected for execution for the first time. For more information on priorities, see &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">새로운 프로세스의 우선 순위를 설정합니다. 실행하는 것과 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt; 새로운 프로세스의 기동 기능에서, 프로세스는 처음으로 실행을 위해 선택되기 전에 우선 순위가 설정되어있는 것을 제외. 우선 순위에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="34a61461689281b3d9e3ae53839861a878ef82f2" translate="yes" xml:space="preserve">
          <source>Sets the process priority. &lt;code&gt;Level&lt;/code&gt; is an atom. Four priority levels exist: &lt;code&gt;low&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;, and &lt;code&gt;max&lt;/code&gt;. Default is &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">프로세스 우선 순위를 설정합니다. &lt;code&gt;Level&lt;/code&gt; 은 원자입니다. &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; 및 &lt;code&gt;max&lt;/code&gt; 의 네 가지 우선 순위 레벨이 있습니다 . 기본값은 &lt;code&gt;normal&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="24e3d00d6b542ec695023aac73d1d73e259c1461" translate="yes" xml:space="preserve">
          <source>Sets the process that will receive the logging messages generated by ERTS. If set to &lt;code&gt;undefined&lt;/code&gt;, all logging messages generated by ERTS will be dropped. The messages will be in the format:</source>
          <target state="translated">ERTS에서 생성 된 로깅 메시지를 수신 할 프로세스를 설정합니다. &lt;code&gt;undefined&lt;/code&gt; 로 설정하면 ERTS에서 생성 된 모든 로깅 메시지가 삭제됩니다. 메시지의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f3a495e55d1473a6207c204fb7e226c0921984f6" translate="yes" xml:space="preserve">
          <source>Sets the proxy configuration, equivalent to calling</source>
          <target state="translated">호출에 해당하는 프록시 구성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="50b1f645e434cb258a1d300e632d91fdda4f05f7" translate="yes" xml:space="preserve">
          <source>Sets the range of characters that the system considers printable in heuristic detection of strings. This typically affects the shell, debugger, and &lt;code&gt;io:format&lt;/code&gt; functions (when &lt;code&gt;~tp&lt;/code&gt; is used in the format string).</source>
          <target state="translated">시스템이 휴리스틱 문자열 감지에서 인쇄 가능한 것으로 간주하는 문자 범위를 설정합니다. 이것은 일반적으로 쉘, 디버거 및 &lt;code&gt;io:format&lt;/code&gt; 함수에 영향을 미칩니다 ( &lt;code&gt;~tp&lt;/code&gt; 가 형식 문자열에 사용될 때 ).</target>
        </trans-unit>
        <trans-unit id="9cff87b01d48ddf15427db3cb6340d1ab9a8fb9a" translate="yes" xml:space="preserve">
          <source>Sets the reply tag to &lt;code&gt;ReplyTag&lt;/code&gt; in the reply message. That is, in the &lt;code&gt;&lt;a href=&quot;#spawn_request_success_message&quot;&gt;&lt;i&gt;success&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#spawn_request_error_message&quot;&gt;&lt;i&gt;error&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; message that is sent to the caller due to the spawn operation. The default reply tag is the atom &lt;code&gt;spawn_reply&lt;/code&gt;.</source>
          <target state="translated">응답 메시지에서 응답 태그를 &lt;code&gt;ReplyTag&lt;/code&gt; 로 설정합니다 . 즉 , spawn 작업으로 인해 호출자에게 전송 되는 &lt;code&gt;&lt;a href=&quot;#spawn_request_success_message&quot;&gt;&lt;i&gt;success&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#spawn_request_error_message&quot;&gt;&lt;i&gt;error&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; 메시지입니다. 기본 응답 태그는 atom &lt;code&gt;spawn_reply&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="214aa9e0cde51c6f24ca5bb8fc39f132f748f85d" translate="yes" xml:space="preserve">
          <source>Sets the shell prompt function to &lt;code&gt;PromptFunc&lt;/code&gt;. The previous prompt function is returned.</source>
          <target state="translated">쉘 프롬프트 기능을 &lt;code&gt;PromptFunc&lt;/code&gt; 로 설정합니다 . 이전 프롬프트 기능이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="cb087048709547fc663b275e9b6886b0adfc31d0" translate="yes" xml:space="preserve">
          <source>Sets the specified trace flags on the specified processes or ports. Flag &lt;code&gt;timestamp&lt;/code&gt; is always turned on.</source>
          <target state="translated">지정된 프로세스 또는 포트에서 지정된 추적 플래그를 설정합니다. 플래그 &lt;code&gt;timestamp&lt;/code&gt; 는 항상 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="5620ce3649c4687e1cfb824230792252a14432a9" translate="yes" xml:space="preserve">
          <source>Sets the stack trace option, see section &lt;code&gt;&lt;a href=&quot;#stack_trace&quot;&gt;Stack Trace&lt;/a&gt;&lt;/code&gt;. Does not affect existing debugged processes.</source>
          <target state="translated">스택 추적 옵션 섹션 참조 설정 &lt;code&gt;&lt;a href=&quot;#stack_trace&quot;&gt;Stack Trace&lt;/a&gt;&lt;/code&gt; . 기존의 디버깅 된 프로세스에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="abdf8ead1a0b012fa3884cebf343315960b9465f" translate="yes" xml:space="preserve">
          <source>Sets the state of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag. &lt;code&gt;MQD&lt;/code&gt; is to be either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. The default &lt;code&gt;message_queue_data&lt;/code&gt; process flag is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt; +hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그 의 상태를 설정합니다 . &lt;code&gt;MQD&lt;/code&gt; 는 &lt;code&gt;off_heap&lt;/code&gt; 또는 &lt;code&gt;on_heap&lt;/code&gt; 입니다. 기본 &lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그는 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 인수 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt; +hmqd&lt;/a&gt;&lt;/code&gt; 에 의해 결정됩니다 . 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e15eff48e53b53579fe684ef80bdea8be78ba40" translate="yes" xml:space="preserve">
          <source>Sets the state of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag. &lt;code&gt;MQD&lt;/code&gt; is to be either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. The default &lt;code&gt;message_queue_data&lt;/code&gt; process flag is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data,MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그 의 상태를 설정합니다 . &lt;code&gt;MQD&lt;/code&gt; 는 &lt;code&gt;off_heap&lt;/code&gt; 또는 &lt;code&gt;on_heap&lt;/code&gt; 입니다. 기본 &lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그는 &lt;code&gt;erl(1)&lt;/code&gt; 명령 행 인수 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; 에 의해 결정됩니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data,MQD)&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea853c8ced97def75717cf0264f6ffa79a284e1d" translate="yes" xml:space="preserve">
          <source>Sets the system directory, containing the host key files that identify the host keys for &lt;code&gt;ssh&lt;/code&gt;. Defaults to &lt;code&gt;/etc/ssh&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ssh&lt;/code&gt; 의 호스트 키를 식별하는 호스트 키 파일이 포함 된 시스템 디렉토리를 설정합니다 . 기본값은 &lt;code&gt;/etc/ssh&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dadfc4f2c22a540bc9158c5cdf3feefc2deaaa9f" translate="yes" xml:space="preserve">
          <source>Sets the system performance monitoring options. &lt;code&gt;MonitorPid&lt;/code&gt; is a local process identifier (pid) receiving system monitor messages. The second argument is a list of monitoring options:</source>
          <target state="translated">시스템 성능 모니터링 옵션을 설정합니다. &lt;code&gt;MonitorPid&lt;/code&gt; 는 시스템 모니터 메시지를 수신하는 로컬 프로세스 식별자 (pid)입니다. 두 번째 인수는 모니터링 옵션 목록입니다.</target>
        </trans-unit>
        <trans-unit id="4a32ff972234c4763ee9efb0d8897edf310089c2" translate="yes" xml:space="preserve">
          <source>Sets the system tracer. The system tracer can be either a process, port or &lt;code&gt;tracer module&lt;/code&gt; denoted by &lt;code&gt;Tracer&lt;/code&gt;. Returns the previous value (which can be &lt;code&gt;false&lt;/code&gt; if no system tracer is active).</source>
          <target state="translated">시스템 추적 프로그램을 설정합니다. 시스템 추적 프로그램은 &lt;code&gt;Tracer&lt;/code&gt; 로 표시된 프로세스, 포트 또는 &lt;code&gt;tracer module&lt;/code&gt; 일 수 있습니다 . 이전 값을 반환합니다 ( 시스템 트레이서가 활성화되어 있지 않으면 &lt;code&gt;false&lt;/code&gt; 일 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="b584505d01661ee314ccddd68b712dd9da0002c2" translate="yes" xml:space="preserve">
          <source>Sets the text strings that the daemon sends to the client for presentation to the user when using &lt;code&gt;keyboard-interactive&lt;/code&gt; authentication.</source>
          <target state="translated">&lt;code&gt;keyboard-interactive&lt;/code&gt; 인증을 사용할 때 데몬이 사용자에게 표시하기 위해 데몬이 클라이언트에 보내는 텍스트 문자열을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3c6a52e3fe331972e102400ad15024d26902ce1a" translate="yes" xml:space="preserve">
          <source>Sets the three diffie-hellman-group-exchange parameters that guides the connected server in choosing a group. See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; for the details. The default value is &lt;code&gt;{1024, 6144, 8192}&lt;/code&gt;.</source>
          <target state="translated">연결된 서버가 그룹을 선택하도록 안내하는 3 개의 diffie-hellman-group-exchange 매개 변수를 설정합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; 를 참조 하십시오. 기본값은 &lt;code&gt;{1024, 6144, 8192}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9b36931f579df3f2d9a6e12dfa83eb8ecdf25f86" translate="yes" xml:space="preserve">
          <source>Sets the time, as &lt;code&gt; POSIX time&lt;/code&gt;, when the file was created. See also &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일이 생성 된 &lt;code&gt; POSIX time&lt;/code&gt; 을 POSIX 시간 으로 설정합니다 . &lt;code&gt; file:read_file_info/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1dea03eddbfbdc17b4856b2ed4739297317bf436" translate="yes" xml:space="preserve">
          <source>Sets the time, as &lt;code&gt;POSIX time&lt;/code&gt;, when the file was created. See also &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">파일이 작성된 &lt;code&gt;POSIX time&lt;/code&gt; 을 POSIX 시간 으로 설정합니다 . &lt;code&gt;file:read_file_info/1&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c200ccdccaa9b5103f5cca9a46fbc0a24205ad87" translate="yes" xml:space="preserve">
          <source>Sets the time-out in milliseconds when communicating with the agent via the socket. The default value is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">소켓을 통해 에이전트와 통신 할 때 시간 제한 (밀리 초)을 설정합니다. 기본값은 &lt;code&gt;1000&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="250d8fbdeb78ba08efed81e67dd78ccb714268c7" translate="yes" xml:space="preserve">
          <source>Sets the trace token for the calling process to &lt;code&gt;Token&lt;/code&gt;. If &lt;code&gt;Token == []&lt;/code&gt; then tracing is disabled, otherwise &lt;code&gt;Token&lt;/code&gt; should be an Erlang term returned from &lt;code&gt;get_token/0&lt;/code&gt; or &lt;code&gt;set_token/1&lt;/code&gt;. &lt;code&gt;set_token/1&lt;/code&gt; can be used to temporarily exclude message passing from the trace by setting the trace token to empty like this:</source>
          <target state="translated">호출 프로세스의 추적 토큰을 &lt;code&gt;Token&lt;/code&gt; 으로 설정합니다 . 경우 &lt;code&gt;Token == []&lt;/code&gt; 다음 추적 비활성화 달리 &lt;code&gt;Token&lt;/code&gt; 으로부터에 돌려 얼랑 용어이어야 &lt;code&gt;get_token/0&lt;/code&gt; 또는 &lt;code&gt;set_token/1&lt;/code&gt; . &lt;code&gt;set_token/1&lt;/code&gt; 을 사용하면 다음과 같이 추적 토큰을 비워 두어 추적에서 전달되는 메시지를 일시적으로 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e177a1c4c107bb86d8df071af64538578333e871" translate="yes" xml:space="preserve">
          <source>Sets the trace token to empty for all processes on the local node. The process internal counters used to create the serial of the trace token is set to 0. The trace token is set to empty for all messages in message queues. Together this will effectively stop all ongoing sequential tracing in the local node.</source>
          <target state="translated">로컬 노드의 모든 프로세스에 대해 추적 토큰을 비우도록 설정합니다. 추적 토큰의 일련 번호를 만드는 데 사용되는 프로세스 내부 카운터는 0으로 설정됩니다. 메시지 큐의 모든 메시지에 대해 추적 토큰이 비어 있습니다. 이를 통해 로컬 노드에서 진행중인 모든 순차 추적을 효과적으로 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b85bdc9737a006802bb3468719a30c56ed2b6420" translate="yes" xml:space="preserve">
          <source>Sets the trigger action of the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Action&lt;/code&gt;.</source>
          <target state="translated">에서 중단 점의 트리거 동작 설정 &lt;code&gt;Line&lt;/code&gt; 에서 &lt;code&gt;Module&lt;/code&gt; 에 대한 &lt;code&gt;Action&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1193045982755353264319dac915c785e3a3bdb7" translate="yes" xml:space="preserve">
          <source>Sets the type of authentication database that is used for the directory. The key difference between the different methods is that dynamic data can be saved when Mnesia and Dets are used.</source>
          <target state="translated">디렉토리에 사용되는 인증 데이터베이스 유형을 설정합니다. 다른 방법의 주요 차이점은 Mnesia 및 Dets를 사용할 때 동적 데이터를 저장할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8f1019b895f47525edc0d1ccc4bb351ad518bd49" translate="yes" xml:space="preserve">
          <source>Sets the type of authentication database that is used for the directory. The key difference between the different methods is that dynamic data can be saved when Mnesia and Dets are used. This property is called &lt;code&gt;AuthDbType&lt;/code&gt; in the Apache-like configuration files.</source>
          <target state="translated">디렉토리에 사용되는 인증 데이터베이스의 유형을 설정합니다. 다른 방법의 주요 차이점은 Mnesia와 Dets를 사용할 때 동적 데이터를 저장할 수 있다는 것입니다. 이 속성은 Apache와 같은 구성 파일에서 &lt;code&gt;AuthDbType&lt;/code&gt; 이라고 합니다.</target>
        </trans-unit>
        <trans-unit id="f55760789ebae0eb5eec69876adf78743b98b39e" translate="yes" xml:space="preserve">
          <source>Sets the user directory. That is, the directory containing &lt;code&gt;ssh&lt;/code&gt; configuration files for the user, such as &lt;code&gt;known_hosts&lt;/code&gt;, &lt;code&gt;id_rsa&lt;/code&gt;, &lt;code&gt;id_dsa&lt;/code&gt;&amp;gt;, &lt;code&gt;id_ecdsa&lt;/code&gt; and &lt;code&gt;authorized_key&lt;/code&gt;. Defaults to the directory normally referred to as &lt;code&gt;~/.ssh&lt;/code&gt;.</source>
          <target state="translated">사용자 디렉토리를 설정합니다. 디렉토리 포함 즉 &lt;code&gt;ssh&lt;/code&gt; 를 같은 사용자에 대한 구성 파일 &lt;code&gt;known_hosts&lt;/code&gt; , &lt;code&gt;id_rsa&lt;/code&gt; _gsg_keypair를 , &lt;code&gt;id_dsa&lt;/code&gt; &amp;gt;, &lt;code&gt;id_ecdsa&lt;/code&gt; 및 &lt;code&gt;authorized_key&lt;/code&gt; . 일반적으로 &lt;code&gt;~/.ssh&lt;/code&gt; 라고하는 디렉토리가 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="7d825fb37837385173f37fa7881f3347a79ab999" translate="yes" xml:space="preserve">
          <source>Sets the user-defined &lt;code&gt;CpuTopology&lt;/code&gt;. The user-defined CPU topology overrides any automatically detected CPU topology. By passing &lt;code&gt;undefined&lt;/code&gt; as &lt;code&gt;CpuTopology&lt;/code&gt;, the system reverts to the CPU topology automatically detected. The returned value equals the value returned from &lt;code&gt;erlang:system_info(cpu_topology)&lt;/code&gt; before the change was made.</source>
          <target state="translated">사용자 정의 &lt;code&gt;CpuTopology&lt;/code&gt; 를 설정합니다 . 사용자 정의 CPU 토폴로지는 자동 감지 된 CPU 토폴로지보다 우선합니다. 통과시킴으로써 &lt;code&gt;undefined&lt;/code&gt; 로 &lt;code&gt;CpuTopology&lt;/code&gt; 상기 CPU 토폴로지 시스템 돌아가고 자동 검출. 리턴 된 값은 변경하기 전에 &lt;code&gt;erlang:system_info(cpu_topology)&lt;/code&gt; 에서 리턴 된 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2b72f27156031ba71a8d4202b37098640e69fc41" translate="yes" xml:space="preserve">
          <source>Sets the value of an environment variable.</source>
          <target state="translated">환경 변수의 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="04e01758d601353244a736a3ca2896d9893ba37c" translate="yes" xml:space="preserve">
          <source>Sets the value of configuration parameter &lt;code&gt;Par&lt;/code&gt; for &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">매개 변수 구성 값 설정 &lt;code&gt;Par&lt;/code&gt; 에 대한 &lt;code&gt;Application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78404ccd4e2d2f45089e78392485de58e14cdbca" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;get_size&lt;/code&gt; option on the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. This option controls the return value of calls to &lt;code&gt;&lt;a href=&quot;#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; where &lt;code&gt;DHandle&lt;/code&gt; equals &lt;code&gt;DHandle&lt;/code&gt; used when setting this option. When the &lt;code&gt;get_size&lt;/code&gt; option is:</source>
          <target state="translated">의 값을 설정합니다 &lt;code&gt;get_size&lt;/code&gt; 에 의해 식별 된 유통 채널에 대한 옵션 &lt;code&gt;DHandle&lt;/code&gt; 을 . 이 옵션은 호출의 반환 값을 제어 &lt;code&gt;&lt;a href=&quot;#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;DHandle&lt;/code&gt; 이 동일 &lt;code&gt;DHandle&lt;/code&gt; 가 이 옵션을 설정할 때 사용합니다. 때 &lt;code&gt;get_size&lt;/code&gt; 의 옵션은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="55c27c673096bb19cfcdced65bcaa10b64df36dc" translate="yes" xml:space="preserve">
          <source>Sets the value of the node trace control word to &lt;code&gt;TCW&lt;/code&gt;, which is to be an unsigned integer. For more information, see function &lt;code&gt;set_tcw&lt;/code&gt; in section &quot;Match Specifications in Erlang&quot; in the User's Guide.</source>
          <target state="translated">노드 추적 제어 단어의 값을 부호없는 정수인 &lt;code&gt;TCW&lt;/code&gt; 로 설정합니다 . 자세한 정보 는 사용자 안내서의 &quot;Erlang의 일치 스펙&quot;섹션에서 &lt;code&gt;set_tcw&lt;/code&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7182205efd9afd1346318005e01f5aa86d91f5ff" translate="yes" xml:space="preserve">
          <source>Sets the value of the source, as returned by &lt;code&gt;module_info(compile)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module_info(compile)&lt;/code&gt; 반환 한 소스 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="fb3ed06f1faae89c65cc4108c40990ddbc59d3b2" translate="yes" xml:space="preserve">
          <source>Sets the wanted time-out value for the server to set up a request connection.</source>
          <target state="translated">서버가 요청 연결을 설정하기 위해 원하는 시간 종료 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8a2e325c916954b457f470ed8b9a2c99afd59b9f" translate="yes" xml:space="preserve">
          <source>Sets thread-specific data associated with &lt;code&gt;key&lt;/code&gt; for the calling thread. You are only allowed to set thread-specific data for threads while they are fully under your control. For example, if you set thread-specific data in a thread calling a driver callback function, it must be cleared, that is, set to &lt;code&gt;NULL&lt;/code&gt;, before returning from the driver callback function.</source>
          <target state="translated">호출 스레드의 &lt;code&gt;key&lt;/code&gt; 와 연관된 스레드 특정 데이터를 설정합니다 . 스레드가 완전히 제어하는 ​​동안 스레드에 대한 스레드 특정 데이터 만 설정할 수 있습니다. 예를 들어, 드라이버 콜백 함수를 호출하는 스레드에서 스레드 특정 데이터를 설정 한 경우 드라이버 콜백 함수에서 리턴하기 전에 데이터를 지워야합니다 (즉, &lt;code&gt;NULL&lt;/code&gt; 로 설정) .</target>
        </trans-unit>
        <trans-unit id="f13ebdcb8f9c816521928fa2ebf58ae63bc5aba3" translate="yes" xml:space="preserve">
          <source>Sets trace pattern for &lt;strong&gt;message receiving&lt;/strong&gt;. Must be combined with &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; to set the &lt;code&gt;'receive'&lt;/code&gt; trace flag for one or more processes. By default all messages received by &lt;code&gt;'receive'&lt;/code&gt; traced processes are traced. To limit traced receive events based on the message content, the sender and/or the receiver, use &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;메시지 수신에&lt;/strong&gt; 대한 추적 패턴을 설정합니다 . 하나 이상의 프로세스에 대해 &lt;code&gt;'receive'&lt;/code&gt; 추적 플래그 를 설정하려면 &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; 와 결합해야합니다 . 기본적으로 &lt;code&gt;'receive'&lt;/code&gt; 추적 프로세스가 수신 한 모든 메시지 가 추적됩니다. 메시지 내용, 송신자 및 / 또는 수신자에 따라 추적 된 수신 이벤트를 제한하려면 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="000acbf623dd0a04850e3eb66addbc07363da5f6" translate="yes" xml:space="preserve">
          <source>Sets trace pattern for &lt;strong&gt;message sending&lt;/strong&gt;. Must be combined with &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; to set the &lt;code&gt;send&lt;/code&gt; trace flag for one or more processes. By default all messages sent from &lt;code&gt;send&lt;/code&gt; traced processes are traced. To limit traced send events based on the message content, the sender and/or the receiver, use &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;메시지 전송을&lt;/strong&gt; 위한 추적 패턴을 설정합니다 . 하나 이상의 프로세스에 대해 &lt;code&gt;send&lt;/code&gt; 추적 플래그 를 설정하려면 &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; 와 함께 사용해야 합니다. 기본적으로 &lt;code&gt;send&lt;/code&gt; 추적 프로세스 에서 전송 된 모든 메시지 가 추적됩니다. 메시지 내용, 송신자 및 / 또는 수신자에 따라 추적 된 송신 이벤트를 제한하려면 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d302ee41855a16aeca79fd40608595aaab94477" translate="yes" xml:space="preserve">
          <source>Sets trace patterns on global function calls.</source>
          <target state="translated">전역 함수 호출에서 추적 패턴을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="42634745b031a96191e0de66538275f46ca3009d" translate="yes" xml:space="preserve">
          <source>Sets trace patterns on local and global function calls.</source>
          <target state="translated">로컬 및 글로벌 함수 호출에서 추적 패턴을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0192a66af59bf23c109408fa8d652e9f7a095877" translate="yes" xml:space="preserve">
          <source>Sets trace patterns on messages.</source>
          <target state="translated">메시지에 추적 패턴을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4812ffb6716d1729060478d1911eb2d87c30fbd4" translate="yes" xml:space="preserve">
          <source>Sets up a Unix Domain Socket. See &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt; inet:local_address() &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Unix 도메인 소켓을 설정합니다. 참조 &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt; inet:local_address() &lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f20b5257c8e818508783afccee9848f1d15a7976" translate="yes" xml:space="preserve">
          <source>Sets up a Unix Domain Socket. See &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt;inet:local_address()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">유닉스 도메인 소켓을 설정합니다. 참조 &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt;inet:local_address()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b753fabf9b556745a4eefcc949081ec333308d37" translate="yes" xml:space="preserve">
          <source>Sets up a connection to &lt;code&gt;Node&lt;/code&gt;. Returns &lt;code&gt;pong&lt;/code&gt; if it is successful, otherwise &lt;code&gt;pang&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 에 대한 연결을 설정합니다 . 성공하면 &lt;code&gt;pong&lt;/code&gt; 을 , 그렇지 않으면 &lt;code&gt;pang&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8fe298c3aa8927bcebad0c320253b098aeef5b1e" translate="yes" xml:space="preserve">
          <source>Sets up a connection to an Erlang node.</source>
          <target state="translated">Erlang 노드에 대한 연결을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9088fae4ec74e8a34481645dcda97cdce0454731" translate="yes" xml:space="preserve">
          <source>Sets up a socket to listen on port &lt;code&gt;Port&lt;/code&gt; on the local host.</source>
          <target state="translated">로컬 호스트의 포트 &lt;code&gt;Port&lt;/code&gt; 에서 청취 할 소켓을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a22f13589dbf577fc1fc7b2e192f2896825076d0" translate="yes" xml:space="preserve">
          <source>Sets up a socket to listen on the IP address and port number it is bound to.</source>
          <target state="translated">바인드 된 IP 주소 및 포트 번호를 청취하도록 소켓을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="43f7db90674d7030b023f5511d952ba3ab50d90d" translate="yes" xml:space="preserve">
          <source>Sets up the socket for IPv4.</source>
          <target state="translated">IPv4 용 소켓을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="268135a3a9b8586213ce649e0e938b5d7832f78c" translate="yes" xml:space="preserve">
          <source>Sets up the socket for IPv4. This is the default.</source>
          <target state="translated">IPv4 용 소켓을 설정합니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="155bd11114ba428e9118aeae911dce2f96284be3" translate="yes" xml:space="preserve">
          <source>Sets up the socket for IPv6.</source>
          <target state="translated">IPv6 용 소켓을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="151f5bdfc57ff342c5c7407e70c7d5a7f7364306" translate="yes" xml:space="preserve">
          <source>Sets verbosity for the designated process. For the lowest verbosity &lt;code&gt;silence&lt;/code&gt;, nothing is printed. The higher the verbosity, the more is printed.</source>
          <target state="translated">지정된 프로세스에 대한 세부 정보를 설정합니다. 가장 낮은 &lt;code&gt;silence&lt;/code&gt; 경우 아무 것도 인쇄되지 않습니다. 상세도가 높을수록 더 많이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="2fc807f18af7e2ec34af31e8d501e6bbfd070a54" translate="yes" xml:space="preserve">
          <source>Sets warning level to &lt;code&gt;Number&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. To turn off warnings, use &lt;code&gt;-W0&lt;/code&gt;.</source>
          <target state="translated">경고 레벨을 &lt;code&gt;Number&lt;/code&gt; 설정합니다 . 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다. 경고를 끄려면 &lt;code&gt;-W0&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="23e977113917830f9919d655c7161aaf4b253609" translate="yes" xml:space="preserve">
          <source>Sets when and how to attach to a debugged process automatically, see &lt;code&gt;&lt;a href=&quot;int#auto_attach-0&quot;&gt;int:auto_attach/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Function&lt;/code&gt; defaults to the standard function used by Debugger.</source>
          <target state="translated">디버깅 된 프로세스에 자동으로 연결하는시기와 방법을 설정합니다 ( &lt;code&gt;&lt;a href=&quot;int#auto_attach-0&quot;&gt;int:auto_attach/2&lt;/a&gt;&lt;/code&gt; 참조) . &lt;code&gt;Function&lt;/code&gt; 기본값은 디버거에서 사용하는 표준 함수입니다.</target>
        </trans-unit>
        <trans-unit id="d10778ddf5efe6e1338524c56217df5c98662e72" translate="yes" xml:space="preserve">
          <source>Sets whether to kill processes reaching the maximum heap size or not. Default to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최대 힙 크기에 도달 한 프로세스를 종료할지 여부를 설정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6852b168dabd12c3dfbafe087c4d253711cdc5d6" translate="yes" xml:space="preserve">
          <source>Sets whether to kill processes reaching the maximum heap size or not. Default to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최대 힙 크기에 도달하는 프로세스를 강제 종료할지 여부를 설정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b13d3a89efc72e87a945724af0f1a02ceaa4170b" translate="yes" xml:space="preserve">
          <source>Sets whether to send an error logger message or not for processes reaching the maximum heap size. Defaults to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최대 힙 크기에 도달 한 프로세스에 대해 오류 로거 메시지를 보낼지 여부를 설정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5edbc9f34510070fcc2628f8a5499511c41d843" translate="yes" xml:space="preserve">
          <source>Sets whether to send an error logger message or not for processes reaching the maximum heap size. Defaults to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최대 힙 크기에 도달 한 프로세스에 대해 오류 로거 메시지를 보낼지 여부를 설정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a4bf1689aa6558bcc36de9fa2511f7420ccd2f5" translate="yes" xml:space="preserve">
          <source>Sets which areas are to be visible. Does not affect other Attach Process windows.</source>
          <target state="translated">표시 할 영역을 설정합니다. 다른 첨부 프로세스 창에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6db7f09bb39eedf1c38d589591b9edf0bb98249c" translate="yes" xml:space="preserve">
          <source>Setting File and Line</source>
          <target state="translated">파일 및 라인 설정</target>
        </trans-unit>
        <trans-unit id="69e78c76daadcc09ad7daf7a77b23b4c9806193d" translate="yes" xml:space="preserve">
          <source>Setting TERM Environment Variable</source>
          <target state="translated">TERM 환경 변수 설정</target>
        </trans-unit>
        <trans-unit id="87680df1e188aeb28980ce9ee7a1bce6e692209b" translate="yes" xml:space="preserve">
          <source>Setting TERM environment variable</source>
          <target state="translated">TERM 환경 변수 설정</target>
        </trans-unit>
        <trans-unit id="56be8fa38057df49a2d4669fd1732a946514c951" translate="yes" xml:space="preserve">
          <source>Setting a driver monitor for &lt;code&gt;loading&lt;/code&gt; eventually leads to one of the following messages being sent:</source>
          <target state="translated">&lt;code&gt;loading&lt;/code&gt; 위해 드라이버 모니터를 설정하면 결국 다음 메시지 중 하나가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="f5930b58898b1200ca714f8da35aca07bd97aa15" translate="yes" xml:space="preserve">
          <source>Setting a timer with the same &lt;code&gt;Name&lt;/code&gt; while it is running will restart it with the new time-out value. Therefore it is possible to cancel a specific time-out by setting it to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">타이머 가 실행되는 동안 같은 &lt;code&gt;Name&lt;/code&gt; 으로 타이머를 설정 하면 새로운 시간 초과 값 으로 타이머 가 다시 시작됩니다. 따라서 &lt;code&gt;infinity&lt;/code&gt; 으로 설정하여 특정 시간 제한을 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9dbe73b75e3132da6c0f88cd457f518463da818" translate="yes" xml:space="preserve">
          <source>Setting the capture &lt;code&gt;Type&lt;/code&gt; to &lt;code&gt;binary&lt;/code&gt; gives:</source>
          <target state="translated">캡처 &lt;code&gt;Type&lt;/code&gt; 을 &lt;code&gt;binary&lt;/code&gt; 설정 하면 다음이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bdb6a2bf7d379a0ba8bba983befb348c71f7da48" translate="yes" xml:space="preserve">
          <source>Setting the environment variable to a negative value does not reboot the runtime system until the crash dump file is completly written.</source>
          <target state="translated">환경 변수를 음수 값으로 설정하면 크래시 덤프 파일이 완전히 작성 될 때까지 런타임 시스템이 재부팅되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98650d1d499b81b182077d119e9cc56720e9a1cd" translate="yes" xml:space="preserve">
          <source>Setting the shutdown time to anything other than &lt;code&gt;infinity&lt;/code&gt; for a child of type &lt;code&gt;supervisor&lt;/code&gt; can cause a race condition where the child in question unlinks its own children, but fails to terminate them before it is killed.</source>
          <target state="translated">&lt;code&gt;supervisor&lt;/code&gt; 유형의 하위에 대해 종료 시간을 &lt;code&gt;infinity&lt;/code&gt; 이외의 값으로 설정하면 해당 하위가 자신의 하위 연결을 해제하지만 종료되기 전에 종료하지 못하는 경합 상태가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a02b22d3c6077ae6046c20ba84fd141c4597a662" translate="yes" xml:space="preserve">
          <source>Setting these variables wrong may cause hard to detect runtime errors. If you need to change these values, &lt;strong&gt;really&lt;/strong&gt; make sure that the values are correct.</source>
          <target state="translated">이러한 변수를 잘못 설정하면 런타임 오류를 감지하기 어려울 수 있습니다. 이 값을 변경해야 할 경우 &lt;strong&gt;실제로&lt;/strong&gt; 값이 올바른지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="593e05cc199b5354a496052a90ad11424ea46336" translate="yes" xml:space="preserve">
          <source>Setting this flag to &lt;code&gt;false&lt;/code&gt; is not supported on all systems. The flag is then ignored.</source>
          <target state="translated">모든 시스템 에서이 플래그를 &lt;code&gt;false&lt;/code&gt; 로 설정하는 것은 지원되지 않습니다. 그런 다음 플래그는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8927ca5a33183f7759ed85a781a6453e7449e504" translate="yes" xml:space="preserve">
          <source>Setting this flag to &lt;code&gt;false&lt;/code&gt; is possibly not supported on all systems. The flag is then ignored.</source>
          <target state="translated">이 플래그를 &lt;code&gt;false&lt;/code&gt; 로 설정하면 일부 시스템에서 지원되지 않을 수 있습니다. 그런 다음 플래그는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="21bad2817493376033146aa725b2c62429dfb949" translate="yes" xml:space="preserve">
          <source>Setting this option on platforms where it does not exist is ignored. Getting this option with &lt;code&gt;&lt;a href=&quot;#getopts-2&quot;&gt;getopts/2&lt;/a&gt;&lt;/code&gt; returns no value, that is, the returned list does not contain an &lt;code&gt;{ipv6_v6only,_}&lt;/code&gt; tuple. On Windows, the option does not exist, but it is emulated as a read-only option with value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">존재하지 않는 플랫폼에서이 옵션을 설정하면 무시됩니다. &lt;code&gt;&lt;a href=&quot;#getopts-2&quot;&gt;getopts/2&lt;/a&gt;&lt;/code&gt; 로이 옵션을 가져 오면 값이 리턴되지 않습니다. 즉, 리턴 된 목록에 &lt;code&gt;{ipv6_v6only,_}&lt;/code&gt; 튜플이 포함되어 있지 않습니다 . Windows에서는 옵션이 존재하지 않지만 &lt;code&gt;true&lt;/code&gt; 값을 가진 읽기 전용 옵션으로 에뮬레이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="c7882ea914fd57a6b70a77be9894b15da220ad16" translate="yes" xml:space="preserve">
          <source>Setting this option to &lt;code&gt;true&lt;/code&gt; allows you to distinguish between a connection that was closed normally, and one that was aborted (intentionally or unintentionally) by the TCP peer. A call to &lt;code&gt;&lt;a href=&quot;gen_tcp#recv-2&quot;&gt;gen_tcp:recv/2&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;{error, econnreset}&lt;/code&gt;. In active mode, the controlling process receives a &lt;code&gt;{tcp_error, Socket, econnreset}&lt;/code&gt; message before the usual &lt;code&gt;{tcp_closed, Socket}&lt;/code&gt;, as is the case for any other socket error. Calls to &lt;code&gt;&lt;a href=&quot;gen_tcp#send-2&quot;&gt;gen_tcp:send/2&lt;/a&gt;&lt;/code&gt; also returns &lt;code&gt;{error, econnreset}&lt;/code&gt; when it is detected that a TCP peer has sent an RST.</source>
          <target state="translated">이 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 정상적으로 닫힌 연결과 TCP 피어에 의해 의도적으로 또는 실수로 중단 된 연결을 구별 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;gen_tcp#recv-2&quot;&gt;gen_tcp:recv/2&lt;/a&gt;&lt;/code&gt; 를 호출하면 &lt;code&gt;{error, econnreset}&lt;/code&gt; 반환 됩니다. 활성 모드에서 제어 프로세스는 다른 소켓 오류의 경우와 같이 일반적인 &lt;code&gt;{tcp_closed, Socket}&lt;/code&gt; 전에 &lt;code&gt;{tcp_error, Socket, econnreset}&lt;/code&gt; 메시지를 수신합니다 . TCP 피어가 RST를 보냈 음을 감지하면 &lt;code&gt;&lt;a href=&quot;gen_tcp#send-2&quot;&gt;gen_tcp:send/2&lt;/a&gt;&lt;/code&gt; 에 대한 호출 도 &lt;code&gt;{error, econnreset}&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="637256b8a8ace5ebe12ef97908b3a787a8c7db8a" translate="yes" xml:space="preserve">
          <source>Setting this timer while it is running will restart it with the new time-out value. Therefore it is possible to cancel this time-out by setting it to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">이 타이머가 실행되는 동안 설정하면 새로운 시간 초과 값으로 타이머가 다시 시작됩니다. 따라서이 시간 제한을 &lt;code&gt;infinity&lt;/code&gt; 로 설정하여 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df43883f77d81a0444a883d2bd164d4cdfbf7dfe" translate="yes" xml:space="preserve">
          <source>Setting up an Erlang tracer on a set of nodes and connecting trace clients to the ports of these tracers is not intuitive. In order to make this it easier the &lt;code&gt;Event Tracer&lt;/code&gt; has a notion of global tracing. When used, the &lt;code&gt;et_collector&lt;/code&gt; process will monitor Erlang nodes and when one connects, an Erlang tracer will automatically be started on the newly connected node. A corresponding trace client will also be started on the &lt;code&gt;Collector&lt;/code&gt; node in order to automatically forward the trace &lt;code&gt;Events&lt;/code&gt; to the &lt;code&gt;Collector&lt;/code&gt;. Set the boolean parameter &lt;code&gt;trace_global&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for either the &lt;code&gt;et_collector&lt;/code&gt; or &lt;code&gt;et_viewer&lt;/code&gt; in order to activate the global tracing. There is no restriction on how many concurrent (anonymous) collectors you can have, but you can only have one &lt;strong&gt;global&lt;/strong&gt;&lt;code&gt;Collector&lt;/code&gt; as its name is registered in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">노드 세트에서 Erlang 추적 프로그램을 설정하고 추적 클라이언트를 이러한 추적 프로그램의 포트에 연결하는 것은 직관적이지 않습니다. 이를 쉽게하기 위해 &lt;code&gt;Event Tracer&lt;/code&gt; 에는 전역 추적 개념이 있습니다. &lt;code&gt;et_collector&lt;/code&gt; 프로세스를 사용하면 Erlang 노드가 모니터링되고 하나가 연결되면 새로 연결된 노드에서 Erlang 추적 프로그램이 자동으로 시작됩니다. 추적 &lt;code&gt;Events&lt;/code&gt; 를 &lt;code&gt;Collector&lt;/code&gt; 로 자동 전달하기 위해 &lt;code&gt;Collector&lt;/code&gt; 노드 에서도 해당 추적 클라이언트가 시작됩니다 . &lt;code&gt;et_collector&lt;/code&gt; 또는 &lt;code&gt;et_viewer&lt;/code&gt; 에 대해 부울 매개 변수 &lt;code&gt;trace_global&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오.글로벌 추적을 활성화하기 위해. 동시 (익명) 수집기 수에는 제한이 없지만 이름이 &lt;code&gt;global&lt;/code&gt; 에 등록되어 있으므로 하나의 &lt;strong&gt;전역 &lt;/strong&gt; &lt;code&gt;Collector&lt;/code&gt; 만 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92be12f51cfcae1379d05955e4edd3794a720f91" translate="yes" xml:space="preserve">
          <source>Setting up connections, sending and receiving data.</source>
          <target state="translated">연결 설정, 데이터 송수신</target>
        </trans-unit>
        <trans-unit id="d9bcae303564e4f2b0a81dbc82c1c2a6226bacd0" translate="yes" xml:space="preserve">
          <source>Setting up the trace:</source>
          <target state="translated">추적 설정 :</target>
        </trans-unit>
        <trans-unit id="a51e3da2458bdd26e8b067eb0fdeaf14a14ae006" translate="yes" xml:space="preserve">
          <source>Setup Telnet connection to a Unix host.</source>
          <target state="translated">Unix 호스트에 Telnet 연결을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="663702dff631642a2cf35f5021ac8225355092ec" translate="yes" xml:space="preserve">
          <source>Setup a connection to an LDAP server, the &lt;code&gt;HOST&lt;/code&gt;'s are tried in order.</source>
          <target state="translated">LDAP 서버에 대한 연결을 설정하면 &lt;code&gt;HOST&lt;/code&gt; 가 순서대로 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="d9bdeaa169ac79e6d85855e41f472a17ba2a4109" translate="yes" xml:space="preserve">
          <source>Setup a connection to the MGC with megaco:connect/4 and provide it with a receive handle obtained from megaco:user_info/2.</source>
          <target state="translated">megaco : connect / 4를 사용하여 MGC에 대한 연결을 설정하고 megaco : user_info / 2에서 얻은 수신 핸들을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="e25bcc4326bd2dce597a662adc2220a4d7e18163" translate="yes" xml:space="preserve">
          <source>Setup the environment with:</source>
          <target state="translated">다음을 사용하여 환경을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9f49948dfbe508cb0e9b5a2e0b068b2ceac48204" translate="yes" xml:space="preserve">
          <source>Several binary terms can be managed by the same resource object. The destructor is not called until the last binary is garbage collected. This can be useful to return different parts of a larger binary buffer.</source>
          <target state="translated">동일한 이진 개체로 여러 이진 용어를 관리 할 수 ​​있습니다. 마지막 바이너리가 가비지 수집 될 때까지 소멸자가 호출되지 않습니다. 큰 이진 버퍼의 다른 부분을 반환하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f203ffdc28fd3a5e01f37c57a0b2ffb21a1404a5" translate="yes" xml:space="preserve">
          <source>Several configuration options for authentication handling are available in &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/[3,4]&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/[2,3]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인증 처리를위한 여러 구성 옵션이 &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/[3,4]&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/[2,3]&lt;/a&gt;&lt;/code&gt; 에서 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="17a1068b0ec5899384907dd32033d6b291c50746" translate="yes" xml:space="preserve">
          <source>Several entities (&lt;code&gt;mib-server&lt;/code&gt; via the its data module and the &lt;code&gt;symbolic-store&lt;/code&gt;) of the snmp agent uses this for storage of miscelaneous mib related data dataretrieved while loading a mib.</source>
          <target state="translated">snmp 에이전트의 여러 엔티티 ( 데이터 모듈 및 &lt;code&gt;symbolic-store&lt;/code&gt; 를 통한 &lt;code&gt;mib-server&lt;/code&gt; )는이를 사용하여 mib를로드하는 동안 검색된 기타 mib 관련 데이터 데이터를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="b3dac911d4d97804fc7ab2a4ca1605a501a5814a" translate="yes" xml:space="preserve">
          <source>Several instructions can share a group. As an example, the following instructions have different names, but in the end they all create a binary. The last two operands are common for all of them:</source>
          <target state="translated">여러 지침이 그룹을 공유 할 수 있습니다. 예를 들어 다음 명령어는 이름이 다르지만 결국 모두 바이너리를 만듭니다. 마지막 두 피연산자는 모두 공통입니다.</target>
        </trans-unit>
        <trans-unit id="47dc841907020a6c99a3862103e41b6f954068f8" translate="yes" xml:space="preserve">
          <source>Several module attributes have predefined meanings. Some of them have arity two, but user-defined module attributes must have arity one.</source>
          <target state="translated">여러 모듈 속성에는 사전 정의 된 의미가 있습니다. 그들 중 일부는 arity 2를 갖지만 사용자 정의 모듈 속성은 arity 1을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="64b1f44e8ea5da422fccfc427560cce56bf4ec0b" translate="yes" xml:space="preserve">
          <source>Several of the procedures in this section require expert knowledge of the Solaris operating system. For most of them super user privilege is needed.</source>
          <target state="translated">이 절의 여러 절차를 수행하려면 Solaris 운영 체제에 대한 전문 지식이 필요합니다. 대부분의 경우 슈퍼 사용자 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c4878bcf5e2a41e786bb27ba681ceac3573bfe05" translate="yes" xml:space="preserve">
          <source>Several things are wrong with the messenger example in &lt;code&gt;&lt;a href=&quot;conc_prog#ex&quot;&gt;A Larger Example&lt;/a&gt;&lt;/code&gt;. For example, if a node where a user is logged on goes down without doing a logoff, the user remains in the server's &lt;code&gt;User_List&lt;/code&gt;, but the client disappears. This makes it impossible for the user to log on again as the server thinks the user already is logged on.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;conc_prog#ex&quot;&gt;A Larger Example&lt;/a&gt;&lt;/code&gt; 의 메신저 예제에는 몇 가지 문제가 있습니다. 예를 들어, 사용자가 로그온 한 노드가 로그 오프하지 않고 작동 중지되면 사용자는 서버의 &lt;code&gt;User_List&lt;/code&gt; 에 남아 있지만 클라이언트는 사라집니다. 서버에서 사용자가 이미 로그온했다고 생각하면 사용자가 다시 로그온 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d5312822a3678145f8534f5413245ef38ad1e54" translate="yes" xml:space="preserve">
          <source>Several transactions can run concurrently, and their execution is fully synchronized by the DBMS. Mnesia ensures that no two processes manipulate data simultaneously.</source>
          <target state="translated">여러 트랜잭션이 동시에 실행될 수 있으며 실행은 DBMS에 의해 완전히 동기화됩니다. Mnesia는 두 프로세스가 동시에 데이터를 조작하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="92056ce55485ad43691924b2fa50c145b64665a0" translate="yes" xml:space="preserve">
          <source>Several users have created Erlang port drivers, linked-in drivers, or NIFs that allow Erlang code to try to activate a probe, e.g. &lt;code&gt;foo_module:dtrace_probe(&quot;message goes here!&quot;)&lt;/code&gt;.</source>
          <target state="translated">여러 사용자가 Erlang 코드가 프로브 활성화를 시도 할 수있는 Erlang 포트 드라이버, 링크 된 드라이버 또는 NIF를 작성했습니다 &lt;code&gt;foo_module:dtrace_probe(&quot;message goes here!&quot;)&lt;/code&gt; 예 : foo_module : dtrace_probe ( &quot;message goes here!&quot;)) .</target>
        </trans-unit>
        <trans-unit id="953228d3c8c820114f1fb9c582c86cdc57738b22" translate="yes" xml:space="preserve">
          <source>Shall ack's be accumulated or not.</source>
          <target state="translated">애크가 쌓여 있을까요?</target>
        </trans-unit>
        <trans-unit id="9dd9163cd11e283c13779c403a7f468f2fe1f10f" translate="yes" xml:space="preserve">
          <source>Shall outgoing messages be segmented or not:</source>
          <target state="translated">발신 메시지가 분할되어 있는지 여부</target>
        </trans-unit>
        <trans-unit id="84da0d111d1591fb8d93639edcffa7d1e68ef6c3" translate="yes" xml:space="preserve">
          <source>Shall requests be accumulated or not.</source>
          <target state="translated">요청이 누적되는지 여부</target>
        </trans-unit>
        <trans-unit id="c1d41fa6accb18af237aee7055043bfe6e9ffefd" translate="yes" xml:space="preserve">
          <source>Shall the agent utilize the mib server lookup cache or not.</source>
          <target state="translated">에이전트가 mib 서버 조회 캐시를 활용하는지 여부</target>
        </trans-unit>
        <trans-unit id="79f0dcea94ed19607e21c8e24deeecee8068e306" translate="yes" xml:space="preserve">
          <source>Shall the provided descriptor be duplicated (dup) or not.</source>
          <target state="translated">제공된 디스크립터가 중복 (dup)되어야하는지 여부.</target>
        </trans-unit>
        <trans-unit id="1999b28ce10eeddd9229bdd4cdb29f0107536815" translate="yes" xml:space="preserve">
          <source>Sharada</source>
          <target state="translated">Sharada</target>
        </trans-unit>
        <trans-unit id="4798770317cbbba3bd3456b905b876a908476919" translate="yes" xml:space="preserve">
          <source>Shared subterms are &lt;strong&gt;not&lt;/strong&gt; preserved in the following cases:</source>
          <target state="translated">다음과 같은 경우 공유 하위 용어가 유지 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="39563286dc1b257ea37b2acac903e4d5484b60f1" translate="yes" xml:space="preserve">
          <source>SharedSecret</source>
          <target state="translated">SharedSecret</target>
        </trans-unit>
        <trans-unit id="61106366759b055e0ad334722705582952604753" translate="yes" xml:space="preserve">
          <source>Shavian</source>
          <target state="translated">Shavian</target>
        </trans-unit>
        <trans-unit id="bdc1fd5d3c0f3dcfd55d010426e61bf9451e680d" translate="yes" xml:space="preserve">
          <source>Shell</source>
          <target state="translated">Shell</target>
        </trans-unit>
        <trans-unit id="92d91c0e9c2e10b3624ca467a6cfec024511dd3e" translate="yes" xml:space="preserve">
          <source>Shell Commands</source>
          <target state="translated">셸 명령</target>
        </trans-unit>
        <trans-unit id="ef9616c857753c597c39d03dcea5d1d91ea29e1e" translate="yes" xml:space="preserve">
          <source>Shell break mode, which allows the user to kill the current shell, start multiple shells, and so on.</source>
          <target state="translated">사용자가 현재 쉘을 종료하고 여러 쉘을 시작할 수있는 쉘 분리 모드.</target>
        </trans-unit>
        <trans-unit id="9a06f06d11a4ab61872b5cff61fb65cd691ff9c5" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;&lt;a href=&quot;#mac-4&quot;&gt;mac(Type, undefined, Key, Data)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;&lt;a href=&quot;#mac-4&quot;&gt;mac(Type, undefined, Key, Data)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f4f36bde2b16d3555b48b8dcb1ef5f5eb7136df" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;&lt;a href=&quot;#macN-5&quot;&gt;macN(Type, undefined, Key, Data, MacLength)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;&lt;a href=&quot;#macN-5&quot;&gt;macN(Type, undefined, Key, Data, MacLength)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11a67e5487f6594da4d2d31b9f31bb33ca600fb7" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;&lt;a href=&quot;#mac_init-3&quot;&gt;mac_init(Type, undefined, Key)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;&lt;a href=&quot;#mac_init-3&quot;&gt;mac_init(Type, undefined, Key)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa1a01079b5835555814261f1212f480e1691e25" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;[return_comments, return_white_spaces]&lt;/code&gt;.</source>
          <target state="translated">짧은에 대한 &lt;code&gt;[return_comments, return_white_spaces]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76db78875af6459d9f0696e37664eeca77bff7e0" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{sync_transaction, infinity}&lt;/code&gt;</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;{sync_transaction, infinity}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40b4a47803a3f7d2d655392829dc3c728c04b670" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{timeout,Time,Time}&lt;/code&gt;, that is, the time-out message is the time-out time. This form exists to make the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; return value &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; allowed like for &lt;code&gt;gen_fsm&lt;/code&gt;.</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;{timeout,Time,Time}&lt;/code&gt; , 즉, 시간 초과 메시지가 타임 아웃 시간입니다. 이 양식 은 &lt;code&gt;gen_fsm&lt;/code&gt; 과 같이 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; 반환 값 &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; 을 허용하기 위해 존재 합니다.</target>
        </trans-unit>
        <trans-unit id="31adfe9300bdea8479ecdebe4d15167c20d2a058" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{timeout,Time,Time}&lt;/code&gt;, that is, the time-out message is the time-out time. This form exists to make the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; return value &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; allowed like for &lt;code&gt;gen_fsm&lt;/code&gt;.</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;{timeout,Time,Time}&lt;/code&gt; , 즉, 시간 초과 메시지가 타임 아웃 시간입니다. 이 형식은 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; 리턴 값 &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; 을 &lt;code&gt;gen_fsm&lt;/code&gt; 과 같이 허용하도록하기 위해 존재 합니다.</target>
        </trans-unit>
        <trans-unit id="9f5066037d01a80777a796bb823f34a8a4627bc4" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{transaction, infinity}&lt;/code&gt;</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;{transaction, infinity}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a5cc636f6e706f346639f25e6caf9640ec221fa" translate="yes" xml:space="preserve">
          <source>Short for iterate(Handle, Prev, Limit, undefined, Prev) -&amp;gt; NewAcc</source>
          <target state="translated">반복의 단축 (핸들, 이전, 한계, 정의되지 않음, 이전)-&amp;gt; NewAcc</target>
        </trans-unit>
        <trans-unit id="0eddb382ca301cea608270411284f3b7a5baecb7" translate="yes" xml:space="preserve">
          <source>Short-circuit expressions (&lt;code&gt;andalso&lt;/code&gt;/&lt;code&gt;orelse&lt;/code&gt;)</source>
          <target state="translated">단락 표현 ( &lt;code&gt;andalso&lt;/code&gt; / &lt;code&gt;orelse&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e4d03a5e2757528aa47d1292f70f2e09181472bf" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;{shell, true}&lt;/code&gt;.</source>
          <target state="translated">에 대한 바로 가기 &lt;code&gt;{shell, true}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4430a48833772a9118c84cdf670050ab3520f691" translate="yes" xml:space="preserve">
          <source>Shortcuts are provided for the most common match specifications (to not force you to use &lt;code&gt;dbg:fun2ms&lt;/code&gt; continually).</source>
          <target state="translated">가장 일반적인 일치 사양에 대한 바로 가기가 제공됩니다 ( &lt;code&gt;dbg:fun2ms&lt;/code&gt; 를 계속 사용하지 않도록 ).</target>
        </trans-unit>
        <trans-unit id="5a834720e0a7fbb62e1fa52d859544b13c9feac3" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;&lt;a href=&quot;#allocations-1&quot;&gt;allocations(#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#allocations-1&quot;&gt;allocations(#{}).&lt;/a&gt;&lt;/code&gt; 약어 (# {}).</target>
        </trans-unit>
        <trans-unit id="75477da2f51c368c966e096bed63b71628d41fa6" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;&lt;a href=&quot;#carriers-1&quot;&gt;carriers(#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#carriers-1&quot;&gt;carriers(#{}).&lt;/a&gt;&lt;/code&gt; 줄임말입니다 .</target>
        </trans-unit>
        <trans-unit id="8ecedead60dacea1d8e283b2d1d72c8978ac59af" translate="yes" xml:space="preserve">
          <source>Should dynamic tracing be enabled in the current build, either by configuring with &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; or with &lt;code&gt;./configure --with-dynamic-trace=systemtap&lt;/code&gt;, the module can be used for two things:</source>
          <target state="translated">&lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; 또는 &lt;code&gt;./configure --with-dynamic-trace=systemtap&lt;/code&gt; 로 구성하여 현재 빌드에서 동적 추적을 사용 가능 하게하는 경우 다음 두 가지 용도로 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0437abf42c4b352aef94f3921643a39aab05c60" translate="yes" xml:space="preserve">
          <source>Should indicate a row number in the result set. When used together with the option &lt;code&gt;relative&lt;/code&gt;it will be used as an offset from the current cursor position, when used together with the option &lt;code&gt;absolute&lt;/code&gt;it will be interpreted as a row number.</source>
          <target state="translated">결과 집합에 행 번호를 표시해야합니다. 옵션 &lt;code&gt;relative&lt;/code&gt; 와 함께 사용하면 현재 커서 위치로부터의 오프셋으로 사용되며, &lt;code&gt;absolute&lt;/code&gt; 옵션과 함께 사용 하면 행 번호로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="87bbe6664ba23178fc2f08be7a16df28de849d32" translate="yes" xml:space="preserve">
          <source>Should this state enter call return any of the mentioned &lt;code&gt;repeat_*&lt;/code&gt; callback results it is repeated again, with the updated &lt;code&gt;Data&lt;/code&gt;.</source>
          <target state="translated">이 상태가 call에 들어가면 언급 된 &lt;code&gt;repeat_*&lt;/code&gt; 콜백 결과가 반환 되고 업데이트 된 &lt;code&gt;Data&lt;/code&gt; 와 함께 다시 반복됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ed71c0673531ef050259f62c8bc181620c1ee73" translate="yes" xml:space="preserve">
          <source>Show Reports</source>
          <target state="translated">보고서보기</target>
        </trans-unit>
        <trans-unit id="8bb1c009b2a3939af7acb19eae44ed0b4006d58f" translate="yes" xml:space="preserve">
          <source>Shows statistics about how many processes and ports of different priorities are scheduled on this scheduler.</source>
          <target state="translated">이 스케줄러에서 스케줄 된 여러 우선 순위의 프로세스 및 포트 수에 대한 통계를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="cca56f8737e5ba39e8bb4fa3267f178eeefba8dd" translate="yes" xml:space="preserve">
          <source>Shows the Debugger documentation. This function requires a web browser.</source>
          <target state="translated">디버거 설명서를 보여줍니다. 이 기능에는 웹 브라우저가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e9a0366eca6c33c68a7ae8650693a9b72c0ed968" translate="yes" xml:space="preserve">
          <source>Shows the list of traced nodes on the console.</source>
          <target state="translated">콘솔에서 추적 된 노드 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="af7317b061e054bbf75a81c9cf23a533ab246505" translate="yes" xml:space="preserve">
          <source>Shows the process current stack trace.</source>
          <target state="translated">프로세스 현재 스택 추적을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="afd62206b65136a95184a6d1bc0e6d27d271ad8a" translate="yes" xml:space="preserve">
          <source>Shows the process dictionary.</source>
          <target state="translated">프로세스 사전을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7e1e5e65f35d2ced1865bbb58bc31b796acd9dc9" translate="yes" xml:space="preserve">
          <source>Shows the process information.</source>
          <target state="translated">프로세스 정보를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="25ea81fb58517940197f2aafaef0ab992149d1f7" translate="yes" xml:space="preserve">
          <source>Shows the process messages.</source>
          <target state="translated">프로세스 메시지를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c539f252c25e14ac8c38ae7080c889438210e1db" translate="yes" xml:space="preserve">
          <source>Shows the process state.</source>
          <target state="translated">프로세스 상태를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f8f25cbfb5c9eb839d810e956131b96efa598923" translate="yes" xml:space="preserve">
          <source>Shut down all or part of a full-duplex connection.</source>
          <target state="translated">전이중 연결의 전체 또는 일부를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="00e04a038b0f4a60ba35ed85bd576feefa37527a" translate="yes" xml:space="preserve">
          <source>Shut down the application.</source>
          <target state="translated">응용 프로그램을 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="5929b8178813a482c23e31d212e2b87ab625aacb" translate="yes" xml:space="preserve">
          <source>Shut down the connection.</source>
          <target state="translated">연결을 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="771605b7e2faa19b853b2b22a601d4632a4de900" translate="yes" xml:space="preserve">
          <source>Shutdown messages. If the process traps exits, it must be able to handle a shutdown request from its parent, the supervisor. The message &lt;code&gt;{'EXIT', Parent, Reason}&lt;/code&gt; from the parent is an order to terminate. The process must terminate when this message is received, normally with the same &lt;code&gt;Reason&lt;/code&gt; as &lt;code&gt;Parent&lt;/code&gt;.</source>
          <target state="translated">종료 메시지. 프로세스 트랩이 종료되면 상위 관리자 인 종료 요청을 처리 할 수 ​​있어야합니다. &lt;code&gt;{'EXIT', Parent, Reason}&lt;/code&gt; 의 메시지 { 'EXIT', Parent, Reason} 은 종료 명령입니다. 이 메시지가 수신되면 일반적 으로 &lt;code&gt;Parent&lt;/code&gt; 와 동일한 &lt;code&gt;Reason&lt;/code&gt; 프로세스가 종료되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5dd17f62764d26edd13c5721eca15f106d89d872" translate="yes" xml:space="preserve">
          <source>Shutdown the connection after sending an unbindRequest to the server. If the connection is tls the connection will be closed with &lt;code&gt;ssl:close/1&lt;/code&gt;, otherwise with &lt;code&gt;gen_tcp:close/1&lt;/code&gt;.</source>
          <target state="translated">서버에 unbindRequest를 보낸 후 연결을 종료하십시오. 연결이 tls이면 연결은 &lt;code&gt;ssl:close/1&lt;/code&gt; 로 &lt;code&gt;gen_tcp:close/1&lt;/code&gt; 그렇지 않으면 gen_tcp : close / 1로 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="e6bbb0a6e5cac678bc175ea6d85ec4b15910fc2a" translate="yes" xml:space="preserve">
          <source>Siddham</source>
          <target state="translated">Siddham</target>
        </trans-unit>
        <trans-unit id="4e73f25226c38f85c03e2bae0b5a152e6391c8fd" translate="yes" xml:space="preserve">
          <source>Sign with an engine stored private key</source>
          <target state="translated">엔진에 저장된 개인 키로 서명</target>
        </trans-unit>
        <trans-unit id="630e9ed4e7c2f5356a2ef604fc80241d1a4a399b" translate="yes" xml:space="preserve">
          <source>Signal latency. Due to the previous synchronous implementation, latency of signals sent from processes to ports have usually been very low. During contention the latency has of course increased. Users expect latency of these signals to be low, a sudden increase in latency would not be appreciated by our users.</source>
          <target state="translated">신호 지연. 이전의 동기식 구현으로 인해 프로세스에서 포트로 전송되는 신호의 지연 시간은 일반적으로 매우 낮았습니다. 경합 중에 지연 시간은 물론 증가했습니다. 사용자는 이러한 신호의 지연 시간이 낮을 것으로 예상하며, 지연 시간의 갑작스러운 증가는 사용자가 인정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="335ada0fd1e8e66a25c60aa34ea9bc4094159c99" translate="yes" xml:space="preserve">
          <source>Signal ordering guarantee. Signals from process &lt;code&gt;X&lt;/code&gt; to port &lt;code&gt;Y&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; be delivered to &lt;code&gt;Y&lt;/code&gt; in the same order as sent from &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">신호 주문 보증. 프로세스의 신호 &lt;code&gt;X&lt;/code&gt; 포트 &lt;code&gt;Y&lt;/code&gt; 는 , &lt;strong&gt;해야&lt;/strong&gt; 에 전달 &lt;code&gt;Y&lt;/code&gt; 로부터 전송 된 동일한 순서로 &lt;code&gt;X&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be1fe36a30a5da7f54ce4747832ce5c1e754df3f" translate="yes" xml:space="preserve">
          <source>Signals (RFC 4254, section 6.9)</source>
          <target state="translated">신호 (RFC 4254, 섹션 6.9)</target>
        </trans-unit>
        <trans-unit id="605784b6a41da8c216384af17fedaf4ea7949e51" translate="yes" xml:space="preserve">
          <source>Signals on a condition variable. That is, if other threads are waiting on the condition variable being signaled, &lt;strong&gt;one&lt;/strong&gt; of them is woken.</source>
          <target state="translated">조건 변수에 신호를 보냅니다. 즉, 다른 스레드가 신호를받는 조건 변수를 기다리고 있으면 스레드 &lt;strong&gt;중 하나&lt;/strong&gt; 가 깨어납니다.</target>
        </trans-unit>
        <trans-unit id="a42db5fa15b2aaf10f4ab3ca3339ac18a184f963" translate="yes" xml:space="preserve">
          <source>Signals that no more options will follow. The rest of the arguments is treated as filenames, even if they start with hyphens.</source>
          <target state="translated">더 이상 옵션이 따르지 않음을 나타냅니다. 나머지 인수는 하이픈으로 시작하더라도 파일 이름으로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="9e81626d91d87689423a127ef78b79b6280ae1d9" translate="yes" xml:space="preserve">
          <source>Signals to Erlang that the driver has encountered an EOF and is to be closed, unless the port was opened with option &lt;code&gt;eof&lt;/code&gt;, in which case &lt;code&gt;eof&lt;/code&gt; is sent to the port. Otherwise the port is closed and an &lt;code&gt;'EXIT'&lt;/code&gt; message is sent to the port owner process.</source>
          <target state="translated">포트가 &lt;code&gt;eof&lt;/code&gt; 옵션으로 열린 경우 (이 경우 &lt;code&gt;eof&lt;/code&gt; 가 포트로 전송 됨)가 아니면 드라이버가 EOF를 발견하여 닫히도록 Erlang에 알립니다 . 그렇지 않으면 포트가 닫히고 &lt;code&gt;'EXIT'&lt;/code&gt; 메시지가 포트 소유자 프로세스로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="16b32371d9d1262296723dfb57c3bb8cc193e0d3" translate="yes" xml:space="preserve">
          <source>Signals to Erlang that the driver has encountered an error and is to be closed. The port is closed and the tuple &lt;code&gt;{'EXIT', error, Err}&lt;/code&gt; is sent to the port owner process, where error is an error atom (&lt;code&gt;driver_failure_atom&lt;/code&gt; and &lt;code&gt;driver_failure_posix&lt;/code&gt;) or an integer (&lt;code&gt;driver_failure&lt;/code&gt;).</source>
          <target state="translated">드라이버에 오류가 발생하여 닫 혔음을 Erlang에 알립니다. 포트가 닫히고 튜플 &lt;code&gt;{'EXIT', error, Err}&lt;/code&gt; 이 포트 소유자 프로세스로 전송되며, 여기서 오류는 오류 원자 ( &lt;code&gt;driver_failure_atom&lt;/code&gt; 및 &lt;code&gt;driver_failure_posix&lt;/code&gt; ) 또는 정수 ( &lt;code&gt;driver_failure&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="2ed050bcc714436bf2f469d55f05f070015bc07b" translate="yes" xml:space="preserve">
          <source>Signature Algorithms</source>
          <target state="translated">서명 알고리즘</target>
        </trans-unit>
        <trans-unit id="fa68abbcd0be412d32a08716226355d755903c22" translate="yes" xml:space="preserve">
          <source>Signature Algorithms Certificate</source>
          <target state="translated">서명 알고리즘 인증서</target>
        </trans-unit>
        <trans-unit id="965b9da4fc5ee59e5eab3aea8692dc8773dce529" translate="yes" xml:space="preserve">
          <source>Signature Algorithms: All algorithms form RFC 8446</source>
          <target state="translated">서명 알고리즘 : 모든 알고리즘은 RFC 8446을 형성합니다.</target>
        </trans-unit>
        <trans-unit id="d8393a49bd477502a464f4e8c274610689e23884" translate="yes" xml:space="preserve">
          <source>Signature OID from a certificate or a certificate revocation list.</source>
          <target state="translated">인증서 또는 인증서 해지 목록의 서명 OID</target>
        </trans-unit>
        <trans-unit id="e4192711e69a169ef257a8ed11ef7b729ebe7f27" translate="yes" xml:space="preserve">
          <source>Signed 32-bit integer in big-endian format.</source>
          <target state="translated">빅 엔디안 형식의 부호있는 32 비트 정수</target>
        </trans-unit>
        <trans-unit id="e8f027fb105359b9adbe2c5e3e92eecc0d931640" translate="yes" xml:space="preserve">
          <source>Significant slowdown</source>
          <target state="translated">현저한 둔화</target>
        </trans-unit>
        <trans-unit id="d1ce612bbd2647327e208416917e5465c1f2cf95" translate="yes" xml:space="preserve">
          <source>Signifies that one or more arguments are of wrong data type or are otherwise badly formed.</source>
          <target state="translated">하나 이상의 인수가 잘못된 데이터 유형이거나 형식이 잘못되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d22f04603be83e708f1977fc5e2ef8d2a468e176" translate="yes" xml:space="preserve">
          <source>Signifies that the algorithm is known but is not supported by current underlying libcrypto or explicitly disabled when building that one.</source>
          <target state="translated">알고리즘이 알려져 있지만 현재 기본 libcrypto에서 지원하지 않거나 빌드 할 때 명시 적으로 비활성화됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aaf29fdf7d3efb52ff1d067430cfd6fabe62a793" translate="yes" xml:space="preserve">
          <source>Signs an 'OTPTBSCertificate'. Returns the corresponding DER-encoded certificate.</source>
          <target state="translated">'OTPTBSCertificate'에 서명합니다. 해당 DER로 인코딩 된 인증서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="412a0c1f6813d40930f20e83a07080e463a488ae" translate="yes" xml:space="preserve">
          <source>Silent mode is inhibited by executing &lt;code&gt;erlang:trace(_, false, [silent|_])&lt;/code&gt;, or by a match specification executing the function &lt;code&gt;{silent, false}&lt;/code&gt;.</source>
          <target state="translated">자동 모드는 &lt;code&gt;erlang:trace(_, false, [silent|_])&lt;/code&gt; 실행하거나 &lt;code&gt;{silent, false}&lt;/code&gt; 함수를 실행하는 일치 스펙에 의해 금지됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc5b38bafdb2cd68736d6e58f39158c6684c316b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+IOp&quot;&gt;+IOp&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of IO pollsets to create, based on the number of poll threads configured. If both &lt;code&gt;+IOPp&lt;/code&gt; and &lt;code&gt;+IOp&lt;/code&gt; are used, &lt;code&gt;+IOPp&lt;/code&gt; is ignored.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;#+IOp&quot;&gt;+IOp&lt;/a&gt;&lt;/code&gt; 만 사용 비율은 구성 폴링 스레드의 수에 따라 만들 수있는 IO의 pollsets의 수를 설정합니다. 두 경우 &lt;code&gt;+IOPp&lt;/code&gt; 와 &lt;code&gt;+IOp&lt;/code&gt; 사용되며, &lt;code&gt;+IOPp&lt;/code&gt; 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="beaae04fe80dac03472574f6a33a1acd3da285ba" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+IOt&quot;&gt;+IOt&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of IO poll threads to create, based on the number of schedulers configured. If both &lt;code&gt;+IOPt&lt;/code&gt; and &lt;code&gt;+IOt&lt;/code&gt; are used, &lt;code&gt;+IOPt&lt;/code&gt; is ignored.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;#+IOt&quot;&gt;+IOt&lt;/a&gt;&lt;/code&gt; 만 사용 비율은 구성 스케줄러의 수에 따라 만들 수있는 IO 폴링 스레드의 수를 설정합니다. 두 경우 &lt;code&gt;+IOPt&lt;/code&gt; 와 &lt;code&gt;+IOt&lt;/code&gt; 사용되며, &lt;code&gt;+IOPt&lt;/code&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="d29c3a8cb7c8651dc67ba8c291c251740a7f678c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of scheduler threads to create, based on logical processors configured, and scheduler threads to set online, based on logical processors available. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SP 50:25&lt;/code&gt; sets the number of scheduler threads to 50% of the logical processors configured, and the number of scheduler threads online to 25% of the logical processors available. &lt;code&gt;SchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 백분율을 사용하여 구성된 논리 프로세서를 기반으로 작성할 스케줄러 스레드 수를 설정하고 사용 가능한 논리 프로세서를 기반으로 온라인으로 설정할 스케줄러 스레드 수를 설정합니다. 지정된 값은&amp;gt; 0이어야합니다. 예를 들어 &lt;code&gt;+SP 50:25&lt;/code&gt; 는 스케줄러 스레드 수를 구성된 논리 프로세서의 50 %로 설정하고 온라인 스케줄러 스레드 수를 사용 가능한 논리 프로세서의 25 %로 설정합니다. &lt;code&gt;SchedulersPercentage&lt;/code&gt; 는 경우 생략 할 수 &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; 하지 역으로합니다. 온라인 스케줄러의 수는 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; 통해 런타임에 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ed1027dcf2ea46a9a4998d498242256f205af11" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of scheduler threads to create, based on logical processors configured, and scheduler threads to set online, based on logical processors available. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SP 50:25&lt;/code&gt; sets the number of scheduler threads to 50% of the logical processors configured, and the number of scheduler threads online to 25% of the logical processors available. &lt;code&gt;SchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; 만 사용 비율은 가능한 논리적 프로세서를 기반으로 온라인 설정하기 위해 구성된 논리 프로세서를 기반으로, 만들 수있는 스케줄러 스레드 스케줄러 스레드의 수를 설정합니다. 지정된 값은&amp;gt; 0이어야합니다. 예를 들어 &lt;code&gt;+SP 50:25&lt;/code&gt; 는 스케줄러 스레드 수를 구성된 논리 프로세서의 50 %로 설정하고 스케줄러 스레드 수는 온라인에서 사용 가능한 논리 프로세서의 25 %로 설정합니다. &lt;code&gt;SchedulersPercentage&lt;/code&gt; 는 경우 생략 할 수 &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; 하지 역으로합니다. 온라인 스케줄러 수는 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; 통해 런타임시 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f56e9c3012c66b6db422ac0c6b22122dc0ba1e4a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of dirty CPU scheduler threads to create and the number of dirty CPU scheduler threads to set online. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; sets the number of dirty CPU scheduler threads to 50% of the logical processors configured and the number of dirty CPU scheduler threads online to 25% of the logical processors available. &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of dirty CPU schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 백분율을 사용하여 생성 할 더티 CPU 스케줄러 스레드 수와 온라인으로 설정할 더티 CPU 스케줄러 스레드 수를 설정합니다. 지정된 값은&amp;gt; 0이어야합니다. 예를 들어 &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; 는 더티 CPU 스케줄러 스레드 수를 구성된 논리 프로세서의 50 %로 설정하고 온라인 더티 CPU 스케줄러 스레드 수를 사용 가능한 논리 프로세서의 25 %로 설정합니다. &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; 가 아닌 경우 &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; 를 생략 할 수 있습니다 . 온라인 더티 CPU 스케줄러의 수는 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; 통해 런타임에 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7daafcf7ad6c93a7a6f9d32a59194055af91723" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of dirty CPU scheduler threads to create and the number of dirty CPU scheduler threads to set online. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; sets the number of dirty CPU scheduler threads to 50% of the logical processors configured and the number of dirty CPU scheduler threads online to 25% of the logical processors available. &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of dirty CPU schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 백분율을 사용하여 작성할 더티 CPU 스케줄러 스레드 수 및 더티 CPU 스케줄러 스레드 수를 온라인으로 설정하십시오. 지정된 값은&amp;gt; 0이어야합니다. 예를 들어 &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; 는 더티 CPU 스케줄러 스레드 수를 구성된 논리 프로세서의 50 %로 설정하고 더티 CPU 스케줄러 스레드 수를 온라인에서 사용 가능한 논리 프로세서의 25 %로 설정합니다. &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; 는 &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; 가 반대로되어있는 경우 생략 할 수 있습니다 . 더티 CPU 스케줄러 온라인의 수는 런타임시 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; 통해 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23646d43525fa8727fd14d31f241c4e8c2382559" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#get_all_values-2&quot;&gt;get_all_values/2&lt;/a&gt;&lt;/code&gt;, but each value is wrapped in a list unless it is already itself a list. The resulting list of lists is concatenated. This is often useful for &quot;incremental&quot; options.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;#get_all_values-2&quot;&gt;get_all_values/2&lt;/a&gt;&lt;/code&gt; ,하지만 이미 자체 목록이 아닌 각 값은 목록에 싸여있다. 결과 목록 목록이 연결됩니다. 이것은 종종 &quot;증분&quot;옵션에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c71338b1d526b480e927286135466622d44048af" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt;, but returns the list of values for &lt;strong&gt;all&lt;/strong&gt; entries &lt;code&gt;{Key, Value}&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;. If no such entry exists, the result is the empty list.</source>
          <target state="translated">유사 &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt; ,하지만 반환 값 목록 &lt;strong&gt;의 모든&lt;/strong&gt; 항목 &lt;code&gt;{Key, Value}&lt;/code&gt; 의 &lt;code&gt;List&lt;/code&gt; . 해당 항목이 없으면 결과는 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="1e79016034236afb8e96918f496249aefb66daea" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#parse-3&quot;&gt;parse/3&lt;/a&gt;&lt;/code&gt;, but does a more quick-and-dirty processing of the code. See &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#parse-3&quot;&gt;parse/3&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 코드를 더 빠르고 더럽게 처리합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="591c6115ca4de4119e98f9d60e0ba5162fc97c7e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt;, but does a more quick-and-dirty processing of the code. Macro definitions and other preprocessor directives are discarded, and all macro calls are replaced with atoms. This is useful when only the main structure of the code is of interest, and not the details. Furthermore, the quick-parse method can usually handle more strange cases than the normal, more exact parsing.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt; 와 유사 하지만 코드를 더 빠르고 더럽게 처리합니다. 매크로 정의 및 기타 전 처리기 지시문은 무시되고 모든 매크로 호출은 원자로 대체됩니다. 이것은 코드의 주요 구조 만 관심이 있고 세부 사항이 아닌 경우에 유용합니다. 또한 빠른 구문 분석 방법은 일반적으로보다 정확한 일반 구문 분석보다 더 이상한 경우를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="66054f6b91c1d4dc893f7baed3f4fc4b0f39d068" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#parse_form-3&quot;&gt;parse_form/3&lt;/a&gt;&lt;/code&gt;, but does a more quick-and-dirty processing of the code. See &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#parse_form-3&quot;&gt;parse_form/3&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 코드를 더 빠르고 더럽게 처리합니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1cfc453ab3294622bc18b55823b9dca359bf7eaa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt;, but the result is treated as having zero width. This is regardless of the actual length of the string. Null text is typically used for markup, which is supposed to have no effect on the actual layout.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt; 과 유사 하지만 결과는 너비가 0 인 것으로 처리됩니다. 이것은 문자열의 실제 길이와 관계가 없습니다. 널 텍스트는 일반적으로 마크 업에 사용되며 실제 레이아웃에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a313253bd8ecf55665744df8607d46a41cb09a4e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Busy&lt;/code&gt;, but for processor states that have been identified as non-busy (see below).</source>
          <target state="translated">유사 &lt;code&gt;Busy&lt;/code&gt; 하지만 비 바쁜 것으로 확인 된 상태에 대한 프로세서 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="72e027038a1d8d631fe5efff041f41ef409e7329" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;epmd -names&lt;/code&gt;, see &lt;code&gt;erts:epmd(1)&lt;/code&gt;. &lt;code&gt;Host&lt;/code&gt; defaults to the local host. Returns the names and associated port numbers of the Erlang nodes that &lt;code&gt;epmd&lt;/code&gt; registered at the specified host. Returns &lt;code&gt;{error, address}&lt;/code&gt; if &lt;code&gt;epmd&lt;/code&gt; is not operational.</source>
          <target state="translated">&lt;code&gt;epmd -names&lt;/code&gt; 와 유사하게 erts &lt;code&gt;erts:epmd(1)&lt;/code&gt; 참조하십시오 . &lt;code&gt;Host&lt;/code&gt; 기본적으로 로컬 호스트입니다. 지정된 호스트에 &lt;code&gt;epmd&lt;/code&gt; 가 등록한 Erlang 노드의 이름과 관련 포트 번호를 반환합니다 . 반환 &lt;code&gt;{error, address}&lt;/code&gt; 경우 &lt;code&gt;epmd&lt;/code&gt; 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82fcb52db95f9a14e4104723017ba9e2eb50e140" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;erl_receive_msg&lt;/code&gt;. The difference is that &lt;code&gt;erl_xreceive_msg&lt;/code&gt; expects the buffer to have been allocated by &lt;code&gt;malloc&lt;/code&gt;, and reallocates it if the received message does not fit into the original buffer. Therefore both buffer and buffer length are given as pointers; their values can change by the call.</source>
          <target state="translated">&lt;code&gt;erl_receive_msg&lt;/code&gt; 와 유사합니다 . 차이점은 &lt;code&gt;erl_xreceive_msg&lt;/code&gt; 는 &lt;code&gt;malloc&lt;/code&gt; 에 의해 버퍼가 할당 될 것으로 예상 하고 수신 된 메시지가 원래 버퍼에 맞지 않으면 다시 할당한다는 것입니다. 따라서 버퍼와 버퍼 길이는 모두 포인터로 제공됩니다. 통화에 따라 값이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab87d8ac9fbd24c47c965fa94af671a7b7a42f29" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;fprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms of type &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fprintf&lt;/code&gt; 와 유사 하지만이 형식 문자열은 &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt; 유형의 Erlang 용어를 형식화하는 &lt;code&gt;&quot;%T&quot;&lt;/code&gt; 도 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="24a3520b99d03fedfe093fa71f689f66180f99db" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;fprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms.</source>
          <target state="translated">&lt;code&gt;fprintf&lt;/code&gt; 와 비슷 하지만이 형식 문자열은 &lt;code&gt;&quot;%T&quot;&lt;/code&gt; 도 허용하며 , Erlang 용어의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0763544797f9cc930c9c7101e8ab0d1d22e9c8a2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;restart&lt;/code&gt;, but does not try to detect cyclic restarts; it is expected that some other mechanism is present to avoid the problem.</source>
          <target state="translated">유사 제품에 &lt;code&gt;restart&lt;/code&gt; 하지만,주기가 다시 시작을 감지하려고하지 않는다; 문제를 피하기 위해 다른 메커니즘이 존재할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="4ca14a71b883332df372dbc2ac708b02bc19611b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;s&lt;/code&gt;, but the resulting string is converted into an atom.</source>
          <target state="translated">마찬가지로 &lt;code&gt;s&lt;/code&gt; 있지만 결과 스트링 원자으로 변환된다.</target>
        </trans-unit>
        <trans-unit id="fa8b7ba7547e2b8fd1aa01b5699931e06be79828" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;snprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms of type &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;snprintf&lt;/code&gt; 와 유사 하지만이 형식 문자열은 &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt; 유형의 Erlang 용어를 형식화하는 &lt;code&gt;&quot;%T&quot;&lt;/code&gt; 도 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="41b6788042ed4402f8196ce090ffe41800f243e1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;snprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms.</source>
          <target state="translated">&lt;code&gt;snprintf&lt;/code&gt; 와 비슷 하지만이 형식 문자열은 &lt;code&gt;&quot;%T&quot;&lt;/code&gt; 도 허용하며 Erlang 용어의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dc61bb7ba306f6c5743c6b046f81f49228917865" translate="yes" xml:space="preserve">
          <source>Similar to option &lt;code&gt;basic_validation&lt;/code&gt;. No code is generated, but more compiler passes are run to ensure that warnings generated by the optimization passes are generated (such as clauses that will not match, or expressions that are guaranteed to fail with an exception at runtime).</source>
          <target state="translated">&lt;code&gt;basic_validation&lt;/code&gt; 옵션과 유사합니다 . 코드가 생성되지 않지만 최적화 패스에 의해 생성 된 경고 (예 : 일치하지 않는 절 또는 런타임시 예외로 실패한 식)가 생성되도록하기 위해 더 많은 컴파일러 패스가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="b09ef632a09513d38827bddcf23558af804221c6" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;debug_info_key&lt;/code&gt; option, but the key is read from an &lt;code&gt;.erlang.crypt&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;debug_info_key&lt;/code&gt; 옵션과 유사 하지만 &lt;code&gt;.erlang.crypt&lt;/code&gt; 파일 에서 키를 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="0fbf22d2d36bde3d87c90b58638094bd2d62b855" translate="yes" xml:space="preserve">
          <source>Similarly, binaries that look like UTF-8 encoded strings are output with the binary string syntax if the &lt;code&gt;t&lt;/code&gt; modifier is specified:</source>
          <target state="translated">마찬가지로, &lt;code&gt;t&lt;/code&gt; 수정자가 지정된 경우 UTF-8로 인코딩 된 문자열처럼 보이는 이진은 이진 문자열 구문으로 출력 됩니다.</target>
        </trans-unit>
        <trans-unit id="4a5d414c80fb2628268791e5b7748129dcb29b5d" translate="yes" xml:space="preserve">
          <source>Similarly, for messages received from a port, a port controller has to retrieve trace-specific information, and set appropriate sequential trace flags through calls to &lt;code&gt;seq_trace:set_token/2&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 포트에서 수신 된 메시지의 경우 포트 컨트롤러는 추적 관련 정보를 검색하고 &lt;code&gt;seq_trace:set_token/2&lt;/code&gt; 에 대한 호출을 통해 적절한 순차 추적 플래그를 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="25997ae5e98658acfbb221772e9d3e259057b949" translate="yes" xml:space="preserve">
          <source>Similarly, multiple values from the map can be matched:</source>
          <target state="translated">마찬가지로 맵의 여러 값을 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d183ee2551cd4ea6e4d3eebe55485c514589d6f" translate="yes" xml:space="preserve">
          <source>Similarly, the application must be stopped by calling &lt;code&gt;application:stop(Application)&lt;/code&gt; at all involved nodes.</source>
          <target state="translated">마찬가지로, 관련된 모든 노드에서 &lt;code&gt;application:stop(Application)&lt;/code&gt; 을 호출하여 응용 프로그램을 중지해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f5b5e30866ed0fb5b8f5d08a3acd60a7754728a0" translate="yes" xml:space="preserve">
          <source>Similarly, trivial transformations on the source-code level such as converting a &lt;code&gt;case&lt;/code&gt; statement to clauses at the top-level of the function seldom makes any difference to the generated code.</source>
          <target state="translated">마찬가지로, 이러한 변환과 같은 소스 코드 레벨에서 사소한 변형 &lt;code&gt;case&lt;/code&gt; 함수의 최상위에 조항에 문이 거의 생성 된 코드에 어떠한 차이가 없다.</target>
        </trans-unit>
        <trans-unit id="bf12ea44b68122770e35ca5a253cccd62d860498" translate="yes" xml:space="preserve">
          <source>Simple Higher Order Functions</source>
          <target state="translated">단순한 고차 함수</target>
        </trans-unit>
        <trans-unit id="ce56ddd62b380bd2c81731139cdc0c712149a87a" translate="yes" xml:space="preserve">
          <source>Simple code replacement of the module &lt;code&gt;Mod&lt;/code&gt;.</source>
          <target state="translated">모듈 &lt;code&gt;Mod&lt;/code&gt; 의 간단한 코드 교체 .</target>
        </trans-unit>
        <trans-unit id="87da945cd34ff8f8a141563c28f80c41d1476512" translate="yes" xml:space="preserve">
          <source>Simple event-based front-ends to xmerl_scan for processing of XML documents in streams and for parsing in SAX style.</source>
          <target state="translated">스트림에서 XML 문서를 처리하고 SAX 스타일로 구문 분석하기 위해 xmerl_scan에 대한 간단한 이벤트 기반 프론트 엔드.</target>
        </trans-unit>
        <trans-unit id="56a07b115ecfcd5e8be531e976a2a96fb43a2ceb" translate="yes" xml:space="preserve">
          <source>Simple event-based front-ends to xmerl_scan for processing of XML documents in streams and for parsing in SAX style. Each contain more elaborate settings of xmerl_scan that makes usage of the customization functions.</source>
          <target state="translated">스트림에서 XML 문서를 처리하고 SAX 스타일로 구문 분석하기 위해 xmerl_scan에 대한 간단한 이벤트 기반 프론트 엔드. 각각은 사용자 정의 기능을 사용하는보다 정교한 xmerl_scan 설정을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6667a691d6c48980afebaca8b210f62982385042" translate="yes" xml:space="preserve">
          <source>Simple filters are translated into equivalent match specifications.</source>
          <target state="translated">단순 필터는 동등한 일치 스펙으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="a7ac2dd4dd81d9ff20ef673d34ebb52a547c79d8" translate="yes" xml:space="preserve">
          <source>Simple skeletons: If, Case, Receive, Receive After, Receive Loop - Basic code constructs.</source>
          <target state="translated">간단한 스켈레톤 : If, Case, Receive, Receive After, Receive Loop-기본 코드 구성.</target>
        </trans-unit>
        <trans-unit id="22d543a32fba30bc1f23d1bfefa506cc5184802e" translate="yes" xml:space="preserve">
          <source>Simple use; creates and seeds the default algorithm with a non-constant seed if not already done:</source>
          <target state="translated">간단한 사용; 상수가 아닌 시드로 기본 알고리즘을 작성하고 시드합니다 (아직 수행하지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="9d366ef7a00e61a9e60ce8b79309e5e1e09c594f" translate="yes" xml:space="preserve">
          <source>Simplified start of a sequence chart viewer with global tracing activated.</source>
          <target state="translated">글로벌 추적이 활성화 된 시퀀스 차트 뷰어의 단순화 된 시작.</target>
        </trans-unit>
        <trans-unit id="4877feccaf7be9c5cb78312e4ba3da5b4a7402da" translate="yes" xml:space="preserve">
          <source>Simply put, connection-oriented socket communication (TCP/IP) consists of an initiator socket (&quot;server&quot;) started at a certain host with a certain port number. A connector socket (&quot;client&quot;), which is aware of the initiator host name and port number, can connect to it and data can be sent between them.</source>
          <target state="translated">간단히 말해서 연결 지향 소켓 통신 (TCP / IP)은 특정 포트 번호로 특정 호스트에서 시작된 이니시에이터 소켓 ( &quot;서버&quot;)으로 구성됩니다. 이니시에이터 호스트 이름 및 포트 번호를 알고있는 커넥터 소켓 ( &quot;클라이언트&quot;)을 연결하여 데이터를 전송할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="506ee5095e84f9f475858f43278c69f52b0d1486" translate="yes" xml:space="preserve">
          <source>Simulates a time-out when executing a &lt;code&gt;receive...after&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;receive...after&lt;/code&gt; 문을 실행할 때 시간 종료를 시뮬레이트합니다 .</target>
        </trans-unit>
        <trans-unit id="6e32cda5df77b168fc7318c22725d629257e0556" translate="yes" xml:space="preserve">
          <source>Simultaneous backup calls are &lt;strong&gt;not&lt;/strong&gt; allowed. That is, two different processes cannot simultaneously successfully call this function. One of them will be first, and succeed. The second will fail with the error reason &lt;code&gt;backup_in_progress&lt;/code&gt;.</source>
          <target state="translated">동시 백업 호출은 허용 &lt;strong&gt;되지&lt;/strong&gt; 않습니다. 즉, 두 개의 다른 프로세스가 동시에이 함수를 성공적으로 호출 할 수 없습니다. 그들 중 하나가 먼저 성공할 것입니다. 두 번째는 &lt;code&gt;backup_in_progress&lt;/code&gt; 오류 이유와 함께 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="deb3684d5ead9f80a8f0c0356fa4de19eda57364" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;filter_default&lt;/code&gt; defaults to &lt;code&gt;log&lt;/code&gt;, this handler now receives all log events. If you want info events only in the file, you must add a filter to stop all non-info events. The built-in filter &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt; logger_filters:level/2&lt;/a&gt;&lt;/code&gt; can do this:</source>
          <target state="translated">이후 &lt;code&gt;filter_default&lt;/code&gt; 의 기본값을 &lt;code&gt;log&lt;/code&gt; ,이 핸들러는 이제 모든 로그 이벤트를 수신합니다. 파일에 정보 이벤트 만 포함하려면 필터를 추가하여 정보가 아닌 모든 이벤트를 중지해야합니다. 내장 필터 &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt; logger_filters:level/2&lt;/a&gt;&lt;/code&gt; 는 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2914983192b284a9d510877945c3ce2a59d441e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;filter_default&lt;/code&gt; defaults to &lt;code&gt;log&lt;/code&gt;, this handler now receives all log events. If you want info events only in the file, you must add a filter to stop all non-info events. The built-in filter &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt;logger_filters:level/2&lt;/a&gt;&lt;/code&gt; can do this:</source>
          <target state="translated">이후 &lt;code&gt;filter_default&lt;/code&gt; 의 기본값을 &lt;code&gt;log&lt;/code&gt; ,이 핸들러는 이제 모든 로그 이벤트를 수신합니다. 파일에서만 정보 이벤트를 원하는 경우 정보가 아닌 모든 이벤트를 중지하려면 필터를 추가해야합니다. 내장 필터 &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt;logger_filters:level/2&lt;/a&gt;&lt;/code&gt; 는 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6022342a60e9de6fa2494fe49163e991025cb95e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;fprof&lt;/code&gt; uses trace to file, the runtime performance degradation is minimized, but still far from negligible, especially for programs that use the filesystem heavily by themselves. Where you place the trace file is also important, e.g on Solaris &lt;code&gt;/tmp&lt;/code&gt; is usually a good choice since it is essentially a RAM disk, while any NFS (network) mounted disk is a bad idea.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 는 파일 추적 기능을 사용 하므로 런타임 성능 저하는 최소화되지만 특히 파일 시스템을 많이 사용하는 프로그램의 경우에는 무시할 수있는 수준과는 거리가 멀습니다. 추적 파일을 배치하는 위치도 중요합니다. 예를 들어 Solaris &lt;code&gt;/tmp&lt;/code&gt; 는 일반적으로 RAM 디스크이므로 일반적으로 좋은 선택입니다. 반면 NFS (네트워크) 마운트 디스크는 좋지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc4aa5cbb251c7ad89f2aeeababed306f6d9026b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;fprof&lt;/code&gt; uses trace to file, the runtime performance degradation is minimized, but still far from negligible, especially not for programs that use the filesystem heavily by themselves. Where you place the trace file is also important, e.g on Solaris &lt;code&gt;/tmp&lt;/code&gt; is usually a good choice, while any NFS mounted disk is a lousy choice.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; 는 파일 추적 기능을 사용 하므로 런타임 성능 저하가 최소화되지만 여전히 파일 시스템을 많이 사용하는 프로그램의 경우에는 무시할 수있는 수준이 아닙니다. 추적 파일을 배치하는 위치도 중요합니다. 예를 들어 Solaris에서 &lt;code&gt;/tmp&lt;/code&gt; 를 사용하는 것이 좋습니다. NFS 마운트 디스크를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a7e523deb3133ff853e30d467f7a1e58416fbcc0" translate="yes" xml:space="preserve">
          <source>Since ERTS 5.5 (Erlang/OTP R11B), &lt;code&gt;orig_bytes&lt;/code&gt; is guaranteed to be properly aligned for storage of an array of doubles (usually 8-byte aligned).</source>
          <target state="translated">ERTS 5.5 (Erlang / OTP R11B) 이후, &lt;code&gt;orig_bytes&lt;/code&gt; 는 2 배 (보통 8 바이트 정렬)의 스토리지를 위해 올바르게 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="7b4f82fe7fc2ec7a3e8ea259abcf7ecef813be40" translate="yes" xml:space="preserve">
          <source>Since ERTS 5.7.2 (OTP R13B) the runtime system passes a distribution flag in the handshake stage that enables the use of a &lt;code&gt;&lt;a href=&quot;erl_ext_dist#distribution_header&quot;&gt;distribution header &lt;/a&gt;&lt;/code&gt; on all messages passed. Messages passed between nodes have in this case the following format:</source>
          <target state="translated">ERTS 5.7.2 (OTP R13B) 이후 런타임 시스템은 전달 된 모든 메시지 에서 &lt;code&gt;&lt;a href=&quot;erl_ext_dist#distribution_header&quot;&gt;distribution header &lt;/a&gt;&lt;/code&gt; 를 사용할 수 있도록 핸드 셰이크 단계에서 배포 플래그를 전달합니다. 이 경우 노드간에 전달되는 메시지의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="72cffeb51e0969b463e7862612a7a16a012bc42e" translate="yes" xml:space="preserve">
          <source>Since ERTS 9.0 (OTP-20.0), resource terms have a defined behavior when compared and serialized through &lt;code&gt;term_to_binary&lt;/code&gt; or passed between nodes.</source>
          <target state="translated">ERTS 9.0 (OTP-20.0) 이후로, 자원 용어는 &lt;code&gt;term_to_binary&lt;/code&gt; 를 통해 비교되고 직렬화 되거나 노드간에 전달 될 때 정의 된 동작을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="c9ee9d4a83339c7cbf019dafa14b709fff182389" translate="yes" xml:space="preserve">
          <source>Since Logger is new in Erlang/OTP 21.0, we do reserve the right to introduce changes to the Logger API and functionality in patches following this release. These changes might or might not be backwards compatible with the initial version.</source>
          <target state="translated">Logger는 Erlang / OTP 21.0에서 새로 도입되었으므로이 릴리스 이후 패치에서 Logger API 및 기능에 대한 변경 사항을 도입 할 권리가 있습니다. 이러한 변경 사항은 초기 버전과 호환되거나 이전 버전과 호환되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1388c7f42c463e118733594ab56b9edf44014b2b" translate="yes" xml:space="preserve">
          <source>Since Mnesia detects deadlocks, a transaction can be restarted any number of times. This function attempts a restart as specified in &lt;code&gt;Retries&lt;/code&gt;. &lt;code&gt;Retries&lt;/code&gt; must be an integer greater than 0 or the atom &lt;code&gt;infinity&lt;/code&gt;. Default is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">Mnesia는 교착 상태를 감지하므로 트랜잭션을 여러 번 다시 시작할 수 있습니다. 이 기능에 지정된 다시 시작 시도 &lt;code&gt;Retries&lt;/code&gt; . &lt;code&gt;Retries&lt;/code&gt; 는 0보다 큰 정수 또는 원자 &lt;code&gt;infinity&lt;/code&gt; 여야합니다 . 기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="54cccee0e2962510ff34ad2497056ae18c5dc9a8" translate="yes" xml:space="preserve">
          <source>Since OTP 21 the recommended module to handle URIs is &lt;code&gt;uri_string&lt;/code&gt;. The module &lt;code&gt;http_uri&lt;/code&gt; does not provide a implementation that satisfies the RFC. Formally deprecated since OTP-23.</source>
          <target state="translated">OTP 21 이후 URI를 처리하는 데 권장되는 모듈은 &lt;code&gt;uri_string&lt;/code&gt; 입니다. &lt;code&gt;http_uri&lt;/code&gt; 모듈 은 RFC를 충족하는 구현을 제공하지 않습니다. OTP-23 이후 공식적으로 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="963d9d48c7ed23ddce3bee658cf6c76c9bd17ce0" translate="yes" xml:space="preserve">
          <source>Since OTP 21 the recommended module to handle URIs is &lt;code&gt;uri_string&lt;/code&gt;. The module http_uri does not provide a implementation that satisfies the RFC.</source>
          <target state="translated">OTP 21 이후 URI를 처리하는 데 권장되는 모듈은 &lt;code&gt;uri_string&lt;/code&gt; 입니다. http_uri 모듈은 RFC를 충족하는 구현을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1f2a7910e9660499194205c29b7be7835a30ce8" translate="yes" xml:space="preserve">
          <source>Since R14, the following can also be written:</source>
          <target state="translated">R14부터 다음과 같이 쓸 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="413d9b584917b55b7fedeb013c6059a26ce95726" translate="yes" xml:space="preserve">
          <source>Since XSLT is based on a functional programming approach with pattern matching and recursion it is possible to write similar style sheets in Erlang. At least for basic transforms. This document describes how to use the XPath implementation together with Erlangs pattern matching and a couple of functions to write XSLT like transforms.</source>
          <target state="translated">XSLT는 패턴 일치 및 재귀 기능을 갖춘 기능적 프로그래밍 방식을 기반으로하기 때문에 Erlang에서 유사한 스타일 시트를 작성할 수 있습니다. 최소한 기본 변환의 경우. 이 문서는 XPath 구현을 Erlangs 패턴 일치 및 몇 가지 함수와 함께 사용하여 XSLT와 같은 변환을 작성하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ada107b11ee6de2781cde05ad5e1f711f358a1b4" translate="yes" xml:space="preserve">
          <source>Since a distributed application can move between nodes, some addressing mechanism is required to ensure that it can be addressed by other applications, regardless on which node it currently executes. This issue is not addressed here, but the &lt;code&gt;global&lt;/code&gt; or &lt;code&gt;pg2&lt;/code&gt; modules in Kernel can be used for this purpose.</source>
          <target state="translated">분산 응용 프로그램은 노드간에 이동할 수 있기 때문에 현재 실행중인 노드에 관계없이 다른 응용 프로그램이이를 해결할 수 있도록 일부 주소 지정 메커니즘이 필요합니다. 이 문제는 여기서 다루지 않지만 Kernel 의 &lt;code&gt;global&lt;/code&gt; 또는 &lt;code&gt;pg2&lt;/code&gt; 모듈을이 목적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66ff30f9b57f24db2b0f992306001681b97fc267" translate="yes" xml:space="preserve">
          <source>Since a distributed application can move between nodes, some addressing mechanism is required to ensure that it can be addressed by other applications, regardless on which node it currently executes. This issue is not addressed here, but the &lt;code&gt;global&lt;/code&gt; or &lt;code&gt;pg&lt;/code&gt; modules in Kernel can be used for this purpose.</source>
          <target state="translated">분산 응용 프로그램은 노드간에 이동할 수 있으므로 현재 실행중인 노드에 관계없이 다른 응용 프로그램에서 주소를 지정할 수 있도록 일부 주소 지정 메커니즘이 필요합니다. 이 문제는 여기서 해결되지 않지만 Kernel 의 &lt;code&gt;global&lt;/code&gt; 또는 &lt;code&gt;pg&lt;/code&gt; 모듈을이 목적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87e18457af74e313fcf9d346cd7367f52085b23e" translate="yes" xml:space="preserve">
          <source>Since a postponed event is only retried after a &lt;strong&gt;state change&lt;/strong&gt;, you have to think about where to keep a state data item. You can keep it in the server &lt;code&gt;Data&lt;/code&gt; or in the &lt;code&gt;State&lt;/code&gt; itself, for example by having two more or less identical states to keep a boolean value, or by using a complex state (see section &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt;) with &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;&lt;code&gt;handle_event_function&lt;/code&gt;. If a change in the value changes the set of events that is handled, then the value should be kept in the State. Otherwise no postponed events will be retried since only the server Data changes.</source>
          <target state="translated">연기 된 이벤트는 &lt;strong&gt;상태 변경&lt;/strong&gt; 후에 만 재 시도되므로 상태 데이터 항목을 보관할 위치를 고려해야합니다. 사용자는 서버에 보관 가능 &lt;code&gt;Data&lt;/code&gt; 또는의 &lt;code&gt;State&lt;/code&gt; , 또는 복합 상태 (절 참조하여 부울 값을 유지하는 두 개의 다소 동일한 상태들을 가짐으로써, 예를 들면, 자체 &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt; 로) &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; &lt;code&gt;handle_event_function&lt;/code&gt; . 값의 변경으로 처리되는 이벤트 세트가 변경되는 경우 값은 State에 유지되어야합니다. 그렇지 않으면 서버 데이터 만 변경되므로 연기 된 이벤트가 재 시도되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98f99e28651d1cfab72f2d2bfc5daa600567ec43" translate="yes" xml:space="preserve">
          <source>Since a postponed event is only retried after a state change, you have to think about where to keep a state data item. You can keep it in the server &lt;code&gt;Data&lt;/code&gt; or in the &lt;code&gt;State&lt;/code&gt; itself, for example by having two more or less identical states to keep a boolean value, or by using a complex state (see section &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt;) with &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;Callback Mode&lt;/a&gt;&lt;/code&gt;&lt;code&gt;handle_event_function&lt;/code&gt;. If a change in the value changes the set of events that is handled, then the value should be kept in the State. Otherwise no postponed events will be retried since only the server Data changes.</source>
          <target state="translated">연기 된 이벤트는 상태 변경 후에 만 ​​재 시도되므로 상태 데이터 항목을 보관할 위치를 고려해야합니다. 사용자는 서버에 보관 가능 &lt;code&gt;Data&lt;/code&gt; 또는의 &lt;code&gt;State&lt;/code&gt; , 또는 복합 상태 (절 참조하여 부울 값을 유지하는 두 개의 다소 동일한 상태들을 가짐으로써, 예를 들면, 자체 &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt; )와 &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;Callback Mode&lt;/a&gt;&lt;/code&gt; &lt;code&gt;handle_event_function&lt;/code&gt; 를 . 값이 변경되면 처리되는 이벤트 세트가 변경되면 값은 상태로 유지되어야합니다. 그렇지 않으면 서버 데이터 만 변경되므로 연기 된 이벤트가 재 시도되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a6f8f634b0fc5e7ed2d9442c74c26d0c1d5e639" translate="yes" xml:space="preserve">
          <source>Since applications tend to be transient (they are dynamically loaded and unloaded), the management of these applications must be dynamic as well. For example, if we have an equipment MIB for a rack and different MIBs for boards, which can be installed in the rack, the MIB for a card should be loaded when the card is inserted, and unloaded when the card is removed.</source>
          <target state="translated">응용 프로그램은 일시적인 경향이 있으므로 (동적으로로드 및 언로드) 이러한 응용 프로그램의 관리도 동적이어야합니다. 예를 들어 랙에 설치할 수있는 랙용 장비 MIB와 보드 용 다른 MIB가있는 경우 카드를 삽입 할 때 카드 용 MIB를로드하고 카드를 제거하면 언로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="823de482e19675451f12ff79abbfd8b7be1c5f44" translate="yes" xml:space="preserve">
          <source>Since both operations involve the 1.1 index, this is transformed into one call to &lt;code&gt;my_table&lt;/code&gt;:</source>
          <target state="translated">두 작업 모두 1.1 인덱스를 사용하므로 &lt;code&gt;my_table&lt;/code&gt; 을 한 번의 호출로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b635880c7663b7344b64c7beff4c9c8ade44107b" translate="yes" xml:space="preserve">
          <source>Since breakpoints are used there is no need for special compilation of any module to be profiled. For now these breakpoints can only be set on BEAM code so BIFs cannot be call count traced.</source>
          <target state="translated">중단 점이 사용되므로 프로파일 링 할 모듈을 특수하게 컴파일 할 필요가 없습니다. 현재이 중단 점은 BEAM 코드에서만 설정할 수 있으므로 BIF를 호출 횟수를 추적 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="52bfe1fd9891a26c0e22f589483714dc657e5292" translate="yes" xml:space="preserve">
          <source>Since it is desired to update the record using the function &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; after the salary has been increased, a write lock (third argument to &lt;code&gt;read&lt;/code&gt;) is acquired when the record from the table is read.</source>
          <target state="translated">급여가 증가한 후 &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; 함수를 사용하여 레코드를 갱신하는 것이 바람직 하므로, 테이블에서 레코드 를 &lt;code&gt;read&lt;/code&gt; 때 쓰기 잠금 (세 번째 인수 읽기 )이 획득됩니다.</target>
        </trans-unit>
        <trans-unit id="e6a5be82abdc524be2ea57029dbb0043327eeb95" translate="yes" xml:space="preserve">
          <source>Since it is the port itself which decides when it is time to enter a busy state, it needs to be executing in order to enter the busy state. As a result of &lt;code&gt;command&lt;/code&gt; signals being scheduled, we may get into a situation where the port gets flooded by a huge amount of &lt;code&gt;command&lt;/code&gt; signals before it even gets a chance to set itself into a busy state. This since it has not been scheduled for execution yet. That is, under these circumstances the busy port functionality loose the flow control properties it was intended to provide.</source>
          <target state="translated">Busy 상태로 진입 할시기를 결정하는 것은 포트 자체이기 때문에 busy 상태로 진입하기 위해서는 실행 중이어야합니다. 예정된 &lt;code&gt;command&lt;/code&gt; 신호 의 결과로 포트가 바쁜 상태로 설정되기 전에 엄청난 양의 &lt;code&gt;command&lt;/code&gt; 신호 로 인해 포트가 넘쳐나는 상황에 처할 수 있습니다 . 이것은 아직 실행 예정이 아니기 때문입니다. 즉, 이러한 상황에서 사용중인 포트 기능은 제공하려는 흐름 제어 속성을 잃어 버립니다.</target>
        </trans-unit>
        <trans-unit id="38407ec48edd8217e05a2557f650908c44d41ec9" translate="yes" xml:space="preserve">
          <source>Since record expressions are expanded to tuple expressions, creating records and accessing record fields are allowed in guards. However all subexpressions, for example, for field initiations, must be valid guard expressions as well.</source>
          <target state="translated">레코드 표현식은 튜플 표현식으로 확장되므로 레코드 작성 및 레코드 필드 액세스가 보호에서 허용됩니다. 그러나 필드 시작과 같은 모든 하위 표현식도 유효한 보호 표현식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="f25817276926c066362bed9d894325da88019f08" translate="yes" xml:space="preserve">
          <source>Since several features of Erlang mode is based on the standard layout they might not work correctly if a nonstandard layout is used.</source>
          <target state="translated">Erlang 모드의 여러 기능은 표준 레이아웃을 기반으로하므로 비표준 레이아웃을 사용하면 제대로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8a4b0204d170a43618a3e25ddada921e0a9ceb2" translate="yes" xml:space="preserve">
          <source>Since single line logging is the default of the built-in formatter you only have to provide the empty map as the configuration. The example below uses the &lt;code&gt;sys.config&lt;/code&gt; to change the formatter configuration.</source>
          <target state="translated">단일 행 로깅이 기본 제공 포맷터의 기본값이므로 구성으로 빈 맵만 제공하면됩니다. 아래 예에서는 &lt;code&gt;sys.config&lt;/code&gt; 를 사용하여 포맷터 구성을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f54cc9fd4c566e40c2141eb6b3736f3621a8b951" translate="yes" xml:space="preserve">
          <source>Since the &lt;strong&gt;state enter call&lt;/strong&gt; is not an event there are restrictions on the allowed return value and &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt;. You may not change the state, &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; this non-event, &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert any events&lt;/a&gt;&lt;/code&gt;, or change the &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt;&lt;strong&gt;callback module&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이후 &lt;strong&gt;상태가 호출이 입력&lt;/strong&gt; 이벤트 아니다 허용 반환 값에 대한 제한이 &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt; . 상태를 변경 &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; 비 이벤트를 연기 하거나 이벤트를 &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert any events&lt;/a&gt;&lt;/code&gt; 하거나 &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt;&lt;strong&gt;callback module&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; 변경할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="1e787ba4bb5c99b509695608c3b39b160986dc89" translate="yes" xml:space="preserve">
          <source>Since the Net if process is responsible for encoding and decoding of SNMP messages, it must also update the relevant counters in the SNMP group in MIB-II. It can use the functions in the module &lt;code&gt;snmpa_mpd&lt;/code&gt; for this purpose (refer to the Reference Manual, section &lt;code&gt;snmp&lt;/code&gt;, module &lt;code&gt;&lt;a href=&quot;snmp_pdus&quot;&gt;snmpa_mpd&lt;/a&gt;&lt;/code&gt; for more details.)</source>
          <target state="translated">Net if 프로세스는 SNMP 메시지의 인코딩 및 디코딩을 담당하므로 MIB-II에서 SNMP 그룹의 관련 카운터도 업데이트해야합니다. 이를 위해 &lt;code&gt;snmpa_mpd&lt;/code&gt; 모듈의 기능을 사용할 수 있습니다 (자세한 내용은 참조 매뉴얼, &lt;code&gt;snmp&lt;/code&gt; , 모듈 &lt;code&gt;&lt;a href=&quot;snmp_pdus&quot;&gt;snmpa_mpd&lt;/a&gt;&lt;/code&gt; 섹션 참조 ).</target>
        </trans-unit>
        <trans-unit id="e4e021b70c4309ea3c8bcb22dd51c073b89dc2f3" translate="yes" xml:space="preserve">
          <source>Since the Net if process is responsible for encoding and decoding of SNMP messages, it must also update the relevant counters in the SNMP group in MIB-II. It can use the functions in the module &lt;code&gt;snmpm_mpd&lt;/code&gt; for this purpose (refer to the Reference Manual, section &lt;code&gt;snmp&lt;/code&gt;, module &lt;code&gt;snmpm_mpd&lt;/code&gt; for more details).</source>
          <target state="translated">Net if 프로세스는 SNMP 메시지의 인코딩 및 디코딩을 담당하므로 MIB-II에서 SNMP 그룹의 관련 카운터도 업데이트해야합니다. 이를 위해 &lt;code&gt;snmpm_mpd&lt;/code&gt; 모듈의 기능을 사용할 수 있습니다 (자세한 내용은 참조 매뉴얼, &lt;code&gt;snmp&lt;/code&gt; , 모듈 &lt;code&gt;snmpm_mpd&lt;/code&gt; 섹션 참조).</target>
        </trans-unit>
        <trans-unit id="4954e51808f572d06972cd97dd69985cb22ea1ee" translate="yes" xml:space="preserve">
          <source>Since the carrier has been unlinked from the data structure of available free blocks, no more allocations will be made in the carrier.</source>
          <target state="translated">캐리어가 사용 가능한 사용 가능한 블록의 데이터 구조에서 연결 해제되었으므로 캐리어에서 더 이상 할당이 이루어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbcf2799e1a30a770abcef39bfc0e1f47999b962" translate="yes" xml:space="preserve">
          <source>Since the payload is larger than 128-bytes it is split into two fragments. The second fragment does not have any atom cache update instructions so it is a lot simpler:</source>
          <target state="translated">페이로드가 128 바이트보다 크므로 두 조각으로 분할됩니다. 두 번째 조각에는 원자 캐시 업데이트 지침이 없으므로 훨씬 간단합니다.</target>
        </trans-unit>
        <trans-unit id="02f0c872afde435f83990c58521c75bab3d861bd" translate="yes" xml:space="preserve">
          <source>Since the state enter call is not an event there are restrictions on the allowed return value and &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt;. You may not change the state, &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; this non-event, or &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert events&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">상태 입력 호출이 이벤트가 아니기 때문에 허용되는 반환 값 및 &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt; 에 제한이 있습니다 . 상태를 변경 &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; 이벤트가 아닌 것을 연기 하거나 &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert events&lt;/a&gt;&lt;/code&gt; 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b8bdd22800d998b3d6968c1bfc746532bc1009a1" translate="yes" xml:space="preserve">
          <source>Since the supervisor is part of a supervision tree, it is automatically terminated by its supervisor. When asked to shut down, it terminates all child processes in reversed start order according to the respective shutdown specifications, and then terminates itself.</source>
          <target state="translated">수퍼바이저는 수퍼바이저 트리의 일부이므로 수퍼바이저에 의해 자동으로 종료됩니다. 시스템 종료를 요청하면 해당 시스템 종료 스펙에 따라 모든 하위 프로세스를 역순으로 시작한 후 자체 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="08c5ff113595492032ba59b4a55450c477046a91" translate="yes" xml:space="preserve">
          <source>Since the supervisor is to change its internal state, synchronized code replacement is required. However, a special &lt;code&gt;update&lt;/code&gt; instruction must be used.</source>
          <target state="translated">수퍼바이저가 내부 상태를 변경해야하므로 동기화 된 코드 교체가 필요합니다. 그러나 특별한 &lt;code&gt;update&lt;/code&gt; 지침을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="65a7232a87d15fbe1b393f1aa3930d5001a666c2" translate="yes" xml:space="preserve">
          <source>Since the version 3 implemented, in this version of the Megaco application, is preliminary, it is necessary to have a way to handle different version 3 implementations. For this reason the encoding config option &lt;code&gt;{version3, version3()}&lt;/code&gt; has been introduced. This option, if present, has to be &lt;strong&gt;first&lt;/strong&gt; in the encoding config list. Version 1 and 2 codec's ignore this option, if found.</source>
          <target state="translated">이 버전의 Megaco 애플리케이션에서 구현 된 버전 3은 예 비용이므로 다른 버전 3 구현을 처리 할 방법이 필요합니다. 이러한 이유로 인코딩 구성 옵션 &lt;code&gt;{version3, version3()}&lt;/code&gt; 이 도입되었습니다. 이 옵션이 있는 경우 인코딩 구성 목록에서 &lt;strong&gt;첫 번째&lt;/strong&gt; 옵션이어야 합니다. 버전 1 및 2 코덱은이 옵션이 있으면 무시합니다.</target>
        </trans-unit>
        <trans-unit id="ed6a4422d27f7fd5661017aa05e73f8c0b7788d1" translate="yes" xml:space="preserve">
          <source>Since we are only interested in a ratio, the unary operator &lt;code&gt;#&lt;/code&gt; that counts the elements of the operand is used. It cannot be applied to the &lt;code&gt;digraph&lt;/code&gt; representation of graphs.</source>
          <target state="translated">우리는 비율에만 관심이 있기 때문에 피연산자의 요소를 세는 단항 연산자 &lt;code&gt;#&lt;/code&gt; 가 사용됩니다. 그래프 의 &lt;code&gt;digraph&lt;/code&gt; 표현에는 적용 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="41813ca49767fb16da8ba26835539d16f89a22b5" translate="yes" xml:space="preserve">
          <source>Since we go from a state where I/O signals are the only port related signals scheduled, to a state where potentially all port related signals may be scheduled we may drastically increase the load on the run queue lock. The amount of scheduled port tasks very much depend on the Erlang application executing, which we do not control, and we do not want to get increased contention on the run queue locks. We therefore need another approach of protecting the port task queue.</source>
          <target state="translated">I / O 신호가 예약 된 유일한 포트 관련 신호 인 상태에서 잠재적으로 모든 포트 관련 신호가 예약 될 수있는 상태로 이동하므로 실행 대기열 잠금에 대한 부하가 크게 증가 할 수 있습니다. 예약 된 포트 작업의 양은 실행중인 Erlang 응용 프로그램에 따라 크게 달라지며, 이는 우리가 제어하지 않으며 실행 대기열 잠금에 대한 경합 증가를 원하지 않습니다. 따라서 포트 작업 대기열을 보호하는 또 다른 접근 방식이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="aa8219103b5c345a541f3c2acfdce4793ae02f6a" translate="yes" xml:space="preserve">
          <source>Since we have a limited amount of unique identifiers, we need to be careful not to waste them. If previously used identifiers are reused too quick, identifiers originating from terminated processes will refer to newly created processes, and mixups will occur. The previously used approach was quite good at not wasting identifiers. Using a modified version of the same approach also lets us keep the ordering property that we have always had.</source>
          <target state="translated">고유 식별자의 양이 제한되어 있으므로 낭비하지 않도록주의해야합니다. 이전에 사용한 식별자가 너무 빨리 재사용되면 종료 된 프로세스에서 생성 된 식별자가 새로 생성 된 프로세스를 참조하고 혼동이 발생합니다. 이전에 사용 된 접근 방식은 식별자를 낭비하지 않는 데 매우 효과적이었습니다. 동일한 접근 방식의 수정 된 버전을 사용하면 우리가 항상 가지고 있었던 ordering 속성을 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c9492919ad524efc08c529443e062c0e4df4399" translate="yes" xml:space="preserve">
          <source>Since we have the average real-time and the percentage spent in each state we can easily calculate the time spent in each state by multiplying &lt;code&gt;Average thread real-time&lt;/code&gt; with &lt;code&gt;Thread state %&lt;/code&gt;, i.e. to get the time Scheduler 1 spent in the emulator state we do &lt;code&gt;1000513us * 0.13% = 1300us&lt;/code&gt;.</source>
          <target state="translated">평균 실시간 및 각 상태에서 소비 된 백분율이 있으므로 &lt;code&gt;Average thread real-time&lt;/code&gt; 에 &lt;code&gt;Thread state %&lt;/code&gt; 를 곱하여 각 상태에서 소요 된 시간을 쉽게 계산할 수 있습니다 . 즉 스케줄러 1이 에뮬레이터 상태에서 보낸 시간을 얻습니다. 이렇게 &lt;code&gt;1000513us * 0.13% = 1300us&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7687b60defdbe9ddedde4a9326ea17abd8623f5a" translate="yes" xml:space="preserve">
          <source>Since we still need to be able to pass references to memory between scheduler threads we need some way to manage this. An allocator instance belonging to one scheduler thread is only allowed to be manipulated by that scheduler thread. When other threads need to deallocate memory originating from a foreign allocator instance, they only pass the memory block to a &quot;message box&quot; containing deallocation jobs attached to the originating allocator instance. When a scheduler thread detects such deallocation job it performs the actual deallocation.</source>
          <target state="translated">스케줄러 스레드간에 참조를 메모리에 전달할 수 있어야하므로이를 관리 할 방법이 필요합니다. 하나의 스케줄러 스레드에 속하는 할당 자 인스턴스는 해당 스케줄러 스레드에서만 조작 할 수 있습니다. 다른 스레드가 외부 할당 자 인스턴스에서 시작된 메모리를 할당 해제해야하는 경우 원래 할당 자 인스턴스에 연결된 할당 취소 작업이 포함 된 &quot;메시지 상자&quot;에만 메모리 블록을 전달합니다. 스케줄러 스레드가 이러한 할당 해제 작업을 감지하면 실제 할당 해제를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1432622692b32e253b48613bca71ae7b32a29c9f" translate="yes" xml:space="preserve">
          <source>Single Time Warp Mode</source>
          <target state="translated">단일 시간 왜곡 모드</target>
        </trans-unit>
        <trans-unit id="7e633562ce278aa8f63877ae1b686c99ed11160e" translate="yes" xml:space="preserve">
          <source>Single direction links (monitor).</source>
          <target state="translated">단일 방향 링크 (모니터).</target>
        </trans-unit>
        <trans-unit id="105bb54dd9215587b0a435a3a794841d6b616bf6" translate="yes" xml:space="preserve">
          <source>Single line configuration</source>
          <target state="translated">단일 라인 구성</target>
        </trans-unit>
        <trans-unit id="b103261a83b179716c89c6c92972b372068f6b15" translate="yes" xml:space="preserve">
          <source>Single quote</source>
          <target state="translated">작은 따옴표</target>
        </trans-unit>
        <trans-unit id="5d14ba00f00906805970adcc45cc1c084f8e21a4" translate="yes" xml:space="preserve">
          <source>Single-command interface for running all available tests</source>
          <target state="translated">사용 가능한 모든 테스트를 실행하기위한 단일 명령 인터페이스</target>
        </trans-unit>
        <trans-unit id="7a48d59b7a29cd918002eed1d70074d35d9b4eba" translate="yes" xml:space="preserve">
          <source>Singleblock carrier threshold (in kilobytes). Blocks larger than this threshold are placed in singleblock carriers. Blocks smaller than this threshold are placed in multiblock carriers. On 32-bit Unix style OS this threshold cannot be set &amp;gt; 8 MB.</source>
          <target state="translated">단일 블록 캐리어 임계 값 (KB). 이 임계 값보다 큰 블록은 단일 블록 캐리어에 배치됩니다. 이 임계 값보다 작은 블록은 멀티 블록 캐리어에 배치됩니다. 32 비트 Unix 스타일 OS에서는이 임계 값을 8MB 이상으로 설정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0ab7336e86a131253ff20a56630ee902f7f1baa9" translate="yes" xml:space="preserve">
          <source>Singleblock carriers are used for storage of one block.</source>
          <target state="translated">단일 블록 캐리어는 하나의 블록을 저장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0d8bc28bd230eae9445fec6a48931c7bdeb53ee1" translate="yes" xml:space="preserve">
          <source>Sinhala</source>
          <target state="translated">Sinhala</target>
        </trans-unit>
        <trans-unit id="bcc519db180ce33c37a28038f9639369bd1d4e9e" translate="yes" xml:space="preserve">
          <source>Six-per-em space</source>
          <target state="translated">여섯 당 공간</target>
        </trans-unit>
        <trans-unit id="c30a22a0c2135ec0cec715a4a76c42dfb354a904" translate="yes" xml:space="preserve">
          <source>Size of binary</source>
          <target state="translated">이진의 크기</target>
        </trans-unit>
        <trans-unit id="17247ca22728636fe023051e3ba32f701d781f3c" translate="yes" xml:space="preserve">
          <source>Size of file in bytes.</source>
          <target state="translated">바이트 단위의 파일 크기입니다.</target>
        </trans-unit>
        <trans-unit id="9e96264108fb9df35c85ec32347e8bf452fcc01f" translate="yes" xml:space="preserve">
          <source>Size of fragmented heap data, in words. This is data either created by messages sent to the process or by the Erlang BIFs. This amount depends on so many things that this field is usually uninteresting.</source>
          <target state="translated">조각화 된 힙 데이터의 크기 (단어)입니다. 이것은 프로세스에 전송 된 메시지 또는 Erlang BIF에 의해 생성 된 데이터입니다. 이 금액은 너무 많은 것들에 따라 달라 지므로이 필드는 일반적으로 흥미롭지 않습니다.</target>
        </trans-unit>
        <trans-unit id="63716907875fcd1f66f968ad7e49958d3e42b56c" translate="yes" xml:space="preserve">
          <source>Size of fragmented heap data. This is data either created by messages sent to the process or by the Erlang BIFs. This amount depends on so many things that this field is utterly uninteresting.</source>
          <target state="translated">조각난 힙 데이터의 크기입니다. 이것은 프로세스로 전송 된 메시지 또는 Erlang BIF에 의해 생성 된 데이터입니다. 이 금액은 너무 많은 것들에 의존하여이 분야가 전혀 흥미롭지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3fb7549aa7480acb278edcf1e91f5f0f2152183" translate="yes" xml:space="preserve">
          <source>Size of the largest packet, in bytes, received by the socket.</source>
          <target state="translated">소켓이 수신 한 가장 큰 패킷의 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="08df95fdf35c7eec41f0a9c9d9c4b47e002ddbc5" translate="yes" xml:space="preserve">
          <source>Size of the largest packet, in bytes, sent from the socket.</source>
          <target state="translated">소켓에서 전송 된 가장 큰 패킷의 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="1c83c7295156dbb91f77bb4ba266a1a7c41f363a" translate="yes" xml:space="preserve">
          <source>Sizes of carriers allocated through &lt;code&gt;sys_alloc&lt;/code&gt; are decided based on the value of the &lt;code&gt;sys_alloc&lt;/code&gt; carrier size (&lt;code&gt;&lt;a href=&quot;#Muycs&quot;&gt;ycs&lt;/a&gt;&lt;/code&gt;) parameter. The size of a carrier is the least number of multiples of the value of parameter &lt;code&gt;ycs&lt;/code&gt; satisfying the request.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; 을 통해 할당 된 반송파 크기 는 &lt;code&gt;sys_alloc&lt;/code&gt; 반송파 크기 ( &lt;code&gt;&lt;a href=&quot;#Muycs&quot;&gt;ycs&lt;/a&gt;&lt;/code&gt; ) 매개 변수 의 값을 기반으로 결정 됩니다. 캐리어의 크기 는 요청을 만족시키는 파라미터 &lt;code&gt;ycs&lt;/code&gt; 의 값의 배수의 최소 개수이다 .</target>
        </trans-unit>
        <trans-unit id="7ed10f9c165e6ee4cd302a0c0a580f3f550fe00b" translate="yes" xml:space="preserve">
          <source>Sizes of multiblock carriers allocated through &lt;code id=&quot;mseg_mbc_sizes&quot;&gt;mseg_alloc&lt;/code&gt; are decided based on the following parameters:</source>
          <target state="translated">&lt;code id=&quot;mseg_mbc_sizes&quot;&gt;mseg_alloc&lt;/code&gt; 을 통해 할당 된 다중 블록 반송파의 크기는 다음 매개 변수를 기반으로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="0bed184c65df7dacbe62f4d77eb0b8f8c5826dd1" translate="yes" xml:space="preserve">
          <source>Skeletons</source>
          <target state="translated">Skeletons</target>
        </trans-unit>
        <trans-unit id="0a9b668642be4f00b5d47877ce22cf6c2fb62125" translate="yes" xml:space="preserve">
          <source>Skip and Fail Hooks</source>
          <target state="translated">후크 건너 뛰기 및 실패</target>
        </trans-unit>
        <trans-unit id="67e4cb5be30bed4914cbc885eac6aa27e1c067db" translate="yes" xml:space="preserve">
          <source>Skip the PLT check when running Dialyzer. This is useful when working with installed PLTs that never change.</source>
          <target state="translated">투석기를 실행할 때는 PLT 검사를 건너 뜁니다. 이것은 변경되지 않은 설치된 PLT로 작업 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7b52aa379772757b0fe4a78bce2ea1da242c9ad4" translate="yes" xml:space="preserve">
          <source>Skip this token completely.</source>
          <target state="translated">이 토큰을 완전히 건너 뛰십시오.</target>
        </trans-unit>
        <trans-unit id="74f1ab290e5643bdd12eabc9033247b063146a2e" translate="yes" xml:space="preserve">
          <source>Skips a term in the specified buffer; recursively skips elements of lists and tuples, so that a full term is skipped. This is a way to get the size of an Erlang term.</source>
          <target state="translated">지정된 버퍼에서 용어를 건너 뜁니다. 목록과 튜플의 요소를 재귀 적으로 건너 뛰어 전체 용어를 건너 뜁니다. 이것은 Erlang 용어의 크기를 얻는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c5d1ad5d7d1fd7f9741f0b2668fe06f182b3e019" translate="yes" xml:space="preserve">
          <source>Skips the current code line and stop at the next line. If used on the last line in a function body, the function returns &lt;code&gt;skipped&lt;/code&gt;.</source>
          <target state="translated">현재 코드 줄을 건너 뛰고 다음 줄에서 멈 춥니 다. 함수 본문의 마지막 행에서 사용되면 함수는 &lt;code&gt;skipped&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="12872491886f1b08fbb3cf57173012f5dd4fec62" translate="yes" xml:space="preserve">
          <source>Skips the external DTD during parsing.</source>
          <target state="translated">파싱하는 동안 외부 DTD를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="92835d057c07b90a27533d164ca25536f2c3c68f" translate="yes" xml:space="preserve">
          <source>Slave nodes on other hosts than the current one are started with the &lt;code&gt;rsh&lt;/code&gt; program. The user must be allowed to &lt;code&gt;rsh&lt;/code&gt; to the remote hosts without being prompted for a password. This can be arranged in a number of ways (for details, see the &lt;code&gt;rsh&lt;/code&gt; documentation). A slave node started on the same host as the master inherits certain environment values from the master, such as the current directory and the environment variables. For what can be assumed about the environment when a slave is started on another host, see the documentation for the &lt;code&gt;rsh&lt;/code&gt; program.</source>
          <target state="translated">현재 호스트가 아닌 다른 호스트의 슬레이브 노드는 &lt;code&gt;rsh&lt;/code&gt; 프로그램으로 시작됩니다 . 사용자는 비밀번호를 묻지 않고 원격 호스트 로 &lt;code&gt;rsh&lt;/code&gt; 할 수 있어야 합니다. 이것은 여러 가지 방법으로 배열 될 수 있습니다 (자세한 내용은 &lt;code&gt;rsh&lt;/code&gt; 설명서 참조 ). 마스터와 동일한 호스트에서 시작된 슬레이브 노드는 현재 디렉토리 및 환경 변수와 같은 마스터에서 특정 환경 값을 상속합니다. 다른 호스트에서 슬레이브를 시작할 때 환경에 대해 가정 할 수있는 내용은 &lt;code&gt;rsh&lt;/code&gt; 프로그램 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6fccbacb912585deb4397758d490994d0f2c6a92" translate="yes" xml:space="preserve">
          <source>Slave nodes on other hosts than the current one are started with the &lt;code&gt;ssh&lt;/code&gt; program. The user must be allowed to &lt;code&gt;ssh&lt;/code&gt; to the remote hosts without being prompted for a password. This can be arranged in a number of ways (for details, see the &lt;code&gt;ssh&lt;/code&gt; documentation). A slave node started on the same host as the master inherits certain environment values from the master, such as the current directory and the environment variables. For what can be assumed about the environment when a slave is started on another host, see the documentation for the &lt;code&gt;ssh&lt;/code&gt; program.</source>
          <target state="translated">현재 호스트가 아닌 다른 호스트의 슬레이브 노드는 &lt;code&gt;ssh&lt;/code&gt; 프로그램으로 시작됩니다 . 사용자는 암호를 입력하지 않고 원격 호스트 에 &lt;code&gt;ssh&lt;/code&gt; 할 수 있어야 합니다. 이것은 여러 가지 방법으로 배열 될 수 있습니다 (자세한 내용은 &lt;code&gt;ssh&lt;/code&gt; 문서 참조 ). 마스터와 동일한 호스트에서 시작된 슬레이브 노드는 현재 디렉토리 및 환경 변수와 같은 마스터의 특정 환경 값을 상속합니다. 다른 호스트에서 슬레이브가 시작될 때 환경에 대해 가정 할 수있는 사항은 &lt;code&gt;ssh&lt;/code&gt; 프로그램 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1716dbdd0f95ad310714f9fefb5093d293011f6" translate="yes" xml:space="preserve">
          <source>Slen</source>
          <target state="translated">Slen</target>
        </trans-unit>
        <trans-unit id="6950650642d0c097c0b9f5240ccad72b3af95d64" translate="yes" xml:space="preserve">
          <source>Slen=6</source>
          <target state="translated">Slen=6</target>
        </trans-unit>
        <trans-unit id="46e7b5151387b666d53e50322e1d0a7f9e148f90" translate="yes" xml:space="preserve">
          <source>Slider and radio buttons:</source>
          <target state="translated">슬라이더 및 라디오 버튼 :</target>
        </trans-unit>
        <trans-unit id="f400bc734467b454d0e076beebad58eecf4cb7e0" translate="yes" xml:space="preserve">
          <source>Slower than &lt;code&gt;ERL_NIF_INTERNAL_HASH.&lt;/code&gt; It corresponds to &lt;code&gt;&lt;a href=&quot;erlang#phash2-1&quot;&gt;erlang:phash2/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ERL_NIF_INTERNAL_HASH.&lt;/code&gt; 보다 느 립니다. &lt;code&gt;&lt;a href=&quot;erlang#phash2-1&quot;&gt;erlang:phash2/1&lt;/a&gt;&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="c74fd9714e38b26dbf7f58d75f93cfc977a05ba6" translate="yes" xml:space="preserve">
          <source>Small</source>
          <target state="translated">Small</target>
        </trans-unit>
        <trans-unit id="56bb7666ead8069c1504c97c55a171c4da5cbb93" translate="yes" xml:space="preserve">
          <source>Small Map</source>
          <target state="translated">작은지도</target>
        </trans-unit>
        <trans-unit id="27e0f4492a9daee17682a7168a304983487d7286" translate="yes" xml:space="preserve">
          <source>Small Server - skeleton for a simple server not using OTP.</source>
          <target state="translated">소형 서버-OTP를 사용하지 않는 간단한 서버의 골격.</target>
        </trans-unit>
        <trans-unit id="ab47f140f6431c36c5c0962034598b25caaa4c80" translate="yes" xml:space="preserve">
          <source>Small integer</source>
          <target state="translated">작은 정수</target>
        </trans-unit>
        <trans-unit id="615a21503b02e3adddcc1994014a16d4418ded1b" translate="yes" xml:space="preserve">
          <source>Small slowdown</source>
          <target state="translated">작은 둔화</target>
        </trans-unit>
        <trans-unit id="dcd3690ddcf80c023fa06b72b4a57ce718129939" translate="yes" xml:space="preserve">
          <source>Smallest (&lt;code&gt;mseg_alloc&lt;/code&gt;) multiblock carrier size (in kilobytes). See the description on how sizes for &lt;code&gt;mseg_alloc&lt;/code&gt; multiblock carriers are decided in section &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt; The alloc_util Framework&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">가장 작은 ( &lt;code&gt;mseg_alloc&lt;/code&gt; ) 다중 블록 캐리어 크기 (KB). &lt;code&gt;mseg_alloc&lt;/code&gt; 다중 블록 캐리어의 크기 가 결정되는 방법에 대한 설명 &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt; The alloc_util Framework&lt;/a&gt;&lt;/code&gt; 섹션에서 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91ee6052934e3e6dab1195f8369c85835857eede" translate="yes" xml:space="preserve">
          <source>Smallest (&lt;code&gt;mseg_alloc&lt;/code&gt;) multiblock carrier size (in kilobytes). See the description on how sizes for &lt;code&gt;mseg_alloc&lt;/code&gt; multiblock carriers are decided in section &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt;The alloc_util Framework&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">최소 ( &lt;code&gt;mseg_alloc&lt;/code&gt; ) 멀티 블록 캐리어 크기 (킬로바이트). &lt;code&gt;mseg_alloc&lt;/code&gt; 멀티 블록 캐리어의 크기가 &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt;The alloc_util Framework&lt;/a&gt;&lt;/code&gt; 섹션에서 결정되는 방법에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5bfaace8e249861b328e002295865f19586c544c" translate="yes" xml:space="preserve">
          <source>So after an authentication, the user name is not used anymore and has no influence.</source>
          <target state="translated">따라서 인증 후 사용자 이름은 더 이상 사용되지 않으며 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c85767e72613dbb1348877a02afcc58287018438" translate="yes" xml:space="preserve">
          <source>So far this I/O server is fairly generic (except for request &lt;code&gt;rewind&lt;/code&gt; handled in the main loop and the creation of an ETS table). Most I/O servers contain code similar to this one.</source>
          <target state="translated">지금까지이 I / O 서버는 상당히 일반적입니다 ( 메인 루프에서 처리 된 요청 &lt;code&gt;rewind&lt;/code&gt; 및 ETS 테이블 작성 제외 ). 대부분의 I / O 서버는 이와 유사한 코드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f5e4e0a5c86630b775fa459febe3da79f7ac4b59" translate="yes" xml:space="preserve">
          <source>So far, only functions that take funs as arguments have been described. More powerful functions, that themselves return funs, can also be written. The following examples illustrate these type of functions.</source>
          <target state="translated">지금까지 인수로 재미를 취하는 함수 만 설명했습니다. 그 자체로 즐거움을 돌려주는 더 강력한 기능도 작성 될 수 있습니다. 다음 예는 이러한 유형의 기능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4510a9d36f72cd900065dc9e0203fb013dd0a81c" translate="yes" xml:space="preserve">
          <source>So instead of writing:</source>
          <target state="translated">따라서 글을 쓰는 대신 :</target>
        </trans-unit>
        <trans-unit id="95e1e890c27bcd42db8ee2ad74018397c4317c7e" translate="yes" xml:space="preserve">
          <source>So now when you run &lt;code&gt;$ERL_TOP/erl.exe&lt;/code&gt;, you should have a debug compiled emulator, which you will see if you do a:</source>
          <target state="translated">이제 &lt;code&gt;$ERL_TOP/erl.exe&lt;/code&gt; 를 실행할 때 디버그 컴파일 된 에뮬레이터가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cf10922783071cba140f7011f79e6768bdc244c5" translate="yes" xml:space="preserve">
          <source>So this is a module, called &lt;code&gt;tut1&lt;/code&gt; that contains a function called &lt;code&gt;fac&amp;gt;&lt;/code&gt;, which takes one argument, &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">그래서 이것은 &lt;code&gt;fac&amp;gt;&lt;/code&gt; 라는 함수를 포함하는 &lt;code&gt;tut1&lt;/code&gt; 이라는 모듈입니다.이 함수에는 인수 &lt;code&gt;N&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="52e40c1d81b442b8facdd40d0d3f89cf4a723cf9" translate="yes" xml:space="preserve">
          <source>So what does</source>
          <target state="translated">그래서 무엇을</target>
        </trans-unit>
        <trans-unit id="6ed68677aedf0efff05f0804b8f66e77084348e7" translate="yes" xml:space="preserve">
          <source>So what part of the mib is implemented? Basically the relevant statistic counters of the &lt;strong&gt;MedGwyGatewayStatsEntry&lt;/strong&gt;.</source>
          <target state="translated">그렇다면 mib의 어떤 부분이 구현됩니까? 기본적으로 &lt;strong&gt;MedGwyGatewayStatsEntry&lt;/strong&gt; 의 관련 통계 카운터입니다 .</target>
        </trans-unit>
        <trans-unit id="71148c3a19e900debcb05c1f43dd71bf8e88606f" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;Fun(Item)&lt;/code&gt; returning &lt;code&gt;[Item]&lt;/code&gt; is thereby semantically equivalent to returning &lt;code&gt;true&lt;/code&gt;, just as returning &lt;code&gt;[]&lt;/code&gt; is semantically equivalent to returning &lt;code&gt;false&lt;/code&gt;. But returning a list builds more garbage than returning an atom.</source>
          <target state="translated">그래서, &lt;code&gt;Fun(Item)&lt;/code&gt; 반환 &lt;code&gt;[Item]&lt;/code&gt; 하여 반환에 의미와 동일 &lt;code&gt;true&lt;/code&gt; 만 반환으로, &lt;code&gt;[]&lt;/code&gt; 반환에 의미와 동일 &lt;code&gt;false&lt;/code&gt; . 그러나 목록을 반환하면 원자를 반환하는 것보다 더 많은 쓰레기가 쌓입니다.</target>
        </trans-unit>
        <trans-unit id="9f5e70766f91bd5c14eec201242bbc754b76a223" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;inet_dns:(inet_dns:record_type(X))(X)&lt;/code&gt; converts any of these data structures into a &lt;code&gt;{Field,Value}&lt;/code&gt; list.</source>
          <target state="translated">따라서 &lt;code&gt;inet_dns:(inet_dns:record_type(X))(X)&lt;/code&gt; 는 이러한 데이터 구조를 &lt;code&gt;{Field,Value}&lt;/code&gt; 목록으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="118864ac5d65e1e867b9e6fd4d4898c9132dc2c1" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;{inch,3}&lt;/code&gt; denotes 3 inches and &lt;code&gt;{centimeter,5}&lt;/code&gt; denotes 5 centimeters. Now let us write a new program that converts centimeters to inches and conversely. Enter the following code in a file called &lt;code&gt;tut3.erl&lt;/code&gt;):</source>
          <target state="translated">따라서 &lt;code&gt;{inch,3}&lt;/code&gt; 은 3 인치를 나타내고 &lt;code&gt;{centimeter,5}&lt;/code&gt; 는 5 센티미터를 나타냅니다. 이제 센티미터를 인치와 반대로 변환하는 새로운 프로그램을 작성해 봅시다. &lt;code&gt;tut3.erl&lt;/code&gt; 파일에 다음 코드를 입력하십시오 .</target>
        </trans-unit>
        <trans-unit id="8193dbf214daf0d3f2898c600c59ec5be738c228" translate="yes" xml:space="preserve">
          <source>So, a conversion function must know not only one character at a time, but possibly the whole sentence, the natural language to translate to, the differences in input and output string length, and so on. Erlang/OTP has currently no Unicode &lt;code&gt;uppercase&lt;/code&gt;/&lt;code&gt;lowercase&lt;/code&gt; functionality with language specific handling, but publicly available libraries address these issues.</source>
          <target state="translated">따라서 변환 함수는 한 번에 하나의 문자뿐만 아니라 전체 문장, 번역 할 자연어, 입력 및 출력 문자열 길이의 차이 등을 알아야합니다. Erlang / OTP에는 현재 언어 별 처리 기능을 갖춘 유니 코드 &lt;code&gt;uppercase&lt;/code&gt; / &lt;code&gt;lowercase&lt;/code&gt; 기능이 없지만 공개적으로 사용 가능한 라이브러리가 이러한 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="77c7da51740ebf4aac184b154f2d3319539425a2" translate="yes" xml:space="preserve">
          <source>So, if you have followed the instructions above, when you start a bash shell, you should have an INCLUDE environment with a Windows style path, a LIB environment variable also in Windows style, and finally a PATH that let's you reach cl, makensis, javac etc from the command prompt (use &lt;code&gt;which cl&lt;/code&gt; etc to verify from bash).</source>
          <target state="translated">따라서 위의 지침을 따르면 bash 셸을 시작할 때 Windows 스타일 경로, Windows 스타일의 LIB 환경 변수 및 마지막으로 cl, makensis에 도달 할 수있는 PATH를 포함하는 INCLUDE 환경이 있어야합니다. 명령 프롬프트에서 javac etc ( bash에서 확인할 &lt;code&gt;which cl&lt;/code&gt; 등을 사용하십시오).</target>
        </trans-unit>
        <trans-unit id="a0f4a01e5dab52ff57ba0d29283590a6847f8015" translate="yes" xml:space="preserve">
          <source>So, in total we keep four trees of free descriptors for the super carrier; two for &lt;code&gt;sa&lt;/code&gt; and two for &lt;code&gt;sua&lt;/code&gt;. They all use the same red-black-tree implementation that support the different sorting orders used.</source>
          <target state="translated">그래서, 우리는 슈퍼 캐리어에 대한 4 개의 프리 디스크립터 트리를 유지합니다. 두 &lt;code&gt;sa&lt;/code&gt; 및 두 &lt;code&gt;sua&lt;/code&gt; . 그들은 모두 사용되는 다른 정렬 순서를 지원하는 동일한 레드-블랙 트리 구현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="98a8abd15f6cc0422a4656dd44d3f70185751320" translate="yes" xml:space="preserve">
          <source>So, the value &lt;code&gt;#'StartMessage'{msgId=&quot;home&quot;,content=&quot;Any Printable String&quot;}&lt;/code&gt; is legal to encode as a &lt;code&gt;StartMessage&lt;/code&gt; value. However, the value &lt;code&gt;#'StartMessage'{msgId=&quot;remote&quot;, content=&quot;Some String&quot;}&lt;/code&gt; is illegal as the constraint in &lt;code&gt;StartMessage&lt;/code&gt; tells that when you have chosen a value from a specific object in object set &lt;code&gt;GENERAL-PROCEDURES&lt;/code&gt; in field &lt;code&gt;msgId&lt;/code&gt;, you must choose a value from that same object in the content field too. In this second case, it is to be any &lt;code&gt;INTEGER&lt;/code&gt; value.</source>
          <target state="translated">따라서 &lt;code&gt;#'StartMessage'{msgId=&quot;home&quot;,content=&quot;Any Printable String&quot;}&lt;/code&gt; 값 은 &lt;code&gt;StartMessage&lt;/code&gt; 값 으로 인코딩 할 수 있습니다. 그러나 &lt;code&gt;#'StartMessage'{msgId=&quot;remote&quot;, content=&quot;Some String&quot;}&lt;/code&gt; 의 제한 조건에 따라 &lt;code&gt;StartMessage&lt;/code&gt; 필드의 &lt;code&gt;GENERAL-PROCEDURES&lt;/code&gt; 오브젝트 세트에서 특정 오브젝트에서 값을 선택했을 때 # 'StartMessage'{msgId = &quot;remote&quot;, content = &quot;Some String&quot;} 값이 &lt;code&gt;msgId&lt;/code&gt; 콘텐츠 입력란의 동일한 객체에서 값을 선택해야합니다. 이 두 번째 경우에는 &lt;code&gt;INTEGER&lt;/code&gt; 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="2bbdfa84f4bbd4e6020efbcbf6535245cdb559d3" translate="yes" xml:space="preserve">
          <source>So, we see that &lt;code&gt;foo:create_file_slow/2&lt;/code&gt; used very little time for its own execution. It spent most of its time in &lt;code&gt;file:close/1&lt;/code&gt;. The function &lt;code&gt;foo:create_file_slow/3&lt;/code&gt; that writes 3/4 of the file contents is the second biggest time thief.</source>
          <target state="translated">따라서 &lt;code&gt;foo:create_file_slow/2&lt;/code&gt; 는 자체 실행에 거의 시간이 걸리지 않았습니다. 대부분의 시간을 &lt;code&gt;file:close/1&lt;/code&gt; 에서 보냈 습니다 . 파일 내용의 3/4를 쓰는 &lt;code&gt;foo:create_file_slow/3&lt;/code&gt; 함수 는 두 번째로 큰 시간 도둑입니다.</target>
        </trans-unit>
        <trans-unit id="e186bfb95806558f8cb0695f1dbdea1ab9d233dc" translate="yes" xml:space="preserve">
          <source>So, you can always send Unicode data to the &lt;code&gt;standard_io&lt;/code&gt; device. Files, however, accept only Unicode code points beyond ISO Latin-1 if &lt;code&gt;encoding&lt;/code&gt; is set to something else than &lt;code&gt;latin1&lt;/code&gt;.</source>
          <target state="translated">따라서 항상 유니 코드 데이터를 &lt;code&gt;standard_io&lt;/code&gt; 장치 로 보낼 수 있습니다 . 그러나 &lt;code&gt;encoding&lt;/code&gt; 이 &lt;code&gt;latin1&lt;/code&gt; 이외의 것으로 설정된 경우 파일은 ISO Latin-1 이외의 유니 코드 코드 포인트 만 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="13488b4d38269ec5b0d0aadbf625ed4a6743ad33" translate="yes" xml:space="preserve">
          <source>Socket identifier returned from &lt;code&gt;&lt;a href=&quot;#open-0&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#open-0&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt; 에서 소켓 식별자가 반환되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b7583a9f0df518612f75b762f2220de65a949258" translate="yes" xml:space="preserve">
          <source>Socket interface.</source>
          <target state="translated">소켓 인터페이스.</target>
        </trans-unit>
        <trans-unit id="612f45129eba1638fe81aa4162ddaf53ddd263c4" translate="yes" xml:space="preserve">
          <source>Socket options to be used for this request.</source>
          <target state="translated">이 요청에 사용될 소켓 옵션.</target>
        </trans-unit>
        <trans-unit id="508c36b3241ae34627fb1cadebb1f27b16e0f61a" translate="yes" xml:space="preserve">
          <source>Sockets</source>
          <target state="translated">Sockets</target>
        </trans-unit>
        <trans-unit id="a8fdd4f5d3041b4be9443232ec0200a5490ea7bb" translate="yes" xml:space="preserve">
          <source>Sockets are set 'non-blocking' when created, so this option is *not* available (as it would adversely effect the Erlang VM to set a socket 'blocking').</source>
          <target state="translated">소켓은 생성 될 때 '비 차단'으로 설정되므로이 옵션은 * 사용할 수 없습니다 * (Erlang VM이 소켓 '차단'을 설정하는 데 부정적인 영향을 미치기 때문입니다).</target>
        </trans-unit>
        <trans-unit id="86def5ab9579842d4d2ad82dcea44ecfef2f7f83" translate="yes" xml:space="preserve">
          <source>Soft upgrade according to the OTP release concept is not straight forward for the server side, as subsystem channel processes are spawned by the &lt;code&gt;ssh&lt;/code&gt; application and hence added to its supervisor tree. The subsystem channels can be upgraded when upgrading the user application, if the callback functions can handle two versions of the state, but this function cannot be used in the normal way.</source>
          <target state="translated">서브 시스템 채널 프로세스가 &lt;code&gt;ssh&lt;/code&gt; 애플리케이션에 의해 생성되고 따라서 관리자 트리에 추가되기 때문에 OTP 릴리스 개념에 따른 소프트 업그레이드는 서버 측에서는 간단하지 않습니다 . 콜백 함수가 두 가지 버전의 상태를 처리 할 수 ​​있지만이 기능을 정상적인 방식으로 사용할 수없는 경우 사용자 응용 프로그램을 업그레이드 할 때 서브 시스템 채널을 업그레이드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c647435dd36e71d5d166b4756d5d3011047b867" translate="yes" xml:space="preserve">
          <source>Solaris 10, 11</source>
          <target state="translated">솔라리스 10, 11</target>
        </trans-unit>
        <trans-unit id="624c844f2078405a61bb6ca548e78668f1dda2e4" translate="yes" xml:space="preserve">
          <source>Solaris 10. I have done limited testing on Solaris 11 and OpenIndiana release 151a, and both appear to work.</source>
          <target state="translated">Solaris 10. Solaris 11 및 OpenIndiana 릴리스 151a에서 제한적인 테스트를 수행했으며 모두 작동하는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="29fb3d807e57c89d0e80c7767fd4e811d0a2f43c" translate="yes" xml:space="preserve">
          <source>Solaris 9 is supported. The build requires a &lt;code&gt;gcc&lt;/code&gt; that has been configured to use Sun's assembler and linker. Using the GNU assembler but Sun's linker has been known to cause problems.</source>
          <target state="translated">Solaris 9가 지원됩니다. 빌드에는 Sun 어셈블러 및 링커를 사용하도록 구성된 &lt;code&gt;gcc&lt;/code&gt; 가 필요합니다 . GNU 어셈블러를 사용하지만 Sun의 링커는 문제를 일으키는 것으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="25503b712d04e9c9eb54dd4a937f841cf032dafe" translate="yes" xml:space="preserve">
          <source>Solaris Operation</source>
          <target state="translated">Solaris 운영</target>
        </trans-unit>
        <trans-unit id="ad98f7ac7fd5751dca0d8e7bc21baa0bc34cb03d" translate="yes" xml:space="preserve">
          <source>Solaris only. Defines if the service should be enabled (and disabled) inside (&lt;code&gt;true&lt;/code&gt;) or outside (&lt;code&gt;false&lt;/code&gt;) &lt;code&gt;os_sup&lt;/code&gt;. For backwards compatibility reasons, the default is &lt;code&gt;true&lt;/code&gt;. The recommended value is &lt;code&gt;false&lt;/code&gt;, as the Erlang emulator should normally not be run with &lt;code&gt;root&lt;/code&gt; privileges, as is required for enabling the service.</source>
          <target state="translated">솔라리스 전용. &lt;code&gt;os_sup&lt;/code&gt; 내부 ( &lt;code&gt;true&lt;/code&gt; ) 또는 외부 ( &lt;code&gt;false&lt;/code&gt; ) 서비스를 활성화 (및 비활성화)할지 여부를 정의합니다 . 이전 버전과의 호환성을 위해 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. Erlang 에뮬레이터는 일반적으로 서비스를 활성화하는 데 필요한 &lt;code&gt;root&lt;/code&gt; 권한 으로 실행하지 않아야하므로 권장 값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f5ac99369ea24f03a02ebf82bb384ea26a5ac2c1" translate="yes" xml:space="preserve">
          <source>Solaris only. Defines the directory which contains the backup copy and the Erlang specific configuration files for &lt;code&gt;syslogd&lt;/code&gt;, and a named pipe to receive the messages from &lt;code&gt;syslogd&lt;/code&gt;. Default is &lt;code&gt;&quot;/etc&quot;&lt;/code&gt;.</source>
          <target state="translated">솔라리스 전용. 백업 사본 및 대한 얼랑 특정 구성 파일이 들어있는 디렉토리를 정의 &lt;code&gt;syslogd&lt;/code&gt; 를 , 그리고에서 메시지를 수신 할 수있는 명명 된 파이프 &lt;code&gt;syslogd&lt;/code&gt; . 기본값은 &lt;code&gt;&quot;/etc&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4e77b966f6e049572ff21e8d379d0e22fd8916f9" translate="yes" xml:space="preserve">
          <source>Solaris only. Defines the full name of the configuration file for &lt;code&gt;syslogd&lt;/code&gt;. Default is &lt;code&gt;&quot;/etc/syslog.conf&quot;&lt;/code&gt;.</source>
          <target state="translated">솔라리스 전용. &lt;code&gt;syslogd&lt;/code&gt; 구성 파일의 전체 이름을 정의합니다 . 기본값은 &lt;code&gt;&quot;/etc/syslog.conf&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b4df00f7a4ca6b0ced1b2110bf8eb636b19a4625" translate="yes" xml:space="preserve">
          <source>Solaris takes about 17 MB of RAM on a system with 64 MB of total RAM. This leaves about 47 MB for the applications. If the system uses swapping, these figures cannot be improved because unnecessary daemon processes are swapped out. However, if swapping is disabled, or if the swap space is of limited resource in the system, it becomes necessary to kill off unnecessary daemon processes.</source>
          <target state="translated">Solaris는 64MB의 총 RAM이있는 시스템에서 약 17MB의 RAM을 사용합니다. 응용 프로그램의 경우 약 47MB가 남습니다. 시스템이 스와핑을 사용하는 경우 불필요한 데몬 프로세스가 스왑 아웃되므로 이러한 수치를 개선 할 수 없습니다. 그러나 스와핑이 비활성화되어 있거나 스왑 공간이 시스템의 리소스가 제한된 경우 불필요한 데몬 프로세스를 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="2dd11de5ff1de725ae1b4e7108ef3240598ba71d" translate="yes" xml:space="preserve">
          <source>Solaris: Solaris 10 (32-bit and 64-bit) and 9 (32-bit) are supported. The build requires a version of the GNU C compiler (gcc) that has been configured to use the GNU assembler (gas). Sun's x86 assembler is emphatically &lt;strong&gt;not&lt;/strong&gt; supported.</source>
          <target state="translated">Solaris : Solaris 10 (32 비트 및 64 비트) 및 9 (32 비트)가 지원됩니다. 빌드에는 GNU 어셈블러 (가스)를 사용하도록 구성된 GNU C 컴파일러 (gcc) 버전이 필요합니다. Sun의 x86 어셈블러는 강조 적으로 지원 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2bb6e4a6032e5fc32bd3a65f34d4f5ea5aa85068" translate="yes" xml:space="preserve">
          <source>Some BIFs can be used in guard tests and are marked with &quot;Allowed in guard tests&quot;.</source>
          <target state="translated">일부 BIF는 가드 테스트에 사용될 수 있으며 &quot;가드 테스트 허용&quot;으로 표시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="80f012db159278267232139e217072696541f481" translate="yes" xml:space="preserve">
          <source>Some OS (Windows) do not differentiate between read and write events. The callback for a fired event then only depends on the value of &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">일부 OS (Windows)는 읽기 및 쓰기 이벤트를 구분하지 않습니다. 그러면 발생 된 이벤트에 대한 콜백은 &lt;code&gt;mode&lt;/code&gt; 값에만 의존 합니다 .</target>
        </trans-unit>
        <trans-unit id="37d2998d34aa405bea2f6df724f8a6563ad615eb" translate="yes" xml:space="preserve">
          <source>Some additional BIFs that apply to port drivers: &lt;code&gt;port_control/3&lt;/code&gt; and &lt;code&gt;erlang:port_call/3&lt;/code&gt;.</source>
          <target state="translated">포트 드라이버에 적용되는 몇 가지 추가 BIFS : &lt;code&gt;port_control/3&lt;/code&gt; 와 &lt;code&gt;erlang:port_call/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7eb12c2180def045a657bcad996c0a0423ae416" translate="yes" xml:space="preserve">
          <source>Some applications are automatically skipped if the dependencies aren't met. Here is a list of utilities needed for those applications. You will also find the utilities needed for building the documentation.</source>
          <target state="translated">종속성이 충족되지 않으면 일부 응용 프로그램은 자동으로 건너 뜁니다. 해당 응용 프로그램에 필요한 유틸리티 목록은 다음과 같습니다. 문서 작성에 필요한 유틸리티도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0e4a35d0c545ba54a56f4dd7085a38c13dd5a2a" translate="yes" xml:space="preserve">
          <source>Some applications need to wait for certain tables to be accessible to do useful work. &lt;code&gt;mnesia:wait_for_tables/2&lt;/code&gt; either hangs until all tables in &lt;code&gt;TabList&lt;/code&gt; are accessible, or until &lt;code&gt;timeout&lt;/code&gt; is reached.</source>
          <target state="translated">일부 응용 프로그램은 유용한 작업을 수행하기 위해 특정 테이블에 액세스 할 수있을 때까지 기다려야합니다. &lt;code&gt;mnesia:wait_for_tables/2&lt;/code&gt; 는 &lt;code&gt;TabList&lt;/code&gt; 의 모든 테이블에 액세스 할 수있을 때까지 또는 &lt;code&gt;timeout&lt;/code&gt; 에 도달 할 때까지 정지 됩니다.</target>
        </trans-unit>
        <trans-unit id="4c9aaa2e5d4bc3afe4ced1e01253d9da9c7949c5" translate="yes" xml:space="preserve">
          <source>Some applications that allow their users to supply patterns can wish to restrict them to non-UTF data for security reasons. If option &lt;code&gt;never_utf&lt;/code&gt; is set at compile time, (*UTF), and so on, are not allowed, and their appearance causes an error.</source>
          <target state="translated">사용자가 패턴을 제공 할 수있는 일부 응용 프로그램은 보안상의 이유로 비 UTF 데이터로 제한 할 수 있습니다. 컴파일시 &lt;code&gt;never_utf&lt;/code&gt; 옵션 이 설정되면 (* UTF) 등이 허용되지 않으며 해당 모양으로 인해 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4b281a8092f67f1c1b221a783644996df2f7b610" translate="yes" xml:space="preserve">
          <source>Some built-in filters exist. These are defined in &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">일부 내장 필터가 있습니다. 이들은 &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters(3)&lt;/a&gt;&lt;/code&gt; 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e24f1f8d2061556727b8d32e994209de9af0eb7d" translate="yes" xml:space="preserve">
          <source>Some built-in filters exist. These are defined in &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">일부 내장 필터가 존재합니다. 이들은 &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters&lt;/a&gt;&lt;/code&gt; 에 정의되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7e5617bd0f20199d75624f4c99a4f91fbc316df7" translate="yes" xml:space="preserve">
          <source>Some communication is synchronous. If broken down into pieces, a synchronous communication operation consists of two asynchronous signals; one request signal and one reply signal. An example of such a synchronous communication is a call to &lt;code&gt;&lt;a href=&quot;erlang#process_info-2&quot;&gt; erlang:process_info/2&lt;/a&gt;&lt;/code&gt; when the first argument is not &lt;code&gt;self()&lt;/code&gt;. The caller sends an asynchronous signal requesting information, and then waits for the reply signal containing the requested information. When the request signal reaches its destination, the destination process replies with the requested information.</source>
          <target state="translated">일부 통신은 동기식입니다. 여러 조각으로 나누어지면 동기식 통신 작업은 두 개의 비동기 신호로 구성됩니다. 하나의 요청 신호와 하나의 응답 신호. 이러한 동기 통신의 예는 첫 번째 인수가 &lt;code&gt;self()&lt;/code&gt; 가 아닐 때 &lt;code&gt;&lt;a href=&quot;erlang#process_info-2&quot;&gt; erlang:process_info/2&lt;/a&gt;&lt;/code&gt; 를 호출하는 것 입니다. 호출자는 정보를 요청하는 비동기 신호를 보낸 다음 요청 된 정보가 포함 된 응답 신호를 기다립니다. 요청 신호가 목적지에 도달하면 목적지 프로세스는 요청 된 정보로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="7f7d0d246c8a5c5d27d0b39b1f60bb773efa7225" translate="yes" xml:space="preserve">
          <source>Some communication is synchronous. If broken down into pieces, a synchronous communication operation consists of two asynchronous signals; one request signal and one reply signal. An example of such a synchronous communication is a call to &lt;code&gt;erlang:process_info/2&lt;/code&gt; when the first argument is not &lt;code&gt;self()&lt;/code&gt;. The caller sends an asynchronous signal requesting information, and then waits for the reply signal containing the requested information. When the request signal reaches its destination, the destination process replies with the requested information.</source>
          <target state="translated">일부 통신은 동 기적입니다. 조각으로 나뉜 경우 동기식 통신 작업은 두 개의 비동기 신호로 구성됩니다. 하나의 요청 신호 및 하나의 응답 신호. 이러한 동기식 통신의 예는 첫 번째 인수가 &lt;code&gt;self()&lt;/code&gt; 가 아닌 경우 &lt;code&gt;erlang:process_info/2&lt;/code&gt; 에 대한 호출 입니다. 호출자는 정보를 요청하는 비동기 신호를 보낸 다음 요청 된 정보가 포함 된 응답 신호를 기다립니다. 요청 신호가 목적지에 도달하면, 목적지 프로세스는 요청 된 정보로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="3978ab6efced12cfbb61d20b2f971236e994634d" translate="yes" xml:space="preserve">
          <source>Some configuration parameters control the behavior of Reltool on system (&lt;code&gt;sys&lt;/code&gt;) level. Others provide control on application (&lt;code&gt;app&lt;/code&gt;) level and yet others are on module (&lt;code&gt;mod&lt;/code&gt;) level. Module level parameters override application level parameters and application level parameters override system level parameters. Escript &lt;code&gt;escript&lt;/code&gt; level parameters override system level parameters.</source>
          <target state="translated">일부 구성 매개 변수는 시스템 ( &lt;code&gt;sys&lt;/code&gt; ) 레벨 에서 Reltool의 동작을 제어합니다 . 다른 것들은 애플리케이션 ( &lt;code&gt;app&lt;/code&gt; ) 레벨 에 대한 제어를 제공 하지만 다른 것들은 모듈 ( &lt;code&gt;mod&lt;/code&gt; ) 레벨에 있습니다. 모듈 수준 매개 변수는 응용 프로그램 수준 매개 변수보다 우선하고 응용 프로그램 수준 매개 변수는 시스템 수준 매개 변수보다 우선합니다. Escript &lt;code&gt;escript&lt;/code&gt; 레벨 매개 변수는 시스템 레벨 매개 변수를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="618bfc8450660310d66e99090ee429bade92ad51" translate="yes" xml:space="preserve">
          <source>Some definitions:</source>
          <target state="translated">일부 정의 :</target>
        </trans-unit>
        <trans-unit id="2f7a9488bf7c334ab0c6c89dafc10cc9d316b90d" translate="yes" xml:space="preserve">
          <source>Some dependencies can only be required in specific runtime scenarios. When such optional dependencies exist, these are specified and documented in the corresponding &quot;App&quot; documentation of the specific application.</source>
          <target state="translated">일부 종속성은 특정 런타임 시나리오에서만 필요할 수 있습니다. 이러한 선택적 종속성이 존재하는 경우 특정 애플리케이션의 해당 &quot;앱&quot;문서에 지정되고 문서화됩니다.</target>
        </trans-unit>
        <trans-unit id="68757bf72df0b2bd8846b22de1a19877ad71f237" translate="yes" xml:space="preserve">
          <source>Some driver calls, such as &lt;code&gt;driver_enq_binary&lt;/code&gt;, increment the driver reference count, and others, such as &lt;code&gt;driver_deq&lt;/code&gt; decrement it.</source>
          <target state="translated">같은 일부 드라이버 호출, &lt;code&gt;driver_enq_binary&lt;/code&gt; 는 , 드라이버의 참조 횟수를 증가와 같은 다른 사람 &lt;code&gt;driver_deq&lt;/code&gt; 의 감소 그것.</target>
        </trans-unit>
        <trans-unit id="fae4f4ff86e0a96f567e91dd26cc69718fc3e566" translate="yes" xml:space="preserve">
          <source>Some drivers may not have the information of the number of affected rows available and then the return value may be &lt;code&gt;{updated, undefined}&lt;/code&gt;.</source>
          <target state="translated">일부 드라이버에는 사용 가능한 영향을받는 행 수에 대한 정보가 없을 수 있으며 리턴 값은 &lt;code&gt;{updated, undefined}&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c340244d6c4f199052de9779543a19d1cc478aeb" translate="yes" xml:space="preserve">
          <source>Some drivers may not have the information of the number of rows in the result set, then &lt;code&gt;NrRows&lt;/code&gt; will have the value &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">일부 드라이버는 결과 집합의 행 수에 대한 정보를 가지고 있지 않을 수 있으며 &lt;code&gt;NrRows&lt;/code&gt; 의 값은 &lt;code&gt;undefined&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="67a29222509223f881305b482bc65c2ab88a5b4c" translate="yes" xml:space="preserve">
          <source>Some effort is made to keep the trace clean from unnecessary trace messages; tracing is started and stopped from a spawned process while the &lt;code&gt;erlang:apply/2&lt;/code&gt; call is made in the current process, only surrounded by &lt;code&gt;receive&lt;/code&gt; and &lt;code&gt;send&lt;/code&gt; statements towards the trace starting process. The trace starting process exits when not needed any more.</source>
          <target state="translated">불필요한 추적 메시지로부터 추적을 깨끗하게 유지하기 위해 일부 노력을 기울였습니다. &lt;code&gt;erlang:apply/2&lt;/code&gt; 호출이 현재 프로세스에서 수행되는 동안 추적 시작 프로세스에서 추적이 시작 및 중지되며 추적 시작 프로세스에 대한 &lt;code&gt;receive&lt;/code&gt; 및 &lt;code&gt;send&lt;/code&gt; 문으로 만 둘러싸 입니다. 더 이상 필요하지 않은 경우 추적 시작 프로세스가 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="496abb379f44739b88c8e58701ff98fc41a88ab7" translate="yes" xml:space="preserve">
          <source>Some equalities: &lt;code&gt;[node()] = nodes(this)&lt;/code&gt;, &lt;code&gt;nodes(connected) = nodes([visible, hidden])&lt;/code&gt;, and &lt;code&gt;nodes() = nodes(visible)&lt;/code&gt;.</source>
          <target state="translated">일부 등식 : &lt;code&gt;[node()] = nodes(this)&lt;/code&gt; , &lt;code&gt;nodes(connected) = nodes([visible, hidden])&lt;/code&gt; 및 &lt;code&gt;nodes() = nodes(visible)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="26855bd5f1d5d80dd65d606ab5f637e7c6c21e35" translate="yes" xml:space="preserve">
          <source>Some errors are opaque and can only be interpreted by passing them to function &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt;, but some can be interpreted directly:</source>
          <target state="translated">일부 오류는 불투명하며 &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; 함수에 전달 해야만 해석 할 수 있지만 일부는 직접 해석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0125a70ff3f4339d6599111237d60e6049101ad8" translate="yes" xml:space="preserve">
          <source>Some events, such as messages, are directed from some actor to another. Other events (termed actions) may be undirected and only have one actor.</source>
          <target state="translated">메시지와 같은 일부 이벤트는 일부 액터에서 다른 액터로 전달됩니다. 다른 이벤트 (액션이라고 함)는 지정되지 않으며 한 명의 액터 만있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76ad8817c1327c1b7086ac60c66dfe886f7bfd0a" translate="yes" xml:space="preserve">
          <source>Some examples are provided in the &lt;code&gt;&lt;a href=&quot;http_client&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">일부 예제는 &lt;code&gt;&lt;a href=&quot;http_client&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; 제공되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f8b1001c872fc59d3163a5b2d66238174a5dc51" translate="yes" xml:space="preserve">
          <source>Some examples are suitable uses for persistent terms are:</source>
          <target state="translated">영구 용어의 적절한 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="513e710823d55696dc981caf342f105faed53e3e" translate="yes" xml:space="preserve">
          <source>Some file operation failed for &lt;code&gt;File&lt;/code&gt;. &lt;code&gt;Posix&lt;/code&gt; is an atom named from the Posix error codes, such as &lt;code&gt;enoent&lt;/code&gt;, &lt;code&gt;eacces&lt;/code&gt;, or &lt;code&gt;eisdir&lt;/code&gt;. See &lt;code&gt;file(3)&lt;/code&gt; in Kernel.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 에 대한 일부 파일 작업이 실패했습니다 . &lt;code&gt;Posix&lt;/code&gt; 는 &lt;code&gt;enoent&lt;/code&gt; , &lt;code&gt;eacces&lt;/code&gt; 또는 &lt;code&gt;eisdir&lt;/code&gt; 과 같은 Posix 오류 코드에서 명명 된 원자 입니다. 커널의 &lt;code&gt;file(3)&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0121d7a46586e8ed0bc5fae7d24a808f5944d15f" translate="yes" xml:space="preserve">
          <source>Some file operation failed, as for the previous item in the list.</source>
          <target state="translated">목록의 이전 항목과 관련하여 일부 파일 작업이 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="5f22fa362b8d49f640a721aaa96c04f811728ae0" translate="yes" xml:space="preserve">
          <source>Some final advice:</source>
          <target state="translated">마지막 조언 :</target>
        </trans-unit>
        <trans-unit id="8585f49555109af88209e7c1d968d2a4b955eec0" translate="yes" xml:space="preserve">
          <source>Some functions allow for an</source>
          <target state="translated">일부 기능은</target>
        </trans-unit>
        <trans-unit id="cf6762de9e6f3e6c78bcb67fccdec2635330cfb2" translate="yes" xml:space="preserve">
          <source>Some functions in Erlang are not meant to return; either because they define servers or because they are used to throw exceptions, as in the following function:</source>
          <target state="translated">Erlang의 일부 함수는 반환하지 않습니다. 다음 함수와 같이 서버를 정의하거나 예외를 발생시키는 데 사용되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="354d82bac53c31a6353de08652df5f12865d65b4" translate="yes" xml:space="preserve">
          <source>Some functions, where noted, fail with reason &lt;code&gt;empty&lt;/code&gt; for an empty queue.</source>
          <target state="translated">언급 된 일부 기능 은 비어있는 큐에 대해 이유가 &lt;code&gt;empty&lt;/code&gt; 있으므로 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="0d038ce143e1cb1e24c1bac68d9127ee8fff8c16" translate="yes" xml:space="preserve">
          <source>Some hints that may get you started faster</source>
          <target state="translated">더 빨리 시작할 수있는 힌트</target>
        </trans-unit>
        <trans-unit id="72f6d806a1af7b326c8d125dd4956ae7df93d399" translate="yes" xml:space="preserve">
          <source>Some implementation details:</source>
          <target state="translated">일부 구현 세부 사항 :</target>
        </trans-unit>
        <trans-unit id="4d43305e935c9725cef7c4090f238c14cc411d68" translate="yes" xml:space="preserve">
          <source>Some instructions, such as &lt;code&gt;select_val/3&lt;/code&gt;, essentially has a variable number of operands. Such instructions have a &lt;code&gt;{list,[...]}&lt;/code&gt; operand as their last operand in the BEAM assembly code. For example:</source>
          <target state="translated">&lt;code&gt;select_val/3&lt;/code&gt; 과 같은 일부 명령어에는 기본적으로 가변 수의 피연산자가 있습니다. 이러한 명령어에는 BEAM 어셈블리 코드의 마지막 피연산자로 &lt;code&gt;{list,[...]}&lt;/code&gt; 피연산자가 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="88cc423d2346aa5d89a61bae8f27cf450553a78c" translate="yes" xml:space="preserve">
          <source>Some locks in the system are static and protects global resources, for example &lt;code&gt;bif_timers&lt;/code&gt; and the &lt;code&gt;run_queue&lt;/code&gt; locks. Other locks are dynamic and not necessarily long lived, for example process locks and ets-table locks. The statistics data from short lived locks can be stored separately when the locks are deleted. This behavior is by default turned off to save memory but can be turned on via &lt;code&gt;lcnt:rt_opt({copy_save, true})&lt;/code&gt;. The &lt;code&gt;lcnt:apply/1,2,3&lt;/code&gt; functions enables this behavior during profiling.</source>
          <target state="translated">시스템의 일부 잠금은 정적이며 &lt;code&gt;bif_timers&lt;/code&gt; 및 &lt;code&gt;run_queue&lt;/code&gt; 잠금 과 같은 전역 리소스를 보호합니다 . 다른 잠금 장치는 동적이며 오래 사용할 필요는 없습니다 (예 : 프로세스 잠금 장치 및 ets-table 잠금 장치). 잠금이 삭제되면 단기간 사용 된 잠금의 통계 데이터를 별도로 저장할 수 있습니다. 이 동작은 기본적으로 메모리를 절약하기 위해 꺼져 있지만 &lt;code&gt;lcnt:rt_opt({copy_save, true})&lt;/code&gt; 를 통해 켤 수 있습니다 . &lt;code&gt;lcnt:apply/1,2,3&lt;/code&gt; 기능을 프로파일 링하는 동안이 동작을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d49bf30d21ce869c86a9e6e341b1213d413618d4" translate="yes" xml:space="preserve">
          <source>Some modules are, however, changed to be explicitly Unicode-aware. These modules include:</source>
          <target state="translated">그러나 일부 모듈은 명시 적으로 유니 코드를 인식하도록 변경되었습니다. 이 모듈에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c0dfb6529f706bbf7ab549e78cda1404fa38c5d3" translate="yes" xml:space="preserve">
          <source>Some native BIFs may need to get a consistent snapshot view of the active code. To do this it is important to only read &lt;code&gt;the_active_code_index&lt;/code&gt; one time and then use that index value for all code accessing during the BIF. If a load operation is executed in parallel, reading &lt;code&gt;the_active_code_index&lt;/code&gt; a second time might result in a different value, and thereby a different view of the code.</source>
          <target state="translated">일부 기본 BIF는 활성 코드의 일관된 스냅 샷보기를 가져와야 할 수 있습니다. 이렇게하려면 &lt;code&gt;the_active_code_index&lt;/code&gt; 를 한 번만 읽고 BIF 동안 액세스하는 모든 코드에 해당 인덱스 값을 사용하는 것이 중요합니다 . 로드 작업이 병렬로 실행되는 경우 &lt;code&gt;the_active_code_index&lt;/code&gt; 를 두 번 읽으면 값이 달라져 코드보기가 달라집니다.</target>
        </trans-unit>
        <trans-unit id="0623dd151085c4492286205a78688f85df58d3a3" translate="yes" xml:space="preserve">
          <source>Some notes about combined instructions</source>
          <target state="translated">결합 된 지침에 대한 몇 가지 참고 사항</target>
        </trans-unit>
        <trans-unit id="c6f152dd4071f6ae051f303ae1eedc9c8f2bd8e4" translate="yes" xml:space="preserve">
          <source>Some of the available &lt;code&gt;configure&lt;/code&gt; options are:</source>
          <target state="translated">사용 가능한 &lt;code&gt;configure&lt;/code&gt; 옵션 중 일부는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e645b0f6736a3232d2755056481c36e947424569" translate="yes" xml:space="preserve">
          <source>Some of the decode functions need a pre-allocated buffer. This buffer must be allocated large enough, and for non-compound types the &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt; function returns the size required (notice that for strings an extra byte is needed for the &lt;code&gt;NULL&lt;/code&gt;-terminator).</source>
          <target state="translated">일부 디코딩 기능에는 사전 할당 된 버퍼가 필요합니다. 이 버퍼는 충분히 크게 할당되어야하며 비 복합 유형의 경우 &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt; 함수는 필요한 크기를 반환합니다 (문자열의 경우 &lt;code&gt;NULL&lt;/code&gt; 종료 자에 추가 바이트가 필요함을 유의하십시오).</target>
        </trans-unit>
        <trans-unit id="da87bf2715c3c501af0cfb153f102fd46a742fdf" translate="yes" xml:space="preserve">
          <source>Some of the decode functions need a pre-allocated buffer. This buffer must be allocated large enough, and for non-compound types the &lt;code&gt;ei_get_type()&lt;/code&gt; function returns the size required (notice that for strings an extra byte is needed for the &lt;code&gt;NULL&lt;/code&gt;-terminator).</source>
          <target state="translated">디코드 기능 중 일부에는 사전 할당 된 버퍼가 필요합니다. 이 버퍼는 충분히 크게 할당되어야하며, 비 복합 유형의 경우 &lt;code&gt;ei_get_type()&lt;/code&gt; 함수는 필요한 크기를 리턴합니다 (문자열의 경우 &lt;code&gt;NULL&lt;/code&gt; 종결 자에 여분의 바이트가 필요함 ).</target>
        </trans-unit>
        <trans-unit id="50a19878495c9175717bcac71b2941e4ab49b575" translate="yes" xml:space="preserve">
          <source>Some of the function has no defined return value (&lt;code&gt;void()&lt;/code&gt;), they can of course return anything. But the functions that do have specified return value(s) &lt;strong&gt;must&lt;/strong&gt; adhere to this. None of the functions can use exit of throw to return.</source>
          <target state="translated">함수 중 일부에는 정의 된 반환 값 ( &lt;code&gt;void()&lt;/code&gt; ) 이 없으며 물론 아무것도 반환 할 수 있습니다. 그러나 반환 값을 지정한 함수는이 &lt;strong&gt;를&lt;/strong&gt; 준수 &lt;strong&gt;해야&lt;/strong&gt; 합니다. 어떤 함수도 리턴 종료를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="58c4297bbd79b22aab207521ab54898a45f07587" translate="yes" xml:space="preserve">
          <source>Some of the functions take a parameter of type &lt;code&gt;ErlDrvBinary&lt;/code&gt;, a driver binary. It is to be both allocated and freed by the caller. Using a binary directly avoids one extra copying of data.</source>
          <target state="translated">일부 함수 는 드라이버 바이너리 인 &lt;code&gt;ErlDrvBinary&lt;/code&gt; 유형의 매개 변수를 사용합니다 . 발신자가 할당하고 해제해야합니다. 바이너리를 사용하면 데이터를 한 번 더 복사 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="001a161f565b29818bbd7f20b13e46a85a712341" translate="yes" xml:space="preserve">
          <source>Some of the functions use a &lt;strong&gt;match specification&lt;/strong&gt;, &lt;code&gt;match_spec&lt;/code&gt;. For a brief explanation, see &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt;. For a detailed description, see section &lt;code&gt; Match Specifications in Erlang&lt;/code&gt; in ERTS User's Guide.</source>
          <target state="translated">일부 함수는 &lt;strong&gt;일치 사양&lt;/strong&gt; 인 &lt;code&gt;match_spec&lt;/code&gt; 을 사용 합니다. 간단한 설명은 &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt; 를 참조 하십시오 . 자세한 설명 은 ERTS 사용자 가이드의 &lt;code&gt; Match Specifications in Erlang&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ad34f68080f1adaf7546e5395d3ecdc52cbeebe" translate="yes" xml:space="preserve">
          <source>Some of the functions use a &lt;strong&gt;match specification&lt;/strong&gt;, &lt;code&gt;match_spec&lt;/code&gt;. For a brief explanation, see &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt;. For a detailed description, see section &lt;code&gt;Match Specifications in Erlang&lt;/code&gt; in ERTS User's Guide.</source>
          <target state="translated">일부 기능은 사용할 &lt;strong&gt;일치 사양을&lt;/strong&gt; , &lt;code&gt;match_spec&lt;/code&gt; . 간단한 설명은 &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt; 를 참조 하십시오 . 자세한 설명 은 ERTS 사용 설명서의 &lt;code&gt;Match Specifications in Erlang&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d5d8e22f3613061ec1244d11b0b7d37b626a6c9" translate="yes" xml:space="preserve">
          <source>Some of the functions use the process dictionary variable &lt;code&gt;random_seed&lt;/code&gt; to remember the current seed.</source>
          <target state="translated">일부 함수는 프로세스 시드 변수 &lt;code&gt;random_seed&lt;/code&gt; 를 사용하여 현재 시드를 기억합니다.</target>
        </trans-unit>
        <trans-unit id="6775990a8a6aa5573ab69d179177f07666ac31c3" translate="yes" xml:space="preserve">
          <source>Some of the general string functions can seem to overlap each other. The reason is that this string package is the combination of two earlier packages and all functions of both packages have been retained.</source>
          <target state="translated">일반적인 문자열 함수 중 일부는 서로 겹치는 것처럼 보일 수 있습니다. 그 이유는이 문자열 패키지가 두 개의 이전 패키지의 조합이며 두 패키지의 모든 기능이 유지 되었기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="d7eb347b3644f1948715a42c0af4d0cc7dba6261" translate="yes" xml:space="preserve">
          <source>Some of the most frequently used instructions are described in this section. The complete list of instructions is included in the &lt;code&gt;appup(4)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">이 섹션에는 가장 자주 사용되는 지침 중 일부가 설명되어 있습니다. 전체 지침 목록은 SASL 의 &lt;code&gt;appup(4)&lt;/code&gt; 매뉴얼 페이지에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="79ec577256d81f891e7d0017206b7c2060aadb91" translate="yes" xml:space="preserve">
          <source>Some of the new BIFs on some systems, perhaps surprisingly, return negative integer values on a newly started runtime system. This is not a bug, but a memory use optimization.</source>
          <target state="translated">놀랍게도 일부 시스템의 일부 새로운 BIF는 새로 시작된 런타임 시스템에서 음의 정수 값을 리턴합니다. 이것은 버그가 아니라 메모리 사용 최적화입니다.</target>
        </trans-unit>
        <trans-unit id="684eb1657854da03a2d8a0600a6a92dd5cd4fbc5" translate="yes" xml:space="preserve">
          <source>Some of the send options (&lt;code&gt;community&lt;/code&gt;, &lt;code&gt;sec_model&lt;/code&gt;, &lt;code&gt;sec_name&lt;/code&gt;, &lt;code&gt;sec_level&lt;/code&gt; and &lt;code&gt;max_message_size&lt;/code&gt;) are &lt;code&gt;override options&lt;/code&gt;. That is, for &lt;strong&gt;this&lt;/strong&gt; request, they override any configuration done when the agent was registered.</source>
          <target state="translated">보내기 옵션 ( &lt;code&gt;community&lt;/code&gt; , &lt;code&gt;sec_model&lt;/code&gt; , &lt;code&gt;sec_name&lt;/code&gt; , &lt;code&gt;sec_level&lt;/code&gt; 및 &lt;code&gt;max_message_size&lt;/code&gt; ) 중 일부는 &lt;code&gt;override options&lt;/code&gt; 입니다. 즉, &lt;strong&gt;이&lt;/strong&gt; 요청의 경우 에이전트가 등록 될 때 수행 된 모든 구성을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="960c5649731f1c53a1352fb9839c4bd38b2e8266" translate="yes" xml:space="preserve">
          <source>Some of the tests that come with erlang use native code to test. This means that when cross compiling erlang you also have to cross compile test suites in order to run tests on the target host. To do this you first have to release the tests as usual.</source>
          <target state="translated">erlang과 함께 제공되는 일부 테스트는 네이티브 코드를 사용하여 테스트합니다. 따라서 Erlang을 크로스 컴파일 할 때 대상 호스트에서 테스트를 실행하려면 테스트 스위트를 크로스 컴파일해야합니다. 이렇게하려면 먼저 평소와 같이 테스트를 해제해야합니다.</target>
        </trans-unit>
        <trans-unit id="5b9c8cd590ef1853bc4a27f157c87d9f801d5e5f" translate="yes" xml:space="preserve">
          <source>Some of the warnings are optional, and can be turned on by specifying the appropriate option, described below.</source>
          <target state="translated">일부 경고는 선택 사항이며 아래 설명 된 적절한 옵션을 지정하여 켤 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ce7c1dced54f61f871a3fa993365b98f52c0f88" translate="yes" xml:space="preserve">
          <source>Some of these messages are ripped from the call flow examples in an old version of the RFC and others are created to test a specific feature of megaco.</source>
          <target state="translated">이러한 메시지 중 일부는 RFC 이전 버전의 통화 흐름 예에서 제외되고 다른 메시지는 megaco의 특정 기능을 테스트하기 위해 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="9b2e9cd0d4ac1ff0219bd38f99b5d6d5c7ac424a" translate="yes" xml:space="preserve">
          <source>Some of these values will override results of tests performed by &lt;code&gt;configure&lt;/code&gt;, and some will not be used until &lt;code&gt;configure&lt;/code&gt; is sure that it cannot figure the result out.</source>
          <target state="translated">이러한 값 중 일부는 &lt;code&gt;configure&lt;/code&gt; 에 의해 수행 된 테스트 결과를 무시 하고, 일부는 &lt;code&gt;configure&lt;/code&gt; 가 결과를 알아낼 수 없다는 것을 확신 할 때까지 사용 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="587d577c94caa5ad9d7c91012ed0b0688cd33fcd" translate="yes" xml:space="preserve">
          <source>Some operation, indicated by the term &lt;code&gt;When&lt;/code&gt;, failed on the master node &lt;code&gt;Master&lt;/code&gt; with the specified error reason &lt;code&gt;Reason&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;When&lt;/code&gt; 이라는 용어로 표시된 일부 조작 이 지정된 오류 이유 &lt;code&gt;Reason&lt;/code&gt; 과 함께 마스터 노드 &lt;code&gt;Master&lt;/code&gt; 에서 실패했습니다 .</target>
        </trans-unit>
        <trans-unit id="f3bf1fddcf4e131ffd826621406c3070e7fa1d20" translate="yes" xml:space="preserve">
          <source>Some options are OS and OS version dependent. Do not use it unless you know what effect your option values will have on an TCP stream.</source>
          <target state="translated">일부 옵션은 OS 및 OS 버전에 따라 다릅니다. 옵션 값이 TCP 스트림에 어떤 영향을 미칠지 알지 못하는 한 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="532a5fdf2519fa2810638913400161805aff1924" translate="yes" xml:space="preserve">
          <source>Some options can be specified to control the loading operation. The options are specified as a list of two-tuples. The tuples have the following values and meanings:</source>
          <target state="translated">로딩 작업을 제어하기 위해 일부 옵션을 지정할 수 있습니다. 옵션은 두 개의 튜플 목록으로 지정됩니다. 튜플은 다음과 같은 값과 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="1c034056f93d9ab7b4d34e283dc77ed6d015f68f" translate="yes" xml:space="preserve">
          <source>Some options that can be passed to &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt; compile/2&lt;/a&gt;&lt;/code&gt; can also be set by special items at the start of a pattern. These are not Perl-compatible, but are provided to make these options accessible to pattern writers who are not able to change the program that processes the pattern. Any number of these items can appear, but they must all be together right at the start of the pattern string, and the letters must be in upper case.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt; compile/2&lt;/a&gt;&lt;/code&gt; 로 전달할 수있는 일부 옵션 은 패턴 시작 부분의 특수 항목으로 설정할 수도 있습니다. 이는 Perl과 호환되지 않지만 패턴을 처리하는 프로그램을 변경할 수없는 패턴 작성자가 이러한 옵션에 액세스 할 수 있도록하기 위해 제공됩니다. 이러한 항목은 원하는만큼 나타날 수 있지만 패턴 문자열의 시작 부분에 모두 함께 있어야하며 문자는 대문자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3d6d5d5c93f1282380fc46283af217c17178ad5f" translate="yes" xml:space="preserve">
          <source>Some options that can be passed to &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; can also be set by special items at the start of a pattern. These are not Perl-compatible, but are provided to make these options accessible to pattern writers who are not able to change the program that processes the pattern. Any number of these items can appear, but they must all be together right at the start of the pattern string, and the letters must be in upper case.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; 에 전달 될 수있는 일부 옵션 은 패턴 시작시 특수 항목으로 설정할 수도 있습니다. 이들은 Perl과 호환되지 않지만 패턴을 처리하는 프로그램을 변경할 수없는 패턴 작성자가 이러한 옵션에 액세스 할 수 있도록하기 위해 제공됩니다. 이러한 항목은 여러 개 나타날 수 있지만 패턴 문자열의 시작 부분에 모두 함께 있어야하며 문자는 대문자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ea452507ebfbea5c3fe7913973b6c4778548d7c0" translate="yes" xml:space="preserve">
          <source>Some parts of OTP has had limited VxWorks support, such as for example &lt;code&gt;erl_interface&lt;/code&gt;. This support is now deprecated and has also been scheduled for removal in OTP 23.</source>
          <target state="translated">OTP의 일부 부분은 예를 들어 &lt;code&gt;erl_interface&lt;/code&gt; 와 같이 VxWorks 지원이 제한 되었습니다 . 이 지원은 이제 더 이상 사용되지 않으며 OTP 23에서도 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="6b9dfb977ffc1e82682a71d816c1ba159d76ec0a" translate="yes" xml:space="preserve">
          <source>Some parts of OTP were designed a very long time ago and did not necessarily take today's computing environments into account. In some cases the consequences of those design decisions are too severe. This may be performance wise, scalability wise, etc. If we deem the consequences too severe, we might introduce incompatible changes. This kind of incompatibility will not be introduced in a patch, but instead in the next release.</source>
          <target state="translated">OTP의 일부는 아주 오래 전에 설계되었으며 오늘날의 컴퓨팅 환경을 반드시 고려하지는 않았습니다. 경우에 따라 이러한 설계 결정의 결과가 너무 심각합니다. 성능, 확장 성 등이 될 수 있습니다. 결과가 너무 심각하다고 판단되면 호환되지 않는 변경이 발생할 수 있습니다. 이런 종류의 비 호환성은 패치로 소개되지 않고 다음 릴리스에서 소개 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="893be26d407a35c51326a6edae88e5915e76231b" translate="yes" xml:space="preserve">
          <source>Some printouts during test case execution:</source>
          <target state="translated">테스트 케이스 실행 중 일부 출력물 :</target>
        </trans-unit>
        <trans-unit id="1f278538d6488a2d8d8ae3fb2e1b8042afb8fd32" translate="yes" xml:space="preserve">
          <source>Some registry values are stored as strings with references to environment variables, for example, &lt;code&gt;%SystemRoot%Windows&lt;/code&gt;. &lt;code&gt;SystemRoot&lt;/code&gt; is an environment variable, and is to be replaced with its value. Function &lt;code&gt;&lt;a href=&quot;#expand-1&quot;&gt;expand/1&lt;/a&gt;&lt;/code&gt; is provided so that environment variables surrounded by &lt;code&gt;%&lt;/code&gt; can be expanded to their values.</source>
          <target state="translated">일부 레지스트리 값은 환경 변수 (예 : &lt;code&gt;%SystemRoot%Windows&lt;/code&gt; 를 참조하는 문자열로 저장됩니다 . &lt;code&gt;SystemRoot&lt;/code&gt; 는 환경 변수이며 해당 값으로 대체됩니다. &lt;code&gt;%&lt;/code&gt; 로 둘러싸인 환경 변수 를 해당 값으로 확장 할 수 있도록 기능 &lt;code&gt;&lt;a href=&quot;#expand-1&quot;&gt;expand/1&lt;/a&gt;&lt;/code&gt; 이 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="0599ae407bc9c76a4fca1d19b027f18a4d9b930a" translate="yes" xml:space="preserve">
          <source>Some shell printouts in the following examples are abbreviated for increased readability.</source>
          <target state="translated">다음 예의 일부 셸 출력은 가독성을 높이기 위해 축약됩니다.</target>
        </trans-unit>
        <trans-unit id="692031fe2faf78976297b5de58de12f7ed174433" translate="yes" xml:space="preserve">
          <source>Some special cases of this functionality are presented in the next section.</source>
          <target state="translated">이 기능의 일부 특수한 경우가 다음 섹션에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="55ed2a58ab9e0bd8975719e95e31944d94f92b07" translate="yes" xml:space="preserve">
          <source>Some special information, such as error reports, progress reports, and printouts written with &lt;code&gt;erlang:display/1&lt;/code&gt;, or &lt;code&gt;io:format/3&lt;/code&gt; specifically addressed to a receiver other than &lt;code&gt;standard_io&lt;/code&gt; (for example, the default group leader process &lt;code&gt;user&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;erlang:display/1&lt;/code&gt; 또는 &lt;code&gt;io:format/3&lt;/code&gt; 으로 작성된 오류 보고서, 진행률 보고서 및 인쇄물과 같은 일부 특수 정보는 특별히 &lt;code&gt;standard_io&lt;/code&gt; 이외의 수신자 (예 : 기본 그룹 리더 프로세스 &lt;code&gt;user&lt;/code&gt; )로 주소가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="cf417384297e3515a02ab56855cb40aa31fe1342" translate="yes" xml:space="preserve">
          <source>Some sub-directories are &lt;strong&gt;required&lt;/strong&gt;. Some sub-directories are &lt;strong&gt;optional&lt;/strong&gt;, meaning that it should only be used if the application itself requires it. Finally, some sub-directories are &lt;strong&gt;recommended&lt;/strong&gt;, meaning it is encouraged that it is used and used as described here. For example, both documentation and tests are encouraged to exist in an application for it to be deemed a proper OTP application.</source>
          <target state="translated">일부 하위 디렉토리가 &lt;strong&gt;필요합니다&lt;/strong&gt; . 일부 하위 디렉토리는 &lt;strong&gt;선택 사항&lt;/strong&gt; 이므로 응용 프로그램 자체에 필요한 경우에만 사용해야합니다. 마지막으로, 일부 서브 디렉토리가 &lt;strong&gt;권장&lt;/strong&gt; 되므로 여기에 설명 된대로 사용하고 사용하는 &lt;strong&gt;것이 좋습니다&lt;/strong&gt; . 예를 들어, 적절한 OTP 응용 프로그램으로 간주되기 위해 응용 프로그램에 문서와 테스트가 모두 존재하도록 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="c44b50783046445aa2fac90bdff5c889ef6680d4" translate="yes" xml:space="preserve">
          <source>Some tabs contain a left-hand menu where subitems of the information area can be selected. Click one of the rows, and the information is displayed in the right-hand information area.</source>
          <target state="translated">일부 탭에는 정보 영역의 하위 항목을 선택할 수있는 왼쪽 메뉴가 있습니다. 행 중 하나를 클릭하면 정보가 오른쪽 정보 영역에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0076c2c8aefb7261b0fcf3532f34d775d0493fda" translate="yes" xml:space="preserve">
          <source>Some terminology is needed: the certificate presents hostname(s) on which it is valid. Those are called</source>
          <target state="translated">일부 용어가 필요합니다. 인증서는 유효한 호스트 이름을 나타냅니다. 그것들은</target>
        </trans-unit>
        <trans-unit id="63b274f76c6915b5c4efc76b8f955fd7472ef3ca" translate="yes" xml:space="preserve">
          <source>Some things have changed from &lt;code&gt;pg_sync.c&lt;/code&gt;: we use the entry &lt;code&gt;ready_io&lt;/code&gt; for &lt;code&gt;ready_input&lt;/code&gt; and &lt;code&gt;ready_output&lt;/code&gt;, which is called from the emulator only when there is input to be read from the socket. (Actually, the socket is used in a &lt;code&gt;select&lt;/code&gt; function inside the emulator, and when the socket is signaled, indicating there is data to read, the &lt;code&gt;ready_input&lt;/code&gt; entry is called. More about this below.)</source>
          <target state="translated">어떤 것들은에서 변경 &lt;code&gt;pg_sync.c&lt;/code&gt; : 우리는 항목의 사용 &lt;code&gt;ready_io&lt;/code&gt; 을 위한 &lt;code&gt;ready_input&lt;/code&gt; 및 &lt;code&gt;ready_output&lt;/code&gt; 소켓에서 읽을 수 입력이있는 경우에만 에뮬레이터에서 호출됩니다. (실제로 소켓은 에뮬레이터 내부의 &lt;code&gt;select&lt;/code&gt; 기능에 사용되며 소켓에 신호를 보내 읽을 데이터가 있음을 나타내는 &lt;code&gt;ready_input&lt;/code&gt; 항목이 호출됩니다. 자세한 내용은 아래를 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="c24f9271e656a8d0dd4d8378ae6c5abe42b2d5bf" translate="yes" xml:space="preserve">
          <source>Some time later the user takes another snapshot and calculates scheduler utilization per scheduler, for example:</source>
          <target state="translated">얼마 후 사용자는 다른 스냅 샷을 작성하고 스케줄러 당 스케줄러 사용률을 계산합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="0f8abc0c839caa7196a71b3ea51b8663752766ec" translate="yes" xml:space="preserve">
          <source>Some tips on what to check when the emulator does not seem to receive the terms that you send:</source>
          <target state="translated">에뮬레이터가 전송 한 용어를받지 못하는 경우 확인할 사항에 대한 몇 가지 팁 :</target>
        </trans-unit>
        <trans-unit id="13a7a6036cf3e3a8f2567862912a17463e2aaf70" translate="yes" xml:space="preserve">
          <source>Some truths seem to live on well beyond their best-before date, perhaps because &quot;information&quot; spreads faster from person-to-person than a single release note that says, for example, that body-recursive calls have become faster.</source>
          <target state="translated">일부 정보는 예를 들어 신체 재귀 호출이 빨라 졌다는 단일 릴리스 노트보다 &quot;정보&quot;가 개인간에 빠르게 전파되기 때문에 아마도 이전 날짜보다 훨씬 오래 지속되는 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="7eb9cc620f302f2c96a12a6bae9c8ac6ec071b22" translate="yes" xml:space="preserve">
          <source>Some useful BIFs for distributed programming (for more information, see the &lt;code&gt; erlang(3)&lt;/code&gt; manual page in ERTS:</source>
          <target state="translated">분산 프로그래밍을위한 몇 가지 유용한 BIF (자세한 내용 은 ERTS 의 &lt;code&gt; erlang(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8e7a4b4ac918ad5e06dc9ae720dadbac82d7190a" translate="yes" xml:space="preserve">
          <source>Some useful BIFs for distributed programming (for more information, see the &lt;code&gt;erlang(3)&lt;/code&gt; manual page in ERTS:</source>
          <target state="translated">분산 프로그래밍에 유용한 몇 가지 BIF (자세한 내용 은 ERTS 의 &lt;code&gt;erlang(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a527f53a8e0e672ee0ca44e8b1c4a439f278ddd4" translate="yes" xml:space="preserve">
          <source>Some useful information is initialized when a process starts. The registered names, or the process identifiers, of the parent process, and the parent ancestors, are stored together with information about the function initially called in the process.</source>
          <target state="translated">일부 유용한 정보는 프로세스가 시작될 때 초기화됩니다. 부모 프로세스의 등록 된 이름 또는 프로세스 식별자와 부모 조상은 프로세스에서 처음 호출 된 함수에 대한 정보와 함께 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="2028cb2443f8e9daf49220a78619a7c89b656283" translate="yes" xml:space="preserve">
          <source>Some useful operators in guards are:</source>
          <target state="translated">경비원의 유용한 운영자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4dd789ff17ead2cfd47f8e836331495a9404fbba" translate="yes" xml:space="preserve">
          <source>Some useful shell commands for debugging the XPath parser</source>
          <target state="translated">XPath 파서를 디버깅하기위한 유용한 쉘 명령</target>
        </trans-unit>
        <trans-unit id="d501c243bd37e478e360879f419074506e613f43" translate="yes" xml:space="preserve">
          <source>Some uses of &lt;code&gt;length/1&lt;/code&gt; can be replaced by matching. For example, the following code:</source>
          <target state="translated">&lt;code&gt;length/1&lt;/code&gt; 의 일부 사용은 일치로 대체 될 수 있습니다. 예를 들어, 다음 코드는</target>
        </trans-unit>
        <trans-unit id="74687f19a9be956a6ffa1f42131c4ad5ea03191f" translate="yes" xml:space="preserve">
          <source>Some values may destroy the functionality of the SSH protocol.</source>
          <target state="translated">일부 값은 SSH 프로토콜의 기능을 손상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8d49521180b38936cf3e7e09cfe3ccc3672539a" translate="yes" xml:space="preserve">
          <source>Something is wrong with a fun &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">재미있는 &lt;code&gt;F&lt;/code&gt; 에 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a595a840021c4a9915671590852399dcdae9a6d0" translate="yes" xml:space="preserve">
          <source>Sometimes (see &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt;) traversal of tables can be done by looking up key values, which is assumed to be fast. Under certain (rare) circumstances there can be too many key values to look up.  Option &lt;code id=&quot;max_lookup&quot;&gt;{max_lookup,&amp;nbsp;MaxLookup}&lt;/code&gt; can then be used to limit the number of lookups: if more than &lt;code&gt;MaxLookup&lt;/code&gt; lookups would be required, no lookups are done but the table is traversed instead. Defaults to &lt;code&gt;infinity&lt;/code&gt;, which means that there is no limit on the number of keys to look up.</source>
          <target state="translated">때로는 키 값을 찾아서 ( &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt; 참조) 테이블 순회를 수행 할 수 있는데, 이는 빠른 것으로 간주됩니다. 특정 (희귀 한) 상황에서 조회하기에는 너무 많은 키 값이있을 수 있습니다. &lt;code id=&quot;max_lookup&quot;&gt;{max_lookup,&amp;nbsp;MaxLookup}&lt;/code&gt; 옵션을 사용하여 조회 수를 제한 할 수 있습니다. &lt;code&gt;MaxLookup&lt;/code&gt; 조회 보다 많은 조회가 필요한 경우 조회가 수행되지 않지만 대신 테이블이 순회됩니다. 기본값은 &lt;code&gt;infinity&lt;/code&gt; 이며, 이는 검색 할 키 수에 제한이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="db8cadc6cd039cae6c311adc00775bedcbb7aca7" translate="yes" xml:space="preserve">
          <source>Sometimes a function may unexpectedly waste a lot (some 10 ms or more depending on host machine OS) of OWN (and ACC) time, even functions that does practically nothing at all. The problem may be that the OS has chosen to schedule out the Erlang runtime system process for a while, and if the OS does not support high resolution cpu time measurements &lt;code&gt;fprof&lt;/code&gt; will use wallclock time for its calculations, and it will appear as functions randomly burn virtual machine time.</source>
          <target state="translated">때때로 함수가 예기치 않게 OWN (및 ACC) 시간을 많이 (호스트 시스템 OS에 따라 약 10ms 이상) 낭비 할 수 있으며, 실제로는 아무 것도 수행하지 않는 함수도 있습니다. 문제는 OS가 Erlang 런타임 시스템 프로세스를 일정 시간 동안 예약하기로 선택한 것일 수 있으며, OS가 고해상도 CPU 시간 측정을 지원하지 않는 경우 &lt;code&gt;fprof&lt;/code&gt; 는 계산에 벽시계 시간을 사용하며 임의로 레코딩하는 함수로 나타납니다. 가상 머신 시간.</target>
        </trans-unit>
        <trans-unit id="7dc115a1319ae042b4c92877e4c6447e43fecbc6" translate="yes" xml:space="preserve">
          <source>Sometimes an exception to the above rule has to be made to make new features (or even bug fixes) possible. A call to &lt;code&gt;ei_set_compat_rel(release_number)&lt;/code&gt; sets the &lt;code&gt;ei&lt;/code&gt; library in compatibility mode of OTP release &lt;code&gt;release_number&lt;/code&gt;.</source>
          <target state="translated">때로는 새로운 기능 (또는 버그 수정)을 가능하게하기 위해 위의 규칙에 대한 예외를 만들어야합니다. &lt;code&gt;ei_set_compat_rel(release_number)&lt;/code&gt; 호출 은 OTP 릴리스 &lt;code&gt;release_number&lt;/code&gt; 의 호환성 모드에서 &lt;code&gt;ei&lt;/code&gt; 라이브러리를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="11baeb3a6936f5ffe7074980bba11ba16d0a46d1" translate="yes" xml:space="preserve">
          <source>Sometimes communication between an Erlang program and another program using a standard protocol is desirable. Erlang/OTP currently supports TCP/IP and UDP &lt;strong&gt;sockets&lt;/strong&gt;: as follows:</source>
          <target state="translated">때때로 표준 프로토콜을 사용하는 Erlang 프로그램과 다른 프로그램 간의 통신이 바람직합니다. Erlang / OTP는 현재 TCP / IP 및 UDP &lt;strong&gt;소켓을&lt;/strong&gt; 지원 합니다 :</target>
        </trans-unit>
        <trans-unit id="20e4ac1b44cad1ebb6d70856e70e3ea359b59c1a" translate="yes" xml:space="preserve">
          <source>Sometimes database queries can take a long time to complete, in our &lt;code&gt;pg_sync&lt;/code&gt; driver, the emulator halts while the driver is doing its job. This is often not acceptable, as no other Erlang process gets a chance to do anything. To improve on our postgres driver, we re-implement it using the asynchronous calls in LibPQ.</source>
          <target state="translated">때때로 &lt;code&gt;pg_sync&lt;/code&gt; 드라이버 에서 데이터베이스 쿼리를 완료하는 데 시간이 오래 걸릴 수 있습니다 . 드라이버가 작업을 수행하는 동안 에뮬레이터가 중지됩니다. 다른 Erlang 프로세스가 아무것도 할 수있는 기회를 얻지 못하기 때문에 이는 종종 허용되지 않습니다. postgres 드라이버를 개선하기 위해 LibPQ의 비동기 호출을 사용하여 다시 구현합니다.</target>
        </trans-unit>
        <trans-unit id="70ce76b9d3fc6249cf9062a1c46f08d4f3c3cb3e" translate="yes" xml:space="preserve">
          <source>Sometimes events can arrive in any state of the &lt;code&gt;gen_statem&lt;/code&gt;. It is convenient to handle these in a common state handler function that all state functions call for events not specific to the state.</source>
          <target state="translated">때때로 이벤트는 &lt;code&gt;gen_statem&lt;/code&gt; 의 어떤 상태에 도달 할 수 있습니다 . 모든 상태 함수가 상태에 고유하지 않은 이벤트를 호출하는 공통 상태 핸들러 함수에서이를 처리하는 것이 편리합니다.</target>
        </trans-unit>
        <trans-unit id="0f4ab1fc14c191996bdc9b1d59c99ba2ce62ef2f" translate="yes" xml:space="preserve">
          <source>Sometimes in a system of &lt;code&gt;ASN.1&lt;/code&gt; modules, different default tag modes, for example, &lt;code&gt;AUTOMATIC&lt;/code&gt;, &lt;code&gt;IMPLICIT&lt;/code&gt;, or &lt;code&gt;EXPLICIT&lt;/code&gt;. The multi-file compilation resolves the default tagging as if the modules were compiled separately.</source>
          <target state="translated">때로는 &lt;code&gt;ASN.1&lt;/code&gt; 모듈 시스템 에서 다른 기본 태그 모드 (예 : &lt;code&gt;AUTOMATIC&lt;/code&gt; , &lt;code&gt;IMPLICIT&lt;/code&gt; 또는 &lt;code&gt;EXPLICIT&lt;/code&gt; )가 있습니다. 다중 파일 컴파일은 모듈이 개별적으로 컴파일 된 것처럼 기본 태깅을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="28ac3307ee87c7874d6aad9c77e81050831a6a1c" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to open a zip archive, and to unzip files from it file by file, without having to reopen the archive. This can be done by functions &lt;code&gt;&lt;a href=&quot;#zip_open-1&quot;&gt;zip_open/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#zip_get-1&quot;&gt;zip_get/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#zip_list_dir-1&quot;&gt;zip_list_dir/1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#zip_close-1&quot;&gt;zip_close/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">때로는 아카이브를 다시 열지 않고도 zip 아카이브를 열고 파일별로 파일을 압축 해제하는 것이 바람직합니다. &lt;code&gt;&lt;a href=&quot;#zip_open-1&quot;&gt;zip_open/1,2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#zip_get-1&quot;&gt;zip_get/1,2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#zip_list_dir-1&quot;&gt;zip_list_dir/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#zip_close-1&quot;&gt;zip_close/1&lt;/a&gt;&lt;/code&gt; 함수로 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="962be223b6e1106971ec47ead3e447a5c9197ea3" translate="yes" xml:space="preserve">
          <source>Sometimes it is impossible, or infeasible, to implement independent test cases. Maybe it is not possible to read the SUT state. Maybe resetting the SUT is impossible and it takes too long time to restart the system. In situations where test case dependency is necessary, CT offers a structured way to carry data from one test case to the next. The same mechanism can also be used to carry data from one test suite to the next.</source>
          <target state="translated">독립적 인 테스트 사례를 구현하는 것이 불가능하거나 불가능한 경우도 있습니다. SUT 상태를 읽을 수 없습니다. SUT 재설정이 불가능하고 시스템을 다시 시작하는 데 시간이 너무 오래 걸릴 수 있습니다. 테스트 사례 의존성이 필요한 상황에서 CT는 한 테스트 사례에서 다음 테스트 사례로 데이터를 전달하는 구조화 된 방법을 제공합니다. 한 테스트 스위트에서 다음 테스트 스위트로 데이터를 전달하는 데 동일한 메커니즘을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b3c4360ea605c722129889aad9e073dd0528647" translate="yes" xml:space="preserve">
          <source>Sometimes it is not possible to retrieve the values for some of the objects in the notification specification with a get-operation. However, they are known when the &lt;code&gt;send_notification&lt;/code&gt; function is called. This is the case if an object is an element in a table. It is possible to give the values of some objects to the &lt;code&gt;send_notification&lt;/code&gt; function &lt;code&gt;snmpa:send_notification(Agent, Notification, Receiver, Varbinds)&lt;/code&gt;. In this function, &lt;code&gt;Varbinds&lt;/code&gt; is a list of &lt;code&gt;Varbind&lt;/code&gt;, where each &lt;code&gt;Varbind&lt;/code&gt; is one of:</source>
          <target state="translated">get-operation을 사용하여 알림 스펙의 일부 오브젝트에 대한 값을 검색 할 수없는 경우가 있습니다. 그러나 &lt;code&gt;send_notification&lt;/code&gt; 함수가 호출 될 때 알려져 있습니다. 개체가 테이블의 요소 인 경우입니다. &lt;code&gt;send_notification&lt;/code&gt; 함수 &lt;code&gt;snmpa:send_notification(Agent, Notification, Receiver, Varbinds)&lt;/code&gt; 에 일부 객체의 값을 제공 할 수 있습니다 . 이 함수에서는 &lt;code&gt;Varbinds&lt;/code&gt; 는 목록이다 &lt;code&gt;Varbind&lt;/code&gt; 각각 &lt;code&gt;Varbind&lt;/code&gt; 중 하나는 :</target>
        </trans-unit>
        <trans-unit id="18f53eb4fc8c8a4320ec0fb342a69d7dd865fbb6" translate="yes" xml:space="preserve">
          <source>Sometimes test cases depend on each other so that if one case fails, the following tests are not to be executed. Typically, if the &lt;code&gt;save_config&lt;/code&gt; facility is used and a test case that is expected to save data crashes, the following case cannot run. &lt;code&gt;Common Test&lt;/code&gt; offers a way to declare such dependencies, called sequences.</source>
          <target state="translated">경우에 따라 테스트 사례가 서로 종속되어 하나의 사례가 실패하면 다음 테스트를 실행하지 않습니다. 일반적으로 &lt;code&gt;save_config&lt;/code&gt; 기능을 사용하고 데이터를 저장할 것으로 예상되는 테스트 사례가 충돌하면 다음 사례를 실행할 수 없습니다. &lt;code&gt;Common Test&lt;/code&gt; 는 시퀀스라고하는 이러한 종속성을 선언하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6799ff5620c272139e2872edd534d0a33e7d529c" translate="yes" xml:space="preserve">
          <source>Sometimes the escape sequence \K (see above) can be used instead of a lookbehind assertion to get round the fixed-length restriction.</source>
          <target state="translated">때로는 이스케이프 시퀀스 \ K (위 참조)를 고정 길이 제한을 극복하기 위해 lookbehind 어설 션 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91d713d409fd840d2a2fd28e664b363a3c3973a3" translate="yes" xml:space="preserve">
          <source>Sometimes the system can enter a state where the reported memory from &lt;code&gt;erlang:memory(total)&lt;/code&gt; is very different from the memory reported by the OS. This can be because of internal fragmentation within the Erlang Run-Time System. Data about how memory is allocated can be retrieved using &lt;code&gt; erlang:system_info(allocator)&lt;/code&gt;. The data you get from that function is very raw and not very plesant to read. &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; can be used to extract useful information from system_info statistics counters.</source>
          <target state="translated">때때로 시스템은 &lt;code&gt;erlang:memory(total)&lt;/code&gt; 에서보고 된 메모리가 OS에서보고 한 메모리와 매우 다른 상태로 들어갈 수 있습니다 . 이는 Erlang 런타임 시스템 내부의 단편화 때문일 수 있습니다. 메모리 할당 방법에 대한 데이터는 &lt;code&gt; erlang:system_info(allocator)&lt;/code&gt; 사용하여 검색 할 수 있습니다 . 그 함수에서 얻은 데이터는 매우 원시적이며 읽기에 그리 즐겁지 않습니다. &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; 을 사용하여 system_info 통계 카운터에서 유용한 정보를 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f742e389a3de6261a036ea786f6851d9053f699" translate="yes" xml:space="preserve">
          <source>Sometimes the system can enter a state where the reported memory from &lt;code&gt;erlang:memory(total)&lt;/code&gt; is very different from the memory reported by the OS. This can be because of internal fragmentation within the Erlang Run-Time System. Data about how memory is allocated can be retrieved using &lt;code&gt;erlang:system_info(allocator)&lt;/code&gt;. The data you get from that function is very raw and not very plesant to read. &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; can be used to extract useful information from system_info statistics counters.</source>
          <target state="translated">때때로 시스템은 &lt;code&gt;erlang:memory(total)&lt;/code&gt; 보고 된 메모리가 OS에서보고 한 메모리와 매우 다른 상태로 들어갈 수 있습니다 . Erlang 런타임 시스템 내에서 내부 조각화가 원인 일 수 있습니다. 메모리 할당 방법에 대한 데이터는 &lt;code&gt;erlang:system_info(allocator)&lt;/code&gt; 사용하여 검색 할 수 있습니다 . 해당 함수에서 얻은 데이터는 매우 원시적이며 읽기에 유쾌하지 않습니다. &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; 은 system_info 통계 카운터에서 유용한 정보를 추출하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b1a0dbc909bd1d69d7a427e71f3d97d4434bf44" translate="yes" xml:space="preserve">
          <source>Sometimes, an example says more than a thousand words. The following small Erlang module shows how EUnit can be used in practice.</source>
          <target state="translated">때때로, 한 예는 천 단어 이상을 말합니다. 다음의 작은 Erlang 모듈은 실제로 EUnit을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="141171fb0d1fd830be08540cd391f0b82b2cb5a0" translate="yes" xml:space="preserve">
          <source>Sometimes, however, it can be useful to save all calls, even tail-recursive calls. This is done with option &lt;strong&gt;Stack On, Tail&lt;/strong&gt;. Notice that this option consumes more memory and slows down execution of interpreted functions when there are many tail-recursive calls.</source>
          <target state="translated">그러나 때로는 모든 통화, 꼬리 재귀 통화를 저장하는 것이 유용 할 수 있습니다. 이것은 &lt;strong&gt;Stack On, Tail&lt;/strong&gt; 옵션으로 수행됩니다 . 이 옵션은 꼬리 재귀 호출이 많은 경우 더 많은 메모리를 소비하고 해석 된 함수의 실행 속도를 늦 춥니 다.</target>
        </trans-unit>
        <trans-unit id="7528f753ad83a3f31ee20a4a9df5023228949195" translate="yes" xml:space="preserve">
          <source>Sometimes, it can be convenient not to produce the whole set of test descriptions before the testing begins; for example, if you want to generate a huge amount of tests that would take up too much space to keep in memory all at once.</source>
          <target state="translated">때로는 테스트가 시작되기 전에 전체 테스트 설명을 작성하지 않는 것이 편리 할 수 ​​있습니다. 예를 들어, 메모리에 한 번에 보관하기에 너무 많은 공간을 차지하는 엄청난 양의 테스트를 생성하려는 경우.</target>
        </trans-unit>
        <trans-unit id="e8a15c3b3a3ffffe356dc1c64607437dff58e484" translate="yes" xml:space="preserve">
          <source>Sometimes, testing some unit &lt;code&gt;A&lt;/code&gt; (e.g., a function) requires that it collaborates somehow with some other unit &lt;code&gt;B&lt;/code&gt; (perhaps being passed as an argument, or by reference) - but &lt;code&gt;B&lt;/code&gt; has not been implemented yet. A &quot;mock object&quot; - an object which, for the purposes of testing &lt;code&gt;A&lt;/code&gt;, looks and behaves like a real &lt;code&gt;B&lt;/code&gt; - might then be used instead. (This is of course only useful if it would be significantly more work to implement a real &lt;code&gt;B&lt;/code&gt; than to create a mock object.)</source>
          <target state="translated">때로는 일부 단위 &lt;code&gt;A&lt;/code&gt; (예 : 함수)를 테스트 하려면 다른 단위 &lt;code&gt;B&lt;/code&gt; (어쩌면 인수로 전달되거나 참조로 전달됨) 와 협력해야 하지만 &lt;code&gt;B&lt;/code&gt; 는 아직 구현되지 않았습니다. &quot;모의 객체&quot; &lt;code&gt;A&lt;/code&gt; 를 테스트 할 목적으로 실제 &lt;code&gt;B&lt;/code&gt; 처럼 보이고 동작 하는 객체가 대신 사용될 수 있습니다. (물론 모의 객체를 만드는 것보다 실제 &lt;code&gt;B&lt;/code&gt; 를 구현하는 것이 훨씬 더 많은 경우에만 유용 합니다.)</target>
        </trans-unit>
        <trans-unit id="0a45b5fa3cbcf07e819f1dbe6736a78703c55350" translate="yes" xml:space="preserve">
          <source>Sometimes, the tree structure of a code fragment isn't very obvious, and parts of the structure may be invisible when printed as source code. For instance, a simple function definition like the following:</source>
          <target state="translated">때로는 코드 조각의 트리 구조가 명확하지 않고 소스 코드로 인쇄 할 때 구조의 일부가 보이지 않을 수 있습니다. 예를 들어 다음과 같은 간단한 함수 정의가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f5a4e4270a7a6dacae32c73a607ab7be8a3fae4" translate="yes" xml:space="preserve">
          <source>Sometimes, when the range of a function is more important than the function itself, the function is called a &lt;strong&gt;family&lt;/strong&gt;.</source>
          <target state="translated">함수의 범위가 함수 자체보다 중요한 경우 함수를 &lt;strong&gt;패밀리&lt;/strong&gt; 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="6c3d850f9c60834aad749bf8ac8a3f5f1f45da55" translate="yes" xml:space="preserve">
          <source>Sora_Sompeng</source>
          <target state="translated">Sora_Sompeng</target>
        </trans-unit>
        <trans-unit id="b1a6c8fcce88ee4bcf40d107a65ee3f65ecea47e" translate="yes" xml:space="preserve">
          <source>Sorts terms on files.</source>
          <target state="translated">파일에서 용어를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="1631590253eec5683c842d19992a2c57c732cacd" translate="yes" xml:space="preserve">
          <source>Sorts tuples on files.</source>
          <target state="translated">파일에서 튜플을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="9b28d47983f31cf72a4077cc7d9a41a857609c4a" translate="yes" xml:space="preserve">
          <source>Sorts tuples on files. The sort is performed on the element(s) mentioned in &lt;code&gt;KeyPos&lt;/code&gt;. If two tuples compare equal (&lt;code&gt;==&lt;/code&gt;) on one element, the next element according to &lt;code&gt;KeyPos&lt;/code&gt; is compared. The sort is stable.</source>
          <target state="translated">파일에서 튜플을 정렬합니다. 정렬은 &lt;code&gt;KeyPos&lt;/code&gt; 에 언급 된 요소에서 수행됩니다 . 두 개의 튜플이 한 요소에서 동일한 ( &lt;code&gt;==&lt;/code&gt; ) 비교 하면 &lt;code&gt;KeyPos&lt;/code&gt; 에 따른 다음 요소 가 비교됩니다. 정렬이 안정적입니다.</target>
        </trans-unit>
        <trans-unit id="4e7484d321669c42caf2ee17f3c18c5acb876879" translate="yes" xml:space="preserve">
          <source>Source code can be reconstructed from the debug information. To prevent this, use encrypted debug information (see below).</source>
          <target state="translated">디버그 정보에서 소스 코드를 재구성 할 수 있습니다. 이를 방지하려면 암호화 된 디버그 정보를 사용하십시오 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="5203b12fc8bf99e156b8857e7b7938720028ac47" translate="yes" xml:space="preserve">
          <source>Source files from other languages that generate Erlang code, such as ASN.1 or Mibs, should be placed in directories, at the top level or in &lt;code&gt;src&lt;/code&gt;, with the same name as the source language, for example &lt;code&gt;asn1&lt;/code&gt; and &lt;code&gt;mibs&lt;/code&gt;. Build artifacts should be placed in their respective language directory, such as &lt;code&gt;src&lt;/code&gt; for Erlang code or &lt;code&gt;java_src&lt;/code&gt; for Java code.</source>
          <target state="translated">Erlang 코드를 생성하는 다른 언어 (예 : ASN.1 또는 Mibs) 의 소스 파일은 소스 언어와 동일한 이름 (예 : &lt;code&gt;asn1&lt;/code&gt; 및 &lt;code&gt;mibs&lt;/code&gt; )으로 최상위 레벨 또는 &lt;code&gt;src&lt;/code&gt; 디렉토리에 있어야합니다 . 빌드 아티팩트는 Erlang 코드의 경우 &lt;code&gt;src&lt;/code&gt; 또는 Java 코드의 경우 &lt;code&gt;java_src&lt;/code&gt; 와 같은 해당 언어 디렉토리에 배치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="df9975b8828480ef5a2bcbf7c8e1186fadb81e2f" translate="yes" xml:space="preserve">
          <source>Space characters between mark-up as &lt;code&gt;space&lt;/code&gt;, &lt;code&gt;tab&lt;/code&gt; and &lt;code&gt;line feed&lt;/code&gt; are normalized and returned as xmlText records.</source>
          <target state="translated">&lt;code&gt;space&lt;/code&gt; , &lt;code&gt;tab&lt;/code&gt; 및 &lt;code&gt;line feed&lt;/code&gt; 으로 마크 업 사이의 공백 문자 는 정규화되어 xmlText 레코드로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6c52a99f638b2f6880712039a2d8fba807d2f455" translate="yes" xml:space="preserve">
          <source>Space or tab only</source>
          <target state="translated">공백 또는 탭만</target>
        </trans-unit>
        <trans-unit id="cd78242918f53a012c175a68aa9091a9a360f24a" translate="yes" xml:space="preserve">
          <source>Space separator</source>
          <target state="translated">공간 분리기</target>
        </trans-unit>
        <trans-unit id="af9cc9c4b2d6d26d730a19f4f006d58e864ef162" translate="yes" xml:space="preserve">
          <source>Space.</source>
          <target state="translated">Space.</target>
        </trans-unit>
        <trans-unit id="8eef4763fa1fe16b6bb4a2baf8cab5427460e619" translate="yes" xml:space="preserve">
          <source>Spacing mark</source>
          <target state="translated">간격 표시</target>
        </trans-unit>
        <trans-unit id="5a94447ed0523279661d0e9fc1d87b2db2370048" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;erlang:spawn_opt&lt;/code&gt; BIFs.</source>
          <target state="translated">이 매뉴얼 페이지의 시작 부분에 설명 된대로 새 프로세스를 생성하고 초기화합니다. 이 프로세스는 &lt;code&gt;erlang:spawn_opt&lt;/code&gt; BIF를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="0f341ce249d51c9b11286c1f984ee17348a44f5c" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;spawn&lt;/code&gt; BIFs.</source>
          <target state="translated">이 매뉴얼 페이지의 시작 부분에 설명 된대로 새 프로세스를 생성하고 초기화합니다. 프로세스는 &lt;code&gt;spawn&lt;/code&gt; BIF를 사용하여 스폰 됩니다.</target>
        </trans-unit>
        <trans-unit id="4a7ed2584cb35f5a4781d8640847abd5044f7acd" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;spawn_link&lt;/code&gt; BIFs.</source>
          <target state="translated">이 매뉴얼 페이지의 시작 부분에 설명 된대로 새 프로세스를 생성하고 초기화합니다. 프로세스는 &lt;code&gt;spawn_link&lt;/code&gt; BIF를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3cbb2dc5868cb0ededa580453f13a294d8af72c" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;spawn_opt&lt;/code&gt; BIFs.</source>
          <target state="translated">이 매뉴얼 페이지의 시작 부분에 설명 된대로 새 프로세스를 생성하고 초기화합니다. 프로세스는 &lt;code&gt;spawn_opt&lt;/code&gt; BIF를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c4239d5cd20bcd2d24ac65a94922cccc6c8478c4" translate="yes" xml:space="preserve">
          <source>Spawns a process on the pool node that is expected to have the lowest future load.</source>
          <target state="translated">풀로드에서 미래로드가 가장 낮을 것으로 예상되는 프로세스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="dafad9130ea38369a11a7749c33f82f643bd8480" translate="yes" xml:space="preserve">
          <source>Spawns and links to a process on the pool node that is expected to have the lowest future load.</source>
          <target state="translated">미래로드가 가장 낮을 것으로 예상되는 풀 노드의 프로세스에 대한 스폰 및 링크.</target>
        </trans-unit>
        <trans-unit id="97f6f7c8b851bb1fa31a0691ac4fd651901620ac" translate="yes" xml:space="preserve">
          <source>Special Flag for literal_alloc</source>
          <target state="translated">literal_alloc의 특수 플래그</target>
        </trans-unit>
        <trans-unit id="5acf81316cdebc5ea464a6f14689235e745fb310" translate="yes" xml:space="preserve">
          <source>Special Flags</source>
          <target state="translated">특수 깃발</target>
        </trans-unit>
        <trans-unit id="b547c85d3f281c0e0dabcfde624fc728af461ba5" translate="yes" xml:space="preserve">
          <source>Special Set Transaction Mechanism</source>
          <target state="translated">특수 세트 거래 메커니즘</target>
        </trans-unit>
        <trans-unit id="1f2c035c13e5154d536f08a14892fa4f0e712738" translate="yes" xml:space="preserve">
          <source>Specific BEAM instructions. The specific instructions are the instructions that are actually executed by the runtime system. They can be changed at any time without causing compatibility issues. The loader translates generic instructions to specific instructions. In general, for each generic instruction, there exists a family of specific instructions. The OTP 20 release has 389 specific instructions.</source>
          <target state="translated">특정 BEAM 지침. 특정 명령어는 런타임 시스템에서 실제로 실행되는 명령어입니다. 호환성 문제를 일으키지 않고 언제든지 변경할 수 있습니다. 로더는 일반 명령어를 특정 명령어로 변환합니다. 일반적으로 각 일반 명령어에 대해 특정 명령어 제품군이 있습니다. OTP 20 릴리스에는 389 개의 특정 지침이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c5e414c1b8309ce6e5fc0ef999dc90a86b1b36d" translate="yes" xml:space="preserve">
          <source>Specific for the event.</source>
          <target state="translated">이벤트에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c2077f98e0a89f01a856fb46e7a674ad07325697" translate="yes" xml:space="preserve">
          <source>Specific functions to support this are &lt;code&gt;&lt;a href=&quot;#create_subscription-1&quot;&gt;create_subscription/1-6&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#get_event_streams-1&quot;&gt;get_event_streams/1-3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이를 지원하는 특정 함수는 &lt;code&gt;&lt;a href=&quot;#create_subscription-1&quot;&gt;create_subscription/1-6&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#get_event_streams-1&quot;&gt;get_event_streams/1-3&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fec7247721de870e0f06696429a05e91553b7f67" translate="yes" xml:space="preserve">
          <source>Specific generic time-outs can just as &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt; be restarted or cancelled by setting it to a new time or &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">특정 시간 초과 를 새로운 시간 또는 &lt;code&gt;infinity&lt;/code&gt; 로 설정하여 &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt; 초과를 다시 시작하거나 취소하는 것처럼 특정 일반 시간 초과를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78113e480551c940016707de594db78ce7763561" translate="yes" xml:space="preserve">
          <source>Specific generic time-outs can just as &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;state time-outs&lt;/a&gt;&lt;/code&gt; be restarted or cancelled by setting it to a new time or &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">특정 일반 제한 시간은 &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;state time-outs&lt;/a&gt;&lt;/code&gt; 을 새 시간 또는 &lt;code&gt;infinity&lt;/code&gt; 로 설정하여 다시 시작하거나 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="043b62d9c56f096aa038b6c25572955691ac021e" translate="yes" xml:space="preserve">
          <source>Specifically, the application configuration parameters are automatically updated according to (in increasing priority order):</source>
          <target state="translated">특히 응용 프로그램 구성 매개 변수는 우선 순위에 따라 자동으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="2d465c7b0696d5d019af407873a8f228fb47f494" translate="yes" xml:space="preserve">
          <source>Specified &lt;code&gt;.rel&lt;/code&gt; file &lt;code&gt;File&lt;/code&gt; cannot be read or does not contain a single term.</source>
          <target state="translated">지정된 &lt;code&gt;.rel&lt;/code&gt; 파일 &lt;code&gt;File&lt;/code&gt; 을 읽을 수 없거나 단일 용어를 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c9d3ee319194053cb474f42b3ded7c409f99060" translate="yes" xml:space="preserve">
          <source>Specified &lt;code&gt;.rel&lt;/code&gt; file does not contain a recognized release specification, but another term &lt;code&gt;Data&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;.rel&lt;/code&gt; 파일에는 인식 된 릴리스 사양이 아니라 다른 용어 &lt;code&gt;Data&lt;/code&gt; 가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="658af0b4be0658972a1ed6d4ed084caefdf2e39f" translate="yes" xml:space="preserve">
          <source>Specified &lt;code&gt;relup&lt;/code&gt; file &lt;code&gt;Relup&lt;/code&gt; contains bad data.</source>
          <target state="translated">지정된 &lt;code&gt;relup&lt;/code&gt; 파일 &lt;code&gt;Relup&lt;/code&gt; 에 잘못된 데이터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b4f12d52aaae6c06a275fb9d469c739fedfaa98" translate="yes" xml:space="preserve">
          <source>Specified release version &lt;code&gt;Vsn&lt;/code&gt; is already in use.</source>
          <target state="translated">지정된 릴리스 버전 &lt;code&gt;Vsn&lt;/code&gt; 이 이미 사용 중입니다.</target>
        </trans-unit>
        <trans-unit id="a068d6cb0d76c0bfa9363688a200702b68200211" translate="yes" xml:space="preserve">
          <source>Specifies AVPs for which module Mod provides encode/decode functions. The section contents consists of AVP names. For each such name, &lt;code&gt;Mod:Name(encode|decode, Type, Data, Opts)&lt;/code&gt; is expected to provide encode/decode for values of the AVP, where Name is the name of the AVP, Type is it's type as declared in the &lt;code&gt;@avp_types&lt;/code&gt; section of the dictionary, Data is the value to encode/decode, and Opts is a term that is passed through encode/decode.</source>
          <target state="translated">모듈 Mod가 인코딩 / 디코딩 기능을 제공하는 AVP를 지정합니다. 섹션 내용은 AVP 이름으로 구성됩니다. 이러한 각 이름에 대해 &lt;code&gt;Mod:Name(encode|decode, Type, Data, Opts)&lt;/code&gt; 은 AVP의 값에 대해 인코딩 / 디코딩을 제공해야합니다. 여기서 Name은 AVP의 이름이고 Type은 &lt;code&gt;@avp_types&lt;/code&gt; 에서 선언 된 유형입니다. 사전의 avp_types 섹션에서, Data는 인코딩 / 디코딩 할 값이고 Opts는 인코딩 / 디코딩을 통과하는 용어입니다.</target>
        </trans-unit>
        <trans-unit id="e08b9a9519abea6701ca06cbf3a649033c9f8732" translate="yes" xml:space="preserve">
          <source>Specifies Logger's compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;. See the &lt;code&gt; kernel(6)&lt;/code&gt; manual page for more information about this parameter.</source>
          <target state="translated">Logger와 &lt;code&gt;SASL Error Logging&lt;/code&gt; 의 호환성을 지정합니다 . 이 매개 변수에 대한 자세한 정보 는 &lt;code&gt; kernel(6)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aac38a050f1e9da7fe89de7d587aaf6d51bcf2ed" translate="yes" xml:space="preserve">
          <source>Specifies Logger's compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;. See the &lt;code&gt;kernel(6)&lt;/code&gt; manual page for more information about this parameter.</source>
          <target state="translated">로거와 &lt;code&gt;SASL Error Logging&lt;/code&gt; 의 호환성을 지정합니다 . 참고 항목 &lt;code&gt;kernel(6)&lt;/code&gt; 이 매개 변수에 대한 자세한 내용은 설명서 페이지를.</target>
        </trans-unit>
        <trans-unit id="7683235bcdb93e8b7ba424f0769c8c38888e4193" translate="yes" xml:space="preserve">
          <source>Specifies a channel process to handle an SFTP subsystem.</source>
          <target state="translated">SFTP 서브 시스템을 처리 할 채널 프로세스를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f6cd0aa6bbc4042b79b01a293cbdc0343a05c421" translate="yes" xml:space="preserve">
          <source>Specifies a formatter that the handler can use for converting the log event term to a printable string.</source>
          <target state="translated">핸들러가 로그 이벤트 용어를 인쇄 가능한 문자열로 변환하는 데 사용할 수있는 포맷터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="963ff978b9122b7f2cc35cc12260364e995a51f6" translate="yes" xml:space="preserve">
          <source>Specifies a function for prettyprinting Erlang syntax trees. This is used for outputting the resulting module definition, as well as for creating stub files. The function is assumed to return formatted text for the given syntax tree, and should raise an exception if an error occurs. The default formatting function calls &lt;code&gt;erl_prettypr:format/2&lt;/code&gt;.</source>
          <target state="translated">Erlang 구문 트리를 인쇄하기위한 함수를 지정합니다. 이는 스텁 파일 작성뿐만 아니라 결과 모듈 정의를 출력하는 데 사용됩니다. 이 함수는 주어진 구문 트리에 대해 형식화 된 텍스트를 리턴하는 것으로 가정되며 오류가 발생하면 예외를 발생시켜야합니다. 기본 형식화 함수는 &lt;code&gt;erl_prettypr:format/2&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="d938a0dbc6626a45daeb05fab2c852825569cc93" translate="yes" xml:space="preserve">
          <source>Specifies a function for prettyprinting Erlang syntax trees. This is used for outputting the resulting module definition. The function is assumed to return formatted text for the given syntax tree, and should raise an exception if an error occurs. The default formatting function calls &lt;code&gt;erl_prettypr:format/2&lt;/code&gt;.</source>
          <target state="translated">Erlang 구문 트리를 인쇄하기위한 함수를 지정합니다. 결과 모듈 정의를 출력하는 데 사용됩니다. 이 함수는 주어진 구문 트리에 대해 형식화 된 텍스트를 리턴하는 것으로 가정되며 오류가 발생하면 예외를 발생시켜야합니다. 기본 형식화 함수는 &lt;code&gt;erl_prettypr:format/2&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="6ad9656e8bb0143f9e40287fdb029ca4771602ab" translate="yes" xml:space="preserve">
          <source>Specifies a function to be called each time a new log file is opened. The call &lt;code&gt;M:F(A)&lt;/code&gt; is assumed to return &lt;code&gt;{ok, Head}&lt;/code&gt;. The item &lt;code&gt;Head&lt;/code&gt; is written first in each file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise a sequence of bytes.</source>
          <target state="translated">새 로그 파일을 열 때마다 호출 할 함수를 지정합니다. &lt;code&gt;M:F(A)&lt;/code&gt; 호출 은 &lt;code&gt;{ok, Head}&lt;/code&gt; 를 리턴한다고 가정합니다 . 항목 &lt;code&gt;Head&lt;/code&gt; 는 각 파일에서 먼저 작성됩니다. 형식이 &lt;code&gt;internal&lt;/code&gt; 인 경우 &lt;code&gt;Head&lt;/code&gt; 는 용어 이고 그렇지 않으면 일련의 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="df7b1a9a5cbfb53f64dd762a721127536842da62" translate="yes" xml:space="preserve">
          <source>Specifies a function to be called each time a new log file is opened. The call &lt;code&gt;M:F(A)&lt;/code&gt; is assumed to return &lt;code&gt;{ok, Head}&lt;/code&gt;. The item &lt;code&gt;Head&lt;/code&gt; is written first in each file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise an &lt;code&gt;iodata()&lt;/code&gt;.</source>
          <target state="translated">새 로그 파일이 열릴 때마다 호출 할 함수를 지정합니다. 호출 &lt;code&gt;M:F(A)&lt;/code&gt; 는 &lt;code&gt;{ok, Head}&lt;/code&gt; 를 반환한다고 가정합니다 . 항목 &lt;code&gt;Head&lt;/code&gt; 는 각 파일에 먼저 기록됩니다. 형식이 &lt;code&gt;internal&lt;/code&gt; 인 경우 &lt;code&gt;Head&lt;/code&gt; 는 용어가 되고 그렇지 않으면 &lt;code&gt;iodata()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3c9a582c23e345c6f1af8d7c94f774ace3fc24ee" translate="yes" xml:space="preserve">
          <source>Specifies a header to be written first on the log file. If the log is a wrap log, the item &lt;code&gt;Head&lt;/code&gt; is written first in each new file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise a sequence of bytes. Defaults to &lt;code&gt;none&lt;/code&gt;, which means that no header is written first on the file.</source>
          <target state="translated">로그 파일에 처음 기록 될 헤더를 지정합니다. 로그가 랩 로그인 경우 항목 &lt;code&gt;Head&lt;/code&gt; 는 각 새 파일에서 먼저 기록됩니다. 형식이 &lt;code&gt;internal&lt;/code&gt; 인 경우 &lt;code&gt;Head&lt;/code&gt; 는 용어 이고 그렇지 않으면 일련의 바이트입니다. 기본값은 &lt;code&gt;none&lt;/code&gt; 으로 , 파일에 헤더가 먼저 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e48e383dc2c4a63e5320d40f25c906a84e3b0491" translate="yes" xml:space="preserve">
          <source>Specifies a header to be written first on the log file. If the log is a wrap log, the item &lt;code&gt;Head&lt;/code&gt; is written first in each new file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise an &lt;code&gt;iodata()&lt;/code&gt;. Defaults to &lt;code&gt;none&lt;/code&gt;, which means that no header is written first on the file.</source>
          <target state="translated">로그 파일에 먼저 기록 될 헤더를 지정합니다. 로그가 랩 로그인 경우 각 새 파일에 &lt;code&gt;Head&lt;/code&gt; 항목 이 먼저 기록됩니다. 형식이 &lt;code&gt;internal&lt;/code&gt; 인 경우 &lt;code&gt;Head&lt;/code&gt; 는 용어가 되고 그렇지 않으면 &lt;code&gt;iodata()&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;none&lt;/code&gt; 입니다. 즉, 파일에 헤더가 먼저 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8af13086d5a1e7a4068ce9ffac242c55cd65eb47" translate="yes" xml:space="preserve">
          <source>Specifies a list of &quot;pre-defined&quot; macro definitions for the Erlang preprocessor, if used (cf. the &lt;code&gt;preprocess&lt;/code&gt; option). The default value is the empty list.</source>
          <target state="translated">Erlang 전처리기에 대한 &quot;사전 정의 된&quot;매크로 정의 목록을 지정합니다 ( &lt;code&gt;preprocess&lt;/code&gt; 옵션 참조 ). 기본값은 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6ce40a7275652419ded2308203c717e9bd294631" translate="yes" xml:space="preserve">
          <source>Specifies a list of MIBs (including path) and defines which MIBs are initially loaded into the SNMP manager.</source>
          <target state="translated">MIB 목록 (경로 포함)을 지정하고 SNMP 관리자에 처음으로로드되는 MIB를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="efe5714e9076819f77f683fa042f092f47cb3ce1" translate="yes" xml:space="preserve">
          <source>Specifies a list of MIBs (including path) that defines which MIBs are initially loaded into the SNMP master agent.</source>
          <target state="translated">SNMP 마스터 에이전트에 처음으로로드되는 MIB를 정의하는 MIB (경로 포함) 목록을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="646d02a3d453f371128366bcbdaac3802f473664" translate="yes" xml:space="preserve">
          <source>Specifies a list of directory names for the Erlang preprocessor, if used, to search for include files (cf. the &lt;code&gt;preprocess&lt;/code&gt; option). The default value is the empty list. The directory of the source file and the current directory are automatically appended to the list.</source>
          <target state="translated">포함 파일을 검색하기 위해 Erlang 전 처리기 (사용되는 경우)의 디렉토리 이름 목록을 지정합니다 ( &lt;code&gt;preprocess&lt;/code&gt; 옵션 참조 ). 기본값은 빈 목록입니다. 소스 파일의 디렉토리와 현재 디렉토리가 자동으로 목록에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="50e618efb5e45e439fec74d31b0e4d5224079b3b" translate="yes" xml:space="preserve">
          <source>Specifies a list of environment variables that will extend the environment.</source>
          <target state="translated">환경을 확장 할 환경 변수 목록을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0587c7f9327b49d3f0f08383c29baaa0dcc72c0e" translate="yes" xml:space="preserve">
          <source>Specifies a list of names of input modules such that calls to these &quot;safe&quot; modules may be turned into direct local calls, that do not test for code replacement. Typically, this can be done for e.g. standard library modules. If a module is &quot;safe&quot;, it is per definition also &quot;static&quot; (cf. below). The list may be empty. By default, all involved modules &lt;strong&gt;except the target module&lt;/strong&gt; are considered &quot;safe&quot;.</source>
          <target state="translated">이러한 &quot;안전한&quot;모듈에 대한 호출이 직접 로컬 호출로 전환되어 코드 교체를 테스트하지 않는 입력 모듈 이름 목록을 지정합니다. 일반적으로 이는 표준 라이브러리 모듈과 같은 경우에 수행 할 수 있습니다. 모듈이 &quot;안전한&quot;경우 정의에 따라 &quot;정적&quot;입니다 (아래 참조). 목록이 비어있을 수 있습니다. 기본적으로 &lt;strong&gt;대상 모듈을 제외한&lt;/strong&gt; 모든 관련 &lt;strong&gt;모듈&lt;/strong&gt; 은 &quot;안전한&quot;것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="0db911337b6925833457c9d743d617bb68c80e07" translate="yes" xml:space="preserve">
          <source>Specifies a list of names of input modules which will be assumed never to be replaced (reloaded) unless the target module is also first replaced. The list may be empty. The target module itself (which may also be one of the input modules) is always regarded as &quot;static&quot;, regardless of the value of this option. By default, all involved modules are assumed to be static.</source>
          <target state="translated">대상 모듈도 먼저 교체하지 않는 한 교체 (재로드)하지 않을 것으로 간주되는 입력 모듈 이름 목록을 지정합니다. 목록이 비어있을 수 있습니다. 대상 모듈 자체 (입력 모듈 중 하나 일 수도 있음)는이 옵션의 값에 관계없이 항상 &quot;정적&quot;으로 간주됩니다. 기본적으로 모든 관련 모듈은 정적 인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b000ffa4bdf3664abecd4e83f559cdc89da1c823" translate="yes" xml:space="preserve">
          <source>Specifies a list of names of input modules whose interfaces should be exported by the output module. A stub descriptor is generated for each specified module, unless its name is &lt;code&gt;Name&lt;/code&gt;. If no modules are specified, then if &lt;code&gt;Name&lt;/code&gt; is also the name of an input module, that module will be exported; otherwise the first listed module in &lt;code&gt;Sources&lt;/code&gt; will be exported. The default value is the empty list.</source>
          <target state="translated">출력 모듈에서 인터페이스를 내 보내야하는 입력 모듈 이름 목록을 지정합니다. 이름이 &lt;code&gt;Name&lt;/code&gt; 이 아닌 한 지정된 각 모듈에 대해 스텁 설명자가 생성됩니다 . 모듈이 지정되지 않은 경우 &lt;code&gt;Name&lt;/code&gt; 도 입력 모듈의 이름 인 경우 해당 모듈이 내보내집니다. 그렇지 않으면 &lt;code&gt;Sources&lt;/code&gt; 에서 첫 번째로 나열된 모듈 이 내보내집니다. 기본값은 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a02f9858ed6c9d2732f8c874a4263901db1be213" translate="yes" xml:space="preserve">
          <source>Specifies a list of pairs of module names, representing a mapping from old names to new. &lt;strong&gt;The set of old names may not include any of the names of the input modules.&lt;/strong&gt; All calls to the listed old modules will be rewritten to refer to the corresponding new modules. &lt;strong&gt;The redirected calls will not be further processed, even if the new destination is in one of the input modules.&lt;/strong&gt; This option mainly exists to support module renaming; cf. &lt;code&gt;rename/3&lt;/code&gt;. The default value is the empty list.</source>
          <target state="translated">이전 이름에서 새 이름으로의 맵핑을 나타내는 모듈 이름 쌍의 목록을 지정합니다. &lt;strong&gt;이전 이름 ​​세트에는 입력 모듈 이름이 포함되지 않을 수 있습니다.&lt;/strong&gt; 나열된 기존 모듈에 대한 모든 호출은 해당하는 새 모듈을 참조하도록 다시 작성됩니다. &lt;strong&gt;새 대상이 입력 모듈 중 하나에 있더라도 리디렉션 된 통화는 더 이상 처리되지 않습니다.&lt;/strong&gt; 이 옵션은 주로 모듈 이름 변경을 지원하기 위해 존재합니다. cf. &lt;code&gt;rename/3&lt;/code&gt; . 기본값은 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="36ecf352bd9307ae219dddc3a8afe793a6662482" translate="yes" xml:space="preserve">
          <source>Specifies a list of rules for associating object files with source files, to be passed to the function &lt;code&gt;filelib:find_source/2&lt;/code&gt;. This can be used to change the way Igor looks for source files. If this option is not specified, the default system rules are used. The first occurrence of this option completely overrides any later in the option list.</source>
          <target state="translated">함수 &lt;code&gt;filelib:find_source/2&lt;/code&gt; 에 전달 될 오브젝트 파일을 소스 파일과 연관시키기위한 규칙 목록을 지정합니다 . Igor가 소스 파일을 찾는 방법을 변경하는 데 사용할 수 있습니다. 이 옵션을 지정하지 않으면 기본 시스템 규칙이 사용됩니다. 이 옵션의 첫 번째 항목은 나중에 옵션 목록의 모든 항목을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="2bd12245ab5a3976c6e07486b9cb0019038bc563" translate="yes" xml:space="preserve">
          <source>Specifies a longest time to wait for a send operation to be accepted by the underlying TCP stack. When the limit is exceeded, the send operation returns &lt;code&gt;{error,timeout}&lt;/code&gt;. How much of a packet that got sent is unknown; the socket is therefore to be closed whenever a time-out has occurred (see &lt;code&gt;send_timeout_close&lt;/code&gt; below). Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">기본 TCP 스택에서 보내기 작업이 수락 될 때까지 기다리는 가장 긴 시간을 지정합니다. 한계가 초과되면 전송 조작은 &lt;code&gt;{error,timeout}&lt;/code&gt; 을 리턴합니다 . 전송 된 패킷의 양을 알 수 없습니다. 따라서 타임 아웃이 발생할 때마다 소켓이 닫힙니다 (아래 &lt;code&gt;send_timeout_close&lt;/code&gt; 참조). 기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="314f1878cccf35ceb86706079d5b9775e575e39c" translate="yes" xml:space="preserve">
          <source>Specifies a protocol for Erlang distribution:</source>
          <target state="translated">Erlang 배포를위한 프로토콜을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="643b41e2bc85174b6811dc19db5ad4235f91e26f" translate="yes" xml:space="preserve">
          <source>Specifies a textual comment describing the service. This comment shows up as the service description in the Windows service manager.</source>
          <target state="translated">서비스를 설명하는 텍스트 설명을 지정합니다. 이 주석은 Windows 서비스 관리자에서 서비스 설명으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a67a5ea5fdcea5f89208fb21f5b1fc4f4019256f" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;strong&gt;extra&lt;/strong&gt; environment for the emulator. The environment variables specified here are added to the system-wide environment block that is normally present when a service starts up. Variables present in both the system-wide environment and in the service environment specification will be set to the value specified in the service.</source>
          <target state="translated">에뮬레이터 의 &lt;strong&gt;추가&lt;/strong&gt; 환경을 지정합니다 . 여기에 지정된 환경 변수는 일반적으로 서비스가 시작될 때 존재하는 시스템 전체 환경 블록에 추가됩니다. 시스템 전체 환경과 서비스 환경 사양에 모두있는 변수는 서비스에 지정된 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="13b946ab1dd1ffa32bcf74841cac44319e24350c" translate="yes" xml:space="preserve">
          <source>Specifies an alternative to &lt;code&gt;rsh&lt;/code&gt; for starting a slave node on a remote host; see &lt;code&gt;slave(3)&lt;/code&gt;.</source>
          <target state="translated">원격 호스트에서 슬레이브 노드를 시작하기위한 &lt;code&gt;rsh&lt;/code&gt; 의 대안을 지정합니다 . &lt;code&gt;slave(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7292d6780a37ceec29bd7462c1aae08533215aa1" translate="yes" xml:space="preserve">
          <source>Specifies an alternative to &lt;code&gt;ssh&lt;/code&gt; for starting a slave node on a remote host; see &lt;code&gt;slave(3)&lt;/code&gt;.</source>
          <target state="translated">원격 호스트에서 슬레이브 노드를 시작 하기 위해 &lt;code&gt;ssh&lt;/code&gt; 에 대한 대안을 지정합니다 . &lt;code&gt;slave(3)&lt;/code&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="b0d35d144a129393da88306e0a6c4fcfc31be7e2" translate="yes" xml:space="preserve">
          <source>Specifies an output format. Whether the output is returned or written to file depends on whether or not option &lt;code&gt;return&lt;/code&gt; is specified. When written to file, the resulting file(s) will have extensions &lt;code&gt;.D&lt;/code&gt;, &lt;code&gt;.F&lt;/code&gt;, &lt;code&gt;.erl&lt;/code&gt;, and &lt;code&gt;.hrl&lt;/code&gt; respectively, basenames defaulting to &lt;code&gt;dictionary&lt;/code&gt; if the input dictionary is literal and does not specify &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#name&quot;&gt;@name&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;. When returned, results are in the order of the corresponding format options. Format options default to &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;hrl&lt;/code&gt; (in this order) if unspecified.</source>
          <target state="translated">출력 형식을 지정합니다. 출력이 파일에 &lt;code&gt;return&lt;/code&gt; 되는지 또는 파일에 기록되는지 는 옵션 리턴의 지정 여부에 따라 다릅니다 . 파일에 쓸 때 결과 파일의 확장자는 각각 &lt;code&gt;.D&lt;/code&gt; , &lt;code&gt;.F&lt;/code&gt; , &lt;code&gt;.erl&lt;/code&gt; 및 &lt;code&gt;.hrl&lt;/code&gt; 이며, 입력 사전이 리터럴이고 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#name&quot;&gt;@name&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 을 지정하지 않으면 기본 이름은 기본으로 &lt;code&gt;dictionary&lt;/code&gt; 기본 설정됩니다 . 반환되면 결과는 해당 형식 옵션의 순서입니다. 지정되지 않은 경우 형식 옵션의 기본값은 &lt;code&gt;erl&lt;/code&gt; 및 &lt;code&gt;hrl&lt;/code&gt; (순서대로)입니다.</target>
        </trans-unit>
        <trans-unit id="6e8e542f3ab3386ab7c7c837a33999f0cb6c6ce5" translate="yes" xml:space="preserve">
          <source>Specifies another format string to be used in the &lt;code&gt;strftime&lt;/code&gt; C library call. That is, specifying this to &lt;code&gt;&quot;%e-%b-%Y, %T %Z&quot;&lt;/code&gt; gives log messages with time stamps like &lt;code&gt;15-May-2003, 10:23:04 MET&lt;/code&gt;. For more information, see the documentation for the C library function &lt;code&gt;strftime&lt;/code&gt;. Defaults to &lt;code&gt;&quot;%a %b %e %T %Z %Y&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strftime&lt;/code&gt; C 라이브러리 호출에 사용될 다른 형식 문자열을 지정합니다 . 즉, &lt;code&gt;&quot;%e-%b-%Y, %T %Z&quot;&lt;/code&gt; 하면 &lt;code&gt;15-May-2003, 10:23:04 MET&lt;/code&gt; 와 같은 타임 스탬프가있는 로그 메시지가 제공 됩니다. 자세한 정보는 C 라이브러리 함수 &lt;code&gt;strftime&lt;/code&gt; 문서를 참조하십시오 . 기본값은 &lt;code&gt;&quot;%a %b %e %T %Z %Y&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ed319463db02b0d588dac27abf8ff7da396e22ad" translate="yes" xml:space="preserve">
          <source>Specifies any data related to the test case. This data can be retrieved at any time using the &lt;code&gt;&lt;a href=&quot;ct#userdata-3&quot;&gt;ct:userdata/3&lt;/a&gt;&lt;/code&gt; utility function.</source>
          <target state="translated">테스트 케이스와 관련된 데이터를 지정합니다. 이 데이터는 &lt;code&gt;&lt;a href=&quot;ct#userdata-3&quot;&gt;ct:userdata/3&lt;/a&gt;&lt;/code&gt; 유틸리티 기능을 사용하여 언제든지 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6fdfea2103ae0ef022a18ee840851b481113ab20" translate="yes" xml:space="preserve">
          <source>Specifies configuration variables required by the test case. If the required configuration variables are not found in any of the test system configuration files, the test case is skipped.</source>
          <target state="translated">테스트 케이스에 필요한 구성 변수를 지정합니다. 테스트 시스템 구성 파일에서 필수 구성 변수를 찾지 못하면 테스트 사례를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="496b6b9f1a04ec6fa47e8880570cc1c9d273aa58" translate="yes" xml:space="preserve">
          <source>Specifies directory &lt;code&gt;Dir&lt;/code&gt; where all generated files are to be placed. If this option is omitted, the files are placed in the current directory.</source>
          <target state="translated">생성 된 모든 파일이 위치 할 디렉토리 &lt;code&gt;Dir&lt;/code&gt; 을 지정 합니다. 이 옵션을 생략하면 파일이 현재 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="756b0e315646422f58d559cd8b900ee5bb7d2208" translate="yes" xml:space="preserve">
          <source>Specifies how characters are input or output from or to the I/O device, implying that, for example, a terminal is set to handle Unicode input and output or a file is set to handle UTF-8 data encoding.</source>
          <target state="translated">예를 들어, 터미널이 유니 코드 입력 및 출력을 처리하도록 설정되거나 파일이 UTF-8 데이터 인코딩을 처리하도록 설정되어 있음을 의미하는 문자가 I / O 장치에서 입출력되는 방법을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fb1b6a1ebeeca4db9d3ed67224fd81d5599255b9" translate="yes" xml:space="preserve">
          <source>Specifies how long time (in milliseconds) the &lt;code&gt;init&lt;/code&gt; process is allowed to spend shutting down the system. If &lt;code&gt;Time&lt;/code&gt; milliseconds have elapsed, all processes still existing are killed. Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 프로세스가 시스템 종료 에 소요되는 시간 (밀리 초)을 지정합니다 . 경우 &lt;code&gt;Time&lt;/code&gt; (밀리 초)이 경과 한 여전히 기존의 모든 프로세스가 살해된다. 기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e550ff7d24fc305dd6d8d061ea2e492652765d42" translate="yes" xml:space="preserve">
          <source>Specifies how much memory is to be allocated for the internal compression state: &lt;code&gt;MemLevel&lt;/code&gt;=1 uses minimum memory but is slow and reduces compression ratio; &lt;code&gt;MemLevel&lt;/code&gt;=9 uses maximum memory for optimal speed. Defaults to 8.</source>
          <target state="translated">내부 압축 상태에 할당 할 메모리 양을 지정합니다. &lt;code&gt;MemLevel&lt;/code&gt; = 1은 최소 메모리를 사용하지만 속도가 느리고 압축 비율을 줄입니다. &lt;code&gt;MemLevel&lt;/code&gt; = 9는 최적의 속도를 위해 최대 메모리를 사용합니다. 기본값은 8입니다.</target>
        </trans-unit>
        <trans-unit id="57c541278f8dbc9de3fbe87344bf887f36543447" translate="yes" xml:space="preserve">
          <source>Specifies how the parts of the original string are presented in the result list. Valid types:</source>
          <target state="translated">원래 문자열의 일부가 결과 목록에 표시되는 방법을 지정합니다. 유효한 유형 :</target>
        </trans-unit>
        <trans-unit id="df4c55d66a278e2a151d09c02b1175eb335a021d" translate="yes" xml:space="preserve">
          <source>Specifies if &lt;code&gt;os_sup&lt;/code&gt; is to be started or not.</source>
          <target state="translated">&lt;code&gt;os_sup&lt;/code&gt; 을 시작할지 여부를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="dfe108b428db082101b7903eec41f3818ecf7325" translate="yes" xml:space="preserve">
          <source>Specifies if and how the audit trail log shall be repaired when opened. Unless this parameter has the value &lt;code&gt;snmp_repair&lt;/code&gt; it is sent to &lt;code&gt;disk_log&lt;/code&gt;. If, on the other hand, the value is &lt;code&gt;snmp_repair&lt;/code&gt;, snmp attempts to handle certain faults on its own. And even if it cannot repair the file, it does not truncate it directly, but instead &lt;strong&gt;moves it aside&lt;/strong&gt; for later off-line analysis.</source>
          <target state="translated">감사 내역 로그를 열 때 복구 할 것인지 여부와 방법을 지정합니다. 이 파라미터 값 않는 &lt;code&gt;snmp_repair&lt;/code&gt; 을 그것이 전송된다 &lt;code&gt;disk_log&lt;/code&gt; . 반면에 값이 &lt;code&gt;snmp_repair&lt;/code&gt; 인 경우 snmp는 특정 결함을 자체적으로 처리하려고 시도합니다. 파일을 복구 할 수 없더라도 파일을 직접 자르지 않고 나중에 오프라인 분석을 위해 &lt;strong&gt;옆&lt;/strong&gt; 으로 &lt;strong&gt;옮깁니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f3658421417f6f7023d4c932a6bc3bee6c32fab9" translate="yes" xml:space="preserve">
          <source>Specifies if logging is to be ended if &lt;code&gt;rb&lt;/code&gt; encounters an unprintable report. (You can get a report with an incorrect form if function &lt;code&gt;error_logger&lt;/code&gt;, &lt;code&gt;error_msg&lt;/code&gt;, or &lt;code&gt;info_msg&lt;/code&gt; has been called with an invalid format string)</source>
          <target state="translated">&lt;code&gt;rb&lt;/code&gt; 에 인쇄 할 수없는 보고서가있는 경우 로깅을 종료할지 여부를 지정합니다 . ( &lt;code&gt;error_logger&lt;/code&gt; , &lt;code&gt;error_msg&lt;/code&gt; 또는 &lt;code&gt;info_msg&lt;/code&gt; 함수 가 잘못된 형식 문자열로 호출 된 경우 잘못된 형식 의 보고서를 얻을 수 있습니다 )</target>
        </trans-unit>
        <trans-unit id="765304e2a33975f373a966a3122f13f17732444d" translate="yes" xml:space="preserve">
          <source>Specifies if messages will be sent to &lt;code&gt;error_logger&lt;/code&gt; on recoverable errors with the log files. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">로그 파일과 함께 복구 가능한 오류에 대해 메시지가 &lt;code&gt;error_logger&lt;/code&gt; 로 전송되는지 여부를 지정 합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8395a04227320893b9d3333f53a3d612f76dffc4" translate="yes" xml:space="preserve">
          <source>Specifies if the analysis should be sorted according to the ACC column, which is the default, or the OWN column. See &lt;code&gt;&lt;a href=&quot;#analysis&quot;&gt;Analysis Format&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">ACC 열 (기본값) 또는 OWN 열에 따라 분석을 정렬해야하는지 여부를 지정합니다. 아래의 &lt;code&gt;&lt;a href=&quot;#analysis&quot;&gt;Analysis Format&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="33cb184ada96d2b9e14fcd7f20b8ab8cb290a1c1" translate="yes" xml:space="preserve">
          <source>Specifies if the audit trail log entries will be (sequence) numbered or not. The range of the sequence numbers are according to RFC 5424, i.e. 1 through 2147483647.</source>
          <target state="translated">감사 추적 로그 항목의 번호가 지정 될지 여부를 지정합니다. 시퀀스 번호의 범위는 RFC 5424, 즉 1-2147483647에 따릅니다.</target>
        </trans-unit>
        <trans-unit id="fcb0ad30ffe597be9ec1747276ec75d711dad8ed" translate="yes" xml:space="preserve">
          <source>Specifies if the client is to try to reuse sessions when possible.</source>
          <target state="translated">클라이언트가 가능할 때 세션을 재사용하려고하는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cb1659dc4dae00743b1c42bc838d72145e161054" translate="yes" xml:space="preserve">
          <source>Specifies if the log is to be opened in read-only or read-write mode. Defaults to &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">로그를 읽기 전용 또는 읽기 / 쓰기 모드로 열지 여부를 지정합니다. 기본값은 &lt;code&gt;read_write&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d2cbddf85ffbe382ec390161b6364754eef56872" translate="yes" xml:space="preserve">
          <source>Specifies if the server is to agree to reuse sessions when requested by the clients. See also option &lt;code&gt;reuse_session&lt;/code&gt;.</source>
          <target state="translated">클라이언트가 요청할 때 서버가 세션 재사용에 동의하는지 여부를 지정합니다. &lt;code&gt;reuse_session&lt;/code&gt; 옵션도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9ce6ecaf4bf285d5669a8d76ba655b048146b32" translate="yes" xml:space="preserve">
          <source>Specifies if the slave node is to be killed if a time-out occurs during initialization or startup. Defaults to &lt;code&gt;true&lt;/code&gt;. Notice that the node can also be still alive it the boot time-out occurred, but it is not killed in this case.</source>
          <target state="translated">초기화 또는 시작 중에 시간 초과가 발생하는 경우 슬레이브 노드를 강제 종료할지 여부를 지정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 부팅 시간 초과가 발생한 노드는 여전히 활성 상태 일 수 있지만이 경우에는 종료되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="05e7c736cb0375dfd7e2e85ef1ae816625c278db" translate="yes" xml:space="preserve">
          <source>Specifies if the slave node is to be stopped if the master node stops. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">마스터 노드가 중지되면 슬레이브 노드를 중지할지 여부를 지정합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6863f48147c29f941903c73fdc940937446b00a9" translate="yes" xml:space="preserve">
          <source>Specifies if to reject renegotiation attempt that does not live up to &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt;. By default &lt;code&gt;secure_renegotiate&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, that is, secure renegotiation is enforced. If set to &lt;code&gt;false&lt;/code&gt; secure renegotiation will still be used if possible, but it falls back to insecure renegotiation if the peer does not support &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; 에 해당하지 않는 재협상 시도를 거부할지 여부를 지정합니다 . 기본적으로 &lt;code&gt;secure_renegotiate&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 로 설정 됩니다. 즉, 보안 재협상이 적용됩니다. &lt;code&gt;false&lt;/code&gt; 로 설정 하면 가능하면 보안 재협상이 계속 사용되지만 피어가 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; 을 지원하지 않으면 안전하지 않은 재협상으로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="924a9c0514e91ad663f8ee671a9bd00c58581242" translate="yes" xml:space="preserve">
          <source>Specifies include directories (described earlier).</source>
          <target state="translated">포함 디렉토리를 지정합니다 (앞서 설명).</target>
        </trans-unit>
        <trans-unit id="e4832d43452327b219c706dc50084a728937cbd1" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match all the Unicode newline characters (including CRLF, and so on, the default).</source>
          <target state="translated">\ R이 모든 유니 코드 개행 문자 (CRLF 등을 포함하여 기본값)와 일치하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="19c79d8a677d7198ac041cefa87536c05e47b241" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match all the Unicode newline characters (including CRLF, and so on, the default). (Overrides the compilation option.)</source>
          <target state="translated">\ R이 모든 유니 코드 개행 문자 (CRLF 등을 포함하여 기본값)와 일치하도록 지정합니다. 컴파일 옵션을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="497cbddcc844eb037f2eeb5c9e71b539696cfec7" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match only the CR LF, or CRLF sequences, not the Unicode-specific newline characters. (Overrides the compilation option.)</source>
          <target state="translated">\ R이 유니 코드 특정 줄 바꿈 문자가 아닌 CR LF 또는 CRLF 시퀀스 만 일치하도록 지정합니다. 컴파일 옵션을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="e99bc9c0572d58f55185c99879f560312e3f0dcd" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match only the CR, LF, or CRLF sequences, not the Unicode-specific newline characters.</source>
          <target state="translated">\ R이 유니 코드 특정 줄 바꿈 문자가 아닌 CR, LF 또는 CRLF 시퀀스 만 일치하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="95a2505a1ec4fa886afebcc07b0d9a91d416f9b6" translate="yes" xml:space="preserve">
          <source>Specifies that Unicode character properties are to be used when resolving \B, \b, \D, \d, \S, \s, \W and \w. Without this flag, only ISO Latin-1 properties are used. Using Unicode properties hurts performance, but is semantically correct when working with Unicode characters beyond the ISO Latin-1 range.</source>
          <target state="translated">\ B, \ b, \ D, \ d, \ S, \ s, \ W 및 \ w를 해석 할 때 유니 코드 문자 특성이 사용되도록 지정합니다. 이 플래그가 없으면 ISO Latin-1 속성 만 사용됩니다. 유니 코드 속성을 사용하면 성능이 저하되지만 ISO Latin-1 범위를 벗어난 유니 코드 문자로 작업 할 때는 의미 적으로 정확합니다.</target>
        </trans-unit>
        <trans-unit id="0bbf9d2b815d82e53e9695faeeb0b36d7ee91451" translate="yes" xml:space="preserve">
          <source>Specifies that a tracer module is to be called instead of sending a trace message. The tracer module can then ignore or change the trace message. For more details on how to write a tracer module, see &lt;code&gt;erl_tracer(3)&lt;/code&gt;.</source>
          <target state="translated">추적 메시지를 보내는 대신 추적 프로그램 모듈을 호출하도록 지정합니다. 추적 프로그램 모듈은 추적 메시지를 무시하거나 변경할 수 있습니다. 추적 프로그램 모듈 작성 방법에 대한 자세한 내용은 &lt;code&gt;erl_tracer(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6b6710bb6e3aa6ebbf29da6da58e9263bde44061" translate="yes" xml:space="preserve">
          <source>Specifies that empty parts at the end of the result list are to be disregarded. The same as specifying &lt;code&gt;{parts,0}&lt;/code&gt;. This corresponds to the default behavior of the &lt;code&gt;split&lt;/code&gt; built-in function in Perl.</source>
          <target state="translated">결과 목록의 끝에있는 빈 부분을 무시하도록 지정합니다. &lt;code&gt;{parts,0}&lt;/code&gt; 지정과 동일 합니다. 이는 Perl의 내장 내장 &lt;code&gt;split&lt;/code&gt; 기능 의 기본 동작에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="824d1a2ca43b36b67d5479813a6dd9d8b68c0f0c" translate="yes" xml:space="preserve">
          <source>Specifies that output from the Erlang shell is to be sent to a &quot;debug log&quot;. The log file is named &amp;lt;servicename&amp;gt;&lt;code&gt;.debug&lt;/code&gt; or &amp;lt;servicename&amp;gt;&lt;code&gt;.debug.&lt;/code&gt;&amp;lt;N&amp;gt;, where &amp;lt;N&amp;gt; is an integer from 1 through 99. The log file is placed in the working directory of the service (as specified in &lt;code&gt;WorkDir&lt;/code&gt;).</source>
          <target state="translated">Erlang 쉘의 출력을 &quot;디버그 로그&quot;로 보내도록 지정합니다. 로그 파일 이름은 &amp;lt;servicename&amp;gt; &lt;code&gt;.debug&lt;/code&gt; 또는 &amp;lt;servicename&amp;gt; &lt;code&gt;.debug.&lt;/code&gt; &amp;lt;N&amp;gt;, 여기서 &amp;lt;N&amp;gt;은 1-99의 정수입니다. 로그 파일은 서비스의 작업 디렉토리 ( &lt;code&gt;WorkDir&lt;/code&gt; 에 지정된대로)에 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="58b3a9b24285b73688af255d7015013063348a3b" translate="yes" xml:space="preserve">
          <source>Specifies that the (*UTF) and/or (*UTF8) &quot;start-of-pattern items&quot; are forbidden. This flag cannot be combined with option &lt;code&gt;unicode&lt;/code&gt;. Useful if ISO Latin-1 patterns from an external source are to be compiled.</source>
          <target state="translated">(* UTF) 및 / 또는 (* UTF8) &quot;패턴 시작 항목&quot;이 금지되도록 지정합니다. 이 플래그는 옵션 &lt;code&gt;unicode&lt;/code&gt; 와 함께 사용할 수 없습니다 . 외부 소스의 ISO Latin-1 패턴을 컴파일 할 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9700fc678df1f11d54375309f05dbcc5a3a5dc6e" translate="yes" xml:space="preserve">
          <source>Specifies that the end of the subject string is not the end of a line, so the dollar metacharacter is not to match it nor (except in multiline mode) a newline immediately before it. Setting this without &lt;code&gt;multiline&lt;/code&gt; (at compile time) causes dollar never to match. This option affects only the behavior of the dollar metacharacter. It does not affect \Z or \z.</source>
          <target state="translated">주제 문자열의 끝이 행의 끝이 아니므로 달러 메타 문자가 바로 앞에있는 개행과 일치하지 않아야합니다 (멀티 라인 모드 제외). 없이이 설정 &lt;code&gt;multiline&lt;/code&gt; (컴파일시에하는) 일치하지 않겠다고 달러가 발생합니다. 이 옵션은 달러 메타 문자의 동작에만 영향을줍니다. \ Z 또는 \ z에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4d943073641a7e0bab24f416a2974ddc8d8857d" translate="yes" xml:space="preserve">
          <source>Specifies that the first character of the subject string is not the beginning of a line, so the circumflex metacharacter is not to match before it. Setting this without &lt;code&gt;multiline&lt;/code&gt; (at compile time) causes circumflex never to match. This option only affects the behavior of the circumflex metacharacter. It does not affect \A.</source>
          <target state="translated">제목 문자열의 첫 번째 문자가 줄의 시작이 아니므로 circumflex 메타 문자가 그 앞에 일치하지 않도록 지정합니다. 없이이 설정 &lt;code&gt;multiline&lt;/code&gt; (컴파일시에하는) 일치하지 않겠다고 곡절됩니다. 이 옵션은 곡절 메타 문자의 동작에만 영향을줍니다. \ A에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="301e7c4e17cd1fd9770abbc7a8ef562e86042517" translate="yes" xml:space="preserve">
          <source>Specifies that trace to process or port shall be done instead of trace to file. This option is only allowed with the &lt;code&gt;start&lt;/code&gt; option, but not with the &lt;code&gt;{file, Filename}&lt;/code&gt; option.</source>
          <target state="translated">파일 추적 대신 처리 추적 또는 포트 추적을 수행하도록 지정합니다. 이 옵션은 &lt;code&gt;start&lt;/code&gt; 옵션 에서만 허용되며 &lt;code&gt;{file, Filename}&lt;/code&gt; 옵션에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dd4acdf541509e49deec7e92fd0e9d395ece9f1d" translate="yes" xml:space="preserve">
          <source>Specifies the IP addresses for the hosts on which Erlang boot servers are running, see &lt;code&gt; erl_boot_server(3)&lt;/code&gt;. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present.</source>
          <target state="translated">Erlang 부트 서버가 실행중인 호스트의 IP 주소를 지정합니다 . &lt;code&gt; erl_boot_server(3)&lt;/code&gt; 참조하십시오 . 플래그 &lt;code&gt;-loader inet&lt;/code&gt; 이있는 경우이 플래그는 필수 입니다.</target>
        </trans-unit>
        <trans-unit id="1b044d59af8123aeee08f75d87b47c142ec0b445" translate="yes" xml:space="preserve">
          <source>Specifies the IP addresses for the hosts on which Erlang boot servers are running, see &lt;code&gt;erl_boot_server(3)&lt;/code&gt;. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present.</source>
          <target state="translated">Erlang 부트 서버가 실행중인 호스트의 IP 주소를 지정합니다 &lt;code&gt;erl_boot_server(3)&lt;/code&gt; 참조 ) . 플래그 &lt;code&gt;-loader inet&lt;/code&gt; 가있는 경우이 플래그는 필수 입니다.</target>
        </trans-unit>
        <trans-unit id="d655bd05e7e251cd06d594beb4f1f79b9f6de020" translate="yes" xml:space="preserve">
          <source>Specifies the Windows-internal service name (not the display name, which is the one &lt;code&gt;erlsrv&lt;/code&gt; uses to identify the service).</source>
          <target state="translated">Windows 내부 서비스 이름 ( &lt;code&gt;erlsrv&lt;/code&gt; 가 서비스를 식별하기 위해 사용 하는 표시 이름이 아님) 을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bf01e6a0d4d05e55b0e780ecb5e8fa79971096e0" translate="yes" xml:space="preserve">
          <source>Specifies the application callback module and a start argument, see &lt;code&gt;&lt;a href=&quot;application&quot;&gt;application(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">애플리케이션 콜백 모듈과 시작 인수를 지정합니다 &lt;code&gt;&lt;a href=&quot;application&quot;&gt;application(3)&lt;/a&gt;&lt;/code&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="49dfe5548a8c0579d075b6c6686487463f9cd8f4" translate="yes" xml:space="preserve">
          <source>Specifies the channel process to handle an SFTP subsystem.</source>
          <target state="translated">SFTP 서브 시스템을 처리 할 채널 프로세스를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6ff6aaeb83d014daae561e0fc64f8e825faae1c0" translate="yes" xml:space="preserve">
          <source>Specifies the configuration for &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt;, except the primary log level, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt;, and the compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt; logger_sasl_compatible&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정의 구성 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 로 지정되는 기본 로그 레벨을 제외하고, &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt; , 그리고와의 호환성 &lt;code&gt;SASL Error Logging&lt;/code&gt; 로 지정, &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt; logger_sasl_compatible&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48c02cec66812ec7852ece4c0bc62b88b2e8921c" translate="yes" xml:space="preserve">
          <source>Specifies the configuration for &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt;, except the primary log level, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt;, and the compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt;logger_sasl_compatible&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정의 구성 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 로 지정되는 기본 로그 레벨을 제외하고, &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt; , 그리고와의 호환성 &lt;code&gt;SASL Error Logging&lt;/code&gt; 로 지정, &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt;logger_sasl_compatible&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f4e920703dbc3bfa71ee2c1411346b4e2817a4" translate="yes" xml:space="preserve">
          <source>Specifies the cookie of the Erlang runtime system. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present.</source>
          <target state="translated">Erlang 런타임 시스템의 쿠키를 지정합니다. 플래그 &lt;code&gt;-loader inet&lt;/code&gt; 가있는 경우이 플래그는 필수 입니다.</target>
        </trans-unit>
        <trans-unit id="45b46b787a31fffabed5eed01450820e532b6f37" translate="yes" xml:space="preserve">
          <source>Specifies the destination for the analysis. If this option is not given or it is &lt;code&gt;dest&lt;/code&gt;, the destination will be the caller's group leader, otherwise the destination &lt;code&gt;Dest&lt;/code&gt; is either the &lt;code&gt;pid()&lt;/code&gt; of an I/O device or a filename. And, finally, if the filename is &lt;code&gt;[]&lt;/code&gt; - &lt;code&gt;&quot;fprof.analysis&quot;&lt;/code&gt; is used instead.</source>
          <target state="translated">분석 대상을 지정합니다. 이 옵션이 제공되지 않거나 &lt;code&gt;dest&lt;/code&gt; 인 경우 대상은 호출자의 그룹 리더가되고, 그렇지 않으면 대상 &lt;code&gt;Dest&lt;/code&gt; 는 I / O 장치 의 &lt;code&gt;pid()&lt;/code&gt; 또는 파일 이름입니다. 그리고 마지막으로, 파일 이름 인 경우 &lt;code&gt;[]&lt;/code&gt; - &lt;code&gt;&quot;fprof.analysis&quot;&lt;/code&gt; 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="952057c2e8687b3566ab54479525a8c7a6b88329" translate="yes" xml:space="preserve">
          <source>Specifies the destination for the trace text dump. If this option is not given, no dump is generated, if it is &lt;code&gt;dump&lt;/code&gt; the destination will be the caller's group leader, otherwise the destination &lt;code&gt;Dump&lt;/code&gt; is either the pid of an I/O device or a filename. And, finally, if the filename is &lt;code&gt;[]&lt;/code&gt; - &lt;code&gt;&quot;fprof.dump&quot;&lt;/code&gt; is used instead. This option is not allowed with the &lt;code&gt;stop&lt;/code&gt; option.</source>
          <target state="translated">추적 텍스트 덤프의 대상을 지정합니다. 이 옵션이 주어지지 않으면이 경우에는 덤프가 생성되지 않습니다 &lt;code&gt;dump&lt;/code&gt; 발신자의 그룹 리더 대상을 다른 대상, &lt;code&gt;Dump&lt;/code&gt; 하나의 I / O 장치 또는 파일 이름의 PID입니다. 그리고 마지막으로, 파일 이름 인 경우 &lt;code&gt;[]&lt;/code&gt; - &lt;code&gt;&quot;fprof.dump&quot;&lt;/code&gt; 대신 사용됩니다. 이 옵션은 &lt;code&gt;stop&lt;/code&gt; 옵션 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="39e4e09132b10b25be07956cc6decb2963d7fa7b" translate="yes" xml:space="preserve">
          <source>Specifies the destination to write the formatted text. Default destination is &lt;code&gt;standard_io&lt;/code&gt;, but a filename can also be specified.</source>
          <target state="translated">서식있는 텍스트를 쓸 대상을 지정합니다. 기본 대상은 &lt;code&gt;standard_io&lt;/code&gt; 이지만 파일 이름도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a898b76288f135e14a68d460953620429563cc7" translate="yes" xml:space="preserve">
          <source>Specifies the directory in which the CRLs can be found.</source>
          <target state="translated">CRL을 찾을 수있는 디렉토리를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2569413a393a3d307887a9afe3143d813c8f282e" translate="yes" xml:space="preserve">
          <source>Specifies the encoding of the generated file.</source>
          <target state="translated">생성 된 파일의 인코딩을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e2d994c9fb529d50e95d1c799426c3d5d1ffbe12" translate="yes" xml:space="preserve">
          <source>Specifies the encryption or decryption applied to tar files when using &lt;code&gt;&lt;a href=&quot;#open_tar-3&quot;&gt;open_tar/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#open_tar-4&quot;&gt;open_tar/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#open_tar-3&quot;&gt;open_tar/3&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#open_tar-4&quot;&gt;open_tar/4&lt;/a&gt;&lt;/code&gt; 를 사용할 때 tar 파일에 적용되는 암호화 또는 복호화를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="d529e121b4b6cce7f1e463c84058fee2efbbcaa7" translate="yes" xml:space="preserve">
          <source>Specifies the end of an &lt;code&gt;ifdef&lt;/code&gt;, an &lt;code&gt;ifndef&lt;/code&gt; directive, or the end of an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;elif&lt;/code&gt; directive.</source>
          <target state="translated">지정하는 말 &lt;code&gt;ifdef&lt;/code&gt; , &lt;code&gt;ifndef&lt;/code&gt; 가의 지시, 또는 종료 &lt;code&gt;if&lt;/code&gt; 또는 &lt;code&gt;elif&lt;/code&gt; 지시어.</target>
        </trans-unit>
        <trans-unit id="0ded5fdd324009ea93d0f4014740ca8247c88277" translate="yes" xml:space="preserve">
          <source>Specifies the file name suffix to be used when a backup file is created; the default value is &lt;code&gt;&quot;.bak&quot;&lt;/code&gt; (cf. the &lt;code&gt;backups&lt;/code&gt; option).</source>
          <target state="translated">백업 파일 작성시 사용할 파일 이름 접미 부를 지정합니다. 기본값은 &lt;code&gt;&quot;.bak&quot;&lt;/code&gt; 입니다 ( &lt;code&gt;backups&lt;/code&gt; 옵션 참조 ).</target>
        </trans-unit>
        <trans-unit id="a42a69056256f3b36155d0001e5a724fc33c5b60" translate="yes" xml:space="preserve">
          <source>Specifies the file name suffix to be used when a backup file is created; the default value is &lt;code&gt;&quot;.bak&quot;&lt;/code&gt;.</source>
          <target state="translated">백업 파일 작성시 사용할 파일 이름 접미 부를 지정합니다. 기본값은 &lt;code&gt;&quot;.bak&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9e8a95521317583e3190ac9fef113c569b2fb1c1" translate="yes" xml:space="preserve">
          <source>Specifies the filename of the trace. If the option &lt;code&gt;file&lt;/code&gt; is given, or none of these options are given, the file &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; is used. This option is only allowed with the &lt;code&gt;start&lt;/code&gt; option, but not with the &lt;code&gt;{tracer, Tracer}&lt;/code&gt; option.</source>
          <target state="translated">추적 파일 이름을 지정합니다. 옵션 &lt;code&gt;file&lt;/code&gt; 이 제공되거나 이러한 옵션이 제공되지 &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; 파일 이 사용됩니다. 이 옵션은 &lt;code&gt;start&lt;/code&gt; 옵션 에서만 허용 되지만 &lt;code&gt;{tracer, Tracer}&lt;/code&gt; 옵션에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="65b1fccea2216ad3473b2d58aed2d9e2c5006d28" translate="yes" xml:space="preserve">
          <source>Specifies the filenames that are used for access files. When a request comes, every directory in the path to the requested asset are searched after files with the names specified by this parameter. If such a file is found, the file is parsed and the restrictions specified in it are applied to the request.</source>
          <target state="translated">액세스 파일에 사용되는 파일 이름을 지정합니다. 요청이 오면 요청 된 자산에 대한 경로의 모든 디렉토리는이 매개 변수로 지정된 이름을 가진 파일 다음에 검색됩니다. 이러한 파일이 발견되면 파일이 구문 분석되고 파일에 지정된 제한 사항이 요청에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5455c6185a0a3b774fbb3441f9f86c47fd4a7e3e" translate="yes" xml:space="preserve">
          <source>Specifies the format handler to use. If this option is not specified, option &lt;code&gt;handler&lt;/code&gt; that is specified when starting the tracer is used. If option &lt;code&gt;handler&lt;/code&gt; is not specified when starting the tracer either, a default handler is used, which prints each trace message as a text line.</source>
          <target state="translated">사용할 형식 핸들러를 지정합니다. 이 옵션을 지정하지 않으면 추적 프로그램을 시작할 때 지정된 옵션 &lt;code&gt;handler&lt;/code&gt; 가 사용됩니다. 추적 프로그램을 시작할 때 옵션 &lt;code&gt;handler&lt;/code&gt; 를 지정하지 않으면 기본 핸들러가 사용되어 각 추적 메시지를 텍스트 행으로 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="3a28c94a725c63da3fc84e3cd6f693ad640dd550" translate="yes" xml:space="preserve">
          <source>Specifies the handler filters.</source>
          <target state="translated">핸들러 필터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="80c9f8084de6512b7f113466e2688bc2f4a04fe7" translate="yes" xml:space="preserve">
          <source>Specifies the identity of the Erlang runtime system. If it is run as a distributed node, &lt;code&gt;Id&lt;/code&gt; must be identical to the name supplied together with flag &lt;code&gt;-sname&lt;/code&gt; or &lt;code&gt;-name&lt;/code&gt;.</source>
          <target state="translated">Erlang 런타임 시스템의 ID를 지정합니다. 분산 노드로 실행되는 경우 &lt;code&gt;Id&lt;/code&gt; 는 플래그 &lt;code&gt;-sname&lt;/code&gt; 또는 &lt;code&gt;-name&lt;/code&gt; 과 함께 제공된 이름과 같아야 합니다.</target>
        </trans-unit>
        <trans-unit id="7a85202bcef348fbe2b9d55de3145e290c4d7c05" translate="yes" xml:space="preserve">
          <source>Specifies the identity the client presents to the server. The matching secret is found by calling &lt;code&gt;user_lookup_fun&lt;/code&gt;</source>
          <target state="translated">클라이언트가 서버에 제공하는 ID를 지정합니다. &lt;code&gt;user_lookup_fun&lt;/code&gt; 을 호출하여 일치하는 비밀을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f0c95ccbe0f0ea3a453fce44769b19d8b010f5a6" translate="yes" xml:space="preserve">
          <source>Specifies the identity the client presents to the server. The matching secret is found by calling &lt;code&gt;user_lookup_fun&lt;/code&gt;.</source>
          <target state="translated">클라이언트가 서버에 제공하는 ID를 지정합니다. 일치하는 비밀은 &lt;code&gt;user_lookup_fun&lt;/code&gt; 을 호출하여 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff680f64a65cc9615ac537805e1ac6fcea622aae" translate="yes" xml:space="preserve">
          <source>Specifies the initial array size; this also implies &lt;code&gt;{fixed, true}&lt;/code&gt;. If &lt;code&gt;N&lt;/code&gt; is not a non-negative integer, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">초기 배열 크기를 지정합니다. 이것은 또한 &lt;code&gt;{fixed, true}&lt;/code&gt; 의미 합니다 . &lt;code&gt;N&lt;/code&gt; 이 음수가 아닌 정수가 아닌 경우 reason &lt;code&gt;badarg&lt;/code&gt; 로 호출이 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="37f5b1b51dd225ae5c6aa407ed3956444a85e8d5" translate="yes" xml:space="preserve">
          <source>Specifies the log destination.</source>
          <target state="translated">로그 대상을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5ed4292ec93c010643527041e454b4e7961a84b4" translate="yes" xml:space="preserve">
          <source>Specifies the log level for a TLS/DTLS connection. Alerts are logged on &lt;code&gt;notice&lt;/code&gt; level, which is the default level. The level &lt;code&gt;debug&lt;/code&gt; triggers verbose logging of TLS/DTLS protocol messages. See also &lt;code&gt;ssl(6)&lt;/code&gt;</source>
          <target state="translated">TLS / DTLS 연결에 대한 로그 수준을 지정합니다. 경고는 기본 수준 인 &lt;code&gt;notice&lt;/code&gt; 수준 으로 기록됩니다 . 레벨 &lt;code&gt;debug&lt;/code&gt; 는 TLS / DTLS 프로토콜 메시지의 자세한 로깅을 트리거합니다. &lt;code&gt;ssl(6)&lt;/code&gt; 도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="29dd5dab4832d8ebcf48692822520b370b91f6d5" translate="yes" xml:space="preserve">
          <source>Specifies the log level for the handler, that is, log events that are equally or more severe than this level, are forwarded to the handler filters for this handler.</source>
          <target state="translated">핸들러의 로그 레벨, 즉이 레벨과 같거나 더 심각한 로그 이벤트가이 핸들러의 핸들러 필터로 전달되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1c259b9830dc67a8b8fd35b98c5e2380f8f41a44" translate="yes" xml:space="preserve">
          <source>Specifies the log name. This name must be passed on as a parameter in all subsequent logging operations. A name must always be supplied.</source>
          <target state="translated">로그 이름을 지정합니다. 이 이름은 모든 후속 로깅 조작에서 매개 변수로 전달되어야합니다. 이름은 항상 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa320d11d86318d02e1157235f520312d38e3ea6" translate="yes" xml:space="preserve">
          <source>Specifies the maximum fragment length the client is prepared to accept from the server. See &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">클라이언트가 서버에서 수락 할 준비가 된 최대 조각 길이를 지정합니다. &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="c52d1a9bacb11746d7cb358ab914802339c46802" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of attempts to authenticate a user before the user is blocked out. If a user successfully authenticates while blocked, the user receives a 403 (Forbidden) response from the server. If the user makes a failed attempt while blocked, the server returns 401 (Unauthorized), for security reasons. Default is &lt;code&gt;3&lt;/code&gt;. Can be set to infinity.</source>
          <target state="translated">사용자가 차단되기 전에 사용자를 인증하려는 최대 시도 횟수를 지정합니다. 사용자가 차단 된 상태에서 성공적으로 인증되면 사용자는 서버로부터 403 (금지) 응답을받습니다. 사용자가 차단 된 상태에서 시도가 실패하면 보안상의 이유로 서버가 401 (권한 없음)을 반환합니다. 기본값은 &lt;code&gt;3&lt;/code&gt; 입니다. 무한대로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6149a14f9ab3d7f7a28bfb24f233f5b9dd59163c" translate="yes" xml:space="preserve">
          <source>Specifies the method used by &lt;code&gt;erl_prim_loader&lt;/code&gt; to load Erlang modules into the system; see &lt;code&gt;&lt;a href=&quot;erl_prim_loader&quot;&gt;erl_prim_loader(3)&lt;/a&gt;&lt;/code&gt;. Two &lt;code&gt;Loader&lt;/code&gt; methods are supported:</source>
          <target state="translated">Erlang 모듈을 시스템에로드하기 위해 &lt;code&gt;erl_prim_loader&lt;/code&gt; 가 사용하는 방법을 지정합니다 . &lt;code&gt;&lt;a href=&quot;erl_prim_loader&quot;&gt;erl_prim_loader(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 . 두 가지 &lt;code&gt;Loader&lt;/code&gt; 방법이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6b14950ff828d2b84321b57a0ff5134951e1c8" translate="yes" xml:space="preserve">
          <source>Specifies the module to use for registration and lookup of node names. Defaults to &lt;code&gt;erl_epmd&lt;/code&gt;.</source>
          <target state="translated">노드 이름의 등록 및 조회에 사용할 모듈을 지정합니다. 기본값은 &lt;code&gt;erl_epmd&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4071e650de6631118bb07c784d07e5d47f922ee2" translate="yes" xml:space="preserve">
          <source>Specifies the name of a configuration file, &lt;code&gt;Config.config&lt;/code&gt;, which is used to configure applications; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt;application(3)&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램을 구성하는 데 사용되는 구성 파일 &lt;code&gt;Config.config&lt;/code&gt; 의 이름을 지정합니다 . &lt;code&gt;app(4)&lt;/code&gt; 및 &lt;code&gt;application(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc67360fc01156f260633490cfe8c48a3e088425" translate="yes" xml:space="preserve">
          <source>Specifies the name of one or more configuration files, &lt;code&gt;Config.config&lt;/code&gt;, which is used to configure applications; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt; application(3)&lt;/code&gt;.</source>
          <target state="translated">애플리케이션을 구성하는 데 사용되는 하나 이상의 구성 파일 &lt;code&gt;Config.config&lt;/code&gt; 의 이름을 지정합니다 . &lt;code&gt;app(4)&lt;/code&gt; 및 &lt;code&gt; application(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f264fd69484af28ffae734472c59803b0ef0b2e" translate="yes" xml:space="preserve">
          <source>Specifies the name of the boot file, &lt;code&gt;File.boot&lt;/code&gt;, which is used to start the system; see &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt;. Unless &lt;code&gt;File&lt;/code&gt; contains an absolute path, the system searches for &lt;code&gt;File.boot&lt;/code&gt; in the current and &lt;code&gt;$ROOT/bin&lt;/code&gt; directories.</source>
          <target state="translated">시스템을 시작하는 데 사용되는 부팅 파일 &lt;code&gt;File.boot&lt;/code&gt; 의 이름을 지정합니다 . &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 . &lt;code&gt;File&lt;/code&gt; 에 절대 경로가 없으면 시스템 은 현재 및 &lt;code&gt;$ROOT/bin&lt;/code&gt; 디렉토리 에서 &lt;code&gt;File.boot&lt;/code&gt; 를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="1ec64a2173b07191e2d565ccd485aae746f480c5" translate="yes" xml:space="preserve">
          <source>Specifies the name of the directory in which the output file is to be written. An empty string is interpreted as the current directory. By default, the current directory is used.</source>
          <target state="translated">출력 파일을 쓸 디렉토리의 이름을 지정합니다. 빈 문자열은 현재 디렉토리로 해석됩니다. 기본적으로 현재 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="716ee0450ad53d215821f32f0ee8d0adac820253" translate="yes" xml:space="preserve">
          <source>Specifies the name of the directory in which the output file is to be written. By default, the current directory is used. If the value is an empty string, the current directory is used.</source>
          <target state="translated">출력 파일을 쓸 디렉토리의 이름을 지정합니다. 기본적으로 현재 디렉토리가 사용됩니다. 값이 빈 문자열이면 현재 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9ee4f335d4191683ebb2904dbd95995dac769beb" translate="yes" xml:space="preserve">
          <source>Specifies the name of the directory to which any generated stub module files are written. The default value is &lt;code&gt;&quot;stubs&quot;&lt;/code&gt;.</source>
          <target state="translated">생성 된 스텁 모듈 파일이 작성되는 디렉토리의 이름을 지정합니다. 기본값은 &lt;code&gt;&quot;stubs&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6dc5726d987ee0f019dd98cad0981dc7d6253a8c" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file (without suffix) to which the resulting source code is to be written. By default, this is the same as the &lt;code&gt;Name&lt;/code&gt; argument.</source>
          <target state="translated">결과 소스 코드를 작성할 파일 이름 (접미어 없음)을 지정합니다. 기본적으로 이것은 &lt;code&gt;Name&lt;/code&gt; 인수 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f8540c944de095f6483b18ec6123d81a4f4c080e" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file (without suffix) to which the resulting source code is to be written. If this option is not specified, the &lt;code&gt;Name&lt;/code&gt; argument is used.</source>
          <target state="translated">결과 소스 코드를 작성할 파일 이름 (접미어 없음)을 지정합니다. 이 옵션을 지정하지 않으면 &lt;code&gt;Name&lt;/code&gt; 인수가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="37257543bb4235b7c81905784d4365c5b22e9d21" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file from which the source code was taken. This is only used for generation of error reports. The default value is the empty string.</source>
          <target state="translated">소스 코드를 가져온 파일 이름을 지정합니다. 이것은 오류 보고서 생성에만 사용됩니다. 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e4237ef82d4494fb98b2da4e67391f4c6d4fa281" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file to be used for logged terms. If this value is omitted and the log name is an atom or a string, the filename defaults to &lt;code&gt;lists:concat([Log, &quot;.LOG&quot;])&lt;/code&gt; for halt logs.</source>
          <target state="translated">로그 된 용어에 사용될 파일 이름을 지정합니다. 이 값을 생략하고 로그 이름이 원자 또는 문자열 인 경우 파일 이름은 기본적으로 중단 로그의 경우 &lt;code&gt;lists:concat([Log, &quot;.LOG&quot;])&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="873ccffbaf98b33adc0461b78b73fe49ca222ee4" translate="yes" xml:space="preserve">
          <source>Specifies the name of the loader used by &lt;code&gt;erl_prim_loader&lt;/code&gt;. &lt;code&gt;Loader&lt;/code&gt; can be &lt;code&gt;efile&lt;/code&gt; (use the local file system) or &lt;code&gt;inet&lt;/code&gt; (load using the &lt;code&gt;boot_server&lt;/code&gt; on another Erlang node).</source>
          <target state="translated">&lt;code&gt;erl_prim_loader&lt;/code&gt; 가 사용하는 로더 이름을 지정합니다 . &lt;code&gt;Loader&lt;/code&gt; 는 &lt;code&gt;efile&lt;/code&gt; (로컬 파일 시스템 사용) 또는 &lt;code&gt;inet&lt;/code&gt; ( 다른 Erlang 노드 의 &lt;code&gt;boot_server&lt;/code&gt; 를 사용하여로드 ) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0c4c893c52783bf1527d7276992d6ec887b51d4" translate="yes" xml:space="preserve">
          <source>Specifies the number of columns in the analysis text. If this option is not given the number of columns is set to 80.</source>
          <target state="translated">분석 텍스트의 열 수를 지정합니다. 이 옵션을 지정하지 않으면 열 수가 80으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="29f2553b90ba8e21a17c8412a775ae878d7a5f28" translate="yes" xml:space="preserve">
          <source>Specifies the number of minutes a failed user authentication is remembered. If a user authenticates after this time has passed, the previous failed authentications are forgotten. Default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">실패한 사용자 인증이 기억되는 시간 (분)을 지정합니다. 이 시간이 지난 후에 사용자가 인증을하면 이전에 실패한 인증은 잊혀집니다. 기본값은 &lt;code&gt;30&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0e81de7d06e2b3f516ef0f3fcb291599f5346d7a" translate="yes" xml:space="preserve">
          <source>Specifies the number of minutes a user is blocked. After this timehas passed, the user automatically regains access. Default is &lt;code&gt;60&lt;/code&gt;.</source>
          <target state="translated">사용자가 차단 된 시간 (분)을 지정합니다. 이 시간이 지나면 사용자는 자동으로 액세스 권한을 다시 얻습니다. 기본값은 &lt;code&gt;60&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3f3927329a37955b0329e90f73d6bd01c48d70eb" translate="yes" xml:space="preserve">
          <source>Specifies the number of parts the subject string is to be split into.</source>
          <target state="translated">제목 문자열을 분할 할 부분 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8207d98172a81fbc09c1ba4c28e7bde32ac7dadd" translate="yes" xml:space="preserve">
          <source>Specifies the number of seconds a successful user authentication is remembered. After this time has passed, the authentication is no longer reported. Default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">성공적인 사용자 인증이 기억되는 시간 (초)을 지정합니다. 이 시간이 지나면 인증이 더 이상보고되지 않습니다. 기본값은 &lt;code&gt;30&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="55a9699573c4a262b4fa5935c65712551d146d2d" translate="yes" xml:space="preserve">
          <source>Specifies the options for the SNMP note store.</source>
          <target state="translated">SNMP 노트 저장소에 대한 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="90560d87857a7ebc70c6aeffcc6b2e765e1a9d02" translate="yes" xml:space="preserve">
          <source>Specifies the options for the manager server process.</source>
          <target state="translated">관리자 서버 프로세스에 대한 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2820010a48c19c5d199aa3acf1fc88ba1c9738f2" translate="yes" xml:space="preserve">
          <source>Specifies the preferred maximum number of characters on any line, including indentation. The default value is 80.</source>
          <target state="translated">들여 쓰기를 포함하여 모든 줄에 선호되는 최대 문자 수를 지정합니다. 기본값은 80입니다.</target>
        </trans-unit>
        <trans-unit id="0d5267db33a1d988cde050567cc551cd47aadb69" translate="yes" xml:space="preserve">
          <source>Specifies the preferred maximum number of characters on any line, not counting indentation. The default value is 65.</source>
          <target state="translated">들여 쓰기를 계산하지 않고 모든 줄에서 선호하는 최대 문자 수를 지정합니다. 기본값은 65입니다.</target>
        </trans-unit>
        <trans-unit id="875af41d367db07368951fed1887bb6bf57dfa8b" translate="yes" xml:space="preserve">
          <source>Specifies the primary filters.</source>
          <target state="translated">기본 필터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="16f23d44854f2be07047a6283bcceeca405aa6a8" translate="yes" xml:space="preserve">
          <source>Specifies the primary log level, that is, log event that are equally or more severe than this level, are forwarded to the primary filters. Less severe log events are immediately discarded.</source>
          <target state="translated">1 차 로그 레벨, 즉이 레벨과 같거나 더 심각한 로그 이벤트가 1 차 필터로 전달되도록 지정합니다. 덜 심각한 로그 이벤트는 즉시 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="0fe10d443b571f9009ea2bd0013789e9ea9ce912" translate="yes" xml:space="preserve">
          <source>Specifies the primary log level. See the &lt;code&gt;kernel(6)&lt;/code&gt; manual page for more information about this parameter.</source>
          <target state="translated">기본 로그 수준을 지정합니다. 참고 항목 &lt;code&gt;kernel(6)&lt;/code&gt; 이 매개 변수에 대한 자세한 내용은 설명서 페이지를.</target>
        </trans-unit>
        <trans-unit id="151b1572a25df546c65b5193dbbe46b97f12f35f" translate="yes" xml:space="preserve">
          <source>Specifies the processes to be traced. Trace flags specified in this call specify what to trace on each process. This function can be called many times if you like different trace flags to be set on different processes.</source>
          <target state="translated">추적 할 프로세스를 지정합니다. 이 호출에 지정된 추적 플래그는 각 프로세스에서 추적 할 대상을 지정합니다. 다른 프로세스에서 다른 추적 플래그를 설정하려는 경우이 함수를 여러 번 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2651e9cda43c2a3b2258924c47236ffab78d21c8" translate="yes" xml:space="preserve">
          <source>Specifies the server identity hint, which the server presents to the client.</source>
          <target state="translated">서버가 클라이언트에 제공하는 서버 ID 힌트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f4d334fe554edc3fb1d020c6bf3708ea49d7d731" translate="yes" xml:space="preserve">
          <source>Specifies the short or long node name of the Erlang emulator. The Erlang services are always distributed. Default is to use the service name as (short) nodename.</source>
          <target state="translated">Erlang 에뮬레이터의 짧은 또는 긴 노드 이름을 지정합니다. Erlang 서비스는 항상 배포됩니다. 기본값은 서비스 이름을 (짧은) 노드 이름으로 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="48d12a63782a3e24ddc5e514f3a55e564c6217fa" translate="yes" xml:space="preserve">
          <source>Specifies the size of the audit trail log. This parameter is sent to &lt;code&gt;disk_log&lt;/code&gt;.</source>
          <target state="translated">감사 추적 로그의 크기를 지정합니다. 이 매개 변수는 &lt;code&gt;disk_log&lt;/code&gt; 로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="b5a9ba11e27524f18872f5a681810d5e606cda71" translate="yes" xml:space="preserve">
          <source>Specifies the suffix to be used for the output file names; the default value is &lt;code&gt;&quot;.erl&quot;&lt;/code&gt;.</source>
          <target state="translated">출력 파일 이름에 사용될 접미 부를 지정합니다. 기본값은 &lt;code&gt;&quot;.erl&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5fb79a41fe81a312aa3e97be11db5d4a8002931d" translate="yes" xml:space="preserve">
          <source>Specifies the timeout time for the request-keep-alive timer.</source>
          <target state="translated">요청 유지 타이머의 시간 종료 시간을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="11d52c1796914b8a1f5f214bbba67a504109d182" translate="yes" xml:space="preserve">
          <source>Specifies the type of output file. &lt;code&gt;Output_type&lt;/code&gt; is the same as the file extension of the output file, but without the period. This option is ignored by compilers that have a single output format.</source>
          <target state="translated">출력 파일의 유형을 지정합니다. &lt;code&gt;Output_type&lt;/code&gt; 은 출력 파일의 파일 확장자와 동일하지만 마침표는 없습니다. 이 옵션은 단일 출력 형식을 가진 컴파일러에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="eced978aa05aa22684ae33073877e513a8908239" translate="yes" xml:space="preserve">
          <source>Specifies the username and password to use to authenticate to the server.</source>
          <target state="translated">서버 인증에 사용할 사용자 이름과 비밀번호를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="80bcf2009be18d6d83aadd3c29a800b05ed7e545" translate="yes" xml:space="preserve">
          <source>Specifies what happens to a log event if all filters return &lt;code&gt;ignore&lt;/code&gt;, or if no filters exist.</source>
          <target state="translated">모든 필터가 &lt;code&gt;ignore&lt;/code&gt; 를 리턴 하거나 필터가 존재하지 않는 경우 로그 이벤트에 발생하는 상황을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="4dfa114baf9f8d6f2b236d8d0ccb65ecd0f7d095" translate="yes" xml:space="preserve">
          <source>Specifies what type of an audit trail log should be used. The effect of the type is actually different for the the agent and the manager.</source>
          <target state="translated">어떤 유형의 감사 추적 로그를 사용해야하는지 지정합니다. 유형의 효과는 실제로 에이전트와 관리자에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="bd18d7ad2981fad7ccb5d75bad1824c22ce4eae6" translate="yes" xml:space="preserve">
          <source>Specifies where shell output is to be sent. Default is that shell output is discarded. To be used only for debugging.</source>
          <target state="translated">쉘 출력을 보낼 위치를 지정합니다. 기본적으로 쉘 출력이 삭제됩니다. 디버깅에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2effffeb6cea75b368a013821667ea4efacfcb2d" translate="yes" xml:space="preserve">
          <source>Specifies where the HTML log files are to be written.</source>
          <target state="translated">HTML 로그 파일을 쓸 위치를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="aeca1d9ed381187a250a618ba95a1823e7727e72" translate="yes" xml:space="preserve">
          <source>Specifies where the application &lt;code&gt;Application = atom()&lt;/code&gt; can execute.</source>
          <target state="translated">응용 프로그램 &lt;code&gt;Application = atom()&lt;/code&gt; 을 실행할 수 있는 위치를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="1a96b1e410416b1763090d51946ce858f0aaa753" translate="yes" xml:space="preserve">
          <source>Specifies where the audit trail log should be stored.</source>
          <target state="translated">감사 추적 로그를 저장할 위치를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dc14492fbf0bed719b58b6a14729ced65f4dffc2" translate="yes" xml:space="preserve">
          <source>Specifies where to send the trace messages. &lt;code&gt;Tracer&lt;/code&gt; must be the process identifier of a local process or the port identifier of a local port.</source>
          <target state="translated">추적 메시지를 보낼 위치를 지정합니다. &lt;code&gt;Tracer&lt;/code&gt; 은 로컬 프로세스의 프로세스 식별자이거나 로컬 포트의 포트 식별자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="0736a03e461873d2b6560c5e341722f3499d53ae" translate="yes" xml:space="preserve">
          <source>Specifies whether Erlang should start &lt;code&gt;&lt;a href=&quot;epmd&quot;&gt;epmd&lt;/a&gt;&lt;/code&gt; on startup. By default this is &lt;code&gt;true&lt;/code&gt;, but if you prefer to start epmd manually, set this to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Erlang을 시작할 때 &lt;code&gt;&lt;a href=&quot;epmd&quot;&gt;epmd&lt;/a&gt;&lt;/code&gt; 를 시작 할지 여부를 지정합니다 . 기본적으로 이것은 &lt;code&gt;true&lt;/code&gt; 이지만 epmd를 수동으로 시작하려면 이것을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="14a0817207cc536325027c5c3de6ecde5063837c" translate="yes" xml:space="preserve">
          <source>Specifies whether the &lt;code&gt;disksup&lt;/code&gt; helper process should only use POSIX conformant commands (&lt;code&gt;true&lt;/code&gt;) or not. The default is &lt;code&gt;false&lt;/code&gt;. Setting this parameter to &lt;code&gt;true&lt;/code&gt; can be necessary on embedded systems with stripped-down versions of Unix tools like &lt;code&gt;df&lt;/code&gt;. The returned disk data and alarms can be different when using this option.</source>
          <target state="translated">&lt;code&gt;disksup&lt;/code&gt; 도우미 프로세스가 POSIX 호환 명령 만 사용 해야하는지 ( &lt;code&gt;true&lt;/code&gt; ) 여부를 지정합니다 . 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. 이 매개 변수를 &lt;code&gt;true&lt;/code&gt; 로 설정하면 &lt;code&gt;df&lt;/code&gt; 같은 Unix 도구가 제거 된 임베디드 시스템에서 필요할 수 있습니다 . 이 옵션을 사용하면 반환 된 디스크 데이터와 알람이 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e37a2fb49e4dd84f2ebb07340bc32c5cea43f117" translate="yes" xml:space="preserve">
          <source>Specifies whether the &lt;code&gt;memsup&lt;/code&gt; process should only check system memory usage (&lt;code&gt;true&lt;/code&gt;) or not. The default is &lt;code&gt;false&lt;/code&gt;, meaning that information regarding both system memory usage and Erlang process memory usage is collected.</source>
          <target state="translated">&lt;code&gt;memsup&lt;/code&gt; 프로세스가 시스템 메모리 사용량 만 검사 해야하는지 ( &lt;code&gt;true&lt;/code&gt; ) 여부를 지정합니다 . 기본값은 &lt;code&gt;false&lt;/code&gt; 이며 시스템 메모리 사용량 및 Erlang 프로세스 메모리 사용량에 관한 정보가 수집됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cb2182a89513f347731a10ff199fd168b6267f41" translate="yes" xml:space="preserve">
          <source>Specifies which captured (sub)patterns are to be returned. &lt;code&gt;ValueSpec&lt;/code&gt; can either be an atom describing a predefined set of return values, or a list containing the indexes or the names of specific subpatterns to return.</source>
          <target state="translated">어떤 캡처 된 (서브) 패턴을 반환할지 지정합니다. &lt;code&gt;ValueSpec&lt;/code&gt; 은 사전 정의 된 리턴 값 세트를 설명하는 원자이거나 리턴 할 인덱스 또는 특정 서브 패턴의 이름을 포함하는 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="277d0642b5c94d1ca87165ddc5a437572041b2fc" translate="yes" xml:space="preserve">
          <source>Specifies which captured substrings are returned and in what format. By default, &lt;code&gt;run/3&lt;/code&gt; captures all of the matching part of the substring and all capturing subpatterns (all of the pattern is automatically captured). The default return type is (zero-based) indexes of the captured parts of the string, specified as &lt;code&gt;{Offset,Length}&lt;/code&gt; pairs (the &lt;code&gt;index&lt;/code&gt;&lt;code&gt;Type&lt;/code&gt; of capturing).</source>
          <target state="translated">어떤 캡처 된 하위 문자열이 어떤 형식으로 반환되는지 지정합니다. 기본적으로 &lt;code&gt;run/3&lt;/code&gt; 는 하위 문자열의 일치하는 부분과 모든 캡처 하위 패턴을 캡처합니다 (모든 패턴이 자동으로 캡처 됨). 기본 리턴 유형은 문자열에서 캡처 된 부분의 인덱스 (0부터 시작)이며 &lt;code&gt;{Offset,Length}&lt;/code&gt; 쌍 ( &lt;code&gt;index&lt;/code&gt; 캡처 &lt;code&gt;Type&lt;/code&gt; )으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="1dfd505e5090d57866814c4b21d2e04b0287b2d1" translate="yes" xml:space="preserve">
          <source>Specifies which element in the stored tuples to use as key. By default, it is the first element, that is, &lt;code&gt;Pos=1&lt;/code&gt;. However, this is not always appropriate. In particular, we do not want the first element to be the key if we want to store Erlang records in a table.</source>
          <target state="translated">저장된 튜플에서 키로 사용할 요소를 지정합니다. 기본적으로 첫 번째 요소, 즉 &lt;code&gt;Pos=1&lt;/code&gt; 입니다. 그러나 이것이 항상 적절한 것은 아닙니다. 특히 Erlang 레코드를 테이블에 저장하려는 경우 첫 번째 요소가 키가되는 것을 원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7fcb53499b90545bdc746f25b23b043b8860b0b9" translate="yes" xml:space="preserve">
          <source>Specifies which flags are added to the parameters of the executable &lt;code&gt;erl&lt;/code&gt;.</source>
          <target state="translated">실행 파일 &lt;code&gt;erl&lt;/code&gt; 의 매개 변수에 추가 할 플래그를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="dd591e33ef98c9a1d0f243438180b88cf38ad60e" translate="yes" xml:space="preserve">
          <source>Specifies which local port number to use.</source>
          <target state="translated">사용할 로컬 포트 ​​번호를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a5ca385b7addea770b4598e52e3732e070259ae5" translate="yes" xml:space="preserve">
          <source>Specifies which other Erlang nodes the &lt;code&gt;inet&lt;/code&gt; loader can use. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present. On each host, there must be on Erlang node with the &lt;code&gt; erl_boot_server(3)&lt;/code&gt;, which handles the load requests. &lt;code&gt;Hosts&lt;/code&gt; is a list of IP addresses (hostnames are not acceptable).</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; 로더가 사용할 수 있는 다른 Erlang 노드를 지정 합니다. 플래그 &lt;code&gt;-loader inet&lt;/code&gt; 이있는 경우이 플래그는 필수 입니다. 각 호스트 에는로드 요청을 처리하는 &lt;code&gt; erl_boot_server(3)&lt;/code&gt; 가있는 Erlang 노드가 있어야 합니다. &lt;code&gt;Hosts&lt;/code&gt; 는 IP 주소 목록입니다 (호스트 이름은 허용되지 않음).</target>
        </trans-unit>
        <trans-unit id="a1332f139f846bbd53ce081097f03155f361535d" translate="yes" xml:space="preserve">
          <source>Specifies which other Erlang nodes the &lt;code&gt;inet&lt;/code&gt; loader can use. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present. On each host, there must be on Erlang node with the &lt;code&gt;erl_boot_server(3)&lt;/code&gt;, which handles the load requests. &lt;code&gt;Hosts&lt;/code&gt; is a list of IP addresses (hostnames are not acceptable).</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; 로더가 사용할 수 있는 다른 Erlang 노드를 지정 합니다. 플래그 &lt;code&gt;-loader inet&lt;/code&gt; 가있는 경우이 플래그는 필수 입니다. 각 호스트 에는로드 요청을 처리하는 &lt;code&gt;erl_boot_server(3)&lt;/code&gt; 과 함께 Erlang 노드에 있어야 합니다. &lt;code&gt;Hosts&lt;/code&gt; 는 IP 주소 목록입니다 (호스트 이름은 허용되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="53558be962c35002e0bb56fe77e9b7ddc3141ff5" translate="yes" xml:space="preserve">
          <source>Specifies which processes that shall be traced. If this option is not given, the calling process is traced. All processes spawned by the traced processes are also traced. This option is only allowed with the &lt;code&gt;start&lt;/code&gt; option.</source>
          <target state="translated">추적 할 프로세스를 지정합니다. 이 옵션을 지정하지 않으면 호출 프로세스가 추적됩니다. 추적 된 프로세스에 의해 생성 된 모든 프로세스도 추적됩니다. 이 옵션은 &lt;code&gt;start&lt;/code&gt; 옵션 에서만 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="441075734f5829cc5fb329d4f975f091bf99c295" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;etype&lt;/code&gt; as one of the following constants:</source>
          <target state="translated">&lt;code&gt;etype&lt;/code&gt; 을 다음 상수 중 하나로 지정 하십시오.</target>
        </trans-unit>
        <trans-unit id="2d4998769b2f5a4eee7b2e8f3a102444590d215c" translate="yes" xml:space="preserve">
          <source>Specify a system file that Erlang is to read configuration data from. &lt;code&gt;Format&lt;/code&gt; tells the parser how the file is to be interpreted:</source>
          <target state="translated">Erlang이 구성 데이터를 읽을 시스템 파일을 지정하십시오. &lt;code&gt;Format&lt;/code&gt; 은 파서에게 파일을 해석하는 방법을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="9b5adb5a9a945608c7adb24d26976f20ac1fc146" translate="yes" xml:space="preserve">
          <source>Specify a system file that Erlang is to read resolver configuration from for the internal DNS client &lt;code&gt;inet_res(3)&lt;/code&gt;, and monitor for changes, even if it does not exist. The path must be absolute.</source>
          <target state="translated">Erlang이 내부 DNS 클라이언트 &lt;code&gt;inet_res(3)&lt;/code&gt; 대한 리졸버 구성을 읽을 시스템 파일을 지정하고 존재하지 않는 경우에도 변경 사항을 모니터하십시오. 경로는 절대적이어야합니다.</target>
        </trans-unit>
        <trans-unit id="39e8cf1c87a200f852a1927aa8f089cf8d3ecc5f" translate="yes" xml:space="preserve">
          <source>Specify a system file that Erlang is to read resolver configuration from for the internal hosts file resolver, and monitor for changes, even if it does not exist. The path must be absolute.</source>
          <target state="translated">Erlang이 내부 호스트 파일 해석 프로그램의 해석기 구성을 읽을 시스템 파일을 지정하고 존재하지 않는 경우에도 변경 사항을 모니터하십시오. 경로는 절대적이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e23627b00304a4d8b1bcae862d72b0ee4e2fbcce" translate="yes" xml:space="preserve">
          <source>Specify a system registry that Erlang is to read configuration data from. &lt;code&gt;win32&lt;/code&gt; is the only valid option.</source>
          <target state="translated">Erlang이 구성 데이터를 읽을 시스템 레지스트리를 지정하십시오. &lt;code&gt;win32&lt;/code&gt; 가 유일하게 유효한 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="6718bd8fe7e1b17232d92e3bedaf177dc4950f5c" translate="yes" xml:space="preserve">
          <source>Specify breakpoints.</source>
          <target state="translated">중단 점을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="05aefe09978c71eb533e67bc0a4a5abc92516f10" translate="yes" xml:space="preserve">
          <source>Specify how to perform lookup and caching of certificate revocation lists. &lt;code&gt;Module&lt;/code&gt; defaults to &lt;code&gt;ssl_crl_cache&lt;/code&gt; with &lt;code&gt;DbHandle&lt;/code&gt; being &lt;code&gt;internal&lt;/code&gt; and an empty argument list.</source>
          <target state="translated">인증서 해지 목록의 조회 및 캐싱 수행 방법을 지정하십시오. &lt;code&gt;Module&lt;/code&gt; 기본적으로 &lt;code&gt;ssl_crl_cache&lt;/code&gt; 로 설정 되며 &lt;code&gt;DbHandle&lt;/code&gt; 은 &lt;code&gt;internal&lt;/code&gt; 이고 빈 인수 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="753ca300cab73ef6f1046dee190ebc7e69330958" translate="yes" xml:space="preserve">
          <source>Specify include directories to be passed to the compiler for automatic compilation (similar to &lt;code&gt;ct_run -include&lt;/code&gt;).</source>
          <target state="translated">자동 컴파일을 위해 컴파일러에 전달할 include 디렉토리를 지정하십시오 ( &lt;code&gt;ct_run -include&lt;/code&gt; 와 유사 ).</target>
        </trans-unit>
        <trans-unit id="86afce635e7f24039de98afd64bd791651c094bf" translate="yes" xml:space="preserve">
          <source>Specify lookup methods and in which order to try them. The valid methods are as follows:</source>
          <target state="translated">조회 방법과 시도 순서를 지정하십시오. 유효한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e987e5615e4f2657bffcf3fb915277d969f20f2" translate="yes" xml:space="preserve">
          <source>Specify the &lt;code&gt;Mnesia&lt;/code&gt; directory by providing an application parameter either when starting the Erlang shell or in the application script. Previously, the following example was used to create the directory for the &lt;code&gt;Company&lt;/code&gt; database:</source>
          <target state="translated">Erlang 쉘을 시작할 때 또는 애플리케이션 스크립트에서 애플리케이션 매개 변수를 제공 하여 &lt;code&gt;Mnesia&lt;/code&gt; 디렉토리를 지정하십시오 . 이전에는 다음 예제를 사용하여 &lt;code&gt;Company&lt;/code&gt; 데이터베이스 의 디렉토리를 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="d9cb48a0bee2458b16541c2ec1dac43622330992" translate="yes" xml:space="preserve">
          <source>Specify the hostname to be used in TLS Server Name Indication extension. If not specified it will default to the &lt;code&gt;Host&lt;/code&gt; argument of &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;connect/[3,4]&lt;/a&gt;&lt;/code&gt; unless it is of type inet:ipaddress().</source>
          <target state="translated">TLS 서버 이름 표시 확장에 사용될 호스트 이름을 지정하십시오. 지정 하지 않으면 inet : ipaddress () 유형이 아닌 한 &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;connect/[3,4]&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Host&lt;/code&gt; 인수로 기본 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="b753efb9c74f7d99f9413cb4a9d22f6871c7956e" translate="yes" xml:space="preserve">
          <source>Specify the modules to be interpreted.</source>
          <target state="translated">해석 할 모듈을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="80ff8e788f0f029eac875c1827744b22530cc430" translate="yes" xml:space="preserve">
          <source>Specify the name of the libraries with &lt;code&gt;-lerl_interface -lei&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-lerl_interface -lei&lt;/code&gt; 로 라이브러리 이름을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8fa6af97edefb9b9b0732afaa471526dab3e4a4f" translate="yes" xml:space="preserve">
          <source>Specify the name of the library with &lt;code&gt;-lei&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-lei&lt;/code&gt; 를 사용하여 라이브러리 이름을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1692060e0567093bed4a0b8bdb40881502bb2791" translate="yes" xml:space="preserve">
          <source>Specify the path to &lt;code&gt;libei.a&lt;/code&gt; with &lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt;.</source>
          <target state="translated">경로 지정 &lt;code&gt;libei.a&lt;/code&gt; 와 &lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01ed86a54a658842ff830edb8386136f3061d27d" translate="yes" xml:space="preserve">
          <source>Specify the path to &lt;code&gt;liberl_interface.a&lt;/code&gt; and &lt;code&gt;libei.a&lt;/code&gt; with &lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt;.</source>
          <target state="translated">경로 지정 &lt;code&gt;liberl_interface.a&lt;/code&gt; 및 &lt;code&gt;libei.a&lt;/code&gt; 와 &lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f7a3b41f49e858f11c0a5c92131e043c94eddc2" translate="yes" xml:space="preserve">
          <source>Specify the top-level HTML log directory (similar to &lt;code&gt;ct_run -logdir&lt;/code&gt;).</source>
          <target state="translated">최상위 HTML 로그 디렉토리를 지정하십시오 ( &lt;code&gt;ct_run -logdir&lt;/code&gt; 과 유사 ).</target>
        </trans-unit>
        <trans-unit id="848fa5d5c77622c0914c10cd7da75a2854d6d4c2" translate="yes" xml:space="preserve">
          <source>Specify which ASN.1 specs to compile in a module with extension &lt;code&gt;.set.asn&lt;/code&gt;. Choose a module name and provide the names of the ASN.1 specs. For example, if you have the specs &lt;code&gt;File1.asn&lt;/code&gt;, &lt;code&gt;File2.asn&lt;/code&gt;, and &lt;code&gt;File3.asn&lt;/code&gt;, your module &lt;code&gt;MyModule.set.asn&lt;/code&gt; looks as follows:</source>
          <target state="translated">확장명이 &lt;code&gt;.set.asn&lt;/code&gt; 인 모듈에서 컴파일 할 ASN.1 스펙을 지정 하십시오 . 모듈 이름을 선택하고 ASN.1 스펙의 이름을 제공하십시오. 예를 들어, &lt;code&gt;File1.asn&lt;/code&gt; , &lt;code&gt;File2.asn&lt;/code&gt; 및 &lt;code&gt;File3.asn&lt;/code&gt; 스펙이있는 경우 &lt;code&gt;MyModule.set.asn&lt;/code&gt; 모듈 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0ede1ca168066274e82416d16462db165a08574e" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;0&lt;/code&gt; as the number of parts gives the same effect as option &lt;code&gt;trim&lt;/code&gt;. If subexpressions are captured, empty subexpressions matched at the end are also stripped from the result if &lt;code&gt;trim&lt;/code&gt; or &lt;code&gt;{parts,0}&lt;/code&gt; is specified.</source>
          <target state="translated">부품 수로 &lt;code&gt;0&lt;/code&gt; 을 지정 하면 옵션 &lt;code&gt;trim&lt;/code&gt; 과 동일한 효과가 나타납니다 . 하위 표현식을 캡처하면 &lt;code&gt;trim&lt;/code&gt; 또는 &lt;code&gt;{parts,0}&lt;/code&gt; 이 지정된 경우 끝에 일치하는 빈 하위 표현식도 결과에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="1ae6586dedf228b0386f11a5096f7781896e3713" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;#diameter_callback{}&lt;/code&gt; record allows individual functions to be configured in place of the usual &lt;code&gt;diameter_app(3)&lt;/code&gt; callbacks. See &lt;code&gt;diameter_callback.erl&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;#diameter_callback{}&lt;/code&gt; 레코드를 지정 하면 일반적인 &lt;code&gt;diameter_app(3)&lt;/code&gt; 콜백 대신 개별 함수를 구성 할 수 있습니다 . 자세한 내용은 &lt;code&gt;diameter_callback.erl&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="92f28840a22e4c1a0178116b6217dead2ce2b0d0" translate="yes" xml:space="preserve">
          <source>Specifying a SetFun as an integer I is equivalent to specifying &lt;code&gt;{external, fun(X)&amp;nbsp;-&amp;gt; element(I,&amp;nbsp;X)&amp;nbsp;end}&lt;/code&gt;, but is to be preferred, as it makes it possible to handle this case even more efficiently.</source>
          <target state="translated">SetFun을 정수 I로 지정하는 것은 &lt;code&gt;{external, fun(X)&amp;nbsp;-&amp;gt; element(I,&amp;nbsp;X)&amp;nbsp;end}&lt;/code&gt; 를 지정하는 것과 동일 하지만이 경우를보다 효율적으로 처리 할 수 ​​있으므로 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="b200657ccccc323bc4b3a61970c9fb6663f8829a" translate="yes" xml:space="preserve">
          <source>Specifying a Vendor-Id in the definition of a grouped AVP is equivalent to specifying it with &lt;code&gt;@avp_vendor_id&lt;/code&gt;.</source>
          <target state="translated">그룹화 된 AVP의 정의에서 공급 업체 ID를 지정하는 것은 &lt;code&gt;@avp_vendor_id&lt;/code&gt; 로 지정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0939c70054b8b7d25dfe8894b65b0d6a2f6c5cb4" translate="yes" xml:space="preserve">
          <source>Specifying a capability as a transport option may be particularly appropriate for Inband-Security-Id, in case TLS is desired over TCP as implemented by &lt;code&gt;&lt;a href=&quot;diameter_tcp&quot;&gt;diameter_tcp(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;diameter_tcp&quot;&gt;diameter_tcp(3)&lt;/a&gt;&lt;/code&gt; 의해 구현 된 TCP를 통해 TLS가 필요한 경우, 전송 옵션으로 기능을 지정하는 것이 Inband-Security-Id에 특히 적합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb7efdf3486ed6f6f03fa215fe68c9b19961adc4" translate="yes" xml:space="preserve">
          <source>Specifying a default value for a required variable can result in a test case always getting executed. This might not be a desired behavior.</source>
          <target state="translated">필수 변수에 기본값을 지정하면 테스트 케이스가 항상 실행될 수 있습니다. 원하는 동작이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df93bcf6a37c6be11e1f38fe0c2c4974ff170827" translate="yes" xml:space="preserve">
          <source>Specifying a lower value can result in matches with deep recursion failing, when they should have matched:</source>
          <target state="translated">더 낮은 값을 지정하면 일치해야하는 깊은 재귀와 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fee67be666602823141fbcc3f4990dca2082eff" translate="yes" xml:space="preserve">
          <source>Specifying caseless matching does not affect these escape sequences. For example, \p{Lu} always matches only uppercase letters. This is different from the behavior of current versions of Perl.</source>
          <target state="translated">대소 문자가없는 일치를 지정해도 이러한 이스케이프 시퀀스에는 영향을 미치지 않습니다. 예를 들어, \ p {Lu}는 항상 대문자 만 일치합니다. 이것은 현재 버전의 Perl의 동작과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e9328e55b836e81b496740c36ae4239082f4dfed" translate="yes" xml:space="preserve">
          <source>Specifying the &lt;code&gt;Mnesia&lt;/code&gt; directory where the database is to be stored.</source>
          <target state="translated">데이터베이스를 저장할 &lt;code&gt;Mnesia&lt;/code&gt; 디렉토리를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9523b57f2fe527eb52b35d6387fb2934f9c06f0" translate="yes" xml:space="preserve">
          <source>Specifying value &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;Schedulers&lt;/code&gt; or &lt;code&gt;SchedulersOnline&lt;/code&gt; resets the number of scheduler threads or scheduler threads online, respectively, to its default value.</source>
          <target state="translated">&lt;code&gt;Schedulers&lt;/code&gt; 또는 &lt;code&gt;SchedulersOnline&lt;/code&gt; 에 값 &lt;code&gt;0&lt;/code&gt; 을 지정 하면 스케줄러 스레드 또는 스케줄러 스레드 수가 각각 온라인으로 기본값으로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4fb0f8341b4c2833ab84851143e545f80147f547" translate="yes" xml:space="preserve">
          <source>Split large distribution messages into multiple fragments.</source>
          <target state="translated">대용량 배포 메시지를 여러 조각으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="8e6a9fde2011a67805370713435ac141e07d78b7" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;List1&lt;/code&gt; into &lt;code&gt;List2&lt;/code&gt; and &lt;code&gt;List3&lt;/code&gt;. &lt;code&gt;List2&lt;/code&gt; contains the first &lt;code&gt;N&lt;/code&gt; elements and &lt;code&gt;List3&lt;/code&gt; the remaining elements (the &lt;code&gt;N&lt;/code&gt;th tail).</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; 을 &lt;code&gt;List2&lt;/code&gt; 및 &lt;code&gt;List3&lt;/code&gt; 으로 분할합니다 . &lt;code&gt;List2&lt;/code&gt; 는 첫 번째 &lt;code&gt;N&lt;/code&gt; 요소를 포함하고 &lt;code&gt;List3&lt;/code&gt; 는 나머지 요소 ( &lt;code&gt;N&lt;/code&gt; 번째 꼬리)를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="e21cd9e17d2310b92584df470b648894e95593ac" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;Q1&lt;/code&gt; in two. The &lt;code&gt;N&lt;/code&gt; front items are put in &lt;code&gt;Q2&lt;/code&gt; and the rest in &lt;code&gt;Q3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; 을 두 개로 나눕니다 . &lt;code&gt;N&lt;/code&gt; 의 전면 항목에 배치됩니다 &lt;code&gt;Q2&lt;/code&gt; 와의 나머지 &lt;code&gt;Q3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00eec603124d258453b60da5c407f4065bdd3a82" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;String&lt;/code&gt; where &lt;code&gt;SearchPattern&lt;/code&gt; is encountered and return the remaining parts. &lt;code&gt;Where&lt;/code&gt;, default &lt;code&gt;leading&lt;/code&gt;, indicates whether the &lt;code&gt;leading&lt;/code&gt;, the &lt;code&gt;trailing&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; encounters of &lt;code&gt;SearchPattern&lt;/code&gt; will split &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SearchPattern&lt;/code&gt; 이 있는 곳에서 &lt;code&gt;String&lt;/code&gt; 분할 하고 나머지 부분을 반환합니다. &lt;code&gt;Where&lt;/code&gt; 기본, &lt;code&gt;leading&lt;/code&gt; 의 여부를 나타냅니다 &lt;code&gt;leading&lt;/code&gt; 의 &lt;code&gt;trailing&lt;/code&gt; 또는 &lt;code&gt;all&lt;/code&gt; 의 만남 &lt;code&gt;SearchPattern&lt;/code&gt; 분할합니다 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
