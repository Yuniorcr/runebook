<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="3acd8ddbcc99cb042f913dc83212b95ed1cb771d" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Term&lt;/code&gt;. Option &lt;code&gt;Depth&lt;/code&gt; controls the depth of the structures written. When the specified depth is reached, everything below this level is replaced by &quot;&lt;code&gt;...&lt;/code&gt;&quot;. &lt;code&gt;Depth&lt;/code&gt; defaults to -1, which means no limitation. Option &lt;code&gt;CharsLimit&lt;/code&gt; puts a soft limit on the number of characters returned. When the number of characters is reached, remaining structures are replaced by &quot;&lt;code&gt;...&lt;/code&gt;&quot;. &lt;code&gt;CharsLimit&lt;/code&gt; defaults to -1, which means no limit on the number of characters returned.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 을 나타내는 문자 목록을 리턴합니다 . Option &lt;code&gt;Depth&lt;/code&gt; 는 작성된 구조의 깊이를 제어합니다. 지정된 깊이에 도달하면이 수준 아래의 모든 항목이 &quot; &lt;code&gt;...&lt;/code&gt; &quot; 로 바뀝니다 . &lt;code&gt;Depth&lt;/code&gt; 기본값은 -1이며 제한이 없습니다. 옵션 &lt;code&gt;CharsLimit&lt;/code&gt; 는 반환되는 문자 수에 대한 소프트 제한을 설정합니다. 문자 수에 도달하면 나머지 구조는 &quot; &lt;code&gt;...&lt;/code&gt; &quot; 로 바뀝니다 . &lt;code&gt;CharsLimit&lt;/code&gt; 의 기본값은 -1이며 반환되는 문자 수에 제한이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7515af71865382538c9b621bc97880e10cea729c" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents a new line character.</source>
          <target state="translated">줄 바꾸기 문자를 나타내는 문자 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9837e9f3695bc3f529cc76c8333474205016bf54" translate="yes" xml:space="preserve">
          <source>Returns a complete list of keys, in any order, which resides within &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 내에있는 순서대로 전체 키 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a8d07324a8f857482b575ffdf8a5133ff3cd3086" translate="yes" xml:space="preserve">
          <source>Returns a complete list of values, in arbitrary order, contained in map &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">map &lt;code&gt;Map&lt;/code&gt; 에 포함 된 전체 값 목록을 임의의 순서로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="85b8ca0c9892ea474287d876db824903003ce54e" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;List1&lt;/code&gt; where the first element matching &lt;code&gt;Elem&lt;/code&gt; is deleted, if there is such an element.</source>
          <target state="translated">&lt;code&gt;Elem&lt;/code&gt; 과 일치하는 첫 번째 요소 가 삭제 된 경우 &lt;code&gt;List1&lt;/code&gt; 의 사본을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="700b0d9b0fdb56ec10ab211365995c4237a52e77" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a &lt;code&gt;T&lt;/code&gt; tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is replaced with &lt;code&gt;NewTuple&lt;/code&gt;, if there is such a tuple &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">반환 사본 &lt;code&gt;TupleList1&lt;/code&gt; (A)의 첫번째 발생 &lt;code&gt;T&lt;/code&gt; 를 가진 튜플 &lt;code&gt;N&lt;/code&gt; 은 행 번째 요소는 동일한 비교 &lt;code&gt;Key&lt;/code&gt; 로 치환 &lt;code&gt;NewTuple&lt;/code&gt; 같은 튜플이 있으면, &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7074df7afcc8a3fe9972b4dcffcd75e05c47d4ad" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a tuple &lt;code&gt;T&lt;/code&gt; whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is replaced with &lt;code&gt;NewTuple&lt;/code&gt;, if there is such a tuple &lt;code&gt;T&lt;/code&gt;. If there is no such tuple &lt;code&gt;T&lt;/code&gt;, a copy of &lt;code&gt;TupleList1&lt;/code&gt; where [&lt;code&gt;NewTuple&lt;/code&gt;] has been appended to the end is returned.</source>
          <target state="translated">반환 사본 &lt;code&gt;TupleList1&lt;/code&gt; 튜플 처음 나타나는 &lt;code&gt;T&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; 은 th 요소가 동일한 비교 &lt;code&gt;Key&lt;/code&gt; 로 치환 &lt;code&gt;NewTuple&lt;/code&gt; 같은 튜플이 있으면, &lt;code&gt;T&lt;/code&gt; . 이러한 튜플 &lt;code&gt;T&lt;/code&gt; 가 없으면 &lt;code&gt;TupleList1&lt;/code&gt; [ &lt;code&gt;NewTuple&lt;/code&gt; ]이 추가 된 TupleList1 의 복사본 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="169e3b3fcbb9198de6cf8a879d88e8f319d03c21" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is deleted, if there is such a tuple.</source>
          <target state="translated">튜플이있는 경우 &lt;code&gt;N&lt;/code&gt; 번째 요소와 &lt;code&gt;Key&lt;/code&gt; 가 같은 튜플의 첫 번째 항목 이 &lt;code&gt;TupleList1&lt;/code&gt; 되는 TupleList1 의 사본을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="380d9bbd8030f3784e9e84eeac3cf89d2d38cc45" translate="yes" xml:space="preserve">
          <source>Returns a descriptive string in English of an error tuple returned by &lt;code&gt;yecc:file/1,2&lt;/code&gt;. This function is mainly used by the compiler invoking Yecc.</source>
          <target state="translated">&lt;code&gt;yecc:file/1,2&lt;/code&gt; 에서 반환 된 오류 튜플의 설명 문자열을 영어로 반환합니다 . 이 함수는 주로 Yecc를 호출하는 컴파일러에서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ea47de793fe37ea3966e30287cdccc9610f6a216" translate="yes" xml:space="preserve">
          <source>Returns a descriptive string in English of an error tuple returned by some of the functions of the &lt;code&gt;qlc&lt;/code&gt; module or the parse transform. This function is mainly used by the compiler invoking the parse transform.</source>
          <target state="translated">&lt;code&gt;qlc&lt;/code&gt; 모듈 의 일부 함수 또는 구문 분석 변환에 의해 리턴 된 오류 튜플의 설명 문자열을 영어로 리턴합니다 . 이 함수는 주로 구문 분석 변환을 호출하는 컴파일러에서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e93141b18c3c27b104fa1cc5138d9897a358d8fc" translate="yes" xml:space="preserve">
          <source>Returns a diagnostic error string. For possible POSIX values and corresponding strings, see section &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">진단 오류 문자열을 반환합니다. 가능한 POSIX 값 및 해당 문자열은 &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f9e192d9437478b049a8b9aa1bad050415102360" translate="yes" xml:space="preserve">
          <source>Returns a flattened version of &lt;code&gt;DeepList&lt;/code&gt; with tail &lt;code&gt;Tail&lt;/code&gt; appended.</source>
          <target state="translated">꼬리 &lt;code&gt;Tail&lt;/code&gt; 추가 된 플랫 화 된 &lt;code&gt;DeepList&lt;/code&gt; 버전을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="47da8955925179f50f9dfa6cb72f5900bef0a615" translate="yes" xml:space="preserve">
          <source>Returns a flattened version of &lt;code&gt;DeepList&lt;/code&gt;.</source>
          <target state="translated">병합 된 &lt;code&gt;DeepList&lt;/code&gt; 버전을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bf51931597afcea360993522d0f3008415edcdb8" translate="yes" xml:space="preserve">
          <source>Returns a float by converting &lt;code&gt;Number&lt;/code&gt; to a float, for example:</source>
          <target state="translated">다음과 같이 &lt;code&gt;Number&lt;/code&gt; 를 float로 변환하여 float을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="edd12ee1c17bec99d0c7359851a155d5deadfbb6" translate="yes" xml:space="preserve">
          <source>Returns a function, the domain of which is &lt;code&gt;Set1&lt;/code&gt;. The value of an element of the domain is the result of applying &lt;code&gt;SetFun&lt;/code&gt; to the element.</source>
          <target state="translated">도메인이 &lt;code&gt;Set1&lt;/code&gt; 인 함수를 반환합니다 . 도메인 요소의 값은 요소에 &lt;code&gt;SetFun&lt;/code&gt; 을 적용한 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="7e2294c09c737c43acca0710dc36b7b7bff6cdd3" translate="yes" xml:space="preserve">
          <source>Returns a integer variable name higher than any other integer variable name in the syntax tree. An exception is thrown if &lt;code&gt;Tree&lt;/code&gt; does not represent a well-formed Core Erlang syntax tree.</source>
          <target state="translated">구문 트리에서 다른 정수 변수 이름보다 높은 정수 변수 이름을 반환합니다. &lt;code&gt;Tree&lt;/code&gt; 가 제대로 구성된 Core Erlang 구문 트리를 나타내지 않으면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="2d30676cc7fc6228d2bebb6faf14ea1f72ae9ec1" translate="yes" xml:space="preserve">
          <source>Returns a key-value list with information about the daemon.</source>
          <target state="translated">데몬에 대한 정보가 포함 된 키-값 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e600b971199809d7a45269d85fb5dd13e5a69264" translate="yes" xml:space="preserve">
          <source>Returns a key-value list, where the keys are the different types of algorithms and the values are the algorithms themselves.</source>
          <target state="translated">키가 다른 유형의 알고리즘이고 값이 알고리즘 자체 인 키-값 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b2d9617255f0ee4bcd0e04faa828b16902d2f770" translate="yes" xml:space="preserve">
          <source>Returns a list (a dictionary) containing information about the agent. Information includes loaded MIBs, registered sub-agents, some information about the memory allocation.</source>
          <target state="translated">에이전트에 대한 정보가 포함 된 목록 (사전)을 반환합니다. 로드 된 MIB, 등록 된 하위 에이전트, 메모리 할당에 대한 일부 정보가 정보에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="95b90dff177d50cab52043268bf45b0241a8f703" translate="yes" xml:space="preserve">
          <source>Returns a list (a dictionary) containing information about the manager. Information includes statistics counters, miscellaneous info about each process (e.g. memory allocation), and so on.</source>
          <target state="translated">관리자에 대한 정보가 포함 된 목록 (사전)을 반환합니다. 정보에는 통계 카운터, 각 프로세스에 대한 기타 정보 (예 : 메모리 할당) 등이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="cbfbf6b40ded09b3040d10ffc70b9e38cad6903e" translate="yes" xml:space="preserve">
          <source>Returns a list containing &lt;code&gt;InfoTuple&lt;/code&gt;s with miscellaneous information about the process identified by &lt;code&gt;Pid&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; 로 식별 된 프로세스에 대한 기타 정보가 있거나 프로세스가 아직 &lt;code&gt;InfoTuple&lt;/code&gt; &lt;code&gt;undefined&lt;/code&gt; 경우 정의되지 않은 InfoTuple을 포함하는 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3563a46b724960f3efe2b2af847c70a7a360a7dc" translate="yes" xml:space="preserve">
          <source>Returns a list containing &lt;code&gt;N&lt;/code&gt; copies of term &lt;code&gt;Elem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Elem&lt;/code&gt; 용어의 &lt;code&gt;N&lt;/code&gt; 개 사본이 포함 된 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="cc020fc059b80f3fa0c55039966d437233a23d00" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the global groups. Each list element is a tuple. The order of the tuples is undefined.</source>
          <target state="translated">글로벌 그룹에 대한 정보가 포함 된 목록을 리턴합니다. 각 목록 요소는 튜플입니다. 튜플의 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="951e1381c9f14d041387253dd8d66f9aa28670ce" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the source of &lt;code&gt;OS monotonic time&lt;/code&gt; that is used by the runtime system.</source>
          <target state="translated">런타임 시스템에서 사용하는 &lt;code&gt;OS monotonic time&lt;/code&gt; 의 소스에 대한 정보가 포함 된 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="ddc00d646108eeca88c90d7fb6dbb69928931016" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the source of &lt;code&gt;OS system time&lt;/code&gt; that is used by the runtime system.</source>
          <target state="translated">런타임 시스템에서 사용하는 &lt;code&gt;OS system time&lt;/code&gt; 소스에 대한 정보가 포함 된 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="0b9c262ea9805bcbeef0b916aaf39f57234d691c" translate="yes" xml:space="preserve">
          <source>Returns a list containing miscellaneous information about the emulators internal I/O checking. Notice that the content of the returned list can vary between platforms and over time. It is only guaranteed that a list is returned.</source>
          <target state="translated">에뮬레이터 내부 I / O 검사에 대한 기타 정보가 포함 된 목록을 반환합니다. 반환 된 목록의 내용은 플랫폼과 시간에 따라 다를 수 있습니다. 리스트가 리턴되는 것만 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="fefe64ec8c64c2e0bd5eb488a17daca003e4f2bb" translate="yes" xml:space="preserve">
          <source>Returns a list containing some information about a BEAM file as tuples &lt;code&gt;{Item, Info}&lt;/code&gt;:</source>
          <target state="translated">BEAM 파일에 대한 정보가 포함 된 목록을 튜플 &lt;code&gt;{Item, Info}&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="11917c8d8150c5d519465c4e301c4f065886e9fd" translate="yes" xml:space="preserve">
          <source>Returns a list containing the &lt;code&gt;{Item, Value}&lt;/code&gt; tuples for all other items, or returns &lt;code&gt;false&lt;/code&gt; if no tracing is active for this function.</source>
          <target state="translated">다른 모든 항목에 대한 &lt;code&gt;{Item, Value}&lt;/code&gt; 튜플이 포함 된 목록을 반환 하거나이 함수에 대해 추적이 활성화되어 있지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e45792a08459d1264971c1799cfec732179dbf0b" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt; where all except the first element of the elements comparing equal according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt; have been deleted. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; 에 따라 동일하게 비교되는 요소의 첫 번째 요소를 제외한 모든 요소가 삭제 된 &lt;code&gt;List1&lt;/code&gt; 의 정렬 된 요소가 포함 된 목록을 리턴합니다 . &lt;code&gt;Fun(A, B)&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 가 순서에서 &lt;code&gt;B&lt;/code&gt; 보다 작거나 같은 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d8fe3b09996ca76df4bbe74b69277d528ae8ad3e" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt; where all except the first element of the elements comparing equal have been deleted.</source>
          <target state="translated">동등을 비교하는 요소의 첫 번째 요소를 제외한 모든 요소가 삭제 된 &lt;code&gt;List1&lt;/code&gt; 의 정렬 된 요소가 포함 된 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4ac0dc5f24e09780cafeb9a333d3e1b9d5895862" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt;, according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt;. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; 에 따라 &lt;code&gt;List1&lt;/code&gt; 의 정렬 된 요소를 포함하는 목록을 리턴합니다 . &lt;code&gt;Fun(A, B)&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 가 순서에서 &lt;code&gt;B&lt;/code&gt; 보다 작거나 같은 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="8a938a1e5e68a22bffcdd498e806765af6aa24d0" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt;.</source>
          <target state="translated">정렬 된 &lt;code&gt;List1&lt;/code&gt; 요소를 포함하는 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6f4b4280d08d92442ec94e1625e4659624668a58" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of list &lt;code&gt;TupleList1&lt;/code&gt; where all except the first tuple of the tuples comparing equal have been deleted. Sorting is performed on the &lt;code&gt;N&lt;/code&gt;th element of the tuples.</source>
          <target state="translated">동일한 항목을 비교하는 튜플의 첫 번째 튜플을 제외한 모든 항목이 삭제 된 목록 &lt;code&gt;TupleList1&lt;/code&gt; 의 정렬 된 요소가 포함 된 목록을 리턴합니다 . 정렬은 튜플 의 &lt;code&gt;N&lt;/code&gt; 번째 요소에서 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="9184378fb1930d165bcaac2d0fb3cf34216f6720" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of list &lt;code&gt;TupleList1&lt;/code&gt;. Sorting is performed on the &lt;code&gt;N&lt;/code&gt;th element of the tuples. The sort is stable.</source>
          <target state="translated">목록 &lt;code&gt;TupleList1&lt;/code&gt; 의 정렬 된 요소를 포함하는 목록을 리턴합니다 . 정렬은 튜플 의 &lt;code&gt;N&lt;/code&gt; 번째 요소에서 수행됩니다 . 정렬이 안정적입니다.</target>
        </trans-unit>
        <trans-unit id="f4cb2e3f7a02d479aa9a83f602a2f6ab8a517f62" translate="yes" xml:space="preserve">
          <source>Returns a list containing tuples with information about &lt;code&gt;Port&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if the port is not open. The order of the tuples is undefined, and all the tuples are not mandatory. If the port is closed and the calling process was previously linked to the port, the exit signal from the port is guaranteed to be delivered before &lt;code&gt;port_info/1&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Port&lt;/code&gt; 에 대한 정보가있는 튜플이 포함 된 목록을 반환 하거나 포트가 열려 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다. 튜플의 순서는 정의되어 있지 않으며 모든 튜플이 필수는 아닙니다. 포트가 닫히고 호출 프로세스가 이전에 포트에 링크 된 경우 &lt;code&gt;port_info/1&lt;/code&gt; 이 &lt;code&gt;undefined&lt;/code&gt; 를 리턴 하기 전에 포트의 종료 신호가 전달되도록 보장됩니다 .</target>
        </trans-unit>
        <trans-unit id="b6dea5e836421666324d435b4db8d6bf6eebcd0f" translate="yes" xml:space="preserve">
          <source>Returns a list corresponding to &lt;code&gt;Tuple&lt;/code&gt;. &lt;code&gt;Tuple&lt;/code&gt; can contain any Erlang terms. Example:</source>
          <target state="translated">&lt;code&gt;Tuple&lt;/code&gt; 에 해당하는 목록을 반환합니다 . &lt;code&gt;Tuple&lt;/code&gt; 은 Erlang 용어를 포함 할 수 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="5e85c7d8f3efd3892bf025810675bca230ae96c2" translate="yes" xml:space="preserve">
          <source>Returns a list corresponding to the specified format string, where control sequences have been replaced with corresponding tuples. This list can be passed to:</source>
          <target state="translated">제어 시퀀스가 ​​해당 튜플로 대체 된 지정된 형식 문자열에 해당하는 목록을 리턴합니다. 이 목록은 다음으로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fac3d237a3083a77964a5e83a4480749ea8e970" translate="yes" xml:space="preserve">
          <source>Returns a list describing the default garbage collection settings. A process spawned on the local node by a &lt;code&gt;spawn&lt;/code&gt; or &lt;code&gt;spawn_link&lt;/code&gt; uses these garbage collection settings. The default settings can be changed by using &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt; erlang:system_flag/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; can spawn a process that does not use the default settings.</source>
          <target state="translated">기본 가비지 수집 설정을 설명하는 목록을 반환합니다. &lt;code&gt;spawn&lt;/code&gt; 또는 &lt;code&gt;spawn_link&lt;/code&gt; 에 의해 로컬 노드에서 생성 된 프로세스 는 이러한 가비지 수집 설정을 사용합니다. 기본 설정은 &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt; erlang:system_flag/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 변경할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; 는 기본 설정을 사용하지 않는 프로세스를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d433f5cf2ede44b50d5e4bfea7a196ae3ff826ba" translate="yes" xml:space="preserve">
          <source>Returns a list describing the default garbage collection settings. A process spawned on the local node by a &lt;code&gt;spawn&lt;/code&gt; or &lt;code&gt;spawn_link&lt;/code&gt; uses these garbage collection settings. The default settings can be changed by using &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; can spawn a process that does not use the default settings.</source>
          <target state="translated">기본 가비지 수집 설정을 설명하는 목록을 반환합니다. &lt;code&gt;spawn&lt;/code&gt; 또는 &lt;code&gt;spawn_link&lt;/code&gt; 에 의해 로컬 노드에 생성 된 프로세스 는 이러한 가비지 수집 설정을 사용합니다. &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 기본 설정을 변경할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; 는 기본 설정을 사용하지 않는 프로세스를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0dc9856d46bf6a12f54a618c6625b0ec80a8b5df" translate="yes" xml:space="preserve">
          <source>Returns a list in which all the sublists of &lt;code&gt;ListOfLists&lt;/code&gt; have been appended.</source>
          <target state="translated">&lt;code&gt;ListOfLists&lt;/code&gt; 의 모든 하위 목록 이 추가 된 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="88c6630a9f871d489e61eaad0e38eee679856290" translate="yes" xml:space="preserve">
          <source>Returns a list of 2-tuples containing interface names and the interface addresses. &lt;code&gt;Ifname&lt;/code&gt; is a Unicode string. &lt;code&gt;Hwaddr&lt;/code&gt; is hardware dependent, for example, on Ethernet interfaces it is the 6-byte Ethernet address (MAC address (EUI-48 address)).</source>
          <target state="translated">인터페이스 이름과 인터페이스 주소가 포함 된 2 개의 튜플 목록을 반환합니다. &lt;code&gt;Ifname&lt;/code&gt; 이 유니 코드 문자열입니다. &lt;code&gt;Hwaddr&lt;/code&gt; 은 하드웨어에 의존합니다. 예를 들어 이더넷 인터페이스는 6 바이트 이더넷 주소 (MAC 주소 (EUI-48 주소))입니다.</target>
        </trans-unit>
        <trans-unit id="ebf373b527439e02840e534e7c1a7a311062cb55" translate="yes" xml:space="preserve">
          <source>Returns a list of 2-tuples containing interface names and the interfaces' addresses. &lt;code&gt;Ifname&lt;/code&gt; is a Unicode string and &lt;code&gt;Ifopts&lt;/code&gt; is a list of interface address description tuples.</source>
          <target state="translated">인터페이스 이름과 인터페이스 주소가 포함 된 2- 튜플 목록을 반환합니다. &lt;code&gt;Ifname&lt;/code&gt; 은 유니 코드 문자열이고 &lt;code&gt;Ifopts&lt;/code&gt; 는 인터페이스 주소 설명 튜플 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3f71c4452a368c45d083def80d770a73c29034a6" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#components&quot;&gt;connected components.&lt;/a&gt;&lt;/code&gt;. Each component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Each vertex of digraph &lt;code&gt;Digraph&lt;/code&gt; occurs in exactly one component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#components&quot;&gt;connected components.&lt;/a&gt;&lt;/code&gt; 목록을 리턴합니다 . . 각 구성 요소는 정점으로 표시됩니다. 꼭짓점의 순서와 구성 요소의 순서는 임의적입니다. &lt;code&gt;Digraph&lt;/code&gt; 의 각 정점은 정확히 하나의 구성 요소에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5da3e3b8a94bc791abc816f9346bcad6a1eea10d" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Each vertex of digraph &lt;code&gt;Digraph&lt;/code&gt; occurs in exactly one strong component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 의 목록을 반환합니다 . 각 강력한 구성 요소는 정점으로 표시됩니다. 꼭짓점의 순서와 구성 요소의 순서는 임의적입니다. &lt;code&gt;Digraph&lt;/code&gt; 의 각 정점은 정확히 하나의 강력한 구성 요소에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7830daab6d27f2c0100a7114c6a0f76f768e6fe0" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Only vertices that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; are returned, otherwise the returned list is equal to that returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 의 목록을 반환합니다 . 각 강력한 구성 요소는 해당 정점으로 표시됩니다. 정점의 순서와 구성 요소의 순서는 임의적입니다. &lt;code&gt;Digraph&lt;/code&gt; 의 일부 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 에 포함 된 정점 만 반환됩니다. 그렇지 않으면 반환 된 목록은 &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt; 이 반환 한 목록과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7bb091d4a5b810b53a23fa41c17a3361cbf0d2a3" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Only vertices that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; are returned, otherwise the returned list is equal to that returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; 의 목록을 반환합니다 . 각 강력한 구성 요소는 정점으로 표시됩니다. 꼭짓점의 순서와 구성 요소의 순서는 임의적입니다. &lt;code&gt;Digraph&lt;/code&gt; 의 일부 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 에 포함 된 정점 만 반환되며, 그렇지 않으면 반환 된 목록은 &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt; 에 의해 반환 된 정점 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4127df4a91b808c5b3def539a088b05fee89d307" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt; 목록을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="43db1c1c48f50e3b1d845fdbf19f66279ce2566f" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Pid&lt;/code&gt;s when multi-scheduling is blocked, otherwise the empty list is returned. The &lt;code&gt;Pid&lt;/code&gt;s in the list represent all the processes currently blocking multi-scheduling. A &lt;code&gt;Pid&lt;/code&gt; occurs only once in the list, even if the corresponding process has blocked multiple times.</source>
          <target state="translated">다중 예약이 차단 된 경우 &lt;code&gt;Pid&lt;/code&gt; 목록을 반환하고 , 그렇지 않으면 빈 목록이 반환됩니다. 목록 의 &lt;code&gt;Pid&lt;/code&gt; 는 현재 다중 예약을 차단하는 모든 프로세스를 나타냅니다. &lt;code&gt;Pid&lt;/code&gt; 해당 프로세스를 여러 번 차단 된 경우에도, 단지리스트에 한 번만 발생한다.</target>
        </trans-unit>
        <trans-unit id="154f96716f8d883305d6304a997283ae6ee27289" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Pid&lt;/code&gt;s when normal multi-scheduling is blocked (that is, all normal schedulers but one is blocked), otherwise the empty list is returned. The &lt;code&gt;Pid&lt;/code&gt;s in the list represent all the processes currently blocking normal multi-scheduling. A &lt;code&gt;Pid&lt;/code&gt; occurs only once in the list, even if the corresponding process has blocked multiple times.</source>
          <target state="translated">일반 다중 예약이 차단 된 경우 (즉, 모든 일반 스케줄러는 하나이지만 차단 된 경우) &lt;code&gt;Pid&lt;/code&gt; 목록을 반환하고 , 그렇지 않으면 빈 목록이 반환됩니다. 목록 의 &lt;code&gt;Pid&lt;/code&gt; 는 현재 일반적인 다중 예약을 차단하는 모든 프로세스를 나타냅니다. &lt;code&gt;Pid&lt;/code&gt; 해당 프로세스를 여러 번 차단 된 경우에도, 단지리스트에 한 번만 발생한다.</target>
        </trans-unit>
        <trans-unit id="57e2dcc16a9b139c21ab18285d7e2ad903ce02a4" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{AttributeName,ValueList}&lt;/code&gt; tuples, where &lt;code&gt;AttributeName&lt;/code&gt; is the name of an attribute, and &lt;code&gt;ValueList&lt;/code&gt; is a list of values. Notice that a given attribute can occur more than once in the list with different values if the attribute occurs more than once in the module.</source>
          <target state="translated">&lt;code&gt;{AttributeName,ValueList}&lt;/code&gt; 튜플 의 목록을 리턴합니다 . 여기서 &lt;code&gt;AttributeName&lt;/code&gt; 은 속성 의 이름이고 &lt;code&gt;ValueList&lt;/code&gt; 는 값의 목록입니다. 모듈에서 속성이 두 번 이상 발생하면 주어진 속성이 다른 값으로 목록에서 두 번 이상 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c14a6a2c4cce24bfa7ca2ac6c1f8be3f5f25833" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all NIF functions in the module.</source>
          <target state="translated">모듈의 모든 NIF 함수가있는 &lt;code&gt;{Name,Arity}&lt;/code&gt; 튜플 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="6b2922594297df0088f8700eeedfe6096fa503c2" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all exported functions in the module.</source>
          <target state="translated">모듈에서 내 보낸 모든 함수와 함께 &lt;code&gt;{Name,Arity}&lt;/code&gt; 튜플 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="e8b319b6b888df687485f890d43db6f44b6c4655" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all functions in the module.</source>
          <target state="translated">모듈의 모든 함수가 포함 된 &lt;code&gt;{Name,Arity}&lt;/code&gt; 튜플 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3a7e353b4a88ab38667580701bd694c35c95dbe2" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Tag, Value}&lt;/code&gt; pairs describing digraph &lt;code&gt;G&lt;/code&gt;. The following pairs are returned:</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 를 설명하는 &lt;code&gt;{Tag, Value}&lt;/code&gt; 쌍 의 목록을 리턴합니다 . 다음 쌍이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9c8458d8410a1d0968559a8e0e00b23d4b3ae912" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Tag, Value}&lt;/code&gt; pairs describing the log. If a disk log process is running on the current node, that log is used as source of information, otherwise an individual distributed log on some other node is chosen, if such a log exists.</source>
          <target state="translated">로그를 설명하는 &lt;code&gt;{Tag, Value}&lt;/code&gt; 쌍 의 목록을 리턴합니다 . 디스크 로그 프로세스가 현재 노드에서 실행중인 경우 해당 로그는 정보 소스로 사용되며, 그렇지 않으면 해당 로그가 존재하는 경우 다른 노드의 개별 분산 로그가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="7bd349713934525fe537ce0807b710e8b7395e7a" translate="yes" xml:space="preserve">
          <source>Returns a list of Erlang modules that are preloaded in the system. As all loading of code is done through the file system, the file system must have been loaded previously. Hence, at least the module &lt;code&gt;init&lt;/code&gt; must be preloaded.</source>
          <target state="translated">시스템에 사전로드 된 Erlang 모듈 목록을 리턴합니다. 모든 코드로드가 파일 시스템을 통해 수행되므로 파일 시스템이 이전에로드되어 있어야합니다. 따라서 최소한 모듈 &lt;code&gt;init&lt;/code&gt; 를 미리로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="5fcc0d5751c8ec2b6c807390bfa62c34d0b34a75" translate="yes" xml:space="preserve">
          <source>Returns a list of all &lt;code&gt;&lt;a href=&quot;#in_neighbour&quot;&gt;in-neighbors&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">di 그래프 &lt;code&gt;G&lt;/code&gt; 의 &lt;code&gt;V&lt;/code&gt; 의 모든 &lt;code&gt;&lt;a href=&quot;#in_neighbour&quot;&gt;in-neighbors&lt;/a&gt;&lt;/code&gt; 의 목록을 지정되지 않은 순서로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="043c23901cc97ae91b903f980aa30af0b56c3809" translate="yes" xml:space="preserve">
          <source>Returns a list of all &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">di 그래프 &lt;code&gt;G&lt;/code&gt; 의 &lt;code&gt;V&lt;/code&gt; 의 모든 &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; 에 대한 목록을 지정되지 않은 순서로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3df935727cfbfaa9dbe4fe6d8b3b3167c3639cce" translate="yes" xml:space="preserve">
          <source>Returns a list of all IP addresses for &lt;code&gt;Host&lt;/code&gt;. &lt;code&gt;Host&lt;/code&gt; can be an IP address, a single hostname, or a fully qualified hostname.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; 의 모든 IP 주소 목록을 리턴합니다 . &lt;code&gt;Host&lt;/code&gt; 는 IP 주소, 단일 호스트 이름 또는 정규화 된 호스트 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d4364925c788f26b54afc37d6c0865635b11a49" translate="yes" xml:space="preserve">
          <source>Returns a list of all active alarms. This function can only be used when the simple handler is installed.</source>
          <target state="translated">모든 활성 알람 목록을 반환합니다. 이 함수는 단순 핸들러가 설치된 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d83a528f29c34ba116c40292488d3eb70934fc5" translate="yes" xml:space="preserve">
          <source>Returns a list of all address/port number pairs for the other end of an association &lt;code&gt;Assoc&lt;/code&gt; of a socket.</source>
          <target state="translated">소켓 의 연관 &lt;code&gt;Assoc&lt;/code&gt; 의 다른 쪽 끝에 대한 모든 주소 / 포트 번호 쌍의 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="37943fcff62e0b1a782163b5ddfe2a958601aa47" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 &lt;code&gt;V&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 모든 가장자리의 목록을 지정되지 않은 순서로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="79b7f5719a792534470074c560a0cb7fc9e9570b" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from or &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on&lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">반환 모든 모서리의 목록 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 이나 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;V&lt;/code&gt; 소리를 나타내는 두 글자의 &lt;code&gt;G&lt;/code&gt; 일부 지정되지 않은 위해.</target>
        </trans-unit>
        <trans-unit id="c80e5a2a56fe621893eae2a06e29a521a972cdfb" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 &lt;code&gt;V&lt;/code&gt; 에 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 하는 모든 모서리의 목록을 지정되지 않은 순서로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="afb64be0e307b3b5bc1ec0959a00f18029bbf9d8" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 모든 모서리 목록을 지정되지 않은 순서로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4f6c580e74f8d38922556a969626a716e24d2e9c" translate="yes" xml:space="preserve">
          <source>Returns a list of all environment variables. Each environment variable is expressed as a single string on the format &lt;code&gt;&quot;VarName=Value&quot;&lt;/code&gt;, where &lt;code&gt;VarName&lt;/code&gt; is the name of the variable and &lt;code&gt;Value&lt;/code&gt; its value.</source>
          <target state="translated">모든 환경 변수의 목록을 반환합니다. 각 환경 변수는 &lt;code&gt;&quot;VarName=Value&quot;&lt;/code&gt; 형식의 단일 문자열로 표시됩니다. 여기서 &lt;code&gt;VarName&lt;/code&gt; 은 변수의 이름이고 &lt;code&gt;Value&lt;/code&gt; 은 Value입니다.</target>
        </trans-unit>
        <trans-unit id="93bb4adf157b71ca6bc6a0759803fd92769762c4" translate="yes" xml:space="preserve">
          <source>Returns a list of all event handlers installed in event manager &lt;code&gt;EventMgrRef&lt;/code&gt;.</source>
          <target state="translated">이벤트 관리자 &lt;code&gt;EventMgrRef&lt;/code&gt; 에 설치된 모든 이벤트 핸들러 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="bfc121aace29701e3baf969570fb127fefcfdc82" translate="yes" xml:space="preserve">
          <source>Returns a list of all files that match Unix-style wildcard string &lt;code&gt;Wildcard&lt;/code&gt;.</source>
          <target state="translated">Unix 스타일 와일드 카드 문자열 &lt;code&gt;Wildcard&lt;/code&gt; 와 일치하는 모든 파일 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1c048986eb5b99b6c3d0fc28ecf9a6ff624ad3a2" translate="yes" xml:space="preserve">
          <source>Returns a list of all globally registered names.</source>
          <target state="translated">전체적으로 등록 된 모든 이름의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f176de7fca84aced2753bbfc571727dfc4f35880" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in a dictionary.</source>
          <target state="translated">사전의 모든 키 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dbfd81800b50649a258f5c18a61bd115d191a1df" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">사전 &lt;code&gt;Dict&lt;/code&gt; 의 모든 키 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f08a08cb5c1a882b71dd053c742aed473cc6546e" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in the table named &lt;code&gt;Tab&lt;/code&gt;. The semantics of this function is context-sensitive. For more information, see &lt;code&gt;mnesia:activity/4&lt;/code&gt;. In transaction-context, it acquires a read lock on the entire table.</source>
          <target state="translated">이름이 &lt;code&gt;Tab&lt;/code&gt; 인 테이블의 모든 키 목록을 리턴합니다 . 이 함수의 의미는 상황에 따라 다릅니다. 자세한 정보는 &lt;code&gt;mnesia:activity/4&lt;/code&gt; 를 참조하십시오 . 트랜잭션 컨텍스트에서 전체 테이블에 대한 읽기 잠금을 획득합니다.</target>
        </trans-unit>
        <trans-unit id="9c7359dd742e1537d1d169581241e507e45c3cce" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys present in the process dictionary, for example:</source>
          <target state="translated">프로세스 사전에있는 모든 키 목록을 리턴합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="0ddf4b4375a459efbcdfa794fcf649485ac5a147" translate="yes" xml:space="preserve">
          <source>Returns a list of all known groups.</source>
          <target state="translated">알려진 모든 그룹의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e0835d3c0b4cf9bd9fe6cf1fd1e7ad062324491" translate="yes" xml:space="preserve">
          <source>Returns a list of all loaded Erlang modules (current and old code), including preloaded modules.</source>
          <target state="translated">사전로드 된 모듈을 포함하여로드 된 모든 Erlang 모듈 (현재 및 이전 코드)의 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bc60b62ebdbd773ca0309f6910be322957761556" translate="yes" xml:space="preserve">
          <source>Returns a list of all local address/port number pairs for a socket for the specified association &lt;code&gt;Assoc&lt;/code&gt;.</source>
          <target state="translated">지정된 연관 &lt;code&gt;Assoc&lt;/code&gt; 의 소켓에 대한 모든 로컬 주소 / 포트 번호 쌍의 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f7dc4c061c3850d7a7870035dc4e94ffd8613672" translate="yes" xml:space="preserve">
          <source>Returns a list of all names that are globally registered on the specified node or in the specified global group.</source>
          <target state="translated">지정된 노드 또는 지정된 글로벌 그룹에 글로벌로 등록 된 모든 이름 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7c4b4b8c36675bc126068e2a2c1e6ccc9e4261a4" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 의 모든 객체 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="77725aebb2ef339e70937be0c2051678c8c054b9" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects of table &lt;code&gt;Name&lt;/code&gt; that match &lt;code&gt;Pattern&lt;/code&gt; in some unspecified order. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정되지 않은 순서로 &lt;code&gt;Pattern&lt;/code&gt; 과 일치하는 &lt;code&gt;Name&lt;/code&gt; 테이블의 모든 오브젝트 목록을 리턴합니다 . 패턴에 대한 설명은 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="61b95f655be17ae15f0b44ab3ad6122729a20e75" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 에서 &lt;code&gt;Key&lt;/code&gt; 키가 있는 모든 객체의 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9e9f0ec7ff458179b38463bf9a04f77d97419d78" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects with key &lt;code&gt;Key&lt;/code&gt; stored in table &lt;code&gt;Name&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 테이블에 &lt;code&gt;Key&lt;/code&gt; 키가 저장된 모든 객체의 목록을 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cdac43702f2aba415f5052450dbc118b75446ea1" translate="yes" xml:space="preserve">
          <source>Returns a list of all ports on the current node.</source>
          <target state="translated">현재 노드의 모든 포트 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9ce0c3313c9bf3a0c7bebd454ff56690ad0719ea" translate="yes" xml:space="preserve">
          <source>Returns a list of all possible engine methods.</source>
          <target state="translated">가능한 모든 엔진 메소드 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d461c7d4a5aeb9cb83b612fcaae8d8717f453ddd" translate="yes" xml:space="preserve">
          <source>Returns a list of all processes having monitors for &lt;code&gt;loading&lt;/code&gt; active. Each process is returned as &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; is the number of monitors held by process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;loading&lt;/code&gt; 중인 모니터가있는 모든 프로세스 목록을 리턴합니다 . 각 프로세스는 &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; 으로 리턴됩니다 . 여기서 &lt;code&gt;integer()&lt;/code&gt; 는 프로세스 &lt;code&gt;pid()&lt;/code&gt; 보유한 모니터 수입니다 .</target>
        </trans-unit>
        <trans-unit id="c5345d61c82791c015c56220a450122dd678a7ef" translate="yes" xml:space="preserve">
          <source>Returns a list of all processes having monitors for &lt;code&gt;unloading&lt;/code&gt; active. Each process is returned as &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; is the number of monitors held by process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unloading&lt;/code&gt; 활성 모니터가있는 모든 프로세스 목록을 리턴합니다 . 각 프로세스는 &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; 으로 리턴됩니다 . 여기서 &lt;code&gt;integer()&lt;/code&gt; 는 프로세스 &lt;code&gt;pid()&lt;/code&gt; 보유한 모니터 수입니다 .</target>
        </trans-unit>
        <trans-unit id="abe65c790dcbeea723ecc962b888487ba04d86b4" translate="yes" xml:space="preserve">
          <source>Returns a list of all sockets, according to the filter rule.</source>
          <target state="translated">필터 규칙에 따라 모든 소켓 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f2294ec3b3e05bf49af504df2b909e6ec87a16f" translate="yes" xml:space="preserve">
          <source>Returns a list of all successful &lt;code&gt;set&lt;/code&gt; requests performed in the test case in reverse order. The list contains the involved user and agent, the value before &lt;code&gt;set&lt;/code&gt;, and the new value. This is intended to simplify the cleanup in function &lt;code&gt;end_per_testcase&lt;/code&gt;, that is, the undoing of the &lt;code&gt;set&lt;/code&gt; requests and their possible side-effects.</source>
          <target state="translated">테스트 케이스에서 수행 된 모든 성공적인 &lt;code&gt;set&lt;/code&gt; 요청 목록을 역순 으로 리턴합니다 . 목록에는 관련 사용자 및 에이전트, &lt;code&gt;set&lt;/code&gt; 전의 값 및 새 값이 포함됩니다. 이는 &lt;code&gt;end_per_testcase&lt;/code&gt; 함수의 정리 , 즉 &lt;code&gt;set&lt;/code&gt; 요청 실행 취소 및 가능한 부작용 을 단순화하기위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4893fd8a8ef2169d1d6f4f55a02db2ef6c7f3316" translate="yes" xml:space="preserve">
          <source>Returns a list of all tables at the node. Named tables are specified by their names, unnamed tables are specified by their table identifiers.</source>
          <target state="translated">노드의 모든 테이블 목록을 리턴합니다. 명명 된 테이블은 이름으로 지정되고 명명되지 않은 테이블은 테이블 식별자로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="c2d2dc02f513e298b4c0d0d92dca6fc6174c6f9e" translate="yes" xml:space="preserve">
          <source>Returns a list of all test cases and groups in the suite. (Mandatory)</source>
          <target state="translated">제품군의 모든 테스트 사례 및 그룹 목록을 반환합니다. (필수)</target>
        </trans-unit>
        <trans-unit id="33270f7a4986636484eca555ab46e461893a130c" translate="yes" xml:space="preserve">
          <source>Returns a list of all the available drivers, both (statically) linked-in and dynamically loaded ones.</source>
          <target state="translated">(정적으로) 링크 된 드라이버와 동적으로로드 된 드라이버 모두 사용 가능한 모든 드라이버 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="04759c11fd73a2efcf88a70d3422834e9b011fc0" translate="yes" xml:space="preserve">
          <source>Returns a list of all vertices of &lt;code&gt;Digraph&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">일부 &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; 포함 된 &lt;code&gt;Digraph&lt;/code&gt; 의 모든 정점 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a19d9681e5c717524ff61fdfef23656f87179012" translate="yes" xml:space="preserve">
          <source>Returns a list of all vertices of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 모든 정점 목록을 지정되지 않은 순서로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="968406049a111afaf72af0af1f8bb8eb78c42ecf" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes in the system, except the local node. Same as &lt;code&gt;nodes(visible)&lt;/code&gt;.</source>
          <target state="translated">로컬 노드를 제외하고 시스템에서 보이는 모든 노드 목록을 리턴합니다. &lt;code&gt;nodes(visible)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="dc6bc0e391071c484061d628d178cbff3e152018" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes this node is connected to.</source>
          <target state="translated">이 노드가 연결된 모든 보이는 노드의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6db93870b8f3066ae79078f67e4e6860484e238d" translate="yes" xml:space="preserve">
          <source>Returns a list of applications called by some of the given applications.</source>
          <target state="translated">주어진 응용 프로그램 중 일부가 호출 한 응용 프로그램 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="10994056e2c405c8e5f465fd8e9053e5ebab6b28" translate="yes" xml:space="preserve">
          <source>Returns a list of applications that use some of the given applications.</source>
          <target state="translated">주어진 응용 프로그램 중 일부를 사용하는 응용 프로그램 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b24886dbf7496049f4ecd273365791488f0278d5" translate="yes" xml:space="preserve">
          <source>Returns a list of atoms indicating what kind of traces is enabled for the process. The list is empty if no traces are enabled, and one or more of the followings atoms if traces are enabled: &lt;code&gt;send&lt;/code&gt;, &lt;code&gt;'receive'&lt;/code&gt;, &lt;code&gt;set_on_spawn&lt;/code&gt;, &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;return_to&lt;/code&gt;, &lt;code&gt;procs&lt;/code&gt;, &lt;code&gt;ports&lt;/code&gt;, &lt;code&gt;set_on_first_spawn&lt;/code&gt;, &lt;code&gt;set_on_link&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;running_procs&lt;/code&gt;, &lt;code&gt;running_ports&lt;/code&gt;, &lt;code&gt;silent&lt;/code&gt;, &lt;code&gt;exiting&lt;/code&gt;, &lt;code&gt;monotonic_timestamp&lt;/code&gt;, &lt;code&gt;strict_monotonic_timestamp&lt;/code&gt;, &lt;code&gt;garbage_collection&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;, and &lt;code&gt;arity&lt;/code&gt;. The order is arbitrary.</source>
          <target state="translated">프로세스에 사용할 수있는 추적 종류를 나타내는 원자 목록을 반환합니다. 추적이 사용 가능하지 않으면 목록이 비어 있고 추적이 사용 가능한 경우 다음 원자 중 하나 이상 : &lt;code&gt;send&lt;/code&gt; , &lt;code&gt;'receive'&lt;/code&gt; , &lt;code&gt;set_on_spawn&lt;/code&gt; , &lt;code&gt;call&lt;/code&gt; , &lt;code&gt;return_to&lt;/code&gt; , &lt;code&gt;procs&lt;/code&gt; , &lt;code&gt;ports&lt;/code&gt; , &lt;code&gt;set_on_first_spawn&lt;/code&gt; , &lt;code&gt;set_on_link&lt;/code&gt; , &lt;code&gt;running&lt;/code&gt; , &lt;code&gt;running_procs&lt;/code&gt; , &lt;code&gt;running_ports&lt;/code&gt; , &lt;code&gt;silent&lt;/code&gt; , &lt;code&gt;exiting&lt;/code&gt; , &lt;code&gt;monotonic_timestamp&lt;/code&gt; , &lt;code&gt;strict_monotonic_timestamp&lt;/code&gt; , &lt;code&gt;garbage_collection&lt;/code&gt; , &lt;code&gt;timestamp&lt;/code&gt; 및 &lt;code&gt;arity&lt;/code&gt; . 순서는 임의적입니다.</target>
        </trans-unit>
        <trans-unit id="12e497843e2a7289d6149d4e08100bac66c03d7a" translate="yes" xml:space="preserve">
          <source>Returns a list of available service names.</source>
          <target state="translated">사용 가능한 서비스 이름 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="50bb031da4375f328785a9048fd32bb0339becaa" translate="yes" xml:space="preserve">
          <source>Returns a list of calls to &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt; 대한 호출 목록을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4c0809ad5fe91f2a1540f8726031c3435a2d31f1" translate="yes" xml:space="preserve">
          <source>Returns a list of characters that represents &lt;code&gt;Term&lt;/code&gt;, but breaks representations longer than one line into many lines and indents each line sensibly. Also tries to detect and output lists of printable characters as strings.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 을 나타내는 문자 목록을 리턴 하지만 한 행보다 긴 표현을 여러 행으로 나누고 각 행을 현명하게 들여 쓰기합니다. 또한 인쇄 가능한 문자 목록을 감지하여 문자열로 출력하려고합니다.</target>
        </trans-unit>
        <trans-unit id="3f286e9902703d63cef30e1a2fa893cd5ecb0acf" translate="yes" xml:space="preserve">
          <source>Returns a list of currently running services where each service is described by an &lt;code&gt;[{Option, Value}]&lt;/code&gt; list. The information in the list is specific for each service and each service has probably its own info function that gives more details about the service.</source>
          <target state="translated">각 서비스가 &lt;code&gt;[{Option, Value}]&lt;/code&gt; 목록으로 설명되는 현재 실행중인 서비스 목록을 리턴 합니다. 목록의 정보는 각 서비스마다 다르며 각 서비스에는 서비스에 대한 자세한 정보를 제공하는 자체 정보 기능이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="084662247fef910681b6171e1663f68995c7859d" translate="yes" xml:space="preserve">
          <source>Returns a list of currently running services.</source>
          <target state="translated">현재 실행중인 서비스 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ba31ab287b1e147cd88d32b205f4a36f704479d7" translate="yes" xml:space="preserve">
          <source>Returns a list of exported functions that have not been externally used.</source>
          <target state="translated">외부에서 사용되지 않은 내 보낸 함수 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4b154549626a7bcacfd686a92d0fda2a611b70ac" translate="yes" xml:space="preserve">
          <source>Returns a list of external calls to &lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt; 대한 외부 호출 목록을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="32517d5c2af586191b5173533650bebc1bffbbb4" translate="yes" xml:space="preserve">
          <source>Returns a list of external calls to deprecated functions. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_version&lt;/code&gt;, calls to functions to be removed in next version are returned. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_major_release&lt;/code&gt;, calls to functions to be removed in next major release are returned as well as calls to functions to be removed in next version. Finally, if &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;eventually&lt;/code&gt;, all calls to functions to be removed are returned, including calls to functions to be removed in next version or next major release.</source>
          <target state="translated">더 이상 사용되지 않는 함수에 대한 외부 호출 목록을 반환합니다. 경우 &lt;code&gt;DeprFlag&lt;/code&gt; 이 동일 &lt;code&gt;next_version&lt;/code&gt; , 함수 호출은 다음 버전에서 제거 될 반환됩니다. 경우 &lt;code&gt;DeprFlag&lt;/code&gt; 가 같음 &lt;code&gt;next_major_release&lt;/code&gt; , 함수 호출은 다음 주요 릴리스에서 제거 될뿐만 아니라 함수에 대한 호출은 다음 버전에서 제거 될 반환됩니다. 마지막으로, 만약 &lt;code&gt;DeprFlag&lt;/code&gt; 이 동일 &lt;code&gt;eventually&lt;/code&gt; , 함수에 대한 모든 호출은 다음 버전 또는 다음 주요 릴리스에서 제거 될 함수에 대한 호출을 포함, 반환 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb673ae3720fac80ec1a135aecc694cd458f7261" translate="yes" xml:space="preserve">
          <source>Returns a list of externally used deprecated functions.</source>
          <target state="translated">더 이상 사용되지 않는 외부 함수의 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a9829544e62bb9dedc591edb94c882610ca2e43c" translate="yes" xml:space="preserve">
          <source>Returns a list of externally used deprecated functions. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_version&lt;/code&gt;, functions to be removed in next version are returned. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_major_release&lt;/code&gt;, functions to be removed in next major release are returned as well as functions to be removed in next version. Finally, if &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;eventually&lt;/code&gt;, all functions to be removed are returned, including functions to be removed in next version or next major release.</source>
          <target state="translated">더 이상 사용되지 않는 외부 함수의 목록을 리턴합니다. 경우 &lt;code&gt;DeprFlag&lt;/code&gt; 이 동일 &lt;code&gt;next_version&lt;/code&gt; , 기능은 다음 버전에서 제거 될 반환됩니다. 경우 &lt;code&gt;DeprFlag&lt;/code&gt; 가 같음 &lt;code&gt;next_major_release&lt;/code&gt; 기능은 다음 버전에서 제거 될로서, 기능 다음 주요 릴리스에서 제거 될뿐만 아니라 반환됩니다. 마지막으로, 만약 &lt;code&gt;DeprFlag&lt;/code&gt; 이 동일 &lt;code&gt;eventually&lt;/code&gt; , 모든 기능은 다음 버전이나 다음 주요 릴리스에서 제거 될 수있는 기능을 포함, 반환 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c16ec69948faef553061062962df2e83f4ce4cd" translate="yes" xml:space="preserve">
          <source>Returns a list of files in long format.</source>
          <target state="translated">긴 형식의 파일 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ad21696ddddea063cd554ceacb160c5db7ba23b" translate="yes" xml:space="preserve">
          <source>Returns a list of files in short format.</source>
          <target state="translated">짧은 형식의 파일 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d3dd0806ea9ad3800be3094d001dfa65b812370a" translate="yes" xml:space="preserve">
          <source>Returns a list of functions called by some of the given functions.</source>
          <target state="translated">주어진 함수 중 일부에서 호출 한 함수 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ee8897dbc8e22eb3180fb6c0ce972395a85f76d2" translate="yes" xml:space="preserve">
          <source>Returns a list of functions that use some of the given functions.</source>
          <target state="translated">주어진 함수 중 일부를 사용하는 함수 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26a8e4aa5621032974d108ad8918b510b464aa66" translate="yes" xml:space="preserve">
          <source>Returns a list of indexed positions, a list of positive integers.</source>
          <target state="translated">양의 정수 목록 인 색인화 된 위치 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="868d7068f2695229a97a1b37ac88365741c71aac" translate="yes" xml:space="preserve">
          <source>Returns a list of integers corresponding to the bytes of &lt;code&gt;Binary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Binary&lt;/code&gt; 바이트에 해당하는 정수 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="baae318f95ec782dfe99b7a1cf39b3d469a5c78e" translate="yes" xml:space="preserve">
          <source>Returns a list of integers corresponding to the bytes of &lt;code&gt;Bitstring&lt;/code&gt;. If the number of bits in the binary is not divisible by 8, the last element of the list is a bitstring containing the remaining 1-7 bits.</source>
          <target state="translated">&lt;code&gt;Bitstring&lt;/code&gt; 의 바이트에 해당하는 정수 목록을 반환합니다 . 이진의 비트 수를 8로 나눌 수없는 경우 목록의 마지막 요소는 나머지 1-7 비트를 포함하는 비트 열입니다.</target>
        </trans-unit>
        <trans-unit id="ced9ad7b31c06a6c357f5d995afcc3deb5960aa4" translate="yes" xml:space="preserve">
          <source>Returns a list of integers in the range 0..255, or a binary, depending on the port driver. The meaning of the returned data also depends on the port driver.</source>
          <target state="translated">포트 드라이버에 따라 0..255 범위의 정수 목록 또는 2 진을 리턴합니다. 리턴 된 데이터의 의미는 포트 드라이버에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5018802cea03ded6891e038bbc7786e5b9387b8c" translate="yes" xml:space="preserve">
          <source>Returns a list of integers representing valid heap sizes in words. All Erlang heaps are sized from sizes in this list.</source>
          <target state="translated">유효한 힙 크기를 나타내는 정수 목록을 단어로 반환합니다. 모든 Erlang 힙은이 목록의 크기를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="f978eb2ced8d417db74ad6af6bd33be8bc6aa176" translate="yes" xml:space="preserve">
          <source>Returns a list of keys that are associated with the value &lt;code&gt;Val&lt;/code&gt; in the process dictionary, for example:</source>
          <target state="translated">프로세스 사전에서 값 &lt;code&gt;Val&lt;/code&gt; 과 연관된 키 목록을 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7faa822a6ccc19ae1a6a32d0f46c76580445242c" translate="yes" xml:space="preserve">
          <source>Returns a list of lexemes in &lt;code&gt;String&lt;/code&gt;, separated by the grapheme clusters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SeparatorList&lt;/code&gt; 의 grapheme 클러스터로 구분 된, &lt;code&gt;String&lt;/code&gt; 로 된 lexemes리스트를 돌려 줍니다.</target>
        </trans-unit>
        <trans-unit id="5419e387478cd2d333fc79c3e503148c404842de" translate="yes" xml:space="preserve">
          <source>Returns a list of local functions that have not been locally used.</source>
          <target state="translated">로컬로 사용되지 않은 로컬 함수 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1d6be377cd2458111bc4b6fbb2cfb9a9a74a47a2" translate="yes" xml:space="preserve">
          <source>Returns a list of microstate statistics values where the values for all threads of the same type has been merged.</source>
          <target state="translated">동일한 유형의 모든 스레드 값이 병합 된 마이크로 스테이트 통계 값 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0550afac88eb9a8eb0f14a24706b5af098091401" translate="yes" xml:space="preserve">
          <source>Returns a list of modules called by some of the given modules.</source>
          <target state="translated">주어진 모듈 중 일부가 호출 한 모듈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ceeb9c9c5730d6ab87639534f5ecb8c3b0a22d2b" translate="yes" xml:space="preserve">
          <source>Returns a list of modules that use some of the given modules.</source>
          <target state="translated">주어진 모듈 중 일부를 사용하는 모듈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b235467d6709bd8ccc2013fa5aef97d39f0b8d33" translate="yes" xml:space="preserve">
          <source>Returns a list of names that have been registered using &lt;code&gt;&lt;a href=&quot;#register-2&quot;&gt;register/2&lt;/a&gt;&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#register-2&quot;&gt;register/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 등록 된 이름 목록을 리턴합니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="13999dba88f2eb6f5cb139d0fb966e1648bf423e" translate="yes" xml:space="preserve">
          <source>Returns a list of names that have been registered using &lt;code&gt;register/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;register/2&lt;/code&gt; 를 사용하여 등록 된 이름 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ce492879a7ba84da48427363485db5d4a629cff8" translate="yes" xml:space="preserve">
          <source>Returns a list of nodes according to the argument specified. The returned result, when the argument is a list, is the list of nodes satisfying the disjunction(s) of the list elements.</source>
          <target state="translated">지정된 인수에 따라 노드 목록을 리턴합니다. 인수가리스트 일 때 리턴되는 결과는리스트 요소의 분리를 만족시키는 노드리스트입니다.</target>
        </trans-unit>
        <trans-unit id="c71362b22874ada3dd5fa0eba4f3ee91278af3eb" translate="yes" xml:space="preserve">
          <source>Returns a list of objects stored in a table. The exact representation of the returned objects is not public. The lists of data can be used for initializing a table by specifying value &lt;code&gt;bchunk&lt;/code&gt; to option &lt;code&gt;format&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; The Mnesia application uses this function for copying open tables.</source>
          <target state="translated">테이블에 저장된 객체 목록을 반환합니다. 반환 된 객체의 정확한 표현은 공개되지 않습니다. &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; 함수의 옵션 &lt;code&gt;format&lt;/code&gt; 에 값 &lt;code&gt;bchunk&lt;/code&gt; 를 지정하여 데이터 목록을 사용하여 테이블을 초기화 할 수 있습니다 . Mnesia 응용 프로그램은이 기능을 사용하여 열린 테이블을 복사합니다.</target>
        </trans-unit>
        <trans-unit id="f9bffce89f7109e7d59ff0c80cad70c7dbe48b7e" translate="yes" xml:space="preserve">
          <source>Returns a list of pairs representing the key-value associations of &lt;code&gt;Map&lt;/code&gt;, where the pairs &lt;code&gt;[{K1,V1}, ..., {Kn,Vn}]&lt;/code&gt; are returned in arbitrary order.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 의 키-값 연관을 나타내는 쌍의 목록을 리턴합니다 . 여기서 &lt;code&gt;[{K1,V1}, ..., {Kn,Vn}]&lt;/code&gt; 쌍 은 임의의 순서로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4d1b4659cd8c9b4ba5ca06938e6a33a2961246ee" translate="yes" xml:space="preserve">
          <source>Returns a list of port identifiers corresponding to all the ports existing on the local node.</source>
          <target state="translated">로컬 노드에 존재하는 모든 포트에 해당하는 포트 식별자 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e25261255c64b6e9c6fbb04e22f777fd08abad27" translate="yes" xml:space="preserve">
          <source>Returns a list of process identifiers corresponding to all the processes currently existing on the local node.</source>
          <target state="translated">로컬 노드에 현재 존재하는 모든 프로세스에 해당하는 프로세스 식별자 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c401cc51be311fb5a9746f3141daeb53e2a93ba" translate="yes" xml:space="preserve">
          <source>Returns a list of public keys and their related attributes. Each pair of key and attribute corresponds to one entry in the authorized key file:</source>
          <target state="translated">공개 키 및 관련 속성 목록을 리턴합니다. 각 키와 속성 쌍은 권한이 부여 된 키 파일의 한 항목에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="42b7571725676b4b3e6e5209e39f9d6ca92b7621" translate="yes" xml:space="preserve">
          <source>Returns a list of public keys and their related attributes. Each pair of key and attribute corresponds to one entry in the known hosts file:</source>
          <target state="translated">공개 키 및 관련 속성 목록을 리턴합니다. 각 키와 속성 쌍은 알려진 호스트 파일의 한 항목에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="e1647f4adcdca1c6949eb846233576503cd38246" translate="yes" xml:space="preserve">
          <source>Returns a list of raw lock counter data.</source>
          <target state="translated">원시 잠금 카운터 데이터 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b77bc0fb3f7fcc8c875d7206cf9c2f37960b95e5" translate="yes" xml:space="preserve">
          <source>Returns a list of releases called by some of the given releases.</source>
          <target state="translated">특정 릴리스에서 호출 한 릴리스 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ea3c2f2fe1710d83b2fbf6c819e837ee8a69801b" translate="yes" xml:space="preserve">
          <source>Returns a list of releases that use some of the given releases.</source>
          <target state="translated">주어진 릴리스 중 일부를 사용하는 릴리스 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f31252702b155cc33d51703c9098b84fc375be34" translate="yes" xml:space="preserve">
          <source>Returns a list of subkeys to the current key. Calls the Win32 API function &lt;code&gt;EnumRegKeysEx()&lt;/code&gt;.</source>
          <target state="translated">현재 키에 대한 하위 키 목록을 반환합니다. Win32 API 함수 &lt;code&gt;EnumRegKeysEx()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="1bba8eb4a5957bfd492dc75647f6d9ed467f0159" translate="yes" xml:space="preserve">
          <source>Returns a list of supported ECCs. &lt;code&gt;eccs()&lt;/code&gt; is equivalent to calling &lt;code&gt;eccs(Protocol)&lt;/code&gt; with all supported protocols and then deduplicating the output.</source>
          <target state="translated">지원되는 ECC 목록을 반환합니다. &lt;code&gt;eccs()&lt;/code&gt; 는 지원되는 모든 &lt;code&gt;eccs(Protocol)&lt;/code&gt; 를 호출 한 다음 출력을 중복 제거하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f9e905003a43bb65664c1578be1f50b1ed0523a6" translate="yes" xml:space="preserve">
          <source>Returns a list of the current member nodes of the pool.</source>
          <target state="translated">풀의 현재 멤버 노드 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a15792d08e63403fc434652df9a1cdcdabcdc464" translate="yes" xml:space="preserve">
          <source>Returns a list of the driver options provided when loading, and any options set by the driver during initialization. The only valid option is &lt;code&gt;kill_ports&lt;/code&gt;.</source>
          <target state="translated">로드 할 때 제공되는 드라이버 옵션 목록과 초기화 중에 드라이버가 설정 한 옵션 목록을 반환합니다. 유일하게 유효한 옵션은 &lt;code&gt;kill_ports&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="850ede50334af3f9fbcfce82ce09564006479789" translate="yes" xml:space="preserve">
          <source>Returns a list of the items in the queue in the same order; the front item of the queue becomes the head of the list.</source>
          <target state="translated">대기열의 항목 목록을 동일한 순서로 반환합니다. 대기열의 전면 항목이 목록의 헤드가됩니다.</target>
        </trans-unit>
        <trans-unit id="2306838c698bb764b3b0afd24902eca91be9b23c" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all allocators using the ERTS internal &lt;code&gt;alloc_util&lt;/code&gt; framework as atoms. For more information, see section &lt;code&gt;The alloc_util framework&lt;/code&gt; in &lt;code&gt;erts_alloc(3)&lt;/code&gt;.</source>
          <target state="translated">ERTS 내부 &lt;code&gt;alloc_util&lt;/code&gt; 프레임 워크를 원자로 사용하여 모든 할당 자의 이름 목록을 리턴합니다 . 자세한 내용 은 &lt;code&gt;erts_alloc(3)&lt;/code&gt; &lt;code&gt;The alloc_util framework&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e974d731dbcb432212e482b837ca861ae8314e8" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all open tables on this node.</source>
          <target state="translated">이 노드에서 열려있는 모든 테이블의 이름 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3c151e0085c833f64177d4a6e4f6919ea6f99389" translate="yes" xml:space="preserve">
          <source>Returns a list of tokens in &lt;code&gt;String&lt;/code&gt;, separated by the characters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SeparatorList&lt;/code&gt; 의 문자로 구분 된 &lt;code&gt;String&lt;/code&gt; 의 토큰 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1ad431dba6bc6da79e0357c3dac050451502276f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{DriverName, InfoList}&lt;/code&gt;, where &lt;code&gt;InfoList&lt;/code&gt; is the result of calling &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; for that &lt;code&gt;DriverName&lt;/code&gt;. Only dynamically linked-in drivers are included in the list.</source>
          <target state="translated">튜플 &lt;code&gt;{DriverName, InfoList}&lt;/code&gt; 목록을 리턴합니다 . 여기서 &lt;code&gt;InfoList&lt;/code&gt; 는 해당 &lt;code&gt;DriverName&lt;/code&gt; 에 대해 &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; 을 호출 한 결과입니다 . 동적으로 링크 된 드라이버 만 목록에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ae8465626b9b68439f83968cce3546e43ebc9d82" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Module, Filename, Loaded}&lt;/code&gt; for all available modules. A module is considered to be available if it either is loaded or would be loaded if called. &lt;code&gt;Filename&lt;/code&gt; is normally the absolute filename, as described for &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 모든 모듈에 대한 튜플 &lt;code&gt;{Module, Filename, Loaded}&lt;/code&gt; 목록을 반환 합니다. 모듈은로드되거나 호출되면로드되는 경우 사용 가능한 것으로 간주됩니다. &lt;code&gt;Filename&lt;/code&gt; 은 일반적으로 &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt; 에 설명 된대로 절대 파일 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="d0ef20ecf553692b8e111343585a02a21206f99a" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Module, Loaded}&lt;/code&gt; for all loaded modules. &lt;code&gt;Loaded&lt;/code&gt; is normally the absolute filename, as described for &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{Module, Loaded}&lt;/code&gt; 모든 모듈에 대한 튜플 {Module, Loaded} 목록을 반환 합니다. &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt; 에 대해 설명 된 것처럼 일반적으로 &lt;code&gt;Loaded&lt;/code&gt; 는 절대 파일 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="e3c9ba179e33dcf9e2c42a043c08fa87dbfd864f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Node, ControllingEntity}&lt;/code&gt;, one entry for each connected remote node. &lt;code&gt;Node&lt;/code&gt; is the node name and &lt;code&gt;ControllingEntity&lt;/code&gt; is the port or process identifier responsible for the communication to that node. More specifically, &lt;code&gt;ControllingEntity&lt;/code&gt; for nodes connected through TCP/IP (the normal case) is the socket used in communication with the specific node.</source>
          <target state="translated">연결된 각 원격 노드에 대해 하나의 항목 인 튜플 &lt;code&gt;{Node, ControllingEntity}&lt;/code&gt; 의 목록을 리턴 합니다. &lt;code&gt;Node&lt;/code&gt; 는 노드 이름이고 &lt;code&gt;ControllingEntity&lt;/code&gt; 는 해당 노드와 의 통신을 담당하는 포트 또는 프로세스 ID입니다. 보다 구체적으로, TCP / IP (일반적인 경우)를 통해 연결된 노드의 &lt;code&gt;ControllingEntity&lt;/code&gt; 는 특정 노드와 통신하는 데 사용되는 소켓입니다.</target>
        </trans-unit>
        <trans-unit id="44e6825baa47aa89be776e805f265e60abf634a8" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Tag, Value}&lt;/code&gt;, where &lt;code&gt;Tag&lt;/code&gt; is the information item and &lt;code&gt;Value&lt;/code&gt; is the result of calling &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt; with this driver name and this tag. The result is a tuple list containing all information available about a driver.</source>
          <target state="translated">튜플 &lt;code&gt;{Tag, Value}&lt;/code&gt; 의 목록을 리턴합니다 . 여기서 &lt;code&gt;Tag&lt;/code&gt; 는 정보 항목이고 &lt;code&gt;Value&lt;/code&gt; 는 이 드라이버 이름과이 태그를 사용하여 &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt; 를 호출 한 결과입니다 . 결과는 드라이버에 대해 사용 가능한 모든 정보가 포함 된 튜플 목록입니다.</target>
        </trans-unit>
        <trans-unit id="12347dac098a5cb8dce5f290295128f3fe58fabb" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples where, for each tuple in &lt;code&gt;TupleList1&lt;/code&gt;, the &lt;code&gt;N&lt;/code&gt;th element &lt;code&gt;Term1&lt;/code&gt; of the tuple has been replaced with the result of calling &lt;code&gt;Fun(Term1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TupleList1&lt;/code&gt; 의 각 튜플에 대해 튜플 의 &lt;code&gt;N&lt;/code&gt; 번째 요소 &lt;code&gt;Term1&lt;/code&gt; 이 &lt;code&gt;Fun(Term1)&lt;/code&gt; 을 호출 한 결과로 대체 된 튜플 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0ea13b9a591517629a6950337a6fdc59bc811b5e" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with &lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt;, where &lt;code&gt;SchedulerId&lt;/code&gt; is an integer ID of the scheduler, &lt;code&gt;ActiveTime&lt;/code&gt; is the duration the scheduler has been busy, and &lt;code&gt;TotalTime&lt;/code&gt; is the total time duration since &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; activation for the specific scheduler. Note that activation time can differ significantly between schedulers. Currently dirty schedulers are activated at system start while normal schedulers are activated some time after the &lt;code&gt;scheduler_wall_time&lt;/code&gt; functionality is enabled. The time unit is undefined and can be subject to change between releases, OSs, and system restarts. &lt;code&gt;scheduler_wall_time&lt;/code&gt; is only to be used to calculate relative values for scheduler utilization. &lt;code&gt;ActiveTime&lt;/code&gt; can never exceed &lt;code&gt;TotalTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt; 이있는 튜플 목록을 반환합니다 . 여기서 &lt;code&gt;SchedulerId&lt;/code&gt; 는 스케줄러 의 정수 ID이고 &lt;code&gt;ActiveTime&lt;/code&gt; 은 스케줄러가 사용중인 기간이고 &lt;code&gt;TotalTime&lt;/code&gt; 은 특정 스케줄러에 대한 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; 활성화 이후의 총 기간 입니다. 활성화 시간은 스케줄러마다 크게 다를 수 있습니다. 현재 더티 스케줄러는 시스템 시작시 활성화되고 일반 스케줄러는 &lt;code&gt;scheduler_wall_time&lt;/code&gt; 기능이 활성화 된 후 얼마 동안 활성화됩니다. 시간 단위는 정의되지 않았으며 릴리스, OS 및 시스템 다시 시작간에 변경 될 수 있습니다. &lt;code&gt;scheduler_wall_time&lt;/code&gt; 스케줄러 사용률에 대한 상대 값을 계산하는 데만 사용됩니다. &lt;code&gt;ActiveTime&lt;/code&gt; 은 &lt;code&gt;TotalTime&lt;/code&gt; 을 초과 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="93f2213e17f85fa838d64a2d3eb5add22cd2de9f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with &lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt;, where &lt;code&gt;SchedulerId&lt;/code&gt; is an integer ID of the scheduler, &lt;code&gt;ActiveTime&lt;/code&gt; is the duration the scheduler has been busy, and &lt;code&gt;TotalTime&lt;/code&gt; is the total time duration since &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; activation for the specific scheduler. Note that activation time can differ significantly between schedulers. Currently dirty schedulers are activated at system start while normal schedulers are activated some time after the &lt;code&gt;scheduler_wall_time&lt;/code&gt; functionality is enabled. The time unit is undefined and can be subject to change between releases, OSs, and system restarts. &lt;code&gt;scheduler_wall_time&lt;/code&gt; is only to be used to calculate relative values for scheduler utilization. &lt;code&gt;ActiveTime&lt;/code&gt; can never exceed &lt;code&gt;TotalTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt; 으로 튜플 목록을 리턴합니다 . 여기서 &lt;code&gt;SchedulerId&lt;/code&gt; 는 스케줄러 의 정수 ID이고 &lt;code&gt;ActiveTime&lt;/code&gt; 은 스케줄러가 사용중인 기간이고 &lt;code&gt;TotalTime&lt;/code&gt; 은 특정 스케줄러에 대한 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; 활성화 이후의 총 지속 시간 입니다. 스케줄러마다 활성화 시간이 크게 다를 수 있습니다. 현재 더티 스케줄러는 시스템 시작시 활성화되고 일반 스케줄러는 &lt;code&gt;scheduler_wall_time&lt;/code&gt; 기능이 활성화 된 후 어느 정도 활성화됩니다. 시간 단위는 정의되어 있지 않으며 릴리스, OS 및 시스템 재시작간에 변경 될 수 있습니다. &lt;code&gt;scheduler_wall_time&lt;/code&gt; 스케줄러 활용에 대한 상대 값을 계산하는 데만 사용됩니다. &lt;code&gt;ActiveTime&lt;/code&gt; 은 &lt;code&gt;TotalTime&lt;/code&gt; 을 초과 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b0df76cdc4cfbbde2fe80593dbf1e84b9d9b10f5" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with information about how the module was compiled. This list is empty if the module has been stripped with the &lt;code&gt;beam_lib(3)&lt;/code&gt; module (in STDLIB).</source>
          <target state="translated">모듈이 컴파일 된 방법에 대한 정보가 포함 된 튜플 목록을 반환합니다. &lt;code&gt;beam_lib(3)&lt;/code&gt; 에서 beam_lib (3) 모듈로 모듈을 제거한 경우이 목록이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa56aa1fb0f06d1e02b293ee9314f572354d0ea1" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with information about miscellaneous allocated memory areas.</source>
          <target state="translated">기타 할당 된 메모리 영역에 대한 정보가 포함 된 튜플 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f7b16e4394cb94a84d5b5f2836ea7de7ccbbcfec" translate="yes" xml:space="preserve">
          <source>Returns a list where each element represents the amount of active processes and ports on each run queue and its associated schedulers. That is, the number of processes and ports that are ready to run, or are currently running. Values for normal run queues and their associated schedulers are located first in the resulting list. The first element corresponds to scheduler number 1 and so on. If support for dirty schedulers exist, an element with the value for the dirty CPU run queue and its associated dirty CPU schedulers follow and then as last element the value for the the dirty IO run queue and its associated dirty IO schedulers follow. The information is &lt;strong&gt;not&lt;/strong&gt; gathered atomically. That is, the result is not necessarily a consistent snapshot of the state, but instead quite efficiently gathered.</source>
          <target state="translated">각 요소가 각 실행 큐 및 연관된 스케줄러에서 활성 프로세스 및 포트의 양을 나타내는 목록을 리턴합니다. 즉, 실행할 준비가되었거나 현재 실행중인 프로세스 및 포트 수입니다. 정상 실행 큐 및 연관된 스케줄러의 값은 결과 목록의 첫 번째 위치에 있습니다. 첫 번째 요소는 스케줄러 번호 1 등에 해당합니다. 더티 스케줄러에 대한 지원이 존재하면 더티 CPU 실행 큐에 대한 값이있는 요소와 관련 더티 CPU 스케줄러가 뒤 따르고 더티 IO 실행 큐에 대한 값과 관련 더티 IO 스케줄러가 뒤 따릅니다. 정보는 원자 적으로 수집 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 즉, 결과는 반드시 일관된 상태의 스냅 샷일 필요는 없지만, 상당히 효율적으로 수집됩니다.</target>
        </trans-unit>
        <trans-unit id="51b7aac5180aaaa66bcf990dbf7675324e29f8c7" translate="yes" xml:space="preserve">
          <source>Returns a list where each element represents the amount of processes and ports ready to run for each run queue. Values for normal run queues are located first in the resulting list. The first element corresponds to the normal run queue of scheduler number 1 and so on. If support for dirty schedulers exist, values for the dirty CPU run queue and the dirty IO run queue follow (in that order) at the end. The information is &lt;strong&gt;not&lt;/strong&gt; gathered atomically. That is, the result is not necessarily a consistent snapshot of the state, but instead quite efficiently gathered.</source>
          <target state="translated">각 요소가 각 실행 큐에 대해 실행할 준비가 된 프로세스 및 포트 수를 나타내는 목록을 리턴합니다. 정상 실행 큐의 값은 결과 목록의 첫 번째 위치에 있습니다. 첫 번째 요소는 스케줄러 번호 1 등의 정상 실행 큐에 해당합니다. 더티 스케줄러에 대한 지원이 존재하면 더티 CPU 실행 큐 및 더티 IO 실행 큐의 값이 끝에 순서대로 따릅니다. 정보는 원자 적으로 수집 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 즉, 결과는 반드시 일관된 상태의 스냅 샷일 필요는 없지만 대신 상당히 효율적으로 수집됩니다.</target>
        </trans-unit>
        <trans-unit id="b941d4e04084edb236c9a8bc253eef2e0e08e909" translate="yes" xml:space="preserve">
          <source>Returns a list whose elements are the path components of &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">요소가 &lt;code&gt;Filename&lt;/code&gt; 의 경로 구성 요소 인 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3b70d93737bf6a89e8ce6d041c54b88e85e71398" translate="yes" xml:space="preserve">
          <source>Returns a list with all imported files.</source>
          <target state="translated">가져온 모든 파일이있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5afb452302f4c7864dfc86d8b974a0284562ae6d" translate="yes" xml:space="preserve">
          <source>Returns a list with all interpreted modules.</source>
          <target state="translated">해석 된 모든 모듈이있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e405f34b7fb82a4fbead2e416cd71fa78865f7d4" translate="yes" xml:space="preserve">
          <source>Returns a list with all modules for which there are imported data.</source>
          <target state="translated">가져온 데이터가있는 모든 모듈이있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f4fcf940d968f85951fff3e7ec2314be13cd9afe" translate="yes" xml:space="preserve">
          <source>Returns a list with all modules that are currently Cover compiled.</source>
          <target state="translated">현재 Cover 컴파일 된 모든 모듈이있는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3f20449f4bf0d390767524abb875a22e6ecfa1c7" translate="yes" xml:space="preserve">
          <source>Returns a list with all nodes that are part of the coverage analysis. Note that the current node is not returned. This node is always part of the analysis.</source>
          <target state="translated">적용 범위 분석의 일부인 모든 노드가있는 목록을 리턴합니다. 현재 노드는 반환되지 않습니다. 이 노드는 항상 분석의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="08ea13abe178179b2c16be03199e32b1415d19e8" translate="yes" xml:space="preserve">
          <source>Returns a list with information about memory dynamically allocated by the Erlang emulator. Each list element is a tuple &lt;code&gt;{Type, Size}&lt;/code&gt;. The first element &lt;code&gt;Type&lt;/code&gt; is an atom describing memory type. The second element &lt;code&gt;Size&lt;/code&gt; is the memory size in bytes.</source>
          <target state="translated">Erlang 에뮬레이터가 동적으로 할당 한 메모리에 대한 정보가있는 목록을 리턴합니다. 각 목록 요소는 튜플 &lt;code&gt;{Type, Size}&lt;/code&gt; 입니다. 첫 번째 요소 &lt;code&gt;Type&lt;/code&gt; 은 메모리 유형을 설명하는 원자입니다. 두 번째 요소 &lt;code&gt;Size&lt;/code&gt; 는 메모리 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="e23b59b74d5e9a9c8a369969dccc0b1f1d37006e" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications that are currently running. &lt;code&gt;Application&lt;/code&gt; is the application name. &lt;code&gt;Description&lt;/code&gt; and &lt;code&gt;Vsn&lt;/code&gt; are the values of their &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;vsn&lt;/code&gt; application specification keys, respectively.</source>
          <target state="translated">현재 실행중인 응용 프로그램에 대한 정보가있는 목록을 반환합니다. &lt;code&gt;Application&lt;/code&gt; 은 응용 프로그램 이름입니다. &lt;code&gt;Description&lt;/code&gt; 및 &lt;code&gt;Vsn&lt;/code&gt; 은 각각 &lt;code&gt;description&lt;/code&gt; 및 &lt;code&gt;vsn&lt;/code&gt; 응용 프로그램 사양 키 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="1e44a0a7cbeb6cb5ea225de0094765c1cb93aadd" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications, and included applications, which are loaded using &lt;code&gt;load/1,2&lt;/code&gt;. &lt;code&gt;Application&lt;/code&gt; is the application name. &lt;code&gt;Description&lt;/code&gt; and &lt;code&gt;Vsn&lt;/code&gt; are the values of their &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;vsn&lt;/code&gt; application specification keys, respectively.</source>
          <target state="translated">&lt;code&gt;load/1,2&lt;/code&gt; 를 사용하여 로드 된 애플리케이션 및 포함 된 애플리케이션에 대한 정보가있는 목록을 리턴합니다 . &lt;code&gt;Application&lt;/code&gt; 은 응용 프로그램 이름입니다. &lt;code&gt;Description&lt;/code&gt; 및 &lt;code&gt;Vsn&lt;/code&gt; 은 각각 &lt;code&gt;description&lt;/code&gt; 및 &lt;code&gt;vsn&lt;/code&gt; 응용 프로그램 사양 키 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="082096aee53907006df4d528f6963a9cdbd2834b" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the fun &lt;code&gt;Fun&lt;/code&gt;. Each list element is a tuple. The order of the tuples is undefined, and more tuples can be added in a future release.</source>
          <target state="translated">fun &lt;code&gt;Fun&lt;/code&gt; 에 대한 정보가있는 목록을 반환합니다 . 각 목록 요소는 튜플입니다. 튜플의 순서는 정의되어 있지 않으며 향후 릴리스에서 더 많은 튜플을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a273f2482e4d6f1fbc97d67161e9515716d64c5" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements in &lt;code&gt;List1&lt;/code&gt; in reverse order, with tail &lt;code&gt;Tail&lt;/code&gt; appended.</source>
          <target state="translated">꼬리 &lt;code&gt;Tail&lt;/code&gt; 추가 된 &lt;code&gt;List1&lt;/code&gt; 의 요소가있는 목록을 역순으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="832ea77d23505552832301d7dbbab7be5e7a90dd" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements in &lt;code&gt;List1&lt;/code&gt; in reverse order.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; 의 요소가있는 목록을 역순으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="84f1499d684e80e69120459b5874982c864856cb" translate="yes" xml:space="preserve">
          <source>Returns a list with values for all columns in &lt;code&gt;Cols&lt;/code&gt;. If a column is undefined, its value is &lt;code&gt;noinit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; 의 모든 열에 대한 값이있는 목록을 반환합니다 . 열이 정의되지 않은 경우 해당 값은 &lt;code&gt;noinit&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b991dac7a17f515ad11ab8a2b69b9dfa6585c04e" translate="yes" xml:space="preserve">
          <source>Returns a map &lt;code&gt;Map&lt;/code&gt; for which predicate &lt;code&gt;Pred&lt;/code&gt; holds true in &lt;code&gt;MapOrIter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pred&lt;/code&gt; 가 &lt;code&gt;MapOrIter&lt;/code&gt; 에서 참인 맵 &lt;code&gt;Map&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9d731f70bc552bebc033484d0448ae22ca88ea46" translate="yes" xml:space="preserve">
          <source>Returns a map iterator &lt;code&gt;Iterator&lt;/code&gt; that can be used by &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;maps:next/1&lt;/a&gt;&lt;/code&gt; to traverse the key-value associations in a map. When iterating over a map, the memory usage is guaranteed to be bounded no matter the size of the map.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;maps:next/1&lt;/a&gt;&lt;/code&gt; 에서 맵 의 키-값 연관을 탐색하는 데 사용할 수 있는 맵 반복자 &lt;code&gt;Iterator&lt;/code&gt; 를 리턴합니다 . 맵을 반복 할 때 맵 크기에 상관없이 메모리 사용량이 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="889c13f526ea5af22f09d7bee74de5ffbd9e20aa" translate="yes" xml:space="preserve">
          <source>Returns a negative value if the call failed where the following bits can be set:</source>
          <target state="translated">다음 비트를 설정할 수있는 호출이 실패하면 음수 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8ac0cf6601f38f269545889202b2d8acb5d9c708" translate="yes" xml:space="preserve">
          <source>Returns a new Erlang term corresponding to the requested element, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;position&lt;/code&gt; was greater than the arity of &lt;code&gt;tuple&lt;/code&gt;.</source>
          <target state="translated">요청 된 요소에 해당하는 새로운 Erlang 항을 반환하거나 &lt;code&gt;position&lt;/code&gt; 이 &lt;code&gt;tuple&lt;/code&gt; 의 arity보다 큰 경우 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2164c82352c48fe9a836862f6cfd23661803f164" translate="yes" xml:space="preserve">
          <source>Returns a new TLS/DTLS socket if the handshake is successful.</source>
          <target state="translated">핸드 셰이크가 성공하면 새 TLS / DTLS 소켓을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="456254db671e7211f8cf975ebc7a01fd2d4e0998" translate="yes" xml:space="preserve">
          <source>Returns a new empty map.</source>
          <target state="translated">새로운 빈 맵을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="8e4eb51649304c2bec63792cfa85aa4863b22406" translate="yes" xml:space="preserve">
          <source>Returns a new empty ordered set.</source>
          <target state="translated">새로운 빈 순서 세트를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="302caa64733fc4c7b16056c605dcc203b92d6f74" translate="yes" xml:space="preserve">
          <source>Returns a new empty set.</source>
          <target state="translated">새로운 빈 세트를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="b56ae43d0f846bf1949be3f1ab4e439b4e4b97ba" translate="yes" xml:space="preserve">
          <source>Returns a new empty tree.</source>
          <target state="translated">새로운 빈 트리를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="52ddf9faadedd1f5401cea097538ddfd635f7163" translate="yes" xml:space="preserve">
          <source>Returns a new list &lt;code&gt;List3&lt;/code&gt; that is a copy of &lt;code&gt;List1&lt;/code&gt;, subjected to the following procedure: for each element in &lt;code&gt;List2&lt;/code&gt;, its first occurrence in &lt;code&gt;List1&lt;/code&gt; is deleted.</source>
          <target state="translated">다음 절차에 따라 &lt;code&gt;List1&lt;/code&gt; 의 복사 &lt;code&gt;List3&lt;/code&gt; 새 목록 List3 을 반환 합니다. &lt;code&gt;List2&lt;/code&gt; 의 각 요소에 대해 &lt;code&gt;List1&lt;/code&gt; 의 첫 번째 항목 이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="4542acc8afa6c33c6e9c090883b8ca0e51803bc7" translate="yes" xml:space="preserve">
          <source>Returns a new list &lt;code&gt;List3&lt;/code&gt;, which is made from the elements of &lt;code&gt;List1&lt;/code&gt; followed by the elements of &lt;code&gt;List2&lt;/code&gt;.</source>
          <target state="translated">반환 새로운리스트 &lt;code&gt;List3&lt;/code&gt; 의 소자로부터 구성되어, &lt;code&gt;List1&lt;/code&gt; 이이 요소 뒤에 &lt;code&gt;List2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b455a2440938bc559af3ddb6ee2c37352ebdc0c" translate="yes" xml:space="preserve">
          <source>Returns a new map &lt;code&gt;Map2&lt;/code&gt; with the keys &lt;code&gt;K1&lt;/code&gt; through &lt;code&gt;Kn&lt;/code&gt; and their associated values from map &lt;code&gt;Map1&lt;/code&gt;. Any key in &lt;code&gt;Ks&lt;/code&gt; that does not exist in &lt;code&gt;Map1&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;K1&lt;/code&gt; 에서 &lt;code&gt;Kn&lt;/code&gt; 까지 의 키 와 맵 &lt;code&gt;Map1&lt;/code&gt; 에서 연관된 값을 사용 하여 새 맵 &lt;code&gt;Map2&lt;/code&gt; 를 리턴합니다 . &lt;code&gt;Map1&lt;/code&gt; 에 존재하지 않는 &lt;code&gt;Ks&lt;/code&gt; 키 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="67290e0a103586074d306b260be7f713463f57f6" translate="yes" xml:space="preserve">
          <source>Returns a new map &lt;code&gt;Map2&lt;/code&gt; without keys &lt;code&gt;K1&lt;/code&gt; through &lt;code&gt;Kn&lt;/code&gt; and their associated values from map &lt;code&gt;Map1&lt;/code&gt;. Any key in &lt;code&gt;Ks&lt;/code&gt; that does not exist in &lt;code&gt;Map1&lt;/code&gt; is ignored</source>
          <target state="translated">&lt;code&gt;K1&lt;/code&gt; 에서 &lt;code&gt;Kn&lt;/code&gt; 까지의 키가없고 맵 &lt;code&gt;Map1&lt;/code&gt; 에서 관련 값이 없는 새 맵 &lt;code&gt;Map2&lt;/code&gt; 를 반환합니다 . &lt;code&gt;Map1&lt;/code&gt; 에 존재하지 않는 &lt;code&gt;Ks&lt;/code&gt; 키 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9855aceea290cffa09098763d7a883e94c7067a3" translate="yes" xml:space="preserve">
          <source>Returns a new ordered set formed from &lt;code&gt;Ordset1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted.</source>
          <target state="translated">&lt;code&gt;Ordset1&lt;/code&gt; 에서 &lt;code&gt;Element&lt;/code&gt; 가 삽입 된 새로운 순서 집합을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2cf3a026b42c22429203bd312f9f574526c3d067" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted.</source>
          <target state="translated">에서 형성된 새로운 세트를 돌려줍니다 &lt;code&gt;Set1&lt;/code&gt; 과 함께 &lt;code&gt;Element&lt;/code&gt; 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="9a3e77a0d4c9926366de861b366eb9d929768d67" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted. Assumes that &lt;code&gt;Element&lt;/code&gt; is not present in &lt;code&gt;Set1&lt;/code&gt;.</source>
          <target state="translated">에서 형성된 새로운 세트를 돌려줍니다 &lt;code&gt;Set1&lt;/code&gt; 과 함께 &lt;code&gt;Element&lt;/code&gt; 삽입합니다. &lt;code&gt;Element&lt;/code&gt; 가 &lt;code&gt;Set1&lt;/code&gt; 에 없다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="a0426b5d4fc3e15824ae4b2f3a72d0b0d793a688" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted. If &lt;code&gt;Element&lt;/code&gt; is already an element in &lt;code&gt;Set1&lt;/code&gt;, nothing is changed.</source>
          <target state="translated">에서 형성된 새로운 세트를 돌려줍니다 &lt;code&gt;Set1&lt;/code&gt; 과 함께 &lt;code&gt;Element&lt;/code&gt; 삽입합니다. 경우 &lt;code&gt;Element&lt;/code&gt; 이미 요소입니다 &lt;code&gt;Set1&lt;/code&gt; 과 , 아무것도 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2876ee8ff5d8de8cd5c5022fe3c35a8168024c73" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; removed. Assumes that &lt;code&gt;Element&lt;/code&gt; is present in &lt;code&gt;Set1&lt;/code&gt;.</source>
          <target state="translated">에서 형성된 새로운 세트를 돌려줍니다 &lt;code&gt;Set1&lt;/code&gt; 과 함께 &lt;code&gt;Element&lt;/code&gt; 제거합니다. &lt;code&gt;Element&lt;/code&gt; 가 &lt;code&gt;Set1&lt;/code&gt; 에 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="82e2522189efdcb96f05ed6fc0dd4b26ea0dbace" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; removed. If &lt;code&gt;Element&lt;/code&gt; is not an element in &lt;code&gt;Set1&lt;/code&gt;, nothing is changed.</source>
          <target state="translated">에서 형성된 새로운 세트를 돌려줍니다 &lt;code&gt;Set1&lt;/code&gt; 과 함께 &lt;code&gt;Element&lt;/code&gt; 제거합니다. &lt;code&gt;Element&lt;/code&gt; 가 &lt;code&gt;Set1&lt;/code&gt; 의요소 가 아닌 경우 아무것도 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0b340b0d4312756cdb0d5ea9d80123f4413bac57" translate="yes" xml:space="preserve">
          <source>Returns a new tuple that has one element more than &lt;code&gt;Tuple1&lt;/code&gt;, and contains the elements in &lt;code&gt;Tuple1&lt;/code&gt; followed by &lt;code&gt;Term&lt;/code&gt; as the last element. Semantically equivalent to &lt;code&gt;list_to_tuple(tuple_to_list(Tuple1) ++ [Term])&lt;/code&gt;, but much faster. Example:</source>
          <target state="translated">두 개 이상의 요소가 새로운 튜플 반환 &lt;code&gt;Tuple1&lt;/code&gt; 와의 요소가 포함되어 &lt;code&gt;Tuple1&lt;/code&gt; 는 다음 &lt;code&gt;Term&lt;/code&gt; 의 마지막 요소로한다. 의미 적으로 &lt;code&gt;list_to_tuple(tuple_to_list(Tuple1) ++ [Term])&lt;/code&gt; 과 동일하지만 훨씬 빠릅니다. 예:</target>
        </trans-unit>
        <trans-unit id="bde383d63490d451b0f95496f5ddc0d941fd0a06" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with element &lt;code&gt;Term&lt;/code&gt; inserted at position &lt;code&gt;Index&lt;/code&gt; in tuple &lt;code&gt;Tuple1&lt;/code&gt;. All elements from position &lt;code&gt;Index&lt;/code&gt; and upwards are pushed one step higher in the new tuple &lt;code&gt;Tuple2&lt;/code&gt;. Example:</source>
          <target state="translated">튜플 &lt;code&gt;Tuple1&lt;/code&gt; 의 &lt;code&gt;Index&lt;/code&gt; 위치에 &lt;code&gt;Term&lt;/code&gt; 요소가 삽입 된 새 튜플을 반환합니다 . 새로운 튜플 &lt;code&gt;Tuple2&lt;/code&gt; 에서 &lt;code&gt;Index&lt;/code&gt; 위치 이상의 모든 요소 가 한 단계 높아 집니다 . 예:</target>
        </trans-unit>
        <trans-unit id="541fb2fe1465f22b99417c012a85d115f1b4a3e6" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with element at &lt;code&gt;Index&lt;/code&gt; removed from tuple &lt;code&gt;Tuple1&lt;/code&gt;, for example:</source>
          <target state="translated">예를 들어, Tuple &lt;code&gt;Tuple1&lt;/code&gt; 에서 &lt;code&gt;Index&lt;/code&gt; 의 요소가 제거 된 새 튜플을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="308fbca02547a432a27bb42f69b457aa760415cc" translate="yes" xml:space="preserve">
          <source>Returns a newly created list with information about all child specifications and child processes belonging to supervisor &lt;code&gt;SupRef&lt;/code&gt;.</source>
          <target state="translated">수퍼바이저 &lt;code&gt;SupRef&lt;/code&gt; 에 속하는 모든 하위 스펙 및 하위 프로세스에 대한 정보가있는 새로 작성된 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="988718b7da23cf5e7319125e8929491ce6761321" translate="yes" xml:space="preserve">
          <source>Returns a newly created port data lock on success, otherwise &lt;code&gt;NULL&lt;/code&gt;. The function fails if &lt;code&gt;port&lt;/code&gt; is invalid or if a port data lock already has been associated with the &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">성공시 새로 작성된 포트 데이터 잠금을 리턴하고 그렇지 않으면 &lt;code&gt;NULL&lt;/code&gt; 을 리턴합니다 . &lt;code&gt;port&lt;/code&gt; 가 유효하지 않거나 포트 데이터 잠금이 이미 &lt;code&gt;port&lt;/code&gt; 와 연관되어 있으면 기능이 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="c7d31e4d735f6c2c90a55d4e9e9bc358b81bb147" translate="yes" xml:space="preserve">
          <source>Returns a non-empty list of some objects stored in a table that match a given pattern in some unspecified order. The table, the pattern, and the number of objects that are matched are all defined by &lt;code&gt;Continuation&lt;/code&gt;, which has been returned by a previous call to &lt;code&gt;match_object/1&lt;/code&gt; or &lt;code&gt;match_object/3&lt;/code&gt;.</source>
          <target state="translated">주어진 패턴과 일치하지 않는 순서로 테이블에 저장된 일부 오브젝트의 비어 있지 않은 목록을 리턴합니다. 일치하는 테이블, 패턴 및 오브젝트 수는 모두 &lt;code&gt;Continuation&lt;/code&gt; 에 의해 정의되며 이는 &lt;code&gt;match_object/1&lt;/code&gt; 또는 &lt;code&gt;match_object/3&lt;/code&gt; 에 대한 이전 호출에 의해 리턴되었습니다 .</target>
        </trans-unit>
        <trans-unit id="50270629b3dafeeafed7462734d9b34f2cc291ea" translate="yes" xml:space="preserve">
          <source>Returns a non-negative value on success where the following bits can be set:</source>
          <target state="translated">다음 비트를 설정할 수있는 성공시 음이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2d93e71a340752a5f5290f10d48436940f20b574" translate="yes" xml:space="preserve">
          <source>Returns a normal N(Mean, Variance) deviate float and updates the state in the process dictionary.</source>
          <target state="translated">정규 N (Mean, Variance) 이탈 플로트를 반환하고 프로세스 사전에서 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="4d38c985d064614595f3a0fa28e7ddf78a708833" translate="yes" xml:space="preserve">
          <source>Returns a number indicating the number of processes that matched &lt;code&gt;PidPortSpec&lt;/code&gt;. If &lt;code&gt;PidPortSpec&lt;/code&gt; is a process identifier, the return value is &lt;code&gt;1&lt;/code&gt;. If &lt;code&gt;PidPortSpec&lt;/code&gt; is &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;existing&lt;/code&gt;, the return value is the number of processes running. If &lt;code&gt;PidPortSpec&lt;/code&gt; is &lt;code&gt;new&lt;/code&gt;, the return value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PidPortSpec&lt;/code&gt; 과 일치하는 프로세스 수를 나타내는 숫자를 반환합니다 . 경우 &lt;code&gt;PidPortSpec&lt;/code&gt; 는 프로세스 식별자이며, 반환 값은 &lt;code&gt;1&lt;/code&gt; . 경우 &lt;code&gt;PidPortSpec&lt;/code&gt; 가 있습니다 &lt;code&gt;all&lt;/code&gt; 또는 &lt;code&gt;existing&lt;/code&gt; , 반환 값은 실행중인 프로세스의 수입니다. 경우 &lt;code&gt;PidPortSpec&lt;/code&gt; 이 있습니다 &lt;code&gt;new&lt;/code&gt; , 반환 값은 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce0bda480a992988544423b3c6fa8905aadc73a7" translate="yes" xml:space="preserve">
          <source>Returns a pair of sets that, regarded as constituting a set, forms a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt;. If the result of applying &lt;code&gt;SetFun&lt;/code&gt; to an element of &lt;code&gt;Set1&lt;/code&gt; gives an element in &lt;code&gt;Set2&lt;/code&gt;, the element belongs to &lt;code&gt;Set3&lt;/code&gt;, otherwise the element belongs to &lt;code&gt;Set4&lt;/code&gt;.</source>
          <target state="translated">세트를 구성하는 것으로 간주되어 &lt;code&gt;Set1&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 을 형성하는 한 쌍의 세트를 리턴합니다 . 적용한 결과 경우 &lt;code&gt;SetFun&lt;/code&gt; 을 하는 요소 &lt;code&gt;Set1&lt;/code&gt; 의 원소 제공 &lt;code&gt;Set2&lt;/code&gt; 를을 상기 요소에 속하는 &lt;code&gt;Set3&lt;/code&gt; 그렇지 않으면 요소에 속하는, &lt;code&gt;Set4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39f67903b4cc9df547e9b82924cf4116b4951f8e" translate="yes" xml:space="preserve">
          <source>Returns a performance counter that can be used as a very fast and high resolution timestamp. This counter is read directly from the hardware or operating system with the same guarantees. This means that two consecutive calls to the function are not guaranteed to be monotonic, though it most likely will be. The performance counter will be converted to the resolution passed as an argument.</source>
          <target state="translated">매우 빠른 고해상도 타임 스탬프로 사용할 수있는 성능 카운터를 반환합니다. 이 카운터는 동일한 보증으로 하드웨어 또는 운영 체제에서 직접 읽습니다. 즉, 함수에 대한 두 번의 연속 호출이 단조로운 것으로 보장되지는 않지만 가장 가능성이 높습니다. 성능 카운터는 인수로 전달 된 해상도로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="1857f2d600eb2dbb33f64af93199be89a69a819b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a dynamically allocated buffer containing a string. If &lt;code&gt;list&lt;/code&gt; is not an I/O list, or if &lt;code&gt;list&lt;/code&gt; contains the integer 0, &lt;code&gt;NULL&lt;/code&gt; is returned. It is the caller's responsibility to free the allocated buffer with &lt;code&gt;erl_free()&lt;/code&gt;.</source>
          <target state="translated">문자열을 포함하는 동적으로 할당 된 버퍼에 대한 포인터를 반환합니다. 경우 &lt;code&gt;list&lt;/code&gt; 의 I / O 목록에없는 경우, 또는 &lt;code&gt;list&lt;/code&gt; 정수 0을 포함, &lt;code&gt;NULL&lt;/code&gt; 이 반환된다. &lt;code&gt;erl_free()&lt;/code&gt; 할당 된 버퍼를 해제하는 것은 호출자의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="98516b5a626e7b8596556a34709ca73247b01eaa" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a subterm that can be used in a later call to &lt;code&gt;erl_decode()&lt;/code&gt; to retrieve the term at that position. If there is no term, or &lt;code&gt;pos&lt;/code&gt; would exceed the size of the terms in the buffer, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">나중에 해당 위치에서 용어를 검색 하기 위해 &lt;code&gt;erl_decode()&lt;/code&gt; 를 호출 할 때 사용할 수있는 하위 용어에 대한 포인터를 리턴합니다 . 항이 없거나 &lt;code&gt;pos&lt;/code&gt; 가 버퍼에있는 항의 크기를 초과하면 &lt;code&gt;NULL&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="738279ad9c25157358239c6c5bc58c59b10a737b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the mutex name.</source>
          <target state="translated">뮤텍스 이름에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad33e5274a9c6e8726271829305d60b5c1898046" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the condition.</source>
          <target state="translated">조건 이름에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0236a2b61b14c10b30aba53ffa3f9d6657a360d5" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the rwlock.</source>
          <target state="translated">rwlock 이름에 대한 포인터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="34cdae0227fab5cdeaeb8741625ac7444eb216e2" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the thread.</source>
          <target state="translated">스레드 이름에 대한 포인터를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1632cb168390baa31ea4378dbe892487fdec9c10" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the raw binary data and sets &lt;code&gt;*termp&lt;/code&gt; to the binary term.</source>
          <target state="translated">원시 이진 데이터에 대한 포인터를 반환하고 &lt;code&gt;*termp&lt;/code&gt; 을 이진 용어로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a4a9c476e43b8961c65de17c74e3c3bdb342013b" translate="yes" xml:space="preserve">
          <source>Returns a port identifier &lt;code&gt;Port&lt;/code&gt; as the result of opening a new Erlang port. Messages can be sent to, and received from, a port identifier, just like a pid. Port identifiers can also be linked to using &lt;code&gt;link/1&lt;/code&gt;, or registered under a name using &lt;code&gt;register/2&lt;/code&gt;.</source>
          <target state="translated">새로운 Erlang 포트를 연 결과 포트 식별자 &lt;code&gt;Port&lt;/code&gt; 를 반환합니다 . 메시지는 pid처럼 포트 식별자와주고받을 수 있습니다. 포트 식별자는 &lt;code&gt;link/1&lt;/code&gt; 을 사용하여 연결 하거나 &lt;code&gt;register/2&lt;/code&gt; 를 사용하여 이름으로 등록 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea32cacd6364b95061a97d1cb1603d042e7fa2f6" translate="yes" xml:space="preserve">
          <source>Returns a port identifier as the result of opening a new Erlang port. A port can be seen as an external Erlang process.</source>
          <target state="translated">새로운 Erlang 포트를 연 결과 포트 식별자를 반환합니다. 포트는 외부 Erlang 프로세스로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="549ae3ced02337c9218c3560bd2c5d22638a139a" translate="yes" xml:space="preserve">
          <source>Returns a port identifier whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;String&lt;/code&gt; 인 포트 식별자를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="34378032b52dc70a1698e3af6cc3f1c7d64920c1" translate="yes" xml:space="preserve">
          <source>Returns a process identifier whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;String&lt;/code&gt; 인 프로세스 식별자를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ba66e63940a9d08f025b8a3d60da5d4a3ce0926f" translate="yes" xml:space="preserve">
          <source>Returns a property list (see &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt; proplists&lt;/a&gt;&lt;/code&gt;) containing the counts for each of the following elements of the supervisor's child specifications and managed processes:</source>
          <target state="translated">감독자의 하위 사양 및 관리되는 프로세스의 다음 각 요소에 대한 개수가 포함 된 속성 목록 ( &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt; proplists&lt;/a&gt;&lt;/code&gt; 참조 )을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="475f248087f9c4fb29685c91698ec5831e8d5075" translate="yes" xml:space="preserve">
          <source>Returns a property list (see &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt;proplists&lt;/a&gt;&lt;/code&gt;) containing the counts for each of the following elements of the supervisor's child specifications and managed processes:</source>
          <target state="translated">감독자의 자식 사양 및 관리 프로세스의 다음 요소 각각에 대한 개수가 포함 된 속성 목록 ( &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt;proplists&lt;/a&gt;&lt;/code&gt; 참조 )을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="c53e20ed0d00e49d31e0aa5aa4f54ac6264c5c5e" translate="yes" xml:space="preserve">
          <source>Returns a query handle for a QLC table. In Erlang/OTP there is support for ETS, Dets, and Mnesia tables, but many other data structures can be turned into QLC tables. This is accomplished by letting function(s) in the module implementing the data structure create a query handle by calling &lt;code&gt;qlc:table/2&lt;/code&gt;. The different ways to traverse the table and properties of the table are handled by callback functions provided as options to &lt;code&gt;qlc:table/2&lt;/code&gt;.</source>
          <target state="translated">QLC 테이블에 대한 쿼리 핸들을 리턴합니다. Erlang / OTP에는 ETS, Dets 및 Mnesia 테이블이 지원되지만 다른 많은 데이터 구조는 QLC 테이블로 전환 될 수 있습니다. 이것은 데이터 구조를 구현하는 모듈의 함수가 &lt;code&gt;qlc:table/2&lt;/code&gt; 를 호출하여 쿼리 핸들을 작성하게함으로써 달성됩니다 . 테이블을 순회하는 다른 방법과 테이블의 속성은 &lt;code&gt;qlc:table/2&lt;/code&gt; 에 대한 옵션으로 제공된 콜백 함수에 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc6fefdf356fea365a23c8acde6c866a605532d9" translate="yes" xml:space="preserve">
          <source>Returns a query handle for a QLC. The QLC must be the first argument to this function, otherwise it is evaluated as an ordinary list comprehension. It is also necessary to add the following line to the source code:</source>
          <target state="translated">QLC에 대한 쿼리 핸들을 리턴합니다. QLC는이 함수의 첫 번째 인수 여야합니다. 그렇지 않으면 일반 목록 이해로 평가됩니다. 소스 코드에 다음 줄을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="13597ae114db01f956de1e90cbe62d0d265a9c96" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH2&lt;/code&gt;, the answers to query handle &lt;code&gt;QH1&lt;/code&gt; are sorted by &lt;code&gt;&lt;a href=&quot;file_sorter#keysort-4&quot;&gt;file_sorter:keysort/4&lt;/a&gt;&lt;/code&gt; according to the options.</source>
          <target state="translated">쿼리 핸들을 반환합니다. 쿼리 핸들 &lt;code&gt;QH2&lt;/code&gt; 를 평가할 때 쿼리 핸들 &lt;code&gt;QH1&lt;/code&gt; 에 대한 답변 은 옵션에 따라 &lt;code&gt;&lt;a href=&quot;file_sorter#keysort-4&quot;&gt;file_sorter:keysort/4&lt;/a&gt;&lt;/code&gt; 로 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="49fdde57e389d284799c22342f17d306ca57749e" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH2&lt;/code&gt;, the answers to query handle &lt;code&gt;QH1&lt;/code&gt; are sorted by &lt;code&gt;&lt;a href=&quot;file_sorter#sort-3&quot;&gt;file_sorter:sort/3&lt;/a&gt;&lt;/code&gt; according to the options.</source>
          <target state="translated">쿼리 핸들을 반환합니다. 조회 핸들 &lt;code&gt;QH2&lt;/code&gt; 를 평가할 때 조회 핸들 &lt;code&gt;QH1&lt;/code&gt; 에 대한 응답 은 옵션에 따라 &lt;code&gt;&lt;a href=&quot;file_sorter#sort-3&quot;&gt;file_sorter:sort/3&lt;/a&gt;&lt;/code&gt; 로 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="8875629f1300f906d14654a0c483b031376d3cd9" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH3&lt;/code&gt;, all answers to &lt;code&gt;QH1&lt;/code&gt; are returned, followed by all answers to &lt;code&gt;QH2&lt;/code&gt;.</source>
          <target state="translated">쿼리 핸들을 반환합니다. 쿼리 핸들 &lt;code&gt;QH3&lt;/code&gt; 을 평가할 때 &lt;code&gt;QH1&lt;/code&gt; 에 대한 모든 응답 이 리턴되고 &lt;code&gt;QH2&lt;/code&gt; 에 대한 모든 응답이 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f8da3937aac99f038108c359dfdfa445ced24fb" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH&lt;/code&gt;, all answers to the first query handle in &lt;code&gt;QHL&lt;/code&gt; are returned, followed by all answers to the remaining query handles in &lt;code&gt;QHL&lt;/code&gt;.</source>
          <target state="translated">쿼리 핸들을 반환합니다. 쿼리 핸들 평가할 때 &lt;code&gt;QH&lt;/code&gt; 을 에서 첫 번째 쿼리 핸들에 대한 모든 답변 &lt;code&gt;QHL&lt;/code&gt; 은 반환의 나머지 쿼리 핸들에 대한 모든 답변 뒤에있다 &lt;code&gt;QHL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a1d738bb5afe4518c8379826056585c25a992bd" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; containing the items of &lt;code&gt;Q1&lt;/code&gt; in the reverse order.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; 의 항목을 포함 하는 큐 &lt;code&gt;Q2&lt;/code&gt; 를 역순으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e196ff3d55fb6fa7fcb6519db49f306184136ab7" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of calling &lt;code&gt;Fun(Item)&lt;/code&gt; on all items in &lt;code&gt;Q1&lt;/code&gt;, in order from front to rear.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; 의 모든 항목에서 &lt;code&gt;Fun(Item)&lt;/code&gt; 을 호출 한 결과 인 큐 &lt;code&gt;Q2&lt;/code&gt; 를 앞뒤로 순서대로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="fc688776bc490270c0f81180569b41a72371fe8a" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the front item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; 에서 프론트 항목을 제거한 결과 큐 &lt;code&gt;Q2&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7866351e56d26351d3905136cdca01271e3003ce" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the head item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; 에서 헤드 항목을 제거한 결과 큐 &lt;code&gt;Q2&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3d84547dca262b8b2adbada430f33494114cb921" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the rear item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; 에서 후면 항목을 제거한 결과 큐 &lt;code&gt;Q2&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1f2d3c60bdc7c08da57f3619f31be48f2ee0cd4b" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the tail item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; 에서 꼬리 항목을 제거한 결과 큐 &lt;code&gt;Q2&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="33b4357dbf4625d2bb49c9f673f132d92849bcfd" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q3&lt;/code&gt; that is the result of joining &lt;code&gt;Q1&lt;/code&gt; and &lt;code&gt;Q2&lt;/code&gt; with &lt;code&gt;Q1&lt;/code&gt; in front of &lt;code&gt;Q2&lt;/code&gt;.</source>
          <target state="translated">리턴 큐 &lt;code&gt;Q3&lt;/code&gt; 접합 결과 &lt;code&gt;Q1&lt;/code&gt; 과 &lt;code&gt;Q2&lt;/code&gt; 를 함께 &lt;code&gt;Q1&lt;/code&gt; 앞에 &lt;code&gt;Q2&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="0721f3e84c31aa90efcf282f74b77512e19d40eb" translate="yes" xml:space="preserve">
          <source>Returns a queue containing the items in &lt;code&gt;L&lt;/code&gt; in the same order; the head item of the list becomes the front item of the queue.</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; 의 항목을 동일한 순서로 포함하는 큐를 리턴합니다 . 리스트의 헤드 아이템은 큐의 프론트 아이템이됩니다.</target>
        </trans-unit>
        <trans-unit id="3c13ac8791052956515344c82c17f8e137051af7" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;, updating the state in the process dictionary.</source>
          <target state="translated">프로세스 사전의 상태를 업데이트하여 &lt;code&gt;0.0&lt;/code&gt; 과 &lt;code&gt;1.0&lt;/code&gt; 사이에 균일하게 분포 된 임의의 부동 소수점을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5ffd661695d1f146c4d4b52eece1203485c98b21" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed in the value range &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">값 범위 &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; 균일하게 분포 된 임의의 부동 소수점을 반환 하고 프로세스 사전의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="eac6bc74d4e0acad3c62b2f96267d447e245c7a6" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed in the value range &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">값 범위 &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; 균일하게 분포 된 임의의 부동 소수점을 리턴 하고 프로세스 사전의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="220e5a07c91a567d9306f69e052d7530c918c974" translate="yes" xml:space="preserve">
          <source>Returns a reference whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;String&lt;/code&gt; 인 참조를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5981a9c84fff78d573bbd1e25c8f19a1a7c41b47" translate="yes" xml:space="preserve">
          <source>Returns a representation of the attributes associated with a syntax tree node. The attributes are all the extra information that can be attached to a node. Currently, this includes position information, source code comments, and user annotations. The result of this function cannot be inspected directly; only attached to another node (see &lt;code&gt;&lt;a href=&quot;#set_attrs-2&quot;&gt;set_attrs/2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">구문 트리 노드와 연관된 속성의 표현을 리턴합니다. 속성은 노드에 첨부 할 수있는 모든 추가 정보입니다. 현재 여기에는 위치 정보, 소스 코드 주석 및 사용자 주석이 포함됩니다. 이 기능의 결과는 직접 검사 할 수 없습니다. 다른 노드에만 연결됩니다 ( &lt;code&gt;&lt;a href=&quot;#set_attrs-2&quot;&gt;set_attrs/2&lt;/a&gt;&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="29de78454c28e34a2a642e7a8961ad2591a09234" translate="yes" xml:space="preserve">
          <source>Returns a runtime system independent version of the microstate statistics data presented by &lt;code&gt; erlang:statistics(microstate_accounting)&lt;/code&gt;. All counters have been normalized to be in microsecond resolution.</source>
          <target state="translated">&lt;code&gt; erlang:statistics(microstate_accounting)&lt;/code&gt; 제공하는 마이크로 상태 통계 데이터의 런타임 시스템 독립적 버전을 반환합니다 . 모든 카운터는 마이크로 초 해상도로 정규화되었습니다.</target>
        </trans-unit>
        <trans-unit id="41c3c0aa8007477bae8340b92aecee54aba8147e" translate="yes" xml:space="preserve">
          <source>Returns a runtime system independent version of the microstate statistics data presented by &lt;code&gt;erlang:statistics(microstate_accounting)&lt;/code&gt;. All counters have been normalized to be in microsecond resolution.</source>
          <target state="translated">&lt;code&gt;erlang:statistics(microstate_accounting)&lt;/code&gt; 제공하는 마이크로 시스템 통계 데이터의 런타임 시스템 독립 버전을 리턴합니다 . 모든 카운터는 마이크로 초 분해능으로 정규화되었습니다.</target>
        </trans-unit>
        <trans-unit id="639003c0bcc32fe7eb6be91e1cb42c7c94c0e076" translate="yes" xml:space="preserve">
          <source>Returns a sequence of integers that starts with &lt;code&gt;From&lt;/code&gt; and contains the successive results of adding &lt;code&gt;Incr&lt;/code&gt; to the previous element, until &lt;code&gt;To&lt;/code&gt; is reached or passed (in the latter case, &lt;code&gt;To&lt;/code&gt; is not an element of the sequence). &lt;code&gt;Incr&lt;/code&gt; defaults to 1.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; 으로 시작하고 &lt;code&gt;To&lt;/code&gt; 에 도달하거나 전달 될 때까지 (후자의 경우 &lt;code&gt;To&lt;/code&gt; 는 시퀀스의 요소가 아님) 이전 요소에 &lt;code&gt;Incr&lt;/code&gt; 을 추가 한 연속 결과를 포함하는 정수 시퀀스를 리턴합니다 . &lt;code&gt;Incr&lt;/code&gt; 의 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="8b3cb83da87bf82fcc52a1009c086d823d2d7f98" translate="yes" xml:space="preserve">
          <source>Returns a set containing only element &lt;code&gt;Element&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 요소 만 포함 된 집합을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6f10fef368394c28f1d20e18f2a6039026240320" translate="yes" xml:space="preserve">
          <source>Returns a set of the elements in &lt;code&gt;List&lt;/code&gt;, where &lt;code&gt;List&lt;/code&gt; can be unordered and contain duplicates.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 의 요소 세트를 리턴합니다 . 여기서 &lt;code&gt;List&lt;/code&gt; 는 순서가 지정되지 않고 중복이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="753f6ab832bf18ad6e71eab42e1639c10f7f8d5e" translate="yes" xml:space="preserve">
          <source>Returns a set of the elements in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 의 요소 세트를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a98dc36da5b203b779b5c5939c13afc2118a29d9" translate="yes" xml:space="preserve">
          <source>Returns a sorted lists of the names of the variables of an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The default is to return the &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; only.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 의 변수 이름에 대한 정렬 된 목록을 리턴 합니다 . 디폴트는 &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; 만 리턴하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4d0a71645d1f3545b0c4bb0969a3ef5985a3224a" translate="yes" xml:space="preserve">
          <source>Returns a standard normal deviate float (that is, the mean is 0 and the standard deviation is 1) and updates the state in the process dictionary.</source>
          <target state="translated">표준 정규 이탈 플로트 (즉, 평균은 0이고 표준 편차는 1)를 반환하고 프로세스 사전의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="5c1ea25fa4c5f8b145f8f707d7f1c4662e2f7b63" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of &lt;code&gt;Number&lt;/code&gt; characters &lt;code&gt;Character&lt;/code&gt;. Optionally, the string can end with string &lt;code&gt;Tail&lt;/code&gt;.</source>
          <target state="translated">구성된 문자열 반환 &lt;code&gt;Number&lt;/code&gt; 문자 &lt;code&gt;Character&lt;/code&gt; . 선택적으로 문자열은 문자열 &lt;code&gt;Tail&lt;/code&gt; 로 끝날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8eb5679eca27a81f2f8c00730da843064fd19386" translate="yes" xml:space="preserve">
          <source>Returns a string containing &lt;code&gt;String&lt;/code&gt; repeated &lt;code&gt;Number&lt;/code&gt; times.</source>
          <target state="translated">반환이 포함 된 문자열 &lt;code&gt;String&lt;/code&gt; 반복 &lt;code&gt;Number&lt;/code&gt; 번.</target>
        </trans-unit>
        <trans-unit id="9420605dab264db14377df3c7c369cd794988d36" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang driver version used by the runtime system. It has the form &lt;code&gt; &quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">런타임 시스템에서 사용하는 Erlang 드라이버 버전이 포함 된 문자열을 반환합니다. 형식은 &lt;code&gt; &quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca720cab6edb5af65d70d200416f25bce42dff96" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang driver version used by the runtime system. It has the form &lt;code&gt;&quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">런타임 시스템에서 사용하는 Erlang 드라이버 버전이 포함 된 문자열을 리턴합니다. 그것은 형태가 &lt;code&gt;&quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ece8e40e1f507575b3bf20fd73a6e0672d7350c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang machine name.</source>
          <target state="translated">Erlang 기계 이름이 포함 된 문자열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4a7d526e434bb32d45334ad10ea54c1c2f791139" translate="yes" xml:space="preserve">
          <source>Returns a string containing the OTP release number of the OTP release that the currently executing ERTS application is part of.</source>
          <target state="translated">현재 실행중인 ERTS 응용 프로그램이 속한 OTP 릴리스의 OTP 릴리스 번호가 포함 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5c774d62af9c350116ae56e808daa9a8135061e" translate="yes" xml:space="preserve">
          <source>Returns a string containing the processor and OS architecture the emulator is built for.</source>
          <target state="translated">에뮬레이터가 빌드 된 프로세서 및 OS 아키텍처가 포함 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="821408643d3812334edfe7c70f2c8bdd3090056c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the version number of the emulator.</source>
          <target state="translated">에뮬레이터의 버전 번호가 포함 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ad4f5193c4b241dc3533ca0bd261ddcc8281845" translate="yes" xml:space="preserve">
          <source>Returns a string containing the version of the Erlang NIF interface used by the runtime system. It is on the form &quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;.</source>
          <target state="translated">런타임 시스템에서 사용하는 Erlang NIF 인터페이스 버전이 포함 된 문자열을 리턴합니다. &quot;&amp;lt;major ver&amp;gt;. &amp;lt;minor ver&amp;gt;&quot;형식입니다.</target>
        </trans-unit>
        <trans-unit id="249a381d6d64e85569639e56f4abc0c76775977f" translate="yes" xml:space="preserve">
          <source>Returns a string containing version number and some important properties, such as the number of schedulers.</source>
          <target state="translated">버전 번호와 스케줄러 수와 같은 일부 중요한 속성이 포함 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="592cba2a4f69e8ba547f8910b96da1e46a1c67d8" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Atom&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Atom&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="321baf49392c0eafb95b3b64884a211ea92a6f7e" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting.</source>
          <target state="translated">고정 소수점 형식을 사용하여 &lt;code&gt;Float&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="845804924b90ea31613ae6d5ea09637d3555f2ae" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d750f9d480b4bae30d0af2c744ba69c36ebeaa17" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt; in base &lt;code&gt;Base&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Base&lt;/code&gt; 에서 &lt;code&gt;Integer&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d28245f1e2faea5c401927009ee01c220d8c620b" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0b33ef62cb3a9619f4bb28cafc910beb1049d31b" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a01f4beff7183843fdd5fec40bac132ab6f148c2" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d129c7d8767c6334e5a4a61ca3f9d29803c4e6f8" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of the port identifier &lt;code&gt;Port&lt;/code&gt;.</source>
          <target state="translated">포트 식별자 &lt;code&gt;Port&lt;/code&gt; 의 텍스트 표현에 해당하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d01a763290d161874d170974dac8ae6a46597510" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an encoding. The string is recognized by &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt; read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; as a valid encoding.</source>
          <target state="translated">인코딩의 문자열 표현을 반환합니다. 문자열은 &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt; read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; 에서 유효한 인코딩으로 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="722bee6a2590720890936d18e6c3a69afefa6faa" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an encoding. The string is recognized by &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt;read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; as a valid encoding.</source>
          <target state="translated">인코딩의 문자열 표현을 반환합니다. 문자열은 &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt;read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; 에 의해 유효한 인코딩으로 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="67af947c46cc1e568aec078c3d6093f6948052aa" translate="yes" xml:space="preserve">
          <source>Returns a string where any trailing &lt;code&gt;\n&lt;/code&gt; or &lt;code&gt;\r\n&lt;/code&gt; have been removed from &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">후행 &lt;code&gt;\n&lt;/code&gt; 또는 &lt;code&gt;\r\n&lt;/code&gt; 이 &lt;code&gt;String&lt;/code&gt; 에서 제거 된 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4a0cd3b8788f1f4abd133a92ff4a9323bf82931f" translate="yes" xml:space="preserve">
          <source>Returns a string which describes the error &lt;code&gt;ErrorInfo&lt;/code&gt; returned when there is an error in a regular expression.</source>
          <target state="translated">정규식에 오류가있을 때 반환되는 &lt;code&gt;ErrorInfo&lt;/code&gt; 를 설명하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ed93319dfab86a95c5d7739f463d1f22d56b5ff7" translate="yes" xml:space="preserve">
          <source>Returns a string with the elements of &lt;code&gt;StringList&lt;/code&gt; separated by the string in &lt;code&gt;Separator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringList&lt;/code&gt; 의 요소가 &lt;code&gt;Separator&lt;/code&gt; 의 문자열로 구분 된 문자열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="d3f6a4bb443347056ff4bb78fd9be46ff4f44f39" translate="yes" xml:space="preserve">
          <source>Returns a string, where &lt;code&gt;String&lt;/code&gt; is centered in the string and surrounded by blanks or &lt;code&gt;Character&lt;/code&gt;. The resulting string has length &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 이 문자열의 중앙에 있고 공백 또는 &lt;code&gt;Character&lt;/code&gt; 둘러싸인 문자열을 리턴합니다 . 결과 문자열의 길이는 &lt;code&gt;Number&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="856440dd7379ef2ee50b8dbbe737f978de9a80e4" translate="yes" xml:space="preserve">
          <source>Returns a string, where leading or trailing, or both, &lt;code&gt;Characters&lt;/code&gt; have been removed. &lt;code&gt;Dir&lt;/code&gt; which can be &lt;code&gt;leading&lt;/code&gt;, &lt;code&gt;trailing&lt;/code&gt;, or &lt;code&gt;both&lt;/code&gt;, indicates from which direction characters are to be removed.</source>
          <target state="translated">선행 또는 후행 또는 둘 다 &lt;code&gt;Characters&lt;/code&gt; 가 제거 된 문자열을 리턴합니다 . &lt;code&gt;leading&lt;/code&gt; , &lt;code&gt;trailing&lt;/code&gt; 또는 &lt;code&gt;both&lt;/code&gt; 수있는 &lt;code&gt;Dir&lt;/code&gt; 은 어느 방향 문자를 제거할지 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="578a3937330919a210b2dcef50f14c32643c53b8" translate="yes" xml:space="preserve">
          <source>Returns a string, where leading or trailing, or both, blanks or a number of &lt;code&gt;Character&lt;/code&gt; have been removed. &lt;code&gt;Direction&lt;/code&gt;, which can be &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, or &lt;code&gt;both&lt;/code&gt;, indicates from which direction blanks are to be removed. &lt;code&gt;strip/1&lt;/code&gt; is equivalent to &lt;code&gt;strip(String, both)&lt;/code&gt;.</source>
          <target state="translated">선행 또는 후행 또는 둘 다 공백 또는 여러 &lt;code&gt;Character&lt;/code&gt; 가 제거 된 문자열을 리턴합니다 . &lt;code&gt;Direction&lt;/code&gt; 할 수 있고, &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , 또는 &lt;code&gt;both&lt;/code&gt; , 어느 방향에서의 블랭크를 제거하여야한다 나타낸다. &lt;code&gt;strip/1&lt;/code&gt; 은 &lt;code&gt;strip(String, both)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b61c0f61aabf0a3f7ea6fd4848159462feb7998" translate="yes" xml:space="preserve">
          <source>Returns a subset S of the &lt;code&gt;&lt;a href=&quot;#weak_relation&quot;&gt;weak relation&lt;/a&gt;&lt;/code&gt; W corresponding to the binary relation &lt;code&gt;BinRel1&lt;/code&gt;. Let F be the &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt;. The subset S is defined so that x S y if x W y for some x in F and for some y in F.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel1&lt;/code&gt; 에 해당하는 &lt;code&gt;&lt;a href=&quot;#weak_relation&quot;&gt;weak relation&lt;/a&gt;&lt;/code&gt; W 의 하위 집합 S를 반환합니다 . F 를 &lt;code&gt;BinRel1&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; 라고 하자 . F의 일부 x 및 F의 일부 y에 대해 xWy 인 경우 xSy가되도록 부분 집합 S가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b2eb6357fa31863d69699995784e8ab743fe546e" translate="yes" xml:space="preserve">
          <source>Returns a subset of &lt;code&gt;Set1&lt;/code&gt; containing those elements that do not give an element in &lt;code&gt;Set2&lt;/code&gt; as the result of applying &lt;code&gt;SetFun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SetFun&lt;/code&gt; 적용 결과 &lt;code&gt;Set2&lt;/code&gt; 에 요소를 제공하지 않는 요소를 포함하는 &lt;code&gt;Set1&lt;/code&gt; 의 서브 세트를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="07ede649fccf16d077bd784e71f2b2ea53bba28d" translate="yes" xml:space="preserve">
          <source>Returns a subset of &lt;code&gt;Set1&lt;/code&gt; containing those elements that gives an element in &lt;code&gt;Set2&lt;/code&gt; as the result of applying &lt;code&gt;SetFun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SetFun&lt;/code&gt; 적용 결과 &lt;code&gt;Set2&lt;/code&gt; 에 요소를 제공하는 요소를 포함하는 &lt;code&gt;Set1&lt;/code&gt; 의 서브 세트를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e11559487c6f5bd3d643533e9faacfe01f709456" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt; of at most &lt;code&gt;Length&lt;/code&gt; grapheme clusters, starting at position &lt;code&gt;Start&lt;/code&gt;.</source>
          <target state="translated">위치 &lt;code&gt;Start&lt;/code&gt; 에서 시작하여 최대 &lt;code&gt;Length&lt;/code&gt; grapheme 클러스터 인 &lt;code&gt;String&lt;/code&gt; 의 하위 문자열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="953a90492454dd674656729b23274ea4c43bf73d" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt;, starting at position &lt;code&gt;Start&lt;/code&gt; to the end of the string, or to and including position &lt;code&gt;Stop&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Start&lt;/code&gt; 위치에서 시작 하여 문자열 끝까지 또는 &lt;code&gt;Stop&lt;/code&gt; 위치를 포함하여 &lt;code&gt;String&lt;/code&gt; 의 하위 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f365d6065acb778455e6e12b3c74c9416301cb1a" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt;, starting at position &lt;code&gt;Start&lt;/code&gt;, and ending at the end of the string or at length &lt;code&gt;Length&lt;/code&gt;.</source>
          <target state="translated">(A)의 하위 문자열 반환 &lt;code&gt;String&lt;/code&gt; , 위치로부터 &lt;code&gt;Start&lt;/code&gt; 하고, 문자열의 끝 또는 길이에서 끝나는 &lt;code&gt;Length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="269b906ff1204a86bc1f9bdf30b2139db27bb7f8" translate="yes" xml:space="preserve">
          <source>Returns a suitable &lt;code&gt;regexp&lt;/code&gt; string matching common prompts for users on Unix hosts.</source>
          <target state="translated">Unix 호스트의 사용자에게 공통 프롬프트와 일치 하는 적절한 &lt;code&gt;regexp&lt;/code&gt; 문자열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2c78c1be16943a0ae8debbcf9106e3ad03551724" translate="yes" xml:space="preserve">
          <source>Returns a suitable path, or paths, for a given type. If &lt;code&gt;os&lt;/code&gt; is not set in &lt;code&gt;Opts&lt;/code&gt; the function will default to the native option, that is &lt;code&gt;'linux'&lt;/code&gt;, &lt;code&gt;'darwin'&lt;/code&gt; or &lt;code&gt;'windows'&lt;/code&gt;, as understood by &lt;code&gt;os:type/0&lt;/code&gt;. Anything not recognized as &lt;code&gt;'darwin'&lt;/code&gt; or &lt;code&gt;'windows'&lt;/code&gt; is interpreted as &lt;code&gt;'linux'&lt;/code&gt;.</source>
          <target state="translated">주어진 유형에 적합한 경로를 반환합니다. 경우 &lt;code&gt;os&lt;/code&gt; 설정되지 않은 &lt;code&gt;Opts&lt;/code&gt; 기능이입니다, 기본 옵션을 기본값으로 &lt;code&gt;'linux'&lt;/code&gt; , &lt;code&gt;'darwin'&lt;/code&gt; 또는 &lt;code&gt;'windows'&lt;/code&gt; 으로 이해되는, &lt;code&gt;os:type/0&lt;/code&gt; . &lt;code&gt;'darwin'&lt;/code&gt; 또는 &lt;code&gt;'windows'&lt;/code&gt; 로 인식되지 않는 것은 &lt;code&gt;'linux'&lt;/code&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c920b6b5298494c5a0714e6b648d21d79ec962c" translate="yes" xml:space="preserve">
          <source>Returns a summary of all carriers in the system, optionally filtered by allocator type and scheduler id.</source>
          <target state="translated">선택적으로 할당 자 유형 및 스케줄러 ID로 필터링 된 시스템의 모든 이동 통신사 요약을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2d30f2d815938df0e275b67633bde3053cd366a0" translate="yes" xml:space="preserve">
          <source>Returns a summary of all tagged allocations in the system, optionally filtered by allocator type and scheduler id.</source>
          <target state="translated">선택적으로 할당 자 유형 및 스케줄러 ID로 필터링 된 시스템의 모든 태그 할당에 대한 요약을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b52475f9bda569c98ba8b2a5e21ecfc538ad2b2c" translate="yes" xml:space="preserve">
          <source>Returns a term from the driver. The meaning of the returned data also depends on the port driver.</source>
          <target state="translated">드라이버에서 용어를 반환합니다. 리턴 된 데이터의 의미는 포트 드라이버에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4dc55a0a9d2c7c3ed0f4095f99a29e63c2c62028" translate="yes" xml:space="preserve">
          <source>Returns a term where each collection of annotations &lt;code&gt;Anno&lt;/code&gt; of the nodes of the &lt;code&gt;erl_parse&lt;/code&gt; tree &lt;code&gt;Abstr&lt;/code&gt; is replaced by the term returned by &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt; erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;erl_parse&lt;/code&gt; tree is traversed in a depth-first, left-to-right fashion.</source>
          <target state="translated">&lt;code&gt;erl_parse&lt;/code&gt; 트리 &lt;code&gt;Abstr&lt;/code&gt; 노드의 &lt;code&gt;Anno&lt;/code&gt; 주석 모음이 &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt; erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt; 의해 반환 된 용어로 대체되는 용어를 반환합니다 . &lt;code&gt;erl_parse&lt;/code&gt; 의 나무는 깊이 우선, 왼쪽에서 오른쪽 방식으로 이송됩니다.</target>
        </trans-unit>
        <trans-unit id="b859ce68b1d8adca07b2965536d637ec8cadea58" translate="yes" xml:space="preserve">
          <source>Returns a term where each collection of annotations &lt;code&gt;Anno&lt;/code&gt; of the nodes of the &lt;code&gt;erl_parse&lt;/code&gt; tree &lt;code&gt;Abstr&lt;/code&gt; is replaced by the term returned by &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt;erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;erl_parse&lt;/code&gt; tree is traversed in a depth-first, left-to-right fashion.</source>
          <target state="translated">&lt;code&gt;erl_parse&lt;/code&gt; 트리 &lt;code&gt;Abstr&lt;/code&gt; 노드의 각 주석 &lt;code&gt;Anno&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt;erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt; 의해 리턴 된 용어로 대체되는 용어를 리턴합니다 . &lt;code&gt;erl_parse&lt;/code&gt; 의 나무는 깊이 우선, 왼쪽에서 오른쪽 방식으로 이송됩니다.</target>
        </trans-unit>
        <trans-unit id="e42dc51bd19a435d1ed15dfb6ce6f69261d199cf" translate="yes" xml:space="preserve">
          <source>Returns a triple of sets:</source>
          <target state="translated">트리플의 집합을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="735e0414a28d09eb877ff1287020a8fec4ca7190" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; if the log is opened in read only mode and the read chunk is corrupt. &lt;code&gt;Badbytes&lt;/code&gt; indicates the number of non-Erlang terms found in the chunk. Notice that the log is not repaired.</source>
          <target state="translated">로그가 읽기 전용 모드로 열려 있고 읽기 청크가 손상된 경우 튜플 &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; 반환합니다. &lt;code&gt;Badbytes&lt;/code&gt; 는 청크에서 발견 된 Erlang이 아닌 용어의 수를 나타냅니다. 로그가 복구되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="705d98017c54a4145d8945773c510ff675589920" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{Continuation2, Terms}&lt;/code&gt;, where &lt;code&gt;Terms&lt;/code&gt; is a list of terms found in the log. &lt;code&gt;Continuation2&lt;/code&gt; is yet another continuation that must be passed on to any subsequent calls to &lt;code&gt;chunk()&lt;/code&gt;. With a series of calls to &lt;code&gt;chunk()&lt;/code&gt;, it is then possible to extract all terms from a log.</source>
          <target state="translated">튜플 &lt;code&gt;{Continuation2, Terms}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Terms&lt;/code&gt; 는 로그에있는 용어 목록입니다. &lt;code&gt;Continuation2&lt;/code&gt; 는 &lt;code&gt;chunk()&lt;/code&gt; 에 대한 후속 호출로 전달되어야하는 또 다른 연속입니다 . &lt;code&gt;chunk()&lt;/code&gt; 대한 일련의 호출로 로그에서 모든 용어를 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e6586d9f3ce82931b21b60b27dd393b23b35e61" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{ok, Value}&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value associated with &lt;code&gt;Key&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt; if no value is associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">튜플 반환 &lt;code&gt;{ok, Value}&lt;/code&gt; , &lt;code&gt;Value&lt;/code&gt; 와 관련된 값입니다 &lt;code&gt;Key&lt;/code&gt; , 또는 &lt;code&gt;error&lt;/code&gt; 값이 연결되지 않은 경우 &lt;code&gt;Key&lt;/code&gt; 의 &lt;code&gt;Map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2607e69fa01e875df820f574c7f74fb2cd670568" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the binaries that are the result of splitting &lt;code&gt;Bin&lt;/code&gt; into two parts at position &lt;code&gt;Pos&lt;/code&gt;. This is not a destructive operation. After the operation, there are three binaries altogether. Example:</source>
          <target state="translated">&lt;code&gt;Bin&lt;/code&gt; 을 &lt;code&gt;Pos&lt;/code&gt; 위치에서 두 부분 으로 분할 한 결과 인 이진을 포함하는 튜플을 반환합니다 . 이것은 파괴적인 작업이 아닙니다. 작업 후에는 세 개의 이진이 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="9a953fe642e9ea0605f4fff70a26b2507c1b3aa6" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the name of the global group that the local node belongs to, and the list of all other known group names. Returns &lt;code&gt;undefined&lt;/code&gt; if no global groups are defined.</source>
          <target state="translated">로컬 노드가 속한 글로벌 그룹의 이름과 다른 모든 알려진 그룹 이름의 목록을 포함하는 튜플을 반환합니다. 글로벌 그룹이 정의 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8232215373c041489cdb2744c563121a995f6acf" translate="yes" xml:space="preserve">
          <source>Returns a tuple corresponding to &lt;code&gt;List&lt;/code&gt;, for example</source>
          <target state="translated">예를 들어 &lt;code&gt;List&lt;/code&gt; 에 해당하는 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8be6168849e8fc6888196588072087f0076f61c3" translate="yes" xml:space="preserve">
          <source>Returns a tuple that is a copy of argument &lt;code&gt;Tuple1&lt;/code&gt; with the element specified by integer argument &lt;code&gt;Index&lt;/code&gt; (the first element is the element with index 1) replaced by argument &lt;code&gt;Value&lt;/code&gt;, for example:</source>
          <target state="translated">정수 인수 &lt;code&gt;Index&lt;/code&gt; (첫 번째 요소는 인덱스 1의 요소)와 인수 &lt;code&gt;Value&lt;/code&gt; 로 대체 된 인수 &lt;code&gt;Tuple1&lt;/code&gt; 의 사본 인 튜플을 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a7c335b82027fd8c045fffe77c36ccbff0c13c7" translate="yes" xml:space="preserve">
          <source>Returns a two-tuple describing the C compiler used when compiling the runtime system. The first element is an atom describing the name of the compiler, or &lt;code&gt;undefined&lt;/code&gt; if unknown. The second element is a term describing the version of the compiler, or &lt;code&gt;undefined&lt;/code&gt; if unknown.</source>
          <target state="translated">런타임 시스템을 컴파일 할 때 사용되는 C 컴파일러를 설명하는 두 개의 튜플을 리턴합니다. 첫 번째 요소는 컴파일러의 이름을 나타내는 아톰이거나 알 수없는 경우 &lt;code&gt;undefined&lt;/code&gt; 않은 요소입니다. 두 번째 요소는 컴파일러 버전을 설명하는 용어이거나 알 수없는 경우 &lt;code&gt;undefined&lt;/code&gt; 용어 입니다.</target>
        </trans-unit>
        <trans-unit id="3c389771eefa736d7a360710a6c8bc6d38e3527a" translate="yes" xml:space="preserve">
          <source>Returns a type descriptor for a data constructor node. (Cf. &lt;code&gt;is_data/1&lt;/code&gt;.) This is mainly useful for comparing types and for constructing new nodes of the same type (cf. &lt;code&gt;make_data/2&lt;/code&gt;). If &lt;code&gt;Node&lt;/code&gt; represents an integer, floating-point number, atom or empty list, the result is &lt;code&gt;{atomic, Value}&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value of &lt;code&gt;concrete(Node)&lt;/code&gt;, otherwise the result is either &lt;code&gt;cons&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt;.</source>
          <target state="translated">데이터 생성자 노드에 대한 형식 설명자를 반환합니다. (Cf. &lt;code&gt;is_data/1&lt;/code&gt; . ) 이것은 주로 유형을 비교하고 동일한 유형의 새 노드를 구성하는 데 유용합니다 (참조 : &lt;code&gt;make_data/2&lt;/code&gt; ). 경우 &lt;code&gt;Node&lt;/code&gt; 정수, 부동 소수점 수, 원자 또는 빈 목록을 나타내고, 그 결과는 &lt;code&gt;{atomic, Value}&lt;/code&gt; , &lt;code&gt;Value&lt;/code&gt; 의 값은 &lt;code&gt;concrete(Node)&lt;/code&gt; 그렇지 결과 중 하나이며, &lt;code&gt;cons&lt;/code&gt; 또는 &lt;code&gt;tuple&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bd17a1db0a2825afcbae7fb15829012b0f42afe" translate="yes" xml:space="preserve">
          <source>Returns a unique integer with the same properties as specified by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt; erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt; erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt; 에 지정된 것과 동일한 속성을 가진 고유 한 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5740db8c28697d1afcbc4e308050a43c877c7fde" translate="yes" xml:space="preserve">
          <source>Returns a unique integer with the same properties as specified by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt; 로 지정된 것과 동일한 속성을 가진 고유 한 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="92166f03715e25e6472246acbbedab43f98787f8" translate="yes" xml:space="preserve">
          <source>Returns a user-named atom which is not already in the set &lt;code&gt;Used&lt;/code&gt;. The atom is generated by applying the given &lt;code&gt;Function&lt;/code&gt; to a generated integer. Integers are generated using an algorithm which tries to keep the names randomly distributed within a reasonably small range relative to the number of elements in the set.</source>
          <target state="translated">&lt;code&gt;Used&lt;/code&gt; 세트에 아직없는 사용자 이름의 원자를 반환합니다 . 원자는 주어진 &lt;code&gt;Function&lt;/code&gt; 를 생성 된 정수 에 적용하여 생성됩니다 . 정수는 세트의 요소 수에 비해 합리적으로 작은 범위 내에서 이름을 무작위로 분산시키는 알고리즘을 사용하여 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4327f3d264bcd8b0ae95ab1f5ed7bdf5e84393b8" translate="yes" xml:space="preserve">
          <source>Returns a value &lt;code&gt;Value&lt;/code&gt; from node with key &lt;code&gt;Key&lt;/code&gt; and new &lt;code&gt;Tree2&lt;/code&gt; without the node with this value. Assumes that the node with key is present in the tree, crashes otherwise.</source>
          <target state="translated">반환 값 &lt;code&gt;Value&lt;/code&gt; 키 노드에서 &lt;code&gt;Key&lt;/code&gt; 새로운 &lt;code&gt;Tree2&lt;/code&gt; 이 값으로 노드없이. 키가있는 노드가 트리에 있다고 가정하고 그렇지 않으면 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="4168e52d6544b4b42840b6372f8f622c6f448253" translate="yes" xml:space="preserve">
          <source>Returns a value &lt;code&gt;Value&lt;/code&gt; from node with key &lt;code&gt;Key&lt;/code&gt; and new &lt;code&gt;Tree2&lt;/code&gt; without the node with this value. Returns &lt;code&gt;error&lt;/code&gt; if the node with the key is not present in the tree.</source>
          <target state="translated">반환 값 &lt;code&gt;Value&lt;/code&gt; 키 노드에서 &lt;code&gt;Key&lt;/code&gt; 새로운 &lt;code&gt;Tree2&lt;/code&gt; 이 값으로 노드없이. 키가있는 노드가 트리에 없으면 &lt;code&gt;error&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="a1642a1e6b772de93938827c947cfd1dbe257341" translate="yes" xml:space="preserve">
          <source>Returns a value identifying the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt; time warp mode&lt;/a&gt;&lt;/code&gt; that is used:</source>
          <target state="translated">사용되는 &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt; time warp mode&lt;/a&gt;&lt;/code&gt; 를 식별하는 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e826161e82e3562160201bc702c5e477b3e85c5f" translate="yes" xml:space="preserve">
          <source>Returns a value identifying the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; that is used:</source>
          <target state="translated">사용되는 &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; 를 식별하는 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="aa4ef8038e74b148a39815f7b1d4b8bc6534e619" translate="yes" xml:space="preserve">
          <source>Returns all AGENT-CAPABILITY statements in the sysORTable in the agent. This table is defined in the SNMPv2-MIB.</source>
          <target state="translated">에이전트의 sysORTable에있는 모든 AGENT-CAPABILITY 문을 리턴합니다. 이 테이블은 SNMPv2-MIB에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b71fa8a588a560f59b9200a22d57a388590704f" translate="yes" xml:space="preserve">
          <source>Returns all command-line flags and the system-defined flags, see &lt;code&gt;&lt;a href=&quot;#get_argument-1&quot;&gt;get_argument/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">모든 명령 행 플래그와 시스템 정의 플래그를 리턴합니다 ( &lt;code&gt;&lt;a href=&quot;#get_argument-1&quot;&gt;get_argument/1&lt;/a&gt;&lt;/code&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="b737e570aa8cd4407289cf34f69037c654103e1c" translate="yes" xml:space="preserve">
          <source>Returns all default or all supported (except anonymous), or all anonymous cipher suites for a TLS version</source>
          <target state="translated">TLS 버전에 대해 모든 기본 또는 모든 지원 (익명 제외) 또는 모든 익명 암호 스위트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f326622232be4bf94f1c1540859768938351646c" translate="yes" xml:space="preserve">
          <source>Returns all objects in slot &lt;code&gt;I&lt;/code&gt; of table &lt;code&gt;Tab&lt;/code&gt;. A table can be traversed by repeatedly calling the function, starting with the first slot &lt;code&gt;I=0&lt;/code&gt; and ending when &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned. If argument &lt;code&gt;I&lt;/code&gt; is out of range, the function fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 의 슬롯 &lt;code&gt;I&lt;/code&gt; 에 있는 모든 객체를 반환합니다 . 첫 번째 슬롯 &lt;code&gt;I=0&lt;/code&gt; 부터 시작하여 &lt;code&gt;'$end_of_table'&lt;/code&gt; 이 반환 되면 끝나는 함수를 반복해서 호출하여 테이블을 순회 할 수 있습니다 . 인수 &lt;code&gt;I&lt;/code&gt; 이 범위를 벗어나 면 reason &lt;code&gt;badarg&lt;/code&gt; 로 함수가 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="40fdfa6f155034c29e901dff0a2e3f5fcaebb299" translate="yes" xml:space="preserve">
          <source>Returns all processes containing &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; of the specific drivers as a list of tuples &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; denotes the number of users in process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">특정 드라이버의 &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; 를 포함하는 모든 프로세스를 튜플 &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; 목록으로 리턴합니다 . 여기서 &lt;code&gt;integer()&lt;/code&gt; 는 프로세스 &lt;code&gt;pid()&lt;/code&gt; 의 사용자 수를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="7def8e73482ec8d94593909e53032f3b00abdc70" translate="yes" xml:space="preserve">
          <source>Returns all processes in the group &lt;code&gt;Name&lt;/code&gt;. Processes are returned in no specific order. This function is optimised for speed.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 그룹의 모든 프로세스를 반환합니다 . 프로세스는 특정 순서없이 반환됩니다. 이 기능은 속도에 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc3987f827fa9d8780caf6488acf737e109e3252" translate="yes" xml:space="preserve">
          <source>Returns all processes in the group &lt;code&gt;Name&lt;/code&gt;. This function is to be used from within a client function that accesses the group. It is therefore optimized for speed.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 그룹의 모든 프로세스를 반환합니다 . 이 기능은 그룹에 액세스하는 클라이언트 기능 내에서 사용됩니다. 따라서 속도에 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed3dae6d3a54c3ec31d773b576ef24181831d923" translate="yes" xml:space="preserve">
          <source>Returns all processes running on the local node in the group &lt;code&gt;Name&lt;/code&gt;. Processes are returned in no specific order. This function is optimised for speed.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 그룹의 로컬 노드에서 실행중인 모든 프로세스를 반환합니다 . 프로세스는 특정 순서없이 반환됩니다. 이 기능은 속도에 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c6d0be05d0408e52a3786054fb8ceaae26e7c51" translate="yes" xml:space="preserve">
          <source>Returns all processes running on the local node in the group &lt;code&gt;Name&lt;/code&gt;. This function is to be used from within a client function that accesses the group. It is therefore optimized for speed.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 그룹의 로컬 노드에서 실행중인 모든 프로세스를 리턴합니다 . 이 기능은 그룹에 액세스하는 클라이언트 기능 내에서 사용됩니다. 따라서 속도에 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="423be9deda973d3e785dc9a3df60a71f657ed121" translate="yes" xml:space="preserve">
          <source>Returns all releases known to the release handler.</source>
          <target state="translated">릴리스 핸들러에 알려진 모든 릴리스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5d902f70d2cba8313a80ff7bb8dec6b22e7149e8" translate="yes" xml:space="preserve">
          <source>Returns all releases, known to the release handler, of a specific status.</source>
          <target state="translated">릴리스 핸들러에 알려진 특정 상태의 모든 릴리스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9eceb21130e5a4945ba8d3212b8d59565f94dea9" translate="yes" xml:space="preserve">
          <source>Returns all test cases in the specified suite.</source>
          <target state="translated">지정된 제품군의 모든 테스트 사례를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b137f4cee723eb59e69759cc5efdca3baddad0b5" translate="yes" xml:space="preserve">
          <source>Returns all time recorded for all threads.</source>
          <target state="translated">모든 스레드에 대해 기록 된 모든 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2aab69100467c522a9b501f13e8c52ffccfc60c0" translate="yes" xml:space="preserve">
          <source>Returns all time spent doing work for all threads, i.e. all time not spent in the &lt;code&gt;sleep&lt;/code&gt; state.</source>
          <target state="translated">모든 스레드에 대해 작업을 수행하는 데 소요 된 모든 시간, 즉 &lt;code&gt;sleep&lt;/code&gt; 상태 에서 소비되지 않은 모든 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="76e788e3283c77df8c4519c8e3d9bb04ca1d332a" translate="yes" xml:space="preserve">
          <source>Returns all values associated with the command-line user flag &lt;code&gt;Flag&lt;/code&gt;. If &lt;code&gt;Flag&lt;/code&gt; is provided several times, each &lt;code&gt;Values&lt;/code&gt; is returned in preserved order. Example:</source>
          <target state="translated">명령 행 사용자 플래그 &lt;code&gt;Flag&lt;/code&gt; 와 연관된 모든 값을 리턴합니다 . 경우 &lt;code&gt;Flag&lt;/code&gt; 를 여러 번 제공되며, 각각의 &lt;code&gt;Values&lt;/code&gt; 보존 순서로 반환됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="7d9c23aad375e2d0498bad2128a29c00b63d04ec" translate="yes" xml:space="preserve">
          <source>Returns all vertices of digraph &lt;code&gt;Digraph&lt;/code&gt;. The order is given by a &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; of the digraph, collecting visited vertices in postorder. More precisely, the vertices visited while searching from an arbitrarily chosen vertex are collected in postorder, and all those collected vertices are placed before the subsequently visited vertices.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; 의 모든 정점을 반환합니다 . 순서는 digraph 의 &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; 에 의해 주어지며 , 방문한 정점을 포스트 순서로 수집합니다. 보다 정확하게는 임의로 선택된 정점에서 검색하는 동안 방문한 정점이 순서대로 수집되며 수집 된 정점은 이후에 방문한 정점보다 먼저 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="d29763c44b5655dd5108bfb772f8ccbf16f29fb4" translate="yes" xml:space="preserve">
          <source>Returns all vertices of digraph &lt;code&gt;Digraph&lt;/code&gt;. The order is given by a &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; of the digraph, collecting visited vertices in preorder.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; 의 모든 정점을 반환합니다 . 순서는 digraph 의 &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; 에 의해 주어지며 , 방문한 정점을 미리 순서대로 수집합니다.</target>
        </trans-unit>
        <trans-unit id="deeeefa9f1f56581cddb1a5fc8454aa4c6ab5512" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;#empty_digraph&quot;&gt;empty digraph&lt;/a&gt;&lt;/code&gt; with properties according to the options in &lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 의 옵션에 따라 속성이 포함 된 &lt;code&gt;&lt;a href=&quot;#empty_digraph&quot;&gt;empty digraph&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="48830b738a29d123c309402c4c3c334f501d41c9" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt; erlang:now()&lt;/a&gt;&lt;/code&gt; time stamp.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt; erlang:now()&lt;/a&gt;&lt;/code&gt; 타임 스탬프를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="42e337d2e9aa3d0219a49a57a1c45b799cdf19d1" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt;erlang:now()&lt;/a&gt;&lt;/code&gt; time stamp.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt;erlang:now()&lt;/a&gt;&lt;/code&gt; 타임 스탬프를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f34e75efc590885c0884151454122b4827e6f119" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;erl_parse&lt;/code&gt;-compatible representation of a syntax tree, if possible. If &lt;code&gt;Tree&lt;/code&gt; represents a well-formed Erlang program or expression, the conversion should work without problems. Typically, &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; yields &lt;code&gt;true&lt;/code&gt; if conversion failed (i.e., the result is still an abstract syntax tree), and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">가능한 경우 구문 트리 의 &lt;code&gt;erl_parse&lt;/code&gt; 호환 표현을 리턴 합니다. 경우 &lt;code&gt;Tree&lt;/code&gt; 잘 형성 얼랑 프로그램이나 표현을 나타내는 변환이 문제없이 작동합니다. 일반적으로 변환이 실패 하면 &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; (결과는 여전히 추상 구문 트리 임)이고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8bef83f584affe71decd895a1c3671b84dfef6ee" translate="yes" xml:space="preserve">
          <source>Returns an Erlang binary object.</source>
          <target state="translated">Erlang 이진 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ffa27dc7183e3e80aadb934affbacb1778496241" translate="yes" xml:space="preserve">
          <source>Returns an Erlang binary term, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; was not an I/O list.</source>
          <target state="translated">Erlang 이진 용어를 반환하거나 &lt;code&gt;list&lt;/code&gt; 가 I / O 목록이 아닌 경우 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b646df828c5e4677e887302ec677c85ad056f8d9" translate="yes" xml:space="preserve">
          <source>Returns an Erlang float object with the value specified in &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;f&lt;/code&gt; is not finite.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 에 지정된 값을 가진 Erlang float 객체를 반환 하거나 &lt;code&gt;f&lt;/code&gt; 가 유한하지 않은 경우 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b7381bdbb30a79dae14026685292b788098b56fd" translate="yes" xml:space="preserve">
          <source>Returns an Erlang integer object with the value specified in &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 에 지정된 값을 가진 Erlang 정수 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b3193ba7e758d6b8057578ba99e0142b88f45810" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list corresponding to the original list minus the first element, or &lt;code&gt;NULL&lt;/code&gt; pointer if &lt;code&gt;list&lt;/code&gt; was not a list.</source>
          <target state="translated">원래 목록에서 첫 번째 요소를 뺀 해당 목록을 반환하거나, &lt;code&gt;list&lt;/code&gt; 이 목록 이 아닌 경우 &lt;code&gt;NULL&lt;/code&gt; 포인터를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="51e2d39adb2a9582d19f8d4bb2040aea7b343702" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list object corresponding to the character sequence in &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 의 문자 순서에 해당하는 Erlang 목록 객체를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b7ea18929e00b770980d3d6f6932dda99f8f2612" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list.</source>
          <target state="translated">얼랭 (Erlang) 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57d486ab439fc0e78b3a2e39a55e17536e503e9d" translate="yes" xml:space="preserve">
          <source>Returns an Erlang pid object.</source>
          <target state="translated">Erlang pid 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f94eb09a637da7cca6f9c95508104baaacab25f6" translate="yes" xml:space="preserve">
          <source>Returns an Erlang port object.</source>
          <target state="translated">Erlang 포트 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="69b6822eed0645367b44f76b526363c80e9d9346" translate="yes" xml:space="preserve">
          <source>Returns an Erlang reference object.</source>
          <target state="translated">Erlang 참조 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a590f7f64d0c6dc423d6529eacf20f62f1f3ca21" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term containing an atom. Notice that it is the caller's responsibility to ensure that &lt;code&gt;string&lt;/code&gt; contains a valid name for an atom.</source>
          <target state="translated">원자를 포함하는 얼랭 용어를 반환합니다. &lt;code&gt;string&lt;/code&gt; 에 원자의 유효한 이름이 포함 되도록하는 것은 호출자의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="b10d603538bb7e8eb3305090172876b919d95fd9" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term corresponding to the head head element in the list, or a &lt;code&gt;NULL&lt;/code&gt; pointer if &lt;code&gt;list&lt;/code&gt; was not a list.</source>
          <target state="translated">목록의 head head 요소에 해당하는 Erlang 용어를 반환하거나 &lt;code&gt;list&lt;/code&gt; 가 목록 이 아닌 경우 &lt;code&gt;NULL&lt;/code&gt; 포인터를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="095f11364bb01e494b56620a202b5541d815ff60" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is an example of a valid Erlang representation of a value of the &lt;code&gt;ASN.1&lt;/code&gt; type &lt;code&gt;Type&lt;/code&gt;. The value is a random value and subsequent calls to this function will for most types return different values.</source>
          <target state="translated">&lt;code&gt;ASN.1&lt;/code&gt; 유형 &lt;code&gt;Type&lt;/code&gt; 값의 유효한 Erlang 표현의 예인 Erlang 용어를 리턴합니다 . 값은 임의의 값이며이 함수에 대한 후속 호출은 대부분의 유형에서 다른 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="53f0661f88a4fb5e9cafcb5a1c38c68a078b4742" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is the result of decoding binary object &lt;code&gt;Binary&lt;/code&gt;, which must be encoded according to the &lt;code&gt; Erlang external term format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt; Erlang external term format&lt;/code&gt; 에 따라 인코딩되어야하는 바이너리 개체 &lt;code&gt;Binary&lt;/code&gt; 를 디코딩 한 결과 인 Erlang 용어를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c806840578ee1deb2041df9cee1666f482911593" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is the result of decoding binary object &lt;code&gt;Binary&lt;/code&gt;, which must be encoded according to the &lt;code&gt;Erlang external term format&lt;/code&gt;.</source>
          <target state="translated">이진 객체 &lt;code&gt;Binary&lt;/code&gt; 를 디코딩 한 결과 인 Erlang 용어를 반환 &lt;code&gt;Erlang external term format&lt;/code&gt; .이 용어 는 Erlang 외부 용어 형식 에 따라 인코딩되어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="4161f95ef9693af88f0334a08b7de8fe83886a31" translate="yes" xml:space="preserve">
          <source>Returns an Erlang unsigned integer object with the value specified in &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 에 지정된 값을 가진 Erlang 부호없는 정수 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b163f688f77c348943e0af13fe017fd1f9afb89a" translate="yes" xml:space="preserve">
          <source>Returns an Erlang variable object with the name &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">이름이 &lt;code&gt;name&lt;/code&gt; 인 Erlang 변수 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="72560455363d77db550fcad32e03d01e8e464568" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the build type of the runtime system. This is normally the atom &lt;code&gt;opt&lt;/code&gt; for optimized. Other possible return values are &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;purify&lt;/code&gt;, &lt;code&gt;quantify&lt;/code&gt;, &lt;code&gt;purecov&lt;/code&gt;, &lt;code&gt;gcov&lt;/code&gt;, &lt;code&gt;valgrind&lt;/code&gt;, &lt;code&gt;gprof&lt;/code&gt;, and &lt;code&gt;lcnt&lt;/code&gt;. Possible return values can be added or removed at any time without prior notice.</source>
          <target state="translated">런타임 시스템의 빌드 유형을 설명하는 아톰을 리턴합니다. 이것은 일반적으로 원자가 &lt;code&gt;opt&lt;/code&gt; 를 위해 선택한 것 입니다. 다른 가능한 반환 값은 &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;purify&lt;/code&gt; , &lt;code&gt;quantify&lt;/code&gt; , &lt;code&gt;purecov&lt;/code&gt; , &lt;code&gt;gcov&lt;/code&gt; 는 , &lt;code&gt;valgrind&lt;/code&gt; , &lt;code&gt;gprof&lt;/code&gt; 은 , 그리고 &lt;code&gt;lcnt&lt;/code&gt; . 가능한 반환 값은 사전 통지없이 언제든지 추가하거나 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f04a1f5f0a498f6dd001e66e2a7cfac6343a21d1" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the dynamic trace framework compiled into the virtual machine. It can be &lt;code&gt;dtrace&lt;/code&gt;, &lt;code&gt;systemtap&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. For a commercial or standard build, it is always &lt;code&gt;none&lt;/code&gt;. The other return values indicate a custom configuration (for example, &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt;). For more information about dynamic tracing, see &lt;code&gt; dyntrace(3)&lt;/code&gt; manual page and the &lt;code&gt;README.dtrace&lt;/code&gt;/&lt;code&gt;README.systemtap&lt;/code&gt; files in the Erlang source code top directory.</source>
          <target state="translated">가상 머신에 컴파일 된 동적 추적 프레임 워크를 설명하는 원자를 반환합니다. &lt;code&gt;dtrace&lt;/code&gt; , &lt;code&gt;systemtap&lt;/code&gt; 또는 &lt;code&gt;none&lt;/code&gt; 일 수 있습니다 . 상업용 또는 표준 빌드의 경우 항상 &lt;code&gt;none&lt;/code&gt; 입니다. 다른 반환 값은 사용자 지정 구성을 나타냅니다 (예 : &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; ). 동적 추적에 대한 자세한 내용은 &lt;code&gt; dyntrace(3)&lt;/code&gt; 매뉴얼 페이지 및 Erlang 소스 코드 최상위 디렉토리 의 &lt;code&gt;README.dtrace&lt;/code&gt; / &lt;code&gt;README.systemtap&lt;/code&gt; 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="003054975617245e964de16aa3f1604dc487dd8a" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the dynamic trace framework compiled into the virtual machine. It can be &lt;code&gt;dtrace&lt;/code&gt;, &lt;code&gt;systemtap&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. For a commercial or standard build, it is always &lt;code&gt;none&lt;/code&gt;. The other return values indicate a custom configuration (for example, &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt;). For more information about dynamic tracing, see &lt;code&gt;dyntrace(3)&lt;/code&gt; manual page and the &lt;code&gt;README.dtrace&lt;/code&gt;/&lt;code&gt;README.systemtap&lt;/code&gt; files in the Erlang source code top directory.</source>
          <target state="translated">가상 머신으로 컴파일 된 동적 추적 프레임 워크를 설명하는 아톰을 리턴합니다. &lt;code&gt;dtrace&lt;/code&gt; , &lt;code&gt;systemtap&lt;/code&gt; 또는 &lt;code&gt;none&lt;/code&gt; 일 수 있습니다 . 상업용 또는 표준 빌드의 경우 항상 &lt;code&gt;none&lt;/code&gt; 입니다. 다른 반환 값은 사용자 지정 구성을 나타냅니다 (예 : &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; ). 동적 추적에 대한 자세한 내용은 &lt;code&gt;dyntrace(3)&lt;/code&gt; 매뉴얼 페이지와 Erlang 소스 코드 최상위 디렉토리 의 &lt;code&gt;README.dtrace&lt;/code&gt; / &lt;code&gt;README.systemtap&lt;/code&gt; 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9bb4cea76db43aeac51826cd029247df700ada1" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the mode of the code server: &lt;code&gt;interactive&lt;/code&gt; or &lt;code&gt;embedded&lt;/code&gt;.</source>
          <target state="translated">코드 서버의 모드를 설명하는 아톰 ( &lt;code&gt;interactive&lt;/code&gt; 또는 &lt;code&gt;embedded&lt;/code&gt; )을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4b51973d541e4b5b197b534360e4f378cd9f64dd" translate="yes" xml:space="preserve">
          <source>Returns an atom given a name &lt;code&gt;string&lt;/code&gt;. The atom is created and does not change, so the return value can be saved and reused, which is faster than looking up the atom several times.</source>
          <target state="translated">이름 &lt;code&gt;string&lt;/code&gt; 주어진 아톰을 반환 합니다 . 원자가 생성되고 변경되지 않으므로 반환 값을 저장하고 재사용 할 수있어 원자를 여러 번 찾는 것보다 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="7a85323f1923a2f1729a520bc4b67feb73350624" translate="yes" xml:space="preserve">
          <source>Returns an atom representing the module name.</source>
          <target state="translated">모듈 이름을 나타내는 아톰을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d67202c4124aa04da3d82fb6d5a23abce5ac778e" translate="yes" xml:space="preserve">
          <source>Returns an atom which is not already in the set &lt;code&gt;Used&lt;/code&gt;. This is equivalent to &lt;code&gt;new_variable_name(Function, Used)&lt;/code&gt;, where &lt;code&gt;Function&lt;/code&gt; maps a given integer &lt;code&gt;N&lt;/code&gt; to the atom whose name consists of &quot;&lt;code&gt;V&lt;/code&gt;&quot; followed by the numeral for &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">세트에 아직없는 원자를 반환합니다 &lt;code&gt;Used&lt;/code&gt; . 이것은 &lt;code&gt;new_variable_name(Function, Used)&lt;/code&gt; 과 동일합니다 . 여기서 &lt;code&gt;Function&lt;/code&gt; 는 주어진 정수 &lt;code&gt;N&lt;/code&gt; 을 이름이 &quot; &lt;code&gt;V&lt;/code&gt; &quot; 로 구성된 원자 에 &lt;code&gt;N&lt;/code&gt; 다음에 숫자가 오는 원자에 매핑합니다 .</target>
        </trans-unit>
        <trans-unit id="988e838fe7d5aef0f6c0550a01971cd083666dd3" translate="yes" xml:space="preserve">
          <source>Returns an empty binding structure.</source>
          <target state="translated">빈 바인딩 구조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9d49703761470f70420cbdc828629bf9e5b1cb70" translate="yes" xml:space="preserve">
          <source>Returns an empty list if &lt;code&gt;cnt&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;cnt&lt;/code&gt; 가 0 이면 빈 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a708e1d41ae8898a5d41e3dd0d64120fa89116b1" translate="yes" xml:space="preserve">
          <source>Returns an empty queue.</source>
          <target state="translated">빈 대기열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df37e4cd60f068eeb3d3ca2acc09e9fd502783b9" translate="yes" xml:space="preserve">
          <source>Returns an empty registry on success, otherwise &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">성공하면 빈 레지스트리를 반환하고, 그렇지 않으면 &lt;code&gt;NULL&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="23161e8696beb077ca5ff7f8ffdb2f4971911821" translate="yes" xml:space="preserve">
          <source>Returns an integer &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; &amp;lt; &lt;code&gt;rhs&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; = &lt;code&gt;rhs&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; &amp;gt; &lt;code&gt;rhs&lt;/code&gt;. Corresponds to the Erlang operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;, &lt;code&gt;=&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt; (but &lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;=:=&lt;/code&gt; or &lt;code&gt;=/=&lt;/code&gt;).</source>
          <target state="translated">반환 정수 &amp;lt; &lt;code&gt;0&lt;/code&gt; 의 경우 &lt;code&gt;lhs&lt;/code&gt; &amp;lt; &lt;code&gt;rhs&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; 의 경우는 &lt;code&gt;lhs&lt;/code&gt; = &lt;code&gt;rhs&lt;/code&gt; 및&amp;gt; &lt;code&gt;0&lt;/code&gt; 의 경우 &lt;code&gt;lhs&lt;/code&gt; &amp;gt; &lt;code&gt;rhs&lt;/code&gt; . 얼랑 연산자에 대응 &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;/=&lt;/code&gt; , &lt;code&gt;=&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , 및 &lt;code&gt;&amp;gt;&lt;/code&gt; (그러나 &lt;strong&gt;하지 &lt;/strong&gt; &lt;code&gt;=:=&lt;/code&gt; 또는 &lt;code&gt;=/=&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f1d9a5358491fa89656a3ef75ea3e77112b76c2c" translate="yes" xml:space="preserve">
          <source>Returns an integer by rounding &lt;code&gt;Number&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 를 반올림하여 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="42e7c4b497727c29e3a60dab6ddb84c79055cbef" translate="yes" xml:space="preserve">
          <source>Returns an integer by truncating &lt;code&gt;Number&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 를 자르면 정수가 반환 됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fa6cd31e25fbf671dcdc524f0f8fdc2ab6e357b4" translate="yes" xml:space="preserve">
          <source>Returns an integer or float that is the arithmetical absolute value of &lt;code&gt;Float&lt;/code&gt; or &lt;code&gt;Int&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; 또는 &lt;code&gt;Int&lt;/code&gt; 의 산술 절대 값 인 정수 또는 부동 소수점을 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="34b43dc6d74cce530672601405bf2dc2dea6ebd0" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of active connections.</source>
          <target state="translated">활성 연결 수를 나타내는 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3b95eb5322f95f7378ff3b2b852274a22ae1b2e3" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of replies that has originated from this Erlang node and still are active (and therefore consumes system resources).</source>
          <target state="translated">이 Erlang 노드에서 시작되어 여전히 활성 상태 (따라서 시스템 자원을 소비) 인 응답 수를 나타내는 정수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b98345e2c7b425ca817567c3203a95df510202a5" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of requests that has originated from this Erlang node and still are active (and therefore consumes system resources).</source>
          <target state="translated">이 Erlang 노드에서 시작되어 여전히 활성화되어 시스템 자원을 소비하는 요청 수를 나타내는 정수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fa3be6822bf2f17b33b0118cdae4604c26865fd5" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the number of bytes needed to contain &lt;code&gt;Bitstring&lt;/code&gt;. That is, if the number of bits in &lt;code&gt;Bitstring&lt;/code&gt; is not divisible by 8, the resulting number of bytes is rounded &lt;strong&gt;up&lt;/strong&gt;. Examples:</source>
          <target state="translated">&lt;code&gt;Bitstring&lt;/code&gt; 을 포함하는 데 필요한 바이트 수인 정수를 리턴합니다 . 즉, &lt;code&gt;Bitstring&lt;/code&gt; 의 비트 수가 8로 나눌 수없는 경우 결과 바이트 수는 반올림 &lt;strong&gt;됩니다&lt;/strong&gt; . 예 :</target>
        </trans-unit>
        <trans-unit id="a0ccc3445984cd8ca41ce2c94d384ac9dd3f4eb9" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the number of elements in &lt;code&gt;Tuple&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Tuple&lt;/code&gt; 의 요소 수인 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad0adf24553b9086dfd682de31eca972d4b7c381" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the size in bits of &lt;code&gt;Bitstring&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Bitstring&lt;/code&gt; 의 비트 단위 크기의 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="762aa9ecbb62d3c742e303f6ee84a4d568033d71" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation in base &lt;code&gt;Base&lt;/code&gt; is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Base&lt;/code&gt; 의 텍스트 표현 이 &lt;code&gt;Binary&lt;/code&gt; 인 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5a0a03b4d74a10e949a947ee296fd9d8ea4f617" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation in base &lt;code&gt;Base&lt;/code&gt; is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Base&lt;/code&gt; 의 텍스트 표현 이 &lt;code&gt;String&lt;/code&gt; 인 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e3560c665353cecfc79e5afa38a4b5bae858a32e" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;Binary&lt;/code&gt; 인 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8eacb8a6026b61056725ece1110b069482677e14" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;String&lt;/code&gt; 인 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f94153a9b60ae8655262dd32603d003b4560fdb5" translate="yes" xml:space="preserve">
          <source>Returns an integer, that is the size in bytes, of the binary that would be the result of &lt;code&gt;iolist_to_binary(Item)&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;iolist_to_binary(Item)&lt;/code&gt; 의 결과 인 이진의 정수 (바이트 크기)를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0c93d5fc3d93036110d84e23d9645cf1ef2f6b11" translate="yes" xml:space="preserve">
          <source>Returns an integer, which is the number of key-value pairs in &lt;code&gt;Map&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 의 키-값 쌍 수인 정수를 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="09a372e2de3544caaeeb7f5db805f15bde609b8a" translate="yes" xml:space="preserve">
          <source>Returns an iovec that is made from the integers and binaries in &lt;code&gt;IoListOrBinary&lt;/code&gt;.</source>
          <target state="translated">의 정수와 바이너리로 만든되는 iovec 반환 &lt;code&gt;IoListOrBinary&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="e1d2203f2c4260e64bd616e0af5c56feb4679bb0" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Set&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The difference as compared to the iterator returned by &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; is that the first element greater than or equal to &lt;code&gt;Element&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 항목을 순회하는 데 사용할 수있는 반복자를 리턴합니다 . &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; 에 의해 리턴 된 반복자 와 비교할 때의 차이점은 &lt;code&gt;Element&lt;/code&gt; 보다 크거나 같은 첫 번째 요소 가 리턴 된다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="bf26d648fe3f9ada4031ee789c3c86a3374d50fe" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Set&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The implementation of this is very efficient; traversing the whole set using &lt;code&gt;next/1&lt;/code&gt; is only slightly slower than getting the list of all elements using &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; and traversing that. The main advantage of the iterator approach is that it does not require the complete list of all elements to be built in memory at one time.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 항목을 순회하는 데 사용할 수있는 반복자를 리턴합니다 . &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 참조하십시오 . 이 구현은 매우 효율적입니다. &lt;code&gt;next/1&lt;/code&gt; 을 사용하여 전체 세트를 순회하는 것은 &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; 을 사용하여 모든 요소의 목록을 가져 와서 순회하는 것보다 약간 느립니다 . 반복자 접근 방식의 주요 장점은 모든 요소의 전체 목록을 한 번에 메모리에 빌드 할 필요가 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="41cf66b1df0def909f57f1fe8897f565fd27185b" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Tree&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The difference as compared to the iterator returned by &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; is that the first key greater than or equal to &lt;code&gt;Key&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 의 항목을 순회하는 데 사용할 수있는 반복자를 반환합니다 . &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 참조하십시오 . 리턴하여 반복기와 비교하여 차이 &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; 같거나보다 큰 제 키이다 &lt;code&gt;Key&lt;/code&gt; 반환된다.</target>
        </trans-unit>
        <trans-unit id="e6603b1e8419e4b3a9c53586d55b1e117fa59add" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Tree&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The implementation of this is very efficient; traversing the whole tree using &lt;code&gt;next/1&lt;/code&gt; is only slightly slower than getting the list of all elements using &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; and traversing that. The main advantage of the iterator approach is that it does not require the complete list of all elements to be built in memory at one time.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 의 항목을 순회하는 데 사용할 수있는 반복자를 반환합니다 . &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; 참조하십시오 . 이 구현은 매우 효율적입니다. &lt;code&gt;next/1&lt;/code&gt; 을 사용하여 전체 트리를 순회하는 것은 &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; 을 사용하여 모든 요소의 목록을 가져 와서 순회하는 것보다 약간 느립니다 . 반복자 접근 방식의 주요 장점은 모든 요소의 전체 목록을 한 번에 메모리에 빌드 할 필요가 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="251efe7b1ee7e8402270eee07d4c38a31a180ae5" translate="yes" xml:space="preserve">
          <source>Returns an open file descriptor on success, otherwise a negative value. In the latter case &lt;code&gt;erl_errno&lt;/code&gt; is set to one of:</source>
          <target state="translated">성공하면 열린 파일 설명자를 반환하고, 그렇지 않으면 음수 값을 반환합니다. 후자의 경우 &lt;code&gt;erl_errno&lt;/code&gt; 는 다음 중 하나로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="fdfffa9137c7a5414315c48e30aecab15892963e" translate="yes" xml:space="preserve">
          <source>Returns an ordered set of the elements in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">반환은은의 요소 세트 주문 &lt;code&gt;List&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5eda07451a3577540ca80f6508ad9ae729211c1" translate="yes" xml:space="preserve">
          <source>Returns an ordered-set list of the names of all variables in the syntax tree. (This includes function name variables.) An exception is thrown if &lt;code&gt;Tree&lt;/code&gt; does not represent a well-formed Core Erlang syntax tree.</source>
          <target state="translated">구문 트리에있는 모든 변수 이름의 정렬 된 목록을 반환합니다. (여기에는 함수 이름 변수가 포함됩니다.) &lt;code&gt;Tree&lt;/code&gt; 가 제대로 구성된 Core Erlang 구문 트리를 나타내지 않으면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="3dcf143c406cc677eb02ad78c6375d68b0b0956e" translate="yes" xml:space="preserve">
          <source>Returns an unordered list of the keys used in &lt;code&gt;List&lt;/code&gt;, not containing duplicates.</source>
          <target state="translated">중복되지 않은 &lt;code&gt;List&lt;/code&gt; 에 사용 된 키의 순서가없는 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d0257854f95b8e3b83216dc68878936b5858023c" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; from the vertex to some vertex of &lt;code&gt;Vertices&lt;/code&gt;. In particular, as paths can have length zero, the vertices of &lt;code&gt;Vertices&lt;/code&gt; are included in the returned list.</source>
          <target state="translated">목록의 각 정점에 대해 정점에서 정점의 &lt;code&gt;Vertices&lt;/code&gt; 까지의 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 가 있도록 정렬되지 않은 digraph 정점 목록을 반환합니다 . 특히 경로의 길이가 0 일 수 있으므로 정점의 &lt;code&gt;Vertices&lt;/code&gt; 이 반환 된 목록에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f55e9014080b34fc9b11903183d78f6396199723" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; from some vertex of &lt;code&gt;Vertices&lt;/code&gt; to the vertex. In particular, as paths can have length zero, the vertices of &lt;code&gt;Vertices&lt;/code&gt; are included in the returned list.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; 정점의 정렬되지 않은 목록을 반환하여 목록의 각 정점에 대해 Digraph에 정점의 &lt;code&gt;Vertices&lt;/code&gt; 에서 정점까지 의 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 가 있도록합니다. 특히 경로의 길이가 0 일 수 있으므로 정점의 &lt;code&gt;Vertices&lt;/code&gt; 이 반환 된 목록에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="534915567af70fcc2b08c5e57e82d2863b827ac4" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; of length one or more from some vertex of &lt;code&gt;Vertices&lt;/code&gt; to the vertex. As a consequence, only those vertices of &lt;code&gt;Vertices&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; are returned.</source>
          <target state="translated">반환 소리를 나타내는 두 글자의 정렬되지 않은 목록은 목록의 각 정점를 들어,이되도록 정점 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;Digraph&lt;/code&gt; 길이 하나 또는 그 이상의 일부 정점에서의 &lt;code&gt;Vertices&lt;/code&gt; 정점에가. 결과적으로 일부 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 포함 된 정점의 &lt;code&gt;Vertices&lt;/code&gt; 만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f28355e536bf47a1f0c2fd3ce97c5f1e224ca28a" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; of length one or more from the vertex to some vertex of &lt;code&gt;Vertices&lt;/code&gt;. Therefore only those vertices of &lt;code&gt;Vertices&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; are returned.</source>
          <target state="translated">목록의 각 정점에 대해 정점에서 정점의 &lt;code&gt;Vertices&lt;/code&gt; 까지 하나 이상의 길이 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; 가 있도록 정렬되지 않은 digraph 정점 목록을 반환합니다 . 따라서 일부 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 포함 된 정점의 &lt;code&gt;Vertices&lt;/code&gt; 만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="518449232fbe1ed623aaeb282017025b66e1fc06" translate="yes" xml:space="preserve">
          <source>Returns and purges the list of text strings buffered during the latest session of capturing printouts to &lt;code&gt;stdout&lt;/code&gt;. Log categories that are to be ignored in &lt;code&gt;ListOfStrings&lt;/code&gt; can be specified with &lt;code&gt;ExclCategories&lt;/code&gt;. If &lt;code&gt;ExclCategories = []&lt;/code&gt;, no filtering takes place.</source>
          <target state="translated">인쇄물을 캡처하는 최신 세션 중에 버퍼링 된 텍스트 문자열 목록을 &lt;code&gt;stdout&lt;/code&gt; 으로 반환하고 제거합니다 . 무시 될 수 있습니다 로그 범주 &lt;code&gt;ListOfStrings&lt;/code&gt; 을 지정할 수 있습니다 &lt;code&gt;ExclCategories&lt;/code&gt; . 만약 &lt;code&gt;ExclCategories = []&lt;/code&gt; , 아무런 필터링은 일어나지 않는다.</target>
        </trans-unit>
        <trans-unit id="0a94e185cbeae786ecd84f1870ec12764f587327" translate="yes" xml:space="preserve">
          <source>Returns and removes a list of all objects with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 의 &lt;code&gt;Key&lt;/code&gt; 키가 있는 모든 객체의 목록을 반환하고 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="2448fb9033f4608431484c2e881e5499cd1e0e89" translate="yes" xml:space="preserve">
          <source>Returns annotations with representation Term.</source>
          <target state="translated">용어가 Term 인 주석을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8eec22103cb622707f198ede42b94d4929cae615" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; 에서 반환 된 튜플 목록에서 &lt;code&gt;userdata&lt;/code&gt; 태그로 지정된 데이터를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f6dc490b367d3da98d3e0ddeb7d371725e4d44de" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;&lt;a href=&quot;ct_suite#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ct_suite#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; 에서 반환 된 튜플 목록에서 &lt;code&gt;userdata&lt;/code&gt; 태그로 지정된 모든 데이터를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b580ad2eb1c2b5c00d42b03d280cb2c743b9ff93" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;Suite:group(GroupName)&lt;/code&gt; or &lt;code&gt;Suite:Case()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Suite:group(GroupName)&lt;/code&gt; 또는 &lt;code&gt;Suite:Case()&lt;/code&gt; 에서 리턴 된 튜플 목록에서 &lt;code&gt;userdata&lt;/code&gt; 태그로 지정된 데이터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1dae253bd97a89263ed4726b4d9bf9d4155e09f6" translate="yes" xml:space="preserve">
          <source>Returns any plain command-line arguments as a list of strings (possibly empty).</source>
          <target state="translated">일반 명령 행 인수를 문자열 목록으로 리턴합니다 (비어있을 수 있음).</target>
        </trans-unit>
        <trans-unit id="c5c6703549d09920f0f5a93b1f134e5a5e890e90" translate="yes" xml:space="preserve">
          <source>Returns captured substrings as pairs of byte indexes into the subject string and length of the matching string in the subject (as if the subject string was flattened with &lt;code&gt; erlang:iolist_to_binary/1&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt; unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; before matching). Notice that option &lt;code&gt;unicode&lt;/code&gt; results in &lt;strong&gt;byte-oriented&lt;/strong&gt; indexes in a (possibly virtual) &lt;strong&gt;UTF-8 encoded&lt;/strong&gt; binary. A byte index tuple &lt;code&gt;{0,2}&lt;/code&gt; can therefore represent one or two characters when &lt;code&gt;unicode&lt;/code&gt; is in effect. This can seem counter-intuitive, but has been deemed the most effective and useful way to do it. To return lists instead can result in simpler code if that is desired. This return type is the default.</source>
          <target state="translated">캡처 된 하위 문자열을 제목 문자열에 대한 바이트 인덱스 쌍으로 반환하고 제목에서 일치하는 문자열의 길이를 반환합니다 (예 : 제목 문자열이 일치하기 전에 &lt;code&gt; erlang:iolist_to_binary/1&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt; unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; 로 병합 된 것처럼 ). 옵션 &lt;code&gt;unicode&lt;/code&gt; 는 (가상 일 수있는) &lt;strong&gt;UTF-8 인코딩&lt;/strong&gt; 바이너리 에서 &lt;strong&gt;바이트 지향&lt;/strong&gt; 인덱스를 생성 합니다. 따라서 바이트 색인 튜플 &lt;code&gt;{0,2}&lt;/code&gt; 은 &lt;code&gt;unicode&lt;/code&gt; 가 적용될 때 한두 문자를 나타낼 수 있습니다 . 이것은 직관적이지 않은 것처럼 보일 수 있지만 가장 효과적이고 유용한 방법으로 간주되었습니다. 대신 목록을 반환하면 원하는 경우 코드가 더 간단해질 수 있습니다. 이 반환 유형이 기본값입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd4cba92cb758d0327a7e88229536ba937439243" translate="yes" xml:space="preserve">
          <source>Returns captured substrings as pairs of byte indexes into the subject string and length of the matching string in the subject (as if the subject string was flattened with &lt;code&gt;erlang:iolist_to_binary/1&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; before matching). Notice that option &lt;code&gt;unicode&lt;/code&gt; results in &lt;strong&gt;byte-oriented&lt;/strong&gt; indexes in a (possibly virtual) &lt;strong&gt;UTF-8 encoded&lt;/strong&gt; binary. A byte index tuple &lt;code&gt;{0,2}&lt;/code&gt; can therefore represent one or two characters when &lt;code&gt;unicode&lt;/code&gt; is in effect. This can seem counter-intuitive, but has been deemed the most effective and useful way to do it. To return lists instead can result in simpler code if that is desired. This return type is the default.</source>
          <target state="translated">캡처 된 &lt;code&gt;erlang:iolist_to_binary/1&lt;/code&gt; 스트링을 주제 문자열에 바이트 색인 쌍으로 주제와 일치하는 문자열의 길이로 리턴합니다 (주제 문자열이 일치하기 전에 erlang : iolist_to_binary / 1 또는 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; 로 전개 된 것처럼 ). &lt;code&gt;unicode&lt;/code&gt; 옵션 은 (가상 가상의) &lt;strong&gt;UTF-8 인코딩&lt;/strong&gt; 바이너리 에서 &lt;strong&gt;바이트 지향&lt;/strong&gt; 인덱스를 생성 합니다. 따라서 &lt;code&gt;unicode&lt;/code&gt; 가 적용되는 경우 바이트 인덱스 튜플 &lt;code&gt;{0,2}&lt;/code&gt; 는 하나 또는 두 개의 문자를 나타낼 수 있습니다 . 이것은 직관적이지 않은 것처럼 보일 수 있지만 가장 효과적이고 유용한 방법으로 간주됩니다. 원하는 경우 목록을 반환하면 더 간단한 코드가 생성 될 수 있습니다. 이 반환 유형이 기본값입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e369d9a71630206756798203becbc53e7728adeb" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">인수로 전달 된 &lt;code&gt;Unit&lt;/code&gt; 로 변환 된 현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f797f69d451a2435ad92ddb2b8a08b9b87b47b5c" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3f7165b6b66e3bdfe0e7fe3e2305081d07bd8e2f" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; on the format &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt;. This format is the same as &lt;code&gt; os:timestamp/0&lt;/code&gt; and the deprecated &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt; erlang:now/0&lt;/a&gt;&lt;/code&gt; use. The reason for the existence of &lt;code&gt;erlang:timestamp()&lt;/code&gt; is purely to simplify use for existing code that assumes this time stamp format. Current Erlang system time can more efficiently be retrieved in the time unit of your choice using &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt; erlang:system_time/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt; 형식으로 현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 을 반환 합니다. 이 형식은 &lt;code&gt; os:timestamp/0&lt;/code&gt; 및 더 이상 사용되지 않는 &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt; erlang:now/0&lt;/a&gt;&lt;/code&gt; 사용과 동일합니다. &lt;code&gt;erlang:timestamp()&lt;/code&gt; 가 존재하는 이유는 순전히이 타임 스탬프 형식을 가정하는 기존 코드의 사용을 단순화하기위한 것입니다. 현재 Erlang 시스템 시간은 &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt; erlang:system_time/1&lt;/a&gt;&lt;/code&gt; 을 사용하여 선택한 시간 단위로보다 효율적으로 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="997359c09668c7069c3575aa744eed8df1d53049" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">인수로 전달 된 &lt;code&gt;Unit&lt;/code&gt; 로 변환 된 현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d070a56a6b625aa547a552856e89f99d16aaab43" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f63e6508cd9e75a0611137fbfdf6f5c3756b3ee7" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; on the format &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt;. This format is the same as &lt;code&gt;os:timestamp/0&lt;/code&gt; and the deprecated &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt;erlang:now/0&lt;/a&gt;&lt;/code&gt; use. The reason for the existence of &lt;code&gt;erlang:timestamp()&lt;/code&gt; is purely to simplify use for existing code that assumes this time stamp format. Current Erlang system time can more efficiently be retrieved in the time unit of your choice using &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt; 형식으로 반환 합니다. 이 형식은 &lt;code&gt;os:timestamp/0&lt;/code&gt; 및 더 이상 사용되지 않는 &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt;erlang:now/0&lt;/a&gt;&lt;/code&gt; 사용과 동일합니다. &lt;code&gt;erlang:timestamp()&lt;/code&gt; 가 존재하는 이유 는이 타임 스탬프 형식을 가정하는 기존 코드의 사용을 단순화하기 위해서입니다. &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt; 을 사용하여 선택한 시간 단위로 현재 Erlang 시스템 시간을보다 효율적으로 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24a27c8c497c79d0b77fe1926ba6380d8a40002f" translate="yes" xml:space="preserve">
          <source>Returns current date and time as the data type DateAndTime, as specified in RFC1903. This is an OCTET STRING.</source>
          <target state="translated">RFC1903에 지정된대로 현재 날짜 및 시간을 데이터 유형 DateAndTime으로 리턴합니다. OCTET STRING입니다.</target>
        </trans-unit>
        <trans-unit id="58b4d45688c89e92a5d1d069f171f6e770908925" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;ERL_TICK&lt;/code&gt; or the &lt;code&gt;msgtype&lt;/code&gt; field of the &lt;code&gt;erlang_msg *msg&lt;/code&gt;. The length of the message is put in &lt;code&gt;*msglen&lt;/code&gt;. On error a value &lt;code&gt;&amp;lt; 0&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;ERL_TICK&lt;/code&gt; 또는 &lt;code&gt;erlang_msg *msg&lt;/code&gt; 의 &lt;code&gt;msgtype&lt;/code&gt; 필드를 리턴합니다 . 메시지 길이는 &lt;code&gt;*msglen&lt;/code&gt; 에 있습니다. 오류가 발생하면 &lt;code&gt;&amp;lt; 0&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7c8f5ac2a445b3814ba7f8e5716fd69d614e67f9" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{ok, Result}&lt;/code&gt; if the operation was successful, or &lt;code&gt;{error, Reason}&lt;/code&gt; if the current tracer is a process or if it is a port not supporting the operation.</source>
          <target state="translated">반환 값 중 하나를 &lt;code&gt;ok&lt;/code&gt; 또는 &lt;code&gt;{ok, Result}&lt;/code&gt; 작업이 성공하거나 있다면 &lt;code&gt;{error, Reason}&lt;/code&gt; 현재 추적이 과정 또는 경우 포트가이 조작을 지원하지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="a6b787e7a2bbffd850f45f0d713920a67ee4a0d2" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;{module, Module}&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; if loading fails. &lt;code&gt;Reason&lt;/code&gt; is one of the following:</source>
          <target state="translated">로드에 실패하면 &lt;code&gt;{module, Module}&lt;/code&gt; 또는 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴 합니다. &lt;code&gt;Reason&lt;/code&gt; 는 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="7a7249bc329d9fb9405d3f4c79e87256b4499e0d" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;{ok, undefined}&lt;/code&gt; if no crypto key fun is registered, or &lt;code&gt;{ok, Term}&lt;/code&gt;, where &lt;code&gt;Term&lt;/code&gt; is the return value from &lt;code&gt;CryptoKeyFun(clear)&lt;/code&gt;, see &lt;code&gt;crypto_key_fun/1&lt;/code&gt;.</source>
          <target state="translated">반환 중 &lt;code&gt;{ok, undefined}&lt;/code&gt; 에는 암호 키 재미가 등록되지 않은 경우 또는 &lt;code&gt;{ok, Term}&lt;/code&gt; , &lt;code&gt;Term&lt;/code&gt; 의 반환 값 &lt;code&gt;CryptoKeyFun(clear)&lt;/code&gt; 참조 &lt;code&gt;crypto_key_fun/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e5069174115750570cddd31cc2cef10b9ef79b1" translate="yes" xml:space="preserve">
          <source>Returns either the arity of an Erlang tuple or the number of bytes in an Erlang binary object.</source>
          <target state="translated">Erlang 튜플의 arity 또는 Erlang 이진 객체의 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9d607c213646af91692ae675dd3aac634aacaecf" translate="yes" xml:space="preserve">
          <source>Returns either the key following &lt;code&gt;Key1&lt;/code&gt; in table &lt;code&gt;Name&lt;/code&gt; according to the internal order of the table, or &lt;code&gt;'$end_of_table'&lt;/code&gt; if there is no next key.</source>
          <target state="translated">테이블 의 내부 순서에 따라 테이블 &lt;code&gt;Name&lt;/code&gt; 에서 &lt;code&gt;Key1&lt;/code&gt; 다음에 오는 키를 반환하거나 다음 키가 없으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d5bc2dbc9587e6ef5460dad5cf3f87b237cc728c" translate="yes" xml:space="preserve">
          <source>Returns either the value of &lt;code&gt;Expr1&lt;/code&gt; (that is, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) or the value of &lt;code&gt;Expr2&lt;/code&gt; (if &lt;code&gt;Expr2&lt;/code&gt; is evaluated).</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; 값 (즉, &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; ) 또는 &lt;code&gt;Expr2&lt;/code&gt; 값 ( &lt;code&gt;Expr2&lt;/code&gt; 가 평가 된 경우)을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="6323eed878e360580ee27b0c7c7fcd513bdc13b3" translate="yes" xml:space="preserve">
          <source>Returns for each object of table &lt;code&gt;Name&lt;/code&gt; that matches &lt;code&gt;Pattern&lt;/code&gt; a list of bindings in some unspecified order. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;. If the keypos'th element of &lt;code&gt;Pattern&lt;/code&gt; is unbound, all table objects are matched. If the keypos'th element is bound, only the objects with the correct key are matched.</source>
          <target state="translated">일치 하는 테이블 &lt;code&gt;Name&lt;/code&gt; 의 각 오브젝트에 대해 리턴합니다 . 바인딩 목록을 지정되지 않은 순서로 &lt;code&gt;Pattern&lt;/code&gt; 하십시오. 패턴에 대한 설명은 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;Pattern&lt;/code&gt; 의 keypos'th 요소 가 바인드되지 않으면 모든 테이블 오브젝트가 일치합니다. keypos'th 요소가 바인딩 된 경우 올바른 키를 가진 개체 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="918c4edfa410fe0325d57cd8b0922f70f40f5c41" translate="yes" xml:space="preserve">
          <source>Returns fractions of real-time or run-time spent in the various threads from the given microstate statistics values.</source>
          <target state="translated">주어진 마이크로 상태 통계 값에서 다양한 스레드에 소요 된 실시간 또는 런타임의 일부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f67e767c1786e9a6e8c8f714e5c031353ef2065b" translate="yes" xml:space="preserve">
          <source>Returns information about &lt;code&gt;Fun&lt;/code&gt; as specified by &lt;code&gt;Item&lt;/code&gt;, in the form &lt;code&gt;{Item,Info}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된대로 &lt;code&gt;Fun&lt;/code&gt; 에 대한 정보를 &lt;code&gt;{Item,Info}&lt;/code&gt; 형식 으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="29427c069c86e73d452e6c2cf589458f1b031710" translate="yes" xml:space="preserve">
          <source>Returns information about Erlang Distribution in the current system as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된대로 현재 시스템의 Erlang Distribution에 대한 정보를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="00381d055f3b647b59d9ffa1642b39ddd0b2cebb" translate="yes" xml:space="preserve">
          <source>Returns information about a TFTP daemon, server, or client process.</source>
          <target state="translated">TFTP 데몬, 서버 또는 클라이언트 프로세스에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d157a1aae5cc57d7500e4b1afdd969529c16fccb" translate="yes" xml:space="preserve">
          <source>Returns information about a connection intended for e.g debugging or logging.</source>
          <target state="translated">예를 들어 디버깅 또는 로깅을위한 연결에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="320e9d3b701a0f26129d0bdc14183e5f9c50e1d7" translate="yes" xml:space="preserve">
          <source>Returns information about a daemon intended for e.g debugging or logging.</source>
          <target state="translated">예를 들어 디버깅 또는 로깅을위한 데몬에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="34ac827a99e8836cb168ff01024d0483b709e391" translate="yes" xml:space="preserve">
          <source>Returns information about a query handle. The information describes the simplifications and optimizations that are the results of preparing the query for evaluation. This function is probably mainly useful during debugging.</source>
          <target state="translated">쿼리 핸들에 대한 정보를 반환합니다. 이 정보는 평가를 위해 쿼리를 준비한 결과 인 단순화 및 최적화에 대해 설명합니다. 이 기능은 주로 디버깅 중에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b61c6f9e4f952792d73b74ecc86a589c837dcde2" translate="yes" xml:space="preserve">
          <source>Returns information about a registry. Using information returned by this function, you can see whether the size of the registry is suitable for the amount of data it contains.</source>
          <target state="translated">레지스트리에 대한 정보를 반환합니다. 이 함수에서 반환 된 정보를 사용하여 레지스트리 크기가 포함 된 데이터 양에 적합한 지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aaf544708d3f6a6ee99b4924c5f04dc700680b39" translate="yes" xml:space="preserve">
          <source>Returns information about all TFTP daemon processes.</source>
          <target state="translated">모든 TFTP 데몬 프로세스에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="73ad91d00ddb0e0ae60c348b4d17a6c6912df3e9" translate="yes" xml:space="preserve">
          <source>Returns information about all TFTP server processes.</source>
          <target state="translated">모든 TFTP 서버 프로세스에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20cb52f97ce8bf1d78906f33ba8345818f41a092" translate="yes" xml:space="preserve">
          <source>Returns information about an object.</source>
          <target state="translated">객체에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8b2f681c86231b46727d63fab0ac4094e7d23f0c" translate="yes" xml:space="preserve">
          <source>Returns information about garbage collection, for example:</source>
          <target state="translated">가비지 수집에 대한 정보를 반환합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="2c7aed6202813fcc443975dd687501d0a3102dc9" translate="yes" xml:space="preserve">
          <source>Returns information about how the user has requested schedulers to be bound or not bound.</source>
          <target state="translated">사용자가 스케줄러를 바인드하도록 요청한 방법에 대한 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2ec089f54f08182afed4881a4e1669c367ccf309" translate="yes" xml:space="preserve">
          <source>Returns information about reductions, for example:</source>
          <target state="translated">축소에 대한 정보를 반환합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="c92f6d947bb85f7605a3005fad497b9d3a3569f4" translate="yes" xml:space="preserve">
          <source>Returns information about runtime, in milliseconds.</source>
          <target state="translated">런타임에 대한 정보를 밀리 초 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="75991b90e4fe86df8cf66783088e92e710b74bab" translate="yes" xml:space="preserve">
          <source>Returns information about schedulers, scheduling and threads in the current system as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된대로 현재 시스템의 스케줄러, 스케줄링 및 스레드에 대한 정보를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ae97536a283bf5c0b56cfec555d6233fcde3756a" translate="yes" xml:space="preserve">
          <source>Returns information about table &lt;code&gt;Name&lt;/code&gt; as a list of tuples:</source>
          <target state="translated">테이블 &lt;code&gt;Name&lt;/code&gt; 에 대한 정보 를 튜플 목록으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6f85c1f156b4fca3e99653ec5d74d9444618729e" translate="yes" xml:space="preserve">
          <source>Returns information about table &lt;code&gt;Tab&lt;/code&gt; as a list of tuples. If &lt;code&gt;Tab&lt;/code&gt; has the correct type for a table identifier, but does not refer to an existing ETS table, &lt;code&gt;undefined&lt;/code&gt; is returned. If &lt;code&gt;Tab&lt;/code&gt; is not of the correct type, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 에 대한 정보 를 튜플 목록으로 반환합니다 . 경우 &lt;code&gt;Tab&lt;/code&gt; 테이블 식별자에 대한 올바른 유형을 가지고 있지만 기존의 ETS 테이블을 참조하지 않고, &lt;code&gt;undefined&lt;/code&gt; 반환됩니다. &lt;code&gt;Tab&lt;/code&gt; 이 올바른 유형이 아닌 경우 &lt;code&gt;badarg&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3de9834a84497aba408c74c20b679b322fbc9bba" translate="yes" xml:space="preserve">
          <source>Returns information about the Mnesia system, such as transaction statistics, &lt;code&gt;db_nodes&lt;/code&gt;, and configuration parameters. The valid keys are as follows:</source>
          <target state="translated">트랜잭션 통계, &lt;code&gt;db_nodes&lt;/code&gt; 및 구성 매개 변수와 같은 Mnesia 시스템에 대한 정보를 리턴합니다 . 유효한 키는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b0ad6ab25e00fd31d6d42f5ef20dc55845a97d47" translate="yes" xml:space="preserve">
          <source>Returns information about the State in the argument. The information is the form of a map, which currently contains at least:</source>
          <target state="translated">인수의 상태에 대한 정보를 반환합니다. 정보는 현재 최소한 다음을 포함하는지도 형식입니다.</target>
        </trans-unit>
        <trans-unit id="3a624b5819d80f8d786c5c409c2f82ae4f7de210" translate="yes" xml:space="preserve">
          <source>Returns information about the current system (emulator) limits as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된 현재 시스템 (에뮬레이터) 제한에 대한 정보를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d6a1391af722b90c279e4ecd2014c5e15b18c3b" translate="yes" xml:space="preserve">
          <source>Returns information about the current system (emulator) time as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된 현재 시스템 (에뮬레이터) 시간에 대한 정보를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d683c5330deee43af8dda717b26cb8cb76a91f4" translate="yes" xml:space="preserve">
          <source>Returns information about the current system. The documentation of this function is broken into the following sections in order to make it easier to navigate.</source>
          <target state="translated">현재 시스템에 대한 정보를 반환합니다. 이 기능에 대한 설명서는보다 쉽게 ​​탐색 할 수 있도록 다음 섹션으로 구성되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9612263eb8e62ba51324bdb8f09116aa4b64a64c" translate="yes" xml:space="preserve">
          <source>Returns information about the currently used scheduler bindings.</source>
          <target state="translated">현재 사용 된 스케줄러 바인딩에 대한 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8e183acee45d9b4755dd07ddb202bcfed9f59615" translate="yes" xml:space="preserve">
          <source>Returns information about the default process heap settings:</source>
          <target state="translated">기본 프로세스 힙 설정에 대한 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e99647a7b11a6067aa29e2adfe9b2c26b0de9f54" translate="yes" xml:space="preserve">
          <source>Returns information about the process identified by &lt;code&gt;Pid&lt;/code&gt;, as specified by &lt;code&gt;Item&lt;/code&gt; or &lt;code&gt;ItemList&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 또는 &lt;code&gt;ItemList&lt;/code&gt; 로 지정된 &lt;code&gt;Pid&lt;/code&gt; 로 식별 된 프로세스에 대한 정보를 리턴합니다 . 프로세스가 활성 상태가 아닌 경우 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dedfb23643940b8e66d602f928ce947a170709bc" translate="yes" xml:space="preserve">
          <source>Returns information about the specified PLT.</source>
          <target state="translated">지정된 PLT에 대한 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="134c344e9d341c118ba638b32d9c75bd01f818e3" translate="yes" xml:space="preserve">
          <source>Returns information about the specified allocator. As from ERTS 5.6.1, the return value is a list of &lt;code&gt;{instance, InstanceNo, InstanceInfo}&lt;/code&gt; tuples, where &lt;code&gt;InstanceInfo&lt;/code&gt; contains information about a specific instance of the allocator. If &lt;code&gt;Alloc&lt;/code&gt; is not a recognized allocator, &lt;code&gt;undefined&lt;/code&gt; is returned. If &lt;code&gt;Alloc&lt;/code&gt; is disabled, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">지정된 할당 자에 대한 정보를 반환합니다. ERTS 5.6.1에서와 같이 리턴 값은 &lt;code&gt;{instance, InstanceNo, InstanceInfo}&lt;/code&gt; 튜플 의 목록입니다 . 여기서 &lt;code&gt;InstanceInfo&lt;/code&gt; 에는 할당 자의 특정 인스턴스에 대한 정보가 포함됩니다. &lt;code&gt;Alloc&lt;/code&gt; 이 인식 된 할당자가 아닌 경우 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다. 경우 &lt;code&gt;Alloc&lt;/code&gt; 비활성화되어, &lt;code&gt;false&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0a39703ed80d026886b97b29f3cb2305370a5bd2" translate="yes" xml:space="preserve">
          <source>Returns information about the table dumped to file by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; 로 파일에 덤프 된 테이블에 대한 정보를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ffdbd7494c0d40e81fbd66fbce3b02001cf630af" translate="yes" xml:space="preserve">
          <source>Returns information about wall clock. &lt;code&gt;wall_clock&lt;/code&gt; can be used in the same manner as &lt;code&gt;runtime&lt;/code&gt;, except that real time is measured as opposed to runtime or CPU time.</source>
          <target state="translated">벽시계에 대한 정보를 반환합니다. &lt;code&gt;wall_clock&lt;/code&gt; 은 런타임 또는 CPU 시간과 반대로 실시간을 측정한다는 점을 제외하고는 &lt;code&gt;runtime&lt;/code&gt; 과 동일한 방식으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="abb0cd19cdd8b0638cd14d51f38d146f23135edf" translate="yes" xml:space="preserve">
          <source>Returns information as specified by &lt;code&gt;Item&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 에 지정된 정보를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="83b83e2c4db217042bead4125a190b5bf0f10766" translate="yes" xml:space="preserve">
          <source>Returns internal statistics about &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;bag&lt;/code&gt;, and &lt;code&gt;duplicate_bag&lt;/code&gt; tables on an internal format used by OTP test suites. Not for production use.</source>
          <target state="translated">OTP 테스트 스위트에서 사용하는 내부 형식으로 &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;bag&lt;/code&gt; 및 &lt;code&gt;duplicate_bag&lt;/code&gt; 테이블에 대한 내부 통계를 리턴 합니다. 프로덕션 용이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fcc529961eeea2bcb6a3c57c8ae87e3e98ef2262" translate="yes" xml:space="preserve">
          <source>Returns internal statistics about tables on an internal format used by OTP test suites. Not for production use.</source>
          <target state="translated">OTP 테스트 스위트에서 사용하는 내부 형식의 테이블에 대한 내부 통계를 리턴합니다. 프로덕션 용이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0fdc64bc14710c38583f74335de4689eacba7eb7" translate="yes" xml:space="preserve">
          <source>Returns lexeme number &lt;code&gt;N&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;, where lexemes are separated by the grapheme clusters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에서 lexeme 번호 &lt;code&gt;N&lt;/code&gt; 을 반환합니다 . 여기서 lexemes는 &lt;code&gt;SeparatorList&lt;/code&gt; 의 grapheme 클러스터로 구분 됩니다.</target>
        </trans-unit>
        <trans-unit id="177742e996781c388cf44e159de27e03157e6cdc" translate="yes" xml:space="preserve">
          <source>Returns list of pids that are monitoring given port at the moment.</source>
          <target state="translated">현재 주어진 포트를 모니터링하고있는 pid 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e428b53fcffd274a623f9f135991769113470904" translate="yes" xml:space="preserve">
          <source>Returns local date and time converted from the return value from &lt;code&gt;erlang:timestamp/0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erlang:timestamp/0&lt;/code&gt; 의 리턴 값에서 변환 된 로컬 날짜 및 시간을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="833264d9c4c3210c6943d95bf1e760f7c657ae75" translate="yes" xml:space="preserve">
          <source>Returns local time.</source>
          <target state="translated">현지 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f6d1f81ffc8b25a8b6796831f820a4eee4709cca" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as binaries. If option &lt;code&gt;unicode&lt;/code&gt; is used, these binaries are in UTF-8. If the \C sequence is used together with &lt;code&gt;unicode&lt;/code&gt;, the binaries can be invalid UTF-8.</source>
          <target state="translated">일치하는 하위 문자열을 이진으로 반환합니다. &lt;code&gt;unicode&lt;/code&gt; 옵션 이 사용되는 경우이 바이너리는 UTF-8입니다. \ C 시퀀스가 &lt;code&gt;unicode&lt;/code&gt; 와 함께 사용되는 경우 이진은 유효하지 않은 UTF-8 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a23f2593c452c95374ebeefe7b8d677f721fe8c" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as lists of characters (Erlang &lt;code&gt;string()&lt;/code&gt;s). It option &lt;code&gt;unicode&lt;/code&gt; is used in combination with the \C sequence in the regular expression, a captured subpattern can contain bytes that are not valid UTF-8 (\C matches bytes regardless of character encoding). In that case the &lt;code&gt;list&lt;/code&gt; capturing can result in the same types of tuples that &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt; unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; can return, namely three-tuples with tag &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;, the successfully converted characters and the invalid UTF-8 tail of the conversion as a binary. The best strategy is to avoid using the \C sequence when capturing lists.</source>
          <target state="translated">일치하는 부분 문자열을 문자 목록으로 반환합니다 (Erlang &lt;code&gt;string()&lt;/code&gt; s). &lt;code&gt;unicode&lt;/code&gt; 옵션 은 정규식에서 \ C 시퀀스와 함께 사용되며 캡처 된 하위 패턴에는 유효한 UTF-8이 아닌 바이트가 포함될 수 있습니다 (\ C는 문자 인코딩에 관계없이 바이트와 일치 함). 그 경우 &lt;code&gt;list&lt;/code&gt; 캡처는 튜플의 같은 종류가 발생할 수 있습니다 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt; unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; , 태그, 즉 세 튜플 반환 할 수 &lt;code&gt;incomplete&lt;/code&gt; 하거나 &lt;code&gt;error&lt;/code&gt; , 성공적으로 변환 된 문자와 바이너리로 변환 잘못된 UTF-8 꼬리를 . 가장 좋은 전략은 목록을 캡처 할 때 \ C 시퀀스를 사용하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="df6fb542ac6298148c4628d7b50d50effc0823c9" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as lists of characters (Erlang &lt;code&gt;string()&lt;/code&gt;s). It option &lt;code&gt;unicode&lt;/code&gt; is used in combination with the \C sequence in the regular expression, a captured subpattern can contain bytes that are not valid UTF-8 (\C matches bytes regardless of character encoding). In that case the &lt;code&gt;list&lt;/code&gt; capturing can result in the same types of tuples that &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; can return, namely three-tuples with tag &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;, the successfully converted characters and the invalid UTF-8 tail of the conversion as a binary. The best strategy is to avoid using the \C sequence when capturing lists.</source>
          <target state="translated">일치하는 부분 문자열을 문자 목록 (Erlang &lt;code&gt;string()&lt;/code&gt; s) 으로 반환 합니다. 옵션 &lt;code&gt;unicode&lt;/code&gt; 는 정규식에서 \ C 시퀀스와 함께 사용되며, 캡처 된 서브 패턴은 UTF-8이 아닌 바이트를 포함 할 수 있습니다 (\ C는 문자 인코딩에 관계없이 바이트와 일치 함). 이 경우 &lt;code&gt;list&lt;/code&gt; 캡처로 인해 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; 가 리턴 할 수 있는 동일한 유형의 튜플 , 즉 태그가 &lt;code&gt;incomplete&lt;/code&gt; 하거나 &lt;code&gt;error&lt;/code&gt; 3 개의 튜플 , 성공적으로 변환 된 문자 및 변환의 유효하지 않은 UTF-8 꼬리가 2 진으로 표시 될 수 있습니다. . 가장 좋은 전략은 목록을 캡처 할 때 \ C 시퀀스를 사용하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="28ca01a6f5eb6005db2633f2649168fb78905dc4" translate="yes" xml:space="preserve">
          <source>Returns no matching subpatterns, gives the single atom &lt;code&gt;match&lt;/code&gt; as the return value of the function when matching successfully instead of the &lt;code&gt;{match, list()}&lt;/code&gt; return. Specifying an empty list gives the same behavior.</source>
          <target state="translated">일치하는 하위 패턴을 반환하지 않고 &lt;code&gt;{match, list()}&lt;/code&gt; 반환 대신 성공적으로 일치 할 때 단일 원자 &lt;code&gt;match&lt;/code&gt; 를 함수의 반환 값으로 제공합니다 . 빈 목록을 지정하면 동일한 동작이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="71c8e08afa64e822ed88ad01f72880656f15c77b" translate="yes" xml:space="preserve">
          <source>Returns one of the following:</source>
          <target state="translated">다음 중 하나를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ac4df0fa1d9c2cd461b98067935dc76cbc78030" translate="yes" xml:space="preserve">
          <source>Returns only positive integers.</source>
          <target state="translated">양의 정수만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="39fba73fafca3b20ce7ae66a0bcf604663dffe5d" translate="yes" xml:space="preserve">
          <source>Returns only the elements of &lt;code&gt;Ordset1&lt;/code&gt; that are not also elements of &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">반환 만의 요소 &lt;code&gt;Ordset1&lt;/code&gt; 도의 요소가 아니다 &lt;code&gt;Ordset2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbf62fa1c230f9ff958db44f0929d3c2e391865b" translate="yes" xml:space="preserve">
          <source>Returns only the elements of &lt;code&gt;Set1&lt;/code&gt; that are not also elements of &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set2&lt;/code&gt; 의 요소가 아닌 &lt;code&gt;Set1&lt;/code&gt; 의 요소 만 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9ef614610a6e34b2cc33317c2f1bab1ad880e94d" translate="yes" xml:space="preserve">
          <source>Returns pointer to the new environment.</source>
          <target state="translated">새 환경에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3df71ede0d1c1721b7d64fb91cce9d8d064f7572" translate="yes" xml:space="preserve">
          <source>Returns seconds since or before Unix time epoch, which is 1970-01-01 00:00 UTC.</source>
          <target state="translated">1970 년 1 월 1 일 00:00 UTC 인 유닉스 시간 시대 이후 또는 초를 초 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="060ceec1994b0f4db8c8d84a98e3888dd441f936" translate="yes" xml:space="preserve">
          <source>Returns some or all of the remaining answers to a query cursor. Only the owner of &lt;code&gt;QueryCursor&lt;/code&gt; can retrieve answers.</source>
          <target state="translated">쿼리 커서에 대한 나머지 응답의 일부 또는 전부를 반환합니다. &lt;code&gt;QueryCursor&lt;/code&gt; 소유자 만 답변을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="caac4497837fbacfa43c092f1f26da0b20ec239a" translate="yes" xml:space="preserve">
          <source>Returns some textual information about the current process as a binary. Takes no arguments and is only allowed in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">현재 프로세스에 대한 일부 텍스트 정보를 이진으로 반환합니다. 인수를 &lt;code&gt;MatchBody&lt;/code&gt; 추적시 MatchBody 부분 에서만 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8cd8a210b9f6de0a669b999ec91c75db76d6eae" translate="yes" xml:space="preserve">
          <source>Returns specific information about one aspect of a driver. Parameter &lt;code&gt;Tag&lt;/code&gt; specifies which aspect to get information about. The return &lt;code&gt;Value&lt;/code&gt; differs between different tags:</source>
          <target state="translated">드라이버의 한 측면에 대한 특정 정보를 반환합니다. 매개 변수 &lt;code&gt;Tag&lt;/code&gt; 는 정보를 얻을 측면을 지정합니다. 반환 &lt;code&gt;Value&lt;/code&gt; 은 태그마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="824656855cca96798e6b6be83bdaa026868f113d" translate="yes" xml:space="preserve">
          <source>Returns status of ongoing test. The returned list contains information about which test case is executing (a list of cases when a parallel test case group is executing), as well as counters for successful, failed, skipped, and total test cases so far.</source>
          <target state="translated">진행중인 테스트 상태를 반환합니다. 리턴 된 목록에는 지금까지 실행 된 테스트 케이스 (병렬 테스트 케이스 그룹이 실행중인 케이스 목록)에 대한 정보와 성공, 실패, 건너 뛰기 및 전체 테스트 케이스에 대한 카운터가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d3c9ff9631f70dd71bcf65ab3f6f0786c5a04e1f" translate="yes" xml:space="preserve">
          <source>Returns test progress. If &lt;code&gt;Status&lt;/code&gt; is &lt;code&gt;ongoing&lt;/code&gt;, tests are running on the node and are not yet finished.</source>
          <target state="translated">테스트 진행률을 반환합니다. 경우 &lt;code&gt;Status&lt;/code&gt; 입니다 &lt;code&gt;ongoing&lt;/code&gt; , 테스트는 노드에서 실행되고 아직 완료되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="94556d0f9711b921d52b24afcb3e185050c30911" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#Cartesian_product&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">수익 &lt;code&gt;&lt;a href=&quot;#Cartesian_product&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Set1&lt;/code&gt; 과 와 &lt;code&gt;Set2&lt;/code&gt; 를을 .</target>
        </trans-unit>
        <trans-unit id="cf6c140fa3d3f04c65f2a9ce387184abff140810" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#Cartesian_product_tuple&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; of the non-empty tuple of sets &lt;code&gt;TupleOfSets&lt;/code&gt;. If (x[1], ..., x[n]) is an element of the n-ary relation &lt;code&gt;Relation&lt;/code&gt;, then x[i] is drawn from element i of &lt;code&gt;TupleOfSets&lt;/code&gt;.</source>
          <target state="translated">비어 있지 않은 튜플 세트 &lt;code&gt;TupleOfSets&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#Cartesian_product_tuple&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; 리턴합니다 . (x [1], ..., x [n])이 n 차 관계 &lt;code&gt;Relation&lt;/code&gt; 의 요소 인 경우 &lt;code&gt;TupleOfSets&lt;/code&gt; 의 i 요소에서 x [i]가 그려집니다 .</target>
        </trans-unit>
        <trans-unit id="1dbabd9cacc3eb998bb13a8811a3fb3de99e786f" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#composite&quot;&gt;composite&lt;/a&gt;&lt;/code&gt; of the functions &lt;code&gt;Function1&lt;/code&gt; and &lt;code&gt;Function2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Function1&lt;/code&gt; 및 &lt;code&gt;Function2&lt;/code&gt; 함수 의 &lt;code&gt;&lt;a href=&quot;#composite&quot;&gt;composite&lt;/a&gt;&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ce5143caf37001b8d7bd2d66766c3fa4b00a3f6a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel1&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6b56dc94a86cd6430ecc25a5f7add662a543150b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; of the sets &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;Set1&lt;/code&gt; 과 &lt;code&gt;Set2&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 를 돌려 줍니다.</target>
        </trans-unit>
        <trans-unit id="677f3ea43abf2d6482799ef655a19de0c06e1e50" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="84d607afcb81a88772424a4010e7f2b35107612c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt; such that for each element E in &lt;code&gt;Set&lt;/code&gt; that does not belong to the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt;, &lt;code&gt;BinRel2&lt;/code&gt; contains the pair (E, &lt;code&gt;AnySet&lt;/code&gt;).</source>
          <target state="translated">수익 &lt;code&gt;&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;BinRel1&lt;/code&gt; 는 각 요소의 E에 대한하도록 &lt;code&gt;Set&lt;/code&gt; 에 속하지 않는 &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;BinRel1&lt;/code&gt; , &lt;code&gt;BinRel2&lt;/code&gt; 은 쌍 (E 포함 &lt;code&gt;AnySet&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="32104972d486cc1c20806fbad1a4085270295051" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; of an atomic, ordered, or unordered set.</source>
          <target state="translated">원자, 순서 또는 순서가없는 집합 의 &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b858f2265fa5602606b78bcd4666e9cdffdeeec1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="87dd833acacf73c63d010c62d8b953739dffbe91" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; of set &lt;code&gt;Set1&lt;/code&gt; under the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel&lt;/code&gt; 아래에서 &lt;code&gt;Set1&lt;/code&gt; 세트 의 &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="051d4e152d74f5d8ec5ed39ecb2040038c544630" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#in_degree&quot;&gt;in-degree&lt;/a&gt;&lt;/code&gt; of vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 정점 &lt;code&gt;V&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#in_degree&quot;&gt;in-degree&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6a561681ac701c8a4d56dc954055ad10a0f0de57" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 과 &lt;code&gt;Set2&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="40430941541972db68e1a0d5bc81df12d854171b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#intersection_n&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;SetOfSets&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#intersection_n&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="bf0c3968de0fe24bcaf61da6f9fadc50fdbad634" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#inverse&quot;&gt;inverse&lt;/a&gt;&lt;/code&gt; of function &lt;code&gt;Function1&lt;/code&gt;.</source>
          <target state="translated">함수 &lt;code&gt;Function1&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#inverse&quot;&gt;inverse&lt;/a&gt;&lt;/code&gt; 를 구합니다 .</target>
        </trans-unit>
        <trans-unit id="dc452f77109d5afbd0cee8fcb42d810d37c9c47a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#inverse_image&quot;&gt;inverse image&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; under the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">반품 &lt;code&gt;&lt;a href=&quot;#inverse_image&quot;&gt;inverse image&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Set1&lt;/code&gt; 과를 이진 관계에서 &lt;code&gt;BinRel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68a13340b1cd8618d555f1d038704d5b261e8a9a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="368dcc33d5a6ba18e50dc9df5b51dea4e9b4cfbf" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#natural_join&quot;&gt;natural join&lt;/a&gt;&lt;/code&gt; of the relations &lt;code&gt;Relation1&lt;/code&gt; and &lt;code&gt;Relation2&lt;/code&gt; on coordinates &lt;code&gt;I&lt;/code&gt; and &lt;code&gt;J&lt;/code&gt;.</source>
          <target state="translated">좌표 &lt;code&gt;I&lt;/code&gt; 및 &lt;code&gt;J&lt;/code&gt; 에서 &lt;code&gt;Relation1&lt;/code&gt; 및 &lt;code&gt;Relation2&lt;/code&gt; 관계 의 &lt;code&gt;&lt;a href=&quot;#natural_join&quot;&gt;natural join&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="fe7819f155414ebf129bdea3d9f509f80b72e9c9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#out_degree&quot;&gt;out-degree&lt;/a&gt;&lt;/code&gt; of vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 정점 &lt;code&gt;V&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#out_degree&quot;&gt;out-degree&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a6ca1b44295c5c2832cef9f44390c9d11cb3528c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set&lt;/code&gt; such that two elements are considered equal if the results of applying &lt;code&gt;SetFun&lt;/code&gt; are equal.</source>
          <target state="translated">&lt;code&gt;SetFun&lt;/code&gt; 적용 결과가 동일한 경우 두 요소가 동일한 것으로 간주되도록 &lt;code&gt;Set&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="89307605ace8536ca4e601f9c65b035dae9b7ea3" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of the union of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt; such that two elements are considered equal if they belong to the same elements of &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">반환 값은 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 세트의 세트의 조합의 &lt;code&gt;SetOfSets&lt;/code&gt; 가 동일한 요소에 속하는 경우와 같은 두 개의 요소는 동일한 것으로 간주됩니다 &lt;code&gt;SetOfSets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5087c356d885226125e2154f7079502de4aed969" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#range&quot;&gt;range&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#range&quot;&gt;range&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2810ab21093fbfa3cab83056a55e0bd159fef721" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt; and the binary relation &lt;code&gt;BinRel2&lt;/code&gt;.</source>
          <target state="translated">수익 &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; 이진 관계의 &lt;code&gt;BinRel1&lt;/code&gt; 및 이진 관계 &lt;code&gt;BinRel2&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b4b761e50ce46d06235f90640a8ca5c0c10b05a0" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; of the binary relations &lt;code&gt;BinRel1&lt;/code&gt; and &lt;code&gt;BinRel2&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel1&lt;/code&gt; 및 &lt;code&gt;BinRel2&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ae9bfbd7a06dfe8fa66ada26e99a7cee6e066cb5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt; to &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel1&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;Set&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0b4ee65a70c56b7f786b172d44cc00ec0aa39e29" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt; containing the sets of the non-empty tuple &lt;code&gt;TupleOfSets&lt;/code&gt;.</source>
          <target state="translated">비어 있지 않은 튜플 &lt;code&gt;TupleOfSets&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt; 포함 하는 순서 세트 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4c28f607c9ef0ab38425da1edf46fef2af7b052c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; containing the sets of list &lt;code&gt;ListOfSets&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListOfSets&lt;/code&gt; 목록 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; 포함 하는 순서가없는 세트 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="57dd0b9f33ba6c7e8139d342916c14bbfb06fcca" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;untyped empty set&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;empty_set()&lt;/code&gt; is equivalent to &lt;code&gt;from_term([],&amp;nbsp;['_'])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;untyped empty set&lt;/a&gt;&lt;/code&gt; 반환합니다 . &lt;code&gt;empty_set()&lt;/code&gt; 은 &lt;code&gt;from_term([],&amp;nbsp;['_'])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6704646f451bc5c6e8686c529fb8f0f6264344b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#strict_relation&quot;&gt;strict relation&lt;/a&gt;&lt;/code&gt; corresponding to the binary relation &lt;code&gt;BinRel1&lt;/code&gt;.</source>
          <target state="translated">이진 관계 &lt;code&gt;BinRel1&lt;/code&gt; 에 해당하는 &lt;code&gt;&lt;a href=&quot;#strict_relation&quot;&gt;strict relation&lt;/a&gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4617dd5e79be4e1536db790a08855eed6ff53f11" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#symmetric_difference&quot;&gt;symmetric difference&lt;/a&gt;&lt;/code&gt; (or the Boolean sum) of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 과 &lt;code&gt;Set2&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#symmetric_difference&quot;&gt;symmetric difference&lt;/a&gt;&lt;/code&gt; (또는 부울 합계)를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c18b47adc05793ac87d87b7d15c2e03d5a254292" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; of an atomic, ordered, or unordered set.</source>
          <target state="translated">원자, 순서 또는 순서가없는 집합 의 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6bfac114aed449319c8e31bceeda119c76c28ba5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 과 &lt;code&gt;Set2&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e53ca3c10a8a8a21196072419118b8fae5c9d932" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#union_n&quot;&gt;union&lt;/a&gt;&lt;/code&gt; of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;SetOfSets&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#union_n&quot;&gt;union&lt;/a&gt;&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6a187b4420c5ebd10dbbd211cf7d71a6c4d27393" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;CpuTopology&lt;/code&gt; currently used by the emulator. The CPU topology is used when binding schedulers to logical processors. The CPU topology used is the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt; user-defined CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists, otherwise the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt; automatically detected CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists. If no CPU topology exists, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">에뮬레이터에서 현재 사용 하는 &lt;code&gt;CpuTopology&lt;/code&gt; 를 반환합니다 . CPU 토폴로지는 스케줄러를 논리 프로세서에 바인딩 할 때 사용됩니다. 사용되는 CPU 토폴로지는 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt; user-defined CPU topology&lt;/a&gt;&lt;/code&gt; 존재하는 경우)이고 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt; automatically detected CPU topology&lt;/a&gt;&lt;/code&gt; 존재하는 경우)입니다. CPU 토폴로지가 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="91838b437ece561b0ec42a6597726299aecadac1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;CpuTopology&lt;/code&gt; currently used by the emulator. The CPU topology is used when binding schedulers to logical processors. The CPU topology used is the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt;user-defined CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists, otherwise the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt;automatically detected CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists. If no CPU topology exists, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">에뮬레이터에서 현재 사용중인 &lt;code&gt;CpuTopology&lt;/code&gt; 를 반환합니다 . CPU 토폴로지는 스케줄러를 논리 프로세서에 바인딩 할 때 사용됩니다. 사용 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt;user-defined CPU topology&lt;/a&gt;&lt;/code&gt; 는 사용자 정의 CPU 토폴로지 (있는 경우)이고, 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt;automatically detected CPU topology&lt;/a&gt;&lt;/code&gt; (있는 경우)입니다. CPU 토폴로지가 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="dab8241606216d9529af71335ee70c5d8c7051ee" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th element (numbering from 1) of &lt;code&gt;Tuple&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Tuple&lt;/code&gt; 의 &lt;code&gt;N&lt;/code&gt; 번째 요소 (1부터 번호 매기기)를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cdf3718787b6defba034666ecc29b3bde4de5b3c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th element of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">수익 &lt;code&gt;N&lt;/code&gt; 에게 의 번째 요소 &lt;code&gt;List&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f7d61cb0d1a71d668ba42d67232c201d3aaa8f6" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th tail of &lt;code&gt;List&lt;/code&gt;, that is, the sublist of &lt;code&gt;List&lt;/code&gt; starting at &lt;code&gt;N+1&lt;/code&gt; and continuing up to the end of the list.</source>
          <target state="translated">List의 &lt;code&gt;N&lt;/code&gt; 번째 꼬리 , 즉 &lt;code&gt;N+1&lt;/code&gt; 에서 시작 하여 목록의 끝까지 계속되는 &lt;code&gt;List&lt;/code&gt; 의 하위 &lt;code&gt;List&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b700db350e6d3dd2cf5c5e698d6f0dfec55b3da7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Osfamily&lt;/code&gt; and, in some cases, the &lt;code&gt;Osname&lt;/code&gt; of the current OS.</source>
          <target state="translated">&lt;code&gt;Osfamily&lt;/code&gt; 및 경우 에 따라 현재 OS 의 &lt;code&gt;Osname&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="22a5e0b1d79cbf87e90c83b569e72dfa52deba87" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Type&lt;/code&gt; of operator that &lt;code&gt;OpName/Arity&lt;/code&gt; belongs to, or generates a &lt;code&gt;function_clause&lt;/code&gt; error if it is not an operator.</source>
          <target state="translated">&lt;code&gt;OpName/Arity&lt;/code&gt; 가 속하는 연산자 &lt;code&gt;Type&lt;/code&gt; 을 반환 하거나 , 연산자가 아닌 경우 &lt;code&gt;function_clause&lt;/code&gt; 오류를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="9f114a3e7a0c6775b1972d44d38072d22561267f" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Value&lt;/code&gt; of the environment variable &lt;code&gt;VarName&lt;/code&gt;, or &lt;code&gt;DefaultValue&lt;/code&gt; if the environment variable is undefined.</source>
          <target state="translated">환경 변수 &lt;code&gt;VarName&lt;/code&gt; 의 &lt;code&gt;Value&lt;/code&gt; 또는 환경 변수가 정의되지 않은 경우 &lt;code&gt;DefaultValue&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="66576c02a9bfe704fa0ff919f9fe091b12ec3d54" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Value&lt;/code&gt; of the environment variable &lt;code&gt;VarName&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; if the environment variable is undefined.</source>
          <target state="translated">환경 변수 &lt;code&gt;VarName&lt;/code&gt; 의 &lt;code&gt;Value&lt;/code&gt; 을 리턴 하거나 환경 변수가 정의되지 않은 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c7585fb0bfa91748aa85428e75ff582877c40484" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;et&lt;/code&gt; handler, which can be used with &lt;code&gt;format/2&lt;/code&gt; or &lt;code&gt;tracer/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format/2&lt;/code&gt; 또는 &lt;code&gt;tracer/2&lt;/code&gt; 와 함께 사용할 수있는 &lt;code&gt;et&lt;/code&gt; 핸들러를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f64b1ffe37f5fcc8ee01c87348a675edacd5113f" translate="yes" xml:space="preserve">
          <source>Returns the CPU time in the same format as &lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt; erlang:timestamp()&lt;/a&gt;&lt;/code&gt;. The CPU time is the time the current logical CPU has spent executing since some arbitrary point in the past. If the OS does not support fetching this value, &lt;code&gt;enif_cpu_time&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt; erlang:timestamp()&lt;/a&gt;&lt;/code&gt; 와 동일한 형식으로 CPU 시간을 반환합니다 . CPU 시간은 과거에 임의의 시점 이후 현재 논리 CPU가 실행하는 데 소비 한 시간입니다. OS가이 값 가져 오기를 지원하지 않는 경우 &lt;code&gt;enif_cpu_time&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8eddf39c08022d4015ebc25735765019cb49319b" translate="yes" xml:space="preserve">
          <source>Returns the CPU time in the same format as &lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt;erlang:timestamp()&lt;/a&gt;&lt;/code&gt;. The CPU time is the time the current logical CPU has spent executing since some arbitrary point in the past. If the OS does not support fetching this value, &lt;code&gt;enif_cpu_time&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt;erlang:timestamp()&lt;/a&gt;&lt;/code&gt; 와 같은 형식으로 CPU 시간을 반환합니다 . CPU 시간은 과거의 임의의 지점 이후로 현재 논리 CPU가 실행에 소비 한 시간입니다. OS가이 값 가져 오기를 지원하지 않으면 &lt;code&gt;enif_cpu_time&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="51d8383e4c6f3976cb80fe1ea98ebbf2e3ec74c0" translate="yes" xml:space="preserve">
          <source>Returns the Erlang object corresponding to the value of &lt;code&gt;name&lt;/code&gt; in &lt;code&gt;term&lt;/code&gt;. If no variable with the name &lt;code&gt;name&lt;/code&gt; is found in &lt;code&gt;term&lt;/code&gt;, or if &lt;code&gt;term&lt;/code&gt; is not a valid Erlang term, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">의 값에 대응하는 얼랑 오브젝트를 돌려줍니다 &lt;code&gt;name&lt;/code&gt; 의 &lt;code&gt;term&lt;/code&gt; . &lt;code&gt;term&lt;/code&gt; 에서 &lt;code&gt;name&lt;/code&gt; 이 이름 인 변수 가 없거나 &lt;code&gt;term&lt;/code&gt; 이 유효한 Erlang 용어가 아닌 경우 &lt;code&gt;NULL&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7a8ece02f9a39ae71e8e4075a5272fbf6d39d52f" translate="yes" xml:space="preserve">
          <source>Returns the Erlang term represented by a syntax tree. An exception is thrown if &lt;code&gt;Node&lt;/code&gt; does not represent a literal term.</source>
          <target state="translated">구문 트리로 표시되는 Erlang 용어를 반환합니다. &lt;code&gt;Node&lt;/code&gt; 가 리터럴 용어를 나타내지 않으면 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="805a1aa5dab7d22768d74c10f85e66531c307cca" translate="yes" xml:space="preserve">
          <source>Returns the Erlang term represented by a syntax tree. Evaluation fails with reason &lt;code&gt;badarg&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; does not represent a literal term.</source>
          <target state="translated">구문 트리로 표시되는 Erlang 용어를 반환합니다. 평가는 이유와 함께 실패 &lt;code&gt;badarg&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 리터럴 용어를 나타내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9db79599de14ada84de9497958e5c2a4d0bc2605" translate="yes" xml:space="preserve">
          <source>Returns the ErrorInfo structure of a &lt;code&gt;warning_marker&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;warning_marker&lt;/code&gt; 노드 의 ErrorInfo 구조를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="265c66ce0ed7670b2bbace8ea093eb9b359d74e8" translate="yes" xml:space="preserve">
          <source>Returns the ErrorInfo structure of an &lt;code&gt;error_marker&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;error_marker&lt;/code&gt; 노드 의 ErrorInfo 구조를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="fbe576bae9bd07a2ef249b71e5ee954a9d5edc72" translate="yes" xml:space="preserve">
          <source>Returns the IP address for &lt;code&gt;Host&lt;/code&gt; as a tuple of integers. &lt;code&gt;Host&lt;/code&gt; can be an IP address, a single hostname, or a fully qualified hostname.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; 의 IP 주소를 정수의 튜플로 반환합니다 . &lt;code&gt;Host&lt;/code&gt; 는 IP 주소, 단일 호스트 이름 또는 정규화 된 호스트 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ae9cfad0e8e863f8c66a9dcb1247f56cbc89ebe" translate="yes" xml:space="preserve">
          <source>Returns the OS version. On most systems, this function returns a tuple, but a string is returned instead if the system has versions that cannot be expressed as three numbers.</source>
          <target state="translated">OS 버전을 반환합니다. 대부분의 시스템에서이 함수는 튜플을 반환하지만 시스템에 세 개의 숫자로 표현할 수없는 버전이있는 경우 대신 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="181b9edd95af5ec5601442b00a2522062f3d54de" translate="yes" xml:space="preserve">
          <source>Returns the Universal Coordinated Time (UTC) reported by the underlying operating system. Returns local time if universal time is unavailable.</source>
          <target state="translated">기본 운영 체제에서보고 한 UTC (협정 세계시)를 반환합니다. 표준시를 사용할 수없는 경우 현지 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6091699a5789a4fc9713bbcbcfafb54548c1e272" translate="yes" xml:space="preserve">
          <source>Returns the X509 certificate subject id.</source>
          <target state="translated">X509 인증서 주체 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b21dc8a39643a3c80fd2b1c8e002b74bca0137c" translate="yes" xml:space="preserve">
          <source>Returns the action subtree of an abstract receive-expression.</source>
          <target state="translated">추상 수신 표현식의 조치 서브 트리를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="48e170cc105f4161fb09b99b3975617f31981f33" translate="yes" xml:space="preserve">
          <source>Returns the address and port for the other end of a connection.</source>
          <target state="translated">연결의 다른 쪽 끝에 대한 주소와 포트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cd655a00e2e593fe55937c13fc5aac27b2324ade" translate="yes" xml:space="preserve">
          <source>Returns the address and port number of the peer.</source>
          <target state="translated">피어의 주소와 포트 번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3b2b259fa573feecbe4cc5ae5d5f0a79801b5131" translate="yes" xml:space="preserve">
          <source>Returns the address of the peer connected to the socket.</source>
          <target state="translated">소켓에 연결된 피어의 주소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f68341465e5965717e97dbbbde61c3182dee4bfd" translate="yes" xml:space="preserve">
          <source>Returns the amount of padding before the comment, or &lt;code&gt;none&lt;/code&gt;. The latter means that a default padding may be used.</source>
          <target state="translated">주석 앞에 패딩 양을 반환하거나 &lt;code&gt;none&lt;/code&gt; 을 반환합니다 . 후자는 기본 패딩이 사용될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2379dd0c459b280d4c7c6c4ea7588ffed992abfb" translate="yes" xml:space="preserve">
          <source>Returns the amount of time in seconds garbage collection of an entry in a node table is delayed. This limit can be set on startup by passing command-line flag &lt;code&gt;+zdntgc&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of the command-line flag.</source>
          <target state="translated">노드 테이블에있는 항목의 가비지 수집이 지연된 시간 (초)을 반환합니다. 명령 행 플래그 &lt;code&gt;+zdntgc&lt;/code&gt; 를 &lt;code&gt;erl(1)&lt;/code&gt; 에 전달하여 시작 시이 한계를 설정할 수 있습니다 . 자세한 내용은 명령 줄 플래그 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="701cc174b9fd947122cbcd2cce3b1ff525b138aa" translate="yes" xml:space="preserve">
          <source>Returns the application specification keys and their values for &lt;code&gt;Application&lt;/code&gt;. If the argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">응용 프로그램 사양 키와 &lt;code&gt;Application&lt;/code&gt; 값을 반환합니다 . 인수가 생략되면 기본값은 호출 프로세스의 적용입니다.</target>
        </trans-unit>
        <trans-unit id="b02c22f9effcf6b6380b9e5962e6ec00eba9a289" translate="yes" xml:space="preserve">
          <source>Returns the argument (the arity) subtree of an &lt;code&gt;arity_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;arity_qualifier&lt;/code&gt; 노드 의 인수 (arity) 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d0b0bb85b9cb3c72e3a41f18b22c69da6dcbdbc9" translate="yes" xml:space="preserve">
          <source>Returns the argument (the class) subtree of a &lt;code&gt;class_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;class_qualifier&lt;/code&gt; 노드 의 인수 (클래스) 하위 트리를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d90cc244925629a076f65a0fb5caae61eaa4d706" translate="yes" xml:space="preserve">
          <source>Returns the argument (the module) subtree of a &lt;code&gt;module_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;module_qualifier&lt;/code&gt; 노드 의 인수 (모듈) 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="c8dd020fe10ad85c0997e84cc437917667a7a41d" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree (the size) of a &lt;code&gt;size_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;size_qualifier&lt;/code&gt; 노드 의 인수 서브 트리 (크기)를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="8198ab4dd0d22e3dff53d2ca91e06298c2b81166" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;case_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;case_expr&lt;/code&gt; 노드 의 인수 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="5ff0fe1f35a466048009ddb772cbaf179afa62f1" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;map_expr&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#{...}&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Argument#{...}&lt;/code&gt;&quot;, &lt;code&gt;Argument&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;map_expr&lt;/code&gt; 노드 의 인수 서브 트리를 리턴합니다 (있는 경우). 경우 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;#{...}&lt;/code&gt; &quot; &lt;code&gt;none&lt;/code&gt; 반환되지 않습니다. 그렇지 않으면, &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;Argument#{...}&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;Argument&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9d80f0f6da97655437937e97d0e0f33b08a5901c" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;prefix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;prefix_expr&lt;/code&gt; 노드 의 인수 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0abb995005c490373685fbd7865ccc829287daa8" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;record_access&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_access&lt;/code&gt; 노드 의 인수 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1e2719e6c9b06e1a2de4d14a0a66e2216ebe7af3" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;record_expr&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#Type{...}&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Argument#Type{...}&lt;/code&gt;&quot;, &lt;code&gt;Argument&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;record_expr&lt;/code&gt; 노드 의 인수 서브 트리를 리턴합니다 (있는 경우). &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;#Type{...}&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;none&lt;/code&gt; 반환 되지 않습니다 . 그렇지 않으면, &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;Argument#Type{...}&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;Argument&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b2d70e2341344b223a4012fdbbf3fea74944c4a6" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of an abstract case-expression.</source>
          <target state="translated">추상 case-expression의 인수 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5efbc7164f8c30c78c2e2f29cf2998482e5adbac" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of an abstract let-expression.</source>
          <target state="translated">추상 let-expression의 인수 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="296e64e199a2433090fb6ee6c7d0c97f68adaa3a" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of an abstract sequencing expression.</source>
          <target state="translated">추상 시퀀싱 식의 인수 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1d9b088904c097ac8124857fc6224d8ee996d74" translate="yes" xml:space="preserve">
          <source>Returns the argument types subtrees of a &lt;code&gt;function_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt;&quot;, &lt;code&gt;any_arity&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt;&quot; or &quot;&lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt;&quot;, &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;function_type&lt;/code&gt; 노드 의 인수 유형 서브 트리를 리턴 합니다. 경우 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt; &quot;, &lt;code&gt;any_arity&lt;/code&gt; 가 반환됩니다; 그렇지 않으면 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9c18c16c27a458af59175ad22b7bd9bd59c7a091" translate="yes" xml:space="preserve">
          <source>Returns the arguments subtrees of a &lt;code&gt;type_application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;type_application&lt;/code&gt; 노드 의 인수 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="72f269a2d979e51b4999dceb0f352fbf973e1a82" translate="yes" xml:space="preserve">
          <source>Returns the arguments subtrees of a &lt;code&gt;user_type_application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;user_type_application&lt;/code&gt; 노드 의 인수 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7eb582ee7ce33e41a7730f453b0676215b2e94a5" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;fun_expr&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the fun-expression; subsequent clauses are ignored.</source>
          <target state="translated">&lt;code&gt;fun_expr&lt;/code&gt; 노드 의 arity를 ​​반환합니다 . 결과는 fun-expression의 첫 번째 절에있는 매개 변수 패턴의 수입니다. 후속 절은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2a8b8fb2df18f380f4f38b75c0f50791f2fbda24" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;function&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the function; subsequent clauses are ignored.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 노드 의 arity를 ​​반환합니다 . 결과는 함수의 첫 번째 절에있는 매개 변수 패턴의 수입니다. 후속 절은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c41bb9e006064a2c010fad97f836ec54460c1c0a" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;named_fun_expr&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the named fun-expression; subsequent clauses are ignored.</source>
          <target state="translated">&lt;code&gt;named_fun_expr&lt;/code&gt; 노드 의 arity를 ​​리턴합니다 . 결과는 명명 된 fun-expression의 첫 번째 절에있는 매개 변수 패턴의 수입니다. 후속 절은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1c66e978985db464d51eb252b089fb77ac6ef9c2" translate="yes" xml:space="preserve">
          <source>Returns the arity part of an abstract function name variable.</source>
          <target state="translated">추상 함수 이름 변수의 arity 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0fee583493c0b9e812aebbcb65816d5e5078f9b1" translate="yes" xml:space="preserve">
          <source>Returns the associated post-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, post-comments are typically displayed to the right of and/or below the node. For example:</source>
          <target state="translated">노드의 연관된 포스트 주석을 리턴합니다. 이것은 텍스트 주석 순서로 비어있는 추상 주석 목록입니다. 코드가 형식화되면 일반적으로 포스트 주석이 노드의 오른쪽 및 / 또는 아래에 표시됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="683fdac42b4a88e80c18ba7ab4b4a9d4d5c04916" translate="yes" xml:space="preserve">
          <source>Returns the associated pre-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, pre-comments are typically displayed directly above the node. For example:</source>
          <target state="translated">노드의 연관된 사전 주석을 리턴합니다. 이것은 텍스트 주석 순서로 비어있는 추상 주석 목록입니다. 코드가 형식화되면 일반적으로 사전 주석이 노드 바로 위에 표시됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7afe94017d50f6c3e4542d893d4891267047b5da" translate="yes" xml:space="preserve">
          <source>Returns the atom name of the Erlang error, given the error number in &lt;code&gt;error&lt;/code&gt;. The error atoms are &lt;code&gt;einval&lt;/code&gt;, &lt;code&gt;enoent&lt;/code&gt;, and so on. It can be used to make error terms from the driver.</source>
          <target state="translated">에서 오류 번호 주어진 얼랑 오류의 원자 이름, 반환 &lt;code&gt;error&lt;/code&gt; . 오차 원자는 &lt;code&gt;einval&lt;/code&gt; , &lt;code&gt;enoent&lt;/code&gt; 등입니다. 드라이버에서 오류 용어를 만드는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45b5ca4f214d218d6e6e8c0e1e9abaa8a7babafb" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;Binary&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;latin1&lt;/code&gt;, no translation of bytes in the binary is done. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the binary must contain valid UTF-8 sequences.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;Binary&lt;/code&gt; 인 아톰을 반환합니다 . &lt;code&gt;Encoding&lt;/code&gt; 이 &lt;code&gt;latin1&lt;/code&gt; 인 경우 이진에서 바이트 변환이 수행되지 않습니다. 경우 &lt;code&gt;Encoding&lt;/code&gt; 입니다 &lt;code&gt;utf8&lt;/code&gt; 또는 &lt;code&gt;unicode&lt;/code&gt; , 바이너리는 유효한 UTF-8 시퀀스를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="d60467e198a678082f07504c8074b8ce5347dad9" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;Binary&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the binary must contain valid UTF-8 sequences.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;Binary&lt;/code&gt; 인 원자를 반환합니다 . 경우 &lt;code&gt;Encoding&lt;/code&gt; 입니다 &lt;code&gt;utf8&lt;/code&gt; 또는 &lt;code&gt;unicode&lt;/code&gt; , 바이너리는 유효한 UTF-8 시퀀스를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="122f0b4fd4ccc7dc5fd6c72e2ee3e4994d3439fe" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;String&lt;/code&gt;, but only if there already exists such atom.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;String&lt;/code&gt; 인 아톰이 이미 존재하는 경우에만 아톰을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44f1680f8e149640f004a08954c48f2d34519a45" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;String&lt;/code&gt; 인 아톰을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="13c1c072703152513178d451868e8920094a28e5" translate="yes" xml:space="preserve">
          <source>Returns the automatically detected &lt;code&gt;CpuTopologyy&lt;/code&gt;. The emulator detects the CPU topology on some newer Linux, Solaris, FreeBSD, and Windows systems. On Windows system with more than 32 logical processors, the CPU topology is not detected.</source>
          <target state="translated">자동으로 감지 된 &lt;code&gt;CpuTopologyy&lt;/code&gt; 를 반환합니다 . 에뮬레이터는 일부 최신 Linux, Solaris, FreeBSD 및 Windows 시스템에서 CPU 토폴로지를 감지합니다. 논리 프로세서가 32 개 이상인 Windows 시스템에서는 CPU 토폴로지가 감지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="96e3a5c6ba0d4b6a2a5c0b7c4da30ec8aa054415" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last 15 minutes, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">위에서 설명한대로 지난 15 분 동안의 평균 시스템로드를 리턴합니다. 0은 하중이 없음을 나타내고 256은 &lt;code&gt;rup&lt;/code&gt; by 1.00으로보고 된 하중을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="34bc91dbef178d80091af01ff6437e2e5d6e1dad" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last five minutes, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">위에서 설명한대로 지난 5 분 동안의 평균 시스템로드를 리턴합니다. 0은 하중이 없음을 나타내고 256은 &lt;code&gt;rup&lt;/code&gt; by 1.00으로보고 된 하중을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ae0fefb3302bbd16183db84e84e61b8bcc8302e8" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last minute, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">위에서 설명한대로 마지막 순간의 평균 시스템로드를 리턴합니다. 0은 하중이 없음을 나타내고 256은 &lt;code&gt;rup&lt;/code&gt; by 1.00으로보고 된 하중을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c62b146f0ea6b2937c89cd31e61adbfbe55c52c6" translate="yes" xml:space="preserve">
          <source>Returns the binary relation containing the elements (E, Set) such that Set belongs to &lt;code&gt;SetOfSets&lt;/code&gt; and E belongs to Set. If &lt;code&gt;SetOfSets&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of a set X and R is the equivalence relation in X induced by &lt;code&gt;SetOfSets&lt;/code&gt;, then the returned relation is the &lt;code&gt;&lt;a href=&quot;#canonical_map&quot;&gt;canonical map&lt;/a&gt;&lt;/code&gt; from X onto the equivalence classes with respect to R.</source>
          <target state="translated">Set이 &lt;code&gt;SetOfSets&lt;/code&gt; 에 속하고 E 가 Set에 속하도록 요소 (E, Set)를 포함하는 이진 관계를 반환합니다 . 경우 &lt;code&gt;SetOfSets&lt;/code&gt; 는 A는 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 세트의 X 및 R은이에 의해 유발 X에 동치 관계이다 &lt;code&gt;SetOfSets&lt;/code&gt; 후 리턴 관계가있다 &lt;code&gt;&lt;a href=&quot;#canonical_map&quot;&gt;canonical map&lt;/a&gt;&lt;/code&gt; R.에 대하여 등가 클래스로부터는 X 상</target>
        </trans-unit>
        <trans-unit id="4b9f4fa6495150f4dac559c79c1b53664912ecca" translate="yes" xml:space="preserve">
          <source>Returns the binding of &lt;code&gt;Name&lt;/code&gt; in &lt;code&gt;BindingStruct&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BindingStruct&lt;/code&gt; 에서 &lt;code&gt;Name&lt;/code&gt; 바인딩을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f618e504ad847fbbd7a00a8a41536e92c2995e6e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;binary_field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_field&lt;/code&gt; 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="af1f37946f37e3568c8ef91679e97c14c7e2464e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;catch_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;catch_expr&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="98e586311ff39235b2a2d68b424bb03e980aa8bd" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;class_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;class_qualifier&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2a3600c52226fd07ebbfc2010e2d2edbf0af076a" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;generator&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b5736be84b042590cad9734b948b9235728217c2" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;match_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;match_expr&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f1ef4325567f20cf2b1008d1affe78f02eb24483" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;module_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;module_qualifier&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="82ef6f543d6328e386a601179345711ecea72f1f" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;parentheses&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;parentheses&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="40bfd6b9354c50dc5460300711c61fa6434b6e6b" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;size_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;size_qualifier&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="eee234eae2d5e4cda0de37e9f374f8df9573070b" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an &lt;code&gt;arity_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;arity_qualifier&lt;/code&gt; 노드 의 본문 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="49e09bc308e5e2dbfc57287e45fc5a319dca96fe" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract catch-expression.</source>
          <target state="translated">추상 catch-expression의 본문 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3dd798aec0a162df7f85cdd081e4cf267551d58c" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract clause.</source>
          <target state="translated">추상 절의 본문 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b3adc16411c02f86f892337c37d51892204f0e43" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract fun-expression.</source>
          <target state="translated">추상 fun-expression의 본문 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a43fb47299d12372834470945983b1529beba608" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract let-expression.</source>
          <target state="translated">추상 let-expression의 본문 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="de13160dd3319b4c8d59426d9d313f5a250ac67e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract letrec-expression.</source>
          <target state="translated">추상 letrec-expression의 본문 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fa97f50226a4aec936db01a23944aca4345c0dc4" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract sequencing expression.</source>
          <target state="translated">추상 시퀀싱 표현식의 본문 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="54333922a1b9f2fdd3c5f0d07ef37ce87e1e7318" translate="yes" xml:space="preserve">
          <source>Returns the byte at position &lt;code&gt;Pos&lt;/code&gt; (zero-based) in binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If &lt;code&gt;Pos&lt;/code&gt; &amp;gt;= &lt;code&gt;byte_size(Subject)&lt;/code&gt;, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">이진 &lt;code&gt;Subject&lt;/code&gt; 에서 위치 &lt;code&gt;Pos&lt;/code&gt; (0부터 시작) 의 바이트를 정수로 리턴합니다 . 경우 &lt;code&gt;Pos&lt;/code&gt; &amp;gt; = &lt;code&gt;byte_size(Subject)&lt;/code&gt; 하는 &lt;code&gt;badarg&lt;/code&gt; 의 예외가 발생된다.</target>
        </trans-unit>
        <trans-unit id="9e10739d63bd28a77ebe02ce1df0249e36756e95" translate="yes" xml:space="preserve">
          <source>Returns the call count value for this function or &lt;code&gt;true&lt;/code&gt; for the pseudo function &lt;code&gt;on_load&lt;/code&gt; if call count tracing is active. Otherwise &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">이 함수의 호출 횟수 값을 반환하거나 호출 횟수 추적이 활성화 된 경우 의사 함수 &lt;code&gt;on_load&lt;/code&gt; 의 경우 &lt;code&gt;true&lt;/code&gt; 를 반환합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c1a6461d609159d0eebd3e7835ad0c3e1892acac" translate="yes" xml:space="preserve">
          <source>Returns the call time values for this function or &lt;code&gt;true&lt;/code&gt; for the pseudo function &lt;code&gt;on_load&lt;/code&gt; if call time tracing is active. Otherwise &lt;code&gt;false&lt;/code&gt; is returned. The call time values returned, &lt;code&gt;[{Pid, Count, S, Us}]&lt;/code&gt;, is a list of each process that executed the function and its specific counters.</source>
          <target state="translated">이 함수의 호출 시간 값을 리턴하거나 호출 시간 추적이 활성 인 경우 의사 함수 &lt;code&gt;on_load&lt;/code&gt; 의 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 반환됩니다. 반환 된 호출 시간 값 &lt;code&gt;[{Pid, Count, S, Us}]&lt;/code&gt; 은 함수 및 해당 특정 카운터를 실행 한 각 프로세스의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="19f003446976eabe33a935b6550373619df6e5c7" translate="yes" xml:space="preserve">
          <source>Returns the calling function as a tuple &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; or the atom &lt;code&gt;undefined&lt;/code&gt; if the calling function cannot be determined. Can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">호출 함수를 판별 할 수없는 경우 호출 함수를 튜플 &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 아톰 으로 리턴합니다 . 추적시 &lt;code&gt;MatchBody&lt;/code&gt; 부분 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46e267a27ac8442f544f0a2c3835b8dcea423740" translate="yes" xml:space="preserve">
          <source>Returns the category of &lt;code&gt;Token&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; 의 카테고리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="604f66a1103440ecb2eb4492664aefc897080ed5" translate="yes" xml:space="preserve">
          <source>Returns the character sequence represented by a &lt;code&gt;text&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 노드가 나타내는 문자 시퀀스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a96cfa892cb1fdb86fb77d2cf4769581f610589c" translate="yes" xml:space="preserve">
          <source>Returns the child specification map for the child identified by &lt;code&gt;Id&lt;/code&gt; under supervisor &lt;code&gt;SupRef&lt;/code&gt;. The returned map contains all keys, both mandatory and optional.</source>
          <target state="translated">감독자 &lt;code&gt;SupRef&lt;/code&gt; 에서 &lt;code&gt;Id&lt;/code&gt; 로 식별 된 하위에 대한 하위 스펙 맵을 리턴합니다 . 리턴 된 맵에는 필수 및 선택적 키가 모두 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9f3c8087df59c0c2485ac3b75db76bdcc90130de" translate="yes" xml:space="preserve">
          <source>Returns the code path.</source>
          <target state="translated">코드 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a157676aa3f637ae8e98f5f55b1f9756d1948eb2" translate="yes" xml:space="preserve">
          <source>Returns the column of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; 의 주석 모음 열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0c6e40c25f1cd3004cb8fe3ac679ec834c21994d" translate="yes" xml:space="preserve">
          <source>Returns the column of the annotations Anno.</source>
          <target state="translated">주석 Anno의 열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff2a63c39c785ad3e66b17711dba93c1299ae2c4" translate="yes" xml:space="preserve">
          <source>Returns the command used to start this Erlang instance. If this information could not be found, the string &lt;code&gt;&quot;no_prog_name&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">이 Erlang 인스턴스를 시작하는 데 사용 된 명령을 리턴합니다. 이 정보를 찾을 수 없으면 문자열 &lt;code&gt;&quot;no_prog_name&quot;&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="11df78c00081dac2a230bf7409d5559f21e28ad1" translate="yes" xml:space="preserve">
          <source>Returns the compatibility mode of the local node as an integer. The integer returned represents the Erlang/OTP release that the current emulator has been set to be backward compatible with. The compatibility mode can be configured at startup by using command-line flag &lt;code&gt;+R&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">로컬 노드의 호환성 모드를 정수로 리턴합니다. 반환 된 정수는 현재 에뮬레이터가 이전 버전과 호환되도록 설정된 Erlang / OTP 릴리스를 나타냅니다. &lt;code&gt;erl(1)&lt;/code&gt; 에서 명령 행 플래그 &lt;code&gt;+R&lt;/code&gt; 을 사용하여 시작시 호환성 모드를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="319f75b70c46c602fd13253c7d3031c3983c82c1" translate="yes" xml:space="preserve">
          <source>Returns the compiler library directory. Equivalent to &lt;code&gt;code:lib_dir(compiler)&lt;/code&gt;.</source>
          <target state="translated">컴파일러 라이브러리 디렉토리를 리턴합니다. &lt;code&gt;code:lib_dir(compiler)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8b6e176a6f35ea4563e4440ef3eab5546e4ae7ee" translate="yes" xml:space="preserve">
          <source>Returns the configuration parameters and their values for &lt;code&gt;Application&lt;/code&gt;. If the argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 의 구성 매개 변수 및 해당 값을 리턴합니다 . 인수가 생략되면 기본값은 호출 프로세스의 적용입니다.</target>
        </trans-unit>
        <trans-unit id="cad5d8239e2b47ab5ade33b4f4080c89475049b8" translate="yes" xml:space="preserve">
          <source>Returns the contents of the specified variable in an Erlang term.</source>
          <target state="translated">Erlang 용어로 지정된 변수의 내용을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cf99ac28ff31b26e2148d67a91215bfe540f6df4" translate="yes" xml:space="preserve">
          <source>Returns the cookie header that would have been sent when making a request to &lt;code&gt;Url&lt;/code&gt; using profile &lt;code&gt;Profile&lt;/code&gt;. If no profile is specified, the default profile is used.</source>
          <target state="translated">profile &lt;code&gt;Profile&lt;/code&gt; 을 사용하여 &lt;code&gt;Url&lt;/code&gt; 을 요청할 때 전송 된 쿠키 헤더를 반환합니다 . 프로파일을 지정하지 않으면 기본 프로파일이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="608ad012f81e226a19e0c07f218a243a0aa81c53" translate="yes" xml:space="preserve">
          <source>Returns the creation of the local node as an integer. The creation is changed when a node is restarted. The creation of a node is stored in process identifiers, port identifiers, and references. This makes it (to some extent) possible to distinguish between identifiers from different incarnations of a node. The valid creations are integers in the range 1..3, but this will probably change in a future release. If the node is not alive, &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">로컬 노드 작성을 정수로 리턴합니다. 노드가 다시 시작되면 작성이 변경됩니다. 노드 작성은 프로세스 ID, 포트 ID 및 참조에 저장됩니다. 이것은 노드의 다른 화신과 식별자를 구별하는 것을 가능하게한다. 유효한 생성은 1..3 범위의 정수이지만 향후 릴리스에서 변경 될 수 있습니다. 노드가 활성 상태가 아닌 경우 &lt;code&gt;0&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="3c18827d24d967dc7530d8b115b01e2753f74116" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that it is not uncommon with negative values.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 반환합니다 . 음수 값이 드문 일이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fdfae5e16d780ddc3ea92abf68d35634a70d13d0" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">인수로 전달 된 &lt;code&gt;Unit&lt;/code&gt; 로 변환 된 현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="711859b62d08d55c53fb38b52ca9673bcee01f86" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. This is a monotonically increasing time since some unspecified point in time.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 반환합니다 . 이것은 지정되지 않은 특정 시점 이후로 단조롭게 증가하는 시간입니다.</target>
        </trans-unit>
        <trans-unit id="2a20c4abd06789f1e71e8b077b463cc27dcfa6cc" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that it is not uncommon with negative values.</source>
          <target state="translated">현재 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 반환합니다 . 음수 값은 드문 일이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0b645e2753405e3d64b5df7c7790cbc8c131d990" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">인수로 전달 된 &lt;code&gt;Unit&lt;/code&gt; 로 변환 된 현재 &lt;code&gt;OS system time&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4d25da574e4b27d6fcf1c2570f032dc078861560" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;time unit&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;OS system time&lt;/code&gt; 을 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;time unit&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1a75e4bbbf2f66935151b586b17801f7017b5d15" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; in the same format as &lt;code&gt;erlang:timestamp/0&lt;/code&gt;. The tuple can be used together with function &lt;code&gt;calendar:now_to_universal_time/1&lt;/code&gt; or &lt;code&gt;calendar:now_to_local_time/1&lt;/code&gt; to get calendar time. Using the calendar time, together with the &lt;code&gt;MicroSecs&lt;/code&gt; part of the return tuple from this function, allows you to log time stamps in high resolution and consistent with the time in the rest of the OS.</source>
          <target state="translated">&lt;code&gt;erlang:timestamp/0&lt;/code&gt; 과 같은 형식으로 현재 &lt;code&gt;OS system time&lt;/code&gt; 을 반환합니다 . 튜플은 &lt;code&gt;calendar:now_to_universal_time/1&lt;/code&gt; 또는 &lt;code&gt;calendar:now_to_local_time/1&lt;/code&gt; 함수와 함께 사용하여 달력 시간을 얻을 수 있습니다. 이 기능의 반환 튜플 의 &lt;code&gt;MicroSecs&lt;/code&gt; 부분 과 함께 달력 시간을 사용하면 타임 스탬프를 고해상도로 기록하고 나머지 OS 시간과 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37c49005a262a0f1d1598a4c15faa8b63df387ad" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;system_logger&lt;/code&gt; as set by &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag(system_logger, _)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag(system_logger, _)&lt;/a&gt;&lt;/code&gt; 로 설정된 현재 &lt;code&gt;system_logger&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8efa54c365a73183d02fa71838aec36646f6c216" translate="yes" xml:space="preserve">
          <source>Returns the current address to which the socket is bound.</source>
          <target state="translated">소켓이 바인딩 된 현재 주소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02a1e778f4e86f140ebf62bb3a535503e471751b" translate="yes" xml:space="preserve">
          <source>Returns the current call stack back-trace (&lt;strong&gt;stacktrace&lt;/strong&gt;) of the process. The stack has the same format as in the &lt;code&gt;catch&lt;/code&gt; part of a &lt;code&gt;try&lt;/code&gt;. See &lt;code&gt;The call-stack back trace (stacktrace)&lt;/code&gt;. The depth of the stacktrace is truncated according to the &lt;code&gt;backtrace_depth&lt;/code&gt; system flag setting.</source>
          <target state="translated">프로세스 의 현재 호출 스택 역 추적 ( &lt;strong&gt;stacktrace&lt;/strong&gt; )을 반환합니다 . 스택은 &lt;code&gt;try&lt;/code&gt; 의 &lt;code&gt;catch&lt;/code&gt; 부분과 동일한 형식을 갖습니다 . &lt;code&gt;The call-stack back trace (stacktrace)&lt;/code&gt; 참조하십시오 . stacktrace의 깊이는 &lt;code&gt;backtrace_depth&lt;/code&gt; 시스템 플래그 설정 에 따라 잘립니다 .</target>
        </trans-unit>
        <trans-unit id="7006f00550b2e544d2b3fda9e41c63614deb9d5a" translate="yes" xml:space="preserve">
          <source>Returns the current call stack back-trace (&lt;strong&gt;stacktrace&lt;/strong&gt;) of the process. The stack has the same format as returned by &lt;code&gt;&lt;a href=&quot;#get_stacktrace-0&quot;&gt;erlang:get_stacktrace/0&lt;/a&gt;&lt;/code&gt;. The depth of the stacktrace is truncated according to the &lt;code&gt;backtrace_depth&lt;/code&gt; system flag setting.</source>
          <target state="translated">프로세스 의 현재 호출 스택 역 추적 ( &lt;strong&gt;stacktrace&lt;/strong&gt; )을 리턴합니다 . 스택은 &lt;code&gt;&lt;a href=&quot;#get_stacktrace-0&quot;&gt;erlang:get_stacktrace/0&lt;/a&gt;&lt;/code&gt; 에서 반환 한 형식과 동일합니다 . 스택 트레이스의 깊이는 &lt;code&gt;backtrace_depth&lt;/code&gt; 시스템 플래그 설정 에 따라 잘립니다 .</target>
        </trans-unit>
        <trans-unit id="9206c23baf7330abc4f2d2174b72db4b3f519889" translate="yes" xml:space="preserve">
          <source>Returns the current date and time according to Universal Time Coordinated (UTC) in the form &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; if supported by the underlying OS. Otherwise &lt;code&gt;erlang:universaltime()&lt;/code&gt; is equivalent to &lt;code&gt;erlang:localtime()&lt;/code&gt;. Example:</source>
          <target state="translated">기본 OS에서 지원하는 경우 &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; 형식으로 UTC (Universal Time Coordinated)에 따라 현재 날짜와 시간을 반환합니다 . 그렇지 않으면 &lt;code&gt;erlang:universaltime()&lt;/code&gt; 은 &lt;code&gt;erlang:localtime()&lt;/code&gt; . 예:</target>
        </trans-unit>
        <trans-unit id="f96af23658442caff1c6ee92ae5f4eb5e2d8b598" translate="yes" xml:space="preserve">
          <source>Returns the current date as &lt;code&gt;{Year, Month, Day}&lt;/code&gt;.</source>
          <target state="translated">현재 날짜를 &lt;code&gt;{Year, Month, Day}&lt;/code&gt; 로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2cf5f4fbb8247b2209f4fabecfa72ccf18767bfb" translate="yes" xml:space="preserve">
          <source>Returns the current list of allowed slave hosts.</source>
          <target state="translated">허용 된 슬레이브 호스트의 현재 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9e1afec157e2e1d2c1c4fda988f28412653138c" translate="yes" xml:space="preserve">
          <source>Returns the current local date and time, &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt;, for example:</source>
          <target state="translated">현재 현지 날짜 및 시간 &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; 반환합니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="2e89bdc2b41269f4de0be6712411919f3ceca2f8" translate="yes" xml:space="preserve">
          <source>Returns the current mapping for warning events. Events sent using &lt;code&gt;warning_msg/1,2&lt;/code&gt; or &lt;code&gt;warning_report/1,2&lt;/code&gt; are tagged as errors, warnings (default), or info, depending on the value of command-line flag &lt;code&gt;+W&lt;/code&gt;.</source>
          <target state="translated">경고 이벤트에 대한 현재 매핑을 반환합니다. &lt;code&gt;warning_msg/1,2&lt;/code&gt; 또는 &lt;code&gt;warning_report/1,2&lt;/code&gt; 를 사용하여 전송 된 이벤트 는 명령 행 플래그 &lt;code&gt;+W&lt;/code&gt; 의 값에 따라 오류, 경고 (기본값) 또는 정보로 태그가 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="03eaef2e18db17be19de254c9e4a5586bfaa0a58" translate="yes" xml:space="preserve">
          <source>Returns the current performance counter value in &lt;code&gt;perf_counter&lt;/code&gt;&lt;code&gt;time unit&lt;/code&gt;. This is a highly optimized call that might not be traceable.</source>
          <target state="translated">&lt;code&gt;perf_counter&lt;/code&gt; &lt;code&gt;time unit&lt;/code&gt; 현재 성능 카운터 값을 반환합니다 . 추적 할 수없는 최적화 된 통화입니다.</target>
        </trans-unit>
        <trans-unit id="2f185b6b26a103b2b6122c6550d07654dc93ff97" translate="yes" xml:space="preserve">
          <source>Returns the current reference count of the port data lock passed as argument (&lt;code&gt;pdl&lt;/code&gt;).</source>
          <target state="translated">인수 ( &lt;code&gt;pdl&lt;/code&gt; ) 로 전달 된 포트 데이터 잠금의 현재 참조 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4030aa5cb3b3dfa9bc9bb9280a40746b196b00c9" translate="yes" xml:space="preserve">
          <source>Returns the current reference count on &lt;code&gt;bin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; 의 현재 참조 횟수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="57117cfb32abba815f94d6a57bcf4e9818afab65" translate="yes" xml:space="preserve">
          <source>Returns the current state of process flag &lt;code&gt;message_queue_data&lt;/code&gt;. &lt;code&gt;MQD&lt;/code&gt; is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스 플래그 &lt;code&gt;message_queue_data&lt;/code&gt; 의 현재 상태를 반환합니다 . &lt;code&gt;MQD&lt;/code&gt; 는 &lt;code&gt;off_heap&lt;/code&gt; 또는 &lt;code&gt;on_heap&lt;/code&gt; 입니다. 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d052dab57302944610daa13b6732e65e7594abd0" translate="yes" xml:space="preserve">
          <source>Returns the current state of process flag &lt;code&gt;message_queue_data&lt;/code&gt;. &lt;code&gt;MQD&lt;/code&gt; is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스 플래그 &lt;code&gt;message_queue_data&lt;/code&gt; 의 현재 상태를 리턴합니다 . &lt;code&gt;MQD&lt;/code&gt; 는 &lt;code&gt;off_heap&lt;/code&gt; 또는 &lt;code&gt;on_heap&lt;/code&gt; 입니다. 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cb7080ebfba8377d800779f5b6b5972f25409a6" translate="yes" xml:space="preserve">
          <source>Returns the current system monitoring settings set by &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt; erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{MonitorPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if no settings exist. The order of the options can be different from the one that was set.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt; erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;{MonitorPid, Options}&lt;/code&gt; 로 설정 한 현재 시스템 모니터링 설정을 반환 하거나 설정이없는 경우 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다. 옵션의 순서는 설정된 순서와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4f55dab96f26c8ba082de5de479eb29ebf575b4" translate="yes" xml:space="preserve">
          <source>Returns the current system monitoring settings set by &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt;erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{MonitorPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if no settings exist. The order of the options can be different from the one that was set.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt;erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; 에서 설정 한 현재 시스템 모니터링 설정 을 &lt;code&gt;{MonitorPid, Options}&lt;/code&gt; 반환 하거나 설정이없는 경우 &lt;code&gt;undefined&lt;/code&gt; 반환합니다. 옵션 순서는 설정 한 순서와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f0efb9db6394cabcf1ce55877c9fe977d4bf696" translate="yes" xml:space="preserve">
          <source>Returns the current system profiling settings set by &lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt; erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there are no settings. The order of the options can be different from the one that was set.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt; erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt; 로 설정된 현재 시스템 프로파일 링 설정을 반환 하거나 설정이없는 경우 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다. 옵션의 순서는 설정된 순서와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e94f1c1a87e3b71f88ffad8e78f930a5a919fccd" translate="yes" xml:space="preserve">
          <source>Returns the current system profiling settings set by &lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt;erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there are no settings. The order of the options can be different from the one that was set.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt;erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; 에 의해 설정된 현재 시스템 프로파일 링 설정 을 &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt; 로 설정하거나 설정이없는 경우 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다. 옵션 순서는 설정 한 순서와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76329b1b04a56512687c837f540694b0cca5bdfb" translate="yes" xml:space="preserve">
          <source>Returns the current time as &lt;code&gt;{Hour, Minute, Second}&lt;/code&gt;.</source>
          <target state="translated">현재 시간을 &lt;code&gt;{Hour, Minute, Second}&lt;/code&gt; 로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="88291274301b54418cc11c1900cbcc9f61082d30" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 사이의 현재 시간 오프셋 을 인수로 전달 된 &lt;code&gt;Unit&lt;/code&gt; 로 변환하여 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dbec6f6193fde2b8b200a6e02632a17346a7ede8" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;time_unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 사이의 현재 시간 오프셋 을 인수로 전달 된 &lt;code&gt;time_unit&lt;/code&gt; 으로 변환하여 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="43ccbd93cd57654f40f0b6cab4abbea5a06b0788" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. Current time offset added to an Erlang monotonic time gives corresponding Erlang system time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 사이의 현재 시간 오프셋 을 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 반환합니다 . Erlang 단조로운 시간에 추가 된 현재 시간 오프셋은 해당 Erlang 시스템 시간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0b06a60e6aa8e9650f56ffc46b72886f7a7aaaf9" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 사이의 현재 시간 오프셋 을 인수로 전달 된 &lt;code&gt;Unit&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="44568658e69aa0c07fd80bcfe2f914b4967c6fa5" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;time_unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 사이의 현재 시간 오프셋 을 인수로 전달 된 &lt;code&gt;time_unit&lt;/code&gt; 으로 변환하여 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c634418d8dce9f1df80dfb796f863964845406c0" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. Current time offset added to an Erlang monotonic time gives corresponding Erlang system time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 사이의 현재 시간 오프셋 을 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 반환합니다 . Erlang 단조 시간에 추가 된 현재 시간 오프셋은 해당 Erlang 시스템 시간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6f911a46de11449a7332120a7fcff2f13f03320f" translate="yes" xml:space="preserve">
          <source>Returns the current version number of the interpreter. Same as the version number of the Debugger application.</source>
          <target state="translated">인터프리터의 현재 버전 번호를 반환합니다. 디버거 응용 프로그램의 버전 번호와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f3da5908b9e02033e12ede02fbab26899392a315" translate="yes" xml:space="preserve">
          <source>Returns the current working directory at the local client.</source>
          <target state="translated">로컬 클라이언트의 현재 작업 디렉토리를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0fe2ddffadede96a71d2b41ac18d0aaa85da0f36" translate="yes" xml:space="preserve">
          <source>Returns the current working directory at the remote server.</source>
          <target state="translated">원격 서버에서 현재 작업 디렉토리를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="40ec27418eec0200280b3f6b646fe3a07caca002" translate="yes" xml:space="preserve">
          <source>Returns the date and time the specified file or directory was last modified, or &lt;code&gt;0&lt;/code&gt; if the file does not exist.</source>
          <target state="translated">지정된 파일 또는 디렉토리가 마지막으로 수정 된 날짜와 시간을 반환하거나 파일이 없으면 &lt;code&gt;0&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="665277cc2d2109d3285fdb5e4e6b0f100569a5f8" translate="yes" xml:space="preserve">
          <source>Returns the decompression dictionary currently in use by the stream. This function must be called between &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1,2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스트림에서 현재 사용중인 압축 해제 사전을 리턴합니다. 이 함수는 &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1,2&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd&lt;/a&gt;&lt;/code&gt; 사이에서 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cfb922e4a38673d1141981ca392c079972b4539e" translate="yes" xml:space="preserve">
          <source>Returns the default encoding of Erlang source files.</source>
          <target state="translated">Erlang 소스 파일의 기본 인코딩을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4242a7681508d13aa2f8877ebc667e73a1f63ac0" translate="yes" xml:space="preserve">
          <source>Returns the default port parallelism scheduling hint used. For more information, see command-line argument &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">사용 된 기본 포트 병렬 처리 일정 힌트를 반환합니다. 자세한 내용 은 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 인수 &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8eabb9103de8c6b9960e24cc527704701342fafa" translate="yes" xml:space="preserve">
          <source>Returns the default state.</source>
          <target state="translated">기본 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3788384433fc7bc669257c1d26dbfd7731333b9d" translate="yes" xml:space="preserve">
          <source>Returns the default value of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, which is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. This default is set by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information on the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, see documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;off_heap&lt;/code&gt; 또는 &lt;code&gt;on_heap&lt;/code&gt; 인 &lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그 의 기본값을 반환합니다 . 이 기본값은 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 인수 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; 에 의해 설정됩니다 . &lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그 에 대한 자세한 정보 는 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8677b590a14f42456a2ac32995ad391ecc867a45" translate="yes" xml:space="preserve">
          <source>Returns the default value of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, which is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. This default is set by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information on the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, see documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그 의 기본값 ( &lt;code&gt;off_heap&lt;/code&gt; 또는 &lt;code&gt;on_heap&lt;/code&gt; )을 리턴 합니다. 이 기본값은 &lt;code&gt;erl(1)&lt;/code&gt; 명령 행 인수 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; 에 의해 설정됩니다 . &lt;code&gt;message_queue_data&lt;/code&gt; 프로세스 플래그 에 대한 자세한 정보 는 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7da89f4140ad3599b3649f21974300c4287c6b38" translate="yes" xml:space="preserve">
          <source>Returns the default values of one or more options.</source>
          <target state="translated">하나 이상의 옵션의 기본값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6649635be6debd0195bfa53f737ffb88e939ccb5" translate="yes" xml:space="preserve">
          <source>Returns the detected CPU quota the emulator is limited by. The return value is an integer saying how many processors' worth of runtime we get (between 1 and the number of logical processors), or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect a quota.</source>
          <target state="translated">에뮬레이터가 제한하는 감지 된 CPU 할당량을 반환합니다. 반환 값은 얼마나 많은 프로세서의 런타임 가치 (1과 논리 프로세서 수 사이)를 나타내는 정수이거나 에뮬레이터가 할당량을 감지 할 수 &lt;code&gt;unknown&lt;/code&gt; 경우 알 수없는 원자 입니다.</target>
        </trans-unit>
        <trans-unit id="5af727694834cdffdd3eedb346721703ea0a373d" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors available to the Erlang runtime system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the available logical processors. The number of available logical processors is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt; logical processors online&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlang 런타임 시스템에서 사용할 수있는 감지 된 논리 프로세서 수를 반환합니다. 반환 값은 정수이거나 에뮬레이터가 사용 가능한 논리 프로세서를 감지 할 수 &lt;code&gt;unknown&lt;/code&gt; 경우 알 수없는 원자 입니다. 사용 가능한 논리 프로세서 수가 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt; logical processors online&lt;/a&gt;&lt;/code&gt; 수보다 적거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ff386debfef1f2d90455df24f04746f84af518ed" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors available to the Erlang runtime system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the available logical processors. The number of available logical processors is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt;logical processors online&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlang 런타임 시스템에서 사용 가능한 감지 된 논리 프로세서 수를 리턴합니다. 리턴 값은 정수이거나 에뮬레이터가 사용 가능한 논리 프로세서를 감지 할 수 &lt;code&gt;unknown&lt;/code&gt; 경우 알 수없는 원자 입니다. 사용 가능한 논리 프로세서 수는 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt;logical processors online&lt;/a&gt;&lt;/code&gt; 수보다 적거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="037a7bd34e42bd117fc89f3c74420d2f42e4b29d" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors configured in the system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the configured logical processors.</source>
          <target state="translated">시스템에 구성된 감지 된 논리 프로세서 수를 리턴합니다. 리턴 값은 정수이거나 에뮬레이터가 구성된 논리 프로세서를 감지 할 수 &lt;code&gt;unknown&lt;/code&gt; 경우 알 수없는 원자 입니다.</target>
        </trans-unit>
        <trans-unit id="75df2a91b04a670c6edc6b88eda8dcb4a138f15c" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors online on the system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect logical processors online. The number of logical processors online is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors&quot;&gt;logical processors configured&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">시스템에서 온라인으로 감지 된 논리 프로세서 수를 리턴합니다. 리턴 값은 정수이거나 에뮬레이터가 온라인에서 논리 프로세서를 감지 할 수 &lt;code&gt;unknown&lt;/code&gt; 경우 알 수없는 원자 입니다. 온라인 논리 프로세서 수는 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors&quot;&gt;logical processors configured&lt;/a&gt;&lt;/code&gt; 수보다 적거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="558c58df1a07e17f1666b7d4a938e6fecf7e87a8" translate="yes" xml:space="preserve">
          <source>Returns the difference between the binary relation &lt;code&gt;BinRel1&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt; to &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">이진 관계의 차이를 돌려줍니다 &lt;code&gt;BinRel1&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;BinRel1&lt;/code&gt; 에 &lt;code&gt;Set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f5c147e109870a10b8fcf598c56fa7ac40af8b1" translate="yes" xml:space="preserve">
          <source>Returns the difference between two &lt;code&gt;{Date, Time}&lt;/code&gt; tuples. &lt;code&gt;T2&lt;/code&gt; is to refer to an epoch later than &lt;code&gt;T1&lt;/code&gt;.</source>
          <target state="translated">두 &lt;code&gt;{Date, Time}&lt;/code&gt; 튜플 의 차이를 반환합니다 . &lt;code&gt;T2&lt;/code&gt; 는 &lt;code&gt;T1&lt;/code&gt; 이후의 에포크를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="7869bf51a15a44640ab7aa4588109fb14cb1be63" translate="yes" xml:space="preserve">
          <source>Returns the directory part of &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 의 디렉토리 부분을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="41349ccc6b387ba6e1ddf307dcacfea19ced223b" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Ordset&lt;/code&gt; as a list.</source>
          <target state="translated">&lt;code&gt;Ordset&lt;/code&gt; 의 요소를 목록으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="304695da848c1919956abdfe27b96de91c796e72" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Set&lt;/code&gt; as a list.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 의 요소를 목록으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e1aae790bf4ccd5289e7da8c168b4fd9080e0e93" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Set&lt;/code&gt; as a list. The order of the returned elements is undefined.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 의 요소를 목록으로 반환합니다 . 반환 된 요소의 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="845464c74c7576d61ca8fdb3dbfbe2c70002a6f0" translate="yes" xml:space="preserve">
          <source>Returns the elements of the ordered set &lt;code&gt;ASet&lt;/code&gt; as a tuple of sets, and the elements of the unordered set &lt;code&gt;ASet&lt;/code&gt; as a sorted list of sets without duplicates.</source>
          <target state="translated">정렬 된 집합 &lt;code&gt;ASet&lt;/code&gt; 의 요소를 집합 의 튜플로 반환하고 정렬되지 않은 집합 &lt;code&gt;ASet&lt;/code&gt; 의 요소를 중복 되지 않은 정렬 된 집합의 목록으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4313cdc6c13f459bec7e45b2099a14c30408d080" translate="yes" xml:space="preserve">
          <source>Returns the empty list [] if &lt;code&gt;memsup&lt;/code&gt; is not available, or if the memory check times out.</source>
          <target state="translated">&lt;code&gt;memsup&lt;/code&gt; 을 사용할 수 없거나 메모리 검사 시간이 초과 되면 빈 목록 []을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="242cb3f69fbaa404c4786eef038b7a4fbf84b893" translate="yes" xml:space="preserve">
          <source>Returns the encoding of &lt;code&gt;Term&lt;/code&gt; according to the Erlang external term format as &lt;code&gt;&lt;a href=&quot;#type-ext_iovec&quot;&gt;ext_iovec()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlang 외부 용어 형식에 따라 &lt;code&gt;Term&lt;/code&gt; 의 인코딩을 &lt;code&gt;&lt;a href=&quot;#type-ext_iovec&quot;&gt;ext_iovec()&lt;/a&gt;&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b15b93fdd8dc40296efcdb537f329bdd156b7571" translate="yes" xml:space="preserve">
          <source>Returns the end location of the text of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; 의 주석 모음 텍스트의 끝 위치를 반환합니다 . 텍스트가 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3566fcdfb82b096317ead46d5a85bbfa3fe8cb6e" translate="yes" xml:space="preserve">
          <source>Returns the end location of the text of the annotations Anno. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">주석 Anno 텍스트의 끝 위치를 반환합니다. 텍스트가 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fe9fc59fa4e9c55102e83a40dcfc6626c44188d0" translate="yes" xml:space="preserve">
          <source>Returns the error function of &lt;code&gt;X&lt;/code&gt;, where:</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; 의 오류 함수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="686f5240ee2196e547d590a69ec391bd68224d19" translate="yes" xml:space="preserve">
          <source>Returns the exception body subtree of an abstract try-expression.</source>
          <target state="translated">추상 try-expression의 예외 본문 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df41e402615ec12dfa6f577c1547801ba5417470" translate="yes" xml:space="preserve">
          <source>Returns the expression subtree of an abstract try-expression.</source>
          <target state="translated">추상 try-expression의 식 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="109826f6cfa33e54fb245e45afc8591b64e3bba5" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;record_access&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_access&lt;/code&gt; 노드 의 필드 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b27dfea3f21a6c6109ec3a891661eb30e3875663" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;record_index_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_index_expr&lt;/code&gt; 노드 의 필드 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3e81ea77f2022c3796a8609a56132cf18fe9cd64" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;typed_record_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;typed_record_field&lt;/code&gt; 노드 의 필드 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="8b0af1e459fd815b4cea75c53c3bff0b28f7c3ec" translate="yes" xml:space="preserve">
          <source>Returns the fields subtree of a &lt;code&gt;record_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type&lt;/code&gt; 노드 의 필드 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="eef6115bf3cbfb227bf8d7f73920e2016137eed2" translate="yes" xml:space="preserve">
          <source>Returns the file extension of &lt;code&gt;Filename&lt;/code&gt;, including the period. Returns an empty string if no extension exists.</source>
          <target state="translated">마침표를 포함하여 &lt;code&gt;Filename&lt;/code&gt; 의 파일 확장자를 반환합니다 . 확장이 없으면 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e8297c18bcd4a2fbf65f408905dbc4e4d2ee524b" translate="yes" xml:space="preserve">
          <source>Returns the file list of an open zip archive. The first returned element is the zip archive comment.</source>
          <target state="translated">열린 zip 아카이브의 파일 목록을 반환합니다. 첫 번째로 리턴 된 요소는 zip 아카이브 주석입니다.</target>
        </trans-unit>
        <trans-unit id="b8757cebc59a2e85f8dfa6edb9bfb743d3ce2c6c" translate="yes" xml:space="preserve">
          <source>Returns the file name and line number of a &lt;code&gt;file&lt;/code&gt; attribute. The result is the pair &lt;code&gt;{File, Line}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-file(File, Line).&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 속성 의 파일 이름과 줄 번호를 반환 합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;-file(File, Line).&lt;/code&gt; &quot;을 나타내는 경우 결과는 &lt;code&gt;{File, Line}&lt;/code&gt; 쌍 입니다.</target>
        </trans-unit>
        <trans-unit id="1456a3887b5b610672115b126cd12736e891fab5" translate="yes" xml:space="preserve">
          <source>Returns the filename encoding mode. If it is &lt;code id=&quot;native_name_encoding&quot;&gt;latin1&lt;/code&gt;, the system translates no filenames. If it is &lt;code&gt;utf8&lt;/code&gt;, filenames are converted back and forth to the native filename encoding (usually UTF-8, but UTF-16 on Windows).</source>
          <target state="translated">파일 이름 인코딩 모드를 반환합니다. &lt;code id=&quot;native_name_encoding&quot;&gt;latin1&lt;/code&gt; 인 경우 시스템 은 파일 이름을 변환하지 않습니다. 이 경우 &lt;code&gt;utf8&lt;/code&gt; , 파일 이름은 고유 파일 이름 인코딩 (Windows에서 일반적으로 UTF-8,하지만 UTF-16)에 규정 변환 뒤로이다.</target>
        </trans-unit>
        <trans-unit id="727793519659512f5257edb60f23f683897f14f6" translate="yes" xml:space="preserve">
          <source>Returns the filename of the annotations Anno. If there is no filename, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">주석 Anno의 파일 이름을 반환합니다. 파일 이름이 없으면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2f5fc3394338a8cc347e85497f5e6caf19603431" translate="yes" xml:space="preserve">
          <source>Returns the first byte of binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If the size of &lt;code&gt;Subject&lt;/code&gt; is zero, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">이진 &lt;code&gt;Subject&lt;/code&gt; 의 첫 번째 바이트를 정수로 리턴합니다 . &lt;code&gt;Subject&lt;/code&gt; 의 크기 가 0이면 &lt;code&gt;badarg&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a3ed97b0bfafb06a9dad771086d04b322fda9e71" translate="yes" xml:space="preserve">
          <source>Returns the first codepoint in &lt;code&gt;String&lt;/code&gt; and the rest of &lt;code&gt;String&lt;/code&gt; in the tail. Returns an empty list if &lt;code&gt;String&lt;/code&gt; is empty or an &lt;code&gt;{error, String}&lt;/code&gt; tuple if the next byte is invalid.</source>
          <target state="translated">최초의 코드 포인트를 돌려줍니다 &lt;code&gt;String&lt;/code&gt; 과 나머지 &lt;code&gt;String&lt;/code&gt; 꼬리에 있습니다. &lt;code&gt;String&lt;/code&gt; 이 비어 있으면 빈 목록을 반환 하거나 다음 바이트가 유효하지 않으면 &lt;code&gt;{error, String}&lt;/code&gt; 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8500a0db24f3f61b666bb13c1748bb8adb85729e" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;List&lt;/code&gt; that compares greater than or equal to all other elements of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">반환의 첫 번째 요소 &lt;code&gt;List&lt;/code&gt; 보다 큰 비교 또는 다른 모든 요소들과 동일한 &lt;code&gt;List&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcf6624fd4846f2e03c90674aa49850e3302db4b" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;List&lt;/code&gt; that compares less than or equal to all other elements of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">반환의 첫 번째 요소 &lt;code&gt;List&lt;/code&gt; 의 다른 모든 요소에 동일 작거나 비교 &lt;code&gt;List&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a07a96ec11922ababf9e0b221ffc98cfb381a8e5" translate="yes" xml:space="preserve">
          <source>Returns the first entry associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;, if one exists, otherwise returns &lt;code&gt;none&lt;/code&gt;. For an atom &lt;code&gt;A&lt;/code&gt; in the list, the tuple &lt;code&gt;{A, true}&lt;/code&gt; is the entry associated with &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt; 와 관련된 첫 번째 항목을 반환하고 , 그렇지 않으면 &lt;code&gt;none&lt;/code&gt; 을 반환합니다 . 목록 의 아톰 &lt;code&gt;A&lt;/code&gt; 의 경우 튜플 &lt;code&gt;{A, true}&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 와 연관된 항목 입니다.</target>
        </trans-unit>
        <trans-unit id="fe1a1dac558cf7ee7c3948d12685817160e28b44" translate="yes" xml:space="preserve">
          <source>Returns the first grapheme cluster in &lt;code&gt;String&lt;/code&gt; and the rest of &lt;code&gt;String&lt;/code&gt; in the tail. Returns an empty list if &lt;code&gt;String&lt;/code&gt; is empty or an &lt;code&gt;{error, String}&lt;/code&gt; tuple if the next byte is invalid.</source>
          <target state="translated">최초의 그래 핀 클러스터 반환 &lt;code&gt;String&lt;/code&gt; 과 나머지 &lt;code&gt;String&lt;/code&gt; 꼬리에 있습니다. &lt;code&gt;String&lt;/code&gt; 이 비어 있으면 빈 목록을 반환 하거나 다음 바이트가 유효하지 않으면 &lt;code&gt;{error, String}&lt;/code&gt; 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="25ba3109732e19175965f13ba8cd3b6daf23b319" translate="yes" xml:space="preserve">
          <source>Returns the first key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;. For an &lt;code&gt;ordered_set&lt;/code&gt; table, the first key in Erlang term order is returned. For other table types, the first key according to the internal order of the table is returned. If the table is empty, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">반환 첫 번째 키 &lt;code&gt;Key&lt;/code&gt; 테이블 &lt;code&gt;Tab&lt;/code&gt; . 들어 &lt;code&gt;ordered_set&lt;/code&gt; 테이블, 얼랑 용어 순서에서 첫 번째 키가 반환됩니다. 다른 테이블 유형의 경우 테이블의 내부 순서에 따른 첫 번째 키가 리턴됩니다. 테이블이 비어 있으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="51e9c415d50d1e9d91a39e8134346225ce37d24e" translate="yes" xml:space="preserve">
          <source>Returns the first key stored in table &lt;code&gt;Name&lt;/code&gt; according to the internal order of the table, or &lt;code&gt;'$end_of_table'&lt;/code&gt; if the table is empty.</source>
          <target state="translated">테이블 의 내부 순서에 따라 &lt;code&gt;Name&lt;/code&gt; 테이블에 저장된 첫 번째 키를 반환 하거나 테이블이 비어 있으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3f0fc8e12d9ed576ac7506425a7d0d58ae05c1a9" translate="yes" xml:space="preserve">
          <source>Returns the first row of the result set and positions a cursor at this row.</source>
          <target state="translated">결과 집합의 첫 번째 행을 반환하고이 행에 커서를 놓습니다.</target>
        </trans-unit>
        <trans-unit id="0edc9fc7ed8a8a7a64efef2d8ec8d72f1236fc7f" translate="yes" xml:space="preserve">
          <source>Returns the flags subtree of an abstract bit-string template.</source>
          <target state="translated">추상 비트 문자열 템플릿의 플래그 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3606db966ce51875346d949f6a51ecfaba27d4fb" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;Binary&lt;/code&gt; 인 float를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b4beb841f30e65ed156e20f321adf0444ec4cff" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">텍스트 표현이 &lt;code&gt;String&lt;/code&gt; 인 float를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1f057c3822134d8b28aa2f668a5660a867e0628" translate="yes" xml:space="preserve">
          <source>Returns the function constraint subtree of a &lt;code&gt;constrained_function_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;constrained_function_type&lt;/code&gt; 노드 의 함수 제약 조건 하위 트리를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ebaedcde684c1d236e989ca64eda7f3a84ac7910" translate="yes" xml:space="preserve">
          <source>Returns the function name represented by a syntax tree. If &lt;code&gt;Node&lt;/code&gt; represents a function name, such as &quot;&lt;code&gt;foo/1&lt;/code&gt;&quot; or &quot;&lt;code&gt;bloggs:fred/2&lt;/code&gt;&quot;, a uniform representation of that name is returned. Different nestings of arity and module name qualifiers in the syntax tree does not affect the result.</source>
          <target state="translated">구문 트리로 표시되는 함수 이름을 리턴합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;foo/1&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;bloggs:fred/2&lt;/code&gt; &quot; 와 같은 함수 이름을 나타내는 경우 해당 이름의 균일 한 표현이 리턴됩니다. 구문 트리에서 arity 및 모듈 이름 한정자의 다른 중첩은 결과에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8999dd31e765cda8569349af3508c9f7f8bfb78" translate="yes" xml:space="preserve">
          <source>Returns the function type subtree of a &lt;code&gt;constrained_function_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;constrained_function_type&lt;/code&gt; 노드 의 함수 유형 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="7cd8491a2f60117ed7de95f1f7fe570d1ba4500c" translate="yes" xml:space="preserve">
          <source>Returns the grouped list of all subtrees of a node. If &lt;code&gt;Node&lt;/code&gt; is a leaf node (cf. &lt;code&gt;is_leaf/1&lt;/code&gt;), this is the empty list, otherwise the result is always a nonempty list, containing the lists of subtrees of &lt;code&gt;Node&lt;/code&gt;, in left-to-right order as they occur in the printed program text, and grouped by category. Often, each group contains only a single subtree.</source>
          <target state="translated">노드의 모든 하위 트리 그룹화 된 목록을 반환합니다. 경우 &lt;code&gt;Node&lt;/code&gt; 리프 노드 (참조, &lt;code&gt;is_leaf/1&lt;/code&gt; ),이 그렇지 않으면 결과가 비어 있지 않은 목록의 하위 트리의 목록을 포함, 항상 빈 목록입니다 &lt;code&gt;Node&lt;/code&gt; 가 인쇄 발생으로, 왼쪽에서 오른쪽의 순서로 프로그램 텍스트 및 범주별로 그룹화됩니다. 종종 각 그룹에는 단일 하위 트리 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5de20b75df90cdf1cc80195b73620ec6c4870aa4" translate="yes" xml:space="preserve">
          <source>Returns the grouped list of all subtrees of a syntax tree. If &lt;code&gt;Node&lt;/code&gt; is a leaf node (see &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt;), this is the empty list, otherwise the result is always a nonempty list, containing the lists of subtrees of &lt;code&gt;Node&lt;/code&gt;, in left-to-right order as they occur in the printed program text, and grouped by category. Often, each group contains only a single subtree.</source>
          <target state="translated">구문 트리의 모든 하위 트리 그룹화 된 목록을 반환합니다. 경우 &lt;code&gt;Node&lt;/code&gt; 리프 노드이다 (참조 &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt; 의 하위 트리의 목록을 포함, 그렇지 않으면 결과는 비어 있지 않은 목록은 항상,이 빈 목록) &lt;code&gt;Node&lt;/code&gt; 에서 왼쪽에서 오른쪽 순서가 인쇄 된 프로그램에서 발생하는 텍스트로 분류되고 카테고리별로 그룹화됩니다. 종종 각 그룹에는 단일 하위 트리 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="81cadbe4c10aee223963aee8b501ed86dafc88a3" translate="yes" xml:space="preserve">
          <source>Returns the guard subtree of a &lt;code&gt;clause&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt;&quot;, &lt;code&gt;Guard&lt;/code&gt; is returned. Otherwise, the result is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;clause&lt;/code&gt; 노드 의 보호 서브 트리를 리턴합니다 (있는 경우). &lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt; &quot;일 때 &lt;code&gt;Node&lt;/code&gt; 가&quot; (P1, ..., Pn)을 나타내는 경우 &lt;code&gt;Guard&lt;/code&gt; 가 반환됩니다. 그렇지 않으면 결과는 &lt;code&gt;none&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ee62d28c87ba901603a4e3b7f79b1348a6d15b79" translate="yes" xml:space="preserve">
          <source>Returns the guard subtree of an abstract clause.</source>
          <target state="translated">추상 절의 가드 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7eb44e7bcb999c4f868db6d21ac1bb4f4bbf88a" translate="yes" xml:space="preserve">
          <source>Returns the head element subtree of a &lt;code&gt;list&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[Head ...]&lt;/code&gt;&quot;, the result will represent &quot;&lt;code&gt;Head&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 노드 의 헤드 요소 서브 트리를 리턴 합니다. 경우 &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;[Head ...]&lt;/code&gt; &quot;, 결과는 &quot;나타냅니다 &lt;code&gt;Head&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="3af7dc0dda93b0edf615f60f73e149b75a538963" translate="yes" xml:space="preserve">
          <source>Returns the head of &lt;code&gt;List&lt;/code&gt;, that is, the first element, for example:</source>
          <target state="translated">의 머리를 돌려 &lt;code&gt;List&lt;/code&gt; , 예를 들면, 첫 번째 요소를 :</target>
        </trans-unit>
        <trans-unit id="c429a57d83d81113cfdf33581cf5b7f9fc509fd9" translate="yes" xml:space="preserve">
          <source>Returns the head subtree of an abstract list constructor.</source>
          <target state="translated">추상 목록 생성자의 헤드 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08be17c480e4cc74c13469a30f0056b1b791d8a8" translate="yes" xml:space="preserve">
          <source>Returns the heap type used by the current emulator. One heap type exists:</source>
          <target state="translated">현재 에뮬레이터에서 사용하는 힙 유형을 리턴합니다. 하나의 힙 유형이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="67210385c8b6f03ec34d72d1cf9492efe63df195" translate="yes" xml:space="preserve">
          <source>Returns the high limit of an &lt;code&gt;integer_range_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer_range_type&lt;/code&gt; 노드의 상한을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="80cf3bc103bf6686d6efa5afdf72bccb467e014e" translate="yes" xml:space="preserve">
          <source>Returns the hook function field of the prettyprinter context.</source>
          <target state="translated">prettyprinter 컨텍스트의 후크 함수 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="17b634c122fc1647e261bad737f777bc68b9b223" translate="yes" xml:space="preserve">
          <source>Returns the identifier for process, port, or a tuple containing the tracer module and tracer state tracing this process. If this process is not traced, the return value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">이 프로세스를 추적하는 추적 프로그램 모듈 및 추적 프로그램 상태를 포함하는 프로세스, 포트 또는 튜플의 식별자를 반환합니다. 이 프로세스가 추적되지 않으면 리턴 값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2b4b024bb85113e64fc85854071e0f29184ee616" translate="yes" xml:space="preserve">
          <source>Returns the identifier of the collector process.</source>
          <target state="translated">수집기 프로세스의 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c937a4f07683a6cd57b66b82410b3e29ce7abb4" translate="yes" xml:space="preserve">
          <source>Returns the identifier part of an abstract function name variable.</source>
          <target state="translated">추상 함수 이름 변수의 식별자 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca35c6af029523190c06061eddb3a36813343f5f" translate="yes" xml:space="preserve">
          <source>Returns the indentation if &lt;code&gt;String&lt;/code&gt; has been printed, starting at &lt;code&gt;StartIndent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StartIndent&lt;/code&gt; 에서 시작하여 &lt;code&gt;String&lt;/code&gt; 이 인쇄 된 경우 들여 쓰기를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="766abe8759c884fc6f54934153d617d87cb441c3" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of &lt;code&gt;Character&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;Character&lt;/code&gt; does not occur.</source>
          <target state="translated">최초로 검출 된 위치의 인덱스를 돌려줍니다 &lt;code&gt;Character&lt;/code&gt; 의 &lt;code&gt;String&lt;/code&gt; . 반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;Character&lt;/code&gt; 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32680945734478a7cceeb64e3e9a132211aca10e" translate="yes" xml:space="preserve">
          <source>Returns the index of the last occurrence of &lt;code&gt;Character&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;Character&lt;/code&gt; does not occur.</source>
          <target state="translated">마지막에 검출 된 위치의 인덱스를 돌려줍니다 &lt;code&gt;Character&lt;/code&gt; 의 &lt;code&gt;String&lt;/code&gt; . 반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;Character&lt;/code&gt; 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bacc374c53c5c810e9234b786a89dc572a4ed2bf" translate="yes" xml:space="preserve">
          <source>Returns the information associated with &lt;code&gt;Item&lt;/code&gt; for table &lt;code&gt;Name&lt;/code&gt;. In addition to the &lt;code&gt;{Item, Value}&lt;/code&gt; pairs defined for &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt;, the following items are allowed:</source>
          <target state="translated">테이블 &lt;code&gt;Name&lt;/code&gt; 의 &lt;code&gt;Item&lt;/code&gt; 과 관련된 정보를 반환합니다 . &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; 에 대해 정의 된 &lt;code&gt;{Item, Value}&lt;/code&gt; 쌍 외에도 다음 항목이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4bf340b9b4979b1bb33a207c9e6c9b7576b07311" translate="yes" xml:space="preserve">
          <source>Returns the information associated with &lt;code&gt;Item&lt;/code&gt; for table &lt;code&gt;Tab&lt;/code&gt;, or returns &lt;code&gt;undefined&lt;/code&gt; if &lt;code&gt;Tab&lt;/code&gt; does not refer an existing ETS table. If &lt;code&gt;Tab&lt;/code&gt; is not of the correct type, or if &lt;code&gt;Item&lt;/code&gt; is not one of the allowed values, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">과 관련된 정보를 반환 &lt;code&gt;Item&lt;/code&gt; 테이블 &lt;code&gt;Tab&lt;/code&gt; , 또는 반환 &lt;code&gt;undefined&lt;/code&gt; 경우 &lt;code&gt;Tab&lt;/code&gt; 기존 ETS 테이블을 참조하지 않습니다. 경우 &lt;code&gt;Tab&lt;/code&gt; 올바른 유형이 아닌 경우, 또는 &lt;code&gt;Item&lt;/code&gt; 허용 된 값 중 하나가 아닌하는 &lt;code&gt;badarg&lt;/code&gt; 의 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db1cb8d7799409cf97df64d4e97a6ced6db4da9e" translate="yes" xml:space="preserve">
          <source>Returns the initialization vector to be used in the next iteration of encrypt/decrypt of type &lt;code&gt;Type&lt;/code&gt;. &lt;code&gt;Data&lt;/code&gt; is the encrypted data from the previous iteration step. The &lt;code&gt;IVec&lt;/code&gt; argument is only needed for &lt;code&gt;des_cfb&lt;/code&gt; as the vector used in the previous iteration step.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 유형 의 다음 암호화 / 복호화 반복에 사용될 초기화 벡터를 리턴합니다 . &lt;code&gt;Data&lt;/code&gt; 는 이전 반복 단계에서 암호화 된 데이터입니다. &lt;code&gt;IVec&lt;/code&gt; 의 인수 만 필요합니다 &lt;code&gt;des_cfb&lt;/code&gt; 이전 반복 단계에서 사용되는 벡터로.</target>
        </trans-unit>
        <trans-unit id="0af7feb7dc230951d85a30279f50c7cc989db5ec" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt;.</source>
          <target state="translated">의 교차 반환 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6918ab6794e57e9b098a10306bd631cd5928a7a5" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ordset1&lt;/code&gt; 과 &lt;code&gt;Ordset2&lt;/code&gt; 의 교집합을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="83c21ac18848efa1de73cc9f1af37db64edb655f" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 과 &lt;code&gt;Set2&lt;/code&gt; 의 교집합을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3ebd978d9d23d26299d4430554d2ba0bef4130d4" translate="yes" xml:space="preserve">
          <source>Returns the intersection of the non-empty list of sets.</source>
          <target state="translated">비어 있지 않은 세트 목록의 교집합을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="871491bb4f88eae3839119473dafd8cdc887da5e" translate="yes" xml:space="preserve">
          <source>Returns the issuer id.</source>
          <target state="translated">발급자 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad00670d8637f256db21c3aa2caacc5960f36d01" translate="yes" xml:space="preserve">
          <source>Returns the issuer of the &lt;code&gt;CRL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; 발행자를 돌려 줍니다 .</target>
        </trans-unit>
        <trans-unit id="b532cfb321a8c907cfdccae15fa01ce4ccce743b" translate="yes" xml:space="preserve">
          <source>Returns the keys in &lt;code&gt;Tree&lt;/code&gt; as an ordered list.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 의 키를 순서가 지정된 목록으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2efe5caa35a7c7964dec64e36d33af72b8e11119" translate="yes" xml:space="preserve">
          <source>Returns the label, value-expression, and type of a record field specifier. The result is a pair &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Label&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, or &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;. If the field has no value-expression, the value for &lt;code&gt;Default&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. If the field has no type, the value for &lt;code&gt;Type&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">레코드 필드 지정자의 레이블, 값 표현 및 유형을 리턴합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;Label&lt;/code&gt; &quot;, &quot; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;, &quot; &lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;을 나타내는 경우 결과는 &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; 쌍입니다 . 또는 &quot; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;. 필드에 value-expression이없는 경우 &lt;code&gt;Default&lt;/code&gt; 의 값 은 atom &lt;code&gt;none&lt;/code&gt; 이 됩니다. 필드에 유형이없는 경우 &lt;code&gt;Type&lt;/code&gt; 값 은 atom &lt;code&gt;none&lt;/code&gt; 이 됩니다.</target>
        </trans-unit>
        <trans-unit id="48a250452ce3e81e9c520ba067d0d6201fc704a8" translate="yes" xml:space="preserve">
          <source>Returns the largest element in &lt;code&gt;Set&lt;/code&gt;. Assumes that &lt;code&gt;Set&lt;/code&gt; is not empty.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 에서 가장 큰 요소를 반환합니다 . &lt;code&gt;Set&lt;/code&gt; 이 비어 있지 않은 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="215a5d757eb055a83e5ff59de344c98cc86f52f1" translate="yes" xml:space="preserve">
          <source>Returns the largest integer not greater than &lt;code&gt;Number&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 보다 크지 않은 가장 큰 정수를 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="595ac8a52eae212a230fb30580da4283e89ba746" translate="yes" xml:space="preserve">
          <source>Returns the largest of &lt;code&gt;Term1&lt;/code&gt; and &lt;code&gt;Term2&lt;/code&gt;. If the terms are equal, &lt;code&gt;Term1&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Term1&lt;/code&gt; 과 &lt;code&gt;Term2&lt;/code&gt; 중 가장 큰 값을 반환합니다 . 용어가 같으면 &lt;code&gt;Term1&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="882dc7451aad45b42a7873769962f24bf4be6868" translate="yes" xml:space="preserve">
          <source>Returns the last byte of binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If the size of &lt;code&gt;Subject&lt;/code&gt; is zero, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">이진 &lt;code&gt;Subject&lt;/code&gt; 의 마지막 바이트를 정수로 리턴합니다 . &lt;code&gt;Subject&lt;/code&gt; 의 크기 가 0이면 &lt;code&gt;badarg&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3baa57324d471f294ae33ecf89d1f912880bdf75" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;Filename&lt;/code&gt; with extension &lt;code&gt;Ext&lt;/code&gt; stripped. This function is to be used to remove a (possible) specific extension. To remove an existing extension when you are unsure which one it is, use &lt;code&gt;rootname(basename(Filename))&lt;/code&gt;.</source>
          <target state="translated">확장자 &lt;code&gt;Ext&lt;/code&gt; 가 제거 된 &lt;code&gt;Filename&lt;/code&gt; 의 마지막 구성 요소를 리턴합니다 . 이 기능은 (가능한) 특정 확장명을 제거하는 데 사용됩니다. 어떤 확장자인지 확실하지 않은 경우 기존 확장자를 제거하려면 &lt;code&gt;rootname(basename(Filename))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2de1aa6a031348235c64e473d8161ca7dcb89078" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;Filename&lt;/code&gt; itself if it does not contain any directory separators.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 의 마지막 구성 요소 또는 디렉토리 분리자가없는 경우 &lt;code&gt;Filename&lt;/code&gt; 자체를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="de735b3add151b4e3ceffe483849b7459fa29c66" translate="yes" xml:space="preserve">
          <source>Returns the last element in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">의 마지막 요소를 돌려줍니다 &lt;code&gt;List&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc32fb22ced75cd1a97ae42785f59ea43251c7ee" translate="yes" xml:space="preserve">
          <source>Returns the last key &lt;code&gt;Key&lt;/code&gt; according to Erlang term order in table &lt;code&gt;Tab&lt;/code&gt; of type &lt;code&gt;ordered_set&lt;/code&gt;. For other table types, the function is synonymous to &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt;. If the table is empty, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;ordered_set&lt;/code&gt; 유형의 테이블 &lt;code&gt;Tab&lt;/code&gt; 에서 Erlang 용어 순서에 따라 마지막 키 &lt;code&gt;Key&lt;/code&gt; 를 리턴합니다 . 다른 테이블 유형의 경우 함수는 &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; 과 동의어 입니다. 테이블이 비어 있으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2e4ef73baa32afa0b0e487870e1607070bbec974" translate="yes" xml:space="preserve">
          <source>Returns the last row of the result set and positions a cursor at this row.</source>
          <target state="translated">결과 집합의 마지막 행을 반환하고이 행에 커서를 놓습니다.</target>
        </trans-unit>
        <trans-unit id="f7bfd3c8900e1fcc3a3e53ca0c688950be56f31a" translate="yes" xml:space="preserve">
          <source>Returns the left argument subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; 노드 의 왼쪽 인수 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="b48a36ffca062c9ef253787edf6b1da17c53fd8d" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;List&lt;/code&gt;, for example:</source>
          <target state="translated">예를 들어 &lt;code&gt;List&lt;/code&gt; 의 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a411230f0c97ff164b970e44dbef7f489d7096be" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;list&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not an I/O list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 길이를 리턴 하거나 &lt;code&gt;list&lt;/code&gt; 가 I / O리스트가 아닌 경우 &lt;code&gt;-1&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="91a272817fb1e0acd72db3bbf3cd046272e70413" translate="yes" xml:space="preserve">
          <source>Returns the length of an I/O list.</source>
          <target state="translated">I / O 목록의 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9fa4d6d170b8717addba0d4eadeea023df77c066" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest common prefix of the binaries in list &lt;code&gt;Binaries&lt;/code&gt;.</source>
          <target state="translated">목록 &lt;code&gt;Binaries&lt;/code&gt; 에서 이진의 가장 긴 공통 접두사 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="15e85e4df262bfcc149c40fec2b8304b90131796" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest common suffix of the binaries in list &lt;code&gt;Binaries&lt;/code&gt;.</source>
          <target state="translated">목록 &lt;code&gt;Binaries&lt;/code&gt; 에서 이진의 가장 긴 공통 접미사 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5ab7b7fa10ce4a2921d3bb5fa079090c3c65076d" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest path in the tree. A leaf node has depth zero, the tree representing &quot;&lt;code&gt;{foo, bar}&lt;/code&gt;&quot; has depth one, etc.</source>
          <target state="translated">트리에서 가장 긴 경로의 길이를 반환합니다. 리프 노드는 깊이가 0이고, &quot; &lt;code&gt;{foo, bar}&lt;/code&gt; &quot;를 나타내는 트리는 깊이 1을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a4ff55d7b2a5e4098e8e34d232a725c7ab5566db" translate="yes" xml:space="preserve">
          <source>Returns the length of the maximum initial segment of &lt;code&gt;String&lt;/code&gt;, which consists entirely of characters from &lt;code&gt;Chars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chars&lt;/code&gt; 의 문자로만 구성된 &lt;code&gt;String&lt;/code&gt; 의 최대 초기 세그먼트 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e8fa5aad5e7539b94067326466d02a326177ce9e" translate="yes" xml:space="preserve">
          <source>Returns the length of the maximum initial segment of &lt;code&gt;String&lt;/code&gt;, which consists entirely of characters not from &lt;code&gt;Chars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chars&lt;/code&gt; 의 문자가 아닌 문자로 구성된 &lt;code&gt;String&lt;/code&gt; 의 초기 초기 세그먼트 길이를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="592fd7ef2d1a9eda374ed0a7ff8d1fb5124ca836" translate="yes" xml:space="preserve">
          <source>Returns the library directory, &lt;code&gt;$OTPROOT/lib&lt;/code&gt;, where &lt;code&gt;$OTPROOT&lt;/code&gt; is the root directory of Erlang/OTP.</source>
          <target state="translated">라이브러리 디렉토리 &lt;code&gt;$OTPROOT/lib&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;$OTPROOT&lt;/code&gt; 는 Erlang / OTP의 루트 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="381a9c3f08262de49fdb40b5f3b3c553c29f53ac" translate="yes" xml:space="preserve">
          <source>Returns the limit for number of ETS tables. This limit is &lt;code&gt;partially obsolete&lt;/code&gt; and number of tables are only limited by available memory.</source>
          <target state="translated">ETS 테이블 수의 한계를 리턴합니다. 이 제한은 &lt;code&gt;partially obsolete&lt;/code&gt; 가능한 메모리에 의해서만 테이블 수가 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="7e933a610e69851601b2fe7f550ae005744bf4da" translate="yes" xml:space="preserve">
          <source>Returns the line of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; 의 주석 콜렉션 라인을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="5b68d341dd888c350386ee38f3622cdb62c24dd2" translate="yes" xml:space="preserve">
          <source>Returns the line of the annotations Anno.</source>
          <target state="translated">주석 Anno의 행을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c421ffe1e26f240ebb4f7bb518a6bd8c3f22fde3" translate="yes" xml:space="preserve">
          <source>Returns the line widh field of the prettyprinter context.</source>
          <target state="translated">prettyprinter 컨텍스트의 행 widh 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5ffad1fc56f669ab3bf1594843425fd0f9acf4f0" translate="yes" xml:space="preserve">
          <source>Returns the lines of text of the abstract comment.</source>
          <target state="translated">추상 주석의 텍스트 줄을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bdceda20eaa78e2c73e651a69d5134503d89dd75" translate="yes" xml:space="preserve">
          <source>Returns the list of &quot;after&quot; subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; 노드 의 &quot;after&quot;서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="83a3cb8f4311d9fee98f333c4f9c7d1f3747f9a9" translate="yes" xml:space="preserve">
          <source>Returns the list of action body subtrees of a &lt;code&gt;receive_expr&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;receive C1; ...; Cn end&lt;/code&gt;&quot;, this is the empty list.</source>
          <target state="translated">&lt;code&gt;receive_expr&lt;/code&gt; 노드 의 조치 본문 서브 트리 목록을 리턴 합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;receive C1; ...; Cn end&lt;/code&gt; &quot;를 나타내는 경우 이는 비어있는 목록입니다.</target>
        </trans-unit>
        <trans-unit id="bf0ab24b6e5813df7a073cd6326fffae8592f4ac" translate="yes" xml:space="preserve">
          <source>Returns the list of all abstract variables in a pattern. An exception is thrown if &lt;code&gt;Node&lt;/code&gt; does not represent a well-formed Core Erlang clause pattern. The order of listing is not defined.</source>
          <target state="translated">패턴의 모든 추상 변수 목록을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 가 제대로 구성된 Core Erlang 절 패턴을 나타내지 않으면 예외가 발생합니다 . 리스팅 순서가 정의되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="f5409356c9e9c2eeef5256b7a2b7af8a704442fe" translate="yes" xml:space="preserve">
          <source>Returns the list of all abstract variables in the given patterns. An exception is thrown if some element in &lt;code&gt;Patterns&lt;/code&gt; does not represent a well-formed Core Erlang clause pattern. The order of listing is not defined.</source>
          <target state="translated">주어진 패턴의 모든 추상 변수 목록을 반환합니다. &lt;code&gt;Patterns&lt;/code&gt; 일부 요소가 올바른 형식의 Core Erlang 절 패턴을 나타내지 않으면 예외가 발생합니다 . 리스팅 순서가 정의되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="dba74c3691fb975ec9f9de2027feb157beff4853" translate="yes" xml:space="preserve">
          <source>Returns the list of all abstract variables in the patterns of an abstract clause. The order of listing is not defined.</source>
          <target state="translated">추상 절의 패턴에있는 모든 추상 변수 목록을 반환합니다. 리스팅 순서가 정의되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a3f26cfc2c9d11a0875140fd3e9d329f7cf626c5" translate="yes" xml:space="preserve">
          <source>Returns the list of all currently loaded modules for which &lt;code&gt;&lt;a href=&quot;#module_status-1&quot;&gt;module_status/1&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;modified&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#all_loaded-0&quot;&gt;all_loaded/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#module_status-1&quot;&gt;module_status/1&lt;/a&gt;&lt;/code&gt; 이 &lt;code&gt;modified&lt;/code&gt; 를 반환 하는 현재로드 된 모든 모듈의 목록을 반환합니다 . &lt;code&gt;&lt;a href=&quot;#all_loaded-0&quot;&gt;all_loaded/0&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4074d21c5e78433215bddf596b730cbd9571852d" translate="yes" xml:space="preserve">
          <source>Returns the list of all entries associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;. If no such entry exists, the result is the empty list.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt; 와 관련된 모든 항목의 목록을 반환합니다 . 해당 항목이 없으면 결과는 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="33c543dd7cf255ead0222de44f1197badf5ef930" translate="yes" xml:space="preserve">
          <source>Returns the list of all test cases and test case groups in the test suite module to be executed. This list also specifies the order the cases and groups are executed by &lt;code&gt;Common Test&lt;/code&gt;. A test case is represented by an atom, the name of the test case function, or a &lt;code&gt;testcase&lt;/code&gt; tuple indicating that the test case shall be repeated. A test case group is represented by a &lt;code&gt;group&lt;/code&gt; tuple, where &lt;code&gt;GroupName&lt;/code&gt;, an atom, is the name of the group (defined in &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt;). Execution properties for groups can also be specified, both for a top-level group and for any of its subgroups. Group execution properties specified here override properties in the group definition (see &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt;). (With value &lt;code&gt;default&lt;/code&gt;, the group definition properties are used).</source>
          <target state="translated">실행할 테스트 스위트 모듈의 모든 테스트 케이스 및 테스트 케이스 그룹의 목록을 리턴합니다. 이 목록은 또한 &lt;code&gt;Common Test&lt;/code&gt; 에서 케이스 및 그룹이 실행되는 순서를 지정합니다 . 테스트 케이스는 원자, 테스트 케이스 함수의 이름 또는 테스트 케이스가 반복되어야 함을 나타내는 &lt;code&gt;testcase&lt;/code&gt; 튜플로 표시됩니다. 테스트 케이스 그룹은 &lt;code&gt;group&lt;/code&gt; 튜플로 표시됩니다. 여기서 원자 인 &lt;code&gt;GroupName&lt;/code&gt; 은 그룹의 이름입니다 ( &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt; 에 정의 됨 ). 최상위 그룹과 하위 그룹 모두에 대해 그룹의 실행 속성을 지정할 수도 있습니다. 여기에 지정된 그룹 실행 속성은 그룹 정의의 속성을 재정의합니다 ( &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt; 참조 ). (가치 &lt;code&gt;default&lt;/code&gt; , 그룹 정의 속성이 사용됨).</target>
        </trans-unit>
        <trans-unit id="4b90db412db69843fc9c55da35c6d6e35fc21fcc" translate="yes" xml:space="preserve">
          <source>Returns the list of all test cases and test case groups in the test suite module to be executed. This list also specifies the order the cases and groups are executed by &lt;code&gt;Common Test&lt;/code&gt;. A test case is represented by an atom, the name of the test case function. A test case group is represented by a &lt;code&gt;group&lt;/code&gt; tuple, where &lt;code&gt;GroupName&lt;/code&gt;, an atom, is the name of the group (defined in &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;). Execution properties for groups can also be specified, both for a top-level group and for any of its subgroups. Group execution properties specified here override properties in the group definition (see &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;). (With value &lt;code&gt;default&lt;/code&gt;, the group definition properties are used).</source>
          <target state="translated">실행할 테스트 스위트 모듈의 모든 테스트 케이스 및 테스트 케이스 그룹 목록을 리턴합니다. 이 목록은 또한 케이스 및 그룹이 &lt;code&gt;Common Test&lt;/code&gt; 의해 실행되는 순서를 지정합니다 . 테스트 케이스는 테스트 케이스 함수의 이름 인 원자로 표시됩니다. 테스트 케이스 그룹은 &lt;code&gt;group&lt;/code&gt; 튜플로 표시되며 , 여기서 원자 인 &lt;code&gt;GroupName&lt;/code&gt; 은 그룹의 이름입니다 ( &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; 에 정의 됨 ). 최상위 그룹과 하위 그룹 모두에 대해 그룹의 실행 속성을 지정할 수도 있습니다. 여기에 지정된 그룹 실행 특성은 그룹 정의의 특성을 대체합니다 ( &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; 참조 ). ( &lt;code&gt;default&lt;/code&gt; 값 으로 그룹 정의 특성이 사용됩니다).</target>
        </trans-unit>
        <trans-unit id="9f7bc040a55769c2d560efbbc9bfd9aeb11b35dd" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of a &lt;code&gt;macro&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;?Name&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;?Name(A1, ..., An)&lt;/code&gt;&quot;, &lt;code&gt;[A1, ..., An]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 노드 의 인수 서브 트리 목록을 리턴합니다 (있는 경우). &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;?Name&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;none&lt;/code&gt; 반환 되지 않습니다 . 그렇지 않으면 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;?Name(A1, ..., An)&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;[A1, ..., An]&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cd2abf692bb89f1661533fd8c05a69c2d5f69705" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an &lt;code&gt;application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; 노드 의 인수 하위 트리 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b51010749945c47c4a6c5f5d3ade7e33ffdcf50d" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an &lt;code&gt;attribute&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name.&lt;/code&gt;&quot;, the result is &lt;code&gt;none&lt;/code&gt;. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name(E1, ..., En).&lt;/code&gt;&quot;, &lt;code&gt;[E1, ..., E1]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 노드 의 인수 서브 트리 목록을 리턴합니다 (있는 경우). &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;-Name.&lt;/code&gt; &quot;을 나타내는 경우 결과는 &lt;code&gt;none&lt;/code&gt; 입니다. 그렇지 않으면 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;-Name(E1, ..., En).&lt;/code&gt; 나타내는 경우 &quot;, &lt;code&gt;[E1, ..., E1]&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5941b8a7a66e18c12264f7cd22a3b52dba29310e" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an abstract function application.</source>
          <target state="translated">추상 함수 응용 프로그램의 인수 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d13cd4836d9e90ac1910dff017734c9100b84f00" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an abstract inter-module call.</source>
          <target state="translated">추상 모듈 간 호출의 인수 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cd9609759ae346e45822e25fdf4f8285b349d0e" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an abstract primitive operation call.</source>
          <target state="translated">추상 원시 연산 호출의 인수 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="002cc27d9fa32b3b9b24b393e8046e89d6738cf2" translate="yes" xml:space="preserve">
          <source>Returns the list of bindings contained in the binding structure.</source>
          <target state="translated">바인딩 구조에 포함 된 바인딩 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5174b9697fb1207ec868d471717172647eff5d58" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;binary_comp&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;binary_comp&lt;/code&gt; 노드 의 본문 하위 트리 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3764fca4cbc9e969b7bb5f22406bbe65ffceaa69" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;block_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;block_expr&lt;/code&gt; 노드 의 본문 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="268c5b2ec33d12dc92e33eec2a35d11789339bf3" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;conjunction&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;conjunction&lt;/code&gt; 노드 의 본문 하위 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="3b83cd1e6d000ce366f138095649d55539bb3870" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;disjunction&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;disjunction&lt;/code&gt; 노드 의 본문 하위 트리 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="418577006bf89ddd302725795d34301ae3eebf59" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;list_comp&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;list_comp&lt;/code&gt; 노드 의 본문 하위 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="2e074f4f653ca571b3aabaa3e095ceb1264770b3" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; 노드 의 본문 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="b82a11ca3b703fc466802dfb6bbbf88fa8ba8935" translate="yes" xml:space="preserve">
          <source>Returns the list of case-clause subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;try Body catch H1; ...; Hn end&lt;/code&gt;&quot;, the result is the empty list.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; 노드 의 case-clause 서브 트리 목록을 리턴 합니다. 경우 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;try Body catch H1; ...; Hn end&lt;/code&gt; &quot;, 결과는 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b163a2a697db375070516e96cf791160e3f8d653" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;Latin1String&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;code&gt;Latin1String&lt;/code&gt; 을 문자열 로 인쇄하는 데 필요한 문자 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="124942b2cf897d58985bc38eb5a5acb9816a0d63" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;String&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 로 인쇄하는 데 필요한 문자 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b42ad7ebc647ce2e5442ae846b7d53befad54d04" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;String&lt;/code&gt; as a string. Non-Latin-1 characters are escaped.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 로 인쇄하는 데 필요한 문자 목록을 반환합니다 . 비 라틴 -1 문자는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="0f2300197a91df71da83cb8bef05262f0dd970b5" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the ISO Latin-1 character set.</source>
          <target state="translated">ISO Latin-1 문자 세트에서 문자 상수를 인쇄하는 데 필요한 문자 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5c0c8313f5ebbada3d38c47694ce547bedf69828" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the Unicode character set.</source>
          <target state="translated">유니 코드 문자 집합에서 문자 상수를 인쇄하는 데 필요한 문자 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="afc44efa34ad4cdb1404aeae6b5b54830fce13c3" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the Unicode character set. Non-Latin-1 characters are escaped.</source>
          <target state="translated">유니 코드 문자 집합에서 문자 상수를 인쇄하는 데 필요한 문자 목록을 반환합니다. 비 라틴 -1 문자는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="711128e38d9b2b114faf6ac288b83e56c8d75731" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print atom &lt;code&gt;Atom&lt;/code&gt;.</source>
          <target state="translated">atom &lt;code&gt;Atom&lt;/code&gt; 인쇄에 필요한 문자 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="689aa40246069f6a3c6dadf8c4e44160c116a4e8" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print atom &lt;code&gt;Atom&lt;/code&gt;. Non-Latin-1 characters are escaped.</source>
          <target state="translated">atom &lt;code&gt;Atom&lt;/code&gt; 인쇄에 필요한 문자 목록을 리턴합니다 . 비 라틴 -1 문자는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="acd1089b8486cdaabf46562a1414e8d723fdfd00" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;case_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;case_expr&lt;/code&gt; 노드 의 절 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="c4ec2b5350e039a89bf27307ded21a4be020b41a" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;cond_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;cond_expr&lt;/code&gt; 노드 의 절 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="db4d0cbbdc7ae0347b8b0b19fa56c7a744652ea3" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;fun_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;fun_expr&lt;/code&gt; 노드 의 절 하위 트리 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4a4811dab4399a621db98a65df21a9456e96d83c" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;function&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 노드 의 절 하위 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="02cc128b9f2ae8c4dbfdbc060621fae35cdd1213" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;named_fun_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;named_fun_expr&lt;/code&gt; 노드 의 절 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="c74b6fdbcb358b8ac8ffcf58c36b97f6fa1d4cdd" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;receive_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;receive_expr&lt;/code&gt; 노드 의 절 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="13dff7dca71508f0bbf6094893dda46bb978468e" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of an &lt;code&gt;if_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;if_expr&lt;/code&gt; 노드 의 절 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="18efa2b6c2396954e8395002e5b91e718c2d3bce" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of an abstract case-expression.</source>
          <target state="translated">추상 case-expression의 절 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d73b8673beb6ef0c9070d50ad97f019dda33ce8" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of an abstract receive-expression.</source>
          <target state="translated">추상 receive-expression의 절 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7fde246bf7c3ef0b4a2f461639882e4c5bf4e9a" translate="yes" xml:space="preserve">
          <source>Returns the list of definitions of an abstract letrec-expression. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt;&quot;, the returned value is &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt;.</source>
          <target state="translated">추상 letrec-expression의 정의 목록을 반환합니다. 경우 &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt; &quot;반환 값은 &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="945436a6b5fa519ab0f1edcf4fc9470566c60ff8" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of a &lt;code&gt;tuple&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;tuple&lt;/code&gt; 노드 의 요소 하위 트리 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6fabb3f95c2e4e3818af26e4f5091c9e26f9d629" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of a list skeleton. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt;&quot;, then &lt;code&gt;list_elements(Node)&lt;/code&gt; yields the list &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt;.</source>
          <target state="translated">리스트 스켈레톤의 요소 서브 트리리스트를 리턴합니다. &lt;code&gt;Node&lt;/code&gt; 는 적절한 목록을 나타내야합니다. 예를 들어 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt; &quot;를 &lt;code&gt;list_elements(Node)&lt;/code&gt; 경우 list_elements (Node) 는리스트 &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1a70747717895527a2c93640bc8fb7297c29a19a" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of an abstract list. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt;&quot;, then &lt;code&gt;list_elements(Node)&lt;/code&gt; yields the list &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt;.</source>
          <target state="translated">추상 목록의 요소 하위 트리 목록을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 는 적절한 목록을 나타내야합니다. 예를 들어, &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt; &quot;를 &lt;code&gt;list_elements(Node)&lt;/code&gt; 경우 list_elements (Node) 는 목록 &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt; )을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="21a6d01ce9801f0c323f7deb9da8709a2ed605de" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of an abstract tuple.</source>
          <target state="translated">추상 튜플의 요소 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bd6f833551e230675df31bdd34d04877f6471a05" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of an abstract value list.</source>
          <target state="translated">추상 값 목록의 요소 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e75f7c9dff95d26b3cd8df37ade8ce6b70576732" translate="yes" xml:space="preserve">
          <source>Returns the list of exception variable subtrees of an abstract try-expression.</source>
          <target state="translated">추상 try-expression의 예외 변수 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bcaed8b98b132735c6318c0b3ba11cbe5e34c6ad" translate="yes" xml:space="preserve">
          <source>Returns the list of exports subtrees of an abstract module definition.</source>
          <target state="translated">추상 모듈 정의의 내보내기 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="94cb2abcd5c82b5d31f4dbdac385e330bef9e815" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;binary&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;binary&lt;/code&gt; 노드 의 필드 하위 트리 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="72c9d9bbfb3bb2e94574748bc9ed774b1e38a9ac" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;map_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_expr&lt;/code&gt; 노드 의 필드 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d9211e45912cbd7098c6aa17c81d7c02c5d50f07" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;map_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;map()&lt;/code&gt;&quot;, &lt;code&gt;any_size&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#{F1, ..., Fn}&lt;/code&gt;&quot;, &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;map_type&lt;/code&gt; 노드 의 필드 서브 트리 목록을 리턴 합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;map()&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;any_size&lt;/code&gt; 가 리턴됩니다. 그렇지 않으면 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;#{F1, ..., Fn}&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4b7e98031ca99be9217e22e82d33dad17bd6ce2a" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;record_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_expr&lt;/code&gt; 노드 의 필드 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="407fb8b9bb2f6e33c8560a0efcab1f10e71343c9" translate="yes" xml:space="preserve">
          <source>Returns the list of function definitions of an abstract module definition.</source>
          <target state="translated">추상 모듈 정의의 함수 정의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a2ab4efae449df4c15eb828bb4bb88eeac2475b5" translate="yes" xml:space="preserve">
          <source>Returns the list of function names declared by an export attribute. We do not guarantee that each name occurs at most once in the list. The order of listing is not defined.</source>
          <target state="translated">내보내기 속성으로 선언 된 함수 이름 목록을 반환합니다. 각 이름은 목록에서 최대 한 번만 발생한다고 보장하지 않습니다. 리스팅 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c2b2400f5c0a83524d5608c5163ef8e6e949ed8" translate="yes" xml:space="preserve">
          <source>Returns the list of handler-clause subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; 노드 의 handler-clause 서브 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="5b2e456cd8bbdb40ab0a4925fd6255bde9bbe6c8" translate="yes" xml:space="preserve">
          <source>Returns the list of left-hand side function variable subtrees of a letrec-expression. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt;&quot;, the returned value is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt;.</source>
          <target state="translated">letrec-expression의 왼쪽 함수 변수 하위 트리 목록을 반환합니다. 경우 &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt; &quot;반환 값은 &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0ed376d8d81020e699dae4f48b717f4b97e2ecc" translate="yes" xml:space="preserve">
          <source>Returns the list of left-hand side function variable subtrees of an abstract module definition.</source>
          <target state="translated">추상 모듈 정의의 왼쪽 함수 변수 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="00bfcbbdcbee2de56a6b375d9f6f67ff2c2883ef" translate="yes" xml:space="preserve">
          <source>Returns the list of left-hand side variables of an abstract let-expression.</source>
          <target state="translated">추상 let-expression의 왼쪽 변수 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="87121cf9d482041e9558ca7b8f9f6e5b0520be74" translate="yes" xml:space="preserve">
          <source>Returns the list of pairs of attribute key/value subtrees of an abstract module definition.</source>
          <target state="translated">추상 모듈 정의의 속성 키 / 값 하위 트리 쌍 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9e23575dfd8657140c767e7d648299a94cfbc8ff" translate="yes" xml:space="preserve">
          <source>Returns the list of parameter subtrees of an abstract fun-expression.</source>
          <target state="translated">추상 fun-expression의 매개 변수 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f1363caa5b1b4439d25f3d3cfc135eabcd34bcc8" translate="yes" xml:space="preserve">
          <source>Returns the list of pattern subtrees of a &lt;code&gt;clause&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;clause&lt;/code&gt; 노드 의 패턴 하위 트리 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d359ce4bd10b631c59b089cf02d5ad747dd85eb7" translate="yes" xml:space="preserve">
          <source>Returns the list of pattern subtrees of an abstract clause.</source>
          <target state="translated">추상 절의 패턴 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0edfeb6fa717efb05f804898e3906078da14f4d2" translate="yes" xml:space="preserve">
          <source>Returns the list of segment subtrees of an abstract binary-template.</source>
          <target state="translated">추상 바이너리 템플릿의 세그먼트 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="87af8f9219134786af7ce2b52a493fc461baf999" translate="yes" xml:space="preserve">
          <source>Returns the list of subnodes of a &lt;code&gt;form_list&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;form_list&lt;/code&gt; 노드 의 서브 노드 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d77d89eba9d9e06e8771e8285173cd9640606868" translate="yes" xml:space="preserve">
          <source>Returns the list of subtrees of a data constructor node. If the arity of the constructor is zero, the result is the empty list.</source>
          <target state="translated">데이터 생성자 노드의 하위 트리 목록을 반환합니다. 생성자의 arity가 0이면 결과는 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="ef5893064443af2ad8ff45e9e7236f44f316877e" translate="yes" xml:space="preserve">
          <source>Returns the list of success variable subtrees of an abstract try-expression.</source>
          <target state="translated">추상 try-expression의 성공 변수 하위 트리 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8bda49464f0d0756b59ce17601ca68354e6cbd6b" translate="yes" xml:space="preserve">
          <source>Returns the list of type element subtrees of a &lt;code&gt;tuple_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;tuple()&lt;/code&gt;&quot;, &lt;code&gt;any_size&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;{T1, ..., Tn}&lt;/code&gt;&quot;, &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;tuple_type&lt;/code&gt; 노드 의 유형 요소 서브 트리 목록을 리턴 합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;tuple()&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;any_size&lt;/code&gt; 가 리턴됩니다. 그렇지 않으면 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;{T1, ..., Tn}&lt;/code&gt; &quot;을 나타내는 경우 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7b83f500ab1dfa61376b1b83f850e92057de9ae6" translate="yes" xml:space="preserve">
          <source>Returns the list of type subtrees of a &lt;code&gt;type_union&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;type_union&lt;/code&gt; 노드의 하위 트리 유형 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="49ac30210525f39051654f12dae9f6c5d49732cf" translate="yes" xml:space="preserve">
          <source>Returns the list of type-specifier subtrees of a &lt;code&gt;binary_field&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;.../T1, ..., Tn&lt;/code&gt;&quot;, the result is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, otherwise the result is the empty list.</source>
          <target state="translated">&lt;code&gt;binary_field&lt;/code&gt; 노드 의 유형 지정자 서브 트리 목록을 리턴 합니다. 경우 &lt;code&gt;Node&lt;/code&gt; &quot;대표 &lt;code&gt;.../T1, ..., Tn&lt;/code&gt; &quot;결과는 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; , 그렇지 않으면, 결과는 빈리스트이다.</target>
        </trans-unit>
        <trans-unit id="7a4e3a816d4cabd41a07f6e0e2a76249c29b6f5a" translate="yes" xml:space="preserve">
          <source>Returns the list of user annotations associated with a syntax tree node. For a newly created node, this is the empty list. The annotations may be any terms.</source>
          <target state="translated">구문 트리 노드와 연관된 사용자 주석 목록을 리턴합니다. 새로 작성된 노드의 경우 이는 비어있는 목록입니다. 주석은 임의의 용어 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f05ea1685ae0a61f80ea66b99708918dcb2cf8b4" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;char&lt;/code&gt; node. This includes the leading &quot;&lt;code&gt;$&lt;/code&gt;&quot; character. Characters beyond 255 will be escaped.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 노드가 나타내는 리터럴 문자열을 리턴 합니다. 여기에는 선행 &quot; &lt;code&gt;$&lt;/code&gt; &quot;문자가 포함됩니다. 255자를 초과하는 문자는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="0d81c5c279a5eda522a6b5badccf42435ca7d3d2" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;char&lt;/code&gt; node. This includes the leading &quot;&lt;code&gt;$&lt;/code&gt;&quot; character. Depending on the encoding a character beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 노드가 나타내는 리터럴 문자열을 리턴 합니다. 여기에는 선행 &quot; &lt;code&gt;$&lt;/code&gt; &quot;문자가 포함됩니다. 인코딩에 따라 255 이상의 문자는 이스케이프 되거나 ( &lt;code&gt;latin1&lt;/code&gt; ) 그대로 ( &lt;code&gt;utf8&lt;/code&gt; ) 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="1b891959bf59e8ca2fffbccba3879fbf60620309" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;string&lt;/code&gt; node. This includes surrounding double-quote characters. Characters beyond 255 will be escaped.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 노드가 나타내는 리터럴 문자열을 리턴 합니다. 여기에는 큰 따옴표 문자가 포함됩니다. 255자를 초과하는 문자는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="94708d1b48e867433799573e91a46ad5786537b3" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;string&lt;/code&gt; node. This includes surrounding double-quote characters. Depending on the encoding characters beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 노드가 나타내는 리터럴 문자열을 리턴 합니다. 여기에는 큰 따옴표 문자가 포함됩니다. 인코딩에 따라 255를 초과하는 문자는 이스케이프 되거나 ( &lt;code&gt;latin1&lt;/code&gt; ) 그대로 ( &lt;code&gt;utf8&lt;/code&gt; ) 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="db6627ca004e84117c4e7f3e06084d9eaba4c8df" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;atom&lt;/code&gt; node. This includes surrounding single-quote characters if necessary. Characters beyond 255 will be escaped.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; 노드가 나타내는 리터럴 문자열을 반환 합니다. 필요한 경우 주변 인용 부호 문자가 포함됩니다. 255자를 초과하는 문자는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="7f635664ad233d5bd0b244b79390f17bc0205523" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;atom&lt;/code&gt; node. This includes surrounding single-quote characters if necessary. Depending on the encoding a character beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; 노드가 나타내는 리터럴 문자열을 반환 합니다. 필요한 경우 주변 인용 부호 문자가 포함됩니다. 인코딩에 따라 255 이상의 문자는 이스케이프 되거나 ( &lt;code&gt;latin1&lt;/code&gt; ) 그대로 ( &lt;code&gt;utf8&lt;/code&gt; ) 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="d4a3e54d55cc95e70b5d4f984092f23abd31bdcc" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;operator&lt;/code&gt; node. This is simply the operator name as a string.</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; 노드가 나타내는 리터럴 문자열을 리턴 합니다. 이것은 단순히 연산자 이름 인 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="830a006f9be994d18bb6c9e8f1a9b0131f8cfd99" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an abstract atom. This always includes surrounding single-quote characters.</source>
          <target state="translated">추상 원자가 나타내는 리터럴 문자열을 반환합니다. 여기에는 항상 작은 따옴표가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="569f4a4d8ff2c4c4a187179e9b3e67480e0e3fb3" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an abstract character. This includes a leading &lt;code&gt;$&lt;/code&gt; character. Currently, all characters that are not in the set of ISO 8859-1 (Latin-1) &quot;printing&quot; characters will be escaped.</source>
          <target state="translated">추상 문자가 나타내는 리터럴 문자열을 반환합니다. 여기에는 선행 &lt;code&gt;$&lt;/code&gt; 문자가 포함됩니다 . 현재, ISO 8859-1 (Latin-1) &quot;인쇄&quot;문자 세트에없는 모든 문자는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="2109d1d183a4107d9ed52140351a1042cdaa3597" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an abstract string. This includes surrounding double-quote characters &lt;code&gt;&quot;...&quot;&lt;/code&gt;. Currently, characters that are not in the set of ISO 8859-1 (Latin-1) &quot;printing&quot; characters will be escaped, except for spaces.</source>
          <target state="translated">추상 문자열이 나타내는 리터럴 문자열을 반환합니다. 여기에는 큰 따옴표 &lt;code&gt;&quot;...&quot;&lt;/code&gt; 가 포함 됩니다. 현재 ISO 8859-1 (Latin-1) &quot;인쇄&quot;문자 세트에없는 문자는 공백을 제외하고 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="aab851e7716b8e5c1393bffb59ecd8b060532944" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number for a socket.</source>
          <target state="translated">소켓의 로컬 주소와 포트 번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a9868e26c5ed6e859c3893f7f5acd607cb999fb0" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number of socket &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">소켓 &lt;code&gt;Socket&lt;/code&gt; 의 로컬 주소와 포트 번호를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="459cd845dce8772e43fb07e4ffd28edd58d70ea2" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number of socket &lt;code&gt;SslSocket&lt;/code&gt;.</source>
          <target state="translated">소켓 &lt;code&gt;SslSocket&lt;/code&gt; 의 로컬 주소와 포트 번호를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="207897434cf6d424c60c9a2592f2ed623b554212" translate="yes" xml:space="preserve">
          <source>Returns the local hostname. Never fails.</source>
          <target state="translated">로컬 호스트 이름을 반환합니다. 절대 실패하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="416a2be1303d6295c22b6af59e1d4507c16d5877" translate="yes" xml:space="preserve">
          <source>Returns the local port number for a socket.</source>
          <target state="translated">소켓의 로컬 포트 ​​번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9147fe3c3e9abb708f6cae387be447f39cede517" translate="yes" xml:space="preserve">
          <source>Returns the local time reported by the underlying operating system.</source>
          <target state="translated">기본 운영 체제에서보고 한 현지 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f2ac7c23a785efb776256267402553ed72acdc79" translate="yes" xml:space="preserve">
          <source>Returns the location of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; 의 주석 모음 위치를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="15450e7a956656f7c1d1dced67e9ebfc4fe434db" translate="yes" xml:space="preserve">
          <source>Returns the location of the annotations Anno.</source>
          <target state="translated">주석 Anno의 위치를 ​​반환합니다.</target>
        </trans-unit>
        <trans-unit id="3be606322d70c4081148f07bc2dccb0e20248da7" translate="yes" xml:space="preserve">
          <source>Returns the log name given the pid of a disk log process on the current node, or &lt;code&gt;undefined&lt;/code&gt; if the specified pid is not a disk log process.</source>
          <target state="translated">현재 노드에서 디스크 로그 프로세스의 pid가 제공 되거나 지정된 pid가 디스크 로그 프로세스가 아닌 경우 &lt;code&gt;undefined&lt;/code&gt; 로그 이름을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="cf3d88c2d35e4a8dfc61488af3d1ed6d19769610" translate="yes" xml:space="preserve">
          <source>Returns the logged system events in the debug structure, that is the last argument to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; 의 마지막 인수 인 디버그 구조에 로깅 된 시스템 이벤트를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="73f5aac53c46c70833281e58ca24443d9c95874d" translate="yes" xml:space="preserve">
          <source>Returns the low limit of an &lt;code&gt;integer_range_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer_range_type&lt;/code&gt; 노드의 하한을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f2bd7056d9d366befcaba6d0aeddf8edab781e9e" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the current node.</source>
          <target state="translated">현재 노드의 매직 쿠키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b5f5f3d5339b0ae05f73b408853fe635dfc27a09" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the local node if the node is alive, otherwise the atom &lt;code&gt;nocookie&lt;/code&gt;.</source>
          <target state="translated">노드가 &lt;code&gt;nocookie&lt;/code&gt; 경우 로컬 노드의 매직 쿠키를 리턴하고, 그렇지 않으면 atom nocookie를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="af40012a87462ebdc7d7eb5c438abdea2903d250" translate="yes" xml:space="preserve">
          <source>Returns the match specification for this event, if it has one, or &lt;code&gt;true&lt;/code&gt; if no match specification has been set.</source>
          <target state="translated">이 이벤트의 일치 스펙이있는 경우 일치 스펙을 리턴하거나 일치 스펙이 설정되지 않은 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1fc547455f6862114face1b2da4682cb415ae754" translate="yes" xml:space="preserve">
          <source>Returns the match specification for this function, if it has one. If the function is locally or globally traced but has no match specification defined, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">이 함수에 대한 일치 스펙 (있는 경우)을 리턴합니다. 함수가 로컬 또는 전체적으로 추적되지만 일치 스펙이 정의되지 않은 경우 리턴 값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4441bfe54590e77458cc37627580797883203ac1" translate="yes" xml:space="preserve">
          <source>Returns the matching values or configuration elements, given a configuration variable key or its associated name (if one has been specified with &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;require&lt;/code&gt; statement).</source>
          <target state="translated">구성 변수 키 또는 연관된 이름 ( &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;require&lt;/code&gt; 문 으로 지정된 경우)이 주어지면 일치하는 값 또는 구성 요소를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="d23f0c88894f290d5b9b102e091670bac8391f45" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of atoms allowed. This limit can be increased at startup by passing command-line flag &lt;code&gt;+t&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">허용되는 최대 원자 수를 반환합니다. 명령 행 플래그 &lt;code&gt;+t&lt;/code&gt; 를 &lt;code&gt;erl(1)&lt;/code&gt; 에 전달하여 시작 시이 한계를 늘릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d6fb52579f304fb3c577df6aa4ae0e4eb5be1887" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of simultaneously existing ports at the local node as an integer. This limit can be configured at startup by using command-line flag &lt;code&gt;&lt;a href=&quot;erl#+Q&quot;&gt;+Q&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">로컬 노드에서 동시에 존재하는 최대 포트 수를 정수로 리턴합니다. 이 한계는 시작시 &lt;code&gt;erl(1)&lt;/code&gt; 에서 명령 행 플래그 &lt;code&gt;&lt;a href=&quot;erl#+Q&quot;&gt;+Q&lt;/a&gt;&lt;/code&gt; 를 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b700a394a5c84844c80ba3f172e4544dca86353" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of simultaneously existing processes at the local node. The value is given as an integer. This limit can be configured at startup by using command-line flag &lt;code&gt;&lt;a href=&quot;erl#+P&quot;&gt;+P&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">로컬 노드에서 동시에 존재하는 최대 프로세스 수를 리턴합니다. 값은 정수로 제공됩니다. 이 한계는 시작시 &lt;code&gt;erl(1)&lt;/code&gt; 명령 행 플래그 &lt;code&gt;&lt;a href=&quot;erl#+P&quot;&gt;+P&lt;/a&gt;&lt;/code&gt; 를 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4a67f052574e591f5879ac32a955c52623b1d4f" translate="yes" xml:space="preserve">
          <source>Returns the memory size in bytes allocated for memory of type &lt;code&gt;Type&lt;/code&gt;. The argument can also be specified as a list of &lt;code&gt;memory_type()&lt;/code&gt; atoms, in which case a corresponding list of &lt;code&gt;{memory_type(), Size :: integer &amp;gt;= 0}&lt;/code&gt; tuples is returned.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 유형의 메모리에 할당 된 메모리 크기 (바이트)를 리턴합니다 . 인수는 &lt;code&gt;memory_type()&lt;/code&gt; 원자 의 목록으로 지정할 수도 있습니다 .이 경우 &lt;code&gt;{memory_type(), Size :: integer &amp;gt;= 0}&lt;/code&gt; 튜플 의 해당 목록 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a00b66debcb037df17cfd893ceba7c9264fed643" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ordset1&lt;/code&gt; 과 &lt;code&gt;Ordset2&lt;/code&gt; 의 합쳐진 (union) 세트를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="43723d218ab77b13f41262ad39332981f13bced9" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">병합 된 (유니온) &lt;code&gt;Set1&lt;/code&gt; 및 &lt;code&gt;Set2&lt;/code&gt; 집합을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="82034e6778b6dcba85c02ae63e0f4ed694f64129" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of the list of sets.</source>
          <target state="translated">집합 목록의 병합 된 (조합) 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="815b9a219dc48a930a199069152d8a275ab24b40" translate="yes" xml:space="preserve">
          <source>Returns the meta-trace match specification for this function, if it has one. If the function is meta-traced but has no match specification defined, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">이 함수에 대한 메타 추적 일치 스펙 (있는 경우)을 리턴합니다. 함수가 메타 추적이지만 정의 된 일치 스펙이없는 경우 리턴 값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c2f5f6a2a6b6469f072401d9cbc9381506bd595a" translate="yes" xml:space="preserve">
          <source>Returns the meta-trace tracer process, port, or trace module for this function, if it has one. If the function is not meta-traced, the returned value is &lt;code&gt;false&lt;/code&gt;. If the function is meta-traced but has once detected that the tracer process is invalid, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">이 함수의 메타 추적 추적 프로그램 프로세스, 포트 또는 추적 모듈 (있는 경우)을 리턴합니다. 함수가 메타 추적되지 않으면 리턴 값은 &lt;code&gt;false&lt;/code&gt; 입니다. 함수가 메타 추적되지만 추적 프로그램 프로세스가 유효하지 않다는 것을 한 번 감지 한 경우 리턴 값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="34e8ff19ef4285929e3a1c678ed923458705440f" translate="yes" xml:space="preserve">
          <source>Returns the modified timing-level (an integer) if modified timing is enabled, otherwise &lt;code&gt;undefined&lt;/code&gt;. For more information about modified timing, see command-line flag &lt;code&gt;+T&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;</source>
          <target state="translated">수정 된 타이밍이 활성화 된 경우 수정 된 타이밍 수준 (정수)을 반환하고, 그렇지 않으면 &lt;code&gt;undefined&lt;/code&gt; 를 반환 합니다. 수정 된 타이밍에 대한 자세한 내용은 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 플래그 &lt;code&gt;+T&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="26dcf724b8d44245fe738cbd6dd4f75405d78c75" translate="yes" xml:space="preserve">
          <source>Returns the module name and (if present) list of function names declared by an import attribute. The returned value is an atom &lt;code&gt;Module&lt;/code&gt; or a pair &lt;code&gt;{Module, Names}&lt;/code&gt;, where &lt;code&gt;Names&lt;/code&gt; is a list of function names declared as imported from the module named by &lt;code&gt;Module&lt;/code&gt;. We do not guarantee that each name occurs at most once in &lt;code&gt;Names&lt;/code&gt;. The order of listing is not defined.</source>
          <target state="translated">가져 오기 속성으로 선언 된 모듈 이름 및 함수 이름 목록 (있는 경우)을 리턴합니다. 리턴 된 값은 atom &lt;code&gt;Module&lt;/code&gt; 또는 쌍 &lt;code&gt;{Module, Names}&lt;/code&gt; . 여기서 &lt;code&gt;Names&lt;/code&gt; 는 &lt;code&gt;Module&lt;/code&gt; 에서 명명 한 모듈 에서 가져온 것으로 선언 된 함수 이름 목록입니다 . 우리는 각각의 이름이 한번 대부분에서 발생하는 것을 보장하지 않습니다 &lt;code&gt;Names&lt;/code&gt; . 리스팅 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e8205eb1a6ab8179a1e53b60fe711b222979681e" translate="yes" xml:space="preserve">
          <source>Returns the module name and possible parameters declared by a module attribute. If the attribute is a plain module declaration such as &lt;code&gt;-module(name)&lt;/code&gt;, the result is the module name. If the attribute is a parameterized module declaration, the result is a tuple containing the module name and a list of the parameter variable names.</source>
          <target state="translated">모듈 이름과 모듈 속성으로 선언 된 가능한 매개 변수를 리턴합니다. 속성이 &lt;code&gt;-module(name)&lt;/code&gt; 과 같은 일반 모듈 선언 인 경우 결과는 모듈 이름입니다. 속성이 매개 변수화 된 모듈 선언 인 경우 결과는 모듈 이름 및 매개 변수 변수 이름 목록을 포함하는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="1625033fb1bdc39aa810e69379902f0ba1e637c7" translate="yes" xml:space="preserve">
          <source>Returns the module subtree of an abstract inter-module call.</source>
          <target state="translated">추상 모듈 간 호출의 모듈 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8aed4639b687b004ed924728735d1b26c94586ff" translate="yes" xml:space="preserve">
          <source>Returns the module version or versions. A version is defined by module attribute &lt;code&gt;-vsn(Vsn)&lt;/code&gt;. If this attribute is not specified, the version defaults to the checksum of the module. Notice that if version &lt;code&gt;Vsn&lt;/code&gt; is not a list, it is made into one, that is &lt;code&gt;{ok,{Module,[Vsn]}}&lt;/code&gt; is returned. If there are many &lt;code&gt;-vsn&lt;/code&gt; module attributes, the result is the concatenated list of versions.</source>
          <target state="translated">모듈 버전을 반환합니다. 버전은 모듈 속성 &lt;code&gt;-vsn(Vsn)&lt;/code&gt; 의해 정의됩니다 . 이 속성을 지정하지 않으면 버전의 기본값은 모듈의 체크섬입니다. 버전 &lt;code&gt;Vsn&lt;/code&gt; 이리 스트가 아닌 경우리스트로 만들어집니다. 즉 &lt;code&gt;{ok,{Module,[Vsn]}}&lt;/code&gt; 이 리턴됩니다. 많은 &lt;code&gt;-vsn&lt;/code&gt; 모듈 속성이있는 경우 결과는 연결된 버전 목록입니다.</target>
        </trans-unit>
        <trans-unit id="eee87aeb430afe57bdaf60f72df82adf25882dc2" translate="yes" xml:space="preserve">
          <source>Returns the most relevant information about the connection, ssl options that are undefined will be filtered out. Note that values that affect the security of the connection will only be returned if explicitly requested by connection_information/2.</source>
          <target state="translated">연결에 대한 가장 관련성 높은 정보를 반환합니다. 정의되지 않은 ssl 옵션은 필터링됩니다. 연결 보안에 영향을주는 값은 connection_information / 2에서 명시 적으로 요청한 경우에만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0c6ee76bdc3c2fc22ebc00215ab57a8039fcf4e1" translate="yes" xml:space="preserve">
          <source>Returns the name and arity of a function definition. The result is a pair &lt;code&gt;{Name, A}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a function definition &quot;&lt;code&gt;Name(&amp;lt;em&amp;gt;P_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;P_A&amp;lt;/em&amp;gt;) -&amp;gt; ...&lt;/code&gt;&quot;.</source>
          <target state="translated">함수 정의의 이름과 속성을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 가 함수 정의 &quot; &lt;code&gt;Name(&amp;lt;em&amp;gt;P_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;P_A&amp;lt;/em&amp;gt;) -&amp;gt; ...&lt;/code&gt; &quot;을 나타내는 경우 결과는 &lt;code&gt;{Name, A}&lt;/code&gt; 쌍 입니다.</target>
        </trans-unit>
        <trans-unit id="007ac5d499e30c87a2d58f2fa3dfeea0e04901d0" translate="yes" xml:space="preserve">
          <source>Returns the name and the list of fields of a record declaration attribute. The result is a pair &lt;code&gt;{Name, Fields}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-record(Name, {...}).&lt;/code&gt;&quot;, where &lt;code&gt;Fields&lt;/code&gt; is a list of pairs &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; for each field &quot;&lt;code&gt;Label&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, or &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot; in the declaration, listed in left-to-right order. If the field has no default-value declaration, the value for &lt;code&gt;Default&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. If the field has no type declaration, the value for &lt;code&gt;Type&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. We do not guarantee that each label occurs at most once in the list.</source>
          <target state="translated">레코드 선언 속성의 이름과 필드 목록을 반환합니다. 결과는 한 쌍의 &lt;code&gt;{Name, Fields}&lt;/code&gt; , 경우에 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;-record(Name, {...}).&lt;/code&gt; &quot;, &lt;code&gt;Fields&lt;/code&gt; 쌍의 목록입니다 &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; 각 필드 &quot;에 대한 &lt;code&gt;Label&lt;/code&gt; &quot;,&quot; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;,&quot; &lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;또는&quot; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;선언에서 왼쪽에서 오른쪽 순서로 나열됩니다. 필드에 기본값 선언이없는 경우 &lt;code&gt;Default&lt;/code&gt; 값 은 atom &lt;code&gt;none&lt;/code&gt; 이 됩니다.분야는 유형 선언, 값이없는 경우 &lt;code&gt;Type&lt;/code&gt; 원자는 &lt;code&gt;none&lt;/code&gt; 입니다. 우리는 각 레이블이 목록에서 최대 한 번 발생한다고 보장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="db29b3ea3ed9d5840c73389f91f74f7b1dc1efde" translate="yes" xml:space="preserve">
          <source>Returns the name and value of a &quot;wild&quot; attribute. The result is the pair &lt;code&gt;{Name, Value}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name(Value)&lt;/code&gt;&quot;.</source>
          <target state="translated">&quot;wild&quot;속성의 이름과 값을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;-Name(Value)&lt;/code&gt; &quot;를 나타내는 경우 결과는 &lt;code&gt;{Name, Value}&lt;/code&gt; 쌍 입니다.</target>
        </trans-unit>
        <trans-unit id="4cf6bef09de734ae6a52a3c5252fdfc894cdf6db" translate="yes" xml:space="preserve">
          <source>Returns the name of a &lt;code&gt;variable&lt;/code&gt; node as a string.</source>
          <target state="translated">&lt;code&gt;variable&lt;/code&gt; 노드 의 이름을 문자열로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e6381a5b40dc5ae4251941dd888e7b01dfd282b2" translate="yes" xml:space="preserve">
          <source>Returns the name of a &lt;code&gt;variable&lt;/code&gt; node as an atom.</source>
          <target state="translated">&lt;code&gt;variable&lt;/code&gt; 노드 의 이름을 원자로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ed115c535b0ef6ce3723030585e03ad7536f6174" translate="yes" xml:space="preserve">
          <source>Returns the name of a called function. The result is a representation of the name of the applied function &lt;code&gt;F/A&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents a function application &quot;&lt;code&gt;&amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;X_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;X_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;. If the function is not explicitly named (i.e., &lt;code&gt;F&lt;/code&gt; is given by some expression), only the arity &lt;code&gt;A&lt;/code&gt; is returned.</source>
          <target state="translated">호출 된 함수의 이름을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 가 함수 애플리케이션 &quot; &lt;code&gt;&amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;X_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;X_A&amp;lt;/em&amp;gt;)&lt;/code&gt; 나타내는 경우 결과는 적용된 함수 &lt;code&gt;F/A&lt;/code&gt; 의 이름을 나타냅니다. / em&amp;gt;) &quot;. 함수의 이름이 명시 적으로 지정되지 않은 경우 (즉, &lt;code&gt;F&lt;/code&gt; 는 일부 표현식으로 제공됨) arity &lt;code&gt;A&lt;/code&gt; 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9148d7ebab4a1613559851f9c2444070c5fe576e" translate="yes" xml:space="preserve">
          <source>Returns the name of a used type. The result is a representation of the name of the used pre-defined or local type &lt;code&gt;N/A&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents a local (user) type application &quot;&lt;code&gt;&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;, or a representation of the name of the used remote type &lt;code&gt;M:N/A&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a remote user type application &quot;&lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;.</source>
          <target state="translated">사용 된 유형의 이름을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 가 로컬 (사용자) 유형 애플리케이션 &quot; &lt;code&gt;&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt; 나타내는 경우 사용 된 사전 정의 또는 로컬 유형 &lt;code&gt;N/A&lt;/code&gt; 의 이름을 표시합니다 . ..., &amp;lt;em&amp;gt; T_A &amp;lt;/ em&amp;gt;) &quot;또는 &lt;code&gt;Node&lt;/code&gt; 가 원격 사용자 유형 응용 프로그램&quot; &lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt; 나타내는 경우 사용 된 원격 유형 &lt;code&gt;M:N/A&lt;/code&gt; 의 이름 표현 em&amp;gt; N &amp;lt;/ em&amp;gt; (&amp;lt;em&amp;gt; T_1 &amp;lt;/ em&amp;gt;, ..., &amp;lt;em&amp;gt; T_A &amp;lt;/ em&amp;gt;) &quot;.</target>
        </trans-unit>
        <trans-unit id="d22a26e82728827ed03c2b39bdc709badd4430f6" translate="yes" xml:space="preserve">
          <source>Returns the name of an &lt;code&gt;operator&lt;/code&gt; node. Note that the name is returned as an atom.</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; 노드 의 이름을 반환합니다 . 이름은 원자로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2df87ddbac814446554a7d01b4795c20781b2ed4" translate="yes" xml:space="preserve">
          <source>Returns the name of an abstract variable.</source>
          <target state="translated">추상 변수의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5ff64514f16ec6c034ae6fb62cf75e8cf81a7665" translate="yes" xml:space="preserve">
          <source>Returns the name of an implicit fun expression &quot;&lt;code&gt;fun &amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;. The result is a representation of the function name &lt;code&gt;F&lt;/code&gt;. (Cf. &lt;code&gt;analyze_function_name/1&lt;/code&gt;.)</source>
          <target state="translated">암시 적 재미 표현 &quot; &lt;code&gt;fun &amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;&lt;/code&gt; &quot; 의 이름을 반환합니다 . 결과는 함수 이름 &lt;code&gt;F&lt;/code&gt; 의 표현입니다 . ( &lt;code&gt;analyze_function_name/1&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="d864b4aeaa7386e89e67b9ae63cd819d9f41a6d4" translate="yes" xml:space="preserve">
          <source>Returns the name of the application to which the process &lt;code&gt;Pid&lt;/code&gt; or the module &lt;code&gt;Module&lt;/code&gt; belongs. Providing no argument is the same as calling &lt;code&gt;get_application(self())&lt;/code&gt;.</source>
          <target state="translated">프로세스 &lt;code&gt;Pid&lt;/code&gt; 또는 모듈 &lt;code&gt;Module&lt;/code&gt; 이 속한 응용 프로그램의 이름을 반환합니다 . 인수를 제공하지 않는 것은 &lt;code&gt;get_application(self())&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c7ed02c4f1263972459ef8e555cafb04a5cb3b1d" translate="yes" xml:space="preserve">
          <source>Returns the name of the current host.</source>
          <target state="translated">현재 호스트의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d62b642c52c728d5bcbfefe5f52c72ec31e0471" translate="yes" xml:space="preserve">
          <source>Returns the name of the current node. Allowed in guards.</source>
          <target state="translated">현재 노드의 이름을 반환합니다. 경비원에서 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="8510c7c82ca88f84b7575435a166132cfbf338a7" translate="yes" xml:space="preserve">
          <source>Returns the name of the escript that is executed. If the function is invoked outside the context of an escript, the behavior is undefined.</source>
          <target state="translated">실행되는 escript의 이름을 리턴합니다. 함수가 escript 컨텍스트 외부에서 호출되면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e96e3414a1d1fc235f3ea83919b8dc8eb1d909d" translate="yes" xml:space="preserve">
          <source>Returns the name of the local host. If Erlang was started with command-line flag &lt;code&gt;-name&lt;/code&gt;, &lt;code&gt;Name&lt;/code&gt; is the fully qualified name.</source>
          <target state="translated">로컬 호스트의 이름을 반환합니다. 얼랑 명령 줄 플래그로 시작 된 경우 &lt;code&gt;-name&lt;/code&gt; , &lt;code&gt;Name&lt;/code&gt; 정규화 된 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fcafb7c7fbc116067a03b38cd1217a58db1c7164" translate="yes" xml:space="preserve">
          <source>Returns the name of the local node. If the node is not alive, &lt;code&gt;nonode@nohost&lt;/code&gt; is returned instead.</source>
          <target state="translated">로컬 노드의 이름을 반환합니다. 노드가 &lt;code&gt;nonode@nohost&lt;/code&gt; 가 아닌 경우 nonode @ nohost 가 대신 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="30fc380ea808fa5540bd8e951118112f9a14a296" translate="yes" xml:space="preserve">
          <source>Returns the name of the log file &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;{error, no_log_file}&lt;/code&gt; if logging to file is not enabled.</source>
          <target state="translated">로그 파일 &lt;code&gt;Filename&lt;/code&gt; 또는 파일에 로깅이 사용 가능하지 않은 경우 &lt;code&gt;{error, no_log_file}&lt;/code&gt; 의 이름을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0429924e574032bfd549705fe083c8cf1e3e8649" translate="yes" xml:space="preserve">
          <source>Returns the name of the target that the specified connection belongs to.</source>
          <target state="translated">지정된 연결이 속한 대상의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="756be78b2bbf2ca59e105d611595048a3b7d839a" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;constraint&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;constraint&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="76e04edf05ecf5a831fbb2d6cd173266764050b7" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;function&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4e36136e160d0bafbfea7b1da9ae279b456db37c" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;macro&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="900862649122a3fce897e03938145bae5fea2a14" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_field_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_assoc&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e6145ffbc27bfd93b80822f15197a8ad0c91d15f" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_field_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_exact&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f77498fc989ea746382c2a0ca52346c58677e618" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_type_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_assoc&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="835380ba3e2354bc2f27660f60c502c0253db616" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_type_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_exact&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2d3d12a21c3442ab392d04173e9f7f33171ceb03" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;named_fun_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;named_fun_expr&lt;/code&gt; 노드 의 이름 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="939901a31fe919b4a471f4f2c4baff1efb974c5c" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_field&lt;/code&gt; 노드 의 이름 하위 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6b38accc8373842fde8d529c0026aaae246c6a8b" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a52bf5aa1c91ec8283732decefec61991879b4e6" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_type_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type_field&lt;/code&gt; 노드 의 이름 하위 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f72ea48a2fdac3d8bc5650288a263570fc636215" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;annotated_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;annotated_type&lt;/code&gt; 노드 의 이름 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="96db8060ebdf0b56f7be23a01dabf76c6f3eef30" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;attribute&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e947c02a1a2057175521e6dc318ab909ac5926d" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;implicit_fun&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;implicit_fun&lt;/code&gt; 노드 의 이름 하위 트리를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2fbb3162a093a1961978dc1251e320dcae52879a" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an abstract inter-module call.</source>
          <target state="translated">추상 모듈 간 호출의 이름 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="06b61e57252078c14ba9c192651bb544d8440169" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an abstract module definition.</source>
          <target state="translated">추상 모듈 정의의 이름 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5bb25437155136c8a265b1160b2de9d5359a6173" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an abstract primitive operation call.</source>
          <target state="translated">추상 프리미티브 연산 호출의 이름 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36b7655180fcc8ac1bc7f1f07959643f308992b5" translate="yes" xml:space="preserve">
          <source>Returns the names of all group nodes, regardless of their current status.</source>
          <target state="translated">현재 상태에 관계없이 모든 그룹 노드의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4517f549ce5eaa64742e0071f4faa17896e3b860" translate="yes" xml:space="preserve">
          <source>Returns the names of the disk logs accessible on the current node. The first list contains local disk logs and the second list contains distributed disk logs.</source>
          <target state="translated">현재 노드에서 액세스 할 수있는 디스크 로그 이름을 반환합니다. 첫 번째 목록에는 로컬 디스크 로그가 포함되고 두 번째 목록에는 분산 디스크 로그가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="66d609ac0ad975e923b6e0e753ec884c92a29456" translate="yes" xml:space="preserve">
          <source>Returns the names of variables occurring in a syntax tree, The result is a set of variable names represented by atoms. Macro names are not included.</source>
          <target state="translated">구문 트리에서 발생하는 변수 이름을 리턴합니다. 결과는 원자로 표시되는 변수 이름 세트입니다. 매크로 이름은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ef6e7858a7f9f0a1946d1d2e810bbafb986782b" translate="yes" xml:space="preserve">
          <source>Returns the next Erlang form from the opened Erlang source file. Tuple &lt;code&gt;{eof, Line}&lt;/code&gt; is returned at the end of the file. The first form corresponds to an implicit attribute &lt;code&gt;-file(File,1).&lt;/code&gt;, where &lt;code&gt;File&lt;/code&gt; is the file name.</source>
          <target state="translated">열린 Erlang 소스 파일에서 다음 Erlang 양식을 리턴합니다. 튜플 &lt;code&gt;{eof, Line}&lt;/code&gt; 은 파일 끝에서 반환됩니다. 첫 번째 양식은 내재적 속성 &lt;code&gt;-file(File,1).&lt;/code&gt; 여기서 &lt;code&gt;File&lt;/code&gt; 은 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f39c3c02ac7fc307b241a77b655c2418ea9279ce" translate="yes" xml:space="preserve">
          <source>Returns the next key &lt;code&gt;Key2&lt;/code&gt;, following key &lt;code&gt;Key1&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;. For table type &lt;code&gt;ordered_set&lt;/code&gt;, the next key in Erlang term order is returned. For other table types, the next key according to the internal order of the table is returned. If no next key exists, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 의 키 &lt;code&gt;Key1&lt;/code&gt; 다음에 다음 키 &lt;code&gt;Key2&lt;/code&gt; 를 리턴합니다 . &lt;code&gt;ordered_set&lt;/code&gt; 테이블 유형의 경우 Erlang 용어 순서의 다음 키가 리턴됩니다. 다른 테이블 유형의 경우 테이블의 내부 순서에 따라 다음 키가 리턴됩니다. 다음 키가 없으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cf3072514589e15b52d21f7b73a490cfc41586aa" translate="yes" xml:space="preserve">
          <source>Returns the next key-value association in &lt;code&gt;Iterator&lt;/code&gt; and a new iterator for the remaining associations in the iterator.</source>
          <target state="translated">에서 다음 키 - 값 협회 반환 &lt;code&gt;Iterator&lt;/code&gt; 와 반복자에 남아있는 협회를위한 새로운 반복자를.</target>
        </trans-unit>
        <trans-unit id="e8ac983f9489351b9b3974c653fe958f0feac7d7" translate="yes" xml:space="preserve">
          <source>Returns the next row of the result set relative the current cursor position and positions the cursor at this row. If the cursor is positioned at the last row of the result set when this function is called the returned value will be &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; e.i. the list of row values is empty indicating that there is no more data to fetch.</source>
          <target state="translated">현재 커서 위치를 기준으로 결과 집합의 다음 행을 반환하고 커서를이 행에 놓습니다. 이 함수가 호출 될 때 커서가 결과 세트의 마지막 행에 위치한 경우 리턴 된 값은 &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; ei 행 값 목록이 비어있어 더 이상 가져올 데이터가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2a3cc80198ccf8a2422cb88e06be84c0d2ec7f1e" translate="yes" xml:space="preserve">
          <source>Returns the node where &lt;code&gt;Arg&lt;/code&gt; originates. &lt;code&gt;Arg&lt;/code&gt; can be a process identifier, a reference, or a port. If the local node is not alive, &lt;code&gt;nonode@nohost&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Arg&lt;/code&gt; 가 시작된 노드를 반환합니다 . &lt;code&gt;Arg&lt;/code&gt; 는 프로세스 식별자, 참조 또는 포트 일 수 있습니다. 로컬 노드가 &lt;code&gt;nonode@nohost&lt;/code&gt; 가 아닌 경우 nonode @ nohost 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7c4ff193cb26f222d298407efeb61e630c79c97f" translate="yes" xml:space="preserve">
          <source>Returns the node where &lt;code&gt;Arg&lt;/code&gt;, a pid, reference, or port, is located.</source>
          <target state="translated">pid, 참조 또는 포트 인 &lt;code&gt;Arg&lt;/code&gt; 가 있는 노드를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="cdb939066b84f045a8eb1bbcb3b1492ceaddc96d" translate="yes" xml:space="preserve">
          <source>Returns the node with the expected lowest future load.</source>
          <target state="translated">가장 낮은 미래로드가 예상되는 노드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="20e0e84ddb30606ecca97ce2dbf6dbaf1fa1c9f6" translate="yes" xml:space="preserve">
          <source>Returns the number of ETS tables currently existing at the local node.</source>
          <target state="translated">로컬 노드에 현재 존재하는 ETS 테이블 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cd9adff4dac1e4dbde3c24ac92ca38ebe99be758" translate="yes" xml:space="preserve">
          <source>Returns the number of UNIX processes running on this machine. This is a crude way of measuring the system load, but it may be of interest in some cases.</source>
          <target state="translated">이 머신에서 실행중인 UNIX 프로세스 수를 리턴합니다. 이는 시스템로드를 측정하는 조잡한 방법이지만 경우에 따라 관심이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="faa77efe8a0c1950ca900e43b0b99b95cd560d8f" translate="yes" xml:space="preserve">
          <source>Returns the number of active sockets.</source>
          <target state="translated">활성 소켓 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c504302b7487a29ac3ee011e13b274c12f99aa24" translate="yes" xml:space="preserve">
          <source>Returns the number of argument subtrees of an abstract function application.</source>
          <target state="translated">추상 함수 응용 프로그램의 인수 하위 트리 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="49f3db63478719d2a3d4423ddb6c8ecd09de81bd" translate="yes" xml:space="preserve">
          <source>Returns the number of argument subtrees of an abstract inter-module call.</source>
          <target state="translated">추상 모듈 간 호출의 인수 하위 트리 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d65664376b3a5474c1cef82f92aab9a963a6412d" translate="yes" xml:space="preserve">
          <source>Returns the number of argument subtrees of an abstract primitive operation call.</source>
          <target state="translated">추상 기본 연산 호출의 인수 하위 트리 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2da0bb8e43dd1cb7ce1b45513e68e19d15ed3f92" translate="yes" xml:space="preserve">
          <source>Returns the number of async threads in the async thread pool used for asynchronous driver calls (&lt;code&gt; erl_driver:driver_async()&lt;/code&gt;). The value is given as an integer.</source>
          <target state="translated">비동기 드라이버 호출 ( &lt;code&gt; erl_driver:driver_async()&lt;/code&gt; )에 사용되는 비동기 스레드 풀의 비동기 스레드 수를 반환합니다 . 값은 정수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="68195efba97e00bb80a72e998c3ce9768deb6dcd" translate="yes" xml:space="preserve">
          <source>Returns the number of async threads in the async thread pool used for asynchronous driver calls (&lt;code&gt;erl_driver:driver_async()&lt;/code&gt;). The value is given as an integer.</source>
          <target state="translated">비동기 드라이버 호출에 사용되는 비동기 스레드 풀의 비동기 스레드 수 ( &lt;code&gt;erl_driver:driver_async()&lt;/code&gt; )를 리턴 합니다. 값은 정수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="de16206d78e81676063deda742f4bdf29ddc346f" translate="yes" xml:space="preserve">
          <source>Returns the number of atoms currently existing at the local node. The value is given as an integer.</source>
          <target state="translated">로컬 노드에 현재 존재하는 원자 수를 반환합니다. 값은 정수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="289e5e258e74d38d0c7744ab02085a55d74045f9" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes currently in the driver queue.</source>
          <target state="translated">현재 드라이버 큐에있는 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9685234297aa62c4ec6b93c2f5203975bb333255" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes remaining in the queue on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">성공시 큐에 남아있는 바이트 수를 리턴합니다 . 그렇지 않으면 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e1989ed9742c3110fc080b47dde3c3f316aead1d" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes written (including terminating &lt;code&gt;NULL&lt;/code&gt; character) or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an atom with maximum length of &lt;code&gt;size-1&lt;/code&gt;.</source>
          <target state="translated">쓴 바이트 수 ( &lt;code&gt;NULL&lt;/code&gt; 문자 종료 포함)를 반환 하거나 &lt;code&gt;term&lt;/code&gt; 이 최대 길이가 &lt;code&gt;size-1&lt;/code&gt; 인 아톰이 아닌 경우 &lt;code&gt;0&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="28e2238e73b47b77e05ca2933c0cce9ea32e5cd7" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 의 문자 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ab7c66f6c0ae44a560915366f99ad2d69ccd8be7" translate="yes" xml:space="preserve">
          <source>Returns the number of characters that have been scanned up to that point, including whitespace characters.</source>
          <target state="translated">공백 문자를 포함하여 해당 지점까지 스캔 된 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9a65fbe0ac8aee32e97b5e854b44d3ce3c467ce" translate="yes" xml:space="preserve">
          <source>Returns the number of characters written on success, otherwise a negative value.</source>
          <target state="translated">성공시 쓰여진 문자 수를 반환하고, 그렇지 않으면 음수 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b625423ddef94067248deca4c04683f8e549d739" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty CPU scheduler threads used by the emulator. Dirty CPU schedulers execute CPU-bound native functions, such as NIFs, linked-in driver code, and BIFs that cannot be managed cleanly by the normal emulator schedulers.</source>
          <target state="translated">에뮬레이터에서 사용하는 더티 CPU 스케줄러 스레드 수를 리턴합니다. 더티 CPU 스케줄러는 일반 에뮬레이터 스케줄러에서 깨끗하게 관리 할 수없는 NIF, 링크 된 드라이버 코드 및 BIF와 같은 CPU 바인딩 기본 기능을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7f256108e8868ab847f1eff7205badbf224a1696" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty CPU schedulers online. The return value satisfies &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the smallest of the return values of &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; and &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">더티 CPU 스케줄러의 온라인 수를 리턴합니다. 리턴 값은 &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt; 만족합니다 . 여기서 &lt;code&gt;N&lt;/code&gt; 은 &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; 및 &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt; 의 리턴 값 중 가장 작은 값입니다 .</target>
        </trans-unit>
        <trans-unit id="972b6b25e8bef227b0888f4e0ec09a488a7fd291" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty I/O schedulers as an integer. Dirty I/O schedulers execute I/O-bound native functions, such as NIFs and linked-in driver code, which cannot be managed cleanly by the normal emulator schedulers.</source>
          <target state="translated">더티 I / O 스케줄러 수를 정수로 리턴합니다. 더티 I / O 스케줄러는 일반 에뮬레이터 스케줄러에서 깔끔하게 관리 할 수없는 NIF 및 링크 된 드라이버 코드와 같은 I / O 바인딩 기본 기능을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f2cecf2f2587c973d7ba7749223e67ce5bcd9288" translate="yes" xml:space="preserve">
          <source>Returns the number of edges of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">그래프 &lt;code&gt;G&lt;/code&gt; 의 모서리 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7e0fe1fbaca57f92941dbf5961b597f892cbcbf3" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of a list skeleton. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt;&quot;, then &lt;code&gt;list_length(Node)&lt;/code&gt; returns the integer 6.</source>
          <target state="translated">리스트 스켈레톤의 요소 서브 트리 수를 리턴합니다. &lt;code&gt;Node&lt;/code&gt; 는 적절한 목록을 나타내야합니다. 예를 들어, &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt; &quot;을 &lt;code&gt;list_length(Node)&lt;/code&gt; 경우 list_length (Node) 는 정수 6을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="11fe16c4bca2a3ef9c80a84bd4d422d2e37c0a79" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of an abstract list. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt;&quot;, then &lt;code&gt;list_length(Node)&lt;/code&gt; returns the integer 6.</source>
          <target state="translated">추상 목록의 요소 하위 트리 수를 반환합니다. &lt;code&gt;Node&lt;/code&gt; 는 적절한 목록을 나타내야합니다. 예를 들어 &lt;code&gt;Node&lt;/code&gt; 가 &quot; &lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt; &quot;을 &lt;code&gt;list_length(Node)&lt;/code&gt; 경우 list_length (Node) 는 정수 6을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9b838bdf00f2c012822c68c54c58d945296cd890" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of an abstract tuple.</source>
          <target state="translated">추상 튜플의 요소 하위 트리 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a40f32104666cf14c4127ffaced1598242fb985" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of an abstract value list.</source>
          <target state="translated">추상 값 목록의 요소 하위 트리 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad586e32862b432a0a41088a52255a88a289ea6d" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;Ordset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ordset&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7bceeed5f3c9033126d8483cf01a323f732e14be" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="27741694d88ef2b8c9cd98a9ef33f42ed7c245ca" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in a tuple or the number of bytes in a binary or bitstring, for example:</source>
          <target state="translated">튜플의 요소 수 또는 이진 또는 비트 열의 바이트 수를 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c968d21c414055b6f6881cf8f979d52fd5e70356" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in an &lt;code&gt;Orddict&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Orddict&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0347b9e4b937d3628927c5a51702f2b0a337c4e1" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in an encoded term.</source>
          <target state="translated">인코딩 된 용어의 요소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cbb04a338deacffc9cdd45a081bac00c58279528" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">사전 &lt;code&gt;Dict&lt;/code&gt; 의 요소 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bc78430436d67ee43831124b6a2d7e6df88457ce" translate="yes" xml:space="preserve">
          <source>Returns the number of elements of a &lt;code&gt;tuple&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;tuple&lt;/code&gt; 노드 의 요소 수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5d26e03c95e98c9b4ddb07abeb329de06ac539a0" translate="yes" xml:space="preserve">
          <source>Returns the number of elements of the ordered or unordered set &lt;code&gt;ASet&lt;/code&gt;.</source>
          <target state="translated">정렬되거나 정렬되지 않은 세트 &lt;code&gt;ASet&lt;/code&gt; 의 요소 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c225130ea4a23823ec37a6247fe9d56da5d6dc0c" translate="yes" xml:space="preserve">
          <source>Returns the number of exact reductions.</source>
          <target state="translated">정확한 축소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27414b5e7862e995bd023cb7aba132000145e35e" translate="yes" xml:space="preserve">
          <source>Returns the number of functions matching argument &lt;code&gt;MFA&lt;/code&gt;. This is zero if none matched.</source>
          <target state="translated">인수 &lt;code&gt;MFA&lt;/code&gt; 와 일치하는 함수 수를 리턴합니다 . 일치하는 것이 없으면 0입니다.</target>
        </trans-unit>
        <trans-unit id="3eab28eed3d513f19bc8be9e90ec8f8a9c40eae5" translate="yes" xml:space="preserve">
          <source>Returns the number of grapheme clusters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 의 그래 핀 군집 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="875852e065bfcab09f0d2f2e878c3b2d86af0d05" translate="yes" xml:space="preserve">
          <source>Returns the number of key-value associations in &lt;code&gt;Map&lt;/code&gt;. This operation occurs in constant time.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 의 키-값 연관 수를 리턴합니다 . 이 작업은 일정한 시간에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4b4469de5b1f17d299564dd3431612d3a6b7e884" translate="yes" xml:space="preserve">
          <source>Returns the number of left-hand side variables of an abstract let-expression.</source>
          <target state="translated">추상 let-expression의 왼쪽 변수 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ab99794bdead76dd1c19e887d93d13e246ef599e" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Hours + Minutes + Seconds&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hours + Minutes + Seconds&lt;/code&gt; 단위로 밀리 초 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e21598081417b439b5643f4da2844b6f5db7888" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Hours&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hours&lt;/code&gt; 밀리 초)을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="edd8dc1060ce206d5c2e4bc39fe2bfe625eb43a8" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Minutes&lt;/code&gt;.</source>
          <target state="translated">밀리 초 수를 &lt;code&gt;Minutes&lt;/code&gt; 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="12c8b32a329885d598a6369eb66f2e456bac0905" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Seconds&lt;/code&gt;.</source>
          <target state="translated">에서 밀리 초 단위로 반환합니다 &lt;code&gt;Seconds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e37ee5b1b74524e5d5bf9ae8b42b650f5310f0ee" translate="yes" xml:space="preserve">
          <source>Returns the number of nodes in &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 의 노드 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bc9a93bc0d77c37498540b62ea2586ca944319bd" translate="yes" xml:space="preserve">
          <source>Returns the number of objects in the table, a non-negative integer.</source>
          <target state="translated">음수가 아닌 정수인 테이블의 개체 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ef7f9184d4db73c4c94e61289ff5c2df0380e449" translate="yes" xml:space="preserve">
          <source>Returns the number of parameter subtrees of an abstract fun-expression.</source>
          <target state="translated">추상 fun-expression의 매개 변수 하위 트리 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1403423bc487b6409173ca721885e0f995b0be24" translate="yes" xml:space="preserve">
          <source>Returns the number of pattern subtrees of an abstract clause.</source>
          <target state="translated">추상 절의 패턴 하위 트리 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ddd7d03445c2ab56bf345eadf4a78c17fe249214" translate="yes" xml:space="preserve">
          <source>Returns the number of ports (an &lt;code&gt;integer() &amp;gt;= 0&lt;/code&gt;) using the driver.</source>
          <target state="translated">드라이버를 사용하여 포트 수 ( &lt;code&gt;integer() &amp;gt;= 0&lt;/code&gt; )를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="491d9bc6df2db855e8c29dbad2bf37402fcc8564" translate="yes" xml:space="preserve">
          <source>Returns the number of ports currently existing at the local node. The value is given as an integer. This is the same value as returned by &lt;code&gt;length(erlang:ports())&lt;/code&gt;, but more efficient.</source>
          <target state="translated">로컬 노드에 현재 존재하는 포트 수를 반환합니다. 값은 정수로 제공됩니다. &lt;code&gt;length(erlang:ports())&lt;/code&gt; 에서 반환 한 값과 같지만 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="583d57fb0564ec0306d359b8d46a2530b90a86d0" translate="yes" xml:space="preserve">
          <source>Returns the number of processes currently existing at the local node. The value is given as an integer. This is the same value as returned by &lt;code&gt;length(processes())&lt;/code&gt;, but more efficient.</source>
          <target state="translated">로컬 노드에 현재 존재하는 프로세스 수를 리턴합니다. 값은 정수로 제공됩니다. &lt;code&gt;length(processes())&lt;/code&gt; 에서 반환 한 값과 같지만 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="785f587d2a9ba00ce2609c7ff903f6c1bb1110ac" translate="yes" xml:space="preserve">
          <source>Returns the number of scheduler threads used by the emulator. Scheduler threads online schedules Erlang processes and Erlang ports, and execute Erlang code and Erlang linked-in driver code.</source>
          <target state="translated">에뮬레이터에서 사용하는 스케줄러 스레드 수를 반환합니다. 스케줄러는 온라인으로 Erlang 프로세스 및 Erlang 포트를 예약하고 Erlang 코드 및 Erlang 링크 된 드라이버 코드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6402e69f258c1835a9c52804476542b4c976434e" translate="yes" xml:space="preserve">
          <source>Returns the number of schedulers online. The scheduler identifiers of schedulers online satisfy the relationship &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">온라인 스케줄러 수를 리턴합니다. 온라인 스케줄러의 스케줄러 식별자는 &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers_online)&lt;/code&gt; 관계를 충족시킵니다 .</target>
        </trans-unit>
        <trans-unit id="e5b2848fc2497fdc525632a37ac35933549746cc" translate="yes" xml:space="preserve">
          <source>Returns the number of seconds since midnight up to the specified time.</source>
          <target state="translated">자정 이후 지정된 시간까지 초 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ffbc86e2482f174303a71199a1f5608893d1ed2d" translate="yes" xml:space="preserve">
          <source>Returns the number of sessions in the cache. If size exceeds the maximum number of sessions, the current cache entries will be invalidated regardless of their remaining lifetime. Is to be callable from any process.</source>
          <target state="translated">캐시의 세션 수를 반환합니다. 크기가 최대 세션 수를 초과하면 남은 수명에 관계없이 현재 캐시 항목이 무효화됩니다. 모든 프로세스에서 호출 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="16ddf2387fd04809ee8daa453a0efa12e73e124b" translate="yes" xml:space="preserve">
          <source>Returns the number of start bits, &lt;code&gt;M&lt;/code&gt;, of a &lt;code&gt;bitstring_type&lt;/code&gt; node.</source>
          <target state="translated">시작 비트의 수를 돌려 &lt;code&gt;M&lt;/code&gt; (A)의, &lt;code&gt;bitstring_type&lt;/code&gt; 의 노드를.</target>
        </trans-unit>
        <trans-unit id="2e6475c6db47d98c9167cc4f4f722da9bb5c01e5" translate="yes" xml:space="preserve">
          <source>Returns the number of subtrees of a data constructor node. This is equivalent to &lt;code&gt;length(data_es(Node))&lt;/code&gt;, but potentially more efficient.</source>
          <target state="translated">데이터 생성자 노드의 하위 트리 수를 반환합니다. 이것은 &lt;code&gt;length(data_es(Node))&lt;/code&gt; 와 동일하지만 잠재적으로 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="36ef3e0a5dbdeac871ee3e6f8d38ff39927bfb55" translate="yes" xml:space="preserve">
          <source>Returns the number of vertices of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; 의 꼭짓점 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7c7b135d5b9e3c6434f3fc9376651b53ae756d53" translate="yes" xml:space="preserve">
          <source>Returns the number of words in &lt;code&gt;String&lt;/code&gt;, separated by blanks or &lt;code&gt;Character&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에서 단어 수를 공백 또는 &lt;code&gt;Character&lt;/code&gt; 구분하여 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="816478c4d0ecefe3cc8fa0901f0b437027d2fe17" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by a &lt;code&gt;float&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 노드가 나타내는 숫자 문자열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4a45899daebd5f8f4dd974886fc3e48dbefc658c" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by a floating-point literal node.</source>
          <target state="translated">부동 소수점 리터럴 노드가 나타내는 숫자 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a586d3cb678be1749add7a5da87769e378a20dec" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by an &lt;code&gt;integer&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer&lt;/code&gt; 노드로 표시되는 숫자 문자열을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="ef66c08edf10b9e8d896d663ea824921701e133d" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by an integer literal node.</source>
          <target state="translated">정수 리터럴 노드가 나타내는 숫자 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7c5f0cb49feee55aa2ec12d1aa9ff79a709d0ef3" translate="yes" xml:space="preserve">
          <source>Returns the object code file extension corresponding to the Erlang machine used, namely &lt;code&gt;.beam&lt;/code&gt;.</source>
          <target state="translated">사용 된 Erlang 기계에 해당하는 오브젝트 코드 파일 확장자, 즉 &lt;code&gt;.beam&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="6a87f473568302f6f0157e494cb4551c83562306" translate="yes" xml:space="preserve">
          <source>Returns the official name of &lt;code&gt;Host&lt;/code&gt;, or &lt;code&gt;{error, Host}&lt;/code&gt; if no such name is found. See also &lt;code&gt;&lt;a href=&quot;inet&quot;&gt;inet(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; 의 공식 이름 또는 해당 이름이 없으면 &lt;code&gt;{error, Host}&lt;/code&gt; 반환합니다. &lt;code&gt;&lt;a href=&quot;inet&quot;&gt;inet(3)&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f362a3afc2fafb536dcb997b8b99e94c30dbe125" translate="yes" xml:space="preserve">
          <source>Returns the old state identifier, that is:</source>
          <target state="translated">이전 상태 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c212b94b18e6ce7fb278680ccf26e904eae63ef1" translate="yes" xml:space="preserve">
          <source>Returns the old value of the flag.</source>
          <target state="translated">플래그의 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a4d5cbf7a554387015c97a39e626461ec015fa1e" translate="yes" xml:space="preserve">
          <source>Returns the operator precedence field of the prettyprinter context.</source>
          <target state="translated">prettyprinter 컨텍스트의 연산자 우선 순위 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e8704fd8ab7a384142305a1b7f6f1d6978057230" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of a &lt;code&gt;prefix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;prefix_expr&lt;/code&gt; 노드 의 연산자 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c27d9b6065ec14668d370cca91d5666dafc230f9" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an &lt;code&gt;application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; 노드 의 연산자 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9731910832b6b164f42fcebed8fdf99171fbd591" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; 노드 의 연산자 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ddc5bc3bf612dcfa57442dae7127ec5146e1f698" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an abstract function application.</source>
          <target state="translated">추상 함수 응용 프로그램의 연산자 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="85b33ca2308142d2f8f7b80f3de5d0e5583d8d1d" translate="yes" xml:space="preserve">
          <source>Returns the pair &lt;code&gt;{node, Node}&lt;/code&gt;, describing the chunk continuation returned by &lt;code&gt;chunk/2,3&lt;/code&gt;, &lt;code&gt;bchunk/2,3&lt;/code&gt;, or &lt;code&gt;chunk_step/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chunk/2,3&lt;/code&gt; , &lt;code&gt;bchunk/2,3&lt;/code&gt; 또는 &lt;code&gt;chunk_step/3&lt;/code&gt; 에서 리턴 한 청크 연속을 설명 하는 쌍 &lt;code&gt;{node, Node}&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="90a0aac47f2a74669c81ad36eebc01a1652c9cd2" translate="yes" xml:space="preserve">
          <source>Returns the paper widh field of the prettyprinter context.</source>
          <target state="translated">prettyprinter 컨텍스트의 paper widh 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="02537d119ef2252eea478fd30ef841670ba037d6" translate="yes" xml:space="preserve">
          <source>Returns the path for the &quot;library directory&quot;, the top directory, for an application &lt;code&gt;Name&lt;/code&gt; located under &lt;code&gt;$OTPROOT/lib&lt;/code&gt; or on a directory referred to with environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt;.</source>
          <target state="translated">반환 응용 프로그램의 &quot;라이브러리 디렉토리&quot;, 상단 디렉토리에 대한 경로 &lt;code&gt;Name&lt;/code&gt; 아래에 &lt;code&gt;$OTPROOT/lib&lt;/code&gt; 또는 디렉토리에 환경 변수로 언급 &lt;code&gt;ERL_LIBS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9f65ccd60013371b1b2ad8467610f0efc52e1f6" translate="yes" xml:space="preserve">
          <source>Returns the path to a subdirectory directly under the top directory of an application. Normally the subdirectories reside under the top directory for the application, but when applications at least partly resides in an archive, the situation is different. Some of the subdirectories can reside as regular directories while other reside in an archive file. It is not checked whether this directory exists.</source>
          <target state="translated">응용 프로그램의 최상위 디렉토리 바로 아래에있는 하위 디렉토리의 경로를 반환합니다. 일반적으로 서브 디렉토리는 애플리케이션의 최상위 디렉토리에 상주하지만 애플리케이션이 최소한 부분적으로 아카이브에 상주하는 경우 상황이 다릅니다. 일부 서브 디렉토리는 일반 디렉토리로 상주하고 다른 디렉토리는 아카이브 파일에 상주 할 수 있습니다. 이 디렉토리가 존재하는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="321113d5c8b9ba5a1634dc932451dd1414a4ed08" translate="yes" xml:space="preserve">
          <source>Returns the path to the &lt;code&gt;priv&lt;/code&gt; directory in an application. Equivalent to &lt;code&gt;code:lib_dir(Name, priv)&lt;/code&gt;.</source>
          <target state="translated">받는 경로 반환 &lt;code&gt;priv&lt;/code&gt; 응용 프로그램에서 디렉토리를. 상당 &lt;code&gt;code:lib_dir(Name, priv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49f8d3a368e0189cd9b4ee8bb0935ede3e6cc08e" translate="yes" xml:space="preserve">
          <source>Returns the path to the current key. This is the equivalent of &lt;code&gt;pwd&lt;/code&gt;.</source>
          <target state="translated">현재 키의 경로를 반환합니다. 이것은 &lt;code&gt;pwd&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="006ce942b88e0ca111302602b61535fbad8bbc68" translate="yes" xml:space="preserve">
          <source>Returns the path type, which is one of the following:</source>
          <target state="translated">다음 중 하나 인 경로 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="84ce7f7e9dd661fabc914f1faef4348283166ea4" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of a &lt;code&gt;generator&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; 노드 의 패턴 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="153c3ae9cc171eb05251aa0aba53e1cb2111fa80" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of a &lt;code&gt;match_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;match_expr&lt;/code&gt; 노드 의 패턴 서브 트리를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="595210ee76a1a50fef34943fc4c102cc45501b2b" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of an abstract pattern alias.</source>
          <target state="translated">추상 패턴 별칭의 패턴 하위 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4631b360f167d661d505445df0774472e0ea03e9" translate="yes" xml:space="preserve">
          <source>Returns the pid registered under &lt;code&gt;Name&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt;if the name is not registered.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 아래에 등록 된 pid를 반환 하거나 이름이 등록 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="324e95de400a41779998513f2bd89025046048e0" translate="yes" xml:space="preserve">
          <source>Returns the pid with the globally registered name &lt;code&gt;Name&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the name is not globally registered.</source>
          <target state="translated">전역 적으로 등록 된 이름 &lt;code&gt;Name&lt;/code&gt; 을 가진 pid를 반환합니다 . 이름이 전체적으로 등록 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8236434e0b154933eee5239693c72e6b1e2140d0" translate="yes" xml:space="preserve">
          <source>Returns the pid, port identifier or tracer module of the current system tracer or &lt;code&gt;false&lt;/code&gt; if no system tracer is activated.</source>
          <target state="translated">현재 시스템 추적 프로그램의 pid, 포트 식별자 또는 추적 프로그램 모듈을 반환하거나 시스템 추적 프로그램이 활성화되어 있지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="92f35027bcaad43876596a88a76aeeb303390618" translate="yes" xml:space="preserve">
          <source>Returns the pointer to the private data that was set by &lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt; 로 설정된 개인 데이터에 대한 포인터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="546c6ad3a07fa0ce8c58312141c49c8103a49fd9" translate="yes" xml:space="preserve">
          <source>Returns the port owner process.</source>
          <target state="translated">포트 소유자 프로세스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="dd3ec286f3fd13578531ca16ade1edd5c47afaf4" translate="yes" xml:space="preserve">
          <source>Returns the position information associated with &lt;code&gt;Node&lt;/code&gt;. This is usually a nonnegative integer (indicating the source code line number), but may be any term. By default, all new tree nodes have their associated position information set to the integer zero.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 와 관련된 위치 정보를 반환합니다 . 일반적으로 음수가 아닌 정수 (소스 코드 행 번호를 나타냄)이지만 임의의 용어 일 수 있습니다. 기본적으로 모든 새 트리 노드에는 연관된 위치 정보가 정수 0으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="15bf9a5ff537a8ff48b2248c819f055824722f30" translate="yes" xml:space="preserve">
          <source>Returns the position of the table key, a positive integer.</source>
          <target state="translated">테이블 키의 위치를 ​​양의 정수로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="80d1c70786cedec3b8802fd4a00934131cb78803" translate="yes" xml:space="preserve">
          <source>Returns the position where the first occurrence of &lt;code&gt;SubString&lt;/code&gt; begins in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;SubString&lt;/code&gt; does not exist in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SubString&lt;/code&gt; 의 첫 항목이 &lt;code&gt;String&lt;/code&gt; 에서 시작 되는 위치를 리턴합니다 . 반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;SubString&lt;/code&gt; 존재하지 않는 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b92023841df981fc854cd6c21086b8c99e997ed" translate="yes" xml:space="preserve">
          <source>Returns the position where the last occurrence of &lt;code&gt;SubString&lt;/code&gt; begins in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;SubString&lt;/code&gt; does not exist in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SubString&lt;/code&gt; 이 마지막으로 나타나는 위치 를 &lt;code&gt;String&lt;/code&gt; 에서 반환합니다 . 반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;SubString&lt;/code&gt; 존재하지 않는 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a573b144d2932c1f987d4fafd6cad9f79955e6d8" translate="yes" xml:space="preserve">
          <source>Returns the prefix element subtrees of a &lt;code&gt;list&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot; or &quot;&lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt;&quot;, the returned value is &lt;code&gt;[E1, ..., En]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 노드 의 접두사 요소 서브 트리를 리턴 합니다. 경우 &lt;code&gt;Node&lt;/code&gt; 나타내는 &quot; &lt;code&gt;[E1, ..., En]&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt; &quot;반환 된 값은 &lt;code&gt;[E1, ..., En]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d39efa51d78c02315f14baedf1490bdc2478b33" translate="yes" xml:space="preserve">
          <source>Returns the previous key &lt;code&gt;Key2&lt;/code&gt;, preceding key &lt;code&gt;Key1&lt;/code&gt; according to Erlang term order in table &lt;code&gt;Tab&lt;/code&gt; of type &lt;code&gt;ordered_set&lt;/code&gt;. For other table types, the function is synonymous to &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;. If no previous key exists, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">반환 값은 이전 키 &lt;code&gt;Key2&lt;/code&gt; 키 위의 &lt;code&gt;Key1&lt;/code&gt; 테이블에 얼랑 용어 순서에 따라 &lt;code&gt;Tab&lt;/code&gt; 형식의 &lt;code&gt;ordered_set&lt;/code&gt; . 다른 테이블 유형의 경우 함수는 &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; 와 동의어 입니다. 이전 키가 없으면 &lt;code&gt;'$end_of_table'&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c8d4ae737b4db2c67bfe04ef9c377e7e5e6e3dbd" translate="yes" xml:space="preserve">
          <source>Returns the previous row of the result set relative the current cursor position and positions the cursor at this row.</source>
          <target state="translated">현재 커서 위치를 기준으로 결과 집합의 이전 행을 반환하고 커서를이 행에 놓습니다.</target>
        </trans-unit>
        <trans-unit id="2e3aed75f5551975fb003b65a6b091a77e6494cb" translate="yes" xml:space="preserve">
          <source>Returns the previous system monitor settings just like &lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt; erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt; erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt; 과 같은 이전 시스템 모니터 설정을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="79429747a01ca62392853f8ded40b70de6e8ccea" translate="yes" xml:space="preserve">
          <source>Returns the previous system monitor settings just like &lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt;erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt;erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt; 과 같은 이전 시스템 모니터 설정을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cac41fdf6cb77bccdde51e850b532f7064f9c74d" translate="yes" xml:space="preserve">
          <source>Returns the previous value of the trace token.</source>
          <target state="translated">추적 토큰의 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b2ce30a9003a3dcc5bfa6f287e1ba4c1a86e09dc" translate="yes" xml:space="preserve">
          <source>Returns the printname of an &lt;code&gt;atom&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; 노드 의 인쇄 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="de913fdfd67c653b94d3ca22501a2f4f53ed3e4b" translate="yes" xml:space="preserve">
          <source>Returns the printname of an abstract atom.</source>
          <target state="translated">추상 원자의 인쇄 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2523b83ccfeaa0870112d689fc316053b18b0851" translate="yes" xml:space="preserve">
          <source>Returns the process ID associated with a living monitor. It can be used in the &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt; process_exit&lt;/a&gt;&lt;/code&gt; callback to get the process identification for the exiting process.</source>
          <target state="translated">리빙 모니터와 관련된 프로세스 ID를 반환합니다. &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt; process_exit&lt;/a&gt;&lt;/code&gt; 콜백 에서 사용 하여 종료 프로세스에 대한 프로세스 ID를 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c09417a2f782c732ace352e8c361babceffd6222" translate="yes" xml:space="preserve">
          <source>Returns the process ID associated with a living monitor. It can be used in the &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt;process_exit&lt;/a&gt;&lt;/code&gt; callback to get the process identification for the exiting process.</source>
          <target state="translated">리빙 모니터와 연관된 프로세스 ID를 리턴합니다. 프로세스 종료 프로세스에 대한 프로세스 식별을 얻기 위해 &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt;process_exit&lt;/a&gt;&lt;/code&gt; 콜백 에서 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f70d0ce41a4f881616a60ac88b11968ce5d22b0" translate="yes" xml:space="preserve">
          <source>Returns the process ID of the process that made the current call to the driver. The process ID can be used with &lt;code&gt;&lt;a href=&quot;#driver_send_term&quot;&gt;driver_send_term&lt;/a&gt;&lt;/code&gt; to send back data to the caller. &lt;code&gt;driver_caller&lt;/code&gt; only returns valid data when currently executing in one of the following driver callbacks:</source>
          <target state="translated">드라이버를 현재 호출 한 프로세스의 프로세스 ID를 반환합니다. 프로세스 ID는 &lt;code&gt;&lt;a href=&quot;#driver_send_term&quot;&gt;driver_send_term&lt;/a&gt;&lt;/code&gt; 과 함께 사용 하여 호출자에게 데이터를 다시 보낼 수 있습니다 . &lt;code&gt;driver_caller&lt;/code&gt; 는 현재 다음 드라이버 콜백 중 하나에서 실행될 때 유효한 데이터 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01f1399ec4848c924251bf599db1e66546a717fe" translate="yes" xml:space="preserve">
          <source>Returns the process dictionary and deletes it, for example:</source>
          <target state="translated">프로세스 사전을 리턴하고 삭제합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="a2e0820a69de06d02f05f63a54b009bfff38ba5e" translate="yes" xml:space="preserve">
          <source>Returns the process dictionary as a list of &lt;code&gt;{Key, Val}&lt;/code&gt; tuples, for example:</source>
          <target state="translated">프로세스 사전을 &lt;code&gt;{Key, Val}&lt;/code&gt; 튜플 목록으로 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="da30893a43070676175cefc324f5d6933878732e" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램에 의해 시작된 새 프로세스의 프로세스 식별자 (pid) 를 &lt;code&gt;Node&lt;/code&gt; 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 호출 프로세스와 새 프로세스 사이에 원자 적으로 링크가 생성됩니다. 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID를 반환하고, 이유와 출구 신호 &lt;code&gt;noconnection&lt;/code&gt; 는 호출 프로세스로 전송됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="807e6d59f8272dfb2df4ddaa7f2cb965c1c9b897" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램으로 시작한 새 프로세스의 프로세스 식별자 (pid) 를 &lt;code&gt;Node&lt;/code&gt; 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID를 반환하고, 이유와 출구 신호 &lt;code&gt;noconnection&lt;/code&gt; 는 호출 프로세스로 전송됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="5b805e859795d47f79c78974d6d3bf3de04d9de9" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램으로 시작한 새 프로세스의 프로세스 식별자 (pid) 를 &lt;code&gt;Node&lt;/code&gt; 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="1651cff75e71bc3cca74deea905d1f150b6a5fa1" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자 (pid)를 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7b834c15d425d0adaacdb65c97269e4e402b7ae7" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; 을 &lt;code&gt;Node&lt;/code&gt; 의 &lt;code&gt;Args&lt;/code&gt; 에 적용하여 시작된 새 프로세스의 프로세스 식별자 (pid)를 반환합니다 . 호출 프로세스와 새 프로세스 사이에 원자 적으로 링크가 생성됩니다. 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID를 반환하고, 이유와 출구 신호 &lt;code&gt;noconnection&lt;/code&gt; 는 호출 프로세스로 전송됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="65c181b527326b49f0ac827a0e921c9415e9d4dd" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 에 의해 시작된 새 프로세스의 프로세스 식별자 (pid)를 리턴합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID를 반환하고, 이유와 출구 신호 &lt;code&gt;noconnection&lt;/code&gt; 는 호출 프로세스로 전송됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="c3a0803f013a3f94e9d9aa95cf9347116b949810" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 에 의해 시작된 새 프로세스의 프로세스 식별자 (pid)를 리턴합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="54fa4c4d9fa8b92ec1113f462f90e3f78e85dcfc" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 에 의해 시작된 새 프로세스의 프로세스 식별자 (pid)를 리턴합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="b7f404866224f71a3e58de3b96014164fefc80b8" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램으로 시작한 새 프로세스의 프로세스 식별자 를 &lt;code&gt;Node&lt;/code&gt; 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 경우 &lt;code&gt;Node&lt;/code&gt; 존재하지 않는, 쓸모없는 PID가 반환됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="1fed894a1512ce46a2a275ccfd62d287023c4f84" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. A link is created between the calling process and the new process, atomically. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자를 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="af6d8e47602ea5bce18d73a9ce0ed0ceabcf5d9a" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자를 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="fa0e7a06fec50492dfee2ff7bf1d4a8a811eb517" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 의 응용 프로그램으로 시작된 새 프로세스의 프로세스 식별자를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1399dccf65e4176de1759161036d154a0c401255" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;. A link is created between the calling process and the new process, atomically. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; 의 응용 프로그램으로 시작된 새 프로세스의 프로세스 식별자를 반환합니다 . 호출 프로세스와 새 프로세스간에 원자 적으로 링크가 작성됩니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="ff27fd3ab29e161a7f6b2c0357a332ed0ea4d1d7" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process, started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on the node &lt;code&gt;Node&lt;/code&gt;, and a reference for a monitor created to the new process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; 의 응용 프로그램에 의해 시작된 새 프로세스의 프로세스 식별자를 &lt;code&gt;Node&lt;/code&gt; 노드 의 빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 반환하고 새 프로세스 에 대해 생성 된 모니터에 대한 참조를 반환합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="6bd62b70a6cb87542c88c34c5500d5087ac288c7" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process, started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;, and a reference for a monitor created to the new process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">빈 목록 &lt;code&gt;[]&lt;/code&gt; 에 &lt;code&gt;Fun&lt;/code&gt; 을 적용하여 시작한 새 프로세스의 프로세스 식별자와 새 프로세스에 대해 생성 된 모니터에 대한 참조를 반환합니다 . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="55c30a325ce59bc5c22a7ad0509019e23da0eb3f" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the calling process, for example:</source>
          <target state="translated">호출 프로세스의 프로세스 식별자를 반환합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="87465ac9469d5adad8a1f34c987e678f8f5c4742" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the current Erlang emulator in the format most commonly used by the OS environment. Returns &lt;code&gt;Value&lt;/code&gt; as a string containing the (usually) numerical identifier for a process. On Unix, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process id as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</source>
          <target state="translated">OS 환경에서 가장 일반적으로 사용되는 형식으로 현재 Erlang 에뮬레이터의 프로세스 식별자를 반환합니다. 프로세스의 (일반적으로) 숫자 식별자를 포함하는 문자열로 &lt;code&gt;Value&lt;/code&gt; 를 반환 합니다. 유닉스에서 이것은 일반적으로 &lt;code&gt;getpid()&lt;/code&gt; 시스템 호출 의 반환 값입니다 . Windows에서는 &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; 시스템 호출에 의해 리턴 된 프로세스 ID 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f141a72600726122755cdbd5a26145ed550e1567" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the group leader for the process evaluating the function.</source>
          <target state="translated">함수를 평가하는 프로세스에 대한 그룹 리더의 프로세스 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1b6bc3db8dba2bad54d7202a8f3ea45429a7ace" translate="yes" xml:space="preserve">
          <source>Returns the process identifier or port identifier with the registered name &lt;code&gt;RegName&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the name is not registered. Example:</source>
          <target state="translated">등록 된 이름이 &lt;code&gt;RegName&lt;/code&gt; 인 프로세스 식별자 또는 포트 식별자를 반환합니다 . 이름이 등록 &lt;code&gt;undefined&lt;/code&gt; 경우 undefined를 반환합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="ecb395b84c751bcedee93e1b2d5e6863abd7cc75" translate="yes" xml:space="preserve">
          <source>Returns the process, port or tracer module to which all trace messages are sent.</source>
          <target state="translated">모든 추적 메시지가 전송되는 프로세스, 포트 또는 추적 프로그램 모듈을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cf05e569cedcd2f699b774279737522a264abe22" translate="yes" xml:space="preserve">
          <source>Returns the promised answer from a previous &lt;code&gt;&lt;a href=&quot;#async_call-4&quot;&gt;async_call/4&lt;/a&gt;&lt;/code&gt;. If the answer is available, it is returned immediately. Otherwise, the calling process is suspended until the answer arrives from &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">이전 &lt;code&gt;&lt;a href=&quot;#async_call-4&quot;&gt;async_call/4&lt;/a&gt;&lt;/code&gt; 에서 약속 된 답변을 반환합니다 . 답변을 사용할 수 있으면 즉시 답변이 반환됩니다. 그렇지 않으면 응답이 &lt;code&gt;Node&lt;/code&gt; 에서 도착할 때까지 호출 프로세스가 일시 중단 됩니다.</target>
        </trans-unit>
        <trans-unit id="910d9c8f6c605e2ebc36d8399a34502b524de425" translate="yes" xml:space="preserve">
          <source>Returns the protocol negotiated through ALPN or NPN extensions.</source>
          <target state="translated">ALPN 또는 NPN 확장을 통해 협상 된 프로토콜을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b755e387a12dca07a6c933ca60eadca3fe83ccc1" translate="yes" xml:space="preserve">
          <source>Returns the random number generator state in an external format. To be used with &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">난수 생성기 상태를 외부 형식으로 반환합니다. &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt; 과 함께 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="3590809b8ac9f39c04bb9426b56ed391a2bbe418" translate="yes" xml:space="preserve">
          <source>Returns the random number state in an external format. To be used with &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">난수 상태를 외부 형식으로 반환합니다. &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt; 과 함께 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b7b10a6898add1d6fde81dfb4f349332aaad68f9" translate="yes" xml:space="preserve">
          <source>Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">읽기 인코딩을 반환하거나 유효한 인코딩이 없으면 &lt;code&gt;none&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="be675b48eb569f66a276c6f1557deff36ab74c40" translate="yes" xml:space="preserve">
          <source>Returns the record name and field name/names of a record expression. If &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;record_expr&lt;/code&gt;, &lt;code&gt;record_index_expr&lt;/code&gt; or &lt;code&gt;record_access&lt;/code&gt;, a pair &lt;code&gt;{Type, Info}&lt;/code&gt; is returned, otherwise an atom &lt;code&gt;Type&lt;/code&gt; is returned. &lt;code&gt;Type&lt;/code&gt; is the node type of &lt;code&gt;Node&lt;/code&gt;, and &lt;code&gt;Info&lt;/code&gt; depends on &lt;code&gt;Type&lt;/code&gt;, as follows:</source>
          <target state="translated">레코드 이름 및 레코드 이름의 필드 이름 / 이름을 반환합니다. &lt;code&gt;Node&lt;/code&gt; 에 &lt;code&gt;record_expr&lt;/code&gt; , &lt;code&gt;record_index_expr&lt;/code&gt; 또는 &lt;code&gt;record_access&lt;/code&gt; 유형이 있으면 &lt;code&gt;{Type, Info}&lt;/code&gt; 쌍이 리턴되고, 그렇지 않으면 아톰 &lt;code&gt;Type&lt;/code&gt; 이 리턴됩니다. &lt;code&gt;Type&lt;/code&gt; 은 &lt;code&gt;Node&lt;/code&gt; 의 노드 유형 이며 &lt;code&gt;Info&lt;/code&gt; 는 다음과 같이 &lt;code&gt;Type&lt;/code&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="e1c83086703974239395b7bb9dc744f602eb77a1" translate="yes" xml:space="preserve">
          <source>Returns the requested information items about the connection, if they are defined.</source>
          <target state="translated">요청 된 연결에 대한 정보 항목이 정의 된 경우이를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="18d7bc4d6909e7f0305f443f69d1f98beb0f9733" translate="yes" xml:space="preserve">
          <source>Returns the resized driver binary on success. Returns &lt;code&gt;NULL&lt;/code&gt; on failure (out of memory).</source>
          <target state="translated">성공시 크기가 조정 된 드라이버 바이너리를 반환합니다. 실패시 (메모리 부족) &lt;code&gt;NULL&lt;/code&gt; 을 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="802f3ed0058e0984ef41ca351845339e93fd6d3f" translate="yes" xml:space="preserve">
          <source>Returns the result of applying &lt;code&gt;Function&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;. The applied function must be exported from &lt;code&gt;Module&lt;/code&gt;. The arity of the function is the length of &lt;code&gt;Args&lt;/code&gt;. Example:</source>
          <target state="translated">적용한 결과 반환 &lt;code&gt;Function&lt;/code&gt; 의 &lt;code&gt;Module&lt;/code&gt; 에 &lt;code&gt;Args&lt;/code&gt; . 적용된 기능은 &lt;code&gt;Module&lt;/code&gt; 에서 내 보내야합니다 . 함수의 arity는 &lt;code&gt;Args&lt;/code&gt; 의 길이입니다 . 예:</target>
        </trans-unit>
        <trans-unit id="5a8b030da557ad21c5d956f96aea50c6ccb4a8b5" translate="yes" xml:space="preserve">
          <source>Returns the result of the latest disk check. &lt;code&gt;Id&lt;/code&gt; is a string that identifies the disk or partition. &lt;code&gt;KByte&lt;/code&gt; is the total size of the disk or partition in kbytes. &lt;code&gt;Capacity&lt;/code&gt; is the percentage of disk space used.</source>
          <target state="translated">최신 디스크 검사 결과를 반환합니다. &lt;code&gt;Id&lt;/code&gt; 는 디스크 또는 파티션을 식별하는 문자열입니다. &lt;code&gt;KByte&lt;/code&gt; 는 디스크 또는 파티션의 전체 크기 ( KB) 입니다. &lt;code&gt;Capacity&lt;/code&gt; 은 사용 된 디스크 공간의 백분율입니다.</target>
        </trans-unit>
        <trans-unit id="08fb64d1fcca474be353d73ce71ec40d76145dbb" translate="yes" xml:space="preserve">
          <source>Returns the result of the latest memory check, where &lt;code&gt;Total&lt;/code&gt; is the total memory size and &lt;code&gt;Allocated&lt;/code&gt; the allocated memory size, in bytes.</source>
          <target state="translated">최신 메모리 검사의 결과를 돌려 &lt;code&gt;Total&lt;/code&gt; 총 메모리 크기와 &lt;code&gt;Allocated&lt;/code&gt; 바이트, 할당 된 메모리 크기를.</target>
        </trans-unit>
        <trans-unit id="b00ec42ba8237ebfadd6315ade14b35bfd08f9e2" translate="yes" xml:space="preserve">
          <source>Returns the results of applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to all or some objects stored in table &lt;code&gt;Name&lt;/code&gt;. The order of the objects is not specified. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Name&lt;/code&gt; 에 저장된 모든 또는 일부 오브젝트에 일치 스펙 &lt;code&gt;MatchSpec&lt;/code&gt; 을 적용한 결과를 리턴합니다 . 개체의 순서가 지정되지 않았습니다. 일치 스펙에 대한 설명은 &lt;code&gt;ERTS User's Guide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6efe4481e69930df81a4ee722df788d22bd00f95" translate="yes" xml:space="preserve">
          <source>Returns the results of applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to some or all objects stored in table &lt;code&gt;Name&lt;/code&gt;. The order of the objects is not specified. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;.</source>
          <target state="translated">일치 스펙 &lt;code&gt;MatchSpec&lt;/code&gt; 을 테이블 &lt;code&gt;Name&lt;/code&gt; 에 저장된 일부 또는 모든 오브젝트 에 적용한 결과를 리턴합니다 . 개체의 순서가 지정되지 않았습니다. 일치 스펙에 대한 설명은 &lt;code&gt;ERTS User's Guide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a69f43778418dcd230b6c80b662a5cf2771aac1f" translate="yes" xml:space="preserve">
          <source>Returns the return type subtrees of a &lt;code&gt;function_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function_type&lt;/code&gt; 노드 의 리턴 유형 서브 트리를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="cb40bb7ee217b76d4a18e20b3dd0e03ef80b7a49" translate="yes" xml:space="preserve">
          <source>Returns the reverse list of the grapheme clusters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Grapheme 클러스터의 역 목록을 &lt;code&gt;String&lt;/code&gt; 으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="26c1c1e09a3dec81e00b7ab0615665b9c61ea7da" translate="yes" xml:space="preserve">
          <source>Returns the right argument subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; 노드 의 오른쪽 인수 서브 트리를 리턴 합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
