<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="d1be27ef0d2a3f64890f259db44beefa37af2c5b" translate="yes" xml:space="preserve">
          <source>Read more about maps in &lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt;Map Expressions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt;Map Expressions&lt;/a&gt;&lt;/code&gt; 에서 지도 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="9a94884a1eeb79bbde0f80da164882bdecb46069" translate="yes" xml:space="preserve">
          <source>Read more about ports in &lt;code&gt;&lt;a href=&quot;ports&quot;&gt;Ports and Port Drivers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ports&quot;&gt;Ports and Port Drivers&lt;/a&gt;&lt;/code&gt; 포트에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="554282f3efb20a0099d5f18b19f7a754b826fd3a" translate="yes" xml:space="preserve">
          <source>Read more about processes in &lt;code&gt;&lt;a href=&quot;processes&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">의 과정에 대해 더 자세히 &lt;code&gt;&lt;a href=&quot;processes&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdf0f64fa8afed2eb3ae3485ed6444efd4f45c5e" translate="yes" xml:space="preserve">
          <source>Read more about records in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;. More examples can be found in &lt;code&gt; Programming Examples&lt;/code&gt;.</source>
          <target state="translated">레코드에 대해 더 자세히 &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; . 더 많은 예제는 &lt;code&gt; Programming Examples&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d7bf0c0fc48b6429df321b465a4fd9dd18e68f80" translate="yes" xml:space="preserve">
          <source>Read more about records in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;. More examples can be found in &lt;code&gt;Programming Examples&lt;/code&gt;.</source>
          <target state="translated">레코드에 대해 더 자세히 &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; . 더 많은 예제는 &lt;code&gt;Programming Examples&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88c12fc1054e6dee5889bd067bef3dd784174d05" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;&lt;a href=&quot;../system_principles/versions&quot;&gt;version handling&lt;/a&gt;&lt;/code&gt; introduced in Erlang/OTP release 17, which also describes how to determine if an installation includes one or more patched applications.</source>
          <target state="translated">설치에 하나 이상의 패치 응용 프로그램이 포함되어 있는지 판별하는 방법을 설명하는 Erlang / OTP 릴리스 17에 도입 된 &lt;code&gt;&lt;a href=&quot;../system_principles/versions&quot;&gt;version handling&lt;/a&gt;&lt;/code&gt; 에 대해 자세히 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="14a34ee6b71b541ff094ed440e6eb395aa847e1b" translate="yes" xml:space="preserve">
          <source>Read more about the &lt;code&gt;version handling&lt;/code&gt; introduced in Erlang/OTP release 17, which also describes how to determine if an installation includes one or more patched applications.</source>
          <target state="translated">Erlang / OTP 릴리스 17에 도입 된 &lt;code&gt;version handling&lt;/code&gt; 에 대해 자세히 읽어보십시오. 또한 설치에 패치 된 응용 프로그램이 하나 이상 포함되어 있는지 확인하는 방법도 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5acd88bebed6795b6d43dc94e4d954048ae135b" translate="yes" xml:space="preserve">
          <source>Read more in &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Preprocessor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">전 &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Preprocessor&lt;/a&gt;&lt;/code&gt; 에서 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="25902641bc735ddad3dc3752e9e7cdf871e33269" translate="yes" xml:space="preserve">
          <source>Read more in &lt;code&gt;&lt;a href=&quot;typespec&quot;&gt;Types and Function specifications&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;typespec&quot;&gt;Types and Function specifications&lt;/a&gt;&lt;/code&gt; 에서 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="5a69c3fb0d365b68d3c46e0941661c9e79330cc2" translate="yes" xml:space="preserve">
          <source>Read operations may see sequentially inconsistent results with regard to concurrent write operations. Even if write operation A is done sequentially before write operation B, a concurrent reader may see any combination of A and B, including only B. A read operation is only guaranteed to see all writes done sequentially before the read. No writes are ever lost, but will eventually all be seen.</source>
          <target state="translated">읽기 작업은 동시 쓰기 작업과 관련하여 순차적으로 일치하지 않는 결과를 볼 수 있습니다. 쓰기 작업 A가 쓰기 작업 B 전에 순차적으로 수행 되더라도 동시 판독기는 B 만 포함하여 A와 B의 모든 조합을 볼 수 있습니다. 읽기 작업은 읽기 전에 순차적으로 수행 된 모든 쓰기를 볼 수만 있습니다. 쓰기가 손실되지는 않지만 결국 모두 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f648b4cd550b1fadddeedd092b40e39b527f7289" translate="yes" xml:space="preserve">
          <source>Read operations must be fast and performed in RAM.</source>
          <target state="translated">RAM에서 빠르게 읽기 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="fcc1f12b3d10e63c14a1f8d7961be76cc365a4c2" translate="yes" xml:space="preserve">
          <source>Read operations on the file return binaries rather than lists.</source>
          <target state="translated">리스트가 아닌 파일 리턴 바이너리에 대한 읽기 조작.</target>
        </trans-unit>
        <trans-unit id="a2e1d0549799772810864d99ca395221ead7f179" translate="yes" xml:space="preserve">
          <source>Read permission: group</source>
          <target state="translated">읽기 권한 : 그룹</target>
        </trans-unit>
        <trans-unit id="907dbe453adbd7fa6e280b4f6613faf3d07802de" translate="yes" xml:space="preserve">
          <source>Read permission: other</source>
          <target state="translated">읽기 권한 : 기타</target>
        </trans-unit>
        <trans-unit id="e07884b49a0e21ab3dba84b49e8cf1e33e98b370" translate="yes" xml:space="preserve">
          <source>Read permission: owner</source>
          <target state="translated">읽기 권한 : owner</target>
        </trans-unit>
        <trans-unit id="a9a2a9ac46cb0c7c5000cf0d6d9e745656ad5010" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from a binary. Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">바이너리 에서 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 을 읽습니다 . 읽기 인코딩을 반환하거나 유효한 인코딩이 없으면 &lt;code&gt;none&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b9bff9acfee5a49ed23833e2b2e81ce0eafcf087" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from a file. Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">파일 에서 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 을 읽습니다 . 읽기 인코딩을 반환하거나 유효한 인코딩이 없으면 &lt;code&gt;none&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="03addc218b3ecbd8505da6cd353ed8258e946c82" translate="yes" xml:space="preserve">
          <source>Read the current agent community config file.</source>
          <target state="translated">현재 에이전트 커뮤니티 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="02b971b894024a807e610f7f5b2b637f8dd97000" translate="yes" xml:space="preserve">
          <source>Read the current agent config file.</source>
          <target state="translated">현재 에이전트 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="342a88f5b0ef188a6710923ae2c68b182e32efef" translate="yes" xml:space="preserve">
          <source>Read the current agent context config file.</source>
          <target state="translated">현재 에이전트 컨텍스트 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="b6fc36e2d6043726f29d5d8f1c08f9f88ee70c74" translate="yes" xml:space="preserve">
          <source>Read the current agent notify config file.</source>
          <target state="translated">현재 에이전트 알림 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="3eb932c8851f4e2dc54a684ed2c99b02f3242cba" translate="yes" xml:space="preserve">
          <source>Read the current agent standard config file.</source>
          <target state="translated">현재 에이전트 표준 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="35433f92aa6ddf91ab8a32ad2893c1416b06ab17" translate="yes" xml:space="preserve">
          <source>Read the current agent target_addr config file.</source>
          <target state="translated">현재 에이전트 target_addr 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="78a4a501636d7de7588fd4069fcaa0ba16c5b911" translate="yes" xml:space="preserve">
          <source>Read the current agent target_params config file.</source>
          <target state="translated">현재 에이전트 target_params 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="fc9c3b2ea448e1950b438a66a1ac53da2c5c848c" translate="yes" xml:space="preserve">
          <source>Read the current agent usm config file.</source>
          <target state="translated">현재 에이전트 usm 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="a884a170d9e1573ebe82ea228079e20c5eb624ee" translate="yes" xml:space="preserve">
          <source>Read the current agent vacm config file.</source>
          <target state="translated">현재 에이전트 vacm 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="1cccddc3b38e21d434122b66beec2e249ff466f7" translate="yes" xml:space="preserve">
          <source>Read the current manager agents config file.</source>
          <target state="translated">현재 관리자 에이전트 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="5ea1df47d9a8182ee88ccdea1f6d44fd125d1e2e" translate="yes" xml:space="preserve">
          <source>Read the current manager config file.</source>
          <target state="translated">현재 관리자 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="bf1020e0b4f41cf2c22e11431cbaedc662a19f79" translate="yes" xml:space="preserve">
          <source>Read the current manager users config file.</source>
          <target state="translated">현재 관리자 사용자 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="59e482ad7bf583e0ad9e54f15735c13cf785f39c" translate="yes" xml:space="preserve">
          <source>Read the current manager usm config file.</source>
          <target state="translated">현재 manager usm 구성 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="72acd8bf1ebaf0ea0b01aa11fbf38683eff7f9c0" translate="yes" xml:space="preserve">
          <source>Read the embedded documentation by using the built-in shell functions &lt;code&gt;h/1,2,3&lt;/code&gt; or &lt;code&gt;ht/1,2,3&lt;/code&gt;.</source>
          <target state="translated">내장 셸 함수 &lt;code&gt;h/1,2,3&lt;/code&gt; 또는 &lt;code&gt;ht/1,2,3&lt;/code&gt; 을 사용하여 포함 된 설명서를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="235e5232a0514fada92feb1784bb81e7744ff84a" translate="yes" xml:space="preserve">
          <source>Read the pointer using an atomic memory operation at determined index in array.</source>
          <target state="translated">배열의 결정된 인덱스에서 원자 메모리 연산을 사용하여 포인터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="be2ba72b989b324a88b19ff039a27eab2a805aaf" translate="yes" xml:space="preserve">
          <source>Read the whole manual page if it is the first time you are using the transformations.</source>
          <target state="translated">변환을 처음 사용하는 경우 전체 매뉴얼 페이지를 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="0a736cf2a92b3cd68f6984820f5b1301a5650942" translate="yes" xml:space="preserve">
          <source>Read unlocks an rwlock. The rwlock currently must be read locked by the calling thread.</source>
          <target state="translated">읽기는 rwlock을 잠금 해제합니다. rwlock은 현재 호출 스레드에 의해 읽혀 져야합니다.</target>
        </trans-unit>
        <trans-unit id="ce3d31d0d015c1d0a226f6e114ecb8215a61f763" translate="yes" xml:space="preserve">
          <source>Read/write lock. Used to allow multiple threads to read shared data while only allowing one thread to write the same data. Multiple threads can read lock an rwlock at the same time, while only one thread can read/write lock an rwlock at a time.</source>
          <target state="translated">읽기 / 쓰기 잠금 하나의 스레드 만 동일한 데이터를 쓰도록 허용하면서 여러 스레드가 공유 데이터를 읽을 수 있도록하는 데 사용됩니다. 여러 스레드가 동시에 rwlock을 읽을 수있는 반면 한 스레드 만 한 번에 rwlock을 읽고 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a088a96620af47c2bef0d4a01c4765cd4908ac8e" translate="yes" xml:space="preserve">
          <source>Read/write locks an rwlock. The calling thread is blocked until the rwlock has been read/write locked. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; lock the same rwlock again.</source>
          <target state="translated">읽기 / 쓰기는 rwlock을 잠급니다. rwlock이 읽기 / 쓰기로 잠길 때까지 호출 스레드가 차단됩니다. 현재 rwlock을 읽거나 읽거나 쓴 잠금 스레드 는 동일한 rwlock을 다시 잠글 &lt;strong&gt;수 없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="88f7eef8181951ff1f841f14cc7c3dfc0d58e28f" translate="yes" xml:space="preserve">
          <source>Read/write unlocks an rwlock. The rwlock currently must be read/write locked by the calling thread.</source>
          <target state="translated">읽기 / 쓰기는 rwlock을 잠금 해제합니다. rwlock은 현재 호출 스레드에 의해 읽기 / 쓰기 잠금 상태 여야합니다.</target>
        </trans-unit>
        <trans-unit id="db3a2609cebf7e16af76fe0013217765a0dfa76f" translate="yes" xml:space="preserve">
          <source>Readability and maintainability suffer when test cases become too large and extensive. It is not certain that the resulting log files reflect very well the number of tests performed.</source>
          <target state="translated">테스트 사례가 너무 커지고 광범위 해지면 가독성과 유지 관리 성이 떨어집니다. 결과 로그 파일이 수행 된 테스트 수를 잘 반영하고 있는지는 확실하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a85d8890d6aa6702dddc217c7e6abcf877866f20" translate="yes" xml:space="preserve">
          <source>Reading Test Specification Terms</source>
          <target state="translated">테스트 사양 용어 읽기</target>
        </trans-unit>
        <trans-unit id="9aec65966a9a00d068d698cfbc5cbf74dcf30e9b" translate="yes" xml:space="preserve">
          <source>Reading and writing of files with Unicode data is, however, not best done with the &lt;code&gt;file&lt;/code&gt; module, as its interface is byte-oriented. A file opened with a Unicode encoding (like UTF-8) is best read or written using the &lt;code&gt;io&lt;/code&gt; module.</source>
          <target state="translated">그러나 유니 코드 데이터로 파일을 읽고 쓰는 것은 인터페이스가 바이트 지향적이므로 &lt;code&gt;file&lt;/code&gt; 모듈을 사용하는 것이 가장 좋습니다 . UTF-8과 같은 유니 코드 인코딩으로 열린 파일은 &lt;code&gt;io&lt;/code&gt; 모듈을 사용하여 가장 잘 읽거나 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4c222fd852ba1812493153ccc2dcc4014ebaf8c" translate="yes" xml:space="preserve">
          <source>Reading man pages. Make sure that &lt;code&gt;erl&lt;/code&gt; is referring to the installed version. For example &lt;code&gt;/usr/local/bin/erl&lt;/code&gt;. Try viewing at the man page for Mnesia</source>
          <target state="translated">매뉴얼 페이지를 읽는 중입니다. &lt;code&gt;erl&lt;/code&gt; 이 설치된 버전을 참조하고 있는지 확인하십시오 . 예를 들어 &lt;code&gt;/usr/local/bin/erl&lt;/code&gt; 입니다. Mnesia의 맨 페이지에서보십시오</target>
        </trans-unit>
        <trans-unit id="252f4b5e75f178405e6c8d8917b5a5ddac65f605" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Count&lt;/code&gt; characters from standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 &lt;code&gt;Count&lt;/code&gt; 문자를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다.</target>
        </trans-unit>
        <trans-unit id="f6c0eac8f5e6c09bd6f995de56f2885b56f262d1" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Len&lt;/code&gt; bytes from the file referenced by &lt;code&gt;Handle&lt;/code&gt;. Returns &lt;code&gt;{ok, Data}&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt;, or &lt;code&gt;{error, reason()}&lt;/code&gt;. If the file is opened with &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt; is a binary, otherwise it is a string.</source>
          <target state="translated">&lt;code&gt;Handle&lt;/code&gt; 에서 참조하는 파일에서 &lt;code&gt;Len&lt;/code&gt; 바이트를 읽습니다 . &lt;code&gt;{ok, Data}&lt;/code&gt; , &lt;code&gt;eof&lt;/code&gt; 또는 &lt;code&gt;{error, reason()}&lt;/code&gt; 리턴 합니다. 파일이 열립니다 경우 &lt;code&gt;binary&lt;/code&gt; , &lt;code&gt;Data&lt;/code&gt; , 그렇지 않으면 문자열입니다, 바이너리입니다.</target>
        </trans-unit>
        <trans-unit id="daa50c7790746978f3529a39e628aa17d94fcef6" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;Number&lt;/code&gt; bytes/characters from the file referenced by &lt;code&gt;IoDevice&lt;/code&gt;. The functions &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pread-3&quot;&gt;pread/3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt; are the only ways to read from a file opened in &lt;code&gt;raw&lt;/code&gt; mode (although they work for normally opened files, too).</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; 가 참조하는 파일에서 &lt;code&gt;Number&lt;/code&gt; 바이트 / 문자를 읽 습니다 . &lt;code&gt;&lt;a href=&quot;#read-2&quot;&gt;read/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#pread-3&quot;&gt;pread/3&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#read_line-1&quot;&gt;read_line/1&lt;/a&gt;&lt;/code&gt; 함수 는 &lt;code&gt;raw&lt;/code&gt; 모드 에서 열린 파일에서 읽는 유일한 방법 입니다 (일반적으로 열린 파일에서도 작동하지만).</target>
        </trans-unit>
        <trans-unit id="f70ae81f047ca6b4913a5ff1eb01e17721a1df8e" translate="yes" xml:space="preserve">
          <source>Reads Erlang terms, separated by '.', from &lt;code&gt;Filename&lt;/code&gt;. Returns one of the following:</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 에서 '.'으로 구분 된 Erlang 용어를 읽습니다 . 다음 중 하나를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="be3d677dc62d08604840b02570c3e7442cfa5893" translate="yes" xml:space="preserve">
          <source>Reads a (virtual) file &lt;code&gt;RemoteFilename&lt;/code&gt; from a TFTP server.</source>
          <target state="translated">TFTP 서버에서 (가상) 파일 &lt;code&gt;RemoteFilename&lt;/code&gt; 을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="475ab7b68b4f86a328c596114c612ba9ab111e93" translate="yes" xml:space="preserve">
          <source>Reads a chunk from the file.</source>
          <target state="translated">파일에서 청크를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="bcf09f51900c4beb18f4a5c9714ec92cbd388e75" translate="yes" xml:space="preserve">
          <source>Reads a file from the server, and returns the data in a binary.</source>
          <target state="translated">서버에서 파일을 읽고 이진으로 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f13fb58163293d1d5534935f27c0725ebb880c11" translate="yes" xml:space="preserve">
          <source>Reads a file produced by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt; tab2file/3&lt;/a&gt;&lt;/code&gt; and creates the corresponding table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt; tab2file/3&lt;/a&gt;&lt;/code&gt; 에 의해 생성 된 파일을 읽고 해당 테이블 &lt;code&gt;Tab&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b49974d81fdb55dee47f409f1072646256f1f8c7" translate="yes" xml:space="preserve">
          <source>Reads a file produced by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; and creates the corresponding table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt; tab2file/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; 에 의해 생성 된 파일을 읽고 해당 테이블 &lt;code&gt;Tab&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5d10f6f7263be88bc8003790c8726391f4e9dbdf" translate="yes" xml:space="preserve">
          <source>Reads a file produced by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; and creates the corresponding table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; 에 의해 생성 된 파일을 읽고 해당 테이블 &lt;code&gt;Tab&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="dc54f5017946e86d78cdba6d809d92457be885be" translate="yes" xml:space="preserve">
          <source>Reads a line from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 라인을 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다.</target>
        </trans-unit>
        <trans-unit id="36b17ad13f0b033f6df4a993a7b171c360fa8c45" translate="yes" xml:space="preserve">
          <source>Reads a line of bytes/characters from the file referenced by &lt;code&gt;IoDevice&lt;/code&gt;. Lines are defined to be delimited by the linefeed (LF, &lt;code&gt;\n&lt;/code&gt;) character, but any carriage return (CR, &lt;code&gt;\r&lt;/code&gt;) followed by a newline is also treated as a single LF character (the carriage return is silently ignored). The line is returned &lt;strong&gt;including&lt;/strong&gt; the LF, but excluding any CR immediately followed by an LF. This behaviour is consistent with the behaviour of &lt;code&gt;io:get_line/2&lt;/code&gt;. If end of file is reached without any LF ending the last line, a line with no trailing LF is returned.</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; 가 참조하는 파일에서 바이트 / 문자 행을 읽 습니다 . 줄은 줄 바꿈 (LF, &lt;code&gt;\n&lt;/code&gt; ) 문자 로 구분되도록 정의 되지만 줄 바꿈 뒤에 오는 캐리지 리턴 (CR, &lt;code&gt;\r&lt;/code&gt; )은 단일 LF 문자로 취급됩니다 (캐리지 리턴은 자동으로 무시됩니다). LF를 &lt;strong&gt;포함&lt;/strong&gt; 하여 행이 리턴 되지만 CR 뒤에 바로 LF가 있으면 제외됩니다. 이 동작은 &lt;code&gt;io:get_line/2&lt;/code&gt; 동작과 일치합니다 . LF가 마지막 행을 종료하지 않고 파일 끝에 도달하면 후행 LF가없는 행이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="aae52d304fd52a828dbf2eedbff2f04b0029c986" translate="yes" xml:space="preserve">
          <source>Reads a row by its SNMP index. This index is specified as an SNMP Object Identifier, a list of integers.</source>
          <target state="translated">SNMP 색인으로 행을 읽습니다. 이 색인은 정수 목록 인 SNMP 객체 식별자로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="924401b1eb28056e84b4ed03a3d14e9118c06d0d" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from &lt;code&gt;IoDevice&lt;/code&gt;, prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt;. Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; 에서 용어 &lt;code&gt;Term&lt;/code&gt; 을 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다. 읽기는 &lt;code&gt;StartLocation&lt;/code&gt; 위치에서 시작됩니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="842ce7e26143e68269e6af73ca149569ed32c0c5" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from &lt;code&gt;IoDevice&lt;/code&gt;, prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt;. Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; 에서 &lt;code&gt;Term&lt;/code&gt; 이라는 용어 를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 와 함께 프롬프트 합니다. &lt;code&gt;StartLocation&lt;/code&gt; 위치에서 읽기가 시작됩니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d4db0c3277853bee5baecd76ea077556e6a19fa" translate="yes" xml:space="preserve">
          <source>Reads a term &lt;code&gt;Term&lt;/code&gt; from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 용어 &lt;code&gt;Term&lt;/code&gt; 을 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다.</target>
        </trans-unit>
        <trans-unit id="ac643941e9886622de2937798fd5270edc0fabf5" translate="yes" xml:space="preserve">
          <source>Reads a time stamp into the memory pointed to by parameter &lt;code&gt;now&lt;/code&gt;. For information about specific fields, see &lt;code&gt;&lt;a href=&quot;#ErlDrvNowData&quot;&gt;ErlDrvNowData&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;now&lt;/code&gt; 매개 변수가 가리키는 메모리에 타임 스탬프를 읽습니다 . 특정 필드에 대한 정보는 &lt;code&gt;&lt;a href=&quot;#ErlDrvNowData&quot;&gt;ErlDrvNowData&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c19818e3b583cae64bcc594ab0744745d21d8def" translate="yes" xml:space="preserve">
          <source>Reads all records from table &lt;code&gt;Tab&lt;/code&gt; with key &lt;code&gt;Key&lt;/code&gt;. This function has the same semantics regardless of the location of &lt;code&gt;Tab&lt;/code&gt;. If the table is of type &lt;code&gt;bag&lt;/code&gt;, the function &lt;code&gt;mnesia:read(Tab, Key)&lt;/code&gt; can return an arbitrarily long list. If the table is of type &lt;code&gt;set&lt;/code&gt;, the list is either of length 1, or &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">키 &lt;code&gt;Key&lt;/code&gt; 를 사용 하여 테이블 &lt;code&gt;Tab&lt;/code&gt; 에서 모든 레코드를 읽습니다 . 이 함수는 &lt;code&gt;Tab&lt;/code&gt; 위치에 관계없이 동일한 의미를 갖습니다 . 테이블이 &lt;code&gt;bag&lt;/code&gt; 유형 인 경우 &lt;code&gt;mnesia:read(Tab, Key)&lt;/code&gt; 함수 는 임의로 긴 목록을 리턴 할 수 있습니다. 테이블 유형이 &lt;code&gt;set&lt;/code&gt; 되면 목록의 길이는 1 또는 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5c89de20ea0caf916aed94b0b16edcd0fa5a8208" translate="yes" xml:space="preserve">
          <source>Reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression) from &lt;code&gt;Filename&lt;/code&gt;. The result of the evaluation is not returned; any expression sequence in the file must be there for its side effect. Returns one of the following:</source>
          <target state="translated">'.'으로 구분 된 Erlang 표현식을 읽고 평가합니다. &lt;code&gt;Filename&lt;/code&gt; 에서 (또는 ',', 일련의 표현식도 표현식입니다 .) 평가 결과는 반환되지 않습니다. 파일의 모든 표현식 순서는 부작용이 있어야합니다. 다음 중 하나를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a4538536a6029a3eaaa364e5024ba9396498603a" translate="yes" xml:space="preserve">
          <source>Reads and evaluates Erlang expressions, separated by '.' (or ',', a sequence of expressions is also an expression), from the file.</source>
          <target state="translated">'.'으로 구분 된 Erlang 표현식을 읽고 평가합니다. (또는 ',', 일련의 표현식은 표현식이기도합니다).</target>
        </trans-unit>
        <trans-unit id="f86a65da862e66ea58fe0b1e1894f4ad5ab8707c" translate="yes" xml:space="preserve">
          <source>Reads and parses a file. If successful, &lt;code&gt;{ok, Forms}&lt;/code&gt; is returned, where &lt;code&gt;Forms&lt;/code&gt; is a list of abstract syntax trees representing the &quot;program forms&quot; of the file (cf. &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt;). Otherwise, &lt;code&gt;{error, errorinfo()}&lt;/code&gt; is returned, typically if the file could not be opened. Note that parse errors show up as error markers in the returned list of forms; they do not cause this function to fail or return &lt;code&gt;{error, errorinfo()}&lt;/code&gt;.</source>
          <target state="translated">파일을 읽고 구문 분석합니다. 성공하면 &lt;code&gt;{ok, Forms}&lt;/code&gt; 가 리턴됩니다. 여기서 &lt;code&gt;Forms&lt;/code&gt; 는 파일의 &quot;프로그램 형식&quot;을 나타내는 추상 구문 트리 목록입니다 (예 : &lt;code&gt;erl_syntax:is_form/1&lt;/code&gt; ). 그렇지 않으면 일반적으로 파일을 열 수없는 경우 &lt;code&gt;{error, errorinfo()}&lt;/code&gt; 가 리턴됩니다. 구문 분석 오류는 반환 된 양식 목록에 오류 표시 자로 나타납니다. 이 함수는 실패하거나 &lt;code&gt;{error, errorinfo()}&lt;/code&gt; 리턴하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2920dcddbbb429fc599c5c461913301f70aa81e6" translate="yes" xml:space="preserve">
          <source>Reads and parses a single program form from an I/O stream. Characters are read from &lt;code&gt;IODevice&lt;/code&gt; until an end-of-form marker is found (a period character followed by whitespace), or until end-of-file; apart from this, the behaviour is similar to that of &lt;code&gt;parse/3&lt;/code&gt;, except that the return values also contain the final line number given that &lt;code&gt;StartLine&lt;/code&gt; is the initial line number, and that &lt;code&gt;{eof, LineNo}&lt;/code&gt; may be returned.</source>
          <target state="translated">I / O 스트림에서 단일 프로그램 양식을 읽고 구문 분석합니다. 양식 끝 마커가 발견 될 때까지 (마침표 문자 다음에 공백) 또는 파일 끝까지 문자 를 &lt;code&gt;IODevice&lt;/code&gt; 에서 읽습니다 . 이와는 별도로 &lt;code&gt;StartLine&lt;/code&gt; 이 초기 행 번호이고 &lt;code&gt;{eof, LineNo}&lt;/code&gt; 가 리턴 될 경우 리턴 값에도 최종 행 번호가 포함된다는 점을 제외 하면 동작은 &lt;code&gt;parse/3&lt;/code&gt; 의 동작과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="a5c3bcde53de74966bb137b9992cbcf8bea8b82b" translate="yes" xml:space="preserve">
          <source>Reads and parses program text from an I/O stream. Characters are read from &lt;code&gt;IODevice&lt;/code&gt; until end-of-file; apart from this, the behaviour is the same as for &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;StartLine&lt;/code&gt; is the initial line number, which should be a positive integer.</source>
          <target state="translated">I / O 스트림에서 프로그램 텍스트를 읽고 구문 분석합니다. 파일 끝까지 &lt;code&gt;IODevice&lt;/code&gt; 에서 문자를 읽습니다 . 이 외에도 동작은 &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt; 와 동일 합니다. &lt;code&gt;StartLine&lt;/code&gt; 은 초기 행 번호이며 양의 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="575313b04f7b2d9ade2c2ac804470bebb4ac3f46" translate="yes" xml:space="preserve">
          <source>Reads characters from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Interprets the characters in accordance with &lt;code&gt;Format&lt;/code&gt;. &lt;code&gt;Format&lt;/code&gt; contains control sequences that directs the interpretation of the input.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 문자를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다. &lt;code&gt;Format&lt;/code&gt; 에 따라 문자를 해석합니다 . &lt;code&gt;Format&lt;/code&gt; 은 입력의 해석을 지시하는 제어 순서를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="936b3c9cc90592c88890f5bba0974bbcc4534300" translate="yes" xml:space="preserve">
          <source>Reads chunk data for all chunks.</source>
          <target state="translated">모든 청크에 대한 청크 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="5478616d388c3efd3ce75d4d04ed80f7b653d5be" translate="yes" xml:space="preserve">
          <source>Reads chunk data for selected chunks references. The order of the returned list of chunk data is determined by the order of the list of chunks references.</source>
          <target state="translated">선택된 청크 참조에 대한 청크 데이터를 읽습니다. 반환 된 청크 데이터 목록의 순서는 청크 참조 목록의 순서에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="b313c71e885968a16f290931cc4dc9de8929bf2d" translate="yes" xml:space="preserve">
          <source>Reads configuration data values.</source>
          <target state="translated">구성 데이터 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="13f7c605e7acd7976580f43d7ca809054e752a0b" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it were a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This token is also returned.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 를 사용 하여 프롬프트 합니다. 읽기는 &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 위치에서 시작됩니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 마지막 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 일련의 Erlang 표현식 인 것처럼 토큰 화됩니다 . 이 토큰도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9149fffa2a35130db955805683d3e726e8bc00d9" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Reading starts at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it were a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This token is also returned.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다. 위치 &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 에서 읽기가 시작됩니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 최종 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 일련의 Erlang 표현식 인 것처럼 토큰 화됩니다 . 이 토큰도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6fdbc20f04b0b1ab8374e8dfa4cbcce56f5fc71f" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 를 사용 하여 프롬프트 합니다. &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 위치에서 읽기를 시작합니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 최종 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 일련의 Erlang 표현식 인 것처럼 토큰 화되고 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="a73722344224605a28505b86d05b37692f6841a9" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 를 사용 하여 프롬프트 합니다. &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 위치에서 읽기를 시작합니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 최종 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 Erlang 형식 (Erlang 소스 파일의 유효한 Erlang 표현식 중 하나) 인 것처럼 토큰 화되고 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="55c4fe1fe028eb597a540f4c982bb0cca84e6065" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This last token is also returned.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 를 사용 하여 프롬프트 합니다. &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 위치에서 읽기를 시작합니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt; erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 마지막 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 Erlang 형식 (Erlang 소스 파일의 유효한 Erlang 표현식 중 하나) 인 것처럼 토큰 화됩니다 . 이 마지막 토큰도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="374c9ef16799b9abb4e9d26f5fa912264a6e1657" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was a sequence of Erlang expressions until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다. 위치 &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 에서 읽기를 시작합니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 최종 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 일련의 Erlang 표현식 인 것처럼 토큰 화되고 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="b1cad2965b9c36b880989ab004d941243e0ccdf7" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized and parsed as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다. 위치 &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 에서 읽기를 시작합니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 최종 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 Erlang 양식 (Erlang 소스 파일의 유효한 Erlang 표현식 중 하나) 인 것처럼 토큰 화되고 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="595f61201ea85ff9dc6c8defa70b03e0e2371abf" translate="yes" xml:space="preserve">
          <source>Reads data from the standard input (&lt;code&gt;IoDevice&lt;/code&gt;), prompting it with &lt;code&gt;Prompt&lt;/code&gt;. Starts reading at location &lt;code&gt;StartLocation&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;). Argument &lt;code&gt;Options&lt;/code&gt; is passed on as argument &lt;code&gt;Options&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt;. The data is tokenized as if it was an Erlang form (one of the valid Erlang expressions in an Erlang source file) until a final dot (&lt;code&gt;.&lt;/code&gt;) is reached. This last token is also returned.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;IoDevice&lt;/code&gt; ) 에서 데이터를 읽고 &lt;code&gt;Prompt&lt;/code&gt; 로 프롬프트 합니다. 위치 &lt;code&gt;StartLocation&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ) 에서 읽기를 시작합니다 . 인수 &lt;code&gt;Options&lt;/code&gt; 인수로 전달됩니다 &lt;code&gt;Options&lt;/code&gt; 기능의 &lt;code&gt;&lt;a href=&quot;erl_scan#tokens-4&quot;&gt;erl_scan:tokens/4&lt;/a&gt;&lt;/code&gt; . 데이터는 최종 점 ( &lt;code&gt;.&lt;/code&gt; )에 도달 할 때까지 Erlang 양식 (Erlang 소스 파일의 유효한 Erlang 표현식 중 하나) 인 것처럼 토큰 화됩니다 . 이 마지막 토큰도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7e6941cdf993af413092c12f2be39dc87481f7cf" translate="yes" xml:space="preserve">
          <source>Reads data in parts from the file. This is intended for memory-limited machines that, for example, builds a tar file on a remote machine over SFTP, see &lt;code&gt; ssh_sftp:open_tar/3&lt;/code&gt;.</source>
          <target state="translated">파일에서 부분적으로 데이터를 읽습니다. 이는 예를 들어 SFTP를 통해 원격 시스템에 tar 파일을 빌드하는 메모리 제한 시스템을위한 것입니다 . &lt;code&gt; ssh_sftp:open_tar/3&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="adade152b720618374d89b5e6eb7f3a1c8be4d9d" translate="yes" xml:space="preserve">
          <source>Reads data in parts from the file. This is intended for memory-limited machines that, for example, builds a tar file on a remote machine over SFTP, see &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt;.</source>
          <target state="translated">파일에서 부분적으로 데이터를 읽습니다. 예를 들어 SFTP를 통해 원격 시스템에 tar 파일을 작성하는 메모리 제한 시스템을위한 것입니다 ( &lt;code&gt;ssh_sftp:open_tar/3&lt;/code&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="b2dd7f9783c71e871e5a5536f61fe7d2f34a7b79" translate="yes" xml:space="preserve">
          <source>Reads each &lt;code&gt;Mod&lt;/code&gt; from directory &lt;code&gt;App-Vsn/ebin&lt;/code&gt; as a binary. It does not load the modules. The instruction is to be placed first in the script to read all new code from the file to make the suspend-load-resume cycle less time-consuming.</source>
          <target state="translated">&lt;code&gt;App-Vsn/ebin&lt;/code&gt; 디렉토리에서 각 &lt;code&gt;Mod&lt;/code&gt; 를 바이너리로 읽습니다 . 모듈을로드하지 않습니다. 명령은 스크립트에서 첫 번째로 배치되어 파일에서 모든 새 코드를 읽고 일시 중단-로드-재개주기를 줄 이도록합니다.</target>
        </trans-unit>
        <trans-unit id="5f9e8132777eeeea0b0b9630390bdccb83499a2f" translate="yes" xml:space="preserve">
          <source>Reads file &lt;code&gt;.hosts.erlang&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt;. Returns the hosts in this file as a list. Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if the file cannot be read or the Erlang terms on the file cannot be interpreted.</source>
          <target state="translated">파일 읽어 &lt;code&gt;.hosts.erlang&lt;/code&gt; 을 , 섹션 참조 &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; . 이 파일의 호스트를리스트로 돌려줍니다. 파일을 읽을 수 없거나 파일의 Erlang 용어를 해석 할 수없는 경우 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="acd0eef8d72bba8b5179acfa61549202aee45b07" translate="yes" xml:space="preserve">
          <source>Reads from an open file, without waiting for the result. If the handle is valid, the function returns &lt;code&gt;{async, N}&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is a term guaranteed to be unique between calls of &lt;code&gt;aread&lt;/code&gt;. The actual data is sent as a message to the calling process. This message has the form &lt;code&gt;{async_reply, N, Result}&lt;/code&gt;, where &lt;code&gt;Result&lt;/code&gt; is the result from the read, either &lt;code&gt;{ok, Data}&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt;, or &lt;code&gt;{error, reason()}&lt;/code&gt;.</source>
          <target state="translated">결과를 기다리지 않고 열린 파일에서 읽습니다. 핸들이 유효하면이 함수는 &lt;code&gt;{async, N}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;N&lt;/code&gt; 은 &lt;code&gt;aread&lt;/code&gt; 호출 사이에서 고유함을 보장하는 용어 입니다. 실제 데이터는 호출 프로세스에 메시지로 전송됩니다. 이 메시지의 형식은 &lt;code&gt;{async_reply, N, Result}&lt;/code&gt; . 여기서 &lt;code&gt;Result&lt;/code&gt; 는 &lt;code&gt;{ok, Data}&lt;/code&gt; , &lt;code&gt;eof&lt;/code&gt; 또는 &lt;code&gt;{error, reason()}&lt;/code&gt; 읽기 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="473a3f49d1f005cdbfb18d83b547219146f6b620" translate="yes" xml:space="preserve">
          <source>Reads information about the timetrap set for the current test case. &lt;code&gt;Scaling&lt;/code&gt; indicates if &lt;code&gt;Common Test&lt;/code&gt; will attempt to compensate timetraps automatically for runtime delays introduced by, for example, tools like cover. &lt;code&gt;ScaleVal&lt;/code&gt; is the value of the current scaling multipler (always 1 if scaling is disabled). Note the &lt;code&gt;Time&lt;/code&gt; is not the scaled result.</source>
          <target state="translated">현재 테스트 케이스에 설정된 타임 트랩에 대한 정보를 읽습니다. &lt;code&gt;Scaling&lt;/code&gt; 은 &lt;code&gt;Common Test&lt;/code&gt; 가 예를 들어 cover와 같은 도구에 의해 도입 된 런타임 지연에 대해 자동으로 타임 트랩을 보상하려고 시도 하는지 여부를 나타냅니다 . &lt;code&gt;ScaleVal&lt;/code&gt; 은 현재 스케일링 멀티플렉서의 값입니다 (스케일링이 비활성화 된 경우 항상 1). 메모 &lt;code&gt;Time&lt;/code&gt; 스케일링 된 결과가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5cb0a0e95145733613cfe1c4d5d32a786e548cb7" translate="yes" xml:space="preserve">
          <source>Reads one or more terms from the test specification used to configure and run this test. &lt;code&gt;Tag&lt;/code&gt; is any valid test specification tag, for example, &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;, or &lt;code&gt;logdir&lt;/code&gt;. User-specific terms are also available to read if option &lt;code&gt;allow_user_terms&lt;/code&gt; is set.</source>
          <target state="translated">이 테스트를 구성하고 실행하는 데 사용 된 테스트 사양에서 하나 이상의 용어를 읽습니다. &lt;code&gt;Tag&lt;/code&gt; 는 유효한 테스트 사양 태그입니다 (예 : &lt;code&gt;label&lt;/code&gt; , &lt;code&gt;config&lt;/code&gt; 또는 &lt;code&gt;logdir&lt;/code&gt; ) . &lt;code&gt;allow_user_terms&lt;/code&gt; 옵션 이 설정된 경우 사용자 별 용어를 읽을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9678f45370812f85bf721cb4a46a673223c64b44" translate="yes" xml:space="preserve">
          <source>Reads record definitions from a module's BEAM file. If there are no record definitions in the BEAM file, the source file is located and read instead. Returns the names of the record definitions read. &lt;code&gt;Module&lt;/code&gt; is an atom.</source>
          <target state="translated">모듈의 BEAM 파일에서 레코드 정의를 읽습니다. BEAM 파일에 레코드 정의가 없으면 소스 파일을 찾아서 대신 읽습니다. 읽은 레코드 정의의 이름을 리턴합니다. &lt;code&gt;Module&lt;/code&gt; 은 원자입니다.</target>
        </trans-unit>
        <trans-unit id="df8cc01b9c5d974fd88821805f092bbf2d9438ba" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files but discards record names not mentioned in &lt;code&gt;RecordNames&lt;/code&gt; (a record name or a list of record names).</source>
          <target state="translated">파일에서 레코드 정의를 &lt;code&gt;RecordNames&lt;/code&gt; 언급되지 않은 레코드 이름 (레코드 이름 또는 레코드 이름 목록)은 버립니다 .</target>
        </trans-unit>
        <trans-unit id="c7a29df53eefec6311892690ec9b68fab17c6c71" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files. Existing definitions of any of the record names read are replaced. &lt;code&gt;Wildcard&lt;/code&gt; is a wildcard string as defined in &lt;code&gt;&lt;a href=&quot;filelib&quot;&gt;filelib(3)&lt;/a&gt;&lt;/code&gt;, but not an atom.</source>
          <target state="translated">파일에서 레코드 정의를 읽습니다. 읽은 레코드 이름의 기존 정의가 바뀝니다. &lt;code&gt;Wildcard&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;filelib&quot;&gt;filelib(3)&lt;/a&gt;&lt;/code&gt; 정의 된 와일드 카드 문자열 이지만 원자는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1d4affa78ab45ecbfb3d3d5e0421aca7b1d8b2a0" translate="yes" xml:space="preserve">
          <source>Reads record definitions from files. The compiler options &lt;code&gt;{i,&amp;nbsp;Dir}&lt;/code&gt;, &lt;code&gt;{d,&amp;nbsp;Macro}&lt;/code&gt;, and &lt;code&gt;{d,&amp;nbsp;Macro,&amp;nbsp;Value}&lt;/code&gt; are recognized and used for setting up the include path and macro definitions. To read all record definitions, use &lt;code&gt;'_'&lt;/code&gt; as value of &lt;code&gt;RecordNames&lt;/code&gt;.</source>
          <target state="translated">파일에서 레코드 정의를 읽습니다. 컴파일러 옵션 &lt;code&gt;{i,&amp;nbsp;Dir}&lt;/code&gt; , &lt;code&gt;{d,&amp;nbsp;Macro}&lt;/code&gt; 및 &lt;code&gt;{d,&amp;nbsp;Macro,&amp;nbsp;Value}&lt;/code&gt; 는 포함 경로 및 매크로 정의를 설정하는 데 인식 및 사용됩니다. 모든 레코드 정의를 읽으려면 &lt;code&gt;RecordNames&lt;/code&gt; 값으로 &lt;code&gt;'_'&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a97a11fc0cb6ea77a20ef2c272dd9b0c766b3e97" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by &lt;code&gt;File&lt;/code&gt; is not affected. If no valid encoding can be read from the I/O device, the encoding of the I/O device is set to the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; specified by &lt;code&gt;Default&lt;/code&gt;.</source>
          <target state="translated">I / O 장치에서 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 을 읽고 그에 따라 장치의 인코딩을 설정합니다. &lt;code&gt;File&lt;/code&gt; 이 참조하는 I / O 장치의 위치는 영향을받지 않습니다. I / O 장치에서 유효한 인코딩을 읽을 수없는 경우 I / O 장치의 인코딩은 &lt;code&gt;Default&lt;/code&gt; 로 지정된 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 으로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="5f93ddca5006ccdbb3f7596d1f8a8390df9f011d" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; from an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by &lt;code&gt;File&lt;/code&gt; is not affected. If no valid encoding can be read from the I/O device, the encoding of the I/O device is set to the default encoding.</source>
          <target state="translated">I / O 장치에서 &lt;code&gt;&lt;a href=&quot;#encoding&quot;&gt;encoding&lt;/a&gt;&lt;/code&gt; 을 읽고 그에 따라 장치의 인코딩을 설정합니다. &lt;code&gt;File&lt;/code&gt; 이 참조하는 I / O 장치의 위치는 영향을받지 않습니다. I / O 장치에서 유효한 인코딩을 읽을 수 없으면 I / O 장치의 인코딩이 기본 인코딩으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="a7c87f7c3cd992fe79a2c1b8d950c1deaacc9012" translate="yes" xml:space="preserve">
          <source>Reads the application configuration parameter &lt;code&gt;logger&lt;/code&gt; and calls &lt;code&gt;add_handlers/1&lt;/code&gt; with its contents.</source>
          <target state="translated">응용 프로그램 구성 매개 변수 &lt;code&gt;logger&lt;/code&gt; 읽고 내용으로 &lt;code&gt;add_handlers/1&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="0978dc894d2a71b1cf1cfdef66ccd9de4a864810" translate="yes" xml:space="preserve">
          <source>Reads the current time of a timer, and places the result in &lt;code&gt;time_left&lt;/code&gt;. This is the time in milliseconds, before the time-out occurs.</source>
          <target state="translated">타이머의 현재 시간을 읽고 &lt;code&gt;time_left&lt;/code&gt; 에 결과를 배치 합니다. 시간이 초과되기 전의 시간 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="ef330399fd66929e3d50b54bbdd55115fbd0d652" translate="yes" xml:space="preserve">
          <source>Reads the file &lt;code&gt;Filename&lt;/code&gt; and creates raw profile data that is stored in RAM by the &lt;code&gt;fprof&lt;/code&gt; server. If the option &lt;code&gt;file&lt;/code&gt; is given, or none of these options are given, the file &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; is read. The call will return when the whole trace has been read with the return value &lt;code&gt;ok&lt;/code&gt; if successful. This option is not allowed with the &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;stop&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; 파일을 읽고 &lt;code&gt;fprof&lt;/code&gt; 서버 가 RAM에 저장 한 원시 프로파일 데이터를 작성 합니다. 옵션 &lt;code&gt;file&lt;/code&gt; 이 제공되거나 이러한 옵션이 제공되지 &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; 파일을 읽습니다. 성공 하면 반환 값이 &lt;code&gt;ok&lt;/code&gt; 인 전체 트레이스를 읽었을 때 호출이 반환됩니다 . 이 옵션은 &lt;code&gt;start&lt;/code&gt; 또는 &lt;code&gt;stop&lt;/code&gt; 옵션 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="49742bfb294b102cbe18de7cfaaa6d790db477e2" translate="yes" xml:space="preserve">
          <source>Reads the file &lt;code&gt;mysystem.rel&lt;/code&gt; and creates a new file &lt;code&gt;plain.rel&lt;/code&gt; that is identical to the former, except that it only lists the Kernel and STDLIB applications.</source>
          <target state="translated">&lt;code&gt;mysystem.rel&lt;/code&gt; 파일을 읽고 이전 파일 과 동일한 새 파일 &lt;code&gt;plain.rel&lt;/code&gt; 을 작성 합니다 (단, 커널 및 STDLIB 애플리케이션 만 나열 함).</target>
        </trans-unit>
        <trans-unit id="f903b588a4d361175c96f10e6de158fead02c148" translate="yes" xml:space="preserve">
          <source>Reads the link target from the symbolic link specified by &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 으로 지정된 심볼릭 링크에서 링크 대상을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="e21a2e27c60061a5209d8bcd0b5afd002f70ac3e" translate="yes" xml:space="preserve">
          <source>Reads the next chunk of uncompressed data, initialized by &lt;code&gt;&lt;a href=&quot;#inflateChunk-2&quot;&gt;inflateChunk/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#inflateChunk-2&quot;&gt;inflateChunk/2&lt;/a&gt;&lt;/code&gt; 로 초기화 된 비 압축 데이터의 다음 청크를 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="a4416420a93781bcc0dc5f8a20da753372346242" translate="yes" xml:space="preserve">
          <source>Reads the referenced XML schema and checks that it is valid. Returns the &lt;code&gt;global_state()&lt;/code&gt; with schema info or an error reason. The error reason may be a list of several errors or a single error encountered during the processing.</source>
          <target state="translated">참조 된 XML 스키마를 읽고 유효한지 확인하십시오. 스키마 정보 또는 오류 이유가 있는 &lt;code&gt;global_state()&lt;/code&gt; 를 리턴합니다 . 오류 이유는 여러 오류 목록 또는 처리 중에 발생한 단일 오류 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fd38efe5a280152c0ed35ee9c7f2ad0f403268c" translate="yes" xml:space="preserve">
          <source>Reads the referenced XML schemas and controls they are valid. Returns the &lt;code&gt;global_state()&lt;/code&gt; with schema info or an error reason. The error reason may be a list of several errors or a single error encountered during the processing.</source>
          <target state="translated">참조 된 XML 스키마를 읽고 유효한 스키마를 제어하십시오. 스키마 정보 또는 오류 이유가 있는 &lt;code&gt;global_state()&lt;/code&gt; 를 리턴합니다 . 오류 이유는 여러 오류 목록 또는 처리 중에 발생한 단일 오류 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9173077db3e9017296abe012415cae4350f279ec" translate="yes" xml:space="preserve">
          <source>Reads the runtime system version (&lt;code&gt;&quot;5.10.4&quot;&lt;/code&gt;) and release version (&lt;code&gt;&quot;FIRST&quot;&lt;/code&gt;) from the file &lt;code&gt;start_erl.data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start_erl.data&lt;/code&gt; 파일에서 런타임 시스템 버전 ( &lt;code&gt;&quot;5.10.4&quot;&lt;/code&gt; ) 및 릴리스 버전 ( &lt;code&gt;&quot;FIRST&quot;&lt;/code&gt; )을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="839d040990703f858648a5ce1365721721986faf" translate="yes" xml:space="preserve">
          <source>Reads the schema state with all information of the processed schema from a file created with &lt;code&gt;state2file/[1,2]&lt;/code&gt;. The format of this file is internal. The state can then be used validating an XML document.</source>
          <target state="translated">&lt;code&gt;state2file/[1,2]&lt;/code&gt; 로 작성된 파일에서 처리 된 스키마의 모든 정보가있는 스키마 상태를 읽습니다 . 이 파일의 형식은 내부입니다. 그런 다음 상태를 사용하여 XML 문서를 검증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bce1e5c45b80097e6f2841595672e121dabebb10" translate="yes" xml:space="preserve">
          <source>Reads the specified binary trace log(s). The logs are processed in the order of their time stamps as long as option &lt;code&gt;disable_sort&lt;/code&gt; is not specified.</source>
          <target state="translated">지정된 이진 추적 로그를 읽습니다. &lt;code&gt;disable_sort&lt;/code&gt; 옵션을 지정하지 않으면 로그는 타임 스탬프 순서대로 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="148a9f2e73482a200b8b553fede2788e553b25f1" translate="yes" xml:space="preserve">
          <source>Reads the state of a timer that has been created by either &lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;TimerRef&lt;/code&gt; identifies the timer, and was returned by the BIF that created the timer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start_timer-4&quot;&gt;erlang:start_timer&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#send_after-4&quot;&gt;erlang:send_after&lt;/a&gt;&lt;/code&gt; 에 의해 작성된 타이머의 상태를 읽습니다 . &lt;code&gt;TimerRef&lt;/code&gt; 는 타이머를 식별하며 타이머를 만든 BIF에 의해 반환되었습니다.</target>
        </trans-unit>
        <trans-unit id="ce5cad4e11c1c94a9f2dab2d00983fc0cb846b46" translate="yes" xml:space="preserve">
          <source>Reads the state of a timer. The same as calling &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer(TimerRef, [])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">타이머 상태를 읽습니다. &lt;code&gt;&lt;a href=&quot;#read_timer-2&quot;&gt;erlang:read_timer(TimerRef, [])&lt;/a&gt;&lt;/code&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="4e4671accaaccd33457026d9518c140f9065b957" translate="yes" xml:space="preserve">
          <source>Reads using &lt;code&gt;UserData&lt;/code&gt; but only &lt;code&gt;Size&lt;/code&gt; bytes. Notice that there is only an arity-2 read function, not an arity-1 function.</source>
          <target state="translated">&lt;code&gt;UserData&lt;/code&gt; 를 사용하여 읽지 만 &lt;code&gt;Size&lt;/code&gt; 바이트 만 사용 합니다. arity-1 함수가 아니라 arity-2 읽기 함수 만 있다는 점에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="9aa5c569849cf218527f93f7dee3cdc648481493" translate="yes" xml:space="preserve">
          <source>Reads using &lt;code&gt;UserPrivate&lt;/code&gt; but only &lt;code&gt;Size&lt;/code&gt; bytes. Notice that there is only an arity-2 read function, not an arity-1 function.</source>
          <target state="translated">&lt;code&gt;UserPrivate&lt;/code&gt; 를 사용 하지만 &lt;code&gt;Size&lt;/code&gt; 바이트 만 사용하여 읽습니다 . arity-1 함수가 아니라 arity-2 읽기 기능 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="15d4f658eb0b3d94a3c309c489e7d4e9bdbc4f01" translate="yes" xml:space="preserve">
          <source>Realloc always moves. When enabled, reallocate operations are more or less translated into an allocate, copy, free sequence. This often reduces memory fragmentation, but costs performance.</source>
          <target state="translated">Realloc은 항상 움직입니다. 사용 가능한 경우 재 할당 조작은 할당, 복사, 사용 가능 시퀀스로 다소 변환됩니다. 이로 인해 메모리 조각화가 줄어들지 만 성능이 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="fd9c4c1a235d7360d6343d538e931ae913df1102" translate="yes" xml:space="preserve">
          <source>Reallocates memory allocated by &lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt; 에 의해 할당 된 메모리 를 &lt;code&gt;size&lt;/code&gt; 바이트로 재 할당 합니다.</target>
        </trans-unit>
        <trans-unit id="db92aea9f5fbc58fe0efec58ed9588b7d88ee22c" translate="yes" xml:space="preserve">
          <source>Reason :: term(),</source>
          <target state="translated">이유 :: term (),</target>
        </trans-unit>
        <trans-unit id="a0a2a239ec860ccef682b74f016b00e2580d58fe" translate="yes" xml:space="preserve">
          <source>Reasons for Crash Dumps (Slogan)</source>
          <target state="translated">크래시 덤프의 이유 (슬로건)</target>
        </trans-unit>
        <trans-unit id="6891013bdffc70486bc0bdf2c393714c46955deb" translate="yes" xml:space="preserve">
          <source>Rebalances &lt;code&gt;Tree1&lt;/code&gt;. Notice that this is rarely necessary, but can be motivated when many nodes have been deleted from the tree without further insertions. Rebalancing can then be forced to minimize lookup times, as deletion does not rebalance the tree.</source>
          <target state="translated">&lt;code&gt;Tree1&lt;/code&gt; 재조정 . 이것은 거의 필요하지 않지만 추가 삽입없이 트리에서 많은 노드가 삭제 된 경우 동기를 부여 할 수 있습니다. 삭제로 인해 트리의 균형이 재조정되지 않으므로 재조정을 통해 조회 시간을 최소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="562c2b623630d3b42ab3e60d86c0debcf41c1ff3" translate="yes" xml:space="preserve">
          <source>Rebalances the tree representation of &lt;code&gt;Set1&lt;/code&gt;. Notice that this is rarely necessary, but can be motivated when a large number of elements have been deleted from the tree without further insertions. Rebalancing can then be forced to minimise lookup times, as deletion does not rebalance the tree.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 의 트리 표현을 재조정합니다 . 이것은 거의 필요하지 않지만 추가 삽입없이 트리에서 많은 수의 요소가 삭제 된 경우 동기 부여가 가능합니다. 삭제로 인해 트리의 균형이 재조정되지 않으므로 재조정을 통해 조회 시간을 최소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65975122721ed3cffdcd5af89ade5a30eb41911c" translate="yes" xml:space="preserve">
          <source>Reboots the system by making the old release permanent, and calls &lt;code&gt;init:reboot()&lt;/code&gt; directly. The release must have status &lt;code&gt;old&lt;/code&gt;.</source>
          <target state="translated">이전 릴리스를 영구적으로 만들어 시스템을 재부팅하고 &lt;code&gt;init:reboot()&lt;/code&gt; 직접 호출 합니다 . 릴리스 상태는 &lt;code&gt;old&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="8c8fcc6bcad22e8881501a52755eed515b289cd8" translate="yes" xml:space="preserve">
          <source>Rec :: tuple(),</source>
          <target state="translated">Rec :: tuple(),</target>
        </trans-unit>
        <trans-unit id="066b0a9b98c67082184c0fd76a1b9f6c1720b94b" translate="yes" xml:space="preserve">
          <source>Recall that Erlang has distinct 1-tuples, i.e., &lt;code&gt;{X}&lt;/code&gt; is always distinct from &lt;code&gt;X&lt;/code&gt; itself.</source>
          <target state="translated">Erlang에는 고유 한 1- 튜플이 있습니다. 즉, &lt;code&gt;{X}&lt;/code&gt; 는 항상 &lt;code&gt;X&lt;/code&gt; 자체와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="c151c49267645ae0a3f97285a4421925221ab63e" translate="yes" xml:space="preserve">
          <source>Recall that a call is a pair (From, To). &lt;code&gt;domain&lt;/code&gt; applied to a set of calls is interpreted as the set of all vertices From, and &lt;code&gt;range&lt;/code&gt; as the set of all vertices To. The interpretation of the &lt;code&gt;strict&lt;/code&gt; operator is the operand with all calls on the form (A, A) removed.</source>
          <target state="translated">통화는 한 쌍 (발신인, 도착 인)임을 상기하십시오. 일련의 호출에 적용된 &lt;code&gt;domain&lt;/code&gt; 은 모든 정점의 시작으로 해석되고 &lt;code&gt;range&lt;/code&gt; 는 모든 정점의 설정으로 해석됩니다 . &lt;code&gt;strict&lt;/code&gt; 연산자 의 해석은 (A, A) 형식의 모든 호출이 제거 된 피연산자입니다.</target>
        </trans-unit>
        <trans-unit id="444043db45120b29bd6d6d53a99709c813005225" translate="yes" xml:space="preserve">
          <source>Recall that in Erlang, the tail element of a list constructor is not necessarily a list.</source>
          <target state="translated">Erlang에서 목록 생성자의 꼬리 요소가 반드시 목록 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="cd036034f0d0a7f389eff3ef5a4661106a510dd9" translate="yes" xml:space="preserve">
          <source>Recall that the tail does not necessarily represent a proper list.</source>
          <target state="translated">꼬리가 반드시 적절한 목록을 나타내는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b5863b43935fb979fdf716a6bc7c98a6730127bb" translate="yes" xml:space="preserve">
          <source>Receive a message from a socket.</source>
          <target state="translated">소켓에서 메시지를받습니다.</target>
        </trans-unit>
        <trans-unit id="38292e4d25ddd4690c5032b86bfa672fe71f52bc" translate="yes" xml:space="preserve">
          <source>Receive a response to a &lt;code&gt;call&lt;/code&gt; request previously made by the calling process using &lt;code&gt;&lt;a href=&quot;#send_request-4&quot;&gt;erpc:send_request/4&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;RequestId&lt;/code&gt; should be the value returned from the previously made &lt;code&gt;erpc:send_request()&lt;/code&gt; call, and the corresponding response should not already have been received and handled to completion by &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt;erpc:check_response()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;erpc:receive_response()&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt;erpc:wait_response()&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Timeout&lt;/code&gt; is an integer representing the timeout in milliseconds or the atom &lt;code&gt;infinity&lt;/code&gt; which prevents the operation from ever timing out. The &lt;code&gt;call&lt;/code&gt; operation is completed once the &lt;code&gt;erpc:receive_response()&lt;/code&gt; call returns or raise an exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#send_request-4&quot;&gt;erpc:send_request/4&lt;/a&gt;&lt;/code&gt; 를 사용하여 이전에 호출 프로세스에서 만든 &lt;code&gt;call&lt;/code&gt; 요청에 대한 응답을받습니다 . &lt;code&gt;RequestId&lt;/code&gt; 는 이전에 수행 한 &lt;code&gt;erpc:send_request()&lt;/code&gt; 호출 에서 반환 된 값이어야하며 해당 응답이 &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt;erpc:check_response()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;erpc:receive_response()&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt;erpc:wait_response()&lt;/a&gt;&lt;/code&gt; 의해 이미 수신 및 처리되지 않아야합니다. . &lt;code&gt;Timeout&lt;/code&gt; 는 시간 초과를 밀리 초 단위로 나타내는 정수 또는 작업 시간 초과 를 방지하는 원자 &lt;code&gt;infinity&lt;/code&gt; 입니다. &lt;code&gt;call&lt;/code&gt; 작업은 일단 완료 &lt;code&gt;erpc:receive_response()&lt;/code&gt; 호출은 예외를 반환하거나 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="fbe39f3322855d03ba354f72c527385f73d95360" translate="yes" xml:space="preserve">
          <source>Receive buffer size.</source>
          <target state="translated">수신 버퍼 크기.</target>
        </trans-unit>
        <trans-unit id="4ae1a5ec8aa92d4958acd89043f891f02e540bf3" translate="yes" xml:space="preserve">
          <source>Receive notification of a notation declaration event.</source>
          <target state="translated">표기법 선언 이벤트의 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="5544b22e095d4110eb969347412c5f0ad7a7eb1f" translate="yes" xml:space="preserve">
          <source>Receive notification of a processing instruction. The Parser will send this event once for each processing instruction found: note that processing instructions may occur before or after the main document element.</source>
          <target state="translated">처리 명령의 알림을받습니다. 파서는 발견 된 각 처리 명령에 대해이 이벤트를 한 번 전송합니다. 처리 명령은 기본 문서 요소 전후에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbbc3c20409ab8df6511a3a9d041b81bc1f03484" translate="yes" xml:space="preserve">
          <source>Receive notification of an unparsed entity declaration event.</source>
          <target state="translated">구문 분석되지 않은 엔티티 선언 이벤트에 대한 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="b0f707ac12424cf8350e1640b548139d4dcbc752" translate="yes" xml:space="preserve">
          <source>Receive notification of character data.</source>
          <target state="translated">캐릭터 데이터의 통지를받습니다.</target>
        </trans-unit>
        <trans-unit id="e1ed75deeb63816becb327823827f361dc002ace" translate="yes" xml:space="preserve">
          <source>Receive notification of ignorable whitespace in element content.</source>
          <target state="translated">요소 내용에서 무시할 수있는 공백에 대한 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="7ad2df2530dcae85b22b6938c6f4a1d9b0af6c9a" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of a document. The SAX parser will send this event only once before any other event callbacks.</source>
          <target state="translated">문서 시작 알림을받습니다. SAX 파서는이 이벤트를 다른 이벤트 콜백 전에 한 번만 보냅니다.</target>
        </trans-unit>
        <trans-unit id="877d2315fff28722da3564b35f709435f38d644a" translate="yes" xml:space="preserve">
          <source>Receive notification of the beginning of an element. The Parser will send this event at the beginning of every element in the XML document; there will be a corresponding endElement event for every startElement event (even when the element is empty). All of the element's content will be reported, in order, before the corresponding endElement event.</source>
          <target state="translated">요소의 시작에 대한 알림을받습니다. 파서는 XML 문서의 모든 요소가 시작될 때이 이벤트를 보냅니다. 모든 startElement 이벤트에 대해 해당 endElement 이벤트가 있습니다 (요소가 비어있는 경우에도). 해당 endElement 이벤트 전에 요소의 모든 내용이 순서대로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="8643851b60b52ba3b3a806063fe1eea7f4aff427" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of a document. The SAX parser will send this event only once, and it will be the last event during the parse.</source>
          <target state="translated">문서 끝의 알림을받습니다. SAX 구문 분석기는이 이벤트를 한 번만 전송하며 구문 분석 중 마지막 이벤트가됩니다.</target>
        </trans-unit>
        <trans-unit id="7bb259e3df1d0efa19aa9bec712acc5ac84cbaf8" translate="yes" xml:space="preserve">
          <source>Receive notification of the end of an element. The SAX parser will send this event at the end of every element in the XML document; there will be a corresponding startElement event for every endElement event (even when the element is empty).</source>
          <target state="translated">요소의 끝의 통지를받습니다. SAX 파서는이 이벤트를 XML 문서 내의 모든 요소의 말미에 송신합니다. 모든 endElement 이벤트에 해당하는 startElement 이벤트가 있습니다 (요소가 비어있는 경우에도).</target>
        </trans-unit>
        <trans-unit id="8797c16612fdf5d27b7de210d50ba2cccb65cc70" translate="yes" xml:space="preserve">
          <source>Receive pending limit (see the MGOriginatedPendingLimit and the MGCOriginatedPendingLimit of the megaco root package). This parameter specifies how many pending messages that can be received (for a sent transaction request). When the limit is exceeded, the transaction is considered lost, and an error returned to the user (through the call-back function &lt;strong&gt;handle_trans_reply&lt;/strong&gt;).</source>
          <target state="translated">보류 제한을받습니다 (megaco 루트 패키지의 MGOriginatedPendingLimit 및 MGCOriginatedPendingLimit 참조). 이 매개 변수는 (전송 된 트랜잭션 요청에 대해) 수신 할 수있는 보류중인 메시지 수를 지정합니다. 한도를 초과하면 트랜잭션이 손실 된 것으로 간주되고 콜백 함수 &lt;strong&gt;handle_trans_reply를&lt;/strong&gt; 통해 사용자에게 오류가 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d5ecbcb08d0f4d6115bb32ff52731dfbd7a7c13" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as a binary.</source>
          <target state="translated">수신 &lt;code&gt;Packet&lt;/code&gt; 은 바이너리로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d4fc2c4f32aaa7580a805013b8ff075ec71d5b9a" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as a list.</source>
          <target state="translated">수신 된 &lt;code&gt;Packet&lt;/code&gt; 이 목록으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="095439cd3a95f819e845e63f1a8b1cf9a8ac21eb" translate="yes" xml:space="preserve">
          <source>Received &lt;code&gt;Packet&lt;/code&gt; is delivered as defined by &lt;code&gt;Mode&lt;/code&gt;.</source>
          <target state="translated">수신 &lt;code&gt;Packet&lt;/code&gt; 은 &lt;code&gt;Mode&lt;/code&gt; 에서 정의한대로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="11bdd920d9bb9ec7f1744e588b3249a3eb42f4bc" translate="yes" xml:space="preserve">
          <source>Receives a chunk of the remote file (&lt;code&gt;RemoteFile&lt;/code&gt; of &lt;code&gt;recv_chunk_start&lt;/code&gt;). The return values have the following meaning:</source>
          <target state="translated">원격 파일 청크를 수신합니다 ( &lt;code&gt;RemoteFile&lt;/code&gt; of &lt;code&gt;recv_chunk_start&lt;/code&gt; ). 반환 값의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="de7f79d5297387bcfc0d13974523a5f34bf53062" translate="yes" xml:space="preserve">
          <source>Receives a message consisting of a sequence of bytes in the Erlang external format.</source>
          <target state="translated">Erlang 외부 형식의 일련의 바이트로 구성된 메시지를받습니다.</target>
        </trans-unit>
        <trans-unit id="79120148644e55cd552daccc123d05a76cb9f13a" translate="yes" xml:space="preserve">
          <source>Receives a message to the buffer in &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;ei_xreceive_msg&lt;/code&gt; allows the buffer in &lt;code&gt;x&lt;/code&gt; to grow, but &lt;code&gt;ei_receive_msg&lt;/code&gt; fails if the message is larger than the pre-allocated buffer in &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 버퍼에 메시지를받습니다 . &lt;code&gt;ei_xreceive_msg&lt;/code&gt; 는 &lt;code&gt;x&lt;/code&gt; 의 버퍼가 커지도록 허용 하지만 메시지가 &lt;code&gt;x&lt;/code&gt; 의 사전 할당 된 버퍼보다 ​​큰 경우 &lt;code&gt;ei_receive_msg&lt;/code&gt; 는 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="88ade3e878d068456efb014fd72f2989e409bb39" translate="yes" xml:space="preserve">
          <source>Receives a packet from a socket in passive mode. A closed socket is indicated by return value &lt;code&gt;{error, closed}&lt;/code&gt;.</source>
          <target state="translated">수동 모드의 소켓에서 패킷을 수신합니다. 닫힌 소켓은 리턴 값 &lt;code&gt;{error, closed}&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="0c7ccc2574bf778a71ae7a9543f1b346cd8d49c7" translate="yes" xml:space="preserve">
          <source>Receives a packet from a socket in passive mode. Optional parameter &lt;code&gt;Timeout&lt;/code&gt; specifies a time-out in milliseconds. Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">수동 모드의 소켓에서 패킷을 수신합니다. 선택적 매개 변수 &lt;code&gt;Timeout&lt;/code&gt; 은 시간 초과를 밀리 초로 지정합니다. 기본값은 &lt;code&gt;infinity&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ef7ad247f4d592c4f5c9dd57f0200426e983df3e" translate="yes" xml:space="preserve">
          <source>Receives expected data from server on the specified session channel.</source>
          <target state="translated">지정된 세션 채널의 서버에서 예상 데이터를받습니다.</target>
        </trans-unit>
        <trans-unit id="cec7dde1707a867ec3ac180b1d8faf20bd5a279e" translate="yes" xml:space="preserve">
          <source>Receives messages sent to the process using the send operator (!). The patterns &lt;code&gt;Pattern&lt;/code&gt; are sequentially matched against the first message in time order in the mailbox, then the second, and so on. If a match succeeds and the optional guard sequence &lt;code&gt;GuardSeq&lt;/code&gt; is true, the corresponding &lt;code&gt;Body&lt;/code&gt; is evaluated. The matching message is consumed, that is, removed from the mailbox, while any other messages in the mailbox remain unchanged.</source>
          <target state="translated">send 연산자 (!)를 사용하여 프로세스로 전송 된 메시지를받습니다. 패턴 &lt;code&gt;Pattern&lt;/code&gt; 은 메일 함의 시간 순서대로 첫 번째 메시지와 차례로 차례로 일치 한 다음 두 번째 메시지와 비교됩니다. 성공적으로 일치하고 선택적인 가드 시퀀스 &lt;code&gt;GuardSeq&lt;/code&gt; 가 true이면 해당 &lt;code&gt;Body&lt;/code&gt; 이 평가됩니다. 일치하는 메시지가 사용됩니다 (즉, 사서함에서 제거됨). 사서함의 다른 메시지는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5cc1284ee604f9633073521a2db79d9f71aff293" translate="yes" xml:space="preserve">
          <source>Receives one packet of data.</source>
          <target state="translated">하나의 데이터 패킷을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="43e2b0fdb2b90c2ae0d79559c9136a0b0fbf1061" translate="yes" xml:space="preserve">
          <source>Receives the &lt;code&gt;Data&lt;/code&gt; message from any association of the socket. If the receive times out, &lt;code&gt;{error,timeout}&lt;/code&gt; is returned. The default time-out is &lt;code&gt;infinity&lt;/code&gt;. &lt;code&gt;FromIP&lt;/code&gt; and &lt;code&gt;FromPort&lt;/code&gt; indicate the address of the sender.</source>
          <target state="translated">소켓의 연관으로부터 &lt;code&gt;Data&lt;/code&gt; 메시지를 받습니다 . 수신 시간이 초과되면 &lt;code&gt;{error,timeout}&lt;/code&gt; 이 반환됩니다. 기본 시간 제한은 &lt;code&gt;infinity&lt;/code&gt; 입니다. &lt;code&gt;FromIP&lt;/code&gt; 및 &lt;code&gt;FromPort&lt;/code&gt; 는 발신자의 주소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="31c3f1b8ef20a940b9e8eca2f6ff181ad7a8d16d" translate="yes" xml:space="preserve">
          <source>Receives the message into the specified buffer and decodes into &lt;code&gt;(ErlMessage *) emsg&lt;/code&gt;.</source>
          <target state="translated">지정된 버퍼에 메시지를 수신하고 &lt;code&gt;(ErlMessage *) emsg&lt;/code&gt; 로 디코딩 합니다.</target>
        </trans-unit>
        <trans-unit id="b3f549c7b2440e41e018f429d531bd6c3666574a" translate="yes" xml:space="preserve">
          <source>Receiving Exit Signals</source>
          <target state="translated">출구 신호 수신</target>
        </trans-unit>
        <trans-unit id="6e89cb081d99ed724d5931544bc83550c03a78c4" translate="yes" xml:space="preserve">
          <source>Receiving Requests</source>
          <target state="translated">요청 받기</target>
        </trans-unit>
        <trans-unit id="077d735aed11e2e48a44668a13373797ed93e95f" translate="yes" xml:space="preserve">
          <source>Receiving process/port and message term</source>
          <target state="translated">수신 프로세스 / 포트 및 메시지 용어</target>
        </trans-unit>
        <trans-unit id="1019a13cb6e4b083bd8b40b2d7fb5371dc84bfe2" translate="yes" xml:space="preserve">
          <source>Receiving segmented messages:</source>
          <target state="translated">세그먼트 화 된 메시지 수신 :</target>
        </trans-unit>
        <trans-unit id="5754a8bb83120ef7d69ead91ce581426fad83335" translate="yes" xml:space="preserve">
          <source>Recognized request methods and header fields are returned as atoms. Others are returned as strings. Strings of unrecognized header fields are formatted with only capital letters first and after hyphen characters, for example, &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt;.</source>
          <target state="translated">인식 된 요청 메소드 및 헤더 필드는 원자로 리턴됩니다. 다른 것은 문자열로 반환됩니다. 인식 할 수없는 헤더 필드의 문자열은 대문자와 하이픈 문자 (예 : &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt; ) 뒤에 대문자로만 서식이 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="f8f5867aab01588396ca065fca74585441fc6dad" translate="yes" xml:space="preserve">
          <source>Recognized request methods and header fields are returned as atoms. Others are returned as strings. Strings of unrecognized header fields are formatted with only capital letters first and after hyphen characters, for example, &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt;. Header field names are also returned in &lt;code&gt;UnmodifiedField&lt;/code&gt; as strings, without any conversion or formatting.</source>
          <target state="translated">인식 된 요청 메서드 및 헤더 필드는 아톰으로 반환됩니다. 다른 것들은 문자열로 반환됩니다. 인식 할 수없는 헤더 필드의 문자열은 &lt;code&gt;&quot;Sec-Websocket-Key&quot;&lt;/code&gt; 와 같이 앞뒤에 하이픈 문자 만 대문자로만 포맷됩니다 . 헤더 필드 이름은 변환이나 형식화없이 &lt;code&gt;UnmodifiedField&lt;/code&gt; 에서도 문자열로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="06210493d8afafd3fbe9c98e7aefe7e12c50cb5e" translate="yes" xml:space="preserve">
          <source>Recommendations:</source>
          <target state="translated">Recommendations:</target>
        </trans-unit>
        <trans-unit id="4e0d0a34940fd710c8e8528aed83c032f4775bdb" translate="yes" xml:space="preserve">
          <source>Recomposing a map of URI components into a URI string</source>
          <target state="translated">URI 구성 요소의 맵을 URI 문자열로 재구성</target>
        </trans-unit>
        <trans-unit id="ce83d6ed524fb80981aa317a9b2ad1f780cc5c35" translate="yes" xml:space="preserve">
          <source>Reconnection interval (time to wait in between reconnection attempts) = 5 seconds</source>
          <target state="translated">재 연결 간격 (재 연결 시도 사이에 대기 시간) = 5 초</target>
        </trans-unit>
        <trans-unit id="1fdeec60896b5fb2de70c54c0789290dbd55f5e0" translate="yes" xml:space="preserve">
          <source>Reconstitute a parsed dictionary, as returned by &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt;, without using &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;. That is, construct an equivalent dictionary in which all AVP's are definined in the dictionary itself. The return value is also a parsed dictionary.</source>
          <target state="translated">재구성을 파싱 사전 의해 반환 &lt;code&gt;&lt;a href=&quot;#codec-2&quot;&gt;codec/2&lt;/a&gt;&lt;/code&gt; 를 사용하지 않고, &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 를 . 즉, 모든 AVP가 사전 자체에서 정의되는 동등한 사전을 구성하십시오. 반환 값은 파싱 된 사전이기도합니다.</target>
        </trans-unit>
        <trans-unit id="14cbab53c64e5711fd29d390806b7136e30d4167" translate="yes" xml:space="preserve">
          <source>Reconstruct Source Code</source>
          <target state="translated">소스 코드 재구성</target>
        </trans-unit>
        <trans-unit id="00547b3efda02c12effbe28f025f7728bedcf735" translate="yes" xml:space="preserve">
          <source>Record :: tuple(),</source>
          <target state="translated">기록 :: tuple (),</target>
        </trans-unit>
        <trans-unit id="60cccb6e6508d69f69882dd034fc65b7d791ab32" translate="yes" xml:space="preserve">
          <source>Record Definitions</source>
          <target state="translated">기록 정의</target>
        </trans-unit>
        <trans-unit id="f7e8d3f1a5b9f0dfb9c295d509e1df5a9c9d1ef6" translate="yes" xml:space="preserve">
          <source>Record Field Types</source>
          <target state="translated">레코드 필드 유형</target>
        </trans-unit>
        <trans-unit id="d385ea8d047e6dbe61bb15d78b1d8dbdf298262e" translate="yes" xml:space="preserve">
          <source>Record Fields</source>
          <target state="translated">레코드 필드</target>
        </trans-unit>
        <trans-unit id="1d4ca640183de7618d71ecdb2e23d9ce63837fd1" translate="yes" xml:space="preserve">
          <source>Record definitions are allowed anywhere in a module, also among the function declarations. Read more in &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레코드 정의는 함수 선언 중 모듈의 어느 곳에서나 허용됩니다. &lt;code&gt;&lt;a href=&quot;records&quot;&gt;Records&lt;/a&gt;&lt;/code&gt; 에서 더 많은 것을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="016cb45280daecda9b7b119fc9dace58154435ea" translate="yes" xml:space="preserve">
          <source>Record definitions for this module can be found using:</source>
          <target state="translated">이 모듈에 대한 레코드 정의는 다음을 사용하여 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cd9a03d9ebf3a3c8f7631f0aa5a3cf6db8bbced" translate="yes" xml:space="preserve">
          <source>Record expressions are translated to tuple expressions during compilation. A record defined as:</source>
          <target state="translated">레코드 표현식은 컴파일 중에 튜플 표현식으로 변환됩니다. 다음과 같이 정의 된 레코드 :</target>
        </trans-unit>
        <trans-unit id="7cb719be81341614e030a4a2e403c5ea98aca76f" translate="yes" xml:space="preserve">
          <source>Record names versus table names</source>
          <target state="translated">레코드 이름과 테이블 이름</target>
        </trans-unit>
        <trans-unit id="144612104dcd31483365025648e162a5188453ca" translate="yes" xml:space="preserve">
          <source>Records allow references to the fields by name, instead of by position. In the following example, a record instead of a tuple is used to store the data:</source>
          <target state="translated">레코드를 사용하면 위치 대신 이름으로 필드를 참조 할 수 있습니다. 다음 예제에서는 튜플 대신 레코드가 데이터를 저장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e3af00797ab5134cc13d66f0140afed4ac5aeee7" translate="yes" xml:space="preserve">
          <source>Records are extended to possibly contain type information. This is described in &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt; Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레코드는 유형 정보를 포함하도록 확장됩니다. 이는 &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt; Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="613bf96af83ed6c9b691f468cc1cafc02874076f" translate="yes" xml:space="preserve">
          <source>Records are extended to possibly contain type information. This is described in &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt;Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유형 정보를 포함하도록 레코드가 확장되었습니다. 이에 대해서는 &lt;code&gt;&lt;a href=&quot;#typeinrecords&quot;&gt;Type Information in Record Declarations&lt;/a&gt;&lt;/code&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf99ef8454e1e901403d3747fabb549275497b0b" translate="yes" xml:space="preserve">
          <source>Records have possibly been deleted. &lt;code&gt;What&lt;/code&gt; is either &lt;code&gt;{Table, Key}&lt;/code&gt; or a record &lt;code&gt;{RecordName, Key, ...}&lt;/code&gt; that was deleted. Notice that the new content depends on the table type.</source>
          <target state="translated">레코드가 삭제되었을 수 있습니다. &lt;code&gt;What&lt;/code&gt; 입니다 중 &lt;code&gt;{Table, Key}&lt;/code&gt; 또는 기록 &lt;code&gt;{RecordName, Key, ...}&lt;/code&gt; 삭제되었습니다. 새 내용은 테이블 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9f89198d9e262f6073124ec6efc26bc57f43b091" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not ordered. However, there is an ordering of the records that is unknown to the user. A table can therefore be traversed by this function with the function &lt;code&gt;mnesia:next/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;bag&lt;/code&gt; 테이블의 레코드는 주문되지 않습니다. 그러나 사용자에게 알려지지 않은 레코드 순서가 있습니다. 따라서이 함수는 &lt;code&gt;mnesia:next/2&lt;/code&gt; 함수를 사용하여 테이블을 순회 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59700296e24a1cf9794576dac5b155d8b10dbdb1" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not ordered. However, there is an ordering of the records that is unknown to the user. Therefore, a table can be traversed by this function with the function &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;bag&lt;/code&gt; 테이블의 레코드는 주문되지 않습니다. 그러나 사용자에게 알려지지 않은 레코드 순서가 있습니다. 따라서이 함수는 &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; 함수를 사용하여 테이블을 순회 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="75d7ddf3a47ed2b29eb25eb18cb6fa66a868c9de" translate="yes" xml:space="preserve">
          <source>Records in &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;bag&lt;/code&gt; tables are not sorted. However, there is a record order that is unknown to the user. This means that a table can be traversed by this function with the function &lt;code&gt;&lt;a href=&quot;mnesia#dirty_next-2&quot;&gt;mnesia:dirty_next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;bag&lt;/code&gt; 테이블의 레코드는 정렬되지 않습니다. 그러나 사용자에게 알려지지 않은 레코드 순서가 있습니다. 이는이 함수가 &lt;code&gt;&lt;a href=&quot;mnesia#dirty_next-2&quot;&gt;mnesia:dirty_next/2&lt;/a&gt;&lt;/code&gt; 함수를 사용하여 테이블을 순회 할 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="bb519de4fc078d24d538560c361925ce544f5dec" translate="yes" xml:space="preserve">
          <source>Recovery from communication failure</source>
          <target state="translated">통신 장애 복구</target>
        </trans-unit>
        <trans-unit id="c857be3a0573cdabebb7a961ed6d631e3f3733de" translate="yes" xml:space="preserve">
          <source>Recovery of transactions</source>
          <target state="translated">거래 복구</target>
        </trans-unit>
        <trans-unit id="b82d4c7650ef2416c470136be1d0e55fc283f2db" translate="yes" xml:space="preserve">
          <source>Recreates the file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; from the directories in the directory &lt;code&gt;tmp&lt;/code&gt; and removes &lt;code&gt;tmp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tmp&lt;/code&gt; 디렉토리의 디렉토리에서 &lt;code&gt;mysystem.tar.gz&lt;/code&gt; 파일을 다시 작성하고 tmp 를 제거 &lt;code&gt;tmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0c24b60848ddc6e8e54f77a11b281c810436a9a" translate="yes" xml:space="preserve">
          <source>Recursion processing in PCRE differs from Perl in two important ways. In PCRE (like Python, but unlike Perl), a recursive subpattern call is always treated as an atomic group. That is, once it has matched some of the subject string, it is never re-entered, even if it contains untried alternatives and there is a subsequent matching failure. This can be illustrated by the following pattern, which means to match a palindromic string containing an odd number of characters (for example, &quot;a&quot;, &quot;aba&quot;, &quot;abcba&quot;, &quot;abcdcba&quot;):</source>
          <target state="translated">PCRE의 재귀 처리는 두 가지 중요한 점에서 Perl과 다릅니다. PCRE (Python과 같지만 Perl과는 달리)에서 재귀 하위 패턴 호출은 항상 원자 그룹으로 처리됩니다. 즉, 일단 주제 문자열의 일부와 일치하면 시도되지 않은 대안이 포함되고 후속 일치 실패가 있어도 다시 입력되지 않습니다. 이는 홀수 개의 문자를 포함하는 회문 문자열 (예 : &quot;a&quot;, &quot;aba&quot;, &quot;abcba&quot;, &quot;abcdcba&quot;)을 일치시키는 다음 패턴으로 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9966d77fca6c046d8301a9c5aeeabdb07db6e94" translate="yes" xml:space="preserve">
          <source>Recursive Types</source>
          <target state="translated">재귀 유형</target>
        </trans-unit>
        <trans-unit id="49c36f3bbb51240a32d3b51ef263546135b56e0d" translate="yes" xml:space="preserve">
          <source>Redefined and undefined functions</source>
          <target state="translated">재정의 및 정의되지 않은 함수</target>
        </trans-unit>
        <trans-unit id="9821e8e3eb5f0b3550eb425437d414bd5f509995" translate="yes" xml:space="preserve">
          <source>Redirect Agents</source>
          <target state="translated">리디렉트 에이전트</target>
        </trans-unit>
        <trans-unit id="cb2b5a6cb4c9d318ad4e5065d9f3485f316f8814" translate="yes" xml:space="preserve">
          <source>Redirect Erlang input and output streams on Unix systems.</source>
          <target state="translated">Unix 시스템에서 Erlang 입력 및 출력 스트림을 리디렉션하십시오.</target>
        </trans-unit>
        <trans-unit id="c502d3c9c5fc88582d123f9cda4001ffbea9a9f6" translate="yes" xml:space="preserve">
          <source>Redirect-Host AVP</source>
          <target state="translated">리디렉션 호스트 AVP</target>
        </trans-unit>
        <trans-unit id="1e581fb68f4db03f158c73399e1aef520dcfaf98" translate="yes" xml:space="preserve">
          <source>Redirect-Host-Usage AVP</source>
          <target state="translated">리디렉션 호스트 사용 AVP</target>
        </trans-unit>
        <trans-unit id="a1446afc50214ae3e357fb0a71f59e2404d18c81" translate="yes" xml:space="preserve">
          <source>Redirect-Host-Usage AVP Values</source>
          <target state="translated">리디렉션 호스트 사용 AVP 값</target>
        </trans-unit>
        <trans-unit id="cd193b05a97a631073ccb483d47d26ea1dafe644" translate="yes" xml:space="preserve">
          <source>Redirect-Max-Cache-Time AVP</source>
          <target state="translated">리디렉션 최대 캐시 시간 AVP</target>
        </trans-unit>
        <trans-unit id="7dc43d4ac811f4906c7b139115075f47a12d9c79" translate="yes" xml:space="preserve">
          <source>Redirecting Requests</source>
          <target state="translated">요청 리디렉션</target>
        </trans-unit>
        <trans-unit id="98d90033419f07be437a04bf22d4b03540b1022d" translate="yes" xml:space="preserve">
          <source>Redirects all report output from the RB tool to the specified file, registered name, or &lt;code&gt;io_device&lt;/code&gt;.</source>
          <target state="translated">RB 도구의 모든 보고서 출력을 지정된 파일, 등록 된 이름 또는 &lt;code&gt;io_device&lt;/code&gt; 로 리디렉션 합니다.</target>
        </trans-unit>
        <trans-unit id="d20e63f8c7e8894f58f191215bb077b8a93d30c2" translate="yes" xml:space="preserve">
          <source>Redraw line</source>
          <target state="translated">라인 다시 그리기</target>
        </trans-unit>
        <trans-unit id="e6d86c37ebe8a894ce36d13e14a286c242f0c262" translate="yes" xml:space="preserve">
          <source>Redundant directory separators are removed.</source>
          <target state="translated">중복 디렉토리 구분 기호가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="e227dfcf432b828dab887b3933a18c3b63d3ed41" translate="yes" xml:space="preserve">
          <source>Ref is the value that was returned from the call to &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; that has lead to starting of a transport process.</source>
          <target state="translated">Ref는 전송 프로세스를 시작하게하는 &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; 대한 호출에서 리턴 된 값입니다 .</target>
        </trans-unit>
        <trans-unit id="1c0d648927926fa5ea5d04766e8a678e8fc58490" translate="yes" xml:space="preserve">
          <source>Refc binaries consist of two parts:</source>
          <target state="translated">Refc 바이너리는 두 부분으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="d231e7267d9cb6cb23fcfa03c8ac87df69935c7e" translate="yes" xml:space="preserve">
          <source>Refer also to the chapter(s) &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files&quot;&gt;Definition of Agent Configuration Files&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files&quot;&gt;Definition of Manager Configuration Files&lt;/a&gt;&lt;/code&gt; which contains more detailed information about the agent and manager configuration files.</source>
          <target state="translated">장 (들)를 참조하여주십시오 &lt;code&gt;&lt;a href=&quot;snmp_agent_config_files&quot;&gt;Definition of Agent Configuration Files&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;snmp_manager_config_files&quot;&gt;Definition of Manager Configuration Files&lt;/a&gt;&lt;/code&gt; 에이전트와 관리 프로그램 구성 파일에 대한 자세한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2222f6b50ec8d89285956cc68d86c2224b726ef7" translate="yes" xml:space="preserve">
          <source>Refer to &lt;code&gt;rt_mask/2&lt;/code&gt; for a list of valid categories. All categories are enabled by default.</source>
          <target state="translated">유효한 카테고리 목록은 &lt;code&gt;rt_mask/2&lt;/code&gt; 를 참조하십시오 . 모든 카테고리는 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ffdd2bd542a285efd2de4779f5b373c9466faf0" translate="yes" xml:space="preserve">
          <source>Refer to the Mnesia User's Guide for information on how to declare a Mnesia table as an SNMP table.</source>
          <target state="translated">Mnesia 테이블을 SNMP 테이블로 선언하는 방법에 대한 정보는 Mnesia 사용자 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f0e653ef4f1da220b6cd05bc836f3690e633c668" translate="yes" xml:space="preserve">
          <source>Refer to the chapter &lt;code&gt;&lt;a href=&quot;snmp_advanced_agent&quot;&gt;Advanced Agent Topics&lt;/a&gt;&lt;/code&gt; in this User's Guide for more information about these topics.</source>
          <target state="translated">이러한 주제에 대한 자세한 정보는이 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;snmp_advanced_agent&quot;&gt;Advanced Agent Topics&lt;/a&gt;&lt;/code&gt; 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e379ff749b13f33a9df504f29d8f8b458d827d7" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about &lt;code&gt;Event Tracer (ET)&lt;/code&gt; and about the Erlang/OTP development system:</source>
          <target state="translated">&lt;code&gt;Event Tracer (ET)&lt;/code&gt; 및 Erlang / OTP 개발 시스템에 대한 자세한 정보는 다음 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f539ecbb66f8ec24d2e6f1646377a431c040604d" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about Megaco/H.248 and about the Erlang/OTP development system:</source>
          <target state="translated">Megaco / H.248 및 Erlang / OTP 개발 시스템에 대한 자세한 내용은 다음 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e44a86d89e003984ea5ef73cfad4e5d309a9ade7" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about Reltool and about the Erlang/OTP development system:</source>
          <target state="translated">Reltool 및 Erlang / OTP 개발 시스템에 대한 자세한 내용은 다음 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5ebdb38c8d53695f9ea0d66e56f5fddcaa30ef1c" translate="yes" xml:space="preserve">
          <source>Refer to the following documentation for more information about SNMP and about the Erlang/OTP development system:</source>
          <target state="translated">SNMP 및 Erlang / OTP 개발 시스템에 대한 자세한 내용은 다음 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="e0dc153ae2bdd0fe9582cae3b3c29c7ba9a0ae63" translate="yes" xml:space="preserve">
          <source>Reference IDs</source>
          <target state="translated">참조 ID</target>
        </trans-unit>
        <trans-unit id="27c7472e340ed21263acad4148dc337d9d6c12a1" translate="yes" xml:space="preserve">
          <source>Reference Identifier</source>
          <target state="translated">참조 식별자</target>
        </trans-unit>
        <trans-unit id="713c0142116eaba09081a317268f9ee98220982c" translate="yes" xml:space="preserve">
          <source>Reference returned by &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; that identifies the configuration.</source>
          <target state="translated">구성을 식별하는 &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 에 의해 리턴 된 참조</target>
        </trans-unit>
        <trans-unit id="9c5d563f657af29bb1ef8ba94dfb428a73fff530" translate="yes" xml:space="preserve">
          <source>Reference to the &lt;code&gt;ssh&lt;/code&gt; connection as returned by &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">받는 사람 기준 &lt;code&gt;ssh&lt;/code&gt; 에 의해 반환 연결 &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09e48449c433765315807d16f90cf85823ba070e" translate="yes" xml:space="preserve">
          <source>Reference to the CRL cache.</source>
          <target state="translated">CRL 캐시에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="21c316b9ea2c08e8a30d1111d9a15dea4523351d" translate="yes" xml:space="preserve">
          <source>Referenced modules are now parsed when the compiler finds an entity that is imported. No code is generated for the referenced module. However, the compiled modules rely on that the referenced modules are also compiled.</source>
          <target state="translated">컴파일러가 가져온 엔티티를 찾으면 참조 된 모듈이 구문 분석됩니다. 참조 된 모듈에 대한 코드가 생성되지 않습니다. 그러나 컴파일 된 모듈은 참조 된 모듈도 컴파일되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="5dfbb32d4eeb2b41a35cac6863870075ee04f983" translate="yes" xml:space="preserve">
          <source>References.</source>
          <target state="translated">References.</target>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="7a7812481d7d8a559db48b96be55b5b061c0f69c" translate="yes" xml:space="preserve">
          <source>Refers to the atom with &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;#distribution_header&quot;&gt;distribution header&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#distribution_header&quot;&gt;distribution header&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; 를 사용하여 아톰을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="15e03a93e16fc2b3802f8e66f83eae65fd5327b5" translate="yes" xml:space="preserve">
          <source>Refresh HTML Index Files</source>
          <target state="translated">HTML 인덱스 파일 새로 고침</target>
        </trans-unit>
        <trans-unit id="36717b8ae4c9e2f35cbb35a6b8557e62f3195790" translate="yes" xml:space="preserve">
          <source>Refreshes the top-level HTML index files.</source>
          <target state="translated">최상위 HTML 색인 파일을 새로 고칩니다.</target>
        </trans-unit>
        <trans-unit id="94ce43532e416f84ee6391e5a1ef349f36f00a42" translate="yes" xml:space="preserve">
          <source>RegArity ::= RegString | Number | &lt;code&gt;_&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;</source>
          <target state="translated">RegArity :: = RegString | 번호 | &lt;code&gt;_&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3acf35ba403cbdbfa0631a0b0f04b366e0b454d8" translate="yes" xml:space="preserve">
          <source>RegAtom ::= RegString | Atom | &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">RegAtom :: = RegString | 원자 | &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41639ede4e105dbe6f8a9955f29465cf6b7d6c32" translate="yes" xml:space="preserve">
          <source>RegExpr ::= RegString &lt;code&gt;:&lt;/code&gt; Type | RegFunc | RegFunc &lt;code&gt;:&lt;/code&gt; Type</source>
          <target state="translated">RegExpr :: = RegString &lt;code&gt;:&lt;/code&gt; 유형 | RegFunc | RegFunc &lt;code&gt;:&lt;/code&gt; 유형</target>
        </trans-unit>
        <trans-unit id="930b67b59794ec947de2a9f2994493cadd99fca4" translate="yes" xml:space="preserve">
          <source>RegFunc ::= RegModule &lt;code&gt;:&lt;/code&gt; RegFunction &lt;code&gt;/&lt;/code&gt; RegArity</source>
          <target state="translated">RegFunc :: = RegModule &lt;code&gt;:&lt;/code&gt; RegFunction &lt;code&gt;/&lt;/code&gt; RegArity</target>
        </trans-unit>
        <trans-unit id="134c93f0cffad65e559068d0d1b231a309a6fdfe" translate="yes" xml:space="preserve">
          <source>RegFunction ::= RegAtom</source>
          <target state="translated">RegFunction :: = RegAtom</target>
        </trans-unit>
        <trans-unit id="7def8fd36ca99187f55e24c50241ef969bcc1d09" translate="yes" xml:space="preserve">
          <source>RegModule ::= RegAtom</source>
          <target state="translated">RegModule :: = RegAtom</target>
        </trans-unit>
        <trans-unit id="5ea313547c0f2b26b1f18ea46a73a7c74fcbe229" translate="yes" xml:space="preserve">
          <source>RegString ::= - a regular expression, as described in the &lt;code&gt;re&lt;/code&gt; module, enclosed in double quotes -</source>
          <target state="translated">RegString :: =- 큰 따옴표로 묶인 &lt;code&gt;re&lt;/code&gt; 모듈에 설명 된 정규식 -</target>
        </trans-unit>
        <trans-unit id="0469fbf0d49c6eb360a825665c9fd2a213e391df" translate="yes" xml:space="preserve">
          <source>Regarding filename encoding, the Erlang VM can operate in two modes. The current mode can be queried using function &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding/0&lt;/a&gt;&lt;/code&gt;. It returns &lt;code&gt;latin1&lt;/code&gt; or &lt;code&gt;utf8&lt;/code&gt;.</source>
          <target state="translated">파일 이름 인코딩과 관련하여 Erlang VM은 두 가지 모드로 작동 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;#native_name_encoding-0&quot;&gt;native_name_encoding/0&lt;/a&gt;&lt;/code&gt; 함수를 사용하여 현재 모드를 쿼리 할 수 ​​있습니다 . &lt;code&gt;latin1&lt;/code&gt; 또는 &lt;code&gt;utf8&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="fa909bfc847f3f2dab8d9422d9641563e62929f7" translate="yes" xml:space="preserve">
          <source>Regardless of locking scheme used, calls to driver callbacks can be made from different threads.</source>
          <target state="translated">사용 된 잠금 체계에 관계없이 드라이버 콜백에 대한 호출은 다른 스레드에서 수행 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d3200800919d3e46eca540d750c7be68fa53667" translate="yes" xml:space="preserve">
          <source>Register a Node in EPMD</source>
          <target state="translated">EPMD에 노드 등록</target>
        </trans-unit>
        <trans-unit id="4fda3f1d7a876f76d3fabdf3fae0856aadda52fb" translate="yes" xml:space="preserve">
          <source>Register an alternate input handler process for the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. Once this function has been called, &lt;code&gt;InputHandler&lt;/code&gt; is the only process allowed to call &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_put_data-2&quot;&gt;erlang:dist_ctrl_put_data(DHandle, Data)&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;DHandle&lt;/code&gt; identifing this distribution channel.</source>
          <target state="translated">&lt;code&gt;DHandle&lt;/code&gt; 로 식별 된 분배 채널에 대한 대체 입력 핸들러 프로세스를 등록 하십시오 . 이 함수가 호출되면 &lt;code&gt;InputHandler&lt;/code&gt; 는 이 분배 채널을 식별 하는 &lt;code&gt;DHandle&lt;/code&gt; 로 &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_put_data-2&quot;&gt;erlang:dist_ctrl_put_data(DHandle, Data)&lt;/a&gt;&lt;/code&gt; 를 호출 할 수있는 유일한 프로세스 입니다.</target>
        </trans-unit>
        <trans-unit id="612e70bc80f39d67fe2e63fcdd740554f873caa3" translate="yes" xml:space="preserve">
          <source>Register the given node name with the registrar.</source>
          <target state="translated">지정된 노드 이름을 레지스트라에 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="ccd3f2e94ffa6a327eccda4637f3834b6ee954d5" translate="yes" xml:space="preserve">
          <source>Register the manager entity (=user) responsible for specific agent(s).</source>
          <target state="translated">특정 에이전트를 담당하는 관리자 엔티티 (= 사용자)를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="6cc246aaee03583a1b67072b099abeb8fb79e782" translate="yes" xml:space="preserve">
          <source>Register the monitored manager entity (=user) responsible for specific agent(s).</source>
          <target state="translated">특정 에이전트를 담당하는 모니터링되는 관리자 엔티티 (= 사용자)를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="9061d41e371d4fedc0115d522b3c3789e7d55102" translate="yes" xml:space="preserve">
          <source>Register the subagent, process, handling part of the mib-tree.</source>
          <target state="translated">밉 트리의 일부를 처리하는 서브 에이전트, 프로세스를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="cfb9ebfdaecff168ceeaf8ecaef604259474208a" translate="yes" xml:space="preserve">
          <source>Register the user(s).</source>
          <target state="translated">사용자를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="1845a68e796020a1048d95263bf795b90fc9c9e6" translate="yes" xml:space="preserve">
          <source>Registers a name in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 에 이름을 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="34b7a3701f7f578b66d40dc493d201623ead9205" translate="yes" xml:space="preserve">
          <source>Registers a notification filter.</source>
          <target state="translated">알림 필터를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="067b57c37c89870a838e4c3a029c8848eae5cb13" translate="yes" xml:space="preserve">
          <source>Registers a sub-agent under a sub-tree of another agent.</source>
          <target state="translated">다른 에이전트의 하위 트리 아래에 하위 에이전트를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="2179f43e0837bc4378d035e264feccd782f007ff" translate="yes" xml:space="preserve">
          <source>Registers an unary fun that is called if &lt;code&gt;beam_lib&lt;/code&gt; must read an &lt;code&gt;debug_info&lt;/code&gt; chunk that has been encrypted. The fun is held in a process that is started by the function.</source>
          <target state="translated">경우 호출되는 단항 재미 등록 &lt;code&gt;beam_lib&lt;/code&gt; 가 읽을 수 있어야합니다 &lt;code&gt;debug_info&lt;/code&gt; 의 암호화 된 덩어리를. 재미는 기능에 의해 시작되는 프로세스에서 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0dcd7f686b516b64b10f7fd221bfb77639b2541f" translate="yes" xml:space="preserve">
          <source>Registers the manager entity (=user) responsible for specific agent(s). Corresponds to making an entry in &lt;code&gt;users.conf&lt;/code&gt;.</source>
          <target state="translated">특정 에이전트를 담당하는 관리자 엔티티 (= 사용자)를 등록합니다. &lt;code&gt;users.conf&lt;/code&gt; 에 항목을 작성하는 것에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="282f350423b62ae0006f17688a3e8604714b46e5" translate="yes" xml:space="preserve">
          <source>Registers the node with &lt;code&gt;epmd&lt;/code&gt; and tells epmd what port will be used for the current node. It returns a creation number. This number is incremented on each register to help with identifying if a node is reconnecting to epmd.</source>
          <target state="translated">&lt;code&gt;epmd&lt;/code&gt; 에 노드를 등록하고 epmd 에게 현재 노드에 사용될 포트를 알려줍니다. 생성 번호를 반환합니다. 이 번호는 각 레지스터에서 증가하여 노드가 epmd에 다시 연결되는지 식별하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="74789ff4511238a502c97e8e4e6d4952c88a95ba" translate="yes" xml:space="preserve">
          <source>Registration of a callback module. When a file is to be transferred, its local filename is matched to the regular expressions of the registered callbacks. The first matching callback is used during the transfer. See &lt;code&gt;&lt;a href=&quot;#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">콜백 모듈 등록 파일이 전송 될 때 로컬 파일 이름은 등록 된 콜백의 정규식과 일치합니다. 첫 번째 일치하는 콜백이 전송 중에 사용됩니다. &lt;code&gt;&lt;a href=&quot;#read_file-3&quot;&gt;read_file/3&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#write_file-3&quot;&gt;write_file/3&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="731691a0705f5aaf0542053dc6a66d67a7a10393" translate="yes" xml:space="preserve">
          <source>Registration of global names</source>
          <target state="translated">글로벌 이름 등록</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">정규식</target>
        </trans-unit>
        <trans-unit id="314870021208b673ff11034ad2c9468f72e2c31d" translate="yes" xml:space="preserve">
          <source>Regular expression matching all possible prompts for a specific target type. &lt;code&gt;regexp&lt;/code&gt; must not have any groups, that is, when matching, &lt;code&gt;re:run/3&lt;/code&gt; (in STDLIB) must return a list with one single element.</source>
          <target state="translated">특정 대상 유형에 대해 가능한 모든 프롬프트와 일치하는 정규식. &lt;code&gt;regexp&lt;/code&gt; 에는 그룹이 없어야합니다. 즉, 일치시 &lt;code&gt;re:run/3&lt;/code&gt; (STDLIB에서)는 하나의 단일 요소가있는 목록을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="47a56ab232ae123975ea9710e5fcf7b1f558f1c1" translate="yes" xml:space="preserve">
          <source>Regular expression matching functions for strings and binaries</source>
          <target state="translated">문자열 및 이진에 대한 정규식 일치 함수</target>
        </trans-unit>
        <trans-unit id="203fb6152721f63268ed61bd1c4ea54b026fd773" translate="yes" xml:space="preserve">
          <source>Regular startup options are described in section &lt;code&gt;&lt;a href=&quot;#daemon_flags&quot;&gt;Regular Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">일반 시작 옵션은 &lt;code&gt;&lt;a href=&quot;#daemon_flags&quot;&gt;Regular Options&lt;/a&gt;&lt;/code&gt; 섹션에 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f62c81988a0243c7eee0e36486de9a38c2c37387" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;disc_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">각 조각에 포함 할 &lt;code&gt;disc_copies&lt;/code&gt; 복제본 수를 조정합니다 . 이 특성은 테이블 작성시 명시 적으로 설정할 수 있습니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="30a8ba0420e7bdf4559176393019bd04c0fbe5e4" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;disc_only_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">각 조각에 포함 할 &lt;code&gt;disc_only_copies&lt;/code&gt; 복제본 수를 조정합니다 . 이 특성은 테이블 작성시 명시 적으로 설정할 수 있습니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d5ace031434130fcf1ca2044f6c738d84c99c499" translate="yes" xml:space="preserve">
          <source>Regulates how many &lt;code&gt;ram_copies&lt;/code&gt; replicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is &lt;code&gt;0&lt;/code&gt;, but if &lt;code&gt;n_disc_copies&lt;/code&gt; and &lt;code&gt;n_disc_only_copies&lt;/code&gt; also are &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;n_ram_copies&lt;/code&gt; defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">각 조각에 보유 할 &lt;code&gt;ram_copies&lt;/code&gt; 복제본 수를 조정합니다 . 이 특성은 테이블 작성시 명시 적으로 설정할 수 있습니다. 기본값은 &lt;code&gt;0&lt;/code&gt; 이지만 &lt;code&gt;n_disc_copies&lt;/code&gt; 및 &lt;code&gt;n_disc_only_copies&lt;/code&gt; 도 &lt;code&gt;0&lt;/code&gt; 이면 &lt;code&gt;n_ram_copies&lt;/code&gt; 의 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="13bed85e379f26741bf756020202c97a912d20f5" translate="yes" xml:space="preserve">
          <source>Rejang</source>
          <target state="translated">Rejang</target>
        </trans-unit>
        <trans-unit id="caa53feb7f3da187483d6f1241ee4328c1297f25" translate="yes" xml:space="preserve">
          <source>Related Documents</source>
          <target state="translated">관련된 문서</target>
        </trans-unit>
        <trans-unit id="a534f1b763c40f42ca56d5b3ac62f8426b11f10e" translate="yes" xml:space="preserve">
          <source>Relational operators: &amp;gt;, &amp;gt;=, &amp;lt;, =&amp;lt;, =:=, ==, =/=, /=</source>
          <target state="translated">관계 연산자 :&amp;gt;,&amp;gt; =, &amp;lt;, = &amp;lt;, = : =, ==, = / =, / =</target>
        </trans-unit>
        <trans-unit id="b4d1ac06f9ff5455701be2b5477a539436883381" translate="yes" xml:space="preserve">
          <source>Relations as defined above (as sets of ordered pairs) are from now on referred to as &lt;strong id=&quot;binary_relation&quot;&gt;binary relations&lt;/strong&gt;.</source>
          <target state="translated">위에서 정의 된 관계 (순서 쌍으로)는 이제부터 &lt;strong id=&quot;binary_relation&quot;&gt;이진 관계&lt;/strong&gt; 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="84d2940af626b029fa2ef82659d4a2d4cd5ce382" translate="yes" xml:space="preserve">
          <source>Relative maximum cache bad fit (in percent). A segment in the memory segment cache is not reused if its size exceeds the requested size with more than relative maximum cache bad fit percent of the requested size. Defaults to &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">상대적 최대 캐시 불량 (%) 메모리 세그먼트 캐시의 세그먼트는 크기가 요청 된 크기의 상대적 최대 캐시 불량 적합 백분율을 초과하여 요청 된 크기를 초과하면 재사용되지 않습니다. 기본값은 &lt;code&gt;20&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4c153cc101fda20f14f84dfde0781fcad6804b45" translate="yes" xml:space="preserve">
          <source>Relative multiblock carrier move threshold (in percent). When a block located in a multiblock carrier is shrunk, the block is moved if the ratio of the size of the returned memory compared to the previous size is more than this threshold, otherwise the block is shrunk at the current location.</source>
          <target state="translated">상대 멀티 블록 캐리어 이동 임계 값 (백분율). 멀티 블록 캐리어에 위치한 블록이 축소 될 때, 이전 크기와 비교하여 반환 된 메모리의 크기의 비율이이 임계 값보다 크면 블록이 이동되고, 그렇지 않으면 현재 위치에서 블록이 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="79bd0bd84b449b2094f3b7b77828c840f0397c79" translate="yes" xml:space="preserve">
          <source>Relative singleblock carrier move threshold (in percent). When a block located in a singleblock carrier is shrunk to a size smaller than the value of parameter &lt;code&gt;&lt;a href=&quot;#M_sbct&quot;&gt;sbct&lt;/a&gt;&lt;/code&gt;, the block is left unchanged in the singleblock carrier if the ratio of unused memory is less than this threshold, otherwise it is moved into a multiblock carrier.</source>
          <target state="translated">상대 단일 블록 캐리어 이동 임계 값 (백분율). 단일 블록 캐리어에 위치한 블록이 매개 변수 &lt;code&gt;&lt;a href=&quot;#M_sbct&quot;&gt;sbct&lt;/a&gt;&lt;/code&gt; 값보다 작은 크기로 축소 되면 사용되지 않은 메모리의 비율이이 임계 값보다 작 으면 블록이 단일 블록 캐리어에서 변경되지 않은 채로 남아 있습니다. 그렇지 않으면 멀티 블록 캐리어로 이동됩니다 .</target>
        </trans-unit>
        <trans-unit id="71e2887d05759469568d7ab87cf6c068541efe99" translate="yes" xml:space="preserve">
          <source>Relative singleblock carrier shrink threshold (in percent). When a block located in an &lt;code&gt;mseg_alloc&lt;/code&gt; singleblock carrier is shrunk, the carrier is left unchanged if the ratio of unused memory is less than this threshold, otherwise the carrier is shrunk. See also &lt;code&gt;&lt;a href=&quot;#M_asbcst&quot;&gt;asbcst&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">상대 단일 블록 캐리어 축소 임계 값 (백분율). &lt;code&gt;mseg_alloc&lt;/code&gt; 단일 블록 캐리어 에 위치한 블록 이 축소 될 때, 사용되지 않은 메모리의 비율이이 임계 값보다 작 으면 캐리어는 변경되지 않은 채로 유지되고, 그렇지 않으면 캐리어가 축소됩니다. &lt;code&gt;&lt;a href=&quot;#M_asbcst&quot;&gt;asbcst&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5a923017f941086cdc19675bb6e7e66bf98f618" translate="yes" xml:space="preserve">
          <source>Relaxed command checking can also be enabled by setting environment variable &lt;code&gt;ERL_EPMD_RELAXED_COMMAND_CHECK&lt;/code&gt; before starting &lt;code&gt;epmd&lt;/code&gt;.</source>
          <target state="translated">편안한 명령 검사는 설정 환경 변수로 사용할 수 있습니다 &lt;code&gt;ERL_EPMD_RELAXED_COMMAND_CHECK&lt;/code&gt; 시작하기 전에 &lt;code&gt;epmd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36f808de3af1211921e144126704f0ebe1a620f6" translate="yes" xml:space="preserve">
          <source>Relay Agents</source>
          <target state="translated">릴레이 에이전트</target>
        </trans-unit>
        <trans-unit id="2434cb2c3792d5ccccc15c76f01d0a9de58fc0fe" translate="yes" xml:space="preserve">
          <source>Relaying and Proxying Answers</source>
          <target state="translated">릴레이 및 프록시 답변</target>
        </trans-unit>
        <trans-unit id="e4472f3c80aefb8e7db82dc13af52546d928899f" translate="yes" xml:space="preserve">
          <source>Relaying and Proxying Requests</source>
          <target state="translated">릴레이 및 프록시 요청</target>
        </trans-unit>
        <trans-unit id="b25d7bda466685a6a4e753a794a4ba838c55e906" translate="yes" xml:space="preserve">
          <source>Release ::= Atom</source>
          <target state="translated">출시 :: = 원자</target>
        </trans-unit>
        <trans-unit id="d7bf8b26bb971b25e39e96502911b730591e9714" translate="yes" xml:space="preserve">
          <source>Release Edges. All release calls.</source>
          <target state="translated">릴리스 엣지. 모든 릴리스 통화.</target>
        </trans-unit>
        <trans-unit id="53329aa187df3daa8df74673348c87bd410e49de" translate="yes" xml:space="preserve">
          <source>Release Handling Aspects</source>
          <target state="translated">릴리스 처리 측면</target>
        </trans-unit>
        <trans-unit id="c8f0ee303aef9679a671711f9888ff6b9ffe13dd" translate="yes" xml:space="preserve">
          <source>Release Handling Workflow</source>
          <target state="translated">릴리스 처리 워크 플로</target>
        </trans-unit>
        <trans-unit id="12b5679ebc6469749dadfd2078344f69e5ead4b1" translate="yes" xml:space="preserve">
          <source>Release candidates have an &lt;code&gt;-rc&amp;lt;N&amp;gt;&lt;/code&gt; suffix. The suffix &lt;code&gt;-rc0&lt;/code&gt; is used during development up to the first release candidate.</source>
          <target state="translated">릴리스 후보에는 &lt;code&gt;-rc&amp;lt;N&amp;gt;&lt;/code&gt; 접미사가 있습니다. 접미사 &lt;code&gt;-rc0&lt;/code&gt; 은 개발 중에 첫 번째 릴리스 후보까지 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8a79a5a211e63659b6cf5b43de9d0eefd76a85f5" translate="yes" xml:space="preserve">
          <source>Release code write permission and return from &lt;code&gt;trace_pattern&lt;/code&gt;.</source>
          <target state="translated">코드 쓰기 권한을 해제하고 &lt;code&gt;trace_pattern&lt;/code&gt; 에서 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d77b5c204252acaaec43d623048d2075abad904a" translate="yes" xml:space="preserve">
          <source>Release handling</source>
          <target state="translated">릴리스 처리</target>
        </trans-unit>
        <trans-unit id="076bab209366a52c80009dd116377b92396f787e" translate="yes" xml:space="preserve">
          <source>Release handling relies on this assumption. When installing a new release version, the new &lt;code&gt;sys.config&lt;/code&gt; is read and used to update the application configurations.</source>
          <target state="translated">릴리스 처리는이 가정에 의존합니다. 새 릴리스 버전을 설치할 때 새 &lt;code&gt;sys.config&lt;/code&gt; 를 읽고 응용 프로그램 구성을 업데이트하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7949ab7905efd94b32946cabca1a8a77f563a091" translate="yes" xml:space="preserve">
          <source>Release name.</source>
          <target state="translated">출시 이름.</target>
        </trans-unit>
        <trans-unit id="3ccc1e080be82cc836d31609c3948421780b08c1" translate="yes" xml:space="preserve">
          <source>Release resource file</source>
          <target state="translated">자원 파일 해제</target>
        </trans-unit>
        <trans-unit id="d34f3018803f4c680fc3638d635bd0def6f5ab72" translate="yes" xml:space="preserve">
          <source>Release specific configuration. Each release maps to a &lt;code&gt;rel&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;boot&lt;/code&gt; file. See the module &lt;code&gt;systools&lt;/code&gt; for more info about the details. Each release has a name, a version and a set of applications with a few release specific parameters such as type and included applications.</source>
          <target state="translated">특정 구성을 해제하십시오. 각 릴리스는 &lt;code&gt;rel&lt;/code&gt; , &lt;code&gt;script&lt;/code&gt; 및 &lt;code&gt;boot&lt;/code&gt; 파일에 매핑 됩니다. 세부 사항에 대한 자세한 정보는 &lt;code&gt;systools&lt;/code&gt; 모듈을 참조 하십시오. 각 릴리스에는 유형 및 포함 된 응용 프로그램과 같은 릴리스 특정 매개 변수가있는 이름, 버전 및 응용 프로그램 세트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f05c6d212b8cb4e672ff57138d795de8491791f" translate="yes" xml:space="preserve">
          <source>Release the code write permission allowing other processes to stage new code.</source>
          <target state="translated">다른 프로세스가 새 코드를 준비 할 수 있도록 코드 쓰기 권한을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="09c97862a62c2fa6a793cf11c297f8d6b788b549" translate="yes" xml:space="preserve">
          <source>Release upgrade file</source>
          <target state="translated">릴리스 업그레이드 파일</target>
        </trans-unit>
        <trans-unit id="0fe65a88b4e14f014e0b3c78603bddcf72898de3" translate="yes" xml:space="preserve">
          <source>Release upgrade instructions are interpreted by the release handler when an upgrade or downgrade is made. For more information about release handling, see &lt;code&gt;OTP Design Principles&lt;/code&gt; in &lt;strong&gt;System Documentation&lt;/strong&gt;.</source>
          <target state="translated">릴리스 업그레이드 지침은 업그레이드 또는 다운 그레이드가 수행 될 때 릴리스 핸들러에서 해석됩니다. 릴리스 처리에 대한 자세한 내용은 &lt;strong&gt;시스템 설명서의 &lt;/strong&gt; &lt;code&gt;OTP Design Principles&lt;/code&gt; 을 참조하십시오 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="369560c15d5e85e475c6b562995f9fcd49fd567b" translate="yes" xml:space="preserve">
          <source>Release version.</source>
          <target state="translated">출시 버전.</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">Releases</target>
        </trans-unit>
        <trans-unit id="548d3054919203bd183a1ded8c8d31824834578d" translate="yes" xml:space="preserve">
          <source>Releases a binary obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt; enif_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt; enif_alloc_binary&lt;/a&gt;&lt;/code&gt; 에서 얻은 바이너리를 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="dfeb990703a2c588b44af2cd26546ad311c6ab1a" translate="yes" xml:space="preserve">
          <source>Releases a binary obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_binary&quot;&gt;enif_alloc_binary&lt;/a&gt;&lt;/code&gt; 에서 얻은 바이너리를 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="4e281e0f826facd98ecceebe9523eb2ae766b4f8" translate="yes" xml:space="preserve">
          <source>Releases up to and including Erlang/OTP R10 did not check if the process was already registered. The global name table could therefore become inconsistent. The old (buggy) behavior can be chosen by giving the Kernel application variable &lt;code&gt;global_multi_name_action&lt;/code&gt; the value &lt;code&gt;allow&lt;/code&gt;.</source>
          <target state="translated">Erlang / OTP R10까지의 릴리스는 프로세스가 이미 등록되어 있는지 확인하지 않았습니다. 따라서 전역 이름 테이블이 일치하지 않을 수 있습니다. 커널 응용 프로그램 변수 &lt;code&gt;global_multi_name_action&lt;/code&gt; 에 &lt;code&gt;allow&lt;/code&gt; 값을 지정 하여 이전 (버기) 동작을 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c581dab1907a3bfee043dac2fd31f1599d1e2e43" translate="yes" xml:space="preserve">
          <source>Releases.</source>
          <target state="translated">Releases.</target>
        </trans-unit>
        <trans-unit id="64d679813f9766d62d5576b1bf93d3d3f437f20e" translate="yes" xml:space="preserve">
          <source>Releasing the Erlang Shell</source>
          <target state="translated">Erlang 셸 해제</target>
        </trans-unit>
        <trans-unit id="3e5adc00a3e13272f013a6c83b211713760aa4e1" translate="yes" xml:space="preserve">
          <source>Relevant manual pages are the following:</source>
          <target state="translated">관련 매뉴얼 페이지는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2df0b3f17846bac2fbdbfa13c6c4f8a9a09ca29d" translate="yes" xml:space="preserve">
          <source>Reload the configuration without restarting the server:</source>
          <target state="translated">서버를 다시 시작하지 않고 구성을 다시로드하십시오.</target>
        </trans-unit>
        <trans-unit id="892b893ae67558c733d183c0cf9bfa2f667f6b56" translate="yes" xml:space="preserve">
          <source>Reloads all currently loaded modules that have changed on disk (see &lt;code&gt;mm()&lt;/code&gt;). Returns the list of results from calling &lt;code&gt;l(M)&lt;/code&gt; for each such &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">디스크에서 변경된 모든 현재로드 된 모듈을 다시로드합니다 ( &lt;code&gt;mm()&lt;/code&gt; 참조 ). 그러한 각 &lt;code&gt;M&lt;/code&gt; 에 대해 &lt;code&gt;l(M)&lt;/code&gt; 을 호출 한 결과 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a88146e081b7ea26a305d5560641eb3b9b496437" translate="yes" xml:space="preserve">
          <source>Reloads configuration file containing specified configuration key.</source>
          <target state="translated">지정된 구성 키가 포함 된 구성 파일을 다시로드합니다.</target>
        </trans-unit>
        <trans-unit id="5d2d1ade4f750a24b8183ab33233fd81e8d4a1d7" translate="yes" xml:space="preserve">
          <source>Reloads the HTTP server configuration without restarting the server. Incoming requests are answered with a temporary down message during the reload time.</source>
          <target state="translated">서버를 다시 시작하지 않고 HTTP 서버 구성을 다시로드합니다. 다시로드하는 동안 들어오는 요청에 임시 다운 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c84319814d8e6fe83a0c1b622bebb2f8ee15395e" translate="yes" xml:space="preserve">
          <source>Reloads the driver named &lt;code&gt;Name&lt;/code&gt; from a possibly different &lt;code&gt;Path&lt;/code&gt; than previously used. This function is used in the code change &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt;&lt;/code&gt; described in the introduction.</source>
          <target state="translated">이전에 사용한 것과 다른 &lt;code&gt;Path&lt;/code&gt; 에서 &lt;code&gt;Name&lt;/code&gt; 이라는 이름 의 드라이버를 다시로드합니다 . 이 기능은 소개에서 설명한 코드 변경 &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenario&lt;/a&gt;&lt;/code&gt; 에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="784e31d4f3c0cba2e7db35d731e55aca1c1fad9d" translate="yes" xml:space="preserve">
          <source>Reltool is a release management tool. It analyses a given Erlang/OTP installation and determines various dependencies between applications. The &lt;code&gt;graphical&lt;/code&gt; frontend depicts the dependencies and enables interactive customization of a target system. The backend provides a &lt;code&gt;batch&lt;/code&gt; interface for generation of customized target systems.</source>
          <target state="translated">Reltool은 릴리스 관리 도구입니다. 지정된 Erlang / OTP 설치를 분석하고 응용 프로그램 간의 다양한 종속성을 판별합니다. &lt;code&gt;graphical&lt;/code&gt; 프론트 엔드는 종속성을 묘사하고 대상 시스템의 상호 작용하는 사용자 정의 할 수 있습니다. 백엔드는 사용자 정의 된 대상 시스템 생성을위한 &lt;code&gt;batch&lt;/code&gt; 인터페이스를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="7f2e3fa39fb833cfad927a914aaf178d914c55ed" translate="yes" xml:space="preserve">
          <source>Remaining options are any accepted by &lt;code&gt;gen_sctp:open/1&lt;/code&gt;, with the exception of options &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt; and &lt;code&gt;sctp_events&lt;/code&gt;. Note that options &lt;code&gt;ip&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; specify the local address and port respectively.</source>
          <target state="translated">옵션 &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;binary&lt;/code&gt; , &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;active&lt;/code&gt; 및 &lt;code&gt;sctp_events&lt;/code&gt; 를 제외한 나머지 옵션은 &lt;code&gt;gen_sctp:open/1&lt;/code&gt; 에서 허용됩니다 . &lt;code&gt;ip&lt;/code&gt; 및 &lt;code&gt;port&lt;/code&gt; 옵션 은 각각 로컬 주소와 포트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="815293be363db289b37d927caa1f5d8eea88f49b" translate="yes" xml:space="preserve">
          <source>Remaining options are any accepted by &lt;code&gt;ssl:connect/3&lt;/code&gt; or &lt;code&gt;gen_tcp:connect/3&lt;/code&gt; for a connecting transport, or &lt;code&gt;ssl:listen/2&lt;/code&gt; or &lt;code&gt;gen_tcp:listen/2&lt;/code&gt; for a listening transport, depending on whether or not &lt;code&gt;{ssl_options, true}&lt;/code&gt; has been specified. Options &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;packet&lt;/code&gt; and &lt;code&gt;active&lt;/code&gt; cannot be specified. Also, option &lt;code&gt;port&lt;/code&gt; can be specified for a listening transport to specify the local listening port, the default being the standardized 3868. Note that the option &lt;code&gt;ip&lt;/code&gt; specifies the local address.</source>
          <target state="translated">나머지 옵션은 허용됩니다 &lt;code&gt;ssl:connect/3&lt;/code&gt; 또는 &lt;code&gt;gen_tcp:connect/3&lt;/code&gt; 연결 전송을 위해, 또는 &lt;code&gt;ssl:listen/2&lt;/code&gt; 또는 &lt;code&gt;gen_tcp:listen/2&lt;/code&gt; 여부에 따라 청취 전송을 위해 &lt;code&gt;{ssl_options, true}&lt;/code&gt; 이 지정되었습니다. &lt;code&gt;binary&lt;/code&gt; , &lt;code&gt;packet&lt;/code&gt; 및 &lt;code&gt;active&lt;/code&gt; 옵션을 지정할 수 없습니다. 또한 수신 전송에 옵션 &lt;code&gt;port&lt;/code&gt; 를 지정하여 로컬 수신 포트를 지정할 수 있습니다. 기본값은 표준 3868입니다. &lt;code&gt;ip&lt;/code&gt; 옵션 은 로컬 주소를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="66cf83c455fd1bd0a82aed4f3cb5675602a3ab47" translate="yes" xml:space="preserve">
          <source>Remember that file trace ports buffer the data by default. If the node crashes, trace messages are not flushed to the binary log. If the risk of failure is high, it can be a good idea to flush the buffers every now and then automatically. Passing &lt;code&gt;{flush, MSec}&lt;/code&gt; as an option of &lt;code&gt;ttb:tracer/2&lt;/code&gt; flushes all buffers every &lt;code&gt;MSec&lt;/code&gt; millisecond.</source>
          <target state="translated">파일 추적 포트는 기본적으로 데이터를 버퍼링합니다. 노드가 충돌하면 추적 메시지가 2 진 로그로 플러시되지 않습니다. 실패의 위험이 높으면 매번 버퍼를 플러시하고 자동으로 플러시하는 것이 좋습니다. &lt;code&gt;ttb:tracer/2&lt;/code&gt; 의 옵션으로 &lt;code&gt;{flush, MSec}&lt;/code&gt; 를 전달하면 매 &lt;code&gt;MSec&lt;/code&gt; 밀리 초 마다 모든 버퍼가 플러시됩니다 .</target>
        </trans-unit>
        <trans-unit id="26dfb878780f2523c83b1d853967893e8ff04168" translate="yes" xml:space="preserve">
          <source>Remember that the | operator can be used to get the head of a list:</source>
          <target state="translated">기억하십시오 | 연산자를 사용하여 목록의 헤드를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="389b0b7962fe40649a28790b524a030d6d8fe385" translate="yes" xml:space="preserve">
          <source>Remember that:</source>
          <target state="translated">기억:</target>
        </trans-unit>
        <trans-unit id="686a7bcf3ee9d003c423a149b032762a3856b5ca" translate="yes" xml:space="preserve">
          <source>Remember to free &lt;code&gt;pid&lt;/code&gt; later with &lt;code&gt;&lt;a href=&quot;ei#ei_x_free&quot;&gt; ei_x_free&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">나중에 &lt;code&gt;&lt;a href=&quot;ei#ei_x_free&quot;&gt; ei_x_free&lt;/a&gt;&lt;/code&gt; 로 &lt;code&gt;pid&lt;/code&gt; 를 해제하는 것을 잊지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="78a5feb713d2557dfe3eacd16a70807ff5ae0bd3" translate="yes" xml:space="preserve">
          <source>Remember to free &lt;code&gt;pid&lt;/code&gt; later with &lt;code&gt;&lt;a href=&quot;erl_malloc#erl_free_term&quot;&gt;erl_malloc:erl_free_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">나중에 &lt;code&gt;&lt;a href=&quot;erl_malloc#erl_free_term&quot;&gt;erl_malloc:erl_free_term&lt;/a&gt;&lt;/code&gt; 으로 &lt;code&gt;pid&lt;/code&gt; 를 해제해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eca0d691ee9c6774e0eb8b51cbe73481e15cdf17" translate="yes" xml:space="preserve">
          <source>Remote Procedure Call services.</source>
          <target state="translated">원격 프로 시저 호출 서비스.</target>
        </trans-unit>
        <trans-unit id="98ef7c5ca9880fe05d2a7209c1987cab4b52873f" translate="yes" xml:space="preserve">
          <source>Remote hostname.</source>
          <target state="translated">원격 호스트 이름</target>
        </trans-unit>
        <trans-unit id="bcfceb272c786094ee4dfb353770550b1fbd9c5f" translate="yes" xml:space="preserve">
          <source>Remote procedure calls</source>
          <target state="translated">원격 프로 시저 호출</target>
        </trans-unit>
        <trans-unit id="6c62ad2fef650defef629666029a983bdea55bce" translate="yes" xml:space="preserve">
          <source>Remote type, that is, type defined in, and exported by, other modules; more about this soon.</source>
          <target state="translated">원격 유형, 즉 다른 모듈에 정의되어 내보내는 유형. 이것에 대해 더 빨리.</target>
        </trans-unit>
        <trans-unit id="f3d2fdb2a1bafef3bfef448975f7ee50436cc38f" translate="yes" xml:space="preserve">
          <source>Remote.</source>
          <target state="translated">Remote.</target>
        </trans-unit>
        <trans-unit id="3a07d5691e90ca1626bc3af406339c26bbc92230" translate="yes" xml:space="preserve">
          <source>Remove (rm) one or more algorithms from &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 에서 하나 이상의 알고리즘을 제거하십시오 (rm) .</target>
        </trans-unit>
        <trans-unit id="a1b19b04489ffa84280a335fd561b33e3df1e32b" translate="yes" xml:space="preserve">
          <source>Remove all edges of &lt;code&gt;G&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from v[i] and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; to v[i+1] for 1 &amp;lt;= i &amp;lt; k (including multiple edges).</source>
          <target state="translated">v [i]에서 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; &lt;code&gt;G&lt;/code&gt; 의 모든 모서리를 제거하고 1 &amp;lt;= i &amp;lt;k (여러 모서리 포함) 동안 v [i + 1]에 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="aa1bc0e635cc0c09da1d0e321cb9f66931a8a682" translate="yes" xml:space="preserve">
          <source>Remove call count breakpoints from the matching functions that has call count breakpoints.</source>
          <target state="translated">호출 횟수 중단 점이있는 일치하는 함수에서 호출 횟수 중단 점을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="1c94e4f466ef58b151007050c8d81df3b4baf221" translate="yes" xml:space="preserve">
          <source>Remove module specific log settings. After this, the primary log level is used for all modules.</source>
          <target state="translated">모듈 별 로그 설정을 제거하십시오. 그런 다음 기본 로그 수준이 모든 모듈에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1752d32ef2409c2c524b1db337059b374545e2f1" translate="yes" xml:space="preserve">
          <source>Remove module specific log settings. After this, the primary log level is used for the specified modules.</source>
          <target state="translated">모듈 별 로그 설정을 제거하십시오. 그런 다음 기본 로그 수준이 지정된 모듈에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2de54fa41d973e8645ea65252a458390fa9b8e13" translate="yes" xml:space="preserve">
          <source>Remove previously added transports.</source>
          <target state="translated">이전에 추가 한 전송을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="de2212deaf408786494f5a6437f6c7dfb1de7a09" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;'silent'&lt;/code&gt; trace flag when the first argument is &lt;code&gt;'verbose'&lt;/code&gt;, and add it when it is &lt;code&gt;'silent':&lt;/code&gt;</source>
          <target state="translated">첫 번째 인수가 &lt;code&gt;'verbose'&lt;/code&gt; 일 때 &lt;code&gt;'silent'&lt;/code&gt; 추적 플래그를 제거하고 'silent' 일 때 추가하십시오 &lt;code&gt;'silent':&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a7e6b21af3f135b3cdacba8a5341aa629ec7d5" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;TARGET_CPU=amd64&lt;/code&gt; for 32bit build.</source>
          <target state="translated">32 비트 빌드의 경우 &lt;code&gt;TARGET_CPU=amd64&lt;/code&gt; 를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="33db45d930f4a1d52bbae95e5aca25fe6daa18fa" translate="yes" xml:space="preserve">
          <source>Remove the engine from OpenSSL's internal list.</source>
          <target state="translated">OpenSSL의 내부 목록에서 엔진을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="8c1a0c637d49a4d7569668331ee1b3088eb73750" translate="yes" xml:space="preserve">
          <source>Remove the filter identified by &lt;code&gt;FilterId&lt;/code&gt; from the handler identified by &lt;code&gt;HandlerId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HandlerId&lt;/code&gt; 로 식별 된 핸들러에서 &lt;code&gt;FilterId&lt;/code&gt; 로 식별 된 필터를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e2a9bd7f431a82ca58a25b840ca86d577fc69f6" translate="yes" xml:space="preserve">
          <source>Remove the handler identified by &lt;code&gt;HandlerId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HandlerId&lt;/code&gt; 로 식별 된 핸들러를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="270d63a2d4e284cb38a67b35a61f4d1b10185100" translate="yes" xml:space="preserve">
          <source>Remove the old version.</source>
          <target state="translated">이전 버전을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a1bc432335254977c2eff9f225b9bfe4b9346eb9" translate="yes" xml:space="preserve">
          <source>Remove the primary filter identified by &lt;code&gt;FilterId&lt;/code&gt; from Logger.</source>
          <target state="translated">Logger에서 &lt;code&gt;FilterId&lt;/code&gt; 로 식별 된 기본 필터를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ab44531e296112b4f85de0885693c0cd1e921a5" translate="yes" xml:space="preserve">
          <source>Removes (one) &lt;code&gt;{_, MonitorRef, _, _, _}&lt;/code&gt; message, if there is one, from the caller message queue after monitoring has been stopped.</source>
          <target state="translated">&lt;code&gt;{_, MonitorRef, _, _, _}&lt;/code&gt; 메시지가있을 경우 모니터링이 중지 된 후 발신자 메시지 큐에서 메시지를 제거합니다 (하나) .</target>
        </trans-unit>
        <trans-unit id="2af136900a1f59bad5aae8293e0b480336d75d7b" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 를 제거 합니다 .</target>
        </trans-unit>
        <trans-unit id="03f171efe53cf0618e1bae4161bc9cdd31be0be5" translate="yes" xml:space="preserve">
          <source>Removes a driver entry &lt;code&gt;de&lt;/code&gt; previously added with &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt; add_driver_entry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">드라이버 항목을 제거 &lt;code&gt;de&lt;/code&gt; 이전에 추가 &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt; add_driver_entry&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="6c9c0f67a25257aba96321b301fce1c1d0e01aea" translate="yes" xml:space="preserve">
          <source>Removes a driver entry &lt;code&gt;de&lt;/code&gt; previously added with &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt;add_driver_entry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">드라이버 항목을 제거 &lt;code&gt;de&lt;/code&gt; 이전에 추가 &lt;code&gt;&lt;a href=&quot;#add_driver_entry&quot;&gt;add_driver_entry&lt;/a&gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="ef910fd5c7a07e6df5e2bcac95688a112adbf8b2" translate="yes" xml:space="preserve">
          <source>Removes a driver monitor in much the same way as &lt;code&gt;erlang:demonitor/1&lt;/code&gt; in ERTS does with process monitors. For details about how to create driver monitors, see &lt;code&gt;&lt;a href=&quot;#monitor-2&quot;&gt;monitor/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#try_unload-2&quot;&gt;try_unload/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ERTS의 &lt;code&gt;erlang:demonitor/1&lt;/code&gt; 이 프로세스 모니터와 동일한 방식으로 드라이버 모니터를 제거합니다 . 드라이버 모니터를 작성하는 방법에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#monitor-2&quot;&gt;monitor/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#try_unload-2&quot;&gt;try_unload/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="469ccfe46e68680d711e0478f9486ba9db3e26c4" translate="yes" xml:space="preserve">
          <source>Removes a filename extension. &lt;code&gt;rootname/2&lt;/code&gt; works as &lt;code&gt;rootname/1&lt;/code&gt;, except that the extension is removed only if it is &lt;code&gt;Ext&lt;/code&gt;.</source>
          <target state="translated">파일 이름 확장자를 제거합니다. &lt;code&gt;rootname/2&lt;/code&gt; 는 확장자가 &lt;code&gt;Ext&lt;/code&gt; 인 경우에만 제거된다는 점을 제외하고 &lt;code&gt;rootname/1&lt;/code&gt; 로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="1b14b878159ba088a4ac36e06fe824879ef44159" translate="yes" xml:space="preserve">
          <source>Removes a reference to resource object &lt;code&gt;obj&lt;/code&gt; obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The resource object is destructed when the last reference is removed. Each call to &lt;code&gt;enif_release_resource&lt;/code&gt; must correspond to a previous call to &lt;code&gt;enif_alloc_resource&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt; enif_keep_resource&lt;/a&gt;&lt;/code&gt;. References made by &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt; enif_make_resource&lt;/a&gt;&lt;/code&gt; can only be removed by the garbage collector.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에서 얻은 자원 객체 &lt;code&gt;obj&lt;/code&gt; 에 대한 참조를 제거합니다 . 마지막 참조가 제거되면 리소스 개체가 소멸됩니다. &lt;code&gt;enif_release_resource&lt;/code&gt; 에 대한 각 호출은 &lt;code&gt;enif_alloc_resource&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt; enif_keep_resource&lt;/a&gt;&lt;/code&gt; 에 대한 이전 호출과 일치해야합니다 . &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt; enif_make_resource&lt;/a&gt;&lt;/code&gt; 에서 만든 참조는 가비지 수집기에서만 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfdbbaeba26ada922495e3b365aa4160395c9fe4" translate="yes" xml:space="preserve">
          <source>Removes a reference to resource object &lt;code&gt;obj&lt;/code&gt; obtained from &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;. The resource object is destructed when the last reference is removed. Each call to &lt;code&gt;enif_release_resource&lt;/code&gt; must correspond to a previous call to &lt;code&gt;enif_alloc_resource&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt;enif_keep_resource&lt;/a&gt;&lt;/code&gt;. References made by &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt; can only be removed by the garbage collector.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에서 확보 한 자원 오브젝트 &lt;code&gt;obj&lt;/code&gt; 에 대한 참조를 제거합니다 . 마지막 참조가 제거되면 자원 객체가 소멸됩니다. &lt;code&gt;enif_release_resource&lt;/code&gt; 에 대한 각 호출은 &lt;code&gt;enif_alloc_resource&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#enif_keep_resource&quot;&gt;enif_keep_resource&lt;/a&gt;&lt;/code&gt; 에 대한 이전 호출에 해당해야합니다 . &lt;code&gt;&lt;a href=&quot;#enif_make_resource&quot;&gt;enif_make_resource&lt;/a&gt;&lt;/code&gt; 로 작성된 참조는 가비지 콜렉터에서만 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f93eec43121b96bc7a270f3d88692f108331e875" translate="yes" xml:space="preserve">
          <source>Removes a release and its files from the system. The release must not be the permanent release. Removes only the files and directories not in use by another release.</source>
          <target state="translated">시스템에서 릴리스 및 해당 파일을 제거합니다. 릴리스는 영구 릴리스가 아니어야합니다. 다른 릴리스에서 사용하지 않는 파일 및 디렉토리 만 제거합니다.</target>
        </trans-unit>
        <trans-unit id="69722c4296c8491884f2e4d612c28fd292392777" translate="yes" xml:space="preserve">
          <source>Removes all breakpoints.</source>
          <target state="translated">모든 중단 점을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="ebf28b81a76f27b32b9e5da02e466fe49e99b342" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader from BEAM files. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed. The returned list contains one element for each specified filename, in the same order as in &lt;code&gt;Files&lt;/code&gt;.</source>
          <target state="translated">BEAM 파일에서 로더에 필요한 것을 제외한 모든 청크를 제거합니다. 특히 디버그 정보 (chunk &lt;code&gt;debug_info&lt;/code&gt; 및 &lt;code&gt;abstract_code&lt;/code&gt; )가 제거됩니다. 반환 된리스트에는 &lt;code&gt;Files&lt;/code&gt; 와 같은 순서로 지정된 각 파일 이름에 대해 하나의 요소가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="69c09d3f76b01192e3e0cb5339b531159c96fb89" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader from the BEAM files of a release. &lt;code&gt;Dir&lt;/code&gt; is to be the installation root directory. For example, the current OTP release can be stripped with the call &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt;.</source>
          <target state="translated">릴리스의 BEAM 파일에서 로더에 필요한 것을 제외한 모든 청크를 제거합니다. &lt;code&gt;Dir&lt;/code&gt; 은 설치 루트 디렉토리입니다. 예를 들어, 현재 OTP 릴리스는 &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt; 호출로 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="76f81f31ec9db31e5973babc943b80d8ca3f0ae3" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader or passed in from BEAM files. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed. The returned list contains one element for each specified filename, in the same order as in &lt;code&gt;Files&lt;/code&gt;.</source>
          <target state="translated">로더에 필요하거나 BEAM 파일에서 전달 된 청크를 제외한 모든 청크를 제거합니다. 특히, 디버그 정보 (청크 &lt;code&gt;debug_info&lt;/code&gt; 및 &lt;code&gt;abstract_code&lt;/code&gt; )가 제거됩니다. 반환 된 목록에는 &lt;code&gt;Files&lt;/code&gt; 와 동일한 순서로 지정된 각 파일 이름에 대해 하나의 요소가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="bec531ee3dab090590303bb93e69b8d8eab0ec66" translate="yes" xml:space="preserve">
          <source>Removes all chunks except those needed by the loader or passed in from the BEAM files of a release. &lt;code&gt;Dir&lt;/code&gt; is to be the installation root directory. For example, the current OTP release can be stripped with the call &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt;.</source>
          <target state="translated">로더에 필요하거나 릴리스의 BEAM 파일에서 전달 된 청크를 제외한 모든 청크를 제거합니다. &lt;code&gt;Dir&lt;/code&gt; 은 설치 루트 디렉토리가됩니다. 예를 들어, 현재 OTP 릴리스는 &lt;code&gt;beam_lib:strip_release(code:root_dir())&lt;/code&gt; 호출로 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="add3b82363b2f3c866cf1469ae9b1cea4fb9834a" translate="yes" xml:space="preserve">
          <source>Removes all chunks from a BEAM file except those needed by the loader or passed in. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed.</source>
          <target state="translated">BEAM 파일에서 로더에 의해 필요하거나 전달 된 것을 제외한 모든 청크를 제거합니다. 특히 디버그 정보 (청크 &lt;code&gt;debug_info&lt;/code&gt; 및 &lt;code&gt;abstract_code&lt;/code&gt; )가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b653de0025fa2e1c9e18ccdf6499bb91a5318e88" translate="yes" xml:space="preserve">
          <source>Removes all chunks from a BEAM file except those needed by the loader. In particular, the debug information (chunk &lt;code&gt;debug_info&lt;/code&gt; and &lt;code&gt;abstract_code&lt;/code&gt;) is removed.</source>
          <target state="translated">로더가 필요로하는 것을 제외한 BEAM 파일에서 모든 청크를 제거합니다. 특히 디버그 정보 (chunk &lt;code&gt;debug_info&lt;/code&gt; 및 &lt;code&gt;abstract_code&lt;/code&gt; )가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="8e06a52291161535a71ec3cf6b4b53521525128d" translate="yes" xml:space="preserve">
          <source>Removes all comments from all nodes of a syntax tree. All other attributes (such as position information) remain unchanged. Standalone comments in form lists are removed; any other standalone comments are changed into null-comments (no text, no indentation).</source>
          <target state="translated">구문 트리의 모든 노드에서 모든 주석을 제거합니다. 위치 정보와 같은 다른 모든 속성은 변경되지 않습니다. 양식 목록의 독립형 주석이 제거됩니다. 다른 독립형 주석은 텍스트가없고 들여 쓰기가없는 null 주석으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="2ba013b61f6c343926311bc6cb40098be1f76e8e" translate="yes" xml:space="preserve">
          <source>Removes all empty parts of the result.</source>
          <target state="translated">결과의 빈 부분을 모두 제거합니다.</target>
        </trans-unit>
        <trans-unit id="423a342bd4a5da772f2ac8a4ddc5c196849871b4" translate="yes" xml:space="preserve">
          <source>Removes all items from a disk log. If argument &lt;code&gt;Head&lt;/code&gt; or &lt;code&gt;BHead&lt;/code&gt; is specified, this item is written first in the newly truncated log, otherwise the header given to &lt;code&gt;open/1&lt;/code&gt; is used. The header argument is used only once. Next time a wrap log file is opened, the header given to &lt;code&gt;open/1&lt;/code&gt; is used.</source>
          <target state="translated">디스크 로그에서 모든 항목을 제거합니다. &lt;code&gt;Head&lt;/code&gt; 또는 &lt;code&gt;BHead&lt;/code&gt; 인수 가 지정되면이 항목은 새로 잘린 로그에 먼저 기록되고, 그렇지 않으면 &lt;code&gt;open/1&lt;/code&gt; 에 제공된 헤더 가 사용됩니다. 헤더 인수는 한 번만 사용됩니다. 다음에 랩 로그 파일을 &lt;code&gt;open/1&lt;/code&gt; 지정된 헤더 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9124834eeba59cb5d4394905a7f8431b79dc8304" translate="yes" xml:space="preserve">
          <source>Removes all objects marked for deletion. When objects are deleted with &lt;code&gt;ei_reg_delete()&lt;/code&gt; they are not removed from the registry, only marked for later removal. On a later backup to &lt;code&gt;Mnesia&lt;/code&gt;, the objects can also be removed from the &lt;code&gt;Mnesia&lt;/code&gt; table. If you are not backing up to &lt;code&gt;Mnesia&lt;/code&gt;, you may wish to remove the objects manually with this function.</source>
          <target state="translated">삭제 표시된 모든 개체를 제거합니다. &lt;code&gt;ei_reg_delete()&lt;/code&gt; 객체를 삭제 하면 레지스트리에서 제거되지 않고 나중에 제거 할 수 있도록 표시됩니다. 나중에 &lt;code&gt;Mnesia&lt;/code&gt; 에 백업 할 때 &lt;code&gt;Mnesia&lt;/code&gt; 테이블 에서 객체를 제거 할 수도 있습니다 . &lt;code&gt;Mnesia&lt;/code&gt; 에 백업하지 않는 경우이 기능을 사용하여 수동으로 개체를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="006c0542f30160a6d1b184407353efd9e067c6df" translate="yes" xml:space="preserve">
          <source>Removes all record definitions, then reads record definitions from the modules &lt;code&gt;shell_default&lt;/code&gt; and &lt;code&gt;user_default&lt;/code&gt; (if loaded). Returns the names of the records defined.</source>
          <target state="translated">모든 레코드 정의를 제거한 다음 &lt;code&gt;shell_default&lt;/code&gt; 및 &lt;code&gt;user_default&lt;/code&gt; (로드 된 경우) 모듈에서 레코드 정의를 읽습니다 . 정의 된 레코드의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c21f9615f09252f2d8d49897680a589dc928737" translate="yes" xml:space="preserve">
          <source>Removes all variable bindings.</source>
          <target state="translated">모든 변수 바인딩을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="0a4c4b594d16c7a2ef5704cbf29a757883867569" translate="yes" xml:space="preserve">
          <source>Removes an installed debug function from the process. &lt;code&gt;Func&lt;/code&gt; or &lt;code&gt;FuncId&lt;/code&gt; must be the same as previously installed.</source>
          <target state="translated">프로세스에서 설치된 디버그 기능을 제거합니다. &lt;code&gt;Func&lt;/code&gt; 또는 &lt;code&gt;FuncId&lt;/code&gt; 는 이전에 설치된 것과 같아야 합니다.</target>
        </trans-unit>
        <trans-unit id="2df2ad072e68f52d7ebb2bd3a6411521ff839dae" translate="yes" xml:space="preserve">
          <source>Removes anything before &lt;code&gt;SearchPattern&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt; and returns the remainder of the string or &lt;code&gt;nomatch&lt;/code&gt; if &lt;code&gt;SearchPattern&lt;/code&gt; is not found. &lt;code&gt;Dir&lt;/code&gt;, which can be &lt;code&gt;leading&lt;/code&gt; or &lt;code&gt;trailing&lt;/code&gt;, indicates from which direction characters are to be searched.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에서 &lt;code&gt;SearchPattern&lt;/code&gt; 이전의 항목을 제거 하고 &lt;code&gt;SearchPattern&lt;/code&gt; 을 찾을 수없는 경우 나머지 문자열 또는 &lt;code&gt;nomatch&lt;/code&gt; 하지 않는 부분을 ​​반환합니다 . &lt;code&gt;leading&lt;/code&gt; 또는 &lt;code&gt;trailing&lt;/code&gt; 일 수있는 &lt;code&gt;Dir&lt;/code&gt; 은 검색 할 방향 문자를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0c5aecc0b610cae928d0362a36410e9e33385d9" translate="yes" xml:space="preserve">
          <source>Removes applications and their modules and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 에서 응용 프로그램 및 해당 모듈 및 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 를 제거 합니다 .</target>
        </trans-unit>
        <trans-unit id="fa5b181b692c2ebda89d9eec6c2bc30aa063a1a2" translate="yes" xml:space="preserve">
          <source>Removes cipher suites if any of the filter functions returns false for any part of the cipher suite. If no filter function is supplied for some part the default behaviour regards it as if there was a filter function that returned true. For examples see &lt;code&gt; Customizing cipher suites &lt;/code&gt; Additionaly this function also filters the cipher suites to exclude cipher suites not supported by the cryptolib used by the OTP crypto application. That is calling ssl:filter_cipher_suites(Suites, []) will be equivalent to only applying the filters for cryptolib support.</source>
          <target state="translated">필터 함수가 암호 제품군의 일부에 대해 false를 반환하는 경우 암호 제품군을 제거합니다. 일부 부분에 대해 필터 함수가 제공되지 않으면 기본 동작은 true를 반환 한 필터 함수가있는 것처럼 간주합니다. 예제는 &lt;code&gt; Customizing cipher suites &lt;/code&gt; 참조하십시오. 추가로이 기능은 OTP 암호 애플리케이션에서 사용하는 cryptolib에서 지원하지 않는 암호 스위트를 제외하도록 암호 스위트를 필터링합니다. 즉, ssl : filter_cipher_suites (Suites, []) 호출은 cryptolib 지원을위한 필터 만 적용하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d58329662a1a0da29049c8ec4fb23031b2a385a8" translate="yes" xml:space="preserve">
          <source>Removes cipher suites if any of the filter functions returns false for any part of the cipher suite. This function also calls default filter functions to make sure the cipher suites are supported by crypto. If no filter function is supplied for some part the default behaviour is fun(Algorithm) -&amp;gt; true.</source>
          <target state="translated">필터 스위트 중 하나가 암호화 스위트의 일부에 대해 false를 리턴하면 암호화 스위트를 제거합니다. 이 함수는 또한 기본 필터 기능을 호출하여 암호 제품군이 암호화에서 지원되는지 확인합니다. 일부에 대해 필터 기능이 제공되지 않으면 기본 동작은 fun (Algorithm)-&amp;gt; true입니다.</target>
        </trans-unit>
        <trans-unit id="6e0849ded45459bb75fc962a53bf83df2a5b5ba0" translate="yes" xml:space="preserve">
          <source>Removes configuration variables (together wih their aliases) that were loaded with specified callback module and configuration string.</source>
          <target state="translated">지정된 콜백 모듈 및 구성 문자열과 함께로드 된 구성 변수 (별명과 함께)를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="19a1a1f167a8dd46ef5ea9470ec88dd1d515a514" translate="yes" xml:space="preserve">
          <source>Removes directory &lt;code&gt;Dir&lt;/code&gt; at the remote server.</source>
          <target state="translated">원격 서버에서 디렉토리 &lt;code&gt;Dir&lt;/code&gt; 을 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="02924e99f1092efed94b21cddc4567c00ed0797b" translate="yes" xml:space="preserve">
          <source>Removes nodes from the current cover test.</source>
          <target state="translated">현재 커버 테스트에서 노드를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="885e65fb702e1735df6f9356bb3a59114e457f09" translate="yes" xml:space="preserve">
          <source>Removes old code for &lt;code&gt;Module&lt;/code&gt;. Before this BIF is used, &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt; check_process_code/2&lt;/a&gt;&lt;/code&gt; is to be called to check that no processes execute old code in the module.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 에 대한 이전 코드를 제거합니다 . 이 BIF를 사용하기 전에 &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt; check_process_code/2&lt;/a&gt;&lt;/code&gt; 를 호출하여 모듈에서 이전 코드를 실행하는 프로세스가 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cf8e7542d98d969ab5b6a2bc0c3d6d5e50905b7d" translate="yes" xml:space="preserve">
          <source>Removes old code for &lt;code&gt;Module&lt;/code&gt;. Before this BIF is used, &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt;check_process_code/2&lt;/a&gt;&lt;/code&gt;is to be called to check that no processes execute old code in the module.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 의 오래된 코드를 제거합니다 . 이 BIF를 사용하기 전에 모듈에서 오래된 코드를 실행하는 프로세스가 없는지 확인하기 위해 &lt;code&gt;&lt;a href=&quot;#check_process_code-2&quot;&gt;check_process_code/2&lt;/a&gt;&lt;/code&gt; 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="281c5754c557f40c25fc049eb32abf747c439426" translate="yes" xml:space="preserve">
          <source>Removes releases and their applications, modules and &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; from an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 에서 릴리스 및 해당 응용 프로그램, 모듈 및 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 제거 합니다 .</target>
        </trans-unit>
        <trans-unit id="1494c23d99ae7a074da0f5767968b97ada72e430" translate="yes" xml:space="preserve">
          <source>Removes selected record definitions. &lt;code&gt;RecordNames&lt;/code&gt; is a record name or a list of record names. To remove all record definitions, use &lt;code&gt;'_'&lt;/code&gt;.</source>
          <target state="translated">선택된 레코드 정의를 제거합니다. &lt;code&gt;RecordNames&lt;/code&gt; 는 레코드 이름 또는 레코드 이름 목록입니다. 모든 레코드 정의를 제거하려면 &lt;code&gt;'_'&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="08aa69eb4dff9986ba433e51ea964d15b903f2db" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;Key&lt;/code&gt;, if it exists, and its associated value from &lt;code&gt;Map1&lt;/code&gt; and returns a new map &lt;code&gt;Map2&lt;/code&gt; without key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">삭제 &lt;code&gt;Key&lt;/code&gt; 존재하는 경우,과에서 관련 값 &lt;code&gt;Map1&lt;/code&gt; 과 새로운 맵 반환 &lt;code&gt;Map2&lt;/code&gt; 에를 키없이 &lt;code&gt;Key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93557a3a60b8e22b6a793259a6b192bb29de371b" translate="yes" xml:space="preserve">
          <source>Removes the binding of &lt;code&gt;Name&lt;/code&gt; in &lt;code&gt;BindingStruct&lt;/code&gt;. Returns an updated binding structure.</source>
          <target state="translated">&lt;code&gt;BindingStruct&lt;/code&gt; 에서 &lt;code&gt;Name&lt;/code&gt; 바인딩을 제거합니다 . 업데이트 된 바인딩 구조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="537e2f9fa77de9edf6444f921d6e10ab6626425c" translate="yes" xml:space="preserve">
          <source>Removes the binding of variable &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">변수 &lt;code&gt;X&lt;/code&gt; 의 바인딩을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="2a70e4c1ab0cf5300dd607b66a1471f48013af8c" translate="yes" xml:space="preserve">
          <source>Removes the configuration parameter &lt;code&gt;Par&lt;/code&gt; and its value for &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">구성 매개 변수 &lt;code&gt;Par&lt;/code&gt; 및 &lt;code&gt;Application&lt;/code&gt; 값을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="2a7b9f71cdf502a6cbced36e46c5564bce6c50e1" translate="yes" xml:space="preserve">
          <source>Removes the current code for &lt;code&gt;Module&lt;/code&gt;, that is, the current code for &lt;code&gt;Module&lt;/code&gt; is made old. This means that processes can continue to execute the code in the module, but no external function calls can be made to it.</source>
          <target state="translated">현재 코드 제거 &lt;code&gt;Module&lt;/code&gt; , 현재 코드, &lt;code&gt;Module&lt;/code&gt; 오래된 구성되어 있습니다. 이는 프로세스가 모듈에서 코드를 계속 실행할 수 있지만 외부 함수 호출은 수행 할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1f61ca04390382aeff5d670ab45ee550c4297632" translate="yes" xml:space="preserve">
          <source>Removes the globally registered name &lt;code&gt;Name&lt;/code&gt; from the network of Erlang nodes.</source>
          <target state="translated">Erlang 노드의 네트워크에서 전체적으로 등록 된 이름 &lt;code&gt;Name&lt;/code&gt; 을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="81e55227c7de5aa8064bff12851856ba47f63444" translate="yes" xml:space="preserve">
          <source>Removes the item at the front of queue &lt;code&gt;Q1&lt;/code&gt;. Returns tuple &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the item removed and &lt;code&gt;Q2&lt;/code&gt; is the resulting queue. If &lt;code&gt;Q1&lt;/code&gt; is empty, tuple &lt;code&gt;{empty, Q1}&lt;/code&gt; is returned.</source>
          <target state="translated">큐 &lt;code&gt;Q1&lt;/code&gt; 앞의 항목을 제거합니다 . 튜플 &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt; 반환합니다 . 여기서 &lt;code&gt;Item&lt;/code&gt; 은 제거 된 항목이고 &lt;code&gt;Q2&lt;/code&gt; 는 결과 대기열입니다. 경우 &lt;code&gt;Q1&lt;/code&gt; 이 비어 튜플 &lt;code&gt;{empty, Q1}&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8847d0032fa945206d3bb9ae3e11a876f1dfecc7" translate="yes" xml:space="preserve">
          <source>Removes the item at the rear of queue &lt;code&gt;Q1&lt;/code&gt;. Returns tuple &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt;, where &lt;code&gt;Item&lt;/code&gt; is the item removed and &lt;code&gt;Q2&lt;/code&gt; is the new queue. If &lt;code&gt;Q1&lt;/code&gt; is empty, tuple &lt;code&gt;{empty, Q1}&lt;/code&gt; is returned.</source>
          <target state="translated">큐 &lt;code&gt;Q1&lt;/code&gt; 의 뒷면에있는 항목을 제거합니다 . 튜플 &lt;code&gt;{{value, Item}, Q2}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Item&lt;/code&gt; 은 제거 된 항목이고 &lt;code&gt;Q2&lt;/code&gt; 는 새 큐입니다. 경우 &lt;code&gt;Q1&lt;/code&gt; 이 비어 튜플 &lt;code&gt;{empty, Q1}&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="571beed8fa2a0a28fac65d7bf77305b45836b63c" translate="yes" xml:space="preserve">
          <source>Removes the link, if there is one, between the calling process and the process or port referred to by &lt;code&gt;Id&lt;/code&gt;.</source>
          <target state="translated">호출 프로세스와 &lt;code&gt;Id&lt;/code&gt; 가 참조하는 프로세스 또는 포트 사이에 링크가 있으면 링크를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="504de2ff2d5c71d2f018e6c02a78b16a7a10f573" translate="yes" xml:space="preserve">
          <source>Removes the node with key &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;Tree1&lt;/code&gt; and returns the new tree. Assumes that the key is present in the tree, crashes otherwise.</source>
          <target state="translated">&lt;code&gt;Tree1&lt;/code&gt; 에서 &lt;code&gt;Key&lt;/code&gt; 키가있는 노드를 제거하고 새 트리를 반환합니다. 키가 트리에 있다고 가정하고 그렇지 않으면 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="70950e4f3c8e2c52528b10b76a754de546dbfc5e" translate="yes" xml:space="preserve">
          <source>Removes the node with key &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;Tree1&lt;/code&gt; if the key is present in the tree, otherwise does nothing. Returns the new tree.</source>
          <target state="translated">키를 사용하여 노드 제거 &lt;code&gt;Key&lt;/code&gt; 에서 &lt;code&gt;Tree1&lt;/code&gt; , 그렇지 않으면 아무것도하지 않는다, 키가 트리에있는 경우입니다. 새로운 트리를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="971ac232183d0065bf0bdfc8b8573c390073318f" translate="yes" xml:space="preserve">
          <source>Removes the possibility for SNMP to manipulate the table.</source>
          <target state="translated">SNMP가 테이블을 조작 할 가능성을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f6583a0dab178a2fb992ad59fefd4d81f7931c54" translate="yes" xml:space="preserve">
          <source>Removes the registered name &lt;code&gt;RegName&lt;/code&gt; associated with a process identifier or a port identifier, for example:</source>
          <target state="translated">프로세스 식별자 또는 포트 식별자와 관련된 등록 이름 &lt;code&gt;RegName&lt;/code&gt; 을 제거합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dbc47bf2382d0f415e3aa194df6dfa16f631c639" translate="yes" xml:space="preserve">
          <source>Removes the service completely with all its registered options. It is stopped before it is removed.</source>
          <target state="translated">등록 된 모든 옵션으로 서비스를 완전히 제거합니다. 제거되기 전에 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="acc9c9c020f9d887226a9272cf21c3405519decf" translate="yes" xml:space="preserve">
          <source>Removes the subscription on events of type &lt;code&gt;Event-Category&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Event-Category&lt;/code&gt; 유형의 이벤트 에 대한 구독을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="cb76eef89426250953e573fa86236fe52b0f4297" translate="yes" xml:space="preserve">
          <source>Removes the validation callback call before heartbeats.</source>
          <target state="translated">하트 비트 전에 유효성 검사 콜백 호출을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1d9765a2dae7a6da7b34b4a4b327bad4140b2d58" translate="yes" xml:space="preserve">
          <source>Removes trailing empty parts of the result (as does &lt;code&gt;trim&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;re#split-3&quot;&gt;re:split/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;re#split-3&quot;&gt;re:split/3&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;trim&lt;/code&gt; 하는 것처럼 결과의 후행 빈 부분을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="dc704ae3bc04ac3e06137d6e6058582a4d180738" translate="yes" xml:space="preserve">
          <source>Removing a transport causes the corresponding transport processes to be terminated. Whether or not a DPR message is sent to a peer is controlled by value of &lt;code&gt;&lt;a href=&quot;#disconnect_cb&quot;&gt;disconnect_cb&lt;/a&gt;&lt;/code&gt; configured on the transport.</source>
          <target state="translated">전송을 제거하면 해당 전송 프로세스가 종료됩니다. DPR 메시지가 피어로 전송되는지 여부는 전송에 구성된 &lt;code&gt;&lt;a href=&quot;#disconnect_cb&quot;&gt;disconnect_cb&lt;/a&gt;&lt;/code&gt; 값으로 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="23711c5d370f461cdeb8d7a28cd3a7168c48b70d" translate="yes" xml:space="preserve">
          <source>Removing an application means that the application is stopped, the modules are unloaded using &lt;code&gt;delete_module&lt;/code&gt;, and then the application specification is unloaded from the application controller.</source>
          <target state="translated">응용 프로그램을 제거하면 응용 프로그램이 중지되고 &lt;code&gt;delete_module&lt;/code&gt; 을 사용하여 모듈이 언로드 된 다음 응용 프로그램 컨트롤러에서 응용 프로그램 사양이 언로드됩니다.</target>
        </trans-unit>
        <trans-unit id="2a257b8e79bb4eac48b669f49bbde3fc82db52ad" translate="yes" xml:space="preserve">
          <source>Removing an application means that the application is stopped, the modules are unloaded using a number of &lt;code&gt;delete_module&lt;/code&gt; instructions, and then the application specification is unloaded from the application controller.</source>
          <target state="translated">응용 프로그램을 제거하면 응용 프로그램이 중지되고 여러 &lt;code&gt;delete_module&lt;/code&gt; 명령어를 사용하여 모듈이 언로드 된 다음 응용 프로그램 컨트롤러에서 응용 프로그램 사양이 언로드됩니다.</target>
        </trans-unit>
        <trans-unit id="21ecfe29f13ab8d3591c9f7ede9bc7422e8e8b32" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;timer&lt;/code&gt; key from the map when we change to state &lt;code&gt;locked&lt;/code&gt; is not strictly necessary since we can only get into state &lt;code&gt;open&lt;/code&gt; with an updated &lt;code&gt;timer&lt;/code&gt; map value. But it can be nice to not have outdated values in the state &lt;code&gt;Data&lt;/code&gt;!</source>
          <target state="translated">업데이트 된 &lt;code&gt;timer&lt;/code&gt; 맵 값 으로 상태를 &lt;code&gt;open&lt;/code&gt; 수 있기 때문에 상태 &lt;code&gt;locked&lt;/code&gt; 상태로 변경할 때 맵에서 &lt;code&gt;timer&lt;/code&gt; 키를 제거 할 필요는 없습니다 . 그러나 상태 &lt;code&gt;Data&lt;/code&gt; 에서 오래된 값을 가지지 않는 것이 좋습니다 !</target>
        </trans-unit>
        <trans-unit id="8646e4631f9ace195cf0a5164635e06163109edf" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;timer&lt;/code&gt; key from the map when we do a &lt;strong&gt;state change&lt;/strong&gt; to &lt;code&gt;locked&lt;/code&gt; is not strictly necessary since we can only get into state &lt;code&gt;open&lt;/code&gt; with an updated &lt;code&gt;timer&lt;/code&gt; map value. But it can be nice to not have outdated values in the state &lt;code&gt;Data&lt;/code&gt;!</source>
          <target state="translated">제거 단계 &lt;code&gt;timer&lt;/code&gt; 우리가 할 때지도에서 키를 &lt;strong&gt;상태 변화&lt;/strong&gt; 에 &lt;code&gt;locked&lt;/code&gt; 우리가 유일한 상태로 얻을 수 있기 때문에 꼭 필요한 것은 &lt;code&gt;open&lt;/code&gt; 업데이트와 함께 &lt;code&gt;timer&lt;/code&gt; 지도 값입니다. 그러나 &lt;code&gt;Data&lt;/code&gt; 상태에서 오래된 값을 가지지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0cfa720136cd04bacd2eac92ab7474295652cf42" translate="yes" xml:space="preserve">
          <source>Renames &lt;code&gt;Old&lt;/code&gt; to &lt;code&gt;New&lt;/code&gt; at the remote server.</source>
          <target state="translated">원격 서버에서 &lt;code&gt;Old&lt;/code&gt; 를 &lt;code&gt;New&lt;/code&gt; 로 이름을 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="6d0f47bb19f5b5facec144970690eb3792cd2ef5" translate="yes" xml:space="preserve">
          <source>Renames a file named &lt;code&gt;OldName&lt;/code&gt; and gives it the name &lt;code&gt;NewName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OldName&lt;/code&gt; 이라는 파일 이름을 바꾸고 이름을 &lt;code&gt;NewName&lt;/code&gt; 으로 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="08c6204fdae6705e22c2f29ad8fc6ee2ce0504b5" translate="yes" xml:space="preserve">
          <source>Renames a set of possibly interdependent source code modules. &lt;code&gt;Files&lt;/code&gt; is a list of file names of source modules to be processed. &lt;code&gt;Renamings&lt;/code&gt; is a list of pairs of &lt;strong&gt;module names&lt;/strong&gt;, representing a mapping from old names to new. The returned value is the list of output file names.</source>
          <target state="translated">상호 의존 가능한 소스 코드 모듈 세트를 이름을 바꿉니다. &lt;code&gt;Files&lt;/code&gt; 은 처리 할 소스 모듈의 파일 이름 목록입니다. &lt;code&gt;Renamings&lt;/code&gt; 는 이전 이름에서 새 이름으로의 맵핑을 나타내는 &lt;strong&gt;모듈 이름&lt;/strong&gt; 쌍의 목록입니다 . 리턴 된 값은 출력 파일 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="fd85297b6c1591a7f5105a46107e2cb8283239d7" translate="yes" xml:space="preserve">
          <source>Renames the log file to &lt;code&gt;File&lt;/code&gt; and then recreates a new log file. If a wrap log exists, &lt;code&gt;File&lt;/code&gt; is used as the base name of the renamed files. By default the header given to &lt;code&gt;open/1&lt;/code&gt; is written first in the newly opened log file, but if argument &lt;code&gt;Head&lt;/code&gt; or &lt;code&gt;BHead&lt;/code&gt; is specified, this item is used instead. The header argument is used only once. Next time a wrap log file is opened, the header given to &lt;code&gt;open/1&lt;/code&gt; is used.</source>
          <target state="translated">로그 파일 이름을 &lt;code&gt;File&lt;/code&gt; 로 바꾼 다음 새 로그 파일을 다시 만듭니다. 랩 로그가 존재하면 &lt;code&gt;File&lt;/code&gt; 은 이름이 바뀐 파일의 기본 이름으로 사용됩니다. 기본적으로 &lt;code&gt;open/1&lt;/code&gt; 에 지정된 헤더 가 새로 열린 로그 파일에서 먼저 기록되지만 &lt;code&gt;Head&lt;/code&gt; 또는 &lt;code&gt;BHead&lt;/code&gt; 인수 가 지정된 경우이 항목이 대신 사용됩니다. 헤더 인수는 한 번만 사용됩니다. 다음에 랩 로그 파일을 &lt;code&gt;open/1&lt;/code&gt; 지정된 헤더 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="54af7ac61590d862405adf0734930d6cae2cb066" translate="yes" xml:space="preserve">
          <source>Renames the named table &lt;code&gt;Tab&lt;/code&gt; to the new name &lt;code&gt;Name&lt;/code&gt;. Afterwards, the old name cannot be used to access the table. Renaming an unnamed table has no effect.</source>
          <target state="translated">명명 된 테이블 &lt;code&gt;Tab&lt;/code&gt; 의 이름 을 새 이름 &lt;code&gt;Name&lt;/code&gt; 으로 바꿉니다 . 그 후에는 이전 이름을 사용하여 테이블에 액세스 할 수 없습니다. 명명되지 않은 테이블의 이름을 바꾸더라도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="ff5eaf0e51b9b10a59f079047c36ed274ea953d1" translate="yes" xml:space="preserve">
          <source>Renaming of open files is not allowed on most platforms (see &lt;code&gt;eacces&lt;/code&gt; below).</source>
          <target state="translated">열려있는 파일의 이름을 바꾸는 것은 대부분의 플랫폼에서 허용되지 않습니다 (아래 &lt;code&gt;eacces&lt;/code&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="c3fc42419d36596f24642090b015a4da2b77a5fe" translate="yes" xml:space="preserve">
          <source>Render the documentation for a module or function.</source>
          <target state="translated">모듈 또는 함수에 대한 문서를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="58289d0d26f52871cc0fde6f4704b683dfaad55c" translate="yes" xml:space="preserve">
          <source>Render the documentation of a callback in a module.</source>
          <target state="translated">모듈에서 콜백 문서를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="43263f16f1c199293aa01f3e3148af7a8eb8e58f" translate="yes" xml:space="preserve">
          <source>Render the documentation of a type in a module.</source>
          <target state="translated">모듈에서 유형의 문서를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="0fe08c0c478168644cd0280359f909fa0debb4a3" translate="yes" xml:space="preserve">
          <source>Renegotiation Indication Extension &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; is supported</source>
          <target state="translated">재협상 표시 확장 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7fad444613612977458b8b88430a31438343ac58" translate="yes" xml:space="preserve">
          <source>Repeat the modification step with the tail of &lt;code&gt;modify_algs_list()&lt;/code&gt; and the resulting &lt;code&gt;A'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modify_algs_list()&lt;/code&gt; 의 꼬리 와 결과 &lt;code&gt;A'&lt;/code&gt; 수정 단계를 반복하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ac3f3cc198e4d81a7905803f774173fbcea00b2" translate="yes" xml:space="preserve">
          <source>Repeat until there is no path between &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;V2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;V1&lt;/code&gt; 과 &lt;code&gt;V2&lt;/code&gt; 사이에 경로가 없을 때까지 반복하십시오 .</target>
        </trans-unit>
        <trans-unit id="67a1ceb71d57152ab275922087225b068bcb6e0c" translate="yes" xml:space="preserve">
          <source>Repeatedly following &lt;code&gt;next&lt;/code&gt; pointers will eventually take you to the sentinel.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 포인터를 반복적으로 따라 가면 결국 센티넬로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="3a4290fa536136f59f682f52fde343fbb3f453b7" translate="yes" xml:space="preserve">
          <source>Repeatedly following &lt;code&gt;prev&lt;/code&gt; pointers will eventually take you to the sentinel.</source>
          <target state="translated">&lt;code&gt;prev&lt;/code&gt; 포인터를 반복적으로 따라 가면 결국 센티넬로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="882850f9efe1aecf6bc3eb3238cdb7ef37fa9c9b" translate="yes" xml:space="preserve">
          <source>Repeats command &lt;code&gt;N&lt;/code&gt;, if &lt;code&gt;N&lt;/code&gt; is positive. If it is negative, the &lt;code&gt;N&lt;/code&gt;th previous command is repeated (that is, &lt;code&gt;e(-1)&lt;/code&gt; repeats the previous command).</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; 이 양수 이면 명령 &lt;code&gt;N&lt;/code&gt; 을 반복합니다 . 음수이면 &lt;code&gt;N&lt;/code&gt; 번째 이전 명령이 반복됩니다 (즉, &lt;code&gt;e(-1)&lt;/code&gt; 이 이전 명령을 반복 함).</target>
        </trans-unit>
        <trans-unit id="f80a175e58465cf2c27bbc9fe26e988c97a71cc0" translate="yes" xml:space="preserve">
          <source>Repeats the split until &lt;code&gt;Subject&lt;/code&gt; is exhausted. Conceptually option &lt;code&gt;global&lt;/code&gt; makes split work on the positions returned by &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt;, while it normally works on the position returned by &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 가 다 될 때까지 분할을 반복합니다 . 개념적으로 &lt;code&gt;global&lt;/code&gt; 옵션 은 &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt; 에 의해 리턴 된 위치에서 split 작업을 수행 하지만, 보통 &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt; 에 의해 리턴 된 위치에서 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a172a0f5c387a5e46c31a43f2cefffb22c95831f" translate="yes" xml:space="preserve">
          <source>Repetition is specified by quantifiers, which can follow any of the following items:</source>
          <target state="translated">반복은 수량 자에 의해 지정되며 다음 항목 중 하나를 따를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="146808ca12c9af96348c2ab80e60f75d56da8935" translate="yes" xml:space="preserve">
          <source>Replace the kex algorithms list with the single algorithm &lt;code&gt;'diffie-hellman-group14-sha256'&lt;/code&gt;:</source>
          <target state="translated">kex 알고리즘 목록을 단일 알고리즘 &lt;code&gt;'diffie-hellman-group14-sha256'&lt;/code&gt; 으로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="56d42d2b692a0d6476978d84d1a8114ac3464d87" translate="yes" xml:space="preserve">
          <source>Replaces &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of an &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed module&lt;/a&gt;&lt;/code&gt; with data read from a BEAM file. Application membership of the module is retained, and so is the value of the &lt;code&gt;builtins&lt;/code&gt; option of the module. An error is returned if the name of the read module differs from the given module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed module&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 를 BEAM 파일에서 읽은 데이터 로 바꿉니다 . 모듈의 응용 프로그램 멤버 자격이 유지되며 모듈의 &lt;code&gt;builtins&lt;/code&gt; 옵션 값도 유지 됩니다. 읽기 모듈 이름이 지정된 모듈과 다른 경우 오류가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7d9750cc1b6985af6ed569e4fe99331e1df8b510" translate="yes" xml:space="preserve">
          <source>Replaces &lt;code&gt;SearchPattern&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt; with &lt;code&gt;Replacement&lt;/code&gt;. &lt;code&gt;Where&lt;/code&gt;, default &lt;code&gt;leading&lt;/code&gt;, indicates whether the &lt;code&gt;leading&lt;/code&gt;, the &lt;code&gt;trailing&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; encounters of &lt;code&gt;SearchPattern&lt;/code&gt; are to be replaced.</source>
          <target state="translated">바꿉니다 &lt;code&gt;SearchPattern&lt;/code&gt; 에서 &lt;code&gt;String&lt;/code&gt; 로 &lt;code&gt;Replacement&lt;/code&gt; . &lt;code&gt;Where&lt;/code&gt; 기본 &lt;code&gt;leading&lt;/code&gt; 은 &lt;code&gt;SearchPattern&lt;/code&gt; 의 &lt;code&gt;leading&lt;/code&gt; , &lt;code&gt;trailing&lt;/code&gt; 또는 &lt;code&gt;all&lt;/code&gt; 만남을 바꿀지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="a561fe60c3d9ba1409232278ffca46e8f6e25489" translate="yes" xml:space="preserve">
          <source>Replaces an event handler in event manager &lt;code&gt;EventMgrRef&lt;/code&gt; in the same way as &lt;code&gt;swap_handler/3&lt;/code&gt;, but also supervises the connection between &lt;code&gt;Handler2&lt;/code&gt; and the calling process.</source>
          <target state="translated">&lt;code&gt;swap_handler/3&lt;/code&gt; 와 같은 방식으로 이벤트 관리자 &lt;code&gt;EventMgrRef&lt;/code&gt; 의 이벤트 핸들러를 대체 하지만 &lt;code&gt;Handler2&lt;/code&gt; 와 호출 프로세스 간의 연결을 감독합니다 .</target>
        </trans-unit>
        <trans-unit id="419481a738590ffe74f074cd3f66660d64a0e60c" translate="yes" xml:space="preserve">
          <source>Replaces an old event handler with a new event handler in event manager &lt;code&gt;EventMgrRef&lt;/code&gt;.</source>
          <target state="translated">이벤트 관리자 &lt;code&gt;EventMgrRef&lt;/code&gt; 에서 이전 이벤트 핸들러를 새 이벤트 핸들러로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="9eed3a84ce22771b5808dd7e1463a515114573df" translate="yes" xml:space="preserve">
          <source>Replaces an old occurrence of a directory named &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; in the code path, with &lt;code&gt;Dir&lt;/code&gt;. If &lt;code&gt;Name&lt;/code&gt; does not exist, it adds the new directory &lt;code&gt;Dir&lt;/code&gt; last in the code path. The new directory must also be named &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt;. This function is to be used if a new version of the directory (library) is added to a running system.</source>
          <target state="translated">코드 경로에서 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 디렉토리의 이전 항목을 &lt;code&gt;Dir&lt;/code&gt; 로 바꿉니다 . 경우 &lt;code&gt;Name&lt;/code&gt; 존재하지 않는, 그것은 새 디렉토리에 추가 &lt;code&gt;Dir&lt;/code&gt; 코드 경로에서 마지막. 새 디렉토리의 이름도 &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; 합니다. 이 기능은 새 버전의 디렉토리 (라이브러리)가 실행중인 시스템에 추가 된 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e95e156f5a3b21e55b9e9d7df8ac40e83028b042" translate="yes" xml:space="preserve">
          <source>Replaces the &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; of all &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; the BEAM files of which have been modified since last read by an &lt;code&gt;add&lt;/code&gt; function or &lt;code&gt;update&lt;/code&gt;. Application membership of the modules is retained, and so is the value of the &lt;code&gt;builtins&lt;/code&gt; option. Returns a sorted list of the names of the replaced modules.</source>
          <target state="translated">BEAM 파일이 &lt;code&gt;add&lt;/code&gt; 함수 또는 &lt;code&gt;update&lt;/code&gt; 에 의해 마지막으로 읽은 이후 수정 된 모든 &lt;code&gt;&lt;a href=&quot;#analyzed_module&quot;&gt;analyzed modules&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#module_data&quot;&gt;module data&lt;/a&gt;&lt;/code&gt; 를 대체합니다 . 모듈의 응용 프로그램 멤버 자격이 유지되며 &lt;code&gt;builtins&lt;/code&gt; 옵션 의 값도 유지 됩니다. 교체 된 모듈 이름의 정렬 된 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e162acc877cce3efc4c4645eed631739ea69f0f7" translate="yes" xml:space="preserve">
          <source>Replaces the existing objects of table &lt;code&gt;Name&lt;/code&gt; with objects created by calling the input function &lt;code&gt;InitFun&lt;/code&gt;, see below. The reason for using this function rather than calling &lt;code&gt;insert/2&lt;/code&gt; is that of efficiency. Notice that the input functions are called by the process that handles requests to the Dets table, not by the calling process.</source>
          <target state="translated">입력 함수 &lt;code&gt;InitFun&lt;/code&gt; 을 호출하여 작성된 테이블 &lt;code&gt;Name&lt;/code&gt; 의 기존 오브젝트를 오브젝트로 바꿉니다 ( 아래 참조). &lt;code&gt;insert/2&lt;/code&gt; 를 호출하는 대신이 기능을 사용하는 이유 는 효율성 때문입니다. 입력 함수는 호출 프로세스가 아닌 Dets 테이블에 대한 요청을 처리하는 프로세스에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a2e2db8771ec60e84f4f89a23c30a3ab11bf1890" translate="yes" xml:space="preserve">
          <source>Replaces the existing objects of table &lt;code&gt;Tab&lt;/code&gt; with objects created by calling the input function &lt;code&gt;InitFun&lt;/code&gt;, see below. This function is provided for compatibility with the &lt;code&gt;dets&lt;/code&gt; module, it is not more efficient than filling a table by using &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">테이블 &lt;code&gt;Tab&lt;/code&gt; 의 기존 객체를 입력 함수 &lt;code&gt;InitFun&lt;/code&gt; 을 호출하여 만든 객체로 바꿉니다 ( 아래 참조). 이 기능은 &lt;code&gt;dets&lt;/code&gt; 모듈 과의 호환성을 위해 제공되며 &lt;code&gt;&lt;a href=&quot;#insert-2&quot;&gt;insert/2&lt;/a&gt;&lt;/code&gt; 를 사용하여 테이블을 채우는 것보다 효율적이지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6628e9df362f62f633a5d7e6425eed79b6dbe778" translate="yes" xml:space="preserve">
          <source>Replaces the matched part of the &lt;code&gt;Subject&lt;/code&gt; string with the contents of &lt;code&gt;Replacement&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 문자열 에서 일치하는 부분 을 &lt;code&gt;Replacement&lt;/code&gt; 의 내용으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="12f3f7bbddec5d3195ba4a36bdd58ba53790386e" translate="yes" xml:space="preserve">
          <source>Replaces the modules of an application with other modules read from an application directory. Release membership of the application is retained. Note that the name of the application is kept; the name of the given directory is not used.</source>
          <target state="translated">응용 프로그램의 모듈을 응용 프로그램 디렉토리에서 읽은 다른 모듈로 바꿉니다. 응용 프로그램의 릴리스 멤버 자격이 유지됩니다. 응용 프로그램 이름이 유지됩니다. 주어진 디렉토리의 이름이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8d1a9d58a5e5ca14250cdab073b72fea337a464" translate="yes" xml:space="preserve">
          <source>Replaces the path specified in the boot script; see &lt;code&gt;script(4)&lt;/code&gt;.</source>
          <target state="translated">부팅 스크립트에 지정된 경로를 바꿉니다. &lt;code&gt;script(4)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="047f0df8a3018b8551685d31f76e6d44444474fc" translate="yes" xml:space="preserve">
          <source>Replaces the state of the process, and returns the new state.</source>
          <target state="translated">프로세스 상태를 바꾸고 새 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9184d9c39282b5754d576935dbc39e77f9d02e83" translate="yes" xml:space="preserve">
          <source>Replicas of type &lt;code&gt;disc_only_copies&lt;/code&gt; are only affected by this parameter during the initial dump of the log file at startup. When designing applications with &lt;strong&gt;very&lt;/strong&gt; high requirements, it can be appropriate not to use &lt;code&gt;disc_only_copies&lt;/code&gt; tables at all. The reason for this is the random access nature of normal operating system files. If a node goes down for a reason such as a power failure, these files can be corrupted because they are not properly closed. The &lt;code&gt;DAT&lt;/code&gt; files for &lt;code&gt;disc_only_copies&lt;/code&gt; are updated on a per transaction basis.</source>
          <target state="translated">&lt;code&gt;disc_only_copies&lt;/code&gt; 유형의 복제본은 시작시 로그 파일의 초기 덤프 중이 매개 변수의 영향을받습니다. 요구 사항 이 &lt;strong&gt;매우&lt;/strong&gt; 높은 응용 프로그램을 디자인 할 때는 &lt;code&gt;disc_only_copies&lt;/code&gt; 테이블을 전혀 사용하지 않는 것이 좋습니다 . 그 이유는 일반 운영 체제 파일의 무작위 액세스 특성 때문입니다. 정전과 같은 이유로 노드가 중단되면 이러한 파일이 제대로 닫히지 않아 손상 될 수 있습니다. &lt;code&gt;disc_only_copies&lt;/code&gt; 의 &lt;code&gt;DAT&lt;/code&gt; 파일 은 트랜잭션별로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="6ac8596fa89edfabdcf6fecf958d16a005ece982" translate="yes" xml:space="preserve">
          <source>Replicated tables have the same content on all nodes where they are replicated. However, it is sometimes advantageous to have tables, but different content on different nodes.</source>
          <target state="translated">복제 된 테이블은 복제되는 모든 노드에서 동일한 내용을 갖습니다. 그러나 테이블이 있지만 노드마다 내용이 다른 것이 유리한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a9e9afe1a552da9f13fde90fd0f5258e6b4db3e" translate="yes" xml:space="preserve">
          <source>Replicated tables that reside locally as well as somewhere else are either initiated from disc or by copying the entire table from the other node, depending on which of the different replicas are the most recent. &lt;code&gt;Mnesia&lt;/code&gt; determines which of the tables are the most recent.</source>
          <target state="translated">다른 곳뿐만 아니라 로컬에 상주하는 복제 된 테이블은 가장 최근의 다른 복제본에 따라 디스크에서 시작하거나 다른 노드에서 전체 테이블을 복사하여 시작됩니다. &lt;code&gt;Mnesia&lt;/code&gt; 는 가장 최근의 테이블을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="5ebc556c3a47de1e105808f80a573351d288796c" translate="yes" xml:space="preserve">
          <source>Replication. Tables can be replicated at several nodes.</source>
          <target state="translated">복제. 여러 노드에서 테이블을 복제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7fb706c746d6c42069331ec3f48fc3bf37dbe5a" translate="yes" xml:space="preserve">
          <source>Replies arriving after the timer has expired, will be delivered using the &lt;code&gt;&lt;a href=&quot;megaco_user#unexpected_trans&quot;&gt;handle_unexpected_trans/3,4&lt;/a&gt;&lt;/code&gt; callback function.</source>
          <target state="translated">타이머가 만료 된 후에 도착한 응답은 &lt;code&gt;&lt;a href=&quot;megaco_user#unexpected_trans&quot;&gt;handle_unexpected_trans/3,4&lt;/a&gt;&lt;/code&gt; 콜백 함수를 사용하여 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="126cf04b40e9dfa6af76d4b4da1a8ce9285a1fa9" translate="yes" xml:space="preserve">
          <source>Reply :: term()</source>
          <target state="translated">답글 :: term ()</target>
        </trans-unit>
        <trans-unit id="58cf87f6dac57b28d02194486fcb6f8dd6ecc261" translate="yes" xml:space="preserve">
          <source>Reply from other state than the request, &lt;code&gt;sys&lt;/code&gt; traceable</source>
          <target state="translated">요청 이외의 다른 상태에서 응답, &lt;code&gt;sys&lt;/code&gt; 추적 가능</target>
        </trans-unit>
        <trans-unit id="7a00bbb5f99bc04dd63e793a0e32145c7dc90c48" translate="yes" xml:space="preserve">
          <source>Reply to &lt;code&gt;Port ! {Pid,close}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Port ! {Pid,close}&lt;/code&gt; 회신하십시오 ! {Pid, close} .</target>
        </trans-unit>
        <trans-unit id="8694767ec4c7b52fb9e3f8d2f15cf11c06894a41" translate="yes" xml:space="preserve">
          <source>Reply to &lt;code&gt;Port ! {Pid,{connect,NewPid}}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Port ! {Pid,{connect,NewPid}}&lt;/code&gt; 회신하십시오 ! {PID를, {}, NewPid를 연결} .</target>
        </trans-unit>
        <trans-unit id="4b96dfeb12fd8a4e4012eab404a286bb6ae1f178" translate="yes" xml:space="preserve">
          <source>Reply to a caller, mentioned at the end of section &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt; 섹션 끝에 언급 된 발신자에게 회신</target>
        </trans-unit>
        <trans-unit id="d51d4f5317a58ec9fadf8c1b64090b49b06b2cd6" translate="yes" xml:space="preserve">
          <source>Reply to a caller, mentioned at the end of section &lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#All%20State%20Events&quot;&gt;All State Events&lt;/a&gt;&lt;/code&gt; 섹션 끝에 언급 된 발신자에게 응답합니다 .</target>
        </trans-unit>
        <trans-unit id="72df4b4bc039d9b2e5bdd4ac208ec2c87607d70b" translate="yes" xml:space="preserve">
          <source>Reply | {error, Reason}</source>
          <target state="translated">답장 | {오류, 이유}</target>
        </trans-unit>
        <trans-unit id="d41fb2069eb0e10f46e258ab0b1229e85d9491d5" translate="yes" xml:space="preserve">
          <source>Report a parsed external entity declaration.</source>
          <target state="translated">구문 분석 된 외부 엔티티 선언을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5741dec57b6d216da5d5c515fc46fa697f27c6" translate="yes" xml:space="preserve">
          <source>Report an XML comment anywhere in the document (both inside and outside of the document element).</source>
          <target state="translated">문서의 내부 및 외부에서 문서의 어느 위치 에나 XML 주석을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="5b4904e061e57bddfab52b6cfd2d3ea1d06c349e" translate="yes" xml:space="preserve">
          <source>Report an attribute type declaration.</source>
          <target state="translated">속성 유형 선언을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="e3db9c3fab04d85ea232a7fcf942fbfd1b004b09" translate="yes" xml:space="preserve">
          <source>Report an element type declaration. The content model will consist of the string &quot;EMPTY&quot;, the string &quot;ANY&quot;, or a parenthesised group, optionally followed by an occurrence indicator. The model will be normalized so that all parameter entities are fully resolved and all whitespace is removed,and will include the enclosing parentheses. Other normalization (such as removing redundant parentheses or simplifying occurrence indicators) is at the discretion of the parser.</source>
          <target state="translated">요소 유형 선언을보고하십시오. 컨텐츠 모델은 문자열 &quot;EMPTY&quot;, 문자열 &quot;ANY&quot;또는 괄호로 묶은 그룹으로 구성되며 선택적으로 발생 표시기가 뒤 따릅니다. 모든 매개 변수 엔터티가 완전히 확인되고 모든 공백이 제거되고 둘러싸는 괄호가 포함되도록 모델이 정규화됩니다. 다른 정규화 (예 : 중복 괄호 제거 또는 발생 표시 단순화)는 구문 분석기의 재량에 따릅니다.</target>
        </trans-unit>
        <trans-unit id="bf5d2d664010dcb10710bdf2302a984224d32fd1" translate="yes" xml:space="preserve">
          <source>Report an event to the collector.</source>
          <target state="translated">수집기에게 이벤트를보고하십시오.</target>
        </trans-unit>
        <trans-unit id="0726ec060dd61caf7a44399784154bba339be6e5" translate="yes" xml:space="preserve">
          <source>Report an internal entity declaration.</source>
          <target state="translated">내부 실체 신고를보고하십시오.</target>
        </trans-unit>
        <trans-unit id="b903e37625cb00383193345807e6f2cd70182b4f" translate="yes" xml:space="preserve">
          <source>Report browsing</source>
          <target state="translated">보고서 탐색</target>
        </trans-unit>
        <trans-unit id="d7d063c7f439064d0bd21947ff7363c54d0c7bbe" translate="yes" xml:space="preserve">
          <source>Report call-backs and printing of events</source>
          <target state="translated">콜백 및 이벤트 인쇄보고</target>
        </trans-unit>
        <trans-unit id="b4e0e2fdd9a9b427f43e27d5c7689fab83f4954f" translate="yes" xml:space="preserve">
          <source>Report the beginning of some internal and external XML entities. ???</source>
          <target state="translated">내부 및 외부 XML 엔터티의 시작을보고합니다. ???</target>
        </trans-unit>
        <trans-unit id="1537db331987c73e42ec79886424725e7ced0ca8" translate="yes" xml:space="preserve">
          <source>Report the end of DTD declarations, it's reporting the end of the DOCTYPE declaration.</source>
          <target state="translated">DTD 선언의 끝을보고하고 DOCTYPE 선언의 끝을보고합니다.</target>
        </trans-unit>
        <trans-unit id="45b1374aafa256e46789d17cd746069ce811a778" translate="yes" xml:space="preserve">
          <source>Report the end of a CDATA section.</source>
          <target state="translated">CDATA 섹션의 끝을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="4e77cabadac053249b29d05bd9d1d234e2cc1e97" translate="yes" xml:space="preserve">
          <source>Report the end of an entity. ???</source>
          <target state="translated">엔터티의 끝을보고하십시오. ???</target>
        </trans-unit>
        <trans-unit id="c09ed9bee7f1262daef582c404162b533ffaa466" translate="yes" xml:space="preserve">
          <source>Report the start of DTD declarations, it's reporting the start of the DOCTYPE declaration. If the document has no DOCTYPE declaration, this event will not be sent.</source>
          <target state="translated">DTD 선언의 시작을보고하고 DOCTYPE 선언의 시작을보고합니다. 문서에 DOCTYPE 선언이 없으면이 이벤트가 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b91bc27e6fa6a320a4ff9f88df2653241bb852b" translate="yes" xml:space="preserve">
          <source>Report the start of a CDATA section. The contents of the CDATA section will be reported through the regular characters event.</source>
          <target state="translated">CDATA 섹션의 시작을보고하십시오. CDATA 섹션의 내용은 일반 문자 이벤트를 통해보고됩니다.</target>
        </trans-unit>
        <trans-unit id="ffeca158e141c03cd42c17a2026cfff827aa1413" translate="yes" xml:space="preserve">
          <source>Reported ticket age (obfuscated ticket age) shall be less than ticket lifetime.</source>
          <target state="translated">보고 된 티켓 사용 기간 (난독 화 된 티켓 사용 기간)은 티켓 수명보다 짧아야합니다.</target>
        </trans-unit>
        <trans-unit id="93fd5ff4921baf203ff8b603c22461be039d636b" translate="yes" xml:space="preserve">
          <source>Reports term allocation statistics.</source>
          <target state="translated">용어 할당 통계를보고합니다.</target>
        </trans-unit>
        <trans-unit id="99f5b324157a74f4ba599f70ce8661cfdaad5091" translate="yes" xml:space="preserve">
          <source>Reports the service as stopped to the service manager whenever it fails; it must be manually restarted.</source>
          <target state="translated">실패 할 때마다 서비스를 서비스 관리자에게 중지 된 것으로보고합니다. 수동으로 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="8e231051a656cc0108d6b02d1bd260ba3157afb3" translate="yes" xml:space="preserve">
          <source>Representation of Parse Errors and End-of-File</source>
          <target state="translated">구문 분석 오류 및 파일 끝 표시</target>
        </trans-unit>
        <trans-unit id="ee67840d5e69841e214d4858266855f7d033268c" translate="yes" xml:space="preserve">
          <source>Representation of XML, as described in application &lt;code&gt;xmerl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmerl&lt;/code&gt; 애플리케이션에 설명 된 XML 표현 .</target>
        </trans-unit>
        <trans-unit id="e58aecb98ff170f7c11b8160942cbfb76f351aa2" translate="yes" xml:space="preserve">
          <source>Represents a file path or directory path</source>
          <target state="translated">파일 경로 또는 디렉토리 경로를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="22e7792d22c5ac3675d98858db71f22cbdabe7a5" translate="yes" xml:space="preserve">
          <source>Represents a file path.</source>
          <target state="translated">파일 경로를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5f7ed31f709b30e7c94bd6f94122425a637cb46a" translate="yes" xml:space="preserve">
          <source>Request :: term(),</source>
          <target state="translated">요청 :: term (),</target>
        </trans-unit>
        <trans-unit id="507b55ef67a3793e186e31503844b20cdf44035d" translate="yes" xml:space="preserve">
          <source>Request &lt;code&gt;get_geometry&lt;/code&gt; has no meaning for this I/O server, so the reply is &lt;code&gt;{error, enotsup}&lt;/code&gt;. The only option we handle is &lt;code&gt;binary&lt;/code&gt;/&lt;code&gt;list&lt;/code&gt;, which is done in separate functions.</source>
          <target state="translated">&lt;code&gt;get_geometry&lt;/code&gt; 요청 은이 I / O 서버에 의미가 없으므로 응답은 &lt;code&gt;{error, enotsup}&lt;/code&gt; 입니다. 우리가 처리하는 유일한 옵션은 &lt;code&gt;binary&lt;/code&gt; / &lt;code&gt;list&lt;/code&gt; 이며 별도의 기능으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="24e691247dfe3630fd35fda8c0e139ee4284bed3" translate="yes" xml:space="preserve">
          <source>Request &lt;code&gt;getopts&lt;/code&gt; is to return a list of &lt;code&gt;{Option, Value}&lt;/code&gt; tuples. This has the twofold function of providing both the current values and the available options of this I/O server. We have only one option, and hence return that.</source>
          <target state="translated">&lt;code&gt;getopts&lt;/code&gt; 요청 은 &lt;code&gt;{Option, Value}&lt;/code&gt; 튜플 목록을 반환하는 것 입니다. 여기에는 현재 값과이 I / O 서버의 사용 가능한 옵션을 모두 제공하는 두 가지 기능이 있습니다. 우리는 단 하나의 옵션을 가지고 있으므로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2e0c378c7ccfe92728a6bfeeedc02369a4d75150" translate="yes" xml:space="preserve">
          <source>Request Forwarding</source>
          <target state="translated">요청 전달</target>
        </trans-unit>
        <trans-unit id="370aa763d24c7c6a889f8bc1f6473021ef74ab40" translate="yes" xml:space="preserve">
          <source>Request Routing</source>
          <target state="translated">요청 라우팅</target>
        </trans-unit>
        <trans-unit id="e22d3290b587090a383ad7e805ef81704f3e3f28" translate="yes" xml:space="preserve">
          <source>Request URI</source>
          <target state="translated">요청 URI</target>
        </trans-unit>
        <trans-unit id="0f51f8766bdb5268b3f7a7fb925d40cf0ac64489" translate="yes" xml:space="preserve">
          <source>Request a notification (message) when the SNMP manager has started.</source>
          <target state="translated">SNMP 관리자가 시작되면 알림 (메시지)을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="4f788fb1f0c68a3aeaf79e2bed3b255d4e4efa97" translate="yes" xml:space="preserve">
          <source>Request acknowledgements of unanswered requests. A transport process should send this once before passing incoming Diameter messages into diameter. As a result, every Diameter request passed into diameter with a &lt;code&gt;recv&lt;/code&gt; message (below) will be answered with a &lt;code&gt;send&lt;/code&gt; message (above), either a &lt;code&gt;&lt;a href=&quot;#message&quot;&gt;message()&lt;/a&gt;&lt;/code&gt; for the transport process to send or the atom &lt;code&gt;false&lt;/code&gt; if the request has been discarded or otherwise not answered.</source>
          <target state="translated">응답하지 않은 요청에 대한 승인을 요청합니다. 전송 프로세스는 수신 Diameter 메시지를 diameter로 전달하기 전에 이것을 한 번 보내야합니다. 결과적으로 &lt;code&gt;recv&lt;/code&gt; 메시지 (아래) 와 함께 diameter로 전달 된 모든 Diameter 요청 은 &lt;code&gt;send&lt;/code&gt; 메시지 (위), 전송할 전송 프로세스에 대한 &lt;code&gt;&lt;a href=&quot;#message&quot;&gt;message()&lt;/a&gt;&lt;/code&gt; 또는 요청이 삭제 된 경우 atom &lt;code&gt;false&lt;/code&gt; 로 응답됩니다. 그렇지 않으면 대답하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f867bc9ad45748ac7d544dcfedaa1c639a959b7" translate="yes" xml:space="preserve">
          <source>Request identifier. Also used as monitor reference in case the &lt;code&gt;monitor&lt;/code&gt; option has been passed.</source>
          <target state="translated">요청 식별자. &lt;code&gt;monitor&lt;/code&gt; 옵션이 전달 된 경우 모니터 참조로도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b54284e63f3207a9fed531cafce78b6ab997861b" translate="yes" xml:space="preserve">
          <source>Request notification when more data is available to fetch using &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; for the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. When more data is present, the caller will be sent the message &lt;code&gt;dist_data&lt;/code&gt;. Once a &lt;code&gt;dist_data&lt;/code&gt; messages has been sent, no more &lt;code&gt;dist_data&lt;/code&gt; messages will be sent until the &lt;code&gt;dist_ctrl_get_data_notification/1&lt;/code&gt; function has been called again.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; 식별되는 분배 채널에 대해 erlang : dist_ctrl_get_data (DHandle) 을 사용하여 더 많은 데이터를 페치 할 수있는 경우 알림을 요청 &lt;code&gt;DHandle&lt;/code&gt; . 더 많은 데이터가 있으면 호출자에게 &lt;code&gt;dist_data&lt;/code&gt; 메시지가 전송됩니다 . 한 번 &lt;code&gt;dist_data&lt;/code&gt; 메시지가 전송되어, 더 이상 &lt;code&gt;dist_data&lt;/code&gt; 메시지가 될 때까지 전송되지 않습니다 &lt;code&gt;dist_ctrl_get_data_notification/1&lt;/code&gt; 함수가 다시 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="2a5f2a76edb63ef16353fc42ce9a4bc1b8d49591" translate="yes" xml:space="preserve">
          <source>Request the network interface process (&lt;code&gt;Pid&lt;/code&gt;) to send this pdu (&lt;code&gt;Pdu&lt;/code&gt;).</source>
          <target state="translated">이 pdu ( &lt;code&gt;Pdu&lt;/code&gt; ) 를 보내 려면 네트워크 인터페이스 프로세스 ( &lt;code&gt;Pid&lt;/code&gt; )를 요청하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce3c2ee6fb3584f5d183cced85f4c6f3c55edc58" translate="yes" xml:space="preserve">
          <source>RequestId :: &lt;code&gt;&lt;a href=&quot;#type-request_id&quot;&gt;request_id()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">RequestId :: &lt;code&gt;&lt;a href=&quot;#type-request_id&quot;&gt;request_id()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d18300e644431e3a24ea4a4e92d1813f4d47228" translate="yes" xml:space="preserve">
          <source>Requesting a Pseudo-Terminal (RFC 4254, section 6.2)</source>
          <target state="translated">의사 터미널 요청 (RFC 4254, 섹션 6.2)</target>
        </trans-unit>
        <trans-unit id="f13633a66bddd5919d4452b83066b5c9306c3699" translate="yes" xml:space="preserve">
          <source>Requests &lt;code&gt;getopts&lt;/code&gt; and &lt;code&gt;setopts&lt;/code&gt; are also simple to handle. We only change or read the state record:</source>
          <target state="translated">요청 &lt;code&gt;getopts&lt;/code&gt; 및 &lt;code&gt;setopts&lt;/code&gt; 도 처리하기 쉽습니다 . 상태 기록 만 변경하거나 읽습니다.</target>
        </trans-unit>
        <trans-unit id="64e6fe8df794535a6e7f8e3381fa29ec4cd2b3fe" translate="yes" xml:space="preserve">
          <source>Requests all available options and their current values for a specific I/O device, for example:</source>
          <target state="translated">특정 I / O 장치에 대해 사용 가능한 모든 옵션과 현재 값을 요청합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="44b5e144b529d1d34d542fbdbbb37113f0041e10" translate="yes" xml:space="preserve">
          <source>Requests are constructed by the user; diameter sets header fields as defined in the relevant dictionary.</source>
          <target state="translated">요청은 사용자가 구성합니다. 직경은 관련 사전에 정의 된대로 헤더 필드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ddc39c20a1e625e364b51db01eb9285198684651" translate="yes" xml:space="preserve">
          <source>Requests can be issued in two different ways. Synchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt;) and asynchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt;). With synchronous the snmp reply is returned by the function. With asynchronous, the reply will instead be delivered through a call to one of the &lt;code&gt;handle_pdu&lt;/code&gt; callback function defined by the &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">요청은 두 가지 방법으로 발행 될 수 있습니다. 동기식 ( &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt; 참조) 및 비동기식 ( &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt; 참조 ) 동기식으로 snmp 응답이 함수에 의해 리턴됩니다. 비동기식으로 응답은 &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; 동작에 의해 정의 된 &lt;code&gt;handle_pdu&lt;/code&gt; 콜백 함수 중 하나에 대한 호출을 통해 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a5480f1d9e2db525d4d0201c503d4754d924bbf" translate="yes" xml:space="preserve">
          <source>Requests can be issued in two different ways. Synchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#sync_set2&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get2&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next2&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk2&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt;) and asynchronous (see &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk2&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt;). With synchronous the snmp reply is returned by the function. With asynchronous, the reply will instead be delivered through a call to one of the &lt;code&gt;handle_pdu&lt;/code&gt; callback function defined by the &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">요청은 두 가지 방법으로 발행 할 수 있습니다. 동기식 ( &lt;code&gt;&lt;a href=&quot;snmpm#sync_set2&quot;&gt;sync_set&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#sync_get2&quot;&gt;sync_get&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next2&quot;&gt;sync_get_next&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_bulk2&quot;&gt;sync_get_bulk&lt;/a&gt;&lt;/code&gt; 참조) 및 비동기식 ( &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;snmpm#async_get_bulk2&quot;&gt;async_get_bulk&lt;/a&gt;&lt;/code&gt; 참조 ). 동기식으로 snmp 응답은 함수에 의해 반환됩니다. 비동기식에서는 응답이 &lt;code&gt;&lt;a href=&quot;snmpm_user#handle_pdu&quot;&gt;handle_pdu&lt;/a&gt;&lt;/code&gt; 비헤이비어에 의해 정의 된 &lt;code&gt;handle_pdu&lt;/code&gt; 콜백 함수 중 하나에 대한 호출을 통해 대신 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="2414a5adfd102a338c55197c870a5e8ed30f956e" translate="yes" xml:space="preserve">
          <source>Requests graceful termination of the session associated with the client.</source>
          <target state="translated">클라이언트와 관련된 세션의 정상적인 종료를 요청합니다.</target>
        </trans-unit>
        <trans-unit id="d655475b16d4a6739afa13e1af4b35470f41df5a" translate="yes" xml:space="preserve">
          <source>Requests information about the &lt;code&gt;Result&lt;/code&gt; of the cancellation. &lt;code&gt;Info&lt;/code&gt; defaults to &lt;code&gt;true&lt;/code&gt;, which means the &lt;code&gt;Result&lt;/code&gt; is given. When &lt;code&gt;Info&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, no information about the result of the cancellation is given.</source>
          <target state="translated">취소 &lt;code&gt;Result&lt;/code&gt; 에 대한 정보를 요청합니다 . &lt;code&gt;Info&lt;/code&gt; 기본값은 &lt;code&gt;true&lt;/code&gt; 이며 &lt;code&gt;Result&lt;/code&gt; 가 제공됨 을 의미합니다 . &lt;code&gt;Info&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정 되면 취소 결과에 대한 정보가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ff6c0ce1dee907fd5d7c3ad8ae69cf89227f676" translate="yes" xml:space="preserve">
          <source>Requests server to perform &lt;code&gt;Command&lt;/code&gt;. A previously opened session channel is used for the request. &lt;code&gt;Data&lt;/code&gt; is received from the server as a result of the command.</source>
          <target state="translated">서버에게 &lt;code&gt;Command&lt;/code&gt; 을 수행하도록 요청합니다 . 이전에 열린 세션 채널이 요청에 사용됩니다. 명령의 결과로 서버에서 &lt;code&gt;Data&lt;/code&gt; 가 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2f2abc3ea9b54a33e41c7792741fcd63ec00c4" translate="yes" xml:space="preserve">
          <source>Requests server to perform &lt;code&gt;Command&lt;/code&gt;. A session channel is opened automatically for the request. &lt;code&gt;Data&lt;/code&gt; is received from the server as a result of the command.</source>
          <target state="translated">서버에게 &lt;code&gt;Command&lt;/code&gt; 을 수행하도록 요청합니다 . 요청을 위해 세션 채널이 자동으로 열립니다. 명령의 결과로 서버에서 &lt;code&gt;Data&lt;/code&gt; 가 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="fb7ab29539f909d1d965db364abb306b9d8c23af" translate="yes" xml:space="preserve">
          <source>Requests that the user default shell (typically defined in &lt;code&gt;/etc/passwd&lt;/code&gt; in Unix systems) is executed at the server end.</source>
          <target state="translated">사용자 기본 쉘 (일반적으로 Unix 시스템의 &lt;code&gt;/etc/passwd&lt;/code&gt; 에 정의 됨 )이 서버 쪽에서 실행되도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="e5d06105dd7bae848be23c489d1e425eef14e5ec" translate="yes" xml:space="preserve">
          <source>Requests the distribution port for the given node of an EPMD instance. Together with the port it returns a distribution protocol version which has been 5 since Erlang/OTP R6.</source>
          <target state="translated">EPMD 인스턴스의 지정된 노드에 대한 배포 포트를 요청합니다. 포트와 함께 Erlang / OTP R6 이후 5의 배포 프로토콜 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c627743aae6292d1edfab3fd611cfbaa35f44835" translate="yes" xml:space="preserve">
          <source>Require one node with a Telnet connection and an FTP connection. Name the node &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="translated">Telnet 연결 및 FTP 연결이있는 하나의 노드가 필요합니다. 노드 이름을 &lt;code&gt;a&lt;/code&gt; 로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="932dc49cb33ce805a923ee58428b5676a3722687" translate="yes" xml:space="preserve">
          <source>Require these &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;distribution flags&lt;/a&gt;&lt;/code&gt; to be used. The connection will be aborted during the handshake if the other end does not use them.</source>
          <target state="translated">이 &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;distribution flags&lt;/a&gt;&lt;/code&gt; 를 사용해야합니다. 다른 쪽 끝에서 사용하지 않으면 핸드 셰이크 중에 연결이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="e9c366b4f3c3a1bf3449c6872aaeae5a0c5ecdf4" translate="yes" xml:space="preserve">
          <source>Requirement</source>
          <target state="translated">Requirement</target>
        </trans-unit>
        <trans-unit id="56063266c28627d12fee18669ead149368f5bd42" translate="yes" xml:space="preserve">
          <source>Requires that &lt;code&gt;&lt;a href=&quot;#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; has been run first.</source>
          <target state="translated">그 필요 &lt;code&gt;&lt;a href=&quot;#install-1&quot;&gt;ct:install/1&lt;/a&gt;&lt;/code&gt; 먼저 실행되었습니다.</target>
        </trans-unit>
        <trans-unit id="c2e070334a18ace55475d2c7ef7214f9f493188c" translate="yes" xml:space="preserve">
          <source>Requires that the connection is activated. See megaco:conn_info/2 about which items and values that are valid.</source>
          <target state="translated">연결이 활성화되어 있어야합니다. 유효한 항목과 값은 megaco : conn_info / 2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f30287faf99098f6763e46a8603c005c19362cee" translate="yes" xml:space="preserve">
          <source>Requires that the connection is active.</source>
          <target state="translated">연결이 활성화되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c17e71f20f663cc9f1189e3ef11360a81ecbc8ce" translate="yes" xml:space="preserve">
          <source>Requires that the user does not have any active connection.</source>
          <target state="translated">사용자에게 활성 연결이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="e3da804007a27f313a5e70a7489a52d0032c97df" translate="yes" xml:space="preserve">
          <source>Requires that the user is started. See megaco:user_info/2 about which items and values that are valid.</source>
          <target state="translated">사용자가 시작해야합니다. 유효한 항목과 값은 megaco : user_info / 2를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="481a1c0d4b2c5ff0b5f30e85bd6e692df575764b" translate="yes" xml:space="preserve">
          <source>Requires the megaco application to be started. A user is either a Media Gateway (MG) or a Media Gateway Controller (MGC). One Erlang node may host many users.</source>
          <target state="translated">megaco 응용 프로그램을 시작해야합니다. 사용자는 미디어 게이트웨이 (MG) 또는 미디어 게이트웨이 컨트롤러 (MGC)입니다. 하나의 Erlang 노드가 많은 사용자를 호스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fd1dec24c9ebfc2c604cc35df6701d77561b1e0" translate="yes" xml:space="preserve">
          <source>Res | {badrpc, Reason}</source>
          <target state="translated">입술 | {badrpc, 이유}</target>
        </trans-unit>
        <trans-unit id="f4d9a08bacabf1ee192cf2da13ea58302dc18f45" translate="yes" xml:space="preserve">
          <source>Rescans the report directory. &lt;code&gt;Options&lt;/code&gt; is the same as for function &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">보고서 디렉토리를 다시 스캔하십시오. &lt;code&gt;Options&lt;/code&gt; 은 기능 &lt;code&gt;&lt;a href=&quot;#start-1&quot;&gt;start/1&lt;/a&gt;&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="01982cececb98074d29349a0c9e9557b0c782077" translate="yes" xml:space="preserve">
          <source>Reserved for future use. Do &lt;strong&gt;not&lt;/strong&gt; use this flag.</source>
          <target state="translated">나중에 사용하기 위해 예약되어 있습니다. 마십시오 &lt;strong&gt;하지&lt;/strong&gt; 이 플래그를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="094891da7eec692d61182c9206f122cd46f36e84" translate="yes" xml:space="preserve">
          <source>Reset all TCP related (SNMP) statistics counters.</source>
          <target state="translated">모든 TCP 관련 (SNMP) 통계 카운터를 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="68db580cd0bf93363aa59a948b05562996e8a597" translate="yes" xml:space="preserve">
          <source>Reset all related (SNMP) statistics counters.</source>
          <target state="translated">모든 관련 (SNMP) 통계 카운터를 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ea2af705ba687b7e03e81fd53a43ecd4950468a4" translate="yes" xml:space="preserve">
          <source>Reset microstate accounting counters. Returns whether is was enabled or disabled.</source>
          <target state="translated">마이크로 스테이트 회계 카운터를 재설정합니다. 활성화 또는 비활성화 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1629825928942be4143ae7ec741fae164c32209f" translate="yes" xml:space="preserve">
          <source>Resets (clears) the cookie database for the specified &lt;code&gt;Profile&lt;/code&gt;. If no profile is specified the default profile is used.</source>
          <target state="translated">지정된 &lt;code&gt;Profile&lt;/code&gt; 의 쿠키 데이터베이스를 재설정 (클리어)합니다 . 프로파일을 지정하지 않으면 기본 프로파일이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="42f663110bd6b64d84eaef947ff89445b867c379" translate="yes" xml:space="preserve">
          <source>Resets all &lt;code&gt;snmp&lt;/code&gt; counters to 0.</source>
          <target state="translated">모든 &lt;code&gt;snmp&lt;/code&gt; 카운터를 0으로 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d94724b4ac055ae7ff4431386f7dd90b475d3b80" translate="yes" xml:space="preserve">
          <source>Resets all counters and then starts microstate accounting for the given milliseconds.</source>
          <target state="translated">모든 카운터를 재설정 한 다음 주어진 밀리 초 동안 마이크로 스테이트 계산을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="c35fd9595bfbabab4d1c990efe590d85aad9a81e" translate="yes" xml:space="preserve">
          <source>Resets all coverage data for a Cover compiled module &lt;code&gt;Module&lt;/code&gt; in the Cover database on all nodes. If the argument is omitted, the coverage data will be reset for all modules known by Cover.</source>
          <target state="translated">모든 노드의 Cover 데이터베이스에서 Cover 컴파일 된 모듈 &lt;code&gt;Module&lt;/code&gt; 에 대한 모든 Coverage 데이터를 재설정합니다 . 인수가 생략되면 Coverage로 알려진 모든 모듈에 대해 Coverage 데이터가 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f827ea2106527d66b22496ff17d161262d1e35ba" translate="yes" xml:space="preserve">
          <source>Resets entry &lt;code&gt;I&lt;/code&gt; to the default value for the array. If the value of entry &lt;code&gt;I&lt;/code&gt; is the default value, the array is returned unchanged. Reset never changes the array size. Shrinking can be done explicitly by calling &lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">항목 &lt;code&gt;I&lt;/code&gt; 을 배열의 기본값으로 재설정 합니다. 항목 &lt;code&gt;I&lt;/code&gt; 의 값이 기본값이면 배열이 변경되지 않은 상태로 반환됩니다. Reset은 어레이 크기를 변경하지 않습니다. &lt;code&gt;&lt;a href=&quot;#resize-2&quot;&gt;resize/2&lt;/a&gt;&lt;/code&gt; 를 호출하여 축소 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de1d66243efd40011f5354f807bf4316d6d884bd" translate="yes" xml:space="preserve">
          <source>Resizes a driver binary, while keeping the data.</source>
          <target state="translated">데이터를 유지하면서 드라이버 바이너리의 크기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="afe06ccb43798e203443a661c67985d4683b2235" translate="yes" xml:space="preserve">
          <source>Resizes a memory block, either in place, or by allocating a new block, copying the data, and freeing the old block. A pointer is returned to the reallocated memory. On failure (out of memory), &lt;code&gt;NULL&lt;/code&gt; is returned. (This is most often a wrapper for &lt;code&gt;realloc&lt;/code&gt;.)</source>
          <target state="translated">메모리 블록의 크기를 조정하거나 새 블록을 할당하고 데이터를 복사하고 이전 블록을 해제합니다. 재 할당 된 메모리로 포인터가 리턴됩니다. 실패시 (메모리 부족) &lt;code&gt;NULL&lt;/code&gt; 이 리턴됩니다. (이것은 대부분 &lt;code&gt;realloc&lt;/code&gt; 래퍼입니다 .)</target>
        </trans-unit>
        <trans-unit id="b7c7d6a377d20e9e955af01a692967d758a0b52c" translate="yes" xml:space="preserve">
          <source>Resolver Types</source>
          <target state="translated">해석기 유형</target>
        </trans-unit>
        <trans-unit id="09d1f73c9252da1107937d4d534d408ca7760aa6" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type and class for the specified name.</source>
          <target state="translated">지정된 이름과 지정된 유형에 대한 DNS 레코드의 레코드를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eba5a7224f57500ffaa0dd3342225d7f10381f82" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type and class for the specified name. The returned &lt;code&gt;dns_msg()&lt;/code&gt; can be examined using access functions in &lt;code&gt;inet_db&lt;/code&gt;, as described in section in &lt;code&gt;&lt;a href=&quot;#dns_types&quot;&gt;DNS Types&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">지정된 이름과 지정된 유형에 대한 DNS 레코드의 레코드를 확인합니다. 반환 된 &lt;code&gt;dns_msg()&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;#dns_types&quot;&gt;DNS Types&lt;/a&gt;&lt;/code&gt; 섹션에 설명 된대로 &lt;code&gt;inet_db&lt;/code&gt; 의 액세스 함수를 사용하여 검사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4e276400129592150e484867e483da18ebb865dd" translate="yes" xml:space="preserve">
          <source>Resolves a DNS record of the specified type for the specified host, of class &lt;code&gt;in&lt;/code&gt;. Returns, on success, a &lt;code&gt;hostent()&lt;/code&gt; record with &lt;code&gt;dns_data()&lt;/code&gt; elements in the address list field.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 의 지정된 호스트에 대해 지정된 유형의 DNS 레코드를 확인합니다 . 성공 하면 주소 목록 필드에 &lt;code&gt;dns_data()&lt;/code&gt; 요소가 있는 &lt;code&gt;hostent()&lt;/code&gt; 레코드를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e255f15dc3b35ddba127b05f853b1bc2a4f1b219" translate="yes" xml:space="preserve">
          <source>Resolves the DNS data for the record of the specified type and class for the specified name. On success, filters out the answer records with the correct &lt;code&gt;Class&lt;/code&gt; and &lt;code&gt;Type&lt;/code&gt;, and returns a list of their data fields. So, a lookup for type &lt;code&gt;any&lt;/code&gt; gives an empty answer, as the answer records have specific types that are not &lt;code&gt;any&lt;/code&gt;. An empty answer or a failed lookup returns an empty list.</source>
          <target state="translated">지정된 유형의 레코드 및 지정된 이름의 클래스에 대한 DNS 데이터를 확인합니다. 성공하면 올바른 &lt;code&gt;Class&lt;/code&gt; 및 &lt;code&gt;Type&lt;/code&gt; 으로 응답 레코드를 필터링하고 해당 데이터 필드 목록을 리턴합니다. 그래서, 유형에 대한 조회는 &lt;code&gt;any&lt;/code&gt; 응답 기록이없는 특정 유형의이 같은 빈 대답을 제공합니다 &lt;code&gt;any&lt;/code&gt; . 빈 답변 또는 실패한 조회는 빈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e7209e804399190d5b8e9245f8d82fb88f8ff0c" translate="yes" xml:space="preserve">
          <source>Resource types support upgrade in runtime by allowing a loaded NIF library to take over an already existing resource type and by that &quot;inherit&quot; all existing objects of that type. The destructor of the new library is thereafter called for the inherited objects and the library with the old destructor function can be safely unloaded. Existing resource objects, of a module that is upgraded, must either be deleted or taken over by the new NIF library. The unloading of a library is postponed as long as there exist resource objects with a destructor function in the library.</source>
          <target state="translated">리소스 유형은로드 된 NIF 라이브러리가 이미 존재하는 리소스 유형을 대신하여 해당 유형의 모든 기존 객체를 &quot;상속&quot;함으로써 런타임에서의 업그레이드를 지원합니다. 그 후, 새로운 라이브러리의 소멸자가 상속 된 객체를 요구하고, 이전 소멸자 기능을 가진 라이브러리는 안전하게 언로드 될 수 있습니다. 업그레이드 된 모듈의 기존 자원 객체는 새로운 NIF 라이브러리에 의해 삭제되거나 대체되어야합니다. 라이브러리에 소멸자 함수가있는 자원 객체가있는 한 라이브러리 언로드가 연기됩니다.</target>
        </trans-unit>
        <trans-unit id="0ef0d0d978a116bde33e50341c9e6394cb2893fc" translate="yes" xml:space="preserve">
          <source>Restart call counters for the matching functions in matching modules that are call count traced. The &lt;code&gt;FS&lt;/code&gt; argument can be used to specify the first argument to &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;. See erlang(3).</source>
          <target state="translated">호출 횟수가 추적되는 일치 모듈에서 일치하는 기능에 대한 호출 카운터를 다시 시작하십시오. &lt;code&gt;FS&lt;/code&gt; 의 인수에 대한 첫 번째 인수를 지정하는 데 사용할 수 있습니다 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; . erlang (3)을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="22908382338b27ef4c1d1a0163183425f8871c7f" translate="yes" xml:space="preserve">
          <source>Restart the indicated process (&lt;code&gt;Ref&lt;/code&gt;). Note that its not without risk to restart a process, and should therefor be used with care.</source>
          <target state="translated">표시된 프로세스를 다시 시작합니다 ( &lt;code&gt;Ref&lt;/code&gt; ). 프로세스를 다시 시작할 위험이없는 것은 아니므로주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="61c90f456eca86b51d3200d77a1d7f2617f0ddb0" translate="yes" xml:space="preserve">
          <source>Restart the set worker process of a multi-threaded agent.</source>
          <target state="translated">다중 스레드 에이전트의 작업자 설정 프로세스를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="7e74f2cc20537e216a01ecee1923f294af034529" translate="yes" xml:space="preserve">
          <source>Restart the worker process of a multi-threaded agent.</source>
          <target state="translated">다중 스레드 에이전트의 작업자 프로세스를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="dc214e0416b7a580a7af166989fb4bbe4276bbd4" translate="yes" xml:space="preserve">
          <source>Restarting an application is useful when a change is too complicated to be made without restarting the processes, for example, if the supervisor hierarchy has been restructured.</source>
          <target state="translated">예를 들어 감독자 계층 구조가 재구성 된 경우와 같이 프로세스를 다시 시작하지 않고 변경이 너무 복잡 할 경우 응용 프로그램을 다시 시작하면 유용합니다.</target>
        </trans-unit>
        <trans-unit id="78facde3d4d8b32988e630ea196e0d52f90f256d" translate="yes" xml:space="preserve">
          <source>Restarting an application means that the application is stopped and then started again similar to using the instructions &lt;code&gt;remove_application&lt;/code&gt; and &lt;code&gt;add_application&lt;/code&gt; in sequence.</source>
          <target state="translated">응용 프로그램을 다시 시작한다는 것은 &lt;code&gt;remove_application&lt;/code&gt; 및 &lt;code&gt;add_application&lt;/code&gt; 명령 을 순서대로 사용하는 것과 유사하게 응용 프로그램이 중지되었다가 다시 시작됨 을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="98a98cfd0a822c62415063db7432a74158f00a07" translate="yes" xml:space="preserve">
          <source>Restarting an application means that the application is stopped and then started again, similar to using the instructions &lt;code&gt;remove_application&lt;/code&gt; and &lt;code&gt;add_application&lt;/code&gt; in sequence. Note that, even if the application has been started before the release upgrade is performed, &lt;code&gt;restart_application&lt;/code&gt; may only &lt;code&gt;load&lt;/code&gt; it rather than &lt;code&gt;start&lt;/code&gt; it, depending on the application's &lt;code&gt;start type&lt;/code&gt;: If &lt;code&gt;Type = load&lt;/code&gt;, the application is only loaded. If &lt;code&gt;Type = none&lt;/code&gt;, the application is not loaded and not started, although the code for its modules is loaded.</source>
          <target state="translated">응용 프로그램을 다시 시작한다는 것은 &lt;code&gt;remove_application&lt;/code&gt; 및 &lt;code&gt;add_application&lt;/code&gt; 명령 을 순서대로 사용하는 것과 유사하게 응용 프로그램이 중지되었다가 다시 시작됨 을 의미합니다. 릴리스 업그레이드가 수행되기 전에 응용 프로그램이 시작된 경우에도 &lt;code&gt;restart_application&lt;/code&gt; 은 응용 프로그램의 &lt;code&gt;start type&lt;/code&gt; 에 따라 &lt;code&gt;start&lt;/code&gt; 하지 않고 &lt;code&gt;load&lt;/code&gt; 만 할 수 있습니다 . &lt;code&gt;Type = load&lt;/code&gt; 인 경우 응용 프로그램 만로드됩니다. &lt;code&gt;Type = none&lt;/code&gt; 인 경우 해당 모듈의 코드가로드되었지만 응용 프로그램이로드되지 않고 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2de62cc3a4bd25c5d36ad0d8cc488270e5a0abd1" translate="yes" xml:space="preserve">
          <source>Restarts the call counters from zero for specified functions. Can be used to collect a new set of counters without having to stop and start call count profiling.</source>
          <target state="translated">지정된 기능에 대해 콜 카운터를 0에서 다시 시작합니다. 통화 카운트 프로파일 링을 중지하고 시작하지 않고도 새로운 카운터 세트를 수집하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cbe6d6b9a8d1596bb5bca12e14d81c9e108a1a3" translate="yes" xml:space="preserve">
          <source>Restore</source>
          <target state="translated">Restore</target>
        </trans-unit>
        <trans-unit id="50c54641b65cdfdd40db3c5df69a0a5a46d257fe" translate="yes" xml:space="preserve">
          <source>Restore original beam instruction for disabled breakpoints.</source>
          <target state="translated">비활성화 된 중단 점에 대한 원래 빔 명령을 복원합니다.</target>
        </trans-unit>
        <trans-unit id="9b939c958cae308cd1ce8394371dead14ecaa1d6" translate="yes" xml:space="preserve">
          <source>Restore previous configuration by maintaining a history buffer and handling configuration files.</source>
          <target state="translated">히스토리 버퍼를 유지하고 구성 파일을 처리하여 이전 구성을 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="3733a2a68fd7503fd11786ec56d8016b0a108fe2" translate="yes" xml:space="preserve">
          <source>Restores an opaque continuation returned by &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; if the continuation has passed through external term format (been sent between nodes or stored on disk).</source>
          <target state="translated">연속이 외부 용어 형식 (노드간에 전송되거나 디스크에 저장 됨)을 통과 한 경우 &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; 에 의해 반환 된 불투명 연속을 복원합니다 .</target>
        </trans-unit>
        <trans-unit id="4f3f20018aa0040e4c23d84e3c7950b3527b5bdd" translate="yes" xml:space="preserve">
          <source>Restores previously saved data to the server.</source>
          <target state="translated">이전에 저장된 데이터를 서버로 복원합니다.</target>
        </trans-unit>
        <trans-unit id="9fd2af0db43c49aa55ce334c12e957767a3ccb8b" translate="yes" xml:space="preserve">
          <source>Restores the previous state of user tags and their spreading as it was before a call to &lt;code&gt;&lt;a href=&quot;#spread_tag-1&quot;&gt;spread_tag/1&lt;/a&gt;&lt;/code&gt;. Note that the restoring is not limited to the same process, one can utilize this to turn off spreding in one process and restore it in a newly created, the one that actually is going to send messages:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#spread_tag-1&quot;&gt;spread_tag/1&lt;/a&gt;&lt;/code&gt; 호출하기 전의 상태와 사용자 태그의 이전 상태를 복원합니다 . 복원은 동일한 프로세스로 제한되지 않으며,이를 사용하여 한 프로세스에서 스프 레딩을 끄고 실제로 메시지를 보낼 새로 생성 된 프로세스에서 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fac283093b6a2a509402c8c0582786b4a2bfd78" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7dd86ea16702f2798d2509aeac3e281b6a70f1b" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;||&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc7c10d01aae72be16a86c0f638ea9cf021214b5" translate="yes" xml:space="preserve">
          <source>RestrOp ::= &lt;code&gt;|||&lt;/code&gt;</source>
          <target state="translated">RestrOp :: = &lt;code&gt;|||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f27748a3cc8d8302e3d06f6c33c914d3a3a3945a" translate="yes" xml:space="preserve">
          <source>Restricted Shell</source>
          <target state="translated">제한된 셸</target>
        </trans-unit>
        <trans-unit id="74f8659deabd84444add4ff9d5bcef99159bf52e" translate="yes" xml:space="preserve">
          <source>Restrictions on elliptic curves</source>
          <target state="translated">타원 곡선에 대한 제한</target>
        </trans-unit>
        <trans-unit id="6a2e8fce25ab13d2280da37bb29467c8d385d0c5" translate="yes" xml:space="preserve">
          <source>Restrictions on key sizes</source>
          <target state="translated">키 크기에 대한 제한</target>
        </trans-unit>
        <trans-unit id="bfa4191a9eae6ca9165e4fa4ff48bbaff74e299e" translate="yes" xml:space="preserve">
          <source>Restricts the socket to use only IPv6, prohibiting any IPv4 connections. This is only applicable for IPv6 sockets (option &lt;code&gt;inet6&lt;/code&gt;).</source>
          <target state="translated">소켓이 IPv6 만 사용하도록 제한하여 IPv4 연결을 금지합니다. 이것은 IPv6 소켓에만 적용됩니다 (옵션 &lt;code&gt;inet6&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="fad7e8f89b3044f680980534cc7f38eb45d77455" translate="yes" xml:space="preserve">
          <source>Result = 0 -&amp;gt; ok, result &amp;gt; 0 -&amp;gt; error.</source>
          <target state="translated">결과 = 0-&amp;gt; 확인, 결과&amp;gt; 0-&amp;gt; 오류.</target>
        </trans-unit>
        <trans-unit id="72c3908300e570c710533b083bcfd239361ca5b4" translate="yes" xml:space="preserve">
          <source>Result code 4003 is sent in CEA if there is an existing connection to the peer in question and configuration does not allow more than one.</source>
          <target state="translated">해당 피어에 대한 기존 연결이 있고 구성에서 둘 이상을 허용하지 않는 경우 결과 코드 4003이 CEA로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="b1380f2ff1e7ff28281bc2b3937da790713a4a29" translate="yes" xml:space="preserve">
          <source>Result codes 3001, 3002, 3005, and 3007 can be sent in answers formulated by diameter, if configured to do so.</source>
          <target state="translated">결과 코드 3001, 3002, 3005 및 3007은 구성된 경우 직경별로 공식화 된 답변으로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbb4070f87a5eec2fe80d288609d352ddb6823b2" translate="yes" xml:space="preserve">
          <source>Result of the operation. If &lt;code&gt;Result&lt;/code&gt; is a process identifier, the operation succeeded and the process identifier is the identifier of the newly created process. If &lt;code&gt;Result&lt;/code&gt; is an atom, the operation failed and the atom identifies failure reason.</source>
          <target state="translated">작업 결과. 경우 &lt;code&gt;Result&lt;/code&gt; 프로세스 식별자가 상기 동작이 성공 프로세스 식별자는 새롭게 생성 된 프로세스의 식별자이다. 경우 &lt;code&gt;Result&lt;/code&gt; 원자이고, 동작은 실패 원자 식별 실패 이유.</target>
        </trans-unit>
        <trans-unit id="779dd3f8d77a27050dfdced538f3720145146cb1" translate="yes" xml:space="preserve">
          <source>Result | &lt;code&gt;&lt;a href=&quot;#type-descriptive_error&quot;&gt;descriptive_error()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">결과 | &lt;code&gt;&lt;a href=&quot;#type-descriptive_error&quot;&gt;descriptive_error()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bdb45e9d6b5679ea0ed96f1d5bfeae12bb8e898" translate="yes" xml:space="preserve">
          <source>Result-Code AVP</source>
          <target state="translated">결과 코드 AVP</target>
        </trans-unit>
        <trans-unit id="da7c61f4348e14cf89c824561d092db5c3023fcb" translate="yes" xml:space="preserve">
          <source>Result-Code AVP Values</source>
          <target state="translated">결과 코드 AVP 값</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="0a0db2d8653e2bdb24b4ddd06733b9ef033724a6" translate="yes" xml:space="preserve">
          <source>Results are written to file (excel compatible text files) and on stdout.</source>
          <target state="translated">결과는 파일 (Excel 호환 텍스트 파일) 및 표준 출력에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="6c1e28cf400ace7a0cf6a58fff614aab265e55e1" translate="yes" xml:space="preserve">
          <source>Results in a OS call to:</source>
          <target state="translated">다음에 대한 OS 호출 결과 :</target>
        </trans-unit>
        <trans-unit id="52e920d347b840401d91b797f422f45ceb943e6e" translate="yes" xml:space="preserve">
          <source>Resume the loader process allowing it to return from &lt;code&gt;erlang:finish_loading&lt;/code&gt;.</source>
          <target state="translated">로더 프로세스를 재개하여 &lt;code&gt;erlang:finish_loading&lt;/code&gt; 에서 반환 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="92266fcdf49cd88ae3cb55b7500e16b861e0f8f8" translate="yes" xml:space="preserve">
          <source>Resume the processes.</source>
          <target state="translated">프로세스를 재개하십시오.</target>
        </trans-unit>
        <trans-unit id="e18f16b3b88e1efaab280687e97a380ca884e44f" translate="yes" xml:space="preserve">
          <source>Resumes a suspended process.</source>
          <target state="translated">일시 중단 된 프로세스를 재개합니다.</target>
        </trans-unit>
        <trans-unit id="f14bdb1234c7ed01c49eaf26a7e322a0b85afcbe" translate="yes" xml:space="preserve">
          <source>Resumes all suspended processes using a module &lt;code&gt;Mod&lt;/code&gt;.</source>
          <target state="translated">모듈 &lt;code&gt;Mod&lt;/code&gt; 를 사용하여 일시 중단 된 모든 프로세스를 재개합니다 .</target>
        </trans-unit>
        <trans-unit id="17c7293f799309379456316dabcac2397077e454" translate="yes" xml:space="preserve">
          <source>Resumes process execution for &lt;code&gt;Pid&lt;/code&gt; or &lt;code&gt;c:pid(X,Y,Z)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; 또는 &lt;code&gt;c:pid(X,Y,Z)&lt;/code&gt; 대한 프로세스 실행을 재개합니다 .</target>
        </trans-unit>
        <trans-unit id="baa6efb2f790bdb132e3741e6aa4b131129c8c15" translate="yes" xml:space="preserve">
          <source>Retains the statistics of destroyed locks.</source>
          <target state="translated">파괴 된 잠금 통계를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="5cc03bdcfe4904c6966e4b5da63b22275bcbe022" translate="yes" xml:space="preserve">
          <source>Retreive all the sdp records of type &lt;code&gt;Type&lt;/code&gt; from the property group &lt;code&gt;PG&lt;/code&gt;.</source>
          <target state="translated">특성 그룹 &lt;code&gt;PG&lt;/code&gt; 에서 유형 &lt;code&gt;Type&lt;/code&gt; 의 모든 sdp 레코드 를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="02febca237ef746057d21ace8518a1c006a9c4b9" translate="yes" xml:space="preserve">
          <source>Retreive the (SNMP) statistic counters maintained by the megaco application. The global counters handle events that cannot be attributed to a single connection (e.g. protocol errors that occur before the connection has been properly setup).</source>
          <target state="translated">megaco 응용 프로그램에서 유지 관리하는 (SNMP) 통계 카운터를 검색하십시오. 글로벌 카운터는 단일 연결로 인해 발생할 수없는 이벤트 (예 : 연결이 올바르게 설정되기 전에 발생하는 프로토콜 오류)를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="fa70701bc77c29039a4b681cd1ced4c75c07e003" translate="yes" xml:space="preserve">
          <source>Retreive the TCP related (SNMP) statistics counters.</source>
          <target state="translated">TCP 관련 (SNMP) 통계 카운터를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="8d7ef75f058aa1cf6b07567ad7ff04b3417d35fb" translate="yes" xml:space="preserve">
          <source>Retreive the UDP related (SNMP) statistics counters.</source>
          <target state="translated">UDP 관련 (SNMP) 통계 카운터를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="7151989dd8e6c94f234c2f32661137cfebef0084" translate="yes" xml:space="preserve">
          <source>Retreive the size of the mib server cache.</source>
          <target state="translated">mib 서버 캐시의 크기를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="4b31fb756dce544f130f19b8dad2c90736d11a83" translate="yes" xml:space="preserve">
          <source>Retreive the type (asn1 bertype) of an oid.</source>
          <target state="translated">OID의 유형 (asn1 bertype)을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="a066518d0b87d9a981cc76dfb930b0b065ce9302" translate="yes" xml:space="preserve">
          <source>Retrieve Erlang System Time</source>
          <target state="translated">Erlang 시스템 시간 검색</target>
        </trans-unit>
        <trans-unit id="9d19fa4433634e8f7f0044b8f7171e217dfed550" translate="yes" xml:space="preserve">
          <source>Retrieve agent config.</source>
          <target state="translated">에이전트 구성을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="3acc64305dc86f6d79205ab898062e15ca0a37ff" translate="yes" xml:space="preserve">
          <source>Retrieve all alias-names known to the agent.</source>
          <target state="translated">에이전트에 알려진 모든 별명을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="2134b573a854d0e886332caabf7da925b7e53ab2" translate="yes" xml:space="preserve">
          <source>Retrieve all loaded mib-files.</source>
          <target state="translated">로드 된 모든 mib 파일을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="1147438c0e44be971748704321067492f033f625" translate="yes" xml:space="preserve">
          <source>Retrieve all notifications (and traps) known to the agent.</source>
          <target state="translated">에이전트에 알려진 모든 알림 (및 트랩)을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="fadeb4e61b2e973528a9b28b3ff09f86b61edc47" translate="yes" xml:space="preserve">
          <source>Retrieve all tables known to the agent.</source>
          <target state="translated">에이전트에 알려진 모든 테이블을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="fce5ac6430e5aaacbba5d6b3b19663ec99641f54" translate="yes" xml:space="preserve">
          <source>Retrieve all variables known to the agent.</source>
          <target state="translated">에이전트에 알려진 모든 변수를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="e5b4f7c289af01a49876429046f707fd8d32c9b2" translate="yes" xml:space="preserve">
          <source>Retrieve data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 을 사용하여 데이터 세트를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="1bdc580cb2514729314f5603353f80c0bbf0c5c6" translate="yes" xml:space="preserve">
          <source>Retrieve data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt; 로 데이터 세트를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d69480abf5e824d94bacf05e6e59333596eae5f" translate="yes" xml:space="preserve">
          <source>Retrieve implementation dependent mib-storage table information.</source>
          <target state="translated">구현 종속 밉 스토리지 테이블 정보를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="c4acb468e368837beb0ba41c4f9baf884236d501" translate="yes" xml:space="preserve">
          <source>Retrieve misc info for the mib data.</source>
          <target state="translated">mib 데이터에 대한 기타 정보를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="95b30a24349787eb347b2a0cdc30747002d1ce85" translate="yes" xml:space="preserve">
          <source>Retrieve the encoding-config and when initiating the &lt;code&gt;megaco_receive_handle&lt;/code&gt;, set the field &lt;code&gt;encoding_config&lt;/code&gt; accordingly.</source>
          <target state="translated">encoding-config를 검색하고 &lt;code&gt;megaco_receive_handle&lt;/code&gt; 을 시작할 때 &lt;code&gt;encoding_config&lt;/code&gt; 필드를 적절하게 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f599f26a74119290164e57387a0798ea103824b0" translate="yes" xml:space="preserve">
          <source>Retrieve the encoding-config using the &lt;code&gt;&lt;a href=&quot;megaco#system_info&quot;&gt;system_info&lt;/a&gt;&lt;/code&gt; function (with &lt;code&gt;Item = text_config&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;megaco#system_info&quot;&gt;system_info&lt;/a&gt;&lt;/code&gt; 함수 ( &lt;code&gt;Item = text_config&lt;/code&gt; )를 사용하여 encoding-config를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="06a7a165ad5562144b8adab63d0b203466df36aa" translate="yes" xml:space="preserve">
          <source>Retrieve the keys and values for all persistent terms. The keys will be copied to the heap for the process calling &lt;code&gt;get/0&lt;/code&gt;, but the values will not.</source>
          <target state="translated">모든 영구 용어에 대한 키와 값을 검색합니다. 키는 &lt;code&gt;get/0&lt;/code&gt; 을 호출하는 프로세스의 힙에 복사 되지만 값은 복사 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e5761ee307c8026ca4f761f940f2b961da0dd03" translate="yes" xml:space="preserve">
          <source>Retrieve the list of all the mibs loaded into this agent. Default is the master agent.</source>
          <target state="translated">이 에이전트에로드 된 모든 밉 목록을 검색하십시오. 기본은 마스터 에이전트입니다.</target>
        </trans-unit>
        <trans-unit id="8fb723c2fa9c15cbf7e40bed085d2e51be38564e" translate="yes" xml:space="preserve">
          <source>Retrieve the mib file for the mib.</source>
          <target state="translated">mib의 mib 파일을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="3c2eaccb5619264e34509fb47435f523adc8579d" translate="yes" xml:space="preserve">
          <source>Retrieve the mib-file to which an given &lt;code&gt;oid()&lt;/code&gt; belongs.</source>
          <target state="translated">주어진 &lt;code&gt;oid()&lt;/code&gt; 속하는 mib 파일을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="6d55dedfb9e83bbd10cb9e9f96986faf6a0eb090" translate="yes" xml:space="preserve">
          <source>Retrieve the value for the persistent term associated with the key &lt;code&gt;Key&lt;/code&gt;. The lookup will be made in constant time and the value will not be copied to the heap of the calling process.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; 와 관련된 영구 용어의 값을 검색합니다 . 조회는 일정한 시간에 이루어지며 값은 호출 프로세스의 힙에 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ce97c7b119f622a84d3bd15681ec77eab484e0f" translate="yes" xml:space="preserve">
          <source>Retrieve usm user config.</source>
          <target state="translated">usm 사용자 구성을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="0fc5772540627f2ea7f6649c9ebcce92edee7fd7" translate="yes" xml:space="preserve">
          <source>Retrieves a generic pid of the C-node. Every C-node has a (pseudo) pid used in &lt;code&gt;ei_send_reg&lt;/code&gt;, &lt;code&gt;ei_rpc()&lt;/code&gt;, and others. This is contained in a field in the &lt;code&gt;ec&lt;/code&gt; structure. Do &lt;strong&gt;not&lt;/strong&gt; modify this structure.</source>
          <target state="translated">C 노드의 일반 pid를 검색합니다. 모든 C 노드에는 &lt;code&gt;ei_send_reg&lt;/code&gt; , &lt;code&gt;ei_rpc()&lt;/code&gt; 등에 사용되는 (의사) pid가 있습니다. 이것은 &lt;code&gt;ec&lt;/code&gt; 구조 의 필드에 포함됩니다 . 마십시오 &lt;strong&gt;하지&lt;/strong&gt; 이 구조를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="f971d95474a7aaf7ba0a3a08e8e1bb54f6e0db8d" translate="yes" xml:space="preserve">
          <source>Retrieves a list of all known global names.</source>
          <target state="translated">알려진 모든 전역 이름의 목록을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="77f059fe18a8998fe23607cd9d9f051918562790" translate="yes" xml:space="preserve">
          <source>Retrieves a list of all values on the current key. The values have types corresponding to the registry types, see &lt;code&gt;&lt;a href=&quot;#value-2&quot;&gt;value/2&lt;/a&gt;&lt;/code&gt;. Calls the Win32 API function &lt;code&gt;EnumRegValuesEx()&lt;/code&gt;.</source>
          <target state="translated">현재 키의 모든 값 목록을 검색합니다. 값은 레지스트리 유형에 해당하는 유형을 갖습니다 ( &lt;code&gt;&lt;a href=&quot;#value-2&quot;&gt;value/2&lt;/a&gt;&lt;/code&gt; 참조) . Win32 API 함수 &lt;code&gt;EnumRegValuesEx()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="2be5bbae4bd62f61c8d1df623c4813ba30080529" translate="yes" xml:space="preserve">
          <source>Retrieves configuration stored with &lt;code&gt;write_config(Data)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write_config(Data)&lt;/code&gt; 저장된 구성을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="b59675caaf402ed44ac06666148753ec422a80b1" translate="yes" xml:space="preserve">
          <source>Retrieves information about a connection. The list &lt;code&gt;Keys&lt;/code&gt; defines which information that is returned.</source>
          <target state="translated">연결에 대한 정보를 검색합니다. 목록 &lt;code&gt;Keys&lt;/code&gt; 는 반환되는 정보를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c62fd3c8db94f2ecb5d2fae829a42891b9817f97" translate="yes" xml:space="preserve">
          <source>Retrieves information about a file. Returns &lt;code&gt;{ok, FileInfo}&lt;/code&gt; if successful, otherwise &lt;code&gt;error&lt;/code&gt;. &lt;code&gt;FileInfo&lt;/code&gt; is a record &lt;code&gt;file_info&lt;/code&gt;, defined in the Kernel include file &lt;code&gt;file.hrl&lt;/code&gt;. Include the following directive in the module from which the function is called:</source>
          <target state="translated">파일에 대한 정보를 검색합니다. 반환 &lt;code&gt;{ok, FileInfo}&lt;/code&gt; 성공하면, 그렇지 않으면 &lt;code&gt;error&lt;/code&gt; . &lt;code&gt;FileInfo&lt;/code&gt; 기록이다 &lt;code&gt;file_info&lt;/code&gt; 커널에 정의는, 파일 포함 &lt;code&gt;file.hrl&lt;/code&gt; 을 . 함수가 호출되는 모듈에 다음 지시문을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="fe76411933e9e2e81fdcf0338d7957f7bda42a01" translate="yes" xml:space="preserve">
          <source>Retrieves information about a file. Returns &lt;code&gt;{ok, FileInfo}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. &lt;code&gt;FileInfo&lt;/code&gt; is a record &lt;code&gt;file_info&lt;/code&gt;, defined in the Kernel include file &lt;code&gt;file.hrl&lt;/code&gt;. Include the following directive in the module from which the function is called:</source>
          <target state="translated">파일에 대한 정보를 검색합니다. 성공하면 &lt;code&gt;{ok, FileInfo}&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴 합니다. &lt;code&gt;FileInfo&lt;/code&gt; 기록이다 &lt;code&gt;file_info&lt;/code&gt; 커널에 정의는, 파일 포함 &lt;code&gt;file.hrl&lt;/code&gt; 을 . 함수가 호출되는 모듈에 다음 지시문을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="d2276be2f2c3029568caafee6e887d81c617a51b" translate="yes" xml:space="preserve">
          <source>Retrieves information about the C-node. These values are initially set with &lt;code&gt;erl_connect_init()&lt;/code&gt; or &lt;code&gt;erl_connect_xinit()&lt;/code&gt;.</source>
          <target state="translated">C 노드에 대한 정보를 검색합니다. 이 값은 초기에 &lt;code&gt;erl_connect_init()&lt;/code&gt; 또는 &lt;code&gt;erl_connect_xinit()&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec85b06183feb13e2594732aca3a501dd9750a6" translate="yes" xml:space="preserve">
          <source>Retrieves the binding of &lt;code&gt;Var&lt;/code&gt;. This function is intended to be used by the conditional function of a breakpoint.</source>
          <target state="translated">&lt;code&gt;Var&lt;/code&gt; 바인딩을 검색합니다 . 이 기능은 중단 점의 조건부 기능에 의해 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="952c5ae51d3a297be343234997d87d013a82d0b3" translate="yes" xml:space="preserve">
          <source>Retrieves the driver queue as a pointer to an array of &lt;code&gt;SysIOVec&lt;/code&gt;s. It also returns the number of elements in &lt;code&gt;vlen&lt;/code&gt;. This is one of two ways to get data out of the queue.</source>
          <target state="translated">&lt;code&gt;SysIOVec&lt;/code&gt; 배열에 대한 포인터로 드라이버 큐를 검색합니다 . 또한 &lt;code&gt;vlen&lt;/code&gt; 의 요소 수를 반환합니다 . 이것은 큐에서 데이터를 가져 오는 두 가지 방법 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="c07292a4b963b263d1b6cc1646b4c6d5902c86d7" translate="yes" xml:space="preserve">
          <source>Retrieves the driver queue into a supplied &lt;code&gt;ErlIOVec&lt;/code&gt;&lt;code&gt;ev&lt;/code&gt;. It also returns the queue size. This is one of two ways to get data out of the queue.</source>
          <target state="translated">제공된 &lt;code&gt;ErlIOVec&lt;/code&gt; &lt;code&gt;ev&lt;/code&gt; 로 드라이버 큐를 검색합니다 . 또한 대기열 크기를 반환합니다. 이것은 큐에서 데이터를 가져 오는 두 가지 방법 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="a894c3ff79393666e5c7b22a004ebacc352e97d6" translate="yes" xml:space="preserve">
          <source>Retrieves the named value (or default) on the current key. Registry values of type &lt;code&gt;REG_SZ&lt;/code&gt; are returned as strings. Type &lt;code&gt;REG_DWORD&lt;/code&gt; values are returned as integers. All other types are returned as binaries.</source>
          <target state="translated">현재 키에서 이름이 지정된 값 (또는 기본값)을 검색합니다. &lt;code&gt;REG_SZ&lt;/code&gt; 유형의 레지스트리 값은 문자열로 반환됩니다. 유형 &lt;code&gt;REG_DWORD&lt;/code&gt; 값은 정수로 반환됩니다. 다른 모든 유형은 이진으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="245670a16c43ecee47979e6d1e5f4fdfc89b0df2" translate="yes" xml:space="preserve">
          <source>Retrieves the names of all files in the tar file &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">tar 파일 &lt;code&gt;Name&lt;/code&gt; 의 모든 파일 이름을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="d564b671e170b3431e838ae67d5ab7768b72f2e4" translate="yes" xml:space="preserve">
          <source>Retrieves the number of columns of the &lt;code&gt;IoDevice&lt;/code&gt; (that is, the width of a terminal). The function succeeds for terminal devices and returns &lt;code&gt;{error, enotsup}&lt;/code&gt; for all other I/O devices.</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; 의 열 수 (즉, 터미널 너비)를 검색합니다. 이 기능은 터미널 장치에 성공 하고 다른 모든 I / O 장치에 대해 &lt;code&gt;{error, enotsup}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e778e49b2d71c140dcdf03681dbceb1ae0cc20b4" translate="yes" xml:space="preserve">
          <source>Retrieves the number of rows of &lt;code&gt;IoDevice&lt;/code&gt; (that is, the height of a terminal). The function only succeeds for terminal devices, for all other I/O devices the function returns &lt;code&gt;{error, enotsup}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; 의 행 수 (즉, 터미널의 높이)를 검색합니다. 이 기능은 터미널 장치, 다른 모든 I / O 장치의 &lt;code&gt;{error, enotsup}&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0bb6456edb698b942587d5fb778ec0a6722ce718" translate="yes" xml:space="preserve">
          <source>Retrieves the options currently used by the client.</source>
          <target state="translated">클라이언트가 현재 사용하는 옵션을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="76466246f8a47a437b9e1621604ae79ee0d8b373" translate="yes" xml:space="preserve">
          <source>Retrieves the pid of the C-node. Every C-node has a (pseudo) pid used in &lt;code&gt;ei_send_reg&lt;/code&gt;, &lt;code&gt;ei_rpc&lt;/code&gt;, and others. This is contained in a field in the &lt;code&gt;ec&lt;/code&gt; structure. It will be safe for a long time to fetch this field directly from the &lt;code&gt;ei_cnode&lt;/code&gt; structure.</source>
          <target state="translated">C 노드의 pid를 검색합니다. 모든 C 노드에는 &lt;code&gt;ei_send_reg&lt;/code&gt; , &lt;code&gt;ei_rpc&lt;/code&gt; 등에서 사용되는 (의사) pid가 있습니다. 이것은 &lt;code&gt;ec&lt;/code&gt; 구조 의 필드에 포함됩니다 . &lt;code&gt;ei_cnode&lt;/code&gt; 구조 에서이 필드를 직접 가져 오는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="aabdb36347cbaff97e37db5db212dc599e8b84b1" translate="yes" xml:space="preserve">
          <source>Retrieves the value of an environment variable.</source>
          <target state="translated">환경 변수의 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="5a702c3a25b2ca721ccd72b7aec2133da01de553" translate="yes" xml:space="preserve">
          <source>Retrieves the value stored with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;Tree&lt;/code&gt;. Assumes that the key is present in the tree, crashes otherwise.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;Tree&lt;/code&gt; 로 저장된 값을 검색합니다 . 키가 트리에 있다고 가정하고 그렇지 않으면 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="365e0b9a2c74435c6a6c1ad0890a323996a844d1" translate="yes" xml:space="preserve">
          <source>Retrieving Current OTP Version</source>
          <target state="translated">현재 OTP 버전 검색</target>
        </trans-unit>
        <trans-unit id="59fedfa91c0565ade05984a3af8146c0a81048c8" translate="yes" xml:space="preserve">
          <source>Retrieving data from DBMS is usually to be done with the functions &lt;code&gt;&lt;a href=&quot;mnesia#read-3&quot;&gt;mnesia:read/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mnesia#read-2&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt;. The following function raises the salary:</source>
          <target state="translated">DBMS에서 데이터 검색은 일반적으로 &lt;code&gt;&lt;a href=&quot;mnesia#read-3&quot;&gt;mnesia:read/3&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mnesia#read-2&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt; 함수를 사용하여 수행됩니다 . 다음 함수는 급여를 올립니다.</target>
        </trans-unit>
        <trans-unit id="d886a95270a0b97b770f611dbef1f5da0d79dcec" translate="yes" xml:space="preserve">
          <source>Retrieving/generating the response.</source>
          <target state="translated">응답 검색 / 생성</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="cc15ba53eed9cac3cb103f31237c1c8cb9da235a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Token&lt;/code&gt; and is last token in a tokens call.</source>
          <target state="translated">리턴 &lt;code&gt;Token&lt;/code&gt; 이며 토큰 호출에서 마지막 토큰입니다.</target>
        </trans-unit>
        <trans-unit id="96fed125f9b4a3ff4eafa9dc4ab9f431753358e2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Token&lt;/code&gt; to the caller.</source>
          <target state="translated">발신자에게 &lt;code&gt;Token&lt;/code&gt; 을 반환 하십시오.</target>
        </trans-unit>
        <trans-unit id="1a1c978f872f3e9d4cbb152e995b6529af78529a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the host name part of the &lt;code&gt;NodeName&lt;/code&gt; is valid for use with this protocol; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NodeName&lt;/code&gt; 의 호스트 이름 부분 이이 프로토콜에 사용하기에 유효한 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 하십시오 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c835ade1ee058ea2528895c15193d9d02d86145e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the module has native compiled code. Return &lt;code&gt;false&lt;/code&gt; otherwise. In a system compiled without HiPE support, the result is always &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">모듈에 네이티브 컴파일 코드가있는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 하십시오. 돌아 &lt;code&gt;false&lt;/code&gt; 이 없습니다. HiPE 지원없이 컴파일 된 시스템에서 결과는 항상 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13532ab427d3f5c254e071d7934ca748721f8b88" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;{{Counter, Ref}, non_neg_integer()}&lt;/code&gt; list of counter values. &lt;code&gt;Ref&lt;/code&gt; can be either a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or a &lt;code&gt;&lt;code&gt;diameter_app:peer_ref()&lt;/code&gt;&lt;/code&gt;. Entries for the latter are folded into corresponding entries for the former as peer connections go down. Entries for both are removed at &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt;. The Diameter-level statistics returned by &lt;code&gt;transport&lt;/code&gt; and &lt;code&gt;connections&lt;/code&gt; info are based upon these entries.</source>
          <target state="translated">카운터 값 의 &lt;code&gt;{{Counter, Ref}, non_neg_integer()}&lt;/code&gt; 목록을 반환 합니다. &lt;code&gt;Ref&lt;/code&gt; 는 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;code&gt;diameter_app:peer_ref()&lt;/code&gt;&lt;/code&gt; 있습니다. 피어 연결이 끊어지면 후자의 항목이 전자의 해당 항목으로 접 힙니다. 두 항목 모두 &lt;code&gt;&lt;a href=&quot;#remove_transport-2&quot;&gt;remove_transport/2&lt;/a&gt;&lt;/code&gt; 에서 제거됩니다 . &lt;code&gt;transport&lt;/code&gt; 및 &lt;code&gt;connections&lt;/code&gt; 정보가 반환 한 직경 수준 통계는 이러한 항목을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="1bb16078b0f2378184a73700819de4ceef71e2e5" translate="yes" xml:space="preserve">
          <source>Return a capability value as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 로 구성된 기능 값을 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="9536f6bbba6fdc1b7d0b454be9dde8f6750a2209" translate="yes" xml:space="preserve">
          <source>Return a list containing one entry for each of the service's transport as configured with &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt;. Each entry is a tagged list containing both configuration and information about established peer connections. An example return value with for a client service with Origin-Host &quot;client.example.com&quot; configured with a single transport connected to &quot;server.example.com&quot; might look as follows.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 로 구성된 각 서비스 전송에 대해 하나의 항목이 포함 된 목록을 리턴하십시오 . 각 항목은 설정된 피어 연결에 대한 구성 및 정보가 모두 포함 된 태그가 지정된 목록입니다. &quot;server.example.com&quot;에 연결된 단일 전송으로 구성된 Origin-Host &quot;client.example.com&quot;이있는 클라이언트 서비스에 대한 반환 값 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e3714b9f4dba0aac8c1334a0e9085f3405a08f7a" translate="yes" xml:space="preserve">
          <source>Return a list containing one entry for every established transport connection whose watchdog state machine is not in the &lt;code&gt;down&lt;/code&gt; state. This is a flat view of &lt;code&gt;transport&lt;/code&gt; info which lists only active connections and for which Diameter-level statistics are accumulated only for the lifetime of the transport connection. A return value for the server above might look as follows.</source>
          <target state="translated">워치 독 상태 머신이 &lt;code&gt;down&lt;/code&gt; 상태 가 아닌 모든 확립 된 전송 연결에 대해 하나의 항목을 포함하는 목록을 리턴하십시오 . 이것은 활성 연결 만 나열하고 &lt;code&gt;transport&lt;/code&gt; 수준의 수명 동안 만 지름 수준 통계가 누적되는 전송 정보 의 평면보기입니다 . 위의 서버에 대한 반환 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db261cceb040f1c9828fe3d4c6c1a35462982fe0" translate="yes" xml:space="preserve">
          <source>Return a reasonable value for use as Origin-State-Id in outgoing messages.</source>
          <target state="translated">발신 메시지에서 Origin-State-Id로 ​​사용할 적절한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b57b27e4df9b1ae0072d43165d38c155eb66de4" translate="yes" xml:space="preserve">
          <source>Return a scheduler utilization sample for all schedulers, including dirty-io schedulers.</source>
          <target state="translated">dirty-io 스케줄러를 포함한 모든 스케줄러에 대한 스케줄러 사용 샘플을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="e48ca14d3d26b2f077fe65868bb3fe756cfe0117" translate="yes" xml:space="preserve">
          <source>Return a scheduler utilization sample for normal and dirty-cpu schedulers.</source>
          <target state="translated">정상 및 더티 CPU 스케줄러에 대한 스케줄러 사용 샘플을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="189e6f742d0287bea7092b8b595dda21405a8676" translate="yes" xml:space="preserve">
          <source>Return a specification of the target system. The actual target system can be created with &lt;code&gt;reltool:eval_target_spec/3&lt;/code&gt;.</source>
          <target state="translated">대상 시스템의 사양을 돌려줍니다. 실제 대상 시스템은 &lt;code&gt;reltool:eval_target_spec/3&lt;/code&gt; 로 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2aa7025ff201afee814f6c2a93ae1bcb0ae4ca05" translate="yes" xml:space="preserve">
          <source>Return a table handle.</source>
          <target state="translated">테이블 핸들을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f2413dd20c0e576107037d6e42aeba92e71c7df" translate="yes" xml:space="preserve">
          <source>Return a tagged list of all capabilities values as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 로 구성된 모든 기능 값의 태그가 지정된 목록을 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8294e0b56eeb80e5eba4768dcc17c3d64870430" translate="yes" xml:space="preserve">
          <source>Return a the identity of the globally registered collector if there is any.</source>
          <target state="translated">글로벌 등록 콜렉터의 ID가있는 경우이를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="eb494e14037837ccce72584c6526f5505b46a441" translate="yes" xml:space="preserve">
          <source>Return a timestamp that can be inserted as the &lt;code&gt;time&lt;/code&gt; field in the meta data for a log event. It is produced with &lt;code&gt; os:system_time(microsecond)&lt;/code&gt;.</source>
          <target state="translated">로그 이벤트의 메타 데이터에 &lt;code&gt;time&lt;/code&gt; 필드 로 삽입 할 수있는 타임 스탬프를 반환합니다 . 그것은으로 생산되는 &lt;code&gt; os:system_time(microsecond)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f6b885db67cca106a9b569ccd725228af91846d" translate="yes" xml:space="preserve">
          <source>Return a value for a Session-Id AVP.</source>
          <target state="translated">Session-Id AVP의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ba6a05dfc89724422c5b71e06eeac07f56af24ec" translate="yes" xml:space="preserve">
          <source>Return all records in the mib-storage table in the form of a list.</source>
          <target state="translated">mib-storage 테이블의 모든 레코드를 목록 형식으로 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="c8a7afda668c35cdafcb1e64da708b8cf8d41b06" translate="yes" xml:space="preserve">
          <source>Return an ordered list of the metavariables in the template.</source>
          <target state="translated">템플릿에서 순서화 된 메타 변수 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f4c3667b1add8d5e02e30fe75d8033f0bfc2e96" translate="yes" xml:space="preserve">
          <source>Return comment tokens.</source>
          <target state="translated">댓글 토큰을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="785922d0c7990e6a6337740a8132f1efba76556b" translate="yes" xml:space="preserve">
          <source>Return compiler options given via the environment variable &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt;. If the value is a list, it is returned as is. If it is not a list, it is put into a list.</source>
          <target state="translated">환경 변수 &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; 를 통해 제공된 컴파일러 옵션을 리턴 하십시오 . 값이 목록이면 그대로 반환됩니다. 목록이 아닌 경우 목록에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3a91241898b1cdf912dffef4b52f8226b582dd1e" translate="yes" xml:space="preserve">
          <source>Return information about a counter array in a map. The map has the following keys (at least):</source>
          <target state="translated">지도에서 카운터 배열에 대한 정보를 반환합니다. 지도에는 최소한 다음과 같은 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4afe5c3542f3f32911baf31fbf610eaf8e8a9d8d" translate="yes" xml:space="preserve">
          <source>Return information about a started service. Requesting info for an unknown service causes &lt;code&gt;undefined&lt;/code&gt; to be returned. Requesting a list of items causes a tagged list to be returned.</source>
          <target state="translated">시작된 서비스에 대한 정보를 반환합니다. 알 수없는 서비스에 대한 정보를 요청하면 &lt;code&gt;undefined&lt;/code&gt; 가 반환됩니다. 항목 목록을 요청하면 태그가 지정된 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b54691c0bc9fdd076b7afe264a3151b4619e0ab4" translate="yes" xml:space="preserve">
          <source>Return information about an atomic array in a map. The map has the following keys:</source>
          <target state="translated">지도의 원자 배열에 대한 정보를 반환합니다. 지도에는 다음과 같은 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3520a8e67d6b1af223fd5a26d9975111c35a17a8" translate="yes" xml:space="preserve">
          <source>Return information about persistent terms in a map. The map has the following keys:</source>
          <target state="translated">지도의 영구 용어에 대한 정보를 반환합니다. 지도에는 다음과 같은 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcd34f9aa0dee036d0db04e93eacf17e6bece459" translate="yes" xml:space="preserve">
          <source>Return node names held by the registrar for the given host.</source>
          <target state="translated">주어진 호스트에 대한 등록자가 보유한 노드 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2571d001168cc2206e4af757b7833aa1343124ab" translate="yes" xml:space="preserve">
          <source>Return only &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integer corresponding to creation time.</source>
          <target state="translated">생성 시간에 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 정수만 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="996ea5173163b123ed6a043649459919ca914183" translate="yes" xml:space="preserve">
          <source>Return only &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integer corresponding to creation time.</source>
          <target state="translated">생성 시간에 해당하는 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 정수만 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="73fec507617851a521471bf50b4848c38830e262" translate="yes" xml:space="preserve">
          <source>Return only positive integers.</source>
          <target state="translated">양의 정수만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9c2362dda30d47eb99dd0cab5c2b8fa38f869f8c" translate="yes" xml:space="preserve">
          <source>Return results in a &lt;code&gt;{ok, [Out]}&lt;/code&gt; tuple instead of writing to file and returning &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">파일에 쓰고 &lt;code&gt;ok&lt;/code&gt; 를 반환하는 대신 &lt;code&gt;{ok, [Out]}&lt;/code&gt; 튜플에 결과를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a7477004a5281500cb3c9c08e52d597bf21bd1bf" translate="yes" xml:space="preserve">
          <source>Return the ID for the engine, or an empty binary if there is no id set.</source>
          <target state="translated">엔진의 ID를 반환하거나 ID가 설정되지 않은 경우 빈 바이너리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1605a6115da3ce13cb5f780dbe48e8b135673745" translate="yes" xml:space="preserve">
          <source>Return the address of the given node. If not implemented, &lt;code&gt; erl_epmd:address_please/3&lt;/code&gt; will be used instead.</source>
          <target state="translated">주어진 노드의 주소를 반환합니다. 구현되지 않은 경우 &lt;code&gt; erl_epmd:address_please/3&lt;/code&gt; 가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8e6d34509ab6610cf83be325f59f6c39943cfea5" translate="yes" xml:space="preserve">
          <source>Return the address of the given node. If not implemented, &lt;code&gt;inet:gethostbyname/1&lt;/code&gt; will be used instead</source>
          <target state="translated">주어진 노드의 주소를 반환합니다. 구현되지 않은 경우 &lt;code&gt;inet:gethostbyname/1&lt;/code&gt; 이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="292859966a655edc4054e4f1076d2fed6b650843" translate="yes" xml:space="preserve">
          <source>Return the defining parameters of a elliptic curve.</source>
          <target state="translated">타원 곡선의 정의 매개 변수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08d6beff9271fb403fee80042fc6e6442d0f5864" translate="yes" xml:space="preserve">
          <source>Return the distribution port used by the given node.</source>
          <target state="translated">주어진 노드가 사용하는 배포 포트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="026ca738a4e24775b52601dc015e85dbf9838772" translate="yes" xml:space="preserve">
          <source>Return the list of applications as configured with &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; 로 구성된 애플리케이션 목록을 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="8760f4dfa12986348ea3b742e129cc7f36b461e8" translate="yes" xml:space="preserve">
          <source>Return the list of body subtrees of a &lt;code&gt;clause&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;clause&lt;/code&gt; 노드 의 본문 하위 트리 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="415e4cccd2b2511ca9972eccc4412def66ed17df" translate="yes" xml:space="preserve">
          <source>Return the list of started services.</source>
          <target state="translated">시작된 서비스 목록을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="fcd36f7d46518bde4d7047a8c34350a7a2893827" translate="yes" xml:space="preserve">
          <source>Return the name (eg a description) for the engine, or an empty binary if there is no name set.</source>
          <target state="translated">엔진의 이름 (예 : 설명)을 반환하거나 이름이 설정되지 않은 경우 빈 바이너리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="869a332a11dcce537fc74b533f9961fb120feb39" translate="yes" xml:space="preserve">
          <source>Return the number of matching functions that can have call count breakpoints, the same as &lt;code&gt;start/0..3&lt;/code&gt; with the same arguments would have returned.</source>
          <target state="translated">콜백 중단 점을 가질 수있는 일치 함수의 수를 리턴하십시오. 동일한 인수를 가진 &lt;code&gt;start/0..3&lt;/code&gt; 과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="545eef5a0d17878bc6d57549235644bab28f7ff8" translate="yes" xml:space="preserve">
          <source>Return the number of matching functions that has got call count breakpoints.</source>
          <target state="translated">호출 횟수 중단 점을 가진 일치하는 함수 수를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="7e5e938f9ef6efcb110c9fb8e3ee0c48e7a20886" translate="yes" xml:space="preserve">
          <source>Return the port the local node should listen to. If not implemented, &lt;code&gt; erl_epmd:listen_port_please/2&lt;/code&gt; will be used instead.</source>
          <target state="translated">로컬 노드가 수신해야하는 포트를 반환합니다. 구현되지 않은 경우 &lt;code&gt; erl_epmd:listen_port_please/2&lt;/code&gt; 가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6ecb156241944c24df7a613253421fdcbcc3e0d5" translate="yes" xml:space="preserve">
          <source>Return the process identifier of the server process.</source>
          <target state="translated">서버 프로세스의 프로세스 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="596033205682a5c5f39f8c045be421baf09bdbad" translate="yes" xml:space="preserve">
          <source>Return transport configuration associated with a single peer, as passed to &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt;. The returned list is empty if the peer is unknown. Otherwise it contains the &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; tuples as in &lt;code&gt;transport&lt;/code&gt; and &lt;code&gt;connections&lt;/code&gt; info above. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; 에 전달 된 단일 피어와 연관된 전송 구성을 리턴하십시오 . 피어를 알 수 없으면 리턴 된 목록이 비어 있습니다. 그렇지 않으면 위의 &lt;code&gt;transport&lt;/code&gt; 및 &lt;code&gt;connections&lt;/code&gt; 정보 와 같이 &lt;code&gt;ref&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 튜플이 포함됩니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5b25b7bff97770cbd71aa2bcb0ba6cc19819e76b" translate="yes" xml:space="preserve">
          <source>Return true if &lt;code&gt;term&lt;/code&gt; is an exception.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 가 예외 인 경우 true를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">반환 값</target>
        </trans-unit>
        <trans-unit id="18d44aa00d4d2f1a0de4ecac8687cabb586ac03d" translate="yes" xml:space="preserve">
          <source>Return value from an &lt;code&gt;ssh_sftp&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;ssh_sftp&lt;/code&gt; 함수 에서 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="15ca73f2f5111db142fa1677fa53bcbbbe25265a" translate="yes" xml:space="preserve">
          <source>Return value from the &lt;code&gt;&lt;a href=&quot;#start_monitor-3&quot;&gt;start_monitor()&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start_monitor-3&quot;&gt;start_monitor()&lt;/a&gt;&lt;/code&gt; 함수 에서 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="74b0ed4d90174dc240782b3f46a02bad9a5dc4ff" translate="yes" xml:space="preserve">
          <source>Return value from the &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;start_link()&lt;/code&gt; functions, for example, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start()&lt;/code&gt; 및 &lt;code&gt;start_link()&lt;/code&gt; 함수의 값을 반환합니다 ( 예 : &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="3163d3a67f9c0a3df18a0b32a1848d46a7cae484" translate="yes" xml:space="preserve">
          <source>Return value from the start functions, for example, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">시작 함수에서 반환 값, 예를 들어, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d184302be65b0501c434c989ce960b469d8ab2e9" translate="yes" xml:space="preserve">
          <source>Return value is &lt;code&gt;0&lt;/code&gt;, unless the &lt;code&gt;timeout&lt;/code&gt; driver function is &lt;code&gt;NULL&lt;/code&gt;, in which case it is &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 드라이버 함수가 &lt;code&gt;NULL&lt;/code&gt; 이 아닌 경우 리턴 값은 &lt;code&gt;0&lt;/code&gt; 이며, 이 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="96fea8b0d50097ba90dc772858137eba9d19f503" translate="yes" xml:space="preserve">
          <source>Return values from the &lt;code&gt;&lt;a href=&quot;#connection_info-1&quot;&gt;connection_info/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#connection_info-2&quot;&gt;connection_info/2&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#connection_info-1&quot;&gt;connection_info/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#connection_info-2&quot;&gt;connection_info/2&lt;/a&gt;&lt;/code&gt; 함수 에서 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="49211521a2e244070078ee73adede17bc6389865" translate="yes" xml:space="preserve">
          <source>Return values from the &lt;code&gt;&lt;a href=&quot;#daemon_info-1&quot;&gt;daemon_info/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#daemon_info-2&quot;&gt;daemon_info/2&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#daemon_info-1&quot;&gt;daemon_info/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#daemon_info-2&quot;&gt;daemon_info/2&lt;/a&gt;&lt;/code&gt; 함수 에서 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b7dcf2c29b7894fd4274d843222486a29bbac5b9" translate="yes" xml:space="preserve">
          <source>Return values:</source>
          <target state="translated">반환 값 :</target>
        </trans-unit>
        <trans-unit id="ff216a94df439e2821ca3664b457f212cf962310" translate="yes" xml:space="preserve">
          <source>Return white space tokens. By convention, a newline character, if present, is always the first character of the text (there cannot be more than one newline in a white space token).</source>
          <target state="translated">공백 토큰을 반환합니다. 일반적으로 줄 바꿈 문자는있는 경우 항상 텍스트의 첫 번째 문자입니다 (공백 토큰에는 둘 이상의 줄 바꿈 문자가있을 수 없음).</target>
        </trans-unit>
        <trans-unit id="0a0f9ea4537c829f189c17c1388dd83d2074333e" translate="yes" xml:space="preserve">
          <source>ReturnFormat) -&amp;gt;</source>
          <target state="translated">ReturnFormat)-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e8872950120a8fda0116e4eeb516842552c69925" translate="yes" xml:space="preserve">
          <source>Returned by &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; 에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0b4bbed1147880ab3fa88ace211606ff099dbee" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;connect/2,3,4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-2&quot;&gt;ssh_sftp:start_channel/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;connect/2,3,4&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;ssh_sftp#start_channel-2&quot;&gt;ssh_sftp:start_channel/2,3&lt;/a&gt;&lt;/code&gt; 함수에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="80d9f2993c240cb5395538eac32a770dc645b1f7" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh#daemon-1&quot;&gt;daemon/1,2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ssh#daemon-1&quot;&gt;daemon/1,2,3&lt;/a&gt;&lt;/code&gt; 함수에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2b499cd87149b2c8112ff4703aabf6b14742dd7" translate="yes" xml:space="preserve">
          <source>Returned by the functions &lt;code&gt;&lt;a href=&quot;ssh_connection#session_channel-2&quot;&gt;ssh_connection:session_channel/2,4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ssh_connection#session_channel-2&quot;&gt;ssh_connection:session_channel/2,4&lt;/a&gt;&lt;/code&gt; 함수에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="7600c8cb62b3f6c0670cf2d28c10c2d70f454cac" translate="yes" xml:space="preserve">
          <source>Returned if &lt;code&gt;Number&amp;gt;0&lt;/code&gt; and end of file was reached before anything at all could be read.</source>
          <target state="translated">&lt;code&gt;Number&amp;gt;0&lt;/code&gt; 이고 파일 끝에 도달하기 전에 파일 끝에 도달 하면 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="ebd6a9b6057141637a7f687d405ddc6223fd3a4d" translate="yes" xml:space="preserve">
          <source>Returned if end of file was reached before anything at all could be read.</source>
          <target state="translated">무엇이든 읽을 수 있기 전에 파일 끝에 도달하면 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="78f92740b63dec59bb4c6e7e6eaba8a507fff69f" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from function &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">함수 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;{skip,Reason}&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d4d1aef68ed5b30caca7270db75abd30f2c50c0e" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; 함수에서 &lt;code&gt;{skip,Reason}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="79fbf73ac7c1fd87f1058ecd2cd1bb43d786dfe6" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{skip,Reason}&lt;/code&gt; from the execution clause of the test case. The execution clause is called, so the author must ensure that the test case does not run.</source>
          <target state="translated">테스트 케이스의 실행 절에서 &lt;code&gt;{skip,Reason}&lt;/code&gt; 을 리턴 합니다. 실행 절이 호출되므로 작성자는 테스트 케이스가 실행되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="459b4d8e6cbde74f658936d4e562836d2969a920" translate="yes" xml:space="preserve">
          <source>Returning Exit Status (RFC 4254, section 6.10)</source>
          <target state="translated">종료 상태 반환 (RFC 4254, 섹션 6.10)</target>
        </trans-unit>
        <trans-unit id="78efdce4503fc5152a50adf6376b612d02e50c2c" translate="yes" xml:space="preserve">
          <source>Returning any other value or generating an exception causes the new code to be unloaded. If the return value is not an atom, a warning error report is sent to the error logger.</source>
          <target state="translated">다른 값을 반환하거나 예외를 생성하면 새 코드가 언로드됩니다. 리턴 값이 원자가 아닌 경우, 오류 로거에 경고 오류 보고서가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="5bafc7cb30a4a28d5f1849e1ed82229cd36e7a85" translate="yes" xml:space="preserve">
          <source>Returning anything but &lt;code&gt;ok&lt;/code&gt; or a 2xxx series result code causes the transport connection to be broken. Multiple &lt;code&gt;&lt;a href=&quot;#capabilities_cb&quot;&gt;capabilities_cb&lt;/a&gt;&lt;/code&gt; options can be specified, in which case the corresponding callbacks are applied until either all return &lt;code&gt;ok&lt;/code&gt; or one does not.</source>
          <target state="translated">&lt;code&gt;ok&lt;/code&gt; 또는 2xxx 시리즈 결과 코드 이외의 것을 반환 하면 전송 연결이 끊어집니다. 여러 &lt;code&gt;&lt;a href=&quot;#capabilities_cb&quot;&gt;capabilities_cb&lt;/a&gt;&lt;/code&gt; 의 옵션은 모든 반환 할 때까지이 경우 해당 콜백이 적용 지정할 수 있습니다 &lt;code&gt;ok&lt;/code&gt; 또는 하나하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13619914603e5198752b243417d1cec7b1cbae13" translate="yes" xml:space="preserve">
          <source>Returns 0 if &lt;code&gt;cpu_sup&lt;/code&gt; is not available.</source>
          <target state="translated">&lt;code&gt;cpu_sup&lt;/code&gt; 을 사용할 수없는 경우 0을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="2fe7ef4689924328d121fc13015c7e449fbb3af4" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, non-zero on failure.</source>
          <target state="translated">성공하면 0을, 실패하면 0이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1bfdbf060bf2a1935f7a0e64e42eb75971f6345" translate="yes" xml:space="preserve">
          <source>Returns 0 otherwise.</source>
          <target state="translated">그렇지 않으면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2fbeaf650327f2e3c58e1b893cae4fb1a66501a9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code id=&quot;read_link_all&quot;&gt;{ok, Filename}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a symbolic link that is not a raw filename, or &lt;code&gt;{error, Reason}&lt;/code&gt; otherwise. On platforms that do not support symbolic links, the return value is &lt;code&gt;{error,enotsup}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 이 원시 파일 이름이 아닌 기호 링크를 참조 하면 &lt;code id=&quot;read_link_all&quot;&gt;{ok, Filename}&lt;/code&gt; &lt;code&gt;{error, Reason}&lt;/code&gt; 그렇지 않으면 {error, Reason}을 리턴 합니다. 기호 링크를 지원하지 않는 플랫폼에서 리턴 값은 &lt;code&gt;{error,enotsup}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c8a13c6c0607ec9a0e9c3c4823a02858da20b803" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not a proper list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 가 올바른 목록이 아닌 경우 &lt;code&gt;-1&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="488069c3cb5902ddad05d14f6565535c0efbbfa1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; if the floating point number is not finite.</source>
          <target state="translated">부동 소수점 숫자가 유한하지 않으면 &lt;code&gt;-1&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="6e8da0a8ae5c1d6ebbf2999c231c02b4ccea25da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; and initializes &lt;code&gt;obuf&lt;/code&gt; on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을 반환 하고 &lt;code&gt;obuf&lt;/code&gt; 를 초기화하고 , 그렇지 않으면 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d271492cad5db5bbc1155be82b3fd20cacc409d9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal. Returns a value less than &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; compares as less than &lt;code&gt;b&lt;/code&gt;. Returns a value larger than &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; compares as larger than &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;0&lt;/code&gt; 경우 및 &lt;code&gt;b&lt;/code&gt; 동일하다. 보다 작은 값을 반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;a&lt;/code&gt; 이하의 비교로 &lt;code&gt;b&lt;/code&gt; . 보다 큰 값 리턴 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;a&lt;/code&gt; 보다 큰 비교로 &lt;code&gt;b&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="072a398ea7b2dc0fc0a565fe904090ff6d623dd0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; and &lt;code&gt;monitor2&lt;/code&gt; are equal, &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; &amp;lt; &lt;code&gt;monitor2&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;monitor1&lt;/code&gt; &amp;gt; &lt;code&gt;monitor2&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;0&lt;/code&gt; 만약 &lt;code&gt;monitor1&lt;/code&gt; 과 &lt;code&gt;monitor2&lt;/code&gt; , 동일 &amp;lt; &lt;code&gt;0&lt;/code&gt; 의 경우 &lt;code&gt;monitor1&lt;/code&gt; &amp;lt; &lt;code&gt;monitor2&lt;/code&gt; 및&amp;gt; &lt;code&gt;0&lt;/code&gt; 의 경우 &lt;code&gt;monitor1&lt;/code&gt; &amp;gt; &lt;code&gt;monitor2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7920d1afe1f77b7b2bb69b5950114ebeb3d37251" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;pid1&lt;/code&gt; and &lt;code&gt;pid2&lt;/code&gt; are equal, &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;pid1&lt;/code&gt; &amp;lt; &lt;code&gt;pid2&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;pid1&lt;/code&gt; &amp;gt; &lt;code&gt;pid2&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;0&lt;/code&gt; 경우 &lt;code&gt;pid1&lt;/code&gt; 및 &lt;code&gt;pid2&lt;/code&gt; 동일한, &amp;lt; &lt;code&gt;0&lt;/code&gt; 의 경우 &lt;code&gt;pid1&lt;/code&gt; &amp;lt; &lt;code&gt;pid2&lt;/code&gt; 및&amp;gt; &lt;code&gt;0&lt;/code&gt; 의 경우 &lt;code&gt;pid1&lt;/code&gt; &amp;gt; &lt;code&gt;pid2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f42b6d3dd05f623e6c9a461536fab61de5146090" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if a monitor was removed and &amp;gt; 0 if the monitor no longer exists.</source>
          <target state="translated">반환 &lt;code&gt;0&lt;/code&gt; 모니터가 제거 된 경우와&amp;gt; 0 모니터가 더 이상 존재하지 않으면.</target>
        </trans-unit>
        <trans-unit id="f3130b22d79e0594cbfee4806066831a780e431e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if it was a bit string term.</source>
          <target state="translated">비트 문자열 용어 인 경우 &lt;code&gt;0&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="fbcc999b8ba8bb8fb081510096a443737b55216e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if successful, otherwise &lt;code&gt;-1&lt;/code&gt;. In the latter case it sets &lt;code&gt;erl_errno&lt;/code&gt; to &lt;code&gt;EIO&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을 , 그렇지 않으면 &lt;code&gt;-1&lt;/code&gt; 을 리턴합니다 . 후자의 경우에는 &lt;code&gt;erl_errno&lt;/code&gt; 를 &lt;code&gt;EIO&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="dd74052a4956a0a756749720fbbf26847c93e18f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the monitor was successfully identified and removed. Returns a non-zero value if the monitor could not be identified, which means it was either</source>
          <target state="translated">모니터가 성공적으로 식별되고 제거 된 경우 &lt;code&gt;0&lt;/code&gt; 을 리턴 합니다. 모니터를 식별 할 수없는 경우 0이 아닌 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a1cd3df7b26605f1b8a43bc02fca546fec8ce909" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the terms are equal, &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;term1&lt;/code&gt; &amp;lt; &lt;code&gt;term2&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;term2&lt;/code&gt; &amp;lt; &lt;code&gt;term1&lt;/code&gt;.</source>
          <target state="translated">항이 같으면 &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;term1&lt;/code&gt; &amp;lt; &lt;code&gt;term2&lt;/code&gt; 인 경우 &lt;code&gt;-1&lt;/code&gt; 또는 &lt;code&gt;term2&lt;/code&gt; &amp;lt; &lt;code&gt;term1&lt;/code&gt; 인 경우 &lt;code&gt;1&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="52ee1791e89438cfbb09fe85370e4be0c4174cff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the type cannot be determined or one of:</source>
          <target state="translated">유형을 결정할 수 없거나 다음 중 하나 인 경우 &lt;code&gt;0&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="50e51ec9b602d8e52f5b56e7dd86a98c570d1875" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; it they are not equal, and a value not equal to &lt;code&gt;0&lt;/code&gt; if they are equal.</source>
          <target state="translated">반환 &lt;code&gt;0&lt;/code&gt; 그것은 그들이 동일하지 않고, 값이 없습니다 동일한 &lt;code&gt;0&lt;/code&gt; 가 동일한 경우.</target>
        </trans-unit>
        <trans-unit id="5e1a489d4f9f0d6105b48eaccc18d34225e4b12d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success and &lt;code&gt;-1&lt;/code&gt; on failure. Failure might be either due to invalid encoding of the term or due to the term not being of the type &lt;code&gt;iodata()&lt;/code&gt;. On failure, the integer pointed to by the &lt;code&gt;index&lt;/code&gt; argument will be updated to refer to the sub term where the failure was detected.</source>
          <target state="translated">성공 &lt;code&gt;-1&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; 을, 실패 하면 -1 을 반환합니다 . 용어의 잘못된 인코딩 또는 용어가 &lt;code&gt;iodata()&lt;/code&gt; 유형이 아니기 때문에 실패 할 수 있습니다 . 실패시 &lt;code&gt;index&lt;/code&gt; 인수가 가리키는 정수 는 실패가 감지 된 하위 용어를 참조하도록 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="23cab98b0623e4b0e32b9093e5ef62a123feb6fc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no &lt;code&gt;down&lt;/code&gt; callback is provided, and &amp;gt; 0 if the process is no longer alive or if &lt;code&gt;target_pid&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt; undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;0&lt;/code&gt; 성공, &amp;lt;어떤 경우 0 &lt;code&gt;down&lt;/code&gt; 콜백이 제공되지 않으며,&amp;gt; 0 프로세스가 더 이상 살아있는 경우 또는 경우 &lt;code&gt;target_pid&lt;/code&gt; 이 되어 &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt; undefined&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1495d2dcd77d2c277ca09871795adbea294a06a5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no &lt;code&gt;down&lt;/code&gt; callback is provided, and &amp;gt; 0 if the process is no longer alive.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을, &lt;code&gt;down&lt;/code&gt; 콜백이 제공 되지 않으면 &amp;lt;0을 , 프로세스가 더 이상 존재하지 않으면&amp;gt; 0을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="147dfcedb6130dcb3e344debc4b54ca54f8b8a66" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, &amp;lt; 0 if no callback is provided, and &amp;gt; 0 if the process is no longer alive.</source>
          <target state="translated">반환 &lt;code&gt;0&lt;/code&gt; 성공, &amp;lt;콜백이 제공되지 않을 경우 0, 및&amp;gt; 0 프로세스가 더 이상 살아합니다.</target>
        </trans-unit>
        <trans-unit id="2c492d5222c271880cc6dab0353ce6f5682b5289" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을, 그렇지 않으면 &lt;code&gt;-1&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="99b406373dc8fe6db0449d813a5f79501cb33531" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;EBUSY&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을, 그렇지 않으면 &lt;code&gt;EBUSY&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8c69f20dec618478f3663e41c43a1c6b626d3205" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise &lt;code&gt;EBUSY&lt;/code&gt;. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; try to lock the same rwlock again.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을, 그렇지 않으면 &lt;code&gt;EBUSY&lt;/code&gt; 를 반환합니다 . 현재 rwlock을 읽거나 읽거나 쓴 잠금 스레드 는 동일한 rwlock을 다시 잠그려고 시도 &lt;strong&gt;할 수 없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="06b21577fae8bbe6572f27c24fcac58fd4e88891" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise a value &lt;code&gt;!= 0&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을, 그렇지 않으면 값 &lt;code&gt;!= 0&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="7f67995b09d8c03447773e8b6d645bf327b96995" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을 반환 하고, 그렇지 않으면 오류를 나타내는 &lt;code&gt;errno&lt;/code&gt; 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="17e727f0f7e44e0124cf8250aaf77abcb4d94e4e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error. The driver creating the key is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을 반환 하고, 그렇지 않으면 오류를 나타내는 &lt;code&gt;errno&lt;/code&gt; 값을 반환합니다. 키를 생성하는 드라이버는 드라이버를 언로드하기 전에 키를 삭제해야합니다.</target>
        </trans-unit>
        <trans-unit id="26800ea3c35a48f48e98accc6b96cb83bd10b328" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success, otherwise an &lt;code&gt;errno&lt;/code&gt; value is returned to indicate the error. The newly created thread begins executing in the function pointed to by &lt;code&gt;func&lt;/code&gt;, and &lt;code&gt;func&lt;/code&gt; is passed &lt;code&gt;arg&lt;/code&gt; as argument. When &lt;code&gt;erl_drv_thread_create&lt;/code&gt; returns, the thread identifier of the newly created thread is available in &lt;code&gt;*tid&lt;/code&gt;. &lt;code&gt;opts&lt;/code&gt; can be either a &lt;code&gt;NULL&lt;/code&gt; pointer, or a pointer to an &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; structure. If &lt;code&gt;opts&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, default options are used, otherwise the passed options are used.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을 반환 하고, 그렇지 않으면 오류를 나타내는 &lt;code&gt;errno&lt;/code&gt; 값을 반환합니다. 새로 생성 된 스레드가 가리키는 함수의 실행이 시작 &lt;code&gt;func&lt;/code&gt; 및 &lt;code&gt;func&lt;/code&gt; 전달 &lt;code&gt;arg&lt;/code&gt; 인수한다. 때 &lt;code&gt;erl_drv_thread_create&lt;/code&gt; 반환, 새로 생성 된 스레드의 스레드 식별자에서 사용할 수 있습니다 &lt;code&gt;*tid&lt;/code&gt; . &lt;code&gt;opts&lt;/code&gt; 는 &lt;code&gt;NULL&lt;/code&gt; 포인터이거나 &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; 구조 에 대한 포인터 일 수 있습니다 . 경우 &lt;code&gt;opts&lt;/code&gt; A는 &lt;code&gt;NULL&lt;/code&gt; 포인터, 기본 옵션, 그렇지 않으면 전달 된 옵션을 사용, 사용된다.</target>
        </trans-unit>
        <trans-unit id="e72c8d8be7beff4d9ddb37560e1a80573817b4bd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; on success. If the call fails, a non-zero value is returned, and the reason for the error can be obtained with the appropriate platform-dependent call.</source>
          <target state="translated">성공하면 &lt;code&gt;0&lt;/code&gt; 을 반환합니다 . 호출이 실패하면 0이 아닌 값이 리턴되고 적절한 플랫폼 종속 호출로 오류 이유를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3086d983f407d141773c522d0f5defee16a27022" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f11efa5004a5978c0569c8d60ebccedb9d05a28f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; if the timeslice is exhausted, otherwise &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;1&lt;/code&gt; is returned, the NIF is to return as soon as possible in order for the process to yield.</source>
          <target state="translated">반환 &lt;code&gt;1&lt;/code&gt; 타임 슬라이스 달리, 소진 된 경우 &lt;code&gt;0&lt;/code&gt; . 경우 &lt;code&gt;1&lt;/code&gt; 이 반환되면, NIF는 수율 공정의 순서를 가능한 한 빨리 복귀하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a05934f68d914848552efcba4c6a4de46ed6c2d6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; on success, otherwise &lt;code&gt;0&lt;/code&gt;. In the latter case &lt;code&gt;erl_errno&lt;/code&gt; is set to one of:</source>
          <target state="translated">성공하면 &lt;code&gt;1&lt;/code&gt; 을, 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; 을 반환합니다 . 후자의 경우 &lt;code&gt;erl_errno&lt;/code&gt; 는 다음 중 하나로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="bbce47d721ecf0ed15007cbf5bc4ae1c1f24fa2f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt; such that the index set is equal to the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;, and &lt;code&gt;Family&lt;/code&gt;[i] is the &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; of the set of i under &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; 인덱스 세트는 상기와 동일하도록 &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; 이진 관계 &lt;code&gt;BinRel&lt;/code&gt; 및 &lt;code&gt;Family&lt;/code&gt; [I]는 인 &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; 아래 난 세트의 &lt;code&gt;BinRel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c70c55ba98a792957a1ed746bcd3599e74b06f8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt; where the indexed set is a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set&lt;/code&gt; such that two elements are considered equal if the results of applying &lt;code&gt;SetFun&lt;/code&gt; are the same value i. This i is the index that &lt;code&gt;Family&lt;/code&gt; maps onto the &lt;code&gt;&lt;a href=&quot;#equivalence_class&quot;&gt;equivalence class&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SetFun&lt;/code&gt; 적용 결과가 동일한 값 i 인 경우 두 요소가 동일한 것으로 간주 되도록 색인화 된 세트가 &lt;code&gt;Set&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 인 &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; 리턴 합니다. 이것은 &lt;code&gt;Family&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#equivalence_class&quot;&gt;equivalence class&lt;/a&gt;&lt;/code&gt; 매핑 하는 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="096dbc0b1b13e77e0a63893bf8a5be6bded79b1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that negative values are not uncommon.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 반환 합니다 . 음수 값은 드문 일이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1e039b7fedb94135b8bf441f4e52eb683044770e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that negative values are not uncommon.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 반환 합니다 . 음수 값은 드문 일이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="3abc4c253f818bc8fb391b1266a868182a911538" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integers corresponding to creation time. That is, the integer returned is always larger than previously returned integers on the current runtime system instance.</source>
          <target state="translated">생성 시간에 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt; strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 정수를 반환 합니다. 즉, 반환 된 정수는 항상 현재 런타임 시스템 인스턴스에서 이전에 반환 된 정수보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="9c959f6d83500aa2c72c79ef3eff1a14895716ac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; integers corresponding to creation time. That is, the integer returned is always larger than previously returned integers on the current runtime system instance.</source>
          <target state="translated">생성 시간에 해당하는 &lt;code&gt;&lt;a href=&quot;time_correction#Strictly_Monotonically_Increasing&quot;&gt;strictly monotonically increasing&lt;/a&gt;&lt;/code&gt; 정수를 반환 합니다. 즉, 리턴 된 정수는 항상 현재 런타임 시스템 인스턴스에서 이전에 리턴 된 정수보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="e37311aa48ece4240218443a319e55860bfe930e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;CpuTopology&lt;/code&gt; used by the emulator. For more information, see argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에뮬레이터에서 사용하는 &lt;code&gt;CpuTopology&lt;/code&gt; 를 반환 합니다. 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; cpu_topology&lt;/a&gt;&lt;/code&gt; 인수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="640ef747ead04008a85649e4332a8d5379261b2b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;CpuTopology&lt;/code&gt; used by the emulator. For more information, see argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">에뮬레이터에서 사용하는 &lt;code&gt;CpuTopology&lt;/code&gt; 를 반환 합니다. 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt; 인수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72f02ca8ebdf85d353fec758b111da577d03f183" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument, or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">유효하지 않은 시간 단위 인수로 호출되거나 스케줄러 스레드가 아닌 스레드에서 호출 된 경우 &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="a844d69586de15e9bd1cfc35b03711b171962f8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument.</source>
          <target state="translated">유효하지 않은 시간 단위 인수로 호출 된 경우 &lt;code&gt;ERL_DRV_TIME_ERROR&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="fbb08c81705b11d4c70e818d320627a5178b1fac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">유효하지 않은 시간 단위 인수로 호출되거나 스케줄러 스레드가 아닌 스레드에서 호출 된 경우 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d9785e5a0bee0c018d5494695cfb88ba9e8b07fb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument, or if called from a thread that is not a scheduler thread.</source>
          <target state="translated">유효하지 않은 시간 단위 인수로 호출되거나 스케줄러 스레드가 아닌 스레드에서 호출 된 경우 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="bc80a13223e5723498400925f90cdc9b85a31063" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; if called with an invalid time unit argument.</source>
          <target state="translated">유효하지 않은 시간 단위 인수로 호출 된 경우 &lt;code&gt;ERL_NIF_TIME_ERROR&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="8c25a7c06a297494f90b2e3a36638938a9b1aac4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Input&lt;/code&gt;, which is the total number of bytes received through ports, and &lt;code&gt;Output&lt;/code&gt;, which is the total number of bytes output to ports.</source>
          <target state="translated">포트를 통해 수신 된 총 바이트 수인 &lt;code&gt;Input&lt;/code&gt; 과 포트로 &lt;code&gt;Output&lt;/code&gt; 되는 총 바이트 수인 Output을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="2873dd80c13cadf65349a58c98c0a4c2b0396052" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; at the front of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">큐 &lt;code&gt;Q&lt;/code&gt; 앞에있는 &lt;code&gt;Item&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="879d7819f21618972cba5f60307c902040474ba8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; at the rear of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">큐 &lt;code&gt;Q&lt;/code&gt; 의 뒷면에있는 &lt;code&gt;Item&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1ce4cb1f794dd5a9fb9ff2644b8f5c049da553f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Item&lt;/code&gt; from the head of queue &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">큐 &lt;code&gt;Q&lt;/code&gt; 의 헤드에서 &lt;code&gt;Item&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="62f0d1ec017eb5e8861662c261b7cb3f628081a4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if no data has been associated with &lt;code&gt;key&lt;/code&gt; for the calling thread.</source>
          <target state="translated">호출 스레드의 &lt;code&gt;key&lt;/code&gt; 와 연관된 데이터가 없으면 &lt;code&gt;NULL&lt;/code&gt; 을 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="2164f7f628c69ad541af62d6b3c7f91b4d3bc8b3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if the allocation fails.</source>
          <target state="translated">할당이 실패하면 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="29cd629f79e40d47e7c05916a38fea6c999256f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; if the reallocation fails.</source>
          <target state="translated">재 할당이 실패하면 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="38a92f29b80d6a1c8083d1bf4b2155145c8733a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. A thread option structure is used for passing options to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;. If the structure is not modified before it is passed to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;, the default values are used.</source>
          <target state="translated">실패 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다 . 스레드 옵션 구조는 옵션을 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 에 전달하는 데 사용됩니다 . 구조가 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 에 전달되기 전에 수정되지 않으면 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="faa5cf38ebe53c6e47145b0687cb46881e39a0c2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. A thread option structure is used for passing options to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;. If the structure is not modified before it is passed to &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;, the default values are used.</source>
          <target state="translated">실패시 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다 . 스레드 옵션 구조는 옵션을 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 에 전달하는 데 사용됩니다 . 구조가 &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; 로 전달되기 전에 수정되지 않은 경우 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="49be17db74793f1d077ffb7705e384f45c7aefa2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the condition variable is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">실패시 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다 . 조건 변수를 작성하는 드라이버는 드라이버가 언로드되기 전에이를 삭제해야합니다.</target>
        </trans-unit>
        <trans-unit id="937b4794e9be59fe2f147650d05de628193f942d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the mutex is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">실패시 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다 . 뮤텍스를 생성하는 드라이버는 드라이버가 언로드되기 전에 뮤텍스를 파괴해야합니다.</target>
        </trans-unit>
        <trans-unit id="cec702d09808b85ca08cf2b39664374ef0969b8a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure. The driver creating the rwlock is responsible for destroying it before the driver is unloaded.</source>
          <target state="translated">실패시 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다 . rwlock을 작성하는 드라이버는 드라이버가 언로드되기 전에이를 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="0626500e7d2a0eb8476d43e16b322a5cb66fadf1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Ordset1&lt;/code&gt;, but with &lt;code&gt;Element&lt;/code&gt; removed.</source>
          <target state="translated">&lt;code&gt;Ordset1&lt;/code&gt; 을 반환 하지만 &lt;code&gt;Element&lt;/code&gt; 는 제거합니다.</target>
        </trans-unit>
        <trans-unit id="fa3daab704cdabcdeda6d9a5162be63ecb8bd104" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Set1&lt;/code&gt;, but with &lt;code&gt;Element&lt;/code&gt; removed.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 을 반환 하지만 &lt;code&gt;Element&lt;/code&gt; 는 제거합니다.</target>
        </trans-unit>
        <trans-unit id="3d5dfc72360c637f48245ce548d05dbb42228d3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; with the length adjusted in accordance with &lt;code&gt;Number&lt;/code&gt;. The left margin is fixed. If &lt;code&gt;length(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt;, then &lt;code&gt;String&lt;/code&gt; is padded with blanks or &lt;code&gt;Character&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 에 따라 길이가 조정 된 &lt;code&gt;String&lt;/code&gt; 을 리턴 합니다. 왼쪽 여백이 고정되어 있습니다. 경우 &lt;code&gt;length(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt; , 다음 &lt;code&gt;String&lt;/code&gt; 공백 또는으로 채워집니다 &lt;code&gt;Character&lt;/code&gt; 들.</target>
        </trans-unit>
        <trans-unit id="ce41b4e7c687c9b19e455cb02a2a0bb9de74a197" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; with the length adjusted in accordance with &lt;code&gt;Number&lt;/code&gt;. The right margin is fixed. If the length of &lt;code&gt;(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt;, then &lt;code&gt;String&lt;/code&gt; is padded with blanks or &lt;code&gt;Character&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 에 따라 길이가 조정 된 &lt;code&gt;String&lt;/code&gt; 을 리턴 합니다. 오른쪽 여백이 고정되어 있습니다. 의 길이 경우 &lt;code&gt;(String)&lt;/code&gt; &amp;lt; &lt;code&gt;Number&lt;/code&gt; , 다음 &lt;code&gt;String&lt;/code&gt; 공백 또는으로 채워집니다 &lt;code&gt;Character&lt;/code&gt; 들.</target>
        </trans-unit>
        <trans-unit id="620e625e81828403e2d1dfd5f08443ece016162d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;[{&quot;none&quot;,0,0}]&lt;/code&gt; if &lt;code&gt;disksup&lt;/code&gt; is not available.</source>
          <target state="translated">반환 &lt;code&gt;[{&quot;none&quot;,0,0}]&lt;/code&gt; 경우 &lt;code&gt;disksup&lt;/code&gt; 는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="058579087c441acaa8228e3c89ba9651ac86ca51" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;driver_term_nil&lt;/code&gt; if the monitor no longer exists.</source>
          <target state="translated">모니터가 더 이상 존재하지 않으면 &lt;code&gt;driver_term_nil&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="82f59754288354250ab785cbe85dc81e50088d0f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;error&lt;/code&gt; if any element in &lt;code&gt;Nodes&lt;/code&gt; is not an atom.</source>
          <target state="translated">&lt;code&gt;Nodes&lt;/code&gt; 요소 가 원자가 아닌 경우 &lt;code&gt;error&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="bb3dd123747a0645f03c4de32a039d3112fcda94" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;error&lt;/code&gt; if no value is associated with &lt;code&gt;Flag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Flag&lt;/code&gt; 와 연관된 값이 없으면 &lt;code&gt;error&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="411d4f907069d8528c128c3cd767fafa24214c79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;NameDb&lt;/code&gt; argument is incorrectly specified, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;false&lt;/code&gt; 경우 생성 &lt;code&gt;NameDb&lt;/code&gt; 의 인수가 잘못 지정되어, &lt;code&gt;true&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="072f5038e4f2d01946e213be2a0a78a2897b7cff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;NameDb&lt;/code&gt; argument is incorrectly specified, otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NameDb&lt;/code&gt; 인수가 잘못 지정 되면 &lt;code&gt;false&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="91325475ecaa519008968aec896df2ec9c644287" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if the module cannot be purged because of processes lingering in old code, otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이전 코드에서 프로세스가 지연되어 모듈을 제거 할 수 없으면 &lt;code&gt;false&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="72608d355bf83a757286a51cc71b304044cbb1cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;global&lt;/code&gt; if this function is traced on global function calls, &lt;code&gt;local&lt;/code&gt; if this function is traced on local function calls (that is, local and global function calls), and &lt;code&gt;false&lt;/code&gt; if local or global function calls are not traced.</source>
          <target state="translated">반환 &lt;code&gt;global&lt;/code&gt; 이 기능은, 글로벌 함수 호출에 추적 경우 &lt;code&gt;local&lt;/code&gt; 이 기능은 로컬 함수 (이다, 로컬 및 글로벌 함수 호출) 통화 및에 추적 경우 &lt;code&gt;false&lt;/code&gt; 로컬 또는 글로벌 함수 호출이 추적되지 않는 경우.</target>
        </trans-unit>
        <trans-unit id="acf727b4b7b2b7dd3210332a0748e1e36c077768" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ignored&lt;/code&gt; if the local node is not alive or &lt;code&gt;{error, noconnection}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is not connected.</source>
          <target state="translated">반환 &lt;code&gt;ignored&lt;/code&gt; 로컬 노드가 생존하고 있지 않는지 경우 &lt;code&gt;{error, noconnection}&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 연결되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5b9602029c3e98b31c57cffac5cb29414dde2b1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ignored&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">반환 &lt;code&gt;ignored&lt;/code&gt; 로컬 노드가 살아 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="8e0c04b98f10b3ebb5e70388fff74a3bfaad5175" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;max(10, Depth)&lt;/code&gt;, where &lt;code&gt;Depth&lt;/code&gt; is the value of &lt;code&gt;error_logger_format_depth&lt;/code&gt; in the Kernel application, if Depth is an integer. Otherwise, &lt;code&gt;unlimited&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;max(10, Depth)&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Depth&lt;/code&gt; 가 정수인 경우 Depth는 커널 애플리케이션에서 &lt;code&gt;error_logger_format_depth&lt;/code&gt; 의 값입니다 . 그렇지 않으면 &lt;code&gt;unlimited&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f3c109fb8b64ce60968e8b7ff58555a78a1fe433" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if all parent directories already exist or can be created. Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if some parent directory does not exist and cannot be created.</source>
          <target state="translated">모든 상위 디렉토리가 이미 존재하거나 작성할 수있는 경우 &lt;code&gt;ok&lt;/code&gt; 를 리턴 합니다. 일부 상위 디렉토리가 존재하지 않고 작성할 수없는 경우 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="11390fb7e74973ff6f501500d8fa6db8eb68f542" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if successful, or &lt;code&gt;{error,[{Module,Reason}]}&lt;/code&gt; if loading of some modules fails. See &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; for a description of other possible error reasons.</source>
          <target state="translated">성공하면 &lt;code&gt;ok&lt;/code&gt; 를 반환 하거나 일부 모듈을로드하지 못하면 &lt;code&gt;{error,[{Module,Reason}]}&lt;/code&gt; 을 반환합니다. 다른 가능한 오류 이유에 대한 설명은 &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; 대한 오류 이유를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d44ac713f339f2a0083e9a260a541b1134a94c59" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if successful, otherwise &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;ok&lt;/code&gt; 성공하면, 그렇지 않으면 &lt;code&gt;error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32f9766784b29a5e37e8836d30a718eb63ae2a0f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if the flag was set or &lt;code&gt;notsup&lt;/code&gt; if not supported by &lt;code&gt;erts_alloc&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;ok&lt;/code&gt; 플래그가 설정하거나 경우 &lt;code&gt;notsup&lt;/code&gt; 지원하지 않는 경우 &lt;code&gt;erts_alloc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75bf75fe290be11d905f570a0814178ea4d2d000" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if the process exits with the specified &lt;code&gt;Reason&lt;/code&gt; within &lt;code&gt;Timeout&lt;/code&gt; milliseconds.</source>
          <target state="translated">프로세스가 &lt;code&gt;Timeout&lt;/code&gt; 밀리 초) 내에 지정된 &lt;code&gt;Reason&lt;/code&gt; 종료되면 &lt;code&gt;ok&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="ca979326517147d39fd013870cef5db5ccbf23e6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt; if this yields the expected result &lt;code&gt;&quot;0&quot;&lt;/code&gt;, and &lt;code&gt;{error, Res}&lt;/code&gt; if it yields anything else.</source>
          <target state="translated">예상 결과 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 을 생성하면 &lt;code&gt;ok&lt;/code&gt; 를 리턴 하고, 다른 결과를 생성하면 &lt;code&gt;{error, Res}&lt;/code&gt; 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3535e0814ac51f436cbf82b934c4af801eaeecf0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;ok&lt;/code&gt;, cannot fail.</source>
          <target state="translated">&lt;code&gt;ok&lt;/code&gt; 반환 , 실패 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b8b9aca37d78a208de6e013c3c8fe1e83771709b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;pid&lt;/code&gt; if successful, or NULL if &lt;code&gt;caller_env&lt;/code&gt; is not a &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;process-bound environment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;pid&lt;/code&gt; 를 , &lt;code&gt;caller_env&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#ErlNifEnv&quot;&gt;process-bound environment&lt;/a&gt;&lt;/code&gt; 이 아닌 경우 NULL을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="feddc2e37a41b0f85110d336855b83c5f182a1da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;pid&lt;/code&gt; if successful, or NULL if &lt;code&gt;caller_env&lt;/code&gt; is not a &lt;code&gt;&lt;a href=&quot;#proc_bound_env&quot;&gt;process bound environment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;pid&lt;/code&gt; 를 , &lt;code&gt;caller_env&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#proc_bound_env&quot;&gt;process bound environment&lt;/a&gt;&lt;/code&gt; 이 아니면 NULL을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="a5cea673710d8231d230679e5c0b48a879bfc66f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; and can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 를 반환 하고 추적 할 때 &lt;code&gt;MatchBody&lt;/code&gt; 부분 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd28532807f9854712426122fdea67f6f39fa632" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; and does not fail, even if there is no link to &lt;code&gt;Id&lt;/code&gt;, or if &lt;code&gt;Id&lt;/code&gt; does not exist.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 과 아무런 연결이없는 경우에도 실패하지 않습니다 &lt;code&gt;Id&lt;/code&gt; 경우, 또는 &lt;code&gt;Id&lt;/code&gt; 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0199c015b23486318cc33f5d334f072a412af66e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are equal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 와 &lt;code&gt;B&lt;/code&gt; 는 달리, 동일 &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31a71a4065376b65c03d7a563452d06828f0ce55" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet1&lt;/code&gt; and &lt;code&gt;AnySet2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;#equal&quot;&gt;equal&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;. The following example shows that &lt;code&gt;==/2&lt;/code&gt; is used when comparing sets for equality:</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;AnySet1&lt;/code&gt; 및 &lt;code&gt;AnySet2&lt;/code&gt; 이 있는 &lt;code&gt;&lt;a href=&quot;#equal&quot;&gt;equal&lt;/a&gt;&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; . 다음 예는 세트가 동일한 지 비교할 때 &lt;code&gt;==/2&lt;/code&gt; 가 사용됨을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f7c13cafbf154a114cd8e18e86c2479a7766c5f4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an ordered set or an atomic set.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;AnySet&lt;/code&gt; 가 이다 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; 하고, &lt;code&gt;false&lt;/code&gt; 경우 &lt;code&gt;AnySet&lt;/code&gt; 가 정렬 된 세트 또는 원자 집합입니다.</target>
        </trans-unit>
        <trans-unit id="c531d7828c911eaf7597a08a2ea9fe2b6920a54c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AnySet&lt;/code&gt; is an empty unordered set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;AnySet&lt;/code&gt; 는 달리, 빈 정렬되지 않은 집합입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b20556edc02b693b640edef2c080bacd5d28ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Atom&lt;/code&gt; is an Erlang reserved word, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Atom&lt;/code&gt; 얼랑 그렇지 않으면, 예약어입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5d882337dcacf6050915c28214ff928dedff27a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Elem&lt;/code&gt; matches some element of &lt;code&gt;List&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Elem&lt;/code&gt; 이 &lt;code&gt;List&lt;/code&gt; 의 일부 요소와 일치 하면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="05a0bf83d3d51d8a51346e06bcffd56efb44f532" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Element&lt;/code&gt; is an element of &lt;code&gt;Ordset&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Element&lt;/code&gt; 의 요소 &lt;code&gt;Ordset&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f62d1bd963940a044129776b1de7a6cb03db807" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Element&lt;/code&gt; is an element of &lt;code&gt;Set&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Element&lt;/code&gt; 의 요소 &lt;code&gt;Set&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49eb2e1e78ba44e11808d477fd320925bde30b56" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Item&lt;/code&gt; matches some element in &lt;code&gt;Q&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; 이 &lt;code&gt;Q&lt;/code&gt; 의 일부 요소와 일치 하면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2490eee05bb1747593809039921dbb1ff5571381" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Key&lt;/code&gt; is present in &lt;code&gt;Tree&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 에 &lt;code&gt;Key&lt;/code&gt; 가 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="0269f592e0e264b92e27acb721301f85f3d5bd6c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List1&lt;/code&gt; is a prefix of &lt;code&gt;List2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;List1&lt;/code&gt; 의 접두어 &lt;code&gt;List2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44415b525cca5a6af1bc0f75d653cf3f997e5412" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List1&lt;/code&gt; is a suffix of &lt;code&gt;List2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;List1&lt;/code&gt; 의 접미사 &lt;code&gt;List2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="274e96a48c8dc11ecbc3618f58ebc91d53af29b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;List&lt;/code&gt; contains at least one entry associated with &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;List&lt;/code&gt; 과 관련된 적어도 하나 개의 항목이 포함되어 &lt;code&gt;Key&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbdd9ea590e66f4825bbb6f37e96461687bc0475" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module:Function/Arity&lt;/code&gt; is a BIF implemented in C, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Module:Function/Arity&lt;/code&gt; 달리 C에서 구현 BIF입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e4b500b276e6febede603467275762adf9c0c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; has old code, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 에 오래된 코드가 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e68f0cec59ffbda9b9db2dbb06457ab5986ed71b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; is the name of a module that has been loaded from a sticky directory (in other words: an attempt to reload the module will fail), or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;Module&lt;/code&gt; is not a loaded module or is not sticky.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Module&lt;/code&gt; (즉 : 실패합니다 모듈 다시 시도) 끈적 디렉토리에서로드 된 모듈의 이름, 또는 &lt;code&gt;false&lt;/code&gt; 경우 &lt;code&gt;Module&lt;/code&gt; 로드 된 모듈이 아니거나 끈적하지가.</target>
        </trans-unit>
        <trans-unit id="2e1c4acf2c3a75e93880e515b45e3ccdd37267e9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is a valid Erlang type test, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Name/Arity&lt;/code&gt; , 그렇지 않으면 유효한 얼랑 형식 시험이다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e79fde7628e396f632cf7a2496c37e0282b9fdf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is an Erlang BIF that is allowed in guards, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Name/Arity&lt;/code&gt; , 그렇지 않으면 가드에서 허용되는 얼랑 BIF입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c1557eadc19aef1c2524258565aaf72d3e7adf2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name/Arity&lt;/code&gt; is an Erlang BIF that is automatically recognized by the compiler, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Name/Arity&lt;/code&gt; 자동으로 컴파일러에 의해 인식되는 그렇지 않으면 얼랑 BIF입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18919ef150ff00727ad40b1c9e81770ff043ec71" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a (regular) file, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 이 (일반) 파일을 참조 하면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f1d8671c2f15e91b5bd72d3336d5d62b6ceb657a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a directory, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 이 디렉토리를 참조 하면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="fd8dc058a5de3c084b597a813b54e3549eb45d27" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a file or a directory, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 이 파일 또는 디렉토리를 참조 하면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="b18353d9107e0454a0798a1253e3fd2fccc6cdc7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;atom&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 타입이 &lt;code&gt;atom&lt;/code&gt; 및 나타내는 &lt;code&gt;Value&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a150bea19f721c84edfd13b51fb7dbf54b8d17f5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;char&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 형이 &lt;code&gt;char&lt;/code&gt; 하고 나타내는 &lt;code&gt;Value&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a966e6122cf427828c132b53659f80ec8c8fa1d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;integer&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 타입이 &lt;code&gt;integer&lt;/code&gt; 와 대표 &lt;code&gt;Value&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0aba6b4005ff8608dfcfced8eb3d218ccf1f9b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 유형이 &lt;code&gt;list&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b5b7201556ee3bd343008c5b1eda7663cc16973" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;string&lt;/code&gt; and represents &lt;code&gt;Value&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 타입이 &lt;code&gt;string&lt;/code&gt; 과 대표 &lt;code&gt;Value&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28fa4aca5df89a1f5d8b37190fb644320a2255d2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a leaf node, otherwise &lt;code&gt;false&lt;/code&gt;. The current leaf node types are &lt;code&gt;literal&lt;/code&gt; and &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 잎 노드 &lt;code&gt;false&lt;/code&gt; . 현재 리프 노드 유형은 &lt;code&gt;literal&lt;/code&gt; 및 &lt;code&gt;var&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8e859c070b6e0737943f32ccc3c904c13ffc4b3f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a leaf node, otherwise &lt;code&gt;false&lt;/code&gt;. The currently recognised leaf node types are:</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 잎 노드 &lt;code&gt;false&lt;/code&gt; . 현재 인식되는 리프 노드 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="62601fd5548cdaeb0b7711f3bd66399330201fec" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is a syntax tree representing a so-called &quot;source code form&quot;, otherwise &lt;code&gt;false&lt;/code&gt;. Forms are the Erlang source code units which, placed in sequence, constitute an Erlang program. Current form types are:</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 소위 &quot;소스 코드 형태&quot;를 나타내는 구문 트리, 그렇지 않으면입니다 &lt;code&gt;false&lt;/code&gt; . 폼은 순서대로 배치 된 Erlang 프로그램을 구성하는 Erlang 소스 코드 단위입니다. 현재 양식 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9136554109466d9670bdca91c5a70557ec16732c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract binary-template; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 추상적 인 바이너리 템플릿입니다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b67bbf772b61cd431ca9335f26a4222b4fdd1935" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract bit-string template; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 추상적 인 비트 문자열 템플릿입니다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="745cfb4e5183d77b87794ddfacbb48b6d303d6d6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract case-expression; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 추상적 인 경우-표현이다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3d1c96cc3178fd4c254d95c772961a0e025cf4c1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract catch-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 캐치 표현 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad5347c19f5d00079763c3320786632f3fe55fef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract clause, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 조항이다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d74618cc9eea39d0f6adc5ad8d3bbcd752a3befa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract empty list, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 빈 목록입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="872622f363c1703c2c26ac40c5b480833e6ba276" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract fun-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상 재미 표현 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7f05abe467013e35a924ff267f3b2bcf2ea049a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract function application, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 기능을 응용 프로그램입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b9f1fa3e20d65ae757673699b042de42f802ed0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract function name variable, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상 함수 이름 변수입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ed710fa2062e8721bf35d29fffbde4e284abd5c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract inter-module call expression; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 추상적 인 모듈 간 호출 표현이다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ad72e5820dad37940ae76b8262807863ea9006e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract let-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적하자 - 표현 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce40138dbc7c528911e59eac8e4269201b7e5c06" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract letrec-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 letrec 표현입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12b1f9365a3472dcb0011e1236931ca4d3ee1ff7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract list constructor, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 목록 생성자 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="820a7b1b0c18ca919107f4697542b3bbe0460999" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract map constructor, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인지도 생성자입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="500b92c61584077e60ac08647aba775708271145" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract module definition, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 모듈 정의입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8c305f8c7c3d9930b4d2c7fae8652eb6743e1ac" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract pattern alias, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상 패턴의 별칭입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6eb8f56f0716c23be6e98ed0ad2d837dea4eb92d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract primitive operation call, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상 기본 동작을 호출입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0395d9e854d9bd93129e8c84a7db9e568ae27cfb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract receive-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 수신 표현 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c601d452dd37156432a27262ea44d0ce346ecbe6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract sequencing expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 시퀀싱 표현 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="541647112e7063c353c6da46fedb2c61f97c5057" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract try-expression, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 시도-표현 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e434426ca0c61ca2cb37396072e66af344bf6c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract tuple, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 인 튜플 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bc029cf5c4d7bdcc8e0055af07253cf1026b3e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract value list; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 추상적 인 값 목록입니다; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="06a8998344a8ba3ff1e488c778a08e35b202b58d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; is an abstract variable, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 추상적 변수 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f783c200e3f9bd537977b57ea609e939b69030f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a &quot;printing&quot; character, otherwise &lt;code&gt;false&lt;/code&gt;. (Cf. &lt;code&gt;is_c_char/1&lt;/code&gt;.) A &quot;printing&quot; character has either a given graphical representation, or a &quot;named&quot; escape sequence such as &quot;&lt;code&gt;\n&lt;/code&gt;&quot;. Currently, only ISO 8859-1 (Latin-1) character values are recognized.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 가 &quot;인쇄&quot;문자를 나타낼 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . (참조 &lt;code&gt;is_c_char/1&lt;/code&gt; . ) &quot;인쇄&quot;문자는 주어진 그래픽 표현 또는 &quot; &lt;code&gt;\n&lt;/code&gt; &quot; 과 같은 &quot;명명 된&quot;이스케이프 시퀀스 를가 집니다 . 현재는 ISO 8859-1 (Latin-1) 문자 값만 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="8336f36620aa55e7dc06520e250c3b556ba7f470" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a character literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 가 문자 리터럴을 나타낼 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="3c7a50d6ab2246b4d325feea5dc3a77bbc911de4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a string literal containing only &quot;printing&quot; characters, otherwise &lt;code&gt;false&lt;/code&gt;. See &lt;code&gt;is_c_string/1&lt;/code&gt; and &lt;code&gt;is_print_char/1&lt;/code&gt; for details. Currently, only ISO 8859-1 (Latin-1) character values are recognized.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 가 &quot;인쇄&quot;문자 만 포함하는 문자열 리터럴을 나타낼 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 자세한 내용은 &lt;code&gt;is_c_string/1&lt;/code&gt; 및 &lt;code&gt;is_print_char/1&lt;/code&gt; 을 참조하십시오. 현재는 ISO 8859-1 (Latin-1) 문자 값만 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="05f7b07b33e15bebabf2f39915b065418cfb73f1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; may represent a string literal, otherwise &lt;code&gt;false&lt;/code&gt;. Strings are defined as lists of characters; see &lt;code&gt;is_c_char/1&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 가 문자열 리터럴을 나타낼 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 문자열은 문자 목록으로 정의됩니다. 자세한 내용은 &lt;code&gt;is_c_char/1&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ca221e6de37cd7ba0566135eed346da69f7a6228" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a data constructor, otherwise &lt;code&gt;false&lt;/code&gt;. Data constructors are cons cells, tuples, and atomic literals.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 데이터 생성자를 나타냅니다 &lt;code&gt;false&lt;/code&gt; . 데이터 생성자는 단점 셀, 튜플 및 원자 리터럴입니다.</target>
        </trans-unit>
        <trans-unit id="41b426e831f8aca582abd88b1cc7c7abfa0970be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a floating-point literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 부동 소수점 리터럴을 나타냅니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccef43656005918320a2c2bdb3afafde49f0b615" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a literal term, otherwise &lt;code&gt;false&lt;/code&gt;. This function returns &lt;code&gt;true&lt;/code&gt; if and only if the value of &lt;code&gt;concrete(Node)&lt;/code&gt; is defined.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 가 리터럴 용어를 나타내는 경우 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 . &lt;code&gt;concrete(Node)&lt;/code&gt; 의 값 이 정의 된 경우에만 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="16020ba0f84e6b2f3146706260e1679aa1989e35" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a proper list, and &lt;code&gt;false&lt;/code&gt; otherwise. A proper list is a list skeleton either on the form &quot;&lt;code&gt;[]&lt;/code&gt;&quot; or &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot;, or &quot;&lt;code&gt;[... | Tail]&lt;/code&gt;&quot; where recursively &lt;code&gt;Tail&lt;/code&gt; also represents a proper list.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 적절한 목록 및 대표 &lt;code&gt;false&lt;/code&gt; , 그렇지. 올바른 목록은 &quot; &lt;code&gt;[]&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;[E1, ..., En]&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;[... | Tail]&lt;/code&gt; &quot; 형식의 목록 골격입니다. 여기서 &lt;code&gt;Tail&lt;/code&gt; 은 재귀 적 으로 적절한 목록을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f5b3d7302d46f818ae5f5df287492ae45d11924f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a proper list, otherwise &lt;code&gt;false&lt;/code&gt;. A proper list is either the empty list &lt;code&gt;[]&lt;/code&gt;, or a cons cell &lt;code&gt;[Head | Tail]&lt;/code&gt;, where recursively &lt;code&gt;Tail&lt;/code&gt; is a proper list.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 달리, 적절한 목록을 나타냅니다 &lt;code&gt;false&lt;/code&gt; . 적절한 목록은 빈 목록 &lt;code&gt;[]&lt;/code&gt; 또는 단점 셀 &lt;code&gt;[Head | Tail]&lt;/code&gt; , 여기서 재귀 적으로 &lt;code&gt;Tail&lt;/code&gt; 은 적절한 목록입니다.</target>
        </trans-unit>
        <trans-unit id="1b17c37ffcb249557c30e11862bed4607710e03e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents an atom literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 원자의 문자를 나타내고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="770074cee482eb759d996766ba1730aaeb0ddd60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents an integer literal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Node&lt;/code&gt; 정수 리터럴을 나타내는 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="813ec7bf5e1ea4c4cbf9689c754ef9fb026de9a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a Boolean operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;OpName/Arity&lt;/code&gt; , 그렇지 않으면 부울 연산자 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4eb0386e76cf65a063e3e8d285268c0165b61346" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a comparison operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;OpName/Arity&lt;/code&gt; , 그렇지 않으면 비교 연산자입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="991c1799518adaccb921961e365ca3fa22ac0cb6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a list operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;OpName/Arity&lt;/code&gt; , 그렇지 않으면 목록 연산자 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63c0c3e2061e7bb43b47c847bd990a26fe034148" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is a send operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;OpName/Arity&lt;/code&gt; , 그렇지 않으면 전송 연산자 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dbc3ea01490ef0d1dbec42e97269e840eed8e64" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;OpName/Arity&lt;/code&gt; is an arithmetic operator, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;OpName/Arity&lt;/code&gt; , 그렇지 않으면 산술 연산자 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4b12468404538c448a64e6fe397923d74719fba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Orddict&lt;/code&gt; has no elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Orddict&lt;/code&gt; 가 그렇지 않으면 요소가없는 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1dc4dfaf731f66f94133c8678a1fa5ab9233d86" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt; are disjoint (have no elements in common), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Ordset1&lt;/code&gt; 및 &lt;code&gt;Ordset2&lt;/code&gt; 는 달리, (공통의 요소가 존재하지 않는) 해체 있습니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea7e1cb6c0e0668014d3a7aec4c690ebb182212" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset&lt;/code&gt; is an empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Ordset&lt;/code&gt; 는 달리, 공집합 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edfdfbcd8d4ad83a7c9adb281b2a5e52d8bfa2cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Ordset&lt;/code&gt; is an ordered set of elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Ordset&lt;/code&gt; 가 , 그렇지 않으면 요소의 정렬 된 집합입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f6c07fa182c2c36ca7ff087b3a9656c11b0d07f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for all elements &lt;code&gt;Elem&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Pred(Elem)&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; 모든 요소에 대한 &lt;code&gt;Elem&lt;/code&gt; 모델 의 &lt;code&gt;List&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2591bc8ff6e6910ee0e7902593fcc8825fb308d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for at least one element &lt;code&gt;Elem&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Pred(Elem)&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; 적어도 하나의 요소에 대한 &lt;code&gt;Elem&lt;/code&gt; 모델 의 &lt;code&gt;List&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76cbb5d0751cdfd9389e6cc4fe05c163ad0c960c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;#disjoint&quot;&gt;disjoint&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 과 &lt;code&gt;Set2&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#disjoint&quot;&gt;disjoint&lt;/a&gt;&lt;/code&gt; 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e25745d5f902181635eea33218893a7e8f99b775" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt; are disjoint (have no elements in common), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 과 &lt;code&gt;Set2&lt;/code&gt; 가 분리되어 있으면 (공통 요소가없는 경우) &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="80ddd66b34cce3545670a29d307e9b78c7ba414d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set1&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#subset&quot;&gt;subset&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Set1&lt;/code&gt; A는 &lt;code&gt;&lt;a href=&quot;#subset&quot;&gt;subset&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;Set2&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4161ad452749f1ed2764feed8799baa093f1bc14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set&lt;/code&gt; is a set of elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Set&lt;/code&gt; 다른 요소의 집합입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="458d23732d1b448b62fb2a72d14403bff3b55ef1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Set&lt;/code&gt; is an empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Set&lt;/code&gt; 그렇지 않으면 공집합 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73caeabfdd35df13f66b8f8433322360f8264781" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;String&lt;/code&gt; is the empty string, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;String&lt;/code&gt; 그렇지 않으면 빈 문자열 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="870fe484de2df9369f88a74af9ebdfa238a09693" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; appears to be a set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 이 세트로 표시 되면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d4a83079b2f1cf8c67a06458f645871b1e0c9e30" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; can be represented as a literal, otherwise &lt;code&gt;false&lt;/code&gt;. This function takes time proportional to the size of &lt;code&gt;Term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 이 리터럴로 표현 될 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 이 함수는 &lt;code&gt;Term&lt;/code&gt; 의 크기에 비례하여 시간이 걸립니다 .</target>
        </trans-unit>
        <trans-unit id="7ccab54c56fc03113058080ceda7d7b1774fc75b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a binary, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; , 그렇지 않으면 이진 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6f12e79c993d65cc7248ecb7d272941d8d3db76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a bitstring (including a binary), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; , 그렇지 않으면 (바이너리 포함) 비트 열이다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71f8a14b5e660fba6fcf5efb5272c3c8436c064b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of characters in the ISO Latin-1 range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 는 ISO 라틴 -1 범위의 문자 단순 목록, 그렇지 않으면입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ca026227756f8b3e8dd2de89221b5bc870e4b13" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of characters in the Unicode range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 유니 코드 범위의 문자 단순 목록, 그렇지 않으면입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="166e179f28326a54ab986cbdb166b8750c097a48" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable ISO Latin-1 characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; , 그렇지 않으면 인쇄 가능한 ISO 라틴어 1 문자의 단순 목록입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1b72babeabff7431f18a383168fce158f453a7e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable Unicode characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; , 그렇지 않으면 인쇄 가능한 유니 코드 문자의 단순 목록입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4dbed6478594002efdbb17422ee583cc58c8c15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a flat list of printable characters, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; , 그렇지 않으면 인쇄 가능한 문자의 단순 목록입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d0efef9a81207545305c2743dfd78ea3cde1691" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a floating point number, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 않은 부동 소수점 수입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="460d08d90b734bb113aa491d231ca853ec4e6cd8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a fun that can be applied with &lt;code&gt;Arity&lt;/code&gt; number of arguments, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 적용 할 수있는 재미 &lt;code&gt;Arity&lt;/code&gt; 다른 인자의 수 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bc8d2c9ee603ea50a3fb459cc3153a7b4c1b105" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a fun, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 않으면 재미 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="624b732c7887f25f1908e5d7cb04e5e46e05f024" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a list with zero or more elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; , 그렇지 않으면 0 개 이상의 요소 목록입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6a18c7f4f99e813224877b5510bbf2512ff6467" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a map, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 않은지도입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58a56bacb65ece5dd3d2a353ff5392010207364f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a port identifier, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 않은 포트 식별자 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d840f0f19e5e7781ef91711e0bc1137ba6d969e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a process identifier, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 않으면, 프로세스 식별자입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61821daf2eeba88c1903b78ec550afb6af88f97e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a reference, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 참조입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e45d92ebd6509795348bf496ed516c5d2b67e321" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple and its first element is &lt;code&gt;RecordTag&lt;/code&gt;. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 이 터플이고 첫 번째 요소가 &lt;code&gt;RecordTag&lt;/code&gt; 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7982bf019f3d888e6e415a9ca2298c9d12fe49ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple, its first element is &lt;code&gt;RecordTag&lt;/code&gt;, and its size is &lt;code&gt;Size&lt;/code&gt;. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; 이 터플이고 첫 번째 요소가 &lt;code&gt;RecordTag&lt;/code&gt; 이고 크기가 &lt;code&gt;Size&lt;/code&gt; 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f80bece3fdbdf4d9b690fc3b52f108c7e7249507" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a tuple, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 튜플이다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="378645cb37a4403cbb8f41f06ac1aa7dd5710436" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a, possibly deep, list of characters in the ISO Latin-1 range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 있는, 아마도 깊은의 ISO 라틴어 1 범위의 문자 목록, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3b0204ab86829cd8cef0d00c942dc56ac2979fe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is a, possibly deep, list of characters in the Unicode range, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 있는, 아마도 깊은, 유니 코드 범위의 문자 목록, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f40d776a0ad126eb763fa99db8f2b5ee0722ddb4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt;, an ordered set, or an atomic set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 이다 &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; 그렇지 않으면, 정렬 된 세트 또는 원자 세트, &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2db77f4bd2a314e48786d9b9ae6a664c784b2c5b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an atom, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; , 그렇지 않으면 원자 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="330102aa4e44e69d3fb91410fe11ffc636f4b0ce" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an integer or a floating point number. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 정수 또는 부동 소수점 숫자입니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="33ebcad4307cd245114a5a0cb4612f83a929a00e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is an integer, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 그렇지 정수 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6299d291293abd2a3887c9bc8071223e7ac78b69" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Term&lt;/code&gt; is the atom &lt;code&gt;true&lt;/code&gt; or the atom &lt;code&gt;false&lt;/code&gt; (that is, a boolean). Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;Term&lt;/code&gt; 원자 인 &lt;code&gt;true&lt;/code&gt; 또는 원자 &lt;code&gt;false&lt;/code&gt; 입니다 (부울)가. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9ff32e0745b2e55908fc88e8b35ae7730f647ea1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Tree&lt;/code&gt; is an empty tree, othwewise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 가 빈 나무 &lt;code&gt;true&lt;/code&gt; 반환하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="582706139b22f3830293ba9d5e787d1b05d9f421" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Tree&lt;/code&gt; represents an expression which never terminates normally. Note that the reverse does not apply. Currently, the detected cases are calls to &lt;code&gt;exit/1&lt;/code&gt;, &lt;code&gt;throw/1&lt;/code&gt;, &lt;code&gt;erlang:error/1&lt;/code&gt; and &lt;code&gt;erlang:error/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; 가 정상적으로 종료되지 않는 표현식을 나타내는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 반대의 경우는 적용되지 않습니다. 현재 감지 된 사례는 &lt;code&gt;exit/1&lt;/code&gt; , &lt;code&gt;throw/1&lt;/code&gt; , &lt;code&gt;erlang:error/1&lt;/code&gt; 및 &lt;code&gt;erlang:error/2&lt;/code&gt; 에 대한 호출 입니다.</target>
        </trans-unit>
        <trans-unit id="1d53d1595203465ec915723aeaeca5596c48e76d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;X&lt;/code&gt; is an array, otherwise &lt;code&gt;false&lt;/code&gt;. Notice that the check is only shallow, as there is no guarantee that &lt;code&gt;X&lt;/code&gt; is a well-formed array representation even if this function returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;X&lt;/code&gt; 는 달리, 배열입니다 &lt;code&gt;false&lt;/code&gt; . 이 함수가 &lt;code&gt;true&lt;/code&gt; 를 반환하더라도 &lt;code&gt;X&lt;/code&gt; 가 올바른 형식의 배열 표현이라는 보장이 없으므로 검사는 얕습니다 .</target>
        </trans-unit>
        <trans-unit id="135258a9ebda7bc66b6cd9275a1a2690e4d5b590" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;pid&lt;/code&gt; has been set as undefined by &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt;enif_set_pid_undefined &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#enif_set_pid_undefined&quot;&gt;enif_set_pid_undefined &lt;/a&gt;&lt;/code&gt; 에 의해 정의되지 않은 것으로 설정된 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="d2ba1932cb24599dc5fa6e202010f78edff673b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;pid&lt;/code&gt; is alive.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; 가 살아있는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="fb3ba34f9680887d2fb9885a93f7d3c98c573dda" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;port_id&lt;/code&gt; is alive.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;port_id&lt;/code&gt; 살아있다.</target>
        </trans-unit>
        <trans-unit id="61d3ace632d05ed73ad4a42d28fbbd2d2ed84d93" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a binary.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 바이너리입니다.</target>
        </trans-unit>
        <trans-unit id="fb6f0ca756af464bfed60d9ea0e73f6ba439b2fb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a fun.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 가 재미있는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="110bd689603bccb5575388b7f2f7e7b72dbeaffe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a list.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 가 목록 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="b4b9ce64cf4b500f5ae3421fd8163a33865e3b09" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a map, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 그렇지지도입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27afbc551805caeef26432621deb6bf12a23a8eb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a number.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="7d22d2e04aeeb0900ff3cbee0d374a923dd0e9c3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a pid.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; PID를합니다.</target>
        </trans-unit>
        <trans-unit id="35fa782898e9bfb2eae51e772132161d50f5593b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a port.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 포트 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="5f3f570a390f6517b5496369c3cd66e8538f2abf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a reference.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 가 참조 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="89e1065811333de07f051b50cff74f2cff229c56" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is a tuple.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 이 터플 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="43debbc7898967bba2316715006356cf5b97319f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an atom.</source>
          <target state="translated">&lt;code&gt;term&lt;/code&gt; 원자 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="447706c6e0c233491c6e5b8f408ebf59983b993d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is an empty list.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;term&lt;/code&gt; 빈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6fd2b75b0a5f1908a29c72bd8be73c57944fe81c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if Term is a collection of annotations, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Term이 주석 모음 인 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지 않으면 false를 반환 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12ddcca1673020e55a2187f0d826f4f1b5fd2490" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a pending exception is associated with the environment &lt;code&gt;env&lt;/code&gt;. If &lt;code&gt;reason&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, ignore it. Otherwise, if a pending exception associated with &lt;code&gt;env&lt;/code&gt; exists, set &lt;code&gt;*reason&lt;/code&gt; to the value of the exception term. For example, if &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; is called to set a pending &lt;code&gt;badarg&lt;/code&gt; exception, a later call to &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; sets &lt;code&gt;*reason&lt;/code&gt; to the atom &lt;code&gt;badarg&lt;/code&gt;, then return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">보류중인 예외가 환경 &lt;code&gt;env&lt;/code&gt; 와 연결되어 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 경우 &lt;code&gt;reason&lt;/code&gt; A는 &lt;code&gt;NULL&lt;/code&gt; 포인터가, 그것을 무시합니다. 그렇지 않은 경우와 관련된 보류 예외 경우 &lt;code&gt;env&lt;/code&gt; , 세트 존재 &lt;code&gt;*reason&lt;/code&gt; 제외한 기간의 값. 예를 들어, &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; 보류 설정이라고 &lt;code&gt;badarg&lt;/code&gt; 예외로 나중에 호출 &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; 세트 &lt;code&gt;*reason&lt;/code&gt; 원자에 &lt;code&gt;badarg&lt;/code&gt; 다음 Return &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f524f7a3284bec6bbe8ac59c2cbfa42df9bbafd8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a pending exception is associated with the environment &lt;code&gt;env&lt;/code&gt;. If &lt;code&gt;reason&lt;/code&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, ignore it. Otherwise, if a pending exception associated with &lt;code&gt;env&lt;/code&gt; exists, set &lt;code&gt;*reason&lt;/code&gt; to the value of the exception term. For example, if &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; is called to set a pending &lt;code&gt;badarg&lt;/code&gt; exception, a later call to &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; sets &lt;code&gt;*reason&lt;/code&gt; to the atom &lt;code&gt;badarg&lt;/code&gt;, then return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">보류중인 예외가 환경 &lt;code&gt;env&lt;/code&gt; 와 연관된 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 경우 &lt;code&gt;reason&lt;/code&gt; A는 &lt;code&gt;NULL&lt;/code&gt; 포인터가, 그것을 무시합니다. 그렇지 않으면, &lt;code&gt;env&lt;/code&gt; 와 연관된 보류중인 예외 가 존재하면 &lt;code&gt;*reason&lt;/code&gt; 을 예외 용어의 값으로 설정하십시오. 예를 들어, 보류중인 &lt;code&gt;badarg&lt;/code&gt; 예외 를 설정하기 위해 &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; 가 호출 되면 나중에 &lt;code&gt;enif_has_pending_exception(env, &amp;amp;reason)&lt;/code&gt; 대한 호출 은 &lt;code&gt;*reason&lt;/code&gt; 을 atom &lt;code&gt;badarg&lt;/code&gt; 로 설정 한 다음 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="4adb2af57a423f657c16c1e5e3386789a64ac4b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a sequential trace token is set for the current process, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">현재 프로세스에 순차적 추적 토큰이 설정되어 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="003c73ad83bc1b53c3e9127937f465b37c0db152" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if all its arguments (variable length argument list) evaluate to &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;. Evaluation order is undefined.</source>
          <target state="translated">모든 인수 (가변 길이 인수 목록)가 &lt;code&gt;true&lt;/code&gt; 로 평가되면 true를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 &lt;code&gt;true&lt;/code&gt; . 평가 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fe9ad98791dd8b57717f96b54841e51cd1e52b0d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an abstract clause is a catch-all, otherwise &lt;code&gt;false&lt;/code&gt;. A clause is a catch-all if all its patterns are variables, and its guard expression always evaluates to &lt;code&gt;true&lt;/code&gt;; cf. &lt;code&gt;eval_guard/1&lt;/code&gt;.</source>
          <target state="translated">추상 절이 포괄 &lt;code&gt;true&lt;/code&gt; 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 모든 패턴이 변수이고 가드 표현식이 항상 &lt;code&gt;true&lt;/code&gt; 로 평가되는 경우 절은 포괄 입니다 . cf. &lt;code&gt;eval_guard/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91f2376f93431f54ea182d78fdcf0fd4438c5264" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an object with key &lt;code&gt;Key&lt;/code&gt; is found, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">키가 &lt;code&gt;Key&lt;/code&gt; 인 객체를 찾으면 &lt;code&gt;false&lt;/code&gt; , 그렇지 않으면 false를 리턴 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54396b5eb9e13a102688e0da4fdc674f93d3c4f4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;#acyclic_digraph&quot;&gt;acyclic&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#acyclic_digraph&quot;&gt;acyclic&lt;/a&gt;&lt;/code&gt; 경우에만 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="200e8de3366e49ac47656786fccf2565ee80aced" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#tree&quot;&gt;tree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 여부와 소리를 나타내는 두 글자 만 &lt;code&gt;Digraph&lt;/code&gt; A는 &lt;code&gt;&lt;a href=&quot;#tree&quot;&gt;tree&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="327156105915035f1032d70d9ab3440b473d4c96" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if and only if digraph &lt;code&gt;Digraph&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;#arborescence&quot;&gt;arborescence&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;#arborescence&quot;&gt;arborescence&lt;/a&gt;&lt;/code&gt; 인 경우 만 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="840b52726cf59a5cc0dabded8950ff985905b19b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if annotations Anno is marked as generated. The default is to return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">주석 Anno가 생성 된 것으로 표시되면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 기본값은 &lt;code&gt;false&lt;/code&gt; 를 반환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c6bc092bbc73143b7b3017ab2ec9146c3d1e6217" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any of its arguments evaluates to &lt;code&gt;true&lt;/code&gt;. Variable length argument list. Evaluation order is undefined.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 인자 평가하여 어떤 경우에 &lt;code&gt;true&lt;/code&gt; . 가변 길이 인수 목록. 평가 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="236983b7cd3e3574ce3c71d4ca89c338a1439e8b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any of the abstract clauses in the list is a catch-all, otherwise &lt;code&gt;false&lt;/code&gt;. See &lt;code&gt;is_catchall/1&lt;/code&gt; for details.</source>
          <target state="translated">목록의 추상 절이 포괄 &lt;code&gt;true&lt;/code&gt; 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 자세한 내용은 &lt;code&gt;is_catchall/1&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a2053b7f5bdd086b8047b1e87efe86460350e0af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if any trace property was changed for the trace target process, otherwise &lt;code&gt;false&lt;/code&gt;. Can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">추적 대상 프로세스에 대해 추적 특성이 변경된 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지 않으면 false를 리턴 &lt;code&gt;true&lt;/code&gt; . 추적시 &lt;code&gt;MatchBody&lt;/code&gt; 부분 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43efa171035ceda499204f341baf5bc459c87fb7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if dictionary &lt;code&gt;Dict&lt;/code&gt; has no elements, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">dictionary &lt;code&gt;Dict&lt;/code&gt; 에 요소가 없으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c98b79c7fa00cfd78967f676d2573904eb541446" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if disconnection succeeds, otherwise &lt;code&gt;false&lt;/code&gt;. If the local node is not alive, &lt;code&gt;ignored&lt;/code&gt; is returned.</source>
          <target state="translated">연결이 끊어지면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 로컬 노드가 활성화되어 있지 않으면 &lt;code&gt;ignored&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="bb71e5c8ceda563e5d0d9e12dfae53c738eca5f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if file &lt;code&gt;Filename&lt;/code&gt; is a Dets table, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">파일 &lt;code&gt;Filename&lt;/code&gt; 이 Dets 테이블 &lt;code&gt;true&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="68e38950453e65d4f2e1f3e4268733a7a8322552" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if it would be possible to initialize table &lt;code&gt;Name&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; with option &lt;code&gt;{format,&amp;nbsp;bchunk}&lt;/code&gt;, with objects read with &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; from some table &lt;code&gt;T&lt;/code&gt;, such that calling &lt;code&gt;info(T,&amp;nbsp;bchunk_format)&lt;/code&gt; returns &lt;code&gt;BchunkFormat&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;info(T,&amp;nbsp;bchunk_format)&lt;/code&gt; 호출이 BchunkFormat을 리턴 &lt;code&gt;BchunkFormat&lt;/code&gt; 일부 테이블 &lt;code&gt;T&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;#bchunk-2&quot;&gt;bchunk/2&lt;/a&gt;&lt;/code&gt; 로 읽은 오브젝트와 함께 &lt;code&gt;{format,&amp;nbsp;bchunk}&lt;/code&gt; 옵션과 함께 &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; 을 사용하여 &lt;code&gt;Name&lt;/code&gt; 테이블을 초기화 할 수있는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="1bdb1cad515a009f56874d9217ed8b2129743b76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map &lt;code&gt;Map&lt;/code&gt; contains &lt;code&gt;Key&lt;/code&gt; and returns &lt;code&gt;false&lt;/code&gt; if it does not contain the &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지도하면 &lt;code&gt;Map&lt;/code&gt; 포함 &lt;code&gt;Key&lt;/code&gt; 반환 &lt;code&gt;false&lt;/code&gt; 가 포함되지 않은 경우 &lt;code&gt;Key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="837da330dacaa1b15470c144dcc8185069d210aa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map iterator &lt;code&gt;iter&lt;/code&gt; is positioned after the last entry.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 지도 반복자 경우 &lt;code&gt;iter&lt;/code&gt; 마지막 항목 뒤에 위치한다.</target>
        </trans-unit>
        <trans-unit id="f79af967987941ecfed42a3dcde1052b946b59e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if map iterator &lt;code&gt;iter&lt;/code&gt; is positioned before the first entry.</source>
          <target state="translated">맵 반복자 &lt;code&gt;iter&lt;/code&gt; 가 첫 번째 항목 앞에 위치 하면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="16d59e1a9a86923e1a80bc517d8d705043437d4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful and any process is needed to be killed, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">성공하고 프로세스를 종료해야하는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="cdebcfc3efe21b160fa6918abbd7bf23dce050ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, or &lt;code&gt;false&lt;/code&gt; if there is old code for &lt;code&gt;Module&lt;/code&gt; that must be purged first, or if &lt;code&gt;Module&lt;/code&gt; is not a (loaded) module.</source>
          <target state="translated">성공한 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , 먼저 제거해야하는 &lt;code&gt;Module&lt;/code&gt; 에 대한 이전 코드가 있거나 &lt;code&gt;Module&lt;/code&gt; 이 (로드 된) 모듈이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="0572bc092a167640466d31c3359149f46443af08" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if successful, or &lt;code&gt;{error, bad_directory}&lt;/code&gt; if &lt;code&gt;Dir&lt;/code&gt; is not the name of a directory.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 리턴 하고 &lt;code&gt;Dir&lt;/code&gt; 이 디렉토리 이름이 아닌 경우 &lt;code&gt;{error, bad_directory}&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="1b5c160eb9149616deeb9049d2afc3f6388183ab" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if term &lt;code&gt;Term&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">용어 &lt;code&gt;Term&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d8de59c038d12f2d3e08f19ee569920dd53c9901" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the binary relation &lt;code&gt;BinRel&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; or the untyped empty set, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 이진 관계에있는 경우 &lt;code&gt;BinRel&lt;/code&gt; 가 A는 &lt;code&gt;&lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt;&lt;/code&gt; 달리하거나 형식화되지 않은 빈 세트, &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6342bf32678cb2c64cd38d8e07dd6a2b2dfe8b7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the command is successfully sent. Returns &lt;code&gt;false&lt;/code&gt; if the command fails, for example:</source>
          <target state="translated">명령이 성공적으로 전송되면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 명령이 실패하면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="220c2e851c0b3fd14620b8e1dcda51e08e19d82b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the currently executing process is currently alive, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">현재 실행중인 프로세스가 현재 활성 상태 &lt;code&gt;true&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2f34a1052c6f7f165ca8d43accd0a5f4d7fd88f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the emulator has been debug-compiled, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">에뮬레이터가 디버그 컴파일 된 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="5a7ffac42baa2d1c8cd24f128386c2d20707b636" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the emulator uses some kind of kernel-poll implementation, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 에뮬레이터가 커널 설문 조사 구현의 어떤 종류를 사용하는 경우, 그렇지 않은 경우 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2640d134008b1db2fa00ae38ca1ebbb6ce7040a6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the iterator is now positioned at a valid key-value entry, or &lt;code&gt;false&lt;/code&gt; if the iterator is positioned at the head (before the first entry).</source>
          <target state="translated">반복자가 유효한 키-값 항목에 있으면 &lt;code&gt;false&lt;/code&gt; 를, 반복자가 헤드 (첫 번째 항목 앞에)에 있으면 false를 리턴 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9b837b1c56e4945383c5d2f3a9dc241703e2df8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the iterator is now positioned at a valid key-value entry, or &lt;code&gt;false&lt;/code&gt; if the iterator is positioned at the tail (beyond the last entry).</source>
          <target state="translated">반복자가 유효한 키-값 항목에 있으면 &lt;code&gt;false&lt;/code&gt; 를, 마지막 항목을 넘어서 꼬리에 위치하면 false를 리턴 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a21b32bdb2fbfa17b4e830e4f95747fe424f9a29" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the local node is alive (that is, if the node can be part of a distributed system), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 로컬 노드가 살아있는 경우는 true, 그렇지 않은 경우 (노드가 분산 시스템의 일부가 될 수있는 경우입니다) &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5131fcd6ba86896d200f95b33fbef1c0adb94f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the message is successfully sent. Returns &lt;code&gt;false&lt;/code&gt; if the send operation fails, that is:</source>
          <target state="translated">메시지가 성공적으로 전송되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 전송 작업이 실패하면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="c8afd8d30e955139fc8e323555c9f5c022ea9a15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is loaded and contains an exported function &lt;code&gt;Function/Arity&lt;/code&gt;, or if there is a BIF (a built-in function implemented in C) with the specified name, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 모듈 경우 &lt;code&gt;Module&lt;/code&gt; 로드 및 포함 된 내 보낸 된 함수의 &lt;code&gt;Function/Arity&lt;/code&gt; , 또는 BIF (A 내장 C로 구현 기능) 지정된 이름으로, 그렇지 않으면 반환이있는 경우 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16e198b58e0edccd813bfb44b5c3a1312ac4aee0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is loaded, otherwise &lt;code&gt;false&lt;/code&gt;. It does not attempt to load the module.</source>
          <target state="translated">모듈 &lt;code&gt;Module&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; 되면 true를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 모듈로드를 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7bc8d39440fe46705c1d257350ef7754ed81483" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the objects returned by &lt;code&gt;TraverseFun&lt;/code&gt; are sorted on the key.</source>
          <target state="translated">&lt;code&gt;TraverseFun&lt;/code&gt; 에 의해 리턴 된 오브젝트 가 키에서 정렬 된 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="2bcb89d9b82db482ff72119bdbde47d919f64682" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the objects returned by &lt;code&gt;TraverseFun&lt;/code&gt; are unique.</source>
          <target state="translated">&lt;code&gt;TraverseFun&lt;/code&gt; 이 반환 한 객체 가 고유 한 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f4d83743ed429a6343e5e632fb6b972613cbee8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the process exists and is alive, that is, is not exiting and has not exited. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">프로세스가 존재하고 활성 상태, 즉 종료되지 않고 종료되지 않은 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ebd06398cc287278fc23a50bdaae51ea37c25415" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the runtime system is a node and can connect to other nodes, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">런타임 시스템이 노드이고 다른 노드에 연결할 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="f71bf76db34debfde26e70f0e54ea224761149ba" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the two terms are identical. Corresponds to the Erlang operators &lt;code&gt;=:=&lt;/code&gt; and &lt;code&gt;=/=&lt;/code&gt;.</source>
          <target state="translated">두 항이 동일한 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . Erlang 연산자 &lt;code&gt;=:=&lt;/code&gt; 및 &lt;code&gt;=/=&lt;/code&gt; 에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="9ff27fafa393707e02c06057f9c2017959462baf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is a tuple in &lt;code&gt;TupleList&lt;/code&gt; whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TupleList&lt;/code&gt; 에 &lt;code&gt;N&lt;/code&gt; 번째 요소가 &lt;code&gt;Key&lt;/code&gt; 와 동일한 튜플이 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="85701f95978427663468d859796b17568ab01b21" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;bin_term&lt;/code&gt; is not a binary.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;bin_term&lt;/code&gt; 이 이진이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="1a49e2c312bfd297ed7ee94aa673637f429d9003" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;iolist&lt;/code&gt; is not an iolist.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;iolist&lt;/code&gt; 가 iolist 가 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="5c212fa02d51be234a67b9d0c062850d25485d96" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;iovec_term&lt;/code&gt; not an iovec.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;iovec_term&lt;/code&gt; 이 iovec가 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="425fbe1cd4660079beb601b7a7d141785b8bb5b0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;map&lt;/code&gt; is not a map or if &lt;code&gt;map&lt;/code&gt; does not contain &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 성공, 또는 &lt;code&gt;false&lt;/code&gt; 경우 &lt;code&gt;map&lt;/code&gt; 경우지도가 아니거나 &lt;code&gt;map&lt;/code&gt; 포함되지 않은 &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1704a3eb02df06c9442f7329c92305fc551db19a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;map_in&lt;/code&gt; is not a map.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;map_in&lt;/code&gt; 이 맵이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="8df341505523d0787a98812bdc19d731d9d6cf77" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;skip&lt;/code&gt; is greater than the size of &lt;code&gt;bin&lt;/code&gt;. Any ownership of the binary data is transferred to the queue and &lt;code&gt;bin&lt;/code&gt; is to be considered read-only for the rest of the NIF call and then as released.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;skip&lt;/code&gt; 이 &lt;code&gt;bin&lt;/code&gt; 크기보다 큰 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 바이너리 데이터의 소유권은 큐에 전송되고 &lt;code&gt;bin&lt;/code&gt; 공개로 다음 NIF 통화에서 읽기 전용으로 간주되어야한다.</target>
        </trans-unit>
        <trans-unit id="251cb50d4a2c89949192daeab958e9efdf0c377e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;skip&lt;/code&gt; is greater than the size of &lt;code&gt;iovec&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;skip&lt;/code&gt; 이 &lt;code&gt;iovec&lt;/code&gt; 크기보다 큰 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="80b561dcb4ef365f079754a33329bf329b878aa8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a float.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;term&lt;/code&gt; float이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="15b5e63a09c5aaa78ac7910c8d72c4ca1bdc992e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a handle to a resource object of type &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;term&lt;/code&gt; 이 type &lt;code&gt;type&lt;/code&gt; 의 리소스 객체에 대한 핸들이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="db55b33e73993b506b85c710afaad8ac05f4f25a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a map.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;term&lt;/code&gt; 가지도가 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b96817a78d4b89e0e0af672b61e730a7a6cdcf50" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a proper list.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;term&lt;/code&gt; 가 올바른 목록이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="74a1ff742d26d9d5e217d93e495385074b5a91c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not a tuple.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;term&lt;/code&gt; 튜플이 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e0764fec41c326adbe09a5e85cd0f2ddf311239b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an atom.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;term&lt;/code&gt; 원자가 아닌 경우 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f2720c100b3370e08814ba40a54fadc0b7e1ecde" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of a signed 64-bit integer.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;term&lt;/code&gt; 정수가 아니거나 부호있는 64 비트 정수의 범위를 벗어나 면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="466cc40c31f850b67f9e5b9d5eafadd6ca7d8bd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , &lt;code&gt;term&lt;/code&gt; 이 정수가 아니거나 &lt;code&gt;int&lt;/code&gt; 유형의 범위를 벗어나 면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="d5dd34616831ba5e73c34e77058031a360a47f61" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an integer or is outside the bounds of type &lt;code&gt;long int&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , &lt;code&gt;term&lt;/code&gt; 이 정수가 아니거나 &lt;code&gt;long int&lt;/code&gt; 유형의 범위를 벗어나 면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="3ce5bb0360bb82e10c287051a3544582ad7996ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of an unsigned 64-bit integer.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , &lt;code&gt;term&lt;/code&gt; 이 부호없는 정수가 아니거나 부호없는 64 비트 정수 범위를 벗어나 면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="ebdc24ba5578cd605bf5abafb13309dbdb85f5e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of type &lt;code&gt;unsigned int&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , &lt;code&gt;term&lt;/code&gt; 이 부호없는 정수가 아니거나 &lt;code&gt;unsigned int&lt;/code&gt; 유형의 경계를 벗어나 면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="ad16fe9435f50ea2161b3f9229e301fc160ace24" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an unsigned integer or is outside the bounds of type &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , &lt;code&gt;term&lt;/code&gt; 이 부호없는 정수가 아니거나 &lt;code&gt;unsigned long&lt;/code&gt; 유형의 경계를 벗어나 면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c66b4dd3767c73443718052878eb4d7dad05fa10" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if allocation fails.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 성공, 또는 &lt;code&gt;false&lt;/code&gt; 할당이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="402cb52c5dc41234e885abc23c81a2c290a6af4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if it is not a list or the list is empty.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, 목록이 아니거나 목록이 비어 있으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="17d5f63b40b549a6977536ef8a6adfcf84871635" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if memory allocation failed.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, 메모리 할당에 실패하면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="22a67098bbe3a6af017af30fcf52e9ffc8423f04" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the I/O does not contain &lt;code&gt;count&lt;/code&gt; bytes. On failure the queue is left un-altered.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 , I / O에 &lt;code&gt;count&lt;/code&gt; 바이트 가 없으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 실패시 큐는 변경되지 않은 상태로 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="02ec2783839d8a59082df68de0ce8bcd6cd8429e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the allocation fails.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 , 할당에 실패하면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="de43efc8b12e870f3ff949cf7150965a8579f354" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 , 큐가 비어 있으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="762065f9e524f1edd906886731650b489362d98d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; on success, or false if &lt;code&gt;map&lt;/code&gt; is not a map.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를, &lt;code&gt;map&lt;/code&gt; 가 지도 가 아닌 경우 false를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="09cb26109a0688f3ddf6aa2b146ecd484a16fdc0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; when every element of &lt;code&gt;Ordset1&lt;/code&gt; is also a member of &lt;code&gt;Ordset2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 의 모든 요소 때 &lt;code&gt;Ordset1&lt;/code&gt; 는 또한의 구성원 &lt;code&gt;Ordset2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd2b541eaaee25c8b7e1896e058688d9e003422d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; when every element of &lt;code&gt;Set1&lt;/code&gt; is also a member of &lt;code&gt;Set2&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; 의 모든 요소 가 &lt;code&gt;Set2&lt;/code&gt; 의 멤버 인 경우도 &lt;code&gt;false&lt;/code&gt; , 그렇지 않은 경우는 false를 리턴 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="772f6c1866dde47182302fa4adfbd6b65a83ecc5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="01b5f3c7e9e34ad0ea7e55d06b0d272719cb9f36" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if any of the following applies:</source>
          <target state="translated">다음 중 하나에 해당하면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7541454270931be498139883739610e2bc72b64f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt; microstate_accounting&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">시스템 플래그 &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt; microstate_accounting&lt;/a&gt;&lt;/code&gt; 이 꺼져 있으면 &lt;code&gt;undefined&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1ce7dfa3a0d8ca6c582893c5a3a497ecd9596cf8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt;microstate_accounting&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">시스템 플래그 &lt;code&gt;&lt;a href=&quot;#system_flag_microstate_accounting&quot;&gt;microstate_accounting&lt;/a&gt;&lt;/code&gt; 이 꺼져 있으면 &lt;code&gt;undefined&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9ae255612d9ff757b002486d3c3afdc71c6422b3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">시스템 플래그 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; 이 꺼져 있으면 &lt;code&gt;undefined&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3cbb78209aa42d2d824c7225bd68db96b78b41cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt; if system flag &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; is turned off.</source>
          <target state="translated">시스템 플래그 &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; 이 꺼져 있으면 &lt;code&gt;undefined&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="79b1e7f3aa52d8516e62aa3d67ceadbc5536b02b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;yes&lt;/code&gt; if communication with &lt;code&gt;Node&lt;/code&gt; is authorized. Notice that a connection to &lt;code&gt;Node&lt;/code&gt; is established in this case. Returns &lt;code&gt;no&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; does not exist or communication is not authorized (it has another cookie than &lt;code&gt;auth&lt;/code&gt; thinks it has).</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 와의 통신 이 승인 되면 &lt;code&gt;yes&lt;/code&gt; 리턴 합니다 . 이 경우 &lt;code&gt;Node&lt;/code&gt; 연결됩니다 . &lt;code&gt;Node&lt;/code&gt; 가 존재하지 않거나 통신이 인증되지 않은 경우 ( &lt;code&gt;auth&lt;/code&gt; 가 생각한 것 이외의 다른 쿠키가있는 경우) &lt;code&gt;no&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="ff68aa8173942d5ed453128b3460662d3f4018ef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{0,0,{pid(),0}}&lt;/code&gt; or &lt;code&gt;{0,0,undefined}&lt;/code&gt; if &lt;code&gt;memsup&lt;/code&gt; is not available, or if all memory checks so far have timed out.</source>
          <target state="translated">반환 &lt;code&gt;{0,0,{pid(),0}}&lt;/code&gt; 또는 &lt;code&gt;{0,0,undefined}&lt;/code&gt; 경우 &lt;code&gt;memsup&lt;/code&gt; 는 사용할 수 없습니다, 또는 모든 메모리 검사는 지금까지 시간이 초과 한 경우.</target>
        </trans-unit>
        <trans-unit id="8a2ba5a5819b807f3fa6c7dcac826c02ac20ac12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Allocator, Version, Features, Settings&lt;/code&gt;, where:</source>
          <target state="translated">&lt;code&gt;{Allocator, Version, Features, Settings&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="88b240dca4c3a19f9e5608f231fb6555ed83370b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Continuation2, eof}&lt;/code&gt; when the end of the log is reached, and &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">로그 끝에 도달하면 &lt;code&gt;{Continuation2, eof}&lt;/code&gt; 를, 오류가 발생하면 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="9a433a57e945cfebfd65dacf6868869bb0981d75" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label}&lt;/code&gt;, where &lt;code&gt;Label&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of edge &lt;code&gt;E&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V2&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;. If no edge &lt;code&gt;E&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt; exists, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">반환 &lt;code&gt;{E,&amp;nbsp;V1,&amp;nbsp;V2,&amp;nbsp;Label}&lt;/code&gt; , &lt;code&gt;Label&lt;/code&gt; 은 IS &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 가장자리의 &lt;code&gt;E&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;V1&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;V2&lt;/code&gt; 소리를 나타내는 두 글자의 &lt;code&gt;G&lt;/code&gt; . digraph &lt;code&gt;G&lt;/code&gt; 의 edge &lt;code&gt;E&lt;/code&gt; 가 존재 하지 않으면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="efc56f026af628e903a47db2fc6244058b8806dc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Iter2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the smallest element referred to by iterator &lt;code&gt;Iter1&lt;/code&gt;, and &lt;code&gt;Iter2&lt;/code&gt; is the new iterator to be used for traversing the remaining elements, or the atom &lt;code&gt;none&lt;/code&gt; if no elements remain.</source>
          <target state="translated">&lt;code&gt;{Element, Iter2}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Element&lt;/code&gt; 는 반복자 &lt;code&gt;Iter1&lt;/code&gt; 이 참조하는 가장 작은 요소 이고, &lt;code&gt;Iter2&lt;/code&gt; 는 나머지 요소를 순회하는 데 사용할 새 반복자이거나 요소가 &lt;code&gt;none&lt;/code&gt; 경우 atom none 입니다.</target>
        </trans-unit>
        <trans-unit id="393d32dc102733bc6ee1d537437533c14cd4c072" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Set2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the largest element in &lt;code&gt;Set1&lt;/code&gt;, and &lt;code&gt;Set2&lt;/code&gt; is this set with &lt;code&gt;Element&lt;/code&gt; deleted. Assumes that &lt;code&gt;Set1&lt;/code&gt; is not empty.</source>
          <target state="translated">&lt;code&gt;{Element, Set2}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Element&lt;/code&gt; 는 &lt;code&gt;Set1&lt;/code&gt; 에서 가장 큰 요소 이고 &lt;code&gt;Set2&lt;/code&gt; 는 &lt;code&gt;Element&lt;/code&gt; 가 삭제 된 이 세트입니다 . &lt;code&gt;Set1&lt;/code&gt; 이 비어 있지 않은 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="4e8ef39d1666ed76b60b4e7c413afdf3ec6f6595" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Element, Set2}&lt;/code&gt;, where &lt;code&gt;Element&lt;/code&gt; is the smallest element in &lt;code&gt;Set1&lt;/code&gt;, and &lt;code&gt;Set2&lt;/code&gt; is this set with &lt;code&gt;Element&lt;/code&gt; deleted. Assumes that &lt;code&gt;Set1&lt;/code&gt; is not empty.</source>
          <target state="translated">&lt;code&gt;{Element, Set2}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Element&lt;/code&gt; 는 &lt;code&gt;Set1&lt;/code&gt; 에서 가장 작은 요소 이고 &lt;code&gt;Set2&lt;/code&gt; 는 &lt;code&gt;Element&lt;/code&gt; 가 삭제 된 이 세트입니다 . &lt;code&gt;Set1&lt;/code&gt; 이 비어 있지 않은 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="55661fa3ce23aa28a56bb35fd85a1158d7146be6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{GoodNodes, BadNodes}&lt;/code&gt;, where &lt;code&gt;GoodNodes&lt;/code&gt; is the list of nodes that have &lt;code&gt;Name&lt;/code&gt; as a registered process.</source>
          <target state="translated">&lt;code&gt;{GoodNodes, BadNodes}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;GoodNodes&lt;/code&gt; 는 &lt;code&gt;Name&lt;/code&gt; 이 등록 된 프로세스 인 노드 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="a48003f5247a06d5277793d1f9fa8845a8f3ac94" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Iter2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key referred to by iterator &lt;code&gt;Iter1&lt;/code&gt;, and &lt;code&gt;Iter2&lt;/code&gt; is the new iterator to be used for traversing the remaining nodes, or the atom &lt;code&gt;none&lt;/code&gt; if no nodes remain.</source>
          <target state="translated">&lt;code&gt;{Key, Value, Iter2}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Key&lt;/code&gt; 는 반복자 &lt;code&gt;Iter1&lt;/code&gt; 이 참조하는 가장 작은 키 이고, &lt;code&gt;Iter2&lt;/code&gt; 는 나머지 노드를 순회하는 데 사용할 새 반복자이거나 노드가 &lt;code&gt;none&lt;/code&gt; 경우 아톰 없음 입니다.</target>
        </trans-unit>
        <trans-unit id="fe0692890a96736c1f9a5989a0656786fa01679b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the largest key in &lt;code&gt;Tree1&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt; is the value associated with this key, and &lt;code&gt;Tree2&lt;/code&gt; is this tree with the corresponding node deleted. Assumes that the tree is not empty.</source>
          <target state="translated">&lt;code&gt;{Key, Value, Tree2}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Key&lt;/code&gt; 는 &lt;code&gt;Tree1&lt;/code&gt; 에서 가장 큰 키 , &lt;code&gt;Value&lt;/code&gt; 는이 키와 연관된 값, &lt;code&gt;Tree2&lt;/code&gt; 는 해당 노드가 삭제 된이 트리입니다. 나무가 비어 있지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="8e1ea4bc482a37ad1fa45fe6b4361e60424e31a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value, Tree2}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key in &lt;code&gt;Tree1&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt; is the value associated with this key, and &lt;code&gt;Tree2&lt;/code&gt; is this tree with the corresponding node deleted. Assumes that the tree is not empty.</source>
          <target state="translated">&lt;code&gt;{Key, Value, Tree2}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Key&lt;/code&gt; 는 &lt;code&gt;Tree1&lt;/code&gt; 에서 가장 작은 키 , &lt;code&gt;Value&lt;/code&gt; 는이 키와 연관된 값, &lt;code&gt;Tree2&lt;/code&gt; 는 해당 노드가 삭제 된이 트리입니다. 나무가 비어 있지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="89f276e5e399472c1bd9f5f932089656cedbf6bf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the largest key in &lt;code&gt;Tree&lt;/code&gt;, and &lt;code&gt;Value&lt;/code&gt; is the value associated with this key. Assumes that the tree is not empty.</source>
          <target state="translated">&lt;code&gt;{Key, Value}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Key&lt;/code&gt; 는 &lt;code&gt;Tree&lt;/code&gt; 에서 가장 큰 키 이고 &lt;code&gt;Value&lt;/code&gt; 는이 키와 연관된 값 입니다. 나무가 비어 있지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="f7b3f6f07b4bb6247cb280d2ba6e0cddd533b4ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Key, Value}&lt;/code&gt;, where &lt;code&gt;Key&lt;/code&gt; is the smallest key in &lt;code&gt;Tree&lt;/code&gt;, and &lt;code&gt;Value&lt;/code&gt; is the value associated with this key. Assumes that the tree is not empty.</source>
          <target state="translated">&lt;code&gt;{Key, Value}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Key&lt;/code&gt; 는 &lt;code&gt;Tree&lt;/code&gt; 에서 가장 작은 키 이고 &lt;code&gt;Value&lt;/code&gt; 는이 키와 연관된 값 입니다. 나무가 비어 있지 않은 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b87bc425abe887b256f0bffb48b0d712c6f26190" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{Time, Value}&lt;/code&gt;, where &lt;code&gt;Time&lt;/code&gt; is the elapsed real time in &lt;strong&gt;microseconds&lt;/strong&gt;, and &lt;code&gt;Value&lt;/code&gt; is what is returned from the apply.</source>
          <target state="translated">&lt;code&gt;{Time, Value}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Time&lt;/code&gt; 은 경과 된 실시간 시간 ( &lt;strong&gt;마이크로 초&lt;/strong&gt; )이고 &lt;code&gt;Value&lt;/code&gt; 는 apply에서 리턴되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="3b83d15e05599f5726b5ba13192f1c2cbf143449" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{V,&amp;nbsp;Label}&lt;/code&gt;, where &lt;code&gt;Label&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; of the vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; if no vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt; exists.</source>
          <target state="translated">반환 &lt;code&gt;{V,&amp;nbsp;Label}&lt;/code&gt; , &lt;code&gt;Label&lt;/code&gt; 은 IS &lt;code&gt;&lt;a href=&quot;#label&quot;&gt;label&lt;/a&gt;&lt;/code&gt; 정점의 &lt;code&gt;V&lt;/code&gt; 소리를 나타내는 두 글자의 &lt;code&gt;G&lt;/code&gt; , 또는 &lt;code&gt;false&lt;/code&gt; 에는 정점의 경우 &lt;code&gt;V&lt;/code&gt; 소리를 나타내는 두 글자의 &lt;code&gt;G&lt;/code&gt; 가 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="833529750ef3e7c04f447cd981d75c4bf67a62fa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ValueList, NewBindings}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ValueList, NewBindings}&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e20190e6cd6522d1185a4f4229af82649a8972c9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{all,0,0,[]}&lt;/code&gt; if &lt;code&gt;cpu_sup&lt;/code&gt; is not available.</source>
          <target state="translated">&lt;code&gt;cpu_sup&lt;/code&gt; 을 사용할 수없는 경우 &lt;code&gt;{all,0,0,[]}&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="00754e1856a24e2dff7d16ad8cd24696290a5b52" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, Reason}&lt;/code&gt; for all errors.</source>
          <target state="translated">모든 오류에 대해 &lt;code&gt;{error, Reason}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a03273a17cf20521c4bfcec4f487e6c790ea9e0c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, Reason}&lt;/code&gt; if &lt;code&gt;host_file()&lt;/code&gt; returns &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{error, Reason}&lt;/code&gt; 경우 &lt;code&gt;host_file()&lt;/code&gt; 반환 &lt;code&gt;{error, Reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="366df6b410d0dc85728af0bfb8a23e49a0898b24" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, bad_name}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; is not the name of an application under &lt;code&gt;$OTPROOT/lib&lt;/code&gt; or on a directory referred to through environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt;. Fails with an exception if &lt;code&gt;Name&lt;/code&gt; has the wrong type.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 이 &lt;code&gt;$OTPROOT/lib&lt;/code&gt; 또는 환경 변수 &lt;code&gt;ERL_LIBS&lt;/code&gt; 를 통해 참조되는 디렉토리 의 응용 프로그램 이름 이 아닌 경우 &lt;code&gt;{error, bad_name}&lt;/code&gt; 리턴 합니다. &lt;code&gt;Name&lt;/code&gt; 에 잘못된 유형이 있으면 예외가 발생하여 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="1127d6855067a544ce8dabd94131eee9103628d0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, enotsup}&lt;/code&gt; on platforms that have no concept of current drive (Unix, for example).</source>
          <target state="translated">현재 드라이브 개념이없는 플랫폼 (예 : Unix)에서 &lt;code&gt;{error, enotsup}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1c0e3e642e9988f23e1651e79c1f83e267a5ce84" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{error, {'invalid global_groups definition', Bad}}&lt;/code&gt; if configuration parameter &lt;code&gt;global_groups&lt;/code&gt; has an invalid value &lt;code&gt;Bad&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{error, {'invalid global_groups definition', Bad}}&lt;/code&gt; 구성 매개 변수의 경우 &lt;code&gt;global_groups&lt;/code&gt; 가 잘못된 값이 &lt;code&gt;Bad&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08331cd302f70b32cfdb9f28877b7ced295e81f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{file,File}&lt;/code&gt; if the module &lt;code&gt;Module&lt;/code&gt; is Cover compiled, or &lt;code&gt;false&lt;/code&gt; otherwise. &lt;code&gt;File&lt;/code&gt; is the &lt;code&gt;.erl&lt;/code&gt; file used by &lt;code&gt;cover:compile_module/1,2&lt;/code&gt; or the &lt;code&gt;.beam&lt;/code&gt; file used by &lt;code&gt;compile_beam/1&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{file,File}&lt;/code&gt; 모듈이있는 경우 &lt;code&gt;Module&lt;/code&gt; 커버 컴파일, 또는 &lt;code&gt;false&lt;/code&gt; 그렇지. &lt;code&gt;File&lt;/code&gt; 은 IS &lt;code&gt;.erl&lt;/code&gt; 에 의해 사용되는 파일 &lt;code&gt;cover:compile_module/1,2&lt;/code&gt; 또는 &lt;code&gt;.beam&lt;/code&gt; 에 의해 사용되는 파일 &lt;code&gt;compile_beam/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc6cd949b74ac18e91b63a0611e94c6601753003" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{fullsweep_after, integer() &amp;gt;= 0}&lt;/code&gt;, which is the &lt;code&gt;fullsweep_after&lt;/code&gt; garbage collection setting used by default. For more information, see &lt;code&gt;garbage_collection&lt;/code&gt; described below.</source>
          <target state="translated">반환 &lt;code&gt;{fullsweep_after, integer() &amp;gt;= 0}&lt;/code&gt; 은 IS, &lt;code&gt;fullsweep_after&lt;/code&gt; 에 기본적으로 사용 가비지 컬렉션 설정. 자세한 정보 는 아래에 설명 된 &lt;code&gt;garbage_collection&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbda8fa8bb826b93aae877ea8f5ee0b58ffba1d1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt;, where &lt;code&gt;MaxHeapSize&lt;/code&gt; is the current system-wide maximum heap size settings for spawned processes. This setting can be set using the command-line flags &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. It can also be changed at runtime using &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt; erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;. For more details about the &lt;code&gt;max_heap_size&lt;/code&gt; process flag, see &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt; 반환합니다 . 여기서 &lt;code&gt;MaxHeapSize&lt;/code&gt; 는 생성 된 프로세스에 대한 현재 시스템 전체의 최대 힙 크기 설정입니다. 이 설정은 &lt;code&gt;erl(1)&lt;/code&gt; 의 명령 줄 플래그 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; 을 사용하여 설정할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt; erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 사용하여 런타임에 변경할 수도 있습니다 . &lt;code&gt;max_heap_size&lt;/code&gt; 프로세스 플래그 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="331a53c9e16eb417b3327df3828d48f586d5a6bd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt;, where &lt;code&gt;MaxHeapSize&lt;/code&gt; is the current system-wide maximum heap size settings for spawned processes. This setting can be set using the command-line flags &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. It can also be changed at runtime using &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt;erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;. For more details about the &lt;code&gt;max_heap_size&lt;/code&gt; process flag, see &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{max_heap_size, MaxHeapSize}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;MaxHeapSize&lt;/code&gt; 는 스폰 된 프로세스에 대한 현재 시스템 전체의 최대 힙 크기 설정입니다. 이 설정은 &lt;code&gt;erl(1)&lt;/code&gt; 의 명령 행 플래그 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;erl#+hmaxk&quot;&gt;+hmaxk&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;erl#+hmaxel&quot;&gt;+hmaxel&lt;/a&gt;&lt;/code&gt; 을 사용하여 설정할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;#system_flag_max_heap_size&quot;&gt;erlang:system_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 사용하여 런타임에 변경할 수도 있습니다 . &lt;code&gt;max_heap_size&lt;/code&gt; 프로세스 플래그 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b68242c8927ae4aa1c70666a93d13ffdb58a777" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{min_bin_vheap_size, MinBinVHeapSize}&lt;/code&gt;, where &lt;code&gt;MinBinVHeapSize&lt;/code&gt; is the current system-wide minimum binary virtual heap size for spawned processes.</source>
          <target state="translated">&lt;code&gt;{min_bin_vheap_size, MinBinVHeapSize}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;MinBinVHeapSize&lt;/code&gt; 는 스폰 된 프로세스의 현재 시스템 전체 최소 2 진 가상 힙 크기입니다.</target>
        </trans-unit>
        <trans-unit id="7b93c870194a4e7c820ac8afebdcac052fe99d49" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{min_heap_size, MinHeapSize}&lt;/code&gt;, where &lt;code&gt;MinHeapSize&lt;/code&gt; is the current system-wide minimum heap size for spawned processes.</source>
          <target state="translated">&lt;code&gt;{min_heap_size, MinHeapSize}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;MinHeapSize&lt;/code&gt; 는 생성 된 프로세스의 현재 시스템 전체 최소 힙 크기입니다.</target>
        </trans-unit>
        <trans-unit id="4c753b5f57aed1f2be36a29d6d7233a6e7fc823c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{module, Module}&lt;/code&gt; if successful, or &lt;code&gt;{error, Reason}&lt;/code&gt; if loading fails. See &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; for a description of the possible error reasons.</source>
          <target state="translated">반환 &lt;code&gt;{module, Module}&lt;/code&gt; 성공하는 경우, 또는 &lt;code&gt;{error, Reason}&lt;/code&gt; 로딩이 실패 할 경우. 가능한 오류 원인에 대한 설명은 &lt;code&gt;&lt;a href=&quot;#error_reasons&quot;&gt;Error Reasons for Code-Loading Functions&lt;/a&gt;&lt;/code&gt; 대한 오류 이유를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d21639cd96a17ba54d0ea4982cc607eb28fec4d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, AppNames}&lt;/code&gt; for a successful start or for an already started application (which is, however, omitted from the &lt;code&gt;AppNames&lt;/code&gt; list).</source>
          <target state="translated">성공적인 시작 또는 이미 시작된 애플리케이션 ( &lt;code&gt;AppNames&lt;/code&gt; 목록 에서 생략 됨)에 대해 &lt;code&gt;{ok, AppNames}&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="0a91819bb450fc042c77c6ef0fcc791f1806f465" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, AppNames}&lt;/code&gt;, where &lt;code&gt;AppNames&lt;/code&gt; is a list of the application names that was actually started by this call. The list might be empty, or not contain all dependencies if the application or some of its dependencies are already started.</source>
          <target state="translated">&lt;code&gt;{ok, AppNames}&lt;/code&gt; 반환합니다 . 여기서 &lt;code&gt;AppNames&lt;/code&gt; 는이 호출에 의해 실제로 시작된 애플리케이션 이름 목록입니다. 목록은 비어 있거나 응용 프로그램 또는 일부 종속성이 이미 시작된 경우 모든 종속성을 포함하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d315a9b8d727b127c74bafa6a3f060a565512370" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Binary}&lt;/code&gt;, where &lt;code&gt;Binary&lt;/code&gt; is a binary data object that contains the contents of &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">&lt;code&gt;{ok, Binary}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Binary&lt;/code&gt; 는 &lt;code&gt;Filename&lt;/code&gt; 의 컨텐츠를 포함하는 2 진 데이터 오브젝트 이거나 오류가 발생한 경우 &lt;code&gt;{error, Reason}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="525c655903cc75da6161764cd50c898b36f933e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, BytesCopied}&lt;/code&gt;, where &lt;code&gt;BytesCopied&lt;/code&gt; is the number of bytes that was copied, which can be less than &lt;code&gt;ByteCount&lt;/code&gt; if end of file was encountered on the source. If the operation fails, &lt;code&gt;{error, Reason}&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;{ok, BytesCopied}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;BytesCopied&lt;/code&gt; 는 복사 된 바이트 수이며 , 소스에서 파일 끝이 발견되면 &lt;code&gt;ByteCount&lt;/code&gt; 보다 작을 수 있습니다 . 조작이 실패하면 &lt;code&gt;{error, Reason}&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e2fdbfba25d1c13b4c1c046500ab28039154c511" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Continuation}&lt;/code&gt; if the log/index file is opened successfully. &lt;code&gt;Continuation&lt;/code&gt; is to be used when chunking or closing the file.</source>
          <target state="translated">반환 &lt;code&gt;{ok, Continuation}&lt;/code&gt; 로그 / 인덱스 파일이 성공적으로 열릴 경우. 파일 청크 또는 닫을 때 &lt;code&gt;Continuation&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d7d8052af3f43d76653939bc62908aa05dbf0c0a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Dir}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;, where &lt;code&gt;Dir&lt;/code&gt; is the current working directory of the specified drive.</source>
          <target state="translated">&lt;code&gt;{ok, Dir}&lt;/code&gt; 또는 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Dir&lt;/code&gt; 은 지정된 드라이브의 현재 작업 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="e57cd0a2d2a36cac656d2b766bd89790ba75e6b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Dir}&lt;/code&gt;, where &lt;code&gt;Dir&lt;/code&gt; is the current working directory of the file server.</source>
          <target state="translated">&lt;code&gt;{ok, Dir}&lt;/code&gt; 리턴합니다 . 여기서 &lt;code&gt;Dir&lt;/code&gt; 은 파일 서버의 현재 작업 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="70628411315134680c4570f7d86d9d5b089f5796" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Filename}&lt;/code&gt; if &lt;code&gt;Name&lt;/code&gt; refers to a symbolic link or &lt;code&gt;{error, Reason}&lt;/code&gt; otherwise. On platforms that do not support symbolic links, the return value is &lt;code&gt;{error,enotsup}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 이 기호 링크를 참조 하면 &lt;code&gt;{ok, Filename}&lt;/code&gt; &lt;code&gt;{error, Reason}&lt;/code&gt; 그렇지 않으면 {error, Reason}을 리턴 합니다. 기호 링크를 지원하지 않는 플랫폼에서 리턴 값은 &lt;code&gt;{error,enotsup}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2396fc5b1271f60064222577f92f372d93ac4626" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, IpPort}&lt;/code&gt; where &lt;code&gt;IpPort&lt;/code&gt; is the IP port number used by the driver listen socket. Only the ip trace driver supports this operation.</source>
          <target state="translated">&lt;code&gt;{ok, IpPort}&lt;/code&gt; 리턴합니다. 여기서 &lt;code&gt;IpPort&lt;/code&gt; 는 드라이버 청취 소켓에서 사용하는 IP 포트 번호입니다. ip 추적 드라이버 만이 작업을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b1aeb5183667fcc40c359fec7f290fd93bff628c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, NewVsn, Script}&lt;/code&gt; if successful, where &lt;code&gt;NewVsn&lt;/code&gt; is the new application version. For details about &lt;code&gt;Script&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;{ok, NewVsn, Script}&lt;/code&gt; 성공하는 경우, &lt;code&gt;NewVsn&lt;/code&gt; 가 새 응용 프로그램 버전입니다. &lt;code&gt;Script&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="58f1c87b2a36610dcd7fa20851fdd685363e0515" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Options}&lt;/code&gt; where &lt;code&gt;Options&lt;/code&gt; is a list of current options enabled for heart. If the callback is cleared, &lt;code&gt;none&lt;/code&gt; will be returned.</source>
          <target state="translated">반환 &lt;code&gt;{ok, Options}&lt;/code&gt; 여기서 &lt;code&gt;Options&lt;/code&gt; 마음 사용할 현재 옵션의 목록입니다. 콜백이 지워지면 &lt;code&gt;none&lt;/code&gt; 반환 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c12a24d6ef45b2a3b8d244c5023475a09bcdb3ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, Script}&lt;/code&gt; if successful. For details about &lt;code&gt;Script&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">성공하면 &lt;code&gt;{ok, Script}&lt;/code&gt; 반환합니다 . &lt;code&gt;Script&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;appup&quot;&gt;appup(4)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="982549332c9000b139b7f75b0566066696ec2bff" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, TRef}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ok, TRef}&lt;/code&gt; 또는 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="f94a7a91f55c6582d54c56cd55e902ddee43cfd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok, cancel}&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; when &lt;code&gt;TRef&lt;/code&gt; is not a timer reference.</source>
          <target state="translated">&lt;code&gt;TRef&lt;/code&gt; 가 타이머 참조가 아닌 경우 &lt;code&gt;{ok, cancel}&lt;/code&gt; 또는 &lt;code&gt;{error, Reason}&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="b371b241c5d039ac927cc9ae053642ebd1776939" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok,ModuleName}&lt;/code&gt; if successful, or &lt;code&gt;error&lt;/code&gt; if there are errors. An object code file is created if the compilation succeeds without errors. It is considered to be an error if the module name in the source code is not the same as the basename of the output file.</source>
          <target state="translated">반환 &lt;code&gt;{ok,ModuleName}&lt;/code&gt; 성공하는 경우, 또는 &lt;code&gt;error&lt;/code&gt; 오류가있는 경우. 컴파일이 오류없이 성공하면 객체 코드 파일이 생성됩니다. 소스 코드의 모듈 이름이 출력 파일의 기본 이름과 동일하지 않은 경우 오류로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="56e28ed5878c26ccf5d3d8d866d209eada335dc9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{ok,Name,Nodes}&lt;/code&gt; or &lt;code&gt;{error,Reason}&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; is the (possibly generated) checkpoint name. &lt;code&gt;Nodes&lt;/code&gt; are the nodes that are involved in the checkpoint. Only nodes that keep a checkpoint retainer know about the checkpoint.</source>
          <target state="translated">&lt;code&gt;{ok,Name,Nodes}&lt;/code&gt; 또는 &lt;code&gt;{error,Reason}&lt;/code&gt; 을 리턴 합니다. &lt;code&gt;Name&lt;/code&gt; 은 (아마도 생성 된) 검사 점 이름입니다. &lt;code&gt;Nodes&lt;/code&gt; 는 검사 점과 관련된 노드입니다. 검사 점 보유자를 유지하는 노드 만 검사 점에 대해 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="df57a8990d22e2034e72cb8d923b4730017d0102" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{value, Value, NewBindings}&lt;/code&gt; 반환</target>
        </trans-unit>
        <trans-unit id="259fe1b63654f77ae2cab10c66dc676092c4f23b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt; by default. If &lt;code&gt;ReturnFormat&lt;/code&gt; is &lt;code&gt;value&lt;/code&gt;, only &lt;code&gt;Value&lt;/code&gt; is returned.</source>
          <target state="translated">기본적으로 &lt;code&gt;{value, Value, NewBindings}&lt;/code&gt; 를 반환 합니다. 경우 &lt;code&gt;ReturnFormat&lt;/code&gt; 가 있다 &lt;code&gt;value&lt;/code&gt; 만 &lt;code&gt;Value&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="307c398020ed01eaa89c381879ee6bd118a94270" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{yes, Root}&lt;/code&gt; if &lt;code&gt;Root&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;#root&quot;&gt;root&lt;/a&gt;&lt;/code&gt; of the arborescence &lt;code&gt;Digraph&lt;/code&gt;, otherwise &lt;code&gt;no&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Root&lt;/code&gt; 가 arborescence &lt;code&gt;Digraph&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;#root&quot;&gt;root&lt;/a&gt;&lt;/code&gt; 이면 &lt;code&gt;{yes, Root}&lt;/code&gt; 반환 하고 , 그렇지 않으면 &lt;code&gt;no&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b3dab1df8995af3b207b03227c6c89632481a2a3" translate="yes" xml:space="preserve">
          <source>Returns CPU utilization since the last call to &lt;code&gt;util/0&lt;/code&gt; or &lt;code&gt;util/1&lt;/code&gt; by the calling process, in more detail than &lt;code&gt;util/0&lt;/code&gt;.</source>
          <target state="translated">반환 CPU 사용률 이후 마지막 호출 &lt;code&gt;util/0&lt;/code&gt; 또는 &lt;code&gt;util/1&lt;/code&gt; 자세히 호출 과정보다는 &lt;code&gt;util/0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08b8d450a6dc3df5d2c2a376e4fd6abee1dc93f7" translate="yes" xml:space="preserve">
          <source>Returns CPU utilization since the last call to &lt;code&gt;util/0&lt;/code&gt; or &lt;code&gt;util/1&lt;/code&gt; by the calling process.</source>
          <target state="translated">호출 프로세스에 의한 &lt;code&gt;util/0&lt;/code&gt; 또는 &lt;code&gt;util/1&lt;/code&gt; 에 대한 마지막 호출 이후의 CPU 사용률을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="7a19e0bf6777e3799f608c28e900a89c647ee453" translate="yes" xml:space="preserve">
          <source>Returns Universal Coordinated Time (UTC) converted from the return value from &lt;code&gt;erlang:timestamp/0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erlang:timestamp/0&lt;/code&gt; 의 반환 값에서 변환 된 UTC (Universal Coordinated Time)를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f82fe86c3ac3fe7c359747c520e87a0d841ed9cc" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt; unique reference&lt;/code&gt;. The reference is unique among connected nodes.</source>
          <target state="translated">&lt;code&gt; unique reference&lt;/code&gt; 반환합니다 . 참조는 연결된 노드간에 고유합니다.</target>
        </trans-unit>
        <trans-unit id="fc2f7b5b3d9afa9e1e7199caeeca85be350eda48" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; of the vertices of digraph &lt;code&gt;Digraph&lt;/code&gt; if such an ordering exists, otherwise &lt;code&gt;false&lt;/code&gt;. For each vertex in the returned list, no &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; occur earlier in the list.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; 정점의 &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; 를 반환합니다 ( 그러한 순서가 있으면 &lt;code&gt;false&lt;/code&gt; ) . 반환 된리스트의 각 정점에 대해 ,리스트의 초기에 &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="6aa6cf6ede13f42502f631272769865fcac29a7b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt; indicating if dynamic trace probes (&lt;code&gt;dtrace&lt;/code&gt; or &lt;code&gt;systemtap&lt;/code&gt;) are built into the emulator. This can only be &lt;code&gt;true&lt;/code&gt; if the virtual machine was built for dynamic tracing (that is, &lt;code&gt;system_info(dynamic_trace)&lt;/code&gt; returns &lt;code&gt;dtrace&lt;/code&gt; or &lt;code&gt;systemtap&lt;/code&gt;).</source>
          <target state="translated">동적 추적 프로브 ( &lt;code&gt;dtrace&lt;/code&gt; 또는 &lt;code&gt;systemtap&lt;/code&gt; )가 에뮬레이터에 내장되어 있는지 여부를 나타내는 &lt;code&gt;boolean()&lt;/code&gt; 반환합니다 . 가상 머신이 동적 추적을 위해 빌드 된 경우 에만 &lt;code&gt;true&lt;/code&gt; 됩니다 (즉, &lt;code&gt;system_info(dynamic_trace)&lt;/code&gt; 는 &lt;code&gt;dtrace&lt;/code&gt; 또는 &lt;code&gt;systemtap&lt;/code&gt; 을 리턴 함 ).</target>
        </trans-unit>
        <trans-unit id="a905cad4e576d62f46400225eb02ef1422c0eb12" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt;, which is &lt;code&gt;true&lt;/code&gt; if the driver has made itself permanent (and is &lt;strong&gt;not&lt;/strong&gt; a statically linked-in driver), otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;boolean()&lt;/code&gt; 이며, &lt;code&gt;true&lt;/code&gt; 드라이버 자체가 영구적 경우 (이고 &lt;strong&gt;하지&lt;/strong&gt; , 그렇지 않으면 정적으로 링크에서 드라이버) &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ca7493b9ffd9be9014ac0512766d56dd26c9312" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;boolean()&lt;/code&gt;, which is &lt;code&gt;true&lt;/code&gt; if the driver is a statically linked-in one, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;boolean()&lt;/code&gt; 이며, &lt;code&gt;true&lt;/code&gt; 드라이버가 정적으로 링크 된 하나, 그렇지 않은 경우 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3234c4a766711d5c57912c3b50d0f182fa16108f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;file_info&lt;/code&gt; record from the file system object specified by &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;Handle&lt;/code&gt;. See &lt;code&gt;file:read_file_info/2&lt;/code&gt; for information about the record.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 또는 &lt;code&gt;Handle&lt;/code&gt; 로 지정된 파일 시스템 객체에서 &lt;code&gt;file_info&lt;/code&gt; 레코드를 반환합니다 . 레코드에 대한 정보는 &lt;code&gt;file:read_file_info/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6543572ba044682da2942e18f0b4cfed7fb8712" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;file_info&lt;/code&gt; record from the symbolic link specified by &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;Handle&lt;/code&gt;. See &lt;code&gt;file:read_link_info/2&lt;/code&gt; for information about the record.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 또는 &lt;code&gt;Handle&lt;/code&gt; 로 지정된 기호 링크에서 &lt;code&gt;file_info&lt;/code&gt; 레코드를 리턴합니다 . 레코드에 대한 정보는 &lt;code&gt;file:read_link_info/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="99fc75484cbf5300077871a453cc781348fc6e5e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified address.</source>
          <target state="translated">지정된 주소를 가진 호스트에 대한 &lt;code&gt;hostent&lt;/code&gt; 레코드를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="de7444ab2a8e88af314b25b1e3fdd3d968d39b73" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified hostname.</source>
          <target state="translated">지정된 호스트 이름을 가진 호스트에 대한 &lt;code&gt;hostent&lt;/code&gt; 레코드를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="10fa45c621f5400516d43f36bc7ca182b157e17e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;hostent&lt;/code&gt; record for the host with the specified name, restricted to the specified address family.</source>
          <target state="translated">지정된 주소 패밀리로 제한된 지정된 이름의 호스트에 대한 &lt;code&gt;hostent&lt;/code&gt; 레코드를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="bd72681d770b7e4e9977496e81c32f763b668a12" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;unique reference&lt;/code&gt;. The reference is unique among connected nodes.</source>
          <target state="translated">&lt;code&gt;unique reference&lt;/code&gt; 반환합니다 . 참조는 연결된 노드간에 고유합니다.</target>
        </trans-unit>
        <trans-unit id="b36032265fcec0bef9af51bfec131f495b09dfb7" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle, see the &lt;code&gt;qlc(3)&lt;/code&gt; manual page in STDLIB. The module &lt;code&gt;qlc&lt;/code&gt; implements a query language that can use Mnesia tables as sources of data. Calling &lt;code&gt;mnesia:table/1,2&lt;/code&gt; is the means to make the &lt;code&gt;mnesia&lt;/code&gt; table &lt;code&gt;Tab&lt;/code&gt; usable to QLC.</source>
          <target state="translated">QLC (Query List Comprehension) 쿼리 핸들을 리턴합니다 ( STDLIB 의 &lt;code&gt;qlc(3)&lt;/code&gt; 매뉴얼 페이지 참조 ) . &lt;code&gt;qlc&lt;/code&gt; 모듈 은 Mnesia 테이블을 데이터 소스로 사용할 수있는 쿼리 언어를 구현합니다. &lt;code&gt;mnesia:table/1,2&lt;/code&gt; 호출 은 &lt;code&gt;mnesia&lt;/code&gt; 테이블 &lt;code&gt;Tab&lt;/code&gt; 을 QLC에 사용 가능 하게하는 수단 입니다.</target>
        </trans-unit>
        <trans-unit id="3d75e30374093fa44b81d82bd285b20deb2f8f4d" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle. The &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc(3)&lt;/a&gt;&lt;/code&gt; module provides a query language aimed mainly for Mnesia, but ETS tables, Dets tables, and lists are also recognized by &lt;code&gt;qlc&lt;/code&gt; as sources of data. Calling &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets:table/1,2&lt;/a&gt;&lt;/code&gt; is the means to make Dets table &lt;code&gt;Name&lt;/code&gt; usable to &lt;code&gt;qlc&lt;/code&gt;.</source>
          <target state="translated">QLC (Query List Comprehension) 쿼리 핸들을 리턴합니다. &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc(3)&lt;/a&gt;&lt;/code&gt; 모듈은 Mnesia 주로 목표로 쿼리 언어를 제공하지만, 테이블, Dets 테이블을 ETS 및 목록도 인식하는 &lt;code&gt;qlc&lt;/code&gt; 데이터 소스로. &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets:table/1,2&lt;/a&gt;&lt;/code&gt; 를 호출 하면 Dets 테이블 &lt;code&gt;Name&lt;/code&gt; 을 &lt;code&gt;qlc&lt;/code&gt; 에 사용할 수있게됩니다 .</target>
        </trans-unit>
        <trans-unit id="4152f2ffd3a419df70ff7a88ee269a4601950fdc" translate="yes" xml:space="preserve">
          <source>Returns a Query List Comprehension (QLC) query handle. The &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc&lt;/a&gt;&lt;/code&gt; module provides a query language aimed mainly at Mnesia, but ETS tables, Dets tables, and lists are also recognized by QLC as sources of data. Calling &lt;code&gt;table/1,2&lt;/code&gt; is the means to make the ETS table &lt;code&gt;Tab&lt;/code&gt; usable to QLC.</source>
          <target state="translated">QLC (Query List Comprehension) 쿼리 핸들을 리턴합니다. &lt;code&gt;&lt;a href=&quot;qlc&quot;&gt;qlc&lt;/a&gt;&lt;/code&gt; 모듈은 Mnesia에서 주로 목표로 쿼리 언어를 제공하지만 ETS 테이블, Dets 테이블 및 목록은 데이터의 소스로 QLC에 의해 인식됩니다. &lt;code&gt;table/1,2&lt;/code&gt; 호출 하면 ETS 테이블 &lt;code&gt;Tab&lt;/code&gt; 을 QLC에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb1dfe5ae9bce85bdee2d0b90b9fab2c79489c7f" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of distribution information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Erlang 크래시 덤프에서와 같이 형식이 지정된 배포 정보 문자열이 포함 된 바이너리를 반환합니다. 자세한 내용 은 사용자 가이드 &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="10758fe7a9d4e24aace34272476abcc894626692" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of distribution information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Erlang 크래시 덤프와 같이 형식화 된 배포 정보 문자열이 포함 된 이진을 반환합니다. 자세한 내용 은 사용 설명서의 &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f03832e5911f4a8b2b0ede1115a6ec7cec8f20b" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of loaded module information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Erlang 크래시 덤프에서 형식화 된로드 된 모듈 정보 문자열이 포함 된 이진을 반환합니다. 자세한 내용 은 사용 설명서의 &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2075dd8f7dd269353ce83468a1a82723e5f23ef7" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of miscellaneous system information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Erlang 크래시 덤프에서와 같이 형식이 지정된 기타 시스템 정보 문자열이 포함 된 바이너리를 반환합니다. 자세한 내용 은 사용자 가이드 &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="701e0a42ef7e9ed9122ebe8cd8de1066e1f02f93" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of miscellaneous system information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Erlang 크래시 덤프에서와 같이 형식이 지정된 기타 시스템 정보가 포함 된 이진을 반환합니다. 자세한 내용 은 사용 설명서의 &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ea5cf0e0aaaa1e6d56a5667ebebe1bd5a57541d" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of process and port information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Erlang 크래시 덤프에서와 같이 형식화 된 프로세스 및 포트 정보 문자열이 포함 된 바이너리를 반환합니다. 자세한 내용 은 사용자 가이드 &lt;code&gt; How to interpret the Erlang crash dumps&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c1657dc35bf39e4d71d0c418cc1328d158fb2ea" translate="yes" xml:space="preserve">
          <source>Returns a binary containing a string of process and port information formatted as in Erlang crash dumps. For more information, see section &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Erlang 크래시 덤프에서와 같이 형식화 된 프로세스 및 포트 정보를 포함하는 2 진을 리턴합니다. 자세한 내용 은 사용 설명서의 &lt;code&gt;How to interpret the Erlang crash dumps&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1dad94a5ecf5eca59593c02af3bf2b091eec361" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Atom&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;latin1&lt;/code&gt;, one byte exists for each character in the text representation. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the characters are encoded using UTF-8 where characters may require multiple bytes.</source>
          <target state="translated">&lt;code&gt;Atom&lt;/code&gt; 의 텍스트 표현에 해당하는 2 진을 리턴합니다 . &lt;code&gt;Encoding&lt;/code&gt; 이 &lt;code&gt;latin1&lt;/code&gt; 인 경우 텍스트 표현의 각 문자마다 1 바이트가 존재합니다. 경우 &lt;code&gt;Encoding&lt;/code&gt; 입니다 &lt;code&gt;utf8&lt;/code&gt; 또는 &lt;code&gt;unicode&lt;/code&gt; , 문자는 UTF-8 문자가 여러 바이트를 요구할 수 있습니다 사용하여 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="55ee73d4b8aab26697c48b389d9b95e46cef858a" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting. &lt;code&gt;Options&lt;/code&gt; behaves in the same way as &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt; float_to_list/2&lt;/a&gt;&lt;/code&gt;. Examples:</source>
          <target state="translated">고정 소수점 형식을 사용하여 &lt;code&gt;Float&lt;/code&gt; 의 텍스트 표현에 해당하는 바이너리를 반환합니다 . &lt;code&gt;Options&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt; float_to_list/2&lt;/a&gt;&lt;/code&gt; 와 동일한 방식으로 작동합니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="c200cdc2f9141d5effe910e8d58a6e4ec440e692" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting. &lt;code&gt;Options&lt;/code&gt; behaves in the same way as &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt;float_to_list/2&lt;/a&gt;&lt;/code&gt;. Examples:</source>
          <target state="translated">고정 소수점 형식을 사용하여 &lt;code&gt;Float&lt;/code&gt; 의 텍스트 표현에 해당하는 이진을 반환합니다 . &lt;code&gt;Options&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;#float_to_list-2&quot;&gt;float_to_list/2&lt;/a&gt;&lt;/code&gt; 와 같은 방식으로 작동합니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="f46592046bcdbd9525f6604d56c2b8596b486186" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt; in base &lt;code&gt;Base&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Base&lt;/code&gt; 에서 &lt;code&gt;Integer&lt;/code&gt; 의 텍스트 표현에 해당하는 이진을 반환합니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="aafadebaa2d529b4bd803af14b18309ed02c2775" translate="yes" xml:space="preserve">
          <source>Returns a binary corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 의 텍스트 표현에 해당하는 이진을 반환합니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="b62eb5a41f5a40804be1186f29dee7dcb8e5989b" translate="yes" xml:space="preserve">
          <source>Returns a binary data object that is the result of encoding &lt;code&gt;Term&lt;/code&gt; according to the &lt;code&gt;Erlang external term format.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Erlang external term format.&lt;/code&gt; 에 따라 &lt;code&gt;Term&lt;/code&gt; 을 인코딩 한 결과 인 이진 데이터 개체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="02909a2663a155daa84e3263ffafb2ec37fb6f65" translate="yes" xml:space="preserve">
          <source>Returns a binary data object that is the result of encoding &lt;code&gt;Term&lt;/code&gt; according to the Erlang external term format.</source>
          <target state="translated">Erlang 외부 용어 형식에 따라 &lt;code&gt;Term&lt;/code&gt; 을 인코딩 한 결과 인 이진 데이터 개체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7690a87ef8a7aaa5bf863fabf7faebcbe41261ba" translate="yes" xml:space="preserve">
          <source>Returns a binary representing the MD5 checksum of the module. If the module has native code loaded, this will be the MD5 of the native code, not the BEAM bytecode.</source>
          <target state="translated">모듈의 MD5 체크섬을 나타내는 이진을 반환합니다. 모듈에 원시 코드가로드 된 경우 BEAM 바이트 코드가 아닌 원시 코드의 MD5가됩니다.</target>
        </trans-unit>
        <trans-unit id="2dbd94b2a6a83030b3d8619baf1870a3078e9be9" translate="yes" xml:space="preserve">
          <source>Returns a binary that is made from the integers and binaries in &lt;code&gt;IoList&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;IoList&lt;/code&gt; 의 정수 및 이진으로 만든 이진을 반환합니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="7dda80173828f0945e6862ada4fc4c763759686d" translate="yes" xml:space="preserve">
          <source>Returns a binary that is made from the integers and binaries in &lt;code&gt;IoListOrBinary&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;IoListOrBinary&lt;/code&gt; 의 정수와 이진으로 만든 이진을 반환합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="02ce40de9366f7d68b862c64ceaaff27b0ca567d" translate="yes" xml:space="preserve">
          <source>Returns a bitstring that is made from the integers and bitstrings in &lt;code&gt;BitstringList&lt;/code&gt;. (The last tail in &lt;code&gt;BitstringList&lt;/code&gt; is allowed to be a bitstring.) Example:</source>
          <target state="translated">&lt;code&gt;BitstringList&lt;/code&gt; 의 정수와 비트 열로 만든 비트 열을 반환합니다 . &lt;code&gt;BitstringList&lt;/code&gt; 의 마지막 꼬리 는 비트 열 이 될 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="7f5bae5068f9e49ce7671463f1d687ed86bc1c86" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt; time correction&lt;/a&gt;&lt;/code&gt; is enabled or not.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt; time correction&lt;/a&gt;&lt;/code&gt; 이 활성화 되었는지 여부를 나타내는 부울 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f5adc61340a580263953283d1fa8186d7bed61f6" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; is enabled or not.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; 사용 여부를 나타내는 부울 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="50d1a22052c4241fe5d82e0b202f513432bd9a9f" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Data&lt;/code&gt; formatted in accordance with &lt;code&gt;Format&lt;/code&gt; in the same way as &lt;code&gt;&lt;a href=&quot;#fwrite-2&quot;&gt;fwrite/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt;, but takes an extra argument, a list of options.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#fwrite-2&quot;&gt;fwrite/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#format-2&quot;&gt;format/2&lt;/a&gt;&lt;/code&gt; 와 같은 방식으로 &lt;code&gt;Format&lt;/code&gt; 에 따라 형식화 된 &lt;code&gt;Data&lt;/code&gt; 를 나타내는 문자 목록을 리턴 하지만 옵션 목록 인 추가 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9a74d72ea023ac0f5f5818690811ff4e5c7430c9" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Data&lt;/code&gt; formatted in accordance with &lt;code&gt;Format&lt;/code&gt;. For a detailed description of the available formatting options, see &lt;code&gt;&lt;a href=&quot;io#fwrite-1&quot;&gt;io:fwrite/1,2,3&lt;/a&gt;&lt;/code&gt;. If the format string or argument list contains an error, a fault is generated.</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; 에 따라 형식화 된 &lt;code&gt;Data&lt;/code&gt; 를 나타내는 문자 목록을 리턴합니다 . 사용 가능한 포맷 옵션에 대한 자세한 설명은 &lt;code&gt;&lt;a href=&quot;io#fwrite-1&quot;&gt;io:fwrite/1,2,3&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 . 형식 문자열 또는 인수 목록에 오류가 있으면 결함이 생성됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
