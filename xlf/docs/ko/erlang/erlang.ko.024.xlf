<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="3b953997abe73e9a1c1d8354acb5eafa9e412a2f" translate="yes" xml:space="preserve">
          <source>For backward compatibility, the boolean value can be omitted. This is interpreted as &lt;code&gt;+c false&lt;/code&gt;.</source>
          <target state="translated">이전 버전과의 호환성을 위해 부울 값을 생략 할 수 있습니다. 이것은 &lt;code&gt;+c false&lt;/code&gt; 로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec9e83fe8bcfbb510ae158f2707a9e573aaa100f" translate="yes" xml:space="preserve">
          <source>For backward compatibility, the following &lt;code&gt;Request&lt;/code&gt;s are also to be handled by an I/O server (they are not to be present after Erlang/OTP R15B):</source>
          <target state="translated">이전 버전과의 호환성을 위해 다음 &lt;code&gt;Request&lt;/code&gt; 도 I / O 서버에서 처리해야합니다 (Erlang / OTP R15B 이후에는 존재하지 않음).</target>
        </trans-unit>
        <trans-unit id="e389de08f79fe5234fdab6f60b2f669f116e8ec6" translate="yes" xml:space="preserve">
          <source>For bitstrings, the number of whole bytes is returned. That is, if the number of bits in the bitstring is not divisible by 8, the resulting number of bytes is rounded &lt;strong&gt;down&lt;/strong&gt;.</source>
          <target state="translated">비트 열의 경우 전체 바이트 수가 반환됩니다. 즉, 비트 열의 비트 수를 8로 나눌 수없는 경우 결과 바이트 수는 반올림 &lt;strong&gt;됩니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b19d7eb1cf3b636a909f871678b4299e048efd3d" translate="yes" xml:space="preserve">
          <source>For blocksizes call &lt;code&gt;&lt;a href=&quot;#cipher_info-1&quot;&gt;cipher_info/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">블록 크기의 경우 &lt;code&gt;&lt;a href=&quot;#cipher_info-1&quot;&gt;cipher_info/1&lt;/a&gt;&lt;/code&gt; 을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="71028790787c422947eea95aebe6249e1ae6659d" translate="yes" xml:space="preserve">
          <source>For both &lt;code&gt;CallAt&lt;/code&gt; and &lt;code&gt;AllLines&lt;/code&gt; it holds that for no list element is &lt;code&gt;LineNumbers&lt;/code&gt; an empty list; such elements have been removed. The constants of &lt;code&gt;component&lt;/code&gt; and the integers of &lt;code&gt;LineNumbers&lt;/code&gt; are sorted and without duplicates.</source>
          <target state="translated">&lt;code&gt;CallAt&lt;/code&gt; 및 &lt;code&gt;AllLines&lt;/code&gt; 모두 리스트 요소가 &lt;code&gt;LineNumbers&lt;/code&gt; 인 경우 비어있는리스트입니다. 이러한 요소가 제거되었습니다. &lt;code&gt;component&lt;/code&gt; 상수 와 &lt;code&gt;LineNumbers&lt;/code&gt; 정수는 중복되지 않고 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="f7d3efe58b78df1ec32a2287942d1f93c4e30261" translate="yes" xml:space="preserve">
          <source>For calculating a MAC of a text divided in parts use:</source>
          <target state="translated">부분으로 나누어 진 텍스트의 MAC을 계산하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="42247570854a0a4fbff11ae10d3e87ed6ee6224e" translate="yes" xml:space="preserve">
          <source>For calls such as &lt;code&gt;erlang:apply(Fun, Args)&lt;/code&gt; or &lt;code&gt;erlang:apply(Module, Function, Args)&lt;/code&gt;, the call of the non-local function handler corresponding to the call to &lt;code&gt;erlang:apply/2,3&lt;/code&gt; itself (&lt;code&gt;Func({erlang, apply}, [Fun, Args])&lt;/code&gt; or &lt;code&gt;Func({erlang, apply}, [Module, Function, Args])&lt;/code&gt;) never takes place.</source>
          <target state="translated">같은 통화의 &lt;code&gt;erlang:apply(Fun, Args)&lt;/code&gt; 또는 &lt;code&gt;erlang:apply(Module, Function, Args)&lt;/code&gt; , 호출에 대응하는 비 로컬 함수 핸들러의 호출 &lt;code&gt;erlang:apply/2,3&lt;/code&gt; 자체 ( &lt;code&gt;Func({erlang, apply}, [Fun, Args])&lt;/code&gt; 또는 &lt;code&gt;Func({erlang, apply}, [Module, Function, Args])&lt;/code&gt; )는 절대 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4b1c1d74d7705d44d8883846b238a873f5c24da" translate="yes" xml:space="preserve">
          <source>For capturing named subpatterns which names are not unique, the first matching occurrence (counted from left to right in the subject) is returned from &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt;, if the name is specified in the &lt;code&gt;values&lt;/code&gt; part of the &lt;code&gt;capture&lt;/code&gt; statement. The &lt;code&gt;all_names&lt;/code&gt; capturing value matches all the names in the same way.</source>
          <target state="translated">이름이 고유하지 않은 명명 된 하위 패턴을 캡처하는 경우, 이름이 &lt;code&gt;capture&lt;/code&gt; 명령문 의 &lt;code&gt;values&lt;/code&gt; 부분에 지정된 경우 첫 번째 일치 항목 (주제에서 왼쪽에서 오른쪽으로 계산)이 &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt; 에서 리턴됩니다 . &lt;code&gt;all_names&lt;/code&gt; 캡처 값은 같은 방법으로 모든 이름과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="35e21c83850a30cc93ee87202387d0e914b88c04" translate="yes" xml:space="preserve">
          <source>For checking the output produced by the unit under test, see &lt;code&gt;&lt;a href=&quot;#Macros_for_checking_output&quot;&gt;Macros for checking output&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">테스트중인 장치에서 생성 된 출력을 확인하려면 출력 확인을 &lt;code&gt;&lt;a href=&quot;#Macros_for_checking_output&quot;&gt;Macros for checking output&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9721880d332d89550edc6bc669f5220f714bfab9" translate="yes" xml:space="preserve">
          <source>For clarity, it is recommended not to change the unit size for binaries. Instead, use &lt;code&gt;binary&lt;/code&gt; when you need byte alignment and &lt;code&gt;bitstring&lt;/code&gt; when you need bit alignment.</source>
          <target state="translated">명확성을 위해 바이너리의 단위 크기를 변경하지 않는 것이 좋습니다. 대신 바이트 정렬이 필요할 때는 &lt;code&gt;binary&lt;/code&gt; 를 사용 하고 비트 정렬이 필요할 때는 &lt;code&gt;bitstring&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7d4ed76f96b53451b0ec5a9dc6cdbd5c986c27f4" translate="yes" xml:space="preserve">
          <source>For code exampel see Section &lt;code&gt;&lt;a href=&quot;using_ssh&quot;&gt;SFTP Client with TAR Compression and Encryption&lt;/a&gt;&lt;/code&gt; in the ssh Users Guide.</source>
          <target state="translated">코드 시험은 ssh 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;using_ssh&quot;&gt;SFTP Client with TAR Compression and Encryption&lt;/a&gt;&lt;/code&gt; 된 SFTP 클라이언트 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="965574668ac9a6c1ea46c13a70dd35e8fbc148f0" translate="yes" xml:space="preserve">
          <source>For code examples see Section &lt;code&gt;&lt;a href=&quot;using_ssh#example-with-encryption&quot;&gt;Example with encryption&lt;/a&gt;&lt;/code&gt; in the ssh Users Guide.</source>
          <target state="translated">코드 예제 는 ssh 사용자 가이드의 &lt;code&gt;&lt;a href=&quot;using_ssh#example-with-encryption&quot;&gt;Example with encryption&lt;/a&gt;&lt;/code&gt; 된 예제 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b831a14fa31dd7b2575212b44c3eb2d1e4a2f41" translate="yes" xml:space="preserve">
          <source>For code examples see Section &lt;code&gt;&lt;a href=&quot;using_ssh#sftp-client-with-tar-compression&quot;&gt;SFTP Client with TAR Compression&lt;/a&gt;&lt;/code&gt; in the ssh Users Guide.</source>
          <target state="translated">코드 예제 는 ssh 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;using_ssh#sftp-client-with-tar-compression&quot;&gt;SFTP Client with TAR Compression&lt;/a&gt;&lt;/code&gt; 을 사용하는 SFTP 클라이언트 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="164a850440659e98268b78770e042b4cc1b2c7f2" translate="yes" xml:space="preserve">
          <source>For code replacement of funs to work, use the syntax &lt;code&gt;fun Module:FunctionName/Arity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fun Module:FunctionName/Arity&lt;/code&gt; 을 코드로 대체하려면 fun 모듈 : FunctionName / Arity 구문을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="040bd7743b8323cea447646a8b8ebfc747df6b6d" translate="yes" xml:space="preserve">
          <source>For codecs that does not support partial decode of the version, currently &lt;code&gt;megaco_ber_encoder&lt;/code&gt;, &lt;code&gt;megaco_per_encoder&lt;/code&gt; and &lt;code&gt;megaco_per_bin_encoder&lt;/code&gt;, &lt;code&gt;dynamic&lt;/code&gt; will revert to version 1.</source>
          <target state="translated">버전의 부분 디코딩을 지원하지 않는 코덱 (현재 &lt;code&gt;megaco_ber_encoder&lt;/code&gt; , &lt;code&gt;megaco_per_encoder&lt;/code&gt; 및 &lt;code&gt;megaco_per_bin_encoder&lt;/code&gt; )의 경우 &lt;code&gt;dynamic&lt;/code&gt; 은 버전 1로 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="c6cc781d76a09324b78748dbba382aa38f2839fa" translate="yes" xml:space="preserve">
          <source>For comparison, also included are first, performance figures with megaco (including the measurement software) and asn1 applications hipe-compiled (second figure in the time columns, note that per bin decode had some issues so those figures are not included), and second, performance figures where the flex driver was built as &lt;code&gt;non-reentrant&lt;/code&gt; flex (third figure in the time columns, only valid for text codecs using the flex-scanner, figures within parenthesis).</source>
          <target state="translated">비교를 위해 먼저 megaco (측정 소프트웨어 포함) 및 asn1 응용 프로그램이 힙 컴파일 된 성능 수치 (시간 열의 두 번째 수치, bin 당 디코딩에는 몇 가지 문제가 있으므로 해당 수치는 포함되지 않음)가 포함됩니다. , 플렉스 드라이버가 &lt;code&gt;non-reentrant&lt;/code&gt; 플렉스 (시간 열의 세 번째 숫자, 플렉스 스캐너를 사용하는 텍스트 코덱에만 유효, 괄호 안의 숫자)로 작성된 성능 수치.</target>
        </trans-unit>
        <trans-unit id="50a0ee34e8c29099c4fb0879e19d24fed73970b7" translate="yes" xml:space="preserve">
          <source>For comparison: &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; only fails with &lt;code&gt;badarg&lt;/code&gt; if &lt;code&gt;Port&lt;/code&gt; does not refer to a port or a process. If &lt;code&gt;Port&lt;/code&gt; is a closed port, the data message disappears without a sound. If &lt;code&gt;Port&lt;/code&gt; is open and the calling process is not the port owner, the &lt;strong&gt;port owner&lt;/strong&gt; fails with &lt;code&gt;badsig&lt;/code&gt;. The port owner fails with &lt;code&gt;badsig&lt;/code&gt; also if &lt;code&gt;Data&lt;/code&gt; is an invalid I/O list.</source>
          <target state="translated">비교를 위해 : &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; 만 실패 &lt;code&gt;badarg&lt;/code&gt; 경우 &lt;code&gt;Port&lt;/code&gt; 포트 또는 프로세스를 참조하지 않습니다. 경우 &lt;code&gt;Port&lt;/code&gt; 닫힌 포트는 데이터 메시지는 소리없이 사라집니다. 경우 &lt;code&gt;Port&lt;/code&gt; 열려 있고 호출 프로세스가 포트 소유자가 아닌는 &lt;strong&gt;포트 소유자는&lt;/strong&gt; 실패 &lt;code&gt;badsig&lt;/code&gt; . &lt;code&gt;Data&lt;/code&gt; 가 유효하지 않은 I / O 목록 인 경우에도 포트 소유자가 &lt;code&gt;badsig&lt;/code&gt; 로 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="ebee5051c3e76d9bdf2a6f4bd81612186d082560" translate="yes" xml:space="preserve">
          <source>For comparison: &lt;code&gt;Port ! {self(), close}&lt;/code&gt; only fails with &lt;code&gt;badarg&lt;/code&gt; if &lt;code&gt;Port&lt;/code&gt; does not refer to a port or a process. If &lt;code&gt;Port&lt;/code&gt; is a closed port, nothing happens. If &lt;code&gt;Port&lt;/code&gt; is an open port and the calling process is the port owner, the port replies with &lt;code&gt;{Port, closed}&lt;/code&gt; when all buffers have been flushed and the port really closes. If the calling process is not the port owner, the &lt;strong&gt;port owner&lt;/strong&gt; fails with &lt;code&gt;badsig&lt;/code&gt;.</source>
          <target state="translated">비교를 위해 : &lt;code&gt;Port ! {self(), close}&lt;/code&gt; 만 실패 &lt;code&gt;badarg&lt;/code&gt; 경우 &lt;code&gt;Port&lt;/code&gt; 포트 또는 프로세스를 참조하지 않습니다. 경우 &lt;code&gt;Port&lt;/code&gt; 닫힌 포트는 아무 일도 발생하지 않습니다. 경우 &lt;code&gt;Port&lt;/code&gt; 열려있는 포트입니다 및 호출 프로세스는 포트 소유자와 포트 응답이다 &lt;code&gt;{Port, closed}&lt;/code&gt; 모든 버퍼가 플러시 된 및 포트가 정말 닫습니다. 호출 프로세스가 포트 소유자가 아닌 경우, &lt;strong&gt;포트 소유자는&lt;/strong&gt; 실패 &lt;code&gt;badsig&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="593299d920ab192679bcc7cd62080bf590d02469" translate="yes" xml:space="preserve">
          <source>For comparison: &lt;code&gt;Port ! {self(), {connect, Pid}}&lt;/code&gt; only fails with &lt;code&gt;badarg&lt;/code&gt; if &lt;code&gt;Port&lt;/code&gt; does not refer to a port or a process. If &lt;code&gt;Port&lt;/code&gt; is a closed port, nothing happens. If &lt;code&gt;Port&lt;/code&gt; is an open port and the calling process is the port owner, the port replies with &lt;code&gt;{Port, connected}&lt;/code&gt; to the old port owner. Notice that the old port owner is still linked to the port, while the new is not. If &lt;code&gt;Port&lt;/code&gt; is an open port and the calling process is not the port owner, the &lt;strong&gt;port owner&lt;/strong&gt; fails with &lt;code&gt;badsig&lt;/code&gt;. The port owner fails with &lt;code&gt;badsig&lt;/code&gt; also if &lt;code&gt;Pid&lt;/code&gt; is not an existing local process identifier.</source>
          <target state="translated">비교를 위해 : &lt;code&gt;Port ! {self(), {connect, Pid}}&lt;/code&gt; 만 실패 &lt;code&gt;badarg&lt;/code&gt; 경우 &lt;code&gt;Port&lt;/code&gt; 포트 또는 프로세스를 참조하지 않습니다. 경우 &lt;code&gt;Port&lt;/code&gt; 닫힌 포트는 아무 일도 발생하지 않습니다. 경우 &lt;code&gt;Port&lt;/code&gt; 열려있는 포트이며, 호출 프로세스가 포트 소유자, 포트는로 응답 &lt;code&gt;{Port, connected}&lt;/code&gt; 이전 포트 소유자. 이전 포트 소유자는 여전히 포트에 연결되어 있지만 새 포트 소유자는 그렇지 않습니다. 경우 &lt;code&gt;Port&lt;/code&gt; 열려있는 포트이며, 호출 프로세스가 포트 소유자가 아닌는 &lt;strong&gt;포트 소유자는&lt;/strong&gt; 실패 &lt;code&gt;badsig&lt;/code&gt; . &lt;code&gt;Pid&lt;/code&gt; 인 경우 포트 소유자가 &lt;code&gt;badsig&lt;/code&gt; 로 실패 기존 로컬 프로세스 식별자가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5640f436fd5793d6f6da287d907560cc3be4c959" translate="yes" xml:space="preserve">
          <source>For compatibility with Oniguruma, the non-Perl syntax \g followed by a name or a number enclosed either in angle brackets or single quotes, is alternative syntax for referencing a subpattern as a &quot;subroutine&quot;. Details are discussed later. Notice that \g{...} (Perl syntax) and \g&amp;lt;...&amp;gt; (Oniguruma syntax) are &lt;strong&gt;not&lt;/strong&gt; synonymous. The former is a back reference and the latter is a subroutine call.</source>
          <target state="translated">Oniguruma와의 호환성을 위해, 비 Perl 구문 \ g 다음에 꺾쇠 괄호 또는 작은 따옴표로 묶인 이름 또는 숫자는 서브 패턴을 &quot;서브 루틴&quot;으로 참조하기위한 대체 구문입니다. 자세한 내용은 나중에 설명합니다. \ g {...} (Perl 구문) 및 \ g &amp;lt;...&amp;gt; (Oniguruma 구문)은 동의어 가 &lt;strong&gt;아닙니다&lt;/strong&gt; . 전자는 역 참조이고 후자는 서브 루틴 호출입니다.</target>
        </trans-unit>
        <trans-unit id="730e9890488d0080f62997b20ac443c001d638f7" translate="yes" xml:space="preserve">
          <source>For compatibility with Oniguruma, the non-Perl syntax \g followed by a name or a number enclosed either in angle brackets or single quotes, is alternative syntax for referencing a subpattern as a subroutine, possibly recursively. Here follows two of the examples used above, rewritten using this syntax:</source>
          <target state="translated">Oniguruma와의 호환성을 위해, 비 Perl 구문 \ g 다음에 꺾쇠 괄호 또는 작은 따옴표로 묶인 이름 또는 숫자는 서브 패턴을 서브 루틴으로 참조 할 수있는 대체 구문입니다. 이 구문을 사용하여 다시 작성된 위에서 사용한 두 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="05946ce4f5901b22991c9a3266a8a48f5df2c030" translate="yes" xml:space="preserve">
          <source>For compatibility with Perl, \s did not used to match the VT character (code 11), which made it different from the the POSIX &quot;space&quot; class. However, Perl added VT at release 5.18, and PCRE followed suit at release 8.34. The default \s characters are now HT (9), LF (10), VT (11), FF (12), CR (13), and space (32), which are defined as white space in the &quot;C&quot; locale. This list may vary if locale-specific matching is taking place. For example, in some locales the &quot;non-breaking space&quot; character (\xA0) is recognized as white space, and in others the VT character is not.</source>
          <target state="translated">Perl과의 호환성을 위해 \ s는 VT 문자 (코드 11)와 일치하지 않아 POSIX &quot;space&quot;클래스와 다릅니다. 그러나 Perl은 릴리스 5.18에서 VT를 추가했으며 PCRE는 릴리스 8.34에서 적합했습니다. 기본 \ s 문자는 이제 HT (9), LF (10), VT (11), FF (12), CR (13) 및 공백 (32)이며 &quot;C&quot;로케일에서 공백으로 정의됩니다. . 로케일 별 일치가 발생하면이 목록이 다를 수 있습니다. 예를 들어, 일부 로케일에서 &quot;비 분리 공백&quot;문자 (\ xA0)는 공백으로 인식되고 다른 문자에서는 VT 문자가 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86bf306536e2266a9909d8ea82da455b3654db17" translate="yes" xml:space="preserve">
          <source>For compatibility with Perl, assertion subpatterns can be repeated. However, it makes no sense to assert the same thing many times, the side effect of capturing parentheses can occasionally be useful. In practice, there are only three cases:</source>
          <target state="translated">Perl과의 호환성을 위해 어설 션 하위 패턴을 반복 할 수 있습니다. 그러나 같은 것을 여러 번 주장하는 것은 말이되지 않으며, 괄호 캡처의 부작용은 때때로 유용 할 수 있습니다. 실제로 세 가지 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae8d5f7c0d9e2fe599c2859a73eff31796bbe59e" translate="yes" xml:space="preserve">
          <source>For complete control over the message format use the newer functions &lt;code&gt;&lt;a href=&quot;#enif_select_read&quot;&gt;enif_select_read&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#enif_select_write&quot;&gt;enif_select_write&lt;/a&gt;&lt;/code&gt; introduced in erts-11.0 (OTP-22.0).</source>
          <target state="translated">메시지 형식을 완벽하게 제어하려면 &lt;code&gt;&lt;a href=&quot;#enif_select_write&quot;&gt;enif_select_write&lt;/a&gt;&lt;/code&gt; -11.0 (OTP-22.0)에 도입 된 최신 함수 &lt;code&gt;&lt;a href=&quot;#enif_select_read&quot;&gt;enif_select_read&lt;/a&gt;&lt;/code&gt; 또는 enif_select_write를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="64c32914ac516701dff1644ddf1e404b501ef3b4" translate="yes" xml:space="preserve">
          <source>For computing differences between epochs in time, use the functions counting gregorian days or seconds. If epochs are specified as local time, they must be converted to universal time to get the correct value of the elapsed time between epochs. Use of function &lt;code&gt;time_difference/2&lt;/code&gt; is discouraged.</source>
          <target state="translated">신기원 간의 시간 차이를 계산하려면 그레고리력 일 또는 초를 세는 함수를 사용하십시오. 에포크가 현지 시간으로 지정된 경우 에포크 사이의 경과 시간 값을 올바르게 얻으려면 표준시로 변환해야합니다. &lt;code&gt;time_difference/2&lt;/code&gt; 기능을 사용 하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2051eedd71ed7f48b0213673d174c80adbf4be82" translate="yes" xml:space="preserve">
          <source>For controlling the ContinuationState, to be used in a continuation function, and called when the parser encounters the end of the byte stream. See &lt;code&gt;tutorial&lt;/code&gt; on customization functions.</source>
          <target state="translated">ContinuationState를 제어하기 위해 연속 함수에 사용되며 파서가 바이트 스트림의 끝을 만나면 호출됩니다. 사용자 정의 기능에 대한 &lt;code&gt;tutorial&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dfd04746a63654bd5b3e666b910cea750ac2240a" translate="yes" xml:space="preserve">
          <source>For controlling the EventState, to be used in an event function, and called at the beginning and at the end of a parsed entity. See &lt;code&gt;tutorial&lt;/code&gt; on customization functions.</source>
          <target state="translated">EventState에서 이벤트 함수에 사용되며 구문 분석 된 엔터티의 시작과 끝에서 호출됩니다. 사용자 정의 기능에 대한 &lt;code&gt;tutorial&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0cf9a3644bd2d324573b977d7a3cd2d43f28bc90" translate="yes" xml:space="preserve">
          <source>For controlling the FetchState, to be used in a fetch function, and called when the parser fetch an external resource (eg. a DTD). See &lt;code&gt;tutorial&lt;/code&gt; on customization functions.</source>
          <target state="translated">FetchState를 제어하기 위해 페치 함수에 사용되며 구문 분석기가 외부 자원 (예 : DTD)을 페치 할 때 호출됩니다. 사용자 정의 기능에 대한 &lt;code&gt;tutorial&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="11115a821441ce48dc3cde3d7963736dc9cfff4c" translate="yes" xml:space="preserve">
          <source>For controlling the HookState, to be used in a hook function, and called when the parser has parsed a complete entity. See &lt;code&gt;tutorial&lt;/code&gt; on customization functions.</source>
          <target state="translated">HookState를 제어하기 위해 후크 함수에서 사용되며 구문 분석기가 완전한 엔티티를 구문 분석 할 때 호출됩니다. 사용자 정의 기능에 대한 &lt;code&gt;tutorial&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57e350b69e432539e75adaa6e167427c26d83ea4" translate="yes" xml:space="preserve">
          <source>For controlling the RulesState, to be used in a rules function, and called when the parser store scanner information in a rules database. See &lt;code&gt;tutorial&lt;/code&gt; on customization functions.</source>
          <target state="translated">RulesState를 제어하기 위해 규칙 함수에서 사용되며 구문 분석기가 스캐너 정보를 규칙 데이터베이스에 저장할 때 호출됩니다. 사용자 정의 기능에 대한 &lt;code&gt;tutorial&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41b24c6b9268c87873c4a952d997c2a09dd9bd75" translate="yes" xml:space="preserve">
          <source>For controlling the UserState, to be used in a user function. See &lt;code&gt;tutorial&lt;/code&gt; on customization functions.</source>
          <target state="translated">사용자 기능에 사용되는 UserState를 제어합니다. 사용자 정의 기능에 대한 &lt;code&gt;tutorial&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="403ce6e0468b93b5e90535d63bd768d01a874b4f" translate="yes" xml:space="preserve">
          <source>For convenience, literal strings can be encoded with a Unicode encoding in binaries using the following (or similar) syntax:</source>
          <target state="translated">편의상 리터럴 문자열은 다음 (또는 유사한) 구문을 사용하여 바이너리로 유니 코드 인코딩으로 인코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="348689c67897de282639bc01fb0f4311f7c4287d" translate="yes" xml:space="preserve">
          <source>For convenience, the following built-in filters exist:</source>
          <target state="translated">편의를 위해 다음과 같은 내장 필터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdf5d81272f5d2e9d792a3211e345876676fe903" translate="yes" xml:space="preserve">
          <source>For convenience, the following types are also built-in. They can be thought as predefined aliases for the type unions also shown in the table.</source>
          <target state="translated">편의를 위해 다음 유형도 내장되어 있습니다. 또한 표에 나와있는 형식 공용체에 대해 미리 정의 된 별칭으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="336510eba587b0d9b86302dc9a46d0b19a8db293" translate="yes" xml:space="preserve">
          <source>For convenience, the three most common quantifiers have single-character abbreviations:</source>
          <target state="translated">편의상 가장 일반적인 3 개의 한정자는 단일 문자 약어를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e2a117eab25cf2bd2ed989a4762a9d03d0e8bd2e" translate="yes" xml:space="preserve">
          <source>For conversion functions between character encodings, see the &lt;code&gt;unicode&lt;/code&gt; module.</source>
          <target state="translated">문자 인코딩 간의 변환 기능에 대해서는 &lt;code&gt;unicode&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c574e2ccd773c4e5cd07e86d3df45d28fa13c78" translate="yes" xml:space="preserve">
          <source>For debugging of the compiler, or for pure curiosity, the intermediate code generated by each compiler pass can be inspected. To print a complete list of the options to produce list files, type &lt;code&gt;compile:options()&lt;/code&gt; at the Erlang shell prompt. The options are printed in the order that the passes are executed. If more than one listing option is used, the one representing the earliest pass takes effect.</source>
          <target state="translated">컴파일러 디버깅 또는 순수한 호기심을 위해 각 컴파일러 패스에서 생성 된 중간 코드를 검사 할 수 있습니다. 목록 파일을 생성하는 옵션의 전체 목록을 인쇄하려면 Erlang 쉘 프롬프트에서 &lt;code&gt;compile:options()&lt;/code&gt; 를 입력하십시오. 패스가 실행되는 순서대로 옵션이 인쇄됩니다. 둘 이상의 리스팅 옵션을 사용하는 경우 가장 빠른 패스를 나타내는 옵션이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="083d869a1217519260e609e64608ee932fb600ec" translate="yes" xml:space="preserve">
          <source>For debugging purposes only. Displays the single argument as an Erlang term on &lt;code&gt;stdout&lt;/code&gt;, which is seldom what is wanted. Returns &lt;code&gt;true&lt;/code&gt; and can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">디버깅 목적으로 만 사용하십시오. &lt;code&gt;stdout&lt;/code&gt; 에서 단일 인수를 Erlang 용어로 표시합니다 . &lt;code&gt;true&lt;/code&gt; 를 반환 하고 추적 할 때 &lt;code&gt;MatchBody&lt;/code&gt; 부분 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b790a4fb3bed40f6af193c3f73758ef2ee0ea410" translate="yes" xml:space="preserve">
          <source>For declaring test case groups. (Optional)</source>
          <target state="translated">테스트 사례 그룹을 선언합니다. (선택 과목)</target>
        </trans-unit>
        <trans-unit id="eaa2fe98604ffa030951d793b4df5852014e2fd5" translate="yes" xml:space="preserve">
          <source>For decryption, set the &lt;code&gt;EncryptFlag&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and put the tag to be checked in the argument &lt;code&gt;TagOrTagLength&lt;/code&gt;.</source>
          <target state="translated">복호화의 경우 &lt;code&gt;EncryptFlag&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하고 &lt;code&gt;TagOrTagLength&lt;/code&gt; 인수에 검사 할 태그를 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="ff3222a88e9d91cf61acd6a4739d98cfcfb34276" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;agent_config_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;agent_config_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="84861df3ca723a34b99d72fbfae9f8b7b241cc7d" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;agent_discovery_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;agent_discovery_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d40bd68714a5aaca703a2748e02ad1469d6aca8" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;agent_net_if_filter_option()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;agent_net_if_filter_option()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b92981402ebc90d5688d2afdab5e725056da346a" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;agent_net_if_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;agent_net_if_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f45267774dbe0b5930e228e12059552f25154a0e" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;agent_net_if_option()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;agent_net_if_option()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="db50831261c3c48c71c29d508af07a29aff37599" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;local_db_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;local_db_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dccaa9f35fb5f6175cb2ec8c77a35dcb47a1ea55" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;manager_config_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;manager_config_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eea7c21272ecb28368b763cf0d5ac86e0f5e87a3" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;manager_net_if_filter_option()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;manager_net_if_filter_option()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bbbd2cc919d5e6ada231a945754598ed854354e" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;manager_net_if_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;manager_net_if_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="90f2ba0512d041ff4b3ab3504aba4ef825648055" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;manager_net_if_option()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;manager_net_if_option()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb391d806d1a6b81968a3f8031a26e219be00242" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;mib_server_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;mib_server_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="16f01d90f4b18b174f0f3f4aec98eeb3f08c147d" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;mibs_cache_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;mibs_cache_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a20ae37267ce423aee1e8a02ee385ec4af4b083" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;note_store_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;note_store_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0314e200cbd632937d3c97fc2a06a0662df95b58" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;symbolic_store_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;symbolic_store_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cebd31564644639b47dd25de80a9f4a68e96dc5c" translate="yes" xml:space="preserve">
          <source>For defaults see the options in &lt;code&gt;target_cache_opt()&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;target_cache_opt()&lt;/code&gt; 의 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8a880ed6d702dad59f4041fad1153670da2c64d" translate="yes" xml:space="preserve">
          <source>For demonstration purposes we used &lt;code&gt;prepend&lt;/code&gt; instead of &lt;code&gt;append&lt;/code&gt;. This forces the negotiation to select &lt;code&gt;ssh-dss&lt;/code&gt; since the the full list of public key algorithms was &lt;code&gt;['ssh-dss','ecdsa-sha2-nistp256']&lt;/code&gt;. Normally it is safer to append a non-default algorithm.</source>
          <target state="translated">데모 목적 으로 &lt;code&gt;append&lt;/code&gt; 대신 &lt;code&gt;prepend&lt;/code&gt; 를 사용했습니다 . 공개 키 알고리즘의 전체 목록이 &lt;code&gt;['ssh-dss','ecdsa-sha2-nistp256']&lt;/code&gt; 이기 때문에 협상에서 &lt;code&gt;ssh-dss&lt;/code&gt; 를 선택 하도록합니다 . 일반적으로 기본값이 아닌 알고리즘을 추가하는 것이 더 안전합니다.</target>
        </trans-unit>
        <trans-unit id="28398d4e33caf2a09f186db79e9f736f143f9d79" translate="yes" xml:space="preserve">
          <source>For description see &lt;code&gt; X509 certificates records&lt;/code&gt;</source>
          <target state="translated">설명은 &lt;code&gt; X509 certificates records&lt;/code&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6445c6affc4bffb24e4424ab077f430365c17f6e" translate="yes" xml:space="preserve">
          <source>For detailed information about the Event Tracer, see the &lt;code&gt;ET&lt;/code&gt; application.</source>
          <target state="translated">Event Tracer에 대한 자세한 정보는 &lt;code&gt;ET&lt;/code&gt; 애플리케이션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="171152cb78f05ee26524cebb400639d4987b47a0" translate="yes" xml:space="preserve">
          <source>For detailed information about the SSH protocol, refer to the following Request for Comments(RFCs):</source>
          <target state="translated">SSH 프로토콜에 대한 자세한 내용은 다음 RFC (Request for Comments)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4b875f8f78dba0756377d341a130c0b2a7e6e33c" translate="yes" xml:space="preserve">
          <source>For details about Erlang Top, see the &lt;code&gt;&lt;a href=&quot;etop_ug&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlang Top에 대한 자세한 내용은 사용 &lt;code&gt;&lt;a href=&quot;etop_ug&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bac6068a1ebbf8e436d9bd86561e70e6d60b4ea6" translate="yes" xml:space="preserve">
          <source>For details about applications and behaviours, see &lt;code&gt;OTP Design Principles&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 및 동작에 대한 자세한 내용은 &lt;code&gt;OTP Design Principles&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8f29ef606397e10efc288884155eb4305852446" translate="yes" xml:space="preserve">
          <source>For details about data type &lt;code&gt;datetime()&lt;/code&gt;, see &lt;code&gt;calendar:datetime()&lt;/code&gt;.</source>
          <target state="translated">데이터 유형 &lt;code&gt;datetime()&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;calendar:datetime()&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32bcd9f127fdfd1f15f412e5f2daba79d320c1fb" translate="yes" xml:space="preserve">
          <source>For details about data type &lt;code&gt;mp()&lt;/code&gt;, see &lt;code&gt;re:mp()&lt;/code&gt;.</source>
          <target state="translated">데이터 유형 &lt;code&gt;mp()&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;re:mp()&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae5e276102c50f005ae1c3a533ecacc466922af1" translate="yes" xml:space="preserve">
          <source>For details about how to get started with the Crashdump Viewer, see the &lt;code&gt;&lt;a href=&quot;crashdump_ug&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Crashdump Viewer를 시작하는 방법에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;crashdump_ug&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="899357a1eae00db099216e28c17f515790cf90eb" translate="yes" xml:space="preserve">
          <source>For details about how to get started, see the &lt;code&gt;&lt;a href=&quot;observer_ug&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">시작하는 방법에 대한 자세한 내용은 사용 &lt;code&gt;&lt;a href=&quot;observer_ug&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="79e6ca59ea547899bda9996ce27d3452632b9148" translate="yes" xml:space="preserve">
          <source>For details about parameter &lt;code&gt;RegExp&lt;/code&gt;, see &lt;code&gt;rb:grep/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; 매개 변수에 대한 자세한 내용 은 &lt;code&gt;rb:grep/1&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fa1bc1e0bc17840dc036fc4f1aea9cfdce586da" translate="yes" xml:space="preserve">
          <source>For details about test case groups, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트 사례 그룹에 대한 자세한 내용은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a48e8807029cdac866ab40035364cb9a3d6a8ce" translate="yes" xml:space="preserve">
          <source>For details about test case implementation, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_cases&quot;&gt;Test Cases&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트 사례 구현에 대한 자세한 내용은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_cases&quot;&gt;Test Cases&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="40a0b727ab589bf313ea117ebdd948eb5c1ca42c" translate="yes" xml:space="preserve">
          <source>For details about the &lt;code&gt;Common Test&lt;/code&gt; Master API, see module &lt;code&gt;&lt;a href=&quot;ct_master&quot;&gt;ct_master&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; Master API 에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;ct_master&quot;&gt;ct_master&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1887bded0de50577321581a4a431854ae7b61bd9" translate="yes" xml:space="preserve">
          <source>For details about the &lt;code&gt;PosLen&lt;/code&gt; semantics, see &lt;code&gt;binary(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PosLen&lt;/code&gt; 의미 에 대한 자세한 내용 은 &lt;code&gt;binary(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e33fb72fc001570559079ceb38a7c5266857a489" translate="yes" xml:space="preserve">
          <source>For details about the data format for the string values, see &quot;XML Schema for Event Notifications&quot; in RFC 5277.</source>
          <target state="translated">문자열 값의 데이터 형식에 대한 자세한 내용은 RFC 5277의 &quot;이벤트 알림을위한 XML 스키마&quot;를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be68a23f740892cf4e122902d4f90a8f17de5c15" translate="yes" xml:space="preserve">
          <source>For details about the match specifications, see &quot;Match Specifications in Erlang&quot; in &lt;code&gt;ERTS&lt;/code&gt; User's Guide. For more information, see the &lt;code&gt;ets&lt;/code&gt; and &lt;code&gt;dets&lt;/code&gt; manual pages in &lt;code&gt;STDLIB&lt;/code&gt;.</source>
          <target state="translated">일치 사양에 대한 자세한 내용은 &lt;code&gt;ERTS&lt;/code&gt; 사용 설명서의 &quot;Erlang의 일치 사양&quot;을 참조하십시오 . 자세한 내용은 참조 &lt;code&gt;ets&lt;/code&gt; 하고 &lt;code&gt;dets&lt;/code&gt; 의 매뉴얼 페이지 &lt;code&gt;STDLIB&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="a271fcda41f6b4218e112f779f05687200d0f3a8" translate="yes" xml:space="preserve">
          <source>For details about the stack trace, see section &lt;code&gt;Errors and Error Handling&lt;/code&gt; in the Erlang Reference Manual.</source>
          <target state="translated">스택 추적에 대한 자세한 내용은 Erlang 참조 매뉴얼의 &lt;code&gt;Errors and Error Handling&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="138e437947e159dc0add79e29583c52042a9c821" translate="yes" xml:space="preserve">
          <source>For details about the syntax and contents of the application resource file, see the &lt;code&gt;app&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">응용 프로그램 리소스 파일의 구문과 내용에 대한 자세한 내용은 커널 의 &lt;code&gt;app&lt;/code&gt; 설명서 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44c14d9703bf23430f40c01259d719e683e69c28" translate="yes" xml:space="preserve">
          <source>For details about the syntax and contents of the release upgrade file, see the &lt;code&gt;relup(4)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">릴리스 업그레이드 파일의 구문과 내용에 대한 자세한 내용은 SASL 의 &lt;code&gt;relup(4)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d21d98d7cce6ef6ee373d7ce6c34ff4ae40d8a06" translate="yes" xml:space="preserve">
          <source>For details about the test case group information function, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#group_info&quot;&gt;Group Information Function&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트 케이스 그룹 정보 기능에 대한 자세한 내용은 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#group_info&quot;&gt;Group Information Function&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b818faace89153ebe81c60589d23227618e0df0" translate="yes" xml:space="preserve">
          <source>For details about the test case information function, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트 케이스 정보 기능에 대한 자세한 내용은 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5f6593fe8b2cf2a8e87bbafd4cce9c1ba477881" translate="yes" xml:space="preserve">
          <source>For details about the test suite information function, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#suite&quot;&gt;Test Suite Information Function&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트 스위트 정보 기능에 대한 자세한 내용은 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#suite&quot;&gt;Test Suite Information Function&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c31fa8671127a3c1821402e47f31541f3754c9e" translate="yes" xml:space="preserve">
          <source>For details about these functions, see module &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이러한 기능에 대한 자세한 내용은 모듈 &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e3bbf08c8f35a6b7f8ee774406dbca46718861f" translate="yes" xml:space="preserve">
          <source>For details about tracing, see module &lt;code&gt;dbg&lt;/code&gt; in application Runtime_Tools and in section &quot;Match specifications in Erlang&quot; in &lt;code&gt;ERTS User's Guide&lt;/code&gt; and in module &lt;code&gt;ms_transform&lt;/code&gt; in application STDLIB.</source>
          <target state="translated">추적에 대한 자세한 내용은 모듈 참조 &lt;code&gt;dbg&lt;/code&gt; 애플리케이션 Runtime_Tools 및 섹션 &quot;얼랑의 일치 사양&quot;에 &lt;code&gt;ERTS User's Guide&lt;/code&gt; 및 모듈의 &lt;code&gt;ms_transform&lt;/code&gt; 애플리케이션 STDLIB에 있습니다.</target>
        </trans-unit>
        <trans-unit id="89973f9ed6ee290a1842b2801fae8a951d38f10b" translate="yes" xml:space="preserve">
          <source>For details about when &lt;code&gt;init&lt;/code&gt; is called, see section &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#scope&quot;&gt;CTH Scope&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 호출 시점에 대한 자세한 내용은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#scope&quot;&gt;CTH Scope&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4636f139120afd63566c050f91d451e4b6b2a8ad" translate="yes" xml:space="preserve">
          <source>For details of what to put in the list of configured services, see the documentation for the services to be configured.</source>
          <target state="translated">구성된 서비스 목록에 넣을 내용에 대한 자세한 내용은 구성 할 서비스 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c23d3bcfaed6b2dccdffa572458e10e3096121a9" translate="yes" xml:space="preserve">
          <source>For details on &lt;code&gt;Category&lt;/code&gt; and &lt;code&gt;Importance&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging - Categories and Verbosity Levels&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;Category&lt;/code&gt; 및 &lt;code&gt;Importance&lt;/code&gt; 에 대한 자세한 내용 은 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging - Categories and Verbosity Levels&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dacb99db57b71a484f334d9fdd274f16f6726be9" translate="yes" xml:space="preserve">
          <source>For details on &lt;code&gt;Category&lt;/code&gt;, &lt;code&gt;Importance&lt;/code&gt; and the &lt;code&gt;no_css&lt;/code&gt; option, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt; Logging - Categories and Verbosity Levels&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;Category&lt;/code&gt; , &lt;code&gt;Importance&lt;/code&gt; 및 &lt;code&gt;no_css&lt;/code&gt; 옵션 에 대한 자세한 내용 은 User 's Guide의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt; Logging - Categories and Verbosity Levels&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2546ece3029f5c5194a86bac3c5af22c2e186c6b" translate="yes" xml:space="preserve">
          <source>For details on &lt;code&gt;Category&lt;/code&gt;, &lt;code&gt;Importance&lt;/code&gt; and the &lt;code&gt;no_css&lt;/code&gt; option, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging - Categories and Verbosity Levels&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;Category&lt;/code&gt; , &lt;code&gt;Importance&lt;/code&gt; 및 &lt;code&gt;no_css&lt;/code&gt; 옵션 에 대한 자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging - Categories and Verbosity Levels&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6be3e9eabd37a487f0994459fc3cbf4909093f7b" translate="yes" xml:space="preserve">
          <source>For details on DES3 encryption/decryption, see application &lt;code&gt;Crypto&lt;/code&gt;.</source>
          <target state="translated">DES3 암호화 / 암호 해독에 대한 자세한 내용은 응용 프로그램 &lt;code&gt;Crypto&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="19790c66eac8b8149373170ffe626274d7a0faef" translate="yes" xml:space="preserve">
          <source>For details on argument &lt;code&gt;End&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;#receive_response-4&quot;&gt;ct_ssh:receive_response/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;End&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;#receive_response-4&quot;&gt;ct_ssh:receive_response/4&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed0968b3521edeec578b507a5df8d3e79632c467" translate="yes" xml:space="preserve">
          <source>For details on groups, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">그룹에 대한 자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59e603320cc709cc0de73d15ed298405a2e712a6" translate="yes" xml:space="preserve">
          <source>For details on the &lt;code&gt;Line&lt;/code&gt;, &lt;code&gt;Column&lt;/code&gt; and &lt;code&gt;Indentation&lt;/code&gt; fields, and the behaviour in case of errors, see &lt;code&gt;recomment_forms/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Line&lt;/code&gt; , &lt;code&gt;Column&lt;/code&gt; 및 &lt;code&gt;Indentation&lt;/code&gt; 필드 및 오류 발생시 동작에 대한 자세한 내용 은 &lt;code&gt;recomment_forms/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed45688d1db7bb624e082bb1f29526e589cc0201" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt; erlang:phash2/1&lt;/code&gt;, &lt;code&gt; erlang:node/0&lt;/code&gt;, &lt;code&gt; erlang:monotonic_time/0&lt;/code&gt;, and &lt;code&gt; erlang:unique_integer/0&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt; erlang:phash2/1&lt;/code&gt; , &lt;code&gt; erlang:node/0&lt;/code&gt; , &lt;code&gt; erlang:monotonic_time/0&lt;/code&gt; 및 &lt;code&gt; erlang:unique_integer/0&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="469124f715f9b683fa6d3c5219b91598fa947fcc" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a8a35743195f9f850427480c9d3d4d5c06b5590" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;&lt;a href=&quot;#cmd-3&quot;&gt;ct_telnet:cmd/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#cmd-3&quot;&gt;ct_telnet:cmd/3&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c509baf68f401ccca39a1b877c719a2b63cea81" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;&lt;a href=&quot;#scan_format-2&quot;&gt;scan_format/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#scan_format-2&quot;&gt;scan_format/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54afea058fcafa74da026238adfbfab5c3aa86e8" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;ct_telnet:send/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;ct_telnet:send/3&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="48cc6739ccc2ce48172408162457a00398636369" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;&lt;a href=&quot;#tracer-2&quot;&gt;tracer/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#tracer-2&quot;&gt;tracer/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="15514fdb059fd0494f5aea2d8386e88c47fcdbb6" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; manual page.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="298eca0f5140b702a4589aa73123f3f98bccf5bb" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;&lt;a href=&quot;run_test_chapter#group_execution&quot;&gt;Test Case Group Execution&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;run_test_chapter#group_execution&quot;&gt;Test Case Group Execution&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0755e0b6f69f3dd473c8740d2b85f8ca8ff8de86" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Atoms&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Atoms&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8097d968e43a05f326314e542635f3763063bab2" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Distribution Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Distribution Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e088ed43d5389ee2ecbe565decec6d377352f12c" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;ETS Tables&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;ETS Tables&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9da2623d4fbf8ac586cd0307efb4d7f2fa6a77cc" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Fun Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Fun Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dca372597b55827ea091211926eb36c9070a6224" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;General Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;General Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="766cfda9d1e6665eb2759dcc5bd8619505dc1140" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Internal Table Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Internal Table Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="804edff11886f59f823c352b1e6052a674eadab0" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Loaded Module Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션에서 &lt;code&gt;Loaded Module Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="06c8e519136950826aa647d43495dc248a115351" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Port Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Port Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ffdf9b398c0155d2ea00e87f1329daeacfa33cb" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Process Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Process Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="502d2ab1d7b882002266fa4fac42580118bf535c" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Scheduler Information&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Scheduler Information&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="168521a46eb670fe3b053521501868055c70fe61" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;Timers&lt;/code&gt; in section &quot;How to Interpret the Erlang Crash Dumps&quot; in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS의 &quot;Erlang 크래시 덤프 해석 방법&quot;섹션의 &lt;code&gt;Timers&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="202d3baeeca05fcc60605dc66b98bc0b67e71947" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;beam_lib(3)&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;beam_lib(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="072abc661bf08afe2db5496eab9a5cfcb83563f4" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;erlang:phash2/1&lt;/code&gt;, &lt;code&gt;erlang:node/0&lt;/code&gt;, &lt;code&gt;erlang:monotonic_time/0&lt;/code&gt;, and &lt;code&gt;erlang:unique_integer/0&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;erlang:phash2/1&lt;/code&gt; , &lt;code&gt;erlang:node/0&lt;/code&gt; , &lt;code&gt;erlang:monotonic_time/0&lt;/code&gt; 및 &lt;code&gt;erlang:unique_integer/0&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72c8b0fc47441216f966c6273056d83d831aae75" translate="yes" xml:space="preserve">
          <source>For details, see Section &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt; BIT STRING&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">자세한 내용 은 사용자 가이드의 섹션 &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt; BIT STRING&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="73b374bd0455a8d791c2bea5ddbeb1eaf4f21223" translate="yes" xml:space="preserve">
          <source>For details, see Section &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt;BIT STRING&lt;/a&gt;&lt;/code&gt; and Section &lt;code&gt;&lt;a href=&quot;asn1_getting_started#OCTET%20STRING&quot;&gt;OCTET STRING&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt;BIT STRING&lt;/a&gt;&lt;/code&gt; 섹션 및 &lt;code&gt;&lt;a href=&quot;asn1_getting_started#OCTET%20STRING&quot;&gt;OCTET STRING&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="217c4f1cfc030c7dfa1dbe5e383263094b81f05e" translate="yes" xml:space="preserve">
          <source>For details, see Section &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt;BIT STRING&lt;/a&gt;&lt;/code&gt; in the User's Guide</source>
          <target state="translated">자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt;BIT STRING&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="93d250b898a18bfc5f0fad367a1f9e70809563e6" translate="yes" xml:space="preserve">
          <source>For details, see Section &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt;BIT STRING&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;asn1_getting_started#BIT%20STRING&quot;&gt;BIT STRING&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fa4cd50dd07609dd2697c513c2a01c2b774cb49" translate="yes" xml:space="preserve">
          <source>For details, see Section &lt;code&gt;&lt;a href=&quot;asn1_getting_started#MAP_SEQ_SET&quot;&gt; Map representation for SEQUENCE and SET&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">자세한 내용 은 사용자 가이드의 &lt;code&gt;&lt;a href=&quot;asn1_getting_started#MAP_SEQ_SET&quot;&gt; Map representation for SEQUENCE and SET&lt;/a&gt;&lt;/code&gt; 에 대한 섹션 맵 표현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3bbc4d42aba9774465d68eb335a767d2773b5cf9" translate="yes" xml:space="preserve">
          <source>For details, see Section &lt;code&gt;&lt;a href=&quot;asn1_getting_started#MAP_SEQ_SET&quot;&gt;Map representation for SEQUENCE and SET&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;asn1_getting_started#MAP_SEQ_SET&quot;&gt;Map representation for SEQUENCE and SET&lt;/a&gt;&lt;/code&gt; 에 대한 섹션 맵 표현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="80b2948ad6c81efc53305d33dd65730ac1180ae1" translate="yes" xml:space="preserve">
          <source>For details, see section &lt;code&gt;&lt;a href=&quot;run_test_chapter#silent_connections&quot;&gt;Silent Connections&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;run_test_chapter#silent_connections&quot;&gt;Silent Connections&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2400bd1a63d12df40df23d9a81e57d80a9aeb9a8" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#+SP&quot;&gt;+SP&lt;/a&gt;&lt;/code&gt;. By default, the number of dirty CPU scheduler threads created equals the number of normal scheduler threads created, and the number of dirty CPU scheduler threads online equals the number of normal scheduler threads online. &lt;code&gt;DirtyCPUSchedulers&lt;/code&gt; can be omitted if &lt;code&gt;:DirtyCPUSchedulersOnline&lt;/code&gt; is not and conversely. The number of dirty CPU schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#+SP&quot;&gt;+SP&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . 기본적으로 생성 된 더티 CPU 스케줄러 스레드의 수는 생성 된 일반 스케줄러 스레드의 수와 같고 온라인 더티 CPU 스케줄러 스레드의 수는 온라인의 일반 스케줄러 스레드 수와 같습니다. &lt;code&gt;:DirtyCPUSchedulersOnline&lt;/code&gt; 이 아닌 경우 &lt;code&gt;DirtyCPUSchedulers&lt;/code&gt; 를 생략 할 수 있습니다 . 온라인 더티 CPU 스케줄러의 수는 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; 통해 런타임에 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b370dd745b456b7e88f83739b27a0b35c4b24e00" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#+SP&quot;&gt;+SP&lt;/a&gt;&lt;/code&gt;. By default, the number of dirty CPU scheduler threads created equals the number of normal scheduler threads created, and the number of dirty CPU scheduler threads online equals the number of normal scheduler threads online. &lt;code&gt;DirtyCPUSchedulers&lt;/code&gt; can be omitted if &lt;code&gt;:DirtyCPUSchedulersOnline&lt;/code&gt; is not and conversely. The number of dirty CPU schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#+SP&quot;&gt;+SP&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . 기본적으로 작성된 더티 CPU 스케줄러 스레드 수는 작성된 일반 스케줄러 스레드 수와 같고 더티 CPU 스케줄러 스레드 온라인 수는 온라인으로 일반 스케줄러 스레드 수와 같습니다. &lt;code&gt;DirtyCPUSchedulers&lt;/code&gt; 는 &lt;code&gt;:DirtyCPUSchedulersOnline&lt;/code&gt; 이 아닌 경우 생략 할 수 있습니다 . 더티 CPU 스케줄러 온라인의 수는 런타임시 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; 통해 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ebe124055e510d22a0179eef775c6a61115b777" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/corba&quot;&gt;corba repository&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/corba&quot;&gt;corba repository&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2619396b11706b1a73c4c9ddbc396b10ac82c85c" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;erlc(1)&lt;/code&gt; manual page in ERTS and &lt;code&gt;compile(3)&lt;/code&gt; manual page in Compiler.</source>
          <target state="translated">자세한 내용 은 ERTS 의 &lt;code&gt;erlc(1)&lt;/code&gt; 매뉴얼 페이지와 &lt;code&gt;compile(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dc866dea1657840af5a547bdf04bc412f9ef2299" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;gen_statem(3)&lt;/code&gt; manual page for type &lt;code&gt;action()&lt;/code&gt;. You can, for example, reply to many callers, generate multiple next events, and set a time-out to use absolute instead of relative time (using the &lt;code&gt;Opts&lt;/code&gt; field).</source>
          <target state="translated">자세한 내용은 &lt;code&gt;action()&lt;/code&gt; 유형에 대한 &lt;code&gt;gen_statem(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오 . 당신은, 예를 들어, 많은 발신자에게 답장을 여러 다음 이벤트를 생성하고, 상대 시간으로합니다 (사용 절대 대신 사용 시간을 초과 설정할 수 있습니다 &lt;code&gt;Opts&lt;/code&gt; 필드).</target>
        </trans-unit>
        <trans-unit id="382cebeda02a4d2bac976684cc0874fe69825df7" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;ic&lt;/code&gt; manual page in IC.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;ic&lt;/code&gt; 의 ic 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0b50080589932fc3d03c17dea519f0c0eda9b55" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;init(3)&lt;/code&gt; manual page in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS 의 &lt;code&gt;init(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6448e1f1923abc28bd9f8e6f6307f6bf662429dc" translate="yes" xml:space="preserve">
          <source>For details, see the &lt;code&gt;unicode&lt;/code&gt; module in STDLIB.</source>
          <target state="translated">자세한 내용 은 STDLIB 의 &lt;code&gt;unicode&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="35adc1f25ee898043c979d16ceb1a2560e66dcae" translate="yes" xml:space="preserve">
          <source>For disk files, the encoding can be set to various UTF variants. This has the effect that data is expected to be read as the specified encoding from the file, and the data is written in the specified encoding to the disk file.</source>
          <target state="translated">디스크 파일의 경우 인코딩을 다양한 UTF 변형으로 설정할 수 있습니다. 이는 데이터가 파일에서 지정된 인코딩으로 읽히고 데이터가 지정된 인코딩으로 디스크 파일에 기록되는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5212c20e4e3eae0d6d9a7923cd2762aafa081944" translate="yes" xml:space="preserve">
          <source>For distribution of application control to work properly, the nodes where a distributed application can run must contact each other and negotiate where to start the application. This is done using the following configuration parameters in Kernel:</source>
          <target state="translated">응용 프로그램 제어 배포가 제대로 작동하려면 분산 응용 프로그램을 실행할 수있는 노드가 서로 연락하고 응용 프로그램을 시작할 위치를 협상해야합니다. 이는 커널에서 다음 구성 매개 변수를 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="74f6709e85adfa5ce96a1804a31662fa7d135c56" translate="yes" xml:space="preserve">
          <source>For each &lt;code&gt;ifaddrs&lt;/code&gt; entry, return either &lt;code&gt;true&lt;/code&gt; to keep the entry or &lt;code&gt;false&lt;/code&gt; to discard the entry.</source>
          <target state="translated">각 &lt;code&gt;ifaddrs&lt;/code&gt; 항목에 대해 항목 을 유지하려면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 항목 을 삭제하려면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a1725e8adc899a0a736d649f24a5d0e212c3b6ec" translate="yes" xml:space="preserve">
          <source>For each &lt;strong&gt;manager user&lt;/strong&gt;, the manager needs some information. This information is either added in the &lt;code&gt;users.conf&lt;/code&gt; config file or by calling the &lt;code&gt;&lt;a href=&quot;snmpm#register_user&quot;&gt;register_user&lt;/a&gt;&lt;/code&gt; function in run-time.</source>
          <target state="translated">각 &lt;strong&gt;관리자 사용자&lt;/strong&gt; 마다 &lt;strong&gt;관리자&lt;/strong&gt; 에게 정보가 필요합니다. 이 정보는 &lt;code&gt;users.conf&lt;/code&gt; 구성 파일에 추가 되거나 &lt;code&gt;&lt;a href=&quot;snmpm#register_user&quot;&gt;register_user&lt;/a&gt;&lt;/code&gt; 함수를 런타임 에 호출하여 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="2e6fe3d3ebcae21a711822eaf5ee2951e6cc4014" translate="yes" xml:space="preserve">
          <source>For each breakpoint, a corresponding entry is added to the &lt;strong&gt;Break&lt;/strong&gt; menu, from which it is possible to disable, enable, or delete the breakpoint, and to change its trigger action.</source>
          <target state="translated">각 중단 점에 대해 해당 항목이 &lt;strong&gt;중단&lt;/strong&gt; 메뉴에 추가되어 중단 점 을 비활성화, 활성화 또는 삭제하고 트리거 조치를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="353d2ecaa3c9e74aa975c6aaba599f667bb48cdc" translate="yes" xml:space="preserve">
          <source>For each chunk, the identifier (string) and the position and size of the chunk data, in bytes.</source>
          <target state="translated">각 청크에 대해 식별자 (문자열)와 청크 데이터의 위치 및 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="ccb1841bba20b2787d833e01f30b179b87709384" translate="yes" xml:space="preserve">
          <source>For each directory on the second level in the application archive (&lt;code&gt;ebin&lt;/code&gt;, &lt;code&gt;priv&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt;, and so on), the code server first chooses the regular directory if it exists and second from the archive. Function &lt;code&gt;code:lib_dir/2&lt;/code&gt; returns the path to the subdirectory. For example, &lt;code&gt;code:lib_dir(megaco,ebin)&lt;/code&gt; can return &lt;code&gt;/otp/root/lib/megaco-3.9.1.1.ez/megaco-3.9.1.1/ebin&lt;/code&gt; while &lt;code&gt;code:lib_dir(megaco,priv)&lt;/code&gt; can return &lt;code&gt;/otp/root/lib/megaco-3.9.1.1/priv&lt;/code&gt;.</source>
          <target state="translated">애플리케이션 아카이브의 두 번째 레벨 ( &lt;code&gt;ebin&lt;/code&gt; , &lt;code&gt;priv&lt;/code&gt; , &lt;code&gt;src&lt;/code&gt; 등)의 각 디렉토리에 대해 코드 서버는 먼저 일반 디렉토리가있는 경우이를 선택하고 아카이브에서 두 번째 디렉토리를 선택합니다. 함수 &lt;code&gt;code:lib_dir/2&lt;/code&gt; 는 서브 디렉토리에 대한 경로를 리턴합니다. 예를 들어 &lt;code&gt;code:lib_dir(megaco,ebin)&lt;/code&gt; 은 &lt;code&gt;/otp/root/lib/megaco-3.9.1.1.ez/megaco-3.9.1.1/ebin&lt;/code&gt; 을 반환 하고 &lt;code&gt;code:lib_dir(megaco,priv)&lt;/code&gt; 은 &lt;code&gt;/otp/root/lib/megaco-3.9.1.1/priv&lt;/code&gt; 반환 할 수 있습니다 /lib/megaco-3.9.1.1/priv .</target>
        </trans-unit>
        <trans-unit id="5e72d5ef95479fb7446d1872f18076bb4f1994fc" translate="yes" xml:space="preserve">
          <source>For each entry in Docs, we have:</source>
          <target state="translated">문서의 각 항목에 대해 다음이 있습니다.</target>
        </trans-unit>
        <trans-unit id="87e62edc53d1f26c666b800f9d3034fd4444e9e6" translate="yes" xml:space="preserve">
          <source>For each format specifier included in &lt;code&gt;FormatStr&lt;/code&gt;, there must be a corresponding argument following &lt;code&gt;FormatStr&lt;/code&gt;. An Erlang term is built according to &lt;code&gt;FormatStr&lt;/code&gt; with values and Erlang terms substituted from the corresponding arguments, and according to the individual format specifiers. For example:</source>
          <target state="translated">에 포함 된 각 형식 지정자의 경우 &lt;code&gt;FormatStr&lt;/code&gt; , 다음 해당 인수가 있어야합니다 &lt;code&gt;FormatStr&lt;/code&gt; . Erlang 용어는 값과 Erlang 용어가 해당 인수로 대체 된 &lt;code&gt;FormatStr&lt;/code&gt; 및 개별 형식 지정자에 따라 작성됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a17fe47c370a4a63c0a391449d8c5bc39c7358f2" translate="yes" xml:space="preserve">
          <source>For each host, where a distributed Erlang node is running, also an EPMD is to be running. The EPMD can be started explicitly or automatically as a result of the Erlang node startup.</source>
          <target state="translated">분산 Erlang 노드가 실행중인 각 호스트에 대해 EPMD도 실행됩니다. Erlang 노드 시작의 결과로 EPMD를 명시 적 또는 자동으로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68f5bdd45cb5d9da808946db4bef38e2db2f6fdb" translate="yes" xml:space="preserve">
          <source>For each interpreted module, a corresponding entry is added to the &lt;strong&gt;Module&lt;/strong&gt; menu, with the following submenu:</source>
          <target state="translated">해석 된 각 모듈에 대해 다음 하위 메뉴와 함께 해당 항목이 &lt;strong&gt;모듈&lt;/strong&gt; 메뉴에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="ee76ca52512d4731b6ffdf983417e21a70aaa4e8" translate="yes" xml:space="preserve">
          <source>For each new process we create, we insert an item in an &lt;code&gt;snmp_index&lt;/code&gt; structure:</source>
          <target state="translated">우리가 만드는 새로운 프로세스마다 &lt;code&gt;snmp_index&lt;/code&gt; 구조에 항목을 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="943f5ab22017cf24f7aafd70dc074d284b653b23" translate="yes" xml:space="preserve">
          <source>For each open disk log, one process handles requests made to the disk log. This process is created when &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open/1&lt;/a&gt;&lt;/code&gt; is called, provided there exists no process handling the disk log. A process that opens a disk log can be an &lt;strong&gt;owner&lt;/strong&gt; or an anonymous &lt;strong&gt;user&lt;/strong&gt; of the disk log. Each owner is linked to the disk log process, and an owner can close the disk log either explicitly (by calling &lt;code&gt;close/1&lt;/code&gt; or &lt;code&gt;lclose/1,2&lt;/code&gt;) or by terminating.</source>
          <target state="translated">열린 디스크 로그마다 하나의 프로세스가 디스크 로그에 대한 요청을 처리합니다. 이 프로세스는 디스크 로그를 처리하는 프로세스가없는 경우 &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open/1&lt;/a&gt;&lt;/code&gt; 이 호출 될 때 작성됩니다 . 디스크 로그를 여는 프로세스는 디스크 로그의 &lt;strong&gt;소유자&lt;/strong&gt; 또는 익명 &lt;strong&gt;사용자&lt;/strong&gt; 일 수 있습니다 . 각 소유자는 디스크 로그 프로세스에 링크되어 있으며 소유자는 명시 적으로 ( &lt;code&gt;close/1&lt;/code&gt; 또는 &lt;code&gt;lclose/1,2&lt;/code&gt; 호출 ) 또는 종료 하여 디스크 로그를 닫을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4e2e1cc830a9ada17b4a310c0c6473e0526e6d43" translate="yes" xml:space="preserve">
          <source>For each possible MIB object instance, the instance belongs to a sub-tree if:</source>
          <target state="translated">가능한 각 MIB 객체 인스턴스에 대해 다음과 같은 경우 인스턴스가 하위 트리에 속합니다.</target>
        </trans-unit>
        <trans-unit id="71ef5272c1ecd2b405c70939e17801cccea63022" translate="yes" xml:space="preserve">
          <source>For each process the following information is presented:</source>
          <target state="translated">각 프로세스마다 다음 정보가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="22ce6b3ce4eb71e3325a1f74abea89f68af0ca3c" translate="yes" xml:space="preserve">
          <source>For each process there is also a &lt;strong&gt;=proc_messages&lt;/strong&gt; tag if the process message queue is non-empty, and a &lt;strong&gt;=proc_dictionary&lt;/strong&gt; tag if the process dictionary (the &lt;code&gt;put/2&lt;/code&gt; and &lt;code&gt;get/1&lt;/code&gt; thing) is non-empty.</source>
          <target state="translated">각 프로세스에 대해 거기에 또한 &lt;strong&gt;=의 proc_messages의&lt;/strong&gt; 프로세스 메시지 큐가 비어 있지 않은 경우 태그는, a는 &lt;strong&gt;proc_dictionary =&lt;/strong&gt; 프로세스 사전합니다 (경우에 태그를 &lt;code&gt;put/2&lt;/code&gt; 및 &lt;code&gt;get/1&lt;/code&gt; 일) 비 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcc5d011eda792d7ee1d0b9e92be8edf514df379" translate="yes" xml:space="preserve">
          <source>For each process there is at least one &lt;strong&gt;=proc_stack&lt;/strong&gt; and one &lt;strong&gt;=proc_heap&lt;/strong&gt; tag, followed by the raw memory information for the stack and heap of the process.</source>
          <target state="translated">각 프로세스마다 하나 이상의 &lt;strong&gt;= proc_stack&lt;/strong&gt; 및 하나의 &lt;strong&gt;= proc_heap&lt;/strong&gt; 태그가 있고 그 뒤에 프로세스의 스택 및 힙에 대한 원시 메모리 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f437759ab5b32aadc7a986e7a7cdc3d7eb3f68b" translate="yes" xml:space="preserve">
          <source>For each server to test against, the following entry can be added to a configuration file:</source>
          <target state="translated">테스트 할 각 서버에 대해 다음 항목을 구성 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5b4e71e5bc40d040741fc71f0253ada2ecf94f6" translate="yes" xml:space="preserve">
          <source>For each table Mnesia determines its replica nodes (&lt;code&gt;TabNodes&lt;/code&gt;) and starts &lt;code&gt;mnesia:set_master_nodes(Tab, TabMasterNodes)&lt;/code&gt;. where &lt;code&gt;TabMasterNodes&lt;/code&gt; is the intersection of &lt;code&gt;MasterNodes&lt;/code&gt; and &lt;code&gt;TabNodes&lt;/code&gt;. For semantics, see &lt;code&gt;mnesia:set_master_nodes/2&lt;/code&gt;.</source>
          <target state="translated">각 테이블에 대해 Mnesia는 복제 노드 ( &lt;code&gt;TabNodes&lt;/code&gt; )를 결정하고 &lt;code&gt;mnesia:set_master_nodes(Tab, TabMasterNodes)&lt;/code&gt; 합니다. 여기서 &lt;code&gt;TabMasterNodes&lt;/code&gt; 는 &lt;code&gt;MasterNodes&lt;/code&gt; 와 &lt;code&gt;TabNodes&lt;/code&gt; 의 교차점입니다 . 시맨틱에 대해서는 &lt;code&gt;mnesia:set_master_nodes/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9cf7d38da20a081c53e616fee20b088da09e54b" translate="yes" xml:space="preserve">
          <source>For each table, it is possible to choose if there is to be one checkpoint retainer attached to all replicas of the table, or if it is enough to have only one checkpoint retainer attached to a single replica. With a single checkpoint retainer per table, the checkpoint consumes less memory, but it is vulnerable to node crashes. With several redundant checkpoint retainers, the checkpoint survives as long as there is at least one active checkpoint retainer attached to each table.</source>
          <target state="translated">각 테이블에 대해 테이블의 모든 복제본에 하나의 검사 점 보유자가 첨부되어 있는지 또는 단일 복제본에 하나의 검사 점 보유자가 첨부되어 충분한 지 여부를 선택할 수 있습니다. 테이블 당 단일 검사 점 보유자를 사용하면 검사 점이 메모리를 덜 소비하지만 노드 충돌에 취약합니다. 중복 체크 포인트 리테이너가 여러 개인 경우 각 테이블에 활성 체크 포인트 리테이너가 하나 이상 연결되어 있으면 체크 포인트가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="4fc69c48101750feed24f2a11046bddb8dcf9465" translate="yes" xml:space="preserve">
          <source>For each test case function there can be an extra function with the same name but without arguments. This is the test case information function. It is expected to return a list of tagged tuples that specifies various properties regarding the test case.</source>
          <target state="translated">각 테스트 케이스 함수마다 이름이 같지만 인수가없는 추가 함수가있을 수 있습니다. 테스트 케이스 정보 기능입니다. 테스트 사례와 관련된 다양한 속성을 지정하는 태그가 지정된 튜플 목록을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="98134757dd58181588097c721844b2d454db5710" translate="yes" xml:space="preserve">
          <source>For each test case that &lt;code&gt;Common Test&lt;/code&gt; is ordered to execute, it spawns a dedicated process on which the test case function starts running. (In parallel to the test case process, an idle waiting timer process is started, which is linked to the test case process. If the timer process runs out of waiting time, it sends an exit signal to terminate the test case process. This is called a &lt;strong&gt;timetrap&lt;/strong&gt;).</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; 가 실행되도록 명령 된 각 테스트 케이스마다 테스트 케이스 기능이 실행되기 시작하는 전용 프로세스가 생성됩니다. (테스트 케이스 프로세스와 동시에, 유휴 대기 타이머 프로세스가 시작되어 테스트 케이스 프로세스와 링크됩니다. 타이머 프로세스가 대기 시간이 부족하면 종료 신호를 보내 테스트 케이스 프로세스를 종료합니다. &lt;strong&gt;타임 트랩&lt;/strong&gt; 이라고 &lt;strong&gt;함&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="c59d1296656858ac8ad6f5cb31934c34210f4647" translate="yes" xml:space="preserve">
          <source>For each test case, the &lt;code&gt;Common Test&lt;/code&gt; test server expects the following functions:</source>
          <target state="translated">각 테스트 케이스에 대해 &lt;code&gt;Common Test&lt;/code&gt; 테스트 서버는 다음 기능을 예상합니다.</target>
        </trans-unit>
        <trans-unit id="2af6b32175cb259e12d558357e46d8f34dd02064" translate="yes" xml:space="preserve">
          <source>For each test run that is part of a repeated session, information about the particular test run is printed in the &lt;code&gt;Common Test&lt;/code&gt; Framework Log. The information includes the repetition number, remaining time, and so on.</source>
          <target state="translated">반복 세션의 일부인 각 테스트 실행에 대해 특정 테스트 실행에 대한 정보가 &lt;code&gt;Common Test&lt;/code&gt; 프레임 워크 로그에 인쇄됩니다 . 이 정보에는 반복 횟수, 남은 시간 등이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="16a89185398b447a696063e8f8639e2f59dd06d8" translate="yes" xml:space="preserve">
          <source>For each test, a &lt;code&gt;{Specs,Tests}&lt;/code&gt; element is returned, where &lt;code&gt;Specs&lt;/code&gt; is a list of all included test specifications, and &lt;code&gt;Tests&lt;/code&gt; specifies actual tests to run/skip per node.</source>
          <target state="translated">각 테스트에 대해 &lt;code&gt;{Specs,Tests}&lt;/code&gt; 요소가 리턴됩니다. 여기서 &lt;code&gt;Specs&lt;/code&gt; 는 포함 된 모든 테스트 스펙의 목록이며 &lt;code&gt;Tests&lt;/code&gt; 는 노드 당 실행 / 건너 뛰기 할 실제 테스트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0e3ddda019d70e43f1cd037a636007edb7a56d46" translate="yes" xml:space="preserve">
          <source>For each transaction reply in the decoded message the reply is returned to the user. Either the originating function megaco:call/3 will return. Or in case the originating function was megaco:case/3 the following callback function will be invoked:</source>
          <target state="translated">디코딩 된 메시지의 각 트랜잭션 응답에 대해 응답이 사용자에게 반환됩니다. 원래 함수 megaco : call / 3가 리턴됩니다. 또는 원래 함수가 megaco : case / 3 인 경우 다음 콜백 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a41d81fbeba21b3303f7be973d896632dd36dff6" translate="yes" xml:space="preserve">
          <source>For each transaction request in the decoded message the following callback function will be invoked:</source>
          <target state="translated">디코딩 된 메시지의 각 트랜잭션 요청에 대해 다음 콜백 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b4f54ca986575862ce2634f50b5065e5effc58f3" translate="yes" xml:space="preserve">
          <source>For each tuple in the &lt;code&gt;MatchExpression&lt;/code&gt; list and while no match has succeeded:</source>
          <target state="translated">&lt;code&gt;MatchExpression&lt;/code&gt; 목록의 각 튜플에 대해 일치하지 않은 경우 :</target>
        </trans-unit>
        <trans-unit id="c8c8ae95c4f8448c4091219d8b47f3b1af3a5621" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, items are always written to files as binaries.</source>
          <target state="translated">효율성을 위해 항목은 항상 이진으로 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="ae5690da6be5fef96021981046b0a57ba7ba9343" translate="yes" xml:space="preserve">
          <source>For encryption, set the &lt;code&gt;EncryptFlag&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and set the &lt;code&gt;TagOrTagLength&lt;/code&gt; to the wanted size (in bytes) of the tag, that is, the tag length. If the default length is wanted, the &lt;code&gt;crypto_aead/6&lt;/code&gt; form may be used.</source>
          <target state="translated">암호화의 경우 &lt;code&gt;EncryptFlag&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하고 &lt;code&gt;TagOrTagLength&lt;/code&gt; 를 태그의 원하는 크기 (바이트 단위), 즉 태그 길이로 설정합니다. 기본 길이가 필요한 경우 &lt;code&gt;crypto_aead/6&lt;/code&gt; 형식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4967124988e7900fccdeded3ecb78c75aeec8796" translate="yes" xml:space="preserve">
          <source>For encryption, set the &lt;code&gt;FlagOrOptions&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;[{encrypt,true}]&lt;/code&gt;. For decryption, set it to &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;[{encrypt,false}]&lt;/code&gt;.</source>
          <target state="translated">암호화의 경우 &lt;code&gt;FlagOrOptions&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;[{encrypt,true}]&lt;/code&gt; 로 설정하십시오 . 복호화의 경우 &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;[{encrypt,false}]&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a255ccc868577472e66afa4294d63c50f69a969" translate="yes" xml:space="preserve">
          <source>For encryption, set the &lt;code&gt;FlagOrOptions&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. For decryption, set it to &lt;code&gt;false&lt;/code&gt;. For setting other options, see &lt;code&gt;&lt;a href=&quot;crypto#crypto_init-4&quot;&gt;crypto_init/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">암호화의 경우 &lt;code&gt;FlagOrOptions&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 복호화의 경우 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 다른 옵션을 설정하려면 &lt;code&gt;&lt;a href=&quot;crypto#crypto_init-4&quot;&gt;crypto_init/4&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce1ad00ab0e2de19f26f8739d72d89700c9c341b" translate="yes" xml:space="preserve">
          <source>For every atom T, except '_', and for every term X, (T, X) belongs to Sets (&lt;strong&gt;atomic sets&lt;/strong&gt;).</source>
          <target state="translated">'_'를 제외한 모든 원자 T와 모든 항 X에 대해 (T, X)는 세트 ( &lt;strong&gt;원자 세트&lt;/strong&gt; )에 속합니다 .</target>
        </trans-unit>
        <trans-unit id="1055e987c54c28f4d6405a65d5154d69cd590c4b" translate="yes" xml:space="preserve">
          <source>For every entry in &lt;code&gt;Dbgs&lt;/code&gt;, the corresponding function in &lt;code&gt;&lt;a href=&quot;sys&quot;&gt;sys&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;Dbgs&lt;/code&gt; 의 모든 항목에 대해 &lt;code&gt;&lt;a href=&quot;sys&quot;&gt;sys&lt;/a&gt;&lt;/code&gt; 의 해당 함수 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4125d4ed3d1ed87e6bdfa6be17e2fdff9e44e7af" translate="yes" xml:space="preserve">
          <source>For every number of calls, functions etc. returned by the &lt;code&gt;no_&lt;/code&gt; tags, there is a query returning the same number. Listed below are examples of such queries. Some of the queries return the sum of a two or more of the &lt;code&gt;no_&lt;/code&gt; tags numbers. &lt;code&gt;mod&lt;/code&gt; (&lt;code&gt;app&lt;/code&gt;, &lt;code&gt;rel&lt;/code&gt;) refers to any module (application, release).</source>
          <target state="translated">&lt;code&gt;no_&lt;/code&gt; 태그에 의해 반환 된 모든 호출, 함수 등마다 동일한 번호를 반환하는 쿼리가 있습니다. 이러한 쿼리의 예는 다음과 같습니다. 일부 쿼리는 2 개 이상의 &lt;code&gt;no_&lt;/code&gt; 태그 숫자 의 합계를 반환합니다 . &lt;code&gt;mod&lt;/code&gt; ( &lt;code&gt;app&lt;/code&gt; , &lt;code&gt;rel&lt;/code&gt; )는 모든 모듈 (application, release)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aeabbfbcbba369ba734fd2c26cf0b31bfcd4b814" translate="yes" xml:space="preserve">
          <source>For every term T, if X is the empty list or a non-empty sorted list [X[1], ..., X[n]] without duplicates such that (T, X[i]) belongs to Sets for every 1 &amp;lt;= i &amp;lt;= n, then ([T], X) belongs to Sets (&lt;strong&gt;typed unordered sets&lt;/strong&gt;).</source>
          <target state="translated">모든 용어 T에 대해, X가 빈리스트이거나 비어 있지 않은 정렬 된리스트 [X [1], ..., X [n]]가 중복되지 않으면 (T, X [i])가 모든 세트에 속합니다 1 &amp;lt;= i &amp;lt;= n이면 ([T], X)는 Sets ( &lt;strong&gt;typed unorder sets&lt;/strong&gt; )에 속합니다 .</target>
        </trans-unit>
        <trans-unit id="665bf10fa162bfddf8298d7b400de176ae8fab90" translate="yes" xml:space="preserve">
          <source>For every tuple T = {T[1], ..., T[n]} and for every tuple X = {X[1], ..., X[n]}, if (T[i], X[i]) belongs to Sets for every 1 &amp;lt;= i &amp;lt;= n, then (T, X) belongs to Sets (&lt;strong&gt;ordered sets&lt;/strong&gt;).</source>
          <target state="translated">모든 튜플 T = {T [1], ..., T [n]} 및 모든 튜플 X = {X [1], ..., X [n]}의 경우 (T [i], X [i])는 1 &amp;lt;= i &amp;lt;= n마다 세트에 속하며, (T, X)는 세트 ( &lt;strong&gt;순서 세트&lt;/strong&gt; )에 속합니다 .</target>
        </trans-unit>
        <trans-unit id="406a119cd5c435adc0db7b55f84dc0973accc194" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;\\hkey_local_machine\\software\\Ericsson\\Erlang\\5.0&quot;&lt;/code&gt; is the key for the installation data for the latest Erlang release.</source>
          <target state="translated">예를 들어, &lt;code&gt;&quot;\\hkey_local_machine\\software\\Ericsson\\Erlang\\5.0&quot;&lt;/code&gt; 은 최신 Erlang 릴리스의 설치 데이터 키입니다.</target>
        </trans-unit>
        <trans-unit id="caf7e81c681142621f0d97442fd39a0248c2b1de" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;(?im)&lt;/code&gt; sets caseless, multiline matching. These options can also be unset by preceding the letter with a hyphen. A combined setting and unsetting such as &lt;code&gt;(?im-sx)&lt;/code&gt;, which sets &lt;code&gt;caseless&lt;/code&gt; and &lt;code&gt;multiline&lt;/code&gt;, while unsetting &lt;code&gt;dotall&lt;/code&gt; and &lt;code&gt;extended&lt;/code&gt;, is also permitted. If a letter appears both before and after the hyphen, the option is unset.</source>
          <target state="translated">예를 들어 &lt;code&gt;(?im)&lt;/code&gt; 은 대소 문자를 구분하지 않는 여러 줄 일치를 설정합니다. 문자 앞에 하이픈을 추가하여 이러한 옵션을 해제 할 수도 있습니다. &lt;code&gt;(?im-sx)&lt;/code&gt; 와 같이 결합되지 않은 설정과 설정 해제 는 &lt;code&gt;caseless&lt;/code&gt; 및 &lt;code&gt;multiline&lt;/code&gt; 을 설정 하고 &lt;code&gt;dotall&lt;/code&gt; 및 &lt;code&gt;extended&lt;/code&gt; 설정 은 해제 할 수 있습니다. 하이픈 앞뒤에 문자가 나타나면 옵션이 설정되지 않은 것입니다.</target>
        </trans-unit>
        <trans-unit id="40339f5dd88af4dcf02bfaa1ba8a398628bcc7ee" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;rup&lt;/code&gt; displays a load of 128 as 0.50, and 512 as 2.00.</source>
          <target state="translated">예를 들어 &lt;code&gt;rup&lt;/code&gt; 은 128의 하중을 0.50으로, 512를 2.00으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a2a093c13175526991ab21ee86bed10186dee592" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;substitute_aliases([{color, colour}], L)&lt;/code&gt; replaces all tuples &lt;code&gt;{color, ...}&lt;/code&gt; in &lt;code&gt;L&lt;/code&gt; with &lt;code&gt;{colour, ...}&lt;/code&gt;, and all atoms &lt;code&gt;color&lt;/code&gt; with &lt;code&gt;colour&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;substitute_aliases([{color, colour}], L)&lt;/code&gt; 모두 대체 튜플 &lt;code&gt;{color, ...}&lt;/code&gt; 에서 &lt;code&gt;L&lt;/code&gt; 로 &lt;code&gt;{colour, ...}&lt;/code&gt; , 모든 원자의 &lt;code&gt;color&lt;/code&gt; 와 &lt;code&gt;colour&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1b1a557f7b5114f0fca91012472ed5d5bef0fa4" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;substitute_negations([{no_foo, foo}], L)&lt;/code&gt; replaces any atom &lt;code&gt;no_foo&lt;/code&gt; or tuple &lt;code&gt;{no_foo, true}&lt;/code&gt; in &lt;code&gt;L&lt;/code&gt; with &lt;code&gt;{foo, false}&lt;/code&gt;, and any other tuple &lt;code&gt;{no_foo, ...}&lt;/code&gt; with &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;substitute_negations([{no_foo, foo}], L)&lt;/code&gt; 어느 하나의 원자를 대체 &lt;code&gt;no_foo&lt;/code&gt; 또는 튜플 &lt;code&gt;{no_foo, true}&lt;/code&gt; 에서 &lt;code&gt;L&lt;/code&gt; 과 &lt;code&gt;{foo, false}&lt;/code&gt; , 기타 튜플 &lt;code&gt;{no_foo, ...}&lt;/code&gt; 와 &lt;code&gt;foo&lt;/code&gt; 는 .</target>
        </trans-unit>
        <trans-unit id="3defa479f547bf0d14fa8deeab9fd748f99e8e6d" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;substitute_negations([{no_foo, foo}], L)&lt;/code&gt; replaces any atom &lt;code&gt;no_foo&lt;/code&gt; or tuple &lt;code&gt;{no_foo, true}&lt;/code&gt; in &lt;code&gt;L&lt;/code&gt; with &lt;code&gt;{foo, false}&lt;/code&gt;, and any other tuple &lt;code&gt;{no_foo, ...}&lt;/code&gt; with &lt;code&gt;{foo, true}&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;substitute_negations([{no_foo, foo}], L)&lt;/code&gt; 어느 하나의 원자를 대체 &lt;code&gt;no_foo&lt;/code&gt; 또는 튜플 &lt;code&gt;{no_foo, true}&lt;/code&gt; 에서 &lt;code&gt;L&lt;/code&gt; 로 &lt;code&gt;{foo, false}&lt;/code&gt; , 기타 튜플 &lt;code&gt;{no_foo, ...}&lt;/code&gt; 와 &lt;code&gt;{foo, true}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="399958481b0ec1af5510c4541719cd0d1a0d129c" translate="yes" xml:space="preserve">
          <source>For example, a document &lt;code&gt;sep([text(&quot;foo&quot;), text(&quot;bar&quot;)])&lt;/code&gt; represents the two layouts</source>
          <target state="translated">예를 들어, &lt;code&gt;sep([text(&quot;foo&quot;), text(&quot;bar&quot;)])&lt;/code&gt; 는 두 가지 레이아웃을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8efe621514640ef383da15908c07a1f546479a07" translate="yes" xml:space="preserve">
          <source>For example, a function that sums a list of integers, is &lt;strong&gt;not&lt;/strong&gt; to be written as follows:</source>
          <target state="translated">예를 들어, 정수 목록을 합하는 함수는 다음과 같이 작성 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="86e92631e8650d822a82ad98574f11e26c34a1a2" translate="yes" xml:space="preserve">
          <source>For example, a simple server receiving text parts to encrypt and send the result back to the one who sent them (the &lt;code&gt;Requester&lt;/code&gt;):</source>
          <target state="translated">예를 들어, 텍스트 부분을 수신하는 간단한 서버는 암호화하여 결과를 보낸 사람 ( &lt;code&gt;Requester&lt;/code&gt; ) 에게 다시 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="39a8efe8a78f4367f28577c4a2128d80c3fce93e" translate="yes" xml:space="preserve">
          <source>For example, a system that is managed with SNMP and HTTP can be structured as follows:</source>
          <target state="translated">예를 들어, SNMP 및 HTTP로 관리되는 시스템은 다음과 같이 구성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b66df4022d93fcdfd3eeae6ff79d90149f7de7f2" translate="yes" xml:space="preserve">
          <source>For example, adding a child to &lt;code&gt;simple_sup&lt;/code&gt; above:</source>
          <target state="translated">예를 들어 위의 &lt;code&gt;simple_sup&lt;/code&gt; 에 자식을 추가하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e46490d9ac799092b0805463ffae65dfc53bf250" translate="yes" xml:space="preserve">
          <source>For example, assume your GNU make program is called &lt;code&gt;make&lt;/code&gt; and you want to rebuild the application &lt;code&gt;STDLIB&lt;/code&gt;, then you could do:</source>
          <target state="translated">예를 들어 GNU make 프로그램을 make라고 &lt;code&gt;make&lt;/code&gt; &lt;code&gt;STDLIB&lt;/code&gt; 응용 프로그램을 다시 빌드 한다고 가정 하면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b80a69d1e82c803c64ac36bc28e2be969845e1b" translate="yes" xml:space="preserve">
          <source>For example, consider the following domains:</source>
          <target state="translated">예를 들어 다음 도메인을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="cbb0941b4d3fdca891f6dc85c2ed48e69e6f152c" translate="yes" xml:space="preserve">
          <source>For example, finding all the employees who have a salary less than 10 can look as follows:</source>
          <target state="translated">예를 들어, 급여가 10 미만인 모든 직원을 찾는 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dfe14448d99bd1fe2d96c835091709a9884d1796" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;family&lt;/code&gt; is set to &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; to &lt;code&gt;[broadcast, multicast]&lt;/code&gt; only interfaces with address family &lt;code&gt;inet&lt;/code&gt; and the flags &lt;code&gt;broadcast&lt;/code&gt; and &lt;code&gt;multicast&lt;/code&gt; will be listed.</source>
          <target state="translated">예를 들어, &lt;code&gt;family&lt;/code&gt; 가 &lt;code&gt;inet&lt;/code&gt; 으로 설정 되고 &lt;code&gt;flags&lt;/code&gt; 가 &lt;code&gt;[broadcast, multicast]&lt;/code&gt; 로 설정된 경우 주소 계열이 &lt;code&gt;inet&lt;/code&gt; 인 인터페이스와 &lt;code&gt;broadcast&lt;/code&gt; 및 &lt;code&gt;multicast&lt;/code&gt; 플래그 만 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="da54cda1d0f63875a5e43bf0123631a6cbd22a92" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;hlen&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;ev&lt;/code&gt; points to an array of three binaries, the port owner process receives &lt;code&gt;[H1, H2, &amp;lt;&amp;lt;B1&amp;gt;&amp;gt;, &amp;lt;&amp;lt;B2&amp;gt;&amp;gt; | &amp;lt;&amp;lt;B3&amp;gt;&amp;gt;]&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;hlen&lt;/code&gt; 이 &lt;code&gt;2&lt;/code&gt; 이고 &lt;code&gt;ev&lt;/code&gt; 가 3 개의 이진 배열을 가리키는 경우 포트 소유자 프로세스는 &lt;code&gt;[H1, H2, &amp;lt;&amp;lt;B1&amp;gt;&amp;gt;, &amp;lt;&amp;lt;B2&amp;gt;&amp;gt; | &amp;lt;&amp;lt;B3&amp;gt;&amp;gt;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5e7f2efee25ac9e96ea55cc4c92026b57b64ae9" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;hlen&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;, the port owner process receives &lt;code&gt;[H1, H2 | &amp;lt;&amp;lt;T&amp;gt;&amp;gt;]&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;hlen&lt;/code&gt; 이 &lt;code&gt;2&lt;/code&gt; 인 경우 포트 소유자 프로세스는 &lt;code&gt;[H1, H2 | &amp;lt;&amp;lt;T&amp;gt;&amp;gt;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0f03db84fe8d7da23adcee865ea314ff295f8a0" translate="yes" xml:space="preserve">
          <source>For example, if a defined type is to be a VideotexString and an octet is received with the unsigned integer value &lt;code&gt;X&lt;/code&gt;, the octet is to be interpreted as specified in standard ITU-T T.100, T.101.</source>
          <target state="translated">예를 들어, 정의 된 유형이 VideotexString이고 옥텟이 부호없는 정수 값 &lt;code&gt;X&lt;/code&gt; 로 수신 되면 옥텟은 표준 ITU-T T.100, T.101에 지정된대로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="1519a79b3872a0f3447a4710f02289677d229d7b" translate="yes" xml:space="preserve">
          <source>For example, if a test is started with:</source>
          <target state="translated">예를 들어 다음과 같이 테스트를 시작한 경우 :</target>
        </trans-unit>
        <trans-unit id="81a3e092d5166c38df0af903761ad08b5bc1e44d" translate="yes" xml:space="preserve">
          <source>For example, if the SNMP table has two INDEX columns, the first one an OCTET STRING with size 2, and the second one an OBJECT IDENTIFER, the corresponding &lt;code&gt;key_types&lt;/code&gt; parameter would be &lt;code&gt;{fix_string, string}&lt;/code&gt;.</source>
          <target state="translated">예를 들어, SNMP 테이블에 두 개의 INDEX 열이 있고 첫 번째 열은 크기가 2 인 OCTET STRING이고 두 번째 열이 OBJECT IDENTIFER 인 경우 해당 &lt;code&gt;key_types&lt;/code&gt; 매개 변수는 &lt;code&gt;{fix_string, string}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af02b4862ccd3f2849f0f14b3b8616281af231d2" translate="yes" xml:space="preserve">
          <source>For example, if the configuration file includes the specification &lt;code&gt;{selective_decode,{'ModuleName',[{selected_decode_Window,TypeList}]}}&lt;/code&gt; do the selective decode by &lt;code&gt;{ok,Result}='ModuleName':selected_decode_Window(EncodedBinary).&lt;/code&gt;</source>
          <target state="translated">예를 들어, 구성 파일에 사양 &lt;code&gt;{selective_decode,{'ModuleName',[{selected_decode_Window,TypeList}]}}&lt;/code&gt; 이 포함 된 경우 &lt;code&gt;{ok,Result}='ModuleName':selected_decode_Window(EncodedBinary).&lt;/code&gt; 선택적 디코딩을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc0ddfd4f8a179f2d89a9e1a6c662490027e7d09" translate="yes" xml:space="preserve">
          <source>For example, if the top level allows 10 restarts, and the next level also allows 10, a crashing child below that level will be restarted 100 times, which is probably excessive. Allowing at most 3 restarts for the top level supervisor might be a better choice in this case.</source>
          <target state="translated">예를 들어 최상위 수준에서 10 번의 다시 시작을 허용하고 다음 수준에서도 10 번을 허용하면 해당 수준 아래의 충돌하는 자식이 100 번 다시 시작됩니다. 이 경우 최상위 수퍼바이저에 대해 최대 3 회의 재시작을 허용하는 것이 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6250de169e1838d636223901923d45da5cf24ca9" translate="yes" xml:space="preserve">
          <source>For example, if the user wants to install patched versions of &lt;code&gt;mnesia&lt;/code&gt; and &lt;code&gt;ssl&lt;/code&gt; built in &lt;code&gt;/home/me/git/otp&lt;/code&gt; into the OTP installation located in &lt;code&gt;/opt/erlang/my_otp&lt;/code&gt; type</source>
          <target state="translated">예를 들어, 사용자가 &lt;code&gt;/home/me/git/otp&lt;/code&gt; &lt;code&gt;mnesia&lt;/code&gt; 내장 된 패치 된 mnesia 및 &lt;code&gt;ssl&lt;/code&gt; 버전을 &lt;code&gt;/opt/erlang/my_otp&lt;/code&gt; 유형 에있는 OTP 설치에 설치 하려는 경우</target>
        </trans-unit>
        <trans-unit id="c9cb98f2e12d01908c1d62a2978c14ce026348a3" translate="yes" xml:space="preserve">
          <source>For example, if we have mutexes of types &quot;myapp.xtable&quot; and &quot;myapp.xitem&quot; then the lock checker will make sure either &quot;myapp.xtable&quot; locks are never locked after &quot;myapp.xitem&quot; locks or vice versa.</source>
          <target state="translated">예를 들어, &quot;myapp.xtable&quot;및 &quot;myapp.xitem&quot;유형의 뮤텍스가있는 경우 잠금 검사기는 &quot;myapp.xitem&quot;잠금 후 &quot;myapp.xtable&quot;잠금이 잠기지 않도록하거나 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="cd373f75b5583f012cbf3cb7359b03f58a4c6b6e" translate="yes" xml:space="preserve">
          <source>For example, if you have started a slave node &lt;code&gt;N&lt;/code&gt; and want to execute &lt;code&gt;pxw&lt;/code&gt; graphics code on this node, you can start server &lt;code&gt;pxw_server&lt;/code&gt; as a pseudo server at the slave node. This is illustrated as follows:</source>
          <target state="translated">예를 들어, 슬레이브 노드 &lt;code&gt;N&lt;/code&gt; 을 시작 하고이 노드에서 &lt;code&gt;pxw&lt;/code&gt; 그래픽 코드 를 실행하려는 경우 슬레이브 노드에서 서버 &lt;code&gt;pxw_server&lt;/code&gt; 를 의사 서버로 시작할 수 있습니다 . 이것은 다음과 같이 설명됩니다 :</target>
        </trans-unit>
        <trans-unit id="dafc397a9ca472d5fefe961c0db1dc1300da12dd" translate="yes" xml:space="preserve">
          <source>For example, if you have the following module:</source>
          <target state="translated">예를 들어, 다음 모듈이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="11b5f9c8b648d6384440598bba89e3a61045cbea" translate="yes" xml:space="preserve">
          <source>For example, if you want to match a * character, you write \* in the pattern. This escaping action applies if the following character would otherwise be interpreted as a metacharacter, so it is always safe to precede a non-alphanumeric with backslash to specify that it stands for itself. In particular, if you want to match a backslash, write \\.</source>
          <target state="translated">예를 들어 * 문자를 일치 시키려면 패턴에 \ *를 씁니다. 이 이스케이프 동작은 다음 문자가 메타 문자로 해석 될 경우 적용되므로 영숫자가 아닌 문자 앞에 백 슬래시를 붙여서 자신을 나타내는 것으로 지정하는 것이 안전합니다. 특히 백 슬래시와 일치 시키려면 \\를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="160e1a8d513572218d73c9234815cf2b329973e0" translate="yes" xml:space="preserve">
          <source>For example, in order to send an HTTP GET request with the URI &lt;code&gt;http://localhost/foo%25bar&lt;/code&gt;, the percent character must be percent-encoded when creating the request: &lt;code&gt;httpc:request(&quot;http://localhost/foo%2525bar&quot;).&lt;/code&gt;</source>
          <target state="translated">예를 들어 URI &lt;code&gt;http://localhost/foo%25bar&lt;/code&gt; 하여 HTTP GET 요청을 보내려면 요청을 생성 할 때 백분율 문자를 백분율로 인코딩해야합니다. &lt;code&gt;httpc:request(&quot;http://localhost/foo%2525bar&quot;).&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="773614802c2cc887cba1a22a7e0a6a82b403137c" translate="yes" xml:space="preserve">
          <source>For example, in the test specification:</source>
          <target state="translated">예를 들어, 테스트 사양에서 :</target>
        </trans-unit>
        <trans-unit id="e1a81da23e470f702cb5cd76fb6e8264d3fc3877" translate="yes" xml:space="preserve">
          <source>For example, languages like Elixir and LFE attach the &lt;code&gt;Docs&lt;/code&gt; chunk at compilation time, which can be controlled via a compiler flag. On the other hand, projects like OTP itself will likely generate the doc/chunks entries on a separate command, completely unrelated from code compilation.</source>
          <target state="translated">예를 들어 Elixir 및 LFE와 같은 언어 는 컴파일 시간에 &lt;code&gt;Docs&lt;/code&gt; 청크를 첨부 하며 컴파일러 플래그를 통해 제어 할 수 있습니다. 반면에 OTP 자체와 같은 프로젝트는 코드 컴파일과는 완전히 관련이없는 별도의 명령에 문서 / 청크 항목을 생성 할 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="0681458148c7cc4ffd0c700b16bf6c11b231f848" translate="yes" xml:space="preserve">
          <source>For example, suppose there is an SNMP table, which is best implemented in Erlang as one process per SNMP table row. Suppose further that the INDEX in the SNMP table is an OCTET STRING. The index structure would be created as follows:</source>
          <target state="translated">예를 들어, Erlang에서 SNMP 테이블 행당 하나의 프로세스로 가장 잘 구현되는 SNMP 테이블이 있다고 가정하십시오. SNMP 테이블의 INDEX가 OCTET STRING이라고 가정하십시오. 인덱스 구조는 다음과 같이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0b8cbbd048c4adae440f3ff0c92db804cac5e614" translate="yes" xml:space="preserve">
          <source>For example, the call &lt;code&gt;mnesia:match_object(person, {person, '_', 36, '_', '_'}, read)&lt;/code&gt; returns a list of all person records with an &lt;code&gt;age&lt;/code&gt; field of 36.</source>
          <target state="translated">예를 들어, &lt;code&gt;mnesia:match_object(person, {person, '_', 36, '_', '_'}, read)&lt;/code&gt; 호출 은 &lt;code&gt;age&lt;/code&gt; 필드가 36 인 모든 개인 레코드 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="167a9c5c1fce4843525ba6b25a842ff6faa835ce" translate="yes" xml:space="preserve">
          <source>For example, the character class &lt;code&gt;[aeiou]&lt;/code&gt; matches any lowercase vowel, while &lt;code&gt;[^aeiou]&lt;/code&gt; matches any character that is not a lowercase vowel. Notice that a circumflex is just a convenient notation for specifying the characters that are in the class by enumerating those that are not. A class that starts with a circumflex is not an assertion; it still consumes a character from the subject string, and therefore it fails if the current pointer is at the end of the string.</source>
          <target state="translated">예를 들어, 문자 클래스 &lt;code&gt;[aeiou]&lt;/code&gt; 는 소문자 모음과 일치하지만 &lt;code&gt;[^aeiou]&lt;/code&gt; 는 소문자 모음이 아닌 모든 문자와 일치합니다. 곡절 악센트는 클래스에없는 문자를 나열하여 클래스에있는 문자를 지정하기위한 편리한 표기법 일뿐입니다. 곡절로 시작하는 클래스는 주장이 아닙니다. 여전히 제목 문자열에서 문자를 사용하므로 현재 포인터가 문자열의 끝에 있으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="1180f1b377b587660c05d49fde99a5a5ed03357c" translate="yes" xml:space="preserve">
          <source>For example, the following call creates the &lt;code&gt;person&lt;/code&gt; table (defined earlier) and replicates it on two nodes:</source>
          <target state="translated">예를 들어, 다음 호출은 &lt;code&gt;person&lt;/code&gt; 테이블 (이전에 정의 됨)을 작성하여 두 노드에 복제합니다.</target>
        </trans-unit>
        <trans-unit id="309bcb0a91370a60964dcbfa98331992024826d4" translate="yes" xml:space="preserve">
          <source>For example, the following causes table &lt;code&gt;person&lt;/code&gt; to be ordered as an SNMP table:</source>
          <target state="translated">예를 들어, 다음으로 인해 테이블 &lt;code&gt;person&lt;/code&gt; 이 SNMP 테이블로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="0f7229496f8100e8f3961e3930c5be59c0d8a603" translate="yes" xml:space="preserve">
          <source>For example, the following expressions all return &lt;code&gt;[fie, bar, baz, fum]&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 표현식은 모두 &lt;code&gt;[fie, bar, baz, fum]&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0a5bf5de7cde2e9615747a1a49cb28306407e822" translate="yes" xml:space="preserve">
          <source>For example, the managed object type &lt;code&gt;ifDescr&lt;/code&gt; from RFC1573, is defined as the description of a network interface. To identify the description of device-X's first network interface, four pieces of information are needed: the snmpEngineID of the SNMP entity which provides access to the management information at device-X, the &lt;code&gt;contextName&lt;/code&gt; (device-X), the managed object type (&lt;code&gt;ifDescr&lt;/code&gt;), and the instance (&quot;1&quot;).</source>
          <target state="translated">예를 들어, RFC1573 의 관리 객체 유형 &lt;code&gt;ifDescr&lt;/code&gt; 은 네트워크 인터페이스의 설명으로 정의됩니다. device-X의 첫 번째 네트워크 인터페이스에 대한 설명을 식별하려면 device-X의 관리 정보에 대한 액세스를 제공하는 SNMP 엔티티의 &lt;code&gt;contextName&lt;/code&gt; , contextName (device-X), 관리 객체 유형 ( &lt;code&gt;ifDescr&lt;/code&gt; ) 및 인스턴스 ( &quot;1&quot;)입니다.</target>
        </trans-unit>
        <trans-unit id="8f988f74cffc188ca0078e7863b71654141bcbe1" translate="yes" xml:space="preserve">
          <source>For example, the pattern /^abc$/ matches the subject string &quot;def\nabc&quot; (where \n represents a newline) in multiline mode, but not otherwise. So, patterns that are anchored in single-line mode because all branches start with ^ are not anchored in multiline mode, and a match for circumflex is possible when argument &lt;strong&gt;startoffset&lt;/strong&gt; of &lt;code&gt;run/3&lt;/code&gt; is non-zero. Option &lt;code&gt;dollar_endonly&lt;/code&gt; is ignored if &lt;code&gt;multiline&lt;/code&gt; is set.</source>
          <target state="translated">예를 들어, 패턴 / ^ abc $ /는 여러 줄 모드에서 제목 문자열 &quot;def \ nabc&quot;(여기서 \ n은 줄 바꿈을 나타냄)와 일치하지만 그렇지 않으면 일치하지 않습니다. 따라서 ^로 시작하는 모든 분기가 다중 선 모드에서 고정되지 않기 때문에 단일 행 모드로 고정 된 패턴 은 &lt;code&gt;run/3&lt;/code&gt; 의 인수 시작 &lt;strong&gt;오프셋&lt;/strong&gt; 이 0이 아닌 경우 곡절에 대한 일치가 가능 합니다. 옵션 &lt;code&gt;dollar_endonly&lt;/code&gt; 경우 무시됩니다 &lt;code&gt;multiline&lt;/code&gt; 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="325a177e2579ced68c303791d9bfb48868f2a46b" translate="yes" xml:space="preserve">
          <source>For example, the result of &lt;code&gt;string(&quot;x\ny&quot;)&lt;/code&gt; represents any and all of &lt;code&gt;&quot;x\ny&quot;&lt;/code&gt;, &lt;code&gt;&quot;x\12y&quot;&lt;/code&gt;, &lt;code&gt;&quot;x\012y&quot;&lt;/code&gt; and &lt;code&gt;&quot;x\^Jy&quot;&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#char-1&quot;&gt;char/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;string(&quot;x\ny&quot;)&lt;/code&gt; 의 결과는 &lt;code&gt;&quot;x\ny&quot;&lt;/code&gt; , &lt;code&gt;&quot;x\12y&quot;&lt;/code&gt; , &lt;code&gt;&quot;x\012y&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;x\^Jy&quot;&lt;/code&gt; 모두 나타냅니다 . &lt;code&gt;&lt;a href=&quot;#char-1&quot;&gt;char/1&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a93d14fb10f81e7e524658053c68e5144704f1cd" translate="yes" xml:space="preserve">
          <source>For example, the result of &lt;code&gt;to_comment(erl_syntax:abstract([a,b,c]))&lt;/code&gt; represents</source>
          <target state="translated">예를 들어, &lt;code&gt;to_comment(erl_syntax:abstract([a,b,c]))&lt;/code&gt; 는 다음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a264f4e1e12c6183814b27b5cfc6320ffc9d0ce9" translate="yes" xml:space="preserve">
          <source>For example, the table for employees is created with the function &lt;code&gt;mnesia:create_table(employee, [{attributes, record_info(fields, employee)}])&lt;/code&gt;. The table name &lt;code&gt;employee&lt;/code&gt; matches the name for records specified in &lt;code&gt;ArgList&lt;/code&gt;. The expression &lt;code&gt;record_info(fields, RecordName)&lt;/code&gt; is processed by the Erlang preprocessor and evaluates to a list containing the names of the different fields for a record.</source>
          <target state="translated">예를 들어, 직원 테이블은 &lt;code&gt;mnesia:create_table(employee, [{attributes, record_info(fields, employee)}])&lt;/code&gt; 함수로 작성됩니다 . 테이블 이름 &lt;code&gt;employee&lt;/code&gt; 는 &lt;code&gt;ArgList&lt;/code&gt; 에 지정된 레코드 이름과 일치합니다 . &lt;code&gt;record_info(fields, RecordName)&lt;/code&gt; 표현식 은 Erlang 전처리 기에 의해 처리되며 레코드의 다른 필드 이름이 포함 된 목록으로 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="37c5c86c5b451913cc578568aa27276f3bff7bb5" translate="yes" xml:space="preserve">
          <source>For example, this function can show the counters &lt;code&gt;snmpInPkts&lt;/code&gt; and &lt;code&gt;snmpOutPkts&lt;/code&gt;.</source>
          <target state="translated">예를 &lt;code&gt;snmpOutPkts&lt;/code&gt; 함수는 &lt;code&gt;snmpInPkts&lt;/code&gt; 및 snmpOutPkts 카운터를 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0fb158ed1e90b656f9b3e55aeae62562ba2fdbb8" translate="yes" xml:space="preserve">
          <source>For example, to assign a weekday value in Erlang, use the same atom as in the &lt;code&gt;Enumerations&lt;/code&gt; of the type definition:</source>
          <target state="translated">예를 들어, Erlang에서 주중 값을 지정 하려면 유형 정의 &lt;code&gt;Enumerations&lt;/code&gt; 에서와 동일한 원자를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ec286472cf455f60d336948ac5fbc7b9ec99b9f" translate="yes" xml:space="preserve">
          <source>For example, to encode a tuple with some stuff:</source>
          <target state="translated">예를 들어, 몇 가지 물건으로 튜플을 인코딩하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="4312a1335ee7b87dcc19f8f9eaf04939994b9b13" translate="yes" xml:space="preserve">
          <source>For example, to encode the list &lt;code&gt;[c, d, [e | f]]&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 목록 &lt;code&gt;[c, d, [e | f]]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="63863fb032c8edf85c23451afe9b754a4ffcd8dc" translate="yes" xml:space="preserve">
          <source>For example, to encode the map &lt;code&gt;#{a =&amp;gt; &quot;Apple&quot;, b =&amp;gt; &quot;Banana&quot;}&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 맵 &lt;code&gt;#{a =&amp;gt; &quot;Apple&quot;, b =&amp;gt; &quot;Banana&quot;}&lt;/code&gt; 를 인코딩하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="c34d4ca9cc9fa31e2f8fdf5e1133bcb441acc7c3" translate="yes" xml:space="preserve">
          <source>For example, to encode the tuple &lt;code&gt;{a, {b, {}}}&lt;/code&gt;:</source>
          <target state="translated">예를 들어 튜플 &lt;code&gt;{a, {b, {}}}&lt;/code&gt; 를) 인코딩하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="02485851570e7845f1d5cd591ef9981c3952685a" translate="yes" xml:space="preserve">
          <source>For example, to ensure that if &lt;code&gt;allocate&lt;/code&gt; in &lt;code&gt;server_b_SUITE&lt;/code&gt; crashes, &lt;code&gt;deallocate&lt;/code&gt; is skipped, the following sequence can be defined:</source>
          <target state="translated">예를 들어,하기되도록 &lt;code&gt;allocate&lt;/code&gt; 에 &lt;code&gt;server_b_SUITE&lt;/code&gt; 는 , 충돌 &lt;code&gt;deallocate&lt;/code&gt; 생략되어, 다음과 같은 순서가 정의 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="9076e6e4b089ebf20cf9a540d7f1aee997885493" translate="yes" xml:space="preserve">
          <source>For example, to extract data from a variable &lt;code&gt;P&lt;/code&gt; that contains such a tuple, you can write the following code and then use pattern matching to extract the relevant fields:</source>
          <target state="translated">예를 들어, 그러한 튜플을 포함 하는 변수 &lt;code&gt;P&lt;/code&gt; 에서 데이터를 추출 하려면 다음 코드를 작성한 다음 패턴 일치를 사용하여 관련 필드를 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="165d1726a6a8449fd11c523cb6173ce408d1b215" translate="yes" xml:space="preserve">
          <source>For example, to find the names of all male persons older than 30 in table &lt;code&gt;Tab&lt;/code&gt;:</source>
          <target state="translated">예를 들어 표 &lt;code&gt;Tab&lt;/code&gt; 에서 30 세 이상인 모든 남성의 이름을 찾으려면 다음과 같이하십시오 .</target>
        </trans-unit>
        <trans-unit id="29d0b41eca7d113f85d4ced597ad862d169772ce" translate="yes" xml:space="preserve">
          <source>For example, to get an interface list which only contains non-&lt;code&gt;loopback&lt;/code&gt;&lt;code&gt;inet&lt;/code&gt; interfaces:</source>
          <target state="translated">예를 들어, 비 &lt;code&gt;loopback&lt;/code&gt; &lt;code&gt;inet&lt;/code&gt; 인터페이스 만 포함하는 인터페이스 목록을 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="3c980a03b328542b1ed7ac72f423252763a50c75" translate="yes" xml:space="preserve">
          <source>For example, to specify that &lt;code&gt;sysLocation&lt;/code&gt; should have the value &lt;code&gt;&quot;upstairs&quot;&lt;/code&gt; in the notification, we could use one of:</source>
          <target state="translated">예를 들어 알림에서 &lt;code&gt;sysLocation&lt;/code&gt; 의 값이 &lt;code&gt;&quot;upstairs&quot;&lt;/code&gt; 가 되도록 지정 하려면 다음 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e34e72668c068932f81110e8db333f392f8c4c12" translate="yes" xml:space="preserve">
          <source>For example, to start playing with a small database for healthy foods, enter the following data into file &lt;code&gt;FRUITS&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 건강 식품을위한 작은 데이터베이스를 가지고 플레이하려면 &lt;code&gt;FRUITS&lt;/code&gt; 파일에 다음 데이터를 입력하십시오 .</target>
        </trans-unit>
        <trans-unit id="c79cece284c7a574f8b24e74fd28b2103fee53f7" translate="yes" xml:space="preserve">
          <source>For example, to start up IPv6 distributed nodes:</source>
          <target state="translated">예를 들어, IPv6 분산 노드를 시작하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="5d3c834a54d1f9ce57bef8f778331a10a4d219b1" translate="yes" xml:space="preserve">
          <source>For example, when &lt;code&gt;delayed_write&lt;/code&gt; is used, after a number of &lt;code&gt;write/2&lt;/code&gt; calls, &lt;code&gt;close/1&lt;/code&gt; can return &lt;code&gt;{error, enospc}&lt;/code&gt;, as there is not enough space on the disc for previously written data. &lt;code&gt;close/1&lt;/code&gt; must probably be called again, as the file is still open.</source>
          <target state="translated">예를 들어, &lt;code&gt;delayed_write&lt;/code&gt; 를 사용 하면 디스크에 이전에 기록 된 데이터를위한 공간이 충분하지 않기 때문에 &lt;code&gt;{error, enospc}&lt;/code&gt; &lt;code&gt;write/2&lt;/code&gt; 호출 후 &lt;code&gt;close/1&lt;/code&gt; 이 {error, enospc}를 리턴 할 수 있습니다 . 파일이 아직 열려 있으므로 &lt;code&gt;close/1&lt;/code&gt; 을 다시 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f2d3c2e0d281e11be02d6ce5a96d59d0e62d83a" translate="yes" xml:space="preserve">
          <source>For example: Assume that the primary log level for Logger is &lt;code&gt;info&lt;/code&gt;, and there is one handler, &lt;code&gt;h1&lt;/code&gt;, with level &lt;code&gt;info&lt;/code&gt; and one handler, &lt;code&gt;h2&lt;/code&gt;, with level &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">예를 들어 기록 장치의 기본 로그 레벨이라고 가정 &lt;code&gt;info&lt;/code&gt; , 및 하나의 처리기가 &lt;code&gt;h1&lt;/code&gt; 단계와, &lt;code&gt;info&lt;/code&gt; 하나의 처리기, &lt;code&gt;h2&lt;/code&gt; 수준으로, &lt;code&gt;debug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7226ad43063f4fb11a46a3647e3690e700002c5f" translate="yes" xml:space="preserve">
          <source>For example; for all sub ranges &lt;code&gt;N*2.0^(-53) =&amp;lt; X &amp;lt; (N+1)*2.0^(-53)&lt;/code&gt; where &lt;code&gt;0 =&amp;lt; integer(N) &amp;lt; 2.0^53&lt;/code&gt; the probability is the same. Compare that with the form of the numbers generated by &lt;code&gt;&lt;a href=&quot;#uniform_s-1&quot;&gt;uniform_s/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">예를 들어; 모든 하위 범위에 대해 &lt;code&gt;N*2.0^(-53) =&amp;lt; X &amp;lt; (N+1)*2.0^(-53)&lt;/code&gt; 여기서 &lt;code&gt;0 =&amp;lt; integer(N) &amp;lt; 2.0^53&lt;/code&gt; 확률은 같습니다. &lt;code&gt;&lt;a href=&quot;#uniform_s-1&quot;&gt;uniform_s/1&lt;/a&gt;&lt;/code&gt; 에 의해 생성 된 숫자 형식과 비교하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d768014f58f081c22826e708cc2d34357086d4a" translate="yes" xml:space="preserve">
          <source>For exceptional, non-cryptographic use cases one may consider switching to &lt;code&gt;erlang:md5/1&lt;/code&gt; as well.</source>
          <target state="translated">예외적 인 &lt;code&gt;erlang:md5/1&lt;/code&gt; 사용 사례의 경우 erlang : md5 / 1 로 전환하는 것도 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74c4c9f42d8482bd833058b7899b278b34ed3b86" translate="yes" xml:space="preserve">
          <source>For exceptions of class &lt;code&gt;error&lt;/code&gt;, that is, run-time errors, &lt;code&gt;{'EXIT',{Reason,Stack}}&lt;/code&gt; is returned.</source>
          <target state="translated">class &lt;code&gt;error&lt;/code&gt; 예외 , 즉 런타임 오류의 경우 &lt;code&gt;{'EXIT',{Reason,Stack}}&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="3d75fd7045c1f6c9e87c9b2629f7a20bce214805" translate="yes" xml:space="preserve">
          <source>For exceptions of class &lt;code&gt;exit&lt;/code&gt;, that is, the code called &lt;code&gt;exit(Term)&lt;/code&gt;, &lt;code&gt;{'EXIT',Term}&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;exit&lt;/code&gt; 클래스의 예외 , 즉 &lt;code&gt;exit(Term)&lt;/code&gt; , &lt;code&gt;{'EXIT',Term}&lt;/code&gt; 코드 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="3dec13e2e32d6e803a1b91bb785adf5664bf9800" translate="yes" xml:space="preserve">
          <source>For exceptions of class &lt;code&gt;throw&lt;/code&gt;, that is the code called &lt;code&gt;throw(Term)&lt;/code&gt;, &lt;code&gt;Term&lt;/code&gt; is returned.</source>
          <target state="translated">클래스 &lt;code&gt;throw&lt;/code&gt; 예외 , 즉 &lt;code&gt;throw(Term)&lt;/code&gt; 라는 코드의 경우 &lt;code&gt;Term&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2604653c559a78a66ea1e95ea2f6257c4c455d34" translate="yes" xml:space="preserve">
          <source>For external programs, &lt;code&gt;PATH&lt;/code&gt; is searched (or an equivalent method is used to find programs, depending on the OS). This is done by invoking the shell on certain platforms. The first space-separated token of the command is considered as the name of the executable (or driver). This (among other things) makes this option unsuitable for running programs with spaces in filenames or directory names. If spaces in executable filenames are desired, use &lt;code&gt;{spawn_executable, Command}&lt;/code&gt; instead.</source>
          <target state="translated">외부 프로그램의 경우 &lt;code&gt;PATH&lt;/code&gt; 가 검색됩니다 (또는 OS에 따라 동등한 방법을 사용하여 프로그램을 찾습니다). 특정 플랫폼에서 쉘을 호출하여 수행됩니다. 공백으로 구분 된 명령의 첫 번째 토큰은 실행 파일 (또는 드라이버)의 이름으로 간주됩니다. 이것은 무엇보다도 파일 이름이나 디렉토리 이름에 공백이있는 프로그램을 실행하기에 적합하지 않은 옵션입니다. 실행 파일 이름에 공백이 필요한 경우 대신 &lt;code&gt;{spawn_executable, Command}&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1891dce3e65d7a0c3e460d2a9502d403373cbec5" translate="yes" xml:space="preserve">
          <source>For fields without type annotations, their type defaults to any(). That is, the previous example is a shorthand for the following:</source>
          <target state="translated">유형 주석이없는 필드의 경우 유형은 기본적으로 any ()입니다. 즉, 이전 예제는 다음을 간략하게 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="67da59da0e06fe0812ccbbd7ea7860719c3945ad" translate="yes" xml:space="preserve">
          <source>For files where &lt;code&gt;encoding&lt;/code&gt; is set to something else than &lt;code&gt;latin1&lt;/code&gt;, one character can be represented by more than one byte on the file. The parameter &lt;code&gt;Number&lt;/code&gt; always denotes the number of &lt;strong&gt;characters&lt;/strong&gt; read from the file, while the position in the file can be moved much more than this number when reading a Unicode file.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; 이 &lt;code&gt;latin1&lt;/code&gt; 이외의 것으로 설정된 파일의 경우 파일에서 하나의 문자를 둘 이상의 바이트로 표시 할 수 있습니다. 매개 변수 &lt;code&gt;Number&lt;/code&gt; 항상 파일에서 읽은 &lt;strong&gt;문자&lt;/strong&gt; 수를 나타내며, 유니 코드 파일을 읽을 때 파일의 위치를이 숫자보다 훨씬 더 많이 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb8a8bf8fac124586b0d20cb5a01443247557b0a" translate="yes" xml:space="preserve">
          <source>For forward compatibility, a subscriber should be prepared to receive info fields of forms other than the above.</source>
          <target state="translated">순방향 호환성을 위해 가입자는 위의 형식 이외의 정보 필드를 수신 할 수 있도록 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="67aae87112a9193f42f2dd1a41c03cde10aefdf7" translate="yes" xml:space="preserve">
          <source>For further information on Igors in general, see e.g. &quot;Young Frankenstein&quot;, Mel Brooks, 1974, and &quot;The Fifth Elephant&quot;, Terry Pratchett, 1999.</source>
          <target state="translated">Igors에 대한 일반적인 정보는 예를 들어 &quot;1974 년 Mel Brooks,&quot;Young Frankenstein &quot;, 1999 년 Terry Pratchett,&quot;The Fifth Elephant &quot;를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8bbc4c06324b93dcc086156449e3db80e1ff44ad" translate="yes" xml:space="preserve">
          <source>For further information see the &lt;code&gt;&lt;a href=&quot;#process_received_message&quot;&gt;process_received_message/4&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#process_received_message&quot;&gt;process_received_message/4&lt;/a&gt;&lt;/code&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce92c6361747136bae6e813bf4e3da4a14ace014" translate="yes" xml:space="preserve">
          <source>For greater clarity and unambiguity, it is best to avoid following \ by a digit greater than zero. Instead, use \o{} or \x{} to specify character numbers, and \g{} to specify back references. The following paragraphs describe the old, ambiguous syntax.</source>
          <target state="translated">명확성과 명확성을 높이려면 0보다 큰 숫자로 \를 따르는 것이 가장 좋습니다. 대신 \ o {} 또는 \ x {}를 사용하여 문자 번호를 지정하고 \ g {}를 사용하여 역 참조를 지정하십시오. 다음 단락에서는 이전의 모호한 구문에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="6faa9506c39d676c9343e878dec62621a44a8773" translate="yes" xml:space="preserve">
          <source>For halt logs &lt;code&gt;File&lt;/code&gt; is the filename, and for wrap logs &lt;code&gt;File&lt;/code&gt; is the base name.</source>
          <target state="translated">정지 로그의 경우 &lt;code&gt;File&lt;/code&gt; 은 파일 이름이고 랩 로그의 경우 &lt;code&gt;File&lt;/code&gt; 은 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ea8a8cbda719dde2c7c4e59fae2b8bd4ea1a6625" translate="yes" xml:space="preserve">
          <source>For help on the warning options, use &lt;code&gt;dialyzer -Whelp&lt;/code&gt;. The options are also enumerated, see function &lt;code&gt;&lt;a href=&quot;#gui-1&quot;&gt; gui/1&lt;/a&gt;&lt;/code&gt; below (&lt;code&gt;WarnOpts&lt;/code&gt;).</source>
          <target state="translated">경고 옵션에 대한 도움말을 &lt;code&gt;dialyzer -Whelp&lt;/code&gt; 사용 하십시오 . 옵션도 열거 됩니다. 아래의 &lt;code&gt;&lt;a href=&quot;#gui-1&quot;&gt; gui/1&lt;/a&gt;&lt;/code&gt; 함수를 참조하십시오 ( &lt;code&gt;WarnOpts&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d824ac8b77aeeac255e5a3f60baad39e84eff882" translate="yes" xml:space="preserve">
          <source>For help on the warning options, use &lt;code&gt;dialyzer -Whelp&lt;/code&gt;. The options are also enumerated, see function &lt;code&gt;&lt;a href=&quot;#gui-1&quot;&gt;gui/1&lt;/a&gt;&lt;/code&gt; below (&lt;code&gt;WarnOpts&lt;/code&gt;).</source>
          <target state="translated">경고 옵션에 대한 도움말을 &lt;code&gt;dialyzer -Whelp&lt;/code&gt; 사용 하십시오 . 옵션도 열거 되어 있습니다 (아래의 함수 &lt;code&gt;&lt;a href=&quot;#gui-1&quot;&gt;gui/1&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;WarnOpts&lt;/code&gt; ) 참조 ).</target>
        </trans-unit>
        <trans-unit id="a76bb57654667e86b344857b26a9452d8fd8b746" translate="yes" xml:space="preserve">
          <source>For implementing a supervisor in a supervision tree</source>
          <target state="translated">감독 트리에서 감독자를 구현하는 경우</target>
        </trans-unit>
        <trans-unit id="cc01c00724b3f42e64d79847c50fb8953aff50c3" translate="yes" xml:space="preserve">
          <source>For implementing event handling functionality</source>
          <target state="translated">이벤트 처리 기능 구현</target>
        </trans-unit>
        <trans-unit id="2930686a66b9fb8f7bf3588e61b71723ababbefc" translate="yes" xml:space="preserve">
          <source>For implementing state machines</source>
          <target state="translated">상태 머신을 구현하기 위해</target>
        </trans-unit>
        <trans-unit id="4efad4998fb01460fa6e8b34bf1b3e028f517060" translate="yes" xml:space="preserve">
          <source>For implementing the server of a client-server relation</source>
          <target state="translated">클라이언트-서버 관계의 서버 구현</target>
        </trans-unit>
        <trans-unit id="39effd3837ccb93c4fbb4c1a2210f6e6d181e6be" translate="yes" xml:space="preserve">
          <source>For incoming messages:</source>
          <target state="translated">수신 메시지 :</target>
        </trans-unit>
        <trans-unit id="0351f75d8032cdd9f14984b6e4a439bffa6af520" translate="yes" xml:space="preserve">
          <source>For increased performance, raw files are recommended.</source>
          <target state="translated">성능을 향상 시키려면 원시 파일이 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="c33350338a7d8309e7ede8329c65d751bf44f2ca" translate="yes" xml:space="preserve">
          <source>For information about &lt;code&gt;File = name()&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;filename&quot;&gt;filename(3)&lt;/a&gt;&lt;/code&gt;. For information about &lt;code&gt;Options&lt;/code&gt; and &lt;code&gt;YeccRet&lt;/code&gt;, see &lt;code&gt;yecc:file/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File = name()&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;filename&quot;&gt;filename(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 . &lt;code&gt;Options&lt;/code&gt; 및 &lt;code&gt;YeccRet&lt;/code&gt; 에 대한 정보는 &lt;code&gt;yecc:file/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e10183a8a3ba351835560916c59038a5ccba072" translate="yes" xml:space="preserve">
          <source>For information about &lt;code&gt;File = name()&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;filename&quot;&gt;filename(3)&lt;/a&gt;&lt;/code&gt;. For information about &lt;code&gt;YeccRet&lt;/code&gt;, see &lt;code&gt;yecc:file/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File = name()&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;filename&quot;&gt;filename(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 . &lt;code&gt;YeccRet&lt;/code&gt; 에 대한 정보는 yecc &lt;code&gt;yecc:file/2&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a75e99467f6d507524f88ca5756496e8907d98c5" translate="yes" xml:space="preserve">
          <source>For information about &lt;code&gt;File&lt;/code&gt;, see &lt;code&gt;file:filename()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 에 대한 정보는 &lt;code&gt;file:filename()&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d814fe7b2ac52e63947b9c3515d52567531c5b27" translate="yes" xml:space="preserve">
          <source>For information about Funs, see &quot;Fun Expressions&quot; in section &lt;code&gt;Erlang Reference Manual&lt;/code&gt; in System Documentation..</source>
          <target state="translated">Funs에 대한 정보 는 시스템 문서의 &lt;code&gt;Erlang Reference Manual&lt;/code&gt; 섹션에있는 &quot;Fun Expressions&quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c41c6e80873e7cdcfede11fc729172cad8090733" translate="yes" xml:space="preserve">
          <source>For information about Logger and its user interface, see the &lt;code&gt;logger(3)&lt;/code&gt; manual page and the &lt;code&gt;Logging&lt;/code&gt; section in the Kernel User's Guide. The system can be configured so that log events are written to file or to tty, or both. In addition, user-defined applications can send and format log events using Logger.</source>
          <target state="translated">로거 및 해당 사용자 인터페이스에 대한 자세한 내용은 Kernel User 's Guide 의 &lt;code&gt;logger(3)&lt;/code&gt; 매뉴얼 페이지 및 &lt;code&gt;Logging&lt;/code&gt; 섹션을 참조하십시오. 로그 이벤트가 파일 또는 tty 또는 둘 다에 기록되도록 시스템을 구성 할 수 있습니다. 또한 사용자 정의 응용 프로그램은 로거를 사용하여 로그 이벤트를 보내고 형식을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e91229de80a58d983d668739cc8e252f38b0f3d5" translate="yes" xml:space="preserve">
          <source>For information about QLC, see the &lt;code&gt;qlc&lt;/code&gt; manual page in STDLIB.</source>
          <target state="translated">QLC에 대한 정보 는 STDLIB 의 &lt;code&gt;qlc&lt;/code&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f1eacb6ade87a98d717cbc459d607de76f3d2b3" translate="yes" xml:space="preserve">
          <source>For information about available algorithms, use:</source>
          <target state="translated">사용 가능한 알고리즘에 대한 정보는 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="43875c76cb51ac9e3ce88d0c97a427df262d1eac" translate="yes" xml:space="preserve">
          <source>For information about busy port functionality, see &lt;code&gt;&lt;a href=&quot;#set_busy_port&quot;&gt;set_busy_port&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용중인 포트 기능에 대한 정보는 &lt;code&gt;&lt;a href=&quot;#set_busy_port&quot;&gt;set_busy_port&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8916236fc5e077607ebf105e76865c732fa3ca8" translate="yes" xml:space="preserve">
          <source>For information about busy port message queue functionality, see &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt; erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용중인 포트 메시지 대기열 기능에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt; erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27fff486a2d61c6ae6bef6fa2abb95ae3fa79860" translate="yes" xml:space="preserve">
          <source>For information about busy port message queue functionality, see &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt;erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">사용중인 포트 메시지 큐 기능에 대한 정보는 &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt;erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72f1f2721e7c0570e64539e37aaeb1a809a1b6ab" translate="yes" xml:space="preserve">
          <source>For information about encoding requirements, see documentation of the types for &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Val&lt;/code&gt;.</source>
          <target state="translated">인코딩 요구 사항에 대한 정보는 &lt;code&gt;Name&lt;/code&gt; 및 &lt;code&gt;Val&lt;/code&gt; 유형의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8faf99b329fd2cc71377120a2c05350e31daef0" translate="yes" xml:space="preserve">
          <source>For information about how to add a CTH to your suite, see section &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#installing&quot;&gt;Installing a CTH&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">제품군에 CTH를 추가하는 방법에 대한 자세한 내용은 사용자 안내서의 &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#installing&quot;&gt;Installing a CTH&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf8e9b5c30f413b33d875d9035e049c9f9bdf35f" translate="yes" xml:space="preserve">
          <source>For information about how to change the stack trace option, see section &lt;code&gt;&lt;a href=&quot;#monitor&quot;&gt;Monitor Window&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택 추적 옵션을 변경하는 방법에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#monitor&quot;&gt;Monitor Window&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff33efbb601c93ef1d613a1985dfd7ce296ead7d" translate="yes" xml:space="preserve">
          <source>For information about how to use this parse transformation, see &lt;code&gt;&lt;a href=&quot;ets&quot;&gt;ets&lt;/a&gt;&lt;/code&gt; and &lt;code&gt; dbg:fun2ms/1&lt;/code&gt;.</source>
          <target state="translated">이 구문 분석 변환을 사용하는 방법에 대한 정보는 &lt;code&gt;&lt;a href=&quot;ets&quot;&gt;ets&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt; dbg:fun2ms/1&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbb0a1432a75af787cead1c6984e8221c83da3c1" translate="yes" xml:space="preserve">
          <source>For information about how to use this parse transformation, see &lt;code&gt;&lt;a href=&quot;ets&quot;&gt;ets&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;dbg:fun2ms/1&lt;/code&gt;.</source>
          <target state="translated">이 구문 분석 변환을 사용하는 방법에 대한 정보는 &lt;code&gt;&lt;a href=&quot;ets&quot;&gt;ets&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;dbg:fun2ms/1&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="850b45d7cfa22af60f9fb3a83cee35b0efe89e5f" translate="yes" xml:space="preserve">
          <source>For information about port drivers, see the &lt;code&gt;erl_driver(4)&lt;/code&gt; manual page in ERTS, &lt;code&gt;driver_entry(1)&lt;/code&gt; manual page in ERTS, and &lt;code&gt;erl_ddll(3)&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">포트 드라이버에 대한 자세한 내용은 ERTS 의 &lt;code&gt;erl_driver(4)&lt;/code&gt; 매뉴얼 페이지, ERTS의 &lt;code&gt;driver_entry(1)&lt;/code&gt; 매뉴얼 페이지 및 커널의 &lt;code&gt;erl_ddll(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c8ea796bd679310cad2a8c019f2fd120b956863e" translate="yes" xml:space="preserve">
          <source>For information about specific &lt;code&gt;InfoTuple&lt;/code&gt;s, see &lt;code&gt;&lt;a href=&quot;#process_info-2&quot;&gt;process_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;InfoTuple&lt;/code&gt; 에 대한 정보는 &lt;code&gt;&lt;a href=&quot;#process_info-2&quot;&gt;process_info/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="47f7c80f04ac198a99b61b54fa252498361eb700" translate="yes" xml:space="preserve">
          <source>For information about specific fields, see &lt;code&gt;&lt;a href=&quot;#ErlDrvSysInfo&quot;&gt;ErlDrvSysInfo&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">특정 필드에 대한 정보는 &lt;code&gt;&lt;a href=&quot;#ErlDrvSysInfo&quot;&gt;ErlDrvSysInfo&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="76b964cfa491aaf9b17e62e3f97e9366930cc853" translate="yes" xml:space="preserve">
          <source>For information about test case groups, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트 사례 그룹에 대한 자세한 내용은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fa3bb5e7ad6bb510175e8e09c4259cba8d9ac6e" translate="yes" xml:space="preserve">
          <source>For information about the complete set of table properties and their details, see &lt;code&gt;mnesia:create_table/2&lt;/code&gt;.</source>
          <target state="translated">전체 테이블 특성 세트 및 세부 사항에 대한 정보는 &lt;code&gt;mnesia:create_table/2&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e65315dfa47e3a65534569f12fe34b43632f6cf" translate="yes" xml:space="preserve">
          <source>For information about the current agent config (&lt;code&gt;AgentConfig&lt;/code&gt;), see either the &lt;code&gt;SNMP application&lt;/code&gt; part of the reference manual or the &lt;code&gt;&lt;a href=&quot;snmp_config&quot;&gt;Configuring the application&lt;/a&gt;&lt;/code&gt; chapter of the SNMP user's guide.</source>
          <target state="translated">현재 에이전트 구성 ( &lt;code&gt;AgentConfig&lt;/code&gt; ) 에 대한 정보 는 참조 매뉴얼 의 &lt;code&gt;SNMP application&lt;/code&gt; 부분 또는 SNMP 사용자 안내서 &lt;code&gt;&lt;a href=&quot;snmp_config&quot;&gt;Configuring the application&lt;/a&gt;&lt;/code&gt; 장을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2c4628abe30d3bf93df83f864e281c18cd5f0f30" translate="yes" xml:space="preserve">
          <source>For information about the current agent config (&lt;code&gt;AgentConfig&lt;/code&gt;), see the &lt;code&gt;&lt;a href=&quot;snmp_config#configuration_params&quot;&gt;Configuring the application&lt;/a&gt;&lt;/code&gt; chapter of the SNMP user's guide.</source>
          <target state="translated">현재 에이전트 구성 ( &lt;code&gt;AgentConfig&lt;/code&gt; ) 에 대한 자세한 내용은 SNMP 사용 설명서 &lt;code&gt;&lt;a href=&quot;snmp_config#configuration_params&quot;&gt;Configuring the application&lt;/a&gt;&lt;/code&gt; 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="396b2c0312dce3946fa12e503260cb07fdd975d1" translate="yes" xml:space="preserve">
          <source>For information about the old config (&lt;code&gt;OldConfig&lt;/code&gt;) see the OTP R9C documentation.</source>
          <target state="translated">이전 구성 ( &lt;code&gt;OldConfig&lt;/code&gt; ) 에 대한 정보 는 OTP R9C 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="486b6efd455568eabc4284b79f23c4a39170ea3a" translate="yes" xml:space="preserve">
          <source>For information about the release upgrade file, see the &lt;code&gt;relup(4)&lt;/code&gt; manual page in SASL. For more information about upgrade instructions, see the &lt;code&gt;appup(4)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">릴리스 업그레이드 파일에 대한 자세한 내용은 SASL 의 &lt;code&gt;relup(4)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오. 업그레이드 지침에 대한 자세한 내용은 SASL 의 &lt;code&gt;appup(4)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="84f04abbce46aeb36b2ced6befa16cd5e9c2fd97" translate="yes" xml:space="preserve">
          <source>For information about the start flags, see section &lt;code&gt;&lt;a href=&quot;run_test_chapter&quot;&gt;Running Tests and Analyzing Results&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">시작 플래그에 대한 자세한 내용은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;run_test_chapter&quot;&gt;Running Tests and Analyzing Results&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="91fa203add7b096a7ebff9c87af90825a01dabd3" translate="yes" xml:space="preserve">
          <source>For information about the syntax and contents of the &lt;code&gt;.appup&lt;/code&gt; file, see the &lt;code&gt;appup(4)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">&lt;code&gt;.appup&lt;/code&gt; 파일 의 구문과 내용에 대한 자세한 내용은 SASL 의 &lt;code&gt;appup(4)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e0350f9dd73730b552f7190550fb86e2ce7184b" translate="yes" xml:space="preserve">
          <source>For information about using encrypted configuration files when running tests, see section &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;Encrypted Configuration Files&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">테스트를 실행할 때 암호화 된 구성 파일을 사용하는 방법에 대한 자세한 내용은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;Encrypted Configuration Files&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0930818937de0b45fd9742228a05da86533cf17b" translate="yes" xml:space="preserve">
          <source>For information and examples of overload protection, please refer to section &lt;code&gt;&lt;a href=&quot;#overload_protection&quot;&gt;Protecting the Handler from Overload&lt;/a&gt;&lt;/code&gt;, and the implementation of &lt;code&gt;&lt;a href=&quot;logger_std_h&quot;&gt;logger_std_h&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger_disk_log_h&quot;&gt;logger_disk_log_h &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">과부하 보호에 대한 정보와 예는 과부하 &lt;code&gt;&lt;a href=&quot;#overload_protection&quot;&gt;Protecting the Handler from Overload&lt;/a&gt;&lt;/code&gt; 섹션 과 &lt;code&gt;&lt;a href=&quot;logger_std_h&quot;&gt;logger_std_h&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;logger_disk_log_h&quot;&gt;logger_disk_log_h &lt;/a&gt;&lt;/code&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5949891d8cbb51d1f63fd38796d07983e70ba884" translate="yes" xml:space="preserve">
          <source>For information and examples of overload protection, please refer to section &lt;code&gt;&lt;a href=&quot;#overload_protection&quot;&gt;Protecting the Handler from Overload&lt;/a&gt;&lt;/code&gt;, and the implementation of &lt;code&gt;&lt;a href=&quot;logger_std_h&quot;&gt;logger_std_h&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger_disk_log_h&quot;&gt;logger_disk_log_h&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">과부하 보호에 대한 정보 및 예는 과부하 &lt;code&gt;&lt;a href=&quot;#overload_protection&quot;&gt;Protecting the Handler from Overload&lt;/a&gt;&lt;/code&gt; 섹션 및 &lt;code&gt;&lt;a href=&quot;logger_std_h&quot;&gt;logger_std_h&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;logger_disk_log_h&quot;&gt;logger_disk_log_h&lt;/a&gt;&lt;/code&gt; 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac91fa29a8e3871804e923c0db3ad0a884cba2d9" translate="yes" xml:space="preserve">
          <source>For information and other types, see &lt;code&gt;ssh_sftp(3)&lt;/code&gt;.</source>
          <target state="translated">정보 및 기타 유형은 &lt;code&gt;ssh_sftp(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a91bd4a7cd9be59fe70fa527b1d7151d26b5ed5c" translate="yes" xml:space="preserve">
          <source>For information on &lt;code&gt;save_config&lt;/code&gt; and &lt;code&gt;skip_and_save&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;dependencies_chapter#save_config&quot;&gt;Saving Configuration Data&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;save_config&lt;/code&gt; 및 &lt;code&gt;skip_and_save&lt;/code&gt; 에 대한 자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;dependencies_chapter#save_config&quot;&gt;Saving Configuration Data&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="11ae2243ea6b11c9af62392821b47de37c111a1e" translate="yes" xml:space="preserve">
          <source>For information on &lt;code&gt;save_config&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;dependencies_chapter#save_config&quot;&gt;Saving Configuration Data&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;save_config&lt;/code&gt; 에 대한 자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;dependencies_chapter#save_config&quot;&gt;Saving Configuration Data&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7060c1d91ea87a723dd0701daebda8b882de1e3" translate="yes" xml:space="preserve">
          <source>For information on how to communicate with Erlang/OTP components from earlier releases, see the documentation of system flag &lt;code&gt;&lt;a href=&quot;erl#compat_rel&quot;&gt;+R&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">이전 릴리스에서 Erlang / OTP 구성 요소와 통신하는 방법에 대한 정보 는 &lt;code&gt;erl(1)&lt;/code&gt; 의 시스템 플래그 &lt;code&gt;&lt;a href=&quot;erl#compat_rel&quot;&gt;+R&lt;/a&gt;&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a403ce7c5ca0b75c3d3ccd6407eddb1d8910439e" translate="yes" xml:space="preserve">
          <source>For information on how to create a new &lt;code&gt;Name&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;ct#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">새 &lt;code&gt;Name&lt;/code&gt; 생성 방법에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;ct#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb790298eedcb9410a73df18d439e2c13d02801e" translate="yes" xml:space="preserve">
          <source>For information on how to install the first target system, using a release package, see System Principles. For information on how to install a new release package in an existing system, see &lt;code&gt;&lt;a href=&quot;release_handling&quot;&gt;Release Handling&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">릴리스 패키지를 사용하여 첫 번째 대상 시스템을 설치하는 방법에 대한 자세한 내용은 시스템 원칙을 참조하십시오. 기존 시스템에 새 릴리스 패키지를 설치하는 방법에 대한 정보는 &lt;code&gt;&lt;a href=&quot;release_handling&quot;&gt;Release Handling&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41eb6710c9bce3ebef5d0f90ce7ca0a08e328294" translate="yes" xml:space="preserve">
          <source>For information on how to run the emulator with instrumentation, see &lt;code&gt; instrument(3)&lt;/code&gt; and/or &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">계측과 함께 에뮬레이터를 실행하는 방법에 대한 자세한 내용은 &lt;code&gt; instrument(3)&lt;/code&gt; 및 / 또는 &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c568ae3018be99aeb9c329db9822c86fd2744e5" translate="yes" xml:space="preserve">
          <source>For information on how to run the emulator with instrumentation, see &lt;code&gt;instrument(3)&lt;/code&gt; and/or &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인스 트루먼 테이션으로 에뮬레이터를 실행하는 방법에 대한 정보는 &lt;code&gt;instrument(3)&lt;/code&gt; 및 / 또는 &lt;code&gt;&lt;a href=&quot;erl&quot;&gt;erl(1)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89f496120bfa6e0f04d5a242cd00657a5af8b9e6" translate="yes" xml:space="preserve">
          <source>For information on type &lt;code&gt;CpuTopology&lt;/code&gt; and more, see &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt; as well as command-line flags &lt;code&gt;+sct&lt;/code&gt; and &lt;code&gt;+sbt&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">타입에 대한 내용 &lt;code&gt;CpuTopology&lt;/code&gt; 등 참조 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt; 뿐만 아니라 커맨드 라인 플래그 &lt;code&gt;+sct&lt;/code&gt; 및 &lt;code&gt;+sbt&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fc9e033c8d8b0dad26dfd10cd968656821cde8b" translate="yes" xml:space="preserve">
          <source>For information on type &lt;code&gt;CpuTopology&lt;/code&gt; and more, see &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt; as well as command-line flags &lt;code&gt;+sct&lt;/code&gt; and &lt;code&gt;+sbt&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">타입에 대한 내용 &lt;code&gt;CpuTopology&lt;/code&gt; 등 참조 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt; 뿐만 아니라 커맨드 라인 플래그 &lt;code&gt;+sct&lt;/code&gt; 및 &lt;code&gt;+sbt&lt;/code&gt; 의 &lt;code&gt;erl(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8af1f718a2b3725bae31f2443e86a82dffb9dda2" translate="yes" xml:space="preserve">
          <source>For instance, to use EUnit in your application, but with testing turned off by default, put the following lines in a header file:</source>
          <target state="translated">예를 들어, 응용 프로그램에서 EUnit을 사용하지만 기본적으로 테스트를 끈 상태에서 헤더 파일에 다음 줄을 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="28229934c08458f4e38e6f6b7422908a2aa6202e" translate="yes" xml:space="preserve">
          <source>For instructions for exclusive decode, see Section &lt;code&gt;&lt;a href=&quot;asn1_spec#Exclusive%20Instruction&quot;&gt;Exclusive Decode&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">전용 디코딩에 대한 자세한 내용은 섹션을 참조 &lt;code&gt;&lt;a href=&quot;asn1_spec#Exclusive%20Instruction&quot;&gt;Exclusive Decode&lt;/a&gt;&lt;/code&gt; 사용자 가이드에.</target>
        </trans-unit>
        <trans-unit id="abc6cf4e0ae923b4a0f8ded5ba2083f7c11b4420" translate="yes" xml:space="preserve">
          <source>For instructions for selective decode, see Section &lt;code&gt;&lt;a href=&quot;asn1_spec#Selective%20Instruction&quot;&gt;Selective Decode&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">선택적 디코딩에 대한 지침은 사용 설명서의 섹션 &lt;code&gt;&lt;a href=&quot;asn1_spec#Selective%20Instruction&quot;&gt;Selective Decode&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="065155fd6683566506228cf65b82061dd7ff9f36" translate="yes" xml:space="preserve">
          <source>For integer &lt;code&gt;Status&lt;/code&gt;, the Erlang runtime system closes all ports and allows async threads to finish their operations before exiting. To exit without such flushing, use &lt;code&gt;Option&lt;/code&gt; as &lt;code&gt;{flush,false}&lt;/code&gt;.</source>
          <target state="translated">integer &lt;code&gt;Status&lt;/code&gt; 의 경우 Erlang 런타임 시스템은 모든 포트를 닫고 종료하기 전에 비동기 스레드가 작업을 완료 할 수 있도록합니다. 이러한 플러시없이 종료하려면 &lt;code&gt;Option&lt;/code&gt; 을 &lt;code&gt;{flush,false}&lt;/code&gt; 로 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="81fa260d9adabb8da5b25261cc7af0d3faaea668" translate="yes" xml:space="preserve">
          <source>For integers and atoms, it is allowed for singleton types; for example, the integers &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;42&lt;/code&gt;, or the atoms &lt;code&gt;'foo'&lt;/code&gt; and &lt;code&gt;'bar'&lt;/code&gt;. All other types are built using unions of either predefined types or singleton types. In a type union between a type and one of its subtypes, the subtype is absorbed by the supertype. Thus, the union is then treated as if the subtype was not a constituent of the union. For example, the type union:</source>
          <target state="translated">정수 및 원자의 경우 싱글 톤 유형이 허용됩니다. 예를 들어, 정수 &lt;code&gt;-1&lt;/code&gt; 및 &lt;code&gt;42&lt;/code&gt; 또는 원자 &lt;code&gt;'foo'&lt;/code&gt; 및 &lt;code&gt;'bar'&lt;/code&gt; 입니다. 다른 모든 유형은 사전 정의 된 유형 또는 싱글 톤 유형의 조합을 사용하여 빌드됩니다. 유형과 하위 유형 중 하나의 유형 통합에서 하위 유형은 수퍼 유형에 의해 흡수됩니다. 따라서 결합은 부속 유형이 결합의 구성 요소가 아닌 것처럼 처리됩니다. 예를 들어, union 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="46d1b7d945d6ff08705ea0ad400e1e13dee9cf69" translate="yes" xml:space="preserve">
          <source>For investigation of locks in the emulator we use an internal tool called &lt;code&gt;lcnt&lt;/code&gt; (short for lock-count). The VM needs to be compiled with this option enabled. To compile a lock-counting VM along with a normal VM, use:</source>
          <target state="translated">에뮬레이터의 잠금을 조사 하기 위해 &lt;code&gt;lcnt&lt;/code&gt; (잠금 수의 줄임말) 라는 내부 도구를 사용합니다 . 이 옵션을 활성화하여 VM을 컴파일해야합니다. 잠금 계산 VM을 일반 VM과 함께 컴파일하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a423a2bbc3036962c93830f52e5a32dc306ef856" translate="yes" xml:space="preserve">
          <source>For keylengths and blocksizes see the &lt;code&gt;User's Guide&lt;/code&gt;.</source>
          <target state="translated">키 길이 및 블록 크기는 &lt;code&gt;User's Guide&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b70296ec49c84bac1c815b606c26e3031dcec673" translate="yes" xml:space="preserve">
          <source>For keylengths and iv-sizes see the &lt;code&gt;User's Guide&lt;/code&gt;.</source>
          <target state="translated">키 길이 및 iv- 크기에 대해서는 &lt;code&gt;User's Guide&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c709a86cc94bc57dcc43667e2cbd31b0ffac77a" translate="yes" xml:space="preserve">
          <source>For keylengths see the &lt;code&gt;User's Guide&lt;/code&gt;.</source>
          <target state="translated">키 길이는 &lt;code&gt;User's Guide&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f7946dfab4c2dd54e5e7f2a90661c7e0b0bce6a" translate="yes" xml:space="preserve">
          <source>For keylengths, iv-sizes and blocksizes see the &lt;code&gt;User's Guide&lt;/code&gt;.</source>
          <target state="translated">키 길이, iv- 크기 및 블록 크기에 대해서는 &lt;code&gt;User's Guide&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38ea34e351960a3cdde04f6a2ad2a3effaeab7f5" translate="yes" xml:space="preserve">
          <source>For keys other than the known &lt;code&gt;false&lt;/code&gt; is returned. Note that in a future version or on a different platform there might be more supported items.</source>
          <target state="translated">알려진 &lt;code&gt;false&lt;/code&gt; 이외의 키에 대해 반환됩니다. 향후 버전 또는 다른 플랫폼에서는 더 많은 지원 항목이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15b0fd9da58c5b0f23fbf21eca03100c1dc227b5" translate="yes" xml:space="preserve">
          <source>For keys other than the known the empty list is returned, Note that in a future version or on a different platform there might be more supported items.</source>
          <target state="translated">알려진 것 이외의 키의 경우 빈 목록이 반환됩니다. 향후 버전이나 다른 플랫폼에서는 더 많은 지원 항목이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fa24a4ab3c3b9e5f2e9a7f0e20d3afbe8c8078d" translate="yes" xml:space="preserve">
          <source>For line-oriented protocols (&lt;code&gt;line&lt;/code&gt;, &lt;code&gt;http*&lt;/code&gt;), option &lt;code&gt;packet_size&lt;/code&gt; also guarantees that lines up to the indicated length are accepted and not considered invalid because of internal buffer limitations.</source>
          <target state="translated">라인 지향 프로토콜 ( &lt;code&gt;line&lt;/code&gt; , &lt;code&gt;http*&lt;/code&gt; )의 경우, &lt;code&gt;packet_size&lt;/code&gt; 옵션 은 지정된 길이까지의 라인이 허용되며 내부 버퍼 제한으로 인해 유효하지 않은 것으로 간주하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="d38b75c05ac3884d26120299b6facf57ffce1372" translate="yes" xml:space="preserve">
          <source>For linked-in drivers, the programmer needs to read the &lt;code&gt;erl_ddll&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">링크 된 드라이버의 경우 프로그래머 는 커널 의 &lt;code&gt;erl_ddll&lt;/code&gt; 매뉴얼 페이지 를 읽어야합니다 .</target>
        </trans-unit>
        <trans-unit id="39d0616755adee1d32413244883965d0077e0686" translate="yes" xml:space="preserve">
          <source>For log events from the emulator, synchronous message passing mode is not applicable, since all messages are passed asynchronously by the emulator. Drop mode is achieved by setting the &lt;code&gt;system_logger&lt;/code&gt; to &lt;code&gt;undefined&lt;/code&gt;, forcing the emulator to drop events until it is set back to the proxy pid again.</source>
          <target state="translated">에뮬레이터의 로그 이벤트의 경우 모든 메시지가 에뮬레이터에 의해 비동기 적으로 전달되므로 동기 메시지 전달 모드를 적용 할 수 없습니다. 삭제 모드는 &lt;code&gt;system_logger&lt;/code&gt; 를 &lt;code&gt;undefined&lt;/code&gt; 로 설정하여 에뮬레이터가 다시 프록시 pid로 다시 설정 될 때까지 이벤트를 삭제하도록합니다.</target>
        </trans-unit>
        <trans-unit id="bfa965799221d110e2155b47752cebe6e62504a8" translate="yes" xml:space="preserve">
          <source>For module-local types, the restriction that their definition exists in the module is enforced by the compiler and results in a compilation error. (A similar restriction currently exists for records.)</source>
          <target state="translated">모듈-로컬 유형의 경우 해당 정의가 모듈에 존재한다는 제한은 컴파일러에 의해 시행되며 컴파일 오류가 발생합니다. (현재 레코드에도 비슷한 제한이 있습니다.)</target>
        </trans-unit>
        <trans-unit id="3ac058b62db8c8383f25b9c9e684207320ed7e09" translate="yes" xml:space="preserve">
          <source>For modules compiled with OTP 20 onwards, the &lt;code&gt;abst_code&lt;/code&gt; chunk is automatically computed from the &lt;code&gt;debug_info&lt;/code&gt; chunk.</source>
          <target state="translated">이후 OTP 20 컴파일 모듈 들어 &lt;code&gt;abst_code&lt;/code&gt; 의 청크가 자동으로 계산된다 &lt;code&gt;debug_info&lt;/code&gt; 의 청크.</target>
        </trans-unit>
        <trans-unit id="747f76962640cb75c0b07fdf2558c1f95cc82d06" translate="yes" xml:space="preserve">
          <source>For modules that have native code loaded (see &lt;code&gt;&lt;a href=&quot;#is_module_native-1&quot;&gt;is_module_native/1&lt;/a&gt;&lt;/code&gt;), the MD5 sum of the native code in the object file is used for the comparison, if it exists; the Beam code in the file is ignored. Reversely, for modules that do not currently have native code loaded, any native code in the file will be ignored.</source>
          <target state="translated">원시 코드가로드 된 모듈 ( &lt;code&gt;&lt;a href=&quot;#is_module_native-1&quot;&gt;is_module_native/1&lt;/a&gt;&lt;/code&gt; 참조 )의 경우, 오브젝트 파일에있는 원시 코드의 MD5 합계가 비교에 사용됩니다 (있는 경우). 파일의 빔 코드는 무시됩니다. 반대로, 현재 원시 코드가로드되지 않은 모듈의 경우 파일의 원시 코드는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a638687974cb0ce829af38e640e4d19908921db5" translate="yes" xml:space="preserve">
          <source>For more control over the error handling, use the &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt; interface instead.</source>
          <target state="translated">오류 처리에 대한 자세한 제어를 위해서는 &lt;code&gt;&lt;a href=&quot;#try_load-3&quot;&gt;try_load/3&lt;/a&gt;&lt;/code&gt; 인터페이스를 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0fe4a57106ddcad024177e6a4f89c184b2daa3be" translate="yes" xml:space="preserve">
          <source>For more detail, see the &lt;code&gt;&lt;a href=&quot;megaco_transport&quot;&gt;megaco_transport&lt;/a&gt;&lt;/code&gt; behaviour definition.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;megaco_transport&quot;&gt;megaco_transport&lt;/a&gt;&lt;/code&gt; 동작 정의를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14f514c6b3d73fec390c14af34f1764416467804" translate="yes" xml:space="preserve">
          <source>For more detailed information on time-outs, see Section &lt;code&gt;&lt;a href=&quot;#cb_timeouts&quot;&gt;Callback timeouts&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#cb_timeouts&quot;&gt;Callback timeouts&lt;/a&gt;&lt;/code&gt; 에 대한 자세한 내용은 콜백 시간 초과 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7acfe7142eb7bcfb648d6265914c5eee5dd2fd3" translate="yes" xml:space="preserve">
          <source>For more detailed information on time-outs,, see Section &lt;code&gt;&lt;a href=&quot;#cb_timeouts&quot;&gt;Callback timeouts&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#cb_timeouts&quot;&gt;Callback timeouts&lt;/a&gt;&lt;/code&gt; 에 대한 자세한 내용은 콜백 시간 초과 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="48147b4bec5cfdf55befde1fa097e550e5185740" translate="yes" xml:space="preserve">
          <source>For more detailed information see the &lt;code&gt;&lt;a href=&quot;#soc_table&quot;&gt;Standards Compliance&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">자세한 내용은 아래 &lt;code&gt;&lt;a href=&quot;#soc_table&quot;&gt;Standards Compliance&lt;/a&gt;&lt;/code&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="169498bb75a141fa3fd9c2f4ec48c571d942c6d8" translate="yes" xml:space="preserve">
          <source>For more details about the event notification mechanism, see RFC 5277.</source>
          <target state="translated">이벤트 알림 메커니즘에 대한 자세한 내용은 RFC 5277을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d5a40b9eacd19acbb162b569c8581bc93a2b83bc" translate="yes" xml:space="preserve">
          <source>For more details about the operation of Dialyzer, see section &lt;code&gt;&lt;a href=&quot;dialyzer_chapter#dialyzer_gui&quot;&gt; Using Dialyzer from the GUI&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">Dialyzer 작동에 대한 자세한 내용은 사용자 가이드 &lt;code&gt;&lt;a href=&quot;dialyzer_chapter#dialyzer_gui&quot;&gt; Using Dialyzer from the GUI&lt;/a&gt;&lt;/code&gt; 에서 Dialyzer 사용 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7536188245d09c6ee6775a0d9b510b3d321a3523" translate="yes" xml:space="preserve">
          <source>For more details about the operation of Dialyzer, see section &lt;code&gt;&lt;a href=&quot;dialyzer_chapter#dialyzer_gui&quot;&gt;Using Dialyzer from the GUI&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">투석기 작동에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;dialyzer_chapter#dialyzer_gui&quot;&gt;Using Dialyzer from the GUI&lt;/a&gt;&lt;/code&gt; 설명서의 GUI 에서 투석기 사용 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="11ec302ce765790abf4dda344221a24243474e5a" translate="yes" xml:space="preserve">
          <source>For more details on initialization (and termination) scripts, and naming thereof, see the Solaris documentation.</source>
          <target state="translated">초기화 (및 종료) 스크립트 및 이름 지정에 대한 자세한 내용은 Solaris 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5ccbe349500b4552decd7cd7dcf4743530af21fb" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenarios&lt;/a&gt;&lt;/code&gt; in this module description and the function description for &lt;code&gt;&lt;a href=&quot;#reload-2&quot;&gt;reload/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은이 모듈 설명 및 &lt;code&gt;&lt;a href=&quot;#reload-2&quot;&gt;reload/2&lt;/a&gt;&lt;/code&gt; 에 대한 기능 설명의 &lt;code&gt;&lt;a href=&quot;#scenarios&quot;&gt;scenarios&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eaa1cf108910875eba8af0bfffa665836774a95e" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;code&gt; sasl(6)&lt;/code&gt; application in the Reference Manual.</source>
          <target state="translated">자세한 내용 은 참조 설명서 의 &lt;code&gt; sasl(6)&lt;/code&gt; 애플리케이션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e98eb0da50ffc164e6eccf87225f7bbeb159149e" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;code&gt;sasl(6)&lt;/code&gt; application in the Reference Manual.</source>
          <target state="translated">자세한 내용 은 참조 설명서 의 &lt;code&gt;sasl(6)&lt;/code&gt; 응용 프로그램을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e5d6245dd57c7b9c93dd31b45b597ba4fa75f58b" translate="yes" xml:space="preserve">
          <source>For more examples of functions as input and output, see the end of the &lt;code&gt;file_sorter&lt;/code&gt; module; the &lt;code&gt;term&lt;/code&gt; format is implemented with functions.</source>
          <target state="translated">입력 및 출력으로서의 기능의 예는 &lt;code&gt;file_sorter&lt;/code&gt; 모듈 의 끝을 참조하십시오 . &lt;code&gt;term&lt;/code&gt; 포맷 함수로 구현된다.</target>
        </trans-unit>
        <trans-unit id="ef524b3177ca33b84f0ee9b52b6accd95f5c4fa6" translate="yes" xml:space="preserve">
          <source>For more examples of how to use &lt;code&gt;dbg&lt;/code&gt; from the Erlang shell, see the &lt;code&gt;&lt;a href=&quot;#simple_example&quot;&gt;simple example&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">Erlang 쉘에서 &lt;code&gt;dbg&lt;/code&gt; 를 사용하는 방법에 대한 추가 예제 는 &lt;code&gt;&lt;a href=&quot;#simple_example&quot;&gt;simple example&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a3aedf6f06c2ffbd77660fc005a8538947b0d3c" translate="yes" xml:space="preserve">
          <source>For more examples of practical use-cases of using Logger, Fred Hebert's blog post &lt;code&gt;&lt;a href=&quot;https://ferd.ca/erlang-otp-21-s-new-logger.html&quot;&gt;Erlang/OTP 21's new logger&lt;/a&gt;&lt;/code&gt; is a great starting point.</source>
          <target state="translated">Logger 사용의 실제 사용 사례에 대한 더 많은 예를 보려면 Fred Hebert의 블로그 게시물 &lt;code&gt;&lt;a href=&quot;https://ferd.ca/erlang-otp-21-s-new-logger.html&quot;&gt;Erlang/OTP 21's new logger&lt;/a&gt;&lt;/code&gt; 가 좋은 출발점입니다.</target>
        </trans-unit>
        <trans-unit id="55c88d0f0c9c483e9b2b6bb4da9983810b386fee" translate="yes" xml:space="preserve">
          <source>For more examples, see &lt;code&gt; Programming Examples&lt;/code&gt;.</source>
          <target state="translated">더 많은 예제는 &lt;code&gt; Programming Examples&lt;/code&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd5c7e6d5de73ab10dc4489adbb78e2a8ca8daa6" translate="yes" xml:space="preserve">
          <source>For more examples, see &lt;code&gt;Programming Examples&lt;/code&gt;.</source>
          <target state="translated">자세한 예는 &lt;code&gt;Programming Examples&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a52fcb0116489b8a173f045b3b1f564556cc89a" translate="yes" xml:space="preserve">
          <source>For more examples, see section &lt;code&gt;&lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">더 예를 들면, 절 참조 &lt;code&gt;&lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0b5afce92d6a55afc08b046f441f3f879430c0a" translate="yes" xml:space="preserve">
          <source>For more info about the &lt;code&gt;agent_config()&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;snmpm#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;agent_config()&lt;/code&gt; 에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmpm#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f088af6049109e4d8acc3ce72dcf771e957dd605" translate="yes" xml:space="preserve">
          <source>For more info about the &lt;code&gt;agent_config()&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;snmpm#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;agent_config()&lt;/code&gt; 에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;snmpm#register_agent&quot;&gt;register_agent&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64f6e50ff4f0c8d7b764c77a1977eb021c25d865" translate="yes" xml:space="preserve">
          <source>For more info about the &lt;code&gt;extra()&lt;/code&gt; part of the result, see the &lt;code&gt;&lt;a href=&quot;megaco_user#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; in the user callback module documentation.</source>
          <target state="translated">결과 의 &lt;code&gt;extra()&lt;/code&gt; 부분에 대한 자세한 내용 은 사용자 콜백 모듈 설명서 의 &lt;code&gt;&lt;a href=&quot;megaco_user#extra_argument&quot;&gt;note&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9742992b437db29bd6b47e8e083cc97442b021d6" translate="yes" xml:space="preserve">
          <source>For more info, see &lt;code&gt;&lt;a href=&quot;#getopt-3&quot;&gt;getopt&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">자세한 내용은 위의 &lt;code&gt;&lt;a href=&quot;#getopt-3&quot;&gt;getopt&lt;/a&gt;&lt;/code&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="b8ce7ed9b2d9afafc422ee82c8732c908ddf15a4" translate="yes" xml:space="preserve">
          <source>For more info, see &lt;code&gt;&lt;a href=&quot;#setopt-4&quot;&gt;setopt&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">자세한 내용은 위의 &lt;code&gt;&lt;a href=&quot;#setopt-4&quot;&gt;setopt&lt;/a&gt;&lt;/code&gt; 를 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="23e01da6d824b53302b142a5cfeb4c84956430e5" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;.rel&lt;/code&gt; files, see &lt;code&gt; OTP Design Principles&lt;/code&gt; and the &lt;code&gt;rel(4)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">&lt;code&gt;.rel&lt;/code&gt; 파일 에 대한 자세한 내용 은 &lt;code&gt; OTP Design Principles&lt;/code&gt; 및 SASL 의 &lt;code&gt;rel(4)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f5d087fb16d371a12a974dd1cb575eca4420763" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;.rel&lt;/code&gt; files, see &lt;code&gt;OTP Design Principles&lt;/code&gt; and the &lt;code&gt;rel(4)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">&lt;code&gt;.rel&lt;/code&gt; 파일 에 대한 자세한 내용 은 &lt;code&gt;OTP Design Principles&lt;/code&gt; 및 SASL 의 &lt;code&gt;rel(4)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eeda1efddcaf3dd85693f049ce670cbf405d54b0" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;ei_rpc()&lt;/code&gt; and its companions &lt;code&gt;ei_rpc_to()&lt;/code&gt; and &lt;code&gt;ei_rpc_from()&lt;/code&gt;, see the &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">에 대한 자세한 내용은 &lt;code&gt;ei_rpc()&lt;/code&gt; 와 그 동료가 &lt;code&gt;ei_rpc_to()&lt;/code&gt; 및 &lt;code&gt;ei_rpc_from()&lt;/code&gt; 는 참조 &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; 모듈을.</target>
        </trans-unit>
        <trans-unit id="fa846f444dff1c8c4f5c49cd96d810d1dda22dd1" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;erl_rpc()&lt;/code&gt; and its companions &lt;code&gt;erl_rpc_to()&lt;/code&gt; and &lt;code&gt;erl_rpc_from()&lt;/code&gt;, see the &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;erl_rpc()&lt;/code&gt; 및 해당 동반자 &lt;code&gt;erl_rpc_to()&lt;/code&gt; 및 &lt;code&gt;erl_rpc_from()&lt;/code&gt; 에 대한 자세한 정보 는 &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2ff3f57c5ca19ac53d84be2d054c80ec2159bc3" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;require&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;config_file_chapter#require_config_data&quot;&gt; Requiring and Reading Configuration Data&lt;/a&gt;&lt;/code&gt; in section External Configuration Data and function &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 에 대한 자세한 내용은 외부 구성 데이터 및 기능 &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt; 섹션의 &lt;code&gt;&lt;a href=&quot;config_file_chapter#require_config_data&quot;&gt; Requiring and Reading Configuration Data&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3fac4875def55d8ec5d0ea5eb62f57da0dd6548" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;require&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;config_file_chapter#require_config_data&quot;&gt;Requiring and Reading Configuration Data&lt;/a&gt;&lt;/code&gt; in section External Configuration Data and function &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 에 대한 자세한 정보는 외부 구성 데이터 및 기능 &lt;code&gt;&lt;a href=&quot;ct#require-1&quot;&gt;ct:require/1/2&lt;/a&gt;&lt;/code&gt; 섹션의 &lt;code&gt;&lt;a href=&quot;config_file_chapter#require_config_data&quot;&gt;Requiring and Reading Configuration Data&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="33dd247174864987183d128273b044aa101c9fda" translate="yes" xml:space="preserve">
          <source>For more information about HTTP, see &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">HTTP에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="22a3696455371f0e947d2e85763026043010b15d" translate="yes" xml:space="preserve">
          <source>For more information about MD5, see &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc1321.txt&quot;&gt; RFC 1321 - The MD5 Message-Digest Algorithm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">MD5에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc1321.txt&quot;&gt; RFC 1321 - The MD5 Message-Digest Algorithm&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="42d54a02835c2bbc40d7f7f9fadc45cf48ecd9cd" translate="yes" xml:space="preserve">
          <source>For more information about URI, see &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">URI에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4c6b0d04ae5a9e286f8d9176001eb2754f0f1bd" translate="yes" xml:space="preserve">
          <source>For more information about Unicode filenames, see section &lt;code&gt;Unicode Filenames&lt;/code&gt; in the STDLIB User's Guide. Notice that this value also applies to command-line parameters and environment variables (see section &lt;code&gt; Unicode in Environment and Parameters&lt;/code&gt; in the STDLIB User's Guide).</source>
          <target state="translated">유니 코드 파일 이름에 대한 자세한 내용은 STDLIB 사용자 가이드의 &lt;code&gt;Unicode Filenames&lt;/code&gt; 섹션을 참조하십시오 . 이 값은 명령 줄 매개 변수 및 환경 변수에도 적용됩니다 ( STDLIB 사용자 가이드의 &lt;code&gt; Unicode in Environment and Parameters&lt;/code&gt; 섹션 참조).</target>
        </trans-unit>
        <trans-unit id="eb88d2a2665211fc7dd6e971447eb21f7a44216c" translate="yes" xml:space="preserve">
          <source>For more information about Unicode filenames, see section &lt;code&gt;Unicode Filenames&lt;/code&gt; in the STDLIB User's Guide. Notice that this value also applies to command-line parameters and environment variables (see section &lt;code&gt;Unicode in Environment and Parameters&lt;/code&gt; in the STDLIB User's Guide).</source>
          <target state="translated">유니 코드 파일 이름에 대한 자세한 정보 는 STDLIB 사용자 안내서의 &lt;code&gt;Unicode Filenames&lt;/code&gt; 섹션을 참조하십시오 . 이 값은 명령 행 매개 변수 및 환경 변수에도 적용됩니다 ( STDLIB 사용자 안내서의 &lt;code&gt;Unicode in Environment and Parameters&lt;/code&gt; 섹션 참조).</target>
        </trans-unit>
        <trans-unit id="764bebd984844f32dcecfd0e6ec4ca0c6ff016f5" translate="yes" xml:space="preserve">
          <source>For more information about a process, including its state, see &lt;code&gt;&lt;a href=&quot;#get_status-1&quot;&gt;get_status/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#get_status-2&quot;&gt;get_status/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">상태를 포함한 프로세스에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#get_status-1&quot;&gt;get_status/1&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#get_status-2&quot;&gt;get_status/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4d310770ffe5bc367d7b62a90f97b76f29a0764" translate="yes" xml:space="preserve">
          <source>For more information about drivers, see &lt;code&gt;&lt;a href=&quot;#info-0&quot;&gt;info&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">드라이버에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;#info-0&quot;&gt;info&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e97657eba9f1c5aee61b0f0dec074a2b448cc33" translate="yes" xml:space="preserve">
          <source>For more information about log files, see section &lt;code&gt;&lt;a href=&quot;run_test_chapter#log_files&quot;&gt;Log Files&lt;/a&gt;&lt;/code&gt; in section Running Tests and Analyzing Results.</source>
          <target state="translated">로그 파일에 대한 자세한 내용은 테스트 실행 및 결과 분석 섹션의 &lt;code&gt;&lt;a href=&quot;run_test_chapter#log_files&quot;&gt;Log Files&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba92bcd5753ab089b28291b7becc5d74ba67764e" translate="yes" xml:space="preserve">
          <source>For more information about match specifications, see the &lt;code&gt;Match specifications in Erlang&lt;/code&gt; in ERTS User's Guide.</source>
          <target state="translated">일치 사양에 대한 자세한 내용은 ERTS 사용 설명서의 &lt;code&gt;Match specifications in Erlang&lt;/code&gt; 의 일치 사양을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="51b60cdf129bb6677cdf6f7ec2c7fd64ed777348" translate="yes" xml:space="preserve">
          <source>For more information about old and current code, and how to make a process switch from old to current code, see section Compilation and Code Loading in the &lt;code&gt;Erlang Reference Manual&lt;/code&gt;.</source>
          <target state="translated">기존 코드와 현재 코드에 대한 자세한 내용과 프로세스를 기존 코드에서 현재 코드로 전환하는 방법은 &lt;code&gt;Erlang Reference Manual&lt;/code&gt; 의 컴파일 및 코드로드 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8eca93d254abcc66f440084b141d80e366aaf3e" translate="yes" xml:space="preserve">
          <source>For more information about raw filenames, see the &lt;code&gt;file&lt;/code&gt; module.</source>
          <target state="translated">원시 파일 이름에 대한 자세한 내용은 &lt;code&gt;file&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fca3803f1f8f5044ab3bc25daec826535ee8aaa2" translate="yes" xml:space="preserve">
          <source>For more information about the &lt;code&gt;ConnectStr&lt;/code&gt; see description of the function SQLDriverConnect in [1].</source>
          <target state="translated">&lt;code&gt;ConnectStr&lt;/code&gt; 에 대한 자세한 정보 는 [1]의 SQLDriverConnect 함수에 대한 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="31abf55c44089795af6280e24c4e95df2226c848" translate="yes" xml:space="preserve">
          <source>For more information about the &lt;code&gt;ct_run&lt;/code&gt; program, see module &lt;code&gt;&lt;a href=&quot;ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; and section &lt;code&gt;&lt;a href=&quot;install_chapter#general&quot;&gt;Installation&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ct_run&lt;/code&gt; 프로그램 에 대한 자세한 정보는 모듈 &lt;code&gt;&lt;a href=&quot;ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;install_chapter#general&quot;&gt;Installation&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6cbaa9cf473d89e42055b1bbb7e6507935e0a53a" translate="yes" xml:space="preserve">
          <source>For more information about the different &lt;code&gt;Item&lt;/code&gt;s, see &lt;code&gt;&lt;a href=&quot;#port_info-2&quot;&gt;port_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">다른 &lt;code&gt;Item&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;#port_info-2&quot;&gt;port_info/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7140a94175c9c18d778ecaceb8f1a4c860546615" translate="yes" xml:space="preserve">
          <source>For more information about the documentation chunk see &lt;code&gt;Documentation Storage and Format&lt;/code&gt; in Kernel's User's Guide.</source>
          <target state="translated">문서 청크에 대한 자세한 내용은 Kernel 's User 's Guide의 &lt;code&gt;Documentation Storage and Format&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c1b7ee8239ecc8f4f8438ae40e75948c0cb232e" translate="yes" xml:space="preserve">
          <source>For more information about the proxy, see section &lt;code&gt;&lt;a href=&quot;logger_chapter#proxy&quot;&gt;Logger Proxy&lt;/a&gt;&lt;/code&gt; in the Kernel User's Guide.</source>
          <target state="translated">프록시에 대한 자세한 내용은 Kernel User 's Guide의 &lt;code&gt;&lt;a href=&quot;logger_chapter#proxy&quot;&gt;Logger Proxy&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3bd735883ea0f98ee08b60daea1f362e215d874" translate="yes" xml:space="preserve">
          <source>For more information about the record &lt;code&gt;file_info&lt;/code&gt;, see &lt;code&gt;file(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;file_info&lt;/code&gt; 레코드에 대한 자세한 내용 은 &lt;code&gt;file(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="300eed5801aa7f10cd36db159484f101d289a52b" translate="yes" xml:space="preserve">
          <source>For more information about the use, see the &lt;code&gt; Embedded System User's Guide&lt;/code&gt; in System Documentation.</source>
          <target state="translated">사용에 대한 자세한 내용은 &lt;code&gt; Embedded System User's Guide&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7c73aec4083d6315fbc407ffdf5353fc43070c2" translate="yes" xml:space="preserve">
          <source>For more information about the use, see the &lt;code&gt;Embedded System User's Guide&lt;/code&gt; in System Documentation.</source>
          <target state="translated">사용에 대한 자세한 내용은 &lt;code&gt;Embedded System User's Guide&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="83f7ae32a59053777da4a62b613bd396fb10eab6" translate="yes" xml:space="preserve">
          <source>For more information about:</source>
          <target state="translated">다음에 대한 자세한 정보 :</target>
        </trans-unit>
        <trans-unit id="733fa53d730c3c70214570c994d0fb15bbe4732e" translate="yes" xml:space="preserve">
          <source>For more information and examples, see the &lt;code&gt;&lt;a href=&quot;ets&quot;&gt;ets(3)&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">자세한 내용과 예는 &lt;code&gt;&lt;a href=&quot;ets&quot;&gt;ets(3)&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="265148f4cb1ca1f818c7d295cf6f004e9d5dabda" translate="yes" xml:space="preserve">
          <source>For more information on encoding of atoms, see the &lt;code&gt;&lt;a href=&quot;#utf8_atoms&quot;&gt;note on UTF-8 encoded atoms&lt;/a&gt;&lt;/code&gt; in the beginning of this section.</source>
          <target state="translated">원자 인코딩에 대한 자세한 내용 은이 섹션 시작 부분의 &lt;code&gt;&lt;a href=&quot;#utf8_atoms&quot;&gt;note on UTF-8 encoded atoms&lt;/a&gt;&lt;/code&gt; 에 대한 참고 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e54b5982f6c86570d5820eb571bbb35b72a9169d" translate="yes" xml:space="preserve">
          <source>For more information on the Windows registry, see consult the Win32 Programmer's Reference.</source>
          <target state="translated">Windows 레지스트리에 대한 자세한 정보는 Win32 Programmer 's Reference를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="db70c2e4834ee3e5c48683e403a965825c533c68" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;Label&lt;/code&gt; and &lt;code&gt;SeqTraceInfo&lt;/code&gt; can be, see &lt;code&gt; seq_trace(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Label&lt;/code&gt; 및 &lt;code&gt;SeqTraceInfo&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt; seq_trace(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9c28ad8207093ece94435f1334afbba9f96d62b" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;Label&lt;/code&gt; and &lt;code&gt;SeqTraceInfo&lt;/code&gt; can be, see &lt;code&gt;seq_trace(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Label&lt;/code&gt; 및 &lt;code&gt;SeqTraceInfo&lt;/code&gt; 에 대한 자세한 내용 은 &lt;code&gt;seq_trace(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9bec452f46b63415fdeabadb3b16d468d6e72057" translate="yes" xml:space="preserve">
          <source>For more information see &lt;code&gt;&lt;a href=&quot;#statistics_microstate_accounting&quot;&gt; statistics(microstate_accounting)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#statistics_microstate_accounting&quot;&gt; statistics(microstate_accounting)&lt;/a&gt;&lt;/code&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="178503f5c66f3e891bf9ca2599a1b3f436014878" translate="yes" xml:space="preserve">
          <source>For more information see &lt;code&gt;&lt;a href=&quot;#statistics_microstate_accounting&quot;&gt;statistics(microstate_accounting)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#statistics_microstate_accounting&quot;&gt;statistics(microstate_accounting)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbf358224b6b80d4a0ef496a681be20ded210cc4" translate="yes" xml:space="preserve">
          <source>For more information see the documentation &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_busy_msgq_limits&quot;&gt;erl_drv_busy_msgq_limits()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_busy_msgq_limits&quot;&gt;erl_drv_busy_msgq_limits()&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3be956fe68ffab094a52171ea292818d45bc1835" translate="yes" xml:space="preserve">
          <source>For more information, please visit &lt;code&gt;&lt;a href=&quot;http://lttng.org&quot;&gt;http://lttng.org&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;http://lttng.org&quot;&gt;http://lttng.org&lt;/a&gt;&lt;/code&gt; 를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="a11c9cef1dc20509023b918730cb2bc2e5a08c1d" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt; Distributed Programming.&lt;/code&gt;</source>
          <target state="translated">자세한 내용은 &lt;code&gt; Distributed Programming.&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f8444ee767c5bc2d6adcb3d8945b8b17135ed0e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#statistics_scheduler_wall_time&quot;&gt; statistics(scheduler_wall_time)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#statistics_scheduler_wall_time&quot;&gt; statistics(scheduler_wall_time)&lt;/a&gt;&lt;/code&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="473b0e8211e713a82db6380dda13b95cc53a099a" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#statistics_scheduler_wall_time&quot;&gt;statistics(scheduler_wall_time)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#statistics_scheduler_wall_time&quot;&gt;statistics(scheduler_wall_time)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c1941b9264af107cbc78af0467b24d2a005d595" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt; erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt; erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt; erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt; erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="000220b872b006e263dac0f79c526141cc03618c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt; erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt; erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt; erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt; erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="329dc333578c9dbab094590235f9c4711de17b7c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt; erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt; erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt; erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt; erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt; erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt; erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85bded01c9c9f389da4e6d08addaaa2b1177c1a9" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt;erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt;erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="380a5941b071e2ec448897e01e07395fd810d761" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt;erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers_online&quot;&gt;erlang:system_info(dirty_cpu_schedulers_online)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1162f494dd93315417812405dad30e1c61cf1f6d" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ff014798be8d21ebeae0de02bdc7d2975ce549a" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bind_type&quot;&gt; erlang:system_info(scheduler_bind_type)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt; erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt;, as well as command-line flags &lt;code&gt;+sbt&lt;/code&gt; and &lt;code&gt;+sct&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bind_type&quot;&gt; erlang:system_info(scheduler_bind_type)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt; erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 플래그 &lt;code&gt;+sbt&lt;/code&gt; 및 &lt;code&gt;+sct&lt;/code&gt; 를 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="d5fe72df9e425ed2d4018ed349ebb6b5e03076cd" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bind_type&quot;&gt;erlang:system_info(scheduler_bind_type)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt;erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt;, as well as command-line flags &lt;code&gt;+sbt&lt;/code&gt; and &lt;code&gt;+sct&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bind_type&quot;&gt;erlang:system_info(scheduler_bind_type)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt;erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;erl(1)&lt;/code&gt; 명령 줄 플래그 &lt;code&gt;+sbt&lt;/code&gt; 및 &lt;code&gt;+sct&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8c0f1f01a4bd0fed44c401bac9ee95f1ae0533c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt; erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt; erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a449d89181b67d8108bea5c71c85eb2d6f1eba60" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt; erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt; erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt; erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt; erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="014589015f8dde70e962d0f094fa32ad5135e22c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dc27bbf378595a8b6e1d6bf5b7a7b807c556fb0" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59251046accca1bf7c35f07d2eab9bb98189fbc7" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology&quot;&gt; erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology&quot;&gt; erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fab608a56b7dec21d1e3763e23775c2c2fc3325" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology&quot;&gt;erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology&quot;&gt;erlang:system_info(cpu_topology)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="342abc87f46c83e604d01bfcc53f9033651d23da" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;ms_transform#top&quot;&gt; ms_transform(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;ms_transform#top&quot;&gt; ms_transform(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6581c922cd62ce82ede81eda2ade30f1f15c0505" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;&lt;a href=&quot;ms_transform#top&quot;&gt;ms_transform(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;ms_transform#top&quot;&gt;ms_transform(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="61a1b2d616aa350eb3a899850c8a7fa54a784eaf" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;code&gt;Distributed Programming.&lt;/code&gt;</source>
          <target state="translated">자세한 내용은 &lt;code&gt;Distributed Programming.&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a2315e0bf84b3bfb555d2539ea8e4b1a7081f893" translate="yes" xml:space="preserve">
          <source>For more information, see argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt; cpu_topology&lt;/a&gt;&lt;/code&gt; 인수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="23e1832ba6f4231fcaf91ed5142c506b3a533002" translate="yes" xml:space="preserve">
          <source>For more information, see argument &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;#system_info_cpu_topology&quot;&gt;cpu_topology&lt;/a&gt;&lt;/code&gt; 인수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2328624c7e80f69def7b7383de0f856ab2e04cba" translate="yes" xml:space="preserve">
          <source>For more information, see command-line argument &lt;code&gt;+sbt&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt; erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 &lt;code&gt;erl(1)&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt; erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt; 명령 줄 인수 &lt;code&gt;+sbt&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d529ced804e4a358a5dcd0148a8da964c70f58a" translate="yes" xml:space="preserve">
          <source>For more information, see command-line argument &lt;code&gt;+sbt&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt;erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 &lt;code&gt;erl(1)&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_scheduler_bindings&quot;&gt;erlang:system_info(scheduler_bindings)&lt;/a&gt;&lt;/code&gt; 명령 줄 인수 &lt;code&gt;+sbt&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="344d6a4ebae176af08a29de94744f3d47f684ea8" translate="yes" xml:space="preserve">
          <source>For more information, see command-line argument &lt;code&gt;+sbt&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt; erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 &lt;code&gt;erl(1)&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt; erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; 명령 줄 인수 &lt;code&gt;+sbt&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="159107c6ac64a8f44183355a7dfb95f35f8696e9" translate="yes" xml:space="preserve">
          <source>For more information, see command-line argument &lt;code&gt;+sbt&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 &lt;code&gt;erl(1)&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#system_info_schedulers_online&quot;&gt;erlang:system_info(schedulers_online)&lt;/a&gt;&lt;/code&gt; 명령 줄 인수 &lt;code&gt;+sbt&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1743c60e30009fe5225d629a4c153a187e1867d" translate="yes" xml:space="preserve">
          <source>For more information, see directive &lt;code&gt;require&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;mod_auth&quot;&gt;mod_auth(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 &lt;code&gt;&lt;a href=&quot;mod_auth&quot;&gt;mod_auth(3)&lt;/a&gt;&lt;/code&gt; 지시문 &lt;code&gt;require&lt;/code&gt; 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ccfc2c4251b52e3207a11777d792de57d04afb8e" translate="yes" xml:space="preserve">
          <source>For more information, see options &lt;code&gt;high_msgq_watermark&lt;/code&gt;, &lt;code&gt;high_watermark&lt;/code&gt;, and &lt;code&gt;low_watermark&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;high_msgq_watermark&lt;/code&gt; , &lt;code&gt;high_watermark&lt;/code&gt; 및 &lt;code&gt;low_watermark&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="37b88bfa78a188047e14083bb7ec1ea287894210" translate="yes" xml:space="preserve">
          <source>For more information, see options &lt;code&gt;high_watermark&lt;/code&gt;, &lt;code&gt;high_msgq_watermark&lt;/code&gt;, and &lt;code&gt;low_msgq_watermark&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;high_watermark&lt;/code&gt; , &lt;code&gt;high_msgq_watermark&lt;/code&gt; 및 &lt;code&gt;low_msgq_watermark&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="035e7b3fac73cbedee358a489cec0fd761e4d78a" translate="yes" xml:space="preserve">
          <source>For more information, see options &lt;code&gt;low_msgq_watermark&lt;/code&gt;, &lt;code&gt;high_watermark&lt;/code&gt;, and &lt;code&gt;low_watermark&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 옵션 &lt;code&gt;low_msgq_watermark&lt;/code&gt; , &lt;code&gt;high_watermark&lt;/code&gt; 및 &lt;code&gt;low_watermark&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef26641a395da761b5f620fe49d7c2685db13fc9" translate="yes" xml:space="preserve">
          <source>For more information, see options &lt;code&gt;low_watermark&lt;/code&gt;, &lt;code&gt;high_msgq_watermark&lt;/code&gt;, and &lt;code&gt;low_msqg_watermark&lt;/code&gt;.</source>
          <target state="translated">자세한 정보는 옵션 &lt;code&gt;low_watermark&lt;/code&gt; , &lt;code&gt;high_msgq_watermark&lt;/code&gt; 및 &lt;code&gt;low_msqg_watermark&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2cbb590bb1d6b7b6f541ac06c40361ef6dfd922" translate="yes" xml:space="preserve">
          <source>For more information, see section &lt;code&gt;&lt;a href=&quot;time_correction&quot;&gt;Time and Time Correction&lt;/a&gt;&lt;/code&gt; in the User's Guide. Specifically, section &lt;code&gt;&lt;a href=&quot;time_correction#Dos_and_Donts&quot;&gt; Dos and Dont's&lt;/a&gt;&lt;/code&gt; describes what to use instead of &lt;code&gt;erlang:now/0&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 사용자 가이드의 &lt;code&gt;&lt;a href=&quot;time_correction&quot;&gt;Time and Time Correction&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 . 특히, 섹션 &lt;code&gt;&lt;a href=&quot;time_correction#Dos_and_Donts&quot;&gt; Dos and Dont's&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;erlang:now/0&lt;/code&gt; 대신 사용할 것을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="cec1787aa866249389a69906a9f6b0c7bb15cbd8" translate="yes" xml:space="preserve">
          <source>For more information, see section &lt;code&gt;&lt;a href=&quot;time_correction&quot;&gt;Time and Time Correction&lt;/a&gt;&lt;/code&gt; in the User's Guide. Specifically, section &lt;code&gt;&lt;a href=&quot;time_correction#Dos_and_Donts&quot;&gt;Dos and Dont's&lt;/a&gt;&lt;/code&gt; describes what to use instead of &lt;code&gt;erlang:now/0&lt;/code&gt;.</source>
          <target state="translated">자세한 내용 은 사용 설명서의 &lt;code&gt;&lt;a href=&quot;time_correction&quot;&gt;Time and Time Correction&lt;/a&gt;&lt;/code&gt; 단원을 참조하십시오 . 특히 &lt;code&gt;&lt;a href=&quot;time_correction#Dos_and_Donts&quot;&gt;Dos and Dont's&lt;/a&gt;&lt;/code&gt; 섹션 은 &lt;code&gt;erlang:now/0&lt;/code&gt; 대신에 무엇을 사용해야하는지 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="64e9de0a5a1d7c70e701917207e7e420839c9990" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ei&quot;&gt;ei&lt;/a&gt;&lt;/code&gt; modules.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;ei&quot;&gt;ei&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1547a84bb4424ae79810c24cfb09762592bf85c1" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="80e91de62528b6db201c62425282903676ac998d" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt; modules.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="102125a0f8cb50cdf9c0819dee6ea88669ed5764" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="62f5fcc5f31eac399a6a83e62089ded1b3dd5682" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;&lt;a href=&quot;erl_format#erl_match&quot;&gt;erl_format:erl_match&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;erl_format#erl_match&quot;&gt;erl_format:erl_match&lt;/a&gt;&lt;/code&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5da13fe8e00e8b5e956157fccb636c37e51dadaf" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;&lt;a href=&quot;erl_malloc&quot;&gt;erl_malloc&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">자세한 정보는 &lt;code&gt;&lt;a href=&quot;erl_malloc&quot;&gt;erl_malloc&lt;/a&gt;&lt;/code&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e149a19e50e2f20f90e0de3966d91628bbe2df9c" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;erlsrv&lt;/code&gt; manual page in ERTS.</source>
          <target state="translated">자세한 내용 은 ERTS 의 &lt;code&gt;erlsrv&lt;/code&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d6f5b18f09a083b12a1f60cbd74531ec6f629a5" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;heart(3)&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">자세한 내용 은 커널 의 &lt;code&gt;heart(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ffca142f5bd919346f2747fd61f52e77b3331514" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;lcnt&lt;/code&gt; manual page in Tools.</source>
          <target state="translated">자세한 내용 은 도구 의 &lt;code&gt;lcnt&lt;/code&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a599cf8a020d3b7b2561298d0b8a4ca3c74467c9" translate="yes" xml:space="preserve">
          <source>For most algorithms, jump functions are provided for generating non-overlapping sequences for parallel computations. The jump functions perform calculations equivalent to perform a large number of repeated calls for calculating new states.</source>
          <target state="translated">대부분의 알고리즘의 경우 병렬 계산을 위해 겹치지 않는 시퀀스를 생성하기 위해 점프 함수가 제공됩니다. 점프 함수는 새로운 상태를 계산하기 위해 많은 수의 반복 호출을 수행하는 것과 동일한 계산을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="35570bba5cea192afdadd5576987d0a42581d0f7" translate="yes" xml:space="preserve">
          <source>For most systems, turning on Unicode filename translation is no problem even if it uses transparent file naming. Very few systems have mixed filename encodings. A consistent UTF-8 named system works perfectly in Unicode filename mode. It was still, however, considered experimental in Erlang/OTP R14B01 and is still not the default on such systems.</source>
          <target state="translated">대부분의 시스템에서 투명한 파일 이름을 사용하더라도 유니 코드 파일 이름 변환을 설정해도 문제가 없습니다. 파일 이름 인코딩이 혼합 된 시스템은 거의 없습니다. 일관된 UTF-8 명명 된 시스템은 유니 코드 파일 이름 모드에서 완벽하게 작동합니다. 그러나 여전히 Erlang / OTP R14B01에서 실험적인 것으로 간주되었으며 이러한 시스템에서는 여전히 기본값이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="49b03f64c09a103223279b4e8963687c7384e746" translate="yes" xml:space="preserve">
          <source>For non-persistent database storage, prefer Ets tables over Mnesia &lt;code&gt;local_content&lt;/code&gt; tables. Even the Mnesia &lt;code&gt;dirty_write&lt;/code&gt; operations carry a fixed overhead compared to Ets writes. Mnesia must check if the table is replicated or has indices, this involves at least one Ets lookup for each &lt;code&gt;dirty_write&lt;/code&gt;. Thus, Ets writes is always faster than Mnesia writes.</source>
          <target state="translated">비 지속적 데이터베이스 스토리지의 경우 Mnesia &lt;code&gt;local_content&lt;/code&gt; 테이블 보다 Ets 테이블을 선호하십시오 . Mnesia &lt;code&gt;dirty_write&lt;/code&gt; 작업 조차 Ets 쓰기와 비교하여 고정 된 오버 헤드를 가지고 있습니다. Mnesia는 테이블이 복제되었는지 또는 인덱스가 있는지 확인해야합니다. 여기에는 각 &lt;code&gt;dirty_write&lt;/code&gt; 에 대해 하나 이상의 Ets 조회가 포함 됩니다 . 따라서 Ets 쓰기는 항상 Mnesia 쓰기보다 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="06fbb382e36fc39656778009ef9ad7dd96a25e6b" translate="yes" xml:space="preserve">
          <source>For on-the-fly exporting during parsing (SAX style) of the XML document.</source>
          <target state="translated">XML 문서의 구문 분석 중 (SAX 스타일) 즉시 내보내기 용.</target>
        </trans-unit>
        <trans-unit id="40de4a27a3fb5e7e11c313556f0e063cde535a42" translate="yes" xml:space="preserve">
          <source>For option description, see &lt;code&gt;&lt;a href=&quot;#inspect-2&quot;&gt;lcnt:inspect/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">옵션 설명은 &lt;code&gt;&lt;a href=&quot;#inspect-2&quot;&gt;lcnt:inspect/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfed2d5e1aa56187fdfaf0c6a7756c79562fb80a" translate="yes" xml:space="preserve">
          <source>For options that can be set and actions that can be done by &lt;code&gt;gen_statem&lt;/code&gt; after returning from this function, see &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수에서 리턴 한 후 &lt;code&gt;gen_statem&lt;/code&gt; 이 설정할 수있는 옵션 및 조치 에 대해서는 &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e76325a1a54fa830d07f62d49501832ffd495417" translate="yes" xml:space="preserve">
          <source>For other types of forms, only the node type is returned.</source>
          <target state="translated">다른 유형의 양식의 경우 노드 유형 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7b9fa94737b7a3e3e152d2ad843f4dc903b74a65" translate="yes" xml:space="preserve">
          <source>For other types, see &lt;code&gt;ssh(3)&lt;/code&gt;.</source>
          <target state="translated">다른 유형은 &lt;code&gt;ssh(3)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca9b594158e7d365934bd459e6bec5ea6fc56a0a" translate="yes" xml:space="preserve">
          <source>For outgoing messages:</source>
          <target state="translated">발신 메시지 :</target>
        </trans-unit>
        <trans-unit id="f1b7a708e93bb283d2d132477f096ed9532b705f" translate="yes" xml:space="preserve">
          <source>For packet oriented sockets that supports receiving ancillary data with the payload data (&lt;code&gt;gen_udp&lt;/code&gt; and &lt;code&gt;gen_sctp&lt;/code&gt;), the &lt;code&gt;TCLASS&lt;/code&gt; value is returned in an extended return tuple contained in an &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; list. For stream oriented sockets (&lt;code&gt;gen_tcp&lt;/code&gt;) the only way to get the &lt;code&gt;TCLASS&lt;/code&gt; value is if the platform supports the &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; pktoptions &lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">페이로드 데이터 ( &lt;code&gt;gen_udp&lt;/code&gt; 및 &lt;code&gt;gen_sctp&lt;/code&gt; ) 와 함께 보조 데이터 수신을 지원하는 패킷 지향 소켓의 경우 &lt;code&gt;TCLASS&lt;/code&gt; 값은 &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; 목록에 포함 된 확장 된 반환 튜플에 반환 됩니다. 스트림 지향 소켓 ( &lt;code&gt;gen_tcp&lt;/code&gt; )의 경우 &lt;code&gt;TCLASS&lt;/code&gt; 값 을 얻는 유일한 방법 은 플랫폼이 &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; pktoptions &lt;/a&gt;&lt;/code&gt; 옵션을 지원하는 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="21c9e89abf353c1beebdfc118af6f5633bed314b" translate="yes" xml:space="preserve">
          <source>For packet oriented sockets that supports receiving ancillary data with the payload data (&lt;code&gt;gen_udp&lt;/code&gt; and &lt;code&gt;gen_sctp&lt;/code&gt;), the &lt;code&gt;TOS&lt;/code&gt; value is returned in an extended return tuple contained in an &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; list. For stream oriented sockets (&lt;code&gt;gen_tcp&lt;/code&gt;) the only way to get the &lt;code&gt;TOS&lt;/code&gt; value is if the platform supports the &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; pktoptions &lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">페이로드 데이터 ( &lt;code&gt;gen_udp&lt;/code&gt; 및 &lt;code&gt;gen_sctp&lt;/code&gt; ) 와 함께 보조 데이터 수신을 지원하는 패킷 지향 소켓의 경우 &lt;code&gt;TOS&lt;/code&gt; 값은 &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; 목록에 포함 된 확장 된 반환 튜플에 반환 됩니다. 스트림 지향 소켓 ( &lt;code&gt;gen_tcp&lt;/code&gt; )의 경우 &lt;code&gt;TOS&lt;/code&gt; 값 을 얻는 유일한 방법 은 플랫폼이 &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; pktoptions &lt;/a&gt;&lt;/code&gt; 옵션을 지원하는 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="b3dfa5a55bdd53276c4d55d324f501a93d88ec75" translate="yes" xml:space="preserve">
          <source>For packet oriented sockets that supports receiving ancillary data with the payload data (&lt;code&gt;gen_udp&lt;/code&gt; and &lt;code&gt;gen_sctp&lt;/code&gt;), the &lt;code&gt;TTL&lt;/code&gt; value is returned in an extended return tuple contained in an &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; list. For stream oriented sockets (&lt;code&gt;gen_tcp&lt;/code&gt;) the only way to get the &lt;code&gt;TTL&lt;/code&gt; value is if the platform supports the &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; pktoptions &lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">페이로드 데이터 ( &lt;code&gt;gen_udp&lt;/code&gt; 및 &lt;code&gt;gen_sctp&lt;/code&gt; ) 와 함께 보조 데이터 수신을 지원하는 패킷 지향 소켓의 경우 &lt;code&gt;TTL&lt;/code&gt; 값은 &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; 목록에 포함 된 확장 된 반환 튜플에 반환 됩니다. 스트림 지향 소켓 ( &lt;code&gt;gen_tcp&lt;/code&gt; )의 경우 &lt;code&gt;TTL&lt;/code&gt; 값 을 얻는 유일한 방법 은 플랫폼이 &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; pktoptions &lt;/a&gt;&lt;/code&gt; 옵션을 지원하는 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="51e4899182c8e70f4b7882b04b6005650811a0e4" translate="yes" xml:space="preserve">
          <source>For packet type &lt;code&gt;line&lt;/code&gt;, lines longer than the indicated length are truncated.</source>
          <target state="translated">패킷 유형 &lt;code&gt;line&lt;/code&gt; 의 경우 표시된 길이보다 긴 행 이 잘립니다.</target>
        </trans-unit>
        <trans-unit id="49528c417eb663b411155dc046e113e236ef8403" translate="yes" xml:space="preserve">
          <source>For packet type &lt;code&gt;line&lt;/code&gt;, sets the delimiting byte. Default is the latin-1 character &lt;code&gt;$\n&lt;/code&gt;.</source>
          <target state="translated">패킷 유형 &lt;code&gt;line&lt;/code&gt; 의 경우 구분 바이트를 설정합니다. 기본값은 라틴 -1 문자 &lt;code&gt;$\n&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="86e4c6fa8e0ad93ccdeafef31bbf3b36b944c9b2" translate="yes" xml:space="preserve">
          <source>For parallel commands:</source>
          <target state="translated">병렬 명령의 경우 :</target>
        </trans-unit>
        <trans-unit id="3782a8e2979a34dfb6e69d9e71c1321887d5c29a" translate="yes" xml:space="preserve">
          <source>For possible reasons, see &lt;code&gt;public_key:pkix_path_validation/3&lt;/code&gt;</source>
          <target state="translated">가능한 이유는 &lt;code&gt;public_key:pkix_path_validation/3&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="75104900d9fa722ba16b6b5ba4b920af0be23a40" translate="yes" xml:space="preserve">
          <source>For proper functioning of flushing file system data to disk on Solaris 2.5.1, the version-specific patch with number 103640-02 must be added to the operating system. Other patches might be needed, see the release README file &lt;code&gt;&amp;lt;ERL_INSTALL_DIR&amp;gt;/README&lt;/code&gt;.</source>
          <target state="translated">Solaris 2.5.1에서 디스크로 파일 시스템 데이터를 플러시하는 기능을 수행하려면 번호 103640-02의 버전 별 패치를 운영 체제에 추가해야합니다. 다른 패치가 필요할 수도 있습니다 (릴리스 README 파일 &lt;code&gt;&amp;lt;ERL_INSTALL_DIR&amp;gt;/README&lt;/code&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="656e2959d09b9ebe0abb3be0c9c559e174df92bd" translate="yes" xml:space="preserve">
          <source>For queries not using the &lt;code&gt;search&lt;/code&gt; list, if the query to all &lt;code&gt;nameservers&lt;/code&gt; results in &lt;code&gt;{error,nxdomain}&lt;/code&gt; or an empty answer, the same query is tried for &lt;code&gt;alt_nameservers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;search&lt;/code&gt; 목록을 사용하지 않는 쿼리의 경우 모든 &lt;code&gt;nameservers&lt;/code&gt; 대한 쿼리 결과 &lt;code&gt;{error,nxdomain}&lt;/code&gt; 또는 빈 답변이 발생하면 &lt;code&gt;alt_nameservers&lt;/code&gt; 에 대해 동일한 쿼리가 시도됩니다 .</target>
        </trans-unit>
        <trans-unit id="59b8957d8020eb9e87981c178f14ff34b35485d9" translate="yes" xml:space="preserve">
          <source>For readability, the example code is kept as simple as possible. For example, it does not include error handling, which might be vital in a real-life system.</source>
          <target state="translated">가독성을 위해 예제 코드는 가능한 단순하게 유지됩니다. 예를 들어, 실제 시스템에서 중요 할 수있는 오류 처리는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a38e8a331158bbaca6e2984a9c03a8fde4916b93" translate="yes" xml:space="preserve">
          <source>For release handling to work properly, the runtime system must have knowledge about which release it is running. It must also be able to change (in runtime) which boot script and system configuration file to use if the system is rebooted, for example, by &lt;code&gt;heart&lt;/code&gt; after a failure. Thus, Erlang must be started as an embedded system; for information on how to do this, see Embedded System.</source>
          <target state="translated">릴리스 처리가 제대로 작동하려면 런타임 시스템이 실행중인 릴리스에 대한 지식이 있어야합니다. 또한 시스템이 재부팅하면 부팅 스크립트 및 시스템 구성 파일, 예를 들어, 사용하는 (런타임)를 변경 할 수 있어야 &lt;code&gt;heart&lt;/code&gt; 실패 후. 따라서 Erlang은 임베디드 시스템으로 시작해야합니다. 이를 수행하는 방법에 대한 자세한 내용은 내장 시스템을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b60058bb76ac1d7e649d379e983fee2d6d58bdc6" translate="yes" xml:space="preserve">
          <source>For release handling to work properly, the runtime system must know which release it is running. It must also be able to change (in runtime) which boot script and system configuration file are to be used if the system is restarted. This is taken care of automatically if Erlang is started as an embedded system. Read about this in &lt;code&gt;Embedded System&lt;/code&gt; in &lt;strong&gt;System Documentation&lt;/strong&gt;. In this case, the system configuration file &lt;code&gt;sys.config&lt;/code&gt; is mandatory.</source>
          <target state="translated">릴리스 처리가 제대로 작동하려면 런타임 시스템이 실행중인 릴리스를 알아야합니다. 또한 시스템을 재시작 할 때 사용할 부트 스크립트 및 시스템 구성 파일을 변경할 수 있어야합니다 (런타임에서). Erlang이 임베디드 시스템으로 시작되면 자동으로 처리됩니다. &lt;strong&gt;시스템 설명서의 &lt;/strong&gt; &lt;code&gt;Embedded System&lt;/code&gt; 에서 이에 대해 읽으십시오 . 이 경우 시스템 구성 파일 &lt;code&gt;sys.config&lt;/code&gt; 는 필수입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="733aa680cc0ce48217dd03dedb5182519c541887" translate="yes" xml:space="preserve">
          <source>For release handling to work, use &lt;code&gt;start_erl&lt;/code&gt; as the Erlang machine. As stated &lt;code&gt;&lt;a href=&quot;#001&quot;&gt;above&lt;/a&gt;&lt;/code&gt;, the service name is significant.</source>
          <target state="translated">릴리스 처리가 작동 하려면 Erlang 시스템으로 &lt;code&gt;start_erl&lt;/code&gt; 을 사용 하십시오 . &lt;code&gt;&lt;a href=&quot;#001&quot;&gt;above&lt;/a&gt;&lt;/code&gt; 언급 했듯이 서비스 이름은 중요합니다.</target>
        </trans-unit>
        <trans-unit id="a50e14cf83a064b14e5263159a02b7161dafa2f3" translate="yes" xml:space="preserve">
          <source>For remote files, &lt;code&gt;ftp&lt;/code&gt; cannot determine the file size in a platform independent way. In this case the size becomes &lt;code&gt;unknown&lt;/code&gt; and it is left to the application to determine the size.</source>
          <target state="translated">원격 파일의 경우 &lt;code&gt;ftp&lt;/code&gt; 는 플랫폼 독립적 인 방식으로 파일 크기를 결정할 수 없습니다. 이 경우 크기를 &lt;code&gt;unknown&lt;/code&gt; 크기 를 결정하기 위해 응용 프로그램에 맡겨집니다.</target>
        </trans-unit>
        <trans-unit id="afad620c32f9847d3e26d186cfb3d4260fdc731b" translate="yes" xml:space="preserve">
          <source>For repeated encryption or decryption of a text divided in parts where the same cipher and same key is used, but a new initialization vector (nounce) should be applied for each part, the functions are:</source>
          <target state="translated">동일한 암호와 동일한 키를 사용하지만 각 부분에 대해 새로운 초기화 벡터 (nounce)를 적용해야하는 부분으로 나누어 진 텍스트의 반복적 인 암호화 또는 암호 해독의 경우 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b31d5a4153c9f2d80b3c0c3a73466d0d5e4c598" translate="yes" xml:space="preserve">
          <source>For repeated encryption or decryption of a text divided in parts, where the internal crypto state is initialized once, and then many binaries are encrypted or decrypted with the same state, the functions are:</source>
          <target state="translated">내부 암호화 상태가 한 번 초기화 된 후 여러 바이너리가 동일한 상태로 암호화되거나 해독되는 부분으로 나누어 진 텍스트의 반복적 인 암호화 또는 암호 해독의 경우 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81a6e9a0d341aecb81f5c9a379e320f7c6223d4b" translate="yes" xml:space="preserve">
          <source>For replacement functions see the &lt;code&gt;New API&lt;/code&gt;.</source>
          <target state="translated">대체 기능에 대해서는 &lt;code&gt;New API&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f955c275027f2f36c96742dcda8971cd255c6fb7" translate="yes" xml:space="preserve">
          <source>For scalar variables, a function &lt;code&gt;f(Operation, ...)&lt;/code&gt; must be defined.</source>
          <target state="translated">스칼라 변수의 경우 함수 &lt;code&gt;f(Operation, ...)&lt;/code&gt; 를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="6b6dd51d7eaa4e872f24ed13800a1ba3ffb38ecd" translate="yes" xml:space="preserve">
          <source>For scalar variables:</source>
          <target state="translated">스칼라 변수의 경우 :</target>
        </trans-unit>
        <trans-unit id="c1f56cf4bfd402c13c51879b39d9930c1e768c8a" translate="yes" xml:space="preserve">
          <source>For security reasons 3DES cipher suites are no longer supported by default, but can be configured. (OTP 21)</source>
          <target state="translated">보안상의 이유로 3DES 암호 그룹은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다. (OTP 21)</target>
        </trans-unit>
        <trans-unit id="59a06e326c862eab7d0fb9b77b5f749cb9683067" translate="yes" xml:space="preserve">
          <source>For security reasons DES cipher suites are no longer supported by default, but can be configured. (OTP 20)</source>
          <target state="translated">보안상의 이유로 DES 암호 그룹은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다. (OTP 20)</target>
        </trans-unit>
        <trans-unit id="1210ac950d97aec0dd8b548a8a613d52b1717a5a" translate="yes" xml:space="preserve">
          <source>For security reasons DTLS-1.0 (based on TLS 1.1) is no longer supported by default, but can be configured. (OTP 22)</source>
          <target state="translated">보안상의 이유로 DTLS-1.0 (TLS 1.1 기반)은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다. (OTP 22)</target>
        </trans-unit>
        <trans-unit id="eceb2b5709798d30ee828751999ad984fd0b9a1d" translate="yes" xml:space="preserve">
          <source>For security reasons RSA key exchange cipher suites are no longer supported by default, but can be configured. (OTP 21)</source>
          <target state="translated">보안상의 이유로 RSA 키 교환 암호 제품군은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다. (OTP 21)</target>
        </trans-unit>
        <trans-unit id="0032073046c074fe59affcfee752fd7aa7154466" translate="yes" xml:space="preserve">
          <source>For security reasons SSL-2.0 is not supported. Interoperability with SSL-2.0 enabled clients dropped. (OTP 21)</source>
          <target state="translated">보안상의 이유로 SSL-2.0은 지원되지 않습니다. SSL-2.0 사용 클라이언트와의 상호 운용성이 떨어졌습니다. (OTP 21)</target>
        </trans-unit>
        <trans-unit id="98edf288e22d583e77263f01452846498c4c333a" translate="yes" xml:space="preserve">
          <source>For security reasons SSL-3.0 is no longer supported at all. (OTP 23)</source>
          <target state="translated">보안상의 이유로 SSL-3.0은 더 이상 지원되지 않습니다. (OTP 23)</target>
        </trans-unit>
        <trans-unit id="d1c35cfd281152231fe6f20e07a2173a22ea7abc" translate="yes" xml:space="preserve">
          <source>For security reasons SSL-3.0 is no longer supported by default, but can be configured.</source>
          <target state="translated">보안상의 이유로 SSL-3.0은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e5822992bcef58dbd479cebfefa8c561d7607c" translate="yes" xml:space="preserve">
          <source>For security reasons SSL-3.0 is no longer supported by default, but can be configured. (OTP 19)</source>
          <target state="translated">보안상의 이유로 SSL-3.0은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다. (OTP 19)</target>
        </trans-unit>
        <trans-unit id="fcd4692ab90c55b65a6fb49518dda5e235f65557" translate="yes" xml:space="preserve">
          <source>For security reasons TLS-1.0 is no longer supported by default, but can be configured. (OTP 22)</source>
          <target state="translated">보안상의 이유로 TLS-1.0은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다. (OTP 22)</target>
        </trans-unit>
        <trans-unit id="99c52e6b0a8f360defbb40bc1b67e2051e3a36f9" translate="yes" xml:space="preserve">
          <source>For security reasons TLS-1.1 is no longer supported by default, but can be configured. (OTP 22)</source>
          <target state="translated">보안상의 이유로 TLS-1.1은 더 이상 기본적으로 지원되지 않지만 구성 할 수 있습니다. (OTP 22)</target>
        </trans-unit>
        <trans-unit id="5200604f64729ed3a8c1c90ce7cee93d5e706fa7" translate="yes" xml:space="preserve">
          <source>For security reasons, this directory is normally accessible only to the root user.</source>
          <target state="translated">보안상의 이유로이 디렉토리는 일반적으로 루트 사용자 만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4d0e82100e92903539e17c40256a342a1fcb6d7" translate="yes" xml:space="preserve">
          <source>For sequential commands:</source>
          <target state="translated">순차 명령의 경우 :</target>
        </trans-unit>
        <trans-unit id="55b3cc8f09d0f687a26732e4562872589388f8ed" translate="yes" xml:space="preserve">
          <source>For similar dependency on the md5 and des algorithms most encrypted private keys in PEM format do not work either. However, the PBES2 encryption scheme allows the use of stronger FIPS verified algorithms which is a viable alternative.</source>
          <target state="translated">md5 및 des 알고리즘에 대한 유사한 종속성의 경우 PEM 형식의 대부분의 암호화 된 개인 키도 작동하지 않습니다. 그러나 PBES2 암호화 체계를 통해보다 강력한 FIPS 검증 알고리즘을 사용할 수 있습니다. 이는 가능한 대안입니다.</target>
        </trans-unit>
        <trans-unit id="ad7fd11af306aa0787eb221d59b5a550d8011f49" translate="yes" xml:space="preserve">
          <source>For simple state machines not needing these features &lt;code&gt;gen_server&lt;/code&gt; works just fine. It also has got smaller call overhead, but we are talking about something like 2 vs 3.3 microseconds call roundtrip time here, so if the server callback does just a little bit more than just replying, or if the call is not extremely frequent, that difference will be hard to notice.</source>
          <target state="translated">이 기능을 필요로하지 않는 간단한 상태 머신의 경우 &lt;code&gt;gen_server&lt;/code&gt; 가 제대로 작동합니다. 또한 호출 오버 헤드가 더 작지만 여기서는 2 대 3.3 마이크로 초 전화 왕복 시간과 같은 것에 대해 이야기하고 있습니다. 따라서 서버 콜백이 응답하는 것보다 조금 더 많거나 호출이 너무 자주 발생하지 않으면 그 차이 알아 채기가 어려울 것입니다.</target>
        </trans-unit>
        <trans-unit id="e65f3ace59a4bffafeeff8ff2baaf061eb590f52" translate="yes" xml:space="preserve">
          <source>For simplicity, the &lt;code&gt;Guard&lt;/code&gt; argument may also be any of the following:</source>
          <target state="translated">간단히하기 위해 &lt;code&gt;Guard&lt;/code&gt; 인수는 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfd0d5590df543f0cc546f95d2278f8b46ca4969" translate="yes" xml:space="preserve">
          <source>For some 30X-result codes, automatic redirect is not allowed. In these cases the 30X-result is always returned.</source>
          <target state="translated">일부 30X 결과 코드의 경우 자동 리디렉션이 허용되지 않습니다. 이 경우 30X 결과가 항상 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4f7f03047571f653f2a49d1dc0a455e29ca0a8d5" translate="yes" xml:space="preserve">
          <source>For some &lt;code&gt;types&lt;/code&gt; there is a default protocol, indicated by &lt;code&gt;default&lt;/code&gt;, which it &lt;strong&gt;may&lt;/strong&gt; be possible to specify. And for &lt;code&gt;Domain = local&lt;/code&gt;, if a protocol &lt;strong&gt;is&lt;/strong&gt; pecified, it &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">일부 &lt;code&gt;types&lt;/code&gt; 에 의해 표시되는 기본 프로토콜이 &lt;code&gt;default&lt;/code&gt; 는, &lt;strong&gt;수&lt;/strong&gt; 지정 할 수는. 그리고 &lt;code&gt;Domain = local&lt;/code&gt; 의 경우 프로토콜 &lt;strong&gt;이&lt;/strong&gt; 지정되면 &lt;code&gt;default&lt;/code&gt; &lt;strong&gt;여야&lt;/strong&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="699b1be8237bfcbf9485bcb546b581b5163095d7" translate="yes" xml:space="preserve">
          <source>For some algorithms, jump functions are provided for generating non-overlapping sequences for parallel computations. The jump functions perform calculations equivalent to perform a large number of repeated calls for calculating new states.</source>
          <target state="translated">일부 알고리즘의 경우 병렬 계산을 위해 겹치지 않는 시퀀스를 생성하기 위해 점프 기능이 제공됩니다. 점프 함수는 새로운 상태를 계산하기 위해 많은 반복 호출을 수행하는 것과 동등한 계산을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="350ef578f76518f00d7c6b44066f734a85c4f9ac" translate="yes" xml:space="preserve">
          <source>For some errors, for example, file system full, it is necessary to call &lt;code&gt;append_chunk_end&lt;/code&gt; to get the proper reason.</source>
          <target state="translated">파일 시스템 가득 참과 같은 일부 오류의 경우, 적절한 이유를 얻으려면 &lt;code&gt;append_chunk_end&lt;/code&gt; 를 호출 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="24daba9e08780d1101f66c1b1b5b2a5ff192de81" translate="yes" xml:space="preserve">
          <source>For some errors, for example, file system full, it is necessary to to call &lt;code&gt;send_chunk_end&lt;/code&gt; to get the proper reason.</source>
          <target state="translated">파일 시스템 가득 참과 같은 일부 오류의 경우 적절한 이유를 얻으려면 &lt;code&gt;send_chunk_end&lt;/code&gt; 를 호출 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="398ccb01ae03029aa5d524510c11d616ec30a34b" translate="yes" xml:space="preserve">
          <source>For some of &lt;strong&gt;our&lt;/strong&gt; codecs (not binary), it is also possible to pre-encode the actions, in which case &lt;code&gt;Actions&lt;/code&gt; will be either a &lt;code&gt;binary()&lt;/code&gt; or &lt;code&gt;[binary()]&lt;/code&gt;.</source>
          <target state="translated">일부의 경우 &lt;strong&gt;우리의&lt;/strong&gt; 코덱 (바이너리되지 않음)가하는 사전 인코딩의 경우있는 조치도 가능 &lt;code&gt;Actions&lt;/code&gt; 이 될 것입니다 &lt;code&gt;binary()&lt;/code&gt; 또는 &lt;code&gt;[binary()]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1de480a7da54e5f56c4412fc5c65ca6129148716" translate="yes" xml:space="preserve">
          <source>For some time, Perl has provided a facility that allows regular expressions to recurse (among other things). It does this by interpolating Perl code in the expression at runtime, and the code can refer to the expression itself. A Perl pattern using code interpolation to solve the parentheses problem can be created like this:</source>
          <target state="translated">한동안 Perl은 정규 표현식이 재귀 할 수있는 기능을 제공했습니다 (다른 것들 중에서). 런타임에 표현식에서 Perl 코드를 보간하여이를 수행하며 코드는 표현식 자체를 참조 할 수 있습니다. 괄호 문제를 해결하기 위해 코드 보간을 사용하는 Perl 패턴은 다음과 같이 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b580202559c4b8bb5d21613c730a13a6d07eda5" translate="yes" xml:space="preserve">
          <source>For source code, there is an extension to syntax &lt;code&gt;\&lt;/code&gt;OOO (backslash followed by three octal numbers) and &lt;code&gt;\x&lt;/code&gt;HH (backslash followed by &lt;code&gt;x&lt;/code&gt;, followed by two hexadecimal characters), namely &lt;code&gt;\x{&lt;/code&gt;H ...&lt;code&gt;}&lt;/code&gt; (backslash followed by &lt;code&gt;x&lt;/code&gt;, followed by left curly bracket, any number of hexadecimal digits, and a terminating right curly bracket). This allows for entering characters of any code point literally in a string even when the encoding of the source file is bytewise (&lt;code&gt;latin1&lt;/code&gt;).</source>
          <target state="translated">소스 코드를 들어, 구문 확장있다 &lt;code&gt;\&lt;/code&gt; OOO (슬래시 세 개의 8 진수 하였다)과 &lt;code&gt;\x&lt;/code&gt; HH는 (백 슬래시 뒤에 &lt;code&gt;x&lt;/code&gt; 2 개 개의 16 문자 다음에), 즉 &lt;code&gt;\x{&lt;/code&gt; H는 ... &lt;code&gt;}&lt;/code&gt; (백 슬래시 다음은 &lt;code&gt;x&lt;/code&gt; 다음에 왼쪽 중괄호, 16 진수의 숫자 및 오른쪽 오른쪽 중괄호가옵니다). 따라서 소스 파일의 인코딩이 바이트 단위 ( &lt;code&gt;latin1&lt;/code&gt; ) 인 경우에도 코드 포인트의 문자를 문자열로 문자 그대로 입력 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fec104cd777412980211468aadaec4af92c37fa9" translate="yes" xml:space="preserve">
          <source>For statuses &lt;code&gt;string()&lt;/code&gt; and &lt;code&gt;abort&lt;/code&gt;, option &lt;code&gt;flush&lt;/code&gt; is ignored and flushing is &lt;strong&gt;not&lt;/strong&gt; done.</source>
          <target state="translated">&lt;code&gt;string()&lt;/code&gt; 및 &lt;code&gt;abort&lt;/code&gt; 상태의 경우 , &lt;code&gt;flush&lt;/code&gt; 옵션 은 무시되고 flush는 수행 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f41f536c797f19fa1495fe43641d95e8f6802c0a" translate="yes" xml:space="preserve">
          <source>For such functions, it is recommended to use the special &lt;code&gt;no_return()&lt;/code&gt; type for their &quot;return&quot;, through a contract of the following form:</source>
          <target state="translated">이러한 함수 의 경우 다음 형식의 계약을 통해 &quot;return&quot;에 특수 &lt;code&gt;no_return()&lt;/code&gt; 유형 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="fa91aef9a76ec0ef9ab846570f6a068b92ff2f74" translate="yes" xml:space="preserve">
          <source>For system reboots to work properly, it is also required that the system is started with heartbeat monitoring, see the &lt;code&gt;erl(1)&lt;/code&gt; manual page in ERTS and the &lt;code&gt;heart(3)&lt;/code&gt; manual page in Kernel</source>
          <target state="translated">시스템 재부팅이 제대로 작동하려면 시스템을 하트 비트 모니터링으로 시작해야합니다. ERTS 의 &lt;code&gt;erl(1)&lt;/code&gt; 매뉴얼 페이지와 커널 의 &lt;code&gt;heart(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="56036cbdb276fedc737c5fb413f3dab9e7e4af38" translate="yes" xml:space="preserve">
          <source>For tables of type &lt;code&gt;bag&lt;/code&gt; or &lt;code&gt;duplicate_bag&lt;/code&gt;, the functions returns a list with the &lt;code&gt;Pos&lt;/code&gt;:th element of every object with key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bag&lt;/code&gt; 또는 &lt;code&gt;duplicate_bag&lt;/code&gt; 유형의 테이블의 경우, 함수는 &lt;code&gt;Key&lt;/code&gt; 키가있는 모든 오브젝트 의 &lt;code&gt;Pos&lt;/code&gt; : th 요소 가있는 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b022cb216c27ac5d7bfe54004e9fb8ee6f1f91d0" translate="yes" xml:space="preserve">
          <source>For tables of type &lt;code&gt;ordered_set&lt;/code&gt;, an object is returned if the specified key &lt;strong&gt;compares equal&lt;/strong&gt; to the key of an object in the table.</source>
          <target state="translated">&lt;code&gt;ordered_set&lt;/code&gt; 유형의 테이블의 경우 지정된 키 가 테이블에있는 오브젝트의 키와 &lt;strong&gt;동일한&lt;/strong&gt; 경우 오브젝트가 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="233db6fa166e9a39b932c3d8a0b2cd0810af3920" translate="yes" xml:space="preserve">
          <source>For tables of type &lt;code&gt;ordered_set&lt;/code&gt;, objects are visited in the same order as in a &lt;code&gt;first&lt;/code&gt;/&lt;code&gt;next&lt;/code&gt; traversal. This means that the match specification is executed against objects with keys in the &lt;code&gt;first&lt;/code&gt;/&lt;code&gt;next&lt;/code&gt; order and the corresponding result list is in the order of that execution.</source>
          <target state="translated">&lt;code&gt;ordered_set&lt;/code&gt; 유형의 테이블의 경우 , &lt;code&gt;first&lt;/code&gt; / &lt;code&gt;next&lt;/code&gt; 순회 와 동일한 순서로 오브젝트가 방문됩니다 . 이는 일치 스펙이 &lt;code&gt;first&lt;/code&gt; / &lt;code&gt;next&lt;/code&gt; 순서 로 키가있는 오브젝트에 대해 실행되고 해당 결과 목록이 해당 실행 순서로 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ad6c4d1ea79ea30047e3cda2a99993d140d14faa" translate="yes" xml:space="preserve">
          <source>For tables of type &lt;code&gt;ordered_set&lt;/code&gt;, the result is in the same order as in a &lt;code&gt;first&lt;/code&gt;/&lt;code&gt;next&lt;/code&gt; traversal.</source>
          <target state="translated">&lt;code&gt;ordered_set&lt;/code&gt; 유형의 테이블의 경우 결과는 &lt;code&gt;first&lt;/code&gt; / &lt;code&gt;next&lt;/code&gt; 순회 와 동일한 순서 입니다.</target>
        </trans-unit>
        <trans-unit id="715ab04cd100183a8c5ea8e6f632d5aa5bc16ef5" translate="yes" xml:space="preserve">
          <source>For tables of type &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;ordered_set&lt;/code&gt;, the function returns either the empty list or a list with one element, as there cannot be more than one object with the same key. For tables of type &lt;code&gt;bag&lt;/code&gt; or &lt;code&gt;duplicate_bag&lt;/code&gt;, the function returns a list of arbitrary length.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;ordered_set&lt;/code&gt; 유형의 테이블의 경우, 동일한 키를 가진 오브젝트가 둘 이상있을 수 없으므로 함수는 비어있는 목록 또는 하나의 요소가있는 목록을 리턴합니다. &lt;code&gt;bag&lt;/code&gt; 또는 &lt;code&gt;duplicate_bag&lt;/code&gt; 유형의 테이블의 경우 함수는 임의의 길이 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="22c978b754e8c5d3bf488c2adbe59d11ce586acd" translate="yes" xml:space="preserve">
          <source>For tables of type &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;bag&lt;/code&gt;, or &lt;code&gt;duplicate_bag&lt;/code&gt;, an object is returned only if the specified key &lt;strong&gt;matches&lt;/strong&gt; the key of the object in the table.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; , &lt;code&gt;bag&lt;/code&gt; 또는 &lt;code&gt;duplicate_bag&lt;/code&gt; 유형의 테이블의 경우 지정된 키 가 테이블에있는 오브젝트의 키 &lt;strong&gt;와 일치&lt;/strong&gt; 하는 경우에만 오브젝트가 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc193107e3ea191d41964e87dd054615f12309c6" translate="yes" xml:space="preserve">
          <source>For tables, a &lt;code&gt;f(Operation, ...)&lt;/code&gt; function should be defined (the function shown is exemplified with &lt;code&gt;f&lt;/code&gt;).</source>
          <target state="translated">테이블의 경우 &lt;code&gt;f(Operation, ...)&lt;/code&gt; 함수를 정의해야합니다 (표시된 함수는 &lt;code&gt;f&lt;/code&gt; 로 예시 ).</target>
        </trans-unit>
        <trans-unit id="25740fde6714ee3452b2fe921ceac6c3a2af245b" translate="yes" xml:space="preserve">
          <source>For tables:</source>
          <target state="translated">테이블의 경우 :</target>
        </trans-unit>
        <trans-unit id="c4e855e5f781e499b0d767d066a5aaccd4a38c33" translate="yes" xml:space="preserve">
          <source>For testing code that is strictly dependent on EUnit, it may be preferable to use the &lt;code&gt;EUNIT&lt;/code&gt; macro for this purpose, while for code that uses more generic testing conventions, using the &lt;code&gt;TEST&lt;/code&gt; macro may be preferred.</source>
          <target state="translated">EUnit에 엄격하게 의존하는 테스트 코드의 &lt;code&gt;EUNIT&lt;/code&gt; 목적으로 EUNIT 매크로 를 사용하는 것이 바람직 할 수 있지만 보다 일반적인 테스트 규칙을 사용하는 코드의 경우 &lt;code&gt;TEST&lt;/code&gt; 매크로를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0eaa3134cf1e4897b941600d7b8333c58d1a5540" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;FlagList&lt;/code&gt; options &lt;code&gt;call_count&lt;/code&gt; and &lt;code&gt;call_time&lt;/code&gt;: pauses the existing counters. The behavior is undefined for other &lt;code&gt;FlagList&lt;/code&gt; options.</source>
          <target state="translated">를 들어 &lt;code&gt;FlagList&lt;/code&gt; 의 옵션 &lt;code&gt;call_count&lt;/code&gt; 및 &lt;code&gt;call_time&lt;/code&gt; : 기존의 카운터를 일시 중지합니다. 다른 &lt;code&gt;FlagList&lt;/code&gt; 옵션에 대해서는 동작이 정의되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="657913bfbbdb66eaa8be5bd6013033898317bc92" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;FlagList&lt;/code&gt; options &lt;code&gt;call_count&lt;/code&gt; and &lt;code&gt;call_time&lt;/code&gt;: restarts the existing counters. The behavior is undefined for other &lt;code&gt;FlagList&lt;/code&gt; options.</source>
          <target state="translated">를 들어 &lt;code&gt;FlagList&lt;/code&gt; 옵션 &lt;code&gt;call_count&lt;/code&gt; 및 &lt;code&gt;call_time&lt;/code&gt; : 기존의 카운터를 다시 시작합니다. 다른 &lt;code&gt;FlagList&lt;/code&gt; 옵션 에서는 동작이 정의되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="781e9d09f9973d8076eb89148eef39f2df02d216" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;GUI&lt;/code&gt; specification the configuration was as follows:</source>
          <target state="translated">를 들어 &lt;code&gt;GUI&lt;/code&gt; 의 다음과 같은 사양을 구성했다 :</target>
        </trans-unit>
        <trans-unit id="5b9a324ace0d3cbed994dca0003d2e4d7f9e78d4" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;allocate_heap&lt;/code&gt; instruction, without the &lt;code&gt;?&lt;/code&gt; the packing would be done like this:</source>
          <target state="translated">에 대한 &lt;code&gt;allocate_heap&lt;/code&gt; 를 포함하지 않는 지시 &lt;code&gt;?&lt;/code&gt; 포장은 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="ded40a6ea919b1bb6aca350aeb1fc0ce18927fdc" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;rename&lt;/code&gt; function, this option is &lt;code&gt;false&lt;/code&gt; by default. See &lt;code&gt;merge_sources/3&lt;/code&gt; for details.</source>
          <target state="translated">의 경우 &lt;code&gt;rename&lt;/code&gt; 기능이 옵션은 &lt;code&gt;false&lt;/code&gt; 기본적으로. 자세한 내용은 &lt;code&gt;merge_sources/3&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1a770afcc514e6b5f1d3afe741dc12c03c259661" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;rename&lt;/code&gt; function, this option is &lt;code&gt;true&lt;/code&gt; by default. See &lt;code&gt;merge_sources/3&lt;/code&gt; for details.</source>
          <target state="translated">의 경우 &lt;code&gt;rename&lt;/code&gt; 기능이 옵션은 &lt;code&gt;true&lt;/code&gt; 기본적으로. 자세한 내용은 &lt;code&gt;merge_sources/3&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="976e9cfe5a571d99dbdc27999274cc6918176331" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;try&lt;/code&gt; expression variable scoping is limited so that variables bound in the expression are always 'unsafe' outside the expression.</source>
          <target state="translated">위해 &lt;code&gt;try&lt;/code&gt; 표현 변수 범위 지정 식에 바인딩 변수는 항상 발현 외부 '안전하지 않은'되도록 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="97c3e31f089354c2ea70e7b1dcd3b7e266aa74d0" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;utf8&lt;/code&gt;, &lt;code&gt;utf16&lt;/code&gt;, and &lt;code&gt;utf32&lt;/code&gt; types, &lt;code&gt;Size&lt;/code&gt; must not be given. The size of the segment is implicitly determined by the type and value itself.</source>
          <target state="translated">를 들어 &lt;code&gt;utf8&lt;/code&gt; , &lt;code&gt;utf16&lt;/code&gt; 및 &lt;code&gt;utf32&lt;/code&gt; 종류, &lt;code&gt;Size&lt;/code&gt; 제공하지 않아야합니다. 세그먼트의 크기는 유형과 값 자체에 의해 암시 적으로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="1359d566373d0e0b837e848378fd675317913e68" translate="yes" xml:space="preserve">
          <source>For the Erlang/OTP SSH server the situation is different. The server executes in an Erlang process in the Erlang emulator which in turn executes in an OS process. The emulator does not try to change its user when authenticated over the SSH protocol. So the remote user name is only for authentication purposes in the Erlang/OTP SSH application.</source>
          <target state="translated">Erlang / OTP SSH 서버의 경우 상황이 다릅니다. 서버는 Erlang 에뮬레이터의 Erlang 프로세스에서 실행되며 차례로 OS 프로세스에서 실행됩니다. 에뮬레이터는 SSH 프로토콜을 통해 인증 될 때 사용자 변경을 시도하지 않습니다. 따라서 원격 사용자 이름은 Erlang / OTP SSH 응용 프로그램에서 인증 목적으로 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="415eb0303d79a7dd6da66613a75dd0fcadf8fba7" translate="yes" xml:space="preserve">
          <source>For the FOP print formatter, two steps must be taken:</source>
          <target state="translated">FOP 인쇄 포맷터의 경우 다음 두 단계를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b1aa91b87b9fdd76b914a60411a084784480e0d" translate="yes" xml:space="preserve">
          <source>For the agent, a &lt;code&gt;write&lt;/code&gt;, means that all &lt;code&gt;set&lt;/code&gt; requests and their responses are stored. No &lt;code&gt;get&lt;/code&gt; requests or traps are stored in a &lt;code&gt;write&lt;/code&gt;. A &lt;code&gt;read_write&lt;/code&gt;, all requests, responses and traps are stored.</source>
          <target state="translated">에이전트의 경우 &lt;code&gt;write&lt;/code&gt; 는 모든 &lt;code&gt;set&lt;/code&gt; 요청 및 해당 응답이 저장 됨을 의미합니다 . &lt;code&gt;get&lt;/code&gt; 요청이나 트랩은 &lt;code&gt;write&lt;/code&gt; 저장 되지 않습니다 . &lt;code&gt;read_write&lt;/code&gt; 모든 요청, 응답 및 트랩이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="20126d6bc96d2526a0ea66d88e1dcca82c7307e0" translate="yes" xml:space="preserve">
          <source>For the agent:</source>
          <target state="translated">에이전트의 경우 :</target>
        </trans-unit>
        <trans-unit id="5fc8ab69f4e9554ac3c8401a966d5bbd79939033" translate="yes" xml:space="preserve">
          <source>For the application controller, all keys are optional. The respective default values are used for any omitted keys.</source>
          <target state="translated">응용 프로그램 컨트롤러의 경우 모든 키는 선택 사항입니다. 각각의 기본값은 생략 된 키에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6dd38b1851fe2e244143b2e1792d15a3819fffc8" translate="yes" xml:space="preserve">
          <source>For the association specified by &lt;code&gt;assoc_id&lt;/code&gt;, &lt;code&gt;{IP,Port}&lt;/code&gt; must be one of the peer addresses. This option determines that the specified address is treated by the local SCTP stack as the primary address of the peer.</source>
          <target state="translated">로 지정된 연관에 대해 &lt;code&gt;assoc_id&lt;/code&gt; , &lt;code&gt;{IP,Port}&lt;/code&gt; 피어 주소 중 하나 여야합니다. 이 옵션은 지정된 주소가 로컬 SCTP 스택에서 피어의 기본 주소로 처리되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c963bc2c695c51299e3bd0caee4278c5b8ef8e50" translate="yes" xml:space="preserve">
          <source>For the case where the release to upgrade from includes an earlier emulator version, &lt;code&gt;systools:make_relup&lt;/code&gt; creates a backwards compatible relup file. This means that all upgrade instructions are executed before the emulator is restarted. The new application code is therefore loaded into the old emulator. If the new code is compiled with the new emulator, there can be cases where the beam format has changed and beam files cannot be loaded. To overcome this problem, compile the new code with the old emulator.</source>
          <target state="translated">업그레이드 할 릴리스에 이전 에뮬레이터 버전이 포함 된 경우 &lt;code&gt;systools:make_relup&lt;/code&gt; 은 이전 버전과 호환되는 relup 파일을 만듭니다. 즉, 에뮬레이터를 다시 시작하기 전에 모든 업그레이드 지침이 실행됩니다. 따라서 새 응용 프로그램 코드가 이전 에뮬레이터에로드됩니다. 새 코드가 새 에뮬레이터로 컴파일되면 빔 형식이 변경되어 빔 파일을로드 할 수없는 경우가있을 수 있습니다. 이 문제를 해결하려면 이전 에뮬레이터로 새 코드를 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="b1b5049972e1cb403743015932e9e76731e6317e" translate="yes" xml:space="preserve">
          <source>For the client, the option &lt;code&gt;{server_name_indication, atom_to_list(TargetNode)}&lt;/code&gt; is added when connecting. This makes it possible to use the client option &lt;code&gt;{verify, verify_peer}&lt;/code&gt;, and the client will verify that the certificate matches the node name you are connecting to. This only works if the the server certificate is issued to the name &lt;code&gt;atom_to_list(TargetNode)&lt;/code&gt;.</source>
          <target state="translated">클라이언트의 경우 연결시 &lt;code&gt;{server_name_indication, atom_to_list(TargetNode)}&lt;/code&gt; 옵션 이 추가됩니다. 이를 통해 클라이언트 옵션 &lt;code&gt;{verify, verify_peer}&lt;/code&gt; 를 사용할 수 있으며 클라이언트 는 인증서가 연결중인 노드 이름과 일치하는지 확인합니다. 서버 인증서가 &lt;code&gt;atom_to_list(TargetNode)&lt;/code&gt; 이름으로 발행 된 경우에만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="93c3852e42cdbbb91eeff1b0f199e4a7603b1514" translate="yes" xml:space="preserve">
          <source>For the default handler ssh_file, store the valid host keys in the file &lt;code&gt;&lt;a href=&quot;ssh_file#FILE-known_hosts&quot;&gt;known_hosts&lt;/a&gt;&lt;/code&gt; and set the option &lt;code&gt;&lt;a href=&quot;ssh#hardening_client_options--silently_accept_hosts&quot;&gt;silently_accept_hosts&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본 핸들러 ssh_file를 들어, 파일의 유효한 호스트 키 저장 &lt;code&gt;&lt;a href=&quot;ssh_file#FILE-known_hosts&quot;&gt;known_hosts&lt;/a&gt;&lt;/code&gt; 하고 옵션 설정 &lt;code&gt;&lt;a href=&quot;ssh#hardening_client_options--silently_accept_hosts&quot;&gt;silently_accept_hosts&lt;/a&gt;&lt;/code&gt; 을 에 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf4babe249d804829c08eff9b506c2117402317f" translate="yes" xml:space="preserve">
          <source>For the definition of an I/O list, see &lt;code&gt;&lt;a href=&quot;#erl_iolist_to_binary&quot;&gt;erl_iolist_to_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">I / O 목록의 정의는 &lt;code&gt;&lt;a href=&quot;#erl_iolist_to_binary&quot;&gt;erl_iolist_to_binary&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eae1fb506a61a9964e7cce40371ce65475791f6b" translate="yes" xml:space="preserve">
          <source>For the details of a &lt;strong&gt;state transition&lt;/strong&gt;, see type &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;상태 전환에&lt;/strong&gt; 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; 유형을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cec65c811aa56d1a69a7530bf3735b60a848393e" translate="yes" xml:space="preserve">
          <source>For the details of a state transition, see type &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">상태 전이에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; 유형을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c74cb1e8336cdd1203d604b857e0c3d64d3dcd58" translate="yes" xml:space="preserve">
          <source>For the distribution to be started, give the emulator a name as well:</source>
          <target state="translated">배포를 시작하려면 에뮬레이터의 이름도 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="0b04b529c4c47ecfdad5e9816546f9bfe4dbd018" translate="yes" xml:space="preserve">
          <source>For the employee table, the wild pattern looks as follows:</source>
          <target state="translated">직원 테이블의 경우 와일드 패턴은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7e6705039a1ae73b193bad5db51845c9d0529071" translate="yes" xml:space="preserve">
          <source>For the manager, a &lt;code&gt;write&lt;/code&gt;, means that all requests (&lt;code&gt;set&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt;) and their responses are stored. No traps are stored in a &lt;code&gt;write&lt;/code&gt;. A &lt;code&gt;read_write&lt;/code&gt;, all requests, responses and traps are stored.</source>
          <target state="translated">관리자의 경우 &lt;code&gt;write&lt;/code&gt; 는 모든 요청 ( &lt;code&gt;set&lt;/code&gt; 및 &lt;code&gt;get&lt;/code&gt; ) 및 해당 응답이 저장 됨을 의미합니다 . 트랩은 &lt;code&gt;write&lt;/code&gt; 저장되지 않습니다 . &lt;code&gt;read_write&lt;/code&gt; 모든 요청, 응답 및 트랩이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="3b1fb0c931ba2b62d8db4b02922030a6e77f8a35" translate="yes" xml:space="preserve">
          <source>For the manager:</source>
          <target state="translated">관리자의 경우 :</target>
        </trans-unit>
        <trans-unit id="3de91bb14893af33be8acff68c2671f153387239" translate="yes" xml:space="preserve">
          <source>For the message to be discarded all together, the function &lt;strong&gt;must&lt;/strong&gt; return &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="translated">메시지를 모두 함께 버리려면 함수 &lt;strong&gt;가 &lt;/strong&gt;&lt;strong&gt;false &lt;/strong&gt;&lt;strong&gt;를&lt;/strong&gt; 리턴 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f161aa1fc228360f225cc3ebe3f502657e04e96a" translate="yes" xml:space="preserve">
          <source>For the message to be discarded, the function &lt;strong&gt;must&lt;/strong&gt; return &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="translated">메시지를 삭제하려면 함수 &lt;strong&gt;가 &lt;/strong&gt;&lt;strong&gt;false &lt;/strong&gt;&lt;strong&gt;를&lt;/strong&gt; 반환 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b04a61b520d24ab5bfc2c769cbe978c234fd58eb" translate="yes" xml:space="preserve">
          <source>For the message to be rejected, the function &lt;strong&gt;must&lt;/strong&gt; return &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="translated">메시지가 거부 &lt;strong&gt;되려면&lt;/strong&gt; 함수 &lt;strong&gt;가 &lt;/strong&gt;&lt;strong&gt;false &lt;/strong&gt;&lt;strong&gt;를&lt;/strong&gt; 리턴 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b5f3ba527ea67657133a671fe7e672ab532dc74a" translate="yes" xml:space="preserve">
          <source>For the moment, due to performance and semantic constraints, tables of type &lt;code&gt;bag&lt;/code&gt; are not yet supported.</source>
          <target state="translated">현재 성능 및 의미 제한으로 인해 &lt;code&gt;bag&lt;/code&gt; 유형의 테이블은 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40547b43d1437579f7f2fbfb9ec372b4477fb0f9" translate="yes" xml:space="preserve">
          <source>For the next command, it is assumed that &lt;code&gt;test1:loop(N)&lt;/code&gt; is defined as follows:</source>
          <target state="translated">다음 명령의 경우 &lt;code&gt;test1:loop(N)&lt;/code&gt; 이 다음과 같이 정의 된 것으로 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="2b1d37df1fe0ebea3267dd8b52d9c5721dbaeed2" translate="yes" xml:space="preserve">
          <source>For the optimization to be applied, &lt;strong&gt;all&lt;/strong&gt; the followings conditions must be true:</source>
          <target state="translated">최적화가 적용 되려면 다음 조건이 &lt;strong&gt;모두&lt;/strong&gt; 충족되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ec3c58be690db85c80e97017d7e8fe7d15740947" translate="yes" xml:space="preserve">
          <source>For the overload protection algorithm to work properly, it is required that:</source>
          <target state="translated">과부하 보호 알고리즘이 제대로 작동하려면 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3359a492abc19fe43648a6496640354c954d3fee" translate="yes" xml:space="preserve">
          <source>For the pdu to be discarded, the function &lt;strong&gt;must&lt;/strong&gt; return &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="translated">pdu를 삭제하려면 함수 &lt;strong&gt;가 &lt;/strong&gt;&lt;strong&gt;false &lt;/strong&gt;&lt;strong&gt;를&lt;/strong&gt; 리턴 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c3a0cc70782e01142bf96c2c85a9682267fa756a" translate="yes" xml:space="preserve">
          <source>For the pdu to be rejected, the function &lt;strong&gt;must&lt;/strong&gt; return &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="translated">pdu가 거부 &lt;strong&gt;되려면&lt;/strong&gt; 함수 &lt;strong&gt;가 &lt;/strong&gt;&lt;strong&gt;false &lt;/strong&gt;&lt;strong&gt;를&lt;/strong&gt; 리턴 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="adf817fa70ab975dd98ad08846fa5f2e0e3e1b7c" translate="yes" xml:space="preserve">
          <source>For the processes and nodes to run smoothly using the global group functionality, the following criteria must be met:</source>
          <target state="translated">글로벌 그룹 기능을 사용하여 프로세스 및 노드를 원활하게 실행하려면 다음 기준을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5b9da61cf948a0fadddac960989480829c1fed7" translate="yes" xml:space="preserve">
          <source>For the purpose of managing &quot;virtual MG's&quot;, one Erlang node may host any number of MG's. In fact it may host a mix of MG's and MGC's. You may say that an Erlang node may host any number of &quot;users&quot;.</source>
          <target state="translated">&quot;가상 MG&quot;를 관리하기 위해 하나의 Erlang 노드가 여러 MG를 호스트 할 수 있습니다. 실제로 MG와 MGC가 혼합되어있을 수 있습니다. Erlang 노드는 여러 &quot;사용자&quot;를 호스팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11d6067db5ba4b9fc1718869f73b795bb80ec92a" translate="yes" xml:space="preserve">
          <source>For the sake of completeness, sticky write locks are also described here even if a sticky write lock is not supported by this function:</source>
          <target state="translated">완전성을 기하기 위해,이 기능이 고정 쓰기 잠금을 지원하지 않는 경우에도 고정 쓰기 잠금에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f9f350ba1cda401eef3b8fd9dc64783a8a4dfc58" translate="yes" xml:space="preserve">
          <source>For the sake of readability, the name of the constant must always begin with an uppercase letter, or a &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or &lt;code&gt;_&lt;/code&gt;. This means that it must always be single quoted (as the constant name is an atom, not text).</source>
          <target state="translated">가독성을 위해, 상수의 이름은 항상 대문자, 또는로 시작해야합니다 &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; . 즉, 상수 이름은 텍스트가 아닌 원자이므로 항상 작은 따옴표로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="53b40fa543a2baf51d80fc5dd6df775bcb9b18f8" translate="yes" xml:space="preserve">
          <source>For the server it is also possible to use the option &lt;code&gt;{verify, verify_peer}&lt;/code&gt; and the server will only accept client connections with certificates that are trusted by a root certificate that the server knows. A client that presents an untrusted certificate will be rejected. This option is preferably combined with &lt;code&gt;{fail_if_no_peer_cert, true}&lt;/code&gt; or a client will still be accepted if it does not present any certificate.</source>
          <target state="translated">서버의 경우 &lt;code&gt;{verify, verify_peer}&lt;/code&gt; 옵션을 사용할 수도 있으며 서버는 서버가 알고있는 루트 인증서로 신뢰할 수있는 인증서로 클라이언트 연결 만 수락합니다. 신뢰할 수없는 인증서를 제시하는 클라이언트는 거부됩니다. 이 옵션은 &lt;code&gt;{fail_if_no_peer_cert, true}&lt;/code&gt; 와 함께 사용하는 것이 좋으며 , 인증서가없는 경우에도 클라이언트가 계속 승인됩니다.</target>
        </trans-unit>
        <trans-unit id="07c6a9a17f935a5963b2898b2ff66fee46f6f80f" translate="yes" xml:space="preserve">
          <source>For the tag commands to work it requires that you have generated a tag file. See &lt;code&gt;&lt;a href=&quot;erlang_mode_chapter#tags&quot;&gt;Erlang mode users guide&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">태그 명령이 작동하려면 태그 파일을 생성해야합니다. &lt;code&gt;&lt;a href=&quot;erlang_mode_chapter#tags&quot;&gt;Erlang mode users guide&lt;/a&gt;&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="837cf5b6f7b3dccbdb8e5961e46e7a100ffbcad7" translate="yes" xml:space="preserve">
          <source>For the tracing functionality, &lt;code&gt;dbg&lt;/code&gt; can be used instead of &lt;code&gt;ttb&lt;/code&gt; for setting trace flags on processes and trace patterns for call trace, that is, the functions &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;tp&lt;/code&gt;, &lt;code&gt;tpl&lt;/code&gt;, &lt;code&gt;ctp&lt;/code&gt;, &lt;code&gt;ctpl&lt;/code&gt;, and &lt;code&gt;ctpg&lt;/code&gt;. Only the following two things are added by &lt;code&gt;ttb&lt;/code&gt; for these functions:</source>
          <target state="translated">추적 기능의 경우, 프로세스에서 추적 플래그를 설정하고 호출 추적을위한 추적 패턴, 즉 함수 &lt;code&gt;p&lt;/code&gt; , &lt;code&gt;tp&lt;/code&gt; , &lt;code&gt;tpl&lt;/code&gt; , &lt;code&gt;ctp&lt;/code&gt; , &lt;code&gt;ctpl&lt;/code&gt; 및 &lt;code&gt;ctpg&lt;/code&gt; 에 추적 플래그를 설정 하는 데 &lt;code&gt;ttb&lt;/code&gt; 대신 &lt;code&gt;dbg&lt;/code&gt; 를 사용할 수 있습니다 . 이러한 기능에 대해 &lt;code&gt;ttb&lt;/code&gt; 는 다음 두 가지만 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="1c0d9c2d311ad55b5af2b645784a779be5c00e75" translate="yes" xml:space="preserve">
          <source>For the various options recognized by &lt;code&gt;table/1,2&lt;/code&gt; in respective module, see &lt;code&gt;&lt;a href=&quot;ets#table-1&quot;&gt;ets(3)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets(3)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;mnesia(3)&lt;/code&gt;.</source>
          <target state="translated">각 모듈에서 &lt;code&gt;table/1,2&lt;/code&gt; 가 인식하는 다양한 옵션 에 대해서는 &lt;code&gt;&lt;a href=&quot;ets#table-1&quot;&gt;ets(3)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;dets#table-1&quot;&gt;dets(3)&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;mnesia(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25b7737618ea804d2be5510c9255eff2cd6ce909" translate="yes" xml:space="preserve">
          <source>For this pattern, PCRE knows that any match must start with &quot;a&quot;, so the optimization skips along the subject to &quot;a&quot; before applying the pattern to the first set of data. The match attempt then succeeds. In the second call the &lt;code&gt;no_start_optimize&lt;/code&gt; disables the optimization that skips along to the first character. The pattern is now applied starting at &quot;x&quot;, and so the (*COMMIT) causes the match to fail without trying any other starting points.</source>
          <target state="translated">이 패턴의 경우 PCRE는 모든 일치 항목이 &quot;a&quot;로 시작해야한다는 것을 알고 있으므로 첫 번째 데이터 세트에 패턴을 적용하기 전에 최적화가 주제를 &quot;a&quot;로 건너 뜁니다. 그런 다음 경기 시도가 성공합니다. 두 번째 호출에서 &lt;code&gt;no_start_optimize&lt;/code&gt; 는 첫 번째 문자로 건너 뛰는 최적화를 비활성화합니다. 패턴은 이제 &quot;x&quot;에서 시작하여 적용되므로 (* COMMIT)는 다른 시작점을 시도하지 않고 일치를 실패시킵니다.</target>
        </trans-unit>
        <trans-unit id="acfcbf84449a65d4720ddd42fb6431e970ef4aea" translate="yes" xml:space="preserve">
          <source>For this reason, both built-in handlers offer the possibility to specify the maximum number of events to be handled within a certain time frame. With this burst control feature enabled, the handler can avoid choking the log with massive amounts of printouts. The configuration parameters are:</source>
          <target state="translated">이러한 이유로, 두 개의 내장 핸들러는 특정 시간 프레임 내에서 처리 할 최대 이벤트 수를 지정할 수 있습니다. 이 버스트 제어 기능을 사용하면 처리기는 대량의 출력물로 로그를 질식시키지 않아도됩니다. 구성 매개 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d2db23f2a353539845fba9c2a17d2e37195c29cf" translate="yes" xml:space="preserve">
          <source>For this task there are more than one way to go. The &quot;brute force&quot; method is to create the records you need and feed your data in the content and attribute fields of the appropriate element.</source>
          <target state="translated">이 작업에는 여러 가지 방법이 있습니다. &quot;강제력&quot;방법은 필요한 레코드를 작성하고 해당 요소의 컨텐츠 및 속성 필드에 데이터를 공급하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bfb85af40e993dbf85d078383d75ba2ce59dd5da" translate="yes" xml:space="preserve">
          <source>For this to work, the configuration file must at least contain:</source>
          <target state="translated">이것이 작동하려면 구성 파일에 최소한 다음이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="4b0a9d32a308f37da96ee8803de971799715a2ff" translate="yes" xml:space="preserve">
          <source>For those people who want to do general tracing, consult the &lt;code&gt;dbg&lt;/code&gt; module on how to trace whatever you're interested in and let it work its magic. If you just want &lt;code&gt;et:trace_me/5&lt;/code&gt; to work, do the following:</source>
          <target state="translated">일반 추적을 수행하려는 사람들은 &lt;code&gt;dbg&lt;/code&gt; 모듈을 참조하여 관심있는 것을 추적하고 마술처럼 작동하도록하십시오. 그냥 원하는 경우 &lt;code&gt;et:trace_me/5&lt;/code&gt; 하려면 다음을 수행합니다 :</target>
        </trans-unit>
        <trans-unit id="c5638eec9e2bcdb89a7f95debb9559d23cd39e26" translate="yes" xml:space="preserve">
          <source>For trace type &lt;code&gt;file&lt;/code&gt;, the pseudo trace message &lt;code&gt;end_of_trace&lt;/code&gt; will appear at the end of the trace. The return value from the handler function is in this case ignored.</source>
          <target state="translated">추적 유형 &lt;code&gt;file&lt;/code&gt; 의 경우 의사 추적 메시지 &lt;code&gt;end_of_trace&lt;/code&gt; 가 추적 끝에 나타납니다. 이 경우 핸들러 함수의 리턴 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="df2d66796b6d2cdd73f0947660b9a91b008b4526" translate="yes" xml:space="preserve">
          <source>For tuple literals in the match specification, double tuple parentheses can also be used, that is, construct them as a tuple of arity one containing a single tuple, which is the one to be constructed. The &quot;double tuple parenthesis&quot; syntax is useful to construct tuples from already bound variables, like in &lt;code&gt;{{'$1', [a,b,'$2']}}&lt;/code&gt;. Examples:</source>
          <target state="translated">일치 스펙의 튜플 리터럴의 경우 이중 튜플 괄호를 사용할 수도 있습니다. 즉, 단일 튜플을 포함하는 하나의 튜플로 구성 할 수 있습니다. &quot;이중 튜플 괄호&quot;구문은 &lt;code&gt;{{'$1', [a,b,'$2']}}&lt;/code&gt; 과 같이 이미 바인딩 된 변수에서 튜플을 구성하는 데 유용합니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="454d5ff25287ab1005f049a17a00fd893227fb6e" translate="yes" xml:space="preserve">
          <source>For type &lt;code&gt;seqpacket&lt;/code&gt;, sockets (the default) &lt;code&gt;IsServer&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. In contrast to TCP, there is no listening queue length in SCTP. If &lt;code&gt;IsServer&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the socket accepts new associations, that is, it becomes an SCTP server socket.</source>
          <target state="translated">&lt;code&gt;seqpacket&lt;/code&gt; 유형의 경우 소켓 (기본값) &lt;code&gt;IsServer&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 여야합니다 . TCP와 달리 SCTP에는 수신 대기 행렬 길이가 없습니다. 경우 &lt;code&gt;IsServer&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; , 소켓은 새로운 협회가, 즉, 그것이 SCTP 서버 소켓하게 받아들입니다.</target>
        </trans-unit>
        <trans-unit id="b2e6004f54351e38274f9c33d54d73067f0291d8" translate="yes" xml:space="preserve">
          <source>For type &lt;code&gt;stream&lt;/code&gt;, sockets Backlog define the backlog queue length just like in TCP.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; 유형의 경우 소켓 백로 그는 TCP에서와 같이 백 로그 큐 길이를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="778da3033a79d782fe8e9249e11113bf441f60b1" translate="yes" xml:space="preserve">
          <source>For valid options, see the &lt;code&gt;inet(3)&lt;/code&gt;, &lt;code&gt;gen_tcp(3)&lt;/code&gt; and &lt;code&gt;gen_udp(3)&lt;/code&gt; manual pages in Kernel. Note that stream oriented options such as packet are only relevant for SSL/TLS and not DTLS</source>
          <target state="translated">유효한 옵션 은 커널 의 &lt;code&gt;inet(3)&lt;/code&gt; , &lt;code&gt;gen_tcp(3)&lt;/code&gt; 및 &lt;code&gt;gen_udp(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오. 패킷과 같은 스트림 지향 옵션은 DTLS가 아닌 SSL / TLS에만 관련됩니다.</target>
        </trans-unit>
        <trans-unit id="8610001f2046f33e40a07430aab8dc8dd1a49e2d" translate="yes" xml:space="preserve">
          <source>For valid options, see the &lt;code&gt;inet(3)&lt;/code&gt;, &lt;code&gt;gen_tcp(3)&lt;/code&gt; and &lt;code&gt;gen_udp(3)&lt;/code&gt; manual pages in Kernel. Note that stream oriented options such as packet are only relevant for TLS and not DTLS</source>
          <target state="translated">유효한 옵션 은 커널 의 &lt;code&gt;inet(3)&lt;/code&gt; , &lt;code&gt;gen_tcp(3)&lt;/code&gt; 및 &lt;code&gt;gen_udp(3)&lt;/code&gt; 매뉴얼 페이지를 참조하십시오. 패킷과 같은 스트림 지향 옵션은 DTLS가 아닌 TLS에만 관련됩니다.</target>
        </trans-unit>
        <trans-unit id="439152868f6e813df4d4032de89b734385859b69" translate="yes" xml:space="preserve">
          <source>For valid properties, see &lt;code&gt;&lt;a href=&quot;httpc&quot;&gt;httpc(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유효한 속성은 &lt;code&gt;&lt;a href=&quot;httpc&quot;&gt;httpc(3)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70731c98dc1b2ae27b5e8671226f55ff51f34843" translate="yes" xml:space="preserve">
          <source>For various reasons, you can sometimes have a list of UTF-8 bytes. This is not a regular string of Unicode characters, as each list element does not contain one character. Instead you get the &quot;raw&quot; UTF-8 encoding that you have in binaries. This is easily converted to a proper Unicode string by first converting byte per byte into a binary, and then converting the binary of UTF-8 encoded characters back to a Unicode string:</source>
          <target state="translated">여러 가지 이유로 때때로 UTF-8 바이트 목록이있을 수 있습니다. 각 목록 요소에 하나의 문자가 포함되어 있지 않기 때문에 일반 유니 코드 문자 문자열이 아닙니다. 대신 바이너리에있는 &quot;원시&quot;UTF-8 인코딩을 얻습니다. 이것은 바이트 당 바이트를 이진으로 변환 한 다음 UTF-8 인코딩 문자의 이진을 다시 유니 코드 문자열로 변환하여 적절한 유니 코드 문자열로 쉽게 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="234d715a096a1944d8ef43e9f1115b8486c999fe" translate="yes" xml:space="preserve">
          <source>For wrap logs, parameter &lt;code&gt;Size&lt;/code&gt; can be a pair &lt;code&gt;{MaxNoBytes, MaxNoFiles}&lt;/code&gt; or &lt;code&gt;infinity&lt;/code&gt;. In the latter case, if the files of an existing wrap log with the same name can be found, the size is read from the existing wrap log, otherwise an error is returned.</source>
          <target state="translated">랩 로그의 경우 매개 변수 &lt;code&gt;Size&lt;/code&gt; 는 &lt;code&gt;{MaxNoBytes, MaxNoFiles}&lt;/code&gt; 또는 &lt;code&gt;infinity&lt;/code&gt; 쌍일 수 있습니다 . 후자의 경우, 동일한 이름의 기존 랩 로그 파일을 찾을 수 있으면 기존 랩 로그에서 크기를 읽거나 그렇지 않으면 오류가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e9608fcc3166fa9c80f89643b6c29eeca02b40c2" translate="yes" xml:space="preserve">
          <source>For wrap logs, this is the base name of the files. Each file in a wrap log is called &lt;code&gt;&amp;lt;base_name&amp;gt;.N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer. Each wrap log also has two files called &lt;code&gt;&amp;lt;base_name&amp;gt;.idx&lt;/code&gt; and &lt;code&gt;&amp;lt;base_name&amp;gt;.siz&lt;/code&gt;.</source>
          <target state="translated">랩 로그의 경우 파일의 기본 이름입니다. 랩 로그의 각 파일은 &lt;code&gt;&amp;lt;base_name&amp;gt;.N&lt;/code&gt; 이며 여기서 &lt;code&gt;N&lt;/code&gt; 은 정수입니다. 각 랩 로그에는 &lt;code&gt;&amp;lt;base_name&amp;gt;.idx&lt;/code&gt; 및 &lt;code&gt;&amp;lt;base_name&amp;gt;.siz&lt;/code&gt; 라는 두 개의 파일도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17fb1dbfe582d300c8f15233c31311e8015bfd18" translate="yes" xml:space="preserve">
          <source>Forces &lt;code&gt;ct_telnet&lt;/code&gt; to wait until the prompt string is received before returning (even if a pattern has already been matched). This is equal to calling &lt;code&gt;expect(Conn, Patterns++[{prompt,Prompt}], [sequence|Opts])&lt;/code&gt;. Notice that option &lt;code&gt;idle_timeout&lt;/code&gt; and &lt;code&gt;total_timeout&lt;/code&gt; can abort the operation of waiting for prompt.</source>
          <target state="translated">리턴하기 전에 프롬프트 문자열이 수신 될 때까지 (패턴이 이미 일치하더라도) &lt;code&gt;ct_telnet&lt;/code&gt; 을 강제 실행 합니다. 이것은 &lt;code&gt;expect(Conn, Patterns++[{prompt,Prompt}], [sequence|Opts])&lt;/code&gt; 를 호출하는 것과 같습니다 . &lt;code&gt;idle_timeout&lt;/code&gt; 및 &lt;code&gt;total_timeout&lt;/code&gt; 옵션 은 프롬프트 대기 작업을 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e05d9650fe96b8e82a1df796cd9f1a273ddfedb3" translate="yes" xml:space="preserve">
          <source>Forces ETS memory block to be moved on realloc.</source>
          <target state="translated">ETS 메모리 블록이 realloc에서 이동되도록합니다.</target>
        </trans-unit>
        <trans-unit id="c5989f0289b313b87aa33baad990569eddc04e7a" translate="yes" xml:space="preserve">
          <source>Forces a line break at the end of the given document. This is a utility function; see &lt;code&gt;&lt;a href=&quot;#empty-0&quot;&gt;empty/0&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">주어진 문서의 끝에서 줄 바꿈을합니다. 이것은 유틸리티 기능입니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#empty-0&quot;&gt;empty/0&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="07489631804ddf1c6e703df18a8ea8eb7dd49f75" translate="yes" xml:space="preserve">
          <source>Forces an immediate garbage collection of the executing process. The function is not to be used unless it has been noticed (or there are good reasons to suspect) that the spontaneous garbage collection will occur too late or not at all.</source>
          <target state="translated">실행중인 프로세스를 즉시 가비지 수집합니다. 이 기능은 자발적인 가비지 콜렉션이 너무 늦게 발생하거나 전혀 발생하지 않는다는 것을 알지 못하면 (또는 의심 할만한 이유가없는 경우) 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ef43775eadbd78db9d57c7aa7588aaf87e32163" translate="yes" xml:space="preserve">
          <source>Forces killing of all ports opened using this driver, with exit reason &lt;code&gt;driver_unloaded&lt;/code&gt;, if you are the &lt;strong&gt;last&lt;/strong&gt;&lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of the driver.</source>
          <target state="translated">드라이버 의 &lt;strong&gt;마지막 &lt;/strong&gt; &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; 인 경우 종료 이유 &lt;code&gt;driver_unloaded&lt;/code&gt; 와 함께이 드라이버를 사용하여 열린 모든 포트를 강제 종료 합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c82bc9f6b32e4c73986170b63502045291178523" translate="yes" xml:space="preserve">
          <source>Forces option &lt;code&gt;compressed&lt;/code&gt; on all ETS tables. Only intended for test and evaluation.</source>
          <target state="translated">모든 ETS 테이블에서 옵션을 강제로 &lt;code&gt;compressed&lt;/code&gt; 합니다. 테스트 및 평가 전용입니다.</target>
        </trans-unit>
        <trans-unit id="f2259927426e13c75dcdd2c6b84edf53f57b1ecb" translate="yes" xml:space="preserve">
          <source>Forces termination of the session associated with the supplied session Id.</source>
          <target state="translated">제공된 세션 ID와 연관된 세션을 강제 종료합니다.</target>
        </trans-unit>
        <trans-unit id="c5bf5789dde7373724874c65a12c156bc9c3ab1f" translate="yes" xml:space="preserve">
          <source>Forces the disconnection of a node.</source>
          <target state="translated">노드 연결을 강제로 끊습니다.</target>
        </trans-unit>
        <trans-unit id="faa138ca78ba6a2505a4eae3ae3ac47eabfa7ed8" translate="yes" xml:space="preserve">
          <source>Forces the disconnection of a node. This appears to the node &lt;code&gt;Node&lt;/code&gt; as if the local node has crashed. This BIF is mainly used in the Erlang network authentication protocols.</source>
          <target state="translated">노드 연결을 강제로 끊습니다. 마치 로컬 노드가 충돌 한 것처럼 노드 &lt;code&gt;Node&lt;/code&gt; 나타납니다 . 이 BIF는 주로 Erlang 네트워크 인증 프로토콜에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8a562b54231032065ba2fd83d2ae82d45491b7c7" translate="yes" xml:space="preserve">
          <source>Forces the internally formatted disk log to start logging to the next log file. It can be used, for example, with &lt;code&gt;change_size/2&lt;/code&gt; to reduce the amount of disk space allocated by the disk log.</source>
          <target state="translated">내부적으로 포맷 된 디스크 로그가 다음 로그 파일에 로깅을 시작하도록합니다. 예를 들어 &lt;code&gt;change_size/2&lt;/code&gt; 와 함께 사용 하여 디스크 로그에 의해 할당 된 디스크 공간의 양을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fcc08658132f64e737bfe39a8d559ce53626671" translate="yes" xml:space="preserve">
          <source>Forcibly unregisters a live node from the &lt;code&gt;epmd&lt;/code&gt; database.</source>
          <target state="translated">&lt;code&gt;epmd&lt;/code&gt; 데이터베이스 에서 라이브 노드를 강제로 등록 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="55550d89e7ca43740394fa9c2e706f8405aa15d0" translate="yes" xml:space="preserve">
          <source>Form feed</source>
          <target state="translated">용지 공급</target>
        </trans-unit>
        <trans-unit id="4202e6026040a279c41beb16cb2d4677f9c00539" translate="yes" xml:space="preserve">
          <source>Form feed (FF)</source>
          <target state="translated">용지 공급 (FF)</target>
        </trans-unit>
        <trans-unit id="5d5b48ee938123a220cee3edcb714468080ac410" translate="yes" xml:space="preserve">
          <source>Form feed (hex 0C)</source>
          <target state="translated">용지 공급 (16 진 0C)</target>
        </trans-unit>
        <trans-unit id="38e800377664e95efa94b81ef0de4f9fd99206ba" translate="yes" xml:space="preserve">
          <source>Form feed.</source>
          <target state="translated">폼 피드.</target>
        </trans-unit>
        <trans-unit id="22f7f36aed74fc7676ed5e5501a47f8ed45f74c8" translate="yes" xml:space="preserve">
          <source>Formally, a list is either the empty list &lt;code&gt;[]&lt;/code&gt; or consists of a &lt;strong&gt;head&lt;/strong&gt; (first element) and a &lt;strong&gt;tail&lt;/strong&gt; (remainder of the list). The &lt;strong&gt;tail&lt;/strong&gt; is also a list. The latter can be expressed as &lt;code&gt;[H|T]&lt;/code&gt;. The notation &lt;code&gt;[Term1,...,TermN]&lt;/code&gt; above is equivalent with the list &lt;code&gt;[Term1|[...|[TermN|[]]]]&lt;/code&gt;.</source>
          <target state="translated">공식적으로 목록은 빈 목록 &lt;code&gt;[]&lt;/code&gt; 이거나 &lt;strong&gt;머리글&lt;/strong&gt; (첫 번째 요소)과 &lt;strong&gt;꼬리&lt;/strong&gt; (목록의 나머지)로 구성됩니다. &lt;strong&gt;꼬리는&lt;/strong&gt; 또한 목록입니다. 후자는 &lt;code&gt;[H|T]&lt;/code&gt; 로 표현 될 수 있습니다 . 위의 &lt;code&gt;[Term1,...,TermN]&lt;/code&gt; 표기법 은 &lt;code&gt;[Term1|[...|[TermN|[]]]]&lt;/code&gt; 목록과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="9ec67bbeae1e569f244aa6e9df47405dcb8af714" translate="yes" xml:space="preserve">
          <source>Format binary trace logs and merge logs from multiple nodes.</source>
          <target state="translated">이진 추적 로그를 형식화하고 여러 노드의 로그를 병합하십시오.</target>
        </trans-unit>
        <trans-unit id="11d30c70d406dca19904c1095384cda4603ef029" translate="yes" xml:space="preserve">
          <source>Format only the first log:</source>
          <target state="translated">첫 번째 로그 만 형식화하십시오.</target>
        </trans-unit>
        <trans-unit id="fceea87237d34f61d2d5f7eea107f3c324a39f1c" translate="yes" xml:space="preserve">
          <source>Format the whole set of logs:</source>
          <target state="translated">전체 로그 세트를 형식화하십시오.</target>
        </trans-unit>
        <trans-unit id="ae04efcbb41bb316ecf323dedc96a05a656591e1" translate="yes" xml:space="preserve">
          <source>Formats a term, given as a string, to a buffer. Works like a sprintf for Erlang terms. &lt;code&gt;fmt&lt;/code&gt; contains a format string, with arguments like &lt;code&gt;~d&lt;/code&gt;, to insert terms from variables. The following formats are supported (with the C types given):</source>
          <target state="translated">문자열로 지정된 용어를 버퍼로 형식화합니다. Erlang 용어의 스프린트처럼 작동합니다. &lt;code&gt;fmt&lt;/code&gt; 에는 변수에서 용어를 삽입하기위한 &lt;code&gt;~d&lt;/code&gt; 와 같은 인수와 함께 형식 문자열이 포함되어 있습니다 . 다음 형식이 지원됩니다 (주어진 C 유형).</target>
        </trans-unit>
        <trans-unit id="03f29dab50e0bda3d6a11c8c1622b14910c979e6" translate="yes" xml:space="preserve">
          <source>Formats error descriptions to human readable strings.</source>
          <target state="translated">오류 설명을 사람이 읽을 수있는 문자열로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="6ea707cb5f7823923a4236b620f8e84b2bd837d5" translate="yes" xml:space="preserve">
          <source>Formatted I/O</source>
          <target state="translated">포맷 된 I / O</target>
        </trans-unit>
        <trans-unit id="0412830585ef462f09e9b96d72b97a2134aa9e34" translate="yes" xml:space="preserve">
          <source>Formatted exactly as it would be in the NT eventlog viewer. Binary data is not imported into Erlang.</source>
          <target state="translated">NT 이벤트 로그 뷰어와 같은 형식으로되어 있습니다. 이진 데이터는 Erlang으로 가져 오지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26841119ef6dacdd61c1d835f616d8db8290e659" translate="yes" xml:space="preserve">
          <source>Formatter Callback Functions</source>
          <target state="translated">포맷터 콜백 함수</target>
        </trans-unit>
        <trans-unit id="7f50ef30631433a9a987cfecc913b3083f582ea9" translate="yes" xml:space="preserve">
          <source>Formatting can be done automatically when stopping &lt;code&gt;ttb&lt;/code&gt; (see section &lt;code&gt;&lt;a href=&quot;#fetch_format&quot;&gt;Automatically Collect and Format Logs from All Nodes&lt;/a&gt;&lt;/code&gt;), or explicitly by calling function &lt;code&gt;ttb:format/1,2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ttb&lt;/code&gt; 를 중지 할 때 (섹션 &lt;code&gt;&lt;a href=&quot;#fetch_format&quot;&gt;Automatically Collect and Format Logs from All Nodes&lt;/a&gt;&lt;/code&gt; 참조 ) 또는 &lt;code&gt;ttb:format/1,2&lt;/code&gt; 함수를 명시 적으로 호출하여 포맷 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88ed2d91e52cb42e64465488ff1368b51116d2f4" translate="yes" xml:space="preserve">
          <source>Formatting means to read a binary log and present it in a readable format. You can use the default format handler in &lt;code&gt;ttb&lt;/code&gt; to present each trace message as a line of text, or write your own handler to make more complex interpretations of the trace information. You can also use application ET to present the trace log graphically (see section &lt;code&gt;&lt;a href=&quot;#et_viewer&quot;&gt;Presenting Trace Logs with Event Tracer&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">형식화는 이진 로그를 읽고 읽을 수있는 형식으로 표시하는 것을 의미합니다. &lt;code&gt;ttb&lt;/code&gt; 에서 기본 형식 핸들러를 사용하여 각 추적 메시지를 텍스트 행으로 표시하거나 고유 한 핸들러를 작성하여 추적 정보를보다 복잡하게 해석 할 수 있습니다. 응용 프로그램 ET를 사용하여 추적 로그를 그래픽으로 표시 할 수도 있습니다 ( &lt;code&gt;&lt;a href=&quot;#et_viewer&quot;&gt;Presenting Trace Logs with Event Tracer&lt;/a&gt;&lt;/code&gt; 표시 섹션 참조 ).</target>
        </trans-unit>
        <trans-unit id="44bb1c669abc5a91fef17e14af397d67340b7fa0" translate="yes" xml:space="preserve">
          <source>Fortunately most of the new API can easily be implemented using existing primitives, except for:</source>
          <target state="translated">다행히도 대부분의 새로운 API는 다음을 제외하고 기존 프리미티브를 사용하여 쉽게 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46c3f22873ad566ce1d8e72dd2687b70c4871f70" translate="yes" xml:space="preserve">
          <source>Fortunately, most textual data has been stored in lists and range checking has been sparse, so modules like &lt;code&gt;string&lt;/code&gt; work well for Unicode strings with little need for conversion or extension.</source>
          <target state="translated">운 좋게도 대부분의 텍스트 데이터는 목록에 저장되었으며 범위 검사는 드문 경우이므로 &lt;code&gt;string&lt;/code&gt; 과 같은 모듈 은 변환이나 확장이 거의 필요하지 않은 유니 코드 문자열에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="8642908d39e02e8b23307335fe8b4dfcaea7764d" translate="yes" xml:space="preserve">
          <source>Forward character</source>
          <target state="translated">앞으로 문자</target>
        </trans-unit>
        <trans-unit id="3e9ec7d20792f55279f3e159c62fa6e1bce4b477" translate="yes" xml:space="preserve">
          <source>Forward word</source>
          <target state="translated">앞으로 단어</target>
        </trans-unit>
        <trans-unit id="01646d029f193757589bf0940cc3fc2ce52665f8" translate="yes" xml:space="preserve">
          <source>Four Erlang nodes are started up: messenger@super, c1@bilbo, c2@kosken, c3@gollum.</source>
          <target state="translated">4 개의 Erlang 노드가 시작됩니다 : messenger @ super, c1 @ bilbo, c2 @ kosken, c3 @ gollum.</target>
        </trans-unit>
        <trans-unit id="70d07ea7048ebd1bcdc09a12834b5f914b717add" translate="yes" xml:space="preserve">
          <source>Four predefined system events are used when a process receives or sends a message. The process can also define its own system events. It is always up to the process itself to format these events.</source>
          <target state="translated">프로세스가 메시지를 받거나 보낼 때 4 개의 사전 정의 된 시스템 이벤트가 사용됩니다. 프로세스는 자체 시스템 이벤트를 정의 할 수도 있습니다. 이러한 이벤트를 형식화하는 것은 항상 프로세스 자체에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e1a2920ed984bae4697f6608e05fb16c897210f" translate="yes" xml:space="preserve">
          <source>Four types of binary objects are available internally:</source>
          <target state="translated">내부적으로 4 가지 유형의 이진 객체를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59abfa012ca3487335f585929141f8c51a5b0937" translate="yes" xml:space="preserve">
          <source>Four-per-em space</source>
          <target state="translated">네 당 공간</target>
        </trans-unit>
        <trans-unit id="476edba26218dffb640454b86f2f568c99a42f2c" translate="yes" xml:space="preserve">
          <source>Fprof can also skip the file step and trace to a tracer process of its own that does the profiling in runtime.</source>
          <target state="translated">Fprof는 파일 단계를 건너 뛰고 런타임에 프로파일 링을 수행하는 자체 추적 프로그램 프로세스를 추적 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e7aeeb225361601b3822823a30a6d696e64a517" translate="yes" xml:space="preserve">
          <source>Fragmentation Properties</source>
          <target state="translated">조각화 속성</target>
        </trans-unit>
        <trans-unit id="f50d01f32b6d98e503e03c2240fb06afe17bd647" translate="yes" xml:space="preserve">
          <source>Fragmentation problem between mmap'ed areas.</source>
          <target state="translated">mmap'ed 영역 사이의 조각화 문제.</target>
        </trans-unit>
        <trans-unit id="d85e4069e98ee74c546143710354185a7f04c00c" translate="yes" xml:space="preserve">
          <source>Fragmented distribution messages are only used if the receiving node signals that it supports them via the &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#DFLAG_FRAGMENTS&quot;&gt;DFLAG_FRAGMENTS&lt;/a&gt;&lt;/code&gt; distribution flag.</source>
          <target state="translated">조각난 배포 메시지는 수신 노드가 &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#DFLAG_FRAGMENTS&quot;&gt;DFLAG_FRAGMENTS&lt;/a&gt;&lt;/code&gt; 배포 플래그 를 통해 지원한다는 신호를 보내는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="21910465569417c930792d44773042faa4425053" translate="yes" xml:space="preserve">
          <source>Fred receives the message and sends a message to Peter and logs off:</source>
          <target state="translated">Fred는 메시지를 받고 Peter에게 메시지를 보내고 로그 오프합니다.</target>
        </trans-unit>
        <trans-unit id="c871a32dd4438727d0ae0aa1bebc57c8fcd0acf9" translate="yes" xml:space="preserve">
          <source>Fred's client receives the message and prints it:</source>
          <target state="translated">Fred의 클라이언트가 메시지를 받아서 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="231386071f70fc028ff8d982625c940665bdcc43" translate="yes" xml:space="preserve">
          <source>FreeBSD 8.2</source>
          <target state="translated">FreeBSD 8.2</target>
        </trans-unit>
        <trans-unit id="a78b1db612cb29c31f363b7aaeabcea296320d46" translate="yes" xml:space="preserve">
          <source>FreeBSD 9.0 and 10.0.</source>
          <target state="translated">FreeBSD 9.0 및 10.0.</target>
        </trans-unit>
        <trans-unit id="b413800cf536ea4d944699aaf5cdb33c983c61e4" translate="yes" xml:space="preserve">
          <source>FreeBSD: FreeBSD 6.1 and 6.2 in 32-bit and 64-bit modes should work.</source>
          <target state="translated">FreeBSD : 32 비트 및 64 비트 모드의 FreeBSD 6.1 및 6.2가 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7f369c4703ed9a8b09fcd9b0a09c5b730a6ae461" translate="yes" xml:space="preserve">
          <source>Frees a driver binary &lt;code&gt;bin&lt;/code&gt;, allocated previously with &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt; driver_alloc_binary&lt;/a&gt;&lt;/code&gt;. As binaries in Erlang are reference counted, the binary can still be around.</source>
          <target state="translated">이전에 &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt; driver_alloc_binary&lt;/a&gt;&lt;/code&gt; 로 할당 된 드라이버 바이너리 &lt;code&gt;bin&lt;/code&gt; 을 해제 합니다. Erlang의 바이너리는 참조 횟수이므로 바이너리는 여전히 주변에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa9c4f713cd566ead2b669dd7ef17d51fc4fc061" translate="yes" xml:space="preserve">
          <source>Frees a driver binary &lt;code&gt;bin&lt;/code&gt;, allocated previously with &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt;driver_alloc_binary&lt;/a&gt;&lt;/code&gt;. As binaries in Erlang are reference counted, the binary can still be around.</source>
          <target state="translated">해방 드라이버 진 &lt;code&gt;bin&lt;/code&gt; 함께 이전에 할당 된 &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt;driver_alloc_binary&lt;/a&gt;&lt;/code&gt; . Erlang의 이진은 참조 횟수로 계산되므로 이진은 여전히 ​​주변에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b11ae97911f918f9512480c476768dcf762a425f" translate="yes" xml:space="preserve">
          <source>Frees all terms in an environment and clears it for reuse. The environment must have been allocated with &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">환경에서 모든 용어를 해제하고 재사용 할 수 있도록 정리합니다. 환경은 &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt; 로 할당되어 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="5ae9d343f591774c0e5cdb22c7f5dc5b7629dc82" translate="yes" xml:space="preserve">
          <source>Frees an &lt;code&gt;ei_x_buff&lt;/code&gt; buffer. The memory used by the buffer is returned to the OS.</source>
          <target state="translated">해방 &lt;code&gt;ei_x_buff&lt;/code&gt; 버퍼. 버퍼가 사용하는 메모리는 OS로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d2a43e1e88866cd0fb113d41ed1f043cc7c962e4" translate="yes" xml:space="preserve">
          <source>Frees an Erlang term.</source>
          <target state="translated">Erlang 용어를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="0b4dc64d30da551c50aad4eab3508625e110b6ba" translate="yes" xml:space="preserve">
          <source>Frees an array of Erlang terms.</source>
          <target state="translated">Erlang 용어의 배열을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="81cbc489b317adf34485b1638390917aa92e5c42" translate="yes" xml:space="preserve">
          <source>Frees an environment allocated with &lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt;. All terms created in the environment are freed as well.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_env&quot;&gt;enif_alloc_env&lt;/a&gt;&lt;/code&gt; 로 할당 된 환경을 해제 합니다. 환경에서 생성 된 모든 용어도 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="0fc0c49ccb4adf24335758e221d6c82c6974f1b5" translate="yes" xml:space="preserve">
          <source>Frees an io vector returned from &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt; enif_inspect_iovec&lt;/a&gt;&lt;/code&gt;. This is needed only if a &lt;code&gt;NULL&lt;/code&gt; environment is passed to &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt; enif_inspect_iovec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt; enif_inspect_iovec&lt;/a&gt;&lt;/code&gt; 에서 반환 된 io 벡터를 해제 합니다. &lt;code&gt;NULL&lt;/code&gt; 환경이 &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt; enif_inspect_iovec&lt;/a&gt;&lt;/code&gt; 에 전달되는 경우에만 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="9462b1162db2b6f0ae0d8f2ec712a6111abc1f9f" translate="yes" xml:space="preserve">
          <source>Frees an io vector returned from &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt;enif_inspect_iovec&lt;/a&gt;&lt;/code&gt;. This is needed only if a &lt;code&gt;NULL&lt;/code&gt; environment is passed to &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt;enif_inspect_iovec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt;enif_inspect_iovec&lt;/a&gt;&lt;/code&gt; 에서 반환 된 io 벡터를 해제 합니다. &lt;code&gt;NULL&lt;/code&gt; 환경이 &lt;code&gt;&lt;a href=&quot;#enif_inspect_iovec&quot;&gt;enif_inspect_iovec&lt;/a&gt;&lt;/code&gt; 에 전달 된 경우에만 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="183833dab199e50758b72d97aea87af8dc575d81" translate="yes" xml:space="preserve">
          <source>Frees memory allocated by &lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc&quot;&gt;enif_alloc&lt;/a&gt;&lt;/code&gt; 에 의해 할당 된 메모리를 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="b90a2eaf071a91919ce2047270c91bc93404a4d9" translate="yes" xml:space="preserve">
          <source>Frees the memory pointed to by &lt;code&gt;ptr&lt;/code&gt;. The memory is to have been allocated with &lt;code&gt;driver_alloc&lt;/code&gt;. All allocated memory is to be deallocated, only once. There is no garbage collection in drivers.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 이 가리키는 메모리를 해제합니다 . 메모리는 &lt;code&gt;driver_alloc&lt;/code&gt; 으로 할당되었습니다 . 할당 된 모든 메모리는 한 번만 할당 해제됩니다. 드라이버에 가비지 콜렉션이 없습니다.</target>
        </trans-unit>
        <trans-unit id="721dc83e05f56a3e65de142a1836404e47f0e4af" translate="yes" xml:space="preserve">
          <source>Frequent Loading of MIBs</source>
          <target state="translated">MIB의 빈번한로드</target>
        </trans-unit>
        <trans-unit id="cdbdd5a13354246abed62ad0de119285b6ef8494" translate="yes" xml:space="preserve">
          <source>From Erlang 5.1/OTP R8B, a value to all fields in a record can be set with the special field &lt;code&gt;_&lt;/code&gt;. &lt;code&gt;_&lt;/code&gt; means &quot;all fields not explicitly specified&quot;.</source>
          <target state="translated">Erlang 5.1 / OTP R8B에서 레코드의 모든 필드에 대한 값을 특수 필드 &lt;code&gt;_&lt;/code&gt; 로 설정할 수 있습니다 . &lt;code&gt;_&lt;/code&gt; 는 &quot;명시 적으로 지정되지 않은 모든 필드&quot;를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="5bf9e0c347a66f4008a8123cba4cd72f36435dae" translate="yes" xml:space="preserve">
          <source>From Erlang's point of view, the C node is treated like a normal Erlang node. Thus, calling the functions &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; only involves sending a message to the C node asking for the function to be called, and receiving the result. Sending a message requires a recipient, that is, a process that can be defined using either a pid or a tuple, consisting of a registered name and a node name. In this case, a tuple is the only alternative as no pid is known:</source>
          <target state="translated">Erlang의 관점에서 C 노드는 일반 Erlang 노드처럼 취급됩니다. 따라서 &lt;code&gt;foo&lt;/code&gt; 및 &lt;code&gt;bar&lt;/code&gt; 함수를 호출하면 함수 호출을 요청 하는 메시지를 C 노드에 보내고 결과를 수신하는 것만 포함됩니다. 메시지를 보내려면 수신자, 즉 등록 된 이름과 노드 이름으로 구성된 pid 또는 튜플을 사용하여 정의 할 수있는 프로세스가 필요합니다. 이 경우 pid가 알려지지 않았으므로 튜플이 유일한 대안입니다.</target>
        </trans-unit>
        <trans-unit id="9a062b6a69dba0792c50eecd50eb57b05c124959" translate="yes" xml:space="preserve">
          <source>From Erlang/OTP 20, atoms and function names are also allowed to contain Unicode characters outside the ISO-Latin-1 range. Module names, application names, and node names are still restricted to the ISO-Latin-1 range.</source>
          <target state="translated">Erlang / OTP 20부터 원자 및 함수 이름에 ISO-Latin-1 범위 밖의 유니 코드 문자를 포함 할 수 있습니다. 모듈 이름, 응용 프로그램 이름 및 노드 이름은 여전히 ​​ISO-Latin-1 범위로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="8e70df4c9b90f0920489959ddf830cb66d704b8a" translate="yes" xml:space="preserve">
          <source>From Erlang/OTP R13A, &lt;code&gt;Expr2&lt;/code&gt; is no longer required to evaluate to a Boolean value. As a consequence, &lt;code&gt;andalso&lt;/code&gt; and &lt;code&gt;orelse&lt;/code&gt; are now tail-recursive. For instance, the following function is tail-recursive in Erlang/OTP R13A and later:</source>
          <target state="translated">Erlang / OTP R13A에서 &lt;code&gt;Expr2&lt;/code&gt; 는 더 이상 부울 값으로 평가할 필요가 없습니다. 결과적으로 &lt;code&gt;andalso&lt;/code&gt; 과 &lt;code&gt;orelse&lt;/code&gt; 는 이제 꼬리 재귀입니다. 예를 들어, Erlang / OTP R13A 이상에서 다음 기능은 꼬리 재귀입니다.</target>
        </trans-unit>
        <trans-unit id="2fbca6926b89cb364d57ee5f0655f87ef264741b" translate="yes" xml:space="preserve">
          <source>From OTP R15, an emulator upgrade is performed by restarting the emulator with new versions of the core applications (Kernel, STDLIB, and SASL) before loading code and running upgrade instruction for other applications. For this to work, the release to upgrade from must include OTP R15 or later.</source>
          <target state="translated">OTP R15부터 코드를로드하고 다른 응용 프로그램에 대한 업그레이드 명령을 실행하기 전에 새로운 버전의 핵심 응용 프로그램 (Kernel, STDLIB 및 SASL)으로 에뮬레이터를 다시 시작하여 에뮬레이터 업그레이드를 수행합니다. 이것이 작동하려면 업그레이드 할 릴리스에 OTP R15 이상이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6038a26dc2018c9a1f7a524e8e3edad7002c75d5" translate="yes" xml:space="preserve">
          <source>From OTP R16 the &lt;strong&gt;numeric version&lt;/strong&gt; represents the version of the OpenSSL &lt;strong&gt;header files&lt;/strong&gt; (&lt;code&gt;openssl/opensslv.h&lt;/code&gt;) used when crypto was compiled. The text variant represents the OpenSSL library used at runtime. In earlier OTP versions both numeric and text was taken from the library.</source>
          <target state="translated">OTP R16에서 &lt;strong&gt;숫자 버전&lt;/strong&gt; 은 암호화가 컴파일 될 때 사용 된 OpenSSL &lt;strong&gt;헤더 파일&lt;/strong&gt; ( &lt;code&gt;openssl/opensslv.h&lt;/code&gt; ) 의 버전을 나타냅니다 . 텍스트 변형은 런타임에 사용되는 OpenSSL 라이브러리를 나타냅니다. 이전 OTP 버전에서는 숫자와 텍스트가 모두 라이브러리에서 가져 왔습니다.</target>
        </trans-unit>
        <trans-unit id="6e86f363dedb9cf93c309d202bcb585daf866c13" translate="yes" xml:space="preserve">
          <source>From OTP R16 the &lt;strong&gt;numeric version&lt;/strong&gt; represents the version of the OpenSSL &lt;strong&gt;header files&lt;/strong&gt; (&lt;code&gt;openssl/opensslv.h&lt;/code&gt;) used when crypto was compiled. The text variant represents the libcrypto library used at runtime. In earlier OTP versions both numeric and text was taken from the library.</source>
          <target state="translated">OTP R16에서 &lt;strong&gt;숫자 버전&lt;/strong&gt; 은 암호화가 컴파일 될 때 사용 된 OpenSSL &lt;strong&gt;헤더 파일&lt;/strong&gt; ( &lt;code&gt;openssl/opensslv.h&lt;/code&gt; ) 의 버전을 나타냅니다 . 텍스트 변형은 런타임에 사용되는 libcrypto 라이브러리를 나타냅니다. 이전 OTP 버전에서는 숫자와 텍스트가 모두 라이브러리에서 가져 왔습니다.</target>
        </trans-unit>
        <trans-unit id="4943b54e1e69d94bfb24a4f1aebd755e64a804e9" translate="yes" xml:space="preserve">
          <source>From RFC 5722, 2.1 Subscribing to Receive Event Notifications:</source>
          <target state="translated">RFC 5722, 2.1 이벤트 알림 수신 구독 :</target>
        </trans-unit>
        <trans-unit id="129a9a6f844c93076397b5152abdc0f4f129059c" translate="yes" xml:space="preserve">
          <source>From a normal shell session, call function &lt;code&gt;&lt;a href=&quot;#start_restricted-1&quot;&gt; start_restricted/1&lt;/a&gt;&lt;/code&gt;. This exits the current evaluator and starts a new one in restricted mode.</source>
          <target state="translated">일반 셸 세션에서 &lt;code&gt;&lt;a href=&quot;#start_restricted-1&quot;&gt; start_restricted/1&lt;/a&gt;&lt;/code&gt; 함수를 호출합니다 . 현재 평가자를 종료하고 제한 모드에서 새 평가자를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="f5355e1fbcc2277e9d9898f3f71616845e052b1c" translate="yes" xml:space="preserve">
          <source>From a normal shell session, call function &lt;code&gt;&lt;a href=&quot;#start_restricted-1&quot;&gt;start_restricted/1&lt;/a&gt;&lt;/code&gt;. This exits the current evaluator and starts a new one in restricted mode.</source>
          <target state="translated">일반 쉘 세션에서 &lt;code&gt;&lt;a href=&quot;#start_restricted-1&quot;&gt;start_restricted/1&lt;/a&gt;&lt;/code&gt; 함수를 호출하십시오 . 그러면 현재 평가 기가 종료되고 제한 모드에서 새 평가 기가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="c43a832e8f19ed35666bd1d6fa07c023a93ab99a" translate="yes" xml:space="preserve">
          <source>From a security perspective this option makes the server very vulnerable.</source>
          <target state="translated">보안 측면에서이 옵션은 서버를 매우 취약하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="01dbce866b260b16436733033704645b12eaba0a" translate="yes" xml:space="preserve">
          <source>From a set of candidate nodes determines which of them is running the application &lt;code&gt;App&lt;/code&gt;. If none of the candidate nodes is running &lt;code&gt;App&lt;/code&gt;, the function makes the test case calling this function to fail. This function is the same as calling &lt;code&gt;app_node(App, Candidates, true)&lt;/code&gt;.</source>
          <target state="translated">후보 노드 세트에서 애플리케이션 &lt;code&gt;App&lt;/code&gt; 을 실행중인 노드를 판별하십시오 . &lt;code&gt;App&lt;/code&gt; 을 실행중인 후보 노드가 없으면 함수는이 함수를 호출하는 테스트 케이스를 실패하게합니다. 이 함수는 &lt;code&gt;app_node(App, Candidates, true)&lt;/code&gt; 호출과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="d7d92444c0f7f28dc5fef0f132ab38eda622eaff" translate="yes" xml:space="preserve">
          <source>From actor, such as sender of a message.</source>
          <target state="translated">메시지 발신자와 같은 행위자로부터.</target>
        </trans-unit>
        <trans-unit id="18821dcf229cd6f32fd467b59121c70ca7d35c00" translate="yes" xml:space="preserve">
          <source>From an Attach Process window, you can interact with a debugged process. One window is opened for each process that has been attached to. Notice that when attaching to a process, its execution is automatically stopped.</source>
          <target state="translated">프로세스 첨부 창에서 디버깅 된 프로세스와 상호 작용할 수 있습니다. 첨부 된 각 프로세스마다 하나의 창이 열립니다. 프로세스에 연결하면 실행이 자동으로 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="7f0b17199160488872f436fe5e499ca3811182e8" translate="yes" xml:space="preserve">
          <source>From an Erlang perspective, it is preferable to be able to call &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; without having to bother about that they are C functions:</source>
          <target state="translated">Erlang의 관점에서, C 함수라는 것을 신경 쓰지 않고 &lt;code&gt;foo&lt;/code&gt; 와 &lt;code&gt;bar&lt;/code&gt; 를 호출 할 수있는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4e2385dbad2d7198673d6a88bf76009a866e55b6" translate="yes" xml:space="preserve">
          <source>From tabs displaying lists of items, for example, the &lt;strong&gt;Processes&lt;/strong&gt; tab or the &lt;strong&gt;Ports&lt;/strong&gt; tab, a new window with more information can be opened by double-clicking a row or by right- clicking the row and selecting an item from the drop-down menu. The new window is called a detail window. Detail windows can be opened for processes, ports, nodes, and modules.</source>
          <target state="translated">&lt;strong&gt;프로세스&lt;/strong&gt; 탭 또는 &lt;strong&gt;포트&lt;/strong&gt; 탭과 같은 항목 목록을 표시하는 탭에서 행을 두 번 클릭하거나 행을 마우스 오른쪽 단추로 클릭하고 드롭 다운 메뉴에서 항목을 선택하여 자세한 정보가있는 새 창을 열 수 있습니다 . 새 창을 세부 창이라고합니다. 프로세스, 포트, 노드 및 모듈에 대한 세부 사항 창을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88695221d9d45a1075dad00213edf3f87c9a63f7" translate="yes" xml:space="preserve">
          <source>From the &lt;code&gt;control&lt;/code&gt; callback, a binary can be returned if &lt;code&gt;set_port_control_flags()&lt;/code&gt; has been called with the flag value &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt;.</source>
          <target state="translated">로부터 &lt;code&gt;control&lt;/code&gt; 경우 콜백, 바이너리가 반환 될 수 &lt;code&gt;set_port_control_flags()&lt;/code&gt; 플래그 값으로 호출 된 &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7539bbfabae228fb6338a3f0c6b2635a1af58307" translate="yes" xml:space="preserve">
          <source>From the Erlang shell:</source>
          <target state="translated">Erlang 쉘에서 :</target>
        </trans-unit>
        <trans-unit id="98ec971914f4bcb68239243db5e4052187d7c575" translate="yes" xml:space="preserve">
          <source>From the GUI you can run tests and view the result and the logs.</source>
          <target state="translated">GUI에서 테스트를 실행하고 결과 및 로그를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c113fd88f06e2b1fd02eea5fdf5c2705d151308" translate="yes" xml:space="preserve">
          <source>From the TLS RFC: &quot;A TLS session is an association between a client and a server. Sessions are created by the handshake protocol. Sessions define a set of cryptographic security parameters, which can be shared among multiple connections. Sessions are used to avoid the expensive negotiation of new security parameters for each connection.&quot;</source>
          <target state="translated">TLS RFC에서 : &quot;TLS 세션은 클라이언트와 서버 간의 연결입니다. 세션은 핸드 셰이크 프로토콜에 의해 생성됩니다. 세션은 여러 연결간에 공유 할 수있는 암호화 보안 매개 변수 세트를 정의합니다. 세션은 각 연결에 대한 새로운 보안 매개 변수에 대한 고가의 협상. &quot;</target>
        </trans-unit>
        <trans-unit id="0954694c6cc16fddb2598af944517c2eacf11e60" translate="yes" xml:space="preserve">
          <source>From the files &lt;code&gt;mysystem.rel&lt;/code&gt; and &lt;code&gt;plain.rel&lt;/code&gt; creates the files &lt;code&gt;mysystem.script&lt;/code&gt;, &lt;code&gt;mysystem.boot&lt;/code&gt;, &lt;code&gt;plain.script&lt;/code&gt;, and &lt;code&gt;plain.boot&lt;/code&gt; through a call to &lt;code&gt;systools:make_script/2&lt;/code&gt;.</source>
          <target state="translated">파일은에서 &lt;code&gt;mysystem.rel&lt;/code&gt; 및 &lt;code&gt;plain.rel&lt;/code&gt; 는 파일을 생성 &lt;code&gt;mysystem.script&lt;/code&gt; , &lt;code&gt;mysystem.boot&lt;/code&gt; , &lt;code&gt;plain.script&lt;/code&gt; 및 &lt;code&gt;plain.boot&lt;/code&gt; 을 에 대한 호출을 통해 &lt;code&gt;systools:make_script/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ef571ccc537e0ebcf5abc08d5fcbc4354cd2e13" translate="yes" xml:space="preserve">
          <source>From this mode, all test case support functions can be executed directly from the Erlang shell. The interactive mode can also be started from the OS command line with &lt;code&gt;ct_run -shell [-config File...]&lt;/code&gt;.</source>
          <target state="translated">이 모드에서 모든 테스트 케이스 지원 기능은 Erlang 쉘에서 직접 실행될 수 있습니다. 대화식 모드는 &lt;code&gt;ct_run -shell [-config File...]&lt;/code&gt; 을 사용하여 OS 명령 행에서 시작할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d85ede8c374fad93c75b87cf1d0ab93277813131" translate="yes" xml:space="preserve">
          <source>From this, the following annotation is derived:</source>
          <target state="translated">이로부터 다음과 같은 주석이 도출됩니다.</target>
        </trans-unit>
        <trans-unit id="9084657a780dcb6630711e210f20a9abf03abf2b" translate="yes" xml:space="preserve">
          <source>Ftp client service start/stop</source>
          <target state="translated">FTP 클라이언트 서비스 시작 / 중지</target>
        </trans-unit>
        <trans-unit id="a9e57658a5434ee2c00cbb68e3cf586c6c01ffb4" translate="yes" xml:space="preserve">
          <source>Full Headers: Small (minimum requirement), Medium (with fields for basic information about the module), and Large Header (medium header with some extra layout structure).</source>
          <target state="translated">전체 헤더 : 소형 (최소 요구 사항), 중간 (모듈에 대한 기본 정보 필드가 있음) 및 대형 헤더 (일부 추가 레이아웃 구조의 중간 헤더).</target>
        </trans-unit>
        <trans-unit id="1e3823712b80ea0cb75ff26b117d7d6397ec16c0" translate="yes" xml:space="preserve">
          <source>Full file table (for the entire OS).</source>
          <target state="translated">전체 파일 테이블 (전체 OS 용).</target>
        </trans-unit>
        <trans-unit id="27b9338d219fffeb7572389130870db385983296" translate="yes" xml:space="preserve">
          <source>Full version 3. Including segmentation. This is the default version 3 variant (i.e. if a version 3 messages is to be encoded/decoded and no version3 encoding config is found, then v3 is assumed).</source>
          <target state="translated">정식 버전 3. 세분화 포함. 이것은 기본 버전 3 변형입니다 (즉, 버전 3 메시지를 인코딩 / 디코딩하고 version3 인코딩 구성을 찾을 수없는 경우 v3으로 가정).</target>
        </trans-unit>
        <trans-unit id="5f941ab65fbabe87f41cd73c9136f5a4c97087e8" translate="yes" xml:space="preserve">
          <source>Fun</source>
          <target state="translated">Fun</target>
        </trans-unit>
        <trans-unit id="5e237c78b48535b39b6edf62ac5d0164ab73ee2c" translate="yes" xml:space="preserve">
          <source>Fun :: file_op()) -&amp;gt;</source>
          <target state="translated">재미 :: file_op ())-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="efc122d63bb511dbe35d73a700e42f1245007e94" translate="yes" xml:space="preserve">
          <source>Fun, Acc) -&amp;gt;</source>
          <target state="translated">Fun, Acc) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8fd99e39840d406c91493e0d976f070cc2ea920d" translate="yes" xml:space="preserve">
          <source>FunSpec ::= Module &lt;code&gt;:&lt;/code&gt; Function &lt;code&gt;/&lt;/code&gt; Arity</source>
          <target state="translated">FunSpec :: = 모듈 &lt;code&gt;:&lt;/code&gt; 기능 &lt;code&gt;/&lt;/code&gt; Arity</target>
        </trans-unit>
        <trans-unit id="0de23577bf9223f4f9d36ec83aac022759ad7dcf" translate="yes" xml:space="preserve">
          <source>Function ::= Atom</source>
          <target state="translated">기능 :: = 원자</target>
        </trans-unit>
        <trans-unit id="8a891615f603dde0aef5b9bdd72f46ffd7baad89" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;&lt;a href=&quot;#parse_address-1&quot;&gt;parse_address/1&lt;/a&gt;&lt;/code&gt; can be useful:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#parse_address-1&quot;&gt;parse_address/1&lt;/a&gt;&lt;/code&gt; 함수 가 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01645428a290cbcd64336c3ca8a77b7808481ca2" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;send/2,3&lt;/a&gt;&lt;/code&gt; is not secure.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;send/2,3&lt;/a&gt;&lt;/code&gt; 기능 이 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d64b6648719ed65c195a07d3cb06bd24c4de4315" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;&lt;a href=&quot;#terminate_child-2&quot;&gt; terminate_child/2&lt;/a&gt;&lt;/code&gt; can be used for children under &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisors by specifying the child's &lt;code&gt;pid()&lt;/code&gt; as the second argument. If instead the child specification identifier is used, &lt;code&gt;terminate_child/2&lt;/code&gt; return &lt;code&gt;{error,simple_one_for_one}&lt;/code&gt;.</source>
          <target state="translated">두 번째 인수로 자식의 &lt;code&gt;pid()&lt;/code&gt; 를 지정하여 &lt;code&gt;simple_one_for_one&lt;/code&gt; 감독자 아래 의 자식을 위해 &lt;code&gt;&lt;a href=&quot;#terminate_child-2&quot;&gt; terminate_child/2&lt;/a&gt;&lt;/code&gt; 함수를 사용할 수 있습니다 . 대신 하위 사양 식별자를 사용하는 경우 &lt;code&gt;terminate_child/2&lt;/code&gt; 는 &lt;code&gt;{error,simple_one_for_one}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0338fc0994b143d0358d58d40a62ab77365e6bfd" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;&lt;a href=&quot;#terminate_child-2&quot;&gt;terminate_child/2&lt;/a&gt;&lt;/code&gt; can be used for children under &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisors by specifying the child's &lt;code&gt;pid()&lt;/code&gt; as the second argument. If instead the child specification identifier is used, &lt;code&gt;terminate_child/2&lt;/code&gt; return &lt;code&gt;{error,simple_one_for_one}&lt;/code&gt;.</source>
          <target state="translated">자식 &lt;code&gt;pid()&lt;/code&gt; 를 두 번째 인수로 지정하여 &lt;code&gt;simple_one_for_one&lt;/code&gt; 감독자 아래의 자식에 대해서는 &lt;code&gt;&lt;a href=&quot;#terminate_child-2&quot;&gt;terminate_child/2&lt;/a&gt;&lt;/code&gt; 함수를 사용할 수 있습니다 . 대신 자식 사양 식별자가 사용되면 &lt;code&gt;terminate_child/2&lt;/code&gt; 는 &lt;code&gt;{error,simple_one_for_one}&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a007558a83328311a21f6b34b7f1ca919c07b71f" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; can, for example, be used in a test suite module to set a default &lt;code&gt;timetrap&lt;/code&gt; value and to &lt;code&gt;require&lt;/code&gt; external configuration data. If a test case, or a group information function also specifies any of the information tags, it overrides the default values set by &lt;code&gt;suite/0&lt;/code&gt;. For details, see &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 기능 &lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; 은 테스트 스위트 모듈에서 사용되어 기본 &lt;code&gt;timetrap&lt;/code&gt; 값 을 설정하고 외부 구성 데이터 를 &lt;code&gt;require&lt;/code&gt; 수 있습니다. 테스트 케이스 또는 그룹 정보 함수가 정보 태그 중 하나를 지정하는 경우 &lt;code&gt;suite/0&lt;/code&gt; 에 의해 설정된 기본값을 대체합니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fef12e46d72688a670d4c58912ca9449d23ab9b1" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; can, for example, be used in a test suite module to set a default &lt;code&gt;timetrap&lt;/code&gt; value and to &lt;code&gt;require&lt;/code&gt; external configuration data. If a test case, or a group information function also specifies any of the information tags, it overrides the default values set by &lt;code&gt;suite/0&lt;/code&gt;. For details, see &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, Function &lt;code&gt;&lt;a href=&quot;ct_suite#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; 은 기본 &lt;code&gt;timetrap&lt;/code&gt; 값 을 설정하고 외부 구성 데이터 를 &lt;code&gt;require&lt;/code&gt; 하기 위해 테스트 스위트 모듈에서 사용될 수 있습니다 . 테스트 케이스 또는 그룹 정보 기능이 정보 태그를 지정하는 경우 &lt;code&gt;suite/0&lt;/code&gt; 에 의해 설정된 기본값을 대체합니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#info_function&quot;&gt;Test Case Information Function&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="054db5c2424427b8b4170caebf21bfebdadbdb70" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;Module:callback_mode/0&lt;/code&gt; selects the &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;CallbackMode&lt;/a&gt;&lt;/code&gt; for the &lt;strong&gt;callback module&lt;/strong&gt;, in this case &lt;code&gt;state_functions&lt;/code&gt;. That is, each state has got its own handler function:</source>
          <target state="translated">Function &lt;code&gt;Module:callback_mode/0&lt;/code&gt; 은 &lt;strong&gt;콜백 모듈에&lt;/strong&gt; 대한 &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;CallbackMode&lt;/a&gt;&lt;/code&gt; 를 선택합니다 ( 이 경우 &lt;code&gt;state_functions&lt;/code&gt; ) . 즉, 각 상태에는 자체 핸들러 함수가 있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dce26c23629bc083f209e69729eb13221165e9e1" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;Module:callback_mode/0&lt;/code&gt; selects the &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;CallbackMode&lt;/a&gt;&lt;/code&gt; for the callback module, in this case &lt;code&gt;state_functions&lt;/code&gt;. That is, each state has got its own handler function:</source>
          <target state="translated">기능 &lt;code&gt;Module:callback_mode/0&lt;/code&gt; 선택하는 &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;CallbackMode&lt;/a&gt;&lt;/code&gt; 콜백 모듈,이 경우에 &lt;code&gt;state_functions&lt;/code&gt; . 즉, 각 상태에는 자체 처리기 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dab0298c1fa2b8ffd8494a08a5d6ee970c3f344" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;Resolve&lt;/code&gt; has the same behavior as in &lt;code&gt;&lt;a href=&quot;#register_name-2&quot;&gt;register_name/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Resolve&lt;/code&gt; 기능 은 &lt;code&gt;&lt;a href=&quot;#register_name-2&quot;&gt;register_name/2,3&lt;/a&gt;&lt;/code&gt; 과 동일한 동작을 합니다.</target>
        </trans-unit>
        <trans-unit id="a6eb2e463fb3a93e8b68600ab9bdb3f58ee57038" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;StateFun&lt;/code&gt; provides a new state for the process. Argument &lt;code&gt;State&lt;/code&gt; and the &lt;code&gt;NewState&lt;/code&gt; return value of &lt;code&gt;StateFun&lt;/code&gt; vary for different types of processes as follows:</source>
          <target state="translated">함수 &lt;code&gt;StateFun&lt;/code&gt; 은 프로세스에 새로운 상태를 제공합니다. &lt;code&gt;StateFun&lt;/code&gt; 의 인수 &lt;code&gt;State&lt;/code&gt; 및 &lt;code&gt;NewState&lt;/code&gt; 반환 값은 다음과 같이 프로세스 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d2dd189083208643c31c579ccb4b516ebe6e004e" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;end_per_testcase/2&lt;/code&gt; is even called if a test case terminates because of a call to &lt;code&gt;&lt;a href=&quot;ct#abort_current_testcase-1&quot;&gt;ct:abort_current_testcase/1&lt;/a&gt;&lt;/code&gt;, or after a timetrap time-out. However, &lt;code&gt;end_per_testcase&lt;/code&gt; then executes on a different process than the test case function. In this situation, &lt;code&gt;end_per_testcase&lt;/code&gt; cannot change the reason for test case termination by returning &lt;code&gt;{fail,Reason}&lt;/code&gt; or save data with &lt;code&gt;{save_config,Data}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;end_per_testcase/2&lt;/code&gt; 함수 는 &lt;code&gt;&lt;a href=&quot;ct#abort_current_testcase-1&quot;&gt;ct:abort_current_testcase/1&lt;/a&gt;&lt;/code&gt; 에 대한 호출로 인해 또는 타임 트랩 시간 종료 후 테스트 케이스가 종료 된 경우에도 호출됩니다 . 그러나 &lt;code&gt;end_per_testcase&lt;/code&gt; 는 테스트 케이스 함수와 다른 프로세스에서 실행됩니다. 이 상황에서 &lt;code&gt;end_per_testcase&lt;/code&gt; 는 &lt;code&gt;{fail,Reason}&lt;/code&gt; 을 리턴 하거나 &lt;code&gt;{save_config,Data}&lt;/code&gt; 로 데이터를 저장 하여 테스트 케이스 종료 이유를 변경할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="66fa0ff2fa5c392a119333455ce4fde95868a0d2" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;etop:config/2&lt;/code&gt; is called to change the number of showed lines to 5:</source>
          <target state="translated">&lt;code&gt;etop:config/2&lt;/code&gt; 행 수를 5로 변경하기 위해 etop : config / 2 함수 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="96d74b9f50eda503e654615637404d94ff14834b" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;ets:test_ms/2&amp;gt;&lt;/code&gt; can be useful for testing complicated ETS matches.</source>
          <target state="translated">함수 &lt;code&gt;ets:test_ms/2&amp;gt;&lt;/code&gt; 는 복잡한 ETS 일치를 테스트하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6896bef646f61519a407bad611289975237ebd17" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;fetch/2&lt;/code&gt; is to be used if the key is known to be in the dictionary, otherwise function &lt;code&gt;find/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fetch/2&lt;/code&gt; 함수 는 키가 사전에있는 것으로 알려진 경우 사용되며 그렇지 않으면 &lt;code&gt;find/2&lt;/code&gt; 함수가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a868331f4dff2e443947e63a74b30a9d1a2bddb1" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;fetch&lt;/code&gt; is to be used if the key is known to be in the dictionary, otherwise function &lt;code&gt;find&lt;/code&gt;.</source>
          <target state="translated">키가 사전에있는 것으로 알려진 경우 함수 &lt;code&gt;fetch&lt;/code&gt; 가 사용되고 그렇지 않으면 함수 &lt;code&gt;find&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="606f437fcbd896955cc7ddfd14d16259728a0dcb" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;gen_statem:start_link&lt;/code&gt; is synchronous. It does not return until the &lt;code&gt;gen_statem&lt;/code&gt; is initialized and is ready to receive events.</source>
          <target state="translated">&lt;code&gt;gen_statem:start_link&lt;/code&gt; 함수 는 동기식입니다. &lt;code&gt;gen_statem&lt;/code&gt; 이 초기화되고 이벤트를 수신 할 준비가 될 때까지 리턴되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="05bd7b9952ee3b690f5d31b6df403e0eaaef70c7" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;gen_statem:start_link&lt;/code&gt; must be used if the &lt;code&gt;gen_statem&lt;/code&gt; is part of a supervision tree, that is, started by a supervisor. Another function, &lt;code&gt;gen_statem:start&lt;/code&gt; can be used to start a standalone &lt;code&gt;gen_statem&lt;/code&gt;, that is, a &lt;code&gt;gen_statem&lt;/code&gt; that is not part of a supervision tree.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; 이 감독 트리의 일부인 경우 (즉, 감독자 가 시작한 경우) &lt;code&gt;gen_statem:start_link&lt;/code&gt; 함수를 사용해야 합니다 . 다른 기능인 &lt;code&gt;gen_statem:start&lt;/code&gt; 를 사용하여 독립형 &lt;code&gt;gen_statem&lt;/code&gt; , 즉 감독 트리의 일부가 아닌 &lt;code&gt;gen_statem&lt;/code&gt; 을 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4dfde5a6eefc23664041d29bc2692d0dff420113" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;init_ack/1&lt;/code&gt; uses the parent value previously stored by the start function used.</source>
          <target state="translated">기능 &lt;code&gt;init_ack/1&lt;/code&gt; 이전에 사용 된 스타트 기능에 의해 저장된 부모 값을 사용한다.</target>
        </trans-unit>
        <trans-unit id="02f5d11f2493bedb5e9334005015885767ba9d82" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;io_lib:format/2&lt;/code&gt; behaves similarly. It is defined to return a deep list of characters and the output can easily be converted to binary data for outputting on any device by a simple &lt;code&gt;erlang:list_to_binary/1&lt;/code&gt;. When the translation modifier is used, the list can, however, contain characters that cannot be stored in one byte. The call to &lt;code&gt;erlang:list_to_binary/1&lt;/code&gt; then fails. However, if the I/O server you want to communicate with is Unicode-aware, the returned list can still be used directly:</source>
          <target state="translated">&lt;code&gt;io_lib:format/2&lt;/code&gt; 함수는 비슷하게 동작합니다. 깊은 문자 목록을 반환하도록 정의되어 있으며 간단한 &lt;code&gt;erlang:list_to_binary/1&lt;/code&gt; 을 사용 하여 모든 장치에서 출력하기 위해 출력을 이진 데이터로 쉽게 변환 할 수 있습니다 . 그러나 변환 수정자를 사용하면 목록에 1 바이트로 저장할 수없는 문자가 포함될 수 있습니다. 그런 다음 &lt;code&gt;erlang:list_to_binary/1&lt;/code&gt; 에 대한 호출이 실패합니다. 그러나 통신하려는 I / O 서버가 유니 코드를 인식하는 경우 리턴 된 목록을 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9176c91e340ff5559d2242d48821467cbef3e269" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;start/1&lt;/code&gt; starts &lt;code&gt;rb_server&lt;/code&gt; with the specified options, whereas function &lt;code&gt;start/0&lt;/code&gt; starts with default options. &lt;code&gt;rb_server&lt;/code&gt; must be started before reports can be browsed. When &lt;code&gt;rb_server&lt;/code&gt; is started, the files in the specified directory are scanned. The other functions assume that the server has started.</source>
          <target state="translated">function &lt;code&gt;start/1&lt;/code&gt; 은 지정된 옵션으로 &lt;code&gt;rb_server&lt;/code&gt; 를 &lt;code&gt;start/0&lt;/code&gt; 하는 반면 function start / 0 은 기본 옵션으로 시작합니다. 보고서를 찾아보기 전에 &lt;code&gt;rb_server&lt;/code&gt; 를 시작해야합니다. &lt;code&gt;rb_server&lt;/code&gt; 가 시작 되면 지정된 디렉토리의 파일이 스캔됩니다. 다른 기능은 서버가 시작되었다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="94cd3c7d5c960a10a42b0c6c6403863b5286d3d4" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;system_get_state/1&lt;/code&gt; is primarily useful for user-defined behaviors and modules that implement OTP &lt;code&gt;&lt;a href=&quot;#special_process&quot;&gt;special processes&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;gen_server&lt;/code&gt;, &lt;code&gt;gen_statem&lt;/code&gt;, and &lt;code&gt;gen_event&lt;/code&gt; OTP behavior modules export this function, so callback modules for those behaviors need not to supply their own.</source>
          <target state="translated">&lt;code&gt;system_get_state/1&lt;/code&gt; 함수 는 주로 OTP &lt;code&gt;&lt;a href=&quot;#special_process&quot;&gt;special processes&lt;/a&gt;&lt;/code&gt; 를 구현하는 사용자 정의 동작 및 모듈에 유용 합니다 . &lt;code&gt;gen_server&lt;/code&gt; , &lt;code&gt;gen_statem&lt;/code&gt; 및 &lt;code&gt;gen_event&lt;/code&gt; 그 행동에 대한 콜백 모듈은 자신의를 제공 할 필요가 없습니다 있도록 OTP 동작 모듈은이 기능을 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd647b7bf68817f403e375540ab6dd93b4caf1fb" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;system_replace_state/2&lt;/code&gt; is primarily useful for user-defined behaviors and modules that implement OTP &lt;code&gt;&lt;a href=&quot;#special_process&quot;&gt;special processes&lt;/a&gt;&lt;/code&gt;. The OTP behavior modules &lt;code&gt;gen_server&lt;/code&gt;, &lt;code&gt;gen_statem&lt;/code&gt;, and &lt;code&gt;gen_event&lt;/code&gt; export this function, so callback modules for those behaviors need not to supply their own.</source>
          <target state="translated">&lt;code&gt;system_replace_state/2&lt;/code&gt; 함수 는 주로 OTP &lt;code&gt;&lt;a href=&quot;#special_process&quot;&gt;special processes&lt;/a&gt;&lt;/code&gt; 를 구현하는 사용자 정의 동작 및 모듈에 유용 합니다 . &lt;code&gt;gen_server&lt;/code&gt; , &lt;code&gt;gen_statem&lt;/code&gt; 및 &lt;code&gt;gen_event&lt;/code&gt; OTP 비헤이비어 모듈은 이 기능을 내보내므로 해당 비헤이비어에 대한 콜백 모듈은 자체적으로 제공 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="de1886a4885b84597d03d7ef29613557edf6c711" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;unicode:bom_to_encoding/1&lt;/code&gt; identifies the encoding from a binary of at least four bytes. It returns, along with a term suitable for setting the encoding of the file, the byte length of the BOM, so that the file position can be set accordingly. Notice that function &lt;code&gt;file:position/2&lt;/code&gt; always works on byte-offsets, so that the byte length of the BOM is needed.</source>
          <target state="translated">&lt;code&gt;unicode:bom_to_encoding/1&lt;/code&gt; 함수 는 4 바이트 이상의 바이너리에서 인코딩을 식별합니다. 파일 위치를 적절하게 설정할 수 있도록 파일의 인코딩 설정에 적합한 용어와 함께 BOM의 바이트 길이를 리턴합니다. 함수 &lt;code&gt;file:position/2&lt;/code&gt; 는 항상 바이트 오프셋에서 작동하므로 BOM의 바이트 길이가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="bbe54b453c4d0ef692d841305cff0c47dbf76063" translate="yes" xml:space="preserve">
          <source>Function Breakpoints</source>
          <target state="translated">기능 중단 점</target>
        </trans-unit>
        <trans-unit id="f2e687d7450d1fda8eae189942ad8936205238a3" translate="yes" xml:space="preserve">
          <source>Function Constraints</source>
          <target state="translated">기능 제약</target>
        </trans-unit>
        <trans-unit id="5b51ae5c386fcffd7ce1ff55e49610a2a8af3637" translate="yes" xml:space="preserve">
          <source>Function Types</source>
          <target state="translated">기능 유형</target>
        </trans-unit>
        <trans-unit id="7a605a56e2cdcdebd5e329a93e319622341b36f7" translate="yes" xml:space="preserve">
          <source>Function arguments</source>
          <target state="translated">함수 인수</target>
        </trans-unit>
        <trans-unit id="4dd4d7e60b7d18a4680a9c3791a955ac7d5eab38" translate="yes" xml:space="preserve">
          <source>Function arguments and return values are represented as values of type &lt;code&gt;ERL_NIF_TERM&lt;/code&gt;. Here, functions like &lt;code&gt;enif_get_int&lt;/code&gt; and &lt;code&gt;enif_make_int&lt;/code&gt; are used to convert between Erlang term and C-type. If the function argument &lt;code&gt;argv[0]&lt;/code&gt; is not an integer, &lt;code&gt;enif_get_int&lt;/code&gt; returns false, in which case it returns by throwing a &lt;code&gt;badarg&lt;/code&gt;-exception with &lt;code&gt;enif_make_badarg&lt;/code&gt;.</source>
          <target state="translated">함수 인수 및 리턴 값은 &lt;code&gt;ERL_NIF_TERM&lt;/code&gt; 유형의 값으로 표시됩니다 . 여기서, 같은 기능 &lt;code&gt;enif_get_int&lt;/code&gt; 및 &lt;code&gt;enif_make_int&lt;/code&gt; 는 얼랑 기간 및 C 형 사이의 변환을 위해 사용된다. 함수 인수 &lt;code&gt;argv[0]&lt;/code&gt; 이 정수가 아닌 경우 &lt;code&gt;enif_get_int&lt;/code&gt; 는 false를 리턴하며,이 경우 enif_make_badarg와 함께 &lt;code&gt;enif_make_badarg&lt;/code&gt; &lt;code&gt;badarg&lt;/code&gt; 발생시켜 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="e206e314398d0febc7547e27f300f61800449866" translate="yes" xml:space="preserve">
          <source>Function call on the right side</source>
          <target state="translated">오른쪽의 함수 호출</target>
        </trans-unit>
        <trans-unit id="ae6f0da074db8970663a47d359b621f357a61764" translate="yes" xml:space="preserve">
          <source>Function call, where &lt;code&gt;N&lt;/code&gt; is the call level and &lt;code&gt;L&lt;/code&gt; the line number.</source>
          <target state="translated">함수 호출. 여기서 &lt;code&gt;N&lt;/code&gt; 은 호출 레벨이고 &lt;code&gt;L&lt;/code&gt; 은 회선 번호입니다.</target>
        </trans-unit>
        <trans-unit id="307d58da1cb5c708acf50f78b41a528827c81cf8" translate="yes" xml:space="preserve">
          <source>Function calls</source>
          <target state="translated">함수 호출</target>
        </trans-unit>
        <trans-unit id="1473376a390a40a1bb5f714ce2df4b0c5a2ef9eb" translate="yes" xml:space="preserve">
          <source>Function for adding comments to the HTML overview page</source>
          <target state="translated">HTML 개요 페이지에 주석을 추가하는 기능</target>
        </trans-unit>
        <trans-unit id="dcca31f003471c15216d10a16a200af2eb90d880" translate="yes" xml:space="preserve">
          <source>Function for terminating a test case with error reason</source>
          <target state="translated">오류 이유가있는 테스트 케이스를 종료하는 기능</target>
        </trans-unit>
        <trans-unit id="379761cf02656733d9f5d2cac656258178fdc884" translate="yes" xml:space="preserve">
          <source>Function return value</source>
          <target state="translated">함수 반환 값</target>
        </trans-unit>
        <trans-unit id="9a73fe745fcee9e3cdb003e43fad2cf2e88e5e4c" translate="yes" xml:space="preserve">
          <source>Function to accumulate and normalize whitespace.</source>
          <target state="translated">공백을 누적하고 정규화하는 기능.</target>
        </trans-unit>
        <trans-unit id="ae7560f662307c5af73c32d5a45cc140de180ad1" translate="yes" xml:space="preserve">
          <source>Function to control applications in a distributed manner</source>
          <target state="translated">분산 방식으로 응용 프로그램을 제어하는 ​​기능</target>
        </trans-unit>
        <trans-unit id="349710e0cbd339836d9dd15ef76164abfe20f4c5" translate="yes" xml:space="preserve">
          <source>FunctionName = {atom(), integer()}</source>
          <target state="translated">FunctionName = {atom (), 정수 ()}</target>
        </trans-unit>
        <trans-unit id="8a9027a434a1ae83e69e062692cc1fc4a7bc846c" translate="yes" xml:space="preserve">
          <source>Functional, extendible arrays.</source>
          <target state="translated">기능적이고 확장 가능한 어레이.</target>
        </trans-unit>
        <trans-unit id="765683b35251bb41817c5d8a33261b028fd5cbe7" translate="yes" xml:space="preserve">
          <source>Functional, extendible arrays. Arrays can have fixed size, or can grow automatically as needed. A default value is used for entries that have not been explicitly set.</source>
          <target state="translated">기능적이고 확장 가능한 어레이. 배열의 크기는 고정되어 있거나 필요에 따라 자동으로 커질 수 있습니다. 명시 적으로 설정되지 않은 항목에는 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="ae06688b7a9f92238bd18a3741ca7adc4fb86072" translate="yes" xml:space="preserve">
          <source>Functionality common for many test case functions can be implemented in common help functions. If these functions are useful for test cases across suites, put the help functions into common help modules.</source>
          <target state="translated">많은 테스트 케이스 기능에 공통적 인 기능은 공통 도움말 기능으로 구현할 수 있습니다. 이러한 기능이 제품군 전체의 테스트 사례에 유용한 경우 도움말 기능을 공통 도움말 모듈에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="c61e71940eb6aae664b22906ce497f7ad68a0bca" translate="yes" xml:space="preserve">
          <source>Functionality in this module generally assumes valid input and does not necessarily fail on input that does not use a valid encoding, but may instead very likely produce invalid output.</source>
          <target state="translated">이 모듈의 기능은 일반적으로 유효한 입력을 가정하며 유효한 인코딩을 사용하지 않는 입력에서 반드시 실패하지는 않지만 대신 유효하지 않은 출력을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d843049d24fea44feaf347c9c7ef28933fcfeb5" translate="yes" xml:space="preserve">
          <source>Functionality is deprecated when new functionality is introduced that is preferred to be used instead of the old functionality that is being deprecated. The deprecation does &lt;strong&gt;not&lt;/strong&gt; imply removal of the functionality unless an upcoming removal is explicitly stated in the deprecation.</source>
          <target state="translated">더 이상 사용되지 않는 이전 기능 대신 새 기능이 도입되면 기능이 사용되지 않습니다. 사용 중단은 않습니다 &lt;strong&gt;하지&lt;/strong&gt; 곧 제거가 명시 적으로 중단에 명시되지 않는 기능의 제거를 의미한다.</target>
        </trans-unit>
        <trans-unit id="8592cef0a9eb94448b3abaabfc5effd65afb5210" translate="yes" xml:space="preserve">
          <source>Functions (*).</source>
          <target state="translated">기능 (*).</target>
        </trans-unit>
        <trans-unit id="914e8e5deccb7e7258c5729347280fdcd3ec611d" translate="yes" xml:space="preserve">
          <source>Functions &lt;code&gt;&lt;a href=&quot;#delete_child-2&quot;&gt;delete_child/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#restart_child-2&quot;&gt;restart_child/2&lt;/a&gt;&lt;/code&gt; are invalid for &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisors and return &lt;code&gt;{error,simple_one_for_one}&lt;/code&gt; if the specified supervisor uses this restart strategy.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#delete_child-2&quot;&gt;delete_child/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#restart_child-2&quot;&gt;restart_child/2&lt;/a&gt;&lt;/code&gt; 함수 는 &lt;code&gt;simple_one_for_one&lt;/code&gt; 수퍼바이저에 유효하지 않으며 지정된 수퍼바이저가이 재시작 전략을 사용하는 경우 &lt;code&gt;{error,simple_one_for_one}&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d9d4c0ae746fec81fe95971708ec71a3f1f0f56b" translate="yes" xml:space="preserve">
          <source>Functions &lt;code&gt;append/3&lt;/code&gt; and &lt;code&gt;append_list/3&lt;/code&gt; are included so that keyed values can be stored in a list &lt;strong&gt;accumulator&lt;/strong&gt;, for example:</source>
          <target state="translated">&lt;code&gt;append/3&lt;/code&gt; 및 &lt;code&gt;append_list/3&lt;/code&gt; 함수 는 키 입력 된 값을 목록 &lt;strong&gt;누산기에&lt;/strong&gt; 저장할 수 있도록 다음과 같이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="5919d40bc6f8760ddfdadec5c826f96db49bccf0" translate="yes" xml:space="preserve">
          <source>Functions &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;append_list&lt;/code&gt; are included so that keyed values can be stored in a list &lt;strong&gt;accumulator&lt;/strong&gt;, for example:</source>
          <target state="translated">&lt;code&gt;append&lt;/code&gt; 및 &lt;code&gt;append_list&lt;/code&gt; 함수 가 포함되어 키 입력 된 값을 목록 &lt;strong&gt;누산기에&lt;/strong&gt; 저장할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7bff7216489cb5edc52578a6599bbb4f704872bc" translate="yes" xml:space="preserve">
          <source>Functions &lt;code&gt;jer_encode/2&lt;/code&gt; and &lt;code&gt;jer_decode/2&lt;/code&gt; for JSON encoding rules are generated together with functions for &lt;code&gt;ber&lt;/code&gt; or &lt;code&gt;per&lt;/code&gt;. Only to be used when the main encoding option is &lt;code&gt;-bber&lt;/code&gt;, &lt;code&gt;-bper&lt;/code&gt; or &lt;code&gt;-buper&lt;/code&gt;</source>
          <target state="translated">함수 &lt;code&gt;jer_encode/2&lt;/code&gt; 및 &lt;code&gt;jer_decode/2&lt;/code&gt; JSON 부호화 규칙을위한 기능과 함께 생성 된 &lt;code&gt;ber&lt;/code&gt; 또는 &lt;code&gt;per&lt;/code&gt; . 기본 인코딩 옵션이 &lt;code&gt;-bber&lt;/code&gt; , &lt;code&gt;-bper&lt;/code&gt; 또는 &lt;code&gt;-buper&lt;/code&gt; 인 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8018594d7bf82df5fe0b72237035ac8100b5a47d" translate="yes" xml:space="preserve">
          <source>Functions = [{FunctionName, {ModuleName, FunctionName}}]</source>
          <target state="translated">함수 = [{FunctionName, {ModuleName, FunctionName}}]</target>
        </trans-unit>
        <trans-unit id="8fabe1431f4feadc589570cd2fd2c3bb0c18823c" translate="yes" xml:space="preserve">
          <source>Functions Allowed Only for Tracing</source>
          <target state="translated">추적에만 허용되는 기능</target>
        </trans-unit>
        <trans-unit id="8cb12046b2b084415278e116d627437d85adbecf" translate="yes" xml:space="preserve">
          <source>Functions Allowed in All Types of Match Specifications</source>
          <target state="translated">모든 유형의 일치 사양에서 허용되는 기능</target>
        </trans-unit>
        <trans-unit id="39b42342043652c3762d0038640b9f666b642bbc" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 10</source>
          <target state="translated">OTP 10에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="77dc721df513fbfb9ef6732b6e90614f79c8dd7f" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 12</source>
          <target state="translated">OTP 12에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="020ab124c2f43464b9ec3b1d145a413af89c5c5a" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 16</source>
          <target state="translated">OTP 16에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="750d8ae97413dad72e18e6ba3b4a2c6028988d32" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 18</source>
          <target state="translated">OTP 18에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="9be92dcd4c88e8ff59f78eec41c02c630a450b9b" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 19</source>
          <target state="translated">OTP 19에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="9d1929063f0d77920d77cfbc054dff32b1855e19" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 20</source>
          <target state="translated">OTP 20에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="b2d46ecf74d1178a68ea0594e56ab40ac1ba9114" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 21</source>
          <target state="translated">OTP 21에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="6cc052ef6be644a110e50bb976b9d0e727019c6d" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 22</source>
          <target state="translated">OTP 22에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="5230f9db15e03cf9656d4f466b4c8f8b94b04f9f" translate="yes" xml:space="preserve">
          <source>Functions Deprecated in OTP 23</source>
          <target state="translated">OTP 23에서 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="cad56cf803ae73e1c236557cfe771965973331c9" translate="yes" xml:space="preserve">
          <source>Functions Scheduled for Removal in OTP 24</source>
          <target state="translated">OTP 24에서 제거 예정된 기능</target>
        </trans-unit>
        <trans-unit id="e09ce1ba16d8d7ca8c7ce13e4f3fd253b9ca0ceb" translate="yes" xml:space="preserve">
          <source>Functions Scheduled for Removal in OTP 25</source>
          <target state="translated">OTP 25에서 제거 예정된 기능</target>
        </trans-unit>
        <trans-unit id="7877b54dc579881cc402d2e36ffecd20f0c00ce1" translate="yes" xml:space="preserve">
          <source>Functions are provided for using another file structure than the structure defined in OTP. These functions can be used to test a release upgrade locally.</source>
          <target state="translated">OTP에 정의 된 구조와 다른 파일 구조를 사용하기위한 기능이 제공됩니다. 이 기능을 사용하여 릴리스 업그레이드를 로컬로 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfb4df55b69f714685bc601a52089cb538566e9e" translate="yes" xml:space="preserve">
          <source>Functions are provided to set and clear alarms. The alarm format is defined by the user. For example, an event handler for SNMP can be defined, together with an alarm Management Information Base (MIB).</source>
          <target state="translated">알람을 설정하고 지우는 기능이 제공됩니다. 알람 형식은 사용자가 정의합니다. 예를 들어, 경보 관리 정보베이스 (MIB)와 함께 SNMP에 대한 이벤트 핸들러를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="601a62e44013ea4cc9f163af52dcb57edeca6af3" translate="yes" xml:space="preserve">
          <source>Functions can be specified as either all in the system, all in one module, all arities of one function, one function, or all functions in all modules not yet loaded. As for now, BIFs cannot be call count traced.</source>
          <target state="translated">기능은 시스템의 모든 모듈, 한 모듈의 모든 기능, 한 기능의 모든 특성, 하나의 기능 또는 아직로드되지 않은 모든 모듈의 모든 기능 중 하나로 지정할 수 있습니다. 현재로서는 BIF를 호출 횟수를 추적 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2c4aaccbbc318df480e8b7e892de066b9e78a295" translate="yes" xml:space="preserve">
          <source>Functions for Erlang term construction.</source>
          <target state="translated">얼랭 용어 생성 기능.</target>
        </trans-unit>
        <trans-unit id="9734847357d6c57d3b8a47c1476d6e25b9babc93" translate="yes" xml:space="preserve">
          <source>Functions for Reporting SNMP Errors</source>
          <target state="translated">SNMP 오류보고 기능</target>
        </trans-unit>
        <trans-unit id="597e4923b2bf20f58219c48cd231ad778cb3f8b4" translate="yes" xml:space="preserve">
          <source>Functions for Reporting SNMP Errors on stdio</source>
          <target state="translated">stdio에서 SNMP 오류보고 기능</target>
        </trans-unit>
        <trans-unit id="3fc43f40fec9367985ba28eb42680d87f31491eb" translate="yes" xml:space="preserve">
          <source>Functions for Reporting SNMP Errors through the error_logger</source>
          <target state="translated">error_logger를 통한 SNMP 오류보고 기능</target>
        </trans-unit>
        <trans-unit id="e41e664df0c80b47478291a0a4125139f728d60b" translate="yes" xml:space="preserve">
          <source>Functions for asynchronous and synchronous start of processes adhering to the OTP design principles.</source>
          <target state="translated">OTP 설계 원칙을 준수하는 비동기식 및 동기식 프로세스 시작 기능.</target>
        </trans-unit>
        <trans-unit id="699267b03ae0cf471fbaedce463a147af4ec15ff" translate="yes" xml:space="preserve">
          <source>Functions for communicating with sockets using the SCTP protocol.</source>
          <target state="translated">SCTP 프로토콜을 사용하여 소켓과 통신하기위한 기능.</target>
        </trans-unit>
        <trans-unit id="a2a25fe4869c1bfaaa1258115ab8561dbfbc601b" translate="yes" xml:space="preserve">
          <source>Functions for converting Unicode characters.</source>
          <target state="translated">유니 코드 문자 변환 기능.</target>
        </trans-unit>
        <trans-unit id="365aff387339bbd957187d48f5338867261bcde0" translate="yes" xml:space="preserve">
          <source>Functions for exporting XML data to an external format.</source>
          <target state="translated">XML 데이터를 외부 형식으로 내보내는 기능.</target>
        </trans-unit>
        <trans-unit id="cd05358ab19f34abded06c41194def3d16feb53f" translate="yes" xml:space="preserve">
          <source>Functions for loading and unloading the OTP-OS-MON-MIB into/from an SNMP agent. The instrumentation of the OTP-OS-MON-MIB uses Mnesia, hence Mnesia must be started prior to loading the OTP-OS-MON-MIB.</source>
          <target state="translated">SNMP 에이전트에 OTP-OS-MON-MIB를로드 및 언로드하는 기능. OTP-OS-MON-MIB의 계측에는 Mnesia가 사용되므로 OTP-OS-MON-MIB를로드하기 전에 Mnesia를 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="7d7917583d40e71377fa5719f8037c9ede1c2480" translate="yes" xml:space="preserve">
          <source>Functions for manipulating sets as ordered lists.</source>
          <target state="translated">순서 목록으로 세트를 조작하는 기능.</target>
        </trans-unit>
        <trans-unit id="08b7ba0ad2196e2794f74664d08addd6e1364d78" translate="yes" xml:space="preserve">
          <source>Functions for manipulating sets of sets.</source>
          <target state="translated">세트 세트 조작을위한 함수.</target>
        </trans-unit>
        <trans-unit id="d2aad44ca7670e0df98ff019dba705cdf4c0c814" translate="yes" xml:space="preserve">
          <source>Functions for printing and logging</source>
          <target state="translated">인쇄 및 로깅 기능</target>
        </trans-unit>
        <trans-unit id="2a78df0a41921110836d1ab81b9a751ad6669a0a" translate="yes" xml:space="preserve">
          <source>Functions for reading comment lines from Erlang source code.</source>
          <target state="translated">Erlang 소스 코드에서 주석 행을 읽는 기능.</target>
        </trans-unit>
        <trans-unit id="1981262d962dbafc467ad0d596a8317803f57309" translate="yes" xml:space="preserve">
          <source>Functions for reading configuration data</source>
          <target state="translated">구성 데이터를 읽기위한 기능</target>
        </trans-unit>
        <trans-unit id="ef5b30a64eeeba73330937b8552d5a9c17ed7c2b" translate="yes" xml:space="preserve">
          <source>Functions for set manipulation.</source>
          <target state="translated">세트 조작 기능.</target>
        </trans-unit>
        <trans-unit id="0e391083e0fbf22ea561927d115cdc3b6d736c11" translate="yes" xml:space="preserve">
          <source>Functions for starting and controlling slave nodes.</source>
          <target state="translated">슬레이브 노드를 시작하고 제어하는 ​​기능.</target>
        </trans-unit>
        <trans-unit id="ac5dafbde03c1a13b88745b35196edc9afede123" translate="yes" xml:space="preserve">
          <source>Functions for the client side of the messenger</source>
          <target state="translated">메신저의 클라이언트 측 기능</target>
        </trans-unit>
        <trans-unit id="e027782aa57645e3a6b01cb23b7685c8fdd3a647" translate="yes" xml:space="preserve">
          <source>Functions for the server of a client-server relation</source>
          <target state="translated">클라이언트-서버 관계의 서버를위한 함수</target>
        </trans-unit>
        <trans-unit id="44ba87f19e7d7ebb8632d047639cdce509275bc2" translate="yes" xml:space="preserve">
          <source>Functions for the server side of the messenger</source>
          <target state="translated">메신저 서버 측 기능</target>
        </trans-unit>
        <trans-unit id="024a4a0a04b0c6922ba47c2bb9b2955b3572b8b1" translate="yes" xml:space="preserve">
          <source>Functions for the user interface</source>
          <target state="translated">사용자 인터페이스 기능</target>
        </trans-unit>
        <trans-unit id="22a7f44f3717d4b7ca243ccf7ace6256c62ee8c5" translate="yes" xml:space="preserve">
          <source>Functions in the &lt;code&gt;lists&lt;/code&gt; module are used. This is a very useful module and a study of the manual page is recommended (&lt;code&gt;erl -man lists&lt;/code&gt;). &lt;code&gt;lists:keymember(Key,Position,Lists)&lt;/code&gt; looks through a list of tuples and looks at &lt;code&gt;Position&lt;/code&gt; in each tuple to see if it is the same as &lt;code&gt;Key&lt;/code&gt;. The first element is position 1. If it finds a tuple where the element at &lt;code&gt;Position&lt;/code&gt; is the same as &lt;code&gt;Key&lt;/code&gt;, it returns &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lists&lt;/code&gt; 모듈의 기능 이 사용됩니다. 이것은 매우 유용한 모듈이며 매뉴얼 페이지에 대한 연구가 권장됩니다 ( &lt;code&gt;erl -man lists&lt;/code&gt; ). &lt;code&gt;lists:keymember(Key,Position,Lists)&lt;/code&gt; 는 튜플 목록을 살펴보고 각 튜플의 &lt;code&gt;Position&lt;/code&gt; 를보고 &lt;code&gt;Key&lt;/code&gt; 와 같은지 확인합니다 . 첫 번째 요소는 위치 1입니다. &lt;code&gt;Position&lt;/code&gt; 의 요소 가 &lt;code&gt;Key&lt;/code&gt; 와 동일한 튜플을 찾으면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="8878100f101dc3c81231edee6430330183656e2a" translate="yes" xml:space="preserve">
          <source>Functions in the shell that are not prefixed by a module name are assumed to be functional objects (funs), built-in functions (BIFs), or belong to the module &lt;code&gt;user_default&lt;/code&gt; or &lt;code&gt;shell_default&lt;/code&gt;.</source>
          <target state="translated">모듈 이름으로 접두사가없는 쉘의 함수는 기능적 오브젝트 (funs), 내장 함수 (BIF) 또는 &lt;code&gt;user_default&lt;/code&gt; 또는 &lt;code&gt;shell_default&lt;/code&gt; 모듈에 속하는 것으로 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="59634689b7646956915d9637a99348e60d088320" translate="yes" xml:space="preserve">
          <source>Functions in this module are not supposed to be called outside a module implementing this behaviour!</source>
          <target state="translated">이 모듈의 함수는이 동작을 구현하는 모듈 외부에서 호출해서는 안됩니다!</target>
        </trans-unit>
        <trans-unit id="95f9b5c2c982eb918563e559a90be0ddfc7831bd" translate="yes" xml:space="preserve">
          <source>Functions in this module fail by raising an error exception with error reason:</source>
          <target state="translated">이 모듈의 함수는 오류 이유와 함께 오류 예외를 발생시켜 실패합니다.</target>
        </trans-unit>
        <trans-unit id="064d58d23f91c2cb5d7fb520d11d7b0e642892d9" translate="yes" xml:space="preserve">
          <source>Functions in this module generally fail with an exception if they are passed an incorrect type (for example, an integer or a tuple where an atom is expected). An error tuple is returned if the argument type is correct, but there are some other errors (for example, a non-existing directory is specified to &lt;code&gt;set_path/1&lt;/code&gt;).</source>
          <target state="translated">이 모듈의 함수는 일반적으로 잘못된 유형 (예 : 원자 또는 원자가 예상되는 튜플)이 전달되면 예외와 함께 실패합니다. 인수 유형이 올바른 경우 오류 튜플이 리턴되지만 다른 오류가 있습니다 (예 : 존재하지 않는 디렉토리가 &lt;code&gt;set_path/1&lt;/code&gt; 로 지정됨 ).</target>
        </trans-unit>
        <trans-unit id="7745eb90664842af3a1bafbccd43688f4577d81c" translate="yes" xml:space="preserve">
          <source>Functions not explicitly documented as thread-safe are &lt;strong&gt;not&lt;/strong&gt; thread safe. Also notice that some functions are &lt;strong&gt;only&lt;/strong&gt; thread-safe when used in a runtime system with SMP support.</source>
          <target state="translated">스레드 안전으로 명시 적으로 문서화되지 않은 함수는 스레드 안전이 &lt;strong&gt;아닙니다&lt;/strong&gt; . 또한 통지 일부 기능이 있다는 &lt;strong&gt;에만&lt;/strong&gt; 스레드 안전 SMP를 지원하는 런타임 시스템에서 사용되는 경우.</target>
        </trans-unit>
        <trans-unit id="0ac6ff6e259dc58edc6fc08b5f15157730e6ff3b" translate="yes" xml:space="preserve">
          <source>Functions reading Erlang syntax from files recognize the &lt;code&gt;coding:&lt;/code&gt; comment and can therefore handle Unicode data on input. When writing Erlang terms to a file, you are advised to insert such comments when applicable:</source>
          <target state="translated">파일에서 Erlang 구문을 읽는 함수는 &lt;code&gt;coding:&lt;/code&gt; 주석을 인식 하므로 입력시 유니 코드 데이터를 처리 할 수 ​​있습니다. Erlang 용어를 파일에 쓸 때 해당하는 경우 다음과 같은 주석을 삽입하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="05509452c1560e192ccd1cf0d92fdfa75ef78544" translate="yes" xml:space="preserve">
          <source>Functions that load code (such as &lt;code&gt;load_file/1&lt;/code&gt;) will return &lt;code&gt;{error,Reason}&lt;/code&gt; if the load operation fails. Here follows a description of the common reasons.</source>
          <target state="translated">로드 조작이 실패하면 코드를로드하는 함수 (예 : &lt;code&gt;load_file/1&lt;/code&gt; )는 &lt;code&gt;{error,Reason}&lt;/code&gt; 을 리턴 합니다. 다음은 일반적인 이유에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="0d4eed8b03ca8e06e2516c73679f123e0994b5a7" translate="yes" xml:space="preserve">
          <source>Functions used for implementation of processes are also expected to understand system messages, such as debug messages and code change. These functions must be used to implement the use of system messages for a process; either directly, or through standard behaviors, such as &lt;code&gt;&lt;a href=&quot;gen_server&quot;&gt;gen_server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">프로세스 구현에 사용되는 함수는 디버그 메시지 및 코드 변경과 같은 시스템 메시지를 이해해야합니다. 프로세스에 시스템 메시지 사용을 구현하려면 이러한 기능을 사용해야합니다. 직접, 또는 표준 행동을 통해 &lt;code&gt;&lt;a href=&quot;gen_server&quot;&gt;gen_server&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5308d4fec09f688ee7bdae57a166921d40890ec2" translate="yes" xml:space="preserve">
          <source>Functions used to render EEP-48 style documentation for a shell.</source>
          <target state="translated">쉘에 대한 EEP-48 스타일 문서를 렌더링하는 데 사용되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1dc2b1e727ebeb7efb94dab85e24d8d5f1b495a7" translate="yes" xml:space="preserve">
          <source>Functions with &lt;code&gt;uri_string()&lt;/code&gt; argument accept lists, binaries and mixed lists (lists with binary elements) as input type. All of the functions but &lt;code&gt;transcode/2&lt;/code&gt; expects input as lists of unicode codepoints, UTF-8 encoded binaries and UTF-8 percent-encoded URI parts (&quot;%C3%B6&quot; corresponds to the unicode character &quot;&amp;ouml;&quot;).</source>
          <target state="translated">와 기능 &lt;code&gt;uri_string()&lt;/code&gt; 인수가 입력 유형으로 목록, 바이너리 (이진 요소 목록) 혼합 된 목록을 받아들입니다. &lt;code&gt;transcode/2&lt;/code&gt; 제외한 모든 함수 는 유니 코드 코드 포인트, UTF-8 인코딩 바이너리 및 UTF-8 퍼센트 인코딩 URI 부분 ( &quot;% C3 % B6&quot;은 유니 코드 문자 &quot;&amp;ouml;&quot;에 해당)의 목록으로 입력을 예상합니다.</target>
        </trans-unit>
        <trans-unit id="07e6e818cdcd190d77f7205421932767583ae649" translate="yes" xml:space="preserve">
          <source>Functions with an attribute tag &lt;code&gt;on_load&lt;/code&gt; (*).</source>
          <target state="translated">속성 태그가 &lt;code&gt;on_load&lt;/code&gt; (*) 인 기능.</target>
        </trans-unit>
        <trans-unit id="b60377ffda30f2e72376989357f855a342bec4b7" translate="yes" xml:space="preserve">
          <source>Functions written in Erlang cannot be called, neither can local functions, global functions, or real funs.</source>
          <target state="translated">Erlang으로 작성된 함수는 호출 할 수 없으며 로컬 함수, 전역 함수 또는 실제 재미도 없습니다.</target>
        </trans-unit>
        <trans-unit id="c39ed584b9e9103a473ee2f51b67c6e7ad46b2e6" translate="yes" xml:space="preserve">
          <source>Funs are a distinct type. The BIFs &lt;code&gt;erlang:fun_info/1,2&lt;/code&gt; can be used to retrieve information about a fun, and the BIF &lt;code&gt;erlang:fun_to_list/1&lt;/code&gt; returns a textual representation of a fun. The &lt;code&gt;check_process_code/2&lt;/code&gt; BIF returns &lt;code&gt;true&lt;/code&gt; if the process contains funs that depend on the old version of a module.</source>
          <target state="translated">재미는 독특한 유형입니다. BIF &lt;code&gt;erlang:fun_info/1,2&lt;/code&gt; 는 재미에 대한 정보를 검색하는 데 사용될 수 있으며 BIF &lt;code&gt;erlang:fun_to_list/1&lt;/code&gt; 은 재미의 텍스트 표현을 리턴합니다. &lt;code&gt;check_process_code/2&lt;/code&gt; BIF 반환 &lt;code&gt;true&lt;/code&gt; 프로세스 모듈의 이전 버전에 따라 funs입니다 포함되어있는 경우.</target>
        </trans-unit>
        <trans-unit id="8d23e38804d2828503dcab081f3c9edde9203b2f" translate="yes" xml:space="preserve">
          <source>Funs are written with the following syntax (see &lt;code&gt;Fun Expressions &lt;/code&gt; for full description):</source>
          <target state="translated">Fun은 다음 구문으로 작성됩니다 (자세한 설명 은 &lt;code&gt;Fun Expressions &lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d413857ab5033e0eef090e9b8927e37908c05632" translate="yes" xml:space="preserve">
          <source>Funs are written with the following syntax (see &lt;code&gt;Fun Expressions&lt;/code&gt; for full description):</source>
          <target state="translated">&lt;code&gt;Fun Expressions&lt;/code&gt; 는 다음 구문으로 작성됩니다 (자세한 설명 은 재미있는 표현식 참조 ).</target>
        </trans-unit>
        <trans-unit id="2659ee555bf6a973fb9cd75b3319eb3b017e5de6" translate="yes" xml:space="preserve">
          <source>Funs used to be very slow, slower than &lt;code&gt;apply/3&lt;/code&gt;. Originally, funs were implemented using nothing more than compiler trickery, ordinary tuples, &lt;code&gt;apply/3&lt;/code&gt;, and a great deal of ingenuity.</source>
          <target state="translated">fun은 매우 느리고 &lt;code&gt;apply/3&lt;/code&gt; 보다 느립니다 . 원래 재미는 컴파일러 속임수, 일반 튜플, &lt;code&gt;apply/3&lt;/code&gt; 및 엄청난 독창성을 사용하여 구현되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8763104ea45a398e2f4c2bf480605d36c9c9d00f" translate="yes" xml:space="preserve">
          <source>Further constraining patterns</source>
          <target state="translated">추가 제한 패턴</target>
        </trans-unit>
        <trans-unit id="a8a0d774a4db6af4f7e60a9958c496fb1e1034a2" translate="yes" xml:space="preserve">
          <source>Further described in section &lt;code&gt;&lt;a href=&quot;#local_function_handler&quot;&gt; Local Function Handler&lt;/a&gt;&lt;/code&gt; in this module</source>
          <target state="translated">이 모듈의 &lt;code&gt;&lt;a href=&quot;#local_function_handler&quot;&gt; Local Function Handler&lt;/a&gt;&lt;/code&gt; 섹션에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b83d509493beb968be386b13f4e41bf56205caa" translate="yes" xml:space="preserve">
          <source>Further described in section &lt;code&gt;&lt;a href=&quot;#local_function_handler&quot;&gt;Local Function Handler&lt;/a&gt;&lt;/code&gt; in this module</source>
          <target state="translated">이 모듈의 &lt;code&gt;&lt;a href=&quot;#local_function_handler&quot;&gt;Local Function Handler&lt;/a&gt;&lt;/code&gt; 섹션에서 추가 설명</target>
        </trans-unit>
        <trans-unit id="a985d31113f906cff0a4860f1b6e1791c3df0898" translate="yes" xml:space="preserve">
          <source>Further described in section &lt;code&gt;&lt;a href=&quot;#non_local_function_handler&quot;&gt; Non-Local Function Handler&lt;/a&gt;&lt;/code&gt; in this module.</source>
          <target state="translated">이 모듈의 &lt;code&gt;&lt;a href=&quot;#non_local_function_handler&quot;&gt; Non-Local Function Handler&lt;/a&gt;&lt;/code&gt; 섹션에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="49ee4f321ee6d2f4c84538e5e31627ce17db2724" translate="yes" xml:space="preserve">
          <source>Further described in section &lt;code&gt;&lt;a href=&quot;#non_local_function_handler&quot;&gt;Non-Local Function Handler&lt;/a&gt;&lt;/code&gt; in this module.</source>
          <target state="translated">이 모듈의 &lt;code&gt;&lt;a href=&quot;#non_local_function_handler&quot;&gt;Non-Local Function Handler&lt;/a&gt;&lt;/code&gt; 섹션에서 자세히 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="2e524888256b17aad4c6133397b299f8e094dd7a" translate="yes" xml:space="preserve">
          <source>Further instructions on wxWidgets, read &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_Building_Building-with-wxErlang&quot;&gt;Building with wxErlang&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">wxWidgets에 대한 추가 지시 사항은 &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_Building_Building-with-wxErlang&quot;&gt;Building with wxErlang&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77589dfbbc0f5947cbeaa3d546cae20b49b57759" translate="yes" xml:space="preserve">
          <source>Further, the following applies:</source>
          <target state="translated">또한 다음이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="3c7fb162716990969d17a23f6df750f7d1d7e5c6" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;ERL_CRASH_DUMP_SECONDS&lt;/code&gt; has the following behavior on &lt;code&gt;heart&lt;/code&gt;:</source>
          <target state="translated">또한, &lt;code&gt;ERL_CRASH_DUMP_SECONDS&lt;/code&gt; 은 에 다음과 같은 동작이 &lt;code&gt;heart&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4a8809ef4dff50e3d97820c47f8fdb921b992c2f" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;Line&lt;/code&gt; is the line number and &lt;code&gt;Column&lt;/code&gt; the left column of the comment (i.e., the column of the comment-introducing &lt;code&gt;%&lt;/code&gt; character). &lt;code&gt;Indent&lt;/code&gt; is the indentation (or padding), measured in character positions between the last non-whitespace character before the comment (or the left margin), and the left column of the comment. &lt;code&gt;Line&lt;/code&gt; and &lt;code&gt;Column&lt;/code&gt; are always positive integers, and &lt;code&gt;Indentation&lt;/code&gt; is a nonnegative integer.</source>
          <target state="translated">또한, &lt;code&gt;Line&lt;/code&gt; 줄 번호이고 &lt;code&gt;Column&lt;/code&gt; 주석의 왼쪽 열 (즉, 주석 도입의 열 &lt;code&gt;%&lt;/code&gt; 의 문자). &lt;code&gt;Indent&lt;/code&gt; 는 주석 앞의 마지막 비 공백 문자 (또는 왼쪽 여백)와 주석의 왼쪽 열 사이의 문자 위치에서 측정 된 들여 쓰기 (또는 패딩)입니다. &lt;code&gt;Line&lt;/code&gt; 과 &lt;code&gt;Column&lt;/code&gt; 은 항상 양의 정수이고 &lt;code&gt;Indentation&lt;/code&gt; 는 음이 아닌 정수입니다.</target>
        </trans-unit>
        <trans-unit id="469762538f21b9cc9a88c071979878064b827afe" translate="yes" xml:space="preserve">
          <source>Furthermore, if the option &lt;code&gt;maps&lt;/code&gt; is not used, a macro is generated for each value in the &lt;code&gt;.hrl&lt;/code&gt; file. So, the defined value &lt;code&gt;tt&lt;/code&gt; can also be extracted by &lt;code&gt;?tt&lt;/code&gt; in application code.</source>
          <target state="translated">또한 옵션 &lt;code&gt;maps&lt;/code&gt; 사용하지 않으면 &lt;code&gt;.hrl&lt;/code&gt; 파일의 각 값에 대해 매크로가 생성 됩니다. 따라서 정의 된 값 &lt;code&gt;tt&lt;/code&gt; 는 응용 프로그램 코드에서 &lt;code&gt;?tt&lt;/code&gt; 에 의해 추출 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ed714075ce794e7df77e5f0254d83a4a27b17b0" translate="yes" xml:space="preserve">
          <source>Furthermore, it is possible to make use of a linked in driver that performs some of the decode/encode, decode for ber and encode for per (the 'driver' encoding config).</source>
          <target state="translated">또한, 일부 디코딩 / 인코딩, ber에 대한 디코딩 및 per ( '드라이버'인코딩 구성)에 대해 인코딩하는 링크 된 드라이버를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8f5390edc4bae199a5716e362c1e546dbfee44f" translate="yes" xml:space="preserve">
          <source>Furthermore, the search for own carriers that are scheduled for deallocation is done as the last search option. The idea is that it is better to reuse a poorly utilized carrier than to resurrect an empty carrier that was just about to be released back to the OS.</source>
          <target state="translated">또한 할당 해제가 예정된 자체 운송 업체 검색은 마지막 검색 옵션으로 수행됩니다. 아이디어는 곧 OS로 다시 출시 될 빈 캐리어를 부활시키는 것보다 제대로 활용되지 않는 캐리어를 재사용하는 것이 낫다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="94b1320817767dd45c3d6f6ef7a6148a7b2002b0" translate="yes" xml:space="preserve">
          <source>Furthermore, values can be set for &lt;code&gt;SNMP&lt;/code&gt; application configuration parameters, &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;server&lt;/code&gt;, &lt;code&gt;net_if&lt;/code&gt;, and so on (for a list of valid parameters and types, see the &lt;code&gt;User's Guide for the SNMP application&lt;/code&gt;). This is done by defining a configuration data variable on the following form:</source>
          <target state="translated">또한 &lt;code&gt;SNMP&lt;/code&gt; 응용 프로그램 구성 매개 변수, &lt;code&gt;config&lt;/code&gt; , &lt;code&gt;server&lt;/code&gt; , &lt;code&gt;net_if&lt;/code&gt; 등의 값을 설정할 수 있습니다 (유효한 매개 변수 및 유형 목록은 &lt;code&gt;User's Guide for the SNMP application&lt;/code&gt; ). 다음 형식으로 구성 데이터 변수를 정의하면됩니다.</target>
        </trans-unit>
        <trans-unit id="8d24c78a1cdfd704c478bc9c43c9bf62198f2f29" translate="yes" xml:space="preserve">
          <source>Furthermore, when the table is initialized at startup, the table is only initialized locally, and the table content is not copied from another node.</source>
          <target state="translated">또한 시작시 테이블을 초기화하면 테이블이 로컬로만 초기화되고 다른 노드에서 테이블 내용이 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbdbfafa64b12e16b633678892631f235ad532da" translate="yes" xml:space="preserve">
          <source>G' is &lt;strong&gt;maximal&lt;/strong&gt; with respect to a property P if all other subgraphs that include the vertices of G' do not have property P.</source>
          <target state="translated">G ' 의 정점을 포함하는 다른 모든 하위 그래프에 속성 P가없는 경우 G'는 속성 P와 관련하여 &lt;strong&gt;최대&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="62d92fb14cdf15adb54c9c364b931947b4a07bbb" translate="yes" xml:space="preserve">
          <source>GC_REGEXP</source>
          <target state="translated">GC_REGEXP</target>
        </trans-unit>
        <trans-unit id="0388d1ea357b3f6ec01363ff21033c5414854624" translate="yes" xml:space="preserve">
          <source>GC_TEST(NeedStack, NeedHeap, Live)</source>
          <target state="translated">GC_TEST(NeedStack, NeedHeap, Live)</target>
        </trans-unit>
        <trans-unit id="85ab42e8da9ccb8ede5124dbcc2a1e3c41c10a61" translate="yes" xml:space="preserve">
          <source>GNU &lt;code&gt;autoconf&lt;/code&gt; of at least version 2.59. Note that &lt;code&gt;autoconf&lt;/code&gt; is not needed when building an unmodified version of the released source.</source>
          <target state="translated">버전 2.59 이상의 GNU &lt;code&gt;autoconf&lt;/code&gt; 참고 &lt;code&gt;autoconf&lt;/code&gt; 를이 릴리즈 된 소스의 수정되지 않은 버전을 구축 할 때 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="99a0c8a2c97b57ab7cc86dc85d89e23586272cab" translate="yes" xml:space="preserve">
          <source>GNU &lt;code&gt;m4&lt;/code&gt; -- If HiPE (native code) support is enabled. HiPE can be disabled using &lt;code&gt;--disable-hipe&lt;/code&gt;</source>
          <target state="translated">GNU &lt;code&gt;m4&lt;/code&gt; -HiPE (기본 코드) 지원이 활성화 된 경우 &lt;code&gt;--disable-hipe&lt;/code&gt; 을 사용하여 HiPE를 비활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="1f78aac645eb0a5b955d3f398a3bb843076eb092" translate="yes" xml:space="preserve">
          <source>GNU &lt;code&gt;make&lt;/code&gt;</source>
          <target state="translated">GNU &lt;code&gt;make&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cbb31ba5844dbb43051a17aa4eef493d6450469" translate="yes" xml:space="preserve">
          <source>GNU unzip, or a modern uncompress.</source>
          <target state="translated">GNU 압축 풀기 또는 현대 압축 해제</target>
        </trans-unit>
        <trans-unit id="7ed19f9e8ce69cee6a484fedc207b6ef4bd4f2be" translate="yes" xml:space="preserve">
          <source>Garbage collect often occurs while a process is suspended, but &lt;code&gt;fprof&lt;/code&gt; hides this fact by pretending that the suspended function was first unsuspended and then garbage collected. Otherwise the printout would show &lt;code&gt;garbage_collect&lt;/code&gt; being called from &lt;code&gt;suspend&lt;/code&gt; but not which function that might have caused the garbage collection.</source>
          <target state="translated">가비지 수집은 프로세스가 일시 중단되는 동안 종종 발생하지만 &lt;code&gt;fprof&lt;/code&gt; 는 일시 중단 된 기능이 일시 중단되지 않은 다음 가비지 수집 된 것으로 가장하여이 사실을 숨 깁니다. 그렇지 않으면 출력은 보여 것 &lt;code&gt;garbage_collect&lt;/code&gt; 에서 호출되는 &lt;code&gt;suspend&lt;/code&gt; 가비지 콜렉션의 원인이 생각하고있는 기능을하지만.</target>
        </trans-unit>
        <trans-unit id="cf6d4ceefcfddd0112c2ab313c4f6918a7857e5b" translate="yes" xml:space="preserve">
          <source>Garbage collecting</source>
          <target state="translated">쓰레기 수거</target>
        </trans-unit>
        <trans-unit id="28a110093601908a8f0fc5889b462ebaea0f2413" translate="yes" xml:space="preserve">
          <source>Garbage collects the node local process identified by &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">가비지는 &lt;code&gt;Pid&lt;/code&gt; 로 식별 된 노드 로컬 프로세스를 수집합니다 .</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">General</target>
        </trans-unit>
        <trans-unit id="13d3f5a506d40f6541fce22959754ed807de055f" translate="yes" xml:space="preserve">
          <source>General Config</source>
          <target state="translated">일반 구성</target>
        </trans-unit>
        <trans-unit id="aad92f9a617997df11fbc0385729abe830553357" translate="yes" xml:space="preserve">
          <source>General Description</source>
          <target state="translated">일반적인 설명</target>
        </trans-unit>
        <trans-unit id="fc499e5f08b85708773ffb74a3bcc80abeb4b530" translate="yes" xml:space="preserve">
          <source>General Events</source>
          <target state="translated">일반 이벤트</target>
        </trans-unit>
        <trans-unit id="4547393dd5afee84bd99a2d2f9b303462c7a8942" translate="yes" xml:space="preserve">
          <source>General balanced trees.</source>
          <target state="translated">균형 잡힌 나무.</target>
        </trans-unit>
        <trans-unit id="4cad327e13deb77473f4faa47dff15c65ab4a85f" translate="yes" xml:space="preserve">
          <source>General error, no error code</source>
          <target state="translated">일반 오류, 오류 코드 없음</target>
        </trans-unit>
        <trans-unit id="ccacd5f1fc437f7025d7f8ff7dd88c854fb0c1c5" translate="yes" xml:space="preserve">
          <source>General escape character</source>
          <target state="translated">일반 탈출 캐릭터</target>
        </trans-unit>
        <trans-unit id="0b5f389f686fb545e1bef504ec1d603ee6a5971f" translate="yes" xml:space="preserve">
          <source>General escape character with many uses</source>
          <target state="translated">많이 사용하는 일반적인 탈출 문자</target>
        </trans-unit>
        <trans-unit id="6052be1b46c02c7b4fd0f005af72c23b5963ea00" translate="yes" xml:space="preserve">
          <source>General information on how to submit patches can be found at: &lt;code&gt;&lt;a href=&quot;http://wiki.github.com/erlang/otp/submitting-patches&quot;&gt;http://wiki.github.com/erlang/otp/submitting-patches&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">패치 제출 방법에 대한 일반 정보는 &lt;code&gt;&lt;a href=&quot;http://wiki.github.com/erlang/otp/submitting-patches&quot;&gt;http://wiki.github.com/erlang/otp/submitting-patches&lt;/a&gt;&lt;/code&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8f634b87cf4408619a05feb477f946523b91243" translate="yes" xml:space="preserve">
          <source>Generally Useful Flags</source>
          <target state="translated">일반적으로 유용한 플래그</target>
        </trans-unit>
        <trans-unit id="1e7e6f96f5f33a6e580a51b9d7466b6d0ecd72ee" translate="yes" xml:space="preserve">
          <source>Generate Emacs TAGS file from Erlang source files</source>
          <target state="translated">Erlang 소스 파일에서 Emacs TAGS 파일 생성</target>
        </trans-unit>
        <trans-unit id="67326e8a2b78fce59f4855ebe9725718783824e1" translate="yes" xml:space="preserve">
          <source>Generate a random number &lt;code&gt;N, Lo =&amp;lt; N &amp;lt; Hi.&lt;/code&gt; Uses the &lt;code&gt;crypto&lt;/code&gt; library pseudo-random number generator. &lt;code&gt;Hi&lt;/code&gt; must be larger than &lt;code&gt;Lo&lt;/code&gt;.</source>
          <target state="translated">난수 &lt;code&gt;N, Lo =&amp;lt; N &amp;lt; Hi.&lt;/code&gt; 생성하십시오 . 용도 &lt;code&gt;crypto&lt;/code&gt; 라이브러리 의사 난수 생성기를. &lt;code&gt;Hi&lt;/code&gt; 는 &lt;code&gt;Lo&lt;/code&gt; 보다 커야합니다 .</target>
        </trans-unit>
        <trans-unit id="6bb8442fd49268483173f29995c233f170aeb7d1" translate="yes" xml:space="preserve">
          <source>Generate a trace message only if the function is of arity 3 and the first argument is &lt;code&gt;'trace'&lt;/code&gt;:</source>
          <target state="translated">함수가 arity 3이고 첫 번째 인수가 &lt;code&gt;'trace'&lt;/code&gt; 인 경우에만 추적 메시지를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d314429acaecad973a4b6e56689d4d759355517" translate="yes" xml:space="preserve">
          <source>Generate a trace message only if the trace control word is set to 1:</source>
          <target state="translated">추적 제어 단어가 1로 설정된 경우에만 추적 메시지를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="7f99b460d6288639f703cff3256f68c8c80fa0ea" translate="yes" xml:space="preserve">
          <source>Generate a trace message only if there is a &lt;code&gt;seq_trace&lt;/code&gt; token:</source>
          <target state="translated">&lt;code&gt;seq_trace&lt;/code&gt; 토큰 이있는 경우에만 추적 메시지를 생성하십시오 .</target>
        </trans-unit>
        <trans-unit id="a30b9d16026b43bcc42f57110b025c26de87c38c" translate="yes" xml:space="preserve">
          <source>Generate dependencies as a side-effect. The object file will be produced as normal. This option overrides the option &lt;code&gt;-M&lt;/code&gt;.</source>
          <target state="translated">부작용으로 종속성을 생성하십시오. 객체 파일은 정상적으로 생성됩니다. 이 옵션은 &lt;code&gt;-M&lt;/code&gt; 옵션보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="51870baafc34db7d5b0d6e1aa78a53d86d2abcec" translate="yes" xml:space="preserve">
          <source>Generate the next event to handle, see section &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;Inserted Events&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">처리 할 다음 이벤트 생성, &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;Inserted Events&lt;/a&gt;&lt;/code&gt; 섹션 참조</target>
        </trans-unit>
        <trans-unit id="db09d2925803889ca1935e1f45c19a9a527f0431" translate="yes" xml:space="preserve">
          <source>Generate the next event to handle, see section &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;Inserted Events&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">처리 할 다음 이벤트를 생성합니다 . &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;Inserted Events&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5053f3cd44bf59a31b849bb22f37df07370a7b87" translate="yes" xml:space="preserve">
          <source>Generated by &lt;code&gt; gen_statem:call(ServerRef, Request) &lt;/code&gt; where &lt;code&gt;Request&lt;/code&gt; becomes the &lt;code&gt;EventContent&lt;/code&gt;. &lt;code&gt;From&lt;/code&gt; is the reply address to use when replying either through the &lt;strong&gt;transition action&lt;/strong&gt;&lt;code&gt;{reply,From,Reply}&lt;/code&gt; or by calling &lt;code&gt; gen_statem:reply(From, Reply) &lt;/code&gt; from the &lt;strong&gt;callback module&lt;/strong&gt;.</source>
          <target state="translated">에 의해 생성 된 &lt;code&gt; gen_statem:call(ServerRef, Request) &lt;/code&gt; &lt;code&gt;Request&lt;/code&gt; 된다 &lt;code&gt;EventContent&lt;/code&gt; 을 . &lt;code&gt;From&lt;/code&gt; 은 &lt;strong&gt;전환 작업 &lt;/strong&gt; &lt;code&gt;{reply,From,Reply}&lt;/code&gt; 를 통해 또는 &lt;strong&gt;콜백 모듈&lt;/strong&gt; 에서 &lt;code&gt; gen_statem:reply(From, Reply) &lt;/code&gt; 를 호출 하여 응답 할 때 사용할 응답 주소 입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="708e9f0de097bce40f6177b7bbb7fc8f2bbed36a" translate="yes" xml:space="preserve">
          <source>Generated by &lt;code&gt; gen_statem:cast(ServerRef, Msg) &lt;/code&gt; where &lt;code&gt;Msg&lt;/code&gt; becomes the &lt;code&gt;EventContent&lt;/code&gt;.</source>
          <target state="translated">에 의해 생성 된 &lt;code&gt; gen_statem:cast(ServerRef, Msg) &lt;/code&gt; &lt;code&gt;Msg&lt;/code&gt; 된다 &lt;code&gt;EventContent&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="8aa03fe4079b7755dadfe3fc1dd7ce57c8d7b6ad" translate="yes" xml:space="preserve">
          <source>Generated by &lt;code&gt;gen_statem:call&lt;/code&gt;, where &lt;code&gt;From&lt;/code&gt; is the reply address to use when replying either through the state transition action &lt;code&gt;{reply,From,Msg}&lt;/code&gt; or by calling &lt;code&gt;gen_statem:reply&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem:call&lt;/code&gt; 에 의해 생성되며 , 여기서 &lt;code&gt;From&lt;/code&gt; 은 상태 전이 조치 &lt;code&gt;{reply,From,Msg}&lt;/code&gt; 를 통해 또는 &lt;code&gt;gen_statem:reply&lt;/code&gt; 를 호출 하여 응답 할 때 사용할 응답 주소 입니다.</target>
        </trans-unit>
        <trans-unit id="140aebe6e99b5e48ef7e35e5c12ad46d075a6b6a" translate="yes" xml:space="preserve">
          <source>Generated by &lt;code&gt;gen_statem:cast&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem:cast&lt;/code&gt; 에 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f517ea2e94d077cf91eb9739815dfbccb589385" translate="yes" xml:space="preserve">
          <source>Generated by &lt;strong&gt;transition action&lt;/strong&gt;&lt;code&gt; {state_timeout,Time,EventContent} &lt;/code&gt; state timer timing out. Read more in sections &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;전환 작업 &lt;/strong&gt; &lt;code&gt; {state_timeout,Time,EventContent} &lt;/code&gt; 상태 타이머 시간 초과에 의해 생성되었습니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="edcf4742d613f697dd0814a191dc8757bef7baa6" translate="yes" xml:space="preserve">
          <source>Generated by &lt;strong&gt;transition action&lt;/strong&gt;&lt;code&gt; {timeout,Time,EventContent} &lt;/code&gt; (or its short form &lt;code&gt;Time&lt;/code&gt;) event timer timing out. Read more in sections &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Outs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;전환 작업 &lt;/strong&gt; &lt;code&gt; {timeout,Time,EventContent} &lt;/code&gt; (또는 약식 &lt;code&gt;Time&lt;/code&gt; ) 이벤트 타이머 시간 초과에 의해 생성됩니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Outs&lt;/a&gt;&lt;/code&gt; 아웃 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="37751e5e25dfede9207af195b44c7fc89bf3de60" translate="yes" xml:space="preserve">
          <source>Generated by &lt;strong&gt;transition action&lt;/strong&gt;&lt;code&gt; {{timeout,Name},Time,EventContent} &lt;/code&gt; generic timer timing out. Read more in sections &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-Outs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;전환 작업 &lt;/strong&gt; &lt;code&gt; {{timeout,Name},Time,EventContent} &lt;/code&gt; 일반 타이머 시간 초과에 의해 생성되었습니다 . 자세한 내용은 &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-Outs&lt;/a&gt;&lt;/code&gt; 아웃 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebe73c4e99b348c8939372d159ae7f1ee3defaaf" translate="yes" xml:space="preserve">
          <source>Generated by &lt;strong&gt;transition action&lt;/strong&gt;&lt;code&gt;{next_event,internal,EventContent}&lt;/code&gt;. All &lt;strong&gt;event types&lt;/strong&gt; above can also be generated using the &lt;code&gt;next_event&lt;/code&gt; action: &lt;code&gt;{next_event,EventType,EventContent}&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;전환 작업 &lt;/strong&gt; &lt;code&gt;{next_event,internal,EventContent}&lt;/code&gt; 에 의해 생성됩니다 . 위의 모든 &lt;strong&gt;이벤트 유형&lt;/strong&gt; 은 &lt;code&gt;next_event&lt;/code&gt; 작업 : &lt;code&gt;{next_event,EventType,EventContent}&lt;/code&gt; 를 사용하여 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6af5bbcd3b57e31411578bcd53065af74175c3ec" translate="yes" xml:space="preserve">
          <source>Generated by any regular process message sent to the &lt;code&gt;gen_statem&lt;/code&gt; process.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; 프로세스로 전송 된 일반 프로세스 메시지에 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="22b3351f2e950dd3972b5dcdab8855b858b5af45" translate="yes" xml:space="preserve">
          <source>Generated by any regular process message sent to the &lt;code&gt;gen_statem&lt;/code&gt; process. The process message becomes the &lt;code&gt;EventContent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; 프로세스로 전송 된 일반 프로세스 메시지에 의해 생성됩니다 . 프로세스 메시지는 &lt;code&gt;EventContent&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="103a0e9113dff22c9946ce970123f86f4cadcd98" translate="yes" xml:space="preserve">
          <source>Generated by state transition &lt;code&gt;action&lt;/code&gt;&lt;code&gt;{next_event,internal,EventContent}&lt;/code&gt;. All event types above can also be generated using &lt;code&gt;{next_event,EventType,EventContent}&lt;/code&gt;.</source>
          <target state="translated">상태 전이 &lt;code&gt;action&lt;/code&gt; &lt;code&gt;{next_event,internal,EventContent}&lt;/code&gt; 로 생성됩니다 . 위의 모든 이벤트 유형은 &lt;code&gt;{next_event,EventType,EventContent}&lt;/code&gt; 를 사용하여 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c28ee11a6f6d8acfe3563aa18bb88deb79193039" translate="yes" xml:space="preserve">
          <source>Generated by state transition action &lt;code&gt;{state_timeout,Time,EventContent}&lt;/code&gt; state timer timing out.</source>
          <target state="translated">상태 전이 조치 &lt;code&gt;{state_timeout,Time,EventContent}&lt;/code&gt; 상태 타이머 시간 초과에 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="33947e0cdccab0897246bc8326524d255bcdb951" translate="yes" xml:space="preserve">
          <source>Generated by state transition action &lt;code&gt;{timeout,Time,EventContent}&lt;/code&gt; (or its short form &lt;code&gt;Time&lt;/code&gt;) event timer timing out.</source>
          <target state="translated">상태 전이 조치 &lt;code&gt;{timeout,Time,EventContent}&lt;/code&gt; (또는 짧은 형식 &lt;code&gt;Time&lt;/code&gt; ) 이벤트 타이머 시간 종료에 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="bf68bc1e578efd9f745f5654f1bb04fca1b8172d" translate="yes" xml:space="preserve">
          <source>Generated by state transition action &lt;code&gt;{{timeout,Name},Time,EventContent}&lt;/code&gt; generic timer timing out.</source>
          <target state="translated">상태 전이 조치 &lt;code&gt;{{timeout,Name},Time,EventContent}&lt;/code&gt; 일반 타이머 시간 종료에 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="aa8f713c2f5a01ae4307ee4af795dfb48e325231" translate="yes" xml:space="preserve">
          <source>Generated errors</source>
          <target state="translated">생성 된 오류</target>
        </trans-unit>
        <trans-unit id="6304f61f63103783262383abc1d548c2f82d48a8" translate="yes" xml:space="preserve">
          <source>Generated errors are exceptions of classes &lt;code&gt;exit&lt;/code&gt; and &lt;code&gt;throw&lt;/code&gt;.</source>
          <target state="translated">생성 된 오류는 클래스 &lt;code&gt;exit&lt;/code&gt; 및 &lt;code&gt;throw&lt;/code&gt; 의 예외입니다 .</target>
        </trans-unit>
        <trans-unit id="92b4d7f33d10fe15861ba38b574b96dede5d941c" translate="yes" xml:space="preserve">
          <source>Generated scanner exports</source>
          <target state="translated">생성 된 스캐너 내보내기</target>
        </trans-unit>
        <trans-unit id="7438254a72da9498645dc66869c3762dccb6ad36" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;error_msg/1,2&lt;/code&gt; or &lt;code&gt;format&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;error_msg/1,2&lt;/code&gt; 또는 &lt;code&gt;format&lt;/code&gt; 이 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="fed0457b8c7f8c798e150baaaf9878e890b28a95" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;error_report/1&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;error_report/1&lt;/code&gt; 이 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="246e13d3b78a6e22fe007bf469c7f9ec8bf3a25c" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;error_report/2&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;error_report/2&lt;/code&gt; 가 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="70a44a0280ed5f45ae51edf5a56a50ed4bbf5af4" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;info_msg/1,2&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;info_msg/1,2&lt;/code&gt; 가 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e100f93aabf63324af2f993d73f3aa0abac21e8c" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;info_report/1&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;info_report/1&lt;/code&gt; 이 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1918e67feff749d231304bfad32b90063bfc7e7" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;info_report/2&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;info_report/2&lt;/code&gt; 가 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="86388ebe7cb62d7d83d223ea5a1c1cb37a67ed89" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;warning_msg/1,2&lt;/code&gt; is called if warnings are set to be tagged as warnings.</source>
          <target state="translated">경고가 경고로 태그되도록 설정된 경우 &lt;code&gt;warning_msg/1,2&lt;/code&gt; 가 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a346eb9245cc37f5a8400fed3ebb107e24e7f8d" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;warning_report/1&lt;/code&gt; is called if warnings are set to be tagged as warnings.</source>
          <target state="translated">경고가 경고로 태그되도록 설정된 경우 &lt;code&gt;warning_report/1&lt;/code&gt; 이 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="20d441932639eeba1b0954c883bf4b79c603bf3a" translate="yes" xml:space="preserve">
          <source>Generated when &lt;code&gt;warning_report/2&lt;/code&gt; is called if warnings are set to be tagged as warnings.</source>
          <target state="translated">경고가 경고로 태그되도록 설정된 경우 &lt;code&gt;warning_report/2&lt;/code&gt; 가 호출 될 때 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ee2f260fb196096e42d8d4ca710a025ee84e71ff" translate="yes" xml:space="preserve">
          <source>Generates N bytes randomly uniform 0..255, and returns the result in a binary. Uses a cryptographically secure prng seeded and periodically mixed with operating system provided entropy. By default this is the &lt;code&gt;RAND_bytes&lt;/code&gt; method from OpenSSL.</source>
          <target state="translated">무작위로 균일 한 0..255의 N 바이트를 생성하고 결과를 이진수로 반환합니다. 암호화 된 보안 프롱을 사용하고 엔트로피가 제공되는 운영 체제와 주기적으로 혼합됩니다. 기본적으로 이것은 OpenSSL 의 &lt;code&gt;RAND_bytes&lt;/code&gt; 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="ad19e74ad58d2c8fff49b7eac11b9a08a5905c7e" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;.dot&lt;/code&gt; file which contains a description of the DFA in a format which can be viewed with Graphviz, &lt;code&gt;www.graphviz.com&lt;/code&gt;.</source>
          <target state="translated">Graphviz ( &lt;code&gt;www.graphviz.com&lt;/code&gt; )에서 볼 수있는 형식으로 DFA에 대한 설명이 포함 된 &lt;code&gt;.dot&lt;/code&gt; 파일을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ca0ff21c1a0314b3e06fa6f9c3f287d4f7113e52" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;.hrl&lt;/code&gt; file with definitions of Erlang constants for the objects in the MIB. The &lt;code&gt;.hrl&lt;/code&gt; file is called &lt;code&gt;&amp;lt;MibName&amp;gt;.hrl&lt;/code&gt;. The MIB must be compiled, and present in the current directory.</source>
          <target state="translated">MIB의 오브젝트에 대한 Erlang 상수 정의가 있는 &lt;code&gt;.hrl&lt;/code&gt; 파일을 생성합니다 . &lt;code&gt;.hrl&lt;/code&gt; 의 파일이라고 &lt;code&gt;&amp;lt;MibName&amp;gt;.hrl&lt;/code&gt; . MIB는 컴파일되어 현재 디렉토리에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="df62c7d812283cc62e47cb4cdbe8f74f0263b627" translate="yes" xml:space="preserve">
          <source>Generates a boot script &lt;code&gt;Name.script&lt;/code&gt; and its binary version, the boot file &lt;code&gt;Name.boot&lt;/code&gt;, unless the &lt;code&gt;{script_name, ScriptName}&lt;/code&gt; option is given, in which case the names are &lt;code&gt;ScriptName.script&lt;/code&gt; and &lt;code&gt;ScriptName.boot&lt;/code&gt; The boot file specifies which code to be loaded and which applications to be started when the Erlang runtime system is started. See &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{script_name, ScriptName}&lt;/code&gt; 옵션이 제공 되지 않는 경우 부팅 스크립트 &lt;code&gt;Name.script&lt;/code&gt; 및 해당 바이너리 버전 인 &lt;code&gt;Name.boot&lt;/code&gt; 부팅 파일을 생성합니다 .이 경우 이름은 &lt;code&gt;ScriptName.script&lt;/code&gt; 및 &lt;code&gt;ScriptName.boot&lt;/code&gt; 입니다 . 부팅 파일은 로드되고 Erlang 런타임 시스템이 시작될 때 시작될 응용 프로그램. &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d1875f1bac4292cbc2af11c45f521a76e97aa4f" translate="yes" xml:space="preserve">
          <source>Generates a boot script &lt;code&gt;Name.script&lt;/code&gt; and its binary version, the boot file &lt;code&gt;Name.boot&lt;/code&gt;. The boot file specifies which code to be loaded and which applications to be started when the Erlang runtime system is started. See &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">부팅 스크립트 &lt;code&gt;Name.script&lt;/code&gt; 및 이진 버전 인 부팅 파일 &lt;code&gt;Name.boot&lt;/code&gt; 를 생성 합니다. 부팅 파일은 Erlang 런타임 시스템이 시작될 때로드 할 코드와 시작할 응용 프로그램을 지정합니다. &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="422975d3b587c91fe2efb1cb60696e8d04c0c09b" translate="yes" xml:space="preserve">
          <source>Generates a key that can be used as an authentication or privacy key using MD5 och SHA. The key is localized for EngineID.</source>
          <target state="translated">MD5 och SHA를 사용하여 인증 또는 개인 키로 사용할 수있는 키를 생성합니다. 키는 EngineID에 맞게 현지화되었습니다.</target>
        </trans-unit>
        <trans-unit id="55d11bfe6ece5c7f1c862a556cd50ba4ff493936" translate="yes" xml:space="preserve">
          <source>Generates a lexical analyzer from the definition in the input file. The input file has the extension &lt;code&gt;.xrl&lt;/code&gt;. This is added to the filename if it is not given. The resulting module is the Xrl filename without the &lt;code&gt;.xrl&lt;/code&gt; extension.</source>
          <target state="translated">입력 파일의 정의에서 어휘 분석기를 생성합니다. 입력 파일의 확장자는 &lt;code&gt;.xrl&lt;/code&gt; 입니다. 파일 이름을 지정하지 않으면 파일 이름에 추가됩니다. 결과 모듈은 &lt;code&gt;.xrl&lt;/code&gt; 확장자가 없는 Xrl 파일 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="7e1e66b23073da5916988abc561183114b8f8a58" translate="yes" xml:space="preserve">
          <source>Generates a list of tokens representing the abstract form &lt;code&gt;AbsTerm&lt;/code&gt; of an expression. Optionally, &lt;code&gt;MoreTokens&lt;/code&gt; is appended.</source>
          <target state="translated">표현식 의 추상 형식 &lt;code&gt;AbsTerm&lt;/code&gt; 을 나타내는 토큰 목록을 생성합니다 . 선택적으로 &lt;code&gt;MoreTokens&lt;/code&gt; 가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ce7417ff2e92512a2a39d19eafd9ecb8d83be9ce" translate="yes" xml:space="preserve">
          <source>Generates a new keypair. Note that except for Diffie-Hellman the public key is included in the private key structure. See also &lt;code&gt;crypto:generate_key/2&lt;/code&gt;</source>
          <target state="translated">새로운 키 페어를 생성합니다. Diffie-Hellman을 제외하고 공개 키는 개인 키 구조에 포함되어 있습니다. &lt;code&gt;crypto:generate_key/2&lt;/code&gt; 도 참조하십시오</target>
        </trans-unit>
        <trans-unit id="fb459207e361448b067435ed3d4d2142ea424a11" translate="yes" xml:space="preserve">
          <source>Generates a possibly encrypted packet to be sent to the network.</source>
          <target state="translated">네트워크로 전송 될 가능성이있는 암호화 된 패킷을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2b52ba7f3812c7a8f518bc55c543862c6ccf19ed" translate="yes" xml:space="preserve">
          <source>Generates a possibly encrypted request packet to be sent to the network.</source>
          <target state="translated">네트워크로 전송 될 가능성이있는 암호화 된 요청 패킷을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="57841ad28abe0477b1f1bef55c10a38b1fb45319" translate="yes" xml:space="preserve">
          <source>Generates a possibly encrypted response packet to be sent to the network.</source>
          <target state="translated">네트워크로 전송 될 가능성이있는 암호화 된 응답 패킷을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="03374d9b7b176646b850918de0d746107b3c70c2" translate="yes" xml:space="preserve">
          <source>Generates a possibly encrypted response packet to be sent to the network. &lt;code&gt;Type&lt;/code&gt; is the &lt;code&gt;#pdu.type&lt;/code&gt; of the original request.</source>
          <target state="translated">네트워크로 전송 될 가능성이있는 암호화 된 응답 패킷을 생성합니다. &lt;code&gt;Type&lt;/code&gt; 은 원래 요청 의 &lt;code&gt;#pdu.type&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04b3b365911968bdedce185f47157f8d7856b16a" translate="yes" xml:space="preserve">
          <source>Generates a public key of type &lt;code&gt;Type&lt;/code&gt;. See also &lt;code&gt;public_key:generate_key/1&lt;/code&gt;. May raise exception:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 유형 의 공개 키를 생성합니다 . &lt;code&gt;public_key:generate_key/1&lt;/code&gt; 도 참조하십시오 . 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8555bf3396a44fb6e7c7410b6a8c89cce2c65af" translate="yes" xml:space="preserve">
          <source>Generates a public key of type &lt;code&gt;Type&lt;/code&gt;. See also &lt;code&gt;public_key:generate_key/1&lt;/code&gt;. May throw exception an exception of class &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 유형 의 공개 키를 생성합니다 . &lt;code&gt;public_key:generate_key/1&lt;/code&gt; 도 참조하십시오 . 클래스 &lt;code&gt;error&lt;/code&gt; 예외를 예외로 처리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="38b58bc16628ace55c2da50a2ca4ca8a535feaf2" translate="yes" xml:space="preserve">
          <source>Generates a release upgrade file &lt;code&gt;relup&lt;/code&gt; containing instructions for upgrading from or downgrading to one or more previous releases. The instructions are used by &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler&lt;/a&gt;&lt;/code&gt; when installing a new version of a release in runtime.</source>
          <target state="translated">하나 이상의 이전 릴리스에서 업그레이드하거나 그 이후로 업그레이드하기위한 지시 사항이 포함 된 릴리스 업그레이드 파일 &lt;code&gt;relup&lt;/code&gt; 을 생성 합니다. 런타임에 새 버전의 릴리스를 설치할 때 &lt;code&gt;&lt;a href=&quot;release_handler&quot;&gt;release_handler&lt;/a&gt;&lt;/code&gt; 가 지시 사항을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="f0abaac951d1e391844ca56d6e45b837f4353b42" translate="yes" xml:space="preserve">
          <source>Generates a root certificate that can be used in multiple calls to &lt;code&gt;&lt;a href=&quot;#pkix_test_data-1&quot;&gt;pkix_test_data/1&lt;/a&gt;&lt;/code&gt; when you want the same root certificate for several generated certificates.</source>
          <target state="translated">생성 된 여러 인증서에 대해 동일한 루트 인증서를 원하는 경우 &lt;code&gt;&lt;a href=&quot;#pkix_test_data-1&quot;&gt;pkix_test_data/1&lt;/a&gt;&lt;/code&gt; 에 대한 여러 호출에서 사용할 수있는 루트 인증서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4da7ea51c89adab7fc3ae352f3f23a39b5fb5e3c" translate="yes" xml:space="preserve">
          <source>Generates a short hash of an issuer name. The hash is returned as a string containing eight hexadecimal digits.</source>
          <target state="translated">발급자 이름의 짧은 해시를 생성합니다. 해시는 8 개의 16 진수를 포함하는 문자열로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="36218cb889dc7ccdd07a2fe2f9eb3178ca205275" translate="yes" xml:space="preserve">
          <source>Generates a string corresponding to the given token sequence. The string can be re-tokenized to yield the same token list again.</source>
          <target state="translated">주어진 토큰 순서에 해당하는 문자열을 생성합니다. 문자열을 다시 토큰 화하여 동일한 토큰 목록을 다시 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32fa96c10b8819e41a5d07145bcf7839a9a434be" translate="yes" xml:space="preserve">
          <source>Generates an LALR-1 parser. Equivalent to:</source>
          <target state="translated">LALR-1 파서를 생성합니다. 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="846d504aec4e76da38f2a8bd5e5e96b863ceac2d" translate="yes" xml:space="preserve">
          <source>Generates and returns an &lt;code&gt; integer unique on current runtime system instance&lt;/code&gt;. The integer is unique in the sense that this BIF, using the same set of modifiers, does not return the same integer more than once on the current runtime system instance. Each integer value can of course be constructed by other means.</source>
          <target state="translated">&lt;code&gt; integer unique on current runtime system instance&lt;/code&gt; 한 정수를 생성하고 반환 합니다 . 정수는 동일한 수정 자 세트를 사용하는이 BIF가 현재 런타임 시스템 인스턴스에서 동일한 정수를 두 번 이상 반환하지 않는다는 점에서 고유합니다. 물론 각 정수 값은 다른 방법으로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7500a3488e6be0dfa4993e189a57fb44fd55a9b" translate="yes" xml:space="preserve">
          <source>Generates and returns an &lt;code&gt; integer unique on current runtime system instance&lt;/code&gt;. The same as calling &lt;code&gt;&lt;a href=&quot;#unique_integer-1&quot;&gt; erlang:unique_integer([])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt; integer unique on current runtime system instance&lt;/code&gt; 한 정수를 생성하고 반환 합니다 . &lt;code&gt;&lt;a href=&quot;#unique_integer-1&quot;&gt; erlang:unique_integer([])&lt;/a&gt;&lt;/code&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="6b64199a14f2397c8faf913c617e8d68b0b89c4f" translate="yes" xml:space="preserve">
          <source>Generates and returns an &lt;code&gt;integer unique on current runtime system instance&lt;/code&gt;. The integer is unique in the sense that this BIF, using the same set of modifiers, does not return the same integer more than once on the current runtime system instance. Each integer value can of course be constructed by other means.</source>
          <target state="translated">&lt;code&gt;integer unique on current runtime system instance&lt;/code&gt; 한 정수를 생성하고 리턴 합니다 . 정수는 동일한 수정 자 세트를 사용하는이 BIF가 현재 런타임 시스템 인스턴스에서 동일한 정수를 두 번 이상 리턴하지 않는다는 점에서 고유합니다. 물론 각 정수 값은 다른 수단으로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="268fefc2b50ee1a7470399079b4a7845550a5ba3" translate="yes" xml:space="preserve">
          <source>Generates and returns an &lt;code&gt;integer unique on current runtime system instance&lt;/code&gt;. The same as calling &lt;code&gt;&lt;a href=&quot;#unique_integer-1&quot;&gt;erlang:unique_integer([])&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;integer unique on current runtime system instance&lt;/code&gt; 한 정수를 생성하고 리턴 합니다 . &lt;code&gt;&lt;a href=&quot;#unique_integer-1&quot;&gt;erlang:unique_integer([])&lt;/a&gt;&lt;/code&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="196ed1bdf7ad1e9ad89521ee4ff522ae8b746269" translate="yes" xml:space="preserve">
          <source>Generating a Parser</source>
          <target state="translated">파서 생성</target>
        </trans-unit>
        <trans-unit id="478fa38a53e5c6289cfdcc11baf72b378c203455" translate="yes" xml:space="preserve">
          <source>Generational garbage collection aims to increase performance at the expense of memory. This is achieved because only the young, smaller, heap is considered in most garbage collections.</source>
          <target state="translated">세대 별 가비지 수집은 메모리를 희생하여 성능을 높이는 것을 목표로합니다. 이는 대부분의 가비지 콜렉션에서 젊고 더 작은 힙만 고려되기 때문에 달성됩니다.</target>
        </trans-unit>
        <trans-unit id="0e69aba2673902a14ce141c6322df702b93486e2" translate="yes" xml:space="preserve">
          <source>Generators can be combined. For example, the Cartesian product of two lists can be written as follows:</source>
          <target state="translated">발전기를 결합 할 수 있습니다. 예를 들어, 두 목록의 데카르트 곱은 다음과 같이 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9be5894ca760ef2f22e7f2cb9e6e2a6647f444cd" translate="yes" xml:space="preserve">
          <source>Generic Functions for Implementing SNMP Objects in a Database</source>
          <target state="translated">데이터베이스에서 SNMP 객체를 구현하기위한 일반 기능</target>
        </trans-unit>
        <trans-unit id="bdf16c9bb96e5bb1b42095c4533cc66053f22d95" translate="yes" xml:space="preserve">
          <source>Generic OTP application functions</source>
          <target state="translated">일반 OTP 응용 기능</target>
        </trans-unit>
        <trans-unit id="ab73920daef432e4f4be5771444d086a447d5633" translate="yes" xml:space="preserve">
          <source>Generic event handling behavior.</source>
          <target state="translated">일반 이벤트 처리 동작.</target>
        </trans-unit>
        <trans-unit id="ad27ebb314d189be0c078de69d33316b9114e603" translate="yes" xml:space="preserve">
          <source>Generic instructions have typed operands. Here are a few examples of operands for &lt;code&gt;move/2&lt;/code&gt;:</source>
          <target state="translated">일반 명령어에는 유형이 지정된 피연산자가 있습니다. 다음은 &lt;code&gt;move/2&lt;/code&gt; 에 대한 피연산자의 몇 가지 예입니다 .</target>
        </trans-unit>
        <trans-unit id="baf0bb986fc2f5ae8e7d4ff5cea8c3a25129e3a9" translate="yes" xml:space="preserve">
          <source>Generic server behavior.</source>
          <target state="translated">일반적인 서버 동작.</target>
        </trans-unit>
        <trans-unit id="6385e8e3bcfe288120ffc1f47f82d34e0905942a" translate="yes" xml:space="preserve">
          <source>Generic state machine behavior.</source>
          <target state="translated">일반 상태 머신 동작.</target>
        </trans-unit>
        <trans-unit id="31b68dd5b8c5ae479fb0219039ae7c6bf8a6aa4b" translate="yes" xml:space="preserve">
          <source>Generic supervisor behavior.</source>
          <target state="translated">일반 감독자 행동.</target>
        </trans-unit>
        <trans-unit id="40031ae8fde0b0202a13ef8fc34c0f8901eef1ef" translate="yes" xml:space="preserve">
          <source>Generic supervisor bridge behavior.</source>
          <target state="translated">일반 감독자 브리지 동작.</target>
        </trans-unit>
        <trans-unit id="aca441ddd2e8d07643b87c1b24a828fa5b4b3e42" translate="yes" xml:space="preserve">
          <source>Georgian</source>
          <target state="translated">Georgian</target>
        </trans-unit>
        <trans-unit id="e962dc1b1a9c3135d9b32bfc4e47eb00af9da138" translate="yes" xml:space="preserve">
          <source>Get All Registered Names from EPMD</source>
          <target state="translated">EPMD에서 모든 등록 된 이름 가져 오기</target>
        </trans-unit>
        <trans-unit id="d056f823a0b907666093c208ef977324b7d77bd6" translate="yes" xml:space="preserve">
          <source>Get Operation</source>
          <target state="translated">작업 받기</target>
        </trans-unit>
        <trans-unit id="9195705bac6b7ff9a481d4be2e84fa47709e055a" translate="yes" xml:space="preserve">
          <source>Get a list of all registered agents or all agents registered by a specific user.</source>
          <target state="translated">등록 된 모든 에이전트 또는 특정 사용자가 등록한 모든 에이전트의 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="640b0b98b73b42a2d6a9b30dd7091c14c1631e7e" translate="yes" xml:space="preserve">
          <source>Get a list of all registered usm users with engine-id &lt;code&gt;EngineID&lt;/code&gt;.</source>
          <target state="translated">engine-id &lt;code&gt;EngineID&lt;/code&gt; 가있는 등록 된 모든 usm 사용자 목록을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="b04131ecf450115268a3493bdadb31575d6e7732" translate="yes" xml:space="preserve">
          <source>Get a list of all registered usm users.</source>
          <target state="translated">등록 된 모든 usm 사용자 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f3f0b1a2f6c8afa05abd2447df75a0aeeb3aa70d" translate="yes" xml:space="preserve">
          <source>Get a list of all the mib's loaded into the manager.</source>
          <target state="translated">관리자에게로드 된 모든 mib 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ee2cd4fc2dacac3512e20b32aec886924d3392b3" translate="yes" xml:space="preserve">
          <source>Get a list of the identities of all registered users.</source>
          <target state="translated">등록 된 모든 사용자의 신원 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c736dcf778613491c1839dc6edbde7655436d1b4" translate="yes" xml:space="preserve">
          <source>Get a reference to an already loaded engine with &lt;code&gt;EngineId&lt;/code&gt;. An error tuple is returned if the engine can't be unloaded.</source>
          <target state="translated">&lt;code&gt;EngineId&lt;/code&gt; 를 사용하여 이미로드 된 엔진에 대한 참조를 가져옵니다 . 엔진을 언로드 할 수없는 경우 오류 튜플이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="42c8a4beaed65b58ccb1aaf755584baf21b32177" translate="yes" xml:space="preserve">
          <source>Get a specific table info item or, if &lt;code&gt;Item&lt;/code&gt; has the value &lt;code&gt;all&lt;/code&gt;, a two tuple list (property list) is instead returned with all the items and their respctive values of the given table.</source>
          <target state="translated">특정 테이블 정보 항목을 가져 오거나 &lt;code&gt;Item&lt;/code&gt; 값이 &lt;code&gt;all&lt;/code&gt; 인 경우 대신 두 테이블 목록 (속성 목록)이 모든 항목과 지정된 테이블의 해당 값과 함께 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ba5755314d3c3553871c6d977e3d3f1be20a8148" translate="yes" xml:space="preserve">
          <source>Get a string from warnings as returned by &lt;code&gt;&lt;a href=&quot;#run-1&quot;&gt;run/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#run-1&quot;&gt;run/1&lt;/a&gt;&lt;/code&gt; 에서 반환 한 경고에서 문자열을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6004c1fa6d5903fe52cdc4e76c970e2913847f34" translate="yes" xml:space="preserve">
          <source>Get an option on a socket.</source>
          <target state="translated">소켓에 대한 옵션을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="7f5f14b2bb4700816fccb69b951d45a4a20d4d9f" translate="yes" xml:space="preserve">
          <source>Get and install NSIS 2.01 or later (up to 2.46 tried and working)</source>
          <target state="translated">NSIS 2.01 이상 설치 및 설치 (최대 2.46 시도 및 작동)</target>
        </trans-unit>
        <trans-unit id="89b5730a895e07f4673bc0a58387876778e539fa" translate="yes" xml:space="preserve">
          <source>Get and install Sun's JDK 1.6.0 or later</source>
          <target state="translated">Sun의 JDK 1.6.0 이상 설치 및 설치</target>
        </trans-unit>
        <trans-unit id="e54e794c32224765acef3d1c2c71f3efa8f1bbfd" translate="yes" xml:space="preserve">
          <source>Get and install complete Cygwin (latest), complete MinGW with MSYS or complete MSYS2</source>
          <target state="translated">완전한 Cygwin (최신), MSYS를 사용한 MinGW 또는 MSYS2를 완료하여 설치</target>
        </trans-unit>
        <trans-unit id="fd4e3eabd514b1debbd732efd94244879ca89dab" translate="yes" xml:space="preserve">
          <source>Get and install complete WSL environment</source>
          <target state="translated">완전한 WSL 환경 가져 오기 및 설치</target>
        </trans-unit>
        <trans-unit id="e8b3e0c38d44801322b05f57c5750a9a913aacf8" translate="yes" xml:space="preserve">
          <source>Get and install windows JDK-8</source>
          <target state="translated">Windows JDK-8 다운로드 및 설치</target>
        </trans-unit>
        <trans-unit id="1e8c878911ae5b015fdf651ca4bbf26def80e91c" translate="yes" xml:space="preserve">
          <source>Get and install windows NSIS 3.05 or later (3.05 tried and working)</source>
          <target state="translated">Windows NSIS 3.05 이상 다운로드 및 설치 (3.05 시도 및 작동)</target>
        </trans-unit>
        <trans-unit id="493d76f7f2ee88f0e9b6c49de64048ec6299274e" translate="yes" xml:space="preserve">
          <source>Get contents of a boot script file. See &lt;code&gt;script(4)&lt;/code&gt; for more details.</source>
          <target state="translated">부팅 스크립트 파일의 내용을 가져옵니다. 자세한 내용은 &lt;code&gt;script(4)&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="316a2796cd4f9dfbfb6bb002c22e90ab51580fc0" translate="yes" xml:space="preserve">
          <source>Get contents of a release file. See &lt;code&gt;rel(4)&lt;/code&gt; for more details.</source>
          <target state="translated">릴리스 파일의 내용을 가져옵니다. 자세한 내용은 &lt;code&gt;rel(4)&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="856c2d8d28b39917d9df57e7997e5b0a9cdd75c0" translate="yes" xml:space="preserve">
          <source>Get distribution channel data from the local node that is to be passed to the remote node. The distribution channel is identified by &lt;code&gt;DHandle&lt;/code&gt;. If no data is available, the atom &lt;code&gt;none&lt;/code&gt; is returned. One can request to be informed by a message when more data is available by calling &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data_notification-1&quot;&gt;erlang:dist_ctrl_get_data_notification(DHandle)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">원격 노드로 전달 될 로컬 노드에서 분배 채널 데이터를 가져옵니다. 배포 채널은 &lt;code&gt;DHandle&lt;/code&gt; 로 식별됩니다 . 사용 가능한 데이터가 없으면 atom &lt;code&gt;none&lt;/code&gt; 이 반환됩니다. &lt;code&gt;&lt;a href=&quot;erlang#dist_ctrl_get_data_notification-1&quot;&gt;erlang:dist_ctrl_get_data_notification(DHandle)&lt;/a&gt;&lt;/code&gt; 을 호출하여 더 많은 데이터를 사용할 수있는 경우 메시지를 통해 정보를 요청할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b65e9631a0948d4f42224ba3ae29bfdcd5350e7c" translate="yes" xml:space="preserve">
          <source>Get interface addresses.</source>
          <target state="translated">인터페이스 주소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="503cba4748614d202a27ddca4430ef26d95db273" translate="yes" xml:space="preserve">
          <source>Get miscellaneous info about the socket.</source>
          <target state="translated">소켓에 대한 기타 정보를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="e03fb2fcb0f989ab5d58fa070d938a3c6fa4da13" translate="yes" xml:space="preserve">
          <source>Get network interface names and indexes.</source>
          <target state="translated">네트워크 인터페이스 이름과 색인을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4efa55918241de6745f3ea5ad2044a159778d8e9" translate="yes" xml:space="preserve">
          <source>Get one or more options for the distribution socket connected to &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 에 연결된 분배 소켓에 대한 하나 이상의 옵션을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f4b18758b000b3e1de8e817965004906858b20c8" translate="yes" xml:space="preserve">
          <source>Get reltool configuration. Normally, only the explicit configuration parameters with values that differ from their defaults are interesting. But the builtin default values can be returned by setting &lt;code&gt;InclDefaults&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. The derived configuration can be returned by setting &lt;code&gt;InclDerived&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">reltool 구성을 가져옵니다. 일반적으로 기본값과 다른 값을 가진 명시 적 구성 매개 변수 만 흥미 롭습니다. 그러나 &lt;code&gt;InclDefaults&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하면 내장 된 기본값을 반환 할 수 있습니다 . &lt;code&gt;InclDerived&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 파생 된 구성을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97c9c139066a5de0aad43e27577179d02b140489" translate="yes" xml:space="preserve">
          <source>Get reltool configuration. Shorthand for &lt;code&gt;reltool:get_config(Server,false,false)&lt;/code&gt;.</source>
          <target state="translated">reltool 구성을 가져옵니다. 속기에 대한 &lt;code&gt;reltool:get_config(Server,false,false)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a3370628f49f284972b00bdc13cad5204bbbb03" translate="yes" xml:space="preserve">
          <source>Get status about the configuration</source>
          <target state="translated">구성에 대한 상태 얻기</target>
        </trans-unit>
        <trans-unit id="74aaf126ffa0281285b7352e52fea99f387bf685" translate="yes" xml:space="preserve">
          <source>Get tcp socket option values of the tcp-socket below an ssh connection.</source>
          <target state="translated">ssh 연결 아래에서 tcp-socket의 tcp 소켓 옵션 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4e738c317a229a3ecd31cb4bd2d93f6083908688" translate="yes" xml:space="preserve">
          <source>Get the Distribution Port of Another Node</source>
          <target state="translated">다른 노드의 배포 포트 가져 오기</target>
        </trans-unit>
        <trans-unit id="04589953eeaffedb8140078910133b12237025f8" translate="yes" xml:space="preserve">
          <source>Get the Erlang Debugger started automatically.</source>
          <target state="translated">Erlang 디버거를 자동으로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="f2bb8a824ae8cd7ab4aa1c9d00ff4f2b51e3dce3" translate="yes" xml:space="preserve">
          <source>Get the Erlang source distribution (from &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt;) and unpack with &lt;code&gt;tar&lt;/code&gt; to the windows disk for example to: /mnt/c/src/</source>
          <target state="translated">Erlang 소스 배포 ( &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt; 에서 )를 가져오고 &lt;code&gt;tar&lt;/code&gt; 와 함께 Windows 디스크에 압축을 풉니 다 ( 예 : / mnt / c / src /).</target>
        </trans-unit>
        <trans-unit id="c3548b3564a499c27cfc05660402530e97978ac0" translate="yes" xml:space="preserve">
          <source>Get the Erlang source distribution (from &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt;) and unpack with Cygwin's/MSYS's/MSYS2's &lt;code&gt;tar&lt;/code&gt;.</source>
          <target state="translated">Erlang 소스 배포본 ( &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt; )을 가져와 Cygwin 's / MSYS 's / MSYS2 's &lt;code&gt;tar&lt;/code&gt; 로 압축을 풉니 다 .</target>
        </trans-unit>
        <trans-unit id="f01cb21609b8338338a0e0b0681ae8a48fd9d025" translate="yes" xml:space="preserve">
          <source>Get the Erlang source distribution (from &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt;). The same as for Unix platforms. Preferably use tar from within Cygwin, MSYS or MSYS2 to unpack the source tar.gz (&lt;code&gt;tar zxf otp_src_21.tar.gz&lt;/code&gt;).</source>
          <target state="translated">Erlang 소스 배포판을 구 &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt; ( http://www.erlang.org/download.html ). 유닉스 플랫폼과 동일합니다. Cygwin, MSYS 또는 MSYS2에서 tar를 사용하여 소스 tar.gz를 압축 해제하십시오 ( &lt;code&gt;tar zxf otp_src_21.tar.gz&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b511f8be41c55ce9b1a507882b74ed2aa5127e12" translate="yes" xml:space="preserve">
          <source>Get the Erlang source distribution (from &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt;). The same as for Unix platforms. Preferably use tar to unpack the source tar.gz (&lt;code&gt;tar zxf otp_src_23.tar.gz&lt;/code&gt;) to somewhere on the windows disk, &lt;code&gt;/mnt/c/path/to/otp_src&lt;/code&gt;</source>
          <target state="translated">Erlang 소스 배포 ( &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download.html&quot;&gt;http://www.erlang.org/download.html&lt;/a&gt;&lt;/code&gt; 에서 )를 가져옵니다 . Unix 플랫폼과 동일합니다. 가급적이면 tar를 사용하여 소스 tar.gz ( &lt;code&gt;tar zxf otp_src_23.tar.gz&lt;/code&gt; )를 Windows 디스크, &lt;code&gt;/mnt/c/path/to/otp_src&lt;/code&gt; 어딘가에 압축을 풉니 다.</target>
        </trans-unit>
        <trans-unit id="447be6983f16691011440760f4004601c60af400" translate="yes" xml:space="preserve">
          <source>Get the I/O queue as a pointer to an array of &lt;code&gt;SysIOVec&lt;/code&gt;s. It also returns the number of elements in &lt;code&gt;iovlen&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SysIOVec&lt;/code&gt; 배열에 대한 포인터로 I / O 큐를 가져옵니다 . 또한 &lt;code&gt;iovlen&lt;/code&gt; 의 요소 수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="baebc8812d533996da815505e87a41aec712f7e1" translate="yes" xml:space="preserve">
          <source>Get the full path to the (compiled) mib-file.</source>
          <target state="translated">(컴파일 된) mib 파일의 전체 경로를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d209d8a7bba55a3056e04b1cf5ac82a91241c11c" translate="yes" xml:space="preserve">
          <source>Get the head of the IO Queue as a binary term.</source>
          <target state="translated">IO 큐의 헤드를 이진 용어로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="060c39116371929c4a5e376fe4e231ff64413bde" translate="yes" xml:space="preserve">
          <source>Get the installer from the website and use it to install Cygwin. Be sure to have fair privileges. If you're on an NT domain you should consider running &lt;code&gt;mkpasswd -d&lt;/code&gt; and &lt;code&gt;mkgroup -d&lt;/code&gt; after the installation to get the user databases correct. See their respective manual pages.</source>
          <target state="translated">웹 사이트에서 설치 프로그램을 가져 와서 Cygwin을 설치하십시오. 공정한 특권을 가져야합니다. NT 도메인에있는 경우 설치 후 &lt;code&gt;mkpasswd -d&lt;/code&gt; 및 &lt;code&gt;mkgroup -d&lt;/code&gt; 를 실행 하여 사용자 데이터베이스를 올바르게 고려해야 합니다. 해당 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="967a2c970e8c2158b43e2cb2ea49793a436b100c" translate="yes" xml:space="preserve">
          <source>Get the request-id, context, community and address of the request currently being processed by the agent.</source>
          <target state="translated">에이전트가 현재 처리중인 요청의 요청 ID, 컨텍스트, 커뮤니티 및 주소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6a37d5c8e236c8555ae3433956ad3f27ce808748" translate="yes" xml:space="preserve">
          <source>Get the size of &lt;code&gt;q&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;q&lt;/code&gt; 의 크기를 구하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3315394b23b17688f79ec98ea5a822c4e605d85" translate="yes" xml:space="preserve">
          <source>Get the validation callback. If the callback is cleared, &lt;code&gt;none&lt;/code&gt; will be returned.</source>
          <target state="translated">유효성 검사 콜백을 가져옵니다. 콜백이 지워지면 &lt;code&gt;none&lt;/code&gt; 반환 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fdda97b4a40d658b21777ac802ed42f3200f6c4b" translate="yes" xml:space="preserve">
          <source>Get, build and install OpenSSL 0.9.8r or later (up to 1.0.2d tried &amp;amp; working) with static libs.</source>
          <target state="translated">정적 라이브러리를 사용하여 OpenSSL 0.9.8r 이상 (최대 1.0.2d 시도 및 작동)을 가져오고 빌드하고 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="741650786016b446e889e48a4e769eb32c113754" translate="yes" xml:space="preserve">
          <source>Get, build and install OpenSSL v1.1.1d or later (up to 1.1.1d tried &amp;amp; working) with static libs.</source>
          <target state="translated">정적 라이브러리를 사용하여 OpenSSL v1.1.1d 이상 (최대 1.1.1d 시도 및 작동)을 가져오고 빌드하고 설치합니다.</target>
        </trans-unit>
        <trans-unit id="6db5ba7247142c4ba52219230171036b2d8f0cd5" translate="yes" xml:space="preserve">
          <source>Get, build and install wxWidgets-3.1.3 or later (up to 3.1.3 tried &amp;amp; working) with static libs.</source>
          <target state="translated">정적 라이브러리로 wxWidgets-3.1.3 이상 (최대 3.1.3 시도 및 작동)을 가져오고 빌드하고 설치합니다.</target>
        </trans-unit>
        <trans-unit id="0f51999ee5140b082ce6269649ca9cf422a3c4bb" translate="yes" xml:space="preserve">
          <source>Get: Only after the socket has been connected</source>
          <target state="translated">Get : 소켓이 연결된 후에 만</target>
        </trans-unit>
        <trans-unit id="d611a26a990a0b09006bd41a9709a2c64f9918c5" translate="yes" xml:space="preserve">
          <source>GetNext Example</source>
          <target state="translated">GetNext 예</target>
        </trans-unit>
        <trans-unit id="bbcea2fb6f405de0c3086ae852ba19a268ab2bf5" translate="yes" xml:space="preserve">
          <source>GetNext Operation</source>
          <target state="translated">GetNext 작업</target>
        </trans-unit>
        <trans-unit id="8f8bee95e077aaca69dd5eb6fa3cfe38c1be0638" translate="yes" xml:space="preserve">
          <source>Gets &lt;code&gt;net_ticktime&lt;/code&gt; (see &lt;code&gt;kernel(6)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;net_ticktime&lt;/code&gt; 을 가져 옵니다 ( &lt;code&gt;kernel(6)&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="583c472bb74e99d6011084604173b1ce662ed072" translate="yes" xml:space="preserve">
          <source>Gets a list of all test specification terms used to configure and run this test.</source>
          <target state="translated">이 테스트를 구성하고 실행하는 데 사용되는 모든 테스트 사양 용어 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="89c16a798989b09bdc8b0f54a77a0d7639480175" translate="yes" xml:space="preserve">
          <source>Gets a reference to the &lt;code&gt;Common Test&lt;/code&gt; event manager. The reference can be used to, for example, add a user-specific event handler while tests are running.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; 이벤트 관리자에 대한 참조를 가져옵니다 . 예를 들어, 테스트가 실행되는 동안 사용자 특정 이벤트 핸들러를 추가하는 데 참조를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea634afc0f261ea22bf01d18d8a19246f8afe306" translate="yes" xml:space="preserve">
          <source>Gets a reference to the &lt;code&gt;Common Test&lt;/code&gt; master event manager. The reference can be used to, for example, add a user-specific event handler while tests are running.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; 마스터 이벤트 관리자에 대한 참조를 가져옵니다 . 예를 들어, 테스트가 실행되는 동안 사용자 특정 이벤트 핸들러를 추가하는 데 참조를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d93d1aacda994f652a83c126f344e39d8ac9ad4" translate="yes" xml:space="preserve">
          <source>Gets all breakpoints, or all breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 의 모든 중단 점 또는 모든 중단 점을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="a7e194c15a8a3a84637f2a65e0757d4aa12cc0e4" translate="yes" xml:space="preserve">
          <source>Gets all data received by the Telnet client since the last command was sent. Only newline-terminated strings are returned. If the last received string has not yet been terminated, the connection can be polled automatically until the string is complete.</source>
          <target state="translated">마지막 명령이 전송 된 후 Telnet 클라이언트가 수신 한 모든 데이터를 가져옵니다. 줄 바꿈으로 끝나는 문자열 만 반환됩니다. 마지막으로 수신 한 문자열이 아직 종료되지 않은 경우 문자열이 완료 될 때까지 연결을 자동으로 폴링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85b637ff770762faba2572a6679e684786564e1e" translate="yes" xml:space="preserve">
          <source>Gets and sets how to save call frames in the stack. Saving call frames makes it possible to inspect the call chain of a process, and is also used to emulate the stack trace if an error (an exception of class error) occurs. The following flags can be specified:</source>
          <target state="translated">스택에 통화 프레임을 저장하는 방법을 가져오고 설정합니다. 호출 프레임을 저장하면 프로세스의 호출 체인을 검사 할 수 있으며 오류 (클래스 오류 제외)가 발생할 경우 스택 추적을 에뮬레이션하는 데에도 사용됩니다. 다음과 같은 플래그를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ae25ab1d48d49a274aa7622799189868fb723a6" translate="yes" xml:space="preserve">
          <source>Gets and sets when and how to attach automatically to a process executing code in interpreted modules. &lt;code&gt;false&lt;/code&gt; means never attach automatically, this is the default. Otherwise automatic attach is defined by a list of flags and a function. The following flags can be specified:</source>
          <target state="translated">해석 된 모듈에서 코드를 실행하는 프로세스에 자동으로 첨부 할시기와 방법을 가져오고 설정합니다. &lt;code&gt;false&lt;/code&gt; 는 자동으로 연결되지 않음을 의미하며 이것이 기본값입니다. 그렇지 않으면 자동 연결은 플래그 목록과 함수로 정의됩니다. 다음과 같은 플래그를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69d09b0c13918059727dad45200adfcb45e3e38c" translate="yes" xml:space="preserve">
          <source>Gets configuration data.</source>
          <target state="translated">구성 데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3b3b6db1782fd96f345a74f1d3549826e70a5124" translate="yes" xml:space="preserve">
          <source>Gets creation number of a listen socket, which is used to dig out the number stored in the lock file to differentiate between invocations of Erlang nodes with the same name.</source>
          <target state="translated">동일한 이름의 Erlang 노드 호출을 구별하기 위해 잠금 파일에 저장된 번호를 파기하는 데 사용되는 청취 소켓의 작성 번호를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f71bad6aa5ee68ee6324ac78c4e38dbf19122205" translate="yes" xml:space="preserve">
          <source>Gets data from Telnet and waits for the expected pattern.</source>
          <target state="translated">Telnet에서 데이터를 가져오고 예상 패턴을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="ecad260ceb302e641cd91423d07332533c9a1c52" translate="yes" xml:space="preserve">
          <source>Gets data.</source>
          <target state="translated">데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5e38d96b6aa822d3e0908696a9336c9f1c193294" translate="yes" xml:space="preserve">
          <source>Gets identification number for listen port. This identification number is used in an accept command to the driver. It is returned as a big-endian 32-bit integer, which is the file identifier for the listen socket.</source>
          <target state="translated">청취 포트의 식별 번호를 가져옵니다. 이 식별 번호는 드라이버의 accept 명령에 사용됩니다. 청취 소켓의 파일 식별자 인 빅 엔디안 32 비트 정수로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="823f8df2637a191abc2de928f58e11ad5952c005" translate="yes" xml:space="preserve">
          <source>Gets information about all processes executing interpreted code.</source>
          <target state="translated">해석 된 코드를 실행하는 모든 프로세스에 대한 정보를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e7dde451b6722cad5a900ffacf620fb650e53659" translate="yes" xml:space="preserve">
          <source>Gets key and value terms at the current map iterator position.</source>
          <target state="translated">현재지도 반복기 위치에서 키 및 값 용어를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a8cd446726a77fafbe6018d9e729bfffe1ecc04c" translate="yes" xml:space="preserve">
          <source>Gets one or more options for a socket. For a list of available options, see &lt;code&gt;&lt;a href=&quot;#setopts-2&quot;&gt;setopts/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">소켓에 대한 하나 이상의 옵션을 가져옵니다. 사용 가능한 옵션 목록은 &lt;code&gt;&lt;a href=&quot;#setopts-2&quot;&gt;setopts/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f11b04c2c8d63e3c32c9c80aa18c21376263b74" translate="yes" xml:space="preserve">
          <source>Gets one or more options for a socket. For a list of available options, see &lt;code&gt;&lt;a href=&quot;#setopts-2&quot;&gt;setopts/2&lt;/a&gt;&lt;/code&gt;. See also the description for the type &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; gen_tcp:pktoptions_value() &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">소켓에 대한 하나 이상의 옵션을 가져옵니다. 사용 가능한 옵션 목록은 &lt;code&gt;&lt;a href=&quot;#setopts-2&quot;&gt;setopts/2&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;gen_tcp#type-pktoptions_value&quot;&gt; gen_tcp:pktoptions_value() &lt;/a&gt;&lt;/code&gt; 유형에 대한 설명도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f806a893b727334cb3cc6527d6110344f616a7a" translate="yes" xml:space="preserve">
          <source>Gets one or more statistic options for a socket.</source>
          <target state="translated">소켓에 대한 하나 이상의 통계 옵션을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="dc33095b51657cfa1cab71146bc0f2e9dff59db0" translate="yes" xml:space="preserve">
          <source>Gets one or more statistic options for the underlying TCP socket.</source>
          <target state="translated">기본 TCP 소켓에 대한 하나 이상의 통계 옵션을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c1dec32fa3291d50d4b9bd0369b422b9847354be" translate="yes" xml:space="preserve">
          <source>Gets statistics, which is the number of bytes received, the number of bytes sent, and the number of bytes pending in the output queue. This data is used when the distribution checks that a connection is alive (ticking). The statistics is returned as three 32-bit big-endian integers.</source>
          <target state="translated">수신 된 바이트 수, 전송 된 바이트 수 및 출력 큐에서 보류중인 바이트 수인 통계를 가져옵니다. 이 데이터는 분배에서 연결이 활성 상태인지 확인 (틱) 할 때 사용됩니다. 통계는 3 개의 32 비트 빅 엔디안 정수로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a35a7071ccf5118e2736553fe30f55bc424cea74" translate="yes" xml:space="preserve">
          <source>Gets the byte size of resource object &lt;code&gt;obj&lt;/code&gt; obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt; enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에서 얻은 자원 객체 &lt;code&gt;obj&lt;/code&gt; 의 바이트 크기를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="173939a752af31ffc4e8d8622995aa859cd9ba28" translate="yes" xml:space="preserve">
          <source>Gets the byte size of resource object &lt;code&gt;obj&lt;/code&gt; obtained by &lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_alloc_resource&quot;&gt;enif_alloc_resource&lt;/a&gt;&lt;/code&gt; 에 의해 확보 된 자원 오브젝트 &lt;code&gt;obj&lt;/code&gt; 의 바이트 크기를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="c1d8405f9e2f6276bd2b6fb5ef072d5f6fc7f493" translate="yes" xml:space="preserve">
          <source>Gets the current calculated CRC checksum.</source>
          <target state="translated">현재 계산 된 CRC 체크섬을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b931c30a9d4c1f60f2b0abc876c6f8126f350439" translate="yes" xml:space="preserve">
          <source>Gets the data associated with a debug option. &lt;code&gt;Default&lt;/code&gt; is returned if &lt;code&gt;Item&lt;/code&gt; is not found. Can be used by the process to retrieve debug data for printing before it terminates.</source>
          <target state="translated">디버그 옵션과 관련된 데이터를 가져옵니다. &lt;code&gt;Item&lt;/code&gt; 을 찾을 수 없으면 &lt;code&gt;Default&lt;/code&gt; 이 반환됩니다 . 프로세스가 종료 전에 인쇄 할 디버그 데이터를 검색하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce4381436401c9fe92bbc236fd5301c462dc1220" translate="yes" xml:space="preserve">
          <source>Gets the identity of the boot script used to boot the system. &lt;code&gt;Id&lt;/code&gt; can be any Erlang term. In the delivered boot scripts, &lt;code&gt;Id&lt;/code&gt; is &lt;code&gt;{Name, Vsn}&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Vsn&lt;/code&gt; are strings.</source>
          <target state="translated">시스템을 부팅하는 데 사용되는 부팅 스크립트의 ID를 가져옵니다. &lt;code&gt;Id&lt;/code&gt; 는 Erlang 용어 일 수 있습니다. 제공된 부팅 스크립트에서 &lt;code&gt;Id&lt;/code&gt; 는 &lt;code&gt;{Name, Vsn}&lt;/code&gt; 입니다. &lt;code&gt;Name&lt;/code&gt; 과 &lt;code&gt;Vsn&lt;/code&gt; 은 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="702e2b4a0d2d030f6a8d731983cc9aec9571bd82" translate="yes" xml:space="preserve">
          <source>Gets the index types of &lt;code&gt;Name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 의 색인 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="dadf7e0b74efe5ff56301a05ecded81e0ab4c8f6" translate="yes" xml:space="preserve">
          <source>Gets the item with key &lt;code&gt;KeyOid&lt;/code&gt;. Could be used from within an SNMP instrumentation function.</source>
          <target state="translated">&lt;code&gt;KeyOid&lt;/code&gt; 키를 가진 항목을 가져 옵니다 . SNMP 계측 기능 내에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb4818efbf504f3ec3947fed162d384d445fa46d" translate="yes" xml:space="preserve">
          <source>Gets the last item in the index structure.</source>
          <target state="translated">인덱스 구조의 마지막 항목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9335e006f9ecd9c25f7dd865ee344b1e9e62fb99" translate="yes" xml:space="preserve">
          <source>Gets the next item in the SNMP lexicographic ordering, after &lt;code&gt;KeyOid&lt;/code&gt; in the index structure. &lt;code&gt;KeyOid&lt;/code&gt; does not have to refer to an existing item in the index.</source>
          <target state="translated">인덱스 구조에서 &lt;code&gt;KeyOid&lt;/code&gt; 다음에 SNMP 사전 순서의 다음 항목을 가져옵니다 . &lt;code&gt;KeyOid&lt;/code&gt; 는 색인의 기존 항목을 참조하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="853fcc81499b6d2611ce672cb8162da2513cf149" translate="yes" xml:space="preserve">
          <source>Gets the number of entries in the array up until the last non-default-valued entry. That is, returns &lt;code&gt;I+1&lt;/code&gt; if &lt;code&gt;I&lt;/code&gt; is the last non-default-valued entry in the array, or zero if no such entry exists.</source>
          <target state="translated">기본값이 아닌 마지막 항목까지 배열의 항목 수를 가져옵니다. 즉, 반환 &lt;code&gt;I+1&lt;/code&gt; 만약 &lt;code&gt;I&lt;/code&gt; 마지막으로 기본이 아닌 값 배열의 항목, 또는 제로 그러한 항목이 존재하지 않는 경우이다.</target>
        </trans-unit>
        <trans-unit id="27f4b09e49befa52ef0cd2b8b65ff2ade3ac7038" translate="yes" xml:space="preserve">
          <source>Gets the number of entries in the array. Entries are numbered from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;size(Array)-1&lt;/code&gt;. Hence, this is also the index of the first entry that is guaranteed to not have been previously set.</source>
          <target state="translated">배열의 항목 수를 가져옵니다. 항목 번호는 &lt;code&gt;0&lt;/code&gt; 부터 &lt;code&gt;size(Array)-1&lt;/code&gt; 입니다. 따라서 이는 이전에 설정되지 않았 음을 보장하는 첫 번째 항목의 색인이기도합니다.</target>
        </trans-unit>
        <trans-unit id="e742037cddd9d14b141ef8367d4920444ccba03d" translate="yes" xml:space="preserve">
          <source>Gets the path set in the loader. The path is set by the &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; process according to information found in the start script.</source>
          <target state="translated">로더에 설정된 경로를 가져옵니다. 경로는 시작 스크립트에서 찾은 정보에 따라 &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; 프로세스에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7a1d1a5f1f4817df4a2722853b149ecb3c5676f5" translate="yes" xml:space="preserve">
          <source>Gets the size of the intermediate buffer.</source>
          <target state="translated">중간 버퍼의 크기를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ecaa48a0a56d9339e54bb6a0add8f6f945826e7a" translate="yes" xml:space="preserve">
          <source>Gets the state of the process.</source>
          <target state="translated">프로세스 상태를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="711c860a6e82424068f190b00970484dc5135435" translate="yes" xml:space="preserve">
          <source>Gets the status of the process.</source>
          <target state="translated">프로세스 상태를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9a68efff5d7044bf08b799fc8bcb8b6492b90c72" translate="yes" xml:space="preserve">
          <source>Gets the system up time in hundredth of a second.</source>
          <target state="translated">시스템 가동 시간을 100 분의 1 초로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bd1c8454deba9c8b3f728fa0b561966f6fc6c272" translate="yes" xml:space="preserve">
          <source>Gets the temporary reboot command. If the command is cleared, the empty string is returned.</source>
          <target state="translated">임시 재부팅 명령을 가져옵니다. 명령이 지워지면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5d5a84efcba378f341cb2bc657767b0d92208b8f" translate="yes" xml:space="preserve">
          <source>Gets the value associated with &lt;code&gt;key&lt;/code&gt; in the registry. The value must be a binary (pointer) type.</source>
          <target state="translated">레지스트리의 &lt;code&gt;key&lt;/code&gt; 와 관련된 값을 가져옵니다 . 값은 이진 (포인터) 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="f31decd1bbc108caba1718eb525228cde1687de2" translate="yes" xml:space="preserve">
          <source>Gets the value associated with &lt;code&gt;key&lt;/code&gt; in the registry. The value must be a floating point type.</source>
          <target state="translated">레지스트리의 &lt;code&gt;key&lt;/code&gt; 와 관련된 값을 가져옵니다 . 값은 부동 소수점 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="805e50b6fcefa615cd4e56e07d288631bdb10817" translate="yes" xml:space="preserve">
          <source>Gets the value associated with &lt;code&gt;key&lt;/code&gt; in the registry. The value must be a string.</source>
          <target state="translated">레지스트리의 &lt;code&gt;key&lt;/code&gt; 와 관련된 값을 가져옵니다 . 값은 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="22ed0b9f095e752434f568472f51e190b8e1e225" translate="yes" xml:space="preserve">
          <source>Gets the value associated with &lt;code&gt;key&lt;/code&gt; in the registry. The value must be an integer.</source>
          <target state="translated">레지스트리의 &lt;code&gt;key&lt;/code&gt; 와 관련된 값을 가져옵니다 . 값은 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="39cb5f06338279a815d3636ca9f973cda74add69" translate="yes" xml:space="preserve">
          <source>Gets the value of a variable.</source>
          <target state="translated">변수의 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d3f68d5aed058755553686a2b48d6636c07c110d" translate="yes" xml:space="preserve">
          <source>Gets the value of entry &lt;code&gt;I&lt;/code&gt;. If &lt;code&gt;I&lt;/code&gt; is not a non-negative integer, or if the array has fixed size and &lt;code&gt;I&lt;/code&gt; is larger than the maximum index, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">항목 &lt;code&gt;I&lt;/code&gt; 의 값을 가져옵니다 . 경우 &lt;code&gt;I&lt;/code&gt; 는 음이 아닌 정수가 아니거나 배열 크기를 고정하고있는 경우 &lt;code&gt;I&lt;/code&gt; 가 최대 인덱스보다 큰 경우, 호출 실패 원인 &lt;code&gt;badarg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50ab19d778954bb2ec4217e1ecffdadb48001f26" translate="yes" xml:space="preserve">
          <source>Gets the value of the status column from &lt;code&gt;Cols&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; 에서 상태 열의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="64ae2205af3170a4d8b97ea29be9c9bc9504c25b" translate="yes" xml:space="preserve">
          <source>Gets the value used for uninitialized entries.</source>
          <target state="translated">초기화되지 않은 항목에 사용 된 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fb8f9ec542a78a0567894a787bed8841f44f1f6a" translate="yes" xml:space="preserve">
          <source>Gets the values of the specified socket options.</source>
          <target state="translated">지정된 소켓 옵션의 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="019f8f6c681682e49a0330b7e885c9019f7b93f1" translate="yes" xml:space="preserve">
          <source>Getting correct values out of cpu_time can be difficult. The best way to get correct values is to run using a single scheduler and bind that scheduler to a specific CPU, i.e. &lt;code&gt;erl +S 1 +sbt db&lt;/code&gt;.</source>
          <target state="translated">cpu_time에서 올바른 값을 얻는 것은 어려울 수 있습니다. 올바른 값을 얻는 가장 좋은 방법은 단일 스케줄러를 사용하여 실행하고 해당 스케줄러를 특정 CPU (예 : &lt;code&gt;erl +S 1 +sbt db&lt;/code&gt; 바인딩하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="8ce2dc109f269ec6164ada09b51467fb42b06d79" translate="yes" xml:space="preserve">
          <source>Getting the Rest of the Binary or Bitstring</source>
          <target state="translated">바이너리 또는 비트 스트링의 나머지 얻기</target>
        </trans-unit>
        <trans-unit id="b6d9af98368e82ebf8665d1c0bd82f5dfe11fb9a" translate="yes" xml:space="preserve">
          <source>Give the option &lt;code&gt;-compiler&lt;/code&gt; to produce output files for the compiler. The following files will be written to the output directory:</source>
          <target state="translated">&lt;code&gt;-compiler&lt;/code&gt; 옵션 을 지정하여 컴파일러에 대한 출력 파일을 생성하십시오. 다음 파일이 출력 디렉토리에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="c4737885b4b4a21ae589660bfe8a353de2a1fdcc" translate="yes" xml:space="preserve">
          <source>Give the option &lt;code&gt;-emulator&lt;/code&gt; to produce output files for the emulator. The following output files will be generated in the output directory.</source>
          <target state="translated">에뮬레이터에 대한 출력 파일을 생성 하려면 &lt;code&gt;-emulator&lt;/code&gt; 옵션을 제공하십시오 . 다음 출력 파일이 출력 디렉토리에 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="480af2276d8ed7dc038e53a0471f267a56260af9" translate="yes" xml:space="preserve">
          <source>Given a group name, say &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;Common Test&lt;/code&gt; searches for all paths leading to &lt;code&gt;g&lt;/code&gt;. By path is meant a sequence of nested groups, which must be followed to get from the top-level group to &lt;code&gt;g&lt;/code&gt;. To execute the test cases in group &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;Common Test&lt;/code&gt; must call the &lt;code&gt;init_per_group/2&lt;/code&gt; function for each group in the path to &lt;code&gt;g&lt;/code&gt;, and all corresponding &lt;code&gt;end_per_group/2&lt;/code&gt; functions afterwards. This is because the configuration of a test case in &lt;code&gt;g&lt;/code&gt; (and its &lt;code&gt;Config&lt;/code&gt; input data) depends on &lt;code&gt;init_per_testcase(TestCase, Config)&lt;/code&gt; and its return value, which in turn depends on &lt;code&gt;init_per_group(g, Config)&lt;/code&gt; and its return value, which in turn depends on &lt;code&gt;init_per_group/2&lt;/code&gt; of the group above &lt;code&gt;g&lt;/code&gt;, and so on, all the way up to the top-level group.</source>
          <target state="translated">그룹 이름을 감안할 때, 말의 &lt;code&gt;g&lt;/code&gt; , &lt;code&gt;Common Test&lt;/code&gt; 에 이르는 모든 경로를 검색 &lt;code&gt;g&lt;/code&gt; . 경로는 일련의 중첩 그룹을 의미하며 최상위 그룹에서 &lt;code&gt;g&lt;/code&gt; 로 이동 하기 위해 따라야합니다 . 그룹에서 테스트 케이스 실행하기 &lt;code&gt;g&lt;/code&gt; 을 , &lt;code&gt;Common Test&lt;/code&gt; 부르는해야 &lt;code&gt;init_per_group/2&lt;/code&gt; 의 경로에서 각 그룹에 대한 함수를 &lt;code&gt;g&lt;/code&gt; , 모든 대응 &lt;code&gt;end_per_group/2&lt;/code&gt; 이후에 기능한다. &lt;code&gt;g&lt;/code&gt; 의 테스트 케이스 구성 (및 해당 &lt;code&gt;Config&lt;/code&gt; 입력 데이터)은 &lt;code&gt;init_per_testcase(TestCase, Config)&lt;/code&gt; 에 따라 달라 지기 때문입니다.그리고 그 반환 값은 &lt;code&gt;init_per_group(g, Config)&lt;/code&gt; 에 의존 하고 그 반환 값 은 &lt;code&gt;g&lt;/code&gt; 위 그룹의 &lt;code&gt;init_per_group/2&lt;/code&gt; 에 의존 하며, 최상위 그룹까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="0906ff1f747a564752f0d7a563c5494d0210eabc" translate="yes" xml:space="preserve">
          <source>Given a parser &lt;code&gt;P1&lt;/code&gt; for grammar &lt;code&gt;G1&lt;/code&gt;, and a parser &lt;code&gt;P2&lt;/code&gt; for grammar &lt;code&gt;G2&lt;/code&gt;, &lt;code&gt;pand(P1, P2)&lt;/code&gt; returns a parser for the grammar, which consists of sequences of tokens that satisfy &lt;code&gt;G1&lt;/code&gt;, followed by sequences of tokens that satisfy &lt;code&gt;G2&lt;/code&gt;.</source>
          <target state="translated">문법 &lt;code&gt;G1&lt;/code&gt; 의 구문 분석기 &lt;code&gt;P1&lt;/code&gt; 과 문법 &lt;code&gt;G2&lt;/code&gt; 의 구문 분석기 &lt;code&gt;P2&lt;/code&gt; 가 주어지면 , &lt;code&gt;pand(P1, P2)&lt;/code&gt; 는 문법의 구문 분석기를 리턴합니다. 문법 구문은 &lt;code&gt;G1&lt;/code&gt; 을 만족 하는 토큰 시퀀스와 &lt;code&gt;G2&lt;/code&gt; 를 만족시키는 토큰 시퀀스로 구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="2367ed7b14b8398232495f4a605666d4cfc6fef0" translate="yes" xml:space="preserve">
          <source>Given a set A and a sentence S(x), where x is a free variable, a new set B whose elements are exactly those elements of A for which S(x) holds can be formed, this is denoted B = {x in A : S(x)}. Sentences are expressed using the logical operators &quot;for some&quot; (or &quot;there exists&quot;), &quot;for all&quot;, &quot;and&quot;, &quot;or&quot;, &quot;not&quot;. If the existence of a set containing all the specified elements is known (as is always the case in this module), this is denoted B = {x : S(x)}.</source>
          <target state="translated">x가 자유 변수 인 집합 A와 문장 S (x)가 주어지면, 요소가 정확히 S (x)가 보유한 A의 요소 인 새로운 집합 B가 형성 될 수 있으며, 이것은 B = {x in A : S (x)}. 문장은 논리 연산자 &quot;일부&quot;(또는 &quot;존재&quot;), &quot;모두&quot;, &quot;및&quot;, &quot;또는&quot;, &quot;not&quot;을 사용하여 표현됩니다. 지정된 모든 요소를 ​​포함하는 세트의 존재가 알려진 경우 (이 모듈에서 항상 그렇듯이) B = {x : S (x)}로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d36f411aeec558802f79e91b5db4a572a5398ef7" translate="yes" xml:space="preserve">
          <source>Given an error return value &lt;code&gt;{error, AtomReason}&lt;/code&gt;, this function returns a readable string describing the error.</source>
          <target state="translated">오류 반환 값 &lt;code&gt;{error, AtomReason}&lt;/code&gt; 이 주어지면 이 함수는 오류를 설명하는 읽을 수있는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="781843f1c1301f611a0691aec36fe17c5bf3e0e2" translate="yes" xml:space="preserve">
          <source>Given as UserData argument to UserMod:handle_trans_reply/4.</source>
          <target state="translated">UserMod : handle_trans_reply / 4에 UserData 인수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="530013e90fa309cacbc3e641eb818d74c4e00873" translate="yes" xml:space="preserve">
          <source>Given that the file &lt;code&gt;relup&lt;/code&gt; generated in Step 4 is now located in the current directory, it is automatically included in the release package.</source>
          <target state="translated">4 단계에서 생성 된 파일 &lt;code&gt;relup&lt;/code&gt; 이 현재 디렉토리에 있으면 릴리스 패키지에 자동으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="cc2effb180a677270a24a3fa700f370aa8754e6d" translate="yes" xml:space="preserve">
          <source>Given the error reason returned by any function in this module, returns a descriptive string of the error in English.</source>
          <target state="translated">이 모듈의 함수가 리턴 한 오류 이유를 고려하여 오류의 설명 문자열을 영어로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d290b94bf301ec616a86d801ea1a63c63128ba75" translate="yes" xml:space="preserve">
          <source>Given the error returned by any function in this module, this function returns a descriptive string of the error in English. For file errors, function &lt;code&gt;format_error/1&lt;/code&gt; in module &lt;code&gt;&lt;a href=&quot;file#format_error-1&quot;&gt;file&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">이 모듈의 함수가 리턴 한 오류가 있으면이 함수는 오류의 설명 문자열을 영어로 리턴합니다. 파일 오류의 경우 모듈 &lt;code&gt;&lt;a href=&quot;file#format_error-1&quot;&gt;file&lt;/a&gt;&lt;/code&gt; &lt;code&gt;format_error/1&lt;/code&gt; 함수 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="627dc59ec96d4003a1f884835672e5ca211d209d" translate="yes" xml:space="preserve">
          <source>Given the error returned by any function of this module, the function &lt;code&gt;format_error&lt;/code&gt; returns a descriptive string of the error in English. For file errors, the function &lt;code&gt;format_error/1&lt;/code&gt; in the &lt;code&gt;file&lt;/code&gt; module is called.</source>
          <target state="translated">이 모듈의 함수가 반환 한 오류가 발생하면 &lt;code&gt;format_error&lt;/code&gt; 함수 는 오류의 설명 문자열을 영어로 반환합니다. 파일 오류의 경우 &lt;code&gt;file&lt;/code&gt; 모듈 의 &lt;code&gt;format_error/1&lt;/code&gt; 함수 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a14cbb80dc04222a2b327e9ea1c1d0d59bbeb536" translate="yes" xml:space="preserve">
          <source>Given the following configuration file:</source>
          <target state="translated">다음과 같은 구성 파일이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b5d8e528da245c2e0c883ca783f87dd99e97a0e4" translate="yes" xml:space="preserve">
          <source>Given the opcode for the selected specific instruction, the loader looks up the pointer to the C code for the instruction and stores in the code area for the module being loaded.</source>
          <target state="translated">선택된 특정 명령어에 대한 opcode가 주어지면 로더는 명령어에 대한 C 코드에 대한 포인터를 찾고로드되는 모듈의 코드 영역에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="7857c6c6d4cc0ba068bc5c9b5b10e7a6d33c6c42" translate="yes" xml:space="preserve">
          <source>Given this index table, a lookup of the &lt;code&gt;age&lt;/code&gt; fields for all persons named &quot;Bryan&quot; can be done as follows:</source>
          <target state="translated">이 색인 테이블이 제공되면 &quot;Bryan&quot;이라는 이름의 모든 사람 에 대한 &lt;code&gt;age&lt;/code&gt; 필드 검색을 다음과 같이 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6da93ffddda7f75e1acf12d527ae88ab0e0491a1" translate="yes" xml:space="preserve">
          <source>Gives a brief help text for functions in the dbg module. The available items can be listed with &lt;code&gt;dbg:h/0&lt;/code&gt;</source>
          <target state="translated">dbg 모듈의 기능에 대한 간단한 도움말 텍스트를 제공합니다. 사용 가능한 항목은 &lt;code&gt;dbg:h/0&lt;/code&gt; 과 함께 나열 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59802ff5f85299eed9ae3d0bb3814529b5783007" translate="yes" xml:space="preserve">
          <source>Gives a list of items for brief online help.</source>
          <target state="translated">간단한 온라인 도움말 항목 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0bd32c6014b82e5e4bcb63130db8329b8b41e4f2" translate="yes" xml:space="preserve">
          <source>Gives a minimum binary virtual heap size, in words. Setting this value higher than the system default can speed up some processes because less garbage collection is done. However, setting a too high value can waste memory. Therefore, use this option only for fine-tuning an application and to measure the execution time with various &lt;code&gt;VSize&lt;/code&gt; values.</source>
          <target state="translated">단어로 최소 이진 가상 힙 크기를 제공합니다. 이 값을 시스템 기본값보다 높게 설정하면 가비지 수집이 덜 수행되므로 일부 프로세스의 속도가 빨라질 수 있습니다. 그러나 너무 높은 값을 설정하면 메모리가 낭비 될 수 있습니다. 따라서이 옵션은 응용 프로그램을 미세 조정하고 다양한 &lt;code&gt;VSize&lt;/code&gt; 값으로 실행 시간을 측정하는 경우에만 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5cb1653868ef0aeb3101648e75759bdc1bdd906" translate="yes" xml:space="preserve">
          <source>Gives a minimum heap size, in words. Setting this value higher than the system default can speed up some processes because less garbage collection is done. However, setting a too high value can waste memory and slow down the system because of worse data locality. Therefore, use this option only for fine-tuning an application and to measure the execution time with various &lt;code&gt;Size&lt;/code&gt; values.</source>
          <target state="translated">단어로 최소 힙 크기를 제공합니다. 이 값을 시스템 기본값보다 높게 설정하면 가비지 수집이 덜 수행되므로 일부 프로세스의 속도가 빨라질 수 있습니다. 그러나 너무 높은 값을 설정하면 데이터 지역성이 나빠져 메모리가 낭비되고 시스템 속도가 느려질 수 있습니다. 따라서이 옵션은 응용 프로그램을 미세 조정하고 다양한 &lt;code&gt;Size&lt;/code&gt; 값으로 실행 시간을 측정하는 경우에만 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="810d9b70bc070340a07b3c2e79ccbba48f2552d5" translate="yes" xml:space="preserve">
          <source>Gives better control of the error handling in &lt;code&gt;run/3&lt;/code&gt;. When specified, compilation errors (if the regular expression is not already compiled) and runtime errors are explicitly returned as an error tuple.</source>
          <target state="translated">&lt;code&gt;run/3&lt;/code&gt; 에서 오류 처리를보다 잘 제어 할 수 있습니다. 지정되면 컴파일 오류 (정규 표현식이 아직 컴파일되지 않은 경우) 및 런타임 오류가 오류 튜플로 명시 적으로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="67b8c5669ba8e381042bef34e911c83fd5ed1d60" translate="yes" xml:space="preserve">
          <source>Gives the &lt;code&gt;inode&lt;/code&gt; number. On non-Unix file systems, this field is zero.</source>
          <target state="translated">&lt;code&gt;inode&lt;/code&gt; 번호를 제공합니다 . 비 유닉스 파일 시스템에서이 필드는 0입니다.</target>
        </trans-unit>
        <trans-unit id="05f8f24d79734bd4ae82e0aac3f26f32697c6c77" translate="yes" xml:space="preserve">
          <source>Gives the group that the file owner belongs to. Ignored for non-Unix file systems.</source>
          <target state="translated">파일 소유자가 속한 그룹을 제공합니다. 비 유닉스 파일 시스템에서는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4737d13f39092ef05df03ffa9addafe40611d6ea" translate="yes" xml:space="preserve">
          <source>Gives the group that the owner of the file belongs to. On non-Unix file systems, this field is zero.</source>
          <target state="translated">파일 소유자가 속한 그룹을 제공합니다. 비 유닉스 파일 시스템에서이 필드는 0입니다.</target>
        </trans-unit>
        <trans-unit id="8f39e6cc46ea77e37c60e596058773946bae35e5" translate="yes" xml:space="preserve">
          <source>Gives the runtime system a hint about how much CPU time the current NIF call has consumed since the last hint, or since the start of the NIF if no previous hint has been specified. The time is specified as a percent of the timeslice that a process is allowed to execute Erlang code until it can be suspended to give time for other runnable processes. The scheduling timeslice is not an exact entity, but can usually be approximated to about 1 millisecond.</source>
          <target state="translated">런타임 시스템에 마지막 힌트 이후 또는 현재 힌트가 지정되지 않은 경우 NIF 시작 이후 현재 NIF 호출이 소비 한 CPU 시간에 대한 힌트를 제공합니다. 시간은 다른 실행 가능한 프로세스에 시간을주기 위해 일시 ​​중단 될 수있을 때까지 프로세스가 Erlang 코드를 실행할 수있는 시간 조각의 백분율로 지정됩니다. 스케줄링 타임 슬라이스는 정확한 실체는 아니지만, 대략 1 밀리 초로 추정 될 수있다.</target>
        </trans-unit>
        <trans-unit id="e5c9b985fae1b1978c9a8847bd814127a83a2a7f" translate="yes" xml:space="preserve">
          <source>Gives the runtime system a hint about how much CPU time the current driver callback call has consumed since the last hint, or since the the start of the callback if no previous hint has been given.</source>
          <target state="translated">런타임 시스템에 마지막 힌트 이후 또는 현재 힌트가 제공되지 않은 경우 콜백 시작 이후 현재 드라이버 콜백 호출이 소비 한 CPU 시간에 대한 힌트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fe40132df9803a579f2616316fd9f36e8b76b6f5" translate="yes" xml:space="preserve">
          <source>Glagolitic</source>
          <target state="translated">Glagolitic</target>
        </trans-unit>
        <trans-unit id="d76684d7cbee28329de2021efd7cc488cde231cd" translate="yes" xml:space="preserve">
          <source>Global Locks</source>
          <target state="translated">글로벌 잠금</target>
        </trans-unit>
        <trans-unit id="1cab7e44a13eca6ba11be96b9620bac95342b107" translate="yes" xml:space="preserve">
          <source>Global locks</source>
          <target state="translated">글로벌 잠금</target>
        </trans-unit>
        <trans-unit id="663aec7048c1025584fcbe13e39c7f862523fb26" translate="yes" xml:space="preserve">
          <source>Global locks have lock identities and are set on a specific resource. For example, the specified resource can be a pid. When a global lock is set, access to the locked resource is denied for all resources other than the lock requester.</source>
          <target state="translated">글로벌 잠금은 잠금 ID를 가지며 특정 자원에 설정됩니다. 예를 들어, 지정된 리소스는 pid 일 수 있습니다. 글로벌 잠금이 설정되면 잠금 요청자 이외의 모든 자원에 대해 잠긴 자원에 대한 액세스가 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="f1e719b75191f0f8870f4cce49fe4bb2d1431c35" translate="yes" xml:space="preserve">
          <source>Global name service</source>
          <target state="translated">글로벌 네임 서비스</target>
        </trans-unit>
        <trans-unit id="fe75420118d16720ea0871af2657f848e3a5561c" translate="yes" xml:space="preserve">
          <source>Global state variable accessible from all customization functions</source>
          <target state="translated">모든 사용자 정의 기능에서 액세스 가능한 전역 상태 변수</target>
        </trans-unit>
        <trans-unit id="e85184147587bb515c2a0d6dc494783d563e6af3" translate="yes" xml:space="preserve">
          <source>Globally associates name &lt;code&gt;Name&lt;/code&gt; with a pid, that is, globally notifies all nodes of a new global name in a network of Erlang nodes.</source>
          <target state="translated">전역 적으로 이름 &lt;code&gt;Name&lt;/code&gt; 을 pid와 연관시킵니다 . 즉, Erlang 노드 네트워크에서 새 전역 이름의 모든 노드에 전역으로 알립니다.</target>
        </trans-unit>
        <trans-unit id="1c047470056a3bca178a522af8277bf882345384" translate="yes" xml:space="preserve">
          <source>Globally change if the socket registry is to be used or not. Note that its still possible to override this explicitly when creating an individual sockets, see &lt;code&gt;&lt;a href=&quot;socket#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;socket#open-4&quot;&gt;open/4&lt;/a&gt;&lt;/code&gt; for more info (use the Extra argument).</source>
          <target state="translated">소켓 레지스트리를 사용할지 여부를 전역 적으로 변경합니다. 개별 소켓을 만들 때이를 명시 적으로 재정의 할 수 있습니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;socket#open-2&quot;&gt;open/2&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;socket#open-4&quot;&gt;open/4&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 (Extra 인수 사용).</target>
        </trans-unit>
        <trans-unit id="56ade1b21a977379d19f55c7430c96711a051cde" translate="yes" xml:space="preserve">
          <source>Go back to a previous configuration after stopping Trace Tool Builder:</source>
          <target state="translated">Trace Tool Builder를 중지 한 후 이전 구성으로 돌아가십시오.</target>
        </trans-unit>
        <trans-unit id="1136a302b770ce20d2455693cdce4ae4061f3348" translate="yes" xml:space="preserve">
          <source>Goes to a specified line number.</source>
          <target state="translated">지정된 줄 번호로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="a4cc20ddddd5df91dbeeeac20e28069cdc6d35d5" translate="yes" xml:space="preserve">
          <source>Gothic</source>
          <target state="translated">Gothic</target>
        </trans-unit>
        <trans-unit id="1ae58fcfe2e802bba4f96a489b26af5bbeb7e8f3" translate="yes" xml:space="preserve">
          <source>Gracefully shuts down the current association, with flushing of unsent data</source>
          <target state="translated">보내지 않은 데이터를 플러시하여 현재 연결을 정상적으로 종료</target>
        </trans-unit>
        <trans-unit id="1d20d631ea24e704853e412250cfe58e90638ca0" translate="yes" xml:space="preserve">
          <source>Gracefully terminates the association specified by &lt;code&gt;Assoc&lt;/code&gt;, with flushing of all unsent data. The socket itself remains open. Other associations opened on this socket are still valid. The socket can be used in new associations.</source>
          <target state="translated">보내지 않은 모든 데이터를 플러시하면서 &lt;code&gt;Assoc&lt;/code&gt; 에 의해 지정된 연결을 정상적으로 종료합니다 . 소켓 자체는 열려 있습니다. 이 소켓에서 열린 다른 연결은 여전히 ​​유효합니다. 소켓은 새로운 연관에서 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="371a4c6118869ca38eb59b1e7d3484922bddc1be" translate="yes" xml:space="preserve">
          <source>Grammar Definition Format</source>
          <target state="translated">문법 정의 형식</target>
        </trans-unit>
        <trans-unit id="bf8e7595a0614d214719e6cde55163eed6ae1e77" translate="yes" xml:space="preserve">
          <source>Grantha</source>
          <target state="translated">Grantha</target>
        </trans-unit>
        <trans-unit id="e236765e608d7779ac1e896f6e76341ac7b6350f" translate="yes" xml:space="preserve">
          <source>Graph &lt;code&gt;IO Usage&lt;/code&gt; shows the current I/O load on the system.</source>
          <target state="translated">그래프 &lt;code&gt;IO Usage&lt;/code&gt; 은 시스템의 현재 I / O로드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2ca196499b4debe7b6713e67d500604ee3bbf167" translate="yes" xml:space="preserve">
          <source>Graph &lt;code&gt;Memory Usage&lt;/code&gt; shows the total memory use and per memory category use, where each category has a unique color. The categories are as follows:</source>
          <target state="translated">그래프 &lt;code&gt;Memory Usage&lt;/code&gt; 은 총 메모리 사용량과 메모리 범주 별 사용량을 보여줍니다. 각 범주는 고유 한 색상을 갖습니다. 카테고리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="781fa1780dd9a4a0db726f7b318d799494937c7e" translate="yes" xml:space="preserve">
          <source>Graph &lt;code&gt;Scheduler Utilization&lt;/code&gt; shows scheduler use per scheduler, where each scheduler use has a unique color.</source>
          <target state="translated">그래프 &lt;code&gt;Scheduler Utilization&lt;/code&gt; 은 스케줄러 당 스케줄러 사용을 표시하며 각 스케줄러 사용에는 고유 한 색상이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dba97d05596043efeaa9072d06d3ec7c375a0548" translate="yes" xml:space="preserve">
          <source>Grapheme clusters for codepoints of class &lt;code&gt;prepend&lt;/code&gt; and non-modern (or decomposed) Hangul is not handled for performance reasons in &lt;code&gt;&lt;a href=&quot;#find-3&quot;&gt;find/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#replace-3&quot;&gt;replace/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#split-2&quot;&gt;split/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lexemes-2&quot;&gt;split/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#trim-3&quot;&gt;trim/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prepend&lt;/code&gt; 및 nonmodern (또는 decomposed) 클래스의 코드 포인트에 대한 Grapheme 클러스터 는 &lt;code&gt;&lt;a href=&quot;#find-3&quot;&gt;find/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#replace-3&quot;&gt;replace/3&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#split-2&quot;&gt;split/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#lexemes-2&quot;&gt;split/2&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#trim-3&quot;&gt;trim/3&lt;/a&gt;&lt;/code&gt; 에서 성능상의 이유로 처리되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="599294f23ef04a992bc69ba465066344c3c7cf34" translate="yes" xml:space="preserve">
          <source>Greater than</source>
          <target state="translated">보다 큰</target>
        </trans-unit>
        <trans-unit id="a2919540599e9df0beb579ca8d46bdc142657611" translate="yes" xml:space="preserve">
          <source>Greater than or equal to</source>
          <target state="translated">크거나 같음</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="8a6d92500c57cfdb25250456d7ef729bb522c238" translate="yes" xml:space="preserve">
          <source>Group :: &lt;code&gt;&lt;a href=&quot;#type-group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">그룹 :: &lt;code&gt;&lt;a href=&quot;#type-group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="c4a408bee4037e5b54d5ac7fa1dfcb676ce34e90" translate="yes" xml:space="preserve">
          <source>Group names and group paths can be combined with parameter &lt;code&gt;group_names_or_paths&lt;/code&gt;. Each element is treated as an individual specification in combination with parameter &lt;code&gt;cases&lt;/code&gt;. The following examples illustrates this.</source>
          <target state="translated">그룹 이름 및 그룹 경로는 &lt;code&gt;group_names_or_paths&lt;/code&gt; 매개 변수와 결합 될 수 있습니다 . 각 요소는 매개 변수 &lt;code&gt;cases&lt;/code&gt; 와 함께 개별 사양으로 취급됩니다 . 다음 예제는이를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="671f6eabcfd9d7d866a94b98585382c0fa691811" translate="yes" xml:space="preserve">
          <source>Grouped AVP Values</source>
          <target state="translated">그룹화 된 AVP 값</target>
        </trans-unit>
        <trans-unit id="fc06822ce31dfe9b98c8d0e28531bc71f925952e" translate="yes" xml:space="preserve">
          <source>Grouped AVPs are defined as CCF specifications in dictionary files.</source>
          <target state="translated">그룹화 된 AVP는 사전 파일에서 CCF 사양으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="4c33959995ae100dbef22f41f1c91b43b054b80f" translate="yes" xml:space="preserve">
          <source>Grouping nodes to global name registration groups.</source>
          <target state="translated">노드를 글로벌 이름 등록 그룹으로 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="fe99f0eb0a4fea6ebc617b5e4a2937fcbc745bb4" translate="yes" xml:space="preserve">
          <source>Grouping of SQL queries can be desirable in order to reduce network traffic. Another benefit can be that the data source sometimes can optimize execution of a batch of SQL queries.</source>
          <target state="translated">네트워크 트래픽을 줄이려면 SQL 쿼리 그룹화가 바람직 할 수 있습니다. 또 다른 이점은 데이터 소스가 때때로 여러 개의 SQL 쿼리 실행을 최적화 할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="00525383d9d58422c948ae43bf89fd05e4f983f1" translate="yes" xml:space="preserve">
          <source>Grouping. It matches &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">그룹화. &lt;code&gt;r&lt;/code&gt; 과 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="fca2a2d5844ec58a2c24e751f2553b4b5f79d344" translate="yes" xml:space="preserve">
          <source>Groups are automatically created when any process joins, and are removed when all processes leave the group. Non-existing group is considered empty (containing no processes).</source>
          <target state="translated">그룹은 프로세스가 참여할 때 자동으로 생성되고 모든 프로세스가 그룹에서 탈퇴하면 제거됩니다. 존재하지 않는 그룹은 비어있는 것으로 간주됩니다 (프로세스 없음).</target>
        </trans-unit>
        <trans-unit id="3a121fa06623a2cf82b642092526102dbfe1e92e" translate="yes" xml:space="preserve">
          <source>Groups together the part of the string with the parts of the string matching the subexpressions of the regular expression.</source>
          <target state="translated">문자열 부분을 정규식의 하위 표현식과 일치하는 문자열 부분으로 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="52a003ff3b98a10e8f4a8754529d8e0afcb36923" translate="yes" xml:space="preserve">
          <source>Groups: all standard groups supported for the Diffie-Hellman key exchange</source>
          <target state="translated">그룹 : Diffie-Hellman 키 교환을 위해 지원되는 모든 표준 그룹</target>
        </trans-unit>
        <trans-unit id="4d59dfad8a207c19fb03d23c5fa725918ccbc3d3" translate="yes" xml:space="preserve">
          <source>Guard constraints</source>
          <target state="translated">가드 제약</target>
        </trans-unit>
        <trans-unit id="c5f29b3c3ec5d955af2fe66cafaa0331a892e76b" translate="yes" xml:space="preserve">
          <source>GuardFunction ::= BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;bit_size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">GuardFunction ::= BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;bit_size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfbfeacdb74b0b04f59a3235c6e9c0ab7f512a3c" translate="yes" xml:space="preserve">
          <source>GuardFunction ::= BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;bit_size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt; | &lt;code&gt;get_tcw&lt;/code&gt;</source>
          <target state="translated">GuardFunction ::= BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;bit_size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt; | &lt;code&gt;get_tcw&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17f5854029d7445b6d33c8e8357f38846f74074b" translate="yes" xml:space="preserve">
          <source>GuardFunction ::= BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">GuardFunction :: = BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26ab9f4a7563027538eea5c8069b4656a1e5e814" translate="yes" xml:space="preserve">
          <source>GuardFunction ::= BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt; | &lt;code&gt;get_tcw&lt;/code&gt;</source>
          <target state="translated">GuardFunction :: = BoolFunction | &lt;code&gt;abs&lt;/code&gt; | &lt;code&gt;element&lt;/code&gt; | &lt;code&gt;hd&lt;/code&gt; | &lt;code&gt;length&lt;/code&gt; | &lt;code&gt;map_get&lt;/code&gt; | &lt;code&gt;map_size&lt;/code&gt; | &lt;code&gt;node&lt;/code&gt; | &lt;code&gt;round&lt;/code&gt; | &lt;code&gt;size&lt;/code&gt; | &lt;code&gt;tl&lt;/code&gt; | &lt;code&gt;trunc&lt;/code&gt; | &lt;code&gt;'+'&lt;/code&gt; | &lt;code&gt;'-'&lt;/code&gt; | &lt;code&gt;'*'&lt;/code&gt; | &lt;code&gt;'div'&lt;/code&gt; | &lt;code&gt;'rem'&lt;/code&gt; | &lt;code&gt;'band'&lt;/code&gt; | &lt;code&gt;'bor'&lt;/code&gt; | &lt;code&gt;'bxor'&lt;/code&gt; | &lt;code&gt;'bnot'&lt;/code&gt; | &lt;code&gt;'bsl'&lt;/code&gt; | &lt;code&gt;'bsr'&lt;/code&gt; | &lt;code&gt;'&amp;gt;'&lt;/code&gt; | &lt;code&gt;'&amp;gt;='&lt;/code&gt; | &lt;code&gt;'&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=&amp;lt;'&lt;/code&gt; | &lt;code&gt;'=:='&lt;/code&gt; | &lt;code&gt;'=='&lt;/code&gt; | &lt;code&gt;'=/='&lt;/code&gt; | &lt;code&gt;'/='&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt; | &lt;code&gt;get_tcw&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67de3c63a9bd94b74bfc86944368ab7bcdf6d849" translate="yes" xml:space="preserve">
          <source>Guards</source>
          <target state="translated">Guards</target>
        </trans-unit>
        <trans-unit id="bce8571c4897351cf59857c7ecbf1e4a1a421968" translate="yes" xml:space="preserve">
          <source>Guide: Design principles</source>
          <target state="translated">가이드 : 디자인 원칙</target>
        </trans-unit>
        <trans-unit id="efdf80231713b1d4e801ca0c584a421f5e8f439b" translate="yes" xml:space="preserve">
          <source>Guide: ERTS</source>
          <target state="translated">가이드 : ERTS</target>
        </trans-unit>
        <trans-unit id="665e5b30bae9bb0925493ecb48fee34c2fef01e1" translate="yes" xml:space="preserve">
          <source>Guide: Efficiency guide</source>
          <target state="translated">가이드 : 효율성 가이드</target>
        </trans-unit>
        <trans-unit id="758e398526fc027576517b8abb810d97bc7d1a3e" translate="yes" xml:space="preserve">
          <source>Guide: Embedded</source>
          <target state="translated">가이드 : 임베디드</target>
        </trans-unit>
        <trans-unit id="f0581c94431aa05c2eb8472879c7cc801044559b" translate="yes" xml:space="preserve">
          <source>Guide: Getting started</source>
          <target state="translated">안내서 : 시작하기</target>
        </trans-unit>
        <trans-unit id="f240a19e5c8b7cc00f916b707fbdf32023e21d53" translate="yes" xml:space="preserve">
          <source>Guide: Installation guide</source>
          <target state="translated">안내서 : 설치 안내서</target>
        </trans-unit>
        <trans-unit id="d502df217602b5fdaf2f55dc2c547ef0fbf862f7" translate="yes" xml:space="preserve">
          <source>Guide: OAM</source>
          <target state="translated">가이드 : OAM</target>
        </trans-unit>
        <trans-unit id="5e2bf177d1d38ced2ec568d128c1257de3a75f5f" translate="yes" xml:space="preserve">
          <source>Guide: Programming examples</source>
          <target state="translated">안내서 : 프로그래밍 예</target>
        </trans-unit>
        <trans-unit id="e1e72627945ab63186b7656050547019c49d74d8" translate="yes" xml:space="preserve">
          <source>Guide: Reference manual</source>
          <target state="translated">가이드 : 참조 매뉴얼</target>
        </trans-unit>
        <trans-unit id="7a69b32cf3986c2b7ac7acbcdbda8e61534fb840" translate="yes" xml:space="preserve">
          <source>Guide: System principles</source>
          <target state="translated">안내서 : 시스템 원칙</target>
        </trans-unit>
        <trans-unit id="0e2c2ebdd60572423288c669f8e6a4bab450c3df" translate="yes" xml:space="preserve">
          <source>Guide: Tutorial</source>
          <target state="translated">가이드 : 튜토리얼</target>
        </trans-unit>
        <trans-unit id="c06c55a5bcd005bf56c5234eb953099ffc1de3f1" translate="yes" xml:space="preserve">
          <source>Gujarati</source>
          <target state="translated">Gujarati</target>
        </trans-unit>
        <trans-unit id="265e1c23debf982bad1eb28dbf1fb86580b82eab" translate="yes" xml:space="preserve">
          <source>Gurmukhi</source>
          <target state="translated">Gurmukhi</target>
        </trans-unit>
        <trans-unit id="380eb30f2d5ab1cdac2a8d64b79d28cfa75198ff" translate="yes" xml:space="preserve">
          <source>HMAC</source>
          <target state="translated">HMAC</target>
        </trans-unit>
        <trans-unit id="a82c464d40e8920d0a12d5e2c7fa455ce1ecf101" translate="yes" xml:space="preserve">
          <source>HTML presentation of test suite code</source>
          <target state="translated">테스트 스위트 코드의 HTML 프리젠 테이션</target>
        </trans-unit>
        <trans-unit id="4994badab8d9e0b3f67ec8c58caac837b4abe642" translate="yes" xml:space="preserve">
          <source>HTML presentation of test suite results</source>
          <target state="translated">테스트 스위트 결과의 HTML 프리젠 테이션</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="20305aa9587f9aff479101ecd817e441076f14af" translate="yes" xml:space="preserve">
          <source>HTTP option (&lt;code&gt;http_option()&lt;/code&gt;) details:</source>
          <target state="translated">HTTP 옵션 ( &lt;code&gt;http_option()&lt;/code&gt; ) 세부 사항 :</target>
        </trans-unit>
        <trans-unit id="20f1936f4eab83709aee013d0385ff1c94b37fcb" translate="yes" xml:space="preserve">
          <source>HTTP request method.</source>
          <target state="translated">HTTP 요청 방법.</target>
        </trans-unit>
        <trans-unit id="fcfac1cc550ec5fe8503b865623fd3395d7a477a" translate="yes" xml:space="preserve">
          <source>HTTP server API</source>
          <target state="translated">HTTP 서버 API</target>
        </trans-unit>
        <trans-unit id="b5b6a9832e57f59fa9ba1970b4197664e77906ed" translate="yes" xml:space="preserve">
          <source>HTTP version, currently &quot;HTTP/1.1&quot;</source>
          <target state="translated">현재 &quot;HTTP / 1.1&quot;HTTP 버전</target>
        </trans-unit>
        <trans-unit id="415221bf4b248b264aa84fda2df240cd373a09c7" translate="yes" xml:space="preserve">
          <source>Hair space</source>
          <target state="translated">헤어 스페이스</target>
        </trans-unit>
        <trans-unit id="15710324ddc14a3ddc719e414d041bb782d93764" translate="yes" xml:space="preserve">
          <source>Han</source>
          <target state="translated">Han</target>
        </trans-unit>
        <trans-unit id="74c85e2b16d60ea1dcaab2f9e4e25d96c53123be" translate="yes" xml:space="preserve">
          <source>Handle a inform message.</source>
          <target state="translated">정보 메시지를 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="8c78d25f102ef8eda10b5a75012e8b64805bd431" translate="yes" xml:space="preserve">
          <source>Handle a notification to be sent. The filter can either accept the notification as is, return &lt;code&gt;send&lt;/code&gt;, modify the notification, return &lt;code&gt;{send, NewNotif}&lt;/code&gt; or suppress the notification, return &lt;code&gt;dont_send&lt;/code&gt;.</source>
          <target state="translated">보낼 알림을 처리합니다. 필터는 그대로 알림을 수락하고, &lt;code&gt;send&lt;/code&gt; 를 반환 하고, 알림을 수정하고, &lt;code&gt;{send, NewNotif}&lt;/code&gt; 반환하거나, 알림을 억제하고, &lt;code&gt;dont_send&lt;/code&gt; 를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b0760030c5c3f38e40c1b890da4d533b3c3fc8c" translate="yes" xml:space="preserve">
          <source>Handle a report message.</source>
          <target state="translated">보고서 메시지를 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="45fa6cc9728ceb60ac0a051db0f488d3202736ce" translate="yes" xml:space="preserve">
          <source>Handle a trap/notification message from an agent.</source>
          <target state="translated">에이전트의 트랩 / 알림 메시지를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="f9c7fc7481552d6aff278b1c974d55353318d9fe" translate="yes" xml:space="preserve">
          <source>Handle for a specific FTP connection, see module &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">특정 FTP 연결을 처리합니다 (모듈 &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="bbda4bcf7ac58978c155de552f386a7cabd7519e" translate="yes" xml:space="preserve">
          <source>Handle for a specific SSH/SFTP connection, see module &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">특정 SSH / SFTP 연결을 처리합니다 (모듈 &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="75e91cbb42fd0e3d90b67be347008953368d932a" translate="yes" xml:space="preserve">
          <source>Handle for a specific Telnet connection, see module &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">특정 Telnet 연결을 처리합니다 (모듈 &lt;code&gt;&lt;a href=&quot;ct&quot;&gt;ct&lt;/a&gt;&lt;/code&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="16bec71f169580069c04eb366b2e7edd0709fd66" translate="yes" xml:space="preserve">
          <source>Handle the reply to an asynchronous request, such as &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt; 과 같은 비동기 요청에 대한 응답을 처리하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d44a583cd21c337171ab088369294e9f1adf157" translate="yes" xml:space="preserve">
          <source>Handle the reply to an asynchronous request, such as &lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;async_get&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;async_get_next&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;async_set&lt;/a&gt;&lt;/code&gt; 과 같은 비동기 요청에 대한 응답을 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="4fbbec4581856cdf831ad92220e8c0c524192fd1" translate="yes" xml:space="preserve">
          <source>Handle to a NETCONF session, as required by signaling functions.</source>
          <target state="translated">신호 기능에서 요구하는대로 NETCONF 세션을 처리합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
