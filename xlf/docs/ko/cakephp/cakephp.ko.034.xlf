<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cakephp">
    <body>
      <group id="cakephp">
        <trans-unit id="132b7ea7afd293ea38c45f281787eb5e3ba65294" translate="yes" xml:space="preserve">
          <source>If the implementing class also implements EventAwareTrait, then events will be emitted when rules are checked.</source>
          <target state="translated">구현 클래스가 EventAwareTrait도 구현하는 경우 규칙을 확인할 때 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b5d99065ad37c0ad6710661375b54ba83e43497e" translate="yes" xml:space="preserve">
          <source>If the implementing objects supports a &lt;code&gt;$_registry&lt;/code&gt; object the named configuration will also be unloaded from the registry.</source>
          <target state="translated">구현 객체가 &lt;code&gt;$_registry&lt;/code&gt; 객체를 지원하는 경우 명명 된 구성도 레지스트리에서 언로드됩니다.</target>
        </trans-unit>
        <trans-unit id="4e4ff5b6682723cf745a5a4070c4b297f31280d4" translate="yes" xml:space="preserve">
          <source>If the including class also implements events the &lt;code&gt;Model.buildValidator&lt;/code&gt; event will be triggered when validators are created.</source>
          <target state="translated">포함 클래스가 이벤트를 구현하는 경우 유효성 검사기를 만들 때 &lt;code&gt;Model.buildValidator&lt;/code&gt; 이벤트가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="f370601f51c28515bac40c06ed3cb0f92ca67c2c" translate="yes" xml:space="preserve">
          <source>If the index already exists, the new callable will be inserted, and the existing element will be shifted one index greater.</source>
          <target state="translated">인덱스가 이미 존재하면 새로운 호출 가능 항목이 삽입되고 기존 요소가 한 인덱스 더 크게 이동합니다.</target>
        </trans-unit>
        <trans-unit id="4d6421f96c764fe236cd1c43ec36d60edee5e06c" translate="yes" xml:space="preserve">
          <source>If the index already exists, the new crumb will be inserted, and the existing element will be shifted one index greater. If the index is out of bounds, it will throw an exception.</source>
          <target state="translated">인덱스가 이미 존재하면 새 부스러기가 삽입되고 기존 요소가 한 인덱스 더 크게 이동합니다. 인덱스가 범위를 벗어나면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a0c29b0840a34ee2d75e5057922a7ddefaa45ed4" translate="yes" xml:space="preserve">
          <source>If the index already exists, the new middleware will be inserted, and the existing element will be shifted one index greater.</source>
          <target state="translated">인덱스가 이미 존재하는 경우 새 미들웨어가 삽입되고 기존 요소가 한 인덱스 더 이동합니다.</target>
        </trans-unit>
        <trans-unit id="53b6ddb40527986387da7b25c33d9efcdd003107" translate="yes" xml:space="preserve">
          <source>If the input contains a dot, assume that the right side is the real table name.</source>
          <target state="translated">입력에 점이 포함 된 경우 오른쪽이 실제 테이블 이름이라고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="666906c46553f7ed29d7ad875d8ef3f81f54d313" translate="yes" xml:space="preserve">
          <source>If the input matches an alias, return the aliased shell name</source>
          <target state="translated">입력이 별명과 일치하면 별명을 가진 쉘 이름을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="c8d5ee4bb9a508dc141879259abba520589bbeef" translate="yes" xml:space="preserve">
          <source>If the key is found: the cached data, false if the data missing/expired, or an error. If the key is not found: boolean of the success of the write</source>
          <target state="translated">키가있는 경우 : 캐시 된 데이터, 데이터가 없거나 만료 된 경우 false 또는 오류. 키를 찾을 수없는 경우 : 쓰기 성공의 부울</target>
        </trans-unit>
        <trans-unit id="58b324fda0e841f7f5945182a4a075e007f6241f" translate="yes" xml:space="preserve">
          <source>If the key is undefined, the cell class and action name will be used.</source>
          <target state="translated">키가 정의되지 않은 경우 셀 클래스 및 조치 이름이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d6389396ad2030074b3b2232b3f505788980fa3b" translate="yes" xml:space="preserve">
          <source>If the keys of the array should be preserved</source>
          <target state="translated">배열의 키를 유지해야하는 경우</target>
        </trans-unit>
        <trans-unit id="768bbece4c3f9d8bf8b7789bf5f9e8023bdf8ab0" translate="yes" xml:space="preserve">
          <source>If the method is called with a string as argument, it returns either the given configuration if it is set, or null, if it's not set.</source>
          <target state="translated">메소드가 문자열로 인수로 호출되면, 주어진 구성이 설정되어 있거나, 설정되지 않은 경우 널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="87a69f1d94869e20fbc48731a6b29b883815731b" translate="yes" xml:space="preserve">
          <source>If the method is called with an array as argument, it will set the cookie configuration to the cookie container.</source>
          <target state="translated">메소드가 배열로 인수로 호출되면 쿠키 구성이 쿠키 컨테이너로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="06c6878fef7eec2ef3ba4a8e944327577a8dd8a3" translate="yes" xml:space="preserve">
          <source>If the middleware is created without an Application, routes will be loaded via the automatic route loading that pre-dates the routes() hook.</source>
          <target state="translated">미들웨어가 애플리케이션없이 작성된 경우, route () 후크 이전의 자동 경로로드를 통해 경로가로드됩니다.</target>
        </trans-unit>
        <trans-unit id="a647e90dcfbcebaf97347fc41f45ce23b84e9060" translate="yes" xml:space="preserve">
          <source>If the model class cannot be found.</source>
          <target state="translated">모델 클래스를 찾을 수없는 경우</target>
        </trans-unit>
        <trans-unit id="dff25674edaf1e35f9030a1bc9d7852de84c91f5" translate="yes" xml:space="preserve">
          <source>If the named file cannot be read or there are no new tests that can be added, a &lt;code&gt;PHPUnit\Framework\WarningTestCase&lt;/code&gt; will be created instead, leaving the current test run untouched.</source>
          <target state="translated">명명 된 파일을 읽을 수 없거나 추가 할 수있는 새 테스트가없는 경우 &lt;code&gt;PHPUnit\Framework\WarningTestCase&lt;/code&gt; 가 대신 생성되고 현재 테스트 실행은 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="cf33b0f83134c7498518121c4448f51efdf26b93" translate="yes" xml:space="preserve">
          <source>If the named plugin does not exist, or does not define a Plugin class, an instance of &lt;code&gt;Cake\Core\BasePlugin&lt;/code&gt; will be used. This generated class will have all plugin hooks enabled.</source>
          <target state="translated">명명 된 플러그인이 존재하지 않거나 플러그인 클래스를 정의하지 않으면 &lt;code&gt;Cake\Core\BasePlugin&lt;/code&gt; 의 인스턴스 가 사용됩니다. 이 생성 된 클래스는 모든 플러그인 후크를 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="76886e81ccf064e1232e45315ff0b333bf61d4c9" translate="yes" xml:space="preserve">
          <source>If the new date does not exist, the days overflow into the next month.</source>
          <target state="translated">새 날짜가 없으면 날짜가 다음 달로 넘칩니다.</target>
        </trans-unit>
        <trans-unit id="84129048f14c5e5553df4f051c66368b9822d165" translate="yes" xml:space="preserve">
          <source>If the new date does not exist, the last day of the month is used instead instead of overflowing into the next month.</source>
          <target state="translated">새 날짜가 없으면 다음 달로 넘치지 않고 해당 월의 마지막 날이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f9baff8ad5e47aa2e2c63b4c1ab3a646f7a713b9" translate="yes" xml:space="preserve">
          <source>If the node is the first child, or is a top level node with no previous node this method will return false</source>
          <target state="translated">노드가 첫 번째 자식이거나 이전 노드가없는 최상위 노드 인 경우이 메서드는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb1b131ba0e2b31412ef6bb28b95b80708e0d270" translate="yes" xml:space="preserve">
          <source>If the node is the last child, or is a top level node with no subsequent node this method will return false</source>
          <target state="translated">노드가 마지막 자식이거나 후속 노드가없는 최상위 노드 인 경우이 메소드는 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="34cea778778e0b7bcd8cc2ca78963433da8fb0e1" translate="yes" xml:space="preserve">
          <source>If the output should be escaped or not</source>
          <target state="translated">출력을 이스케이프해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="fe51c3d3afc8347de4f10f66960de4ae7d6851c1" translate="yes" xml:space="preserve">
          <source>If the properties are already set they will not be overwritten</source>
          <target state="translated">속성이 이미 설정되어 있으면 덮어 쓰지 않습니다</target>
        </trans-unit>
        <trans-unit id="a8cc6504a49b2f42a01786d591c5639ce207c972" translate="yes" xml:space="preserve">
          <source>If the properties argument is null, the currently hidden properties will be returned. Otherwise the hidden properties will be set.</source>
          <target state="translated">properties 인수가 null 인 경우, 현재 숨겨져있는 프로퍼티이 돌려 주어집니다. 그렇지 않으면 숨겨진 속성이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="54c25f8fe50617be7cfbf15b001e46562ce5965c" translate="yes" xml:space="preserve">
          <source>If the properties argument is null, the currently virtual properties will be returned. Otherwise the virtual properties will be set.</source>
          <target state="translated">properties 인수가 널인 경우 현재 가상 특성이 리턴됩니다. 그렇지 않으면 가상 속성이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5d4ce0082a730f1c63edb6e1019fcc9635e82186" translate="yes" xml:space="preserve">
          <source>If the property is already set it will not be overwritten</source>
          <target state="translated">속성이 이미 설정된 경우 덮어 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1bd23b0fc8ffe6e0568418b3d9cf7d0bb23f4604" translate="yes" xml:space="preserve">
          <source>If the query is using autofields (directly or implicitly) add the main table's fields to the query first.</source>
          <target state="translated">쿼리가 자동 필드 (직접 또는 암시 적으로)를 사용하는 경우 먼저 기본 테이블의 필드를 쿼리에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2f530fe19aac8580b6139173d63bdf43a41ed7f9" translate="yes" xml:space="preserve">
          <source>If the registry subclass has an event manager, the objects will be detached from events as well.</source>
          <target state="translated">레지스트리 서브 클래스에 이벤트 관리자가 있으면 오브젝트도 이벤트에서 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="c2b94b6b1b86fbec6c26ee1676bcb28595f86ccd" translate="yes" xml:space="preserve">
          <source>If the request Content-Type is either application/x-www-form-urlencoded or multipart/form-data, and the request method is POST, this will be the post data. For other content types, it may be the deserialized request body.</source>
          <target state="translated">요청 Content-Type이 application / x-www-form-urlencoded 또는 multipart / form-data이고 요청 방법이 POST 인 경우 이는 게시 데이터입니다. 다른 컨텐츠 유형의 경우 직렬화 해제 된 요청 본문 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b6ef47025d7fd662d9311ea8cdf04209a7654b9" translate="yes" xml:space="preserve">
          <source>If the request data is missing or does not match the cookie data, an InvalidCsrfTokenException will be raised.</source>
          <target state="translated">요청 데이터가 없거나 쿠키 데이터와 일치하지 않으면 InvalidCsrfTokenException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="008495844443b735379e9072053404f05bd9f7aa" translate="yes" xml:space="preserve">
          <source>If the request needs a non-origin-form request-target &amp;mdash; e.g., for specifying an absolute-form, authority-form, or asterisk-form &amp;mdash; this method may be used to create an instance with the specified request-target, verbatim.</source>
          <target state="translated">요청이 비 출처 양식 요청 대상을 필요로하는 경우 (예 : 절대 양식, 권한 양식 또는 별표 양식을 지정하기 위해)이 방법을 사용하여 지정된 요청 대상을 가진 인스턴스를 축약 적으로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1347ff748868a3ed998bef106799c399e0974316" translate="yes" xml:space="preserve">
          <source>If the request would be GET, response header &quot;Allow: POST, DELETE&quot; will be set and a 405 error will be returned.</source>
          <target state="translated">요청이 GET이면 응답 헤더 &quot;허용 : POST, DELETE&quot;가 설정되고 405 오류가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9ccf70a2b92bbae196cc78529f8fbf18e2615ead" translate="yes" xml:space="preserve">
          <source>If the requested field is configured as a translation field, field with an alias of a corresponding association is returned. Table-aliased field name is returned for all other fields.</source>
          <target state="translated">요청 된 필드가 변환 필드로 구성된 경우 해당 연관의 별칭이있는 필드가 반환됩니다. 다른 모든 필드에 대해 테이블 ​​별칭 필드 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="de50e4ad001d6ac12e31c2e7d64f584801c35546" translate="yes" xml:space="preserve">
          <source>If the requested field is configured as a translation field, the &lt;code&gt;content&lt;/code&gt; field with an alias of a corresponding association is returned. Table-aliased field name is returned for all other fields.</source>
          <target state="translated">요청 된 필드가 변환 필드로 구성된 경우 해당 연관의 별명이있는 &lt;code&gt;content&lt;/code&gt; 필드가 리턴됩니다. 다른 모든 필드에 대해 테이블 ​​별명 필드 이름이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6f1ec490ee95714f261a9f0eb75b710ecda7839b" translate="yes" xml:space="preserve">
          <source>If the requested key is valid, the group prefix value and engine prefix are applied. Whitespace in keys will be replaced.</source>
          <target state="translated">요청 된 키가 유효하면 그룹 접두사 값과 엔진 접두사가 적용됩니다. 키의 공백이 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="e4d69e0477f06dff7427c7355cf519edf9893d3e" translate="yes" xml:space="preserve">
          <source>If the required fields are missing, throws an exception.</source>
          <target state="translated">필수 필드가 누락 된 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="49d42330a1f7bf291e3af05babee3fe337e0c1d5" translate="yes" xml:space="preserve">
          <source>If the response cannot be decoded, null will be returned.</source>
          <target state="translated">응답을 디코딩 할 수 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="052d508e72b7c1afd42baf7c8daa0ac4049a7b64" translate="yes" xml:space="preserve">
          <source>If the route can be parsed an array of parameters will be returned; if not false will be returned.</source>
          <target state="translated">경로를 파싱 할 수있는 경우 매개 변수 배열이 반환됩니다. 그렇지 않으면 false가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3ba0fe8a2244e9be3f9a567ec8e096a6544d860b" translate="yes" xml:space="preserve">
          <source>If the route can be parsed an array of parameters will be returned; if not false will be returned. String URLs are parsed if they match a routes regular expression.</source>
          <target state="translated">경로를 파싱 할 수있는 경우 매개 변수 배열이 반환됩니다. 그렇지 않으면 false가 반환됩니다. 라우트 정규식과 일치하면 문자열 URL이 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="00c558d7737f617b0e1d993ca7423a04d6663654" translate="yes" xml:space="preserve">
          <source>If the second argument is set to true, it will erase previous formatters and replace them with the passed first argument.</source>
          <target state="translated">두 번째 인수가 true로 설정되면 이전 포맷터를 지우고 전달 된 첫 번째 인수로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="a5cbecf233a96e6ce5985108ce0ace9cdc2984ed" translate="yes" xml:space="preserve">
          <source>If the specified repository type has no factory.</source>
          <target state="translated">지정된 저장소 유형에 팩토리가없는 경우</target>
        </trans-unit>
        <trans-unit id="e5e5c6aaa8f56a5b333242605ae93a03e78a2869" translate="yes" xml:space="preserve">
          <source>If the status code is 304 or 204, the existing Content-Type header will be cleared, as these response codes have no body.</source>
          <target state="translated">상태 코드가 304 또는 204이면 응답 코드에 본문이 없으므로 기존 Content-Type 헤더가 지워집니다.</target>
        </trans-unit>
        <trans-unit id="5b5d0b8f196564e46ea39aa8b524f06151e8d7f3" translate="yes" xml:space="preserve">
          <source>If the stream is not seekable, this method will raise an exception; otherwise, it will perform a seek(0).</source>
          <target state="translated">스트림을 찾을 수없는 경우이 메서드는 예외를 발생시킵니다. 그렇지 않으면 seek (0)을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3e4c4a8394bf96d518ffbbfd59126eb4bf01f554" translate="yes" xml:space="preserve">
          <source>If the table option was provided to the constructor and it was a string, TableLocator will be used to get the correct table instance.</source>
          <target state="translated">테이블 옵션이 생성자에 제공되었고 문자열 인 경우 TableLocator를 사용하여 올바른 테이블 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="95d69c2029a648262523433474d143b321477d37" translate="yes" xml:space="preserve">
          <source>If the third argument is set to true, it will erase previous map reducers and replace it with the arguments passed.</source>
          <target state="translated">세 번째 인수가 true로 설정되면 이전 맵 감속기가 지워지고 전달 된 인수로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="edfb5f22d21d60c336eb765de5a43c54820d2b68" translate="yes" xml:space="preserve">
          <source>If the transaction is aborted in the afterSave event.</source>
          <target state="translated">afterSave 이벤트에서 트랜잭션이 중단 된 경우</target>
        </trans-unit>
        <trans-unit id="9ddaefd2c8a7eaa7f55d341bd251f11ce1316c8b" translate="yes" xml:space="preserve">
          <source>If the type passed for any of the fields is expressed &quot;type[]&quot; (note braces) then it will cause the placeholder to be re-written dynamically so if the value is an array, it will create as many placeholders as values are in it.</source>
          <target state="translated">필드에 전달 된 유형이 &quot;type []&quot;(중괄호)로 표시되면 플레이스 홀더가 동적으로 다시 작성되므로 값이 배열 인 경우 값이있는만큼 플레이스 홀더가 작성됩니다. 그것.</target>
        </trans-unit>
        <trans-unit id="3c934fb734850b9a1c9a706314c841d421032925" translate="yes" xml:space="preserve">
          <source>If the underlying server is MariaDB, its value will get set to &lt;code&gt;'mariadb'&lt;/code&gt; after &lt;code&gt;version()&lt;/code&gt; method is called.</source>
          <target state="translated">기본 서버가 MariaDB 인 경우 해당 값은 &lt;code&gt;version()&lt;/code&gt; 메서드가 호출 된 후 &lt;code&gt;'mariadb'&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="08213899dc6c8ee9eae40d000bf6830e5f282623" translate="yes" xml:space="preserve">
          <source>If the user replies &lt;code&gt;a&lt;/code&gt; subsequent &lt;code&gt;forceOverwrite&lt;/code&gt; parameters will be coerced to true and all files will be overwritten.</source>
          <target state="translated">사용자 &lt;code&gt;a&lt;/code&gt; 후속 응답에 응답 하면 &lt;code&gt;forceOverwrite&lt;/code&gt; 매개 변수가 true로 강제 설정되고 모든 파일을 겹쳐 씁니다.</target>
        </trans-unit>
        <trans-unit id="a87b72ea46dbdb9199e633a1db11d4a25c259e73" translate="yes" xml:space="preserve">
          <source>If the value contains non-ASCII letters an additional header indicating the charset encoding will be set.</source>
          <target state="translated">값에 ASCII가 아닌 문자가 포함 된 경우 문자 집합 인코딩을 나타내는 추가 헤더가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="06dc092b409b6e9e59734e6304816a39889909da" translate="yes" xml:space="preserve">
          <source>If the value represents an array of values, this method will recursively process the data.</source>
          <target state="translated">값이 값의 배열을 나타내는 경우이 방법은 데이터를 재귀 적으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a970421c12682ce23d78ace566d2f744c8777833" translate="yes" xml:space="preserve">
          <source>If the view variable does not exist, null will be returned.</source>
          <target state="translated">뷰 변수가 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="39bc2a0edcf8e3c763e718b9332f50157364a41d" translate="yes" xml:space="preserve">
          <source>If there are errors this method returns true, else false.</source>
          <target state="translated">오류가있는 경우이 메소드는 true를, 그렇지 않으면 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9e82b582f4b8c9574df3ffaab9ea957bc15c4dd5" translate="yes" xml:space="preserve">
          <source>If there is a loaded plugin with the underscored version of $name, the translation file will be loaded from such plugin.</source>
          <target state="translated">밑줄이 그어진 $ name 버전의로드 된 플러그인이 있으면 해당 플러그인에서 번역 파일이로드됩니다.</target>
        </trans-unit>
        <trans-unit id="b4e61304a544eb1ac726b85eecce20dbe640c9e1" translate="yes" xml:space="preserve">
          <source>If there is an error in the view.</source>
          <target state="translated">보기에 오류가있는 경우</target>
        </trans-unit>
        <trans-unit id="405faf6d06cec2174adb3c7ce6fe29188cd4512d" translate="yes" xml:space="preserve">
          <source>If there is no URL returned from storage and there is a config &lt;code&gt;loginRedirect&lt;/code&gt;, the &lt;code&gt;loginRedirect&lt;/code&gt; value is returned.</source>
          <target state="translated">스토리지에서 리턴 된 URL이없고 구성 &lt;code&gt;loginRedirect&lt;/code&gt; 가있는 경우 &lt;code&gt;loginRedirect&lt;/code&gt; 값이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="d78a50753f4cf814fc3ddb831cff6250d3492137" translate="yes" xml:space="preserve">
          <source>If there is no active form null will be returned.</source>
          <target state="translated">활성 폼이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3cc36fb3ab24e6f6f5bfd0f7b0376c2a93f05896" translate="yes" xml:space="preserve">
          <source>If there is no session and no &lt;code&gt;loginRedirect&lt;/code&gt;, / is returned.</source>
          <target state="translated">세션이없고 &lt;code&gt;loginRedirect&lt;/code&gt; 가 없으면 /가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7de4f1529e6b708a8eabffaa6548b6227a3459a9" translate="yes" xml:space="preserve">
          <source>If there is no template set, the $content will be returned in a hash of the specified content types for the email.</source>
          <target state="translated">템플릿 세트가없는 경우 $ content는 이메일에 대해 지정된 콘텐츠 유형의 해시로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f91ec3385d39eab2cf92df5ef57d4c99cf1e2b36" translate="yes" xml:space="preserve">
          <source>If there was any authorization processing for the current request, this function will return the instance of the Authorization object that granted access to the user to the current address.</source>
          <target state="translated">현재 요청에 대한 인증 처리가있는 경우이 함수는 사용자에게 액세스 권한을 부여한 Authorization 객체의 인스턴스를 현재 주소로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a2cd8f1fb42a1da68565b35eff1abb7dacb065a" translate="yes" xml:space="preserve">
          <source>If this collection implements events, the passed object will be attached into the event manager</source>
          <target state="translated">이 콜렉션이 이벤트를 구현하면 전달 된 오브젝트가 이벤트 관리자에 첨부됩니다.</target>
        </trans-unit>
        <trans-unit id="9f03bfc471ccd235af9f7bd27d19bd9499e03633" translate="yes" xml:space="preserve">
          <source>If this object contains files, &lt;code&gt;multipart/form-data&lt;/code&gt; will be used, otherwise &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; will be used.</source>
          <target state="translated">이 객체에 파일이 포함되어 있으면 &lt;code&gt;multipart/form-data&lt;/code&gt; 가 사용되고 그렇지 않으면 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2c58f206c2e238a1776be4ae8ace1dcb887ee525" translate="yes" xml:space="preserve">
          <source>If this object does not exist in the reference storage, it will be added and the id will be returned.</source>
          <target state="translated">이 객체가 참조 저장소에 없으면 추가되고 ID가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9aa31aaa6fa559dab23bf66491d853d81b9e249b" translate="yes" xml:space="preserve">
          <source>If this registry has an event manager, the object will be detached from any events as well.</source>
          <target state="translated">이 레지스트리에 이벤트 관리자가 있으면 오브젝트도 모든 이벤트에서 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="bab3ffcc4a1225a16d8d6d550cdd9234676634a0" translate="yes" xml:space="preserve">
          <source>If to apply last flag.</source>
          <target state="translated">마지막 플래그를 적용하려면.</target>
        </trans-unit>
        <trans-unit id="520ae0eae8eccbf336035a4feeef13f3c9ded8ac" translate="yes" xml:space="preserve">
          <source>If true (default value) groups the identifiers list by primary region. Otherwise, an array containing &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;abbr&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, and &lt;code&gt;after&lt;/code&gt; keys. Setting &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;abbr&lt;/code&gt; to true will group results and append timezone abbreviation in the display value. Set &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; to customize the abbreviation wrapper.</source>
          <target state="translated">true (기본값) 인 경우 기본 지역별로 식별자 목록을 그룹화합니다. 그렇지 않으면 &lt;code&gt;group&lt;/code&gt; , &lt;code&gt;abbr&lt;/code&gt; , &lt;code&gt;before&lt;/code&gt; 및 &lt;code&gt;after&lt;/code&gt; 키를 포함하는 배열 입니다. &lt;code&gt;group&lt;/code&gt; 및 &lt;code&gt;abbr&lt;/code&gt; 을 true로 설정하면 결과가 그룹화되고 시간대 약어가 표시 값에 추가됩니다. 설정 &lt;code&gt;before&lt;/code&gt; 과 &lt;code&gt;after&lt;/code&gt; 의 약어 래퍼를 사용자 정의합니다.</target>
        </trans-unit>
        <trans-unit id="89a662bd80f62a4c9fe164010b7c5e8bcf2adb23" translate="yes" xml:space="preserve">
          <source>If true forces Windows new line string.</source>
          <target state="translated">true이면 Windows 줄 바꾸기를 강제 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7a547485ea13cc920ec7e0646ad833a39efcd0d6" translate="yes" xml:space="preserve">
          <source>If true no deletes will occur and instead CakePHP will rely on key TTL values. Unused for Xcache engine.</source>
          <target state="translated">true이면 삭제가 발생하지 않으며 대신 CakePHP는 주요 TTL 값을 사용합니다. Xcache 엔진에 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="309430cdb575eedd456ad75fb6012368b1879255" translate="yes" xml:space="preserve">
          <source>If true then the file will be re-opened even if its already opened, otherwise it won't</source>
          <target state="translated">true 인 경우 파일이 이미 열려 있어도 파일이 다시 열리고 그렇지 않으면 열리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="71a416676a319a3544b08e9ba3b77a1b5b3feb1e" translate="yes" xml:space="preserve">
          <source>If true timestamp is refreshed.</source>
          <target state="translated">실제 타임 스탬프가 새로 고쳐지면</target>
        </trans-unit>
        <trans-unit id="8c1f246138be22720a5e14fc00d682508128dd8c" translate="yes" xml:space="preserve">
          <source>If true uses the plugin set in the current Request when parsed plugin is not loaded</source>
          <target state="translated">true 인 경우 구문 분석 된 플러그인이로드되지 않은 경우 현재 요청에 설정된 플러그인을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ef6b3d0ecb4d885cece6eb758df2fec7b504b342" translate="yes" xml:space="preserve">
          <source>If true will check expiration, otherwise delete all.</source>
          <target state="translated">true이면 만료를 확인하고, 그렇지 않으면 모두 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="aa0986d907f020cca2b30e3d12955962c7909af3" translate="yes" xml:space="preserve">
          <source>If true, $data will be converted to an associative array.</source>
          <target state="translated">true 인 경우 $ data는 연관 배열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="1242d3617f0ba44968783ff3d0c58727d49a2e2f" translate="yes" xml:space="preserve">
          <source>If true, all rows were fetched</source>
          <target state="translated">true 인 경우 모든 행을 가져 왔습니다.</target>
        </trans-unit>
        <trans-unit id="f739c0318be2a92ea6f2f6a89e53638fb7752732" translate="yes" xml:space="preserve">
          <source>If true, automatically prepends the application's salt value to $string (Security.salt).</source>
          <target state="translated">true 인 경우 애플리케이션의 솔트 값을 $ string (Security.salt) 앞에 자동으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e994fba8bf7bf01252b5a9e6428ec632300fd755" translate="yes" xml:space="preserve">
          <source>If true, automatically prepends the value returned by Security::getSalt() to $string.</source>
          <target state="translated">true이면 Security :: getSalt ()에서 반환 된 값을 $ string에 자동으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ddf50e059012b52c88bd9dcf5aeaab71b45d2fa6" translate="yes" xml:space="preserve">
          <source>If true, database time zone is kept when converting to DateTime instances.</source>
          <target state="translated">true 인 경우 DateTime 인스턴스로 변환 할 때 데이터베이스 시간대가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9c9539679041f3b556a16ec5de3e0e634ab45f12" translate="yes" xml:space="preserve">
          <source>If true, nothing will be cleared, as entries are removed from APC as they expired. This flag is really only used by FileEngine.</source>
          <target state="translated">true 인 경우 항목이 만료되면 APC에서 제거되므로 아무것도 지워지지 않습니다. 이 플래그는 실제로 FileEngine에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="16d1ae2c0282ce0a2367b7f25a2f74de696ba994" translate="yes" xml:space="preserve">
          <source>If true, nothing will be cleared, as entries will naturally expire in wincache..</source>
          <target state="translated">true 인 경우 항목이 wincache에서 자연스럽게 만료되므로 아무것도 지워지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="533027eb50a61dfbb07e55ed6064734385c26cab" translate="yes" xml:space="preserve">
          <source>If true, prepend the base directory to the stack instead of appending it; this causes it to be searched first rather than last.</source>
          <target state="translated">true 인 경우, 기본 디렉토리를 추가하지 않고 스택에 추가하십시오. 이로 인해 마지막이 아니라 먼저 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="c13485dc290701d12c61f9c4f401446d2254da87" translate="yes" xml:space="preserve">
          <source>If true, restrict referring URLs to local server</source>
          <target state="translated">true 인 경우 참조 URL을 로컬 서버로 제한</target>
        </trans-unit>
        <trans-unit id="a3908289c56b1011fc13f25c174b605ea26df718" translate="yes" xml:space="preserve">
          <source>If true, tables will still be dropped at the end of each test runner execution.</source>
          <target state="translated">true 인 경우 각 테스트 실행기 실행이 끝날 때마다 테이블이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="91522ec770e4b7db9161503803a7fa5d5f717216" translate="yes" xml:space="preserve">
          <source>If true, the full base URL will be prepended to the result. Default is false.</source>
          <target state="translated">true이면 전체 기본 URL이 결과 앞에 추가됩니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="f753a0aaf33fd2288eb1ffae8aa8d5c8617988aa" translate="yes" xml:space="preserve">
          <source>If true, the script will ask for permission to perform actions.</source>
          <target state="translated">true 인 경우 스크립트는 작업을 수행 할 권한을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="47b2ed7e205c26ed3b802622fbc68ee21285d02c" translate="yes" xml:space="preserve">
          <source>If true, will unset default inflections for all new rules that are being defined in $rules.</source>
          <target state="translated">true이면 $ rules에 정의 된 모든 새 규칙에 대한 기본 활용을 설정 해제합니다.</target>
        </trans-unit>
        <trans-unit id="0bed9a0929b1d84a3e5307dfa37479c17ce7cddb" translate="yes" xml:space="preserve">
          <source>If type identifier is unknown</source>
          <target state="translated">유형 식별자를 알 수없는 경우</target>
        </trans-unit>
        <trans-unit id="98a7ec14c9e96b4e67b87d5a913bee318785760f" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;default&lt;/code&gt; config and no engine has been configured for it yet, one will be automatically created using PhpConfig</source>
          <target state="translated">사용하는 경우 &lt;code&gt;default&lt;/code&gt; 설정없이 엔진하는 것은 아직 그것을 구성되어, 하나는 자동으로 PhpConfig를 사용하여 생성됩니다</target>
        </trans-unit>
        <trans-unit id="9c6efbca879cf7ea947679ac2312d2a2edc5d728" translate="yes" xml:space="preserve">
          <source>If using array as input, you can pass &lt;code&gt;options&lt;/code&gt; from Xml::fromArray.</source>
          <target state="translated">배열을 입력으로 사용하는 경우 Xml :: fromArray에서 &lt;code&gt;options&lt;/code&gt; 을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cec26a85b2f35e1317c7ba26e54bc9b26205e4b3" translate="yes" xml:space="preserve">
          <source>If validator cannot be retrieved based on the parts.</source>
          <target state="translated">부품을 기준으로 유효성 검사기를 검색 할 수없는 경우.</target>
        </trans-unit>
        <trans-unit id="a5c12febac79c54ac725a8877ba5ff819045eb08" translate="yes" xml:space="preserve">
          <source>If value does not exist.</source>
          <target state="translated">값이없는 경우.</target>
        </trans-unit>
        <trans-unit id="eb8bff55d2f41d14353c560f0549d153ee87395e" translate="yes" xml:space="preserve">
          <source>If value for any option key is set to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, that option will be excluded from output.</source>
          <target state="translated">옵션 키의 값이 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 로 설정 되면 해당 옵션이 출력에서 ​​제외됩니다.</target>
        </trans-unit>
        <trans-unit id="d8da668d5c7f3d14d672d3f02d25c97be31bc4fb" translate="yes" xml:space="preserve">
          <source>If value for flash settings key is not an array.</source>
          <target state="translated">플래시 설정 키의 값이 배열이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="d90134662e814886868db67c289af5412dffa59d" translate="yes" xml:space="preserve">
          <source>If view class was not found.</source>
          <target state="translated">뷰 클래스를 찾을 수없는 경우</target>
        </trans-unit>
        <trans-unit id="0d28a1126da458c6666c7c05d49c88bc20c6559e" translate="yes" xml:space="preserve">
          <source>If you are getting styles, the style or null will be returned. If you are creating/modifying styles true will be returned.</source>
          <target state="translated">스타일을 얻는 경우 스타일 또는 null이 반환됩니다. 스타일을 작성 / 수정하는 경우 true가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1be9fd69def34c5d31b6e82eebd37d8298a3c90f" translate="yes" xml:space="preserve">
          <source>If you are trying to enable this feature, make sure you check the return value of this function to verify it was enabled successfully.</source>
          <target state="translated">이 기능을 사용하려는 경우이 기능의 리턴 값을 확인하여 기능이 성공적으로 사용 가능한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5cddcb22e887892d39c4501ff42035e24c32be7f" translate="yes" xml:space="preserve">
          <source>If you attempt to set the type on a 304 or 204 status code response, the content type will not take effect as these status codes do not have content-types.</source>
          <target state="translated">304 또는 204 상태 코드 응답에서 유형을 설정하려고하면 이러한 상태 코드에 컨텐츠 유형이 없으므로 컨텐츠 유형이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="575bad3181b776973b212c1a9785972939e94be0" translate="yes" xml:space="preserve">
          <source>If you change the configuration value &lt;code&gt;App.fullBaseUrl&lt;/code&gt; during runtime and expect the router to produce links using the new setting, you are required to call this method passing such value again.</source>
          <target state="translated">런타임 동안 구성 값 &lt;code&gt;App.fullBaseUrl&lt;/code&gt; 을 변경하고 라우터가 새 설정을 사용하여 링크를 생성 할 것으로 예상되면 해당 값을 다시 전달하여이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="872e8c1024cbe05aa3ce9220d123889a1f2e1a60" translate="yes" xml:space="preserve">
          <source>If you don't set the &lt;code&gt;serialize&lt;/code&gt; option, you will need a view. You can use extended views to provide layout like functionality.</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 옵션을 설정하지 않으면 보기가 필요합니다. 확장 된보기를 사용하여 기능과 같은 레이아웃을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="167ea8391d46e453b5027e3b271c0ec000da78ad" translate="yes" xml:space="preserve">
          <source>If you don't set the &lt;code&gt;serialize&lt;/code&gt; opton, you will need a view template. You can use extended views to provide layout-like functionality.</source>
          <target state="translated">&lt;code&gt;serialize&lt;/code&gt; 옵션을 설정하지 않은 경우 보기 템플릿이 필요합니다. 확장 된보기를 사용하여 레이아웃과 유사한 기능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c5810064346d5634718bf5843357d3f530d8602" translate="yes" xml:space="preserve">
          <source>If you don't use the &lt;code&gt;_serialize&lt;/code&gt; key, you will need a view. You can use extended views to provide layout like functionality.</source>
          <target state="translated">&lt;code&gt;_serialize&lt;/code&gt; 키를 사용하지 않으면 보기가 필요합니다. 확장 된 뷰를 사용하여 기능과 같은 레이아웃을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4f1f93c3cb4a137127d6a65d567901694622d6e" translate="yes" xml:space="preserve">
          <source>If you don't use the &lt;code&gt;_serialize&lt;/code&gt;, you will need a view template. You can use extended views to provide layout-like functionality.</source>
          <target state="translated">&lt;code&gt;_serialize&lt;/code&gt; 를 사용하지 않으면 뷰 템플릿이 필요합니다. 확장 된 뷰를 사용하여 레이아웃과 같은 기능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bc6b9792f21a60361d3a1ad9b46596edaf563f7" translate="yes" xml:space="preserve">
          <source>If you don't want to take control of the exception handling, but want to change how exceptions are rendered you can use &lt;code&gt;exceptionRenderer&lt;/code&gt; option to choose a class to render exception pages. By default &lt;code&gt;Cake\Error\ExceptionRenderer&lt;/code&gt; is used. Your custom exception renderer class should be placed in src/Error.</source>
          <target state="translated">예외 처리를 제어하고 싶지 않지만 예외 렌더링 방식을 변경하려는 경우 &lt;code&gt;exceptionRenderer&lt;/code&gt; 옵션을 사용 하여 예외 페이지를 렌더링 할 클래스를 선택할 수 있습니다 . 기본적으로 &lt;code&gt;Cake\Error\ExceptionRenderer&lt;/code&gt; 가 사용됩니다. 사용자 정의 예외 렌더러 클래스는 src / Error에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a7862b7fd98ba569dac650a2e261e4549599ad90" translate="yes" xml:space="preserve">
          <source>If you have an un-even or heterogeneous array, consider using Hash::maxDimensions() to get the dimensions of the array.</source>
          <target state="translated">고르지 않거나 이기종 배열이있는 경우 Hash :: maxDimensions ()를 사용하여 배열의 차원을 가져 오는 것을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="f6c26de81cd9cb3f47617d955fa036460c7fb668" translate="yes" xml:space="preserve">
          <source>If you have multiple options that need to have the same value attribute, you can use an array of arrays to express this:</source>
          <target state="translated">동일한 값 속성이 필요한 여러 옵션이있는 경우 배열 배열을 사용하여이를 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="789124e623432248f1967ce11d66dd3660933d7f" translate="yes" xml:space="preserve">
          <source>If you have several messages stored in the Session, each message will be rendered in its own element.</source>
          <target state="translated">세션에 여러 메시지가 저장된 경우 각 메시지는 자체 요소로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="2ebd05463d8e98a5b0ca7a959ec4ec013c977e4a" translate="yes" xml:space="preserve">
          <source>If you make consecutive calls to this method, the messages will stack (if they are set with the same flash key)</source>
          <target state="translated">이 메소드를 연속적으로 호출하면 메시지가 동일한 플래시 키로 설정된 경우 메시지가 쌓입니다.</target>
        </trans-unit>
        <trans-unit id="22ded67486497137977d97e7702c27e3f42ea31b" translate="yes" xml:space="preserve">
          <source>If you need a more general purpose redirect exception use Cake\Http\Exception\RedirectException instead of this class.</source>
          <target state="translated">보다 일반적인 용도의 리디렉션 예외가 필요한 경우이 클래스 대신 Cake \ Http \ Exception \ RedirectException을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="89bd702cfff1814622818045b1796c589cd9b9ee" translate="yes" xml:space="preserve">
          <source>If you need fine grained control over how routes are loaded for plugins, you can use Cake\Routing\RouteBuilder::loadPlugin()</source>
          <target state="translated">플러그인에 경로를로드하는 방법을 세밀하게 제어해야하는 경우 Cake \ Routing \ RouteBuilder :: loadPlugin ()을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1272e53b2d7e9e62f4db000418b3ad22fb8e0cd1" translate="yes" xml:space="preserve">
          <source>If you need the count of elements after taking the keys in consideration (the count of unique keys), you can call &lt;code&gt;countKeys()&lt;/code&gt;</source>
          <target state="translated">키를 고려한 후 요소 수 (고유 키 수)가 필요한 경우 &lt;code&gt;countKeys()&lt;/code&gt; 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bda59d558ecbaf92a944a24405f21d5505c847b0" translate="yes" xml:space="preserve">
          <source>If you need to define additional attributes on your option elements you can use the complex form for options:</source>
          <target state="translated">옵션 요소에 추가 속성을 정의해야하는 경우 옵션에 복잡한 양식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24f497a550fbfe3ebffd7a0dadb0f688ed5dc59b" translate="yes" xml:space="preserve">
          <source>If you need to define option groups you can do those using nested arrays:</source>
          <target state="translated">옵션 그룹을 정의해야하는 경우 중첩 배열을 사용하여 옵션 그룹을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bf7f813c6d38da0351f6b0ec7f33a9de2a42734" translate="yes" xml:space="preserve">
          <source>If you need to display the date in a different timezone than the one being used for this Time object without altering its internal state, you can pass a timezone string or object as the second parameter.</source>
          <target state="translated">내부 상태를 변경하지 않고이 Time 객체에 사용 된 것과 다른 시간대로 날짜를 표시해야하는 경우 시간대 문자열이나 객체를 두 번째 매개 변수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca8aeb40ce6aaade21f034ef1600324ce6157cda" translate="yes" xml:space="preserve">
          <source>If you need to have prefix with dots, eg: '/api/v1.0', use 'path' key for $params argument:</source>
          <target state="translated">'/api/v1.0'과 같이 접두사가 붙은 접두사가 필요한 경우 $ params 인수에 'path'키를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="43f31d05cc719e669b588d455c53c0915d41bdbf" translate="yes" xml:space="preserve">
          <source>If you need to set complex expressions as order conditions, you should use &lt;code&gt;orderAsc()&lt;/code&gt; or &lt;code&gt;orderDesc()&lt;/code&gt;.</source>
          <target state="translated">복잡한 표현식을 주문 조건으로 설정해야하는 경우 &lt;code&gt;orderAsc()&lt;/code&gt; 또는 &lt;code&gt;orderDesc()&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9a8a0e015c1603c92a0eb3c7b0ef2b0463d11659" translate="yes" xml:space="preserve">
          <source>If you need to sort on associated columns or synthetic properties you will need to use a whitelist.</source>
          <target state="translated">관련 열 또는 합성 속성을 정렬해야하는 경우 화이트리스트를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="842b6bb5d1b13563b8af790ca006d4d348c79ba7" translate="yes" xml:space="preserve">
          <source>If you need to sort on associated columns or synthetic properties you will need to use the &lt;code&gt;sortableFields&lt;/code&gt; option.</source>
          <target state="translated">연결된 열 또는 합성 속성을 &lt;code&gt;sortableFields&lt;/code&gt; 해야하는 경우 sortableFields 옵션 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5dc9d232606d4a1f7b49e6e1de7bc9f94df66e3e" translate="yes" xml:space="preserve">
          <source>If you need to use 'FOLLOWING' with frame start or 'PRECEDING' with frame end, use &lt;code&gt;frame()&lt;/code&gt; instead.</source>
          <target state="translated">프레임 시작과 함께 'FOLLOWING'을 사용하거나 프레임 끝과 함께 'PRECEDING'을 사용해야하는 경우 대신 &lt;code&gt;frame()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="de8eaf951a470dc11090ebc69b5e6b2038691d48" translate="yes" xml:space="preserve">
          <source>If you only want the terminal Entity for a path use &lt;code&gt;leafEntity&lt;/code&gt; instead.</source>
          <target state="translated">경로에 터미널 엔티티 만 원하는 경우 대신 &lt;code&gt;leafEntity&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3d072710840081699a78d7eb310715109501e849" translate="yes" xml:space="preserve">
          <source>If you pass an instance of a &lt;code&gt;Cake\ORM\Table&lt;/code&gt; or &lt;code&gt;Cake\ORM\Association&lt;/code&gt; class, all the fields in the schema of the table or the association will be added to the select clause.</source>
          <target state="translated">&lt;code&gt;Cake\ORM\Table&lt;/code&gt; 또는 &lt;code&gt;Cake\ORM\Association&lt;/code&gt; 클래스 의 인스턴스를 전달하면 테이블 스키마 또는 연관의 스키마에있는 모든 필드가 select 절에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="56002185ed5af8c7a83e26906462a52de9b342f0" translate="yes" xml:space="preserve">
          <source>If you re-use an alias the last alias set will be the one available.</source>
          <target state="translated">별칭을 다시 사용하면 마지막 별칭 세트가 사용 가능한 별칭이됩니다.</target>
        </trans-unit>
        <trans-unit id="1597f08e6defd9dda49c4cddb74470253cdbaa8c" translate="yes" xml:space="preserve">
          <source>If you use string conditions make sure that your values are correctly quoted. The safest thing you can do is to never use string conditions.</source>
          <target state="translated">문자열 조건을 사용하는 경우 값이 올바르게 인용되어 있는지 확인하십시오. 가장 안전한 방법은 문자열 조건을 사용하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="61207cedee2c2a16dcc4f89b26e081b83e254103" translate="yes" xml:space="preserve">
          <source>If you want to allow other kind of empty data on a field, you need to pass other flags:</source>
          <target state="translated">필드에 다른 종류의 빈 데이터를 허용하려면 다른 플래그를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="4b9c6c5165adad98e5715b6842f4c34899530b4d" translate="yes" xml:space="preserve">
          <source>If you want to bring all or certain languages for each of the fetched records, you can use the custom &lt;code&gt;translations&lt;/code&gt; finder of &lt;code&gt;TranslateBehavior&lt;/code&gt; that is exposed to the table.</source>
          <target state="translated">가져온 각 레코드에 대해 모든 또는 특정 언어를 가져 오려면 테이블에 노출 된 &lt;code&gt;TranslateBehavior&lt;/code&gt; 의 사용자 정의 &lt;code&gt;translations&lt;/code&gt; 파인더를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f718c665b69422db89f1d1f2c1d2edb2b8f934f" translate="yes" xml:space="preserve">
          <source>If you want to bring all or certain languages for each of the fetched records, you can use the custom &lt;code&gt;translations&lt;/code&gt; finders that is exposed to the table.</source>
          <target state="translated">가져온 각 레코드에 대해 모든 언어 또는 특정 언어를 가져 오려면 테이블에 노출 된 사용자 정의 &lt;code&gt;translations&lt;/code&gt; 파인더를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47eaf1faa70973b164db59ae64b662ce94d3330f" translate="yes" xml:space="preserve">
          <source>If you want to nest inputs in the labels, you will need to modify the default templates.</source>
          <target state="translated">레이블에 입력을 중첩 시키려면 기본 템플릿을 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe0a40de4090dcb29dcbe949b62eadecf5483f0b" translate="yes" xml:space="preserve">
          <source>If you want to use an element from a plugin for rendering your flash message you can use the dot notation for the plugin's element name:</source>
          <target state="translated">플래시 메시지를 렌더링하기 위해 플러그인의 요소를 사용하려면 플러그인의 요소 이름에 점 표기법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="562a0de022b6610f5dac1341ffe6599a32344251" translate="yes" xml:space="preserve">
          <source>If you wish to control the default format to be used for this method, you can alter the value of the static &lt;code&gt;Time::$defaultLocale&lt;/code&gt; variable and set it to one of the possible formats accepted by this function.</source>
          <target state="translated">이 메서드에 사용할 기본 형식을 제어하려면 정적 &lt;code&gt;Time::$defaultLocale&lt;/code&gt; 변수 의 값을 변경 하고이 함수에서 허용하는 가능한 형식 중 하나로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0edccc35734c87bae5157b33a89f72aed989ffb" translate="yes" xml:space="preserve">
          <source>If you wish to filter duplicates based of those rows sharing a particular field or set of fields, you may pass an array of fields to filter on. Beware that this option might not be fully supported in all database systems.</source>
          <target state="translated">특정 필드 또는 필드 집합을 공유하는 행을 기준으로 중복 항목을 필터링하려는 경우 필터링 할 필드 배열을 전달할 수 있습니다. 이 옵션이 모든 데이터베이스 시스템에서 완전히 지원되지는 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="993a6bae74b8e1445fda4b9cfd8ee97872ae2e99" translate="yes" xml:space="preserve">
          <source>If you wish to include a prefix to all messages, for instance to identify the application or the web server, then use the prefix option. Please keep in mind the prefix is shared by all streams using syslog, as it is dependent of the running process. For a local prefix, to be used only by one stream, you can use the format key.</source>
          <target state="translated">예를 들어 응용 프로그램이나 웹 서버를 식별하기 위해 모든 메시지에 접두사를 포함 시키려면 접두사 옵션을 사용하십시오. 접두사는 실행중인 프로세스에 종속되므로 syslog를 사용하는 모든 스트림에서 접두사를 공유합니다. 하나의 스트림에서만 로컬 접두사를 사용하려면 형식 키를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13e9c3257c8f53ef681f8c3244a0b45575d5ee29" translate="yes" xml:space="preserve">
          <source>If you wish to modify an existing configuration, you should drop it, change configuration and then re-add it.</source>
          <target state="translated">기존 구성을 수정하려면 구성을 삭제하고 구성을 변경 한 다음 다시 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="8de06d1dfef1e66f480b2337dfdfa81b929d8bda" translate="yes" xml:space="preserve">
          <source>If you wish to override fields, you need to call the &lt;code&gt;locale&lt;/code&gt; method in this behavior for setting the language you want to fetch from the translations table.</source>
          <target state="translated">필드를 대체하려면이 변환에서 &lt;code&gt;locale&lt;/code&gt; 메소드 를 호출 하여 변환 테이블에서 페치하려는 언어를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="dcc8e1eef73b48e85f405dbc2c4713542a974e69" translate="yes" xml:space="preserve">
          <source>If you wish to remove all decorators from the stack, set the first parameter to null and the second to true.</source>
          <target state="translated">스택에서 모든 데코레이터를 제거하려면 첫 번째 매개 변수를 null로 설정하고 두 번째 매개 변수를 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="472a95c50e63eb07d9f2d02c31514d32b04e41cd" translate="yes" xml:space="preserve">
          <source>If you wish to use digest authentication alongside other authentication methods, it's recommended that you store the digest authentication separately. For example &lt;code&gt;User.digest_pass&lt;/code&gt; could be used for a digest password, while &lt;code&gt;User.password&lt;/code&gt; would store the password hash for use with other methods like Basic or Form.</source>
          <target state="translated">다이제스트 인증을 다른 인증 방법과 함께 사용하려면 다이제스트 인증을 별도로 저장하는 것이 좋습니다. 예를 들어 &lt;code&gt;User.digest_pass&lt;/code&gt; 는 다이제스트 암호로 사용될 수 있지만 &lt;code&gt;User.password&lt;/code&gt; 는 Basic 또는 Form과 같은 다른 방법과 함께 사용하기 위해 암호 해시를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="bd6418e97f246e6100ce99e28b8b7c272a3fbf58" translate="yes" xml:space="preserve">
          <source>If you're doing multiple requests to the same hostname it's often convenient to use the constructor arguments to create a scoped client. This allows you to keep your code DRY and not repeat hostnames, authentication, and other options.</source>
          <target state="translated">동일한 호스트 이름으로 여러 요청을 수행하는 경우 생성자 인수를 사용하여 범위가 지정된 클라이언트를 만드는 것이 편리합니다. 이를 통해 코드를 DRY로 유지하고 호스트 이름, 인증 및 기타 옵션을 반복하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="701ac75044b0edbfe83e35faec33b04b8eb0aa23" translate="yes" xml:space="preserve">
          <source>If your Table uses any behaviors you can call them as if they were on the table object.</source>
          <target state="translated">테이블에서 동작을 사용하는 경우 마치 테이블 개체에있는 것처럼 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16cb37439e33ae990b1115e80a368fb4ae10c8be" translate="yes" xml:space="preserve">
          <source>If your association includes conditions or a finder, the junction table will be included in the query's contained associations.</source>
          <target state="translated">연결에 조건 또는 파인더가 포함 된 경우 접합 테이블이 쿼리에 포함 된 연결에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9c0de477ba8efd5dc7361acf119b1966cb1eb53a" translate="yes" xml:space="preserve">
          <source>If your association includes conditions, the junction table will be included in the query's contained associations.</source>
          <target state="translated">연결에 조건이 포함 된 경우 정션 테이블이 쿼리에 포함 된 연결에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ab6d5af7ada14a0175209746d285e65cdf832212" translate="yes" xml:space="preserve">
          <source>If your client supports it you can use native HTTP methods.</source>
          <target state="translated">클라이언트가 지원하는 경우 기본 HTTP 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a53aee7dcb07fcf0a5fe55cbc21b1d4a63258c73" translate="yes" xml:space="preserve">
          <source>If your database date times are in a specific time zone that you want to keep in the DateTime instance then set this to true.</source>
          <target state="translated">데이터베이스 날짜 시간이 DateTime 인스턴스에 유지하려는 특정 시간대에있는 경우이를 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="4898ed22f43079790d1e73c106e3006dc7888743" translate="yes" xml:space="preserve">
          <source>If your find conditions require custom order, associations or conditions, then the $search parameter can be a callable that takes the Query as the argument, or a \Cake\ORM\Query object passed as the $search parameter. Allowing you to customize the find results.</source>
          <target state="translated">찾기 조건에 사용자 정의 순서, 연관 또는 조건이 필요한 경우 $ search 매개 변수는 Query를 인수로 사용하는 호출 가능 매개 변수이거나 $ search 매개 변수로 전달 된 \ Cake \ ORM \ Query 오브젝트 일 수 있습니다. 찾기 결과를 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff0cecd85a255e66c843057312e84b6f7e22d78e" translate="yes" xml:space="preserve">
          <source>If your response body is in XML or JSON you can use special content type specific accessors to read the decoded data. JSON data will be returned as arrays, while XML data will be returned as SimpleXML nodes:</source>
          <target state="translated">응답 본문이 XML 또는 JSON 인 경우 특수 컨텐츠 유형 특정 접근자를 사용하여 디코딩 된 데이터를 읽을 수 있습니다. JSON 데이터는 배열로 반환되고 XML 데이터는 SimpleXML 노드로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="73127e7a78db42b54566c36ed4012eda0bb4a4c5" translate="yes" xml:space="preserve">
          <source>If your settings contain a key with the current table's alias. The data inside that key will be used. Otherwise the top level configuration will be used.</source>
          <target state="translated">설정에 현재 테이블의 별칭이있는 키가 포함 된 경우 해당 키 내부의 데이터가 사용됩니다. 그렇지 않으면 최상위 구성이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f6aaf92a69653b623e112bed1f0cbea7e3a10c41" translate="yes" xml:space="preserve">
          <source>If your when condition returns &lt;code&gt;true&lt;/code&gt; the before/after methods will be called.</source>
          <target state="translated">when 조건이 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 before / after 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2048ca7474d5983c85e3918c2c21fede2fbf85de" translate="yes" xml:space="preserve">
          <source>Ignore case</source>
          <target state="translated">대소 문자 무시</target>
        </trans-unit>
        <trans-unit id="c8df264e173224f8cff8023ffb922de85746938b" translate="yes" xml:space="preserve">
          <source>Ignore updating the field if it is dirty</source>
          <target state="translated">더러워진 필드 업데이트 무시</target>
        </trans-unit>
        <trans-unit id="560416ccab37d933c5fc8a7ccc28970b3cfca734" translate="yes" xml:space="preserve">
          <source>Ignored if contructor is passed an ErrorHandler instance.</source>
          <target state="translated">생성자에 ErrorHandler 인스턴스가 전달되면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5b136ad66fe86623e90711c8ce83e5feb2fca07c" translate="yes" xml:space="preserve">
          <source>Ignoring the requested protocol</source>
          <target state="translated">요청한 프로토콜 무시</target>
        </trans-unit>
        <trans-unit id="05d4214d60e82efd786a3db2073865df139f3ef2" translate="yes" xml:space="preserve">
          <source>Implement the Countable interface.</source>
          <target state="translated">Countable 인터페이스를 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="5ca91a1e05a0f79fb70acfef38e540544e7691c3" translate="yes" xml:space="preserve">
          <source>Implement this method to avoid having to overwrite the constructor and call parent.</source>
          <target state="translated">생성자를 덮어 쓰지 않고 부모를 호출하지 않도록이 메소드를 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="c524cc4e7c16c10ea7d7b062ace03f8984c74227" translate="yes" xml:space="preserve">
          <source>Implement this method to avoid having to overwrite the constructor and calling parent::__construct().</source>
          <target state="translated">생성자를 덮어 쓰지 않고 parent :: __ construct ()를 호출하지 않도록이 메소드를 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="85863607794004244e2c02ef3d2996da0eaab765" translate="yes" xml:space="preserve">
          <source>Implement this method with your command's logic.</source>
          <target state="translated">명령의 로직으로이 방법을 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="51c50da971ecfbcfbd2a00da20546ff866d43c6a" translate="yes" xml:space="preserve">
          <source>Implementation of</source>
          <target state="translated">구현</target>
        </trans-unit>
        <trans-unit id="edbd5877efc5c4e752917a1cd898076770959294" translate="yes" xml:space="preserve">
          <source>Implementation of Countable.</source>
          <target state="translated">셀 수있는 구현.</target>
        </trans-unit>
        <trans-unit id="565a94c2be7588b1f089d3535080a62d3a4a2d5b" translate="yes" xml:space="preserve">
          <source>Implementation of IteratorAggregate.</source>
          <target state="translated">IteratorAggregate의 구현</target>
        </trans-unit>
        <trans-unit id="d91e4276585bddf8915dba3a152f31a6ac1155fc" translate="yes" xml:space="preserve">
          <source>Implementation of PSR HTTP streams.</source>
          <target state="translated">PSR HTTP 스트림 구현.</target>
        </trans-unit>
        <trans-unit id="b2ace938f10c97fea648706a1d6a4814cb970d74" translate="yes" xml:space="preserve">
          <source>Implemented events.</source>
          <target state="translated">구현 된 이벤트.</target>
        </trans-unit>
        <trans-unit id="8c491e36ef2d198140afc41c6295cd35a1de9cd4" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses that need it.</source>
          <target state="translated">그것을 필요로하는 서브 클래스로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="8e502b18c6447da4971b10a304a741538b02c4aa" translate="yes" xml:space="preserve">
          <source>Implementing application specific exception handling</source>
          <target state="translated">응용 프로그램 별 예외 처리 구현</target>
        </trans-unit>
        <trans-unit id="6a5c6eb3ba7fec5857c552cc229ff0da21585b00" translate="yes" xml:space="preserve">
          <source>Implementing application specific exception rendering</source>
          <target state="translated">응용 프로그램 별 예외 렌더링 구현</target>
        </trans-unit>
        <trans-unit id="dd0e1c58d1de5ee393b85f2d8f185f9a696ebeec" translate="yes" xml:space="preserve">
          <source>Implementing objects are expected to declare a &lt;code&gt;$_defaultConfig&lt;/code&gt; property.</source>
          <target state="translated">객체를 구현하면 &lt;code&gt;$_defaultConfig&lt;/code&gt; 속성 을 선언해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3f34a6b085d4026f490615d90c219c2b3979ed9b" translate="yes" xml:space="preserve">
          <source>Implementing objects are expected to declare a static &lt;code&gt;$_dsnClassMap&lt;/code&gt; property.</source>
          <target state="translated">객체를 구현하면 정적 &lt;code&gt;$_dsnClassMap&lt;/code&gt; 속성 을 선언 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="4d28bb088ff84de4c052e7b8928ec0704298e728" translate="yes" xml:space="preserve">
          <source>Implementing objects are expected to modify the &lt;code&gt;$_compareBasePath&lt;/code&gt; property before use.</source>
          <target state="translated">개체를 구현하면 사용하기 전에 &lt;code&gt;$_compareBasePath&lt;/code&gt; 속성 을 수정 해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8c6d8f651dd3c780ddc9529335befd647611edd" translate="yes" xml:space="preserve">
          <source>Implements $entity[$offset] = $value;</source>
          <target state="translated">구현 $ entity [$ offset] = $ value;</target>
        </trans-unit>
        <trans-unit id="b7f08b9ca1ce8cab72f5aa4f2130a25ff5d5b84b" translate="yes" xml:space="preserve">
          <source>Implements $entity[$offset];</source>
          <target state="translated">$ entity [$ offset]를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="f8e1fe1534aadd5f166c450424cc833cd289bf4c" translate="yes" xml:space="preserve">
          <source>Implements ArrayAccess to easily modify rules in the set</source>
          <target state="translated">집합의 규칙을 쉽게 수정하기 위해 ArrayAccess를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="b5e8556d87ce7f4dfe9c5908e40d7882194f31a5" translate="yes" xml:space="preserve">
          <source>Implements Cake\Event\EventDispatcherInterface.</source>
          <target state="translated">Cake \ Event \ EventDispatcherInterface를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="453c4fb74912322b0dbd0425bd44c4d9890265e3" translate="yes" xml:space="preserve">
          <source>Implements a simplistic version of the popular Map-Reduce algorithm. Acts like an iterator for the original passed data after each result has been processed, thus offering a transparent wrapper for results coming from any source.</source>
          <target state="translated">인기있는 Map-Reduce 알고리즘의 간단한 버전을 구현합니다. 각 결과가 처리 된 후 원래 전달 된 데이터의 반복자처럼 작동하여 모든 소스에서 나오는 결과에 대한 투명한 래퍼를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e2b110db0edcdc7d6e516b1707b283b9cd64fbb3" translate="yes" xml:space="preserve">
          <source>Implements cascading deletes for dependent associations.</source>
          <target state="translated">종속 연관에 대한 계단식 삭제를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="f84eb2e96cda0d199fe560f9415f8b63518e502b" translate="yes" xml:space="preserve">
          <source>Implements default and single-use mappings for columns to their associated types</source>
          <target state="translated">연관된 유형으로 열에 대한 기본 및 일회용 맵핑을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="2999349189853c1460ac5cd25fa5957c031a42d4" translate="yes" xml:space="preserve">
          <source>Implements empty default methods for PHPUnit\Framework\TestListener.</source>
          <target state="translated">PHPUnit \ Framework \ TestListener에 대한 빈 기본 메서드를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="c556a3f5fb954d657174b2d3bedde19ad3119240" translate="yes" xml:space="preserve">
          <source>Implements isset($entity);</source>
          <target state="translated">구현 isset ($ entity);</target>
        </trans-unit>
        <trans-unit id="c72f0ba80e1731f0cb6bf417f66bfcdce6c176df" translate="yes" xml:space="preserve">
          <source>Implements methods for HTTP requests.</source>
          <target state="translated">HTTP 요청에 대한 메소드를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="07c860664b7b2ef228578d36b083f98093e7f58f" translate="yes" xml:space="preserve">
          <source>Implements methods for HTTP responses.</source>
          <target state="translated">HTTP 응답을위한 메소드를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="dc051037c7b803668723586717f2431418e033d1" translate="yes" xml:space="preserve">
          <source>Implements retry strategy based on db error codes and wait interval.</source>
          <target state="translated">db 오류 코드 및 대기 간격을 기반으로 재시도 전략을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="e9dd16e83c3ae484c6509fffc27052c9ece6d830" translate="yes" xml:space="preserve">
          <source>Implements sending Cake\Http\Client\Request via ext/curl.</source>
          <target state="translated">ext / curl을 통해 Cake \ Http \ Client \ Request를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="d3e646a94aa1c9612226cfd13e622f6669280923" translate="yes" xml:space="preserve">
          <source>Implements sending Cake\Http\Client\Request via php's stream API.</source>
          <target state="translated">PHP의 스트림 API를 통해 Cake \ Http \ Client \ Request를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="6b88b3357293333f6024573f7d12262d9a99a3f4" translate="yes" xml:space="preserve">
          <source>Implements the TypedResultInterface</source>
          <target state="translated">TypedResultInterface를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="356d49b78d85c177d728a5713bb3f3dc24394d04" translate="yes" xml:space="preserve">
          <source>Implements the logic for loading an association using a SELECT query</source>
          <target state="translated">SELECT 쿼리를 사용하여 연결을로드하는 논리를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="9a91a86cc76c97eda96c4b8f69559a13eb3e47bf" translate="yes" xml:space="preserve">
          <source>Implements the logic for loading an association using a SELECT query and a pivot table</source>
          <target state="translated">SELECT 쿼리 및 피벗 테이블을 사용하여 연결을로드하기위한 논리를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="f3d70f178689e2d4ab4223b4cae8415902184c8d" translate="yes" xml:space="preserve">
          <source>Implements unset($result[$offset]);</source>
          <target state="translated">구현 unset ($ result [$ offset]);</target>
        </trans-unit>
        <trans-unit id="c05d31b25e2e0efbb40bb7184a7e2c688d5a5d6f" translate="yes" xml:space="preserve">
          <source>Implements what IntlDateFormatter::formatObject() is in PHP 5.5+</source>
          <target state="translated">PHP 5.5 이상에서 IntlDateFormatter :: formatObject ()가 무엇인지 구현합니다.</target>
        </trans-unit>
        <trans-unit id="89116743ce7b83cd75ea7682d90238e03b3fc490" translate="yes" xml:space="preserve">
          <source>Implements writing to console.</source>
          <target state="translated">콘솔에 쓰기를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="a7cf921dde0df8046357cc9698b355dad8d4da10" translate="yes" xml:space="preserve">
          <source>Implements writing to log files.</source>
          <target state="translated">로그 파일에 쓰기를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="db4d73267bef2a99400a6bd579cb43f8d53ec29a" translate="yes" xml:space="preserve">
          <source>Implements writing to the internal storage.</source>
          <target state="translated">내부 저장소에 쓰기를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="fe41326d6910212f0994dd469b61dad8e59839c1" translate="yes" xml:space="preserve">
          <source>Implode method to keep keys are multidimensional arrays</source>
          <target state="translated">키를 다차원 배열로 유지하는 Implode 메서드</target>
        </trans-unit>
        <trans-unit id="eee92b2dc96f164b828fac5c0aa6d449a7c3da90" translate="yes" xml:space="preserve">
          <source>Important Keys:</source>
          <target state="translated">중요한 키 :</target>
        </trans-unit>
        <trans-unit id="ca8488184ca3b6277d38954255dc111927dd5977" translate="yes" xml:space="preserve">
          <source>Important keys:</source>
          <target state="translated">중요한 키 :</target>
        </trans-unit>
        <trans-unit id="37fde4625502a4da6dd3fc4f2bcc6ae6f237ec87" translate="yes" xml:space="preserve">
          <source>Important: This function is very forgiving about whitespace and also accepts any permutation of attribute order. It will also allow whitespace between specified tags.</source>
          <target state="translated">중요 사항 :이 함수는 공백에 대해 매우 관대하며 속성 순서의 순열도 허용합니다. 또한 지정된 태그 사이에 공백을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="85a5ac2edd0b9eabb81a74235d4df63af8873457" translate="yes" xml:space="preserve">
          <source>In 4.x the following methods will officially be added to the interface:</source>
          <target state="translated">4.x에서는 다음 메소드가 공식적으로 인터페이스에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="7c2938ea35fea52cd2d55cc8f74a7d7de56df3ce" translate="yes" xml:space="preserve">
          <source>In PUT/PATCH/DELETE requests this property will contain the form-urlencoded data.</source>
          <target state="translated">PUT / PATCH / DELETE 요청에서이 속성은 폼 urlencoded 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="284d5c4e46c8b04c3245d415b8b9513921125e2b" translate="yes" xml:space="preserve">
          <source>In addition to simple path based matching you can use a closure to match on arbitrary request or response conditions. For example:</source>
          <target state="translated">간단한 경로 기반 일치 외에도 클로저를 사용하여 임의 요청 또는 응답 조건을 일치시킬 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3aed6f14aaf6ebd3814f18506f566dab4185f549" translate="yes" xml:space="preserve">
          <source>In addition to the above keys, the following keys are implemented in some database dialects, but not all:</source>
          <target state="translated">위의 키 외에도 다음 키는 일부 데이터베이스 언어로 구현되지만 일부는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="679caf214034f2dfd4aca5d0ebf688aa8c2fe107" translate="yes" xml:space="preserve">
          <source>In addition to the above options, the following options allow you to control which input elements are generated. By setting any option to false you can disable that input picker. In addition each picker allows you to set additional options that are set as HTML properties on the picker.</source>
          <target state="translated">위의 옵션 외에도 다음 옵션을 통해 생성 할 입력 요소를 제어 할 수 있습니다. 옵션을 false로 설정하면 해당 입력 선택기를 비활성화 할 수 있습니다. 또한 각 선택 도구를 사용하면 선택 도구에서 HTML 특성으로 설정된 추가 옵션을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46cd666cac7b483b95fb6416c6cf1d08a0e9e765" translate="yes" xml:space="preserve">
          <source>In addition to the core events, behaviors can respond to any event fired from your Table classes including custom application specific ones.</source>
          <target state="translated">핵심 이벤트 외에도 비헤이비어는 사용자 지정 응용 프로그램 별 이벤트를 포함하여 Table 클래스에서 발생한 모든 이벤트에 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fb561c559b1d7ba7afea0de4e35696e26ec2395" translate="yes" xml:space="preserve">
          <source>In addition to the default routes, this would also connect a route for &lt;code&gt;/articles/delete_all&lt;/code&gt;. By default the path segment will match the key name. You can use the 'path' key inside the resource definition to customize the path name.</source>
          <target state="translated">기본 경로 외에도 &lt;code&gt;/articles/delete_all&lt;/code&gt; 의 경로를 연결합니다 . 기본적으로 경로 세그먼트는 키 이름과 일치합니다. 자원 정의 내에서 'path'키를 사용하여 경로 이름을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41da087bcedfdfca9a918a4bb5a9070f66e155d8" translate="yes" xml:space="preserve">
          <source>In addition to the native &lt;code&gt;parse_ini_file&lt;/code&gt; features, IniConfig also allows you to create nested array structures through usage of &lt;code&gt;.&lt;/code&gt; delimited names. This allows you to create nested arrays structures in an ini config file. For example:</source>
          <target state="translated">기본 &lt;code&gt;parse_ini_file&lt;/code&gt; 기능 외에도 IniConfig 를 사용하여의 사용을 통해 중첩 배열 구조를 만들 수 있습니다 &lt;code&gt;.&lt;/code&gt; 구분 된 이름. 이를 통해 ini 구성 파일에 중첩 배열 구조를 만들 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ef1c61c273e1207d5b14399aead93499fb911d94" translate="yes" xml:space="preserve">
          <source>In addition to the standard find($type) finder methods, CakePHP provides dynamic finder methods. These methods allow you to easily set basic conditions up. For example to filter users by username you would call</source>
          <target state="translated">CakePHP는 표준 find ($ type) 파인더 메소드 외에도 동적 파인더 메소드를 제공합니다. 이 방법을 사용하면 기본 조건을 쉽게 설정할 수 있습니다. 예를 들어 사용자 이름으로 사용자를 필터링하려면</target>
        </trans-unit>
        <trans-unit id="60d14351ae374bd8484ba894a941f1ccb268d81d" translate="yes" xml:space="preserve">
          <source>In addition to the standard options documented in Cake\Http\Client, this adapter supports all available curl options. Additional curl options can be set via the &lt;code&gt;curl&lt;/code&gt; option key when making requests or configuring a client.</source>
          <target state="translated">Cake \ Http \ Client에 문서화 된 표준 옵션 외에도이 어댑터는 사용 가능한 모든 curl 옵션을 지원합니다. 요청을하거나 클라이언트를 구성 할 때 &lt;code&gt;curl&lt;/code&gt; 옵션 키 를 통해 추가 curl 옵션을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="328899a06526daf302b6a50e727cf437ac0c2f1e" translate="yes" xml:space="preserve">
          <source>In case the `$association` argument is of an invalid type.</source>
          <target state="translated">`$ association` 인수가 잘못된 유형 인 경우.</target>
        </trans-unit>
        <trans-unit id="baf4d1cdfe493cadb161fed99f803c016b72e15b" translate="yes" xml:space="preserve">
          <source>In case the class name is set after the target table has been resolved, and it doesn't match the target table's class name.</source>
          <target state="translated">대상 테이블이 확인 된 후 클래스 이름이 설정되고 대상 테이블의 클래스 이름과 일치하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="785b82de83f02c126c2a80c20fe133e5ef861a41" translate="yes" xml:space="preserve">
          <source>In case the index is out of bound</source>
          <target state="translated">인덱스가 범위를 벗어난 경우</target>
        </trans-unit>
        <trans-unit id="6b4910ed88c4b06b1225195809313cb1ed21be1a" translate="yes" xml:space="preserve">
          <source>In case the matching crumb can not be found</source>
          <target state="translated">일치하는 빵 부스러기를 찾을 수없는 경우</target>
        </trans-unit>
        <trans-unit id="7fb595174238f55d43f68396a303e378cdaa4771" translate="yes" xml:space="preserve">
          <source>In case the matching crumb can not be found.</source>
          <target state="translated">일치하는 빵 부스러기를 찾을 수없는 경우.</target>
        </trans-unit>
        <trans-unit id="d8d8a53ae0f468002727e49f1bcd3189f95e90f4" translate="yes" xml:space="preserve">
          <source>In case the processed query contains any joins, as removing aliases from the conditions can break references to the joined tables.</source>
          <target state="translated">처리 된 쿼리에 조인이 포함 된 경우 조건에서 별칭을 제거하면 조인 된 테이블에 대한 참조가 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="497adf8841580c266d3f28d01290810d56abe1fc" translate="yes" xml:space="preserve">
          <source>In general all Cache operations are supported by all cache engines. However, Cache::increment() and Cache::decrement() are not supported by File caching.</source>
          <target state="translated">일반적으로 모든 캐시 작업은 모든 캐시 엔진에서 지원됩니다. 그러나 Cache :: increment () 및 Cache :: decrement ()는 파일 캐싱에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f890383b4a50ca0ad3e04f7cbf6edd146d6fc8f" translate="yes" xml:space="preserve">
          <source>In most cases, this will be the origin-form of the composed URI, unless a value was provided to the concrete implementation (see withRequestTarget() below).</source>
          <target state="translated">대부분의 경우 구체적인 구현에 값이 제공되지 않는 한 구성된 URI의 원본 형식이됩니다 (아래 withRequestTarget () 참조).</target>
        </trans-unit>
        <trans-unit id="308783391b28d2a2b35cf6865052c185174728db" translate="yes" xml:space="preserve">
          <source>In order to create a carteisan product a collection must contain a single dimension of data.</source>
          <target state="translated">Carteisan 제품을 생성하려면 컬렉션에 단일 차원의 데이터가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6b1e2bc9eb14e5511e480e6fded0a79ba77a97c1" translate="yes" xml:space="preserve">
          <source>In order to mark a response as not modified, you need to set at least the Last-Modified etag response header before calling this method. Otherwise a comparison will not be possible.</source>
          <target state="translated">응답을 수정되지 않은 것으로 표시하려면이 메소드를 호출하기 전에 최소한 Last-Modified etag 응답 헤더를 설정해야합니다. 그렇지 않으면 비교가 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="4f6a3b58eaefa337795e5b96c3fa6a10d5f2e196" translate="yes" xml:space="preserve">
          <source>In some databases, this operation might not be supported or will require the query to be transformed in order to limit the result set size.</source>
          <target state="translated">일부 데이터베이스에서는이 작업이 지원되지 않거나 결과 집합 크기를 제한하기 위해 쿼리를 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e661b89fb1a3939112610d0f65f7236485a29a5d" translate="yes" xml:space="preserve">
          <source>In terminals this will act similar to using json_encode() with JSON_PRETTY_PRINT directly, when not run on cli will also wrap</source>
          <target state="translated">터미널에서 이것은 JSON_PRETTY_PRINT와 함께 json_encode ()를 직접 사용하는 것과 비슷하게 작동합니다 .cli에서 실행하지 않으면 랩됩니다.</target>
        </trans-unit>
        <trans-unit id="353bb95314060ac4cc071ddfbb9a570eba7a5dc3" translate="yes" xml:space="preserve">
          <source>In terminals this will act similar to using print_r() directly, when not run on cli print_r() will also wrap</source>
          <target state="translated">터미널에서 이것은 print_r ()을 직접 사용하는 것과 비슷하게 작동합니다. cli에서 실행하지 않으면 print_r ()도 줄 바꿈됩니다</target>
        </trans-unit>
        <trans-unit id="3024c99953b518eb20825f43188f386ab23c617e" translate="yes" xml:space="preserve">
          <source>In the above example, had the collection not been compiled before, the iterations for &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;sortBy&lt;/code&gt; and &lt;code&gt;extract&lt;/code&gt; would've been executed twice: once for getting &lt;code&gt;$isJohnHere&lt;/code&gt; and once for &lt;code&gt;$allButJohn&lt;/code&gt;</source>
          <target state="translated">위의 예에서, 수집 이전에 컴파일되지 대한 반복 한 &lt;code&gt;map&lt;/code&gt; , &lt;code&gt;sortBy&lt;/code&gt; 및 &lt;code&gt;extract&lt;/code&gt; 두 번 실행 된 한 것 : 한 번 얻기를위한 &lt;code&gt;$isJohnHere&lt;/code&gt; 과 한 번을 &lt;code&gt;$allButJohn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dadac3a23ce20ae25389182188229a9a44177815" translate="yes" xml:space="preserve">
          <source>In the above example, no field would be generated for the title field.</source>
          <target state="translated">위의 예에서는 제목 필드에 대한 필드가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="784b7535ae32e83cf7f988bfe2a4a7a655e58cbd" translate="yes" xml:space="preserve">
          <source>In the above example, the email uniqueness will be scoped to only rows having the same site_id. Scoping will only be used if the scoping field is present in the data to be validated.</source>
          <target state="translated">위의 예에서 전자 메일 고유성은 site_id가 동일한 행으로 만 범위가 지정됩니다. 범위 지정 필드는 유효성을 검사 할 데이터에 범위 필드가있는 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5fc34b072599666d306fa10202b90f11ec787add" translate="yes" xml:space="preserve">
          <source>In the future this might be refactored into a separate widget as other input types (multi-checkboxes) will also need labels generated.</source>
          <target state="translated">앞으로 다른 입력 유형 (다중 확인란)에도 레이블이 생성되므로 별도의 위젯으로 리팩토링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0e1f883de40798ed4e3ee793925cde14a0c92aa" translate="yes" xml:space="preserve">
          <source>In this class we want Date objects to have their time set to the beginning of the day.</source>
          <target state="translated">이 클래스에서는 Date 객체의 시간이 하루의 시작으로 설정되도록합니다.</target>
        </trans-unit>
        <trans-unit id="d743329c501aae0f3cf506652e2ae08152663ad7" translate="yes" xml:space="preserve">
          <source>In this context class, this is simply defined by the 'length' array.</source>
          <target state="translated">이 컨텍스트 클래스에서 이것은 단순히 'length'배열에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="dcf6ffe604a4be4f9965c8b8001bbc26c0aff973" translate="yes" xml:space="preserve">
          <source>In this context class, this is simply defined by the 'required' array.</source>
          <target state="translated">이 컨텍스트 클래스에서 이는 단순히 '필수'배열로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a402d45ea79a80d4d866dc0d5d2e2a1448f83c5a" translate="yes" xml:space="preserve">
          <source>In your controller, you could do the following:</source>
          <target state="translated">컨트롤러에서 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5eec0ff4526a4e8d3efef3266047d6f425cf4935" translate="yes" xml:space="preserve">
          <source>In your controller: $this-&amp;gt;Flash-&amp;gt;set('This has been saved');</source>
          <target state="translated">컨트롤러에서 : $ this-&amp;gt; Flash-&amp;gt; set ( 'This was saved');</target>
        </trans-unit>
        <trans-unit id="e2f5e2634cc431a0693078c57c5a35b8b45863f8" translate="yes" xml:space="preserve">
          <source>In your template file: $this-&amp;gt;Flash-&amp;gt;render('somekey'); Will default to flash if no param is passed</source>
          <target state="translated">템플릿 파일에서 : $ this-&amp;gt; Flash-&amp;gt; render ( 'somekey'); 매개 변수가 전달되지 않으면 기본적으로 깜박입니다.</target>
        </trans-unit>
        <trans-unit id="110f1cb43fd21e20e0ba4c6583eae567465e5fea" translate="yes" xml:space="preserve">
          <source>In your view:</source>
          <target state="translated">당신의 관점에서 :</target>
        </trans-unit>
        <trans-unit id="ac5d83183e9d6c943d20cd6c4d8f00ad10e70af0" translate="yes" xml:space="preserve">
          <source>In-memory cache of date formatters</source>
          <target state="translated">날짜 포맷터의 메모리 내 캐시</target>
        </trans-unit>
        <trans-unit id="a80b01dd169a06b8517bf07e9a585dcaf7223466" translate="yes" xml:space="preserve">
          <source>In-memory group all results by the value of a column.</source>
          <target state="translated">메모리 내 그룹의 모든 결과는 열 값을 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="741c47d1cbc1161e3846cae1b35d669a0db40f6b" translate="yes" xml:space="preserve">
          <source>In-memory limit and offset for the query results.</source>
          <target state="translated">쿼리 결과에 대한 메모리 내 제한 및 오프셋</target>
        </trans-unit>
        <trans-unit id="203c758cb11a8560e084fa95f1d147ef2c8ea8c8" translate="yes" xml:space="preserve">
          <source>In-memory randomize the order the results are returned</source>
          <target state="translated">인 메모리는 결과가 반환되는 순서를 무작위로</target>
        </trans-unit>
        <trans-unit id="7c2a37416957275c5515a0d01e624adf2189cf99" translate="yes" xml:space="preserve">
          <source>In-memory shuffle the results and return a subset of them.</source>
          <target state="translated">인 메모리는 결과를 섞고 그 일부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="097f0606263f890a0a4732fd10d410bce74ca00b" translate="yes" xml:space="preserve">
          <source>Include error details for PHP 7 fatal errors.</source>
          <target state="translated">PHP 7 치명적 오류에 대한 오류 정보를 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="6b1b2f6d9e5c9ee1ada97609a1ff37635d89908a" translate="yes" xml:space="preserve">
          <source>Include file, ignoring include error if needed if file is missing</source>
          <target state="translated">파일이 없으면 필요한 경우 포함 오류를 무시하고 파일 포함</target>
        </trans-unit>
        <trans-unit id="b7f64ddb41488d9f5c139487b9056939ccc0b6c0" translate="yes" xml:space="preserve">
          <source>Include multiple CSS files:</source>
          <target state="translated">여러 CSS 파일을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="46bfe858bffbe857a8732ac2e54ccaf0204ec079" translate="yes" xml:space="preserve">
          <source>Include multiple script files:</source>
          <target state="translated">여러 스크립트 파일을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="9dc9b1fa8055844b0efd221380b71c1a5d6584d2" translate="yes" xml:space="preserve">
          <source>Include one CSS file:</source>
          <target state="translated">하나의 CSS 파일을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="5a4ce55099315a73dbc161a5312b0878c76ba712" translate="yes" xml:space="preserve">
          <source>Include one script file:</source>
          <target state="translated">하나의 스크립트 파일을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="4acf6f8a749b23d77526ee2a9888ac506ce76491" translate="yes" xml:space="preserve">
          <source>Include the base path, set to false to trim the base path off.</source>
          <target state="translated">기본 경로를 포함하고 기본 경로를 자르려면 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="81b6326094d6087872529746e29dfd80c0d411d6" translate="yes" xml:space="preserve">
          <source>Included by HasOne and HasMany association classes.</source>
          <target state="translated">HasOne 및 HasMany 연관 클래스에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e74dcc17e6a9d971e205281b85a5830c3c97ea76" translate="yes" xml:space="preserve">
          <source>Includes traits that integrate logging and ORM models to console commands.</source>
          <target state="translated">로깅 및 ORM 모델을 콘솔 명령에 통합하는 특성을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="63f287eda001408fc9101f1ec166f53566afbfa3" translate="yes" xml:space="preserve">
          <source>Includes:</source>
          <target state="translated">Includes:</target>
        </trans-unit>
        <trans-unit id="c3246b2cb6092a68dcdf4295bb5a74b65c335af0" translate="yes" xml:space="preserve">
          <source>Incomplete test.</source>
          <target state="translated">불완전한 테스트.</target>
        </trans-unit>
        <trans-unit id="3c1803614d926fdb0de0d481e9b9503b7fce8f91" translate="yes" xml:space="preserve">
          <source>Increases the PHP &quot;memory_limit&quot; ini setting by the specified amount in kilobytes</source>
          <target state="translated">PHP &quot;memory_limit&quot;ini 설정을 지정된 킬로바이트 단위로 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="8df0044668fefff5f5cff15d549495f24d2fd472" translate="yes" xml:space="preserve">
          <source>Increment a number under the key and return incremented value</source>
          <target state="translated">키 아래의 숫자를 증가시키고 증가 된 값을 반환</target>
        </trans-unit>
        <trans-unit id="1a6d93c98f8ad4bca2738950db616f6cf83e636a" translate="yes" xml:space="preserve">
          <source>Increment a number under the key and return incremented value.</source>
          <target state="translated">키 아래의 숫자를 증가시키고 증가 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="396b3aec79c888b038d9a8fdffd599953b574320" translate="yes" xml:space="preserve">
          <source>Increment the progress bar.</source>
          <target state="translated">진행률 표시 줄을 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="b0f3763e4002733053c57585327a3f52cb218863" translate="yes" xml:space="preserve">
          <source>Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.</source>
          <target state="translated">그룹 값 아래의 모든 키 삭제를 시뮬레이션하기 위해 그룹 값을 증가시킵니다. 이전 값은 만료 될 때까지 스토리지에 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd11e96089137c2fb571352bc3facaadb5008eaa" translate="yes" xml:space="preserve">
          <source>Increments the value of an integer cached key</source>
          <target state="translated">정수 캐시 키의 값을 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="2fede8555bb57e6c6b6a743680b7243822facb0e" translate="yes" xml:space="preserve">
          <source>Increments the value of an integer cached key &amp;amp; update the expiry time</source>
          <target state="translated">정수 캐시 키의 값을 증가시키고 만료 시간을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="45cef3b2ca06dc59888a6b4f8f7c9e227ab30c00" translate="yes" xml:space="preserve">
          <source>Increments the value of an integer cached key If the cache key is not an integer it will be treated as 0</source>
          <target state="translated">정수 캐시 키의 값을 증가시킵니다. 캐시 키가 정수가 아닌 경우 0으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="2c0a32478c407d4aa482d1e0f5838d4f152eddbe" translate="yes" xml:space="preserve">
          <source>Index of the crumb found, or null if it can not be found.</source>
          <target state="translated">발견 된 빵 부스러기의 색인. 찾을 수없는 경우 널.</target>
        </trans-unit>
        <trans-unit id="ab59c235876a721e1fd02492a697469e7efdf4aa" translate="yes" xml:space="preserve">
          <source>Indexes in the table.</source>
          <target state="translated">테이블의 인덱스.</target>
        </trans-unit>
        <trans-unit id="c718ddec01be57163a018e92380eae4bf8ff14d4" translate="yes" xml:space="preserve">
          <source>Indicate an invalid marker on a processed file</source>
          <target state="translated">처리 된 파일에 유효하지 않은 마커를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aaaf77ba38e930513167f271488a415cdf8e560e" translate="yes" xml:space="preserve">
          <source>Indicate whether aliases in SELECT clause need to be always quoted.</source>
          <target state="translated">SELECT 절의 별칭을 항상 따옴표로 묶어야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="20b5d6d4993365c3321e0bf203e834683e3e1286" translate="yes" xml:space="preserve">
          <source>Indicate whether or not this entity has been persisted.</source>
          <target state="translated">이 엔티티가 지속되었는지 여부를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="f2d3a27cda04f7a9466187489b368bb1fbc57376" translate="yes" xml:space="preserve">
          <source>Indicate whether or not this instance has been persisted.</source>
          <target state="translated">이 인스턴스가 지속되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0d62956e72b87fbd7462666edba84a82c4659ccb" translate="yes" xml:space="preserve">
          <source>Indicate whether or not this query dialect supports ordered unions.</source>
          <target state="translated">이 쿼리 언어가 정렬 된 통합을 지원하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8b6ef661e9c207d39e67f88f05a1d23b8c345f9a" translate="yes" xml:space="preserve">
          <source>Indicates if a &amp;gt; and &amp;lt; comparison should be used or &amp;lt;= or &amp;gt;=</source>
          <target state="translated">&amp;gt; 및 &amp;lt;비교를 사용해야하는지 또는 &amp;lt;= 또는&amp;gt; =를 사용해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8824858281720162e4d29dadcf664745129b877b" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true (always), 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns true.</source>
          <target state="translated">필드를 비울 수있는시기를 나타냅니다. 유효한 값은 true (항상), 'create', 'update'입니다. 콜 러블이 전달되면 콜백이 true를 반환 할 때만 필드를 비울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a510cd76ded7bc10c56e0e73f7350628645db4db" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true, 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns true.</source>
          <target state="translated">필드가 비어있을 수 있음을 나타냅니다. 유효한 값은 'create', 'update'입니다. 콜 러블이 전달되면 콜백이 true를 반환 할 때만 필드를 비울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f370c7c1257d999879e20542f131ea57c3bb3b59" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true, false, 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns false.</source>
          <target state="translated">필드를 비울 수있는시기를 나타냅니다. 유효한 값은 true, false, 'create', 'update'입니다. 콜 러블이 전달되면 콜백이 false를 반환 할 때만 필드를 비울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="720090e9e11421352cfbd36c0060ebe40b8b4cc8" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true, false, 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns true.</source>
          <target state="translated">필드를 비울 수있는시기를 나타냅니다. 유효한 값은 true, false, 'create', 'update'입니다. 콜 러블이 전달되면 콜백이 true를 반환 할 때만 필드를 비울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae437625d37310c372f03523c5a9740c4c7646d9" translate="yes" xml:space="preserve">
          <source>Indicates when the field is not allowed to be empty. Valid values are false (never), 'create', 'update'. If a callable is passed then the field will be required to be not empty when the callback returns true.</source>
          <target state="translated">필드를 비울 수없는시기를 나타냅니다. 유효한 값은 false (never), 'create', 'update'입니다. 콜 러블이 전달되면 콜백이 true를 반환 할 때 필드가 비어 있지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="2f3a2d4393b716d4a9eec557ce3f3e5e31e00b51" translate="yes" xml:space="preserve">
          <source>Indicates when the field is not allowed to be empty. Valid values are true (always), 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns false.</source>
          <target state="translated">필드를 비울 수없는시기를 나타냅니다. 유효한 값은 true (항상), 'create', 'update'입니다. 콜 러블이 전달되면 콜백이 false를 반환 할 때만 필드를 비울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54b4922bcf8f6973599e0f5a768b0ce410a5c179" translate="yes" xml:space="preserve">
          <source>Indicates whether internal state of this query was changed, this is used to discard internal cached objects such as the transformed query or the reference to the executed statement.</source>
          <target state="translated">이 쿼리의 내부 상태가 변경되었는지 여부를 나타내며, 이는 변환 된 쿼리 또는 실행 된 명령문에 대한 참조와 같은 내부 캐시 된 오브젝트를 버리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="856303943d5f889a35987df19d75aca4cf5c29c5" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the driver is doing automatic identifier quoting for all queries</source>
          <target state="translated">드라이버가 모든 쿼리에 대해 자동 식별자 인용을 수행하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b21e64abf1d7934afc98e12dff883bd3e01994ce" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this entity is yet to be persisted.</source>
          <target state="translated">이 엔티티가 아직 지속되는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="87703b0b7867bc49280319177d3565622eddac99" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this entity is yet to be persisted. Entities default to assuming they are new. You can use Table::persisted() to set the new flag on an entity based on records in the database.</source>
          <target state="translated">이 엔티티가 아직 지속되는지 여부를 나타냅니다. 엔티티는 새로운 것으로 가정합니다. Table :: persisted ()를 사용하여 데이터베이스의 레코드를 기반으로 엔터티에 새 플래그를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4037f461f9484b272e577c3a1f97859a790e3170" translate="yes" xml:space="preserve">
          <source>Indicates whether the sessions has already started</source>
          <target state="translated">세션이 이미 시작되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2bc67506bec9fe97413fcd796806709ab3a74efb" translate="yes" xml:space="preserve">
          <source>Indirect Implementers</source>
          <target state="translated">간접 구현 자</target>
        </trans-unit>
        <trans-unit id="6c04cc18be7a52403fd9c05a38a5925261a62dc4" translate="yes" xml:space="preserve">
          <source>Indirect Subclasses</source>
          <target state="translated">간접 서브 클래스</target>
        </trans-unit>
        <trans-unit id="e9ef105476d9c198b6ecd775932f2e23dc00e1a3" translate="yes" xml:space="preserve">
          <source>Indirect Users</source>
          <target state="translated">간접 사용자</target>
        </trans-unit>
        <trans-unit id="46e7fc683b55d312745906a666776aa473819257" translate="yes" xml:space="preserve">
          <source>Individual rules may have additional options that can be set here. Any options will be passed into the rule as part of the rule $scope.</source>
          <target state="translated">개별 규칙에는 여기에서 설정할 수있는 추가 옵션이있을 수 있습니다. 모든 옵션은 $ scope 규칙의 일부로 규칙에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="196423c0ec4302dd36ed7e139885b968b66ff86b" translate="yes" xml:space="preserve">
          <source>Inflect the theme name to its underscored version.</source>
          <target state="translated">테마 이름을 밑줄이 그어진 버전에 반영하십시오.</target>
        </trans-unit>
        <trans-unit id="68c486ac0f90503bd47d8e9f1acb1d66aaf50d03" translate="yes" xml:space="preserve">
          <source>Inflect the theme/plugin name to type set using &lt;code&gt;Asset::setInflectionType()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Asset::setInflectionType()&lt;/code&gt; 사용하여 set 유형에 테마 / 플러그인 이름을 활용합니다 .</target>
        </trans-unit>
        <trans-unit id="aafd00de01c4811a03238d79317158fcdd89f7fe" translate="yes" xml:space="preserve">
          <source>Inflected name of the theme</source>
          <target state="translated">주제의 활용 된 이름</target>
        </trans-unit>
        <trans-unit id="d406f4e5eb324400cc7984e9de2b53fbf6103bb2" translate="yes" xml:space="preserve">
          <source>Inflected value</source>
          <target state="translated">활용 된 가치</target>
        </trans-unit>
        <trans-unit id="3b6281ab7e03065c8421c8392d2dc4678570695c" translate="yes" xml:space="preserve">
          <source>Inflected value on cache hit or false on cache miss.</source>
          <target state="translated">캐시 적중시 반영된 값 또는 캐시 누락시 거짓.</target>
        </trans-unit>
        <trans-unit id="9fc83a7e9d34953d3dccbfb4e5fa6b48bcfcdde8" translate="yes" xml:space="preserve">
          <source>InflectedRoute</source>
          <target state="translated">InflectedRoute</target>
        </trans-unit>
        <trans-unit id="c2e26812a4c1266e80f64291fdc5fac187051e59" translate="yes" xml:space="preserve">
          <source>InflectedRoute (class)</source>
          <target state="translated">InflectedRoute (클래스)</target>
        </trans-unit>
        <trans-unit id="09d64459f0756087efde069d3ad9c84e5f9ad510" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$_compiledRoute</source>
          <target state="translated">InflectedRoute::$_compiledRoute</target>
        </trans-unit>
        <trans-unit id="32888da68547d1bb295c7112992ab75c7bef6e4b" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$_extensions</source>
          <target state="translated">InflectedRoute::$_extensions</target>
        </trans-unit>
        <trans-unit id="dc690f0f80ca6ac4c9bb065eea49b41f15077d48" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$_greedy</source>
          <target state="translated">InflectedRoute::$_greedy</target>
        </trans-unit>
        <trans-unit id="3db43beb3cf567acedc8152ce153bd0592b3e1c7" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$_inflectedDefaults</source>
          <target state="translated">InflectedRoute::$_inflectedDefaults</target>
        </trans-unit>
        <trans-unit id="4f25967cdaa1a305273db7aab785ccea8bcb65b7" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$_name</source>
          <target state="translated">InflectedRoute::$_name</target>
        </trans-unit>
        <trans-unit id="e811feda5314244326718b31957186d581061c91" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$braceKeys</source>
          <target state="translated">InflectedRoute::$braceKeys</target>
        </trans-unit>
        <trans-unit id="5aa05422e7d2172cb07bf59ec67b11f865579318" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$defaults</source>
          <target state="translated">InflectedRoute::$defaults</target>
        </trans-unit>
        <trans-unit id="c52b23c0d503b68cab603660ac50f910cee30c4d" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$keys</source>
          <target state="translated">InflectedRoute::$keys</target>
        </trans-unit>
        <trans-unit id="78dec9be1ee8a4d9bd5f78ac7e3f3f48d7bbf8cd" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$middleware</source>
          <target state="translated">InflectedRoute::$middleware</target>
        </trans-unit>
        <trans-unit id="2029fa2c8e11a394b068b9502a330d96fe6e08f6" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$options</source>
          <target state="translated">InflectedRoute::$options</target>
        </trans-unit>
        <trans-unit id="d0778c45b61236ba7cb209d8669834e7ff7f03b5" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$template</source>
          <target state="translated">InflectedRoute::$template</target>
        </trans-unit>
        <trans-unit id="1f34157dcc5cfc2ff8a9c961cf9fd3c485ccadf0" translate="yes" xml:space="preserve">
          <source>InflectedRoute::__construct()</source>
          <target state="translated">InflectedRoute::__construct()</target>
        </trans-unit>
        <trans-unit id="5625ffd5db75aeade18f95e215d6573e64e746b3" translate="yes" xml:space="preserve">
          <source>InflectedRoute::__set_state()</source>
          <target state="translated">InflectedRoute::__set_state()</target>
        </trans-unit>
        <trans-unit id="37bced949b82188fe37d26a2f39e3f8f8d1cc9e9" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_matchMethod()</source>
          <target state="translated">InflectedRoute::_matchMethod()</target>
        </trans-unit>
        <trans-unit id="cb1e3956c01777c9fafac7659731a6fdbc607b06" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_parseArgs()</source>
          <target state="translated">InflectedRoute::_parseArgs()</target>
        </trans-unit>
        <trans-unit id="005e410cf96e7df60e9c5c6f6955dac9b9731a69" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_parseExtension()</source>
          <target state="translated">InflectedRoute::_parseExtension()</target>
        </trans-unit>
        <trans-unit id="631a127f1d0d2870c3da02daf8b662de2bc9b422" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_persistParams()</source>
          <target state="translated">InflectedRoute::_persistParams()</target>
        </trans-unit>
        <trans-unit id="1f017dae50c4b18ec6f3f1cb4e71abe9f76bf77e" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_underscore()</source>
          <target state="translated">InflectedRoute::_underscore()</target>
        </trans-unit>
        <trans-unit id="d33037d349848d9729fbdc62d4007b2ca504f0b5" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_writeRoute()</source>
          <target state="translated">InflectedRoute::_writeRoute()</target>
        </trans-unit>
        <trans-unit id="81e9648a9fa57649fdb18e02c44d058d2bad5748" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_writeUrl()</source>
          <target state="translated">InflectedRoute::_writeUrl()</target>
        </trans-unit>
        <trans-unit id="331e47c79162e0037a90e227b2345a547c08f68b" translate="yes" xml:space="preserve">
          <source>InflectedRoute::compile()</source>
          <target state="translated">InflectedRoute::compile()</target>
        </trans-unit>
        <trans-unit id="6ce99086091d2741f7d65ecb78ba629146d9b65a" translate="yes" xml:space="preserve">
          <source>InflectedRoute::compiled()</source>
          <target state="translated">InflectedRoute::compiled()</target>
        </trans-unit>
        <trans-unit id="2e36066182798904f921c3abda6a8fb6529540aa" translate="yes" xml:space="preserve">
          <source>InflectedRoute::getExtensions()</source>
          <target state="translated">InflectedRoute::getExtensions()</target>
        </trans-unit>
        <trans-unit id="1a426356603c5a0701156c0dd4aea94c8e711648" translate="yes" xml:space="preserve">
          <source>InflectedRoute::getMiddleware()</source>
          <target state="translated">InflectedRoute::getMiddleware()</target>
        </trans-unit>
        <trans-unit id="ebad2dbc9785c7c96ceb62985c1ac71c28592ffd" translate="yes" xml:space="preserve">
          <source>InflectedRoute::getName()</source>
          <target state="translated">InflectedRoute::getName()</target>
        </trans-unit>
        <trans-unit id="9d25fdc54ebbd620b0170cabfbc117fd61f52f16" translate="yes" xml:space="preserve">
          <source>InflectedRoute::hostMatches()</source>
          <target state="translated">InflectedRoute::hostMatches()</target>
        </trans-unit>
        <trans-unit id="d199705277fe84e9ac7d3e6dc6c92c45a8ad1b2f" translate="yes" xml:space="preserve">
          <source>InflectedRoute::match()</source>
          <target state="translated">InflectedRoute::match()</target>
        </trans-unit>
        <trans-unit id="ed8057f9d1f9fd98780bcbd05eda673fab5424bc" translate="yes" xml:space="preserve">
          <source>InflectedRoute::normalizeAndValidateMethods()</source>
          <target state="translated">InflectedRoute::normalizeAndValidateMethods()</target>
        </trans-unit>
        <trans-unit id="23d3d612b9c341767c8df176ef160675a9a38a43" translate="yes" xml:space="preserve">
          <source>InflectedRoute::parse()</source>
          <target state="translated">InflectedRoute::parse()</target>
        </trans-unit>
        <trans-unit id="8ab10943dd7d7fcc4490f916147f353b21970ffa" translate="yes" xml:space="preserve">
          <source>InflectedRoute::parseRequest()</source>
          <target state="translated">InflectedRoute::parseRequest()</target>
        </trans-unit>
        <trans-unit id="a08591b9fbf149ababa8c41239b153f9e1d4afe1" translate="yes" xml:space="preserve">
          <source>InflectedRoute::setExtensions()</source>
          <target state="translated">InflectedRoute::setExtensions()</target>
        </trans-unit>
        <trans-unit id="47dff4b1483f1c2de601dfd3326786afec924806" translate="yes" xml:space="preserve">
          <source>InflectedRoute::setHost()</source>
          <target state="translated">InflectedRoute::setHost()</target>
        </trans-unit>
        <trans-unit id="188d6dabec0e3acd74f096387c679d245d743238" translate="yes" xml:space="preserve">
          <source>InflectedRoute::setMethods()</source>
          <target state="translated">InflectedRoute::setMethods()</target>
        </trans-unit>
        <trans-unit id="4297a3af1b30df586c2187fdb644d8e2e050c371" translate="yes" xml:space="preserve">
          <source>InflectedRoute::setMiddleware()</source>
          <target state="translated">InflectedRoute::setMiddleware()</target>
        </trans-unit>
        <trans-unit id="9c5a32120f3a3c2135d8148bc79cbfefcc1e98f6" translate="yes" xml:space="preserve">
          <source>InflectedRoute::setPass()</source>
          <target state="translated">InflectedRoute::setPass()</target>
        </trans-unit>
        <trans-unit id="51d9f360bec52878516f91ea14c3385ae10bc113" translate="yes" xml:space="preserve">
          <source>InflectedRoute::setPatterns()</source>
          <target state="translated">InflectedRoute::setPatterns()</target>
        </trans-unit>
        <trans-unit id="5fd0a787ca971c006dd3aad31e2e429859c814a5" translate="yes" xml:space="preserve">
          <source>InflectedRoute::setPersist()</source>
          <target state="translated">InflectedRoute::setPersist()</target>
        </trans-unit>
        <trans-unit id="3ad04c66f814f0b40814eecb85682544d48fa09a" translate="yes" xml:space="preserve">
          <source>InflectedRoute::staticPath()</source>
          <target state="translated">InflectedRoute::staticPath()</target>
        </trans-unit>
        <trans-unit id="e074448d0469543888c91bb6f23be554d3effa21" translate="yes" xml:space="preserve">
          <source>Inflection type</source>
          <target state="translated">변곡 유형</target>
        </trans-unit>
        <trans-unit id="c55672fa42aac0063f1dba3358f45f5be7d077e3" translate="yes" xml:space="preserve">
          <source>Inflection type.</source>
          <target state="translated">굴절 유형.</target>
        </trans-unit>
        <trans-unit id="f92873a044d56bb50752a2ad22dd7982d8663c9f" translate="yes" xml:space="preserve">
          <source>Inflection type. Value should be a valid method name of &lt;code&gt;Inflector&lt;/code&gt; class like &lt;code&gt;'dasherize'&lt;/code&gt; or &lt;code&gt;'underscore&lt;/code&gt;'`.</source>
          <target state="translated">굴절 유형. 값은 &lt;code&gt;'dasherize'&lt;/code&gt; 또는 &lt;code&gt;'underscore&lt;/code&gt; ' 와 같은 &lt;code&gt;Inflector&lt;/code&gt; 클래스 의 유효한 메서드 이름이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="translated">Inflector</target>
        </trans-unit>
        <trans-unit id="b69194b61df82ce1eb0977080e18f9c56568c709" translate="yes" xml:space="preserve">
          <source>Inflector (class)</source>
          <target state="translated">인플 렉터 (클래스)</target>
        </trans-unit>
        <trans-unit id="5b4f43a0d7e0392b6162ce742c97e76c9da95d30" translate="yes" xml:space="preserve">
          <source>Inflector pluralizes and singularizes English nouns. Used by CakePHP's naming conventions throughout the framework.</source>
          <target state="translated">Inflector는 영어 명사를 복수화하고 단 수화합니다. 프레임 워크 전체에서 CakePHP의 명명 규칙에 의해 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f20d2af487bb309cdf6c8c3ef143e5e40b02d5c1" translate="yes" xml:space="preserve">
          <source>Inflector::$_cache</source>
          <target state="translated">Inflector::$_cache</target>
        </trans-unit>
        <trans-unit id="d76942cf44897bb486d2ffe8e1daee3f7792c87e" translate="yes" xml:space="preserve">
          <source>Inflector::$_initialState</source>
          <target state="translated">Inflector::$_initialState</target>
        </trans-unit>
        <trans-unit id="c8d6135aef5dfbc0d02b7db3c20fd4bc9e5594d0" translate="yes" xml:space="preserve">
          <source>Inflector::$_irregular</source>
          <target state="translated">Inflector::$_irregular</target>
        </trans-unit>
        <trans-unit id="95297a9ed7dbb65c0826b7e62e8b1a2aa2010ea4" translate="yes" xml:space="preserve">
          <source>Inflector::$_plural</source>
          <target state="translated">Inflector::$_plural</target>
        </trans-unit>
        <trans-unit id="e88bcb4e44470e407d9f3d77379b9f54bd93ba0c" translate="yes" xml:space="preserve">
          <source>Inflector::$_singular</source>
          <target state="translated">Inflector::$_singular</target>
        </trans-unit>
        <trans-unit id="f2b31e1585a46b242f07641a82b7a402021df8ea" translate="yes" xml:space="preserve">
          <source>Inflector::$_transliteration</source>
          <target state="translated">Inflector::$_transliteration</target>
        </trans-unit>
        <trans-unit id="4467aad7d1440160e8047f0b7f3217dc3020a851" translate="yes" xml:space="preserve">
          <source>Inflector::$_uninflected</source>
          <target state="translated">Inflector::$_uninflected</target>
        </trans-unit>
        <trans-unit id="b1606595f3f2a77dc1c8c8970c291ca72c221a77" translate="yes" xml:space="preserve">
          <source>Inflector::_cache()</source>
          <target state="translated">Inflector::_cache()</target>
        </trans-unit>
        <trans-unit id="5b405254f2b536494f05a4ef734bff9797256027" translate="yes" xml:space="preserve">
          <source>Inflector::camelize()</source>
          <target state="translated">Inflector::camelize()</target>
        </trans-unit>
        <trans-unit id="0f049e6f305f5c5ccc7dce473879f34c9f5ee538" translate="yes" xml:space="preserve">
          <source>Inflector::classify()</source>
          <target state="translated">Inflector::classify()</target>
        </trans-unit>
        <trans-unit id="7198c6f2e639cc131693b9eb8f116b6c5a190bbb" translate="yes" xml:space="preserve">
          <source>Inflector::dasherize()</source>
          <target state="translated">Inflector::dasherize()</target>
        </trans-unit>
        <trans-unit id="288335777cfb0cbc947f6a4049f34da932e78715" translate="yes" xml:space="preserve">
          <source>Inflector::delimit()</source>
          <target state="translated">Inflector::delimit()</target>
        </trans-unit>
        <trans-unit id="9de65b2a459c15f4e46c8c09ef11400e12edbd02" translate="yes" xml:space="preserve">
          <source>Inflector::humanize()</source>
          <target state="translated">Inflector::humanize()</target>
        </trans-unit>
        <trans-unit id="7f1d84bd2ac5c02a323d5e12c6d4dcd45136ec7f" translate="yes" xml:space="preserve">
          <source>Inflector::pluralize()</source>
          <target state="translated">Inflector::pluralize()</target>
        </trans-unit>
        <trans-unit id="7db6d437cd2598bc69edacfcc9330c034b19f5ab" translate="yes" xml:space="preserve">
          <source>Inflector::reset()</source>
          <target state="translated">Inflector::reset()</target>
        </trans-unit>
        <trans-unit id="1614a43bc5f5ceb7431e7c8cb69495736f76e995" translate="yes" xml:space="preserve">
          <source>Inflector::rules()</source>
          <target state="translated">Inflector::rules()</target>
        </trans-unit>
        <trans-unit id="246d06451b6c7ccdfd353053e83b8ecc43e96def" translate="yes" xml:space="preserve">
          <source>Inflector::singularize()</source>
          <target state="translated">Inflector::singularize()</target>
        </trans-unit>
        <trans-unit id="bf7f1d39436907508a662426004e573a7c246575" translate="yes" xml:space="preserve">
          <source>Inflector::slug()</source>
          <target state="translated">Inflector::slug()</target>
        </trans-unit>
        <trans-unit id="2955c955461231c0a5a4facd39e60e05fe6c389d" translate="yes" xml:space="preserve">
          <source>Inflector::tableize()</source>
          <target state="translated">Inflector::tableize()</target>
        </trans-unit>
        <trans-unit id="5c5ceffca26030960f93d18986633e0a40687dac" translate="yes" xml:space="preserve">
          <source>Inflector::underscore()</source>
          <target state="translated">Inflector::underscore()</target>
        </trans-unit>
        <trans-unit id="c64a1efb218eda0a8332c22715619a09404f5e1c" translate="yes" xml:space="preserve">
          <source>Inflector::variable()</source>
          <target state="translated">Inflector::variable()</target>
        </trans-unit>
        <trans-unit id="9286356330b16fb0bc0f4e038ec8dbd5661f5df6" translate="yes" xml:space="preserve">
          <source>Information for expected exception class, expected exception message, and expected exception code are retrieved from a given Exception object.</source>
          <target state="translated">예상 예외 클래스, 예상 예외 메시지 및 예상 예외 코드에 대한 정보는 지정된 Exception 개체에서 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="77fd6c17c4c4cced50164eb62b953b81ddd8c994" translate="yes" xml:space="preserve">
          <source>Inherited Constants</source>
          <target state="translated">상속 된 상수</target>
        </trans-unit>
        <trans-unit id="2d479326ddff8b6c95955f7267cc1e2a82b30935" translate="yes" xml:space="preserve">
          <source>Inherited Magic Properties</source>
          <target state="translated">상속 된 매직 속성</target>
        </trans-unit>
        <trans-unit id="a97b2d009dc11ee2399b0468fc72e941eebbf165" translate="yes" xml:space="preserve">
          <source>Inherited Properties</source>
          <target state="translated">상속 된 속성</target>
        </trans-unit>
        <trans-unit id="1a89bde0cf949ea9d3d0595c8865e61f6afb9d41" translate="yes" xml:space="preserve">
          <source>Ini file configuration engine.</source>
          <target state="translated">Ini 파일 구성 엔진.</target>
        </trans-unit>
        <trans-unit id="63ae2a2b88a3b3c42144d2626c066b69e3ebc27d" translate="yes" xml:space="preserve">
          <source>Ini options to set.</source>
          <target state="translated">Ini 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="abaadcdc2c6d35e848edf6d4c21954f4fd297340" translate="yes" xml:space="preserve">
          <source>IniConfig</source>
          <target state="translated">IniConfig</target>
        </trans-unit>
        <trans-unit id="a9fb6683ce7ae0fbc95a3086d0ff04b5748a1985" translate="yes" xml:space="preserve">
          <source>IniConfig (class)</source>
          <target state="translated">IniConfig (클래스)</target>
        </trans-unit>
        <trans-unit id="e215e6df9b761726d83dd107fa9f8d56a4436055" translate="yes" xml:space="preserve">
          <source>IniConfig also manipulates how the special ini values of 'yes', 'no', 'on', 'off', 'null' are handled. These values will be converted to their boolean equivalents.</source>
          <target state="translated">또한 IniConfig는 'yes', 'no', 'on', 'off', 'null'의 특수한 ini 값을 처리하는 방법을 조작합니다. 이 값은 부울 값으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="8ed54374106c7450ab640f63f03f1133069032f0" translate="yes" xml:space="preserve">
          <source>IniConfig::$_extension</source>
          <target state="translated">IniConfig::$_extension</target>
        </trans-unit>
        <trans-unit id="3697a18133e575977700c6fe4bf720e4b515ab39" translate="yes" xml:space="preserve">
          <source>IniConfig::$_path</source>
          <target state="translated">IniConfig::$_path</target>
        </trans-unit>
        <trans-unit id="3c14ebcb7b3b859cd6c50d1050967a6d7ba056f1" translate="yes" xml:space="preserve">
          <source>IniConfig::$_section</source>
          <target state="translated">IniConfig::$_section</target>
        </trans-unit>
        <trans-unit id="d42ef0b8de287033e37e18d1f1d562c8dd403132" translate="yes" xml:space="preserve">
          <source>IniConfig::__construct()</source>
          <target state="translated">IniConfig::__construct()</target>
        </trans-unit>
        <trans-unit id="ea77a4e8d6357b7fd8840fb6cae6c7a23e84cc89" translate="yes" xml:space="preserve">
          <source>IniConfig::_getFilePath()</source>
          <target state="translated">IniConfig::_getFilePath()</target>
        </trans-unit>
        <trans-unit id="8d4271f50226e56960a85c45357891b2b24e791c" translate="yes" xml:space="preserve">
          <source>IniConfig::_parseNestedValues()</source>
          <target state="translated">IniConfig::_parseNestedValues()</target>
        </trans-unit>
        <trans-unit id="2efeca19c4785566f3c6d72c19733223f4ad71f3" translate="yes" xml:space="preserve">
          <source>IniConfig::_value()</source>
          <target state="translated">IniConfig::_value()</target>
        </trans-unit>
        <trans-unit id="d9e7cecdb171f463b2ef36fc4b386cea6bd1c28b" translate="yes" xml:space="preserve">
          <source>IniConfig::dump()</source>
          <target state="translated">IniConfig::dump()</target>
        </trans-unit>
        <trans-unit id="737d26114e233b735df665b97d26880259088127" translate="yes" xml:space="preserve">
          <source>IniConfig::read()</source>
          <target state="translated">IniConfig::read()</target>
        </trans-unit>
        <trans-unit id="77c373aaaf2ddf2b08e071fa0775aa05bd3e3288" translate="yes" xml:space="preserve">
          <source>Initial state is populated the first time reload() is called which is at the bottom of this file. This is a cheat as get_class_vars() returns the value of static vars even if they have changed.</source>
          <target state="translated">이 파일의 맨 아래에있는 reload ()가 처음 호출 될 때 초기 상태가 채워집니다. get_class_vars ()는 정적 변수가 변경된 경우에도 정적 변수의 값을 리턴하므로 이는 사기입니다.</target>
        </trans-unit>
        <trans-unit id="5dc7d4d513384d6702fd18f8a9fff81c105f479b" translate="yes" xml:space="preserve">
          <source>Initialization hook called from constructor.</source>
          <target state="translated">생성자에서 초기화 후크가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="68ccdb1dadd688312724179edb27aca104d2437b" translate="yes" xml:space="preserve">
          <source>Initialization hook method.</source>
          <target state="translated">초기화 훅 방법.</target>
        </trans-unit>
        <trans-unit id="90b0cfb21a4a000577d3d125dce74bffd0c3e0ea" translate="yes" xml:space="preserve">
          <source>Initialize File Cache Engine</source>
          <target state="translated">파일 캐시 엔진 초기화</target>
        </trans-unit>
        <trans-unit id="7b0dc7eff4de8fb917609915315c90391f7c9883" translate="yes" xml:space="preserve">
          <source>Initialize SimpleXMLElement or DOMDocument from a given XML string, file path, URL or array.</source>
          <target state="translated">주어진 XML 문자열, 파일 경로, URL 또는 배열에서 SimpleXMLElement 또는 DOMDocument를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="16bfb16bf860a7a3059755d2a2a85686922f9ad9" translate="yes" xml:space="preserve">
          <source>Initialize a table instance. Called after the constructor.</source>
          <target state="translated">테이블 인스턴스를 초기화하십시오. 생성자 이후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e77b70f4c5f2bfa0f02610c7b7175e7b865b60c7" translate="yes" xml:space="preserve">
          <source>Initialize config data and properties.</source>
          <target state="translated">구성 데이터 및 속성을 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="cd258b44bc721f67f27c3d0b329b7b52025d68bc" translate="yes" xml:space="preserve">
          <source>Initialize environment</source>
          <target state="translated">환경 초기화</target>
        </trans-unit>
        <trans-unit id="8a96b8fa98aebb924061cdb095ff79db2c30064b" translate="yes" xml:space="preserve">
          <source>Initialize hook</source>
          <target state="translated">후크 초기화</target>
        </trans-unit>
        <trans-unit id="ddf478d72abfdcdcecd5f2758e1422be5d959a14" translate="yes" xml:space="preserve">
          <source>Initialize properties.</source>
          <target state="translated">속성을 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="2480135eb2a88f069403694dd5bba12c48855e45" translate="yes" xml:space="preserve">
          <source>Initialize the Cache Engine</source>
          <target state="translated">캐시 엔진 초기화</target>
        </trans-unit>
        <trans-unit id="bf11e8046f958abc4f49cec6639ef3461c929e29" translate="yes" xml:space="preserve">
          <source>Initialize the cache engine</source>
          <target state="translated">캐시 엔진을 초기화합니다</target>
        </trans-unit>
        <trans-unit id="38ff52d1ac9516df8f358c98ba1301f7aa8d041b" translate="yes" xml:space="preserve">
          <source>Initialize the fixture.</source>
          <target state="translated">조명기를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="6ecb7eb83d3c7dedc3f067a61ef462622142fe6e" translate="yes" xml:space="preserve">
          <source>Initialize the progress bar for use.</source>
          <target state="translated">사용할 진행률 표시 줄을 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="3ea3bacd4b0e6f1b7ffdc0387d18c3c829c09b8d" translate="yes" xml:space="preserve">
          <source>Initialized with the env variable UPDATE_TEST_COMPARISON_FILES</source>
          <target state="translated">env 변수 UPDATE_TEST_COMPARISON_FILES로 초기화</target>
        </trans-unit>
        <trans-unit id="72d926d9bf101572e06f7f8b0dd7c754656c894a" translate="yes" xml:space="preserve">
          <source>Initializes a new instance</source>
          <target state="translated">새 인스턴스를 초기화합니다</target>
        </trans-unit>
        <trans-unit id="54aa0365951d7a3d0a00cba0e2e6979e17ab28e0" translate="yes" xml:space="preserve">
          <source>Initializes components, which fires their &lt;code&gt;initialize&lt;/code&gt; callback</source>
          <target state="translated">구성 요소를 &lt;code&gt;initialize&lt;/code&gt; 하여 초기화 콜백을 시작합니다</target>
        </trans-unit>
        <trans-unit id="5cbc5faa0c7a312fee0b0d171365d1692b72a906" translate="yes" xml:space="preserve">
          <source>Initializes registry and configurations</source>
          <target state="translated">레지스트리 및 구성을 초기화합니다</target>
        </trans-unit>
        <trans-unit id="a17167a9f289e1e6a9eacaa059f4b73dfb6f231a" translate="yes" xml:space="preserve">
          <source>Initializes the Shell acts as constructor for subclasses allows configuration of tasks prior to shell execution</source>
          <target state="translated">셸을 초기화합니다. 서브 클래스의 생성자로 작동하여 셸을 실행하기 전에 작업을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa55a26f7567e1e2b7779436518e7938ac558909" translate="yes" xml:space="preserve">
          <source>Initializes the environment and loads the CakePHP core.</source>
          <target state="translated">환경을 초기화하고 CakePHP 코어를로드합니다.</target>
        </trans-unit>
        <trans-unit id="e1ec3823241855d0626b1aa52164bdeccd4190cc" translate="yes" xml:space="preserve">
          <source>Initializes the internal properties of this entity out of the keys in an array. The following list of options can be used:</source>
          <target state="translated">배열의 키를 사용하여이 엔티티의 내부 속성을 초기화합니다. 다음과 같은 옵션 목록을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="445b6f5a4d6a67d4a6f42dbe9c4474de81bb4b5e" translate="yes" xml:space="preserve">
          <source>Initializes this class with a DataSource object to use as default for all fixtures</source>
          <target state="translated">모든 조명기의 기본값으로 사용할 DataSource 객체로이 클래스를 초기화합니다</target>
        </trans-unit>
        <trans-unit id="984bbb9b156b408f2d4fb70b4fcc33bbcef301bc" translate="yes" xml:space="preserve">
          <source>Inits PO file from POT file.</source>
          <target state="translated">POT 파일에서 PO 파일을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="48c96f2a3c4a8cd6f9916ed0ccf025e6912d1102" translate="yes" xml:space="preserve">
          <source>Inject route defaults from &lt;code&gt;_path&lt;/code&gt; key</source>
          <target state="translated">&lt;code&gt;_path&lt;/code&gt; 키 에서 경로 기본값 삽입</target>
        </trans-unit>
        <trans-unit id="d06964c0512e62c021f672474b6eeb079a209fe4" translate="yes" xml:space="preserve">
          <source>Injectable registry object.</source>
          <target state="translated">주사 가능한 레지스트리 객체.</target>
        </trans-unit>
        <trans-unit id="ac9f48f23ac298fec13f3373deb947f0cf55f7d5" translate="yes" xml:space="preserve">
          <source>Injecting a constructed adapter in:</source>
          <target state="translated">다음에 구성된 어댑터 주입</target>
        </trans-unit>
        <trans-unit id="252170534d166cfd649dbdff82e1404f6fcb6340" translate="yes" xml:space="preserve">
          <source>Injects mock and stub io components into the shell</source>
          <target state="translated">mock 및 stub io 구성 요소를 쉘에 주입</target>
        </trans-unit>
        <trans-unit id="77708271772db8caa1f1f99f75d6a8589a57125b" translate="yes" xml:space="preserve">
          <source>Injects the results of the eager loader query into the original list of entities.</source>
          <target state="translated">Eager 로더 쿼리의 결과를 원래 항목 목록에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="c8412738d27dd1ecd0c1b5a0f59c5043f7db5347" translate="yes" xml:space="preserve">
          <source>Input (class)</source>
          <target state="translated">입력 (클래스)</target>
        </trans-unit>
        <trans-unit id="4233c554377ae7d31020d23c55dac01724d7082f" translate="yes" xml:space="preserve">
          <source>Input passwords will be hashed even when a user doesn't exist. This helps mitigate timing attacks that are attempting to find valid usernames.</source>
          <target state="translated">사용자가 존재하지 않아도 입력 비밀번호는 해시됩니다. 이는 유효한 사용자 이름을 찾으려고하는 타이밍 공격을 완화하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="103b73f8b8612de7f92ed544d130aab2ccb3dead" translate="yes" xml:space="preserve">
          <source>Input value.</source>
          <target state="translated">입력 값.</target>
        </trans-unit>
        <trans-unit id="927e2fa04410d99fc5977066ddbff443b9ea3d6f" translate="yes" xml:space="preserve">
          <source>Input values to pass to an interactive shell</source>
          <target state="translated">대화식 쉘에 전달할 입력 값</target>
        </trans-unit>
        <trans-unit id="d7105748898a68986cf592ce1d63edc4b9a2b3d4" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a calendar year select box.</source>
          <target state="translated">역년 선택 상자를 생성하기위한 입력 위젯 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c3ec93359522e841db286d7c9b002cc4e1331eb9" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a date time input widget.</source>
          <target state="translated">날짜 시간 입력 위젯을 생성하기위한 입력 위젯 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8c2ba82321cecafeefee11f86800f5bcb9eeb5b8" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a file upload control.</source>
          <target state="translated">파일 업로드 제어를 생성하기위한 입력 위젯 클래스.</target>
        </trans-unit>
        <trans-unit id="926653b5901b8fd93492f40a14f17162b3c48028" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a selectbox.</source>
          <target state="translated">선택 상자를 생성하기위한 입력 위젯 클래스.</target>
        </trans-unit>
        <trans-unit id="7f57d3865d0cb8169ace820702403aa81d7b88fb" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a set of radio buttons.</source>
          <target state="translated">라디오 버튼 세트를 생성하기위한 입력 위젯 클래스.</target>
        </trans-unit>
        <trans-unit id="2ccaceafb6f54299fe7b023f771aa9eaf4f3b4e5" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a textarea control.</source>
          <target state="translated">텍스트 영역 컨트롤을 생성하기위한 입력 위젯 클래스</target>
        </trans-unit>
        <trans-unit id="5eeb270812a9953fdee8d9b9a4e2f18c7e0ba98a" translate="yes" xml:space="preserve">
          <source>Input widget class for generating multiple checkboxes.</source>
          <target state="translated">여러 개의 확인란을 생성하기위한 입력 위젯 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c7cb1f6dbeed3db05ee440b39c0daa415f31fe71" translate="yes" xml:space="preserve">
          <source>Input widget for creating checkbox widgets.</source>
          <target state="translated">확인란 위젯을 만들기위한 입력 위젯.</target>
        </trans-unit>
        <trans-unit id="f633addab73227371df9f37f126c2830a1a01476" translate="yes" xml:space="preserve">
          <source>Input::$_canReadline</source>
          <target state="translated">Input::$_canReadline</target>
        </trans-unit>
        <trans-unit id="98287869a9bcb2edf891decd3472e68ceb553b69" translate="yes" xml:space="preserve">
          <source>Input::$_input</source>
          <target state="translated">Input::$_input</target>
        </trans-unit>
        <trans-unit id="865f98c1404db47ae344e1dacf938595ae771af8" translate="yes" xml:space="preserve">
          <source>Input::__construct()</source>
          <target state="translated">Input::__construct()</target>
        </trans-unit>
        <trans-unit id="229ba39b07cb8658df90733c897314511fdf4b36" translate="yes" xml:space="preserve">
          <source>Input::dataAvailable()</source>
          <target state="translated">Input::dataAvailable()</target>
        </trans-unit>
        <trans-unit id="b872a644e7f7ce4a200e4531b18dfb02571a4934" translate="yes" xml:space="preserve">
          <source>Input::read()</source>
          <target state="translated">Input::read()</target>
        </trans-unit>
        <trans-unit id="7806a8ccd0ae148ded5fcad2fc2fdae6635ca4bc" translate="yes" xml:space="preserve">
          <source>InputArgument (class)</source>
          <target state="translated">InputArgument (클래스)</target>
        </trans-unit>
        <trans-unit id="a010cabb65feeb6b9c30bc980b1d0616c527abca" translate="yes" xml:space="preserve">
          <source>InputArgument::$_choices</source>
          <target state="translated">InputArgument::$_choices</target>
        </trans-unit>
        <trans-unit id="c794d4433f4117604b4284c333d32cd8ef942d75" translate="yes" xml:space="preserve">
          <source>InputArgument::$_help</source>
          <target state="translated">InputArgument::$_help</target>
        </trans-unit>
        <trans-unit id="fda239e4d5126c5a11a6fd23058b89f389de77a9" translate="yes" xml:space="preserve">
          <source>InputArgument::$_name</source>
          <target state="translated">InputArgument::$_name</target>
        </trans-unit>
        <trans-unit id="a7490fbb88eea4bad5ec280720f8f204b144c3d7" translate="yes" xml:space="preserve">
          <source>InputArgument::$_required</source>
          <target state="translated">InputArgument::$_required</target>
        </trans-unit>
        <trans-unit id="ef7e112208b6a547bd1912ff31e5eddbb9de7d78" translate="yes" xml:space="preserve">
          <source>InputArgument::__construct()</source>
          <target state="translated">InputArgument::__construct()</target>
        </trans-unit>
        <trans-unit id="781da8b093c37e7d4d5b4fb8faa8acbcd1882022" translate="yes" xml:space="preserve">
          <source>InputArgument::help()</source>
          <target state="translated">InputArgument::help()</target>
        </trans-unit>
        <trans-unit id="8e6670c449e15e457d54a2390ffaec0633573900" translate="yes" xml:space="preserve">
          <source>InputArgument::isEqualTo()</source>
          <target state="translated">InputArgument::isEqualTo()</target>
        </trans-unit>
        <trans-unit id="f7c3d3a73f7d066cfd54ad814e097a8ba3af9908" translate="yes" xml:space="preserve">
          <source>InputArgument::isRequired()</source>
          <target state="translated">InputArgument::isRequired()</target>
        </trans-unit>
        <trans-unit id="cc38b28bdc42f8f62797c0fd581bfc392413fea1" translate="yes" xml:space="preserve">
          <source>InputArgument::name()</source>
          <target state="translated">InputArgument::name()</target>
        </trans-unit>
        <trans-unit id="3ed9857254ff966511702d13b919ef514aefc102" translate="yes" xml:space="preserve">
          <source>InputArgument::usage()</source>
          <target state="translated">InputArgument::usage()</target>
        </trans-unit>
        <trans-unit id="4b2765cf5ff65732af7695bd091ea09c7e295381" translate="yes" xml:space="preserve">
          <source>InputArgument::validChoice()</source>
          <target state="translated">InputArgument::validChoice()</target>
        </trans-unit>
        <trans-unit id="6d331dc4ab1ad73e26ebb1082d90d14f0fce3b6f" translate="yes" xml:space="preserve">
          <source>InputArgument::xml()</source>
          <target state="translated">InputArgument::xml()</target>
        </trans-unit>
        <trans-unit id="f951ad022d0036fcc74400a3971dcd497163cad2" translate="yes" xml:space="preserve">
          <source>InputOption (class)</source>
          <target state="translated">InputOption (클래스)</target>
        </trans-unit>
        <trans-unit id="90cb950c90838751d3573cc1f7d0e0ce89794ad2" translate="yes" xml:space="preserve">
          <source>InputOption::$_boolean</source>
          <target state="translated">InputOption::$_boolean</target>
        </trans-unit>
        <trans-unit id="238c95d200cad6d017e3bd32f19b1fc7981efabd" translate="yes" xml:space="preserve">
          <source>InputOption::$_choices</source>
          <target state="translated">InputOption::$_choices</target>
        </trans-unit>
        <trans-unit id="9d64ce73d7e39bfa629380812c2792e8a1ff3884" translate="yes" xml:space="preserve">
          <source>InputOption::$_default</source>
          <target state="translated">InputOption::$_default</target>
        </trans-unit>
        <trans-unit id="a723afaa73e05950932c07eca6103ef99eea1760" translate="yes" xml:space="preserve">
          <source>InputOption::$_help</source>
          <target state="translated">InputOption::$_help</target>
        </trans-unit>
        <trans-unit id="cf9a653b9616df3735eee0c7183ab481f2aa1e79" translate="yes" xml:space="preserve">
          <source>InputOption::$_multiple</source>
          <target state="translated">InputOption::$_multiple</target>
        </trans-unit>
        <trans-unit id="cfccc75d43f69fda44cd71110fdeba9b351f08ea" translate="yes" xml:space="preserve">
          <source>InputOption::$_name</source>
          <target state="translated">InputOption::$_name</target>
        </trans-unit>
        <trans-unit id="2bd04436d3d2943f0e3419e2b4eb40602ed9383f" translate="yes" xml:space="preserve">
          <source>InputOption::$_short</source>
          <target state="translated">InputOption::$_short</target>
        </trans-unit>
        <trans-unit id="e5fe0c8021de83f696ab484fbff841d7e6d6f5a1" translate="yes" xml:space="preserve">
          <source>InputOption::$required</source>
          <target state="translated">InputOption::$required</target>
        </trans-unit>
        <trans-unit id="9c54af0955d8054c444eb0fd72651dfca1192736" translate="yes" xml:space="preserve">
          <source>InputOption::__construct()</source>
          <target state="translated">InputOption::__construct()</target>
        </trans-unit>
        <trans-unit id="88e1a10e6aa755037e3e1d9cfec72a8caedbc354" translate="yes" xml:space="preserve">
          <source>InputOption::acceptsMultiple()</source>
          <target state="translated">InputOption::acceptsMultiple()</target>
        </trans-unit>
        <trans-unit id="8f360d051c8018e8fd965b8c41cf8f600ed72f38" translate="yes" xml:space="preserve">
          <source>InputOption::defaultValue()</source>
          <target state="translated">InputOption::defaultValue()</target>
        </trans-unit>
        <trans-unit id="52179dbc983772b5e7b9bf17f62d7db5a7324fa2" translate="yes" xml:space="preserve">
          <source>InputOption::help()</source>
          <target state="translated">InputOption::help()</target>
        </trans-unit>
        <trans-unit id="f23d2e6f32fb2d0358f6a8bc6c9c2cbf23da44fb" translate="yes" xml:space="preserve">
          <source>InputOption::isBoolean()</source>
          <target state="translated">InputOption::isBoolean()</target>
        </trans-unit>
        <trans-unit id="1570bfe2aae854d04cb8fbf978b636d2f08a89f4" translate="yes" xml:space="preserve">
          <source>InputOption::isRequired()</source>
          <target state="translated">InputOption::isRequired()</target>
        </trans-unit>
        <trans-unit id="856765f7a9679b2e0712662404128a545d49deb0" translate="yes" xml:space="preserve">
          <source>InputOption::name()</source>
          <target state="translated">InputOption::name()</target>
        </trans-unit>
        <trans-unit id="f64b557207cbb84834f703285e4abf7f5cd8175a" translate="yes" xml:space="preserve">
          <source>InputOption::short()</source>
          <target state="translated">InputOption::short()</target>
        </trans-unit>
        <trans-unit id="06e9ada919f688880bb66e776b4451daa7da9d6f" translate="yes" xml:space="preserve">
          <source>InputOption::usage()</source>
          <target state="translated">InputOption::usage()</target>
        </trans-unit>
        <trans-unit id="2e92caa37e06558f62f34504a275d1bc9b6aa7aa" translate="yes" xml:space="preserve">
          <source>InputOption::validChoice()</source>
          <target state="translated">InputOption::validChoice()</target>
        </trans-unit>
        <trans-unit id="bd183e7aa2518b2c31328e82b5b29308c38103c5" translate="yes" xml:space="preserve">
          <source>InputOption::xml()</source>
          <target state="translated">InputOption::xml()</target>
        </trans-unit>
        <trans-unit id="ba6d564d763f4dd6148bd5e1da6853728fda4bc2" translate="yes" xml:space="preserve">
          <source>InputSubcommand (class)</source>
          <target state="translated">InputSubcommand (클래스)</target>
        </trans-unit>
        <trans-unit id="c91446c0f5480de2d793354a91ec84568d042c3a" translate="yes" xml:space="preserve">
          <source>InputSubcommand::$_help</source>
          <target state="translated">InputSubcommand::$_help</target>
        </trans-unit>
        <trans-unit id="e30104601ec033c9f7d2f075e9c59260c5056760" translate="yes" xml:space="preserve">
          <source>InputSubcommand::$_name</source>
          <target state="translated">InputSubcommand::$_name</target>
        </trans-unit>
        <trans-unit id="b5f8b28cfe4843941cc6797965455096dac43ff5" translate="yes" xml:space="preserve">
          <source>InputSubcommand::$_parser</source>
          <target state="translated">InputSubcommand::$_parser</target>
        </trans-unit>
        <trans-unit id="d9b7809f7148143b3900d0983912e6ce0c71cb00" translate="yes" xml:space="preserve">
          <source>InputSubcommand::__construct()</source>
          <target state="translated">InputSubcommand::__construct()</target>
        </trans-unit>
        <trans-unit id="c50117fa8ca86586965b11cad281616059d0b223" translate="yes" xml:space="preserve">
          <source>InputSubcommand::getRawHelp()</source>
          <target state="translated">InputSubcommand::getRawHelp()</target>
        </trans-unit>
        <trans-unit id="4bef9fbccca3516fb95ee515a81849db0db28ae7" translate="yes" xml:space="preserve">
          <source>InputSubcommand::help()</source>
          <target state="translated">InputSubcommand::help()</target>
        </trans-unit>
        <trans-unit id="7e014365ae79cbedc60a577044cca7c1bb164738" translate="yes" xml:space="preserve">
          <source>InputSubcommand::name()</source>
          <target state="translated">InputSubcommand::name()</target>
        </trans-unit>
        <trans-unit id="c9023e9d1b71b39f967a50bde511327256d93d95" translate="yes" xml:space="preserve">
          <source>InputSubcommand::parser()</source>
          <target state="translated">InputSubcommand::parser()</target>
        </trans-unit>
        <trans-unit id="4faa13d5d4f53a2ef533cb371d7511fdcaeb9438" translate="yes" xml:space="preserve">
          <source>InputSubcommand::xml()</source>
          <target state="translated">InputSubcommand::xml()</target>
        </trans-unit>
        <trans-unit id="49f5f09501c5157547c23b76cf049feb5191a804" translate="yes" xml:space="preserve">
          <source>Insert $values into an array with the given $path. You can use &lt;code&gt;{n}&lt;/code&gt; and &lt;code&gt;{s}&lt;/code&gt; elements to insert $data multiple times.</source>
          <target state="translated">주어진 $ path와 함께 $ values를 배열에 삽입하십시오. &lt;code&gt;{n}&lt;/code&gt; 및 &lt;code&gt;{s}&lt;/code&gt; 요소를 사용하여 $ data를 여러 번 삽입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b38be00f07e14caaef8d0da57826635075e2f97d" translate="yes" xml:space="preserve">
          <source>Insert a crumb after the first matching crumb with the specified title.</source>
          <target state="translated">지정된 제목으로 첫 번째 일치하는 빵 부스러기 뒤에 빵 부스러기를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="ffb40da3fe5fdfeeea4d0ea2d9eec12ae3919342" translate="yes" xml:space="preserve">
          <source>Insert a crumb at a specific index.</source>
          <target state="translated">특정 색인에 빵 부스러기를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="78b61b72b8a42ad0ec9de30e3ec011ca5b9a5266" translate="yes" xml:space="preserve">
          <source>Insert a crumb before the first matching crumb with the specified title.</source>
          <target state="translated">지정된 제목으로 첫 번째 일치하는 빵 부스러기 전에 빵 부스러기를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="e77b40e7b8d2a13b85632a11936c9fcae245a4b8" translate="yes" xml:space="preserve">
          <source>Insert a middleware at a specific index.</source>
          <target state="translated">특정 인덱스에 미들웨어를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="1dac871b82c25832985451001abe06d506778af0" translate="yes" xml:space="preserve">
          <source>Insert a middleware before the first matching class.</source>
          <target state="translated">첫 번째 일치하는 클래스 앞에 미들웨어를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="3553056af60e00aa068a8616ff1bff8d6bf410bb" translate="yes" xml:space="preserve">
          <source>Insert a middleware callable at a specific index.</source>
          <target state="translated">특정 인덱스에서 호출 가능한 미들웨어를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="ce210d1e94a8a8c6be0adf3c827632035d06435a" translate="yes" xml:space="preserve">
          <source>Insert a middleware object after the first matching class.</source>
          <target state="translated">첫 번째 일치 클래스 뒤에 미들웨어 오브젝트를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="087a893bff5829c67fc3d10ae481c5a22e3c2a7d" translate="yes" xml:space="preserve">
          <source>Insert a middleware object before the first matching class.</source>
          <target state="translated">일치하는 첫 번째 클래스 앞에 미들웨어 오브젝트를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="4094ce54284b6a886a66f6c76867ea4c13e2724d" translate="yes" xml:space="preserve">
          <source>Insert ages into a collection containing users:</source>
          <target state="translated">사용자가 포함 된 컬렉션에 연령을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="1c2f9eda45eb8fcbdb00ef0c68a02c80566283ec" translate="yes" xml:space="preserve">
          <source>InsertIterator</source>
          <target state="translated">InsertIterator</target>
        </trans-unit>
        <trans-unit id="748ca27801f406b1dbd1c56cd3e379d1a9086e60" translate="yes" xml:space="preserve">
          <source>InsertIterator (class)</source>
          <target state="translated">InsertIterator (클래스)</target>
        </trans-unit>
        <trans-unit id="78dfa37020cabe916b1f85e5973581e9ef2457f0" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_path</source>
          <target state="translated">InsertIterator::$_path</target>
        </trans-unit>
        <trans-unit id="3e4afc10d395f6a469b235fe82271fe34ef1f995" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_target</source>
          <target state="translated">InsertIterator::$_target</target>
        </trans-unit>
        <trans-unit id="87dcebf1b950f89c20f27d8422c26a2e3bc6dc78" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_validValues</source>
          <target state="translated">InsertIterator::$_validValues</target>
        </trans-unit>
        <trans-unit id="ce9938f91daf1e5af5a9fbac7fbfdadfa4300858" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_values</source>
          <target state="translated">InsertIterator::$_values</target>
        </trans-unit>
        <trans-unit id="9c0cefb4a0909404f3e0d638d517b386da54e759" translate="yes" xml:space="preserve">
          <source>InsertIterator::__construct()</source>
          <target state="translated">InsertIterator::__construct()</target>
        </trans-unit>
        <trans-unit id="01e48743ca8aee1dcc353c1dfcf5492a569f3386" translate="yes" xml:space="preserve">
          <source>InsertIterator::__debugInfo()</source>
          <target state="translated">InsertIterator::__debugInfo()</target>
        </trans-unit>
        <trans-unit id="a163eb6fc05ef0cc68876ba59e23ebe6f893f990" translate="yes" xml:space="preserve">
          <source>InsertIterator::_createMatcherFilter()</source>
          <target state="translated">InsertIterator::_createMatcherFilter()</target>
        </trans-unit>
        <trans-unit id="9810bf68e27041dfb88f713af06caead70224d80" translate="yes" xml:space="preserve">
          <source>InsertIterator::_extract()</source>
          <target state="translated">InsertIterator::_extract()</target>
        </trans-unit>
        <trans-unit id="dd50ef14e54a379dffb0ff8252af6c025efe9dfe" translate="yes" xml:space="preserve">
          <source>InsertIterator::_propertyExtractor()</source>
          <target state="translated">InsertIterator::_propertyExtractor()</target>
        </trans-unit>
        <trans-unit id="bae0868416a8572c148f0ad1edd9dc9e7e7ac566" translate="yes" xml:space="preserve">
          <source>InsertIterator::_simpleExtract()</source>
          <target state="translated">InsertIterator::_simpleExtract()</target>
        </trans-unit>
        <trans-unit id="b715d41917dd58642e23c1b237daf31072011267" translate="yes" xml:space="preserve">
          <source>InsertIterator::append()</source>
          <target state="translated">InsertIterator::append()</target>
        </trans-unit>
        <trans-unit id="3481ebfe1b591ef916b00082a7dd4196a0688c93" translate="yes" xml:space="preserve">
          <source>InsertIterator::appendItem()</source>
          <target state="translated">InsertIterator::appendItem()</target>
        </trans-unit>
        <trans-unit id="de5cbafaad3761685196152741383f8d0f2bad3c" translate="yes" xml:space="preserve">
          <source>InsertIterator::avg()</source>
          <target state="translated">InsertIterator::avg()</target>
        </trans-unit>
        <trans-unit id="90bbcea7bdc87623ee3b156a9e9fd1d5f4810104" translate="yes" xml:space="preserve">
          <source>InsertIterator::buffered()</source>
          <target state="translated">InsertIterator::buffered()</target>
        </trans-unit>
        <trans-unit id="9c6d312861da748fbdcf3edb5e6d1b872b7b7802" translate="yes" xml:space="preserve">
          <source>InsertIterator::cartesianProduct()</source>
          <target state="translated">InsertIterator::cartesianProduct()</target>
        </trans-unit>
        <trans-unit id="0f135610ee4bcfd6eb0887ddd8c1f250768ace1f" translate="yes" xml:space="preserve">
          <source>InsertIterator::chunk()</source>
          <target state="translated">InsertIterator::chunk()</target>
        </trans-unit>
        <trans-unit id="96779ea463bd1c127520c9357cfeca5513fddbd4" translate="yes" xml:space="preserve">
          <source>InsertIterator::chunkWithKeys()</source>
          <target state="translated">InsertIterator::chunkWithKeys()</target>
        </trans-unit>
        <trans-unit id="d646dcce35ea35a9c2e8ef6ff78e5d728e8d6e6a" translate="yes" xml:space="preserve">
          <source>InsertIterator::combine()</source>
          <target state="translated">InsertIterator::combine()</target>
        </trans-unit>
        <trans-unit id="f7923fe34984524fba6aca88bc5047f92d18cb7b" translate="yes" xml:space="preserve">
          <source>InsertIterator::compile()</source>
          <target state="translated">InsertIterator::compile()</target>
        </trans-unit>
        <trans-unit id="795c9848b09d50d71d62bf710e05346950f90762" translate="yes" xml:space="preserve">
          <source>InsertIterator::contains()</source>
          <target state="translated">InsertIterator::contains()</target>
        </trans-unit>
        <trans-unit id="b4251f2cfa8c91d422c74e3ae859a0ef96b1aff5" translate="yes" xml:space="preserve">
          <source>InsertIterator::count()</source>
          <target state="translated">InsertIterator::count()</target>
        </trans-unit>
        <trans-unit id="ba8b0accf8142ba644ab902b020f5d3ee0b2782f" translate="yes" xml:space="preserve">
          <source>InsertIterator::countBy()</source>
          <target state="translated">InsertIterator::countBy()</target>
        </trans-unit>
        <trans-unit id="fc98812b0347be1c1d41eeb6680b525d7c676dbf" translate="yes" xml:space="preserve">
          <source>InsertIterator::countKeys()</source>
          <target state="translated">InsertIterator::countKeys()</target>
        </trans-unit>
        <trans-unit id="6230f45fbceadd1d58dee5488beea4471d12ce3e" translate="yes" xml:space="preserve">
          <source>InsertIterator::current()</source>
          <target state="translated">InsertIterator::current()</target>
        </trans-unit>
        <trans-unit id="a886821af028d0fd2ef0020087622954dd6c0692" translate="yes" xml:space="preserve">
          <source>InsertIterator::each()</source>
          <target state="translated">InsertIterator::each()</target>
        </trans-unit>
        <trans-unit id="38ab4f8942df5e638d0263e03429d4cd1506b2d1" translate="yes" xml:space="preserve">
          <source>InsertIterator::every()</source>
          <target state="translated">InsertIterator::every()</target>
        </trans-unit>
        <trans-unit id="e226cc77e2842bccad42a2a98e4d69968c943380" translate="yes" xml:space="preserve">
          <source>InsertIterator::extract()</source>
          <target state="translated">InsertIterator::extract()</target>
        </trans-unit>
        <trans-unit id="9ee1cc7071768f6a1dad1681d88c7cd45c8a54a3" translate="yes" xml:space="preserve">
          <source>InsertIterator::filter()</source>
          <target state="translated">InsertIterator::filter()</target>
        </trans-unit>
        <trans-unit id="a981cc0b8ad74b6af4340de6828225b28f94368e" translate="yes" xml:space="preserve">
          <source>InsertIterator::first()</source>
          <target state="translated">InsertIterator::first()</target>
        </trans-unit>
        <trans-unit id="23f9d1b29c8db583623e58b3cf5329cc08329be6" translate="yes" xml:space="preserve">
          <source>InsertIterator::firstMatch()</source>
          <target state="translated">InsertIterator::firstMatch()</target>
        </trans-unit>
        <trans-unit id="31139f76dad3d4cf793f9ffda1060cf87ad6f0c7" translate="yes" xml:space="preserve">
          <source>InsertIterator::groupBy()</source>
          <target state="translated">InsertIterator::groupBy()</target>
        </trans-unit>
        <trans-unit id="84faf4cfb637f2d74a83fcbe1056ce6d634da0c4" translate="yes" xml:space="preserve">
          <source>InsertIterator::indexBy()</source>
          <target state="translated">InsertIterator::indexBy()</target>
        </trans-unit>
        <trans-unit id="00a5b724c02dd90b0ce11253e449770ecff78aba" translate="yes" xml:space="preserve">
          <source>InsertIterator::insert()</source>
          <target state="translated">InsertIterator::insert()</target>
        </trans-unit>
        <trans-unit id="0b8974bb059a85dcaaaacda0b44a7e19f37400b6" translate="yes" xml:space="preserve">
          <source>InsertIterator::isEmpty()</source>
          <target state="translated">InsertIterator::isEmpty()</target>
        </trans-unit>
        <trans-unit id="3e40476e598e03977e9b46b2fc67ffb47edc52ba" translate="yes" xml:space="preserve">
          <source>InsertIterator::jsonSerialize()</source>
          <target state="translated">InsertIterator::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="4cb8949427c35773397f04c0defe4803ea195b16" translate="yes" xml:space="preserve">
          <source>InsertIterator::last()</source>
          <target state="translated">InsertIterator::last()</target>
        </trans-unit>
        <trans-unit id="797ad55ba9c307d06332b4511532c111131649b7" translate="yes" xml:space="preserve">
          <source>InsertIterator::lazy()</source>
          <target state="translated">InsertIterator::lazy()</target>
        </trans-unit>
        <trans-unit id="8a6ecd71750e121d04ab7b4dd23abf7b85e297e7" translate="yes" xml:space="preserve">
          <source>InsertIterator::listNested()</source>
          <target state="translated">InsertIterator::listNested()</target>
        </trans-unit>
        <trans-unit id="f18d690c041b0dd8feaa73c4028f72db66a14661" translate="yes" xml:space="preserve">
          <source>InsertIterator::map()</source>
          <target state="translated">InsertIterator::map()</target>
        </trans-unit>
        <trans-unit id="eb9ea829896aa9223718e73e2d46e9c482628cd4" translate="yes" xml:space="preserve">
          <source>InsertIterator::match()</source>
          <target state="translated">InsertIterator::match()</target>
        </trans-unit>
        <trans-unit id="1373e8c2f75d19f0f1d53862055cd2ed5c53c833" translate="yes" xml:space="preserve">
          <source>InsertIterator::max()</source>
          <target state="translated">InsertIterator::max()</target>
        </trans-unit>
        <trans-unit id="4cb6c6bbe15939c16f50be57a040fc0496f6eb69" translate="yes" xml:space="preserve">
          <source>InsertIterator::median()</source>
          <target state="translated">InsertIterator::median()</target>
        </trans-unit>
        <trans-unit id="84c44f5343d92e5ea58dcae01b397b65f1795ece" translate="yes" xml:space="preserve">
          <source>InsertIterator::min()</source>
          <target state="translated">InsertIterator::min()</target>
        </trans-unit>
        <trans-unit id="2c9bcdbd53c219bc2cde87629e40cc6156f5aa5e" translate="yes" xml:space="preserve">
          <source>InsertIterator::nest()</source>
          <target state="translated">InsertIterator::nest()</target>
        </trans-unit>
        <trans-unit id="d2c4ff4fad8529cec1b3d8245c9c54a13dd0c221" translate="yes" xml:space="preserve">
          <source>InsertIterator::newCollection()</source>
          <target state="translated">InsertIterator::newCollection()</target>
        </trans-unit>
        <trans-unit id="7ca39deed642cfd9117de7ff8dbfea2fbdea57bc" translate="yes" xml:space="preserve">
          <source>InsertIterator::next()</source>
          <target state="translated">InsertIterator::next()</target>
        </trans-unit>
        <trans-unit id="8c16c3b3e9e643028c82ef046e5c03e631d1dde8" translate="yes" xml:space="preserve">
          <source>InsertIterator::optimizeUnwrap()</source>
          <target state="translated">InsertIterator::optimizeUnwrap()</target>
        </trans-unit>
        <trans-unit id="bd228855d528bb73a45a6de84853a428b25117ce" translate="yes" xml:space="preserve">
          <source>InsertIterator::prepend()</source>
          <target state="translated">InsertIterator::prepend()</target>
        </trans-unit>
        <trans-unit id="55ffac5ebac59b5045e63699d02ad44e5672b95f" translate="yes" xml:space="preserve">
          <source>InsertIterator::prependItem()</source>
          <target state="translated">InsertIterator::prependItem()</target>
        </trans-unit>
        <trans-unit id="66d4409451f31302fc32f0861b7aef2ff07abaca" translate="yes" xml:space="preserve">
          <source>InsertIterator::reduce()</source>
          <target state="translated">InsertIterator::reduce()</target>
        </trans-unit>
        <trans-unit id="5e1511ba24d7cdc9c58efdd0564fed4a8da32dd6" translate="yes" xml:space="preserve">
          <source>InsertIterator::reject()</source>
          <target state="translated">InsertIterator::reject()</target>
        </trans-unit>
        <trans-unit id="7c33bf5b29747fda74a6d3ea21a44acc73a8c0e3" translate="yes" xml:space="preserve">
          <source>InsertIterator::rewind()</source>
          <target state="translated">InsertIterator::rewind()</target>
        </trans-unit>
        <trans-unit id="7850590bba622df76cd9da13bda3d172ba77a9fa" translate="yes" xml:space="preserve">
          <source>InsertIterator::sample()</source>
          <target state="translated">InsertIterator::sample()</target>
        </trans-unit>
        <trans-unit id="a0054055028eb7b8a026cafd114965498b9a9ea0" translate="yes" xml:space="preserve">
          <source>InsertIterator::serialize()</source>
          <target state="translated">InsertIterator::serialize()</target>
        </trans-unit>
        <trans-unit id="194cae02bd88196fc87dac5e59fbfd4adc176a77" translate="yes" xml:space="preserve">
          <source>InsertIterator::shuffle()</source>
          <target state="translated">InsertIterator::shuffle()</target>
        </trans-unit>
        <trans-unit id="de885eee6dad58c22ad431a2e43342b2adb40257" translate="yes" xml:space="preserve">
          <source>InsertIterator::skip()</source>
          <target state="translated">InsertIterator::skip()</target>
        </trans-unit>
        <trans-unit id="628f5893643e26fe55a9c0dbedb0376a572c3a39" translate="yes" xml:space="preserve">
          <source>InsertIterator::some()</source>
          <target state="translated">InsertIterator::some()</target>
        </trans-unit>
        <trans-unit id="894d2058d9ef03a1ba1a19aacad385b2c67c2f66" translate="yes" xml:space="preserve">
          <source>InsertIterator::sortBy()</source>
          <target state="translated">InsertIterator::sortBy()</target>
        </trans-unit>
        <trans-unit id="4e8e17abac01eded385e55d746cd31301dbc7f4c" translate="yes" xml:space="preserve">
          <source>InsertIterator::stopWhen()</source>
          <target state="translated">InsertIterator::stopWhen()</target>
        </trans-unit>
        <trans-unit id="e481563b5aab1c2f2d190603485a890ea570be55" translate="yes" xml:space="preserve">
          <source>InsertIterator::sumOf()</source>
          <target state="translated">InsertIterator::sumOf()</target>
        </trans-unit>
        <trans-unit id="5056cbc5630a155c8870cf7f751938693a5a6497" translate="yes" xml:space="preserve">
          <source>InsertIterator::take()</source>
          <target state="translated">InsertIterator::take()</target>
        </trans-unit>
        <trans-unit id="8f4613895d22489fcfcf9800b2011ac9fed34b30" translate="yes" xml:space="preserve">
          <source>InsertIterator::takeLast()</source>
          <target state="translated">InsertIterator::takeLast()</target>
        </trans-unit>
        <trans-unit id="fc9fc94091f2c8c2fee5fb265370b39d48e35e93" translate="yes" xml:space="preserve">
          <source>InsertIterator::through()</source>
          <target state="translated">InsertIterator::through()</target>
        </trans-unit>
        <trans-unit id="bf8b228860834946e689d084ed1f6ced3aafbc75" translate="yes" xml:space="preserve">
          <source>InsertIterator::toArray()</source>
          <target state="translated">InsertIterator::toArray()</target>
        </trans-unit>
        <trans-unit id="6bff5d3e9ce886f8b66f50a5d77c8f6b71df3f1c" translate="yes" xml:space="preserve">
          <source>InsertIterator::toList()</source>
          <target state="translated">InsertIterator::toList()</target>
        </trans-unit>
        <trans-unit id="5bb506b1b6e6d4051422b55b4d6d5103cd13193b" translate="yes" xml:space="preserve">
          <source>InsertIterator::transpose()</source>
          <target state="translated">InsertIterator::transpose()</target>
        </trans-unit>
        <trans-unit id="2ed69bcdfd03fe405ec22bb83a8494df76ddb7c3" translate="yes" xml:space="preserve">
          <source>InsertIterator::unfold()</source>
          <target state="translated">InsertIterator::unfold()</target>
        </trans-unit>
        <trans-unit id="bb5e54bd793d224e0c8ae19c68a21d8436794c2d" translate="yes" xml:space="preserve">
          <source>InsertIterator::unserialize()</source>
          <target state="translated">InsertIterator::unserialize()</target>
        </trans-unit>
        <trans-unit id="d0e15e2fe23136a7d66e85898f8025b4cefdb249" translate="yes" xml:space="preserve">
          <source>InsertIterator::unwrap()</source>
          <target state="translated">InsertIterator::unwrap()</target>
        </trans-unit>
        <trans-unit id="c1a661ab962695666d7be2a096b42251a4d950b9" translate="yes" xml:space="preserve">
          <source>InsertIterator::zip()</source>
          <target state="translated">InsertIterator::zip()</target>
        </trans-unit>
        <trans-unit id="a62c7fd7b736f5c9f687848ed92779013c68dff6" translate="yes" xml:space="preserve">
          <source>InsertIterator::zipWith()</source>
          <target state="translated">InsertIterator::zipWith()</target>
        </trans-unit>
        <trans-unit id="17a70be2d98b36400da5562939502aff1e32d356" translate="yes" xml:space="preserve">
          <source>Inspect controller to extract possible causes of the failed assertion</source>
          <target state="translated">실패한 어설 션의 가능한 원인을 추출하기 위해 컨트롤러를 검사</target>
        </trans-unit>
        <trans-unit id="a6bbc5c85189228c7a3d0214edb5de0ee8bee377" translate="yes" xml:space="preserve">
          <source>Inspecting loaded paths</source>
          <target state="translated">로드 된 경로 검사</target>
        </trans-unit>
        <trans-unit id="4cccb1154daad520d96f4e4114f6383b93b895e4" translate="yes" xml:space="preserve">
          <source>Inspects if there are any set fields for selecting, otherwise adds all the fields for the default table.</source>
          <target state="translated">선택할 설정 필드가 있는지 검사하고, 그렇지 않으면 기본 테이블에 대한 모든 필드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b9cd9ca0361a237fb9e260b0fb6e68e2208e8b2b" translate="yes" xml:space="preserve">
          <source>Inspects the request for the Accept-Language header and sets the Locale for the current runtime if it matches the list of valid locales as passed in the configuration.</source>
          <target state="translated">Accept-Language 헤더 요청을 검사하고 구성에 전달 된 유효한 로캘 목록과 일치하는 경우 현재 런타임에 대한 로캘을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ed4f782e8047f98693a29014f611941eb3d9975f" translate="yes" xml:space="preserve">
          <source>Inspects the test to look for unloaded fixtures and loads them</source>
          <target state="translated">언로드 된 픽스처를 찾기 위해 테스트를 검사하고로드합니다</target>
        </trans-unit>
        <trans-unit id="6c302d039041ad704cf6ccc9002abf730390055b" translate="yes" xml:space="preserve">
          <source>Instance cache for results of is(something) calls</source>
          <target state="translated">is (something) 호출 결과에 대한 인스턴스 캐시</target>
        </trans-unit>
        <trans-unit id="f96d5e001a4d947fb71f44b118090c02d4e83127" translate="yes" xml:space="preserve">
          <source>Instance of BaseLog or false if not found</source>
          <target state="translated">BaseLog 인스턴스 또는 찾을 수없는 경우 false</target>
        </trans-unit>
        <trans-unit id="c000fa82ad1cb7da181307910252ec94b2ffe136" translate="yes" xml:space="preserve">
          <source>Instance of Cake\Http\Client</source>
          <target state="translated">Cake \ Http \ Client 인스턴스</target>
        </trans-unit>
        <trans-unit id="d97210a1e475439ed6b7725df1dce785ba193da1" translate="yes" xml:space="preserve">
          <source>Instance of Cake\Mailer\Email</source>
          <target state="translated">Cake \ Mailer \ Email 인스턴스</target>
        </trans-unit>
        <trans-unit id="1d03a47269a9109b842571ef753230a228926ea0" translate="yes" xml:space="preserve">
          <source>Instance of ComponentRegistry used to create Components</source>
          <target state="translated">구성 요소를 만드는 데 사용되는 ComponentRegistry 인스턴스</target>
        </trans-unit>
        <trans-unit id="8b5bb19216cc1b9c10592f357d58a82028ae01cb" translate="yes" xml:space="preserve">
          <source>Instance of LoggerInterface or false if not found</source>
          <target state="translated">LoggerInterface의 인스턴스 또는 찾을 수없는 경우 false</target>
        </trans-unit>
        <trans-unit id="30c47c26dd908c42ab74b0cdcae03fbfd54ae282" translate="yes" xml:space="preserve">
          <source>Instance of PDO.</source>
          <target state="translated">PDO의 인스턴스.</target>
        </trans-unit>
        <trans-unit id="abfd24e74b1b2e3fb06de7e247db71514ac31052" translate="yes" xml:space="preserve">
          <source>Instance of SplFileObject class</source>
          <target state="translated">SplFileObject 클래스의 인스턴스</target>
        </trans-unit>
        <trans-unit id="3629f8c9622180bfaeb712776a65666d44a7cf3f" translate="yes" xml:space="preserve">
          <source>Instance of Table responsible for translating</source>
          <target state="translated">번역을 담당하는 테이블 인스턴스</target>
        </trans-unit>
        <trans-unit id="11d890252aef3d3d2e16aac366941792478709c3" translate="yes" xml:space="preserve">
          <source>Instance of a Session object relative to this request</source>
          <target state="translated">이 요청과 관련된 Session 객체의 인스턴스</target>
        </trans-unit>
        <trans-unit id="8607501a7dc3a08f32ab4799b439fc1fcabeb21b" translate="yes" xml:space="preserve">
          <source>Instance of a class responsible for storing association containments and for eager loading them when this query is executed</source>
          <target state="translated">이 쿼리가 실행될 때 연관 포함을 저장하고 열망을 담당하는 클래스의 인스턴스</target>
        </trans-unit>
        <trans-unit id="fe67ae6899a507498977245e14db0105208ecb6a" translate="yes" xml:space="preserve">
          <source>Instance of a locator to use.</source>
          <target state="translated">사용할 로케이터 인스턴스.</target>
        </trans-unit>
        <trans-unit id="0bb0b0ba49a43ffc3188106e8f0a3a355a0d14c3" translate="yes" xml:space="preserve">
          <source>Instance of a table object this query is bound to</source>
          <target state="translated">이 쿼리가 바인딩 된 테이블 개체의 인스턴스</target>
        </trans-unit>
        <trans-unit id="62e2a4c159d89c40ad3dcef00bf1deb1b06321c3" translate="yes" xml:space="preserve">
          <source>Instance of a table object this query is bound to.</source>
          <target state="translated">이 쿼리가 바인딩 된 테이블 개체의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="c4aee8e0ce6a747e714caebee927e8fdaf4a4231" translate="yes" xml:space="preserve">
          <source>Instance of functions builder object used for generating arbitrary SQL functions.</source>
          <target state="translated">임의의 SQL 함수를 생성하는 데 사용되는 함수 빌더 오브젝트 인스턴스.</target>
        </trans-unit>
        <trans-unit id="5a709a2a9cb8d2f8b5844231a35283766bcad563" translate="yes" xml:space="preserve">
          <source>Instance of the Cake\Event\EventManager this object is using to dispatch inner events.</source>
          <target state="translated">이 객체가 내부 이벤트를 전달하는 데 사용하는 Cake \ Event \ EventManager의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="2743294a4a04d32a8e77463fb161cf0f28808d71" translate="yes" xml:space="preserve">
          <source>Instance of the Session object</source>
          <target state="translated">Session 객체의 인스턴스</target>
        </trans-unit>
        <trans-unit id="29bde2d11aba7de708b351d33cfe4ac70dd035e3" translate="yes" xml:space="preserve">
          <source>Instance of the View created during rendering. Won't be set until after Cell::__toString()/render() is called.</source>
          <target state="translated">렌더링 중에 생성 된 뷰의 인스턴스입니다. Cell :: __ toString () / render ()가 호출 될 때까지 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7c79e7f030bd8c9a6396637768fc76f8288b2310" translate="yes" xml:space="preserve">
          <source>Instance of the View created during rendering. Won't be set until after Controller::render() is called.</source>
          <target state="translated">렌더링 중에 생성 된 뷰의 인스턴스입니다. Controller :: render ()가 호출 될 때까지 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc0a37364c568002981e85e4c3e6c6a3df6ff005" translate="yes" xml:space="preserve">
          <source>Instance of the diff formatting object.</source>
          <target state="translated">diff 형식 지정 개체의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="5d084dc45adc3e84f2376fd9cf20b86cc78ef2c9" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait</source>
          <target state="translated">InstanceConfigTrait</target>
        </trans-unit>
        <trans-unit id="7b4f476c33061e73c1890da46b9cfab0c8896c75" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait (class)</source>
          <target state="translated">InstanceConfigTrait (클래스)</target>
        </trans-unit>
        <trans-unit id="550a2c0022e104ea3475224e57e9dddf07559383" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait (trait)</source>
          <target state="translated">InstanceConfigTrait (특성)</target>
        </trans-unit>
        <trans-unit id="97ad5c4b3be5755e8a49d9c27782b57289d5776d" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::$_config</source>
          <target state="translated">InstanceConfigTrait::$_config</target>
        </trans-unit>
        <trans-unit id="ca925502536b755363c79430e8269c4783ade0db" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::$_configInitialized</source>
          <target state="translated">InstanceConfigTrait::$_configInitialized</target>
        </trans-unit>
        <trans-unit id="0a98ff15f9f53e8a67680d47b7b3f42ab838248d" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::_configDelete()</source>
          <target state="translated">InstanceConfigTrait::_configDelete()</target>
        </trans-unit>
        <trans-unit id="ba7eed20d5bc39077fa90897c7c72de5b4d0d5ed" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::_configRead()</source>
          <target state="translated">InstanceConfigTrait::_configRead()</target>
        </trans-unit>
        <trans-unit id="58d7ca3376fab2cde9217913935ffbe0919685d8" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::_configWrite()</source>
          <target state="translated">InstanceConfigTrait::_configWrite()</target>
        </trans-unit>
        <trans-unit id="83a2dfc3eaf6f4aeaa12ba41d92ba770e264846a" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::config()</source>
          <target state="translated">InstanceConfigTrait::config()</target>
        </trans-unit>
        <trans-unit id="1c2201d801797d8fb92e783194c98e2eda014678" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::configShallow()</source>
          <target state="translated">InstanceConfigTrait::configShallow()</target>
        </trans-unit>
        <trans-unit id="66e482a82880fdbe97cd08339ef996d4d917cb96" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::getConfig()</source>
          <target state="translated">InstanceConfigTrait::getConfig()</target>
        </trans-unit>
        <trans-unit id="0eb83cae5df234d0f3845bf2bfba6473831c9266" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::setConfig()</source>
          <target state="translated">InstanceConfigTrait::setConfig()</target>
        </trans-unit>
        <trans-unit id="fc56b17f3df721e70bcb2717a0c09349817d8c0e" translate="yes" xml:space="preserve">
          <source>Instances of filters will be re-used across all sub-requests in a request.</source>
          <target state="translated">필터 인스턴스는 요청의 모든 하위 요청에서 재사용됩니다.</target>
        </trans-unit>
        <trans-unit id="478709b4e14a9fcb07135f8304c26456b4fb3828" translate="yes" xml:space="preserve">
          <source>Instances that belong to the registry.</source>
          <target state="translated">레지스트리에 속하는 인스턴스</target>
        </trans-unit>
        <trans-unit id="ad34b18f05a6a1444342130ce8825daafb45cceb" translate="yes" xml:space="preserve">
          <source>Instantiate the fixture.</source>
          <target state="translated">조명기를 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="97c9f1913e66482e35b1f61338d0882035e5a382" translate="yes" xml:space="preserve">
          <source>Instantiates the correct view class, hands it its data, and uses it to render the view output.</source>
          <target state="translated">올바른 뷰 클래스를 인스턴스화하고 데이터를 전달한 후이를 사용하여 뷰 출력을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="1cd8e983866b583cf4d826bb07212a1024afe578" translate="yes" xml:space="preserve">
          <source>Instantiating controller</source>
          <target state="translated">인스턴스화 컨트롤러</target>
        </trans-unit>
        <trans-unit id="d8d6f03ded73b9404610661e3796397fb6363b6f" translate="yes" xml:space="preserve">
          <source>Instead we need to handle those errors manually.</source>
          <target state="translated">대신 이러한 오류를 수동으로 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="e783de14d9d07af3dc7bad4906da1c8276e0f926" translate="yes" xml:space="preserve">
          <source>Instructs the router to parse out file extensions from the URL. For example, &lt;a href=&quot;http://example.com/posts.rss&quot;&gt;http://example.com/posts.rss&lt;/a&gt; would yield a file extension of &quot;rss&quot;. The file extension itself is made available in the controller as &lt;code&gt;$this-&amp;gt;request-&amp;gt;getParam('_ext')&lt;/code&gt;, and is used by the RequestHandler component to automatically switch to alternate layouts and templates, and load helpers corresponding to the given content, i.e. RssHelper. Switching layouts and helpers requires that the chosen extension has a defined mime type in &lt;code&gt;Cake\Http\Response&lt;/code&gt;.</source>
          <target state="translated">URL에서 파일 확장자를 구문 분석하도록 라우터에 지시합니다. 예를 들어, &lt;a href=&quot;http://example.com/posts.rss&quot;&gt;http://example.com/posts.rss&lt;/a&gt; 는 &quot;rss&quot;라는 파일 확장자를 생성합니다. 파일 확장자 자체는 컨트롤러에서 &lt;code&gt;$this-&amp;gt;request-&amp;gt;getParam('_ext')&lt;/code&gt; 로 사용할 수 있으며 RequestHandler 구성 요소에서 자동으로 대체 레이아웃 및 템플릿으로 전환하고 주어진 콘텐츠에 해당하는 도우미를로드하는 데 사용됩니다. 즉 RssHelper. 레이아웃과 도우미를 전환하려면 선택한 확장에 &lt;code&gt;Cake\Http\Response&lt;/code&gt; 에 정의 된 MIME 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d4c675a2884045c1c230c0f0c668aab1143adcab" translate="yes" xml:space="preserve">
          <source>Instructs the router to parse out file extensions from the URL. For example, http://example.com/posts.rss would yield a file extension of &quot;rss&quot;. The file extension itself is made available in the controller as &lt;code&gt;$this-&amp;gt;request-&amp;gt;getParam('_ext')&lt;/code&gt;, and is used by the RequestHandler component to automatically switch to alternate layouts and templates, and load helpers corresponding to the given content, i.e. RssHelper. Switching layouts and helpers requires that the chosen extension has a defined mime type in &lt;code&gt;Cake\Http\Response&lt;/code&gt;.</source>
          <target state="translated">라우터가 URL에서 파일 확장자를 구문 분석하도록 지시합니다. 예를 들어 http://example.com/posts.rss는 &quot;rss&quot;의 파일 확장자를 생성합니다. 파일 확장자 자체는 컨트롤러에서 &lt;code&gt;$this-&amp;gt;request-&amp;gt;getParam('_ext')&lt;/code&gt; 로 제공되며 RequestHandler 구성 요소가 자동으로 대체 레이아웃 및 템플리트로 전환하고 지정된 컨텐츠에 해당하는 헬퍼를로드하는 데 사용됩니다. 즉, RssHelper. 레이아웃 및 도우미를 전환하려면 선택한 확장에 &lt;code&gt;Cake\Http\Response&lt;/code&gt; 에 정의 된 MIME 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="fd2fcbe23f9fcab09f8e2f4ac089942f0fb36fba" translate="yes" xml:space="preserve">
          <source>Integer of the level or false if the node does not exist.</source>
          <target state="translated">레벨의 정수. 노드가 존재하지 않으면 false.</target>
        </trans-unit>
        <trans-unit id="e71dd1904e66105b87986c7593edc281e3e11f8a" translate="yes" xml:space="preserve">
          <source>Integer type converter.</source>
          <target state="translated">정수형 변환기.</target>
        </trans-unit>
        <trans-unit id="f1654cbf5d4bc76e43db53e3a1f62a2b020390ea" translate="yes" xml:space="preserve">
          <source>Integer, even &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">정수, 심지어 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c3e335bf751506bceedcb32c9cd8fe826512024" translate="yes" xml:space="preserve">
          <source>IntegerType</source>
          <target state="translated">IntegerType</target>
        </trans-unit>
        <trans-unit id="5d5e159889e08ce11631b1560a8ccf8c1f138f58" translate="yes" xml:space="preserve">
          <source>IntegerType (class)</source>
          <target state="translated">정수형 (클래스)</target>
        </trans-unit>
        <trans-unit id="50ee477def1e3700f110e4e014d922fed8a77453" translate="yes" xml:space="preserve">
          <source>IntegerType::$_name</source>
          <target state="translated">IntegerType::$_name</target>
        </trans-unit>
        <trans-unit id="b479384ba73d349e6d10724c093fc424dec1e222" translate="yes" xml:space="preserve">
          <source>IntegerType::__construct()</source>
          <target state="translated">IntegerType::__construct()</target>
        </trans-unit>
        <trans-unit id="27abc3164c9639d396bf07cac62dd3f788c6061a" translate="yes" xml:space="preserve">
          <source>IntegerType::checkNumeric()</source>
          <target state="translated">IntegerType::checkNumeric()</target>
        </trans-unit>
        <trans-unit id="004ccab827363a7307a99ca1f2b33d25831cea2d" translate="yes" xml:space="preserve">
          <source>IntegerType::getBaseType()</source>
          <target state="translated">IntegerType::getBaseType()</target>
        </trans-unit>
        <trans-unit id="2b7cd7c7c6dfefaa6db25b447173f0213a49e673" translate="yes" xml:space="preserve">
          <source>IntegerType::getName()</source>
          <target state="translated">IntegerType::getName()</target>
        </trans-unit>
        <trans-unit id="617b2e248deb8efd5d32b0affe2d6ee56f1e3877" translate="yes" xml:space="preserve">
          <source>IntegerType::manyToPHP()</source>
          <target state="translated">IntegerType::manyToPHP()</target>
        </trans-unit>
        <trans-unit id="9333e2955bff7131d286322cffeaabfb4b5caaf3" translate="yes" xml:space="preserve">
          <source>IntegerType::marshal()</source>
          <target state="translated">IntegerType::marshal()</target>
        </trans-unit>
        <trans-unit id="52fbb178ace933061e41ecc1838f6709d813ad46" translate="yes" xml:space="preserve">
          <source>IntegerType::newId()</source>
          <target state="translated">IntegerType::newId()</target>
        </trans-unit>
        <trans-unit id="8a1f7ad54046d13705c909f70e0f4e7422f11937" translate="yes" xml:space="preserve">
          <source>IntegerType::toDatabase()</source>
          <target state="translated">IntegerType::toDatabase()</target>
        </trans-unit>
        <trans-unit id="7e5532d1ff8b36a847129d4be3f79ca82fa8b758" translate="yes" xml:space="preserve">
          <source>IntegerType::toPHP()</source>
          <target state="translated">IntegerType::toPHP()</target>
        </trans-unit>
        <trans-unit id="7e157dcb3d35f75be049c74566dbcda27b77a958" translate="yes" xml:space="preserve">
          <source>IntegerType::toStatement()</source>
          <target state="translated">IntegerType::toStatement()</target>
        </trans-unit>
        <trans-unit id="4df22c29249ca76094f0b5e0241cbb29fc3a5d3e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase</source>
          <target state="translated">IntegrationTestCase</target>
        </trans-unit>
        <trans-unit id="a5974f6de0ca76b1102ad4fe6366ff2b297d42fd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase (class)</source>
          <target state="translated">IntegrationTestCase (클래스)</target>
        </trans-unit>
        <trans-unit id="69978058948e672a7095449d4079be83114450ae" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_appArgs</source>
          <target state="translated">IntegrationTestCase::$_appArgs</target>
        </trans-unit>
        <trans-unit id="10e295b3d9e926b3851793e75188064a52ba7891" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_appClass</source>
          <target state="translated">IntegrationTestCase::$_appClass</target>
        </trans-unit>
        <trans-unit id="7c09e2eb0955e0a15827ee4c5505e706b33ad0fc" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_configure</source>
          <target state="translated">IntegrationTestCase::$_configure</target>
        </trans-unit>
        <trans-unit id="a37b8271b621c5a826cad302057caa313236bbb6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_controller</source>
          <target state="translated">IntegrationTestCase::$_controller</target>
        </trans-unit>
        <trans-unit id="0f75d3a07def5c53e5976f05784655d56e0dda4a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_cookie</source>
          <target state="translated">IntegrationTestCase::$_cookie</target>
        </trans-unit>
        <trans-unit id="c52a8637a72d094b0ee024bfa6ee468f1ec3cb8d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_cookieEncryptionKey</source>
          <target state="translated">IntegrationTestCase::$_cookieEncryptionKey</target>
        </trans-unit>
        <trans-unit id="db69cce46063a05c1758f533126c7772ea687b23" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_csrfToken</source>
          <target state="translated">IntegrationTestCase::$_csrfToken</target>
        </trans-unit>
        <trans-unit id="d2d1b7e03d845a4e18417ae92a17e0cc70533997" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_exception</source>
          <target state="translated">IntegrationTestCase::$_exception</target>
        </trans-unit>
        <trans-unit id="7e94fdcff536d57c2cc396c04e16b5c97e1c4f63" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_flashMessages</source>
          <target state="translated">IntegrationTestCase::$_flashMessages</target>
        </trans-unit>
        <trans-unit id="885b0ead5a216c37b1f3629294e12630044229fd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_layoutName</source>
          <target state="translated">IntegrationTestCase::$_layoutName</target>
        </trans-unit>
        <trans-unit id="47d07fc4f02351d712d600fbc4e57b6085e50b5a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_request</source>
          <target state="translated">IntegrationTestCase::$_request</target>
        </trans-unit>
        <trans-unit id="ec19f3f4c66e7a6732589be114729c5a0dd73804" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_requestSession</source>
          <target state="translated">IntegrationTestCase::$_requestSession</target>
        </trans-unit>
        <trans-unit id="61a01ce3dfe82a117dc89a2ce0f898b7ec8af2fa" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_response</source>
          <target state="translated">IntegrationTestCase::$_response</target>
        </trans-unit>
        <trans-unit id="49b2590b99b79c62b86a6285ad5b1e0bf2a8309c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_retainFlashMessages</source>
          <target state="translated">IntegrationTestCase::$_retainFlashMessages</target>
        </trans-unit>
        <trans-unit id="834714a36edb84e05036b5fc236f62c42f0fcffd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_securityToken</source>
          <target state="translated">IntegrationTestCase::$_securityToken</target>
        </trans-unit>
        <trans-unit id="fa33c335dffc03521ef98e1c9b7337316061c027" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_session</source>
          <target state="translated">IntegrationTestCase::$_session</target>
        </trans-unit>
        <trans-unit id="9df72cf3ef15484a0b753ff177de3b45aa7fe068" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_tableLocator</source>
          <target state="translated">IntegrationTestCase::$_tableLocator</target>
        </trans-unit>
        <trans-unit id="55f17fd2fc9c7a3b8b9a1643a0a193868beb4dba" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_unlockedFields</source>
          <target state="translated">IntegrationTestCase::$_unlockedFields</target>
        </trans-unit>
        <trans-unit id="794d5dce59e38ce0ad3c4ff48b3683bdebdaca57" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_validCiphers</source>
          <target state="translated">IntegrationTestCase::$_validCiphers</target>
        </trans-unit>
        <trans-unit id="7528f3c7c762cb391f96888637a17c0adb433cd3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$_viewName</source>
          <target state="translated">IntegrationTestCase::$_viewName</target>
        </trans-unit>
        <trans-unit id="dd8833c0a939472b1a22edaa08837f69ee705965" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$autoFixtures</source>
          <target state="translated">IntegrationTestCase::$autoFixtures</target>
        </trans-unit>
        <trans-unit id="ec218298355ad58928723145e4c497e73b90fbb6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$backupGlobals</source>
          <target state="translated">IntegrationTestCase::$backupGlobals</target>
        </trans-unit>
        <trans-unit id="426e110deb09691571f0d338eef8e7c7b7fdc553" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$backupGlobalsBlacklist</source>
          <target state="translated">IntegrationTestCase::$backupGlobalsBlacklist</target>
        </trans-unit>
        <trans-unit id="b4c78dffa7109de4405b5ccbf8a015fdc1665cd4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$backupStaticAttributes</source>
          <target state="translated">IntegrationTestCase::$backupStaticAttributes</target>
        </trans-unit>
        <trans-unit id="575e668808231c9bd202444a7ba7f195dcc3ac2e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$backupStaticAttributesBlacklist</source>
          <target state="translated">IntegrationTestCase::$backupStaticAttributesBlacklist</target>
        </trans-unit>
        <trans-unit id="9ddf3ee2d790eadd49781ea98215a2d6170283bb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$dropTables</source>
          <target state="translated">IntegrationTestCase::$dropTables</target>
        </trans-unit>
        <trans-unit id="715041c5d9e705e16a21e21d51dc1864488c7685" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$fixtureManager</source>
          <target state="translated">IntegrationTestCase::$fixtureManager</target>
        </trans-unit>
        <trans-unit id="f05d4ef3ce3f250f32765359b2bd22af6c5c8c43" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$fixtures</source>
          <target state="translated">IntegrationTestCase::$fixtures</target>
        </trans-unit>
        <trans-unit id="dd4bf528a008903afe0a403d24395a0152536aad" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$preserveGlobalState</source>
          <target state="translated">IntegrationTestCase::$preserveGlobalState</target>
        </trans-unit>
        <trans-unit id="5350b5e50dad77fb290607ca0ac7f97b886969fc" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::$runTestInSeparateProcess</source>
          <target state="translated">IntegrationTestCase::$runTestInSeparateProcess</target>
        </trans-unit>
        <trans-unit id="45fc0034b96cc4e7e3b2430594bf0c511fefb807" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::__construct()</source>
          <target state="translated">IntegrationTestCase::__construct()</target>
        </trans-unit>
        <trans-unit id="201b925530107ebabb181a5e8bc4dfea753a675c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_addTokens()</source>
          <target state="translated">IntegrationTestCase::_addTokens()</target>
        </trans-unit>
        <trans-unit id="4b8f3e48b00e7923e0e78698d098ddd82c2a3bce" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_assertAttributes()</source>
          <target state="translated">IntegrationTestCase::_assertAttributes()</target>
        </trans-unit>
        <trans-unit id="4e36987c6076e2b75081f0fb757c60b69f8335ff" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_buildRequest()</source>
          <target state="translated">IntegrationTestCase::_buildRequest()</target>
        </trans-unit>
        <trans-unit id="1edcbe7bc24e4acaf7ba0ce8da89f6f208941af8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_castToString()</source>
          <target state="translated">IntegrationTestCase::_castToString()</target>
        </trans-unit>
        <trans-unit id="2c453a55de188e2d46e02278aaba42e75270fa70" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_checkCipher()</source>
          <target state="translated">IntegrationTestCase::_checkCipher()</target>
        </trans-unit>
        <trans-unit id="2f13577f662cf62aeaa9223077ba81d815921fb1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_decode()</source>
          <target state="translated">IntegrationTestCase::_decode()</target>
        </trans-unit>
        <trans-unit id="f47f70abef0c56a56046e35d88506b1aacce800f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_decrypt()</source>
          <target state="translated">IntegrationTestCase::_decrypt()</target>
        </trans-unit>
        <trans-unit id="a18c82f9995e416c2ba0c308b198d8937117a522" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_encrypt()</source>
          <target state="translated">IntegrationTestCase::_encrypt()</target>
        </trans-unit>
        <trans-unit id="83a871744604f3bedd2bcc4c613ffc95a198d335" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_explode()</source>
          <target state="translated">IntegrationTestCase::_explode()</target>
        </trans-unit>
        <trans-unit id="b2f2f34cc0ee524a4a943c65512cf97c4b8c129e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_getBodyAsString()</source>
          <target state="translated">IntegrationTestCase::_getBodyAsString()</target>
        </trans-unit>
        <trans-unit id="0f8a86ee2cbc0613f34e8f6af96159426a321477" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_getCookieEncryptionKey()</source>
          <target state="translated">IntegrationTestCase::_getCookieEncryptionKey()</target>
        </trans-unit>
        <trans-unit id="e5c29331b7e6c9d5448a337fba84bfc960bbc3b2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_getTableClassName()</source>
          <target state="translated">IntegrationTestCase::_getTableClassName()</target>
        </trans-unit>
        <trans-unit id="278038aa1d1cf1bfedd56afda104887b048116c6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_handleError()</source>
          <target state="translated">IntegrationTestCase::_handleError()</target>
        </trans-unit>
        <trans-unit id="6a9d43fa652f42dd330f3a6ec5a3ee3547d31742" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_implode()</source>
          <target state="translated">IntegrationTestCase::_implode()</target>
        </trans-unit>
        <trans-unit id="47835607f2c2f88a4b4b9d8bcc9a5320c37536fb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_makeDispatcher()</source>
          <target state="translated">IntegrationTestCase::_makeDispatcher()</target>
        </trans-unit>
        <trans-unit id="a0db1778f4baa9a83d580401ca2ceed263c22e29" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_normalizePath()</source>
          <target state="translated">IntegrationTestCase::_normalizePath()</target>
        </trans-unit>
        <trans-unit id="de0f8d205eeed5f7c278a38632874b0ab0c64df5" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_sendRequest()</source>
          <target state="translated">IntegrationTestCase::_sendRequest()</target>
        </trans-unit>
        <trans-unit id="8e6b9717445722b06214aea83b63ad1a06c3ed9a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::_url()</source>
          <target state="translated">IntegrationTestCase::_url()</target>
        </trans-unit>
        <trans-unit id="7ae95b1ee70e32f3e145ca8ec139d5bc52b2c84c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::addFixture()</source>
          <target state="translated">IntegrationTestCase::addFixture()</target>
        </trans-unit>
        <trans-unit id="ec7cf6d5bdad38b5f693045a55b847a871f02b18" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::addToAssertionCount()</source>
          <target state="translated">IntegrationTestCase::addToAssertionCount()</target>
        </trans-unit>
        <trans-unit id="de22bebd450eadd69239e9e711a9615a631d49b2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::addWarning()</source>
          <target state="translated">IntegrationTestCase::addWarning()</target>
        </trans-unit>
        <trans-unit id="f52ec2406480da38761a622d1a97905a148ed325" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::any()</source>
          <target state="translated">IntegrationTestCase::any()</target>
        </trans-unit>
        <trans-unit id="72f5705ed6be0c374ee65e4407804c8a3fb47551" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::anything()</source>
          <target state="translated">IntegrationTestCase::anything()</target>
        </trans-unit>
        <trans-unit id="3eacf644db1a1a457ceb07da7165c0d110cf3bd0" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::arrayHasKey()</source>
          <target state="translated">IntegrationTestCase::arrayHasKey()</target>
        </trans-unit>
        <trans-unit id="1f1efefd7f8c78a1ae5d0581484040d47fd606e3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertArrayHasKey()</source>
          <target state="translated">IntegrationTestCase::assertArrayHasKey()</target>
        </trans-unit>
        <trans-unit id="be02abf16e34c402377658255f65496d043e4008" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertArrayNotHasKey()</source>
          <target state="translated">IntegrationTestCase::assertArrayNotHasKey()</target>
        </trans-unit>
        <trans-unit id="f201f48f2914efd4d8cd8d9e0fc1ef98015c7596" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertArraySubset()</source>
          <target state="translated">IntegrationTestCase::assertArraySubset()</target>
        </trans-unit>
        <trans-unit id="11004dbec37a959e24a3538ae4768da260af0172" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeContains()</source>
          <target state="translated">IntegrationTestCase::assertAttributeContains()</target>
        </trans-unit>
        <trans-unit id="24429ad8023b918860ac0772453bcf831fd60435" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeContainsOnly()</source>
          <target state="translated">IntegrationTestCase::assertAttributeContainsOnly()</target>
        </trans-unit>
        <trans-unit id="2727d56bec890f7070f484a36bb2a6ad8cfde765" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeCount()</source>
          <target state="translated">IntegrationTestCase::assertAttributeCount()</target>
        </trans-unit>
        <trans-unit id="957e8250662bb5d63c94cb402e0e39e247cf9f81" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeEmpty()</source>
          <target state="translated">IntegrationTestCase::assertAttributeEmpty()</target>
        </trans-unit>
        <trans-unit id="029182ff451ff0d8960abb4d1bd9c1d55328f364" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeEquals()</source>
          <target state="translated">IntegrationTestCase::assertAttributeEquals()</target>
        </trans-unit>
        <trans-unit id="487f4d2f3b309e6919363758c0a5e40fcc9a5a40" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeGreaterThan()</source>
          <target state="translated">IntegrationTestCase::assertAttributeGreaterThan()</target>
        </trans-unit>
        <trans-unit id="9cc9b8822c5b2d022c074cd8bb21caba73053338" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeGreaterThanOrEqual()</source>
          <target state="translated">IntegrationTestCase::assertAttributeGreaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="cfda02af9ebb84a93be00550709354e789bc9627" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeInstanceOf()</source>
          <target state="translated">IntegrationTestCase::assertAttributeInstanceOf()</target>
        </trans-unit>
        <trans-unit id="6e11862188c035ae63f731ee1cbf377383b3bcee" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeInternalType()</source>
          <target state="translated">IntegrationTestCase::assertAttributeInternalType()</target>
        </trans-unit>
        <trans-unit id="9b6a076313da143ac8245d8954b9f3a6d812345b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeLessThan()</source>
          <target state="translated">IntegrationTestCase::assertAttributeLessThan()</target>
        </trans-unit>
        <trans-unit id="7902f8e28741bf680ebee3655e54e7e9d81ffbc1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeLessThanOrEqual()</source>
          <target state="translated">IntegrationTestCase::assertAttributeLessThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="55517893e4a44c5e53a7a4837deec3bf0f6769af" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotContains()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotContains()</target>
        </trans-unit>
        <trans-unit id="99aea9eae4deb2452c9c1c2c76ee2b395c696c0e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotContainsOnly()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotContainsOnly()</target>
        </trans-unit>
        <trans-unit id="78e498d8d665ced34c708a31ba0fb2e4e99f9f75" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotCount()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotCount()</target>
        </trans-unit>
        <trans-unit id="92a89ba8509d005a013f8e47662ff1bd2ba897f7" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotEmpty()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotEmpty()</target>
        </trans-unit>
        <trans-unit id="a38a21041c5966c0cd27ddb2d58acdf425fefc13" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotEquals()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotEquals()</target>
        </trans-unit>
        <trans-unit id="830662cf24f267df9c17ddb849d9c135b7db6f39" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotInstanceOf()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotInstanceOf()</target>
        </trans-unit>
        <trans-unit id="71072fcb680e69cef96f4f54e890e59b694b3f62" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotInternalType()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotInternalType()</target>
        </trans-unit>
        <trans-unit id="cbd6ec33c655562759fd91b6a7470d1cbd652f1e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeNotSame()</source>
          <target state="translated">IntegrationTestCase::assertAttributeNotSame()</target>
        </trans-unit>
        <trans-unit id="1abc10417a750fb3b30a825a475ad90b1622ded1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertAttributeSame()</source>
          <target state="translated">IntegrationTestCase::assertAttributeSame()</target>
        </trans-unit>
        <trans-unit id="297fc6f472991ae14841044e5f3411d36bfccb75" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertClassHasAttribute()</source>
          <target state="translated">IntegrationTestCase::assertClassHasAttribute()</target>
        </trans-unit>
        <trans-unit id="90ed8fed95b6c073489002677400a6e10f535447" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertClassHasStaticAttribute()</source>
          <target state="translated">IntegrationTestCase::assertClassHasStaticAttribute()</target>
        </trans-unit>
        <trans-unit id="77d28cad9cf94424d21221fc678e3cedb5eea004" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertClassNotHasAttribute()</source>
          <target state="translated">IntegrationTestCase::assertClassNotHasAttribute()</target>
        </trans-unit>
        <trans-unit id="97fd1228eff56a16bfa1132dfb1a36edce99b2b5" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertClassNotHasStaticAttribute()</source>
          <target state="translated">IntegrationTestCase::assertClassNotHasStaticAttribute()</target>
        </trans-unit>
        <trans-unit id="3fe25a41b339c2243882a45ddbe0c4ad25771d7d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertContains()</source>
          <target state="translated">IntegrationTestCase::assertContains()</target>
        </trans-unit>
        <trans-unit id="1444f818e53fd7ca33de3a3c605a7589fb206019" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertContainsEquals()</source>
          <target state="translated">IntegrationTestCase::assertContainsEquals()</target>
        </trans-unit>
        <trans-unit id="266a31757501cb19a96cc078cea5ecd8abe6e72a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertContainsOnly()</source>
          <target state="translated">IntegrationTestCase::assertContainsOnly()</target>
        </trans-unit>
        <trans-unit id="e160b37c68ba7aceb31cafca1d8a9d9e880ca88c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertContainsOnlyInstancesOf()</source>
          <target state="translated">IntegrationTestCase::assertContainsOnlyInstancesOf()</target>
        </trans-unit>
        <trans-unit id="9528fcaf8302d886b8dc49a2918eccd555bba2f0" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertContentType()</source>
          <target state="translated">IntegrationTestCase::assertContentType()</target>
        </trans-unit>
        <trans-unit id="a88c8cb8aae32f3c93385b55c8e671574034221c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertCookie()</source>
          <target state="translated">IntegrationTestCase::assertCookie()</target>
        </trans-unit>
        <trans-unit id="2daa23fdc0df4e05156614ac6829d39d6883ad2a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertCookieEncrypted()</source>
          <target state="translated">IntegrationTestCase::assertCookieEncrypted()</target>
        </trans-unit>
        <trans-unit id="f789595d9eccbad5450a1816679b75666e2e8676" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertCookieNotSet()</source>
          <target state="translated">IntegrationTestCase::assertCookieNotSet()</target>
        </trans-unit>
        <trans-unit id="44dee0a37bf36595f2606e0f1e293cb47a5bf968" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertCount()</source>
          <target state="translated">IntegrationTestCase::assertCount()</target>
        </trans-unit>
        <trans-unit id="6923dc2cebe0593efebc54e02fbfba30a5fcc928" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertDirectoryExists()</source>
          <target state="translated">IntegrationTestCase::assertDirectoryExists()</target>
        </trans-unit>
        <trans-unit id="33e4f82a6fa2c5badc4bf7812981d8e07d568092" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertDirectoryIsReadable()</source>
          <target state="translated">IntegrationTestCase::assertDirectoryIsReadable()</target>
        </trans-unit>
        <trans-unit id="c981564a0d8fabfe6a109c268f2c9de4003b09dd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertDirectoryIsWritable()</source>
          <target state="translated">IntegrationTestCase::assertDirectoryIsWritable()</target>
        </trans-unit>
        <trans-unit id="69400dd861b517e38884bddf1a2e229e06bf8ddb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertDirectoryNotExists()</source>
          <target state="translated">IntegrationTestCase::assertDirectoryNotExists()</target>
        </trans-unit>
        <trans-unit id="5fdd88c92c40320acac3bb80469fac5cbe149f30" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertDirectoryNotIsReadable()</source>
          <target state="translated">IntegrationTestCase::assertDirectoryNotIsReadable()</target>
        </trans-unit>
        <trans-unit id="2eb13c9064175ed33ce7ef3ccaf08842e93438bb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertDirectoryNotIsWritable()</source>
          <target state="translated">IntegrationTestCase::assertDirectoryNotIsWritable()</target>
        </trans-unit>
        <trans-unit id="db210641d569fca6f33fe2e9a56993f7efc3399c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEmpty()</source>
          <target state="translated">IntegrationTestCase::assertEmpty()</target>
        </trans-unit>
        <trans-unit id="ab38e5b84f92ae26d1729af06f76953a64ac3a43" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEqualXMLStructure()</source>
          <target state="translated">IntegrationTestCase::assertEqualXMLStructure()</target>
        </trans-unit>
        <trans-unit id="b425586479c5ad75d28f43129f34b672a3a314dd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEquals()</source>
          <target state="translated">IntegrationTestCase::assertEquals()</target>
        </trans-unit>
        <trans-unit id="8587b976b11964a6d6afb6c3891f8d5ceb236503" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEqualsCanonicalizing()</source>
          <target state="translated">IntegrationTestCase::assertEqualsCanonicalizing()</target>
        </trans-unit>
        <trans-unit id="a307ee9850c5e24b79436bd74972150e2bee8685" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEqualsIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertEqualsIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="08af5bd8e07615ef71cba48c74e9c26f1527240d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEqualsSql()</source>
          <target state="translated">IntegrationTestCase::assertEqualsSql()</target>
        </trans-unit>
        <trans-unit id="dd9955612cfaefe813f7f70543e8005b54a6800e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEqualsWithDelta()</source>
          <target state="translated">IntegrationTestCase::assertEqualsWithDelta()</target>
        </trans-unit>
        <trans-unit id="5f57e8c9f91281cf3c422e0b09a3da34d0b54976" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEventFired()</source>
          <target state="translated">IntegrationTestCase::assertEventFired()</target>
        </trans-unit>
        <trans-unit id="d098f90db627bfe67e4652490e99d93f0d423251" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertEventFiredWith()</source>
          <target state="translated">IntegrationTestCase::assertEventFiredWith()</target>
        </trans-unit>
        <trans-unit id="7ed561a9fa60543873193cc5ee5c1ef1cc3f5ab7" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFalse()</source>
          <target state="translated">IntegrationTestCase::assertFalse()</target>
        </trans-unit>
        <trans-unit id="fed9f97719ee7398cfaa591da7f9e59cf6ee4cc8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileEquals()</source>
          <target state="translated">IntegrationTestCase::assertFileEquals()</target>
        </trans-unit>
        <trans-unit id="887f3c2bd2a5136cb437188a2a7960ce9fc25520" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileEqualsCanonicalizing()</source>
          <target state="translated">IntegrationTestCase::assertFileEqualsCanonicalizing()</target>
        </trans-unit>
        <trans-unit id="bb871b097ad6d4226c10316688292899cba6fd89" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileEqualsIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertFileEqualsIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="f8ae51e2ae302e2ca50314018c9e79bb66b990e9" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileExists()</source>
          <target state="translated">IntegrationTestCase::assertFileExists()</target>
        </trans-unit>
        <trans-unit id="02aca67cda9489f711a3589cf5a44a46ec38305b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileIsReadable()</source>
          <target state="translated">IntegrationTestCase::assertFileIsReadable()</target>
        </trans-unit>
        <trans-unit id="9727d01a79b3173c6e7b74920e30e78fb2320969" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileIsWritable()</source>
          <target state="translated">IntegrationTestCase::assertFileIsWritable()</target>
        </trans-unit>
        <trans-unit id="a6dd2ca142e327eace90fd7f1dda47ac394f9425" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileNotEquals()</source>
          <target state="translated">IntegrationTestCase::assertFileNotEquals()</target>
        </trans-unit>
        <trans-unit id="173c88c59e23f629af660abb0b726a74822d19e7" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileNotEqualsCanonicalizing()</source>
          <target state="translated">IntegrationTestCase::assertFileNotEqualsCanonicalizing()</target>
        </trans-unit>
        <trans-unit id="a943ac8f3198a57200cc01d6d73300df6fc3694f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileNotEqualsIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertFileNotEqualsIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="9ccbbc3dde4b240a48953e2e8fde9c1407d54754" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileNotExists()</source>
          <target state="translated">IntegrationTestCase::assertFileNotExists()</target>
        </trans-unit>
        <trans-unit id="228dcba5c269d08794e0763a6e9399f8ec453e1c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileNotIsReadable()</source>
          <target state="translated">IntegrationTestCase::assertFileNotIsReadable()</target>
        </trans-unit>
        <trans-unit id="32c5795e8fc95d85e7565c5a3bfe8c25645fbb7b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileNotIsWritable()</source>
          <target state="translated">IntegrationTestCase::assertFileNotIsWritable()</target>
        </trans-unit>
        <trans-unit id="79add9d9688b7d0d318bdd91f9a7161776d91609" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFileResponse()</source>
          <target state="translated">IntegrationTestCase::assertFileResponse()</target>
        </trans-unit>
        <trans-unit id="db3a505f5e41966516aa0df8a952b4ed453679cf" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFinite()</source>
          <target state="translated">IntegrationTestCase::assertFinite()</target>
        </trans-unit>
        <trans-unit id="09ce1bdbea2d852b0bf635c8cacff66b4e569d60" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFlashElement()</source>
          <target state="translated">IntegrationTestCase::assertFlashElement()</target>
        </trans-unit>
        <trans-unit id="454eb41b5f081d99cbf7cf1e8f00a9da16c5f173" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFlashElementAt()</source>
          <target state="translated">IntegrationTestCase::assertFlashElementAt()</target>
        </trans-unit>
        <trans-unit id="9b1b47abd14fffd3b958596ddcf96e2bfac8388a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFlashMessage()</source>
          <target state="translated">IntegrationTestCase::assertFlashMessage()</target>
        </trans-unit>
        <trans-unit id="342f70ab19667c56360ea6078ea49c06bc4fb72b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertFlashMessageAt()</source>
          <target state="translated">IntegrationTestCase::assertFlashMessageAt()</target>
        </trans-unit>
        <trans-unit id="630e5518b18acd3cd01adcc5e43e9e37040a5bce" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertGreaterThan()</source>
          <target state="translated">IntegrationTestCase::assertGreaterThan()</target>
        </trans-unit>
        <trans-unit id="753ee03cc6f965b9ad607e99526ccd35dc0f80c2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertGreaterThanOrEqual()</source>
          <target state="translated">IntegrationTestCase::assertGreaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="16210afad5a95ec4b6edac5c34c61fa3a871407e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertHeader()</source>
          <target state="translated">IntegrationTestCase::assertHeader()</target>
        </trans-unit>
        <trans-unit id="9baa562893e71adee3009786bf690cdec43c047a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertHeaderContains()</source>
          <target state="translated">IntegrationTestCase::assertHeaderContains()</target>
        </trans-unit>
        <trans-unit id="6a77c8cdb8a9e0b64545e30dd07045a997295b5e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertHeaderNotContains()</source>
          <target state="translated">IntegrationTestCase::assertHeaderNotContains()</target>
        </trans-unit>
        <trans-unit id="b15e0936f4d50d28c68c5a14858677b7d45462f8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertHtml()</source>
          <target state="translated">IntegrationTestCase::assertHtml()</target>
        </trans-unit>
        <trans-unit id="033f8a6bfaebf8ea92e1430a9a4e5bdb5d2cb9a5" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertInfinite()</source>
          <target state="translated">IntegrationTestCase::assertInfinite()</target>
        </trans-unit>
        <trans-unit id="cc87392e721a0fb82fc0702ac9118691b02c643d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertInstanceOf()</source>
          <target state="translated">IntegrationTestCase::assertInstanceOf()</target>
        </trans-unit>
        <trans-unit id="e84e2f200fb5835a7400b3a1ff775218fc304bd4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertInternalType()</source>
          <target state="translated">IntegrationTestCase::assertInternalType()</target>
        </trans-unit>
        <trans-unit id="038b40e09bfa53e1b40e35a68bf94478b4b7eaa8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsArray()</source>
          <target state="translated">IntegrationTestCase::assertIsArray()</target>
        </trans-unit>
        <trans-unit id="f37ef1ca1d1a355e3fc92363dbadeba84826d98e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsBool()</source>
          <target state="translated">IntegrationTestCase::assertIsBool()</target>
        </trans-unit>
        <trans-unit id="d562f113bcad57cf1bc6f2608b5cfa8515fcd677" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsCallable()</source>
          <target state="translated">IntegrationTestCase::assertIsCallable()</target>
        </trans-unit>
        <trans-unit id="cabf9938b55c87a41af34c8f992654f88b1b2049" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsFloat()</source>
          <target state="translated">IntegrationTestCase::assertIsFloat()</target>
        </trans-unit>
        <trans-unit id="17f27dd74bf5b0d26d4ccffccc4d51a41e9dcf5e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsInt()</source>
          <target state="translated">IntegrationTestCase::assertIsInt()</target>
        </trans-unit>
        <trans-unit id="d1e1364f7488f4fd392c08e0a77a19abe40be043" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsIterable()</source>
          <target state="translated">IntegrationTestCase::assertIsIterable()</target>
        </trans-unit>
        <trans-unit id="6be7e41772dc35a5cd528aedee63e725d6e4ac30" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotArray()</source>
          <target state="translated">IntegrationTestCase::assertIsNotArray()</target>
        </trans-unit>
        <trans-unit id="1aa8103b7aff970fdd2de38c63a6168c6f92d8b8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotBool()</source>
          <target state="translated">IntegrationTestCase::assertIsNotBool()</target>
        </trans-unit>
        <trans-unit id="e6b9e30ec0e36fe47059c4c27e8f21e79144cbfa" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotCallable()</source>
          <target state="translated">IntegrationTestCase::assertIsNotCallable()</target>
        </trans-unit>
        <trans-unit id="d16141a252a5d72a47a3ea4012470e21b2a559ed" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotFloat()</source>
          <target state="translated">IntegrationTestCase::assertIsNotFloat()</target>
        </trans-unit>
        <trans-unit id="6af901bb8e0dd8c673c47112472d0d349431dd1b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotInt()</source>
          <target state="translated">IntegrationTestCase::assertIsNotInt()</target>
        </trans-unit>
        <trans-unit id="8f19ddc5ccba7c2af6b269739ab84db94bc953fa" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotIterable()</source>
          <target state="translated">IntegrationTestCase::assertIsNotIterable()</target>
        </trans-unit>
        <trans-unit id="7178f04f409c7379aa21bbfc4f6ef88c230e6d56" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotNumeric()</source>
          <target state="translated">IntegrationTestCase::assertIsNotNumeric()</target>
        </trans-unit>
        <trans-unit id="1e6cf64fc29dba8059021c92dc4dbe411ce1a099" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotObject()</source>
          <target state="translated">IntegrationTestCase::assertIsNotObject()</target>
        </trans-unit>
        <trans-unit id="9f867667f507f7d95940a64d8b1da53bef78072d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotResource()</source>
          <target state="translated">IntegrationTestCase::assertIsNotResource()</target>
        </trans-unit>
        <trans-unit id="8d9395762ac84b25702cf5c03cdca44c7af71a19" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotScalar()</source>
          <target state="translated">IntegrationTestCase::assertIsNotScalar()</target>
        </trans-unit>
        <trans-unit id="bec7970c3c74046123d2ed12a2b89a693eee50ff" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNotString()</source>
          <target state="translated">IntegrationTestCase::assertIsNotString()</target>
        </trans-unit>
        <trans-unit id="d5f234e6bb10bea87090cbfe6b29f4c086dbec31" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsNumeric()</source>
          <target state="translated">IntegrationTestCase::assertIsNumeric()</target>
        </trans-unit>
        <trans-unit id="c91a971f7bca624ed15c90fe355e844b710821ff" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsObject()</source>
          <target state="translated">IntegrationTestCase::assertIsObject()</target>
        </trans-unit>
        <trans-unit id="b35707a05bc12b3d804d958f8f6f963938d4e722" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsReadable()</source>
          <target state="translated">IntegrationTestCase::assertIsReadable()</target>
        </trans-unit>
        <trans-unit id="ba039c3b69ceba163afb75ee20c4662a551d87c4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsResource()</source>
          <target state="translated">IntegrationTestCase::assertIsResource()</target>
        </trans-unit>
        <trans-unit id="82c94283b937b51df61d3f18302233ff6b893552" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsScalar()</source>
          <target state="translated">IntegrationTestCase::assertIsScalar()</target>
        </trans-unit>
        <trans-unit id="b6d255255a14a804386d576c4e05a7faf5af7ddf" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsString()</source>
          <target state="translated">IntegrationTestCase::assertIsString()</target>
        </trans-unit>
        <trans-unit id="30c341029e2340f125797779f8fcd01cb8ead69a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertIsWritable()</source>
          <target state="translated">IntegrationTestCase::assertIsWritable()</target>
        </trans-unit>
        <trans-unit id="bff3b556b2554af25ba455feccdf8a04890184d0" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertJson()</source>
          <target state="translated">IntegrationTestCase::assertJson()</target>
        </trans-unit>
        <trans-unit id="ee29c0acb816a8053fc2d23a3318c6a68ad3daaa" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertJsonFileEqualsJsonFile()</source>
          <target state="translated">IntegrationTestCase::assertJsonFileEqualsJsonFile()</target>
        </trans-unit>
        <trans-unit id="ce72dfa602d662803958b469b796e2d31eaf5ef6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertJsonFileNotEqualsJsonFile()</source>
          <target state="translated">IntegrationTestCase::assertJsonFileNotEqualsJsonFile()</target>
        </trans-unit>
        <trans-unit id="47889f2ced0d14513f4d6ffbf4be12f6252d337e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertJsonStringEqualsJsonFile()</source>
          <target state="translated">IntegrationTestCase::assertJsonStringEqualsJsonFile()</target>
        </trans-unit>
        <trans-unit id="9530bf94feb85d471bb642e1b182c28c085aec69" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertJsonStringEqualsJsonString()</source>
          <target state="translated">IntegrationTestCase::assertJsonStringEqualsJsonString()</target>
        </trans-unit>
        <trans-unit id="676a01a2fa8f7c8d36d1f90fd8fca105d1ca17b3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertJsonStringNotEqualsJsonFile()</source>
          <target state="translated">IntegrationTestCase::assertJsonStringNotEqualsJsonFile()</target>
        </trans-unit>
        <trans-unit id="f1799e3e30ddb09c0d8883795f1c7ac97f666313" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertJsonStringNotEqualsJsonString()</source>
          <target state="translated">IntegrationTestCase::assertJsonStringNotEqualsJsonString()</target>
        </trans-unit>
        <trans-unit id="955806f30fdb889ded322d57a4fe5f7b2184a291" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertLayout()</source>
          <target state="translated">IntegrationTestCase::assertLayout()</target>
        </trans-unit>
        <trans-unit id="8a08e26920bcc5c44a988efedb88f76e62a0207b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertLessThan()</source>
          <target state="translated">IntegrationTestCase::assertLessThan()</target>
        </trans-unit>
        <trans-unit id="7dc71dd1d5ed32acba213afa140adfbf4490ef2f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertLessThanOrEqual()</source>
          <target state="translated">IntegrationTestCase::assertLessThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="9a69ff2651923aa076ad158cd1da02b69ca99dfe" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNan()</source>
          <target state="translated">IntegrationTestCase::assertNan()</target>
        </trans-unit>
        <trans-unit id="ebd9223c97e6073cbc9e19db992a741332b9cffb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNoRedirect()</source>
          <target state="translated">IntegrationTestCase::assertNoRedirect()</target>
        </trans-unit>
        <trans-unit id="3056893344b4d69c36cd43213cb5eacc2d867087" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotContains()</source>
          <target state="translated">IntegrationTestCase::assertNotContains()</target>
        </trans-unit>
        <trans-unit id="7624d51d36a24a3936d69ca7181d87d8a3ea1f22" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotContainsEquals()</source>
          <target state="translated">IntegrationTestCase::assertNotContainsEquals()</target>
        </trans-unit>
        <trans-unit id="de315863cb90d159f29e6e19e90ec313edd79f44" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotContainsOnly()</source>
          <target state="translated">IntegrationTestCase::assertNotContainsOnly()</target>
        </trans-unit>
        <trans-unit id="b05add59039d4e20529c6696408064f836a7377e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotCount()</source>
          <target state="translated">IntegrationTestCase::assertNotCount()</target>
        </trans-unit>
        <trans-unit id="07bf5c7e9c50f9caceedd06587582c1289a4e4ca" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotEmpty()</source>
          <target state="translated">IntegrationTestCase::assertNotEmpty()</target>
        </trans-unit>
        <trans-unit id="f139f8b41f3ac53314edd0b0c0caaf7c28ad2c2b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotEquals()</source>
          <target state="translated">IntegrationTestCase::assertNotEquals()</target>
        </trans-unit>
        <trans-unit id="6940f167314561e948a7e186a0a6ebdc91ae949a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotEqualsCanonicalizing()</source>
          <target state="translated">IntegrationTestCase::assertNotEqualsCanonicalizing()</target>
        </trans-unit>
        <trans-unit id="fd16b9bde086c80d35b0f23b56914f460e5c9ce4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotEqualsIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertNotEqualsIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="474ff32eaa0f843227a3ad2e00b11069f80d244f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotEqualsWithDelta()</source>
          <target state="translated">IntegrationTestCase::assertNotEqualsWithDelta()</target>
        </trans-unit>
        <trans-unit id="1c9342ccf2da4e24be5984f50e02c2c879376792" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotFalse()</source>
          <target state="translated">IntegrationTestCase::assertNotFalse()</target>
        </trans-unit>
        <trans-unit id="7576c7dc4377f30471514314892161cab14be886" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotInstanceOf()</source>
          <target state="translated">IntegrationTestCase::assertNotInstanceOf()</target>
        </trans-unit>
        <trans-unit id="0fd162acd82d6275b8a346d6c28f2eb591fa15db" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotInternalType()</source>
          <target state="translated">IntegrationTestCase::assertNotInternalType()</target>
        </trans-unit>
        <trans-unit id="10673b4dff8713f441f72783f225c16eec4995f7" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotIsReadable()</source>
          <target state="translated">IntegrationTestCase::assertNotIsReadable()</target>
        </trans-unit>
        <trans-unit id="dcd2920af07da3c71c1fbecceb1fcf8223b7fee9" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotIsWritable()</source>
          <target state="translated">IntegrationTestCase::assertNotIsWritable()</target>
        </trans-unit>
        <trans-unit id="8142bf87c2bfd1cd3d5f45edc7d1c79ff3808837" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotNull()</source>
          <target state="translated">IntegrationTestCase::assertNotNull()</target>
        </trans-unit>
        <trans-unit id="cfcbae61f16f74b10e08e0c84c92a52b8d1de9cb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotRegExp()</source>
          <target state="translated">IntegrationTestCase::assertNotRegExp()</target>
        </trans-unit>
        <trans-unit id="2f6f7e141ad13cd07c66b937f0c5a001f43629c4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotSame()</source>
          <target state="translated">IntegrationTestCase::assertNotSame()</target>
        </trans-unit>
        <trans-unit id="75ec0f10189aaacd2f7bf0cc6b35b72156edefb8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotSameSize()</source>
          <target state="translated">IntegrationTestCase::assertNotSameSize()</target>
        </trans-unit>
        <trans-unit id="e44dd77837fe81ca68bac363defa9eec07fba052" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotTrue()</source>
          <target state="translated">IntegrationTestCase::assertNotTrue()</target>
        </trans-unit>
        <trans-unit id="b7ec5d072e3cf149144faa5388841cb857f5e815" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNotWithinRange()</source>
          <target state="translated">IntegrationTestCase::assertNotWithinRange()</target>
        </trans-unit>
        <trans-unit id="0a545187ce9a2b7bcaf637e0c1c23eeedf9dd71b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertNull()</source>
          <target state="translated">IntegrationTestCase::assertNull()</target>
        </trans-unit>
        <trans-unit id="6ee2496e19e6293cf99df8915a9f193e120f2c7e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertObjectHasAttribute()</source>
          <target state="translated">IntegrationTestCase::assertObjectHasAttribute()</target>
        </trans-unit>
        <trans-unit id="8bcdac65bbd5bc8996f7fc23d08567e637c54afd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertObjectNotHasAttribute()</source>
          <target state="translated">IntegrationTestCase::assertObjectNotHasAttribute()</target>
        </trans-unit>
        <trans-unit id="7b52e58c7adf772cd6fbbbcd2aad14f91562cae3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertPathEquals()</source>
          <target state="translated">IntegrationTestCase::assertPathEquals()</target>
        </trans-unit>
        <trans-unit id="1f2d51f60d3027f678e121acd8b21867bd2e8386" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertPostConditions()</source>
          <target state="translated">IntegrationTestCase::assertPostConditions()</target>
        </trans-unit>
        <trans-unit id="715d62de9fd2db78fdfb54cff0969afb4b7df267" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertPreConditions()</source>
          <target state="translated">IntegrationTestCase::assertPreConditions()</target>
        </trans-unit>
        <trans-unit id="c39781cae5a85cdff1cf4c17522f873a908acb18" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertRedirect()</source>
          <target state="translated">IntegrationTestCase::assertRedirect()</target>
        </trans-unit>
        <trans-unit id="126eaf4d8ee1d51b546e2133db4375b2f16aa30a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertRedirectContains()</source>
          <target state="translated">IntegrationTestCase::assertRedirectContains()</target>
        </trans-unit>
        <trans-unit id="1cbbd4305a9914243f32a10ac58ba6547b33005f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertRedirectEquals()</source>
          <target state="translated">IntegrationTestCase::assertRedirectEquals()</target>
        </trans-unit>
        <trans-unit id="78efc96c98b2e0b88eb28fa313d4ac14d641723d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertRedirectNotContains()</source>
          <target state="translated">IntegrationTestCase::assertRedirectNotContains()</target>
        </trans-unit>
        <trans-unit id="3f1e4daf2f322f76e03bbe5baa4b7ab8693e0392" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertRegExp()</source>
          <target state="translated">IntegrationTestCase::assertRegExp()</target>
        </trans-unit>
        <trans-unit id="f859888e5598d7fa497c86cfd6936f2d6974dd2a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertRegExpSql()</source>
          <target state="translated">IntegrationTestCase::assertRegExpSql()</target>
        </trans-unit>
        <trans-unit id="ea3097b554c83794575b9737c97541cc54bd2b45" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseCode()</source>
          <target state="translated">IntegrationTestCase::assertResponseCode()</target>
        </trans-unit>
        <trans-unit id="68161f46f0a7436eff211ef05b874e72d280a40d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseContains()</source>
          <target state="translated">IntegrationTestCase::assertResponseContains()</target>
        </trans-unit>
        <trans-unit id="5f3d718688ef61bfe69d12bc447b20578044fcf8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseEmpty()</source>
          <target state="translated">IntegrationTestCase::assertResponseEmpty()</target>
        </trans-unit>
        <trans-unit id="b0366c388cbc1845a9c5a391731c7b1217315d87" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseEquals()</source>
          <target state="translated">IntegrationTestCase::assertResponseEquals()</target>
        </trans-unit>
        <trans-unit id="64bd980e3488dd0b89d9acbaa8a6f5b31365f7a8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseError()</source>
          <target state="translated">IntegrationTestCase::assertResponseError()</target>
        </trans-unit>
        <trans-unit id="f50ba6d5a1652cf1ce00d01f6d0275bc8ce4171b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseFailure()</source>
          <target state="translated">IntegrationTestCase::assertResponseFailure()</target>
        </trans-unit>
        <trans-unit id="a204a3742b17599931c7175d2f1d6888cdff6fe1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseNotContains()</source>
          <target state="translated">IntegrationTestCase::assertResponseNotContains()</target>
        </trans-unit>
        <trans-unit id="0e930d8bc130ff983cc40e955bee5c8ef0d62467" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseNotEmpty()</source>
          <target state="translated">IntegrationTestCase::assertResponseNotEmpty()</target>
        </trans-unit>
        <trans-unit id="82c62f5f3d10910fa0b23ce84d42e8b16acb5e47" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseNotEquals()</source>
          <target state="translated">IntegrationTestCase::assertResponseNotEquals()</target>
        </trans-unit>
        <trans-unit id="e0c55dd5586b4dd72b8f6b160b5928573b131cd3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseNotRegExp()</source>
          <target state="translated">IntegrationTestCase::assertResponseNotRegExp()</target>
        </trans-unit>
        <trans-unit id="4e0024e6253571eeb35752614547970e187c78ce" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseOk()</source>
          <target state="translated">IntegrationTestCase::assertResponseOk()</target>
        </trans-unit>
        <trans-unit id="1824c8ba7f0c5cd0d5bbb452d543eda4e59198f6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseRegExp()</source>
          <target state="translated">IntegrationTestCase::assertResponseRegExp()</target>
        </trans-unit>
        <trans-unit id="b35a6023df148e024565e215723114068af6225b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertResponseSuccess()</source>
          <target state="translated">IntegrationTestCase::assertResponseSuccess()</target>
        </trans-unit>
        <trans-unit id="e3ed891f3cc2f0570d16b7837af0f0075947bf7e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertSame()</source>
          <target state="translated">IntegrationTestCase::assertSame()</target>
        </trans-unit>
        <trans-unit id="a9304c5e8cf9e51dfa84cfa2415ce3a2ae9b8acb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertSameSize()</source>
          <target state="translated">IntegrationTestCase::assertSameSize()</target>
        </trans-unit>
        <trans-unit id="5b3fea78d7f5e3e3a0aa6895a8bcd14ab78ecbcf" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertSession()</source>
          <target state="translated">IntegrationTestCase::assertSession()</target>
        </trans-unit>
        <trans-unit id="91efa7b284617edfe4851e0a6242a72418f678d5" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertSessionHasKey()</source>
          <target state="translated">IntegrationTestCase::assertSessionHasKey()</target>
        </trans-unit>
        <trans-unit id="969f706043bafd8fd2ec020fc31e1681a2c0af73" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertSessionNotHasKey()</source>
          <target state="translated">IntegrationTestCase::assertSessionNotHasKey()</target>
        </trans-unit>
        <trans-unit id="6ef55962eae648471dd6a339a66dfa70084accc6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringContainsString()</source>
          <target state="translated">IntegrationTestCase::assertStringContainsString()</target>
        </trans-unit>
        <trans-unit id="8d08c05da44666c80386bf81d617298d14c31fc2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringContainsStringIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertStringContainsStringIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="0e481ac282d9657f2b91efc215dd4b6d09ec03ed" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringEndsNotWith()</source>
          <target state="translated">IntegrationTestCase::assertStringEndsNotWith()</target>
        </trans-unit>
        <trans-unit id="208d7f481602a46009d4a03a8bf23ac12dd282fd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringEndsWith()</source>
          <target state="translated">IntegrationTestCase::assertStringEndsWith()</target>
        </trans-unit>
        <trans-unit id="5294e1a7aae85dda37c7cb965cd6a5cbf2c59a97" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringEqualsFile()</source>
          <target state="translated">IntegrationTestCase::assertStringEqualsFile()</target>
        </trans-unit>
        <trans-unit id="5043b78bd5f307a3b2db262ff89dc8fd342a1a0b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringEqualsFileCanonicalizing()</source>
          <target state="translated">IntegrationTestCase::assertStringEqualsFileCanonicalizing()</target>
        </trans-unit>
        <trans-unit id="2fc71e6d2b9bcff88832f094336c2e581dd041c0" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringEqualsFileIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertStringEqualsFileIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="05d50df558d84302746457494833bfc557d2cf4e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringMatchesFormat()</source>
          <target state="translated">IntegrationTestCase::assertStringMatchesFormat()</target>
        </trans-unit>
        <trans-unit id="ed6e7db9a86444734f73c96fc401fd590a996235" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringMatchesFormatFile()</source>
          <target state="translated">IntegrationTestCase::assertStringMatchesFormatFile()</target>
        </trans-unit>
        <trans-unit id="751007a5956e2d774994958333713acbbf98e2a4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringNotContainsString()</source>
          <target state="translated">IntegrationTestCase::assertStringNotContainsString()</target>
        </trans-unit>
        <trans-unit id="2d7e9363bb2e6c56494a38682089dc3ba131049e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringNotContainsStringIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertStringNotContainsStringIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="4532937057f5401e5abba9e6fde9da054dfbd6c6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringNotEqualsFile()</source>
          <target state="translated">IntegrationTestCase::assertStringNotEqualsFile()</target>
        </trans-unit>
        <trans-unit id="03894e16ba68551b2c9197bcb89797241435f997" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringNotEqualsFileCanonicalizing()</source>
          <target state="translated">IntegrationTestCase::assertStringNotEqualsFileCanonicalizing()</target>
        </trans-unit>
        <trans-unit id="813bc62a08c023192792b077ad6644ab6c14d4ad" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringNotEqualsFileIgnoringCase()</source>
          <target state="translated">IntegrationTestCase::assertStringNotEqualsFileIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="4092595758921848cf6c7da5f7e48c97702d7753" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringNotMatchesFormat()</source>
          <target state="translated">IntegrationTestCase::assertStringNotMatchesFormat()</target>
        </trans-unit>
        <trans-unit id="3679be07d8ea9f2b317a2d40f691125abd121395" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringNotMatchesFormatFile()</source>
          <target state="translated">IntegrationTestCase::assertStringNotMatchesFormatFile()</target>
        </trans-unit>
        <trans-unit id="460315404d23019e059f07e783de57433d55289e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringStartsNotWith()</source>
          <target state="translated">IntegrationTestCase::assertStringStartsNotWith()</target>
        </trans-unit>
        <trans-unit id="f0c70c871957561cfe061452036b90710753dc16" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertStringStartsWith()</source>
          <target state="translated">IntegrationTestCase::assertStringStartsWith()</target>
        </trans-unit>
        <trans-unit id="ad684ad9c94914a97a23f0e453de391c615e1bfa" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTemplate()</source>
          <target state="translated">IntegrationTestCase::assertTemplate()</target>
        </trans-unit>
        <trans-unit id="0e991ffe3b44cb54de68aa9f2dd73f1d49b278d8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextContains()</source>
          <target state="translated">IntegrationTestCase::assertTextContains()</target>
        </trans-unit>
        <trans-unit id="21212cd068a8acd79250cbb57d5c16217d3b4525" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextEndsNotWith()</source>
          <target state="translated">IntegrationTestCase::assertTextEndsNotWith()</target>
        </trans-unit>
        <trans-unit id="ca9d80c0d32d28c8a24a82d6b37ea5b33d71aef9" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextEndsWith()</source>
          <target state="translated">IntegrationTestCase::assertTextEndsWith()</target>
        </trans-unit>
        <trans-unit id="7af21e689d6f9dd6aca2d96b52ddb9aed893fc55" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextEquals()</source>
          <target state="translated">IntegrationTestCase::assertTextEquals()</target>
        </trans-unit>
        <trans-unit id="1880d8499a555bdb76e05c5f6e3cbc91a6b01998" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextNotContains()</source>
          <target state="translated">IntegrationTestCase::assertTextNotContains()</target>
        </trans-unit>
        <trans-unit id="98bfc10a29a7d2e947277909e79bd451d68dfcba" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextNotEquals()</source>
          <target state="translated">IntegrationTestCase::assertTextNotEquals()</target>
        </trans-unit>
        <trans-unit id="21c0bbfe78acb65d48c2d62c27061f3bd35001b8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextStartsNotWith()</source>
          <target state="translated">IntegrationTestCase::assertTextStartsNotWith()</target>
        </trans-unit>
        <trans-unit id="a06b83a730b32c20e457f26bbf871105c7ba73d6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTextStartsWith()</source>
          <target state="translated">IntegrationTestCase::assertTextStartsWith()</target>
        </trans-unit>
        <trans-unit id="013ae3ef385ef2437f43252a5a35d4c497bf959c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertThat()</source>
          <target state="translated">IntegrationTestCase::assertThat()</target>
        </trans-unit>
        <trans-unit id="b4acf93b2fb60c403229cc012a14bbc9ecc4f05b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertTrue()</source>
          <target state="translated">IntegrationTestCase::assertTrue()</target>
        </trans-unit>
        <trans-unit id="b61034a53a4f8a08474fd7e937ea043511a2f300" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertWithinRange()</source>
          <target state="translated">IntegrationTestCase::assertWithinRange()</target>
        </trans-unit>
        <trans-unit id="93f584075fe2f3bef9afcedab7b8add5ff98a0a8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertXmlFileEqualsXmlFile()</source>
          <target state="translated">IntegrationTestCase::assertXmlFileEqualsXmlFile()</target>
        </trans-unit>
        <trans-unit id="92c91528b80ad682d890c7c6c79d2af7e715ee71" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertXmlFileNotEqualsXmlFile()</source>
          <target state="translated">IntegrationTestCase::assertXmlFileNotEqualsXmlFile()</target>
        </trans-unit>
        <trans-unit id="4dd08f67404cea587d314b5d85d5e3ae7dfdc6ba" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertXmlStringEqualsXmlFile()</source>
          <target state="translated">IntegrationTestCase::assertXmlStringEqualsXmlFile()</target>
        </trans-unit>
        <trans-unit id="05aeea724de657f0b76f7949332dddf939ab2ff3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertXmlStringEqualsXmlString()</source>
          <target state="translated">IntegrationTestCase::assertXmlStringEqualsXmlString()</target>
        </trans-unit>
        <trans-unit id="cd837faa6bee09e6e76868d8e060adec3098d15a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertXmlStringNotEqualsXmlFile()</source>
          <target state="translated">IntegrationTestCase::assertXmlStringNotEqualsXmlFile()</target>
        </trans-unit>
        <trans-unit id="28c79b385f0f680bac6fab12a3ab6081685aaacb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::assertXmlStringNotEqualsXmlString()</source>
          <target state="translated">IntegrationTestCase::assertXmlStringNotEqualsXmlString()</target>
        </trans-unit>
        <trans-unit id="eddfa377da8074812873eb3853f1e8db737d589f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::at()</source>
          <target state="translated">IntegrationTestCase::at()</target>
        </trans-unit>
        <trans-unit id="0d23fc4ea151355d4840da36d0a14293378b9f39" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::atLeast()</source>
          <target state="translated">IntegrationTestCase::atLeast()</target>
        </trans-unit>
        <trans-unit id="61b154042cd67b2c32aa3f7b14c30a3f5eba3b2c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::atLeastOnce()</source>
          <target state="translated">IntegrationTestCase::atLeastOnce()</target>
        </trans-unit>
        <trans-unit id="230419c3ee9a41945dec73706e5bda9cce85003a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::atMost()</source>
          <target state="translated">IntegrationTestCase::atMost()</target>
        </trans-unit>
        <trans-unit id="67dbc74b86cd4eab1a3ba922dddeca2dc1f8e5c4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::attribute()</source>
          <target state="translated">IntegrationTestCase::attribute()</target>
        </trans-unit>
        <trans-unit id="8f54f04e70ca5e8a5e74c586297a729008df9830" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::attributeEqualTo()</source>
          <target state="translated">IntegrationTestCase::attributeEqualTo()</target>
        </trans-unit>
        <trans-unit id="a59d628cd2b3c6a1f840281fd2317f4afc0b8d3a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::callback()</source>
          <target state="translated">IntegrationTestCase::callback()</target>
        </trans-unit>
        <trans-unit id="24da3407b4e76154d474cf8e9ab0d2135106da76" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::classHasAttribute()</source>
          <target state="translated">IntegrationTestCase::classHasAttribute()</target>
        </trans-unit>
        <trans-unit id="24acd464d6f4aeb65686cf2582d800e0fc9c573c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::classHasStaticAttribute()</source>
          <target state="translated">IntegrationTestCase::classHasStaticAttribute()</target>
        </trans-unit>
        <trans-unit id="5e653a615432cad5eaf91c8530720990b128b8b0" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::cleanup()</source>
          <target state="translated">IntegrationTestCase::cleanup()</target>
        </trans-unit>
        <trans-unit id="4c06baeb1eb1636ec5cfc847f54435ae85405faf" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::clearPlugins()</source>
          <target state="translated">IntegrationTestCase::clearPlugins()</target>
        </trans-unit>
        <trans-unit id="fd3d32d22626e70e39d2e868db0ce6cb213d3524" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::configApplication()</source>
          <target state="translated">IntegrationTestCase::configApplication()</target>
        </trans-unit>
        <trans-unit id="264acad15ff6522918cd0213aab7496fc3747a92" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::configRequest()</source>
          <target state="translated">IntegrationTestCase::configRequest()</target>
        </trans-unit>
        <trans-unit id="adb6f03bb7821e72a5ea8e4a0267e569dd2ca69b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::contains()</source>
          <target state="translated">IntegrationTestCase::contains()</target>
        </trans-unit>
        <trans-unit id="d9af9f8c8ba8c0510e58579d922791eeb5c7ae8b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::containsEqual()</source>
          <target state="translated">IntegrationTestCase::containsEqual()</target>
        </trans-unit>
        <trans-unit id="254ba5f8a69c960b2b25c53988e3fbfd96f48dd2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::containsIdentical()</source>
          <target state="translated">IntegrationTestCase::containsIdentical()</target>
        </trans-unit>
        <trans-unit id="e64d726b594a745e2edd1b84a5c44fababee4e8b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::containsOnly()</source>
          <target state="translated">IntegrationTestCase::containsOnly()</target>
        </trans-unit>
        <trans-unit id="e0d6de9a371e5110f077dee8ba4d8c9be71adb11" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::containsOnlyInstancesOf()</source>
          <target state="translated">IntegrationTestCase::containsOnlyInstancesOf()</target>
        </trans-unit>
        <trans-unit id="90f202e6001ccab6a3a826099a456508c3dc6aec" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::controllerSpy()</source>
          <target state="translated">IntegrationTestCase::controllerSpy()</target>
        </trans-unit>
        <trans-unit id="6cd969b5fda01a0a6452ec09d41dc244a9d05560" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::cookie()</source>
          <target state="translated">IntegrationTestCase::cookie()</target>
        </trans-unit>
        <trans-unit id="a1f0a6f016bfd28d83de9e082220364d568fbd4f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::cookieEncrypted()</source>
          <target state="translated">IntegrationTestCase::cookieEncrypted()</target>
        </trans-unit>
        <trans-unit id="3b7905aff0e67800e240a4ce8f9c66e3b6f88489" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::count()</source>
          <target state="translated">IntegrationTestCase::count()</target>
        </trans-unit>
        <trans-unit id="e5e30adbd40e9a47fe8b8d32ed5f762b85600743" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::countOf()</source>
          <target state="translated">IntegrationTestCase::countOf()</target>
        </trans-unit>
        <trans-unit id="7cd72ee510e1b644326d59ca6945c1f05311d33d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::createConfiguredMock()</source>
          <target state="translated">IntegrationTestCase::createConfiguredMock()</target>
        </trans-unit>
        <trans-unit id="b31f0f8b0e023a825d1e21c60d8c8edbe331e95c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::createMock()</source>
          <target state="translated">IntegrationTestCase::createMock()</target>
        </trans-unit>
        <trans-unit id="9c0cc2a2f3045d7e5d4b72a6ec554d3ed7a3defb" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::createPartialMock()</source>
          <target state="translated">IntegrationTestCase::createPartialMock()</target>
        </trans-unit>
        <trans-unit id="ed4ddb006d2c7e8e2ce7c3dc903c23bd653351e3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::createResult()</source>
          <target state="translated">IntegrationTestCase::createResult()</target>
        </trans-unit>
        <trans-unit id="297d5d0f573c8eead2c1bcf90dc7b4e71561b463" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::createStub()</source>
          <target state="translated">IntegrationTestCase::createStub()</target>
        </trans-unit>
        <trans-unit id="b699533ffdbf274a6fe460c5fa9024a996e5e602" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::createTestProxy()</source>
          <target state="translated">IntegrationTestCase::createTestProxy()</target>
        </trans-unit>
        <trans-unit id="63f8704c3b296adfd5a1f8c1207efe57049380ad" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::dataDescription()</source>
          <target state="translated">IntegrationTestCase::dataDescription()</target>
        </trans-unit>
        <trans-unit id="5a965f4fe077e1ae2c53cae9ea44157eef9f22d2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::dataName()</source>
          <target state="translated">IntegrationTestCase::dataName()</target>
        </trans-unit>
        <trans-unit id="efd7f9d514476628b86c39e8bf46e3eafeb091d1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::delete()</source>
          <target state="translated">IntegrationTestCase::delete()</target>
        </trans-unit>
        <trans-unit id="e05577d7b7c3d90edb9499d301608a1d015428ce" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::deprecated()</source>
          <target state="translated">IntegrationTestCase::deprecated()</target>
        </trans-unit>
        <trans-unit id="6199b928184438ade84588c8597257a140bbfac3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::directoryExists()</source>
          <target state="translated">IntegrationTestCase::directoryExists()</target>
        </trans-unit>
        <trans-unit id="d661520372f56744ebd9ce013521316e2b583097" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::disableErrorHandlerMiddleware()</source>
          <target state="translated">IntegrationTestCase::disableErrorHandlerMiddleware()</target>
        </trans-unit>
        <trans-unit id="17f079e7f1f3f7894c00d96cdc9ea369d14a21a4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::doesNotPerformAssertions()</source>
          <target state="translated">IntegrationTestCase::doesNotPerformAssertions()</target>
        </trans-unit>
        <trans-unit id="08d67862d66d1e2e780cafa957fce71b70b8de40" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::doubledTypes()</source>
          <target state="translated">IntegrationTestCase::doubledTypes()</target>
        </trans-unit>
        <trans-unit id="d5492f6261be23bafa8d21900860952aca172845" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::enableCsrfToken()</source>
          <target state="translated">IntegrationTestCase::enableCsrfToken()</target>
        </trans-unit>
        <trans-unit id="7c332c739a7cd67c9892207f6fabe764dcf7a5f2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::enableRetainFlashMessages()</source>
          <target state="translated">IntegrationTestCase::enableRetainFlashMessages()</target>
        </trans-unit>
        <trans-unit id="c76bbb165b71f93598ca10872f0761f74b41c758" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::enableSecurityToken()</source>
          <target state="translated">IntegrationTestCase::enableSecurityToken()</target>
        </trans-unit>
        <trans-unit id="1289fd8e98ce8a5dfe5aacaa3a75b569fb05f4a2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::equalTo()</source>
          <target state="translated">IntegrationTestCase::equalTo()</target>
        </trans-unit>
        <trans-unit id="1465dd3fee5f139f5f655ba86c1ae9c05f34daa4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::exactly()</source>
          <target state="translated">IntegrationTestCase::exactly()</target>
        </trans-unit>
        <trans-unit id="67e7e090f9f21b6e3474570beea29938e44aa88d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectDeprecation()</source>
          <target state="translated">IntegrationTestCase::expectDeprecation()</target>
        </trans-unit>
        <trans-unit id="0cc9ce5c2b7153291a6e06c7d93b9d15072212cf" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectDeprecationMessage()</source>
          <target state="translated">IntegrationTestCase::expectDeprecationMessage()</target>
        </trans-unit>
        <trans-unit id="c58ee71200265ac393c05973536154263f82bcfa" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectDeprecationMessageMatches()</source>
          <target state="translated">IntegrationTestCase::expectDeprecationMessageMatches()</target>
        </trans-unit>
        <trans-unit id="0b84c1055d34bf082df4ada9d0719bad368255dc" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectError()</source>
          <target state="translated">IntegrationTestCase::expectError()</target>
        </trans-unit>
        <trans-unit id="815f924d95491b4b90abaebed530e7fdbf3bdd9f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectErrorMessage()</source>
          <target state="translated">IntegrationTestCase::expectErrorMessage()</target>
        </trans-unit>
        <trans-unit id="63d28af1bfe3e1f725459d9a823c6091c7cf5336" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectErrorMessageMatches()</source>
          <target state="translated">IntegrationTestCase::expectErrorMessageMatches()</target>
        </trans-unit>
        <trans-unit id="d20a3f3de19e705298a20a11e7565bab21987ee5" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectException()</source>
          <target state="translated">IntegrationTestCase::expectException()</target>
        </trans-unit>
        <trans-unit id="3c6ec1d708fc13a94b0cd58a3bea65dcce3fc6e6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectExceptionCode()</source>
          <target state="translated">IntegrationTestCase::expectExceptionCode()</target>
        </trans-unit>
        <trans-unit id="2d4936b2c2744af6bc3a3164a0be1022e24df23b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectExceptionMessage()</source>
          <target state="translated">IntegrationTestCase::expectExceptionMessage()</target>
        </trans-unit>
        <trans-unit id="d9d61040b4a764ab7d1f1112398d512873a2c59d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectExceptionMessageMatches()</source>
          <target state="translated">IntegrationTestCase::expectExceptionMessageMatches()</target>
        </trans-unit>
        <trans-unit id="1dfef70a5f201949ea9ddb04c6b0ac206db678cd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectExceptionMessageRegExp()</source>
          <target state="translated">IntegrationTestCase::expectExceptionMessageRegExp()</target>
        </trans-unit>
        <trans-unit id="9ab8a604dab30d5537144c3c2a467f643f54a3d3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectExceptionObject()</source>
          <target state="translated">IntegrationTestCase::expectExceptionObject()</target>
        </trans-unit>
        <trans-unit id="5b8a3e94a6d8ad1a88bab9de9d859c0f88f28798" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectNotToPerformAssertions()</source>
          <target state="translated">IntegrationTestCase::expectNotToPerformAssertions()</target>
        </trans-unit>
        <trans-unit id="c7eae5ae447a3b1b7f694feefd72155c6acd418c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectNotice()</source>
          <target state="translated">IntegrationTestCase::expectNotice()</target>
        </trans-unit>
        <trans-unit id="0f43bd5e34682c5885bf089cad4eb92407e49cbd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectNoticeMessage()</source>
          <target state="translated">IntegrationTestCase::expectNoticeMessage()</target>
        </trans-unit>
        <trans-unit id="491a3b52e1970c1c29cf4c141fa9323b1ae9f77e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectNoticeMessageMatches()</source>
          <target state="translated">IntegrationTestCase::expectNoticeMessageMatches()</target>
        </trans-unit>
        <trans-unit id="f8329e5573d080e4173340d77109b212b8050e56" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectOutputRegex()</source>
          <target state="translated">IntegrationTestCase::expectOutputRegex()</target>
        </trans-unit>
        <trans-unit id="ca467f1ac5ee097d9ea3ff4c931e69b032eb9e13" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectOutputString()</source>
          <target state="translated">IntegrationTestCase::expectOutputString()</target>
        </trans-unit>
        <trans-unit id="52bbb3a2f149c668399d548af44c01da10057f43" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectWarning()</source>
          <target state="translated">IntegrationTestCase::expectWarning()</target>
        </trans-unit>
        <trans-unit id="36ec010893fae9c3a23d5dbdaceca5422ea4c998" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectWarningMessage()</source>
          <target state="translated">IntegrationTestCase::expectWarningMessage()</target>
        </trans-unit>
        <trans-unit id="8367a6d5fb5e6dd343b7e101e8066fbbdc23b1c9" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::expectWarningMessageMatches()</source>
          <target state="translated">IntegrationTestCase::expectWarningMessageMatches()</target>
        </trans-unit>
        <trans-unit id="534fd5423d124c8d7e088948418b0e2c584a5056" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::extractExceptionMessage()</source>
          <target state="translated">IntegrationTestCase::extractExceptionMessage()</target>
        </trans-unit>
        <trans-unit id="0f061b5a93f17dc9b2de59fffc7d4b82da36f755" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::extractVerboseMessage()</source>
          <target state="translated">IntegrationTestCase::extractVerboseMessage()</target>
        </trans-unit>
        <trans-unit id="c2ed6aebdae2e95c22550cecb01586695482382c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::fail()</source>
          <target state="translated">IntegrationTestCase::fail()</target>
        </trans-unit>
        <trans-unit id="5802ef10285fc33e680f556600d8ca0a18b22bec" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::fileExists()</source>
          <target state="translated">IntegrationTestCase::fileExists()</target>
        </trans-unit>
        <trans-unit id="4c17512bf9ee680f7ef2918640148110b1b2e7a2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::get()</source>
          <target state="translated">IntegrationTestCase::get()</target>
        </trans-unit>
        <trans-unit id="9b789778ededfe3e934cf575c9affbd710468179" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getActualOutput()</source>
          <target state="translated">IntegrationTestCase::getActualOutput()</target>
        </trans-unit>
        <trans-unit id="fd43b68ea5ed07e1994332be0db58e7c5a64c8aa" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getActualOutputForAssertion()</source>
          <target state="translated">IntegrationTestCase::getActualOutputForAssertion()</target>
        </trans-unit>
        <trans-unit id="722522d8452f6c88f4424b2a1f1a78f82d70893b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getAnnotations()</source>
          <target state="translated">IntegrationTestCase::getAnnotations()</target>
        </trans-unit>
        <trans-unit id="7662d564fe3861ddabe9a8eae1612ce02c6dff39" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getCount()</source>
          <target state="translated">IntegrationTestCase::getCount()</target>
        </trans-unit>
        <trans-unit id="533d987accce7a62f6ac72c7f9fff1c7880c470e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getDataSetAsString()</source>
          <target state="translated">IntegrationTestCase::getDataSetAsString()</target>
        </trans-unit>
        <trans-unit id="ec7b145e983d480959a18277c790e90af7a45651" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getDependencies()</source>
          <target state="translated">IntegrationTestCase::getDependencies()</target>
        </trans-unit>
        <trans-unit id="89345d4a13894a7e4829b89a2580964022ed3b98" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getDependencyInput()</source>
          <target state="translated">IntegrationTestCase::getDependencyInput()</target>
        </trans-unit>
        <trans-unit id="3a6518ebc1fdd8569e193d1fcb448cce57a464a2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getExpectedException()</source>
          <target state="translated">IntegrationTestCase::getExpectedException()</target>
        </trans-unit>
        <trans-unit id="d9f2567ed81e0f9e1b54a0055c054fb52d3ad042" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getExpectedExceptionCode()</source>
          <target state="translated">IntegrationTestCase::getExpectedExceptionCode()</target>
        </trans-unit>
        <trans-unit id="fe3bc3980f377ac7c0a9e67ad3b067ffa1b578c1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getExpectedExceptionMessage()</source>
          <target state="translated">IntegrationTestCase::getExpectedExceptionMessage()</target>
        </trans-unit>
        <trans-unit id="45f55dc35ac30b43d60af9a5636088bfc1befd93" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getExpectedExceptionMessageRegExp()</source>
          <target state="translated">IntegrationTestCase::getExpectedExceptionMessageRegExp()</target>
        </trans-unit>
        <trans-unit id="e311ce232c2a8199cc911408e29c7c7cbb69bf8d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getFixtures()</source>
          <target state="translated">IntegrationTestCase::getFixtures()</target>
        </trans-unit>
        <trans-unit id="417a728385af26618d7a1f5b2cc29033ea3abab1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getGroups()</source>
          <target state="translated">IntegrationTestCase::getGroups()</target>
        </trans-unit>
        <trans-unit id="b0498865ff906b98452424ffa82e49bdcf5eb645" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getMockBuilder()</source>
          <target state="translated">IntegrationTestCase::getMockBuilder()</target>
        </trans-unit>
        <trans-unit id="e0b1c6ff4bd202ccb805bdf88f3b34cd38343793" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getMockClass()</source>
          <target state="translated">IntegrationTestCase::getMockClass()</target>
        </trans-unit>
        <trans-unit id="9e710242c9d167c0444609f649e08a36e5170a99" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getMockForAbstractClass()</source>
          <target state="translated">IntegrationTestCase::getMockForAbstractClass()</target>
        </trans-unit>
        <trans-unit id="55b57f1de37d3fedaadc827b94813c329b9b9f98" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getMockForModel()</source>
          <target state="translated">IntegrationTestCase::getMockForModel()</target>
        </trans-unit>
        <trans-unit id="c13ffc5ecdff0aea19c8b59f68dfc7351622938d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getMockForTrait()</source>
          <target state="translated">IntegrationTestCase::getMockForTrait()</target>
        </trans-unit>
        <trans-unit id="5ce7659702979ba01dac07281f2febf15165554f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getMockFromWsdl()</source>
          <target state="translated">IntegrationTestCase::getMockFromWsdl()</target>
        </trans-unit>
        <trans-unit id="ca1115f1b32de19f9b60c7a40ae78db378a3c970" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getName()</source>
          <target state="translated">IntegrationTestCase::getName()</target>
        </trans-unit>
        <trans-unit id="f0db26fb5b5e348a5856fe1ea2fa838d007bdcd2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getNumAssertions()</source>
          <target state="translated">IntegrationTestCase::getNumAssertions()</target>
        </trans-unit>
        <trans-unit id="387e91025fb309766d06d2d283cf59c79b4344c4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getObjectAttribute()</source>
          <target state="translated">IntegrationTestCase::getObjectAttribute()</target>
        </trans-unit>
        <trans-unit id="7410fd1d685a3eb844f45a0223e45ee68d45ac78" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getObjectForTrait()</source>
          <target state="translated">IntegrationTestCase::getObjectForTrait()</target>
        </trans-unit>
        <trans-unit id="4738eb733905fea27dafd893860ac5bbed54eae6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getProvidedData()</source>
          <target state="translated">IntegrationTestCase::getProvidedData()</target>
        </trans-unit>
        <trans-unit id="5e2ee9268f836ac86a598ea3c292ab47beed97f6" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getResult()</source>
          <target state="translated">IntegrationTestCase::getResult()</target>
        </trans-unit>
        <trans-unit id="102ca72d254de0e41030336c4a4c3c35c181eabf" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getSession()</source>
          <target state="translated">IntegrationTestCase::getSession()</target>
        </trans-unit>
        <trans-unit id="2efbc8ea0ab77e25f1001ae26475b6682c5bd7f7" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getSize()</source>
          <target state="translated">IntegrationTestCase::getSize()</target>
        </trans-unit>
        <trans-unit id="8ca54515a79326c660a810ec68325f8ff130f72d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getStaticAttribute()</source>
          <target state="translated">IntegrationTestCase::getStaticAttribute()</target>
        </trans-unit>
        <trans-unit id="67a8d27f43902ffe3b173448bb76f953ef4c4061" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getStatus()</source>
          <target state="translated">IntegrationTestCase::getStatus()</target>
        </trans-unit>
        <trans-unit id="d48acb5e62ba6b9333df15e4100b7646b49e581a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getStatusMessage()</source>
          <target state="translated">IntegrationTestCase::getStatusMessage()</target>
        </trans-unit>
        <trans-unit id="8f54e6f1d6250ad23fdd0b816e819a886a1c5ea3" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getTableLocator()</source>
          <target state="translated">IntegrationTestCase::getTableLocator()</target>
        </trans-unit>
        <trans-unit id="39981ac61b8ec47f3c42a4d4c300b83e310652d7" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::getTestResultObject()</source>
          <target state="translated">IntegrationTestCase::getTestResultObject()</target>
        </trans-unit>
        <trans-unit id="37d2a87546a967570aa0814fd37f20bef24397de" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::greaterThan()</source>
          <target state="translated">IntegrationTestCase::greaterThan()</target>
        </trans-unit>
        <trans-unit id="5913eb6d382d587cfd3e15acf7ffe9d89fb0587c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::greaterThanOrEqual()</source>
          <target state="translated">IntegrationTestCase::greaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="eacc3b2d1064a4af0d2acf1e6c2f6168b974216c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::hasDependencies()</source>
          <target state="translated">IntegrationTestCase::hasDependencies()</target>
        </trans-unit>
        <trans-unit id="8feb1df6d64a626128978ba06dc3c8b607924122" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::hasExpectationOnOutput()</source>
          <target state="translated">IntegrationTestCase::hasExpectationOnOutput()</target>
        </trans-unit>
        <trans-unit id="eb0c4a47a4b3ba48a8e6400dba8dce5c1772b22a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::hasFailed()</source>
          <target state="translated">IntegrationTestCase::hasFailed()</target>
        </trans-unit>
        <trans-unit id="b0ad737d3b7d486fe738841b63c6aad92e8677be" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::hasOutput()</source>
          <target state="translated">IntegrationTestCase::hasOutput()</target>
        </trans-unit>
        <trans-unit id="33830fbf3c203a53a2eb96dfdb992eec5ffc3c59" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::hasSize()</source>
          <target state="translated">IntegrationTestCase::hasSize()</target>
        </trans-unit>
        <trans-unit id="888884669a2c7a87cc10c60ec42c70334a4c1955" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::head()</source>
          <target state="translated">IntegrationTestCase::head()</target>
        </trans-unit>
        <trans-unit id="2b02fb846d2d611ab217fd60bfc3c9b8f1b4c9bc" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::identicalTo()</source>
          <target state="translated">IntegrationTestCase::identicalTo()</target>
        </trans-unit>
        <trans-unit id="63ed1ebd16141649a3134df8bc19a56bcd3e9498" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::iniSet()</source>
          <target state="translated">IntegrationTestCase::iniSet()</target>
        </trans-unit>
        <trans-unit id="0c52b652e5e85c13fb30ed80e42b95baa941fa33" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isEmpty()</source>
          <target state="translated">IntegrationTestCase::isEmpty()</target>
        </trans-unit>
        <trans-unit id="f1ccf4326fc6719e28781d397c17857a4909bec1" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isFalse()</source>
          <target state="translated">IntegrationTestCase::isFalse()</target>
        </trans-unit>
        <trans-unit id="b498e7b0070cdd760af4d2ee4aa8bb48c731e786" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isFinite()</source>
          <target state="translated">IntegrationTestCase::isFinite()</target>
        </trans-unit>
        <trans-unit id="ba17b21515d470425f993338cc6d2f05c068cf6a" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isInIsolation()</source>
          <target state="translated">IntegrationTestCase::isInIsolation()</target>
        </trans-unit>
        <trans-unit id="130cd5079eea59f05361922e972a6e59264172c4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isInfinite()</source>
          <target state="translated">IntegrationTestCase::isInfinite()</target>
        </trans-unit>
        <trans-unit id="17c1f9203bd52a663a5fdb1e865f187ac647692e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isInstanceOf()</source>
          <target state="translated">IntegrationTestCase::isInstanceOf()</target>
        </trans-unit>
        <trans-unit id="8a9af5bbde60634e1d9754c9e86a699c5ed32f57" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isJson()</source>
          <target state="translated">IntegrationTestCase::isJson()</target>
        </trans-unit>
        <trans-unit id="5e73e3c2e944eb0183a9f240dc5641118e5e41e2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isLarge()</source>
          <target state="translated">IntegrationTestCase::isLarge()</target>
        </trans-unit>
        <trans-unit id="9f8db7033b465baab9f40ece27e8870d5269bb13" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isMedium()</source>
          <target state="translated">IntegrationTestCase::isMedium()</target>
        </trans-unit>
        <trans-unit id="f6edc24f1aea8dada2ede8b5dfcaf0e4e34de507" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isNan()</source>
          <target state="translated">IntegrationTestCase::isNan()</target>
        </trans-unit>
        <trans-unit id="d922c6a0517fda628127d9334db9ddb6c88d4b5f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isNull()</source>
          <target state="translated">IntegrationTestCase::isNull()</target>
        </trans-unit>
        <trans-unit id="8c92a0bcb3aa3d41fe7cea363e159e43d16c5f2d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isReadable()</source>
          <target state="translated">IntegrationTestCase::isReadable()</target>
        </trans-unit>
        <trans-unit id="cedd98b6299f80b97c47981b55571ed736f9add9" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isSmall()</source>
          <target state="translated">IntegrationTestCase::isSmall()</target>
        </trans-unit>
        <trans-unit id="8b3ee94c96609f00ef3cd169e6a17d7471cd2f18" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isTrue()</source>
          <target state="translated">IntegrationTestCase::isTrue()</target>
        </trans-unit>
        <trans-unit id="c274c54a7175c11b6b9c4ea07382ce1c11f6edf4" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isType()</source>
          <target state="translated">IntegrationTestCase::isType()</target>
        </trans-unit>
        <trans-unit id="dc6c48f0f7ad548b1a565984f6032add85c68673" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::isWritable()</source>
          <target state="translated">IntegrationTestCase::isWritable()</target>
        </trans-unit>
        <trans-unit id="a6a20954c7891552e344502809ffce073c4dad2b" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::lessThan()</source>
          <target state="translated">IntegrationTestCase::lessThan()</target>
        </trans-unit>
        <trans-unit id="15b222bb78a61990668013271331503a3fa4d79e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::lessThanOrEqual()</source>
          <target state="translated">IntegrationTestCase::lessThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="7fd6d7a0546f238c9f52764360c663b6adbcde9f" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::loadFixtures()</source>
          <target state="translated">IntegrationTestCase::loadFixtures()</target>
        </trans-unit>
        <trans-unit id="338d2ca9e4b04357166ce9bde1a357fe25a30893" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::loadPlugins()</source>
          <target state="translated">IntegrationTestCase::loadPlugins()</target>
        </trans-unit>
        <trans-unit id="b4100c4d49bde4dfb9727ca303d7438906df2502" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::loadRoutes()</source>
          <target state="translated">IntegrationTestCase::loadRoutes()</target>
        </trans-unit>
        <trans-unit id="1f157f6c46540a9ae4c53d68d248158a786d0317" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::logicalAnd()</source>
          <target state="translated">IntegrationTestCase::logicalAnd()</target>
        </trans-unit>
        <trans-unit id="9fbb8d8c6da1ec43cfe2cd46a1d063ea4bd05f78" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::logicalNot()</source>
          <target state="translated">IntegrationTestCase::logicalNot()</target>
        </trans-unit>
        <trans-unit id="17611e74efdf516f487124f032d4bcb263be287d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::logicalOr()</source>
          <target state="translated">IntegrationTestCase::logicalOr()</target>
        </trans-unit>
        <trans-unit id="bbfb5e3d3595bbb7310ce89b8d7daac8f2285487" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::logicalXor()</source>
          <target state="translated">IntegrationTestCase::logicalXor()</target>
        </trans-unit>
        <trans-unit id="b5bba38c415ac64eb68da2a055d3adaa5914f773" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::markAsRisky()</source>
          <target state="translated">IntegrationTestCase::markAsRisky()</target>
        </trans-unit>
        <trans-unit id="93849c87b5f18d0cf35b7cf2b612284be648fd15" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::markTestIncomplete()</source>
          <target state="translated">IntegrationTestCase::markTestIncomplete()</target>
        </trans-unit>
        <trans-unit id="f6d20ee4dc8e12473269763ee43e523028866ab8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::markTestSkipped()</source>
          <target state="translated">IntegrationTestCase::markTestSkipped()</target>
        </trans-unit>
        <trans-unit id="f934d9a967472189f20cd9d172e6cd770ca8e538" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::matches()</source>
          <target state="translated">IntegrationTestCase::matches()</target>
        </trans-unit>
        <trans-unit id="17b068f06a3b9c2caea20dec0a8b959bbcfab563" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::matchesRegularExpression()</source>
          <target state="translated">IntegrationTestCase::matchesRegularExpression()</target>
        </trans-unit>
        <trans-unit id="a042d017b94eb2400f2e8f11d653cd57648dc970" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::never()</source>
          <target state="translated">IntegrationTestCase::never()</target>
        </trans-unit>
        <trans-unit id="80bde770b4f207ee4947be6b1482f54f7c17fbb8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::objectHasAttribute()</source>
          <target state="translated">IntegrationTestCase::objectHasAttribute()</target>
        </trans-unit>
        <trans-unit id="8909deaa09053f64adc81d2e87848ce28616d2d8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::onConsecutiveCalls()</source>
          <target state="translated">IntegrationTestCase::onConsecutiveCalls()</target>
        </trans-unit>
        <trans-unit id="dc43013d75bb3bd0e3557bd171953fc4ad289ec2" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::onNotSuccessfulTest()</source>
          <target state="translated">IntegrationTestCase::onNotSuccessfulTest()</target>
        </trans-unit>
        <trans-unit id="f0990e4ecf33f4b47a650c596df3d4130c29a68d" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::once()</source>
          <target state="translated">IntegrationTestCase::once()</target>
        </trans-unit>
        <trans-unit id="32ec7563fa29478a172419a5d2020805f964e0f8" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::options()</source>
          <target state="translated">IntegrationTestCase::options()</target>
        </trans-unit>
        <trans-unit id="f3fbbe59a52221cc7059c89f301fef0e1a45b859" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::patch()</source>
          <target state="translated">IntegrationTestCase::patch()</target>
        </trans-unit>
        <trans-unit id="2659d5c9c1ae84bee0f5a4bad7c44f6ddfe5a091" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::post()</source>
          <target state="translated">IntegrationTestCase::post()</target>
        </trans-unit>
        <trans-unit id="b40283e4bd8041ee361472cedfa63a49ff2a6a3c" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::prophesize()</source>
          <target state="translated">IntegrationTestCase::prophesize()</target>
        </trans-unit>
        <trans-unit id="fbadf70538897acbefa3a1b22e30c06e7da7d673" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::put()</source>
          <target state="translated">IntegrationTestCase::put()</target>
        </trans-unit>
        <trans-unit id="2255bd6a07bb637196c62622c5ea3cf058ca2739" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase::readAttribute()</source>
          <target state="translated">IntegrationTestCase::readAttribute()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
