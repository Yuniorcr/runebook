<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="bd6b5238d141d86cad844f53cebc450b0f0b7592" translate="yes" xml:space="preserve">
          <source>Here is a simple example of usage:</source>
          <target state="translated">다음은 간단한 사용법 예입니다.</target>
        </trans-unit>
        <trans-unit id="b75dca8d22ea7d52c664b979676fd3fe2d5a0916" translate="yes" xml:space="preserve">
          <source>Here is a simple if statement:</source>
          <target state="translated">간단한 if 문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="104babe5db47f4b9628fa0e6b8a333a64476c6bb" translate="yes" xml:space="preserve">
          <source>Here is an ascii art for describing above:</source>
          <target state="translated">위에서 설명한 아스키 아트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="93275635020fad910e654204e73a651c54434f3b" translate="yes" xml:space="preserve">
          <source>Here is an example of instance variable usage:</source>
          <target state="translated">인스턴스 변수 사용법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0d358585d1289ece41107a1c1b597fa46a1cdb53" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;case&lt;/code&gt; to compare a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; against a pattern:</source>
          <target state="translated">다음은 &lt;code&gt;case&lt;/code&gt; 를 사용하여 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 과 패턴 을 비교 하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="00d05e6e84dd6d294b8926a3531a823880d00984" translate="yes" xml:space="preserve">
          <source>Here is an example one-liner that adds numbers from standard input or any files in the argument list:</source>
          <target state="translated">다음은 표준 입력 또는 인수 목록의 모든 파일에서 숫자를 추가하는 한 줄짜리 예제입니다.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00646b80721f9f09a5a8ce3ed0622f522d11c2a9" translate="yes" xml:space="preserve">
          <source>Here is such an example, with parameter passing and a sizing block:</source>
          <target state="translated">다음은 매개 변수 전달 및 크기 조정 블록이있는 예입니다.</target>
        </trans-unit>
        <trans-unit id="c8f97c33efbe214c05621447827b7e3feeea0255" translate="yes" xml:space="preserve">
          <source>Here is the &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; request class hierarchy.</source>
          <target state="translated">다음은 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt; 요청 클래스 계층 구조입니다.</target>
        </trans-unit>
        <trans-unit id="c9d356bb771e16930ac07152c9013b608edc4905" translate="yes" xml:space="preserve">
          <source>Here is the order of method lookup for the receiver's class or module &lt;code&gt;R&lt;/code&gt;:</source>
          <target state="translated">다음은 수신자 클래스 또는 모듈 &lt;code&gt;R&lt;/code&gt; 에 대한 메소드 검색 순서입니다 .</target>
        </trans-unit>
        <trans-unit id="86d3f7cdb2b4e04172510f8296196637280b3780" translate="yes" xml:space="preserve">
          <source>Here the string &lt;code&gt;&quot;12345&quot;&lt;/code&gt; is compared with &lt;code&gt;/^1/&lt;/code&gt; by calling &lt;code&gt;/^1/ === &quot;12345&quot;&lt;/code&gt; which returns &lt;code&gt;true&lt;/code&gt;. Like the &lt;code&gt;if&lt;/code&gt; expression, the first &lt;code&gt;when&lt;/code&gt; that matches is executed and all other matches are ignored.</source>
          <target state="translated">여기서 문자열 &lt;code&gt;&quot;12345&quot;&lt;/code&gt; 는 &lt;code&gt;/^1/ === &quot;12345&quot;&lt;/code&gt; 를 호출 하여 &lt;code&gt;/^1/&lt;/code&gt; 과 비교되며 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 등의 &lt;code&gt;if&lt;/code&gt; 표현, 첫 번째 &lt;code&gt;when&lt;/code&gt; 그 경기가 실행되고 모든 다른 경기는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4a8eeba26ac94681453cad3da3a671df19b91614" translate="yes" xml:space="preserve">
          <source>Here we will use &lt;a href=&quot;fiddle/function&quot;&gt;&lt;code&gt;Fiddle::Function&lt;/code&gt;&lt;/a&gt; to wrap &lt;a href=&quot;http://linux.die.net/man/3/floor&quot;&gt;floor(3) from libm&lt;/a&gt;</source>
          <target state="translated">여기에서는 &lt;a href=&quot;fiddle/function&quot;&gt; &lt;code&gt;Fiddle::Function&lt;/code&gt; &lt;/a&gt; 을 사용 &lt;a href=&quot;http://linux.die.net/man/3/floor&quot;&gt;하여 libm에서 floor (3)&lt;/a&gt; 를 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="f4baba5f5b4bb7d74dff9b95d9676de1214e8bd9" translate="yes" xml:space="preserve">
          <source>Here's a sample of use from &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; which is really a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object with a few special rules about storage location and when the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; should be deleted. That makes for an almost textbook perfect example of how to use delegation.</source>
          <target state="translated">다음 은 저장 위치와 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 삭제 시기에 대한 몇 가지 특별한 규칙 이있는 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체 인 &lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt; 의 사용 샘플입니다 . 그것은 거의 교과서에 위임을 사용하는 방법에 대한 완벽한 예를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0e45b0b2dbb26524fbcce6ad60e5f99e3172ccc0" translate="yes" xml:space="preserve">
          <source>Here's a simple example that takes advantage of the fact that SimpleDelegator's delegation object can be changed at any time.</source>
          <target state="translated">다음은 SimpleDelegator의 위임 객체를 언제든지 변경할 수 있다는 사실을 활용하는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="0e1e431b0a49d4e7e180ab493771b9900c9d569b" translate="yes" xml:space="preserve">
          <source>Here's an example of changing the delegation object.</source>
          <target state="translated">다음은 위임 개체를 변경하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="ef356080b44311764080ea1d26d46983215ce28b" translate="yes" xml:space="preserve">
          <source>Here's another example with a slightly different result:</source>
          <target state="translated">결과가 약간 다른 또 다른 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="813aaad975819f54f9f961eebd3cf02dd1e3ba00" translate="yes" xml:space="preserve">
          <source>Here, both sides of the flip-flop are evaluated so the flip-flop turns on and off only when &lt;code&gt;value&lt;/code&gt; equals 2. Since the flip-flop turned on in the iteration it returns true.</source>
          <target state="translated">여기서 플립 플롭의 양쪽이 평가되므로 &lt;code&gt;value&lt;/code&gt; 이 2 일 때만 플립 플롭이 켜지고 꺼집니다. 반복에서 플립 플롭이 켜지면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3965fad45b2666bb3b0e275f46617da881a38422" translate="yes" xml:space="preserve">
          <source>Here, the flip-flop turns on when &lt;code&gt;value&lt;/code&gt; equals 2, but doesn't turn off on the same iteration. The off condition isn't evaluated until the following iteration and &lt;code&gt;value&lt;/code&gt; will never be two again.</source>
          <target state="translated">여기에서는 &lt;code&gt;value&lt;/code&gt; 이 2 일 때 플립 플롭이 켜지지 만 동일한 반복에서는 꺼지지 않습니다. off 조건은 다음 반복 및 &lt;code&gt;value&lt;/code&gt; 이 다시 2가 될 때까지 평가되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="723d8a07a94545db88fe207e4e041084c3c36aa2" translate="yes" xml:space="preserve">
          <source>Here, the string concatenation is done every time, even if the log level is not set to show the debug message.</source>
          <target state="translated">여기서 로그 수준이 디버그 메시지를 표시하도록 설정되어 있지 않더라도 문자열 연결은 매번 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="0523ddbfc2bf6401a623abf65be691050b581059" translate="yes" xml:space="preserve">
          <source>HexChar</source>
          <target state="translated">HexChar</target>
        </trans-unit>
        <trans-unit id="f9b4c248f9fa42fc9652f54351a5eb44d6e5ca66" translate="yes" xml:space="preserve">
          <source>HexPair</source>
          <target state="translated">HexPair</target>
        </trans-unit>
        <trans-unit id="915076b0b52521d0e1d4cabe1cb6451f7bf04f2a" translate="yes" xml:space="preserve">
          <source>HexString</source>
          <target state="translated">HexString</target>
        </trans-unit>
        <trans-unit id="ef13d547c45c13274403ed7f526897463503b03a" translate="yes" xml:space="preserve">
          <source>HiddenTask</source>
          <target state="translated">HiddenTask</target>
        </trans-unit>
        <trans-unit id="5911e461226af297f630cfaa879aa0359ebe6c4d" translate="yes" xml:space="preserve">
          <source>High-level API</source>
          <target state="translated">고급 API</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="22700782eb852d67ec242dd96846de16154c7478" translate="yes" xml:space="preserve">
          <source>Hold fragment in so_temp</source>
          <target state="translated">so_temp에 프래그먼트 유지</target>
        </trans-unit>
        <trans-unit id="08d81da4417bc8bba135a7d4eb5a33fd9fee5d14" translate="yes" xml:space="preserve">
          <source>Hold source paths for one Bundler::Thor instance. &lt;a href=&quot;classmethods#method-i-source_paths_for_search&quot;&gt;&lt;code&gt;source_paths_for_search&lt;/code&gt;&lt;/a&gt; is the method responsible to gather &lt;a href=&quot;classmethods#method-i-source_paths&quot;&gt;&lt;code&gt;source_paths&lt;/code&gt;&lt;/a&gt; from this current class, inherited paths and the source root.</source>
          <target state="translated">하나의 Bundler :: Thor 인스턴스에 대한 소스 경로를 보유하십시오. &lt;a href=&quot;classmethods#method-i-source_paths_for_search&quot;&gt; &lt;code&gt;source_paths_for_search&lt;/code&gt; &lt;/a&gt; 는 이 현재 클래스, 상속 된 경로 및 소스 루트에서 &lt;a href=&quot;classmethods#method-i-source_paths&quot;&gt; &lt;code&gt;source_paths&lt;/code&gt; &lt;/a&gt; 를 수집하는 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="6e6bf0baf513e91e7cc54bb624ca6ef485c47f95" translate="yes" xml:space="preserve">
          <source>Holds &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; values. You cannot add a singleton method to an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; object, any attempt to do so will raise a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 값을 보유 합니다. &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 객체에 싱글 톤 메소드를 추가 할 수 없으며 그렇게하면 &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="5040ece934ac0317ca1aea2296cc96159b00f113" translate="yes" xml:space="preserve">
          <source>Holds source paths in instance so they can be manipulated.</source>
          <target state="translated">조작 할 수 있도록 소스 경로를 인스턴스에 보유합니다.</target>
        </trans-unit>
        <trans-unit id="85cf3e072d7f48127379bfcf1a30bea8630528d6" translate="yes" xml:space="preserve">
          <source>Holds the original stderr</source>
          <target state="translated">원래 stderr를 보유</target>
        </trans-unit>
        <trans-unit id="a52f23790685bee1d36d96cdef5014b5b28e1270" translate="yes" xml:space="preserve">
          <source>Holds the original stdin</source>
          <target state="translated">원래 stdin을 보유</target>
        </trans-unit>
        <trans-unit id="11a507684e19201e0b258ecb8dc34f3f83dd6bd5" translate="yes" xml:space="preserve">
          <source>Holds the original stdout</source>
          <target state="translated">원래 stdout을 보유</target>
        </trans-unit>
        <trans-unit id="c94d313dea83eec091b7129d42034866ef18ca57" translate="yes" xml:space="preserve">
          <source>Holds the shell for the given Bundler::Thor instance. If no shell is given, it gets a default shell from &lt;a href=&quot;base#method-c-shell&quot;&gt;&lt;code&gt;Bundler::Thor::Base.shell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 Bundler :: Thor 인스턴스의 쉘을 보유합니다. 쉘이 제공되지 않으면 &lt;a href=&quot;base#method-c-shell&quot;&gt; &lt;code&gt;Bundler::Thor::Base.shell&lt;/code&gt; &lt;/a&gt; 에서 기본 쉘을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="52904bbee9ce3262b4b36f0f6c88078c75a7a358" translate="yes" xml:space="preserve">
          <source>Hook method to return whether the &lt;em&gt;obj&lt;/em&gt; can respond to &lt;em&gt;id&lt;/em&gt; method or not.</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt; 가 &lt;em&gt;id&lt;/em&gt; 메소드에 응답 할 수 있는지 여부를 리턴하는 후크 메소드 .</target>
        </trans-unit>
        <trans-unit id="bbd2d3cd6fcf89b7003c8d07c4f9d7d2559ad199" translate="yes" xml:space="preserve">
          <source>Hop limit</source>
          <target state="translated">홉 제한</target>
        </trans-unit>
        <trans-unit id="3531fcd9f0a87f4f90707357e6d2a2574f3c0ed5" translate="yes" xml:space="preserve">
          <source>Hop-by-hop option</source>
          <target state="translated">홉별 옵션</target>
        </trans-unit>
        <trans-unit id="3960ec4ca5fb5e5d8cdb2cc1c5121c003e426517" translate="yes" xml:space="preserve">
          <source>Host</source>
          <target state="translated">Host</target>
        </trans-unit>
        <trans-unit id="e6835e0cf84e12314859f883e8199ee43fa7cabc" translate="yes" xml:space="preserve">
          <source>Host Information resource.</source>
          <target state="translated">호스트 정보 자원.</target>
        </trans-unit>
        <trans-unit id="0c35b19a72b9d7a3afc3fd375ab9a94027214e26" translate="yes" xml:space="preserve">
          <source>Host-internal protocols</source>
          <target state="translated">호스트 내부 프로토콜</target>
        </trans-unit>
        <trans-unit id="065de00845e3a3555b40b8b2a0c61f57292a5c55" translate="yes" xml:space="preserve">
          <source>Hostname nor servname, or not known</source>
          <target state="translated">호스트 이름 또는 servname 또는 알 수없는</target>
        </trans-unit>
        <trans-unit id="6cd29a8378d5b189d9379b6970727f56257a3f8d" translate="yes" xml:space="preserve">
          <source>Hostname not known or other socket error.</source>
          <target state="translated">호스트 이름을 알 수 없거나 다른 소켓 오류입니다.</target>
        </trans-unit>
        <trans-unit id="0ae5318f8aebf149d843a65ab28b8d18652b9c5c" translate="yes" xml:space="preserve">
          <source>Hosts#each_address</source>
          <target state="translated">Hosts#each_address</target>
        </trans-unit>
        <trans-unit id="ad4701b85002c4f6b820b4c7aa890c2ffa0e9ac5" translate="yes" xml:space="preserve">
          <source>Hosts#each_name</source>
          <target state="translated">Hosts#each_name</target>
        </trans-unit>
        <trans-unit id="67e7882733f6079b564eea9636270420733663e1" translate="yes" xml:space="preserve">
          <source>Hosts#getaddress</source>
          <target state="translated">Hosts#getaddress</target>
        </trans-unit>
        <trans-unit id="26e3bbd415008b377976c39196af9ef135b4f653" translate="yes" xml:space="preserve">
          <source>Hosts#getaddresses</source>
          <target state="translated">Hosts#getaddresses</target>
        </trans-unit>
        <trans-unit id="31a91c4daba269065f514c557a0e65f3bf1dc5fc" translate="yes" xml:space="preserve">
          <source>Hosts#getname</source>
          <target state="translated">Hosts#getname</target>
        </trans-unit>
        <trans-unit id="eea1bbf293bfac526ac7c9ae2c849c706b91c9cf" translate="yes" xml:space="preserve">
          <source>Hosts#getnames</source>
          <target state="translated">Hosts#getnames</target>
        </trans-unit>
        <trans-unit id="125bdd456e9fc6a8667a0d74aeeb36a0bc62c4ff" translate="yes" xml:space="preserve">
          <source>Hosts::new</source>
          <target state="translated">Hosts::new</target>
        </trans-unit>
        <trans-unit id="46a616a39a737495465d1a5baba794711d9d43fa" translate="yes" xml:space="preserve">
          <source>Hour of the day, 12-hour clock (01..12)</source>
          <target state="translated">하루 중 시간, 12 시간제 (01..12)</target>
        </trans-unit>
        <trans-unit id="0c00f6bbd8162e721aeeff73cba290d66c2b86d7" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock (00..23)</source>
          <target state="translated">하루 중 시간, 24 시간제 (00..23)</target>
        </trans-unit>
        <trans-unit id="47af75179644a3e33873857cd7cdb173df3ebc6b" translate="yes" xml:space="preserve">
          <source>How connections should be verified</source>
          <target state="translated">연결을 확인하는 방법</target>
        </trans-unit>
        <trans-unit id="96356a69ccba10e0b322ba6a9d32f122ac0ca540" translate="yes" xml:space="preserve">
          <source>How does the new system work?</source>
          <target state="translated">새로운 시스템은 어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="e7582ae9909695420a2c5caf64fd3d566b7cfca7" translate="yes" xml:space="preserve">
          <source>How many seconds was that since the Unix Epoch?</source>
          <target state="translated">유닉스 시대 이후로 몇 초입니까?</target>
        </trans-unit>
        <trans-unit id="4311d3fce6b7f4d8c5d8af2eb8650b79bed7412c" translate="yes" xml:space="preserve">
          <source>How often progress should be conveyed to the user via {#indicate_progress}, in seconds. A third of a second, by default.</source>
          <target state="translated">몇 초 안에 {#indicate_progress}를 통해 사용자에게 진행 상황을 전달해야하는 빈도입니다. 기본적으로 1/3의 1/3입니다.</target>
        </trans-unit>
        <trans-unit id="30ef8fc19884821debbd15025398d149afec5a50" translate="yes" xml:space="preserve">
          <source>How often, in seconds, a secondary name server is to check for updates from the primary name server.</source>
          <target state="translated">보조 이름 서버는 기본 이름 서버에서 업데이트를 확인하는 빈도 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="93ce2757851be7063cc098ad63226b4109015eb3" translate="yes" xml:space="preserve">
          <source>How often, in seconds, a secondary name server is to retry after a failure to check for a refresh.</source>
          <target state="translated">새로 고침을 확인하지 못한 후 보조 이름 서버가 몇 초 안에 다시 시도해야 하는가.</target>
        </trans-unit>
        <trans-unit id="4775585e35ec3d16ef15046f874279e9ebd10cc8" translate="yes" xml:space="preserve">
          <source>How to close a logger</source>
          <target state="translated">로거를 닫는 방법</target>
        </trans-unit>
        <trans-unit id="6a9bf45d4e76590bd7245709759111b86b071c99" translate="yes" xml:space="preserve">
          <source>How to create a logger</source>
          <target state="translated">로거를 만드는 방법</target>
        </trans-unit>
        <trans-unit id="394601380df36abdc296135b5a1342de017918bb" translate="yes" xml:space="preserve">
          <source>How to log a message</source>
          <target state="translated">메시지를 기록하는 방법</target>
        </trans-unit>
        <trans-unit id="f0d0f30ce9eefe0de62ff9718f92589579f9cceb" translate="yes" xml:space="preserve">
          <source>How to use &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="06244ab95b130d1e7f4f49cec81472b07433d587" translate="yes" xml:space="preserve">
          <source>However local variables should be used carefully if the result enumerator is enumerated twice or more. The local variables should be initialized for each enumeration. &lt;a href=&quot;enumerator#method-c-new&quot;&gt;&lt;code&gt;Enumerator.new&lt;/code&gt;&lt;/a&gt; can be used to do it.</source>
          <target state="translated">그러나 결과 열거자가 두 번 이상 열거되면 로컬 변수를주의해서 사용해야합니다. 각 열거에 대해 로컬 변수를 초기화해야합니다. &lt;a href=&quot;enumerator#method-c-new&quot;&gt; &lt;code&gt;Enumerator.new&lt;/code&gt; &lt;/a&gt; 를 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="c5d3a1ad4686a5c357860d90ae19ff7744be0c00" translate="yes" xml:space="preserve">
          <source>However, &lt;a href=&quot;array#method-i-join&quot;&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-flatten&quot;&gt;&lt;code&gt;Array#flatten&lt;/code&gt;&lt;/a&gt; is faster than &lt;a href=&quot;array#method-i-sum&quot;&gt;&lt;code&gt;Array#sum&lt;/code&gt;&lt;/a&gt; for array of strings and array of arrays.</source>
          <target state="translated">그러나 &lt;a href=&quot;array#method-i-join&quot;&gt; &lt;code&gt;Array#join&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;array#method-i-flatten&quot;&gt; &lt;code&gt;Array#flatten&lt;/code&gt; &lt;/a&gt; 은 문자열 배열 및 배열 배열의 &lt;a href=&quot;array#method-i-sum&quot;&gt; &lt;code&gt;Array#sum&lt;/code&gt; &lt;/a&gt; 보다 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="0085e37beb60c98b106ff4006ccdee78968e2bc0" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;$SAFE&lt;/code&gt; does not provide a secure environment for executing untrusted code.</source>
          <target state="translated">그러나 &lt;code&gt;$SAFE&lt;/code&gt; 는 신뢰할 수없는 코드를 실행하기위한 안전한 환경을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d54599c0a300555214f879d3b1fa2863a91de995" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;mode&lt;/code&gt; must be read mode because &lt;a href=&quot;openread#method-i-open&quot;&gt;&lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt;&lt;/a&gt; doesn't support write mode (yet). Also &lt;code&gt;perm&lt;/code&gt; is ignored because it is meaningful only for file creation.</source>
          <target state="translated">그러나 &lt;a href=&quot;openread#method-i-open&quot;&gt; &lt;code&gt;OpenURI::OpenRead#open&lt;/code&gt; &lt;/a&gt; 은 쓰기 모드 (아직)를 지원하지 않으므로 &lt;code&gt;mode&lt;/code&gt; 는 읽기 모드 여야합니다 . 또한 &lt;code&gt;perm&lt;/code&gt; 은 파일 작성에만 의미가 있으므로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="72996f7996bba8e4ca9b26d3e81c1ce5d5b135a5" translate="yes" xml:space="preserve">
          <source>However, consider the case where comparing the keys is a non-trivial operation. The following code sorts some files on modification time using the basic &lt;code&gt;sort&lt;/code&gt; method.</source>
          <target state="translated">그러나 키를 비교하는 것이 사소한 작업이 아닌 경우를 고려하십시오. 다음 코드는 기본 &lt;code&gt;sort&lt;/code&gt; 방법을 사용하여 수정 시간에 일부 파일을 정렬 합니다.</target>
        </trans-unit>
        <trans-unit id="bbd40c99c579b6103a7fcafa312c981ccbdc4b3c" translate="yes" xml:space="preserve">
          <source>However, if a method &lt;code&gt;foo&lt;/code&gt; is defined on &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; in a refinement, &lt;code&gt;1.foo&lt;/code&gt; invokes that method since &lt;code&gt;foo&lt;/code&gt; does not exist on &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">방법의 경우, &lt;code&gt;foo&lt;/code&gt; 는이 에 정의 된 &lt;a href=&quot;../numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 정제에, &lt;code&gt;1.foo&lt;/code&gt; 의 를 발동 이후 방법 있음을 &lt;code&gt;foo&lt;/code&gt; 에 존재하지 않는 &lt;a href=&quot;../integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b99dcb51a6c156912077f097e1c6e2b4a8612a7a" translate="yes" xml:space="preserve">
          <source>However, if an object cannot be marshalled, a dRuby reference to it is passed or returned instead. This will turn up at the remote end as a &lt;a href=&quot;drb/drbobject&quot;&gt;&lt;code&gt;DRbObject&lt;/code&gt;&lt;/a&gt; instance. All methods invoked upon this remote proxy are forwarded to the local object, as described in the discussion of DRbObjects. This has semantics similar to the normal Ruby pass-by-reference.</source>
          <target state="translated">그러나 객체를 마샬링 할 수없는 경우 해당 객체에 대한 dRuby 참조가 전달되거나 대신 반환됩니다. 이것은 원격 끝에서 &lt;a href=&quot;drb/drbobject&quot;&gt; &lt;code&gt;DRbObject&lt;/code&gt; &lt;/a&gt; 인스턴스로 나타납니다. 이 원격 프록시에서 호출 된 모든 메소드는 DRbObject에 대한 설명에 설명 된대로 로컬 오브젝트로 전달됩니다. 이것은 일반적인 루비 통과 기준과 유사한 의미를 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="61cca5d299065e6e44dae53137b57fdacf646541" translate="yes" xml:space="preserve">
          <source>However, if you use &lt;code&gt;::&lt;/code&gt; to define &lt;code&gt;A::B&lt;/code&gt; without nesting it inside &lt;code&gt;A&lt;/code&gt;, a &lt;a href=&quot;../nameerror&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt; exception will be raised because the nesting does not include &lt;code&gt;A&lt;/code&gt;:</source>
          <target state="translated">당신이 사용하는 경우, &lt;code&gt;::&lt;/code&gt; 정의 할 &lt;code&gt;A::B&lt;/code&gt; 내부를 중첩하지 않고 하는 &lt;a href=&quot;../nameerror&quot;&gt; &lt;code&gt;NameError&lt;/code&gt; &lt;/a&gt; 포함되지 중첩는 않기 때문에 예외가 발생합니다 &lt;code&gt;A&lt;/code&gt; : &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e17b3e5c5876f314ed54abf2fb5d8e37320fbd87" translate="yes" xml:space="preserve">
          <source>However, it's important to note that an exception that occurs in any thread except the main thread depends on &lt;a href=&quot;thread#method-i-abort_on_exception&quot;&gt;&lt;code&gt;abort_on_exception&lt;/code&gt;&lt;/a&gt;. This option is &lt;code&gt;false&lt;/code&gt; by default, meaning that any unhandled exception will cause the thread to terminate silently when waited on by either &lt;a href=&quot;thread#method-i-join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;thread#method-i-value&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt;. You can change this default by either &lt;a href=&quot;thread#method-i-abort_on_exception-3D&quot;&gt;&lt;code&gt;abort_on_exception=&lt;/code&gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; or setting $DEBUG to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">그러나 기본 스레드를 제외한 모든 스레드에서 발생하는 예외는 &lt;a href=&quot;thread#method-i-abort_on_exception&quot;&gt; &lt;code&gt;abort_on_exception&lt;/code&gt; 에&lt;/a&gt; 따라 달라집니다 . 이 옵션은 기본적으로 &lt;code&gt;false&lt;/code&gt; 이며, 처리되지 않은 예외로 인해 &lt;a href=&quot;thread#method-i-join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;thread#method-i-value&quot;&gt; &lt;code&gt;value&lt;/code&gt; &lt;/a&gt; 가 대기 할 때 스레드가 자동으로 종료됩니다 . &lt;a href=&quot;thread#method-i-abort_on_exception-3D&quot;&gt; &lt;code&gt;abort_on_exception=&lt;/code&gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 또는 $ DEBUG를 &lt;code&gt;true&lt;/code&gt; 로 설정 하여이 기본값을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2c5d396683ec5daa56f3af78dab957725fc3c79" translate="yes" xml:space="preserve">
          <source>However, parenthesis are necessary to avoid ambiguity. This will raise a &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; because ruby does not know which method argument3 should be sent to:</source>
          <target state="translated">그러나 모호성을 피하려면 괄호가 필요합니다. 이것은 올릴 &lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; 루비로 전송되어야하는 방법 argument3 모르기 때문에 :</target>
        </trans-unit>
        <trans-unit id="56df398346c34e951be249df32f71e58d44558f6" translate="yes" xml:space="preserve">
          <source>However, several more complicated situations exist.</source>
          <target state="translated">그러나 몇 가지 더 복잡한 상황이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="16862c544bfa4d11f924381eb7562908eb373177" translate="yes" xml:space="preserve">
          <source>However, the following pattern takes appreciably longer:</source>
          <target state="translated">그러나 다음 패턴은 상당히 오래 걸립니다.</target>
        </trans-unit>
        <trans-unit id="5f5b41a5c7d355208c5173d336453108f8877b9e" translate="yes" xml:space="preserve">
          <source>However, this is simply a special case of a greater syntactical power in Ruby, the ability to add methods to any object. Classes are objects, so adding class methods is simply adding methods to the &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">그러나 이것은 루비의 구문 능력이 큰 특별한 경우로, 객체에 메소드를 추가하는 기능입니다. 클래스는 객체이므로 클래스 메서드를 추가하는 것은 단순히 &lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 개체에 메서드를 추가하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="07ad992c31e68b77c1927dd7162810a5d2c738bc" translate="yes" xml:space="preserve">
          <source>However, this only occurs if the method does not declare any keyword arguments.</source>
          <target state="translated">그러나 이는 메소드가 키워드 인수를 선언하지 않은 경우에만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d94d26a0240430368ffb07cb884158cc94a96806" translate="yes" xml:space="preserve">
          <source>However, unlink-before-close may not be supported on non-POSIX operating systems. Microsoft Windows is the most notable case: unlinking a non-closed file will result in an error, which this method will silently ignore. If you want to practice unlink-before-close whenever possible, then you should write code like this:</source>
          <target state="translated">그러나 POSIX 이외 운영 체제에서는 닫기 전 연결 해제가 지원되지 않을 수 있습니다. 닫히지 않은 파일을 연결 해제하면 오류가 발생하여이 방법을 자동으로 무시합니다. 가능할 때마다 닫기 전에 연결 해제를 연습하려면 다음과 같은 코드를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="9671697e46685498f6e54ef7da220567d226b21e" translate="yes" xml:space="preserve">
          <source>However, when an expression includes an inexact component (numerical value or operation), it will produce an inexact result.</source>
          <target state="translated">그러나 식에 부정확 한 성분 (숫자 값 또는 연산)이 포함 된 경우 부정확 한 결과가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4ccc06d59efea2c735c9d3801d86f7eef54d16e1" translate="yes" xml:space="preserve">
          <source>However, while &lt;a href=&quot;dbm&quot;&gt;&lt;code&gt;DBM&lt;/code&gt;&lt;/a&gt; only allows strings for both keys and values, this library allows one to use most Ruby objects for values by first converting them to YAML. Keys must be strings.</source>
          <target state="translated">그러나 &lt;a href=&quot;dbm&quot;&gt; &lt;code&gt;DBM&lt;/code&gt; &lt;/a&gt; 은 키와 값 모두에 대해 문자열 만 허용 하지만 이 라이브러리에서는 먼저 대부분의 Ruby 객체를 YAML로 변환하여 값에 사용할 수 있습니다. 키는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="40b16a0b28ca089a7b82d32b089cf71233237f3c" translate="yes" xml:space="preserve">
          <source>HtmlExtension</source>
          <target state="translated">HtmlExtension</target>
        </trans-unit>
        <trans-unit id="65a699149407f4557bdbe8419a292d6dfe755f9e" translate="yes" xml:space="preserve">
          <source>HtmlExtension#a</source>
          <target state="translated">HtmlExtension#a</target>
        </trans-unit>
        <trans-unit id="e64ca0ab35393444e1fc8121a3cdd5e2f9fd2c02" translate="yes" xml:space="preserve">
          <source>HtmlExtension#base</source>
          <target state="translated">HtmlExtension#base</target>
        </trans-unit>
        <trans-unit id="d20182c8fa4dcbcabc74f1cd6458b8c213a1c307" translate="yes" xml:space="preserve">
          <source>HtmlExtension#blockquote</source>
          <target state="translated">HtmlExtension#blockquote</target>
        </trans-unit>
        <trans-unit id="ad3cf5a593ea630a6470ec517121e3d2f67c745a" translate="yes" xml:space="preserve">
          <source>HtmlExtension#caption</source>
          <target state="translated">HtmlExtension#caption</target>
        </trans-unit>
        <trans-unit id="425ec084e666c6842952830d8bac1c9075c8dd4c" translate="yes" xml:space="preserve">
          <source>HtmlExtension#checkbox</source>
          <target state="translated">HtmlExtension#checkbox</target>
        </trans-unit>
        <trans-unit id="9340e74021edd2fcab0c4199f9ae88b63379dbff" translate="yes" xml:space="preserve">
          <source>HtmlExtension#checkbox_group</source>
          <target state="translated">HtmlExtension#checkbox_group</target>
        </trans-unit>
        <trans-unit id="27e7945aba736e59322b18fe9d8c16cdfbb4c148" translate="yes" xml:space="preserve">
          <source>HtmlExtension#file_field</source>
          <target state="translated">HtmlExtension#file_field</target>
        </trans-unit>
        <trans-unit id="cb0208531f1dccfd9f5c61dc4b1856e3ee8d04e7" translate="yes" xml:space="preserve">
          <source>HtmlExtension#form</source>
          <target state="translated">HtmlExtension#form</target>
        </trans-unit>
        <trans-unit id="47267002396d14cb4eae5021dd8b1cf186f32c14" translate="yes" xml:space="preserve">
          <source>HtmlExtension#hidden</source>
          <target state="translated">HtmlExtension#hidden</target>
        </trans-unit>
        <trans-unit id="2e346018f785d6e89734b20aa6107657ac47efc7" translate="yes" xml:space="preserve">
          <source>HtmlExtension#html</source>
          <target state="translated">HtmlExtension#html</target>
        </trans-unit>
        <trans-unit id="adb1e4ffd00ec3b84ea3fa9e580df34245b861ed" translate="yes" xml:space="preserve">
          <source>HtmlExtension#image_button</source>
          <target state="translated">HtmlExtension#image_button</target>
        </trans-unit>
        <trans-unit id="15d5760b7e49c558b046a3981c18e9c0d6ebee29" translate="yes" xml:space="preserve">
          <source>HtmlExtension#img</source>
          <target state="translated">HtmlExtension#img</target>
        </trans-unit>
        <trans-unit id="a9e6235a64b1168c5301bde12bb5034698799854" translate="yes" xml:space="preserve">
          <source>HtmlExtension#multipart_form</source>
          <target state="translated">HtmlExtension#multipart_form</target>
        </trans-unit>
        <trans-unit id="3a5a73597395e0e8487e6c987b8db2f43e03386b" translate="yes" xml:space="preserve">
          <source>HtmlExtension#password_field</source>
          <target state="translated">HtmlExtension#password_field</target>
        </trans-unit>
        <trans-unit id="7cd2e8d537e17cfc04dae194f25d2882922002f4" translate="yes" xml:space="preserve">
          <source>HtmlExtension#popup_menu</source>
          <target state="translated">HtmlExtension#popup_menu</target>
        </trans-unit>
        <trans-unit id="1f4d727b01a4c22117d548a65f7e11404398e2ca" translate="yes" xml:space="preserve">
          <source>HtmlExtension#radio_button</source>
          <target state="translated">HtmlExtension#radio_button</target>
        </trans-unit>
        <trans-unit id="b02c4bac867b2ac614ca2c42f8e713b898f7e142" translate="yes" xml:space="preserve">
          <source>HtmlExtension#radio_group</source>
          <target state="translated">HtmlExtension#radio_group</target>
        </trans-unit>
        <trans-unit id="df7fbe96f12a0188af29f6700bdb2081075287cd" translate="yes" xml:space="preserve">
          <source>HtmlExtension#reset</source>
          <target state="translated">HtmlExtension#reset</target>
        </trans-unit>
        <trans-unit id="946b34647dc094148adbcb48dba952b2a35e5a88" translate="yes" xml:space="preserve">
          <source>HtmlExtension#scrolling_list</source>
          <target state="translated">HtmlExtension#scrolling_list</target>
        </trans-unit>
        <trans-unit id="f031c8cd89046f2d404066a28577ca92623f671c" translate="yes" xml:space="preserve">
          <source>HtmlExtension#submit</source>
          <target state="translated">HtmlExtension#submit</target>
        </trans-unit>
        <trans-unit id="5f0f7757af9f525ffbccdcc976e3175561928299" translate="yes" xml:space="preserve">
          <source>HtmlExtension#text_field</source>
          <target state="translated">HtmlExtension#text_field</target>
        </trans-unit>
        <trans-unit id="cc5fd9bc9f4adee39a4830c82c2406b3efe0f086" translate="yes" xml:space="preserve">
          <source>HtmlExtension#textarea</source>
          <target state="translated">HtmlExtension#textarea</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="24a3d16c999fa4a3f366d1419ee161ce8a7b1772" translate="yes" xml:space="preserve">
          <source>I NEED TO PARSE OR EMIT YAML RIGHT NOW!</source>
          <target state="translated">지금 YAML을 파싱하거나 방출해야합니다!</target>
        </trans-unit>
        <trans-unit id="a41f352a2b73bce2c2021ab6264e9ceef645cafb" translate="yes" xml:space="preserve">
          <source>I strongly recommend this scheme. This form is simpler and more robust.</source>
          <target state="translated">나는이 계획을 강력히 추천한다. 이 양식은 더 단순하고 강력합니다.</target>
        </trans-unit>
        <trans-unit id="dca4340ea239483639391e0dfa41f85621582c74" translate="yes" xml:space="preserve">
          <source>I try to point out any other &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; issues in the documentation of methods as they come up.</source>
          <target state="translated">메소드가 올라올 때 문서화에서 다른 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; 문제 를 지적하려고 합니다.</target>
        </trans-unit>
        <trans-unit id="1f8c36a9ae1f6c52e5b5c6aa61bb6c0f8de4e498" translate="yes" xml:space="preserve">
          <source>I!&amp;lt;, i!&amp;lt;, I!&amp;gt;, and i!&amp;gt; are available since Ruby 1.9.3.</source>
          <target state="translated">I! &amp;lt;, i! &amp;lt;, I!&amp;gt; 및 i!&amp;gt;는 Ruby 1.9.3부터 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76f7b0011481c6a55329a3d3d180874b0020f1a3" translate="yes" xml:space="preserve">
          <source>I(n)</source>
          <target state="translated">I(n)</target>
        </trans-unit>
        <trans-unit id="1e477f6dcbcf42b3d46d76021273b463dbb9caed" translate="yes" xml:space="preserve">
          <source>I.e. this method returns &lt;em&gt;ceil(log2(int &amp;lt; 0 ? -int : int+1))&lt;/em&gt;.</source>
          <target state="translated">즉,이 메소드는 &lt;em&gt;ceil (log2 (int &amp;lt;0? -int : int + 1))을&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7f0f9ee7367def4ab146e6ffcc01396212b9998f" translate="yes" xml:space="preserve">
          <source>IBM SNA protocol</source>
          <target state="translated">IBM SNA 프로토콜</target>
        </trans-unit>
        <trans-unit id="a376fb45859416a58ff11300fa9a12ecd1ebbfe4" translate="yes" xml:space="preserve">
          <source>ICMP6</source>
          <target state="translated">ICMP6</target>
        </trans-unit>
        <trans-unit id="adbd2eb6f729f2bfeda2a821aff151dae1574a6d" translate="yes" xml:space="preserve">
          <source>IFF_802_1Q_VLAN</source>
          <target state="translated">IFF_802_1Q_VLAN</target>
        </trans-unit>
        <trans-unit id="25975722cb8f4d56ee1ae4d6ce5e54a4b657bcb2" translate="yes" xml:space="preserve">
          <source>IFF_ALLMULTI</source>
          <target state="translated">IFF_ALLMULTI</target>
        </trans-unit>
        <trans-unit id="63fefbbf86d1465f07fde8e9d1b46b8c339c1b0b" translate="yes" xml:space="preserve">
          <source>IFF_ALTPHYS</source>
          <target state="translated">IFF_ALTPHYS</target>
        </trans-unit>
        <trans-unit id="cb2d300a3e57b4d41b6542973a0a127f11f94c34" translate="yes" xml:space="preserve">
          <source>IFF_AUTOMEDIA</source>
          <target state="translated">IFF_AUTOMEDIA</target>
        </trans-unit>
        <trans-unit id="fe3603cc3b593cf936314021d622a8c7a7e60a16" translate="yes" xml:space="preserve">
          <source>IFF_BONDING</source>
          <target state="translated">IFF_BONDING</target>
        </trans-unit>
        <trans-unit id="6b179ea00bb6a04e73a4de5c0a01c1b041e15541" translate="yes" xml:space="preserve">
          <source>IFF_BRIDGE_PORT</source>
          <target state="translated">IFF_BRIDGE_PORT</target>
        </trans-unit>
        <trans-unit id="c06a5734b6c7a6348924e7304bcaaac9baeb509d" translate="yes" xml:space="preserve">
          <source>IFF_BROADCAST</source>
          <target state="translated">IFF_BROADCAST</target>
        </trans-unit>
        <trans-unit id="be806c75d1eaedbc4e297198514a30a8eda70f9f" translate="yes" xml:space="preserve">
          <source>IFF_CANTCHANGE</source>
          <target state="translated">IFF_CANTCHANGE</target>
        </trans-unit>
        <trans-unit id="253baa47f5e75f8138770b1c487706641358c23d" translate="yes" xml:space="preserve">
          <source>IFF_CANTCONFIG</source>
          <target state="translated">IFF_CANTCONFIG</target>
        </trans-unit>
        <trans-unit id="bdf3cb66597dadc15201228d745a715fe8f43891" translate="yes" xml:space="preserve">
          <source>IFF_DEBUG</source>
          <target state="translated">IFF_DEBUG</target>
        </trans-unit>
        <trans-unit id="c754d06ebf21dcd01419202b3cf454fe16e63cc8" translate="yes" xml:space="preserve">
          <source>IFF_DISABLE_NETPOLL</source>
          <target state="translated">IFF_DISABLE_NETPOLL</target>
        </trans-unit>
        <trans-unit id="fd3551e59582420b0138a6b6ffa95a8218c7ccdf" translate="yes" xml:space="preserve">
          <source>IFF_DONT_BRIDGE</source>
          <target state="translated">IFF_DONT_BRIDGE</target>
        </trans-unit>
        <trans-unit id="ad15c498d440002c13f7faaad053cae442dcb4e1" translate="yes" xml:space="preserve">
          <source>IFF_DORMANT</source>
          <target state="translated">IFF_DORMANT</target>
        </trans-unit>
        <trans-unit id="8d9925fe978fd8c53205a71063110f59ff9ddd65" translate="yes" xml:space="preserve">
          <source>IFF_DRV_OACTIVE</source>
          <target state="translated">IFF_DRV_OACTIVE</target>
        </trans-unit>
        <trans-unit id="77828376d3508771cc0f19096e50168962629215" translate="yes" xml:space="preserve">
          <source>IFF_DRV_RUNNING</source>
          <target state="translated">IFF_DRV_RUNNING</target>
        </trans-unit>
        <trans-unit id="dfe092a0f9f8b069c4efb2719626bb014d8fff2f" translate="yes" xml:space="preserve">
          <source>IFF_DYING</source>
          <target state="translated">IFF_DYING</target>
        </trans-unit>
        <trans-unit id="1159a125d2613d3216334c85c3b35ce32c834ad7" translate="yes" xml:space="preserve">
          <source>IFF_DYNAMIC</source>
          <target state="translated">IFF_DYNAMIC</target>
        </trans-unit>
        <trans-unit id="cd48bfb95c83820b04301f1d77631306d0313fd4" translate="yes" xml:space="preserve">
          <source>IFF_EBRIDGE</source>
          <target state="translated">IFF_EBRIDGE</target>
        </trans-unit>
        <trans-unit id="7286c839d6ab87e7ea8711d8073403bba3544302" translate="yes" xml:space="preserve">
          <source>IFF_ECHO</source>
          <target state="translated">IFF_ECHO</target>
        </trans-unit>
        <trans-unit id="6138f9f2b7af283963c76b385c6af4e85b3620e1" translate="yes" xml:space="preserve">
          <source>IFF_ISATAP</source>
          <target state="translated">IFF_ISATAP</target>
        </trans-unit>
        <trans-unit id="243616803db54d5b5d02ce8dfa08d1792666ede5" translate="yes" xml:space="preserve">
          <source>IFF_LINK0</source>
          <target state="translated">IFF_LINK0</target>
        </trans-unit>
        <trans-unit id="acc82124dca62c86b3ae146f204ec90255bb85b1" translate="yes" xml:space="preserve">
          <source>IFF_LINK1</source>
          <target state="translated">IFF_LINK1</target>
        </trans-unit>
        <trans-unit id="dae1bbf7c6f8cd40d12799e04804eb00ee36f8be" translate="yes" xml:space="preserve">
          <source>IFF_LINK2</source>
          <target state="translated">IFF_LINK2</target>
        </trans-unit>
        <trans-unit id="490945ea2431ce63b1f55bdecc41bbaa592f1f30" translate="yes" xml:space="preserve">
          <source>IFF_LIVE_ADDR_CHANGE</source>
          <target state="translated">IFF_LIVE_ADDR_CHANGE</target>
        </trans-unit>
        <trans-unit id="81b0a3b2ee6c093228b33cbed568467dddcdfe0e" translate="yes" xml:space="preserve">
          <source>IFF_LOOPBACK</source>
          <target state="translated">IFF_LOOPBACK</target>
        </trans-unit>
        <trans-unit id="2d1499bb1804a78d5911d6701062b0c76213c9ba" translate="yes" xml:space="preserve">
          <source>IFF_LOWER_UP</source>
          <target state="translated">IFF_LOWER_UP</target>
        </trans-unit>
        <trans-unit id="607b05be33b439cbabeffa480464f92ba7170c7c" translate="yes" xml:space="preserve">
          <source>IFF_MACVLAN_PORT</source>
          <target state="translated">IFF_MACVLAN_PORT</target>
        </trans-unit>
        <trans-unit id="ee0bc9df8cbc772af1ce7c4b1f93e2d41df6296c" translate="yes" xml:space="preserve">
          <source>IFF_MASTER</source>
          <target state="translated">IFF_MASTER</target>
        </trans-unit>
        <trans-unit id="7137bb5506b2b1d8930de98cdf513a113e88dd53" translate="yes" xml:space="preserve">
          <source>IFF_MASTER_8023AD</source>
          <target state="translated">IFF_MASTER_8023AD</target>
        </trans-unit>
        <trans-unit id="ff1098558f9cef4833edbee4debbdd3b4751e57b" translate="yes" xml:space="preserve">
          <source>IFF_MASTER_ALB</source>
          <target state="translated">IFF_MASTER_ALB</target>
        </trans-unit>
        <trans-unit id="c31c4ccbba244e8974c4df1d60ce75f4a8c37400" translate="yes" xml:space="preserve">
          <source>IFF_MASTER_ARPMON</source>
          <target state="translated">IFF_MASTER_ARPMON</target>
        </trans-unit>
        <trans-unit id="24aa266f329b8865310fd5aa18006dcd7d2b56ee" translate="yes" xml:space="preserve">
          <source>IFF_MONITOR</source>
          <target state="translated">IFF_MONITOR</target>
        </trans-unit>
        <trans-unit id="638b260c3346b06e4280fe1cf14ee3e74915cc41" translate="yes" xml:space="preserve">
          <source>IFF_MULTICAST</source>
          <target state="translated">IFF_MULTICAST</target>
        </trans-unit>
        <trans-unit id="e6c0e18211353d007ed152186d46c05c9e3d9143" translate="yes" xml:space="preserve">
          <source>IFF_NOARP</source>
          <target state="translated">IFF_NOARP</target>
        </trans-unit>
        <trans-unit id="a432e212019862396a1d3f9e15cbb2c8196098c1" translate="yes" xml:space="preserve">
          <source>IFF_NOTRAILERS</source>
          <target state="translated">IFF_NOTRAILERS</target>
        </trans-unit>
        <trans-unit id="e2949d3ddbe87c81c389b17daf5526286d3ad958" translate="yes" xml:space="preserve">
          <source>IFF_OACTIVE</source>
          <target state="translated">IFF_OACTIVE</target>
        </trans-unit>
        <trans-unit id="aaeb118cd452d15aeb494dc16a2f56c55a75ba58" translate="yes" xml:space="preserve">
          <source>IFF_OVS_DATAPATH</source>
          <target state="translated">IFF_OVS_DATAPATH</target>
        </trans-unit>
        <trans-unit id="bed4e4534c71efe83e0fbebd887ae5dbeb9d592a" translate="yes" xml:space="preserve">
          <source>IFF_POINTOPOINT</source>
          <target state="translated">IFF_POINTOPOINT</target>
        </trans-unit>
        <trans-unit id="0de9c4fcb1bc1021f5e0887eeea79f4fbb1f1f81" translate="yes" xml:space="preserve">
          <source>IFF_PORTSEL</source>
          <target state="translated">IFF_PORTSEL</target>
        </trans-unit>
        <trans-unit id="7c88a9dfcb0eda9f4f5204a67c33abe66a26c4cf" translate="yes" xml:space="preserve">
          <source>IFF_PPROMISC</source>
          <target state="translated">IFF_PPROMISC</target>
        </trans-unit>
        <trans-unit id="38dc562052a1967117a6e383194e442b03991be0" translate="yes" xml:space="preserve">
          <source>IFF_PROMISC</source>
          <target state="translated">IFF_PROMISC</target>
        </trans-unit>
        <trans-unit id="6276d85fd01d36e06495a30749436a902fd6a662" translate="yes" xml:space="preserve">
          <source>IFF_RENAMING</source>
          <target state="translated">IFF_RENAMING</target>
        </trans-unit>
        <trans-unit id="00e24fee1e46ddcdccea777fa79cc3db88b0f8e2" translate="yes" xml:space="preserve">
          <source>IFF_ROUTE</source>
          <target state="translated">IFF_ROUTE</target>
        </trans-unit>
        <trans-unit id="d6f06aefefcc245f7cd41914c329c08c8d238ee6" translate="yes" xml:space="preserve">
          <source>IFF_RUNNING</source>
          <target state="translated">IFF_RUNNING</target>
        </trans-unit>
        <trans-unit id="d4ab1620dba6d996cacf222ff81af32fac682e37" translate="yes" xml:space="preserve">
          <source>IFF_SIMPLEX</source>
          <target state="translated">IFF_SIMPLEX</target>
        </trans-unit>
        <trans-unit id="ba6bb03f74b35b3e543cfef72805035feeeea8fd" translate="yes" xml:space="preserve">
          <source>IFF_SLAVE</source>
          <target state="translated">IFF_SLAVE</target>
        </trans-unit>
        <trans-unit id="b6ed7c8a48d1d3e95ed5b869a6c3dcea9612a8aa" translate="yes" xml:space="preserve">
          <source>IFF_SLAVE_INACTIVE</source>
          <target state="translated">IFF_SLAVE_INACTIVE</target>
        </trans-unit>
        <trans-unit id="9ed0b85d5cb1dcd394a0f48b2742a13b316c77a7" translate="yes" xml:space="preserve">
          <source>IFF_SLAVE_NEEDARP</source>
          <target state="translated">IFF_SLAVE_NEEDARP</target>
        </trans-unit>
        <trans-unit id="36b357076546bdad0f5909b57f476d02eeb82443" translate="yes" xml:space="preserve">
          <source>IFF_SMART</source>
          <target state="translated">IFF_SMART</target>
        </trans-unit>
        <trans-unit id="80953ff73eee3ed904451a7738ae7561e2a77c71" translate="yes" xml:space="preserve">
          <source>IFF_STATICARP</source>
          <target state="translated">IFF_STATICARP</target>
        </trans-unit>
        <trans-unit id="2640500d370034b41f299eae45a406306739c6a8" translate="yes" xml:space="preserve">
          <source>IFF_SUPP_NOFCS</source>
          <target state="translated">IFF_SUPP_NOFCS</target>
        </trans-unit>
        <trans-unit id="eaf5ab2c231acebf3678d21213524febfde1d4ce" translate="yes" xml:space="preserve">
          <source>IFF_TEAM_PORT</source>
          <target state="translated">IFF_TEAM_PORT</target>
        </trans-unit>
        <trans-unit id="d7c710f6d83c564ba0682e839287a1bc91e2ed34" translate="yes" xml:space="preserve">
          <source>IFF_TX_SKB_SHARING</source>
          <target state="translated">IFF_TX_SKB_SHARING</target>
        </trans-unit>
        <trans-unit id="4692a7e0460c9550f282b3a44ffba5213345c5c7" translate="yes" xml:space="preserve">
          <source>IFF_UNICAST_FLT</source>
          <target state="translated">IFF_UNICAST_FLT</target>
        </trans-unit>
        <trans-unit id="97d6ae61fdeddb0c5da8432c17bb6317a1ab98c6" translate="yes" xml:space="preserve">
          <source>IFF_UP</source>
          <target state="translated">IFF_UP</target>
        </trans-unit>
        <trans-unit id="a72f47ed5c15d3e635eb417e78f0c3f5e60dd612" translate="yes" xml:space="preserve">
          <source>IFF_VOLATILE</source>
          <target state="translated">IFF_VOLATILE</target>
        </trans-unit>
        <trans-unit id="4c315bb200d79e33a5f872ed564783f4566f107d" translate="yes" xml:space="preserve">
          <source>IFF_WAN_HDLC</source>
          <target state="translated">IFF_WAN_HDLC</target>
        </trans-unit>
        <trans-unit id="dab4192f045c88c23b8a187154c65c9009acf3a2" translate="yes" xml:space="preserve">
          <source>IFF_XMIT_DST_RELEASE</source>
          <target state="translated">IFF_XMIT_DST_RELEASE</target>
        </trans-unit>
        <trans-unit id="f3cb7e914d27ecbdc80345b039c4f6010b4e6f64" translate="yes" xml:space="preserve">
          <source>IFNAMSIZ</source>
          <target state="translated">IFNAMSIZ</target>
        </trans-unit>
        <trans-unit id="7b0de3b3f0380ab16956277e1187341115a48463" translate="yes" xml:space="preserve">
          <source>IF_NAMESIZE</source>
          <target state="translated">IF_NAMESIZE</target>
        </trans-unit>
        <trans-unit id="deb44cbd5237c8c1bb52a46ecef159672165a8da" translate="yes" xml:space="preserve">
          <source>IGNORECASE</source>
          <target state="translated">IGNORECASE</target>
        </trans-unit>
        <trans-unit id="e1c2f610d415a7a112473dd1ee6477b88aa0474a" translate="yes" xml:space="preserve">
          <source>ILLFORMED_MESSAGE</source>
          <target state="translated">ILLFORMED_MESSAGE</target>
        </trans-unit>
        <trans-unit id="02f3b76283c839b4a46027611a3ba9edb46e899d" translate="yes" xml:space="preserve">
          <source>IMASK</source>
          <target state="translated">IMASK</target>
        </trans-unit>
        <trans-unit id="082f063d3c10645987a8e5587b72ab4c31f85c71" translate="yes" xml:space="preserve">
          <source>IMPORTANT NOTE: It is currently not possible to use this safely in a multi-threaded application. The callback is called inside a global lock and it can randomly cause deadlock on Ruby thread switching.</source>
          <target state="translated">중요 참고 : 현재 멀티 스레드 응용 프로그램에서이 기능을 안전하게 사용할 수 없습니다. 콜백은 전역 잠금 내에서 호출되며 Ruby 스레드 전환시 교착 상태가 임의로 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="964f0c3463ce36a337e0bb68d8c16bdddbaf2b39" translate="yes" xml:space="preserve">
          <source>IMUsed</source>
          <target state="translated">IMUsed</target>
        </trans-unit>
        <trans-unit id="18f86eb20c42acc2194faf82c1ee9e8935639e13" translate="yes" xml:space="preserve">
          <source>IN4MASK</source>
          <target state="translated">IN4MASK</target>
        </trans-unit>
        <trans-unit id="d43746b43cb182141e52b957fad90cab3e1b6cc7" translate="yes" xml:space="preserve">
          <source>IN6FORMAT</source>
          <target state="translated">IN6FORMAT</target>
        </trans-unit>
        <trans-unit id="67007c764a1636670e160105d59b599471d40d3d" translate="yes" xml:space="preserve">
          <source>IN6MASK</source>
          <target state="translated">IN6MASK</target>
        </trans-unit>
        <trans-unit id="671418ffbf1b993786d0d276e5ed26d3938778cd" translate="yes" xml:space="preserve">
          <source>INADDR_ALLHOSTS_GROUP</source>
          <target state="translated">INADDR_ALLHOSTS_GROUP</target>
        </trans-unit>
        <trans-unit id="53d4a1d2e504c2ce701179de72f8fa5b2bbbd770" translate="yes" xml:space="preserve">
          <source>INADDR_ANY</source>
          <target state="translated">INADDR_ANY</target>
        </trans-unit>
        <trans-unit id="2c11413934d2fbe555a376353e712f9485ba40e9" translate="yes" xml:space="preserve">
          <source>INADDR_BROADCAST</source>
          <target state="translated">INADDR_BROADCAST</target>
        </trans-unit>
        <trans-unit id="98c517538dbad5607c3a2235e19adc3946aba173" translate="yes" xml:space="preserve">
          <source>INADDR_LOOPBACK</source>
          <target state="translated">INADDR_LOOPBACK</target>
        </trans-unit>
        <trans-unit id="788f7e50a24933d1beaffa11faa3ae23cda7cc04" translate="yes" xml:space="preserve">
          <source>INADDR_MAX_LOCAL_GROUP</source>
          <target state="translated">INADDR_MAX_LOCAL_GROUP</target>
        </trans-unit>
        <trans-unit id="06376288f995a2b9ce4acc669061cd105fe0d3dd" translate="yes" xml:space="preserve">
          <source>INADDR_NONE</source>
          <target state="translated">INADDR_NONE</target>
        </trans-unit>
        <trans-unit id="eb8afc4790f3707862a5f4da9ba2ffe8de8d7d9b" translate="yes" xml:space="preserve">
          <source>INADDR_UNSPEC_GROUP</source>
          <target state="translated">INADDR_UNSPEC_GROUP</target>
        </trans-unit>
        <trans-unit id="679cdd39d59f6d3060d1991be0b20917cfceba11" translate="yes" xml:space="preserve">
          <source>INET6_ADDRSTRLEN</source>
          <target state="translated">INET6_ADDRSTRLEN</target>
        </trans-unit>
        <trans-unit id="6ce1a1bcc7cd9af6635e5f04fc6943caadfe330d" translate="yes" xml:space="preserve">
          <source>INET_ADDRSTRLEN</source>
          <target state="translated">INET_ADDRSTRLEN</target>
        </trans-unit>
        <trans-unit id="bb6e7841dba2c83d7f4685d9f749f0a969927ab9" translate="yes" xml:space="preserve">
          <source>INFINITY</source>
          <target state="translated">INFINITY</target>
        </trans-unit>
        <trans-unit id="9c9cf999829193894067bbd9e1484756ab736ac0" translate="yes" xml:space="preserve">
          <source>INFO</source>
          <target state="translated">INFO</target>
        </trans-unit>
        <trans-unit id="c96cec11c199a04bb342cece474905f5712362ff" translate="yes" xml:space="preserve">
          <source>INJECTED_GEMS</source>
          <target state="translated">INJECTED_GEMS</target>
        </trans-unit>
        <trans-unit id="556c2b94bf669a9409dfe06aafc484d51d144ccc" translate="yes" xml:space="preserve">
          <source>INSECURE_METHOD</source>
          <target state="translated">INSECURE_METHOD</target>
        </trans-unit>
        <trans-unit id="570e76cdbd9eebccd7c1b45eec3328b745cc276e" translate="yes" xml:space="preserve">
          <source>INSTANCE CREATION</source>
          <target state="translated">인스턴스 창조</target>
        </trans-unit>
        <trans-unit id="345209bf3f5a26091ba1a9fbd2672d622d2d7252" translate="yes" xml:space="preserve">
          <source>INSTRUCTION_NAMES</source>
          <target state="translated">INSTRUCTION_NAMES</target>
        </trans-unit>
        <trans-unit id="cfa54ae4a86c089e2b75f5e1912ebe8dc63ff853" translate="yes" xml:space="preserve">
          <source>INTENTIONALLY_NIL</source>
          <target state="translated">INTENTIONALLY_NIL</target>
        </trans-unit>
        <trans-unit id="237a7f26e25bfd5401c2aa3e783f69dc6feca8c6" translate="yes" xml:space="preserve">
          <source>INTERNALDATE</source>
          <target state="translated">INTERNALDATE</target>
        </trans-unit>
        <trans-unit id="faafbf3aaae0ac0eea21a53f64be52f92c6af95c" translate="yes" xml:space="preserve">
          <source>INTERNAL_CONSTANTS</source>
          <target state="translated">INTERNAL_CONSTANTS</target>
        </trans-unit>
        <trans-unit id="ef1c040b394a65f09f7d3ca080e84f1b4bb4072e" translate="yes" xml:space="preserve">
          <source>INVALID_MASK</source>
          <target state="translated">INVALID_MASK</target>
        </trans-unit>
        <trans-unit id="fbc674b0a2226534105fb553d423ed1179dfa3a1" translate="yes" xml:space="preserve">
          <source>INVALID_REPLACE</source>
          <target state="translated">INVALID_REPLACE</target>
        </trans-unit>
        <trans-unit id="9d8fb39373007c2c84580d473e2a6e10a1f4c15d" translate="yes" xml:space="preserve">
          <source>IO</source>
          <target state="translated">IO</target>
        </trans-unit>
        <trans-unit id="9a6bdc8f86a377f1a2c90c1abdfd7c3aad76db58" translate="yes" xml:space="preserve">
          <source>IO#beep</source>
          <target state="translated">IO#beep</target>
        </trans-unit>
        <trans-unit id="5f010e9d48977825f1be6818415eeae9e94c9951" translate="yes" xml:space="preserve">
          <source>IO#each</source>
          <target state="translated">IO#each</target>
        </trans-unit>
        <trans-unit id="b5cf88c1fbee683cc7ce56f1dad03461278746b9" translate="yes" xml:space="preserve">
          <source>IO#eof</source>
          <target state="translated">IO#eof</target>
        </trans-unit>
        <trans-unit id="2ae22eb8dce5254256065ed9691148eda6e2a322" translate="yes" xml:space="preserve">
          <source>IO#eof?</source>
          <target state="translated">IO#eof?</target>
        </trans-unit>
        <trans-unit id="daf5969e20dc00526797738ff62d5e580a8a86d8" translate="yes" xml:space="preserve">
          <source>IO#expect(pattern,timeout=9999999) &amp;rarr; Array &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">IO # expect (pattern, timeout = 9999999) &amp;rarr; 어레이 &lt;a&gt;쇼 소스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1fc9e66a0d365a83e36e034b838dfa61e2d97fa" translate="yes" xml:space="preserve">
          <source>IO#expect(pattern,timeout=9999999) { |result| ... } &amp;rarr; nil</source>
          <target state="translated">IO # expect (pattern, timeout = 9999999) {| result | ...} &amp;rarr; 없음</target>
        </trans-unit>
        <trans-unit id="64d1031d576013959050c354af069364558afd89" translate="yes" xml:space="preserve">
          <source>IO#getc</source>
          <target state="translated">IO#getc</target>
        </trans-unit>
        <trans-unit id="7b3e934523e5e4c5624e48558e159f8018d99fc6" translate="yes" xml:space="preserve">
          <source>IO#gets</source>
          <target state="translated">IO#gets</target>
        </trans-unit>
        <trans-unit id="d2881731b2826e597b96b5f968399944773cbfc0" translate="yes" xml:space="preserve">
          <source>IO#goto</source>
          <target state="translated">IO#goto</target>
        </trans-unit>
        <trans-unit id="7595fdb0accaab33accec4d33ec5c2cda681a8d9" translate="yes" xml:space="preserve">
          <source>IO#pid</source>
          <target state="translated">IO#pid</target>
        </trans-unit>
        <trans-unit id="954a624f78bfa13a5a43dd6b7e5c884fd29c7c34" translate="yes" xml:space="preserve">
          <source>IO#pos</source>
          <target state="translated">IO#pos</target>
        </trans-unit>
        <trans-unit id="58aa9f7c224480ddf10a3a8c4d95eea27bfd49c7" translate="yes" xml:space="preserve">
          <source>IO#pos=</source>
          <target state="translated">IO#pos=</target>
        </trans-unit>
        <trans-unit id="9f6f457d51f082d98a0bc6e5a3d689cf19b72f1e" translate="yes" xml:space="preserve">
          <source>IO#putc</source>
          <target state="translated">IO#putc</target>
        </trans-unit>
        <trans-unit id="64e6ee169eecef39a002bf2d04d707d5fefd7206" translate="yes" xml:space="preserve">
          <source>IO#puts</source>
          <target state="translated">IO#puts</target>
        </trans-unit>
        <trans-unit id="3d8e113c174bf476a25e8de7c5d2bdc71f2bc4c0" translate="yes" xml:space="preserve">
          <source>IO#raw</source>
          <target state="translated">IO#raw</target>
        </trans-unit>
        <trans-unit id="916c03e23a324bbc0145ff8814a2b6ec56430035" translate="yes" xml:space="preserve">
          <source>IO#raw!</source>
          <target state="translated">IO#raw!</target>
        </trans-unit>
        <trans-unit id="b8d5b753485372e43ef8ab3728b6602a027f9c10" translate="yes" xml:space="preserve">
          <source>IO#read</source>
          <target state="translated">IO#read</target>
        </trans-unit>
        <trans-unit id="0f93e29eaa1f0a1508bd05d5499b79652e99f70f" translate="yes" xml:space="preserve">
          <source>IO#seek</source>
          <target state="translated">IO#seek</target>
        </trans-unit>
        <trans-unit id="d70702b2ca847b6cbfa1fad62238f1fbc436c65e" translate="yes" xml:space="preserve">
          <source>IO#stat</source>
          <target state="translated">IO#stat</target>
        </trans-unit>
        <trans-unit id="7be504d85eb0ce5f1c7d26dde0778900cbe252f4" translate="yes" xml:space="preserve">
          <source>IO#sync</source>
          <target state="translated">IO#sync</target>
        </trans-unit>
        <trans-unit id="4830578fcb01624f1856c33ede245bb67a18506b" translate="yes" xml:space="preserve">
          <source>IO#tell</source>
          <target state="translated">IO#tell</target>
        </trans-unit>
        <trans-unit id="4fd17c1cc1ca6bee3527b876b299118041b15c63" translate="yes" xml:space="preserve">
          <source>IO#to_i</source>
          <target state="translated">IO#to_i</target>
        </trans-unit>
        <trans-unit id="87820103dae801e709ff0bd27dc4c15b9c916495" translate="yes" xml:space="preserve">
          <source>IO#tty?</source>
          <target state="translated">IO#tty?</target>
        </trans-unit>
        <trans-unit id="4e1377244a12ff72aaea105a29c17328262cfa8c" translate="yes" xml:space="preserve">
          <source>IO#wait</source>
          <target state="translated">IO#wait</target>
        </trans-unit>
        <trans-unit id="49af93be10c0cb8dd42cbcfd2ac8ec0212648f4d" translate="yes" xml:space="preserve">
          <source>IO::EAGAINWaitReadable</source>
          <target state="translated">IO::EAGAINWaitReadable</target>
        </trans-unit>
        <trans-unit id="12b13b9e0b9ca57e2f644b94a44f85735b8ac389" translate="yes" xml:space="preserve">
          <source>IO::EAGAINWaitWritable</source>
          <target state="translated">IO::EAGAINWaitWritable</target>
        </trans-unit>
        <trans-unit id="bdec91c3f047a41c021b7c021853f09a04083fef" translate="yes" xml:space="preserve">
          <source>IO::EINPROGRESSWaitReadable</source>
          <target state="translated">IO::EINPROGRESSWaitReadable</target>
        </trans-unit>
        <trans-unit id="893ad0f87b46daa4c0a9f4b455dfa1c45ba9deab" translate="yes" xml:space="preserve">
          <source>IO::EINPROGRESSWaitWritable</source>
          <target state="translated">IO::EINPROGRESSWaitWritable</target>
        </trans-unit>
        <trans-unit id="c0dd16e42ed7e8806fcfd4f18fa2e77a00b515ed" translate="yes" xml:space="preserve">
          <source>IO::EWOULDBLOCKWaitReadable</source>
          <target state="translated">IO::EWOULDBLOCKWaitReadable</target>
        </trans-unit>
        <trans-unit id="b2e1357766bdb0ee817d4185d40009fc4ee09e79" translate="yes" xml:space="preserve">
          <source>IO::EWOULDBLOCKWaitWritable</source>
          <target state="translated">IO::EWOULDBLOCKWaitWritable</target>
        </trans-unit>
        <trans-unit id="f9974721631fa2577cc2dda8c3a19bf6b775df39" translate="yes" xml:space="preserve">
          <source>IO::WaitReadable</source>
          <target state="translated">IO::WaitReadable</target>
        </trans-unit>
        <trans-unit id="91e85a2146e13ab354f4b8630b10f95dc071dc06" translate="yes" xml:space="preserve">
          <source>IO::WaitWritable</source>
          <target state="translated">IO::WaitWritable</target>
        </trans-unit>
        <trans-unit id="90b5eeb3d35184781e7218f3dc8810b2eff2b781" translate="yes" xml:space="preserve">
          <source>IO::generic_readable</source>
          <target state="translated">IO::generic_readable</target>
        </trans-unit>
        <trans-unit id="ed97c8944b8ac79dfd73e253c59e8d3bd72df8b0" translate="yes" xml:space="preserve">
          <source>IO::generic_writable</source>
          <target state="translated">IO::generic_writable</target>
        </trans-unit>
        <trans-unit id="e5b4124c6702d0b3c46f19ba9e1ce0936bd16d12" translate="yes" xml:space="preserve">
          <source>IO::new</source>
          <target state="translated">IO::new</target>
        </trans-unit>
        <trans-unit id="6b8216c504ff9015aa509c421dcda0bc39e2d159" translate="yes" xml:space="preserve">
          <source>IO::open</source>
          <target state="translated">IO::open</target>
        </trans-unit>
        <trans-unit id="4e72917104daca0769d8dcd5c795736e61bf8861" translate="yes" xml:space="preserve">
          <source>IO::pipe</source>
          <target state="translated">IO::pipe</target>
        </trans-unit>
        <trans-unit id="5a2cc3cdc3401387a507faa943cd4767953aea7a" translate="yes" xml:space="preserve">
          <source>IO::popen</source>
          <target state="translated">IO::popen</target>
        </trans-unit>
        <trans-unit id="cf2de18afedf374ab9adb80950aa3abcefcda0ab" translate="yes" xml:space="preserve">
          <source>IO::read</source>
          <target state="translated">IO::read</target>
        </trans-unit>
        <trans-unit id="5bbda6bd9df10f28a6908268ae4f513a71aa9041" translate="yes" xml:space="preserve">
          <source>IO::write</source>
          <target state="translated">IO::write</target>
        </trans-unit>
        <trans-unit id="a7aaaf8103e147f7508e66b5f7be824742d34faa" translate="yes" xml:space="preserve">
          <source>IOError</source>
          <target state="translated">IOError</target>
        </trans-unit>
        <trans-unit id="0218dbcd15481246a7524c169a75452c52f0692c" translate="yes" xml:space="preserve">
          <source>IP multicast TTL</source>
          <target state="translated">IP 멀티 캐스트 TTL</target>
        </trans-unit>
        <trans-unit id="20fe7e463770b20399ece7b586c1bbb5d3def572" translate="yes" xml:space="preserve">
          <source>IP multicast interface</source>
          <target state="translated">IP 멀티 캐스트 인터페이스</target>
        </trans-unit>
        <trans-unit id="7279e4b3160656f1f51a778df4e83b92cb83cf30" translate="yes" xml:space="preserve">
          <source>IP multicast loopback</source>
          <target state="translated">IP 멀티 캐스트 루프백</target>
        </trans-unit>
        <trans-unit id="098e8b592b5482d58d70a85d1638f860deebac28" translate="yes" xml:space="preserve">
          <source>IP options to be included in datagrams</source>
          <target state="translated">데이터 그램에 포함될 IP 옵션</target>
        </trans-unit>
        <trans-unit id="749759e7e14f3e5b145618e309ad537b7b257669" translate="yes" xml:space="preserve">
          <source>IP options to be included in packets</source>
          <target state="translated">패킷에 포함될 IP 옵션</target>
        </trans-unit>
        <trans-unit id="0a8eb2806015748928901171e191ef0d408b1336" translate="yes" xml:space="preserve">
          <source>IP protocol number for these services.</source>
          <target state="translated">이러한 서비스의 IP 프로토콜 번호입니다.</target>
        </trans-unit>
        <trans-unit id="4cf1c8d8206f22deabbf8cd7af8ae8fa9d545976" translate="yes" xml:space="preserve">
          <source>IP socket options</source>
          <target state="translated">IP 소켓 옵션</target>
        </trans-unit>
        <trans-unit id="c035bad8b0c2b085ef49020af6e92cf3ccf2dd66" translate="yes" xml:space="preserve">
          <source>IP time-to-live</source>
          <target state="translated">IP 수명</target>
        </trans-unit>
        <trans-unit id="9ac17d2184fa9b5f82ce3e71d3e24d9377d1c7f3" translate="yes" xml:space="preserve">
          <source>IP type-of-service</source>
          <target state="translated">IP 서비스 유형</target>
        </trans-unit>
        <trans-unit id="eddb87a4831e0d74f5b0447c4bc3d372707d3abd" translate="yes" xml:space="preserve">
          <source>IP6 Encapsulated Security Payload</source>
          <target state="translated">IP6 캡슐화 된 보안 페이로드</target>
        </trans-unit>
        <trans-unit id="4a06ef3fe7dcfd4b259d0c3254501b50f1cb1c05" translate="yes" xml:space="preserve">
          <source>IP6 auth header</source>
          <target state="translated">IP6 인증 헤더</target>
        </trans-unit>
        <trans-unit id="a531077f888066ef6a341e1aea69b3fa1042310c" translate="yes" xml:space="preserve">
          <source>IP6 destination option</source>
          <target state="translated">IP6 대상 옵션</target>
        </trans-unit>
        <trans-unit id="eb8594ac1b4eff3749bd752116765160be45a61b" translate="yes" xml:space="preserve">
          <source>IP6 fragmentation header</source>
          <target state="translated">IP6 조각화 헤더</target>
        </trans-unit>
        <trans-unit id="b12f6d0c2f4f2c0cbc0937bc7808150148aa530a" translate="yes" xml:space="preserve">
          <source>IP6 header</source>
          <target state="translated">IP6 헤더</target>
        </trans-unit>
        <trans-unit id="8b64dd46bba53887737aec84381f52863227965d" translate="yes" xml:space="preserve">
          <source>IP6 hop-by-hop options</source>
          <target state="translated">IP6 홉별 옵션</target>
        </trans-unit>
        <trans-unit id="e74ea902df7d156b6f148fb2193dbe62c339cebf" translate="yes" xml:space="preserve">
          <source>IP6 multicast hops</source>
          <target state="translated">IP6 멀티 캐스트 홉</target>
        </trans-unit>
        <trans-unit id="622c89fd8c708755c5c156aae138eae67469a5d9" translate="yes" xml:space="preserve">
          <source>IP6 multicast interface</source>
          <target state="translated">IP6 멀티 캐스트 인터페이스</target>
        </trans-unit>
        <trans-unit id="4d19bf28b430ed01d7c6b57f637b4c254fb3fa78" translate="yes" xml:space="preserve">
          <source>IP6 multicast loopback</source>
          <target state="translated">IP6 멀티 캐스트 루프백</target>
        </trans-unit>
        <trans-unit id="19c1612210affe8679d5acd31a6a3bba1728e023" translate="yes" xml:space="preserve">
          <source>IP6 no next header</source>
          <target state="translated">IP6 다음 헤더 없음</target>
        </trans-unit>
        <trans-unit id="75c1dc9abd63fe03ec8ea9b97e6c762c399522b4" translate="yes" xml:space="preserve">
          <source>IP6 routing header</source>
          <target state="translated">IP6 라우팅 헤더</target>
        </trans-unit>
        <trans-unit id="ee5bc5b93fca807ac78af171f2e519da28f73a0b" translate="yes" xml:space="preserve">
          <source>IP6 unicast hops</source>
          <target state="translated">IP6 유니 캐스트 홉</target>
        </trans-unit>
        <trans-unit id="a4e70467b63d139c6d6b6dea22930185c7391a0f" translate="yes" xml:space="preserve">
          <source>IPAddr</source>
          <target state="translated">IPAddr</target>
        </trans-unit>
        <trans-unit id="66d33e3d505ae31260668ae277057f5d1400cf92" translate="yes" xml:space="preserve">
          <source>IPAddr#==</source>
          <target state="translated">IPAddr#==</target>
        </trans-unit>
        <trans-unit id="80fa89365035ba06d9b12e789b5d1348583578c5" translate="yes" xml:space="preserve">
          <source>IPAddr#===</source>
          <target state="translated">IPAddr#===</target>
        </trans-unit>
        <trans-unit id="5db0719d82044a145aaff096a6989f47722593a9" translate="yes" xml:space="preserve">
          <source>IPAddr#eql?</source>
          <target state="translated">IPAddr#eql?</target>
        </trans-unit>
        <trans-unit id="579093f0e606121c7be62017c8a11cbd298aec64" translate="yes" xml:space="preserve">
          <source>IPAddr#hash</source>
          <target state="translated">IPAddr#hash</target>
        </trans-unit>
        <trans-unit id="e79ea3174251772d255dc2bc19d43f33373d5121" translate="yes" xml:space="preserve">
          <source>IPAddr#hton</source>
          <target state="translated">IPAddr#hton</target>
        </trans-unit>
        <trans-unit id="881b991c75477487083551fd3f7cb4df88122bb5" translate="yes" xml:space="preserve">
          <source>IPAddr#mask</source>
          <target state="translated">IPAddr#mask</target>
        </trans-unit>
        <trans-unit id="ab9339524feb23cb4ba258b81e7c4708937bb9ca" translate="yes" xml:space="preserve">
          <source>IPAddr#set</source>
          <target state="translated">IPAddr#set</target>
        </trans-unit>
        <trans-unit id="dddeffaed603d78eb180c2829fcde981f4409c4c" translate="yes" xml:space="preserve">
          <source>IPAddr#succ</source>
          <target state="translated">IPAddr#succ</target>
        </trans-unit>
        <trans-unit id="7cb3cdd19f144d1d39a431e1233741099a0de65e" translate="yes" xml:space="preserve">
          <source>IPAddr#to_i</source>
          <target state="translated">IPAddr#to_i</target>
        </trans-unit>
        <trans-unit id="395ac63ea91d4ab865d844bb055909b869adbd02" translate="yes" xml:space="preserve">
          <source>IPAddr#to_s</source>
          <target state="translated">IPAddr#to_s</target>
        </trans-unit>
        <trans-unit id="29cd5530326f9eeca52fdaee2f2ceb9c393b597e" translate="yes" xml:space="preserve">
          <source>IPAddr#|</source>
          <target state="translated">IPAddr#|</target>
        </trans-unit>
        <trans-unit id="0f1aa764e7a880a7541dca1b012a81a290166494" translate="yes" xml:space="preserve">
          <source>IPAddr#~</source>
          <target state="translated">IPAddr#~</target>
        </trans-unit>
        <trans-unit id="a73f3171f08f48b71acdcad44eacdb219a71a3aa" translate="yes" xml:space="preserve">
          <source>IPAddr::AddressFamilyError</source>
          <target state="translated">IPAddr::AddressFamilyError</target>
        </trans-unit>
        <trans-unit id="2457ec6170fbd66fe6f722245d6c7f1b17a58a96" translate="yes" xml:space="preserve">
          <source>IPAddr::Error</source>
          <target state="translated">IPAddr::Error</target>
        </trans-unit>
        <trans-unit id="300402d1b3fcc95dc867add02329bddbda541ef1" translate="yes" xml:space="preserve">
          <source>IPAddr::InvalidAddressError</source>
          <target state="translated">IPAddr::InvalidAddressError</target>
        </trans-unit>
        <trans-unit id="d985c3e92793a6043c9fcad39d6c6998377388fc" translate="yes" xml:space="preserve">
          <source>IPAddr::InvalidPrefixError</source>
          <target state="translated">IPAddr::InvalidPrefixError</target>
        </trans-unit>
        <trans-unit id="488957df1a9cb0a3eb816fc46a11cc84106e59c2" translate="yes" xml:space="preserve">
          <source>IPAddr::new</source>
          <target state="translated">IPAddr::new</target>
        </trans-unit>
        <trans-unit id="f9d6dba43871a9d0958acbcb9b325a1d891a85b4" translate="yes" xml:space="preserve">
          <source>IPAddr::ntop</source>
          <target state="translated">IPAddr::ntop</target>
        </trans-unit>
        <trans-unit id="c53ce1413809adc754abe99db8f630d598b94e32" translate="yes" xml:space="preserve">
          <source>IPPORT_RESERVED</source>
          <target state="translated">IPPORT_RESERVED</target>
        </trans-unit>
        <trans-unit id="f24704ccc68ed96458ba343d29aeece07aadba32" translate="yes" xml:space="preserve">
          <source>IPPORT_USERRESERVED</source>
          <target state="translated">IPPORT_USERRESERVED</target>
        </trans-unit>
        <trans-unit id="1a27845f56a962f2f2b18ed29c8500fe4ae98359" translate="yes" xml:space="preserve">
          <source>IPPROTO_AH</source>
          <target state="translated">IPPROTO_AH</target>
        </trans-unit>
        <trans-unit id="517aa894800dbc2ca7f11e52a3ce046ffbbb0cd7" translate="yes" xml:space="preserve">
          <source>IPPROTO_BIP</source>
          <target state="translated">IPPROTO_BIP</target>
        </trans-unit>
        <trans-unit id="737e4aac8beba3dc8c6daeb3addb2fdf4bd1ac38" translate="yes" xml:space="preserve">
          <source>IPPROTO_DSTOPTS</source>
          <target state="translated">IPPROTO_DSTOPTS</target>
        </trans-unit>
        <trans-unit id="fe334ff8382e091e1b07d282741e12217a417e7b" translate="yes" xml:space="preserve">
          <source>IPPROTO_EGP</source>
          <target state="translated">IPPROTO_EGP</target>
        </trans-unit>
        <trans-unit id="7c3fd95c5903c10e8a20d9ad9a9b8d5c2aab29be" translate="yes" xml:space="preserve">
          <source>IPPROTO_EON</source>
          <target state="translated">IPPROTO_EON</target>
        </trans-unit>
        <trans-unit id="7452c599df7bd3a62805987a2db035c37e3b8ee6" translate="yes" xml:space="preserve">
          <source>IPPROTO_ESP</source>
          <target state="translated">IPPROTO_ESP</target>
        </trans-unit>
        <trans-unit id="26e7aacfb59dc71db240c8cb6171bbf57aeecc94" translate="yes" xml:space="preserve">
          <source>IPPROTO_FRAGMENT</source>
          <target state="translated">IPPROTO_FRAGMENT</target>
        </trans-unit>
        <trans-unit id="b1f700f840d8d2c839974070529b7b0f10e25ca7" translate="yes" xml:space="preserve">
          <source>IPPROTO_GGP</source>
          <target state="translated">IPPROTO_GGP</target>
        </trans-unit>
        <trans-unit id="0b28c4bc652eb608c073d1331bb20b40b1f783ef" translate="yes" xml:space="preserve">
          <source>IPPROTO_HELLO</source>
          <target state="translated">IPPROTO_HELLO</target>
        </trans-unit>
        <trans-unit id="2b61b97e7ca138348c9e62ef8e2f7eabb09e8908" translate="yes" xml:space="preserve">
          <source>IPPROTO_HOPOPTS</source>
          <target state="translated">IPPROTO_HOPOPTS</target>
        </trans-unit>
        <trans-unit id="55ee62f3507f8be044f1ed6ec2604dc6cd545fab" translate="yes" xml:space="preserve">
          <source>IPPROTO_ICMP</source>
          <target state="translated">IPPROTO_ICMP</target>
        </trans-unit>
        <trans-unit id="5424a50b3651794c52c6f0101a2875b54493e9c0" translate="yes" xml:space="preserve">
          <source>IPPROTO_ICMPV6</source>
          <target state="translated">IPPROTO_ICMPV6</target>
        </trans-unit>
        <trans-unit id="009c7f3834755a2ae37796cf265764f10f629994" translate="yes" xml:space="preserve">
          <source>IPPROTO_IDP</source>
          <target state="translated">IPPROTO_IDP</target>
        </trans-unit>
        <trans-unit id="5b65c67b786b1957937cf31f60169afe42f5ff26" translate="yes" xml:space="preserve">
          <source>IPPROTO_IGMP</source>
          <target state="translated">IPPROTO_IGMP</target>
        </trans-unit>
        <trans-unit id="876d4a1162342bd66c67d660b2b63d3ace451f84" translate="yes" xml:space="preserve">
          <source>IPPROTO_IP</source>
          <target state="translated">IPPROTO_IP</target>
        </trans-unit>
        <trans-unit id="7b9c27baec0b3eb2bf9d455a04264a8f5926203f" translate="yes" xml:space="preserve">
          <source>IPPROTO_IPV6</source>
          <target state="translated">IPPROTO_IPV6</target>
        </trans-unit>
        <trans-unit id="d3c291f07b9cd894471a19f951e6755468476aca" translate="yes" xml:space="preserve">
          <source>IPPROTO_MAX</source>
          <target state="translated">IPPROTO_MAX</target>
        </trans-unit>
        <trans-unit id="3f26a8281a71674b070a4e9232ae807c011d3b7f" translate="yes" xml:space="preserve">
          <source>IPPROTO_ND</source>
          <target state="translated">IPPROTO_ND</target>
        </trans-unit>
        <trans-unit id="c150471366b6c77ef2407970a627e51030e4d707" translate="yes" xml:space="preserve">
          <source>IPPROTO_NONE</source>
          <target state="translated">IPPROTO_NONE</target>
        </trans-unit>
        <trans-unit id="186460a2436912eb8f2257a93a0c947450f6f40e" translate="yes" xml:space="preserve">
          <source>IPPROTO_PUP</source>
          <target state="translated">IPPROTO_PUP</target>
        </trans-unit>
        <trans-unit id="248bf36dabc2bf660bb5bf62933df51c23eb11d7" translate="yes" xml:space="preserve">
          <source>IPPROTO_RAW</source>
          <target state="translated">IPPROTO_RAW</target>
        </trans-unit>
        <trans-unit id="eca4fcd20d2835e91f2ddeef0d4a445d8535cf3f" translate="yes" xml:space="preserve">
          <source>IPPROTO_ROUTING</source>
          <target state="translated">IPPROTO_ROUTING</target>
        </trans-unit>
        <trans-unit id="26e622aa343b746b78dd8d2c296d393795aee78f" translate="yes" xml:space="preserve">
          <source>IPPROTO_TCP</source>
          <target state="translated">IPPROTO_TCP</target>
        </trans-unit>
        <trans-unit id="59cc617e94a43ac1be712ff2a7b469005eb42516" translate="yes" xml:space="preserve">
          <source>IPPROTO_TP</source>
          <target state="translated">IPPROTO_TP</target>
        </trans-unit>
        <trans-unit id="7e14fce7596ad2a7e88a673fb7bab6ccd335a1e6" translate="yes" xml:space="preserve">
          <source>IPPROTO_UDP</source>
          <target state="translated">IPPROTO_UDP</target>
        </trans-unit>
        <trans-unit id="4834bf591871a72bbbc471a0b8e20c94638d6925" translate="yes" xml:space="preserve">
          <source>IPPROTO_XTP</source>
          <target state="translated">IPPROTO_XTP</target>
        </trans-unit>
        <trans-unit id="f4f73036f2160743e22e15df55aaacea0c9c24bd" translate="yes" xml:space="preserve">
          <source>IPSocket</source>
          <target state="translated">IPSocket</target>
        </trans-unit>
        <trans-unit id="0b7ae4cebcdd9a5645535502332d395fec3ba435" translate="yes" xml:space="preserve">
          <source>IPSocket#addr</source>
          <target state="translated">IPSocket#addr</target>
        </trans-unit>
        <trans-unit id="80c78a6266a41ff18eface895e51159a1feaf583" translate="yes" xml:space="preserve">
          <source>IPSocket#inspect</source>
          <target state="translated">IPSocket#inspect</target>
        </trans-unit>
        <trans-unit id="cb881d9dfbdccf94d8167920c00650dbe214261c" translate="yes" xml:space="preserve">
          <source>IPSocket#peeraddr</source>
          <target state="translated">IPSocket#peeraddr</target>
        </trans-unit>
        <trans-unit id="72da571e2693110ebb15fb7c487e889c074b15b4" translate="yes" xml:space="preserve">
          <source>IPSocket#recvfrom</source>
          <target state="translated">IPSocket#recvfrom</target>
        </trans-unit>
        <trans-unit id="73f91a4e1dbf708f4bb5954c7b170108ca8a5a70" translate="yes" xml:space="preserve">
          <source>IPSocket::getaddress</source>
          <target state="translated">IPSocket::getaddress</target>
        </trans-unit>
        <trans-unit id="2f8918c6ce47986c6a50394d8cc40d34c34aec74" translate="yes" xml:space="preserve">
          <source>IPSocket::getaddress_orig</source>
          <target state="translated">IPSocket::getaddress_orig</target>
        </trans-unit>
        <trans-unit id="4c24e1cce08667cef6ad2f5d7261699759a087db" translate="yes" xml:space="preserve">
          <source>IPSocket::valid_v6?</source>
          <target state="translated">IPSocket::valid_v6?</target>
        </trans-unit>
        <trans-unit id="5f74d2cbf253eee028818ff0539343f1478e332c" translate="yes" xml:space="preserve">
          <source>IPV6_CHECKSUM</source>
          <target state="translated">IPV6_CHECKSUM</target>
        </trans-unit>
        <trans-unit id="403f002989381d74df3d7d2087ca395a2060c6c1" translate="yes" xml:space="preserve">
          <source>IPV6_DONTFRAG</source>
          <target state="translated">IPV6_DONTFRAG</target>
        </trans-unit>
        <trans-unit id="c1227a0002f48c163d6967b32402891a22b432cc" translate="yes" xml:space="preserve">
          <source>IPV6_DSTOPTS</source>
          <target state="translated">IPV6_DSTOPTS</target>
        </trans-unit>
        <trans-unit id="d72c099c08efac32302f521c84aa7ba6f7b5f808" translate="yes" xml:space="preserve">
          <source>IPV6_HOPLIMIT</source>
          <target state="translated">IPV6_HOPLIMIT</target>
        </trans-unit>
        <trans-unit id="33b63c7ae407d08edfb4509a1bbe5bff6685bb2a" translate="yes" xml:space="preserve">
          <source>IPV6_HOPOPTS</source>
          <target state="translated">IPV6_HOPOPTS</target>
        </trans-unit>
        <trans-unit id="6b9342cf19ae98907b03a776ba83794ea813a916" translate="yes" xml:space="preserve">
          <source>IPV6_JOIN_GROUP</source>
          <target state="translated">IPV6_JOIN_GROUP</target>
        </trans-unit>
        <trans-unit id="f04178a0249209283a705c1e16f8a82ab2df9dc0" translate="yes" xml:space="preserve">
          <source>IPV6_LEAVE_GROUP</source>
          <target state="translated">IPV6_LEAVE_GROUP</target>
        </trans-unit>
        <trans-unit id="8b54f63c272abff8d613c6d2dc85e48fa3aa3515" translate="yes" xml:space="preserve">
          <source>IPV6_MULTICAST_HOPS</source>
          <target state="translated">IPV6_MULTICAST_HOPS</target>
        </trans-unit>
        <trans-unit id="52f8b0ef52ec43b0127df3208214a3104bc87a21" translate="yes" xml:space="preserve">
          <source>IPV6_MULTICAST_IF</source>
          <target state="translated">IPV6_MULTICAST_IF</target>
        </trans-unit>
        <trans-unit id="958550b970b1fbb09ce3310317bc8327c7ecd58c" translate="yes" xml:space="preserve">
          <source>IPV6_MULTICAST_LOOP</source>
          <target state="translated">IPV6_MULTICAST_LOOP</target>
        </trans-unit>
        <trans-unit id="de5fe7a717564e746c6621ac6ce4cbe96d5e8108" translate="yes" xml:space="preserve">
          <source>IPV6_NEXTHOP</source>
          <target state="translated">IPV6_NEXTHOP</target>
        </trans-unit>
        <trans-unit id="fb100655279ba8e418f8314c6e7b2e38ca224387" translate="yes" xml:space="preserve">
          <source>IPV6_PATHMTU</source>
          <target state="translated">IPV6_PATHMTU</target>
        </trans-unit>
        <trans-unit id="cfa77f84b9af04ee28205776aa715ae5e13fec1a" translate="yes" xml:space="preserve">
          <source>IPV6_PKTINFO</source>
          <target state="translated">IPV6_PKTINFO</target>
        </trans-unit>
        <trans-unit id="74688a92993f758eee4886536bbdb34bd7c787ea" translate="yes" xml:space="preserve">
          <source>IPV6_PKTINFO is defined by RFC 3542.</source>
          <target state="translated">IPV6_PKTINFO는 RFC 3542에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0a34dfe7b333849c8cc9ab5fff0bd90026fee9c6" translate="yes" xml:space="preserve">
          <source>IPV6_RECVDSTOPTS</source>
          <target state="translated">IPV6_RECVDSTOPTS</target>
        </trans-unit>
        <trans-unit id="12f371f15639a3a6358cf5b10180ffe01f900035" translate="yes" xml:space="preserve">
          <source>IPV6_RECVHOPLIMIT</source>
          <target state="translated">IPV6_RECVHOPLIMIT</target>
        </trans-unit>
        <trans-unit id="b03ed28e039d1b7ba0d2fefdbe912f1978986cf3" translate="yes" xml:space="preserve">
          <source>IPV6_RECVHOPOPTS</source>
          <target state="translated">IPV6_RECVHOPOPTS</target>
        </trans-unit>
        <trans-unit id="b34b9d2a43338e3b5890eeb2d338232cd485341f" translate="yes" xml:space="preserve">
          <source>IPV6_RECVPATHMTU</source>
          <target state="translated">IPV6_RECVPATHMTU</target>
        </trans-unit>
        <trans-unit id="fd0a04f554282887016641aecf80b9df0d6c84d7" translate="yes" xml:space="preserve">
          <source>IPV6_RECVPKTINFO</source>
          <target state="translated">IPV6_RECVPKTINFO</target>
        </trans-unit>
        <trans-unit id="90dac6c04353cf3a4b8ee93a00e16b5e7597dbec" translate="yes" xml:space="preserve">
          <source>IPV6_RECVRTHDR</source>
          <target state="translated">IPV6_RECVRTHDR</target>
        </trans-unit>
        <trans-unit id="6aaf045a391699d1e07cd69684eafa2986df45a4" translate="yes" xml:space="preserve">
          <source>IPV6_RECVTCLASS</source>
          <target state="translated">IPV6_RECVTCLASS</target>
        </trans-unit>
        <trans-unit id="1582cbd20ce469bb7d471a14583a90e960a08633" translate="yes" xml:space="preserve">
          <source>IPV6_RTHDR</source>
          <target state="translated">IPV6_RTHDR</target>
        </trans-unit>
        <trans-unit id="7c024c24e004eaa2aa688af844f24afed45b9de6" translate="yes" xml:space="preserve">
          <source>IPV6_RTHDRDSTOPTS</source>
          <target state="translated">IPV6_RTHDRDSTOPTS</target>
        </trans-unit>
        <trans-unit id="1f0c6916c8acf1aba61055faf95156f6eced3b03" translate="yes" xml:space="preserve">
          <source>IPV6_RTHDR_TYPE_0</source>
          <target state="translated">IPV6_RTHDR_TYPE_0</target>
        </trans-unit>
        <trans-unit id="6f42b29cd6a91753709fba107400035a70eac139" translate="yes" xml:space="preserve">
          <source>IPV6_TCLASS</source>
          <target state="translated">IPV6_TCLASS</target>
        </trans-unit>
        <trans-unit id="82652c17c80e815986258af751f63ea794f1bb97" translate="yes" xml:space="preserve">
          <source>IPV6_UNICAST_HOPS</source>
          <target state="translated">IPV6_UNICAST_HOPS</target>
        </trans-unit>
        <trans-unit id="a41c22f19e1985d72007678da8e7e3bbc504e6c6" translate="yes" xml:space="preserve">
          <source>IPV6_USE_MIN_MTU</source>
          <target state="translated">IPV6_USE_MIN_MTU</target>
        </trans-unit>
        <trans-unit id="e3b1c8ac411dd63b26a3f1a12b4901a1b8b3e5d8" translate="yes" xml:space="preserve">
          <source>IPV6_V6ONLY</source>
          <target state="translated">IPV6_V6ONLY</target>
        </trans-unit>
        <trans-unit id="307d3ce55efd4e1afd9ecddac0ebd97c885d97fc" translate="yes" xml:space="preserve">
          <source>IPX protocol</source>
          <target state="translated">IPX 프로토콜</target>
        </trans-unit>
        <trans-unit id="61a94ef4aaf343c23f4479139227c045738ad166" translate="yes" xml:space="preserve">
          <source>IPX socket options</source>
          <target state="translated">IPX 소켓 옵션</target>
        </trans-unit>
        <trans-unit id="9ebd9e7170025f17b48c705c91724a4b1941d760" translate="yes" xml:space="preserve">
          <source>IPX_TYPE</source>
          <target state="translated">IPX_TYPE</target>
        </trans-unit>
        <trans-unit id="e2a7b949f8f19123ec1159d3b35fb88278877128" translate="yes" xml:space="preserve">
          <source>IP_ADD_MEMBERSHIP</source>
          <target state="translated">IP_ADD_MEMBERSHIP</target>
        </trans-unit>
        <trans-unit id="22959f20a7ab7af625b7871f9b3146e05a101874" translate="yes" xml:space="preserve">
          <source>IP_ADD_SOURCE_MEMBERSHIP</source>
          <target state="translated">IP_ADD_SOURCE_MEMBERSHIP</target>
        </trans-unit>
        <trans-unit id="26bf4d2c269b62ae9ccd52801ccdc870924b827a" translate="yes" xml:space="preserve">
          <source>IP_BLOCK_SOURCE</source>
          <target state="translated">IP_BLOCK_SOURCE</target>
        </trans-unit>
        <trans-unit id="89757144e26f1ccc800a10b130d90e67cfb2fca7" translate="yes" xml:space="preserve">
          <source>IP_DEFAULT_MULTICAST_LOOP</source>
          <target state="translated">IP_DEFAULT_MULTICAST_LOOP</target>
        </trans-unit>
        <trans-unit id="a3194cb41bcd96e4e4140606f1230500107dbb57" translate="yes" xml:space="preserve">
          <source>IP_DEFAULT_MULTICAST_TTL</source>
          <target state="translated">IP_DEFAULT_MULTICAST_TTL</target>
        </trans-unit>
        <trans-unit id="ce3199e48f0969b2d4d7fa302146ed6ad5fc964f" translate="yes" xml:space="preserve">
          <source>IP_DONTFRAG</source>
          <target state="translated">IP_DONTFRAG</target>
        </trans-unit>
        <trans-unit id="877f7a1798f94aa3b45cd304b8afb98f67271c9a" translate="yes" xml:space="preserve">
          <source>IP_DROP_MEMBERSHIP</source>
          <target state="translated">IP_DROP_MEMBERSHIP</target>
        </trans-unit>
        <trans-unit id="31e5c72f4a7d97f59069eb943d7eb5bdb0260273" translate="yes" xml:space="preserve">
          <source>IP_DROP_SOURCE_MEMBERSHIP</source>
          <target state="translated">IP_DROP_SOURCE_MEMBERSHIP</target>
        </trans-unit>
        <trans-unit id="d930d42db44534d499d142a93d967ee486cc47e4" translate="yes" xml:space="preserve">
          <source>IP_FREEBIND</source>
          <target state="translated">IP_FREEBIND</target>
        </trans-unit>
        <trans-unit id="efb53d24e48c96452f6015ef808a47a263863189" translate="yes" xml:space="preserve">
          <source>IP_HDRINCL</source>
          <target state="translated">IP_HDRINCL</target>
        </trans-unit>
        <trans-unit id="1ad264f8030381e17689190cdf4cd286d13a260f" translate="yes" xml:space="preserve">
          <source>IP_IPSEC_POLICY</source>
          <target state="translated">IP_IPSEC_POLICY</target>
        </trans-unit>
        <trans-unit id="7f6fb695ef482f086580d6bd4daa3ca4ede87cd3" translate="yes" xml:space="preserve">
          <source>IP_MAX_MEMBERSHIPS</source>
          <target state="translated">IP_MAX_MEMBERSHIPS</target>
        </trans-unit>
        <trans-unit id="9b49699900845dcb23cca820e309fd3b0e6304f3" translate="yes" xml:space="preserve">
          <source>IP_MINTTL</source>
          <target state="translated">IP_MINTTL</target>
        </trans-unit>
        <trans-unit id="7343635cd63b5a11230adfa921cf780df3779849" translate="yes" xml:space="preserve">
          <source>IP_MSFILTER</source>
          <target state="translated">IP_MSFILTER</target>
        </trans-unit>
        <trans-unit id="3a6306939b8c01dac3766c98bcaf19e851516d15" translate="yes" xml:space="preserve">
          <source>IP_MTU</source>
          <target state="translated">IP_MTU</target>
        </trans-unit>
        <trans-unit id="64638930669637ef4a050f90c86e1c256893f8d9" translate="yes" xml:space="preserve">
          <source>IP_MTU_DISCOVER</source>
          <target state="translated">IP_MTU_DISCOVER</target>
        </trans-unit>
        <trans-unit id="1b8026395f04762b1438a38c8f2b71b9b419d2e2" translate="yes" xml:space="preserve">
          <source>IP_MULTICAST_IF</source>
          <target state="translated">IP_MULTICAST_IF</target>
        </trans-unit>
        <trans-unit id="cd8b76c49d3e6aa8437e9abbc6623aea0d5c9f94" translate="yes" xml:space="preserve">
          <source>IP_MULTICAST_LOOP</source>
          <target state="translated">IP_MULTICAST_LOOP</target>
        </trans-unit>
        <trans-unit id="615238378d5471003eda715eb5e25e830effc5b0" translate="yes" xml:space="preserve">
          <source>IP_MULTICAST_TTL</source>
          <target state="translated">IP_MULTICAST_TTL</target>
        </trans-unit>
        <trans-unit id="5037e6d3d10900fbbd81c233792c2c96445fef80" translate="yes" xml:space="preserve">
          <source>IP_ONESBCAST</source>
          <target state="translated">IP_ONESBCAST</target>
        </trans-unit>
        <trans-unit id="fc83856ffe173993bca9317a88ab5aa443c73a62" translate="yes" xml:space="preserve">
          <source>IP_OPTIONS</source>
          <target state="translated">IP_OPTIONS</target>
        </trans-unit>
        <trans-unit id="d525f6af5dd0b126bfc07be17537ebf19f28d73d" translate="yes" xml:space="preserve">
          <source>IP_PASSSEC</source>
          <target state="translated">IP_PASSSEC</target>
        </trans-unit>
        <trans-unit id="a43bb766691f8a59289ffced56ddc8c33d2b6cba" translate="yes" xml:space="preserve">
          <source>IP_PKTINFO</source>
          <target state="translated">IP_PKTINFO</target>
        </trans-unit>
        <trans-unit id="4f00afd868b8355bae6fceded29c37b96795f8b6" translate="yes" xml:space="preserve">
          <source>IP_PKTINFO is not standard.</source>
          <target state="translated">IP_PKTINFO는 표준이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="afcced49b9949040d614d8d06009bc2e16f37723" translate="yes" xml:space="preserve">
          <source>IP_PKTOPTIONS</source>
          <target state="translated">IP_PKTOPTIONS</target>
        </trans-unit>
        <trans-unit id="6613fa6e5d975f1890fd0b2e84e3648bf64d8613" translate="yes" xml:space="preserve">
          <source>IP_PMTUDISC_DO</source>
          <target state="translated">IP_PMTUDISC_DO</target>
        </trans-unit>
        <trans-unit id="ad9fa4a2734dc4c58b40cc50d2955f80bd51d838" translate="yes" xml:space="preserve">
          <source>IP_PMTUDISC_DONT</source>
          <target state="translated">IP_PMTUDISC_DONT</target>
        </trans-unit>
        <trans-unit id="3b795be4e9b21544e5fe9f6d18a29266740cd472" translate="yes" xml:space="preserve">
          <source>IP_PMTUDISC_WANT</source>
          <target state="translated">IP_PMTUDISC_WANT</target>
        </trans-unit>
        <trans-unit id="ce47c443836152d8a596b33d35b774f57507fc27" translate="yes" xml:space="preserve">
          <source>IP_PORTRANGE</source>
          <target state="translated">IP_PORTRANGE</target>
        </trans-unit>
        <trans-unit id="bb7b77553863fbf16b6d74be3ea3d14112104d46" translate="yes" xml:space="preserve">
          <source>IP_RECVDSTADDR</source>
          <target state="translated">IP_RECVDSTADDR</target>
        </trans-unit>
        <trans-unit id="6d29b8adec7fe08a76cdba15f7a04884f1bc8a20" translate="yes" xml:space="preserve">
          <source>IP_RECVERR</source>
          <target state="translated">IP_RECVERR</target>
        </trans-unit>
        <trans-unit id="335073553a297b9ff732d5f6338d2b4d8f34b7f1" translate="yes" xml:space="preserve">
          <source>IP_RECVIF</source>
          <target state="translated">IP_RECVIF</target>
        </trans-unit>
        <trans-unit id="9e94fbdab7203f155e31aae71145381dd2b5a5a7" translate="yes" xml:space="preserve">
          <source>IP_RECVOPTS</source>
          <target state="translated">IP_RECVOPTS</target>
        </trans-unit>
        <trans-unit id="9f17f2ba46dc2327513f54f0d18c2dba90a776a8" translate="yes" xml:space="preserve">
          <source>IP_RECVRETOPTS</source>
          <target state="translated">IP_RECVRETOPTS</target>
        </trans-unit>
        <trans-unit id="cb92eee84d7a7e482824bc774833e50205f91b26" translate="yes" xml:space="preserve">
          <source>IP_RECVSLLA</source>
          <target state="translated">IP_RECVSLLA</target>
        </trans-unit>
        <trans-unit id="624e9c99997f3ef474a61fd9a1a6e2ccfc518120" translate="yes" xml:space="preserve">
          <source>IP_RECVTOS</source>
          <target state="translated">IP_RECVTOS</target>
        </trans-unit>
        <trans-unit id="83bfb2fd94d5c36a96165cf9fff9da7f31cc708b" translate="yes" xml:space="preserve">
          <source>IP_RECVTTL</source>
          <target state="translated">IP_RECVTTL</target>
        </trans-unit>
        <trans-unit id="d7f82413bff92f7167837f48e3156edd50ba457c" translate="yes" xml:space="preserve">
          <source>IP_RETOPTS</source>
          <target state="translated">IP_RETOPTS</target>
        </trans-unit>
        <trans-unit id="0cb492e33e0bff580f440023eb8eaecaa8ee3b9a" translate="yes" xml:space="preserve">
          <source>IP_ROUTER_ALERT</source>
          <target state="translated">IP_ROUTER_ALERT</target>
        </trans-unit>
        <trans-unit id="1c2e515874bd88f466d1ef812cd90cebd124bb09" translate="yes" xml:space="preserve">
          <source>IP_SENDSRCADDR</source>
          <target state="translated">IP_SENDSRCADDR</target>
        </trans-unit>
        <trans-unit id="28d8854c7135c0abf51fe6ca3da2d4cc5cfa17ea" translate="yes" xml:space="preserve">
          <source>IP_TOS</source>
          <target state="translated">IP_TOS</target>
        </trans-unit>
        <trans-unit id="99e3217002aa136bdb6d265d872d61e07646a566" translate="yes" xml:space="preserve">
          <source>IP_TRANSPARENT</source>
          <target state="translated">IP_TRANSPARENT</target>
        </trans-unit>
        <trans-unit id="e36a59a26d10c5476f4368a0bcf34e9bdf69aab0" translate="yes" xml:space="preserve">
          <source>IP_TTL</source>
          <target state="translated">IP_TTL</target>
        </trans-unit>
        <trans-unit id="477de2619e8dae48d5825bd1c90fb04ce51aae66" translate="yes" xml:space="preserve">
          <source>IP_UNBLOCK_SOURCE</source>
          <target state="translated">IP_UNBLOCK_SOURCE</target>
        </trans-unit>
        <trans-unit id="5ddb16a24694732d034f3fa45eac3730ab32697f" translate="yes" xml:space="preserve">
          <source>IP_XFRM_POLICY</source>
          <target state="translated">IP_XFRM_POLICY</target>
        </trans-unit>
        <trans-unit id="89d522ff54c0d21b0193aa5451e093f740d429e7" translate="yes" xml:space="preserve">
          <source>IPsec security policy</source>
          <target state="translated">IPsec 보안 정책</target>
        </trans-unit>
        <trans-unit id="0c3218f7ba9fe72ca71c44667357da04ad936b0e" translate="yes" xml:space="preserve">
          <source>IPv4 protocol</source>
          <target state="translated">IPv4 프로토콜</target>
        </trans-unit>
        <trans-unit id="d6c32e3b359dfbf5a89d1255c63b70715cdef400" translate="yes" xml:space="preserve">
          <source>IPv4 unspecified address (0.0.0.0) is replaced by IPv4 loopback address (127.0.0.1).</source>
          <target state="translated">IPv4 지정되지 않은 주소 (0.0.0.0)는 IPv4 루프백 주소 (127.0.0.1)로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="9460a1cd5868fd4e14219c8d401b30f6273058b3" translate="yes" xml:space="preserve">
          <source>IPv4#address</source>
          <target state="translated">IPv4#address</target>
        </trans-unit>
        <trans-unit id="6cedd66fc6549a29cd69e42e43584b245a0e9b86" translate="yes" xml:space="preserve">
          <source>IPv4#to_name</source>
          <target state="translated">IPv4#to_name</target>
        </trans-unit>
        <trans-unit id="67a2af26621643cb27d3d2ac719563047c18f32e" translate="yes" xml:space="preserve">
          <source>IPv4::create</source>
          <target state="translated">IPv4::create</target>
        </trans-unit>
        <trans-unit id="3b4ce30d5ac89081c42416076f910d17e1b466cd" translate="yes" xml:space="preserve">
          <source>IPv6 protocol</source>
          <target state="translated">IPv6 프로토콜</target>
        </trans-unit>
        <trans-unit id="70de0d3055078ae6f1780c818a81afc42f8ce101" translate="yes" xml:space="preserve">
          <source>IPv6 unspecified address (::) is replaced by IPv6 loopback address (::1).</source>
          <target state="translated">IPv6 지정되지 않은 주소 (: :)는 IPv6 루프백 주소 (:: 1)로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="29eb811fab88574b647a3fc50ca1819b77e5fd19" translate="yes" xml:space="preserve">
          <source>IPv6#address</source>
          <target state="translated">IPv6#address</target>
        </trans-unit>
        <trans-unit id="44130cd8e6b5250f5c923b7f8ab4938cd0424f97" translate="yes" xml:space="preserve">
          <source>IPv6#to_name</source>
          <target state="translated">IPv6#to_name</target>
        </trans-unit>
        <trans-unit id="c52784594dd406e4098eadf79d69593149c33a46" translate="yes" xml:space="preserve">
          <source>IPv6::create</source>
          <target state="translated">IPv6::create</target>
        </trans-unit>
        <trans-unit id="2d99b50fe546136015405a42d0de5eb49bf6496e" translate="yes" xml:space="preserve">
          <source>ISATAP interface (RFC4214)</source>
          <target state="translated">ISATAP 인터페이스 (RFC4214)</target>
        </trans-unit>
        <trans-unit id="4a91bc65c0acea53c04f2e085ed2ce0433321406" translate="yes" xml:space="preserve">
          <source>ISO Open Systems Interconnection protocols</source>
          <target state="translated">ISO 개방 시스템 상호 연결 프로토콜</target>
        </trans-unit>
        <trans-unit id="62c81518f17dd45b5b862ca90107d39f2b89fb0a" translate="yes" xml:space="preserve">
          <source>ISO cnlp</source>
          <target state="translated">ISO cnlp</target>
        </trans-unit>
        <trans-unit id="fcd852a61e197053aeebe5db2620e729e05145ef" translate="yes" xml:space="preserve">
          <source>ISO transport protocol class 4</source>
          <target state="translated">ISO 전송 프로토콜 클래스 4</target>
        </trans-unit>
        <trans-unit id="50c8232b82ba3764a4a2a8f4801de058bd3c3cc9" translate="yes" xml:space="preserve">
          <source>ITALY</source>
          <target state="translated">ITALY</target>
        </trans-unit>
        <trans-unit id="e404d7acdfc6bfdec47a758388a91275cc2732ad" translate="yes" xml:space="preserve">
          <source>Identical in functionality to &lt;code&gt;:converters&lt;/code&gt; save that the conversions are only made to header rows. All built-in converters try to transcode headers to UTF-8 before converting. The conversion will fail if the data cannot be transcoded, leaving the header unchanged.</source>
          <target state="translated">&lt;code&gt;:converters&lt;/code&gt; 와 기능면에서 동일 하므로 변환은 헤더 행으로 만 이루어집니다. 모든 내장 변환기는 변환하기 전에 헤더를 UTF-8로 코드 변환하려고합니다. 데이터를 코드 변환 할 수없는 경우 변환이 실패하고 헤더는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ecca24f8538c54c364e32845dd8945726a8a8cba" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;csv#method-i-convert&quot;&gt;&lt;code&gt;CSV#convert()&lt;/code&gt;&lt;/a&gt;, but for header rows.</source>
          <target state="translated">&lt;a href=&quot;csv#method-i-convert&quot;&gt; &lt;code&gt;CSV#convert()&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 헤더 행입니다.</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="c74ad848db3629aa750af8a780280f95dc9a7596" translate="yes" xml:space="preserve">
          <source>Identifies ndbm library version.</source>
          <target state="translated">ndbm 라이브러리 버전을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="7f22a2ab0f6faac1b92cce2f32934d8ea04d9fdd" translate="yes" xml:space="preserve">
          <source>Identifies the type of &lt;em&gt;stat&lt;/em&gt;. The return string is one of: &amp;ldquo;&lt;code&gt;file&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;directory&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;characterSpecial&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;blockSpecial&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;fifo&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;link&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;socket&lt;/code&gt;'', or &amp;ldquo;&lt;code&gt;unknown&lt;/code&gt;''.</source>
          <target state="translated">&lt;em&gt;stat&lt;/em&gt; 유형을 식별합니다 . 반환 문자열은&amp;ldquo; &lt;code&gt;file&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;directory&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;characterSpecial&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;blockSpecial&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;fifo&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;link&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;socket&lt;/code&gt; &amp;rdquo;또는&amp;ldquo; &lt;code&gt;unknown&lt;/code&gt; &amp;rdquo;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="8181e7a1fe44279bdea49d464e75a1ec2320e41b" translate="yes" xml:space="preserve">
          <source>Identifies the type of the named file; the return string is one of &amp;ldquo;&lt;code&gt;file&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;directory&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;characterSpecial&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;blockSpecial&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;fifo&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;link&lt;/code&gt;'', &amp;ldquo;&lt;code&gt;socket&lt;/code&gt;'', or &amp;ldquo;&lt;code&gt;unknown&lt;/code&gt;''.</source>
          <target state="translated">명명 된 파일의 유형을 식별합니다. 반환 문자열은&amp;ldquo; &lt;code&gt;file&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;directory&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;characterSpecial&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;blockSpecial&lt;/code&gt; '',&amp;ldquo; &lt;code&gt;fifo&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;link&lt;/code&gt; &amp;rdquo;,&amp;ldquo; &lt;code&gt;socket&lt;/code&gt; &amp;rdquo;또는&amp;ldquo; &lt;code&gt;unknown&lt;/code&gt; &amp;rdquo;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="47339311edb597bec11ebfc1bd7f94f3b2cbaca7" translate="yes" xml:space="preserve">
          <source>Identify the response by signing the certificate key ID</source>
          <target state="translated">인증서 키 ID에 서명하여 응답을 식별하십시오.</target>
        </trans-unit>
        <trans-unit id="a4fbe2be7e47ca492cc4a9fc2c96bfbd222466d3" translate="yes" xml:space="preserve">
          <source>Idle &lt;a href=&quot;../../../../timeout&quot;&gt;&lt;code&gt;Timeout&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">유휴 &lt;a href=&quot;../../../../timeout&quot;&gt; &lt;code&gt;Timeout&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60f85c319edf8bcf9b3b8b26e39fc0290fc99ad0" translate="yes" xml:space="preserve">
          <source>Idle time before keepalive probes are sent (Linux 2.4, glibc 2.2)</source>
          <target state="translated">Keepalive 프로브가 전송되기 전에 유휴 시간 (Linux 2.4, glibc 2.2)</target>
        </trans-unit>
        <trans-unit id="5ce2145279efc71db2dcbc6c94feafbe2a5e9273" translate="yes" xml:space="preserve">
          <source>Idle timeout detection is performed by creating a connection then performing a HEAD request in a loop until the connection terminates waiting one additional second per loop.</source>
          <target state="translated">유휴 시간 종료 감지는 연결을 작성한 후 연결이 루프 당 1 초의 추가 대기를 종료 할 때까지 루프에서 HEAD 요청을 수행하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="764bfc99a65a26e727b103ac4be870797410fbb7" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;BOM|UTF-8&amp;rdquo;, &amp;ldquo;BOM|UTF-16LE&amp;rdquo; or &amp;ldquo;BOM|UTF16-BE&amp;rdquo; are used, Ruby checks for a Unicode BOM in the input document to help determine the encoding. For UTF-16 encodings the file open mode must be binary. When present, the BOM is stripped and the external encoding from the BOM is used. When the BOM is missing the given Unicode encoding is used as &lt;code&gt;ext_enc&lt;/code&gt;. (The BOM-set encoding option is case insensitive, so &amp;ldquo;bom|utf-8&amp;rdquo; is also valid.)</source>
          <target state="translated">&quot;BOM | UTF-8&quot;, &quot;BOM | UTF-16LE&quot;또는 &quot;BOM | UTF16-BE&quot;를 사용하는 경우 Ruby는 입력 문서에서 유니 코드 BOM을 검사하여 인코딩을 결정합니다. UTF-16 인코딩의 경우 파일 열기 모드는 이진이어야합니다. 존재하면 BOM이 제거되고 BOM의 외부 인코딩이 사용됩니다. BOM이 누락되면 제공된 유니 코드 인코딩이 &lt;code&gt;ext_enc&lt;/code&gt; 로 사용됩니다 . BOM 세트 인코딩 옵션은 대소 문자를 구분하지 않으므로 &quot;bom | utf-8&quot;도 유효합니다.</target>
        </trans-unit>
        <trans-unit id="b6ef6147ce3ecdaafa6c012d8dd50780da3e9b1b" translate="yes" xml:space="preserve">
          <source>If :content_length_proc option is specified, the option value procedure is called before actual transfer is started. It takes one argument, which is expected content length in bytes.</source>
          <target state="translated">: content_length_proc 옵션이 지정되면 실제 전송이 시작되기 전에 옵션 값 프로 시저가 호출됩니다. 콘텐츠 길이는 바이트 단위로 예상되는 하나의 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="da4109c4935e28f0d45dbc542921a33cff9a3758" translate="yes" xml:space="preserve">
          <source>If :http_basic_authentication is specified, the value should be an array which contains 2 strings: username and password. It is used for HTTP Basic authentication defined by RFC 2617.</source>
          <target state="translated">: http_basic_authentication을 지정하면 값은 사용자 이름과 비밀번호라는 두 개의 문자열을 포함하는 배열이어야합니다. RFC 2617에 의해 정의 된 HTTP 기본 인증에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9a3b193b026e7c272e2f0d7be8a52861843ca2d1" translate="yes" xml:space="preserve">
          <source>If :progress_proc option is specified, the proc is called with one argument each time when `open' gets content fragment from network. The argument &lt;code&gt;size&lt;/code&gt; is the accumulated transferred size in bytes.</source>
          <target state="translated">: progress_proc 옵션이 지정되면`open '이 네트워크에서 컨텐츠 조각을 가져올 때마다 proc가 하나의 인수와 함께 호출됩니다. 인수 &lt;code&gt;size&lt;/code&gt; 는 누적 전송 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="d88a4d94ea5658b2a4a459a0c02181e54d47e2a2" translate="yes" xml:space="preserve">
          <source>If :proxy and :proxy_http_basic_authentication is specified, &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">: proxy 및 : proxy_http_basic_authentication을 지정하면 &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6479c9ccb37b444f87b87a7b6f17ca89717c6528" translate="yes" xml:space="preserve">
          <source>If :proxy option is specified, the value should be &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, boolean or nil.</source>
          <target state="translated">: proxy 옵션이 지정되면 값은 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; , boolean 또는 nil 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="85cf9566d0209378dd6cc47b94b75d188a2c6a23" translate="yes" xml:space="preserve">
          <source>If :proxy option is specified, the value should be an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with 3 elements. It should contain a proxy &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, a proxy user name and a proxy password. The proxy &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; should be a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; or nil. The proxy user name and password should be a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">: proxy 옵션이 지정되면 값은 3 개의 요소 가있는 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 이어야합니다 . 프록시 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; , 프록시 사용자 이름 및 프록시 비밀번호를 포함해야합니다 . 프록시 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 또는 nil 이어야합니다 . 프록시 사용자 이름과 비밀번호는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="3810668241f2e027bfce07ef4fd61a99a00e7ece" translate="yes" xml:space="preserve">
          <source>If :scm_rights value is neither nil nor false, application expects SCM_RIGHTS control message. In this case, recvmsg creates &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects for each file descriptors for &lt;a href=&quot;socket/ancillarydata#method-i-unix_rights&quot;&gt;&lt;code&gt;Socket::AncillaryData#unix_rights&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">: scm_rights 값이 nil 또는 false가 아닌 경우 응용 프로그램은 SCM_RIGHTS 제어 메시지를 예상합니다. 이 경우 recvmsg 는 &lt;a href=&quot;socket/ancillarydata#method-i-unix_rights&quot;&gt; &lt;code&gt;Socket::AncillaryData#unix_rights&lt;/code&gt; &lt;/a&gt; 메소드의 각 파일 디스크립터에 대한 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 오브젝트를 작성 합니다 .</target>
        </trans-unit>
        <trans-unit id="83e2e92cacdf159346e1266af23dfd2d86110c7f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tymap&lt;/code&gt; is provided, &lt;code&gt;ty&lt;/code&gt; is expected to be the key, and the value will be the C type to be looked up.</source>
          <target state="translated">경우 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; &lt;code&gt;tymap&lt;/code&gt; 가 제공되고, &lt;code&gt;ty&lt;/code&gt; 열쇠가 될 것으로 예상되며, 값이 조회 할 수있는 C 유형이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="53244ba61b1c41022f1b931cee01ed4f508d3d66" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tymap&lt;/code&gt; is provided, the return value and the arguments from the &lt;code&gt;signature&lt;/code&gt; are expected to be keys, and the value will be the C type to be looked up.</source>
          <target state="translated">경우 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; &lt;code&gt;tymap&lt;/code&gt; 가 제공되고, 반환 값과의 인수 &lt;code&gt;signature&lt;/code&gt; 키가 될 것으로 예상되며, 값이 조회 할 수있는 C 유형이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="49d8d0f8d4b2986f46517aef78ba8e9db14e0cba" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object is preferred over the binary string, use &lt;a href=&quot;basicsocket#method-i-local_address&quot;&gt;&lt;code&gt;BasicSocket#local_address&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하면 &lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 객체가 바이너리 문자열보다 선호되고, 사용 &lt;a href=&quot;basicsocket#method-i-local_address&quot;&gt; &lt;code&gt;BasicSocket#local_address&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5258e1ce83dba14b4fd4410b9a8fa7136fe1d40" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object is preferred over the binary string, use &lt;a href=&quot;basicsocket#method-i-remote_address&quot;&gt;&lt;code&gt;BasicSocket#remote_address&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하면 &lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 객체가 바이너리 문자열보다 선호되고, 사용 &lt;a href=&quot;basicsocket#method-i-remote_address&quot;&gt; &lt;code&gt;BasicSocket#remote_address&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f12c6ab4e8416d29603457effdfa478eab05cc8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object is preferred, use &lt;a href=&quot;addrinfo#method-c-getaddrinfo&quot;&gt;&lt;code&gt;Addrinfo.getaddrinfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 오브젝트가 선호되는 경우 Addrinfo.getaddrinfo를 사용 &lt;a href=&quot;addrinfo#method-c-getaddrinfo&quot;&gt; &lt;code&gt;Addrinfo.getaddrinfo&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8209f8eff6a341bd71619070e507b8cc54f121f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object is preferred, use &lt;a href=&quot;addrinfo#method-i-getnameinfo&quot;&gt;&lt;code&gt;Addrinfo#getnameinfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하면 &lt;a href=&quot;addrinfo&quot;&gt; &lt;code&gt;Addrinfo&lt;/code&gt; &lt;/a&gt; 객체가 바람직하고, 사용 &lt;a href=&quot;addrinfo#method-i-getnameinfo&quot;&gt; &lt;code&gt;Addrinfo#getnameinfo&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bfaad2130e951727a0409e01df4fb10fef977c70" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;etc#method-c-getlogin&quot;&gt;&lt;code&gt;::getlogin&lt;/code&gt;&lt;/a&gt; fails, try &lt;a href=&quot;etc#method-c-getpwuid&quot;&gt;&lt;code&gt;::getpwuid&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;etc#method-c-getlogin&quot;&gt; &lt;code&gt;::getlogin&lt;/code&gt; &lt;/a&gt; 실패, 시도 &lt;a href=&quot;etc#method-c-getpwuid&quot;&gt; &lt;code&gt;::getpwuid&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f8970c1ac3f8b542c8b9666772c8bc2324122de" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; contains multibyte characters byte then &lt;code&gt;gets(1)&lt;/code&gt; returns character entirely:</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 에 멀티 바이트 문자 바이트가 포함되어 있으면 &lt;code&gt;gets(1)&lt;/code&gt; 은 문자를 완전히 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e884548a4f1be6a36aa7476bfe774bef60f55ee3" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;io#method-c-pipe&quot;&gt;&lt;code&gt;IO.pipe&lt;/code&gt;&lt;/a&gt; is used instead of &lt;a href=&quot;pty#method-c-open&quot;&gt;&lt;code&gt;PTY.open&lt;/code&gt;&lt;/a&gt;, this code deadlocks because factor's stdout is fully buffered.</source>
          <target state="translated">&lt;a href=&quot;pty#method-c-open&quot;&gt; &lt;code&gt;PTY.open&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;io#method-c-pipe&quot;&gt; &lt;code&gt;IO.pipe&lt;/code&gt; &lt;/a&gt; 를 사용하는 경우 factor의 stdout이 완전히 버퍼링 되므로이 코드 교착 상태가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf6c1544283c6bf459863c30d439272d636dfbbd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;sslsocket#attribute-i-sync_close&quot;&gt;&lt;code&gt;sync_close&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;, the underlying &lt;a href=&quot;../../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; is also closed.</source>
          <target state="translated">경우 &lt;a href=&quot;sslsocket#attribute-i-sync_close&quot;&gt; &lt;code&gt;sync_close&lt;/code&gt; 가&lt;/a&gt; 설정되어 &lt;code&gt;true&lt;/code&gt; , 기본 &lt;a href=&quot;../../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; 는&lt;/a&gt; 또한 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="4f345a855d4033aa9e251ea6fae7c0a02c0a86ec" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt; cannot find a unique filename within a limited number of tries, then it will raise an exception.</source>
          <target state="translated">경우 &lt;a href=&quot;tempfile#method-c-new&quot;&gt; &lt;code&gt;Tempfile.new&lt;/code&gt; 이&lt;/a&gt; 시도 제한된 수의 내에서 고유 한 파일 이름을 찾을 수 없습니다, 그것은 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a46a34866ac7d6282b05138d1c5854f67a7cd501" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;.*&lt;/code&gt; is grouped atomically, it refuses to backtrack &lt;em&gt;Quote&amp;ldquo;&lt;/em&gt;, even though this means that the overall match fails</source>
          <target state="translated">경우 &lt;code&gt;.*&lt;/code&gt; 원자 그룹화, 그것을 역 추적 거부 &lt;em&gt;&quot;견적&lt;/em&gt; 전체 일치에 실패 할 경우에도이 방법하지만,</target>
        </trans-unit>
        <trans-unit id="93590532c27cb0f529c6b732bb672c5884a4409a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;em&gt;pattern&lt;/em&gt; === &lt;em&gt;elt&lt;/em&gt;&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; or the block returns &lt;code&gt;true&lt;/code&gt; for the element, the element is beginning of a chunk.</source>
          <target state="translated">만약 &lt;code&gt;&lt;em&gt;pattern&lt;/em&gt; === &lt;em&gt;elt&lt;/em&gt;&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; 또는 블록 반환 &lt;code&gt;true&lt;/code&gt; 요소의이 요소가 청크의 시작.</target>
        </trans-unit>
        <trans-unit id="38849192d0e92c0bc2bf12f4ba9b886dc317f189" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;em&gt;pattern&lt;/em&gt; === &lt;em&gt;elt&lt;/em&gt;&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; or the block returns &lt;code&gt;true&lt;/code&gt; for the element, the element is end of a chunk.</source>
          <target state="translated">경우 &lt;code&gt;&lt;em&gt;pattern&lt;/em&gt; === &lt;em&gt;elt&lt;/em&gt;&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; 또는 블록 반환 &lt;code&gt;true&lt;/code&gt; 요소를 들어, 요소는 청크의 끝입니다.</target>
        </trans-unit>
        <trans-unit id="8422dd206143db9ef7eb7ea68573edad7294c107" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;=~&lt;/code&gt; is used with a regexp literal with named captures, captured strings (or nil) is assigned to local variables named by the capture names.</source>
          <target state="translated">경우 &lt;code&gt;=~&lt;/code&gt; 라는 이름의 캡처와 정규 표현식 리터럴로 사용되며, 촬영 된 문자열 (또는 전무)은 캡처 이름으로 명명 된 지역 변수에 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="a38c85b9077b6c497e0692ec7a89a7f2b9978193" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARGF.set_encoding&lt;/code&gt; has been called with two encoding names, the second is returned. Otherwise, if &lt;code&gt;Encoding.default_external&lt;/code&gt; has been set, that value is returned. Failing that, if a default external encoding was specified on the command-line, that value is used. If the encoding is unknown, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;ARGF.set_encoding&lt;/code&gt; 이 두 인코딩 이름으로 불려왔다, 두 번째는 반환됩니다. 그렇지 않으면 &lt;code&gt;Encoding.default_external&lt;/code&gt; 이 설정된 경우 해당 값이 반환됩니다. 명령 행에 기본 외부 인코딩이 지정된 경우 해당 값이 사용되지 않습니다. 인코딩을 알 수 없으면 &lt;code&gt;nil&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="dba0213944ee9779925e7c939c2375cd483074ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARGV&lt;/code&gt; is empty, &lt;code&gt;ARGF&lt;/code&gt; acts as if it contained STDIN, i.e. the data piped to your script. For example:</source>
          <target state="translated">경우 &lt;code&gt;ARGV&lt;/code&gt; 는 비어 &lt;code&gt;ARGF&lt;/code&gt; 이 STDIN을 포함 것처럼, 즉 데이터가 스크립트에 파이프 역할을합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="22514d260c16a593d84d9bb0bd324af5a192d3e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ENV['REQUEST_METHOD'] == &quot;HEAD&quot;&lt;/code&gt;, then only the header is output (the content block is still required, but it is ignored).</source>
          <target state="translated">경우 &lt;code&gt;ENV['REQUEST_METHOD'] == &quot;HEAD&quot;&lt;/code&gt; 다음 헤더 만이 출력된다 (콘텐츠 블록은 여전히 필요하지만, 그것을 무시한다).</target>
        </trans-unit>
        <trans-unit id="ad61f8b90dd7489575f9edc137ae75cad4044a25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;HTTP_PROXY&lt;/code&gt; is set a proxy will be returned.</source>
          <target state="translated">경우 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 가 설정 한 프록시가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cf1df65138a8f178778f0efbb27344782a51a532" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;HTTP_PROXY_USER&lt;/code&gt; or &lt;code&gt;HTTP_PROXY_PASS&lt;/code&gt; are set the &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is given the indicated user and password unless HTTP_PROXY contains either of these in the &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;HTTP_PROXY_USER&lt;/code&gt; 또는 &lt;code&gt;HTTP_PROXY_PASS&lt;/code&gt; 이 설정되어있는 &lt;a href=&quot;../../../../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 는&lt;/a&gt; HTTP_PROXY이 중 하나에이의 포함하지 않는 한 지정된 사용자와 비밀번호를 부여 &lt;a href=&quot;../../../../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0e77a0731485f442eaaba2043ae979af230a595" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Hash::new&lt;/code&gt; was invoked with a block, return that block, otherwise return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;Hash::new&lt;/code&gt; 블록으로 호출, 그렇지 않으면 반환, 그 블록을 반환 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05498ff3b5f3686ba6bfc0eafb3affd587fb6a55" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;R&lt;/code&gt; is a class with a superclass, this is repeated with &lt;code&gt;R&lt;/code&gt;'s superclass until a method is found.</source>
          <target state="translated">경우 &lt;code&gt;R&lt;/code&gt; 은 슈퍼 클래스와 클래스이며,이 반복되는 &lt;code&gt;R&lt;/code&gt; 방법을 찾을 때까지의 슈퍼 클래스.</target>
        </trans-unit>
        <trans-unit id="90e4bf7e88abe6503ca11128dd7412bf297c2edd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;address&lt;/code&gt; is multicast address then &lt;code&gt;interface_address&lt;/code&gt; and &lt;code&gt;multicast_interface&lt;/code&gt; can be set as optional.</source>
          <target state="translated">경우 &lt;code&gt;address&lt;/code&gt; 멀티 캐스트 주소는 다음이다 &lt;code&gt;interface_address&lt;/code&gt; 및 &lt;code&gt;multicast_interface&lt;/code&gt; 는 옵션으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c66454cf6ef5831321dd9745125b8860dbf2233" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;addresses&lt;/code&gt; is omitted only the UDP broadcast address is used.</source>
          <target state="translated">경우 &lt;code&gt;addresses&lt;/code&gt; 만 생략 UDP 브로드 캐스트 주소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1a0e233f68da55400f50f7371146019c172de048" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;auth_type&lt;/code&gt; refers to an existing authenticator, it will be replaced by the new one.</source>
          <target state="translated">경우 &lt;code&gt;auth_type&lt;/code&gt; 기존의 인증을 의미, 새로운 속성으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="0966cfd94cef2147a00666a31afa64af250c1276" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, the precision of the result is &lt;code&gt;b&lt;/code&gt;'s precision of internal representation from platform. So, it's return value is platform dependent.</source>
          <target state="translated">경우 &lt;code&gt;b&lt;/code&gt; A는 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; 의&lt;/a&gt; 결과의 정밀도 &lt;code&gt;b&lt;/code&gt; 플랫폼으로부터 내부 표현의 정밀도. 따라서 반환 값은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="25704486a173b86e4bd9d3e3943921da2f0fa013" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, the precision of the result is Float::DIG+1.</source>
          <target state="translated">경우 &lt;code&gt;b&lt;/code&gt; A는 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; , 결과의 정밀도 부동이다 :: DIG + 1.</target>
        </trans-unit>
        <trans-unit id="9fbcb538c50db544b354822146ee5bcef27e2de5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;block&lt;/code&gt; is provided, yields the newly-opened &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; object to it, and automatically closes it at the end of the session.</source>
          <target state="translated">경우 &lt;code&gt;block&lt;/code&gt; 제공되고, 새롭게 개설 수득 &lt;a href=&quot;pop3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; 의&lt;/a&gt; 그것에 개체를 자동적으로 세션의 끝을 닫는다.</target>
        </trans-unit>
        <trans-unit id="9ef589fd5d37a940a18b03d78a07786ec04c18f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;broadcast_list&lt;/code&gt; contains a multicast address then multicast queries will be made using the given &lt;a href=&quot;ringfinger#attribute-i-multicast_hops&quot;&gt;&lt;code&gt;multicast_hops&lt;/code&gt;&lt;/a&gt; and multicast_interface.</source>
          <target state="translated">&lt;code&gt;broadcast_list&lt;/code&gt; 에 멀티 캐스트 주소가 포함되어 있으면 주어진 &lt;a href=&quot;ringfinger#attribute-i-multicast_hops&quot;&gt; &lt;code&gt;multicast_hops&lt;/code&gt; &lt;/a&gt; 및 multicast_interface를 사용하여 멀티 캐스트 쿼리가 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="c914df5ce6940858df91b6192d1b43ce3a591af1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;completer_quote_characters&lt;/code&gt; is not set, or if the user input doesn't contain one of the &lt;code&gt;completer_quote_characters&lt;/code&gt; or a ++ character, &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt; will not attempt to use this proc at all.</source>
          <target state="translated">경우 &lt;code&gt;completer_quote_characters&lt;/code&gt; 가 설정되지 않은 사용자 입력이 중 하나를 포함하지 않는 경우, 또는 &lt;code&gt;completer_quote_characters&lt;/code&gt; 또는 ++ 문자를, &lt;a href=&quot;readline&quot;&gt; &lt;code&gt;Readline&lt;/code&gt; 와는&lt;/a&gt; 전혀이 시저를 사용하려고하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bc7dc34c71d6fbbfe66e9f0d6897bfef9a394d21" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;config_or_acl&lt;/code&gt; is a hash, it is the configuration to use for this server. The following options are recognised:</source>
          <target state="translated">경우 &lt;code&gt;config_or_acl&lt;/code&gt; 이 해시가,이 서버에 사용할 수있는 구성이다. 다음과 같은 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="dad3e40f5f72b08a3c61f8e3f9a71dd3fd16294c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;config_or_acl&lt;/code&gt; is not a hash, but is not nil, it is assumed to be the access control list for this server. See the :tcp_acl option for more details.</source>
          <target state="translated">경우 &lt;code&gt;config_or_acl&lt;/code&gt; 이 해시 아니라, 전무 아니라,이 서버에 대한 액세스 제어 목록 것으로 간주됩니다. 자세한 내용은 : tcp_acl 옵션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fb89728ccdd7756cc7e0c229fda7374ccccbbfe5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;consider_symlink&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then a more conservative algorithm is used to avoid breaking symbolic linkages. This may retain more &lt;code&gt;..&lt;/code&gt; entries than absolutely necessary, but without accessing the filesystem, this can't be avoided.</source>
          <target state="translated">경우 &lt;code&gt;consider_symlink&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; , 다음 보수적 인 알고리즘을 파괴 상징적 인 연계를 방지하기 위해 사용된다. 이것은 절대적으로 필요한 것보다 많은 &lt;code&gt;..&lt;/code&gt; 항목을 보유 할 수 있지만 파일 시스템에 액세스하지 않으면 피할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="38d46c40ec3e7cae41564e5b043187866529319f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;count&lt;/code&gt; is negative then it rotates in the opposite direction, starting from the end of &lt;code&gt;self&lt;/code&gt; where &lt;code&gt;-1&lt;/code&gt; is the last element.</source>
          <target state="translated">경우에 &lt;code&gt;count&lt;/code&gt; 네거티브 그것은의 끝에서 시작하여 반대 방향으로 회전 &lt;code&gt;self&lt;/code&gt; &lt;code&gt;-1&lt;/code&gt; 마지막 요소이다.</target>
        </trans-unit>
        <trans-unit id="f873c3177cd02706731d8c52ee11307cdae97959" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;count&lt;/code&gt; is negative then it rotates in the opposite direction, starting from the end of the array where &lt;code&gt;-1&lt;/code&gt; is the last element.</source>
          <target state="translated">경우에 &lt;code&gt;count&lt;/code&gt; 네거티브 그것은 배열의 끝에서 시작하여, 반대 방향으로 회전 &lt;code&gt;-1&lt;/code&gt; 마지막 요소이다.</target>
        </trans-unit>
        <trans-unit id="b74b1762a28220a66eb6817b82d732a79289cf34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;decimal&lt;/code&gt; is Infinity or NaN, returns NaN.</source>
          <target state="translated">경우 &lt;code&gt;decimal&lt;/code&gt; 무한대 또는 NaN의, NaN이 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27bf2891198b67c2a9300cfbafe0a8ea8579334e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;decimal&lt;/code&gt; is NaN, returns NaN.</source>
          <target state="translated">경우 &lt;code&gt;decimal&lt;/code&gt; NaN의, NaN이 반환합니다.</target>
        </trans-unit>
        <trans-unit id="19314e06c254bb0d36f939c71332679cb216c469" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;decimal&lt;/code&gt; is infinity, returns Infinity.</source>
          <target state="translated">경우 &lt;code&gt;decimal&lt;/code&gt; 무한대, 무한대를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a732c8eb40d7fd64b14be0a20e5ae6e88cf50f3e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;decimal&lt;/code&gt; is positive infinity, returns Infinity.</source>
          <target state="translated">경우 &lt;code&gt;decimal&lt;/code&gt; 무한대이며, 무한대를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="393ca6924140592d6c7c09ffd48cd1261580cd4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;decimal&lt;/code&gt; is zero or negative, raises &lt;a href=&quot;math/domainerror&quot;&gt;&lt;code&gt;Math::DomainError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;decimal&lt;/code&gt; 제로 또는 마이너스 제기 &lt;a href=&quot;math/domainerror&quot;&gt; &lt;code&gt;Math::DomainError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c96100f72deadd5aa779223c937cdd6874723d0f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dereference_root&lt;/code&gt; is true, this method dereference tree root.</source>
          <target state="translated">경우 &lt;code&gt;dereference_root&lt;/code&gt; 는 사실이다,이 방법 역 참조 트리 루트.</target>
        </trans-unit>
        <trans-unit id="db671207cb70d5bb6fb93537679de2cadb404dd0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dereference_root&lt;/code&gt; is true, this method dereferences the tree root.</source>
          <target state="translated">경우 &lt;code&gt;dereference_root&lt;/code&gt; 는 사실이다,이 방법은 트리 루트를 역 참조.</target>
        </trans-unit>
        <trans-unit id="ec6316b675e568404395b78c0e6f045ecd19ef68" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;enc&lt;/code&gt; is given, convert &lt;code&gt;str&lt;/code&gt; to the encoding before percent encoding.</source>
          <target state="translated">경우 &lt;code&gt;enc&lt;/code&gt; , 변환 주어진 &lt;code&gt;str&lt;/code&gt; 을 퍼센트 인코딩하기 전에 인코딩.</target>
        </trans-unit>
        <trans-unit id="21ef4a2f8b43c8f9a87b8d7d9c43163a121d453e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;error&lt;/code&gt; is given, then check only for &lt;code&gt;error&lt;/code&gt; type deferred events.</source>
          <target state="translated">경우 &lt;code&gt;error&lt;/code&gt; 지정되고있는 경우, 만 확인 &lt;code&gt;error&lt;/code&gt; 유형 연기 이벤트.</target>
        </trans-unit>
        <trans-unit id="ae5931d0aa27a89d962d4b43336681f68d04e22c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is not given, &lt;a href=&quot;tms#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; is used as default value, detailing the user, system and real elapsed time.</source>
          <target state="translated">경우 &lt;code&gt;format&lt;/code&gt; 부여되지 않으며, &lt;a href=&quot;tms#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; 은&lt;/a&gt; 사용자, 시스템을 자세히 설명, 기본 값으로 사용하고 실시간으로 경과됩니다.</target>
        </trans-unit>
        <trans-unit id="54ead4affe31ed52158a5cf5ec061f3041fe743b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;in&lt;/code&gt; argument is given, the result is in that timezone or UTC offset, or if a numeric argument is given, the result is in local time.</source>
          <target state="translated">경우 &lt;code&gt;in&lt;/code&gt; 인수가 주어, 그 결과는 그 시간대에 있거나 UTC 오프셋, 또는 숫자 인수가 주어진다면, 그 결과는 현지 시간입니다.</target>
        </trans-unit>
        <trans-unit id="f587016278d3b3db7ecb91643be82531f6ccdcec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indent&lt;/code&gt; is specified, the method call is regarded as nested by nest(indent) { &amp;hellip; }.</source>
          <target state="translated">경우 &lt;code&gt;indent&lt;/code&gt; 지정 둥지 (오목 부)에 의해 중첩 된 바와 같이, 메소드 호출은 {...} 여겨진다.</target>
        </trans-unit>
        <trans-unit id="ca9b9603a23d2df97866289cf4af7c03606e4433" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inherit&lt;/code&gt; is false, the lookup only checks the constants in the receiver:</source>
          <target state="translated">경우 &lt;code&gt;inherit&lt;/code&gt; 거짓, 조회는 수신기의 상수를 확인합니다 :</target>
        </trans-unit>
        <trans-unit id="639742c881cbe7b8f561681846166cbccaae2ccd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initial&lt;/code&gt; is a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;digits&lt;/code&gt; is larger than Float::DIG + 1, this exception is raised.</source>
          <target state="translated">경우 &lt;code&gt;initial&lt;/code&gt; A는 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;digits&lt;/code&gt; 플로트 : DIG + 1보다 큰 경우,이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b1ff5bb60ad08bfc5051caa21594831709ad7729" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;klass&lt;/code&gt; (should be &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object) is given, return the total memory size of instances of the given class.</source>
          <target state="translated">경우 &lt;code&gt;klass&lt;/code&gt; (수 있어야 &lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체가) 제공되며, 지정된 클래스의 인스턴스의 총 메모리 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="84d109cac8b5ac83c3dc40cd3981c9174cefdcbf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;n&lt;/code&gt; is not an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, it is converted to an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; first. If &lt;code&gt;n&lt;/code&gt; is negative, a &lt;a href=&quot;math/domainerror&quot;&gt;&lt;code&gt;Math::DomainError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 이 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 먼저 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 로 변환됩니다 . 경우 &lt;code&gt;n&lt;/code&gt; 이 음수하는 &lt;a href=&quot;math/domainerror&quot;&gt; &lt;code&gt;Math::DomainError&lt;/code&gt; &lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="543760e1fee579a55036df2de33c1124a09e0de5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;n&lt;/code&gt; is not specified, yield all permutations of all elements.</source>
          <target state="translated">경우 &lt;code&gt;n&lt;/code&gt; 을 지정하지 않으면 모든 요소의 모든 순열을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9f4fcb4bdaffc5ceda514fd844f4f2907ec35f6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; starts with a pipe character (&lt;code&gt;&quot;|&quot;&lt;/code&gt;), a subprocess is created in the same way as &lt;a href=&quot;kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt;, and its output is returned.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 파이프 문자로 시작이 ( &lt;code&gt;&quot;|&quot;&lt;/code&gt; ), 서브 프로세스가 같은 방법으로 만든 &lt;a href=&quot;kernel#method-i-open&quot;&gt; &lt;code&gt;Kernel#open&lt;/code&gt; &lt;/a&gt; , 그 출력이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="415db32e3b2d9ca6fc9b1eff02e129efe4158501" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt; is given for the &lt;code&gt;library&lt;/code&gt;, Fiddle::Handle::DEFAULT is used, which is the equivalent to RTLD_DEFAULT. See &lt;code&gt;man 3 dlopen&lt;/code&gt; for more.</source>
          <target state="translated">경우 &lt;code&gt;nil&lt;/code&gt; 을 위해 주어진 &lt;code&gt;library&lt;/code&gt; , 바이올린 :: 핸들 : DEFAULT는 RTLD_DEFAULT에 해당되는, 사용됩니다. 자세한 내용은 &lt;code&gt;man 3 dlopen&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="447d827a16cbf94f655b87a9238e168c35f4e829" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;number&lt;/code&gt; is omitted, seeds the generator using a source of entropy provided by the operating system, if available (/dev/urandom on Unix systems or the RSA cryptographic provider on Windows), which is then combined with the time, the process id, and a sequence number.</source>
          <target state="translated">경우 &lt;code&gt;number&lt;/code&gt; 생략 운영 체제가 제공하는 엔트로피의 소스를 사용하여 종자 발전기 후 시간과 결합 (Unix 시스템 또는 윈도우에서 RSA 암호화 공급자 ON / 디바이스 / urandom의) 이용 가능하다면, 프로세스 ID, 및 시퀀스 번호.</target>
        </trans-unit>
        <trans-unit id="0510947a02d84ad03e71f5cc7777e8b5e9430578" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;numeric&lt;/code&gt; is the same type as &lt;code&gt;num&lt;/code&gt;, returns an array &lt;code&gt;[numeric, num]&lt;/code&gt;. Otherwise, returns an array with both &lt;code&gt;numeric&lt;/code&gt; and &lt;code&gt;num&lt;/code&gt; represented as &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">경우에 &lt;code&gt;numeric&lt;/code&gt; 동일한 유형 &lt;code&gt;num&lt;/code&gt; 배열 반환 &lt;code&gt;[numeric, num]&lt;/code&gt; . 그렇지 않으면, 모두 배열 반환 &lt;code&gt;numeric&lt;/code&gt; 및 &lt;code&gt;num&lt;/code&gt; 로 표현 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="29cd1df64d4a0a9fcbb8b0797463052c1d84238a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is not an instance of &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; but responds to &lt;code&gt;to_str&lt;/code&gt;, then the two strings are compared using &lt;code&gt;obj.==&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;obj&lt;/code&gt; 가 의 인스턴스가 아닌 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 만에 응답 &lt;code&gt;to_str&lt;/code&gt; 는 다음 두 개의 문자열을 사용하여 비교 &lt;code&gt;obj.==&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edca7396609ff30d099b7210695128e1d8551964" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;open_obj&lt;/code&gt; is specified, &lt;code&gt;text open_obj, open_width&lt;/code&gt; is called before grouping. If &lt;code&gt;close_obj&lt;/code&gt; is specified, &lt;code&gt;text close_obj, close_width&lt;/code&gt; is called after grouping.</source>
          <target state="translated">경우 &lt;code&gt;open_obj&lt;/code&gt; 가 지정, &lt;code&gt;text open_obj, open_width&lt;/code&gt; 그룹화하기 전에 호출된다. 경우 &lt;code&gt;close_obj&lt;/code&gt; 가 지정, &lt;code&gt;text close_obj, close_width&lt;/code&gt; 그룹화 한 후라고합니다.</target>
        </trans-unit>
        <trans-unit id="64e56818486b885edc1b018087d50a9ed48c0a8e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, it should be one or more of the constants &lt;a href=&quot;regexp#EXTENDED&quot;&gt;&lt;code&gt;Regexp::EXTENDED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;regexp#IGNORECASE&quot;&gt;&lt;code&gt;Regexp::IGNORECASE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;regexp#MULTILINE&quot;&gt;&lt;code&gt;Regexp::MULTILINE&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;or&lt;/em&gt;-ed together. Otherwise, if &lt;code&gt;options&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, the regexp will be case insensitive.</source>
          <target state="translated">경우 &lt;code&gt;options&lt;/code&gt; 입니다 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; , 그것은 하나 이상의 상수이어야 &lt;a href=&quot;regexp#EXTENDED&quot;&gt; &lt;code&gt;Regexp::EXTENDED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;regexp#IGNORECASE&quot;&gt; &lt;code&gt;Regexp::IGNORECASE&lt;/code&gt; &lt;/a&gt; , 그리고 &lt;a href=&quot;regexp#MULTILINE&quot;&gt; &lt;code&gt;Regexp::MULTILINE&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;또는&lt;/em&gt; -ed 함께. 그렇지 않으면 &lt;code&gt;options&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 가 아닌 경우 정규 표현식은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ce513a331bf8bdb3923190f84482def208f4fd7c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;opts[:binmode]&lt;/code&gt; is true, internal pipes are set to binary mode.</source>
          <target state="translated">경우 &lt;code&gt;opts[:binmode]&lt;/code&gt; 참이고, 내부 파이프는 바이너리 모드로 설정된다.</target>
        </trans-unit>
        <trans-unit id="745e53929cf42ea1dca03efaaa1a3cc09027b151" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;opts[:stdin_data]&lt;/code&gt; is specified, it is sent to the command's standard input.</source>
          <target state="translated">경우 &lt;code&gt;opts[:stdin_data]&lt;/code&gt; 지정되어 그것이 명령의 표준 입력에 전송된다.</target>
        </trans-unit>
        <trans-unit id="bd66d7c87b68f45e0d1e235e80d2e97f7d0c9c95" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;out&lt;/code&gt; is omitted, &lt;code&gt;$&amp;gt;&lt;/code&gt; is assumed. If &lt;code&gt;width&lt;/code&gt; is omitted, 79 is assumed.</source>
          <target state="translated">경우 &lt;code&gt;out&lt;/code&gt; 생략, &lt;code&gt;$&amp;gt;&lt;/code&gt; 가정한다. 경우 &lt;code&gt;width&lt;/code&gt; 생략 79으로 가정한다.</target>
        </trans-unit>
        <trans-unit id="692fd4bc16f2178ef11513c5c30b711ba128a3e8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;password&lt;/code&gt; is not provided, then &lt;code&gt;user&lt;/code&gt; is split, using &lt;a href=&quot;generic#method-i-split_userinfo&quot;&gt;&lt;code&gt;URI::Generic.split_userinfo&lt;/code&gt;&lt;/a&gt;, to pull &lt;code&gt;user&lt;/code&gt; and +password.</source>
          <target state="translated">경우 &lt;code&gt;password&lt;/code&gt; 제공되어 있지 않은 경우, &lt;code&gt;user&lt;/code&gt; 사용하는 분할이다 &lt;a href=&quot;generic#method-i-split_userinfo&quot;&gt; &lt;code&gt;URI::Generic.split_userinfo&lt;/code&gt; &lt;/a&gt; 풀로, &lt;code&gt;user&lt;/code&gt; 와 + 암호를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="2bf63fa2a539059beaf294e92d74910786187193" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; does not start with a pipe character (&lt;code&gt;|&lt;/code&gt;), treat it as the name of a file to open using the specified mode (defaulting to &amp;ldquo;r&amp;rdquo;).</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 파이프 문자로 시작하지 않는 ( &lt;code&gt;|&lt;/code&gt; ), ( &quot;R&quot;을 디폴트) 지정된 모드를 사용하여 열 수있는 파일의 이름으로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="efb781fcd62c20fc5db60442eeea696ee5775200" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is a dotfile, or starts with a period, then the starting dot is not dealt with the start of the extension.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; dotfile이다, 또는 기간 시작 후 시작하는 점은 확장의 시작 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="648f805f39741a3ecab2a500718ef79b63237864" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is omitted, it exchanges its current directory and the top of its directory stack.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 생략되고, 그것의 현재 디렉토리와 그 디렉토리 스택의 상단을 교환합니다.</target>
        </trans-unit>
        <trans-unit id="b2ffcc2cc441684e9b181b5f1552022140e09cfe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; starts with a pipe character (&lt;code&gt;&quot;|&quot;&lt;/code&gt;), a subprocess is created, connected to the caller by a pair of pipes. The returned &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object may be used to write to the standard input and read from the standard output of this subprocess.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 파이프 문자로 시작 ( &lt;code&gt;&quot;|&quot;&lt;/code&gt; ), 서브 프로세스가 생성되고, 파이프의 한 쌍의 호출자에 연결된다. 리턴 된 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 오브젝트를 사용하여 표준 입력에 쓰고이 서브 프로세스의 표준 출력에서 ​​읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e0c55e381380156ad4db5c30ccafe368cc826ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;preserve&lt;/code&gt; is true, this method preserves owner, group, and modified time. Permissions are copied regardless &lt;code&gt;preserve&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;preserve&lt;/code&gt; 사실,이 방법은 소유자, 그룹 및 수정 시간을 유지합니다. &lt;code&gt;preserve&lt;/code&gt; 관계없이 권한이 복사 됩니다.</target>
        </trans-unit>
        <trans-unit id="561dfa8e535a69b061a44efe4f006424463cbb37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;q, r = x.divmod(y)&lt;/code&gt;, then</source>
          <target state="translated">만약 &lt;code&gt;q, r = x.divmod(y)&lt;/code&gt; , 다음</target>
        </trans-unit>
        <trans-unit id="d39dc00db69a6698d3d8aa55fda1f61614a5aec8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;refname&lt;/code&gt; is empty, &lt;code&gt;mailbox&lt;/code&gt; is used directly to determine which mailboxes to match. If &lt;code&gt;mailbox&lt;/code&gt; is empty, the root name of &lt;code&gt;refname&lt;/code&gt; and the hierarchy delimiter are returned.</source>
          <target state="translated">경우 &lt;code&gt;refname&lt;/code&gt; 가 비어 &lt;code&gt;mailbox&lt;/code&gt; 일치 할 사서함 결정하기 위해 직접 사용됩니다. &lt;code&gt;mailbox&lt;/code&gt; 이 비어 있으면 &lt;code&gt;refname&lt;/code&gt; 의 루트 이름 과 계층 구분 기호가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="d41561bfb007cb92866a97ef71fdab5f8dfa01fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;remove_destination&lt;/code&gt; is true, this method removes each destination file before copy.</source>
          <target state="translated">If &lt;code&gt;remove_destination&lt;/code&gt; is true, this method removes each destination file before copy.</target>
        </trans-unit>
        <trans-unit id="ed79c5491256ca41ef9caa55dfb48eb6f6a44390" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;replacement&lt;/code&gt; is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; it will be substituted for the matched text. It may contain back-references to the pattern's capture groups of the form &lt;code&gt;&quot;\d&quot;&lt;/code&gt;, where &lt;em&gt;d&lt;/em&gt; is a group number, or &lt;code&gt;&quot;\k&amp;lt;n&amp;gt;&quot;&lt;/code&gt;, where &lt;em&gt;n&lt;/em&gt; is a group name. If it is a double-quoted string, both back-references must be preceded by an additional backslash. However, within &lt;code&gt;replacement&lt;/code&gt; the special match variables, such as &lt;code&gt;$&amp;amp;&lt;/code&gt;, will not refer to the current match. If &lt;code&gt;replacement&lt;/code&gt; is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that looks like a pattern's capture group but is actually not a pattern capture group e.g. &lt;code&gt;&quot;\'&quot;&lt;/code&gt;, then it will have to be preceded by two backslashes like so &lt;code&gt;&quot;\\'&quot;&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;replacement&lt;/code&gt; A는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 그것은 일치하는 텍스트를 대체 할 것입니다. &lt;code&gt;&quot;\d&quot;&lt;/code&gt; 형식의 패턴 캡처 그룹에 대한 역 참조를 포함 할 수 있습니다 . 여기서 &lt;em&gt;d&lt;/em&gt; 는 그룹 번호이거나 &lt;code&gt;&quot;\k&amp;lt;n&amp;gt;&quot;&lt;/code&gt; (여기서 &lt;em&gt;n&lt;/em&gt; 은 그룹 이름)입니다. 큰 따옴표로 묶인 문자열 인 경우 두 역 참조 앞에 추가 백 슬래시가 와야합니다. 그러나 &lt;code&gt;replacement&lt;/code&gt; 에서 &lt;code&gt;$&amp;amp;&lt;/code&gt; 와 같은 특수 일치 변수 는 현재 일치를 참조하지 않습니다. &lt;code&gt;replacement&lt;/code&gt; 가 패턴의 캡처 그룹처럼 보이지만 실제로는 패턴 캡처 그룹 이 아닌 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 경우 ( 예 : &lt;code&gt;&quot;\'&quot;&lt;/code&gt; &lt;code&gt;&quot;\\'&quot;&lt;/code&gt; 와 같이 두 개의 백 슬래시가 앞에 와야합니다 .</target>
        </trans-unit>
        <trans-unit id="199b44d38b80aa6fab93a76a6fcef7ea2dcce411" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req&lt;/code&gt; is a &lt;a href=&quot;http/post&quot;&gt;&lt;code&gt;Net::HTTP::Post&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http/put&quot;&gt;&lt;code&gt;Net::HTTP::Put&lt;/code&gt;&lt;/a&gt; request containing data, the data is also sent. Providing data for a &lt;a href=&quot;http/head&quot;&gt;&lt;code&gt;Net::HTTP::Head&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http/get&quot;&gt;&lt;code&gt;Net::HTTP::Get&lt;/code&gt;&lt;/a&gt; request results in an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;req&lt;/code&gt; A는 &lt;a href=&quot;http/post&quot;&gt; &lt;code&gt;Net::HTTP::Post&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;http/put&quot;&gt; &lt;code&gt;Net::HTTP::Put&lt;/code&gt; &lt;/a&gt; 데이터를 포함하는 요청 데이터도 전송됩니다. &lt;a href=&quot;http/head&quot;&gt; &lt;code&gt;Net::HTTP::Head&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;http/get&quot;&gt; &lt;code&gt;Net::HTTP::Get&lt;/code&gt; &lt;/a&gt; 요청에 대한 데이터를 제공 하면 &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2e1ebef175521d0445fceaea66c6ff291db1bd55" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;retried_on_ruby_2&lt;/code&gt; is true, true will be returned if we are on ruby, &lt;a href=&quot;persistent#attribute-i-retry_change_requests&quot;&gt;&lt;code&gt;retry_change_requests&lt;/code&gt;&lt;/a&gt; is allowed and the request is not idempotent.</source>
          <target state="translated">경우 &lt;code&gt;retried_on_ruby_2&lt;/code&gt; 는 사실, 사실은 우리가 루비에있는 경우, 반환됩니다 &lt;a href=&quot;persistent#attribute-i-retry_change_requests&quot;&gt; &lt;code&gt;retry_change_requests&lt;/code&gt; 이&lt;/a&gt; 허용되며 요청이 멱등하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d0f6f0d81fa6ddc1db59ad251528090dc191ec2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reverse_lookup&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;:hostname&lt;/code&gt;, hostname is obtained from numeric_address using reverse lookup. Or if it is &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;:numeric&lt;/code&gt;, hostname is same as numeric_address. Or if it is &lt;code&gt;nil&lt;/code&gt; or omitted, obeys to &lt;code&gt;ipsocket.do_not_reverse_lookup&lt;/code&gt;. See &lt;code&gt;Socket.getaddrinfo&lt;/code&gt; also.</source>
          <target state="translated">경우 &lt;code&gt;reverse_lookup&lt;/code&gt; 가 인 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;:hostname&lt;/code&gt; , 호스트는 역방향 조회를 사용 numeric_address로부터 얻어진다. 또는 &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;:numeric&lt;/code&gt; 인 경우 호스트 이름은 numeric_address와 동일합니다. 또는 &lt;code&gt;nil&lt;/code&gt; 이거나 생략 된 경우 &lt;code&gt;ipsocket.do_not_reverse_lookup&lt;/code&gt; 을 따릅니다 . &lt;code&gt;Socket.getaddrinfo&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="92d356d8c271e1b666220e92cdb42e167b2d87c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt; is &lt;code&gt;.&lt;/code&gt;, yielded pathnames begin with a filename in the current directory, not &lt;code&gt;./&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;self&lt;/code&gt; 입니다 &lt;code&gt;.&lt;/code&gt; 항복 경로 이름은 &lt;code&gt;./&lt;/code&gt; 가 아닌 현재 디렉토리의 파일 이름으로 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="31af79fda2edaea32afe1b1077cb25e4ff54c0a0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt; is a UTC time, -0000 is used as zone.</source>
          <target state="translated">경우 &lt;code&gt;self&lt;/code&gt; UTC의 시간이며, -0000 영역으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e060350fd97aa54df4999db923bbb6ce566d0cfc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt; is absolute, then &lt;code&gt;base_directory&lt;/code&gt; must be absolute too.</source>
          <target state="translated">경우 &lt;code&gt;self&lt;/code&gt; 절대, 다음 &lt;code&gt;base_directory&lt;/code&gt; 은 너무 절대적해야합니다.</target>
        </trans-unit>
        <trans-unit id="e675aa8a8df325864f80b8b3ebe130c74a0990ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;self&lt;/code&gt; is relative, then &lt;code&gt;base_directory&lt;/code&gt; must be relative too.</source>
          <target state="translated">경우 &lt;code&gt;self&lt;/code&gt; 상대적 다음 &lt;code&gt;base_directory&lt;/code&gt; 는 너무 상대해야합니다.</target>
        </trans-unit>
        <trans-unit id="3edf4a7b787279231a2f78eb3a7ffc567558b39a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sep&lt;/code&gt; is not specified, &amp;ldquo; &amp;rdquo; is used.</source>
          <target state="translated">경우 &lt;code&gt;sep&lt;/code&gt; 지정되지 않은 &quot;,&quot;사용됩니다.</target>
        </trans-unit>
        <trans-unit id="102e7c4bf54b122261d28f4e6bc7df05a18fcef7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator_proc&lt;/code&gt; is nil or not given, +lambda { &lt;a href=&quot;ppmethods#method-i-comma_breakable&quot;&gt;&lt;code&gt;comma_breakable&lt;/code&gt;&lt;/a&gt; }+ is used. If &lt;code&gt;iter_method&lt;/code&gt; is not given, :each is used.</source>
          <target state="translated">경우 &lt;code&gt;separator_proc&lt;/code&gt; 이 주어진 존재하지 않거나없는, + {람다 &lt;a href=&quot;ppmethods#method-i-comma_breakable&quot;&gt; &lt;code&gt;comma_breakable&lt;/code&gt; 는&lt;/a&gt; } + 사용된다. 경우 &lt;code&gt;iter_method&lt;/code&gt; 이 주어지지, 각이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9d5a3fdd0fcf89d2a5a717ed517a93ca3801d11a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;src&lt;/code&gt; is a list of files, then &lt;code&gt;dest&lt;/code&gt; must be a directory.</source>
          <target state="translated">경우 &lt;code&gt;src&lt;/code&gt; 파일의 목록은 다음 &lt;code&gt;dest&lt;/code&gt; 디렉토리이어야합니다.</target>
        </trans-unit>
        <trans-unit id="676339a0cda2fb572839b9c73475cb50212f5364" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;src&lt;/code&gt; is not same as &lt;code&gt;dest&lt;/code&gt;, copies it and changes the permission mode to &lt;code&gt;mode&lt;/code&gt;. If &lt;code&gt;dest&lt;/code&gt; is a directory, destination is &lt;code&gt;dest&lt;/code&gt;/&lt;code&gt;src&lt;/code&gt;. This method removes destination before copy.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 가 &lt;code&gt;dest&lt;/code&gt; 와 같지 않으면 이를 복사하고 권한 모드를 &lt;code&gt;mode&lt;/code&gt; 로 변경하십시오 . 경우 &lt;code&gt;dest&lt;/code&gt; 디렉토리이며, 대상은 &lt;code&gt;dest&lt;/code&gt; / &lt;code&gt;src&lt;/code&gt; . 이 방법은 복사하기 전에 대상을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f4b0646aa885143ba3dec2ae368974a3499f30c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;str&lt;/code&gt; starts with &lt;code&gt;0&lt;/code&gt;, radix indicators are honored. See Kernel#Integer.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 이 &lt;code&gt;0&lt;/code&gt; 으로 시작 하면 기수 표시기가 적용됩니다. Kernel # Integer를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a093626607bdb424f83398ef5263dbcbf9594c73" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sym&lt;/code&gt; is given, it will be sent to the opened console with &lt;code&gt;args&lt;/code&gt; and the result will be returned instead of the console &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; itself.</source>
          <target state="translated">경우 &lt;code&gt;sym&lt;/code&gt; 주어집니다, 그것은으로 열린 콘솔로 전송됩니다 &lt;code&gt;args&lt;/code&gt; 및 결과는 콘솔 대신 반환됩니다 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 자체.</target>
        </trans-unit>
        <trans-unit id="190b7448c3b159e38396d4ca190caf0497d56384" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sym&lt;/code&gt; or &lt;code&gt;str&lt;/code&gt; is not a valid constant name a &lt;code&gt;NameError&lt;/code&gt; will be raised with a warning &amp;ldquo;wrong constant name&amp;rdquo;.</source>
          <target state="translated">경우 &lt;code&gt;sym&lt;/code&gt; 또는 &lt;code&gt;str&lt;/code&gt; 유효한 상수 이름이 아닌 &lt;code&gt;NameError&lt;/code&gt; 경고 &quot;잘못된 상수 이름&quot;으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="98a16e579cd0b60833fe03cd113ce08e5a2fc2da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;thr&lt;/code&gt; had previously raised an exception and the &lt;a href=&quot;thread#method-c-abort_on_exception&quot;&gt;&lt;code&gt;::abort_on_exception&lt;/code&gt;&lt;/a&gt; or $DEBUG flags are not set, (so the exception has not yet been processed), it will be processed at this time.</source>
          <target state="translated">경우 &lt;code&gt;thr&lt;/code&gt; 이전에 예외와 제기했다 &lt;a href=&quot;thread#method-c-abort_on_exception&quot;&gt; &lt;code&gt;::abort_on_exception&lt;/code&gt; 을&lt;/a&gt; 하거나 (예외가 아직 처리되지 않도록) $ DEBUG 플래그가 설정되지 않은, 그것은이 시간에 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="c0b0b14a7606f209e464dc32047be8fde7342884" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;throw(tag2, val)&lt;/code&gt; is called, Ruby searches up its stack for a &lt;code&gt;catch&lt;/code&gt; block whose &lt;code&gt;tag&lt;/code&gt; has the same &lt;code&gt;object_id&lt;/code&gt; as &lt;em&gt;tag2&lt;/em&gt;. When found, the block stops executing and returns &lt;em&gt;val&lt;/em&gt; (or &lt;code&gt;nil&lt;/code&gt; if no second argument was given to &lt;code&gt;throw&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;code&gt;throw(tag2, val)&lt;/code&gt; 호출 루비는 자사 스택을 검색 &lt;code&gt;catch&lt;/code&gt; 그 블록 &lt;code&gt;tag&lt;/code&gt; 동일한 갖는다 &lt;code&gt;object_id&lt;/code&gt; 등 &lt;em&gt;이 tag2를&lt;/em&gt; . 발견되면 블록은 실행을 중지하고 &lt;em&gt;val&lt;/em&gt; (또는 &lt;code&gt;throw&lt;/code&gt; 할 두 번째 인수가 없으면 &lt;code&gt;nil&lt;/code&gt; )을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2a0ced484963e1f733f1e92ccbe33272d7ca57de" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is given, this method returns after &lt;code&gt;timeout&lt;/code&gt; seconds passed, even if no other thread doesn't signal.</source>
          <target state="translated">경우 &lt;code&gt;timeout&lt;/code&gt; 주어진 후이 메소드가 복귀 &lt;code&gt;timeout&lt;/code&gt; 초 다른 스레드가 신호를하지 않는 경우에도, 통과시켰다.</target>
        </trans-unit>
        <trans-unit id="4887ca04882d8a17ae4e74745ce14b703f42f466" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is given, this method returns after &lt;code&gt;timeout&lt;/code&gt; seconds passed. &lt;code&gt;timeout&lt;/code&gt; can be used for keep-alive. For example, the following code checks the connection for each 60 seconds.</source>
          <target state="translated">경우 &lt;code&gt;timeout&lt;/code&gt; 주어진 후이 메소드가 복귀 &lt;code&gt;timeout&lt;/code&gt; 초 통과 시켰습니다. &lt;code&gt;timeout&lt;/code&gt; 는 연결 유지에 사용될 수 있습니다. 예를 들어 다음 코드는 60 초마다 연결을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="36b18073ce3ea6f6e024a7a910ec554a4ecbb330" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to_ary&lt;/code&gt; or &lt;code&gt;to_a&lt;/code&gt; returns something other than an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, raises a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;to_ary&lt;/code&gt; 또는 &lt;code&gt;to_a&lt;/code&gt; 이외의 반환 뭔가 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 하는 제기 &lt;code&gt;TypeError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4d0eee920eca1988eb946b846f0e13c295829b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt; and the process identified by &lt;code&gt;pid&lt;/code&gt; is no longer alive a &lt;a href=&quot;pty/childexited&quot;&gt;&lt;code&gt;PTY::ChildExited&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">경우 &lt;code&gt;true&lt;/code&gt; 로 확인 된 프로세스 &lt;code&gt;pid&lt;/code&gt; 는 더 이상 살아 용입니다 &lt;a href=&quot;pty/childexited&quot;&gt; &lt;code&gt;PTY::ChildExited&lt;/code&gt; &lt;/a&gt; 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c509743901c3dc5fa13f21034c6141b7f3ce4f8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;uid&lt;/code&gt; is omitted, the value from &lt;code&gt;Passwd[:uid]&lt;/code&gt; is returned instead.</source>
          <target state="translated">경우 &lt;code&gt;uid&lt;/code&gt; 생략의 값 &lt;code&gt;Passwd[:uid]&lt;/code&gt; 대신에 반환된다.</target>
        </trans-unit>
        <trans-unit id="ae3ec000908b53d7ec3d6d1833fd415b25fe7aea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;utc_offset&lt;/code&gt; is given, it is used instead of the local time.</source>
          <target state="translated">경우 &lt;code&gt;utc_offset&lt;/code&gt; 가 주어, 그 대신 현지 시간으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="afa5d08608955ce34ab01c5e4b626709fd3a6aa1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;utc_offset&lt;/code&gt; is given, it is used instead of the local time. &lt;code&gt;utc_offset&lt;/code&gt; can be given as a human-readable string (eg. &lt;code&gt;&quot;+09:00&quot;&lt;/code&gt;) or as a number of seconds (eg. &lt;code&gt;32400&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;code&gt;utc_offset&lt;/code&gt; 가 주어, 그 대신 현지 시간으로 사용됩니다. &lt;code&gt;utc_offset&lt;/code&gt; 은 사람이 읽을 수있는 문자열 (예 : &lt;code&gt;&quot;+09:00&quot;&lt;/code&gt; ) 또는 초 수 (예 : &lt;code&gt;32400&lt;/code&gt; )로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd0e7aa2042a69d5e3f208a27c6e12e9217a14fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;utc_offset&lt;/code&gt; is not given and &lt;em&gt;time&lt;/em&gt; is local time, just returns the receiver.</source>
          <target state="translated">경우 &lt;code&gt;utc_offset&lt;/code&gt; 이 부여되지 않고 &lt;em&gt;시간이&lt;/em&gt; 현지 시간, 그냥 수신기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30b79f9c40e2d8b4edf84b4d6537c4b24416715e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;width&lt;/code&gt; is not specified, &lt;code&gt;sep.length&lt;/code&gt; is used. You will have to specify this when &lt;code&gt;sep&lt;/code&gt; is a multibyte character, for example.</source>
          <target state="translated">경우 &lt;code&gt;width&lt;/code&gt; 지정되지 않은, &lt;code&gt;sep.length&lt;/code&gt; 이 사용됩니다. 예를 들어 &lt;code&gt;sep&lt;/code&gt; 가 멀티 바이트 문자 인 경우이를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4a62911883467671e36dcaf41d198cd6d8894021" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;width&lt;/code&gt; is not specified, obj.length is used.</source>
          <target state="translated">경우 &lt;code&gt;width&lt;/code&gt; 지정되지 않은, obj.length이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9e4b7cf42c5d9148d17bc398b7ec5567868e5bee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;zone_offset&lt;/code&gt; is unable to determine the offset, nil will be returned.</source>
          <target state="translated">경우 &lt;code&gt;zone_offset&lt;/code&gt; 오프셋을 확인할 수 없습니다, 전무가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="333b155c764a29c437718ae097ca6ac6547b4311" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;aBufferString&lt;/em&gt; is specified and its capacity is enough, &lt;code&gt;pack&lt;/code&gt; uses it as the buffer and returns it. When the offset is specified by the beginning of &lt;em&gt;aTemplateString&lt;/em&gt;, the result is filled after the offset. If original contents of &lt;em&gt;aBufferString&lt;/em&gt; exists and it's longer than the offset, the rest of &lt;em&gt;offsetOfBuffer&lt;/em&gt; are overwritten by the result. If it's shorter, the gap is filled with &amp;ldquo;&lt;code&gt;\0&lt;/code&gt;''.</source>
          <target state="translated">경우 &lt;em&gt;aBufferString가&lt;/em&gt; 지정되고 용량이 충분하다, &lt;code&gt;pack&lt;/code&gt; 버퍼 반환 그것을로 사용합니다. &lt;em&gt;aTemplateString&lt;/em&gt; 의 시작으로 오프셋을 지정 하면 오프셋 뒤에 결과가 채워집니다. &lt;em&gt;aBufferString의&lt;/em&gt; 원래 내용이 존재하고 오프셋보다 긴 경우 나머지 &lt;em&gt;offsetOfBuffer&lt;/em&gt; 는 결과로 덮어 씁니다. 더 짧은 경우 간격은&amp;ldquo; &lt;code&gt;\0&lt;/code&gt; &amp;rdquo;으로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="8c8ff2e26683d8657d820de4520a68fc657fc6f7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ary&lt;/em&gt; is empty, it returns &lt;em&gt;init&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;ary&lt;/em&gt; 가 비어 있으면 &lt;em&gt;init를&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1b5a078799171d44bca3b42d93a7cbc91e5c4f8e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffer&lt;/em&gt; is given, the encryption/decryption result will be written to it. &lt;em&gt;buffer&lt;/em&gt; will be resized automatically.</source>
          <target state="translated">경우 &lt;em&gt;버퍼가&lt;/em&gt; 주어진다, 암호화 / 복호화 결과는 기록됩니다. &lt;em&gt;버퍼&lt;/em&gt; 크기가 자동으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="098fd45e91472ac8b1b44271c7bb1408931f998f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cmd&lt;/em&gt; is a &lt;code&gt;String&lt;/code&gt; &amp;ldquo;&lt;code&gt;-&lt;/code&gt;'', then a new instance of Ruby is started as the subprocess.</source>
          <target state="translated">경우 &lt;em&gt;cmd를가&lt;/em&gt; A는 &lt;code&gt;String&lt;/code&gt; - &lt;code&gt;-&lt;/code&gt; 루비의 새 인스턴스가 서브 프로세스로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="644559756c7dbfcc2c3539f6a6f06076da0d6593" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cmd&lt;/em&gt; is an &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;String&lt;/code&gt;, then it will be used as the subprocess's &lt;code&gt;argv&lt;/code&gt; bypassing a shell. The array can contain a hash at first for environments and a hash at last for options similar to &lt;code&gt;spawn&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;cmd&lt;/em&gt; 가 &lt;code&gt;String&lt;/code&gt; 의 &lt;code&gt;Array&lt;/code&gt; 인 경우 , 쉘을 우회하는 서브 프로세스의 &lt;code&gt;argv&lt;/code&gt; 로 사용됩니다 . 배열에는 환경에 대한 해시와 &lt;code&gt;spawn&lt;/code&gt; 과 유사한 옵션에 대한 해시가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d4958e4b25cd81c46a84abd79d075b0785d7a7ba" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;conversion_form&lt;/em&gt; is not given, the &lt;em&gt;point_conversion_form&lt;/em&gt; attribute set to the group is used.</source>
          <target state="translated">경우 &lt;em&gt;conversion_form이&lt;/em&gt; 주어지지는 &lt;em&gt;point_conversion_form의&lt;/em&gt; 그룹에 속성 세트가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8161958260315ebd7b0655ebaea6f7b99029ca74" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;copy_length&lt;/em&gt; is given, No more than &lt;em&gt;copy_length&lt;/em&gt; bytes are copied.</source>
          <target state="translated">경우 &lt;em&gt;copy_length이&lt;/em&gt; 주어집니다, 더 이상 &lt;em&gt;copy_length의&lt;/em&gt; 바이트는 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a0e3d4d6ec4f9ecdb307dcd23d90b1d6128ae23" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ctx&lt;/em&gt; is provided the &lt;a href=&quot;../ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; Sockets initial params will be taken from the context.</source>
          <target state="translated">경우 &lt;em&gt;CTX가&lt;/em&gt; 제공되는 &lt;a href=&quot;../ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt; 소켓 초기 PARAMS는 상황에서 이동합니다.</target>
        </trans-unit>
        <trans-unit id="e50601f9ace6dd3fa410390c527b48694eb45bd3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; (a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) is given, it is used as the initial input to the &lt;a href=&quot;digest&quot;&gt;&lt;code&gt;Digest&lt;/code&gt;&lt;/a&gt; instance, i.e.</source>
          <target state="translated">경우 &lt;em&gt;데이터&lt;/em&gt; (a &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ) 부여, 이것은 초기에 입력으로 사용된다 &lt;a href=&quot;digest&quot;&gt; &lt;code&gt;Digest&lt;/code&gt; &lt;/a&gt; 즉 인스턴스</target>
        </trans-unit>
        <trans-unit id="cd2cd8e4d84816e139006dabc2ed3d88dd04a924" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;dir_string&lt;/em&gt; is given, it is used as a base directory for interpreting relative pathname instead of the current directory.</source>
          <target state="translated">경우 &lt;em&gt;dir_string가&lt;/em&gt; 주어, 그 대신 현재 디렉토리의 상대 경로 이름을 해석하기위한 기본 디렉토리로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b96fe0bd366577d67395de3b6a4ea5ef3dd1f288" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;enum&lt;/em&gt; is empty, it returns &lt;em&gt;init&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;enum&lt;/em&gt; 이 비어 있으면 &lt;em&gt;init를&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7539053055a2b9b90447f06b102fa46d1317f968" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;errno&lt;/em&gt; corresponds to a known system error code, constructs the appropriate &lt;code&gt;Errno&lt;/code&gt; class for that error, otherwise constructs a generic &lt;code&gt;SystemCallError&lt;/code&gt; object. The error number is subsequently available via the &lt;code&gt;errno&lt;/code&gt; method.</source>
          <target state="translated">경우 &lt;em&gt;errno에&lt;/em&gt; 알려진 시스템 오류 코드에 대응이 적절한 구축 &lt;code&gt;Errno&lt;/code&gt; , 해당 오류에 대한 클래스를, 그렇지 않은 일반적인 구축 &lt;code&gt;SystemCallError&lt;/code&gt; 의 개체를. 오류 번호는 &lt;code&gt;errno&lt;/code&gt; 메소드 를 통해 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="8c46e6fe0c6f0cb73b2cd9132bd2762ba5e06915" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file_name&lt;/em&gt; is readable by others, returns an integer representing the file permission bits of &lt;em&gt;file_name&lt;/em&gt;. Returns &lt;code&gt;nil&lt;/code&gt; otherwise. The meaning of the bits is platform dependent; on Unix systems, see &lt;code&gt;stat(2)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;em&gt;file_name은&lt;/em&gt; 다른 사람이 읽을 수의 파일 권한 비트 나타내는 정수를 반환 &lt;em&gt;FILE_NAME을&lt;/em&gt; . 반환 &lt;code&gt;nil&lt;/code&gt; 을 달리. 비트의 의미는 플랫폼에 따라 다릅니다. 유닉스 시스템에서는 &lt;code&gt;stat(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="24690ff5e0f6c037bfaff734a95723b6182eac28" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;file_name&lt;/em&gt; is writable by others, returns an integer representing the file permission bits of &lt;em&gt;file_name&lt;/em&gt;. Returns &lt;code&gt;nil&lt;/code&gt; otherwise. The meaning of the bits is platform dependent; on Unix systems, see &lt;code&gt;stat(2)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;em&gt;file_name은&lt;/em&gt; 다른 사람이 쓸 수의 파일 권한 비트 나타내는 정수를 반환 &lt;em&gt;FILE_NAME을&lt;/em&gt; . 반환 &lt;code&gt;nil&lt;/code&gt; 을 달리. 비트의 의미는 플랫폼에 따라 다릅니다. 유닉스 시스템에서는 &lt;code&gt;stat(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bc11753c4f7336edf19b739cfa380dd139f970b0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; is omitted, the largely broken and traditional &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; format is used.</source>
          <target state="translated">경우 &lt;em&gt;형식이&lt;/em&gt; 생략되면, 크게 파손 및 전통 &lt;a href=&quot;../../openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a9f5624019717363546d7e93f227891b8dff89f4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;highlight&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt; the default error handler will send the messages to a tty.</source>
          <target state="translated">경우 &lt;em&gt;하이라이트&lt;/em&gt; 입니다 &lt;code&gt;true&lt;/code&gt; 기본 오류 핸들러는 청각 장애에 메시지를 보내드립니다.</target>
        </trans-unit>
        <trans-unit id="701b9c421e82a51c48026ec98d66fc51adfc058d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is specified, it is used with &lt;em&gt;port&lt;/em&gt; to determine the server addresses.</source>
          <target state="translated">경우 &lt;em&gt;호스트가&lt;/em&gt; 지정되고, 사용되는 &lt;em&gt;포트&lt;/em&gt; 서버 주소를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="7bb1e4c9a254b8cc3fe6e033707f067b5a25f199" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;host&lt;/em&gt; is specified, it is used with &lt;em&gt;port&lt;/em&gt; to determine the server ports.</source>
          <target state="translated">경우 &lt;em&gt;호스트가&lt;/em&gt; 지정되고, 사용되는 &lt;em&gt;포트&lt;/em&gt; 서버 포트를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c09bfb0f1d2c5b412e3cea411ffecfbc02f3d999" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;hostname&lt;/em&gt; is given, the socket is bound to it.</source>
          <target state="translated">경우 &lt;em&gt;호스트 이름이&lt;/em&gt; 부여되고, 소켓이 바인드됩니다.</target>
        </trans-unit>
        <trans-unit id="0d9a2a3ddc2d20117c09434b979b8c4617edb1bd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;integer&lt;/em&gt; is greater than the length of &lt;em&gt;str&lt;/em&gt;, returns a new &lt;code&gt;String&lt;/code&gt; of length &lt;em&gt;integer&lt;/em&gt; with &lt;em&gt;str&lt;/em&gt; left justified and padded with &lt;em&gt;padstr&lt;/em&gt;; otherwise, returns &lt;em&gt;str&lt;/em&gt;.</source>
          <target state="translated">경우 &lt;em&gt;정수&lt;/em&gt; 의 길이보다 큰 &lt;em&gt;STR&lt;/em&gt; , 새로운 반환 &lt;code&gt;String&lt;/code&gt; 길이의 &lt;em&gt;정수를&lt;/em&gt; 함께 &lt;em&gt;STR이&lt;/em&gt; 정당화 왼쪽으로 채워 &lt;em&gt;padstr&lt;/em&gt; ; 그렇지 않으면 &lt;em&gt;str을&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8baf4e053b82d7f5ac20aae145e31dcc2b843aed" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;integer&lt;/em&gt; is greater than the length of &lt;em&gt;str&lt;/em&gt;, returns a new &lt;code&gt;String&lt;/code&gt; of length &lt;em&gt;integer&lt;/em&gt; with &lt;em&gt;str&lt;/em&gt; right justified and padded with &lt;em&gt;padstr&lt;/em&gt;; otherwise, returns &lt;em&gt;str&lt;/em&gt;.</source>
          <target state="translated">경우 &lt;em&gt;정수&lt;/em&gt; 의 길이보다 큰 &lt;em&gt;STR&lt;/em&gt; , 새로운 반환 &lt;code&gt;String&lt;/code&gt; 길이의 &lt;em&gt;정수&lt;/em&gt; 와 &lt;em&gt;STR&lt;/em&gt; 오른쪽 정렬 및 패딩 &lt;em&gt;padstr을&lt;/em&gt; ; 그렇지 않으면 &lt;em&gt;str을&lt;/em&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="96f4dc84c87ebbe92715038d608ccdca842b9791" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ios&lt;/em&gt; is a stream such as pipe or socket, &lt;code&gt;IO#eof?&lt;/code&gt; blocks until the other end sends some data or closes it.</source>
          <target state="translated">&lt;em&gt;ios&lt;/em&gt; 가 파이프 또는 소켓과 같은 스트림 인 경우 &lt;code&gt;IO#eof?&lt;/code&gt; 다른 쪽 끝이 데이터를 보내거나 닫을 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="ec3aac506f1a71015332115bc695375ba4ccb268" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ios&lt;/em&gt; is opened by &lt;code&gt;IO.popen&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt; sets &lt;code&gt;$?&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;em&gt;IOS는&lt;/em&gt; 에 의해 열 &lt;code&gt;IO.popen&lt;/code&gt; , &lt;code&gt;close&lt;/code&gt; 세트 &lt;code&gt;$?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="705f3a3361b793f89f0605cc4dead483ef9ea578" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;length&lt;/em&gt; is a positive integer, &lt;code&gt;read&lt;/code&gt; tries to read &lt;em&gt;length&lt;/em&gt; bytes without any conversion (binary mode). It returns &lt;code&gt;nil&lt;/code&gt; if an EOF is encountered before anything can be read. Fewer than &lt;em&gt;length&lt;/em&gt; bytes are returned if an EOF is encountered during the read. In the case of an integer &lt;em&gt;length&lt;/em&gt;, the resulting string is always in ASCII-8BIT encoding.</source>
          <target state="translated">경우 &lt;em&gt;길이는&lt;/em&gt; 양의 정수, &lt;code&gt;read&lt;/code&gt; 읽기 시도를 &lt;em&gt;길이&lt;/em&gt; 어떤 변환 (바이너리 모드)없이 바이트. 무엇이든 읽을 수 있기 전에 EOF가 발생하면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 읽기 중에 EOF가 발생하면 &lt;em&gt;길이&lt;/em&gt; 바이트 보다 적은 수가 리턴됩니다. 정수 &lt;em&gt;length&lt;/em&gt; 의 경우 결과 문자열은 항상 ASCII-8BIT 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="822c60d6f7f9217c5303cfe9a2f2ab2f8017b1a7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;length&lt;/em&gt; is omitted or is &lt;code&gt;nil&lt;/code&gt;, it reads until EOF and the encoding conversion is applied, if applicable. A string is returned even if EOF is encountered before any data is read.</source>
          <target state="translated">경우 &lt;em&gt;길이가&lt;/em&gt; 생략되거나이다 &lt;code&gt;nil&lt;/code&gt; , 그것은 EOF까지 판독 가능한 경우 인코딩 변환이 적용된다. 데이터를 읽기 전에 EOF가 발생하더라도 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2242a81acbcef38b3ef79d3a204245b8b2a42b14" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;length&lt;/em&gt; is zero, it returns an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;em&gt;길이가&lt;/em&gt; 제로, 빈 문자열을 (반환 &lt;code&gt;&quot;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0dc03f11b01f35ea1e31c10ad401c55eeef908d7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;local_addr_args&lt;/em&gt; is not given, the local address of the socket is not bound.</source>
          <target state="translated">경우 &lt;em&gt;local_addr_args이&lt;/em&gt; 주어지지 소켓의 로컬 주소에 바인딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4be0c7abd7c359d5877b448c7cb8950412635acb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;local_addrinfo&lt;/em&gt; is nil, the address of the socket is not bound.</source>
          <target state="translated">경우 &lt;em&gt;local_addrinfo이&lt;/em&gt; 전무하고, 소켓의 주소를 바인딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8029d5c50fcef2377787e6d0083129ee91919e8e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;max_limit&lt;/em&gt; is not given, &lt;em&gt;cur_limit&lt;/em&gt; is used.</source>
          <target state="translated">경우 &lt;em&gt;max_limit이&lt;/em&gt; 주어지지, &lt;em&gt;cur_limit이&lt;/em&gt; 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="df3a298d11f8f65f1b2952b41ecd46c3914e9a48" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mod&lt;/em&gt; is a &lt;code&gt;Module&lt;/code&gt;, additionally &lt;code&gt;Object&lt;/code&gt; and its ancestors are checked:</source>
          <target state="translated">경우 &lt;em&gt;모드는&lt;/em&gt; A는 &lt;code&gt;Module&lt;/code&gt; , 추가로 &lt;code&gt;Object&lt;/code&gt; 와 그 조상이 확인된다 :</target>
        </trans-unit>
        <trans-unit id="e661052ac15cf420d6df7b36f7162912dd1981fa" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is not specified or is nil, 16 is assumed. It may be larger in future.</source>
          <target state="translated">경우 &lt;em&gt;n을&lt;/em&gt; 지정 또는 전무되어 있지 않으며, 16 것으로한다. 앞으로 더 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="329b56ddf8f5d466894fcdd242a475f90e370dd0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is not specified or is nil, 16 is assumed. It may be larger in the future.</source>
          <target state="translated">경우 &lt;em&gt;n을&lt;/em&gt; 지정 또는 전무되어 있지 않으며, 16 것으로한다. 앞으로 더 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e60e898f181b5527893490e254c202f7f4ce6fe9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;obj&lt;/em&gt; is &lt;code&gt;Numeric&lt;/code&gt;, write the character whose code is the least-significant byte of &lt;em&gt;obj&lt;/em&gt;. If &lt;em&gt;obj&lt;/em&gt; is &lt;code&gt;String&lt;/code&gt;, write the first character of &lt;em&gt;obj&lt;/em&gt; to &lt;em&gt;ios&lt;/em&gt;. Otherwise, raise &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt; 가 &lt;code&gt;Numeric&lt;/code&gt; 인 경우 코드가 &lt;em&gt;obj의&lt;/em&gt; 최하위 바이트 인 문자를 작성하십시오 . 경우 &lt;em&gt;obj가&lt;/em&gt; 있다 &lt;code&gt;String&lt;/code&gt; 의 첫 번째 문자 쓰기 &lt;em&gt;OBJ&lt;/em&gt; 에 &lt;em&gt;IOS를&lt;/em&gt; . 그렇지 않으면 &lt;code&gt;TypeError&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="39484a79becd570ed2ada51f062a8cd8638efcf0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;obj&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;nilclass&quot;&gt;&lt;code&gt;NilClass&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;trueclass&quot;&gt;&lt;code&gt;TrueClass&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;falseclass&quot;&gt;&lt;code&gt;FalseClass&lt;/code&gt;&lt;/a&gt;, respectively. If &lt;em&gt;obj&lt;/em&gt; is an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;, it raises a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;em&gt;obj가&lt;/em&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; , 그것은 반환 &lt;a href=&quot;nilclass&quot;&gt; &lt;code&gt;NilClass&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;trueclass&quot;&gt; &lt;code&gt;TrueClass&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;falseclass&quot;&gt; &lt;code&gt;FalseClass&lt;/code&gt; 을&lt;/a&gt; 각각. 경우 &lt;em&gt;obj가&lt;/em&gt; 인 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 하는 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; , 그것은 제기 &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddfae01bb141e7ea63f13c16771348da334aa5a6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;object&lt;/em&gt; is string-like, parse the string and return the parsed result as a Ruby data structure. Otherwise generate a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; text from the Ruby data structure object and return it.</source>
          <target state="translated">경우 &lt;em&gt;객체&lt;/em&gt; 인 문자열과 같은 문자열을 파싱 루비 데이터 구조로 구문 분석 결과를 리턴한다. 그렇지 않으면 Ruby 데이터 구조 오브젝트에서 &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 텍스트를 생성하여 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="bf3f135fe16a8c1a42839a7dc05e62cdceedf652" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;object&lt;/em&gt; is string-like, parse the string and return the parsed result as a Ruby data structure. Otherwise, generate a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; text from the Ruby data structure object and return it.</source>
          <target state="translated">경우 &lt;em&gt;객체&lt;/em&gt; 인 문자열과 같은 문자열을 파싱 루비 데이터 구조로 구문 분석 결과를 리턴한다. 그렇지 않으면 Ruby 데이터 구조 오브젝트에서 &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 텍스트를 생성하여 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="f17704c3989b5082b469149fd1879c8ba7e98557" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pattern&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, the value of &lt;code&gt;$;&lt;/code&gt; is used. If &lt;code&gt;$;&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; (which is the default), &lt;em&gt;str&lt;/em&gt; is split on whitespace as if ' ' were specified.</source>
          <target state="translated">경우 &lt;em&gt;패턴&lt;/em&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 의 가치 &lt;code&gt;$;&lt;/code&gt; 사용. 만약 &lt;code&gt;$;&lt;/code&gt; 이다 &lt;code&gt;nil&lt;/code&gt; (디폴트), &lt;em&gt;STR은&lt;/em&gt; 지정된 ''처럼 공백에 분할이다.</target>
        </trans-unit>
        <trans-unit id="d8fd49a9abf1aa27742b3ea3c578ca898e229920" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pattern&lt;/em&gt; is a &lt;code&gt;Regexp&lt;/code&gt;, &lt;em&gt;str&lt;/em&gt; is divided where the pattern matches. Whenever the pattern matches a zero-length string, &lt;em&gt;str&lt;/em&gt; is split into individual characters. If &lt;em&gt;pattern&lt;/em&gt; contains groups, the respective matches will be returned in the array as well.</source>
          <target state="translated">경우 &lt;em&gt;패턴&lt;/em&gt; A는 &lt;code&gt;Regexp&lt;/code&gt; , &lt;em&gt;STR은&lt;/em&gt; 어디 패턴 일치를 구분됩니다. 패턴이 길이가 0 인 문자열과 일치 할 때마다 &lt;em&gt;str&lt;/em&gt; 은 개별 문자로 분할됩니다. &lt;em&gt;패턴&lt;/em&gt; 에 그룹이 포함 된 경우 해당 일치 항목도 배열에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="945a264ad0954dcce14088d7506f11f2db86b014" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pattern&lt;/em&gt; is a &lt;code&gt;String&lt;/code&gt;, then its contents are used as the delimiter when splitting &lt;em&gt;str&lt;/em&gt;. If &lt;em&gt;pattern&lt;/em&gt; is a single space, &lt;em&gt;str&lt;/em&gt; is split on whitespace, with leading and trailing whitespace and runs of contiguous whitespace characters ignored.</source>
          <target state="translated">경우 &lt;em&gt;패턴&lt;/em&gt; A는 &lt;code&gt;String&lt;/code&gt; , 다음의 내용은 구분 기호 분할로 사용되는 &lt;em&gt;STR&lt;/em&gt; . 경우 &lt;em&gt;패턴이&lt;/em&gt; 하나의 공간, &lt;em&gt;STR은&lt;/em&gt; 선두과 공백을 무시 연속 공백 문자의 실행을 후행 공백에 분할됩니다.</target>
        </trans-unit>
        <trans-unit id="379ec2bdb1a8f946671935edb3452b0a9a3652de" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;port&lt;/em&gt; is 0, actual port number is chosen dynamically. However all sockets in the result has same port number.</source>
          <target state="translated">경우 &lt;em&gt;포트&lt;/em&gt; 0, 실제 포트 번호를 동적으로 선택된다. 그러나 결과의 모든 소켓은 동일한 포트 번호를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9ff50b1a02a090bbeba681df02d52933127d1198" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;port&lt;/em&gt; is zero, some port is chosen. But the chosen port is used for the all sockets.</source>
          <target state="translated">경우 &lt;em&gt;포트는&lt;/em&gt; 제로, 일부 포트가 선택됩니다. 그러나 선택된 포트는 모든 소켓에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="18aec9570d1b3c1b6e72555fcffd0ff5bf7a32ca" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;protocol_name&lt;/em&gt; is not given, &amp;ldquo;tcp&amp;rdquo; is assumed.</source>
          <target state="translated">경우 &lt;em&gt;protocol_name이&lt;/em&gt; 주어지지 않는다 &quot;TCP는&quot;가정한다.</target>
        </trans-unit>
        <trans-unit id="4e9e528f272f005f20920d6605e4394bf419aea3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;read_only&lt;/em&gt; is set to &lt;code&gt;true&lt;/code&gt;, you will only be allowed to read from the data store during the transaction and any attempts to change the data will raise a &lt;a href=&quot;pstore/error&quot;&gt;&lt;code&gt;PStore::Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;em&gt;READ_ONLY가&lt;/em&gt; 설정되어 &lt;code&gt;true&lt;/code&gt; 만 거래하고 올릴 데이터를 변경하려는 시도하는 동안 데이터 저장소에서 읽을 수됩니다 &lt;a href=&quot;pstore/error&quot;&gt; &lt;code&gt;PStore::Error&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8ff0b28e7cf93a9fef27f783c10f93c33092cf0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;replacement&lt;/em&gt; is a &lt;code&gt;String&lt;/code&gt; it will be substituted for the matched text. It may contain back-references to the pattern's capture groups of the form &lt;code&gt;\\d&lt;/code&gt;, where &lt;em&gt;d&lt;/em&gt; is a group number, or &lt;code&gt;\\k&amp;lt;n&amp;gt;&lt;/code&gt;, where &lt;em&gt;n&lt;/em&gt; is a group name. If it is a double-quoted string, both back-references must be preceded by an additional backslash. However, within &lt;em&gt;replacement&lt;/em&gt; the special match variables, such as &lt;code&gt;$&amp;amp;&lt;/code&gt;, will not refer to the current match.</source>
          <target state="translated">경우 &lt;em&gt;교체&lt;/em&gt; A는 &lt;code&gt;String&lt;/code&gt; 그것은 일치하는 텍스트를 대체 할 것입니다. &lt;code&gt;\\d&lt;/code&gt; 형식의 패턴 캡처 그룹에 대한 역 참조를 포함 할 수 있습니다 ( 여기서 &lt;em&gt;d&lt;/em&gt; 는 그룹 번호 또는 &lt;code&gt;\\k&amp;lt;n&amp;gt;&lt;/code&gt; , 여기서 &lt;em&gt;n&lt;/em&gt; 은 그룹 이름 임). 큰 따옴표로 묶인 문자열 인 경우 두 역 참조 앞에 추가 백 슬래시가 와야합니다. 그러나 &lt;em&gt;대체&lt;/em&gt; 에서 &lt;code&gt;$&amp;amp;&lt;/code&gt; 와 같은 특수 일치 변수 는 현재 일치를 참조하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f36049c97984d995b92dbbd5b13025389170fbc5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;signal&lt;/em&gt; is an integer but wrong for signal, &lt;code&gt;Errno::EINVAL&lt;/code&gt; or &lt;code&gt;RangeError&lt;/code&gt; will be raised. Otherwise unless &lt;em&gt;signal&lt;/em&gt; is a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Symbol&lt;/code&gt;, and a known signal name, &lt;code&gt;ArgumentError&lt;/code&gt; will be raised.</source>
          <target state="translated">경우 &lt;em&gt;신호는&lt;/em&gt; 신호 정수하지만 잘못은, &lt;code&gt;Errno::EINVAL&lt;/code&gt; 또는 &lt;code&gt;RangeError&lt;/code&gt; 발생합니다. 그렇지 않으면 &lt;em&gt;signal&lt;/em&gt; 이 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;Symbol&lt;/code&gt; 이고 알려진 신호 이름 이 아니면 &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="247742e04d313868e0b8c4e62388b67d6898c2fa" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;src_offset&lt;/em&gt; is given, it specifies the start position of the copy.</source>
          <target state="translated">경우 &lt;em&gt;src_offset이&lt;/em&gt; 주어집니다, 그것은 복사본의 시작 위치를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="79bece64abbdce0fb1828f48b3d0a52b91354ccd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are given, a string containing the bytes from &lt;em&gt;start&lt;/em&gt; of &lt;em&gt;length&lt;/em&gt; will be returned.</source>
          <target state="translated">경우 &lt;em&gt;시작&lt;/em&gt; 과 &lt;em&gt;길이가&lt;/em&gt; 주어진다로부터 바이트를 포함하는 문자열 &lt;em&gt;시작&lt;/em&gt; 의 &lt;em&gt;길이가&lt;/em&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b62a214bb93b9c07b4d55ece79b4dc7057a610ef" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;stat&lt;/em&gt; is readable by others, returns an integer representing the file permission bits of &lt;em&gt;stat&lt;/em&gt;. Returns &lt;code&gt;nil&lt;/code&gt; otherwise. The meaning of the bits is platform dependent; on Unix systems, see &lt;code&gt;stat(2)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;em&gt;합계가&lt;/em&gt; 다른 사람이 읽을 수의 파일 권한 비트 나타내는 정수를 반환 &lt;em&gt;스탯&lt;/em&gt; . 반환 &lt;code&gt;nil&lt;/code&gt; 을 달리. 비트의 의미는 플랫폼에 따라 다릅니다. 유닉스 시스템에서는 &lt;code&gt;stat(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="206bcd77db0f40672ceeb02ed9c38f9e66ffc85e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;stat&lt;/em&gt; is writable by others, returns an integer representing the file permission bits of &lt;em&gt;stat&lt;/em&gt;. Returns &lt;code&gt;nil&lt;/code&gt; otherwise. The meaning of the bits is platform dependent; on Unix systems, see &lt;code&gt;stat(2)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;em&gt;합계가&lt;/em&gt; 다른 사람이 쓸 수의 파일 권한 비트 나타내는 정수를 반환 &lt;em&gt;스탯&lt;/em&gt; . 반환 &lt;code&gt;nil&lt;/code&gt; 을 달리. 비트의 의미는 플랫폼에 따라 다릅니다. 유닉스 시스템에서는 &lt;code&gt;stat(2)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14b28f7fa620be717b8d2d17e5a8892f3afed7fe" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;str&lt;/em&gt; and &lt;em&gt;other_str&lt;/em&gt; contains only ascii numeric characters, both are recognized as decimal numbers. In addition, the width of string (e.g. leading zeros) is handled appropriately.</source>
          <target state="translated">경우 &lt;em&gt;STR&lt;/em&gt; 과 &lt;em&gt;other_str는&lt;/em&gt; 숫자 만 ASCII 포함, 모두 진수로 인식됩니다. 또한 문자열 너비 (예 : 선행 0)가 적절하게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="70a5bf4e609f843a603c422dacdc33c9c843c33a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;trim_mode&lt;/em&gt; is passed a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; containing one or more of the following modifiers, &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt; will adjust its code generation as listed:</source>
          <target state="translated">경우 &lt;em&gt;trim_mode가&lt;/em&gt; 전달 된되는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 하나 이상의 다음과 같은 수식을 포함을, &lt;a href=&quot;erb&quot;&gt; &lt;code&gt;ERB&lt;/code&gt; 는&lt;/a&gt; 나열된의 코드 생성을 조정합니다 :</target>
        </trans-unit>
        <trans-unit id="a3e4d04594034fec5fa3c1edb02fa15d82b37e86" translate="yes" xml:space="preserve">
          <source>If A is diagonalizable, this provides matrices V and D such that A = V*D*V.inv, where D is the diagonal matrix with entries equal to the eigenvalues and V is formed by the eigenvectors.</source>
          <target state="translated">A가 대각 화 가능하다면, 이것은 행렬 V와 D를 제공하여 A = V * D * V.inv입니다. 여기서 D는 고유 값과 동일한 항목을 갖는 대각 행렬이며 V는 고유 벡터에 의해 형성됩니다.</target>
        </trans-unit>
        <trans-unit id="b26c1e0384267801f5f750c25401c6b1f819acc5" translate="yes" xml:space="preserve">
          <source>If A is symmetric, then V is orthogonal and thus A = V*D*V.t</source>
          <target state="translated">A가 대칭이면 V는 직교하므로 A = V * D * Vt</target>
        </trans-unit>
        <trans-unit id="5829f4a6047325692073e5b9ee03527ba26fb504" translate="yes" xml:space="preserve">
          <source>If Transfer-Encoding is set as chunked, this send the request in chunked encoding. Because chunked encoding is HTTP/1.1 feature, you must confirm the server to support HTTP/1.1 before sending it.</source>
          <target state="translated">Transfer-Encoding이 chunked로 설정되면 요청을 chunked encoding으로 보냅니다. 청크 인코딩은 HTTP / 1.1 기능이므로 서버를 보내기 전에 HTTP / 1.1을 지원하도록 서버를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="82926951643171e783f50c835b5e0a4c08326eae" translate="yes" xml:space="preserve">
          <source>If `obj' has references to an internal object, then it returns instances of &lt;a href=&quot;objectspace/internalobjectwrapper&quot;&gt;&lt;code&gt;ObjectSpace::InternalObjectWrapper&lt;/code&gt;&lt;/a&gt; class. This object contains a reference to an internal object and you can check the type of internal object with `type' method.</source>
          <target state="translated">`obj '에 내부 객체에 대한 참조가 있으면 &lt;a href=&quot;objectspace/internalobjectwrapper&quot;&gt; &lt;code&gt;ObjectSpace::InternalObjectWrapper&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스를 반환합니다 . 이 객체는 내부 객체에 대한 참조를 포함하며`type '메소드로 내부 객체의 유형을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8367e27a7991f7527e88cd62585c4d365ffc923" translate="yes" xml:space="preserve">
          <source>If `obj' has two or more references to the same object `x', then returned array only includes one `x' object.</source>
          <target state="translated">`obj '에 동일한 객체`x'에 대한 둘 이상의 참조가있는 경우 반환 된 배열에는 하나의`x '객체 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fb413f34295458a881e7d7f39fcb5d82e66ba624" translate="yes" xml:space="preserve">
          <source>If `obj' is a non-markable (non-heap management) object such as true, false, nil, symbols and Fixnums (and Flonum) then it simply returns nil.</source>
          <target state="translated">`obj '가 true, false, nil, symbol 및 Fixnum (및 Flonum)과 같이 표시 할 수없는 (힙이 아닌 관리) 객체 인 경우 단순히 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="805f0da37b1e3545fffe05bbc83dddf77d364ee4" translate="yes" xml:space="preserve">
          <source>If `obj' is instance of &lt;a href=&quot;objectspace/internalobjectwrapper&quot;&gt;&lt;code&gt;ObjectSpace::InternalObjectWrapper&lt;/code&gt;&lt;/a&gt; class, then this method returns all reachable object from an internal object, which is pointed by `obj'.</source>
          <target state="translated">`obj '가 &lt;a href=&quot;objectspace/internalobjectwrapper&quot;&gt; &lt;code&gt;ObjectSpace::InternalObjectWrapper&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스 인 경우 ,이 메소드는 내부 객체에서 도달 가능한 모든 객체를 반환하며, 이는`obj'로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="fd4a615ed6e86094f35d4bbcb5b5237a61d62270" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;&lt;em&gt;params&lt;/em&gt; is given, the parameters are overridden with it. The keys in &lt;em&gt;params&lt;/em&gt; must be assignment methods on &lt;a href=&quot;sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;&lt;em&gt; params를&lt;/em&gt; 주어, 매개 변수는 그것으로 대체됩니다. &lt;em&gt;params&lt;/em&gt; 의 키는 &lt;a href=&quot;sslcontext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; 의&lt;/a&gt; 지정 메소드 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="7bfe5f87720c42f765b80a7bfff5bade88162808" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; is used, the keys are the component names preceded by colons.</source>
          <target state="translated">경우 &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 사용하는 경우, 키는 콜론 앞에 구성 요소 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a355f88c61e1c586ac7038d6b05cd770f5c53730" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is passed into &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt;, it is internally wrapped into a &lt;a href=&quot;stringio&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이 &lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;::new&lt;/code&gt; &lt;/a&gt; 로 전달 되면 내부적으로 &lt;a href=&quot;stringio&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt; 객체 로 래핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="bbdec9df22256703fce96e0221d87f31e6c8d00e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Regexp&lt;/code&gt; is supplied, the matching portion of the string is returned. If a &lt;code&gt;capture&lt;/code&gt; follows the regular expression, which may be a capture group index or name, follows the regular expression that component of the &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; is returned instead.</source>
          <target state="translated">경우 &lt;code&gt;Regexp&lt;/code&gt; 공급되고, 문자열의 일치 부분이 반환된다. 경우 &lt;code&gt;capture&lt;/code&gt; 캡처 그룹 인덱스 또는 이름이 될 수있는 정규 표현식을, 다음,의 구성 요소하는 정규 표현식은 다음과 &lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; 가&lt;/a&gt; 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a4b90f7178de1c3781f4cf414da38a9dba38db37" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;match_str&lt;/code&gt; is given, that string is returned if it occurs in the string.</source>
          <target state="translated">경우 &lt;code&gt;match_str&lt;/code&gt; 가 주어진다는 문자열에서 발생하는 경우, 해당 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3044de7fd3d3f4716566871abfe215ce3c91ec83" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;string&lt;/code&gt; is given, returns the hash value for the given &lt;code&gt;string&lt;/code&gt; in a base64 encoded form, resetting the digest to the initial state before and after the process.</source>
          <target state="translated">경우 &lt;code&gt;string&lt;/code&gt; 주어, 주어진 해시 값 리턴 &lt;code&gt;string&lt;/code&gt; (가) 전과 후의 초기 상태로 리셋하는 다이제스트, base64로 인코딩 된 형태로한다.</target>
        </trans-unit>
        <trans-unit id="4430aa084663a935e6925afdbb2cde4497f59cf2" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;string&lt;/em&gt; is given, returns the hash value for the given &lt;em&gt;string&lt;/em&gt; in a hex-encoded form, resetting the digest to the initial state before and after the process.</source>
          <target state="translated">경우 &lt;em&gt;문자열이&lt;/em&gt; 주어, 주어진 해시 값 리턴 &lt;em&gt;스트링&lt;/em&gt; (가) 전과 후의 초기 상태로 리셋하는 다이제스트, 육각 형태로 인코딩한다.</target>
        </trans-unit>
        <trans-unit id="996b984ae8fbb3ab8c69dacb24c336354e0371bd" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;string&lt;/em&gt; is given, returns the hash value for the given &lt;em&gt;string&lt;/em&gt;, resetting the digest to the initial state before and after the process.</source>
          <target state="translated">경우 &lt;em&gt;문자열이&lt;/em&gt; 주어, 주어진 해시 값 반환 &lt;em&gt;문자열&lt;/em&gt; (가) 전과 후의 초기 상태로 리셋하는 다이제스트.</target>
        </trans-unit>
        <trans-unit id="98e2f7c69b605e5f02922bdbf46e5e068288a41a" translate="yes" xml:space="preserve">
          <source>If a block is given consecutive deflated chunks from the &lt;code&gt;string&lt;/code&gt; are yielded to the block and &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">블록에 연속적으로 수축 된 덩어리가 있으면 &lt;code&gt;string&lt;/code&gt; 에서 블록으로 &lt;code&gt;nil&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2b20e3df78876194b7f8777e6c2df1f9b9412e5d" translate="yes" xml:space="preserve">
          <source>If a block is given consecutive inflated chunks from the &lt;code&gt;deflate_string&lt;/code&gt; are yielded to the block and &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">블록에 &lt;code&gt;deflate_string&lt;/code&gt; 에서 연속적으로 팽창 된 청크가 제공되면 블록 에 양보되고 &lt;code&gt;nil&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2a908c697cc7384e2402c368c0867fb96d35f4f6" translate="yes" xml:space="preserve">
          <source>If a block is given instead of an argument, returns the &lt;em&gt;index&lt;/em&gt; of the first object for which the block returns &lt;code&gt;true&lt;/code&gt;, starting from the last object.</source>
          <target state="translated">인수 대신 블록을 지정 하면 마지막 객체부터 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 첫 번째 객체 의 &lt;em&gt;인덱스&lt;/em&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2b6c3ce81509218d5420e7d5f5c60177a18a9c02" translate="yes" xml:space="preserve">
          <source>If a block is given instead of an argument, returns the &lt;em&gt;index&lt;/em&gt; of the first object for which the block returns &lt;code&gt;true&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; if no match is found.</source>
          <target state="translated">인수 대신 블록이 제공 되면 블록이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 첫 번째 객체 의 &lt;em&gt;인덱스&lt;/em&gt; 를 반환 합니다 . 일치하는 것이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2cf02a66de3d584fa0db30817185c23cf84b2422" translate="yes" xml:space="preserve">
          <source>If a block is given it will be evaluated in the context of &lt;code&gt;StructClass&lt;/code&gt;, passing the created class as a parameter:</source>
          <target state="translated">블록이 제공되면 &lt;code&gt;StructClass&lt;/code&gt; 컨텍스트 에서 생성 된 클래스를 매개 변수로 전달하여 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="3100f9f7096a435830c664751b1e3196827ee392" translate="yes" xml:space="preserve">
          <source>If a block is given the created socket is yielded for each address.</source>
          <target state="translated">블록이 제공되면 각 주소에 대해 작성된 소켓이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="88ade44a9bdd7c48241833da306c4c6ca6fe5308" translate="yes" xml:space="preserve">
          <source>If a block is given with a &lt;em&gt;cmd&lt;/em&gt; of &amp;ldquo;&lt;code&gt;-&lt;/code&gt;'', the block will be run in two separate processes: once in the parent, and once in a child. The parent process will be passed the pipe object as a parameter to the block, the child version of the block will be passed &lt;code&gt;nil&lt;/code&gt;, and the child's standard in and standard out will be connected to the parent through the pipe. Not available on all platforms.</source>
          <target state="translated">블록이 함께 주어지면 &lt;em&gt;cmd를&lt;/em&gt; &quot;의 - &lt;code&gt;-&lt;/code&gt; 두 개의 별도의 프로세스에서 실행됩니다 부모에 한 번, 그리고 아이에 한 번. 부모 프로세스는 파이프 객체를 매개 변수로 블록에 전달하고 자식 버전의 블록은 &lt;code&gt;nil&lt;/code&gt; 을 전달 하며 자식의 표준 입력 및 표준 출력은 파이프를 통해 부모에 연결됩니다. 모든 플랫폼에서 사용 가능한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6e8983de6e057fe67b9a4b5af2803987a3455e34" translate="yes" xml:space="preserve">
          <source>If a block is given, Ruby will run the command as a child connected to Ruby with a pipe. Ruby's end of the pipe will be passed as a parameter to the block. At the end of block, Ruby closes the pipe and sets &lt;code&gt;$?&lt;/code&gt;. In this case &lt;code&gt;IO.popen&lt;/code&gt; returns the value of the block.</source>
          <target state="translated">블록이 주어지면 Ruby는 파이프로 Ruby에 연결된 자식으로 명령을 실행합니다. 파이프의 루비 끝은 매개 변수로 블록에 전달됩니다. 블록 끝에서 Ruby는 파이프를 닫고 &lt;code&gt;$?&lt;/code&gt; 를 설정합니다 . . 이 경우 &lt;code&gt;IO.popen&lt;/code&gt; 은 블록 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a3429f098ae8dc35678d1c36190b2c272edae793" translate="yes" xml:space="preserve">
          <source>If a block is given, a &lt;code&gt;Psych::Nodes::Document&lt;/code&gt; node will be yielded to the block as it's being parsed.</source>
          <target state="translated">블록이 주어지면, &lt;code&gt;Psych::Nodes::Document&lt;/code&gt; 노드는 파싱 될 때 블록에 양보됩니다.</target>
        </trans-unit>
        <trans-unit id="cc9cd8b474ab4aa83e20e9bcd94839bdbcfb3567" translate="yes" xml:space="preserve">
          <source>If a block is given, counts the number of elements for which the block returns a true value.</source>
          <target state="translated">블록이 제공되면 블록이 참 값을 반환하는 요소 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b880ba09fd7a890d6df9a0aa2f5de48d98b9fc6f" translate="yes" xml:space="preserve">
          <source>If a block is given, invoke the block with &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; if match succeed, so that you can write</source>
          <target state="translated">블록이 주어지면, 일치하는 경우 &lt;a href=&quot;matchdata&quot;&gt; &lt;code&gt;MatchData&lt;/code&gt; 로&lt;/a&gt; 블록을 호출하여 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44a5f758939b319a3b2a054ca9ae1896be68c258" translate="yes" xml:space="preserve">
          <source>If a block is given, invoke the block with each split substring.</source>
          <target state="translated">블록이 제공되면 각 분할 하위 문자열로 블록을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="789a2b0552ae5cff82e679b64c13c64ccd1680ae" translate="yes" xml:space="preserve">
          <source>If a block is given, it is called with the socket and the block value is returned. When the block exits, the socket is closed and the socket file is removed.</source>
          <target state="translated">블록이 주어지면 소켓과 함께 호출되고 블록 값이 리턴됩니다. 블록이 종료되면 소켓이 닫히고 소켓 파일이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="45469e652b69143dd7e0c2ae2b6898557e780880" translate="yes" xml:space="preserve">
          <source>If a block is given, it is called with the socket and the value of the block is returned. The socket is returned otherwise.</source>
          <target state="translated">블록이 주어지면 소켓으로 호출되고 블록의 값이 리턴됩니다. 그렇지 않으면 소켓이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4791a0db2e5fedece4806feffcd0bc45e74b0222" translate="yes" xml:space="preserve">
          <source>If a block is given, it is invoked for each output &lt;code&gt;array&lt;/code&gt;, otherwise an array of arrays is returned.</source>
          <target state="translated">블록이 주어지면 각 출력 &lt;code&gt;array&lt;/code&gt; 에 대해 호출되며 , 그렇지 않으면 배열 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="12d13ff910554a0aec2523cfbd187315123f496c" translate="yes" xml:space="preserve">
          <source>If a block is given, it is passed the &lt;code&gt;FTP&lt;/code&gt; object, which will be closed when the block finishes, or when an exception is raised.</source>
          <target state="translated">블록이 제공 되면 블록이 완료되거나 예외가 발생하면 닫히는 &lt;code&gt;FTP&lt;/code&gt; 객체 가 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="5df70ba42d695feb0fbd1d1f8283c416fb78ae85" translate="yes" xml:space="preserve">
          <source>If a block is given, it is passed the class object, and the block is evaluated in the context of this class like &lt;code&gt;class_eval&lt;/code&gt;.</source>
          <target state="translated">블록이 주어지면, 블록은 클래스 객체로 전달 &lt;code&gt;class_eval&lt;/code&gt; 클래스의 컨텍스트에서 class_eval 과 같이 블록이 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="e64a201fc22b8e939b3ae73af5334ac809161590" translate="yes" xml:space="preserve">
          <source>If a block is given, it is passed the name of the new current directory, and the block is executed with that as the current directory. The original working directory is restored when the block exits. The return value of &lt;code&gt;chdir&lt;/code&gt; is the value of the block. &lt;code&gt;chdir&lt;/code&gt; blocks can be nested, but in a multi-threaded program an error will be raised if a thread attempts to open a &lt;code&gt;chdir&lt;/code&gt; block while another thread has one open.</source>
          <target state="translated">블록이 주어지면 새 현재 디렉토리의 이름이 전달되고 블록이 현재 디렉토리로 실행됩니다. 블록이 종료되면 원래 작업 디렉토리가 복원됩니다. &lt;code&gt;chdir&lt;/code&gt; 의 반환 값은 블록의 값입니다. &lt;code&gt;chdir&lt;/code&gt; 블록은 중첩 될 수 있지만 멀티 스레드 프로그램에서 스레드가 &lt;code&gt;chdir&lt;/code&gt; 블록 을 열려고하는 동안 스레드가 chdir 블록 을 열려고하면 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="c3795be222b26d3be84ed0ee288954d545b54df0" translate="yes" xml:space="preserve">
          <source>If a block is given, it is yielded with the path of the directory. The directory and its contents are removed using &lt;a href=&quot;fileutils#method-c-remove_entry&quot;&gt;&lt;code&gt;FileUtils.remove_entry&lt;/code&gt;&lt;/a&gt; before &lt;a href=&quot;dir#method-c-mktmpdir&quot;&gt;&lt;code&gt;Dir.mktmpdir&lt;/code&gt;&lt;/a&gt; returns. The value of the block is returned.</source>
          <target state="translated">블록이 제공되면 디렉토리의 경로로 생성됩니다. &lt;a href=&quot;dir#method-c-mktmpdir&quot;&gt; &lt;code&gt;Dir.mktmpdir&lt;/code&gt; 이&lt;/a&gt; 리턴 되기 전에 &lt;a href=&quot;fileutils#method-c-remove_entry&quot;&gt; &lt;code&gt;FileUtils.remove_entry&lt;/code&gt; &lt;/a&gt; 를 사용하여 디렉토리 및 해당 컨텐츠가 제거됩니다 . 블록의 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f79d3fa129a52f9dd5373038e64837c6148acb9" translate="yes" xml:space="preserve">
          <source>If a block is given, it overrides the callback set by &lt;a href=&quot;store#method-i-verify_callback-3D&quot;&gt;&lt;code&gt;verify_callback=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">블록이 제공되면 &lt;a href=&quot;store#method-i-verify_callback-3D&quot;&gt; &lt;code&gt;verify_callback=&lt;/code&gt; &lt;/a&gt; 의해 설정된 콜백을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="507d8fd1a8caaefbb3e5209240164a6927479c12" translate="yes" xml:space="preserve">
          <source>If a block is given, it prints out each of the elements encountered. Block parameters are (in that order):</source>
          <target state="translated">블록이 제공되면 발견 된 각 요소를 인쇄합니다. 블록 매개 변수는 (순서대로) :</target>
        </trans-unit>
        <trans-unit id="2d20263ee30e2dd87efe86c3d3db63ed6ff7e135" translate="yes" xml:space="preserve">
          <source>If a block is given, it restores the current directory when the block ends.</source>
          <target state="translated">블록이 제공되면 블록이 종료 될 때 현재 디렉토리를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="75cd4347d1d4536d7a9f19213d18bdef22fcc68f" translate="yes" xml:space="preserve">
          <source>If a block is given, it will be used to calculate the size of the enumerator without the need to iterate it (see &lt;a href=&quot;enumerator#method-i-size&quot;&gt;&lt;code&gt;Enumerator#size&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">블록이 주어지면, 반복 할 필요없이 열거 자의 크기를 계산하는 데 사용됩니다 ( &lt;a href=&quot;enumerator#method-i-size&quot;&gt; &lt;code&gt;Enumerator#size&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4b9ad69908d32a3250d645a8444470ebb00fd18e" translate="yes" xml:space="preserve">
          <source>If a block is given, it will use the return value of the block for comparison.</source>
          <target state="translated">블록이 주어지면 비교를 위해 블록의 반환 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="29d72006ab6ae0a17dd44bd16a1536e6ae3c6182" translate="yes" xml:space="preserve">
          <source>If a block is given, the block is applied to each element before addition.</source>
          <target state="translated">블록이 주어지면 블록은 추가하기 전에 각 요소에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="976d0aaa37aa91a94769bd94b61712ef51f19238" translate="yes" xml:space="preserve">
          <source>If a block is given, the block is called and returns the value of the block. &lt;em&gt;read_io&lt;/em&gt; and &lt;em&gt;write_io&lt;/em&gt; are sent to the block as arguments. If read_io and write_io are not closed when the block exits, they are closed. i.e. closing read_io and/or write_io doesn't cause an error.</source>
          <target state="translated">블록이 주어지면 블록이 호출되고 블록의 값을 반환합니다. &lt;em&gt;read_io&lt;/em&gt; 및 &lt;em&gt;write_io&lt;/em&gt; 는 인수로 블록에 전송됩니다. 블록이 종료 될 때 read_io 및 write_io가 닫히지 않으면 닫힙니다. 즉, read_io 및 / 또는 write_io를 닫아도 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f5a50ecbfb5139750d3c08db4ac94483e3f9088" translate="yes" xml:space="preserve">
          <source>If a block is given, the block is called with the socket. The value of the block is returned. The socket is closed when this method returns.</source>
          <target state="translated">블록이 주어지면 블록은 소켓과 함께 호출됩니다. 블록의 값이 반환됩니다. 이 메소드가 리턴되면 소켓이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="70f0ec9be2359ee33eb734e8591e44920977a0b2" translate="yes" xml:space="preserve">
          <source>If a block is given, the block is called with the sockets. The value of the block is returned. The socket is closed when this method returns.</source>
          <target state="translated">블록이 주어지면 블록은 소켓과 함께 호출됩니다. 블록의 값이 반환됩니다. 이 메소드가 리턴되면 소켓이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="286083f5e4b8e2fcbf46586d18b2f94da86eb227" translate="yes" xml:space="preserve">
          <source>If a block is given, the block is called with the sockets. The value of the block is returned. The sockets are closed when this method returns.</source>
          <target state="translated">블록이 주어지면 블록은 소켓과 함께 호출됩니다. 블록의 값이 반환됩니다. 이 메소드가 리턴되면 소켓이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="e57f5252d8fa6ce36e9da95fe86566906887dc4b" translate="yes" xml:space="preserve">
          <source>If a block is given, the body is passed to the block, and the body is provided in fragments, as it is read in from the socket.</source>
          <target state="translated">블록이 주어지면 몸체는 블록으로 전달되고 몸체는 소켓에서 읽을 때 조각으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6a63baf459be3418006141b00db1af62c8431847" translate="yes" xml:space="preserve">
          <source>If a block is given, the elements of enum are preprocessed by the given block.</source>
          <target state="translated">블록이 주어지면 enum의 요소는 주어진 블록에 의해 전처리됩니다.</target>
        </trans-unit>
        <trans-unit id="838724aae02fdef70d5d000fadf139456354872f" translate="yes" xml:space="preserve">
          <source>If a block is given, the instance is passed the block and the return value becomes the return value of the block.</source>
          <target state="translated">블록이 주어지면 인스턴스에 블록이 전달되고 반환 값은 블록의 반환 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="0e1e6a06b52f4773faa922cfe236ac2efb3642cf" translate="yes" xml:space="preserve">
          <source>If a block is given, the instance is passed to the block and the return value becomes the return value of the block.</source>
          <target state="translated">블록이 주어지면 인스턴스는 블록으로 전달되고 반환 값은 블록의 반환 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="637e9e2f7c59c52f4dd3d32ba1d1b6bc03200cc3" translate="yes" xml:space="preserve">
          <source>If a block is given, the new database will be passed to the block and will be safely closed after the block has executed.</source>
          <target state="translated">블록이 제공되면 새 데이터베이스가 블록으로 전달되고 블록이 실행 된 후 안전하게 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="4eb7820353a4c17110fe35a0bc0bf5101fcc3b7e" translate="yes" xml:space="preserve">
          <source>If a block is given, the results of the block on each element of the array will be used as pairs.</source>
          <target state="translated">블록이 제공되면 배열의 각 요소에 대한 블록 결과가 쌍으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d04fcbb4d482dcc5e5c92776ec6fbe93e167339d" translate="yes" xml:space="preserve">
          <source>If a block is given, the results of the block on each element of the enum will be used as pairs.</source>
          <target state="translated">블록이 주어지면 열거의 각 요소에 대한 블록 결과가 쌍으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="08387a4437d0e18a4ff03b75fc25b964c8ce4dc0" translate="yes" xml:space="preserve">
          <source>If a block is given, the results of the block on each pair of the receiver will be used as pairs.</source>
          <target state="translated">블록이 주어지면, 수신기의 각 쌍의 블록 결과는 쌍으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="774616e4152d961c7de41a35592c6e0b224c8b97" translate="yes" xml:space="preserve">
          <source>If a block is given, the trace will only be disable within the scope of the block.</source>
          <target state="translated">블록이 제공되면 블록 범위 내에서만 추적이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="cae9d501a460c47213ad285b57bd45039d3cccb0" translate="yes" xml:space="preserve">
          <source>If a block is given, the trace will only be enabled within the scope of the block.</source>
          <target state="translated">블록이 제공되면 추적은 블록 범위 내에서만 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="fa7ef909d7b67602a9aa91c8c56f7a38ac37cdcb" translate="yes" xml:space="preserve">
          <source>If a block is given, the value from that is returned from the yield is added to an output array.</source>
          <target state="translated">블록이 제공되면 해당 값이 수율에서 반환되어 출력 배열에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="cd6e84b376ff0848d2c17c9200119d175f918cf8" translate="yes" xml:space="preserve">
          <source>If a block is given, the year described in &lt;code&gt;date&lt;/code&gt; is converted by the block. For example:</source>
          <target state="translated">블록이 제공되면 &lt;code&gt;date&lt;/code&gt; 설명 된 연도 가 블록에 의해 변환됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="92ac048f59bf45a38e772de098536563d4f8410a" translate="yes" xml:space="preserve">
          <source>If a block is given, the year described in &lt;code&gt;date&lt;/code&gt; is converted by the block. This is specifically designed for handling two digit years. For example, if you wanted to treat all two digit years prior to 70 as the year 2000+ you could write this:</source>
          <target state="translated">블록이 제공되면 &lt;code&gt;date&lt;/code&gt; 설명 된 연도 가 블록에 의해 변환됩니다. 이것은 2 자리 연도를 처리하도록 특별히 설계되었습니다. 예를 들어, 70 이전의 두 자리 연도를 2000 년 이상으로 처리하려면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db96f147a7e8f6c92376d2833403c025cedea484" translate="yes" xml:space="preserve">
          <source>If a block is given, then a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object will be constructed, and the block is invoked with the object as the argument. The &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object will be automatically closed and the temporary file is removed after the block terminates. The call returns the value of the block.</source>
          <target state="translated">블록이 주어지면 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체가 생성되고 객체가 인수로 블록이 호출됩니다. &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 블록 종료 후 개체가 자동으로 종료되고 임시 파일이 제거됩니다. 호출은 블록 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="015e5edf79b12c04b6a07414e92eddfbc4decd6d" translate="yes" xml:space="preserve">
          <source>If a block is given, then a &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; object will be constructed, and the block is run with said object as argument. The &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; object will be automatically closed after the block terminates. The call returns the value of the block.</source>
          <target state="translated">블록이 주어지면 &lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt; 객체가 생성되고 해당 객체를 인수로 사용하여 블록이 실행됩니다. &lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt; 객체는 자동으로 차단 종료 후에 폐쇄된다. 호출은 블록 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bb6a06333fbea7184f9db705f7a674e0c00af15b" translate="yes" xml:space="preserve">
          <source>If a block is given, which is a deprecated form, works the same as &lt;code&gt;each_byte&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않는 양식 인 블록이 제공되면 &lt;code&gt;each_byte&lt;/code&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a6c089c0ff042fcdfd90a03b65270e9fcc06e98e" translate="yes" xml:space="preserve">
          <source>If a block is given, which is a deprecated form, works the same as &lt;code&gt;each_char&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않는 형식의 블록이 제공되면 &lt;code&gt;each_char&lt;/code&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d935f526eb730c9033ec56a774d1173d86602b8c" translate="yes" xml:space="preserve">
          <source>If a block is given, which is a deprecated form, works the same as &lt;code&gt;each_codepoint&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않는 양식 인 블록이 제공되면 &lt;code&gt;each_codepoint&lt;/code&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="b7b16d22a289b6d1544a0fcb2d04804aaeb014f8" translate="yes" xml:space="preserve">
          <source>If a block is given, which is a deprecated form, works the same as &lt;code&gt;each_grapheme_cluster&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않는 양식 인 블록이 제공되면 &lt;code&gt;each_grapheme_cluster&lt;/code&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="3e65ba9461848277436c953520d5d41ae4c3d145" translate="yes" xml:space="preserve">
          <source>If a block is given, which is a deprecated form, works the same as &lt;code&gt;each_line&lt;/code&gt;.</source>
          <target state="translated">더 이상 사용되지 않는 양식 인 블록이 제공되면 &lt;code&gt;each_line&lt;/code&gt; 과 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="9dd9f7ecac1da6936497be9910658962f509f18f" translate="yes" xml:space="preserve">
          <source>If a block is not given, The path of the directory is returned. In this case, &lt;a href=&quot;dir#method-c-mktmpdir&quot;&gt;&lt;code&gt;Dir.mktmpdir&lt;/code&gt;&lt;/a&gt; doesn't remove the directory.</source>
          <target state="translated">블록이 제공되지 않으면 디렉토리의 경로가 리턴됩니다. 이 경우 &lt;a href=&quot;dir#method-c-mktmpdir&quot;&gt; &lt;code&gt;Dir.mktmpdir&lt;/code&gt; &lt;/a&gt; 은 디렉토리를 제거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ec2dacff6c6cae2df8caa0f1e689a922dad14f1" translate="yes" xml:space="preserve">
          <source>If a block is passed &lt;a href=&quot;persistent#method-i-request&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; behaves like &lt;a href=&quot;../../../../net/http#method-i-request&quot;&gt;&lt;code&gt;Net::HTTP#request&lt;/code&gt;&lt;/a&gt; (the body of the response will not have been read).</source>
          <target state="translated">블록이 전달되면 &lt;a href=&quot;persistent#method-i-request&quot;&gt; &lt;code&gt;request&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../../../../net/http#method-i-request&quot;&gt; &lt;code&gt;Net::HTTP#request&lt;/code&gt; &lt;/a&gt; (응답 본문을 읽지 못함) 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="71b46061c4bf6803c253e5cf51e5d0e6fcccbf74" translate="yes" xml:space="preserve">
          <source>If a block is provided, returns a new array containing [key, value] pairs for which the block returns true.</source>
          <target state="translated">블록이 제공되면 블록이 true를 리턴하는 [key, value] 쌍을 포함하는 새 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d520a0e24bfbfd34326c54b0fe2aa2736d950c4c" translate="yes" xml:space="preserve">
          <source>If a block is provided, the block will be called when there is no &lt;code&gt;value&lt;/code&gt; associated with the given &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;key&lt;/code&gt; will be passed in as an argument to the block.</source>
          <target state="translated">블록이 제공되면 주어진 &lt;code&gt;key&lt;/code&gt; 와 연관된 &lt;code&gt;value&lt;/code&gt; 이 없을 때 블록이 호출됩니다 . &lt;code&gt;key&lt;/code&gt; 블록에 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="27d8ddf58dea0a9585e35096fa3ec5f3a7678aae" translate="yes" xml:space="preserve">
          <source>If a block is provided, the deleted &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; will be passed to the block as arguments. If the &lt;code&gt;key&lt;/code&gt; does not exist in the database, the value will be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">블록이 제공되면 삭제 된 &lt;code&gt;key&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; 이 인수로 블록에 전달됩니다. 경우 &lt;code&gt;key&lt;/code&gt; 데이터베이스에 존재하지 않는, 값이 될 것입니다 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c192dd486504536a72263c0f13e93817fdcfdf5f" translate="yes" xml:space="preserve">
          <source>If a block is specified, it will be invoked with the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object as a parameter, and the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; will be automatically closed when the block terminates. The call returns the value of the block.</source>
          <target state="translated">블록이 지정되면 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체를 매개 변수로 사용 하여 블록이 호출되고 블록이 종료되면 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 가 자동으로 닫힙니다. 호출은 블록 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cec8bbe94e937ebe03fd19a1614963351fb5cf96" translate="yes" xml:space="preserve">
          <source>If a computation results in a value which is too small to be represented as a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; within the currently specified limits of precision, zero must be returned.</source>
          <target state="translated">계산 결과 현재 지정된 정밀도 한계 내에서 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 로 표현하기에는 너무 작은 값이 생성 되면 0을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e3b117d2300975fca4810173993d3b077ae17420" translate="yes" xml:space="preserve">
          <source>If a connection hasn't been used for this number of seconds it will automatically be reset upon the next use to avoid attempting to send to a closed connection. The default value is 5 seconds. nil means no timeout. &lt;a href=&quot;../../../../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;persistent#attribute-i-idle_timeout&quot;&gt;&lt;code&gt;idle_timeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 시간 (초) 동안 연결을 사용하지 않으면 다음 사용시 닫힌 연결로 전송을 피하기 위해 자동으로 재설정됩니다. 기본값은 5 초입니다. nil은 시간 초과가 없음을 의미합니다. &lt;a href=&quot;persistent#attribute-i-idle_timeout&quot;&gt; &lt;code&gt;idle_timeout&lt;/code&gt; 을&lt;/a&gt; 통해 &lt;a href=&quot;../../../../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3c112849976010ee55f1f5662ebc8a38231b83d" translate="yes" xml:space="preserve">
          <source>If a constant is defined at the top-level you may preceded it with &lt;code&gt;::&lt;/code&gt; to reference it:</source>
          <target state="translated">상수가 최상위에 정의되어 있으면 &lt;code&gt;::&lt;/code&gt; 를 참조 하여 상수 를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18a16149c3b5e1cc6afc35dbdff7da1dcb5490c9" translate="yes" xml:space="preserve">
          <source>If a conversion error occur, &lt;a href=&quot;undefinedconversionerror&quot;&gt;&lt;code&gt;Encoding::UndefinedConversionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;invalidbytesequenceerror&quot;&gt;&lt;code&gt;Encoding::InvalidByteSequenceError&lt;/code&gt;&lt;/a&gt; is raised. &lt;a href=&quot;converter#method-i-convert&quot;&gt;&lt;code&gt;Encoding::Converter#convert&lt;/code&gt;&lt;/a&gt; doesn't supply methods to recover or restart from these exceptions. When you want to handle these conversion errors, use &lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;Encoding::Converter#primitive_convert&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환 오류가 발생하면 &lt;a href=&quot;undefinedconversionerror&quot;&gt; &lt;code&gt;Encoding::UndefinedConversionError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;invalidbytesequenceerror&quot;&gt; &lt;code&gt;Encoding::InvalidByteSequenceError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. &lt;a href=&quot;converter#method-i-convert&quot;&gt; &lt;code&gt;Encoding::Converter#convert&lt;/code&gt; &lt;/a&gt; 는 이러한 예외를 복구하거나 다시 시작하는 방법을 제공하지 않습니다. 이러한 변환 오류를 처리하려면 &lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt; &lt;code&gt;Encoding::Converter#primitive_convert&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07dfa4d2315687465f737014ab99b5961c293987" translate="yes" xml:space="preserve">
          <source>If a file descriptor need to be inherited, io=&amp;gt;io can be used.</source>
          <target state="translated">파일 디스크립터를 상속해야하는 경우 io =&amp;gt; io를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c921f2c39963bdeb64db226804fe13b2a4d33f98" translate="yes" xml:space="preserve">
          <source>If a file is being created, its initial permissions may be set using the &lt;code&gt;perm&lt;/code&gt; parameter. See &lt;a href=&quot;file#method-c-new&quot;&gt;&lt;code&gt;File.new&lt;/code&gt;&lt;/a&gt; and the open(2) and chmod(2) man pages for a description of permissions.</source>
          <target state="translated">파일을 작성하는 경우 &lt;code&gt;perm&lt;/code&gt; 매개 변수를 사용하여 초기 권한을 설정할 수 있습니다 . 권한에 대한 설명은 &lt;a href=&quot;file#method-c-new&quot;&gt; &lt;code&gt;File.new&lt;/code&gt; &lt;/a&gt; 및 open (2) 및 chmod (2) 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="feb933d93c62acaae248667151ea24efe1e3f95f" translate="yes" xml:space="preserve">
          <source>If a file is being created, its initial permissions may be set using the &lt;code&gt;perm&lt;/code&gt; parameter. See &lt;a href=&quot;file#method-c-new&quot;&gt;&lt;code&gt;File.new&lt;/code&gt;&lt;/a&gt; for further discussion.</source>
          <target state="translated">파일을 작성하는 경우 &lt;code&gt;perm&lt;/code&gt; 매개 변수를 사용하여 초기 권한을 설정할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;file#method-c-new&quot;&gt; &lt;code&gt;File.new&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f20c71e46801c993df6b7666b91f992944dad54" translate="yes" xml:space="preserve">
          <source>If a file is being created, permission bits may be given in &lt;code&gt;perm&lt;/code&gt;. These mode and permission bits are platform dependent; on Unix systems, see open(2) and chmod(2) man pages for details.</source>
          <target state="translated">파일이 작성되면 권한 비트가 &lt;code&gt;perm&lt;/code&gt; 에 제공 될 수 있습니다 . 이 모드 및 권한 비트는 플랫폼에 따라 다릅니다. Unix 시스템에서 자세한 내용은 open (2) 및 chmod (2) 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="279cde73ac605aedc8cff86f18a249d2aa7b229a" translate="yes" xml:space="preserve">
          <source>If a hash is given as &lt;code&gt;env&lt;/code&gt;, the environment is updated by &lt;code&gt;env&lt;/code&gt; before &lt;code&gt;exec(2)&lt;/code&gt; in the child process. If a pair in &lt;code&gt;env&lt;/code&gt; has nil as the value, the variable is deleted.</source>
          <target state="translated">해시가 &lt;code&gt;env&lt;/code&gt; 로 주어지면 환경은 자식 프로세스에서 &lt;code&gt;exec(2)&lt;/code&gt; 전에 &lt;code&gt;env&lt;/code&gt; 에 의해 업데이트됩니다 . &lt;code&gt;env&lt;/code&gt; 의 쌍에 값이 nil 인 경우 변수가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="33a43310f913527f25cc700b8df6742322bddec3" translate="yes" xml:space="preserve">
          <source>If a hash is given as &lt;code&gt;options&lt;/code&gt;, it specifies process group, create new process group, resource limit, current directory, umask and redirects for the child process. Also, it can be specified to clear environment variables.</source>
          <target state="translated">해시가 &lt;code&gt;options&lt;/code&gt; 로 제공 되면 프로세스 그룹을 지정하고 새 프로세스 그룹, 자원 제한, 현재 디렉토리, umask 및 하위 프로세스에 대한 경로 재 지정을 지정합니다. 또한 환경 변수를 지우도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37a37569ec6ce062f7e14dd5b50b68d5848ff5f1" translate="yes" xml:space="preserve">
          <source>If a match between incompatible encodings is attempted an &lt;code&gt;Encoding::CompatibilityError&lt;/code&gt; exception is raised.</source>
          <target state="translated">호환되지 않는 인코딩 사이의 일치가 시도되면 &lt;code&gt;Encoding::CompatibilityError&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e2ce5104ea9ffa523506e1c7a61bc8ef7c61f6b6" translate="yes" xml:space="preserve">
          <source>If a method has protected visibility, it is callable only where &lt;code&gt;self&lt;/code&gt; of the context is the same as the method. (method definition or instance_eval). This behavior is different from Java's protected method. Usually &lt;code&gt;private&lt;/code&gt; should be used.</source>
          <target state="translated">메소드가 가시성을 보호 한 경우 컨텍스트 &lt;code&gt;self&lt;/code&gt; 가 메소드와 동일한 경우 에만 호출 할 수 있습니다. (메소드 정의 또는 instance_eval). 이 동작은 Java의 보호 된 방법과 다릅니다. 일반적으로 &lt;code&gt;private&lt;/code&gt; 이 사용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0c6330f995e55782d0748fdb5f5eceb23cd2d699" translate="yes" xml:space="preserve">
          <source>If a method is defined in a scope where a refinement is active, the refinement will be active when the method is called. This example spans multiple files:</source>
          <target state="translated">구체화가 활성화 된 범위에 메소드가 정의되어 있으면 메소드가 호출 될 때 구체화가 활성화됩니다. 이 예제는 여러 파일에 걸쳐 있습니다.</target>
        </trans-unit>
        <trans-unit id="c38fe76fba3b821f248fd60e206109da258ba22e" translate="yes" xml:space="preserve">
          <source>If a negative number is given, raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">음수를 지정하면 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2803e2cc7d22ac1328ad45ea63d3e47fdbb6ef8d" translate="yes" xml:space="preserve">
          <source>If a number &lt;code&gt;n&lt;/code&gt; is given, returns an array of the first &lt;code&gt;n&lt;/code&gt; elements (or less) just like &lt;code&gt;array.slice!(0, n)&lt;/code&gt; does. With &lt;code&gt;ary&lt;/code&gt; containing only the remainder elements, not including what was shifted to &lt;code&gt;new_ary&lt;/code&gt;. See also &lt;a href=&quot;array#method-i-unshift&quot;&gt;&lt;code&gt;Array#unshift&lt;/code&gt;&lt;/a&gt; for the opposite effect.</source>
          <target state="translated">숫자 &lt;code&gt;n&lt;/code&gt; 이 주어지면 &lt;code&gt;array.slice!(0, n)&lt;/code&gt; 과 마찬가지로 첫 &lt;code&gt;n&lt;/code&gt; 개의 요소 (또는 그 이하) 의 배열을 반환합니다 . 와 &lt;code&gt;ary&lt;/code&gt; 하지으로 이동 한 것을 포함하여 포함 된 유일한 나머지 요소, &lt;code&gt;new_ary&lt;/code&gt; . 반대 효과에 대해서는 &lt;a href=&quot;array#method-i-unshift&quot;&gt; &lt;code&gt;Array#unshift&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad60c61ff5329cb5ffd8663db845037df77ebf9c" translate="yes" xml:space="preserve">
          <source>If a number &lt;code&gt;n&lt;/code&gt; is given, returns an array of the last &lt;code&gt;n&lt;/code&gt; elements (or less) just like &lt;code&gt;array.slice!(-n, n)&lt;/code&gt; does. See also &lt;a href=&quot;array#method-i-push&quot;&gt;&lt;code&gt;Array#push&lt;/code&gt;&lt;/a&gt; for the opposite effect.</source>
          <target state="translated">숫자 &lt;code&gt;n&lt;/code&gt; 이 주어지면 &lt;code&gt;array.slice!(-n, n)&lt;/code&gt; 과 마찬가지로 마지막 &lt;code&gt;n&lt;/code&gt; 개의 요소 (또는 그 이하) 의 배열을 반환합니다 . 반대 효과에 대해서는 &lt;a href=&quot;array#method-i-push&quot;&gt; &lt;code&gt;Array#push&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="991b887e6cadeec2b567da45f47c0a9ba90d0777" translate="yes" xml:space="preserve">
          <source>If a parameter does not exist, the former method will return an empty array, the latter an empty string. The simplest way to test for existence of a parameter is by the has_key? method.</source>
          <target state="translated">매개 변수가 존재하지 않는 경우, 이전 메소드는 빈 배열을 리턴하고, 후자는 빈 문자열을 리턴합니다. 매개 변수가 있는지 테스트하는 가장 간단한 방법은 has_key? 방법.</target>
        </trans-unit>
        <trans-unit id="a14b74065661454044434aac3bdcbe41c68f8b7d" translate="yes" xml:space="preserve">
          <source>If a pattern isn't anchored it can begin at any point in the string:</source>
          <target state="translated">패턴이 고정되어 있지 않으면 문자열의 어느 시점에서나 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cef2a551573db1cd9c4634b8447f40bb541f9d13" translate="yes" xml:space="preserve">
          <source>If a request's method is POST and its content type is multipart/form-data, then it may contain uploaded files. These are stored by the &lt;a href=&quot;cgi/queryextension&quot;&gt;&lt;code&gt;QueryExtension&lt;/code&gt;&lt;/a&gt; module in the parameters of the request. The parameter name is the name attribute of the file input field, as usual. However, the value is not a string, but an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object, either an IOString for small files, or a &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; for larger ones. This object also has the additional singleton methods:</source>
          <target state="translated">요청의 메소드가 POST이고 컨텐츠 유형이 multipart / form-data 인 경우 업로드 된 파일을 포함 할 수 있습니다. 이들은 &lt;a href=&quot;cgi/queryextension&quot;&gt; &lt;code&gt;QueryExtension&lt;/code&gt; &lt;/a&gt; 모듈에 의해 요청의 매개 변수에 저장됩니다 . 매개 변수 이름은 평소와 같이 파일 입력 필드의 이름 속성입니다. 그러나 값은 문자열이 아니라 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 객체, 작은 파일의 IOString 또는 큰 파일의 &lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt; 입니다. 이 객체에는 추가 싱글 톤 메소드도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffe0e48821baaead6dd14a9181c7d0b05e7f147b" translate="yes" xml:space="preserve">
          <source>If a secure random number generator is not available, &lt;code&gt;NotImplementedError&lt;/code&gt; is raised.</source>
          <target state="translated">안전한 난수 생성기를 사용할 수 없으면 &lt;code&gt;NotImplementedError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="09a7318d7c701bc187a28958dd59e3596d646bfe" translate="yes" xml:space="preserve">
          <source>If a single CR (&amp;ldquo;r&amp;rdquo;) or LF (&amp;ldquo;n&amp;rdquo;) is found in the message, it is converted to the CR LF pair. You cannot send a binary message with this method.</source>
          <target state="translated">메시지에서 단일 CR ( &quot;r&quot;) 또는 LF ( &quot;n&quot;)가 발견되면 CR LF 쌍으로 변환됩니다. 이 방법으로는 이진 메시지를 보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9f15b27acbaf8ce28fb5662747499f070d6b97b2" translate="yes" xml:space="preserve">
          <source>If a string contains the pattern it is said to &lt;em&gt;match&lt;/em&gt;. A literal string matches itself.</source>
          <target state="translated">문자열에 패턴이 포함되어 있으면 &lt;em&gt;일치&lt;/em&gt; 한다고합니다 . 리터럴 문자열은 자체와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d8ddc28d6ce58074a111368b3bdf8514955ff4e8" translate="yes" xml:space="preserve">
          <source>If a string is given, checks whether it is equal to the hex-encoded hash value of the digest object. If another digest instance is given, checks whether they have the same hash value. Otherwise returns false.</source>
          <target state="translated">문자열이 제공되면, 요약 오브젝트의 16 진 인코딩 된 해시 값과 같은지 확인합니다. 다른 다이제스트 인스턴스가 제공되면 해시 값이 같은지 확인합니다. 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8fa008471bde132740e858433621389be793ce5f" translate="yes" xml:space="preserve">
          <source>If a string is passed, it is assumed to be the content type.</source>
          <target state="translated">문자열이 전달되면 컨텐츠 유형 인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="faab3355fed0ad699470415ae5c3c59a06a85861" translate="yes" xml:space="preserve">
          <source>If a two-element &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; is provided, it is assumed to be a header and field and the pair is appended. A &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; works the same way with the key being the header and the value being the field. Anything else is assumed to be a lone field which is appended with a &lt;code&gt;nil&lt;/code&gt; header.</source>
          <target state="translated">요소가 2 개인 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 가 제공되면 헤더 및 필드 인 것으로 가정하고 쌍이 추가됩니다. &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 키가 헤더 존재하고 값 필드 인와 같은 방식으로 작동합니다. 다른 것은 &lt;code&gt;nil&lt;/code&gt; 헤더 가 추가 된 고독한 필드로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="75c1bb0f0a8540155e663b4c00c4d86147662825" translate="yes" xml:space="preserve">
          <source>If all fresh dependencies are satisfied by the locked</source>
          <target state="translated">잠긴 모든 새로운 종속성이 충족되는 경우</target>
        </trans-unit>
        <trans-unit id="d0d8e1731347f035d3270bc3ce0f22c9b88edf70" translate="yes" xml:space="preserve">
          <source>If all the arguments are integers, the loop operates using an integer counter.</source>
          <target state="translated">모든 인수가 정수이면 루프는 정수 카운터를 사용하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="265e6bf32005d24ea0a8b5568be4f01bab00c0d1" translate="yes" xml:space="preserve">
          <source>If all the elements are equal, then the result is based on a comparison of the array lengths. Thus, two arrays are &amp;ldquo;equal&amp;rdquo; according to Array#&amp;lt;=&amp;gt; if, and only if, they have the same length and the value of each element is equal to the value of the corresponding element in the other array.</source>
          <target state="translated">모든 요소가 같으면 결과는 배열 길이의 비교를 기반으로합니다. 따라서 두 배열은 길이가 같고 각 요소의 값이 다른 배열의 해당 요소의 값과 같은 경우에만 Array # &amp;lt;=&amp;gt;에 따라 &quot;동일&quot;합니다.</target>
        </trans-unit>
        <trans-unit id="79ecc08f9d281ba972fee94fb7aa69ec7d3a76bf" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; is used, the components must be passed in the order &lt;code&gt;[host, path]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 사용 하는 경우 구성 요소는 &lt;code&gt;[host, path]&lt;/code&gt; 순서로 전달되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="abb78c7e0df3c08416ba8a43a9b262d1011472d0" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; is used, the components must be passed in the order &lt;code&gt;[host, port, dn, attributes, scope, filter, extensions]&lt;/code&gt;.</source>
          <target state="translated">는 IF &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 사용하는 경우, 성분의 순서로 전달되어야한다 &lt;code&gt;[host, port, dn, attributes, scope, filter, extensions]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56717122e8a8184a36d2cc3d1b98e96fc315600d" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; is used, the components must be passed in the order &lt;code&gt;[userinfo, host, port, path, query, fragment]&lt;/code&gt;.</source>
          <target state="translated">는 IF &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 사용하는 경우, 성분의 순서로 전달되어야한다 &lt;code&gt;[userinfo, host, port, path, query, fragment]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b3bc450670772c514781a18e1a7812f6929c11f" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; is used, the components must be passed in the order &lt;code&gt;[userinfo, host, port, path, typecode]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 사용 하는 경우 구성 요소는 &lt;code&gt;[userinfo, host, port, path, typecode]&lt;/code&gt; 순서로 전달되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2b9eb30a05b11884e6df7d440b684191d311a784" translate="yes" xml:space="preserve">
          <source>If an argument is given, &lt;a href=&quot;sslcontext#method-i-ssl_version-3D&quot;&gt;&lt;code&gt;ssl_version=&lt;/code&gt;&lt;/a&gt; is called with the value. Note that this form is deprecated. New applications should use &lt;a href=&quot;sslcontext#method-i-min_version-3D&quot;&gt;&lt;code&gt;min_version=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sslcontext#method-i-max_version-3D&quot;&gt;&lt;code&gt;max_version=&lt;/code&gt;&lt;/a&gt; as necessary.</source>
          <target state="translated">인수가 제공되면 &lt;a href=&quot;sslcontext#method-i-ssl_version-3D&quot;&gt; &lt;code&gt;ssl_version=&lt;/code&gt; &lt;/a&gt; 이 값과 함께 호출됩니다. 이 양식은 더 이상 사용되지 않습니다. 새로운 응용 프로그램은 필요에 따라 &lt;a href=&quot;sslcontext#method-i-min_version-3D&quot;&gt; &lt;code&gt;min_version=&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sslcontext#method-i-max_version-3D&quot;&gt; &lt;code&gt;max_version=&lt;/code&gt; &lt;/a&gt; 을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="160a218c69abe4be292f621b7378fca6a8265c4d" translate="yes" xml:space="preserve">
          <source>If an argument is given, counts the number of elements which equal &lt;code&gt;obj&lt;/code&gt; using &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="translated">인수가 제공되면 &lt;code&gt;==&lt;/code&gt; 을 사용하여 &lt;code&gt;obj&lt;/code&gt; 와 동일한 요소 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="1be1df8f03d34d75157aee88b609640541945974" translate="yes" xml:space="preserve">
          <source>If an array of IOs and integers are specified as a hash key, all the elements are redirected.</source>
          <target state="translated">IO 및 정수 배열이 해시 키로 지정되면 모든 요소가 리디렉션됩니다.</target>
        </trans-unit>
        <trans-unit id="e6ed0184c99e7f887666f72ee6e9d13bcc70ec3d" translate="yes" xml:space="preserve">
          <source>If an attacker can control the first two arguments to &lt;code&gt;send&lt;/code&gt;, remote code execution is possible:</source>
          <target state="translated">공격자가 &lt;code&gt;send&lt;/code&gt; 첫 두 인수를 제어 할 수 있으면 원격 코드 실행이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="7d880f245b82825cb03df2574ef24446dd38156d" translate="yes" xml:space="preserve">
          <source>If an authenticated cipher was used, a &lt;code&gt;CipherError&lt;/code&gt; is raised if the tag could not be authenticated successfully. Only call this method after setting the authentication tag and passing the entire contents of the ciphertext into the cipher.</source>
          <target state="translated">인증 된 암호가 사용 된 경우 태그를 성공적으로 인증 할 수 없으면 &lt;code&gt;CipherError&lt;/code&gt; 가 발생합니다. 인증 태그를 설정하고 암호문의 전체 내용을 암호로 전달한 후에 만이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="235a0afd05b74d78f4367058f0cdbdf9544decb8" translate="yes" xml:space="preserve">
          <source>If an encoding (encoding name or encoding object) is specified as an optional argument, read string from pipe is tagged with the encoding specified. If the argument is a colon separated two encoding names &amp;ldquo;A:B&amp;rdquo;, the read string is converted from encoding A (external encoding) to encoding B (internal encoding), then tagged with B. If two optional arguments are specified, those must be encoding objects or encoding names, and the first one is the external encoding, and the second one is the internal encoding. If the external encoding and the internal encoding is specified, optional hash argument specify the conversion option.</source>
          <target state="translated">인코딩 (인코딩 이름 또는 인코딩 객체)이 선택적 인수로 지정된 경우 파이프에서 읽은 문자열은 지정된 인코딩으로 태그가 지정됩니다. 인수가 콜론으로 구분 된 두 인코딩 이름 &quot;A : B&quot;인 경우 읽기 문자열은 인코딩 A (외부 인코딩)에서 인코딩 B (내부 인코딩)로 변환 된 다음 B로 태그가 지정됩니다. 두 개의 선택적 인수가 지정되면 해당 문자열은 객체 또는 인코딩 이름을 인코딩해야하며 첫 번째는 외부 인코딩이고 두 번째는 내부 인코딩입니다. 외부 인코딩과 내부 인코딩이 지정된 경우 선택적 해시 인수는 변환 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0a0ad6687a21ec42589542f48ebf2525baf51ccf" translate="yes" xml:space="preserve">
          <source>If an error occurs during processing input buffer, an exception which is a subclass of &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt; is raised. At that time, both input and output buffer keep their conditions at the time when the error occurs.</source>
          <target state="translated">입력 버퍼를 처리하는 동안 오류가 발생하면 &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Zlib::Error&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인 예외 가 발생합니다. 그때, 입력 및 출력 버퍼는 모두 오류가 발생할 때의 상태를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="44e6214b50ea4714e6907204865e9ba8c711dc1d" translate="yes" xml:space="preserve">
          <source>If an error occurs, one of the following exceptions will be raised:</source>
          <target state="translated">오류가 발생하면 다음 예외 중 하나가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0e560c9dfafaaac607767483ccfc9192b99498b2" translate="yes" xml:space="preserve">
          <source>If an object is returned by a method invoked over drb, but the class of the object is unknown in the client namespace, or the object is a constant unknown in the client namespace, then the still-marshalled object is returned wrapped in a &lt;a href=&quot;drbunknown&quot;&gt;&lt;code&gt;DRbUnknown&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">drb를 통해 호출 된 메소드에 의해 오브젝트가 리턴되었지만 클라이언트 네임 스페이스에서 오브젝트 클래스를 알 수 없거나 클라이언트 네임 스페이스에서 오브젝트를 알 수없는 상수 인 경우, 여전히 마샬링 된 오브젝트는 &lt;a href=&quot;drbunknown&quot;&gt; &lt;code&gt;DRbUnknown&lt;/code&gt; &lt;/a&gt; 인스턴스에 랩핑되어 리턴됩니다. .</target>
        </trans-unit>
        <trans-unit id="565b8ee7a80ab662836212f1072053619f9be60f" translate="yes" xml:space="preserve">
          <source>If an object which includes this module is returned by method called over drb, then the object remains in the server space and a reference to the object is returned, rather than the object being marshalled and moved into the client space.</source>
          <target state="translated">이 모듈을 포함하는 오브젝트가 over drb라는 메소드에 의해 리턴되면, 오브젝트는 마샬링되어 클라이언트 공간으로 이동되는 것이 아니라 서버 공간에 남아 있고 오브젝트에 대한 참조가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c16911f1ad617630b40a5017ea14c345ac4262af" translate="yes" xml:space="preserve">
          <source>If anIO (an IO-like object or an object that responds to the write method) was given, the resulting &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; is written to it.</source>
          <target state="translated">IO (IO와 유사한 객체 또는 write 메소드에 응답하는 객체)가 제공된 경우 결과 &lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; 이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="22de73774d482f292c2ccd0b12a4025008589eb5" translate="yes" xml:space="preserve">
          <source>If any of the arguments are floating point numbers, all are converted to floats, and the loop is executed &lt;em&gt;floor(n + n*Float::EPSILON) + 1&lt;/em&gt; times, where &lt;em&gt;n = (limit - num)/step&lt;/em&gt;.</source>
          <target state="translated">인수 중 하나가 부동 소수점 숫자 인 경우 모두 부동 소수점으로 변환되고 루프는 &lt;em&gt;floor (n + n * Float :: EPSILON) + 1&lt;/em&gt; 회 실행됩니다 (여기서 &lt;em&gt;n = (limit-num) / step)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d5cd4d670b8a142c9ec83b1ff29425053596b1c0" translate="yes" xml:space="preserve">
          <source>If asked to limit the correct responses, you can pass in an array of acceptable answers. If one of those is not supplied, they will be shown a message stating that one of those answers must be given and re-asked the question.</source>
          <target state="translated">올바른 답변을 제한하라는 요청을 받으면 수용 가능한 답변을 전달할 수 있습니다. 이 중 하나가 제공되지 않으면 해당 답변 중 하나를 제공하고 질문을 다시해야한다는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bce2dec2fcbaadc91d3780c0b89a78f5e1c9ac1f" translate="yes" xml:space="preserve">
          <source>If asking for sensitive information, the :echo option can be set to false to mask user input from $stdin.</source>
          <target state="translated">민감한 정보를 요청하는 경우 $ stdin에서 사용자 입력을 마스킹하기 위해 : echo 옵션을 false로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec680375890524c97c19e24155121564f1e4bdd5" translate="yes" xml:space="preserve">
          <source>If both of &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; are given, &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; authentication will be attempted using the AUTH command. &lt;code&gt;authtype&lt;/code&gt; specifies the type of authentication to attempt; it must be one of :login, :plain, and :cram_md5. See the notes on &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; Authentication in the overview.</source>
          <target state="translated">두 경우 &lt;code&gt;user&lt;/code&gt; 와 &lt;code&gt;secret&lt;/code&gt; 주어집니다, &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; 의&lt;/a&gt; 인증은 AUTH 명령을 사용하여 시도됩니다. &lt;code&gt;authtype&lt;/code&gt; 은 시도 할 인증 유형을 지정합니다. : login, : plain 및 : cram_md5 중 하나 여야합니다. 개요 에서 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt; 인증에 대한 참고 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="85b27afaca6c439573eabfa45ab4972408e88217" translate="yes" xml:space="preserve">
          <source>If called as iterator, it restores the current directory when the block ends.</source>
          <target state="translated">반복자로 불리면 블록이 종료 될 때 현재 디렉토리를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="b8387eddbb7d4719b1677ed70c1a40c8f5cd15ff" translate="yes" xml:space="preserve">
          <source>If called on a subclass of &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, converts the receiver to an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 의 서브 클래스에서 호출 되면 수신자를 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 객체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="4b63482f1a0e0f1e54a7d4d58fe78fb0644aefbb" translate="yes" xml:space="preserve">
          <source>If called on a subclass of &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, converts the receiver to a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 의 서브 클래스에서 호출 되면 수신자를 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 객체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="c2bae7dac465a9bdc74b8fdcf97f5c1f49015b65" translate="yes" xml:space="preserve">
          <source>If called with a &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; argument, returns &lt;code&gt;true&lt;/code&gt; when the given range is covered by the receiver, by comparing the begin and end values. If the argument can be treated as a sequence, this method treats it that way. In the specific case of &lt;code&gt;(a..b).cover?(c...d)&lt;/code&gt; with &lt;code&gt;a &amp;lt;= c &amp;amp;&amp;amp; b &amp;lt; d&lt;/code&gt;, the end of the sequence must be calculated, which may exhibit poor performance if &lt;code&gt;c&lt;/code&gt; is non-numeric. Returns &lt;code&gt;false&lt;/code&gt; if the begin value of the range is larger than the end value.</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 인수 와 함께 호출 하면 시작 및 종료 값을 비교하여 수신기가 지정된 범위를 커버 할 때 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다. 인수를 시퀀스로 취급 할 수있는 경우,이 메소드는 인수를 그런 식으로 취급합니다. 특정 케이스 &lt;code&gt;(a..b).cover?(c...d)&lt;/code&gt; 와 &lt;code&gt;a &amp;lt;= c &amp;amp;&amp;amp; b &amp;lt; d&lt;/code&gt; , 시퀀스의 끝이 경우 성능 저하를 나타낼 수있는 계산되어야 &lt;code&gt;c&lt;/code&gt; 비이고 숫자. 범위의 시작 값이 종료 값보다 큰 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="99d12675e80d7b9e06c49799477b99320458a809" translate="yes" xml:space="preserve">
          <source>If called with a block, the newly-opened &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;Net::SMTP&lt;/code&gt;&lt;/a&gt; object is yielded to the block, and automatically closed when the block finishes. If called without a block, the newly-opened &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;Net::SMTP&lt;/code&gt;&lt;/a&gt; object is returned to the caller, and it is the caller's responsibility to close it when finished.</source>
          <target state="translated">블록과 함께 호출하면 새로 열린 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;Net::SMTP&lt;/code&gt; &lt;/a&gt; 객체가 블록에 생성되고 블록이 완료되면 자동으로 닫힙니다. 블록없이 호출하면 새로 열린 &lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;Net::SMTP&lt;/code&gt; &lt;/a&gt; 개체가 호출자에게 반환되며 완료되면 호출자가 닫습니다.</target>
        </trans-unit>
        <trans-unit id="f2323d8f2ac27ad1ff24edf30c4f44c5bee615ae" translate="yes" xml:space="preserve">
          <source>If called with a block, yields each fragment of the entity body in turn as a string as it is read from the socket. Note that in this case, the returned response object will &lt;strong&gt;not&lt;/strong&gt; contain a (meaningful) body.</source>
          <target state="translated">블록과 함께 호출되면 소켓에서 읽을 때 엔티티 본문의 각 단편을 차례로 문자열로 생성합니다. 이 경우 반환 된 응답 객체 에는 (의미있는) 본문이 포함 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a946ff5a1182778a5b0c8ad3902bd9f0b6ad0501" translate="yes" xml:space="preserve">
          <source>If called with a block, yields each message in turn before deleting it.</source>
          <target state="translated">블록과 함께 호출되면 삭제하기 전에 각 메시지를 차례로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b6ee05a5c6f126b1666276adc1182804762a2829" translate="yes" xml:space="preserve">
          <source>If called with a block, yields the &lt;a href=&quot;../optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; object and returns the result of the block. If an &lt;a href=&quot;parseerror&quot;&gt;&lt;code&gt;OptionParser::ParseError&lt;/code&gt;&lt;/a&gt; exception occurs in the block, it is rescued, a error message printed to STDERR and &lt;code&gt;nil&lt;/code&gt; returned.</source>
          <target state="translated">블록과 함께 호출하면 &lt;a href=&quot;../optionparser&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt; 객체가 생성되고 블록 의 결과가 반환됩니다. 블록에서 &lt;a href=&quot;parseerror&quot;&gt; &lt;code&gt;OptionParser::ParseError&lt;/code&gt; &lt;/a&gt; 예외가 발생 하면 복구 되고 STDERR에 오류 메시지가 인쇄되고 &lt;code&gt;nil&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="00f5d22ca461971e98dd59ee92827edfd4bcc298" translate="yes" xml:space="preserve">
          <source>If called with no arguments, all fields are returned.</source>
          <target state="translated">인수없이 호출하면 모든 필드가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4c0e23455ab27e804784e7445b88fd714a704f0e" translate="yes" xml:space="preserve">
          <source>If called without a block, this is synonymous to &lt;a href=&quot;gdbm#method-c-new&quot;&gt;&lt;code&gt;GDBM::new&lt;/code&gt;&lt;/a&gt;. If a block is given, the new &lt;a href=&quot;gdbm&quot;&gt;&lt;code&gt;GDBM&lt;/code&gt;&lt;/a&gt; instance will be passed to the block as a parameter, and the corresponding database file will be closed after the execution of the block code has been finished.</source>
          <target state="translated">블록없이 호출되면 이는 &lt;a href=&quot;gdbm#method-c-new&quot;&gt; &lt;code&gt;GDBM::new&lt;/code&gt; &lt;/a&gt; 동의어 입니다. 블록이 제공되면 새 &lt;a href=&quot;gdbm&quot;&gt; &lt;code&gt;GDBM&lt;/code&gt; &lt;/a&gt; 인스턴스가 매개 변수로 블록에 전달되고 블록 코드 실행이 완료된 후 해당 데이터베이스 파일이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="9bce29e8cec5629ca39b9ce294ee10f81b19a5ba" translate="yes" xml:space="preserve">
          <source>If called without a block, this is the same as &lt;a href=&quot;sdbm#method-c-new&quot;&gt;&lt;code&gt;SDBM.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">블록없이 호출되면 &lt;a href=&quot;sdbm#method-c-new&quot;&gt; &lt;code&gt;SDBM.new&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4afcd31960f862688fb59904f7b4b71a580422c6" translate="yes" xml:space="preserve">
          <source>If called without an argument, or if &lt;code&gt;max.to_i.abs == 0&lt;/code&gt;, rand returns a pseudo-random floating point number between 0.0 and 1.0, including 0.0 and excluding 1.0.</source>
          <target state="translated">인수없이 호출되거나 &lt;code&gt;max.to_i.abs == 0&lt;/code&gt; 경우 rand는 0.0과 1.0을 포함하여 0.0과 1.0 사이의 의사 난수 부동 소수점 숫자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a8dd8fb2f07992f0fcc4b018bba79275b3be403e" translate="yes" xml:space="preserve">
          <source>If changes were made, it will return &lt;code&gt;self&lt;/code&gt;, otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">변경 한 경우는 &lt;code&gt;self&lt;/code&gt; 를 돌려 &lt;code&gt;nil&lt;/code&gt; , 그렇지 않은 경우는 nil를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="a1a9622f90aa1bf8b40b7f2d8d69e99e01af1b18" translate="yes" xml:space="preserve">
          <source>If charset parameter and block is not given, nil is returned except text type in HTTP. In that case, &amp;ldquo;iso-8859-1&amp;rdquo; is returned as defined by RFC2616 3.7.1.</source>
          <target state="translated">문자 세트 매개 변수 및 블록이 제공되지 않으면 HTTP의 텍스트 유형을 제외하고 nil이 리턴됩니다. 이 경우 RFC2616 3.7.1에 정의 된대로 &quot;iso-8859-1&quot;이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c063a1624a4367f2b2d415a5e382a7edf045e808" translate="yes" xml:space="preserve">
          <source>If charset parameter is not given but a block is given, the block is called and its result is returned. It can be used to guess charset.</source>
          <target state="translated">문자 세트 매개 변수가 제공되지 않지만 블록이 제공되면 블록이 호출되고 결과가 리턴됩니다. 문자셋을 추측하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a25caf5d7327d0187e6d60b6533296def6c2e9f9" translate="yes" xml:space="preserve">
          <source>If digits is 0, the result is the same as for the / operator or &lt;a href=&quot;bigdecimal#method-i-quo&quot;&gt;&lt;code&gt;quo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숫자가 0이면 결과는 / 연산자 또는 &lt;a href=&quot;bigdecimal#method-i-quo&quot;&gt; &lt;code&gt;quo&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="a82ca3f00a48708d0c494920e6a388d1f79a3377" translate="yes" xml:space="preserve">
          <source>If digits is not specified, the result is an integer, by analogy with &lt;a href=&quot;numeric#method-i-div&quot;&gt;&lt;code&gt;Float#div&lt;/code&gt;&lt;/a&gt;; see also &lt;a href=&quot;bigdecimal#method-i-divmod&quot;&gt;&lt;code&gt;BigDecimal#divmod&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숫자를 지정하지 않으면 &lt;a href=&quot;numeric#method-i-div&quot;&gt; &lt;code&gt;Float#div&lt;/code&gt; &lt;/a&gt; 와 유사하게 결과가 정수입니다 . &lt;a href=&quot;bigdecimal#method-i-divmod&quot;&gt; &lt;code&gt;BigDecimal#divmod&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f026bd9191ee06613f39422ada4ff32f76ac080" translate="yes" xml:space="preserve">
          <source>If for some reason you cannot migrate to other secure contemporary password hashing algorithms, install the string-crypt gem and &lt;code&gt;require 'string/crypt'&lt;/code&gt; to continue using it.</source>
          <target state="translated">어떤 이유로 최신 보안 암호 해싱 알고리즘으로 마이그레이션 할 수없는 경우 문자열 암호화 gem을 설치하고 계속 사용 &lt;code&gt;require 'string/crypt'&lt;/code&gt; 가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="dcbd522fb5e6253bc5a36b41022029144e1278a3" translate="yes" xml:space="preserve">
          <source>If fork is not usable, Process.respond_to?(:fork) returns false.</source>
          <target state="translated">포크를 사용할 수 없으면 Process.respond_to? (: fork)는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9346a8ddb3b817930662d0320bf8a617d20e43d1" translate="yes" xml:space="preserve">
          <source>If given a block, &lt;a href=&quot;array#method-i-product&quot;&gt;&lt;code&gt;product&lt;/code&gt;&lt;/a&gt; will yield all combinations and return &lt;code&gt;self&lt;/code&gt; instead.</source>
          <target state="translated">블록이 주어지면 &lt;a href=&quot;array#method-i-product&quot;&gt; &lt;code&gt;product&lt;/code&gt; &lt;/a&gt; 은 모든 조합을 산출하고 대신 &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a9df4a2ef6f870a81be35b71baa0225fe86a369b" translate="yes" xml:space="preserve">
          <source>If indices are greater than the current capacity of the array, the array grows automatically. Elements are inserted into the array at &lt;code&gt;start&lt;/code&gt; if &lt;code&gt;length&lt;/code&gt; is zero.</source>
          <target state="translated">인덱스가 어레이의 현재 용량보다 크면 어레이가 자동으로 커집니다. &lt;code&gt;length&lt;/code&gt; 가 0 이면 &lt;code&gt;start&lt;/code&gt; 요소가 배열에 삽입됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad86fd12543cb38cd9f6b5bf08af5c5a9bbf4220" translate="yes" xml:space="preserve">
          <source>If instead a pattern is supplied, the method returns whether &lt;code&gt;pattern === element&lt;/code&gt; for any collection member.</source>
          <target state="translated">대신 패턴이 제공되면 메소드는 콜렉션 멤버의 &lt;code&gt;pattern === element&lt;/code&gt; 인지 여부를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e82deb2dad21d190529d045e8d8800c3aa138bd8" translate="yes" xml:space="preserve">
          <source>If instead a pattern is supplied, the method returns whether &lt;code&gt;pattern === element&lt;/code&gt; for every collection member.</source>
          <target state="translated">대신 패턴이 제공되면 메소드는 모든 콜렉션 멤버에 대해 &lt;code&gt;pattern === element&lt;/code&gt; 인지 여부를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="fadfb88d5fd6acb8d3a4786abb3827e571089730" translate="yes" xml:space="preserve">
          <source>If instead a pattern is supplied, the method returns whether &lt;code&gt;pattern === element&lt;/code&gt; for exactly one collection member.</source>
          <target state="translated">대신 패턴이 제공되면 메소드는 정확히 하나의 콜렉션 멤버에 대해 &lt;code&gt;pattern === element&lt;/code&gt; 인지 여부를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7a1db38b772a9d97ad888255e0490200bc2cdb44" translate="yes" xml:space="preserve">
          <source>If instead a pattern is supplied, the method returns whether &lt;code&gt;pattern === element&lt;/code&gt; for none of the collection members.</source>
          <target state="translated">대신 패턴이 제공되는 &lt;code&gt;pattern === element&lt;/code&gt; 메소드는 콜렉션 멤버가없는 경우 pattern === 요소 인지 여부를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4ff059b4278e706054a2c5e6486f6e76df593922" translate="yes" xml:space="preserve">
          <source>If it is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, spaces are ignored and unrecognized characters terminate the value.</source>
          <target state="translated">그것은 경우 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 공백은 무시하고 인식 할 수없는 문자는 값을 종료한다.</target>
        </trans-unit>
        <trans-unit id="f76d4a2ed17b9767d19c53253b2f306fbae30cef" translate="yes" xml:space="preserve">
          <source>If it is a string, it is used as the prefix and no suffix is used.</source>
          <target state="translated">문자열 인 경우 접두사로 사용되며 접미사는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b9dbf7e8ba283713dbb288d05c617deebf4f1194" translate="yes" xml:space="preserve">
          <source>If it is an array, first element is used as the prefix and second element is used as a suffix.</source>
          <target state="translated">배열 인 경우 첫 번째 요소는 접두사로 사용되고 두 번째 요소는 접미사로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cf68e8f84b2566bbdb0f29d69da5c03ac88182f1" translate="yes" xml:space="preserve">
          <source>If it is guaranteed the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; will be joined with &lt;a href=&quot;thread#method-i-join&quot;&gt;&lt;code&gt;Thread#join&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;thread#method-i-value&quot;&gt;&lt;code&gt;Thread#value&lt;/code&gt;&lt;/a&gt;, then it is safe to disable this report with &lt;code&gt;Thread.current.report_on_exception = false&lt;/code&gt; when starting the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;. However, this might handle the exception much later, or not at all if the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; is never joined due to the parent thread being blocked, etc.</source>
          <target state="translated">이 보장되면 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 와 결합 될 &lt;a href=&quot;thread#method-i-join&quot;&gt; &lt;code&gt;Thread#join&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;thread#method-i-value&quot;&gt; &lt;code&gt;Thread#value&lt;/code&gt; &lt;/a&gt; ,으로이 보고서를 해제하는 것이 안전합니다 &lt;code&gt;Thread.current.report_on_exception = false&lt;/code&gt; 시작하면 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; . 그러나 이것은 나중에 나중에 예외를 처리하거나 부모 스레드가 차단되어 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt; 가 연결되지 않은 경우 전혀 처리하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3e31f53cd4f959a6fdc8b66e20c39bbcea90209" translate="yes" xml:space="preserve">
          <source>If it is not matched, nil is assigned for the variables.</source>
          <target state="translated">일치하지 않으면 변수에 nil이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="2e2d8118566a498d79deba15824bcd3e4cad1748" translate="yes" xml:space="preserve">
          <source>If it is not specified or nil, &amp;ldquo;d&amp;rdquo; is used as the prefix and no suffix is used.</source>
          <target state="translated">지정하지 않거나 nil 인 경우 접두사로 &quot;d&quot;가 사용되고 접미사가 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="94b04ae0d3726a6b3e9d5f9d6ec7261f5e2c5e85" translate="yes" xml:space="preserve">
          <source>If local_host:local_port is given, the socket is bound to it.</source>
          <target state="translated">local_host : local_port가 제공되면 소켓이 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="4a2203dba87448560181c75cd7f0ed5e4b984a07" translate="yes" xml:space="preserve">
          <source>If method is defined by a module, then that module is returned.</source>
          <target state="translated">메소드가 모듈에 의해 정의되면 해당 모듈이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="2cf0ec510623ae3c88a7986a769462b22b831ad0" translate="yes" xml:space="preserve">
          <source>If multiple copies are what you want, you should use the block version which uses the result of that block each time an element of the array needs to be initialized:</source>
          <target state="translated">여러 복사본이 필요한 경우 배열 요소를 초기화해야 할 때마다 해당 블록의 결과를 사용하는 블록 버전을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ee03db1968a2911dae61d821eed3274196cb8642" translate="yes" xml:space="preserve">
          <source>If n is specified and negative, at least that many digits to the left of the decimal point will be 0 in the result.</source>
          <target state="translated">n이 지정되고 음수이면 소수점 왼쪽의 숫자가 결과에서 0이됩니다.</target>
        </trans-unit>
        <trans-unit id="03b8bbe11d7c3d19a2d16739c2cc2da4af10f96f" translate="yes" xml:space="preserve">
          <source>If n is specified and positive, the fractional part of the result has no more than that many digits.</source>
          <target state="translated">n이 지정되고 양수인 경우 결과의 소수 부분은 자릿수를 초과하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a59bb168dbacb56a31e61b2691580143d43c10fe" translate="yes" xml:space="preserve">
          <source>If neither block nor argument is given, an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; is returned instead.</source>
          <target state="translated">block이나 argument가 주어지지 않으면 대신 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="fad9d9ebc8dcde194a8c0ffd5c43b19895c66293" translate="yes" xml:space="preserve">
          <source>If neither block nor argument is given, an enumerator is returned instead.</source>
          <target state="translated">블록이나 인수가 제공되지 않으면 열거자가 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6dd4ad88d5872d1ad9ad5da5090ce8fe67a847db" translate="yes" xml:space="preserve">
          <source>If nil is given for the proxy &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, this option is just ignored.</source>
          <target state="translated">프록시 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 에&lt;/a&gt; nil이 지정 되면이 옵션은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="d4eeb580556bba07e59c8d13b9354352c9e51cd0" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;persistent#attribute-i-ca_file&quot;&gt;&lt;code&gt;ca_file&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;persistent#attribute-i-cert_store&quot;&gt;&lt;code&gt;cert_store&lt;/code&gt;&lt;/a&gt; is set the default system certificate store is used.</source>
          <target state="translated">&lt;a href=&quot;persistent#attribute-i-ca_file&quot;&gt; &lt;code&gt;ca_file&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;persistent#attribute-i-cert_store&quot;&gt; &lt;code&gt;cert_store&lt;/code&gt; &lt;/a&gt; 가 설정되어 있지 않으면 기본 시스템 인증서 저장소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7d76955cc3d803d8c26becabfd44308cdd261efa" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;library&lt;/code&gt; is specified or &lt;code&gt;nil&lt;/code&gt; is given, &lt;a href=&quot;handle#DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; is used, which is the equivalent to RTLD_DEFAULT. See &lt;code&gt;man 3 dlopen&lt;/code&gt; for more.</source>
          <target state="translated">&lt;code&gt;library&lt;/code&gt; 가 지정 되지 않거나 &lt;code&gt;nil&lt;/code&gt; 이 지정되면 &lt;a href=&quot;handle#DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; &lt;/a&gt; 가 사용되며 이는 RTLD_DEFAULT와 같습니다. 자세한 내용은 &lt;code&gt;man 3 dlopen&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f7ce47669c61c1daf2f987e72e6d9758de09186" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;flags&lt;/em&gt; are specified, the &lt;a href=&quot;gdbm&quot;&gt;&lt;code&gt;GDBM&lt;/code&gt;&lt;/a&gt; object will try to open the database file as a writer and will create it if it does not already exist (cf. flag &lt;code&gt;WRCREAT&lt;/code&gt;). If this fails (for instance, if another process has already opened the database as a reader), it will try to open the database file as a reader (cf. flag &lt;code&gt;READER&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;플래그&lt;/em&gt; 가 지정 되지 않은 경우, &lt;a href=&quot;gdbm&quot;&gt; &lt;code&gt;GDBM&lt;/code&gt; &lt;/a&gt; 객체는 데이터베이스 파일을 기록기로 열려고 아직없는 경우이를 생성합니다 (플래그 &lt;code&gt;WRCREAT&lt;/code&gt; 참조 ). 이 작업이 실패하면 (예를 들어, 다른 프로세스가 이미 데이터베이스를 리더로 연 경우) 데이터베이스 파일을 리더로 엽니 다 (예 : 플래그 &lt;code&gt;READER&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cba81f515dc9438e3a4baa46be627fd78372fa9b" translate="yes" xml:space="preserve">
          <source>If no block given, it returns a listening socket.</source>
          <target state="translated">주어진 블록이 없으면 청취 소켓을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4edf0e0f26d25841f7517a49b720c7df7bfbc533" translate="yes" xml:space="preserve">
          <source>If no block given, it returns an array of listening sockets.</source>
          <target state="translated">주어진 블록이 없으면 청취 소켓의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c51b0eb88b8ac8d197679cfacb67e744659b5803" translate="yes" xml:space="preserve">
          <source>If no block given, it returns an array of sockets.</source>
          <target state="translated">주어진 블록이 없으면 소켓 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dd56401b28c57f1c41f5b7b3687a4a385a9e9d5f" translate="yes" xml:space="preserve">
          <source>If no block is given an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">블록이 주어지지 않으면 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="27de1715250715788d2d4b4c6e082273453a6a65" translate="yes" xml:space="preserve">
          <source>If no block is given an enumerator is returned instead.</source>
          <target state="translated">블록이 주어지지 않으면 대신 열거자가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f8062cc04ff7fbdb9708e6dedf9b9c308244d320" translate="yes" xml:space="preserve">
          <source>If no block is given an enumerator is returned.</source>
          <target state="translated">블록이 주어지지 않으면 열거자가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6de0e5185180a40559bf29c48c7a3ec1c32d2ab4" translate="yes" xml:space="preserve">
          <source>If no block is given, a new &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; is returned that includes the index.</source>
          <target state="translated">블록을 지정하지 않으면 인덱스가 포함 된 새 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="804d5e63a5bfc8a96aebb372d8c3f9e3b3a7e7a5" translate="yes" xml:space="preserve">
          <source>If no block is given, an &lt;a href=&quot;../enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">블록을 지정하지 않으면 &lt;a href=&quot;../enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f21d3206f523b3e03b530cc81adf64705788ed56" translate="yes" xml:space="preserve">
          <source>If no block is given, an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; is returned instead.</source>
          <target state="translated">블록이 없으면 대신 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7363cbfdd38f8f2af566a0a570265644d2ce0abb" translate="yes" xml:space="preserve">
          <source>If no block is given, an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; is returned instead. Especially, the enumerator is an &lt;a href=&quot;enumerator/arithmeticsequence&quot;&gt;&lt;code&gt;Enumerator::ArithmeticSequence&lt;/code&gt;&lt;/a&gt; if both &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;step&lt;/code&gt; are kind of &lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">블록이 없으면 대신 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 반환됩니다. 특히, 열거자는 &lt;code&gt;limit&lt;/code&gt; 과 &lt;code&gt;step&lt;/code&gt; 이 모두 &lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 인 경우 &lt;a href=&quot;enumerator/arithmeticsequence&quot;&gt; &lt;code&gt;Enumerator::ArithmeticSequence&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="49ee95a24e46b117ea052868985414c34b42e460" translate="yes" xml:space="preserve">
          <source>If no block is given, an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">블록을 지정하지 않으면 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d99f98a3f8728a6c97c78853652e678f868b84f8" translate="yes" xml:space="preserve">
          <source>If no block is given, an enumerator is returned instead.</source>
          <target state="translated">블록을 지정하지 않으면 열거자가 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c05340e9a254b6f5d251579c5c559f53e9a6f725" translate="yes" xml:space="preserve">
          <source>If no block is given, an enumerator is returned instead. Especially, the enumerator is an &lt;a href=&quot;enumerator/arithmeticsequence&quot;&gt;&lt;code&gt;Enumerator::ArithmeticSequence&lt;/code&gt;&lt;/a&gt; if begin and end of the range are numeric.</source>
          <target state="translated">블록을 지정하지 않으면 열거자가 대신 반환됩니다. 특히 범위의 시작과 끝이 숫자 인 경우 열거자는 &lt;a href=&quot;enumerator/arithmeticsequence&quot;&gt; &lt;code&gt;Enumerator::ArithmeticSequence&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="030e0d6ac6503d3997fa3d275b7d5eb5def1308d" translate="yes" xml:space="preserve">
          <source>If no block is given, an enumerator to `chunk` is returned instead.</source>
          <target state="translated">블록이 없으면`chunk`에 대한 열거자가 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="57bd34dd5d091c634fdd7f83f283e3b0e70ef12e" translate="yes" xml:space="preserve">
          <source>If no block is given, entries with duplicate keys are overwritten with the values from each &lt;code&gt;other_hash&lt;/code&gt; successively, otherwise the value for each duplicate key is determined by calling the block with the key, its value in the receiver and its value in each &lt;code&gt;other_hash&lt;/code&gt;.</source>
          <target state="translated">블록이 지정되지 않은 경우, 중복 키가있는 항목은 각 &lt;code&gt;other_hash&lt;/code&gt; 의 값으로 연속적으로 겹쳐 쓰기됩니다. 그렇지 않으면 각 중복 키의 값은 키, 수신자의 값 및 각 &lt;code&gt;other_hash&lt;/code&gt; 의 값으로 블록을 호출하여 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b32984c80919dd2153ecc5af021ada5801478d2" translate="yes" xml:space="preserve">
          <source>If no block is given, returns a new &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">블록을 지정하지 않으면 새로운 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c50d68301e3f19feae889139329edbab89d5657d" translate="yes" xml:space="preserve">
          <source>If no block is given, returns an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">블록을 지정하지 않으면 &lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ca1143b7ee955511f6ac2c64ba0e9c36b9e3fc08" translate="yes" xml:space="preserve">
          <source>If no block is given, returns an enumerator.</source>
          <target state="translated">블록을 지정하지 않으면 열거자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6d49d89406341feda858d32235aef5307060fce2" translate="yes" xml:space="preserve">
          <source>If no block is given, the socket is returned.</source>
          <target state="translated">블록이 없으면 소켓이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a0c55f3337e1f8ccc3febedd9001e38ecae46b37" translate="yes" xml:space="preserve">
          <source>If no block is given, this is a synonym for &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">블록이 주어지지 않으면 이것은 &lt;a href=&quot;tempfile#method-c-new&quot;&gt; &lt;code&gt;Tempfile.new&lt;/code&gt; &lt;/a&gt; 와 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="5d4191360e71a1e62711adba10e95aae43b0f86f" translate="yes" xml:space="preserve">
          <source>If no block is given, this is similar to &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt; except creating &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt;. The created file is not removed automatically. You should use &lt;a href=&quot;file#method-c-unlink&quot;&gt;&lt;code&gt;File.unlink&lt;/code&gt;&lt;/a&gt; to remove it.</source>
          <target state="translated">어떤 블록을 지정하지 않으면,이 유사하다 &lt;a href=&quot;tempfile#method-c-new&quot;&gt; &lt;code&gt;Tempfile.new&lt;/code&gt; &lt;/a&gt; 작성을 제외한 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt; . 작성된 파일은 자동으로 제거되지 않습니다. &lt;a href=&quot;file#method-c-unlink&quot;&gt; &lt;code&gt;File.unlink&lt;/code&gt; &lt;/a&gt; 를 사용 하여 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1905f3557068caca328403bebb145f0dd3feb47" translate="yes" xml:space="preserve">
          <source>If no block is provided and no value is associated with the given &lt;code&gt;key&lt;/code&gt;, then an &lt;a href=&quot;indexerror&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">주어진 어떠한 블록이 제공되지 않고, 값이 연관되지 않으면 &lt;code&gt;key&lt;/code&gt; , 다음 &lt;a href=&quot;indexerror&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; 가&lt;/a&gt; 발생한다.</target>
        </trans-unit>
        <trans-unit id="3ec4b5eec7ccfa26f80be1fcc95c17f76c24d2f9" translate="yes" xml:space="preserve">
          <source>If no child process has ever been executed in the current thread, this returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">현재 스레드에서 하위 프로세스가 실행되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 이 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="d2779286985eea77806ffb72d17863fe76931da5" translate="yes" xml:space="preserve">
          <source>If no class or module exists an exception should be raised.</source>
          <target state="translated">클래스 나 모듈이 존재하지 않으면 예외가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="3e64d72f6c5edca46f588df5ed6f61f0021d9d2c" translate="yes" xml:space="preserve">
          <source>If no dead tuples are found &lt;code&gt;period&lt;/code&gt; seconds after the last modification, the &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt; will stop looking for dead tuples.</source>
          <target state="translated">데드 튜플이 발견되지 않으면 &lt;code&gt;period&lt;/code&gt; 마지막으로 수정 한 후 초는 &lt;a href=&quot;tuplespace&quot;&gt; &lt;code&gt;TupleSpace&lt;/code&gt; 는&lt;/a&gt; 죽은 튜플을 찾고 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="de16587e224667c1d890a2ff998a6eb4ad32917b" translate="yes" xml:space="preserve">
          <source>If no match is found this repeats from the beginning, but looking for &lt;code&gt;method_missing&lt;/code&gt;. The default &lt;code&gt;method_missing&lt;/code&gt; is &lt;a href=&quot;../basicobject#method-i-method_missing&quot;&gt;&lt;code&gt;BasicObject#method_missing&lt;/code&gt;&lt;/a&gt; which raises a &lt;a href=&quot;../nameerror&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt; when invoked.</source>
          <target state="translated">일치하는 것이 없으면 처음부터 반복되지만 &lt;code&gt;method_missing&lt;/code&gt; 을 찾습니다 . 기본 &lt;code&gt;method_missing&lt;/code&gt; 은 &lt;a href=&quot;../basicobject#method-i-method_missing&quot;&gt; &lt;code&gt;BasicObject#method_missing&lt;/code&gt; &lt;/a&gt; 이며 호출 될 때 &lt;a href=&quot;../nameerror&quot;&gt; &lt;code&gt;NameError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="6661692269fd49db1c08fffbd0c4c100bc62239a" translate="yes" xml:space="preserve">
          <source>If no matches are found, the &lt;code&gt;else&lt;/code&gt; is executed.</source>
          <target state="translated">일치하는 것이 없으면 &lt;code&gt;else&lt;/code&gt; 가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="fd2ce9760816a6f2557d4832c88931f2b5358dac" translate="yes" xml:space="preserve">
          <source>If no method was found at any point this repeats with the superclass of &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">어떤 시점에서도 메소드를 찾지 못하면 &lt;code&gt;C&lt;/code&gt; 의 수퍼 클래스에서 반복됩니다 .</target>
        </trans-unit>
        <trans-unit id="2280b62cbb8f7d15620c94ffe4601178568cdcda" translate="yes" xml:space="preserve">
          <source>If no other server is currently set as the primary server, this will become the primary server.</source>
          <target state="translated">다른 서버가 현재 기본 서버로 설정되어 있지 않으면이 서버가 기본 서버가됩니다.</target>
        </trans-unit>
        <trans-unit id="95b540f72715adf9766bd931d66aadf1651ad44b" translate="yes" xml:space="preserve">
          <source>If no peer certificate was presented X509_V_OK is returned.</source>
          <target state="translated">피어 인증서가 없으면 X509_V_OK가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e19909bf7313168e55e2584dd7767d6dc213ee04" translate="yes" xml:space="preserve">
          <source>If no value is found, returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">값이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8fbbe3b0c636566101c2b0d238051cfc157803fe" translate="yes" xml:space="preserve">
          <source>If none is given, returns the resulting hash value of the digest in a base64 encoded form, keeping the digest's state.</source>
          <target state="translated">아무 것도 지정하지 않으면 다이제스트의 상태를 유지하면서 다이제스트의 결과 해시 값을 base64로 인코딩 된 형식으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="28ccf5dc6b3102bf30945c2c8c4dfcad39b89853" translate="yes" xml:space="preserve">
          <source>If none is given, returns the resulting hash value of the digest in a hex-encoded form, keeping the digest's state.</source>
          <target state="translated">아무 것도 지정하지 않으면 다이제스트의 상태를 유지하면서 16 진수로 인코딩 된 형식으로 다이제스트의 결과 해시 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="91a2fc6dc3c1b872a652ee9b8e7c315ba77672ac" translate="yes" xml:space="preserve">
          <source>If none is given, returns the resulting hash value of the digest, keeping the digest's state.</source>
          <target state="translated">지정하지 않으면 다이제스트의 상태를 유지하면서 다이제스트의 결과 해시 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="138adc76aa2127ce867b399405978e75a9a35dcc" translate="yes" xml:space="preserve">
          <source>If none of the &lt;code&gt;p_&lt;/code&gt; arguments are given, the proxy host and port are taken from the &lt;code&gt;http_proxy&lt;/code&gt; environment variable (or its uppercase equivalent) if present. If the proxy requires authentication you must supply it by hand. See &lt;a href=&quot;../uri/generic#method-i-find_proxy&quot;&gt;&lt;code&gt;URI::Generic#find_proxy&lt;/code&gt;&lt;/a&gt; for details of proxy detection from the environment. To disable proxy detection set &lt;code&gt;p_addr&lt;/code&gt; to nil.</source>
          <target state="translated">&lt;code&gt;p_&lt;/code&gt; 인수가 제공 되지 않으면 프록시 호스트 및 포트는 &lt;code&gt;http_proxy&lt;/code&gt; 환경 변수 (또는 대문자로 표시되는 경우) 에서 가져옵니다 . 프록시에 인증이 필요한 경우 직접 제공해야합니다. 참조 &lt;a href=&quot;../uri/generic#method-i-find_proxy&quot;&gt; &lt;code&gt;URI::Generic#find_proxy&lt;/code&gt; &lt;/a&gt; 환경에서 프록시 검출 자세한 내용을. 프록시 감지를 비활성화하려면 &lt;code&gt;p_addr&lt;/code&gt; 을 nil로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="95d3d35fc2478a4a70de9196a5d365305aa24dfd" translate="yes" xml:space="preserve">
          <source>If object is kind of normal (accessible) object, the key is &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object. If object is not a kind of normal (internal) object, the key is symbol name, registered by rb_data_type_struct.</source>
          <target state="translated">객체가 일종의 일반 (액세스 가능한) 객체 인 경우 키는 &lt;a href=&quot;class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체입니다. object가 일종의 일반 (내부) 오브젝트가 아닌 경우 키는 rb_data_type_struct에 의해 등록 된 심볼 이름입니다.</target>
        </trans-unit>
        <trans-unit id="08e11528a0d1b40383d411bae192ceb85a23318c" translate="yes" xml:space="preserve">
          <source>If one or more arguments are specified, the time is initialized to the specified time.</source>
          <target state="translated">하나 이상의 인수가 지정되면 시간이 지정된 시간으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="1c37a528ff43e2e5e0abd7f100f9df8cf1314844" translate="yes" xml:space="preserve">
          <source>If one or more arguments given as &lt;em&gt;local_addr_args&lt;/em&gt;, it is used as the local address of the socket. &lt;em&gt;local_addr_args&lt;/em&gt; is given for &lt;a href=&quot;addrinfo#method-i-family_addrinfo&quot;&gt;&lt;code&gt;family_addrinfo&lt;/code&gt;&lt;/a&gt; to obtain actual address.</source>
          <target state="translated">&lt;em&gt;local_addr_args로&lt;/em&gt; 지정된 인수가 하나 이상 이면 소켓의 로컬 주소로 사용됩니다. &lt;em&gt;local_addr_args&lt;/em&gt; 는 &lt;a href=&quot;addrinfo#method-i-family_addrinfo&quot;&gt; &lt;code&gt;family_addrinfo&lt;/code&gt; &lt;/a&gt; 에 실제 주소를 얻기 위해 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="81b54df2bc44147d388b1c2fb6bc0b6d8140bcc1" translate="yes" xml:space="preserve">
          <source>If only one argument is given, decodes it as DER representation of a certificate ID.</source>
          <target state="translated">인수가 하나만 제공된 경우 인증서 ID의 DER 표현으로이를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="d96eabf24f0f1afa579b2efc6e0d94be5e1e6b75" translate="yes" xml:space="preserve">
          <source>If optional arguments are not given, the start position of the copy is the beginning of the filename or the current file offset of the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. The end position of the copy is the end of file.</source>
          <target state="translated">선택적 인수가 제공되지 않은 경우 사본의 시작 위치는 파일 이름의 시작 또는 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 의 현재 파일 오프셋입니다 . 사본의 끝 위치는 파일의 끝입니다.</target>
        </trans-unit>
        <trans-unit id="c03bc76300a4a637611ed36f3a5d1d1a22580f2b" translate="yes" xml:space="preserve">
          <source>If options is true, then an attempt will be made to use SSL (now TLS) to connect to the server. For this to work &lt;a href=&quot;../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; [OSSL] and the Ruby &lt;a href=&quot;../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; [RSSL] extensions need to be installed. If options is a hash, it's passed to &lt;a href=&quot;../openssl/ssl/sslcontext#method-i-set_params&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLContext#set_params&lt;/code&gt;&lt;/a&gt; as parameters.</source>
          <target state="translated">옵션이 true이면 SSL (현재 TLS)을 사용하여 서버에 연결하려고 시도합니다. 이것이 작동하려면 &lt;a href=&quot;../openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; [OSSL] 및 Ruby &lt;a href=&quot;../openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; [RSSL] 확장이 설치되어 있어야합니다. 옵션이 해시 인 경우 &lt;a href=&quot;../openssl/ssl/sslcontext#method-i-set_params&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLContext#set_params&lt;/code&gt; &lt;/a&gt; 에 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="c4f0afb46096b8c64b8faa890d3e1ecab3a1fceb" translate="yes" xml:space="preserve">
          <source>If protocol is 6 (TCP) then the 26th bit corresponds to the SMTP service (port 25). If this bit is set, then an SMTP server should be listening on TCP port 25; if zero, SMTP service is not supported.</source>
          <target state="translated">프로토콜이 6 (TCP)이면 26 번째 비트는 SMTP 서비스 (포트 25)에 해당합니다. 이 비트가 설정되면 SMTP 서버는 TCP 포트 25에서 수신 대기해야합니다. 0이면 SMTP 서비스가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a65b0d8e066c405cffc3c6875a125a6d71e8996c" translate="yes" xml:space="preserve">
          <source>If provided, the block is called when an invalid encoding is encountered. For example:</source>
          <target state="translated">제공된 경우, 유효하지 않은 인코딩이 발견 될 때 블록이 호출됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ccfce70eb1e82ad2676fa85c2a0f11a8a8031d1f" translate="yes" xml:space="preserve">
          <source>If refinements (an experimental feature) are active, the method lookup changes. See the &lt;a href=&quot;refinements_rdoc&quot;&gt;refinements documentation&lt;/a&gt; for details.</source>
          <target state="translated">구체화 (실험 기능)가 활성화 된 경우 분석법 조회가 변경됩니다. 자세한 내용은 &lt;a href=&quot;refinements_rdoc&quot;&gt;구체화 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7a5bcc9fcee78642e04dde7c9755402e127fa184" translate="yes" xml:space="preserve">
          <source>If refinements are active for &lt;code&gt;C&lt;/code&gt;, in the reverse order they were activated:</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 에 대한 세분화가 활성화 된 경우 역순으로 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="f597ffe513ebbce1dbdd404b576c5ae586145608" translate="yes" xml:space="preserve">
          <source>If required plugin should override `hash`, `==` and `eql?` methods to be able to match objects representing same sources, but may be created in different situation (like form gemfile and lockfile). The default ones checks only for class and uri, but elaborate source plugins may need more comparisons (e.g. git checking on branch or tag).</source>
          <target state="translated">필요한 플러그인은 동일한 소스를 나타내는 객체를 일치시킬 수 있도록`hash`,`==`및`eql?`메소드를 재정의해야하지만 gemgem 및 lockfile과 같은 다른 상황에서 작성 될 수 있습니다. 기본은 class와 uri 만 확인하지만 정교한 소스 플러그인은 더 많은 비교가 필요할 수 있습니다 (예 : 분기 또는 태그의 git 확인).</target>
        </trans-unit>
        <trans-unit id="f534b9dd7a835b0786a4d6eb38795285072b5718" translate="yes" xml:space="preserve">
          <source>If ruby was built with &lt;code&gt;GC_PROFILE_MORE_DETAIL&lt;/code&gt;, you will also have access to the following hash keys:</source>
          <target state="translated">&lt;code&gt;GC_PROFILE_MORE_DETAIL&lt;/code&gt; 로 루비를 빌드 한 경우 다음 해시 키에도 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dfb87db8fc3d583641c2011f887f5200eae9252" translate="yes" xml:space="preserve">
          <source>If run in an app, points to local root, in app_config_path Otherwise, points to global root, in &lt;a href=&quot;../bundler#method-c-user_bundle_path&quot;&gt;&lt;code&gt;Bundler.user_bundle_path&lt;/code&gt;&lt;/a&gt;(&amp;ldquo;plugin&amp;rdquo;)</source>
          <target state="translated">앱에서 실행되면 app_config_path에서 로컬 루트를 가리키고 그렇지 않으면 &lt;a href=&quot;../bundler#method-c-user_bundle_path&quot;&gt; &lt;code&gt;Bundler.user_bundle_path&lt;/code&gt; &lt;/a&gt; (&amp;ldquo;plugin&amp;rdquo;) 에서 글로벌 루트를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="c770b4ef6b9439552f9d4123153cb264d8d3955d" translate="yes" xml:space="preserve">
          <source>If s contains a number, a space is inserted after each group of that many fractional digits.</source>
          <target state="translated">s에 숫자가 포함되어 있으면 해당 소수 자릿수의 각 그룹 뒤에 공백이 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="7a988c6b2be6d897f1bcf46fb4f81ae379d7d2d6" translate="yes" xml:space="preserve">
          <source>If s ends with an 'E', engineering notation (0.xxxxEnn) is used.</source>
          <target state="translated">s가 'E'로 끝나면 공학 표기법 (0.xxxxEnn)이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="55a11e160ae86a65b026c85eca40d1f973801d81" translate="yes" xml:space="preserve">
          <source>If s ends with an 'F', conventional floating point notation is used.</source>
          <target state="translated">s가 'F'로 끝나면 일반적인 부동 소수점 표기법이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="046cf96d9d7fa7d1a8342dc90fe10653e8677d90" translate="yes" xml:space="preserve">
          <source>If self has no extension part, &lt;code&gt;repl&lt;/code&gt; is appended.</source>
          <target state="translated">self에 확장 부분이 없으면 &lt;code&gt;repl&lt;/code&gt; 이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ce0dbe3e1978ef2f5f2793f27a9e42150ef91477" translate="yes" xml:space="preserve">
          <source>If self is a UTC time, Z is used as TZD. [+-]hh:mm is used otherwise.</source>
          <target state="translated">self가 UTC 시간 인 경우 Z는 TZD로 사용됩니다. 그렇지 않으면 [+-] hh : mm이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bfcd1ad96987caa6e36a55df619435143c77aa6a" translate="yes" xml:space="preserve">
          <source>If session has already been started, an &lt;a href=&quot;../ioerror&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">세션이 이미 시작된 경우 &lt;a href=&quot;../ioerror&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="23dbaa0032dbacd87e842865d32430b9f4ae52e4" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;:first_row&lt;/code&gt; or &lt;code&gt;true&lt;/code&gt;, the initial row of the &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; file will be treated as a row of headers. If set to an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, the contents will be used as the headers. If set to a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is run through a call of &lt;a href=&quot;csv#method-c-parse_line&quot;&gt;&lt;code&gt;CSV::parse_line()&lt;/code&gt;&lt;/a&gt; with the same &lt;code&gt;:col_sep&lt;/code&gt;, &lt;code&gt;:row_sep&lt;/code&gt;, and &lt;code&gt;:quote_char&lt;/code&gt; as this instance to produce an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of headers. This setting causes &lt;a href=&quot;csv#method-i-shift&quot;&gt;&lt;code&gt;CSV#shift()&lt;/code&gt;&lt;/a&gt; to return rows as &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; objects instead of Arrays and &lt;a href=&quot;csv#method-i-read&quot;&gt;&lt;code&gt;CSV#read()&lt;/code&gt;&lt;/a&gt; to return &lt;a href=&quot;csv/table&quot;&gt;&lt;code&gt;CSV::Table&lt;/code&gt;&lt;/a&gt; objects instead of an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Arrays.</source>
          <target state="translated">&lt;code&gt;:first_row&lt;/code&gt; 또는 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 &lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt; 파일 의 초기 행이 헤더 행으로 처리됩니다. &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; 로&lt;/a&gt; 설정 하면 내용이 헤더로 사용됩니다. 로 설정하면 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; (A)의 호출을 통해 실행되는 &lt;a href=&quot;csv#method-c-parse_line&quot;&gt; &lt;code&gt;CSV::parse_line()&lt;/code&gt; &lt;/a&gt; 같은과 &lt;code&gt;:col_sep&lt;/code&gt; , &lt;code&gt;:row_sep&lt;/code&gt; 및 &lt;code&gt;:quote_char&lt;/code&gt; 이 인스턴스로 생산하는 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 헤더를. 이 설정은 &lt;a href=&quot;csv#method-i-shift&quot;&gt; &lt;code&gt;CSV#shift()&lt;/code&gt; &lt;/a&gt; 가 배열 대신 &lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; 객체 로 행을 반환 하고 &lt;a href=&quot;csv#method-i-read&quot;&gt; &lt;code&gt;CSV#read()&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;csv/table&quot;&gt; &lt;code&gt;CSV::Table&lt;/code&gt; &lt;/a&gt; 을 반환하도록합니다.&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 대신 객체 .</target>
        </trans-unit>
        <trans-unit id="c462e17a4f3736542a0da9279472abc3d05d651c" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, an unconverted_fields() method will be added to all returned rows (Array or &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt;) that will return the fields as they were before conversion. Note that &lt;code&gt;:headers&lt;/code&gt; supplied by &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; were not fields of the document and thus will have an empty &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; attached.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정 하면 unconverted_fields () 메서드가 반환 된 모든 행 (Array 또는 &lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt; )에 추가되어 변환 전과 마찬가지로 필드를 반환합니다. 참고 &lt;code&gt;:headers&lt;/code&gt; 가 제공 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 따라서 문서의 필드 아니었다과 빈 것 &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 부착.</target>
        </trans-unit>
        <trans-unit id="45163632c26c8852329fa2852c81e69f0c74fdbf" translate="yes" xml:space="preserve">
          <source>If single argument is specified, read string from io is tagged with the encoding specified. If encoding is a colon separated two encoding names &amp;ldquo;A:B&amp;rdquo;, the read string is converted from encoding A (external encoding) to encoding B (internal encoding), then tagged with B. If two arguments are specified, those must be encoding objects or encoding names, and the first one is the external encoding, and the second one is the internal encoding. If the external encoding and the internal encoding is specified, optional hash argument specify the conversion option.</source>
          <target state="translated">단일 인수를 지정하면 io에서 읽은 문자열에 지정된 인코딩으로 태그가 지정됩니다. 인코딩이 콜론으로 구분 된 두 인코딩 이름&amp;ldquo;A : B&amp;rdquo;인 경우 읽기 문자열은 인코딩 A (외부 인코딩)에서 인코딩 B (내부 인코딩)로 변환 된 다음 B로 태그가 지정됩니다. 두 개의 인수가 지정된 경우 인코딩해야합니다. 객체 또는 인코딩 이름이며 첫 번째는 외부 인코딩이고 두 번째는 내부 인코딩입니다. 외부 인코딩과 내부 인코딩이 지정된 경우 선택적 해시 인수는 변환 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1709f98b31058cd5a1d57a3a5a3b8d4e6b500610" translate="yes" xml:space="preserve">
          <source>If single argument is specified, strings read from &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; are tagged with the encoding specified.</source>
          <target state="translated">단일 인수가 지정된 경우 &lt;a href=&quot;argf&quot;&gt; &lt;code&gt;ARGF&lt;/code&gt; &lt;/a&gt; 에서 읽은 문자열은 지정된 인코딩으로 태그가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="91dc29dfffb09b15dcf5d16692a255d491575cd4" translate="yes" xml:space="preserve">
          <source>If spec_dst is not given, addr is used.</source>
          <target state="translated">spec_dst를 지정하지 않으면 addr이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c418da794d9ee0b77a04491f94bb7e243ea02a28" translate="yes" xml:space="preserve">
          <source>If specified and less than the number of significant digits of the result, the result is rounded to that number of digits, according to &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정되고 결과의 유효 자릿수보다 작은 경우 &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt; &lt;code&gt;BigDecimal.mode&lt;/code&gt; &lt;/a&gt; 에 따라 결과가 해당 자릿수로 반올림됩니다 .</target>
        </trans-unit>
        <trans-unit id="a4c0cecad64b13d293fb34e98ab963bde0036a97" translate="yes" xml:space="preserve">
          <source>If strict is set to true, the results from &lt;a href=&quot;gemversionpromoter#method-i-sort_versions&quot;&gt;&lt;code&gt;sort_versions&lt;/code&gt;&lt;/a&gt; will be truncated, eliminating any version outside the current level scope. This can lead to unexpected outcomes or even &lt;a href=&quot;versionconflict&quot;&gt;&lt;code&gt;VersionConflict&lt;/code&gt;&lt;/a&gt; exceptions that report a version of a gem not existing for versions that indeed do existing in the referenced source.</source>
          <target state="translated">strict가 true로 설정되면 &lt;a href=&quot;gemversionpromoter#method-i-sort_versions&quot;&gt; &lt;code&gt;sort_versions&lt;/code&gt; &lt;/a&gt; 의 결과가 잘리고 현재 레벨 범위 밖의 모든 버전이 제거됩니다. 이로 인해 예기치 않은 결과가 발생하거나 참조 된 소스에 실제로 존재하는 버전에 대해 존재하지 않는 gem 버전을보고하는 &lt;a href=&quot;versionconflict&quot;&gt; &lt;code&gt;VersionConflict&lt;/code&gt; &lt;/a&gt; 예외가 발생할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="694149caa46f26a2d9c3c07f73a75861b503e2e8" translate="yes" xml:space="preserve">
          <source>If supported by the underlying &lt;a href=&quot;openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; version used, Password-based Encryption should use the features of &lt;a href=&quot;openssl/pkcs5&quot;&gt;&lt;code&gt;PKCS5&lt;/code&gt;&lt;/a&gt;. If not supported or if required by legacy applications, the older, less secure methods specified in RFC 2898 are also supported (see below).</source>
          <target state="translated">사용 된 기본 &lt;a href=&quot;openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 버전 에서 지원되는 경우 비밀번호 기반 암호화는 &lt;a href=&quot;openssl/pkcs5&quot;&gt; &lt;code&gt;PKCS5&lt;/code&gt; &lt;/a&gt; 의 기능을 사용해야합니다 . 지원되지 않거나 레거시 응용 프로그램에 필요한 경우 RFC 2898에 지정된 오래되고 덜 안전한 방법도 지원됩니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="5fc36aeaa64146e03ac8d9d776d2d652201386c5" translate="yes" xml:space="preserve">
          <source>If terminated with an exception.</source>
          <target state="translated">예외로 종료 된 경우</target>
        </trans-unit>
        <trans-unit id="51aa34d40d3face6d4c524ec992f05446e1be808" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; version used supports it, an Authenticated Encryption mode (such as GCM or CCM) should always be preferred over any unauthenticated mode. Currently, &lt;a href=&quot;../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; supports AE only in combination with Associated &lt;code&gt;Data&lt;/code&gt; (AEAD) where additional associated data is included in the encryption process to compute a tag at the end of the encryption. This tag will also be used in the decryption process and by verifying its validity, the authenticity of a given ciphertext is established.</source>
          <target state="translated">사용 된 &lt;a href=&quot;../openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 버전이이를 지원하는 경우 인증되지 않은 모드보다 인증 된 암호화 모드 (예 : GCM 또는 CCM)가 항상 선호됩니다. 현재 &lt;a href=&quot;../openssl&quot;&gt; &lt;code&gt;OpenSSL&lt;/code&gt; &lt;/a&gt; 은 AAD ( Associated &lt;code&gt;Data&lt;/code&gt; ) 와 결합하여 AE 만 지원합니다. 여기서 AE 는 관련 데이터가 암호화 프로세스에 포함되어 암호화가 끝날 때 태그를 계산합니다. 이 태그는 암호 해독 프로세스에서도 사용되며 유효성을 확인함으로써 주어진 암호문의 신뢰성이 확립됩니다.</target>
        </trans-unit>
        <trans-unit id="310f617b5252f88dd439a58ae6ac84d73a331f38" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; contains a query, the full path is URI#path + '?' + URI#query. Otherwise, the path is simply URI#path.</source>
          <target state="translated">경우 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; 가&lt;/a&gt; 쿼리를 포함, 전체 경로는 URI 번호 경로 +이다 '?' + URI # 쿼리. 그렇지 않으면 경로는 단순히 URI # path입니다.</target>
        </trans-unit>
        <trans-unit id="6e8ac25b1657556b3092453365f70b11bfd907fc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; can be represented as 0.xxxxxx*10**n, then xxxxxx is the string of significant digits with no leading zeros, and n is the exponent.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 을 0.xxxxxx * 10 ** n으로 표시 할 수있는 경우 xxxxxx는 선행 0이없는 유효 자릿수 문자열이며 n은 지수입니다.</target>
        </trans-unit>
        <trans-unit id="0768cb8f4b7bbcd1a59815a20db207af2e872b27" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; is infinity or NaN, raises &lt;a href=&quot;floatdomainerror&quot;&gt;&lt;code&gt;FloatDomainError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">는 IF &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 무한대 또는 NaN의 제기 &lt;a href=&quot;floatdomainerror&quot;&gt; &lt;code&gt;FloatDomainError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e952112c7b9ff8f3d5d9e86dae9168aa6c3bfcd1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;sslcontext#attribute-i-verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is not VERIFY_NONE and &lt;a href=&quot;sslcontext#attribute-i-ca_file&quot;&gt;&lt;code&gt;ca_file&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sslcontext#attribute-i-ca_path&quot;&gt;&lt;code&gt;ca_path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sslcontext#attribute-i-cert_store&quot;&gt;&lt;code&gt;cert_store&lt;/code&gt;&lt;/a&gt; are not set then the system default certificate store is used.</source>
          <target state="translated">는 IF &lt;a href=&quot;sslcontext#attribute-i-verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; 이&lt;/a&gt; VERIFY_NONE되지 않고 &lt;a href=&quot;sslcontext#attribute-i-ca_file&quot;&gt; &lt;code&gt;ca_file&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;sslcontext#attribute-i-ca_path&quot;&gt; &lt;code&gt;ca_path&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sslcontext#attribute-i-cert_store&quot;&gt; &lt;code&gt;cert_store&lt;/code&gt; 는&lt;/a&gt; 다음 설정되지 않은 시스템 기본 인증서 저장소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3a876cf5f3745fbb35c297d2f2a752884dda58a4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;class_name&lt;/code&gt; is omitted an anonymous structure class will be created. Otherwise, the name of this struct will appear as a constant in class &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;, so it must be unique for all Structs in the system and must start with a capital letter. Assigning a structure class to a constant also gives the class the name of the constant.</source>
          <target state="translated">는 IF &lt;code&gt;class_name&lt;/code&gt; 에이 생략 익명의 구조 클래스가 생성됩니다. 그렇지 않으면이 구조체의 이름은 &lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 클래스에서 상수로 표시 되므로 시스템의 모든 Structs에 대해 고유해야하며 대문자로 시작해야합니다. 상수에 구조 클래스를 할당하면 클래스에 상수 이름이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3151cf5aea8d1c6714dbf431a34b9ae933a0c1bf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;digits&lt;/code&gt; is not an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, this exception is raised.</source>
          <target state="translated">는 IF &lt;code&gt;digits&lt;/code&gt; 아닌 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; ,이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="87259ed9872b4d936296f25d585b3a8433be2fbb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;file&lt;/code&gt; argument is a symbolic link, it will resolve the symbolic link and use the file referenced by the link.</source>
          <target state="translated">경우 &lt;code&gt;file&lt;/code&gt; 인수가 심볼릭 링크, 그것은 심볼릭 링크를 해결하고 링크가 참조하는 파일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="54c9e84b4f2977956f4fb39e204315ed654c2560" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;initial&lt;/code&gt; is a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;digits&lt;/code&gt; value is omitted, this exception is raised.</source>
          <target state="translated">경우] &lt;code&gt;initial&lt;/code&gt; A는 &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;digits&lt;/code&gt; 값은 생략이 예외가 발생된다.</target>
        </trans-unit>
        <trans-unit id="8df6b005304fa4ae4390d4e05ffa64968fe6c8d4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;initial&lt;/code&gt; type is neither &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt;, nor &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, this exception is raised.</source>
          <target state="translated">경우 &lt;code&gt;initial&lt;/code&gt; 유형도 아니다 &lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt; ,도 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; 를&lt;/a&gt; ,이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2307b39dfb30265eb4c82cc35079f4cd90043a0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;key&lt;/code&gt; already exists, this will update the &lt;code&gt;value&lt;/code&gt; associated with the &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;key&lt;/code&gt; 이미 존재하는이 업데이트됩니다 &lt;code&gt;value&lt;/code&gt; 과 관련된 &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fc659fadbe31ca16500e2a8da9abed36b1a5e56" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;n&lt;/code&gt; argument is given, maximum &lt;code&gt;n&lt;/code&gt; elements are returned as an array, sorted in descending order.</source>
          <target state="translated">경우] &lt;code&gt;n&lt;/code&gt; 개의 인자가 주어진 최대 &lt;code&gt;n&lt;/code&gt; 소자 어레이로서 반환 내림차순으로 정렬.</target>
        </trans-unit>
        <trans-unit id="2eface2186304e0740bf3743828bcf3ae2ab1ac5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;n&lt;/code&gt; argument is given, maximum &lt;code&gt;n&lt;/code&gt; elements are returned as an array.</source>
          <target state="translated">경우] &lt;code&gt;n&lt;/code&gt; 개의 인자가 주어진 최대 &lt;code&gt;n&lt;/code&gt; 요소 배열로 반환된다.</target>
        </trans-unit>
        <trans-unit id="fba742bdfe98daea38303bbb6e6a1c0a4b445754" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;n&lt;/code&gt; argument is given, maximum &lt;code&gt;n&lt;/code&gt; elements are returned as an array. These &lt;code&gt;n&lt;/code&gt; elements are sorted by the value from the given block, in descending order.</source>
          <target state="translated">경우] &lt;code&gt;n&lt;/code&gt; 개의 인자가 주어진 최대 &lt;code&gt;n&lt;/code&gt; 요소 배열로 반환된다. 이 &lt;code&gt;n&lt;/code&gt; 개의 요소는 주어진 블록의 값을 기준으로 내림차순으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="a6769bda265c65911c219423e7399a2ae6c17a64" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;n&lt;/code&gt; argument is given, minimum &lt;code&gt;n&lt;/code&gt; elements are returned as a sorted array.</source>
          <target state="translated">경우] &lt;code&gt;n&lt;/code&gt; 개의 인자가 주어진 최소의 &lt;code&gt;n&lt;/code&gt; 개의 소자가 정렬 된 배열로 반환된다.</target>
        </trans-unit>
        <trans-unit id="443c5ae551f73c0632df3c811536d2234792beed" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;n&lt;/code&gt; argument is given, minimum &lt;code&gt;n&lt;/code&gt; elements are returned as an array.</source>
          <target state="translated">경우] &lt;code&gt;n&lt;/code&gt; 개의 인자가 주어진 최소의 &lt;code&gt;n&lt;/code&gt; 요소 배열로 반환된다.</target>
        </trans-unit>
        <trans-unit id="5a5b435f32fadcaec8a052539863ae18e3155171" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;n&lt;/code&gt; argument is given, minimum &lt;code&gt;n&lt;/code&gt; elements are returned as an array. These &lt;code&gt;n&lt;/code&gt; elements are sorted by the value from the given block.</source>
          <target state="translated">경우] &lt;code&gt;n&lt;/code&gt; 개의 인자가 주어진 최소의 &lt;code&gt;n&lt;/code&gt; 요소 배열로 반환된다. 이 &lt;code&gt;n&lt;/code&gt; 개의 요소는 주어진 블록의 값을 기준으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9183350a766bd10085917db7bd813a5ddc17a569" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;uplevel&lt;/code&gt; keyword argument is given, the string will be prepended with information for the given caller frame in the same format used by the &lt;code&gt;rb_warn&lt;/code&gt; C function.</source>
          <target state="translated">는 IF &lt;code&gt;uplevel&lt;/code&gt; 키워드 인자가 주어진 문자열이 사용하는 것과 동일한 형식으로 지정된 호출자 프레임 정보 붙을 &lt;code&gt;rb_warn&lt;/code&gt; 의 C 함수.</target>
        </trans-unit>
        <trans-unit id="ad2c952d58d6deba503261ca47360d4c8b971d14" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;backlog&lt;/em&gt; amount exceeds the implementation-dependent maximum queue length, the implementation's maximum queue length will be used.</source>
          <target state="translated">경우] &lt;em&gt;잔고&lt;/em&gt; 금액이 구현 - 의존 최대 대기열 길이를 초과 구현의 최대 대기열 길이를 사용한다.</target>
        </trans-unit>
        <trans-unit id="2c99e673f5b09e1d8e7ccb45ba6039f6d82c87ed" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;limit&lt;/em&gt; parameter is omitted, trailing null fields are suppressed. If &lt;em&gt;limit&lt;/em&gt; is a positive number, at most that number of split substrings will be returned (captured groups will be returned as well, but are not counted towards the limit). If &lt;em&gt;limit&lt;/em&gt; is &lt;code&gt;1&lt;/code&gt;, the entire string is returned as the only entry in an array. If negative, there is no limit to the number of fields returned, and trailing null fields are not suppressed.</source>
          <target state="translated">는 IF &lt;em&gt;한계&lt;/em&gt; 파라미터가 생략 후미 널 필드가 억제된다. 경우 &lt;em&gt;제한&lt;/em&gt; 분할 문자열의 수를 반환됩니다 최대 양수입니다 (캡처 그룹은 잘으로 반환되지만 제한에 포함되지 않습니다). 경우 &lt;em&gt;한계가&lt;/em&gt; 있다 &lt;code&gt;1&lt;/code&gt; , 전체 문자열 배열의 유일한 항목으로 반환됩니다. 음수이면 반환되는 필드 수에 제한이 없으며 후행 null 필드는 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2199f05d7a42fd8d200fc2f908075ed4c68af98f" translate="yes" xml:space="preserve">
          <source>If the OS supports multi I/O, records possibly may be mixed.</source>
          <target state="translated">OS가 다중 I / O를 지원하는 경우 레코드가 혼합 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf2a28576695e7f74bf1645855275cf48a329b03" translate="yes" xml:space="preserve">
          <source>If the above rule fails to find a server, a &lt;a href=&quot;drb/drbservernotfound&quot;&gt;&lt;code&gt;DRbServerNotFound&lt;/code&gt;&lt;/a&gt; error is raised.</source>
          <target state="translated">위의 규칙으로 서버를 찾지 못하면 &lt;a href=&quot;drb/drbservernotfound&quot;&gt; &lt;code&gt;DRbServerNotFound&lt;/code&gt; &lt;/a&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bb38477494d1d915194ec26879d9348f58145cef" translate="yes" xml:space="preserve">
          <source>If the argument has extra elements in the &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; they will be ignored:</source>
          <target state="translated">인수에 추가 요소가 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 있으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="36cb3d77589e809680e2a78032a78a1ff2fb5436" translate="yes" xml:space="preserve">
          <source>If the argument is not a valid constant name a &lt;code&gt;NameError&lt;/code&gt; is raised with the message &amp;ldquo;wrong constant name &lt;em&gt;name&lt;/em&gt;&amp;rdquo;:</source>
          <target state="translated">인수가 유효한 상수 이름이 아닌 경우 &quot;잘못된 상수 이름 &lt;em&gt;이름&lt;/em&gt; &quot; 메시지와 함께 &lt;code&gt;NameError&lt;/code&gt; 가 발생합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43df68d5fd32bb56fbf5ae8c0d0eebc027a22248" translate="yes" xml:space="preserve">
          <source>If the argument is not a valid constant name a &lt;code&gt;NameError&lt;/code&gt; will be raised with a warning &amp;ldquo;wrong constant name&amp;rdquo;.</source>
          <target state="translated">인수가 유효한 상수 이름이 아닌 경우 &quot;잘못된 상수 이름&quot;경고와 함께 &lt;code&gt;NameError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="773260487f6183b95cd76add498acef73dfd3296" translate="yes" xml:space="preserve">
          <source>If the argument seems to be an IPv6 address, it is wrapped with brackets.</source>
          <target state="translated">인수가 IPv6 주소 인 경우 대괄호로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="9e3134159e88de30ba33413121e8c990128a97ba" translate="yes" xml:space="preserve">
          <source>If the arity of the block is 2, elements o1 and o2 are in common if block.call(o1, o2) is true. Otherwise, elements o1 and o2 are in common if block.call(o1) == block.call(o2).</source>
          <target state="translated">블록의 arity가 2 인 경우 block.call (o1, o2)가 true이면 요소 o1과 o2가 공통입니다. 그렇지 않으면 block.call (o1) == block.call (o2) 인 경우 요소 o1 및 o2가 공통입니다.</target>
        </trans-unit>
        <trans-unit id="893abdff5a0c2f76405631984c3f750fc20b3587" translate="yes" xml:space="preserve">
          <source>If the array is empty the first form returns &lt;code&gt;nil&lt;/code&gt; and the second form returns an empty array.</source>
          <target state="translated">배열이 비어 있으면 첫 번째 형식은 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 두 번째 형식은 빈 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2911e2d1bb27045adcfbf421a44b643319affa2" translate="yes" xml:space="preserve">
          <source>If the block needs to maintain state over multiple elements, local variables can be used. For example, three or more consecutive increasing numbers can be squashed as follows (see &lt;code&gt;chunk_while&lt;/code&gt; for a better way):</source>
          <target state="translated">블록이 여러 요소에 대한 상태를 유지해야하는 경우 로컬 변수를 사용할 수 있습니다. 예를 들어, 다음과 같이 연속적으로 증가하는 3 개 이상의 숫자가 찌그러 질 수 있습니다 ( 더 나은 방법 은 &lt;code&gt;chunk_while&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c0cc7bd6cf0cb9dadacd4cc4c54fd63fd780162c" translate="yes" xml:space="preserve">
          <source>If the block returns an array of &lt;a href=&quot;benchmark/tms&quot;&gt;&lt;code&gt;Benchmark::Tms&lt;/code&gt;&lt;/a&gt; objects, these will be used to format additional lines of output. If &lt;code&gt;labels&lt;/code&gt; parameter are given, these are used to label these extra lines.</source>
          <target state="translated">블록이 &lt;a href=&quot;benchmark/tms&quot;&gt; &lt;code&gt;Benchmark::Tms&lt;/code&gt; &lt;/a&gt; 객체 의 배열을 반환하면 추가 출력 줄을 형식화하는 데 사용됩니다. 경우 &lt;code&gt;labels&lt;/code&gt; 주어진 매개 변수, 이들은 이러한 추가 라인을 레이블하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f675d925aa4d7762ea48807a5fdec2e4df8612f1" translate="yes" xml:space="preserve">
          <source>If the byte buffer is not empty, read from the byte buffer instead of &amp;ldquo;sysread for buffered &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; (IOError)&amp;rdquo;.</source>
          <target state="translated">바이트 버퍼가 비어 있지 않으면&amp;ldquo;sysread for buffered &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; (IOError)&amp;rdquo; 대신 바이트 버퍼에서 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="6a86cbed638b0fa0f50bbefdeb7158155454fc29" translate="yes" xml:space="preserve">
          <source>If the callback returns &lt;code&gt;false&lt;/code&gt;, the chain verification is immediately stopped and a bad_certificate alert is then sent.</source>
          <target state="translated">콜백이 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 체인 확인이 즉시 중지되고 bad_certificate 경고가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="5d380d90f132a7025518dd71ea5f2062ab8b8f85" translate="yes" xml:space="preserve">
          <source>If the charset is &amp;ldquo;iso-2022-jp&amp;rdquo; or &amp;ldquo;euc-jp&amp;rdquo; or &amp;ldquo;shift_jis&amp;rdquo; then the content is converted to this charset, and the language is set to &amp;ldquo;ja&amp;rdquo;.</source>
          <target state="translated">문자 집합이 &quot;iso-2022-jp&quot;또는 &quot;euc-jp&quot;또는 &quot;shift_jis&quot;이면 내용이이 문자 집합으로 변환되고 언어가 &quot;ja&quot;로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4936b2066887f2b3701d9a2e7a3870813a0d0508" translate="yes" xml:space="preserve">
          <source>If the class of the object is now known locally, the object will be unmarshalled and returned. Otherwise, a new but identical &lt;a href=&quot;drbunknown&quot;&gt;&lt;code&gt;DRbUnknown&lt;/code&gt;&lt;/a&gt; object will be returned.</source>
          <target state="translated">객체의 클래스가 이제 로컬로 알려진 경우 객체는 비 정렬 화되어 반환됩니다. 그렇지 않으면, 새롭지 만 동일한 &lt;a href=&quot;drbunknown&quot;&gt; &lt;code&gt;DRbUnknown&lt;/code&gt; &lt;/a&gt; 오브젝트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b2281a6dee3cac5d96e07e7e0610a34a133275eb" translate="yes" xml:space="preserve">
          <source>If the client has cookies disabled, the session id must be included as a parameter of all requests sent by the client to the server. The &lt;a href=&quot;session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; class in conjunction with the &lt;a href=&quot;../cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; class will transparently add the session id as a hidden input field to all forms generated using the CGI#form() HTML generation method. No built-in support is provided for other mechanisms, such as URL re-writing. The caller is responsible for extracting the session id from the &lt;a href=&quot;session#attribute-i-session_id&quot;&gt;&lt;code&gt;session_id&lt;/code&gt;&lt;/a&gt; attribute and manually encoding it in URLs and adding it as a hidden input to HTML forms created by other mechanisms. Also, session expiry is not automatically handled.</source>
          <target state="translated">클라이언트가 쿠키를 비활성화 한 경우 세션 ID는 클라이언트가 서버로 보낸 모든 요청의 매개 변수로 포함되어야합니다. &lt;a href=&quot;session&quot;&gt; &lt;code&gt;CGI::Session&lt;/code&gt; &lt;/a&gt; Class 구성과 함께 &lt;a href=&quot;../cgi&quot;&gt; &lt;code&gt;CGI&lt;/code&gt; 의&lt;/a&gt; 클래스 투명 CGI # 1 형태 () HTML 생성 방법을 사용하여 생성 된 모든 형태의 숨겨진 입력 필드와 세션 ID를 추가한다. URL 다시 쓰기와 같은 다른 메커니즘에 대한 기본 제공 지원은 제공되지 않습니다. 호출자는 &lt;a href=&quot;session#attribute-i-session_id&quot;&gt; &lt;code&gt;session_id&lt;/code&gt; &lt;/a&gt; 속성 에서 세션 ID를 추출하여 수동으로 URL로 인코딩하고 다른 메커니즘으로 작성된 HTML 양식에 숨겨진 입력으로 추가해야합니다. 또한 세션 만료는 자동으로 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90f419df5021c30b53fa48f8020384539566ff41" translate="yes" xml:space="preserve">
          <source>If the command fails to execute (typically &lt;code&gt;Errno::ENOENT&lt;/code&gt; when it was not found) a &lt;a href=&quot;systemcallerror&quot;&gt;&lt;code&gt;SystemCallError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">명령이 실행되지 않으면 (일반적으로 &lt;code&gt;Errno::ENOENT&lt;/code&gt; 찾을 수 없을 때) &lt;a href=&quot;systemcallerror&quot;&gt; &lt;code&gt;SystemCallError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8c6e75a6796c22fc15d3175e8914b4bb6f29be71" translate="yes" xml:space="preserve">
          <source>If the command following the pipe is a single minus sign (&lt;code&gt;&quot;|-&quot;&lt;/code&gt;), Ruby forks, and this subprocess is connected to the parent. If the command is not &lt;code&gt;&quot;-&quot;&lt;/code&gt;, the subprocess runs the command.</source>
          <target state="translated">파이프 다음의 명령이 단일 빼기 부호 ( &lt;code&gt;&quot;|-&quot;&lt;/code&gt; )이면 Ruby는 분기하고이 하위 프로세스는 상위에 연결됩니다. 명령이 &lt;code&gt;&quot;-&quot;&lt;/code&gt; 가 아닌 경우 서브 프로세스가 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="547b82a31707567a70d908c5398d8f5147317b81" translate="yes" xml:space="preserve">
          <source>If the constant is not found the callback &lt;code&gt;const_missing&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; called and the method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">상수를 찾지 &lt;code&gt;const_missing&lt;/code&gt; 콜백 이 호출 &lt;strong&gt;되지 않고&lt;/strong&gt; 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c194df532708c20591e5cd2042db253f007fd8cc" translate="yes" xml:space="preserve">
          <source>If the current class has a direct superclass, the method proceeds as in the &lt;a href=&quot;../method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; Lookup section above using the superclass.</source>
          <target state="translated">현재 클래스에 직접 수퍼 클래스가있는 경우, &lt;a href=&quot;../method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 는 수퍼 클래스를 사용하여 위 의 메소드 검색 섹션 에서와 같이 진행됩니다 .</target>
        </trans-unit>
        <trans-unit id="d25cd764d0493afa9649cb2e4dac33b2981a2c17" translate="yes" xml:space="preserve">
          <source>If the current class is a refinement, the method lookup proceeds as in the &lt;a href=&quot;../method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; Lookup section above.</source>
          <target state="translated">현재 클래스가 구체화 인 경우 위 의 &lt;a href=&quot;../method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 조회 섹션 에서와 같이 메서드 조회가 진행됩니다 .</target>
        </trans-unit>
        <trans-unit id="73e50fa9de8fe9e4527cf6398b719ef2ffcd6647" translate="yes" xml:space="preserve">
          <source>If the destination encoding is stateful, string is converted according to the state and the state is updated.</source>
          <target state="translated">대상 인코딩이 상태 저장 인 경우 상태에 따라 문자열이 변환되고 상태가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="5e5201186dd781e1c6b1919c745f1b979b4d5bfe" translate="yes" xml:space="preserve">
          <source>If the enclosed object responds to a &amp;ldquo;rewind&amp;rdquo; method, it is called.</source>
          <target state="translated">동봉 된 객체가 &quot;되감기&quot;메소드에 응답하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5d32a73f8e462215afaed190d0dfece46efdc6ed" translate="yes" xml:space="preserve">
          <source>If the exception is Errno::EINPROGRESS, it is extended by &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt;. So &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt; can be used to rescue the exceptions for retrying connect_nonblock.</source>
          <target state="translated">예외가 Errno :: EINPROGRESS이면 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 확장됩니다 . 따라서 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 을 사용하여 connect_nonblock 재 시도에 대한 예외를 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3416e8efaed75e5683ec3e83efbe483df1c0f0f9" translate="yes" xml:space="preserve">
          <source>If the exception is Errno::EWOULDBLOCK or Errno::EAGAIN, it is extended by &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt;. So &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; can be used to rescue the exceptions for retrying read_nonblock.</source>
          <target state="translated">예외가 Errno :: EWOULDBLOCK 또는 Errno :: EAGAIN 인 경우 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 확장됩니다 . 따라서 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 을 사용하여 read_nonblock 재 시도에 대한 예외를 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92c4cad8c40808eb3a529e7eee185b2a898200ce" translate="yes" xml:space="preserve">
          <source>If the exception is Errno::EWOULDBLOCK or Errno::EAGAIN, it is extended by &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt;. So &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; can be used to rescue the exceptions for retrying recv_nonblock.</source>
          <target state="translated">예외가 Errno :: EWOULDBLOCK 또는 Errno :: EAGAIN 인 경우 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 확장됩니다 . 따라서 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 을 사용하여 recv_nonblock 재 시도에 대한 예외를 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42a99adab1e6801b62a3887f73ba4a3faa36b466" translate="yes" xml:space="preserve">
          <source>If the exception is Errno::EWOULDBLOCK or Errno::EAGAIN, it is extended by &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt;. So &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; can be used to rescue the exceptions for retrying recvfrom_nonblock.</source>
          <target state="translated">예외가 Errno :: EWOULDBLOCK 또는 Errno :: EAGAIN 인 경우 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 확장됩니다 . 따라서 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 을 사용하여 recvfrom_nonblock 재 시도에 대한 예외를 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1918f7ff9a18ef32f472075c0c5922d1a36d213e" translate="yes" xml:space="preserve">
          <source>If the exception is Errno::EWOULDBLOCK or Errno::EAGAIN, it is extended by &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt;. So &lt;a href=&quot;io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt; can be used to rescue the exceptions for retrying write_nonblock.</source>
          <target state="translated">예외가 Errno :: EWOULDBLOCK 또는 Errno :: EAGAIN이면 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 확장됩니다 . 따라서 &lt;a href=&quot;io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt; 을 사용하여 write_nonblock 재 시도에 대한 예외를 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cce78f75399798d361cd427a164d637f4c5bb6e" translate="yes" xml:space="preserve">
          <source>If the exception is Errno::EWOULDBLOCK, Errno::EAGAIN, &lt;a href=&quot;errno/econnaborted&quot;&gt;&lt;code&gt;Errno::ECONNABORTED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;errno/eproto&quot;&gt;&lt;code&gt;Errno::EPROTO&lt;/code&gt;&lt;/a&gt;, it is extended by &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt;. So &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; can be used to rescue the exceptions for retrying accept_nonblock.</source>
          <target state="translated">예외가 Errno :: EWOULDBLOCK, Errno :: EAGAIN, &lt;a href=&quot;errno/econnaborted&quot;&gt; &lt;code&gt;Errno::ECONNABORTED&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;errno/eproto&quot;&gt; &lt;code&gt;Errno::EPROTO&lt;/code&gt; &lt;/a&gt; 인 경우 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 확장됩니다 . 따라서 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 을 사용하여 accept_nonblock 재 시도에 대한 예외를 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb9c27d57e6e01fafd452d5e2759e539568f6be0" translate="yes" xml:space="preserve">
          <source>If the exception is Errno::EWOULDBLOCK, Errno::EAGAIN, &lt;a href=&quot;errno/econnaborted&quot;&gt;&lt;code&gt;Errno::ECONNABORTED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;errno/eproto&quot;&gt;&lt;code&gt;Errno::EPROTO&lt;/code&gt;&lt;/a&gt;, it is extended by &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt;. So &lt;a href=&quot;io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; can be used to rescue the exceptions for retrying accept_nonblock.</source>
          <target state="translated">예외가 Errno :: EWOULDBLOCK, Errno :: EAGAIN, &lt;a href=&quot;errno/econnaborted&quot;&gt; &lt;code&gt;Errno::ECONNABORTED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;errno/eproto&quot;&gt; &lt;code&gt;Errno::EPROTO&lt;/code&gt; &lt;/a&gt; 인 경우 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 확장됩니다 . 따라서 &lt;a href=&quot;io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt; 을 사용하여 accept_nonblock 재 시도에 대한 예외를 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbac2d75f06e67d326f0911ea0a1cad7d6289bc7" translate="yes" xml:space="preserve">
          <source>If the exception is intended, it might be better to rescue it closer to where it is raised rather then let it kill the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외가 의도 된 경우, 제기 된 위치에 가깝게 구출하는 것이 좋으며 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; 를&lt;/a&gt; 죽이는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="093ddb488db27a989ee817bcca6a88cec4a7aba8" translate="yes" xml:space="preserve">
          <source>If the exception is not intended, the best is to fix the cause of the exception so it does not happen anymore.</source>
          <target state="translated">예외가 의도되지 않은 경우, 예외의 원인을 해결하여 더 이상 발생하지 않도록하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6f5bcd5db225b5b8727f73e5e5cee473b29333fc" translate="yes" xml:space="preserve">
          <source>If the external encoding and the internal encoding are specified, the optional &lt;code&gt;Hash&lt;/code&gt; argument can be used to adjust the conversion process. The structure of this hash is explained in the &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;String#encode&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">외부 인코딩과 내부 인코딩이 지정된 경우 선택적 &lt;code&gt;Hash&lt;/code&gt; 인수를 사용하여 변환 프로세스를 조정할 수 있습니다. 이 해시의 구조는 &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;String#encode&lt;/code&gt; &lt;/a&gt; 설명서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b56e41d335ec4b69a630600b9b7e91f915abe44" translate="yes" xml:space="preserve">
          <source>If the file can be loaded from the existing Ruby loadpath, it is.</source>
          <target state="translated">기존 Ruby로드 경로에서 파일을로드 할 수있는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="2ff78b8aa348b83c0268b06f6afd77bc8a5a672a" translate="yes" xml:space="preserve">
          <source>If the file does not exist, a new file will be created using the given &lt;code&gt;mode&lt;/code&gt;, unless &lt;code&gt;mode&lt;/code&gt; is explicitly set to nil. In the latter case, no database will be created.</source>
          <target state="translated">파일이 존재 하지 않으면 &lt;code&gt;mode&lt;/code&gt; 가 명시 적으로 nil로 설정되어 있지 않으면 주어진 &lt;code&gt;mode&lt;/code&gt; 사용하여 새 파일이 작성됩니다 . 후자의 경우 데이터베이스가 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6692cd86d7d897c6ad8b16393bf61b87d629565" translate="yes" xml:space="preserve">
          <source>If the file exists, it will be opened in read/write mode. If this fails, it will be opened in read-only mode.</source>
          <target state="translated">파일이 존재하면 읽기 / 쓰기 모드로 열립니다. 이것이 실패하면 읽기 전용 모드로 열립니다.</target>
        </trans-unit>
        <trans-unit id="dfa99ff8fe8eb2c331c08b55550d96ce73bd1d31" translate="yes" xml:space="preserve">
          <source>If the first argument is :GFp or :GF2m, creates a new curve with given parameters.</source>
          <target state="translated">첫 번째 인수가 : GFp 또는 : GF2m이면 지정된 매개 변수를 사용하여 새 곡선을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e92540597cc85436ec531c04350241fb7bf368f7" translate="yes" xml:space="preserve">
          <source>If the first character of a character class is a caret (&lt;code&gt;^&lt;/code&gt;) the class is inverted: it matches any character &lt;em&gt;except&lt;/em&gt; those named.</source>
          <target state="translated">문자 클래스의 첫 번째 문자가 캐럿 ( &lt;code&gt;^&lt;/code&gt; )이면 클래스가 반전됩니다. 이름이 지정된 문자를 &lt;em&gt;제외한&lt;/em&gt; 모든 문자와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="46e97df40c5a2cf42e0b3a381a670bc6926466f4" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;clock_id&lt;/code&gt; is not supported, Errno::EINVAL is raised.</source>
          <target state="translated">주어진 &lt;code&gt;clock_id&lt;/code&gt; 가 지원되지 않으면 Errno :: EINVAL이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6c4037059bf5c8d10c5e4ed05090a0e48a653b3a" translate="yes" xml:space="preserve">
          <source>If the given name does not exist and neither &lt;code&gt;default&lt;/code&gt; nor a block a provided an &lt;a href=&quot;keyerror&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised. If a block is given it is called with the missing name to provide a value. If a default value is given it will be returned when no block is given.</source>
          <target state="translated">주어진 이름이 존재하지 않고 제공된 &lt;code&gt;default&lt;/code&gt; 이나 블록 이 없으면 &lt;a href=&quot;keyerror&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 블록이 제공되면 누락 된 이름으로 호출되어 값을 제공합니다. 기본값이 제공되면 블록이 제공되지 않을 때 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5fef0cf13e4b0fb4413a5ba77d858201de144e4b" translate="yes" xml:space="preserve">
          <source>If the gzip file header is incorrect, raises an &lt;a href=&quot;gzipfile/error&quot;&gt;&lt;code&gt;Zlib::GzipFile::Error&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">gzip 파일 헤더가 올바르지 않으면 &lt;a href=&quot;gzipfile/error&quot;&gt; &lt;code&gt;Zlib::GzipFile::Error&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="37494e97c5dcd9bb74ac90abcd32190c6d640ff6" translate="yes" xml:space="preserve">
          <source>If the increment generates a &amp;ldquo;carry,'' the character to the left of it is incremented. This process repeats until there is no carry, adding an additional character if necessary.</source>
          <target state="translated">증가가 &quot;캐리&quot;를 생성하면 왼쪽의 문자가 증가합니다. 이 프로세스는 캐리가 없을 때까지 반복되며 필요한 경우 추가 문자를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0970e83dd0e9e4c961a6d55ba2d4e392f2c488a0" translate="yes" xml:space="preserve">
          <source>If the iteration is zero times, &lt;code&gt;separator_proc&lt;/code&gt; is not called at all.</source>
          <target state="translated">반복이 0 번이면 &lt;code&gt;separator_proc&lt;/code&gt; 이 전혀 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="380185bf0c4333bf12a8d4ee15aef2f9d13d5295" translate="yes" xml:space="preserve">
          <source>If the last argument is a hash, it specifies options for the internal open(). It accepts the following keys:</source>
          <target state="translated">마지막 인수가 해시이면 내부 open ()에 대한 옵션을 지정합니다. 다음 키를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="563cc437a6a496b1e8c5537031208c36058dacb4" translate="yes" xml:space="preserve">
          <source>If the last argument is a hash, it's the keyword argument to open.</source>
          <target state="translated">마지막 인수가 해시이면 여는 키워드 인수입니다.</target>
        </trans-unit>
        <trans-unit id="c1f8712d9c7bb4283a81faeef84b6596c4a9ef10" translate="yes" xml:space="preserve">
          <source>If the last argument is a hash, it's the keyword argument to open. See &lt;a href=&quot;io#method-c-readlines&quot;&gt;&lt;code&gt;IO.readlines&lt;/code&gt;&lt;/a&gt; for details about getline_args. And see also &lt;a href=&quot;io#method-c-read&quot;&gt;&lt;code&gt;IO.read&lt;/code&gt;&lt;/a&gt; for details about open_args.</source>
          <target state="translated">마지막 인수가 해시이면 여는 키워드 인수입니다. &lt;a href=&quot;io#method-c-readlines&quot;&gt; &lt;code&gt;IO.readlines&lt;/code&gt; &lt;/a&gt; 대한 자세한 내용은 IO.readlines 를 참조하십시오 . &lt;a href=&quot;io#method-c-read&quot;&gt; &lt;code&gt;IO.read&lt;/code&gt; &lt;/a&gt; 대한 자세한 내용은 IO.read 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="25ed5c5d88381da9e0f18236f3929eb61cc9b907" translate="yes" xml:space="preserve">
          <source>If the last parameter, opts, is a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, it is recognized as an option for &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">마지막 매개 변수 opts가 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 인 경우 &lt;a href=&quot;process#method-c-spawn&quot;&gt; &lt;code&gt;Process.spawn&lt;/code&gt; &lt;/a&gt; 의 옵션으로 인식됩니다 .</target>
        </trans-unit>
        <trans-unit id="099fa50d0293cd6259f1dcb0dc604abf7594ea2a" translate="yes" xml:space="preserve">
          <source>If the length of the subarrays don't match, an &lt;a href=&quot;indexerror&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">하위 배열의 길이가 일치하지 않으면 &lt;a href=&quot;indexerror&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="154acf3cee65a8900d953744927c07e79d32a606" translate="yes" xml:space="preserve">
          <source>If the list of dependencies can be resolved, a</source>
          <target state="translated">종속성 목록을 확인할 수 있으면</target>
        </trans-unit>
        <trans-unit id="1840a82a21b81885a8183f44f3ad753bbe63d175" translate="yes" xml:space="preserve">
          <source>If the local address is not suitable for connect, &lt;a href=&quot;socketerror&quot;&gt;&lt;code&gt;SocketError&lt;/code&gt;&lt;/a&gt; is raised. IPv4 and IPv6 address which port is 0 is not suitable for connect. Unix domain socket which has no path is not suitable for connect.</source>
          <target state="translated">로컬 주소가 연결에 적합하지 않으면 &lt;a href=&quot;socketerror&quot;&gt; &lt;code&gt;SocketError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 포트가 0 인 IPv4 및 IPv6 주소는 연결에 적합하지 않습니다. 경로가없는 유닉스 도메인 소켓은 연결에 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="be7f915d7bb7a3c178a037bd46b55c184ba6051b" translate="yes" xml:space="preserve">
          <source>If the logger's level is &lt;code&gt;INFO&lt;/code&gt; or higher, no debug messages will be logged, and the entire block will not even be evaluated. Compare to this:</source>
          <target state="translated">로거 레벨이 &lt;code&gt;INFO&lt;/code&gt; 이상이면 디버그 메시지가 기록되지 않으며 전체 블록도 평가되지 않습니다. 이것과 비교하십시오 :</target>
        </trans-unit>
        <trans-unit id="247bffec0cdae7a600c7c09b3407be108e5cf9e8" translate="yes" xml:space="preserve">
          <source>If the method accepts keyword arguments, the splat operator will convert a hash at the end of the array into keyword arguments:</source>
          <target state="translated">메소드가 키워드 인수를 허용하면 splat 연산자는 배열 끝에있는 해시를 키워드 인수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="826cf69adbc798193a9ac691e71df30219ed9f2b" translate="yes" xml:space="preserve">
          <source>If the method definition doesn't include keyword arguments the keyword or hash-type arguments are assigned as a single hash to the last argument:</source>
          <target state="translated">메소드 정의에 키워드 인수가 포함되지 않은 경우 키워드 또는 해시 유형 인수는 마지막 인수에 단일 해시로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="5ff715d0b2305ccfb5378a17c59c4f6097b034ec" translate="yes" xml:space="preserve">
          <source>If the method definition has a &lt;code&gt;*argument&lt;/code&gt; extra positional arguments will be assigned to &lt;code&gt;argument&lt;/code&gt; in the method as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메소드 정의에 &lt;code&gt;*argument&lt;/code&gt; 가 있으면 추가 위치 인수가 메소드의 &lt;code&gt;argument&lt;/code&gt; 에 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; 로 지정&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="f6c3ba6bc77ff7e1c5008feaac404d9d3c3e2d0b" translate="yes" xml:space="preserve">
          <source>If the method definition uses &lt;code&gt;**&lt;/code&gt; to gather arbitrary keyword arguments, they will not be gathered by &lt;code&gt;*&lt;/code&gt;:</source>
          <target state="translated">메소드 정의가 &lt;code&gt;**&lt;/code&gt; 를 사용 하여 임의의 키워드 인수를 수집하면 &lt;code&gt;*&lt;/code&gt; 로 수집되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="66b1a77d90b576fd45174a188da1d617ac05e3f6" translate="yes" xml:space="preserve">
          <source>If the method is an insecure method (see &lt;a href=&quot;drbserver#method-i-insecure_method-3F&quot;&gt;&lt;code&gt;insecure_method?&lt;/code&gt;&lt;/a&gt;) a &lt;a href=&quot;../securityerror&quot;&gt;&lt;code&gt;SecurityError&lt;/code&gt;&lt;/a&gt; is thrown. If the method is private or undefined, a &lt;a href=&quot;../nameerror&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">메소드가 안전하지 않은 메소드 인 경우 ( &lt;a href=&quot;drbserver#method-i-insecure_method-3F&quot;&gt; &lt;code&gt;insecure_method?&lt;/code&gt; &lt;/a&gt; 참조 ) &lt;a href=&quot;../securityerror&quot;&gt; &lt;code&gt;SecurityError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 메소드가 개인용이거나 정의되지 않은 경우 &lt;a href=&quot;../nameerror&quot;&gt; &lt;code&gt;NameError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f9eda6c21d3bdf623bd9ca184ee8f71c82863c64" translate="yes" xml:space="preserve">
          <source>If the method is not defined, &lt;code&gt;respond_to_missing?&lt;/code&gt; method is called and the result is returned.</source>
          <target state="translated">메소드가 정의되지 않은 경우 &lt;code&gt;respond_to_missing?&lt;/code&gt; 메소드가 호출되고 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="58d596efce6a2280345d3c285459b39ba97f971a" translate="yes" xml:space="preserve">
          <source>If the method is not implemented, as &lt;a href=&quot;process#method-c-fork&quot;&gt;&lt;code&gt;Process.fork&lt;/code&gt;&lt;/a&gt; on Windows, &lt;a href=&quot;file#method-c-lchmod&quot;&gt;&lt;code&gt;File.lchmod&lt;/code&gt;&lt;/a&gt; on GNU/Linux, etc., false is returned.</source>
          <target state="translated">Windows에서 &lt;a href=&quot;process#method-c-fork&quot;&gt; &lt;code&gt;Process.fork&lt;/code&gt; &lt;/a&gt; , GNU / Linux에서 &lt;a href=&quot;file#method-c-lchmod&quot;&gt; &lt;code&gt;File.lchmod&lt;/code&gt; &lt;/a&gt; 등으로 메소드가 구현되지 않으면 false가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="817a6ea1afc02fcab23cb57f4505f6c4b0aca470" translate="yes" xml:space="preserve">
          <source>If the number can be represented as 0.xxxxxx*10**n where xxxxxx is a string of digits with no leading zeros, then n is the exponent.</source>
          <target state="translated">숫자를 0.xxxxxx * 10 ** n으로 표시 할 수 있습니다. 여기서 xxxxxx는 앞에 0이없는 숫자 문자열이며 n은 지수입니다.</target>
        </trans-unit>
        <trans-unit id="94d0c5e4248f58e761f2db8b6963e7375cee4189" translate="yes" xml:space="preserve">
          <source>If the number of nested arrays or objects exceeds &lt;em&gt;limit&lt;/em&gt;, an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; exception is raised. This argument is similar (but not exactly the same!) to the &lt;em&gt;limit&lt;/em&gt; argument in &lt;a href=&quot;marshal#method-c-dump&quot;&gt;&lt;code&gt;Marshal.dump&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">중첩 배열이나 객체의 수가 &lt;em&gt;limit을&lt;/em&gt; 초과 하면 &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 예외가 발생합니다. 이 인수는 &lt;a href=&quot;marshal#method-c-dump&quot;&gt; &lt;code&gt;Marshal.dump&lt;/code&gt; &lt;/a&gt; 의 &lt;em&gt;limit&lt;/em&gt; 인수 와 유사하지만 정확히 동일하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1f0368b9474020bd574b371db52d52dc0d5f14d4" translate="yes" xml:space="preserve">
          <source>If the number of objects in the &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; do not match the number of arguments for the method, an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 의 객체 수가 메서드의 인수 개수와 일치하지 않으면 &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f4b23b0d7536ac45af6c28e7a6daec01332114e8" translate="yes" xml:space="preserve">
          <source>If the objects are both strings they are compatible when they are concatenatable. The encoding of the concatenated string will be returned if they are compatible, nil if they are not.</source>
          <target state="translated">객체가 모두 문자열 인 경우 연결 가능할 때 호환됩니다. 연결된 문자열의 인코딩은 호환 가능한 경우 반환되며, 그렇지 않으면 nil입니다.</target>
        </trans-unit>
        <trans-unit id="eb90c038ff4d1082fe5c7baf72a5c2474a2f6fcf" translate="yes" xml:space="preserve">
          <source>If the objects are non-strings their encodings are compatible when they have an encoding and:</source>
          <target state="translated">객체가 문자열이 아닌 경우 인코딩이있을 때 인코딩이 호환되며</target>
        </trans-unit>
        <trans-unit id="6b32354457d14fa0e1bc33e18ced8b795ce04cc2" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;half&lt;/code&gt; keyword argument is given, numbers that are half-way between two possible rounded values will be rounded according to the specified tie-breaking &lt;code&gt;mode&lt;/code&gt;:</source>
          <target state="translated">선택적인 &lt;code&gt;half&lt;/code&gt; 키워드 인수가 제공되면 가능한 두 반올림 값 사이의 중간 숫자는 지정된 타이 브레이킹 &lt;code&gt;mode&lt;/code&gt; 에 따라 반올림 됩니다 .</target>
        </trans-unit>
        <trans-unit id="2377e55140248658a623c57a45250c4d28001463" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;keyword_init&lt;/code&gt; keyword argument is set to &lt;code&gt;true&lt;/code&gt;, .new takes keyword arguments instead of normal arguments.</source>
          <target state="translated">선택적 &lt;code&gt;keyword_init&lt;/code&gt; 키워드 인수가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 .new는 일반 인수 대신 키워드 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="65824381d5e3e99dcac48202e3472d730ac0766f" translate="yes" xml:space="preserve">
          <source>If the optional &lt;em&gt;filename&lt;/em&gt; parameter is provided, then it is read in and parsed via parse_config.</source>
          <target state="translated">선택적 &lt;em&gt;filename&lt;/em&gt; 매개 변수가 제공되면 parse_config를 통해 읽히고 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="61edf21217fecddf3af41af2bfdf23745939dece" translate="yes" xml:space="preserve">
          <source>If the optional &lt;em&gt;outbuf&lt;/em&gt; argument is present, it must reference a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, which will receive the data. The &lt;em&gt;outbuf&lt;/em&gt; will contain only the received data after the method call even if it is not empty at the beginning.</source>
          <target state="translated">선택적 &lt;em&gt;outbuf&lt;/em&gt; 인수가 있으면 데이터를 수신 할 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; 을&lt;/a&gt; 참조해야합니다 . &lt;em&gt;있었던 outbuf는&lt;/em&gt; 그것이 처음에 비어 있지 않은 경우에도 메서드 호출을 시작한 후 수신 된 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="24a6c6b84f86ea57bea48327b33eb38152c0ded1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;code&gt;result_hash&lt;/code&gt; is given, it is overwritten and returned. This is intended to avoid probe effect.</source>
          <target state="translated">선택적 인수 &lt;code&gt;result_hash&lt;/code&gt; 가 제공되면 겹쳐 쓰여 리턴됩니다. 이것은 프로브 효과를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="1bbce9b42226481c8cd71d79a18111e750faa1fa" translate="yes" xml:space="preserve">
          <source>If the optional argument, result_hash, is given, it is overwritten and returned. This is intended to avoid probe effect.</source>
          <target state="translated">선택적 인수 인 result_hash가 제공되면 겹쳐 쓰여 리턴됩니다. 이것은 프로브 효과를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="8edec82d94e29355cd32ba14417af642d847f062" translate="yes" xml:space="preserve">
          <source>If the optional block is given, the newly created &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; object is passed to it and closed when the block finishes. In this case, the return value of this method is the return value of the block. If no block is given, the return value of this method is the newly created &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; object itself, and the caller is responsible for closing it upon completion using the finish() method.</source>
          <target state="translated">선택적 블록이 제공되면 새로 작성된 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 오브젝트가 전달되고 블록이 완료되면 닫힙니다. 이 경우이 방법의 반환 값은 블록의 반환 값입니다. 블록이 제공되지 않으면이 메소드의 리턴 값은 새로 작성된 &lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt; 오브젝트 자체이며, 호출자는 finish () 메소드를 사용하여 완료시이를 닫을 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="00124e7156b495e74df8ed3cd175d7ccb49d28eb" translate="yes" xml:space="preserve">
          <source>If the optional code block is given, the result of the block is returned if the item is not found. (To remove &lt;code&gt;nil&lt;/code&gt; elements and get an informative return value, use &lt;a href=&quot;array#method-i-compact-21&quot;&gt;&lt;code&gt;Array#compact!&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">선택적 코드 블록이 제공되면 항목을 찾지 못하면 블록의 결과가 반환됩니다. (제거하려면 &lt;code&gt;nil&lt;/code&gt; 요소와 유익한 반환 값, 사용 얻을 &lt;a href=&quot;array#method-i-compact-21&quot;&gt; &lt;code&gt;Array#compact!&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a73804087621528d2282a828208a9d11f8897ad2" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;env&lt;/code&gt; is specified, it is used instead of &lt;a href=&quot;../env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;env&lt;/code&gt; 가 지정되면 &lt;a href=&quot;../env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt; 대신 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="60e3bcbf92c0a7fb0e9e88a28c94fe10712df207" translate="yes" xml:space="preserve">
          <source>If the optional second argument is true and the detected year is in the range &amp;ldquo;00&amp;rdquo; to &amp;ldquo;99&amp;rdquo;, considers the year a 2-digit form and makes it full.</source>
          <target state="translated">선택적인 두 번째 인수가 true이고 감지 된 연도가&amp;ldquo;00&amp;rdquo;에서&amp;ldquo;99&amp;rdquo;범위 인 경우 연도를 2 자리 형식으로 간주하여 전체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="377fa945741ab31f519107f8abbcdc3051fbe216" translate="yes" xml:space="preserve">
          <source>If the optional second argument is true and the detected year is in the range &amp;ldquo;00&amp;rdquo; to &amp;ldquo;99&amp;rdquo;, makes it full.</source>
          <target state="translated">선택적인 두 번째 인수가 true이고 감지 된 연도가&amp;ldquo;00&amp;rdquo;에서&amp;ldquo;99&amp;rdquo;범위에 있으면이 값을 모두 채우십시오.</target>
        </trans-unit>
        <trans-unit id="057d0f2987ee5ebd0b46a730df7d14294a3b9b0e" translate="yes" xml:space="preserve">
          <source>If the ordering is set to PERMUTE but the environment variable POSIXLY_CORRECT is set, REQUIRE_ORDER is used instead. This is for compatibility with GNU getopt_long.</source>
          <target state="translated">순서가 PERMUTE로 설정되었지만 환경 변수 POSIXLY_CORRECT가 설정된 경우 REQUIRE_ORDER가 대신 사용됩니다. 이것은 GNU getopt_long과의 호환성을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="00bab8bffaa052b4108e2afee15d0cb2f6dbcebc" translate="yes" xml:space="preserve">
          <source>If the output field separator (&lt;code&gt;$,&lt;/code&gt;) is not &lt;code&gt;nil&lt;/code&gt;, it is inserted between objects. If the output record separator (&lt;code&gt;$\&lt;/code&gt;) is not &lt;code&gt;nil&lt;/code&gt;, it is appended to the output.</source>
          <target state="translated">출력 필드 구분 기호 ( &lt;code&gt;$,&lt;/code&gt; )가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 오브젝트 사이에 삽입됩니다. 출력 레코드 구분 기호 ( &lt;code&gt;$\&lt;/code&gt; )가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 출력에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="57b0715ebf05a3ccb352af522af744c37fa5f613" translate="yes" xml:space="preserve">
          <source>If the parameter has multiple values, only the first will be retrieved; use &lt;a href=&quot;queryextension#attribute-i-params&quot;&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt; to get the array of values.</source>
          <target state="translated">매개 변수에 여러 값이있는 경우 첫 번째 값만 검색됩니다. &lt;a href=&quot;queryextension#attribute-i-params&quot;&gt; &lt;code&gt;params&lt;/code&gt; &lt;/a&gt; 를 사용 하여 값의 배열을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1ee8406c750b89cd88579ec0edca3a39fbd27ab0" translate="yes" xml:space="preserve">
          <source>If the path supplied is absolute, it will be escaped in order to make it absolute in the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제공된 경로가 절대 경로이면 &lt;a href=&quot;../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 에서 절대 경로로 만들기 위해 이스케이프됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0a0819d6d7d4ac673491a461396b3a5dd405c7f" translate="yes" xml:space="preserve">
          <source>If the platform doesn't have birthtime, raises &lt;a href=&quot;../notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">플랫폼에 출생 시간이 없으면 NotImplementedError가 &lt;a href=&quot;../notimplementederror&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1456509d606e594d220d835342ff63d209d066d5" translate="yes" xml:space="preserve">
          <source>If the platform doesn't have birthtime, raises &lt;a href=&quot;notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">플랫폼에 출생 시간이 없으면 NotImplementedError가 &lt;a href=&quot;notimplementederror&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="67c675ebe8d882fa0ebfbadde6cfff51aa1533ff" translate="yes" xml:space="preserve">
          <source>If the platform supports denormalized numbers, there are numbers between zero and &lt;a href=&quot;float#MIN&quot;&gt;&lt;code&gt;Float::MIN&lt;/code&gt;&lt;/a&gt;. 0.0.next_float returns the smallest positive floating point number including denormalized numbers.</source>
          <target state="translated">플랫폼이 비정규 화 된 숫자를 지원하면 0과 &lt;a href=&quot;float#MIN&quot;&gt; &lt;code&gt;Float::MIN&lt;/code&gt; &lt;/a&gt; 사이의 숫자가 있습니다 . 0.0.next_float는 비정규 화 된 숫자를 포함하여 가장 작은 양의 부동 소수점 숫자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d531f4bb58a1d1a5967f8bd0eca84cd40cb23a40" translate="yes" xml:space="preserve">
          <source>If the process is not alive, and &lt;code&gt;raise&lt;/code&gt; was true, a &lt;a href=&quot;pty/childexited&quot;&gt;&lt;code&gt;PTY::ChildExited&lt;/code&gt;&lt;/a&gt; exception will be raised. Otherwise it will return a &lt;a href=&quot;process/status&quot;&gt;&lt;code&gt;Process::Status&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">프로세스가 살아 아니며, 경우 &lt;code&gt;raise&lt;/code&gt; 사실이라고하는 &lt;a href=&quot;pty/childexited&quot;&gt; &lt;code&gt;PTY::ChildExited&lt;/code&gt; &lt;/a&gt; 예외가 발생됩니다. 그렇지 않으면 &lt;a href=&quot;process/status&quot;&gt; &lt;code&gt;Process::Status&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b0e644eeb9606953b8784a233db1dc1f531b3073" translate="yes" xml:space="preserve">
          <source>If the proxy &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is set after requests have been made, the next request will shut-down and re-open all connections.</source>
          <target state="translated">요청이 이루어진 후 프록시 &lt;a href=&quot;../../../../uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 가 설정되면 다음 요청은 모든 연결을 종료하고 다시 엽니 다.</target>
        </trans-unit>
        <trans-unit id="d141367f1ca7d06f949aa70a70b6579e2a3b8f2d" translate="yes" xml:space="preserve">
          <source>If the queue is empty, the calling thread is suspended until data is pushed onto the queue. If &lt;code&gt;non_block&lt;/code&gt; is true, the thread isn't suspended, and &lt;code&gt;ThreadError&lt;/code&gt; is raised.</source>
          <target state="translated">큐가 비어 있으면 데이터가 큐로 푸시 될 때까지 호출 스레드가 일시 중단됩니다. 경우 &lt;code&gt;non_block&lt;/code&gt; 는 사실, 스레드가 일시 중단되지 않으며, &lt;code&gt;ThreadError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0b5fc9186e37508309d269dc75ef72d4302d80a5" translate="yes" xml:space="preserve">
          <source>If the read byte buffer is not empty, &lt;a href=&quot;io#method-i-read_nonblock&quot;&gt;&lt;code&gt;read_nonblock&lt;/code&gt;&lt;/a&gt; reads from the buffer like readpartial. In this case, the read(2) system call is not called.</source>
          <target state="translated">읽기 바이트 버퍼가 비어 있지 않으면 &lt;a href=&quot;io#method-i-read_nonblock&quot;&gt; &lt;code&gt;read_nonblock&lt;/code&gt; &lt;/a&gt; 은 readpartial과 같이 버퍼에서 읽습니다. 이 경우 read (2) 시스템 호출이 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4c630bff02745efecda8e73f81ea37749676643" translate="yes" xml:space="preserve">
          <source>If the referenced object is located within the local server, then the object itself is returned. Otherwise, a new &lt;a href=&quot;drbobject&quot;&gt;&lt;code&gt;DRbObject&lt;/code&gt;&lt;/a&gt; is created to act as a stub for the remote referenced object.</source>
          <target state="translated">참조 된 오브젝트가 로컬 서버 내에 있으면 오브젝트 자체가 리턴됩니다. 그렇지 않으면, 원격 참조 오브젝트의 스텁으로 작동하도록 새 &lt;a href=&quot;drbobject&quot;&gt; &lt;code&gt;DRbObject&lt;/code&gt; &lt;/a&gt; 가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="8d9d2488598348eaf1c8ce489c050d107c8662aa" translate="yes" xml:space="preserve">
          <source>If the required input is a path, then set the path option to true. This will enable tab completion for file paths relative to the current working directory on systems that support &lt;a href=&quot;../../../readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">필요한 입력이 경로 인 경우 경로 옵션을 true로 설정하십시오. &lt;a href=&quot;../../../readline&quot;&gt; &lt;code&gt;Readline&lt;/code&gt; &lt;/a&gt; 을 지원하는 시스템에서 현재 작업 디렉토리에 상대적인 파일 경로에 대한 탭 완성을 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="899dec35b20668078e9d7aedbc09c638bee47aff" translate="yes" xml:space="preserve">
          <source>If the second argument is a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, and the matched text is one of its keys, the corresponding value is the replacement string.</source>
          <target state="translated">두 번째 인수가 &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; 이고 일치하는 텍스트가 해당 키 중 하나 인 경우 해당 값은 대체 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e04585cb26cbf8bb8c914907fb1c42abfd6d39ca" translate="yes" xml:space="preserve">
          <source>If the second argument is a &lt;code&gt;Hash&lt;/code&gt;, and the matched text is one of its keys, the corresponding value is the replacement string.</source>
          <target state="translated">두 번째 인수가 &lt;code&gt;Hash&lt;/code&gt; 이고 일치하는 텍스트가 해당 키 중 하나 인 경우 해당 값은 대체 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fd220007e9061380b82be33b9981d355b475ea46" translate="yes" xml:space="preserve">
          <source>If the second is omitted then '::1' is used. If the third is omitted then 0 (default interface) is used.</source>
          <target state="translated">두 번째가 생략되면 ':: 1'이 사용됩니다. 세 번째가 생략되면 0 (기본 인터페이스)이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="95731ef86bd29c3aa07507aaad5ce8273a4cc780" translate="yes" xml:space="preserve">
          <source>If the server certificate is invalid or &lt;code&gt;context.ca_file&lt;/code&gt; is not set when verifying peers an &lt;a href=&quot;openssl/ssl/sslerror&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">서버 인증서가 유효하지 않거나 피어를 확인할 때 &lt;code&gt;context.ca_file&lt;/code&gt; 이 설정되지 않으면 &lt;a href=&quot;openssl/ssl/sslerror&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5833d7e3719f1b062a205f803707bb4366b7274f" translate="yes" xml:space="preserve">
          <source>If the size of any argument is less than the size of the initial array, &lt;code&gt;nil&lt;/code&gt; values are supplied.</source>
          <target state="translated">인수의 크기가 초기 배열의 크기보다 작 으면 &lt;code&gt;nil&lt;/code&gt; 값이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b10a3ed09d73394e69ba13e93486009adc6349af" translate="yes" xml:space="preserve">
          <source>If the source of the &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; is a file, then consider using parse_config.</source>
          <target state="translated">&lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 의 소스가 파일 인 경우 parse_config 사용을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="726d852b6d6041290bc8691b59fe9f9ad9aca741" translate="yes" xml:space="preserve">
          <source>If the source plugin is loaded from lockfile or otherwise, it shall refresh the cache/specs (e.g. git sources can make a fresh clone).</source>
          <target state="translated">소스 플러그인이 잠금 파일에서로드되거나 그렇지 않으면 캐시 / 사양을 새로 고쳐야합니다 (예 : git 소스가 새로운 클론을 만들 수 있음).</target>
        </trans-unit>
        <trans-unit id="4f5dbb1766a2da4e8778d268f6d9bc370fd318d2" translate="yes" xml:space="preserve">
          <source>If the splat operator comes first in the call, parentheses must be used to avoid a warning.</source>
          <target state="translated">스 플랫 연산자가 호출에서 맨 앞에 오면 경고를 피하기 위해 괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="100e3cf4a525ab68e5e1bc47828cf68d8e664933" translate="yes" xml:space="preserve">
          <source>If the splat operator comes first in the call, parenthesis must be used to avoid a warning.</source>
          <target state="translated">스 플랫 연산자가 호출에서 맨 앞에 오면 경고를 피하기 위해 괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="40b8a12fed9cdd0eccca5278ca508d93c6b51bb8" translate="yes" xml:space="preserve">
          <source>If the string from the first form (&lt;code&gt;exec(&quot;command&quot;)&lt;/code&gt;) follows these simple rules:</source>
          <target state="translated">첫 번째 양식 ( &lt;code&gt;exec(&quot;command&quot;)&lt;/code&gt; ) 의 문자열 이 다음과 같은 간단한 규칙을 따르는 경우 :</target>
        </trans-unit>
        <trans-unit id="c257497ec2222f073ab769ce8a1a9caccda6d475" translate="yes" xml:space="preserve">
          <source>If the string is frozen, then return duplicated mutable string.</source>
          <target state="translated">문자열이 고정 된 경우 복제 된 변경 가능한 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="43936dc7dd4dc66b17219a4a1670af67c7493f18" translate="yes" xml:space="preserve">
          <source>If the string is invalid byte sequence then replace invalid bytes with given replacement character, else returns self. If block is given, replace invalid bytes with returned value of the block.</source>
          <target state="translated">문자열이 유효하지 않은 바이트 시퀀스이면 유효하지 않은 바이트를 지정된 대체 문자로 바꾸고 그렇지 않으면 self를 리턴합니다. 블록이 제공되면 유효하지 않은 바이트를 블록의 리턴 값으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="adb684777c1f232daf400824fbece12d26ed60b7" translate="yes" xml:space="preserve">
          <source>If the string is not frozen, then return the string itself.</source>
          <target state="translated">문자열이 고정되지 않은 경우 문자열 자체를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="694620b5df54815bb6c727e11af0203708e9fab2" translate="yes" xml:space="preserve">
          <source>If the string is not in a Unicode &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;, then an &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; is raised. For details, see &lt;a href=&quot;string#method-i-unicode_normalize&quot;&gt;&lt;code&gt;String#unicode_normalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">문자열이 유니 코드에없는 경우 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; , 다음 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 발생합니다. 자세한 내용은 &lt;a href=&quot;string#method-i-unicode_normalize&quot;&gt; &lt;code&gt;String#unicode_normalize&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6aac9d1daa77034bbf1124e2124b809f2a87059" translate="yes" xml:space="preserve">
          <source>If the string is not in a Unicode &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;, then an &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; is raised. In this context, 'Unicode Encoding' means any of UTF-8, UTF-16BE/LE, and UTF-32BE/LE, as well as GB18030, UCS_2BE, and UCS_4BE. Anything other than UTF-8 is implemented by converting to UTF-8, which makes it slower than UTF-8.</source>
          <target state="translated">문자열이 유니 코드에없는 경우 &lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; , 다음 &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; 발생합니다. 이와 관련하여 '유니 코드 인코딩'은 UTF-8, UTF-16BE / LE 및 UTF-32BE / LE 및 GB18030, UCS_2BE 및 UCS_4BE를 의미합니다. UTF-8 이외의 것은 UTF-8로 변환하여 구현되므로 UTF-8보다 느립니다.</target>
        </trans-unit>
        <trans-unit id="6bd8e040f4bdc958e54c848037c1287f76dfe1df" translate="yes" xml:space="preserve">
          <source>If the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered greater than the shorter one.</source>
          <target state="translated">문자열의 길이가 다르고 가장 짧은 길이와 비교할 때 문자열이 같은 경우 더 긴 문자열이 짧은 문자열보다 큰 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7ccb1a510a2faa9f1acd20fad2529d79e1313b6f" translate="yes" xml:space="preserve">
          <source>If the struct name does not match a &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; subclass in the running ruby an exception should be raised.</source>
          <target state="translated">구조체 이름이 실행중인 루비의 &lt;a href=&quot;struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt; 서브 클래스 와 일치하지 않으면 예외가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="028ab21de34dcb3a29de0a1ccea9c7831ca6008e" translate="yes" xml:space="preserve">
          <source>If the syslog is already open, raises a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">syslog가 이미 열려 있으면 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="756cea2c25f126ccba797326b1ff79cef9ea980b" translate="yes" xml:space="preserve">
          <source>If the terminal mode needs to be back, use io.cooked { &amp;hellip; }.</source>
          <target state="translated">터미널 모드를 되돌려 야하는 경우 io.cooked {&amp;hellip;}를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="71dc44bfac44c1c2187bfa8ac42ab7b231c11dfe" translate="yes" xml:space="preserve">
          <source>If the terminal mode needs to be back, use io.raw { &amp;hellip; }.</source>
          <target state="translated">터미널 모드를 되돌려 야하는 경우 io.raw {&amp;hellip;}를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6486553676b7753606578ff73f2b80af572e074e" translate="yes" xml:space="preserve">
          <source>If the thread is still using the connection it may cause an error! It is best to call &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; in the thread at the appropriate time instead!</source>
          <target state="translated">스레드가 여전히 연결을 사용중인 경우 오류가 발생할 수 있습니다! 대신 적절한 시간에 스레드에서 &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 를 호출하는 것이 가장 좋습니다 !</target>
        </trans-unit>
        <trans-unit id="ffe153878a573d77d28e40c226f27823a2fde867" translate="yes" xml:space="preserve">
          <source>If the time limit expires, &lt;code&gt;nil&lt;/code&gt; will be returned, otherwise &lt;code&gt;thr&lt;/code&gt; is returned.</source>
          <target state="translated">시간 제한이 만료되면 &lt;code&gt;nil&lt;/code&gt; 이 반환되고 그렇지 않으면 &lt;code&gt;thr&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3bacc1e6b98e5755dc5e78c5ef8814f3048b995f" translate="yes" xml:space="preserve">
          <source>If the time zone does not match any of the above, &lt;code&gt;zone_offset&lt;/code&gt; will check if the local time zone (both with and without potential Daylight Saving Time changes being in effect) matches &lt;code&gt;zone&lt;/code&gt;. Specifying a value for &lt;code&gt;year&lt;/code&gt; will change the year used to find the local time zone.</source>
          <target state="translated">시간대는 위의 일치하지 않는 경우, &lt;code&gt;zone_offset&lt;/code&gt; (와 잠재적 인 일광 절약 시간이 변경 적용되지 않고 모두) 지역 시간대가 일치하는지 확인합니다 &lt;code&gt;zone&lt;/code&gt; . &lt;code&gt;year&lt;/code&gt; 값을 지정 하면 현지 시간대를 찾는 데 사용되는 연도 가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="b97414506322e216174700dbf2cf226531bc4692" translate="yes" xml:space="preserve">
          <source>If the trace method is called outside block, a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">추적 메소드가 블록 외부에서 호출되면 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a06fd015bd61c5916d0bc3521070e84a12d87251" translate="yes" xml:space="preserve">
          <source>If the trace method isn't included in the given events filter, a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">주어진 이벤트 필터에 추적 메소드가 포함되어 있지 않으면 &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e2c19dbd5a9a96237961536ae8afb74377b74a88" translate="yes" xml:space="preserve">
          <source>If the underlying operating system does not support &lt;em&gt;fdatasync(2)&lt;/em&gt;, &lt;code&gt;IO#fsync&lt;/code&gt; is called instead (which might raise a &lt;code&gt;NotImplementedError&lt;/code&gt;).</source>
          <target state="translated">기본 운영 체제가 지원하지 않는 경우 &lt;em&gt;(2)를 fdatasync&lt;/em&gt; , &lt;code&gt;IO#fsync&lt;/code&gt; (A 올릴 수있는 대신이라고 &lt;code&gt;NotImplementedError&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="008f60704f556b7f8c5ec39797fae53e3b9c0c99" translate="yes" xml:space="preserve">
          <source>If the underlying platform doesn't define a constant the corresponding Ruby constant is not defined.</source>
          <target state="translated">기본 플랫폼이 상수를 정의하지 않으면 해당 Ruby 상수가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b6cb99885919af23c91c7137cb7a259b88513de" translate="yes" xml:space="preserve">
          <source>If the upper components of the given time are broken or missing, they are supplied with those of &lt;code&gt;now&lt;/code&gt;. For the lower components, the minimum values (1 or 0) are assumed if broken or missing. For example:</source>
          <target state="translated">주어진 시간의 상단 구성 요소가 깨지거나 누락 된 경우, 그들은들과 함께 제공되는 &lt;code&gt;now&lt;/code&gt; . 하위 구성 요소의 경우 최소값 (1 또는 0)이 깨지거나 누락 된 것으로 가정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f0a759f929368675a35bf5075f457ff4810fd3ed" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;:replace&lt;/code&gt;, &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; replaces characters which are undefined in the destination encoding with the replacement character. The default is to raise the &lt;a href=&quot;encoding/undefinedconversionerror&quot;&gt;&lt;code&gt;Encoding::UndefinedConversionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 &lt;code&gt;:replace&lt;/code&gt; 인 경우 , &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 는 대상 인코딩에서 정의되지 않은 문자를 대체 문자로 바꿉니다. 기본값은 &lt;a href=&quot;encoding/undefinedconversionerror&quot;&gt; &lt;code&gt;Encoding::UndefinedConversionError&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e5f374578c0c7a2a4c23a5bb0164e3b39f84fafc" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;:replace&lt;/code&gt;, &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; replaces invalid byte sequences in &lt;code&gt;str&lt;/code&gt; with the replacement character. The default is to raise the &lt;a href=&quot;encoding/invalidbytesequenceerror&quot;&gt;&lt;code&gt;Encoding::InvalidByteSequenceError&lt;/code&gt;&lt;/a&gt; exception</source>
          <target state="translated">값이 &lt;code&gt;:replace&lt;/code&gt; 인 경우 &lt;a href=&quot;string#method-i-encode&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;str&lt;/code&gt; 의 유효하지 않은 바이트 시퀀스를 대체 문자로 바꿉니다 . 기본값은 &lt;a href=&quot;encoding/invalidbytesequenceerror&quot;&gt; &lt;code&gt;Encoding::InvalidByteSequenceError&lt;/code&gt; &lt;/a&gt; 예외를 발생시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a9e96f37c4091e66b1bf96976e87d58fe957d1d0" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;fd&lt;/code&gt; will be kept open after this &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; instance gets finalized.</source>
          <target state="translated">값이 &lt;code&gt;false&lt;/code&gt; 인 경우이 &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; 인스턴스가 완료된 후에 &lt;code&gt;fd&lt;/code&gt; 는 열린 상태로 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8179e975506ff4bd4ed485288d6e4d58c8a37e6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt; no conversion occurs.</source>
          <target state="translated">값이 &lt;code&gt;nil&lt;/code&gt; 이면 변환이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6152d3923ee2af345ddabe3c564b15ac762ae3f7" translate="yes" xml:space="preserve">
          <source>If the value is not set, the yield returns nil.</source>
          <target state="translated">값을 설정하지 않으면 수율은 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="438d302d8e9cd232b7b608f44a9e12a7381715fe" translate="yes" xml:space="preserve">
          <source>If the value is positive, a value of positive zero is returned.</source>
          <target state="translated">값이 양수이면 양수 0이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="d8448379c64d1cbbdd69b8a0b6f62931d457d966" translate="yes" xml:space="preserve">
          <source>If the value is truth value, same as &amp;ldquo;b&amp;rdquo; in argument &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">값이 진리 값인 경우 인수 &lt;code&gt;mode&lt;/code&gt; &quot;b&quot;와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c229715de11c9d2f63dd617e46fd26cd0ae5fbc3" translate="yes" xml:space="preserve">
          <source>If the value is truth value, same as &amp;ldquo;t&amp;rdquo; in argument &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">값이 진리 값인 경우 인수 &lt;code&gt;mode&lt;/code&gt; &quot;t&quot;와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c5efbdd5ac43be689a27b11ca5ec2111b6e76894" translate="yes" xml:space="preserve">
          <source>If the value which is too small to be represented is negative, a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; value of negative zero is returned.</source>
          <target state="translated">표현하기에 너무 작은 값이 음수이면 &lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 값이 음수 인 0이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c2c061eea4918b26782f788198473dc56718b2d2" translate="yes" xml:space="preserve">
          <source>If the write buffer is not empty, it is flushed at first.</source>
          <target state="translated">쓰기 버퍼가 비어 있지 않으면 처음에 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="c02ffccd316a1ffea30c77df7cb0210418734a21" translate="yes" xml:space="preserve">
          <source>If there are no named captures, an empty hash is returned.</source>
          <target state="translated">명명 된 캡처가 없으면 빈 해시가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="96115b60e572328701f8171eafaa6aacdb3c0615" translate="yes" xml:space="preserve">
          <source>If there are waiting enqueuing threads, they are interrupted by raising ClosedQueueError('queue closed').</source>
          <target state="translated">대기열에 대기중인 스레드가 있으면 ClosedQueueError ( 'queue closed')를 발생시켜 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="5a502e020b57d2ab480dd6fa6afd78825457d989" translate="yes" xml:space="preserve">
          <source>If there is a '+' at the start of s, positive values are returned with a leading '+'.</source>
          <target state="translated">s의 시작 부분에 '+'가 있으면 양수 값이 선행 '+'와 함께 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="13249b6de11a2667f95fb151bcf25ec6dccf54d7" translate="yes" xml:space="preserve">
          <source>If there is a cycle, &lt;code&gt;TSort::Cyclic&lt;/code&gt; is raised.</source>
          <target state="translated">사이클이 있으면 &lt;code&gt;TSort::Cyclic&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c1fea717728a356e57d673cc56e92931ba0a1cb9" translate="yes" xml:space="preserve">
          <source>If there is a mismatch between the struct in the currently running ruby and the member count in the marshaled struct an exception should be raised.</source>
          <target state="translated">현재 실행중인 루비의 구조체와 마샬링 된 구조체의 멤버 수가 일치하지 않으면 예외가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb8e789275fa9d4d1a76b9c46926e62b4b41e950" translate="yes" xml:space="preserve">
          <source>If there is an error and the request is idempotent according to RFC 2616 it will be retried automatically.</source>
          <target state="translated">RFC 2616에 따라 오류가 있고 요청이 dem 등원이면 자동으로 재 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="f06373b1a2a5c073ce89b1387c04e97a8a950934" translate="yes" xml:space="preserve">
          <source>If there is an error in preparing the &lt;code&gt;ffi_cif&lt;/code&gt; or &lt;code&gt;ffi_prep_closure&lt;/code&gt;, then a &lt;a href=&quot;../../runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">&lt;code&gt;ffi_cif&lt;/code&gt; 또는 &lt;code&gt;ffi_prep_closure&lt;/code&gt; 를 준비하는 동안 오류가 발생 하면 &lt;a href=&quot;../../runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f7f4777ac9144172cab5f4ccaf3e576bb6f42ea5" translate="yes" xml:space="preserve">
          <source>If there is an error in preparing the ffi_cif or ffi_prep_closure, then a &lt;a href=&quot;../runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">ffi_cif 또는 ffi_prep_closure를 준비하는 동안 오류가 발생하면 &lt;a href=&quot;../runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="60a75542ddcec8f1819115d9b29d6911c9cdb9de" translate="yes" xml:space="preserve">
          <source>If there is an error while sending to the system logger, write directly to the console instead.</source>
          <target state="translated">시스템 로거로 전송하는 동안 오류가 발생하면 대신 콘솔에 직접 쓰십시오.</target>
        </trans-unit>
        <trans-unit id="9f0cad7114f5d061b68cd47afb80b59a160b6f7f" translate="yes" xml:space="preserve">
          <source>If there is buffered data, it is flushed first. This may block.</source>
          <target state="translated">버퍼링 된 데이터가 있으면 먼저 플러시됩니다. 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d26f979b19ea512fa2225cfe8e1f3de87401ca0" translate="yes" xml:space="preserve">
          <source>If there is no current server, this returns the default configuration. See &lt;a href=&quot;drb#method-i-current_server&quot;&gt;&lt;code&gt;current_server&lt;/code&gt;&lt;/a&gt; and DRbServer::make_config.</source>
          <target state="translated">현재 서버가 없으면 기본 구성을 반환합니다. &lt;a href=&quot;drb#method-i-current_server&quot;&gt; &lt;code&gt;current_server&lt;/code&gt; &lt;/a&gt; 및 DRbServer :: make_config를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41ae76e70a1ffa3d887c92fc288cafaa32f6ded3" translate="yes" xml:space="preserve">
          <source>If there is no key with the same value, &lt;a href=&quot;hash#method-i-invert&quot;&gt;&lt;code&gt;Hash#invert&lt;/code&gt;&lt;/a&gt; is involutive.</source>
          <target state="translated">동일한 값을 가진 키가 없으면 &lt;a href=&quot;hash#method-i-invert&quot;&gt; &lt;code&gt;Hash#invert&lt;/code&gt; &lt;/a&gt; 는 중요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="80c7e96a8d6aeea06f388c3f443a05675970148d" translate="yes" xml:space="preserve">
          <source>If there is no primary server then &lt;code&gt;server&lt;/code&gt; becomes the primary server.</source>
          <target state="translated">기본 서버가 없으면 &lt;code&gt;server&lt;/code&gt; 가 기본 서버가됩니다.</target>
        </trans-unit>
        <trans-unit id="033915487b57659cd4a070d17dc4d96d9bf3e032" translate="yes" xml:space="preserve">
          <source>If there is no space left in the queue, waits until space becomes available, unless &lt;code&gt;non_block&lt;/code&gt; is true. If &lt;code&gt;non_block&lt;/code&gt; is true, the thread isn't suspended, and &lt;code&gt;ThreadError&lt;/code&gt; is raised.</source>
          <target state="translated">대기열에 남은 공간이 없으면 &lt;code&gt;non_block&lt;/code&gt; 이 true가 아닌 한 공간이 사용 가능해질 때까지 기다립니다 . 경우 &lt;code&gt;non_block&lt;/code&gt; 는 사실, 스레드가 일시 중단되지 않으며, &lt;code&gt;ThreadError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5031dea1ce7e7620c9743820877d7079528f8d2e" translate="yes" xml:space="preserve">
          <source>If there is no thread to wait, raises &lt;code&gt;ErrNoWaitingThread&lt;/code&gt;. If &lt;code&gt;nonblock&lt;/code&gt; is true, and there is no terminated thread, raises &lt;code&gt;ErrNoFinishedThread&lt;/code&gt;.</source>
          <target state="translated">대기 할 스레드가 없으면 &lt;code&gt;ErrNoWaitingThread&lt;/code&gt; 를 발생시킵니다 . 경우 &lt;code&gt;nonblock&lt;/code&gt; 사실, 아무 종료 스레드가없는, 제기 &lt;code&gt;ErrNoFinishedThread&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="c3d2e4dcc68d537c7c6d0f08c311e88c112ccc4c" translate="yes" xml:space="preserve">
          <source>If there is no value for &lt;code&gt;key&lt;/code&gt; and no block is given, returns &lt;code&gt;ifnone&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 값이 없고 블록이 없으면 &lt;code&gt;ifnone&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="590b2d6341a75f0ba8f2455ce06972a5f2b87147" translate="yes" xml:space="preserve">
          <source>If there is some change in the &lt;a href=&quot;../bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; class that is incompatible to its previous behavior or if otherwise desired, we can reimplement(or implement) the method to preserve compatibility.</source>
          <target state="translated">&lt;a href=&quot;../bundler&quot;&gt; &lt;code&gt;Bundler&lt;/code&gt; &lt;/a&gt; 클래스에 이전 동작과 호환되지 않는 변경 사항이 있거나 원하는 경우 메소드를 다시 구현 (또는 구현)하여 호환성을 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="486517787ee0385acfc675a3a784bf116587e661" translate="yes" xml:space="preserve">
          <source>If this form is used, this string is the &lt;code&gt;Content-Type&lt;/code&gt;</source>
          <target state="translated">이 양식을 사용하는 경우이 문자열은 &lt;code&gt;Content-Type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45c414e14d1e22b53d7ea7fedb6d2bd7bd39b03e" translate="yes" xml:space="preserve">
          <source>If this is the main thread, or the last thread, exit the process.</source>
          <target state="translated">이것이 메인 스레드이거나 마지막 스레드 인 경우 프로세스를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="8955932e15ca4ba0788cba438b13796fd55c1615" translate="yes" xml:space="preserve">
          <source>If this is the main thread, or the last thread, exits the process.</source>
          <target state="translated">이것이 메인 스레드이거나 마지막 스레드 인 경우 프로세스를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="07bd07a67361be59be6f82586c1903e0944db428" translate="yes" xml:space="preserve">
          <source>If this method is called with block, resumes to the old working directory after the block execution finished.</source>
          <target state="translated">이 메소드를 블록과 함께 호출하면 블록 실행이 완료된 후 이전 작업 디렉토리로 재개됩니다.</target>
        </trans-unit>
        <trans-unit id="18a674765926d4e6ab4bda06a95f948c67f25d9a" translate="yes" xml:space="preserve">
          <source>If this object is passed as an argument to a method invoked over drb, then the wrapped object is passed instead.</source>
          <target state="translated">이 오브젝트가 drb를 통해 호출 된 메소드에 인수로 전달되면 랩핑 된 오브젝트가 대신 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6d173f6e2da595aa836e1baed64c03114a1d225c" translate="yes" xml:space="preserve">
          <source>If this thread is aborting</source>
          <target state="translated">이 스레드가 중단되면</target>
        </trans-unit>
        <trans-unit id="7efc0e7984db3aacd13a8ee139602b0806fd0a48" translate="yes" xml:space="preserve">
          <source>If this thread is already marked to be killed, &lt;a href=&quot;thread#method-c-exit&quot;&gt;&lt;code&gt;::exit&lt;/code&gt;&lt;/a&gt; returns the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스레드가 이미 &lt;a href=&quot;thread#method-c-exit&quot;&gt; &lt;code&gt;::exit&lt;/code&gt; &lt;/a&gt; 것으로 표시되면 :: exit 는 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f7b13e49c9c7d2c684800f29f419aefd45860823" translate="yes" xml:space="preserve">
          <source>If this thread is already marked to be killed, &lt;a href=&quot;thread#method-i-exit&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; returns the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스레드가 이미 &lt;a href=&quot;thread#method-i-exit&quot;&gt; &lt;code&gt;exit&lt;/code&gt; &lt;/a&gt; 것으로 표시되면 exit 는 &lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f071132117c9f22849ac1222f47d924d2aad7fbc" translate="yes" xml:space="preserve">
          <source>If this value is specified or the environment variable LD_BIND_NOW is set to a nonempty string, all undefined symbols in the library are resolved before &lt;a href=&quot;../fiddle#method-c-dlopen&quot;&gt;&lt;code&gt;Fiddle.dlopen&lt;/code&gt;&lt;/a&gt; returns. If this cannot be done an error is returned.</source>
          <target state="translated">이 값을 지정하거나 환경 변수 LD_BIND_NOW가 비어 있지 않은 문자열로 설정된 경우 라이브러리에서 정의되지 않은 모든 기호는 &lt;a href=&quot;../fiddle#method-c-dlopen&quot;&gt; &lt;code&gt;Fiddle.dlopen&lt;/code&gt; 이&lt;/a&gt; 반환 되기 전에 확인 됩니다. 이를 수행 할 수 없으면 오류가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9b2558d42e44816359a1851823a5cf26c33389a6" translate="yes" xml:space="preserve">
          <source>If too many positional arguments are given, an &lt;a href=&quot;../argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">위치 인수가 너무 많으면 &lt;a href=&quot;../argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6c782699b0bab17dfd43db47b3151c4c418e46d9" translate="yes" xml:space="preserve">
          <source>If true, TLS is used for data connections. Default: &lt;code&gt;true&lt;/code&gt; when options is true.</source>
          <target state="translated">true 인 경우 TLS는 데이터 연결에 사용됩니다. 기본 : &lt;code&gt;true&lt;/code&gt; 옵션에 해당하는 경우.</target>
        </trans-unit>
        <trans-unit id="6bb5862ee4536714b3088e1590223b6ee00991fa" translate="yes" xml:space="preserve">
          <source>If two arguments are specified, they must be encoding objects or encoding names. Again, the first specifies the external encoding; the second specifies the internal encoding.</source>
          <target state="translated">두 개의 인수가 지정되면, 인코딩 오브젝트 또는 인코딩 이름이어야합니다. 다시, 첫 번째는 외부 인코딩을 지정합니다. 두 번째는 내부 인코딩을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f9043cd518d0f78592a647b409c8f41ce4b9b9a7" translate="yes" xml:space="preserve">
          <source>If two encoding names separated by a colon are given, e.g. &amp;ldquo;ascii:utf-8&amp;rdquo;, the read string is converted from the first encoding (external encoding) to the second encoding (internal encoding), then tagged with the second encoding.</source>
          <target state="translated">콜론으로 구분 된 두 개의 인코딩 이름 (예 : &quot;ascii : utf-8&quot;)이 제공되면 읽기 문자열이 첫 번째 인코딩 (외부 인코딩)에서 두 번째 인코딩 (내부 인코딩)으로 변환 된 다음 두 번째 인코딩으로 태그가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="2d8285c26517470185b9ce321f9bb0a5eb169b84" translate="yes" xml:space="preserve">
          <source>If two or more transfer is done by HTTP redirection, the procedure is called only one for a last transfer.</source>
          <target state="translated">HTTP 리디렉션으로 둘 이상의 전송이 수행 된 경우 마지막 전송에 대해 하나의 절차 만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1ef863f447a68e69e72f9970a226533d6e2e264f" translate="yes" xml:space="preserve">
          <source>If two or more transfers are performed by HTTP redirection, the procedure is called only once for the last transfer.</source>
          <target state="translated">HTTP 리디렉션으로 두 번 이상의 전송이 수행되면 마지막 전송에 대해 한 번만 프로 시저가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a30bef0a29edc1fa071755d7b54a672630f5337d" translate="yes" xml:space="preserve">
          <source>If warnings have been disabled (for example with the &lt;code&gt;-W0&lt;/code&gt; flag), does nothing. Otherwise, converts each of the messages to strings, appends a newline character to the string if the string does not end in a newline, and calls &lt;code&gt;Warning.warn&lt;/code&gt; with the string.</source>
          <target state="translated">경고가 비활성화 된 경우 (예 : &lt;code&gt;-W0&lt;/code&gt; 플래그 사용) 아무 것도 수행하지 않습니다. 그렇지 않으면 각 메시지를 문자열로 변환하고 문자열이 줄 바꿈으로 끝나지 않으면 문자열에 줄 바꿈 문자를 추가하고 문자열 과 함께 &lt;code&gt;Warning.warn&lt;/code&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="462d3d7009de03d4f571d99f3b7928df6bca3d32" translate="yes" xml:space="preserve">
          <source>If we don't call &lt;code&gt;thr.join&lt;/code&gt; before the main thread terminates, then all other threads including &lt;code&gt;thr&lt;/code&gt; will be killed.</source>
          <target state="translated">주 스레드가 종료되기 전에 &lt;code&gt;thr.join&lt;/code&gt; 을 호출하지 않으면 &lt;code&gt;thr&lt;/code&gt; 를 포함한 다른 모든 스레드가 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="79063fffe07b7a8cb49b88b0b23080cf6ccf7266" translate="yes" xml:space="preserve">
          <source>If we don't gsub the \ character, &lt;a href=&quot;../../dir#method-c-glob&quot;&gt;&lt;code&gt;Dir.glob&lt;/code&gt;&lt;/a&gt; will fail.</source>
          <target state="translated">\ 문자를 &lt;a href=&quot;../../dir#method-c-glob&quot;&gt; &lt;code&gt;Dir.glob&lt;/code&gt; &lt;/a&gt; 않으면 Dir.glob 는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="79260ebf8837262004a264750620b3d8da44891e" translate="yes" xml:space="preserve">
          <source>If we receive Foo::Bar::Baz it returns &amp;ldquo;foo:bar:baz&amp;rdquo;</source>
          <target state="translated">Foo :: Bar :: Baz를 수신하면 &quot;foo : bar : baz&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f9a6ece630b61153fca5d9a6992cd7fadb46a459" translate="yes" xml:space="preserve">
          <source>If x is within the range, this method returns the value x. Otherwise, it returns nil.</source>
          <target state="translated">x가 범위 내에 있으면이 메서드는 값 x를 반환합니다. 그렇지 않으면 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9973f15ddf79a5a3c766c2170fb56539c8e4a5ce" translate="yes" xml:space="preserve">
          <source>If you absolutely need to use passwords as encryption keys, you should use Password-Based Key Derivation Function 2 (PBKDF2) by generating the key with the help of the functionality provided by &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac_sha1&quot;&gt;&lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac_sha1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac&quot;&gt;&lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">암호를 암호화 키로 사용해야하는 경우 &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac_sha1&quot;&gt; &lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac_sha1&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pkcs5#method-i-pbkdf2_hmac&quot;&gt; &lt;code&gt;OpenSSL::PKCS5.pbkdf2_hmac&lt;/code&gt; &lt;/a&gt; 제공하는 기능을 사용하여 키를 생성하여 PBKDF2 (Password-Based Key Derivation Function 2)를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="983ec37f20aea3f41ed61dc930280bc8fe3223bf" translate="yes" xml:space="preserve">
          <source>If you are connecting to a custom proxy, &lt;code&gt;p_addr&lt;/code&gt; specifies the DNS name or IP address of the proxy host, &lt;code&gt;p_port&lt;/code&gt; the port to use to access the proxy, &lt;code&gt;p_user&lt;/code&gt; and &lt;code&gt;p_pass&lt;/code&gt; the username and password if authorization is required to use the proxy, and p_no_proxy hosts which do not use the proxy.</source>
          <target state="translated">사용자 정의 프록시에 연결하는 경우, &lt;code&gt;p_addr&lt;/code&gt; 의 지정 DNS 이름 또는 프록시 호스트의 IP 주소, &lt;code&gt;p_port&lt;/code&gt; 액세스 프록시 사용에 포트를 &lt;code&gt;p_user&lt;/code&gt; 및 &lt;code&gt;p_pass&lt;/code&gt; 인증 프록시를 사용하는 데 필요한 경우 사용자 이름과 암호를하고 p_no_proxy 프록시를 사용하지 않는 호스트.</target>
        </trans-unit>
        <trans-unit id="6bc85f65bdc12a5aa20e192d60b4b41f39447d22" translate="yes" xml:space="preserve">
          <source>If you are done using the &lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; instance you may shut down all the connections in the current thread with &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt;. This is not recommended for normal use, it should only be used when it will be several minutes before you make another HTTP request.</source>
          <target state="translated">당신이 사용하여 수행하는 경우 &lt;a href=&quot;persistent&quot;&gt; &lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt; &lt;/a&gt; 인스턴스는 당신과 함께 현재의 thread의 모든 연결이 종료 될 수 있습니다 &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; . 이것은 일반적인 사용에는 권장되지 않으며 다른 HTTP 요청을하기 몇 분이 지난 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="721284903d8c0e6d068a583d97de6a96912c562f" translate="yes" xml:space="preserve">
          <source>If you are inside a method, you do not need to use &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; unless you wish to limit the scope of rescued exceptions:</source>
          <target state="translated">메소드 내부에있는 경우, 구조 된 예외의 범위를 제한하지 않으면 &lt;code&gt;begin&lt;/code&gt; 또는 &lt;code&gt;end&lt;/code&gt; 를 사용할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="c50de3a2b25bc21a8f62aec274a2a84907a5f28e" translate="yes" xml:space="preserve">
          <source>If you are only going to call the block and will not otherwise manipulate it or send it to another method using &lt;code&gt;yield&lt;/code&gt; without an explicit block parameter is preferred. This method is equivalent to the first method in this section:</source>
          <target state="translated">블록을 호출하려고 하고 명시 적으로 블록 매개 변수없이 &lt;code&gt;yield&lt;/code&gt; 를 사용하여 다른 방법으로 보내거나 조작하지 않는 경우 선호됩니다. 이 방법은이 섹션의 첫 번째 방법과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="2aa1c03d4b6dc82b175dc90aaa5aee01a1e87ce8" translate="yes" xml:space="preserve">
          <source>If you are only performing a few GET requests you should try &lt;a href=&quot;../openuri&quot;&gt;&lt;code&gt;OpenURI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">몇 가지 GET 요청 만 수행하는 경우 &lt;a href=&quot;../openuri&quot;&gt; &lt;code&gt;OpenURI&lt;/code&gt; &lt;/a&gt; 를 시도해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a0da2fa3cb9861301999487d5a715404d00e2de3" translate="yes" xml:space="preserve">
          <source>If you are using &amp;ldquo;(&amp;rdquo;, &amp;ldquo;[&amp;rdquo;, &amp;ldquo;{&amp;rdquo;, &amp;ldquo;&amp;lt;&amp;rdquo; you must close it with &amp;ldquo;)&amp;rdquo;, &amp;ldquo;]&amp;rdquo;, &amp;ldquo;}&amp;rdquo;, &amp;ldquo;&amp;gt;&amp;rdquo; respectively. You may use most other non-alphanumeric characters for percent string delimiters such as &amp;ldquo;%&amp;rdquo;, &amp;ldquo;|&amp;rdquo;, &amp;ldquo;^&amp;rdquo;, etc.</source>
          <target state="translated">&quot;(&quot;, &quot;[&quot;, &quot;{&quot;, &quot;&amp;lt;&quot;를 사용하는 경우 각각 &quot;)&quot;, &quot;]&quot;, &quot;}&quot;, &quot;&amp;gt;&quot;로 닫아야합니다. &amp;ldquo;%&amp;rdquo;,&amp;ldquo;|&amp;rdquo;,&amp;ldquo;^&amp;rdquo;등과 같은 퍼센트 문자열 분리 문자에는 대부분의 다른 영숫자가 아닌 문자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="234f378471fdaaad2776d11975f499c8abc85b9b" translate="yes" xml:space="preserve">
          <source>If you are using multiple threads, call &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; in each thread when the thread is done making requests. If you don't call shutdown, that's OK. Ruby will automatically garbage collect and shutdown your HTTP connections when the thread terminates.</source>
          <target state="translated">여러 스레드를 사용하는 경우 스레드가 요청을 완료하면 각 스레드에서 &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오. shutdown을 호출하지 않으면 괜찮습니다. 루비는 스레드가 종료 될 때 HTTP 연결을 자동으로 가비지 수집하고 종료합니다.</target>
        </trans-unit>
        <trans-unit id="fbc02f66cc457705a37a13e61644cadcf213dbb7" translate="yes" xml:space="preserve">
          <source>If you are writing a large block of text you may use a &amp;ldquo;here document&amp;rdquo; or &amp;ldquo;heredoc&amp;rdquo;:</source>
          <target state="translated">큰 텍스트 블록을 작성하는 경우 &quot;here document&quot;또는 &quot;heredoc&quot;을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f203f75affc6e1c14914fddaea7ca058fdeb87d3" translate="yes" xml:space="preserve">
          <source>If you change the namespace:</source>
          <target state="translated">네임 스페이스를 변경 한 경우 :</target>
        </trans-unit>
        <trans-unit id="bcc19ba0fbdec4feb8655b5a256355978b8407e8" translate="yes" xml:space="preserve">
          <source>If you do not explicitly specify an &lt;em&gt;initial&lt;/em&gt; value for &lt;em&gt;memo&lt;/em&gt;, then the first element of collection is used as the initial value of &lt;em&gt;memo&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;메모&lt;/em&gt; 의 &lt;em&gt;초기&lt;/em&gt; 값을 명시 적으로 지정하지 않으면 컬렉션의 첫 번째 요소가 &lt;em&gt;메모&lt;/em&gt; 의 초기 값으로 사용됩니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f825af0e2faf1f8cb78d89138c0c03ddc0697d8e" translate="yes" xml:space="preserve">
          <source>If you do not set an mtime, the default value will be the time when compression started. Setting a value of 0 indicates no time stamp is available.</source>
          <target state="translated">mtime을 설정하지 않으면 기본값은 압축이 시작된 시간입니다. 값을 0으로 설정하면 사용 가능한 타임 스탬프가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d62f46f698f68ce848495a870a5d322482c54787" translate="yes" xml:space="preserve">
          <source>If you do not supply a superclass your new class will inherit from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. You may inherit from a different class using &lt;code&gt;&amp;lt;&lt;/code&gt; followed by a class name:</source>
          <target state="translated">수퍼 클래스를 제공하지 않으면 새 클래스가 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 에서 상속됩니다 . &lt;code&gt;&amp;lt;&lt;/code&gt; 다음에 클래스 이름을 사용하여 다른 클래스에서 상속 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9fb8e1b7e927348914c0ef6e73b5123b04290ce" translate="yes" xml:space="preserve">
          <source>If you don't explicitly unlink the temporary file, the removal will be delayed until the object is finalized.</source>
          <target state="translated">임시 파일을 명시 적으로 연결 해제하지 않으면 오브젝트가 완료 될 때까지 제거가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="3901935a26b03be4bf7c65b2698a2d0b84caf1b4" translate="yes" xml:space="preserve">
          <source>If you don't specify the type of events you want to listen for, &lt;a href=&quot;tracepoint&quot;&gt;&lt;code&gt;TracePoint&lt;/code&gt;&lt;/a&gt; will include all available events.</source>
          <target state="translated">수신하려는 이벤트 유형을 지정하지 않으면 &lt;a href=&quot;tracepoint&quot;&gt; &lt;code&gt;TracePoint&lt;/code&gt; 에&lt;/a&gt; 사용 가능한 모든 이벤트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1a874d14225e1d51a9f330410bed49696cd0fa7d" translate="yes" xml:space="preserve">
          <source>If you don't use &lt;code&gt;rescue&lt;/code&gt; or &lt;code&gt;ensure&lt;/code&gt;, Ruby optimizes away any exception handling overhead.</source>
          <target state="translated">&lt;code&gt;rescue&lt;/code&gt; 또는 &lt;code&gt;ensure&lt;/code&gt; 를 사용하지 않으면 Ruby는 예외 처리 오버 헤드를 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="a31b4c32e950300c179aaafeaecb9d6a94bad1ea" translate="yes" xml:space="preserve">
          <source>If you don't want &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; and want directories, consider &lt;a href=&quot;pathname#method-i-children&quot;&gt;&lt;code&gt;Pathname#children&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">당신이 원하지 않는 경우 &lt;code&gt;.&lt;/code&gt; 와 &lt;code&gt;..&lt;/code&gt; 하고 싶은 디렉토리는 고려 &lt;a href=&quot;pathname#method-i-children&quot;&gt; &lt;code&gt;Pathname#children&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec7353b8e044f55a40c5b8e293e3de4d4ab937e0" translate="yes" xml:space="preserve">
          <source>If you find this method returns true, then you may finish &lt;code&gt;:never&lt;/code&gt; blocks.</source>
          <target state="translated">이 메소드가 true를 리턴하면 &lt;code&gt;:never&lt;/code&gt; 블록을 완료 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="41d3b4387ee7400fbbf452396d6aa6bed14fbc6e" translate="yes" xml:space="preserve">
          <source>If you give multiple description strings, each string will be printed line by line.</source>
          <target state="translated">여러 설명 문자열을 제공하면 각 문자열이 한 줄씩 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="6918db17abad7a05b806b5876dc256ecd951923b" translate="yes" xml:space="preserve">
          <source>If you have more values on the right hand side of the assignment than variables on the left hand side, the extra values are ignored:</source>
          <target state="translated">할당의 오른쪽에 왼쪽의 변수보다 더 많은 값이 있으면 추가 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b50492ef2bf826237334acec5144ea93a249d8b0" translate="yes" xml:space="preserve">
          <source>If you need set-like behavior, see the library class &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">세트와 유사한 동작이 필요한 경우 라이브러리 클래스 &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; 를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9b6731c0dff4b4e6279a2e4cf6bb16bf40a325d" translate="yes" xml:space="preserve">
          <source>If you need to communicate between threads, please consider to use another way such as &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스레드간에 통신해야하는 경우 &lt;a href=&quot;queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt; 와 같은 다른 방법을 사용하십시오 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
